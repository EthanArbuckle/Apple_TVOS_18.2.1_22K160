void sub_100D689A0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;
  va_start(va, a2);
  sub_100D5B0C0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100D689B4(uint64_t *a1)
{
  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_1018819B8);
  }
  v2 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v3 = a1[142];
    uint64_t v4 = a1[148];
    uint64_t v5 = a1[149];
    *(_DWORD *)buf = 134349569;
    uint64_t v20 = v3;
    __int16 v21 = 2049;
    uint64_t v22 = v4;
    __int16 v23 = 2049;
    uint64_t v24 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}.1lf,filterReset,LL,%{private}.7lf,%{private}.7lf",  buf,  0x20u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_1018819B8);
    }
    uint64_t v8 = a1[142];
    uint64_t v9 = a1[148];
    uint64_t v10 = a1[149];
    int v13 = 134349569;
    uint64_t v14 = v8;
    __int16 v15 = 2049;
    uint64_t v16 = v9;
    __int16 v17 = 2049;
    uint64_t v18 = v10;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}.1lf,filterReset,LL,%{private}.7lf,%{private}.7lf",  &v13,  32);
    v12 = (uint8_t *)v11;
    sub_10029211C("Generic", 1LL, 0, 2LL, "virtual void CLParticleMapMatcher::reset()", "%s\n", v11);
    if (v12 != buf) {
      free(v12);
    }
  }

  sub_100D683E0((uint64_t)a1);
  uint64_t v6 = a1[112];
  uint64_t v7 = a1[111];
  while (v6 != v7)
  {
    v6 -= 112LL;
    sub_100D738F8((uint64_t)(a1 + 113), v6);
  }

  a1[112] = v7;
  a1[121] = a1[120];
  sub_100D68C10((uint64_t)(a1 + 126));
  sub_100D68C10((uint64_t)(a1 + 231));
  sub_100890314(a1 + 381);
  sub_100890314(a1 + 384);
  sub_100890314(a1 + 387);
  sub_100890314(a1 + 390);
}

void sub_100D68C10(uint64_t a1)
{
  uint64_t v16 = 0LL;
  __int16 v17 = 0LL;
  LODWORD(v18) = 0;
  WORD2(v18) = 1;
  DWORD2(v18) = 0;
  uint64_t v22 = 0LL;
  uint64_t v23 = 0LL;
  __int16 v21 = 0LL;
  __int128 v19 = 0u;
  memset(v20, 0, sizeof(v20));
  v2 = (uint64_t *)(a1 + 8);
  sub_1000F2F30((void *)(a1 + 8), &v16);
  __int128 v3 = v19;
  *(_OWORD *)(a1 + 24) = v18;
  *(_OWORD *)(a1 + 40) = v3;
  *(void *)(a1 + 56) = *(void *)v20;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)&v20[8];
  *(_OWORD *)(a1 + 73) = *(_OWORD *)&v20[17];
  if (v2 != &v16) {
    sub_100BDD0F8((char *)(a1 + 96), v21, (uint64_t)v22, 0x8E38E38E38E38E39LL * ((v22 - v21) >> 3));
  }
  sub_1000F2F30((void *)(a1 + 672), &v16);
  __int128 v4 = v19;
  *(_OWORD *)(a1 + 688) = v18;
  *(_OWORD *)(a1 + 704) = v4;
  *(void *)(a1 + 720) = *(void *)v20;
  *(_OWORD *)(a1 + 728) = *(_OWORD *)&v20[8];
  *(_OWORD *)(a1 + 737) = *(_OWORD *)&v20[17];
  __asm { FMOV            V0.2D, #-1.0 }

  *(void *)int v13 = 0xBFF0000000000000LL;
  *(void *)&v15[120] = 0LL;
  *(_DWORD *)&v15[128] = 0;
  memset(&v15[80], 0, 34);
  memset(&v15[136], 0, 75);
  memset(&v15[216], 0, 56);
  memset(&v13[8], 0, 80);
  memset(v15, 0, 78);
  __int128 v14 = 0u;
  *(void *)&v15[272] = 0xBFF0000000000000LL;
  *(_OWORD *)(a1 + 168) = *(_OWORD *)v13;
  *(_OWORD *)(a1 + 152) = 0uLL;
  *(_OWORD *)(a1 + 136) = _Q0;
  *(_OWORD *)(a1 + 120) = 0uLL;
  *(_OWORD *)(a1 + 232) = *(_OWORD *)&v13[64];
  *(_OWORD *)(a1 + 216) = *(_OWORD *)&v13[48];
  *(_OWORD *)(a1 + 200) = *(_OWORD *)&v13[32];
  *(_OWORD *)(a1 + 184) = *(_OWORD *)&v13[16];
  std::string::operator=((std::string *)(a1 + 248), (const std::string *)&v13[80]);
  memcpy((void *)(a1 + 272), v15, 0x118uLL);
  *(_BYTE *)a1 = 0;
  *(_BYTE *)(a1 + 552) = 0;
  *(_BYTE *)(a1 + 664) = 0;
  *(_OWORD *)(a1 + 560) = 0u;
  *(_OWORD *)(a1 + 576) = 0u;
  *(_OWORD *)(a1 + 592) = 0u;
  *(_OWORD *)(a1 + 608) = 0u;
  *(_OWORD *)(a1 + 624) = 0u;
  *(_DWORD *)(a1 + 639) = 0;
  *(_OWORD *)(a1 + 784) = 0u;
  *(_OWORD *)(a1 + 800) = 0u;
  *(_OWORD *)(a1 + 816) = 0u;
  *(void *)(a1 + 830) = 0LL;
  if (SHIBYTE(v14) < 0) {
    operator delete(*(void **)&v13[80]);
  }
  if (v21)
  {
    uint64_t v22 = v21;
    operator delete(v21);
  }

  uint64_t v10 = v17;
  if (v17)
  {
    p_shared_owners = (unint64_t *)&v17->__shared_owners_;
    do
      unint64_t v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }

void sub_100D68E98( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, void *__p, uint64_t a26, int a27, __int16 a28, char a29, char a30)
{
  if (a30 < 0) {
    operator delete(__p);
  }
  sub_100BDC958(v30 - 160);
  _Unwind_Resume(a1);
}

BOOL sub_100D68EC4(uint64_t a1, uint64_t *a2, double a3)
{
  uint64_t v5 = *(void *)(a1 + 8);
  __int128 v4 = *(std::__shared_weak_count **)(a1 + 16);
  uint64_t v6 = (unsigned __int8 *)(a1 + 3832);
  uint64_t v14 = v5;
  __int16 v15 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      unint64_t v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }

  BOOL v9 = sub_100BDA3B4(v6, a2, &v14, *(unsigned __int8 *)(a1 + 96), a3);
  uint64_t v10 = v15;
  if (v15)
  {
    v11 = (unint64_t *)&v15->__shared_owners_;
    do
      unint64_t v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }

  return v9;
}

void sub_100D68F58( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100D68F6C(uint64_t a1)
{
}

uint64_t sub_100D68F74(uint64_t a1, uint64_t a2)
{
  __int128 v3 = (double *)(a1 + 3832);
  __int128 v4 = *(std::__shared_weak_count **)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 8);
  int v13 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      unint64_t v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }

  uint64_t v7 = sub_100BDB518(v3, a2, &v12, *(unsigned __int8 *)(a1 + 96));
  unint64_t v8 = v13;
  if (v13)
  {
    BOOL v9 = (unint64_t *)&v13->__shared_owners_;
    do
      unint64_t v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }

  return v7;
}

void sub_100D69008( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100D6901C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void **)(a1 + 8);
  __int128 v4 = *(std::__shared_weak_count **)(a1 + 16);
  v189 = v5;
  v190 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      unint64_t v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }

  if (!v5)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_1018819B8);
    }
    uint64_t v20 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v21 = *(void *)(a2 + 8);
      *(_DWORD *)buf = 134349056;
      *(void *)&uint8_t buf[4] = v21;
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_ERROR,  "CLMM,%{public}.1lf,Unexpected,invalid geometry pointer, mapMatch",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 0)) {
      goto LABEL_106;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_1018819B8);
    }
    uint64_t v22 = *(void *)(a2 + 8);
    int v191 = 134349056;
    uint64_t v192 = v22;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,%{public}.1lf,Unexpected,invalid geometry pointer, mapMatch",  &v191,  12);
    uint64_t v24 = (char *)v23;
    sub_10029211C("Generic", 1LL, 0, 0LL, "virtual BOOL CLParticleMapMatcher::match(CLMapCrumb &)", "%s\n", v23);
LABEL_72:
    if (v24 != buf) {
      free(v24);
    }
    goto LABEL_106;
  }

  if (*(_BYTE *)(a1 + 96)) {
    sub_100D3EC08((uint64_t)v5);
  }
  unint64_t v8 = (_BYTE *)(a1 + 1008);
  *(_BYTE *)(a1 + 1848) = *(_BYTE *)(a1 + 1008);
  v181 = (void **)(a1 + 1856);
  sub_1000F2F30((void *)(a1 + 1856), (uint64_t *)(a1 + 1016));
  *(_OWORD *)(a1 + 1872) = *(_OWORD *)(a1 + 1032);
  *(_OWORD *)(a1 + 1888) = *(_OWORD *)(a1 + 1048);
  *(void *)(a1 + 1904) = *(void *)(a1 + 1064);
  *(_OWORD *)(a1 + 1912) = *(_OWORD *)(a1 + 1072);
  *(_OWORD *)(a1 + 1921) = *(_OWORD *)(a1 + 1081);
  sub_100BDD0F8( (char *)(a1 + 1944),  *(char **)(a1 + 1104),  *(void *)(a1 + 1112),  0x8E38E38E38E38E39LL * ((uint64_t)(*(void *)(a1 + 1112) - *(void *)(a1 + 1104)) >> 3));
  *(_OWORD *)(a1 + 2032) = *(_OWORD *)(a1 + 1192);
  *(_OWORD *)(a1 + 2048) = *(_OWORD *)(a1 + 1208);
  *(_OWORD *)(a1 + 2064) = *(_OWORD *)(a1 + 1224);
  *(_OWORD *)(a1 + 2080) = *(_OWORD *)(a1 + 1240);
  *(_OWORD *)(a1 + 1968) = *(_OWORD *)(a1 + 1128);
  *(_OWORD *)(a1 + 1984) = *(_OWORD *)(a1 + 1144);
  *(_OWORD *)(a1 + 2000) = *(_OWORD *)(a1 + 1160);
  *(_OWORD *)(a1 + 2016) = *(_OWORD *)(a1 + 1176);
  __str = (std::string *)(a1 + 1256);
  std::string::operator=((std::string *)(a1 + 2096), (const std::string *)(a1 + 1256));
  memcpy((void *)(a1 + 2120), (const void *)(a1 + 1280), 0x118uLL);
  __int128 v9 = *(_OWORD *)(a1 + 1608);
  *(_OWORD *)(a1 + 2432) = *(_OWORD *)(a1 + 1592);
  *(_OWORD *)(a1 + 2448) = v9;
  *(_OWORD *)(a1 + 2464) = *(_OWORD *)(a1 + 1624);
  *(_OWORD *)(a1 + 2475) = *(_OWORD *)(a1 + 1635);
  __int128 v10 = *(_OWORD *)(a1 + 1576);
  *(_OWORD *)(a1 + 2400) = *(_OWORD *)(a1 + 1560);
  *(_OWORD *)(a1 + 2416) = v10;
  uint64_t v179 = a1 + 1656;
  sub_1000F2F30((void *)(a1 + 2496), (uint64_t *)(a1 + 1656));
  *(_BYTE *)(a1 + 2512) = *(_BYTE *)(a1 + 1672);
  sub_1000F2F30((void *)(a1 + 2520), (uint64_t *)(a1 + 1680));
  __int128 v11 = *(_OWORD *)(a1 + 1712);
  *(_OWORD *)(a1 + 2536) = *(_OWORD *)(a1 + 1696);
  *(_OWORD *)(a1 + 2552) = v11;
  *(void *)(a1 + 2568) = *(void *)(a1 + 1728);
  *(_OWORD *)(a1 + 2576) = *(_OWORD *)(a1 + 1736);
  *(_OWORD *)(a1 + 2585) = *(_OWORD *)(a1 + 1745);
  sub_100BDD0F8( (char *)(a1 + 2608),  *(char **)(a1 + 1768),  *(void *)(a1 + 1776),  0x8E38E38E38E38E39LL * ((uint64_t)(*(void *)(a1 + 1776) - *(void *)(a1 + 1768)) >> 3));
  __int128 v12 = *(_OWORD *)(a1 + 1808);
  *(_OWORD *)(a1 + 2632) = *(_OWORD *)(a1 + 1792);
  *(_OWORD *)(a1 + 2648) = v12;
  *(_OWORD *)(a1 + 2664) = *(_OWORD *)(a1 + 1824);
  *(void *)(a1 + 2678) = *(void *)(a1 + 1838);
  double v13 = *(double *)(a2 + 96);
  if (v13 >= 0.0)
  {
    *(void *)(a1 + 3880) = *(void *)(a2 + 8);
    *(double *)(a1 + 3840) = v13;
  }

  *(_BYTE *)(a1 + 3720) = 0;
  sub_100D50514(a1, *(double *)(a2 + 104), *(double *)(a2 + 192));
  uint64_t v14 = (__int128 *)(a1 + 1128);
  sub_100D50158(a1, a1 + 1128);
  __dst = (double *)(a1 + 1280);
  uint64_t v180 = a1 + 1016;
  uint64_t v15 = *(void *)(a2 + 56);
  *(void *)(a2 + 152) = v15;
  uint64_t v16 = *(void *)(a2 + 64);
  uint64_t v17 = *(void *)(a2 + 104);
  *(void *)(a2 + 160) = v16;
  *(void *)(a2 + 168) = v17;
  *(void *)(a2 + 288) = v15;
  *(void *)(a2 + 296) = v16;
  *(void *)(a2 + 304) = v17;
  *(void *)(a2 + 312) = v15;
  *(void *)(a2 + 320) = v16;
  *(void *)(a2 + 328) = v15;
  *(void *)(a2 + 336) = v16;
  *(_DWORD *)(a2 + 280) = 0;
  float v18 = *(double *)(a2 + 96);
  *(float *)buf = v18;
  sub_10074DC40(a1 + 2976, (float *)buf);
  double v19 = *(double *)(a1 + 4032);
  if (v19 < 0.0)
  {
    else {
      double v19 = 1.66666667;
    }
  }

  if (*(double *)(a2 + 96) <= v19 && !*(_BYTE *)(a1 + 2232))
  {
    if (*(_BYTE *)(a1 + 96))
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_1018819B8);
      }
      v29 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v30 = *(void *)(a2 + 8);
        *(_DWORD *)buf = 134349056;
        *(void *)&uint8_t buf[4] = v30;
        _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEBUG, "CLMM,%{public}.1lf, not matching", buf, 0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_1018819B8);
        }
        uint64_t v124 = *(void *)(a2 + 8);
        int v191 = 134349056;
        uint64_t v192 = v124;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}.1lf, not matching",  &v191,  12);
        v126 = (char *)v125;
        sub_10029211C("Generic", 1LL, 0, 2LL, "virtual BOOL CLParticleMapMatcher::match(CLMapCrumb &)", "%s\n", v125);
        if (v126 != buf) {
          free(v126);
        }
      }
    }

    goto LABEL_42;
  }

  if (*(_BYTE *)(a2 + 348))
  {
    if (*(_BYTE *)(a1 + 96))
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_1018819B8);
      }
      v25 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEBUG,  "CLMM,opportunistic tile download only, favorable GPS conditions",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_1018819B8);
        }
        LOWORD(v191) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,opportunistic tile download only, favorable GPS conditions",  &v191,  2);
        v64 = (char *)v63;
        sub_10029211C("Generic", 1LL, 0, 2LL, "virtual BOOL CLParticleMapMatcher::match(CLMapCrumb &)", "%s\n", v63);
        if (v64 != buf) {
          free(v64);
        }
      }
    }

    unsigned int v26 = *(unsigned __int8 *)(a1 + 112);
    if (!*(_BYTE *)(a1 + 112)) {
      goto LABEL_53;
    }
  }

  unint64_t v27 = *(void *)(a1 + 3040);
  if (v27 < *(void *)(a1 + 2984) || (!v27 ? (float v28 = 0.0) : (float v28 = *(float *)(a1 + 2992) / (float)v27), v28 <= 22.222))
  {
    unsigned int v26 = 1;
LABEL_53:
    if (*(_BYTE *)(a1 + 113)) {
      uint64_t v33 = 0LL;
    }
    else {
      uint64_t v33 = v26;
    }
    if (*(_BYTE *)(a1 + 96))
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_1018819B8);
      }
      v34 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v35 = *(void *)(a2 + 8);
        *(_DWORD *)buf = 134349312;
        *(void *)&uint8_t buf[4] = v35;
        __int16 v198 = 1026;
        *(_DWORD *)v199 = v33;
        _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEBUG,  "CLMM,match,%{public}.1lf,allowsNetworkUsage,%{public}d",  buf,  0x12u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_1018819B8);
        }
        uint64_t v60 = *(void *)(a2 + 8);
        int v191 = 134349312;
        uint64_t v192 = v60;
        __int16 v193 = 1026;
        *(_DWORD *)v194 = v33;
        LODWORD(v178) = 18;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,match,%{public}.1lf,allowsNetworkUsage,%{public}d",  &v191,  v178);
        v62 = (char *)v61;
        sub_10029211C("Generic", 1LL, 0, 2LL, "virtual BOOL CLParticleMapMatcher::match(CLMapCrumb &)", "%s\n", v61);
        if (v62 != buf) {
          free(v62);
        }
      }
    }

    goto LABEL_62;
  }

  if (*(_BYTE *)(a1 + 96))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_1018819B8);
    }
    v32 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEBUG,  "CLMM,opportunistic tile download only, high speed threshold",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_1018819B8);
      }
      LOWORD(v191) = 0;
      LODWORD(v178) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,opportunistic tile download only, high speed threshold",  &v191,  v178);
      v128 = (char *)v127;
      sub_10029211C("Generic", 1LL, 0, 2LL, "virtual BOOL CLParticleMapMatcher::match(CLMapCrumb &)", "%s\n", v127);
      if (v128 != buf) {
        free(v128);
      }
    }

    unsigned int v26 = 0;
    goto LABEL_53;
  }

  uint64_t v33 = 0LL;
LABEL_62:
  (*(void (**)(void *, uint64_t))(*v5 + 32LL))(v5, v33);
  (*(void (**)(void *, uint64_t, double))(*v5 + 48LL))(v5, a2, 450.0);
  v5[1] = *(void *)(a2 + 8);
  (*(void (**)(void *))(*v5 + 96LL))(v5);
  sub_100D73928(a1 + 984, *(void **)(a1 + 992));
  *(void *)(a1 + 984) = a1 + 992;
  *(void *)(a1 + 1000) = 0LL;
  *(void *)(a1 + 992) = 0LL;
  *(void *)(a1 + 944) = *(void *)(a1 + 936);
  sub_100139A60((void **)(a1 + 936), 0xC0uLL);
  sub_100D68C10(a1 + 1008);
  __int128 v36 = *(_OWORD *)a2;
  __int128 v37 = *(_OWORD *)(a2 + 16);
  __int128 v38 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 1160) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 1176) = v38;
  *uint64_t v14 = v36;
  *(_OWORD *)(a1 + 1144) = v37;
  __int128 v39 = *(_OWORD *)(a2 + 64);
  __int128 v40 = *(_OWORD *)(a2 + 80);
  __int128 v41 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 1224) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 1240) = v41;
  *(_OWORD *)(a1 + 1192) = v39;
  *(_OWORD *)(a1 + 1208) = v40;
  std::string::operator=(__str, (const std::string *)(a2 + 128));
  memcpy(__dst, (const void *)(a2 + 152), 0x118uLL);
  double v42 = *(double *)(a1 + 1976);
  double v43 = *(double *)(a1 + 1136) - v42;
  *(double *)(a1 + 1640) = v43;
  if (v43 == 0.0)
  {
    if (!*(_BYTE *)(a1 + 96)) {
      goto LABEL_106;
    }
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_1018819B8);
    }
    v44 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_INFO,  "CLMM,Time difference between updates is zero,update ignored",  buf,  2u);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_106;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_1018819B8);
    }
    LOWORD(v191) = 0;
    LODWORD(v178) = 2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  1LL,  "CLMM,Time difference between updates is zero,update ignored",  &v191,  v178);
    uint64_t v24 = (char *)v45;
    sub_10029211C("Generic", 1LL, 0, 2LL, "virtual BOOL CLParticleMapMatcher::match(CLMapCrumb &)", "%s\n", v45);
    goto LABEL_72;
  }

  double v46 = 4.9;
  if (*(_BYTE *)(a1 + 1356) && *(_BYTE *)(a1 + 2232) && v43 > 4.9)
  {
    double v47 = *(double *)(a1 + 1480);
    if (v47 <= v42 + 1.2 && v47 > 0.0) {
      double v46 = 75.0;
    }
  }

  if (v43 < 0.0 || v43 > v46) {
    sub_100D683E0(a1);
  }
  if (*(void *)(a1 + 864) == *(void *)(a1 + 872)) {
    *(void *)(a1 + 1640) = 0LL;
  }
  sub_100D50520(a1, a1 + 1128);
  sub_100D518C8(a1, a1 + 1128);
  sub_100D6AE5C(a1, a1 + 1128);
  ++*(_DWORD *)(a1 + 100);
  *(_BYTE *)(a1 + 1845) = sub_100D6AFB0(a1);
  if ((sub_100D608C8(a1) & 1) == 0) {
    goto LABEL_114;
  }
  if (!sub_100D5C0EC(a1))
  {
LABEL_105:
    (*(void (**)(uint64_t))(*(void *)a1 + 40LL))(a1);
LABEL_106:
    uint64_t v31 = 0LL;
    goto LABEL_107;
  }

  if ((sub_100D60FAC(a1) & 1) == 0)
  {
LABEL_114:
    (*(void (**)(uint64_t))(*(void *)a1 + 40LL))(a1);
LABEL_115:
    uint64_t v31 = 0LL;
    ++*(_DWORD *)(a1 + 104);
    goto LABEL_107;
  }

  sub_100D6487C(a1);
  if ((sub_100D66054(a1) & 1) == 0) {
    goto LABEL_105;
  }
  char v188 = 0;
  if ((sub_100D67250(a1, &v188) & 1) == 0)
  {
    (*(void (**)(uint64_t))(*(void *)a1 + 40LL))(a1);
    goto LABEL_115;
  }

  if (v188 && !sub_100D67D0C(a1))
  {
    (*(void (**)(uint64_t))(*(void *)a1 + 40LL))(a1);
    goto LABEL_106;
  }

  if (*(_BYTE *)(a1 + 1392)
    && (uint64_t v49 = *(void *)(a1 + 1016),
        *(_BYTE *)(a1 + 777) = *(_BYTE *)(v49 + 16),
        *(_DWORD *)(a1 + 780) = *(_DWORD *)(v49 + 20),
        *(_BYTE *)(a1 + 784) = *(_BYTE *)(a1 + 1649),
        *(_BYTE *)(a1 + 2232)))
  {
    if (*(void *)(a1 + 2080) != *(void *)(a1 + 1240)
      && sub_100D504C0(*(double *)(a1 + 1432) - *(double *)(a1 + 2272)) > 45.0)
    {
      uint64_t v50 = *(void *)(a1 + 3080);
      if (v50 == a1 + 3072)
      {
        BOOL v54 = 1;
      }

      else
      {
        uint64_t v51 = *(void *)(a1 + 1240);
        do
        {
          uint64_t v52 = **(void **)(v50 + 16);
          BOOL v53 = v51 == v52;
          BOOL v54 = v51 != v52;
          if (v53) {
            break;
          }
          uint64_t v50 = *(void *)(v50 + 8);
        }

        while (v50 != a1 + 3072);
      }

      uint64_t v65 = *(void *)(a1 + 3128);
      if (v65 == a1 + 3120)
      {
LABEL_132:
        if (v54)
        {
          v66 = *(uint64_t **)(a1 + 1016);
          uint64_t v67 = *(void *)(a1 + 1024);
          v186 = v66;
          uint64_t v187 = v67;
          if (v67)
          {
            v68 = (unint64_t *)(v67 + 8);
            do
              unint64_t v69 = __ldxr(v68);
            while (__stxr(v69 + 1, v68));
          }

          uint64_t v70 = *(void *)(a1 + 1856);
          uint64_t v71 = *(void *)(a1 + 1864);
          v184 = (uint64_t *)v70;
          uint64_t v185 = v71;
          if (v71)
          {
            v72 = (unint64_t *)(v71 + 8);
            do
              unint64_t v73 = __ldxr(v72);
            while (__stxr(v73 + 1, v72));
          }

          v75 = v66 + 17;
          v74 = (double *)v66[17];
          double v76 = 0.0;
          double v77 = 0.0;
          double v78 = 0.0;
          if ((double *)v75[1] != v74)
          {
            double v77 = *v74;
            double v78 = v74[1];
          }

          v79 = *(double **)(v70 + 136);
          double v80 = 0.0;
          if (*(double **)(v70 + 144) != v79)
          {
            double v76 = *v79;
            double v80 = v79[1];
          }

          if (sub_100292850(v77, v78, v76, v80, 0.0000001)) {
            goto LABEL_159;
          }
          v81 = (double *)v186[17];
          double v82 = 0.0;
          double v83 = 0.0;
          double v84 = 0.0;
          if ((double *)v186[18] != v81)
          {
            double v83 = *v81;
            double v84 = v81[1];
          }

          uint64_t v85 = v184[18];
          double v86 = 0.0;
          if (v85 != v184[17])
          {
            double v82 = *(double *)(v85 - 16);
            double v86 = *(double *)(v85 - 8);
          }

          if (sub_100292850(v83, v84, v82, v86, 0.0000001)) {
            goto LABEL_159;
          }
          uint64_t v87 = v186[18];
          double v88 = 0.0;
          double v89 = 0.0;
          double v90 = 0.0;
          if (v87 != v186[17])
          {
            double v89 = *(double *)(v87 - 16);
            double v90 = *(double *)(v87 - 8);
          }

          v91 = (double *)v184[17];
          double v92 = 0.0;
          if ((double *)v184[18] != v91)
          {
            double v88 = *v91;
            double v92 = v91[1];
          }

          if (sub_100292850(v89, v90, v88, v92, 0.0000001)) {
            goto LABEL_159;
          }
          uint64_t v93 = v186[18];
          double v94 = 0.0;
          double v95 = 0.0;
          double v96 = 0.0;
          if (v93 != v186[17])
          {
            double v95 = *(double *)(v93 - 16);
            double v96 = *(double *)(v93 - 8);
          }

          uint64_t v97 = v184[18];
          double v98 = 0.0;
          if (v97 != v184[17])
          {
            double v94 = *(double *)(v97 - 16);
            double v98 = *(double *)(v97 - 8);
          }

          if (sub_100292850(v95, v96, v94, v98, 0.0000001)) {
LABEL_159:
          }
            int v99 = 1;
          else {
            int v99 = 0;
          }
          if (*(_BYTE *)(a1 + 96))
          {
            if (qword_1019348B0 != -1) {
              dispatch_once(&qword_1019348B0, &stru_1018819B8);
            }
            v100 = (os_log_s *)qword_1019348B8;
            if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v101 = *(void *)(a1 + 1136);
              uint64_t v102 = **(void **)(a1 + 1016);
              uint64_t v103 = **(void **)(a1 + 1856);
              *(_DWORD *)buf = 134349825;
              *(void *)&uint8_t buf[4] = v101;
              __int16 v198 = 1026;
              *(_DWORD *)v199 = v99;
              *(_WORD *)&v199[4] = 2049;
              *(void *)&v199[6] = v102;
              *(_WORD *)&v199[14] = 2049;
              *(void *)&v199[16] = v103;
              _os_log_impl( (void *)&_mh_execute_header,  v100,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}.1lf,hopping check,connecting roads,%{public}d,current road,%{private}lld,prior road,%{private}lld",  buf,  0x26u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1019348B0 != -1) {
                dispatch_once(&qword_1019348B0, &stru_1018819B8);
              }
              uint64_t v160 = *(void *)(a1 + 1136);
              uint64_t v161 = **(void **)(a1 + 1016);
              uint64_t v162 = **(void **)(a1 + 1856);
              int v191 = 134349825;
              uint64_t v192 = v160;
              __int16 v193 = 1026;
              *(_DWORD *)v194 = v99;
              *(_WORD *)&v194[4] = 2049;
              *(void *)&v194[6] = v161;
              *(_WORD *)&v194[14] = 2049;
              *(void *)&v194[16] = v162;
              LODWORD(v178) = 38;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}.1lf,hopping check,connecting roads,%{public}d,current road,%{private}lld,prior road,%{private}lld",  &v191,  v178);
              v164 = (char *)v163;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMapMatcher::match(CLMapCrumb &)",  "%s\n",  v163);
              if (v164 != buf) {
                free(v164);
              }
            }
          }

          sub_10000AE14((uint64_t)&v184);
          sub_10000AE14((uint64_t)&v186);
          if ((v99 & 1) == 0)
          {
            if (!*(void *)v179 || !**(void **)v179) {
              goto LABEL_203;
            }
            uint64_t v104 = *(void *)(a1 + 1024);
            v186 = *(uint64_t **)(a1 + 1016);
            uint64_t v187 = v104;
            if (v104)
            {
              v105 = (unint64_t *)(v104 + 8);
              do
                unint64_t v106 = __ldxr(v105);
              while (__stxr(v106 + 1, v105));
            }

            v107 = *(uint64_t **)(a1 + 1856);
            uint64_t v108 = *(void *)(a1 + 1864);
            v184 = v107;
            uint64_t v185 = v108;
            if (v108)
            {
              v109 = (unint64_t *)(v108 + 8);
              do
                unint64_t v110 = __ldxr(v109);
              while (__stxr(v110 + 1, v109));
            }

            v111 = *(double **)(*(void *)v179 + 136LL);
            double v112 = 0.0;
            double v113 = 0.0;
            double v114 = 0.0;
            if (*(double **)(*(void *)v179 + 144LL) != v111)
            {
              double v113 = *v111;
              double v114 = v111[1];
            }

            uint64_t v115 = v107[18];
            double v116 = 0.0;
            if (v115 != v107[17])
            {
              double v112 = *(double *)(v115 - 16);
              double v116 = *(double *)(v115 - 8);
            }

            BOOL v117 = sub_100292850(v113, v114, v112, v116, 0.0000001);
            if (*(_BYTE *)(a1 + 96))
            {
              if (qword_1019348B0 != -1) {
                dispatch_once(&qword_1019348B0, &stru_1018819B8);
              }
              v118 = (os_log_s *)qword_1019348B8;
              if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
              {
                uint64_t v119 = *(void *)(a1 + 1136);
                uint64_t v120 = *v184;
                uint64_t v121 = **(void **)(a1 + 1656);
                uint64_t v122 = *v186;
                *(_DWORD *)buf = 134349825;
                *(void *)&uint8_t buf[4] = v119;
                __int16 v198 = 2049;
                *(void *)v199 = v120;
                *(_WORD *)&v199[8] = 2049;
                *(void *)&v199[10] = v121;
                *(_WORD *)&v199[18] = 2049;
                *(void *)&v199[20] = v122;
                _os_log_impl( (void *)&_mh_execute_header,  v118,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}.1lf,hopping check,prior road,%{private}lld, connected to the incoming road,%{private}ll d, of the current solution road,%{private}lld",  buf,  0x2Au);
              }

              if (sub_1002921D0(115, 2))
              {
                bzero(buf, 0x65CuLL);
                if (qword_1019348B0 != -1) {
                  dispatch_once(&qword_1019348B0, &stru_1018819B8);
                }
                uint64_t v172 = *(void *)(a1 + 1136);
                uint64_t v173 = *v184;
                uint64_t v174 = **(void **)(a1 + 1656);
                uint64_t v175 = *v186;
                int v191 = 134349825;
                uint64_t v192 = v172;
                __int16 v193 = 2049;
                *(void *)v194 = v173;
                *(_WORD *)&v194[8] = 2049;
                *(void *)&v194[10] = v174;
                *(_WORD *)&v194[18] = 2049;
                *(void *)&v194[20] = v175;
                LODWORD(v178) = 42;
                _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}.1lf,hopping check,prior road,%{private}lld, connected to the incoming road,%{private}ll d, of the current solution road,%{private}lld",  &v191,  v178);
                v177 = (char *)v176;
                sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMapMatcher::match(CLMapCrumb &)",  "%s\n",  v176);
                if (v177 != buf) {
                  free(v177);
                }
              }
            }

            sub_10000AE14((uint64_t)&v184);
            sub_10000AE14((uint64_t)&v186);
            if (!v117)
            {
LABEL_203:
              BOOL v123 = sub_100D2DBDC( (double *)(a1 + 608),  *(double *)(a1 + 2256),  *(double *)(a1 + 2264),  *(double *)(a1 + 1416),  *(double *)(a1 + 1424),  *(double *)(a1 + 1200)) > 35.0 || *(_DWORD *)(a1 + 2680) > 15;
              if (*(_BYTE *)(a1 + 96))
              {
                if (qword_1019348B0 != -1) {
                  dispatch_once(&qword_1019348B0, &stru_1018819B8);
                }
                v129 = (os_log_s *)qword_1019348B8;
                if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
                {
                  uint64_t v130 = *(void *)(a1 + 1136);
                  uint64_t v131 = *(void *)(a1 + 2272);
                  uint64_t v132 = *(void *)(a1 + 1432);
                  uint64_t v133 = **(void **)(a1 + 1016);
                  uint64_t v134 = **(void **)(a1 + 1856);
                  *(_DWORD *)buf = 134350337;
                  *(void *)&uint8_t buf[4] = v130;
                  __int16 v198 = 1026;
                  *(_DWORD *)v199 = v123;
                  *(_WORD *)&v199[4] = 2050;
                  *(void *)&v199[6] = v131;
                  *(_WORD *)&v199[14] = 2050;
                  *(void *)&v199[16] = v132;
                  *(_WORD *)&v199[24] = 2049;
                  *(void *)&v199[26] = v133;
                  __int16 v200 = 2049;
                  uint64_t v201 = v134;
                  _os_log_impl( (void *)&_mh_execute_header,  v129,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}.1lf,hopping between roads detected,reset,%{public}d,priorfullSnapCourse,%{public}.1lf ,currentFullSnapCourse,%{public}.1lf,priorId,%{private}llu,currentId,%{private}llu",  buf,  0x3Au);
                }

                if (sub_1002921D0(115, 2))
                {
                  bzero(buf, 0x65CuLL);
                  if (qword_1019348B0 != -1) {
                    dispatch_once(&qword_1019348B0, &stru_1018819B8);
                  }
                  uint64_t v165 = *(void *)(a1 + 1136);
                  uint64_t v166 = *(void *)(a1 + 2272);
                  uint64_t v167 = *(void *)(a1 + 1432);
                  uint64_t v168 = **(void **)(a1 + 1016);
                  uint64_t v169 = **(void **)(a1 + 1856);
                  int v191 = 134350337;
                  uint64_t v192 = v165;
                  __int16 v193 = 1026;
                  *(_DWORD *)v194 = v123;
                  *(_WORD *)&v194[4] = 2050;
                  *(void *)&v194[6] = v166;
                  *(_WORD *)&v194[14] = 2050;
                  *(void *)&v194[16] = v167;
                  *(_WORD *)&v194[24] = 2049;
                  *(void *)&v194[26] = v168;
                  __int16 v195 = 2049;
                  uint64_t v196 = v169;
                  LODWORD(v178) = 58;
                  _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}.1lf,hopping between roads detected,reset,%{public}d,priorfullSnapCourse,%{public}.1lf ,currentFullSnapCourse,%{public}.1lf,priorId,%{private}llu,currentId,%{private}llu",  &v191,  v178);
                  v171 = (char *)v170;
                  sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMapMatcher::match(CLMapCrumb &)",  "%s\n",  v170);
                  if (v171 != buf) {
                    free(v171);
                  }
                }
              }

              if (v123) {
                goto LABEL_204;
              }
            }
          }
        }
      }

      else
      {
        while (*(void *)(a1 + 1240) != **(void **)(v65 + 16))
        {
          uint64_t v65 = *(void *)(v65 + 8);
          if (v65 == a1 + 3120) {
            goto LABEL_132;
          }
        }
      }
    }

    sub_100C7DC2C((uint64_t *)(a1 + 3072), *(void *)(a1 + 3056), a1 + 3048);
    sub_100890314((uint64_t *)(a1 + 3048));
    v59 = (uint64_t *)(a1 + 3096);
    sub_100C7DC2C((uint64_t *)(a1 + 3120), *(void *)(a1 + 3104), a1 + 3096);
  }

  else
  {
    sub_100890314((uint64_t *)(a1 + 3072));
    v59 = (uint64_t *)(a1 + 3120);
  }

  sub_100890314(v59);
  if (*v8)
  {
    uint64_t v135 = **(void **)(a1 + 1016);
    int v136 = *(unsigned __int8 *)(a1 + 1036);
    uint64_t v137 = *(void *)(a1 + 928);
    if (!v137
      || (uint64_t v138 = *(void *)(a1 + 920), v135 != *(void *)(v138 + 16))
      || v136 != *(unsigned __int8 *)(v138 + 24))
    {
      v139 = operator new(0x20uLL);
      v139[24] = v136;
      v140 = *(void **)(a1 + 920);
      *(void *)v139 = a1 + 912;
      *((void *)v139 + 1) = v140;
      *((void *)v139 + 2) = v135;
      void *v140 = v139;
      *(void *)(a1 + 920) = v139;
      *(void *)(a1 + 928) = v137 + 1;
    }

    if (*v8)
    {
      int v141 = *(unsigned __int8 *)(a1 + 1848);
      if (*(_BYTE *)(a1 + 1848))
      {
        else {
          int v141 = 0;
        }
      }

      *(_DWORD *)(a1 + 1840) = v141;
      if (*(_BYTE *)(a1 + 1848))
      {
        double v142 = sub_100D2DBDC( (double *)(a1 + 608),  *(double *)(a1 + 1888),  *(double *)(a1 + 1896),  *(double *)(a1 + 1048),  *(double *)(a1 + 1056),  *(double *)(a1 + 1200));
        sub_100BDC7E0((uint64_t)buf, (uint64_t)v181);
        int v191 = 0;
        if (sub_100D5B3D4(a1, (uint64_t)buf, &v191, v142))
        {
          *(_BYTE *)(a1 + 2688) = 1;
          *(_DWORD *)(a1 + 2824) = v191;
          sub_100D5DB64(a1 + 2712, (uint64_t)buf);
          *(void *)(a1 + 2704) = *(void *)(a1 + 1976);
        }

        sub_100BDC958((uint64_t)buf);
      }
    }

    else
    {
      *(_DWORD *)(a1 + 1840) = 0;
    }
  }

  if (*(_BYTE *)(a1 + 2688))
  {
    if (!*v8
      || (double v143 = sub_100D2DBDC( (double *)(a1 + 608),  *(double *)(a1 + 2744),  *(double *)(a1 + 2752),  *(double *)(a1 + 1280),  *(double *)(a1 + 1288),  *(double *)(a1 + 1200)),  *(double *)(a1 + 2696) = v143,  v143 > 450.0))
    {
      *(_BYTE *)(a1 + 2688) = 0;
    }
  }

  sub_100D65250(a1);
  if (*(double *)(a1 + 1184) == 0.0 && *(double *)(a1 + 1192) == 0.0)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_1018819B8);
    }
    v144 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v144, OS_LOG_TYPE_ERROR, "CLMM,Unexpected crumb lat==lon==0", buf, 2u);
    }

    if (!sub_1002921D0(115, 0)) {
      goto LABEL_204;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_1018819B8);
    }
    LOWORD(v191) = 0;
    LODWORD(v178) = 2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,Unexpected crumb lat==lon==0",  &v191,  v178);
    v156 = (char *)v155;
    sub_10029211C("Generic", 1LL, 0, 0LL, "virtual BOOL CLParticleMapMatcher::match(CLMapCrumb &)", "%s\n", v155);
    if (v156 == buf) {
      goto LABEL_204;
    }
    goto LABEL_266;
  }

  if (*v8)
  {
    if (*__dst == 0.0 && *(double *)(a1 + 1288) == 0.0)
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_1018819B8);
      }
      v145 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v145,  OS_LOG_TYPE_ERROR,  "CLMM,Unexpected crumb snapLat==snapLon==0",  buf,  2u);
      }

      if (!sub_1002921D0(115, 0)) {
        goto LABEL_204;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_1018819B8);
      }
      LOWORD(v191) = 0;
      LODWORD(v178) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,Unexpected crumb snapLat==snapLon==0",  &v191,  v178);
      v156 = (char *)v157;
      sub_10029211C("Generic", 1LL, 0, 0LL, "virtual BOOL CLParticleMapMatcher::match(CLMapCrumb &)", "%s\n", v157);
      if (v156 == buf) {
        goto LABEL_204;
      }
LABEL_266:
      free(v156);
LABEL_204:
      (*(void (**)(uint64_t))(*(void *)a1 + 40LL))(a1);
      goto LABEL_115;
    }

    if (*(void *)v180) {
      *(_BYTE *)(a1 + 1477) = *(_BYTE *)(*(void *)v180 + 17LL);
    }
  }

  __int128 v146 = *v14;
  __int128 v147 = *(_OWORD *)(a1 + 1144);
  __int128 v148 = *(_OWORD *)(a1 + 1176);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 1160);
  *(_OWORD *)(a2 + 48) = v148;
  *(_OWORD *)a2 = v146;
  *(_OWORD *)(a2 + 16) = v147;
  __int128 v149 = *(_OWORD *)(a1 + 1192);
  __int128 v150 = *(_OWORD *)(a1 + 1208);
  __int128 v151 = *(_OWORD *)(a1 + 1240);
  *(_OWORD *)(a2 + 96) = *(_OWORD *)(a1 + 1224);
  *(_OWORD *)(a2 + 112) = v151;
  *(_OWORD *)(a2 + 64) = v149;
  *(_OWORD *)(a2 + 80) = v150;
  std::string::operator=((std::string *)(a2 + 128), __str);
  memcpy((void *)(a2 + 152), __dst, 0x118uLL);
  if (!*(_BYTE *)(a1 + 1392))
  {
    *(void *)(a2 + 168) = *(void *)(a1 + 848);
    ++*(_DWORD *)(a1 + 104);
    *(void *)buf = *(void *)(a2 + 192);
LABEL_260:
    v154 = (void *)(a1 + 856);
    goto LABEL_261;
  }

  *(void *)(a1 + 4016) = *(void *)(a1 + 1152);
  if (*(_BYTE *)(a1 + 776) && *(_BYTE *)(a1 + 1648))
  {
    if (*(_BYTE *)(a1 + 96))
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_1018819B8);
      }
      v152 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v152,  OS_LOG_TYPE_DEBUG,  "CLMM,holdCourse engaged but not snapping course",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_1018819B8);
        }
        LOWORD(v191) = 0;
        LODWORD(v178) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,holdCourse engaged but not snapping course",  &v191,  v178);
        v159 = (char *)v158;
        sub_10029211C("Generic", 1LL, 0, 2LL, "virtual BOOL CLParticleMapMatcher::match(CLMapCrumb &)", "%s\n", v158);
        if (v159 != buf) {
          free(v159);
        }
      }
    }

    *(void *)(a2 + 168) = *(void *)(a1 + 848);
  }

  sub_100D6B760(a1, a2);
  int v153 = *(unsigned __int8 *)(a1 + 1392);
  *(void *)buf = *(void *)(a2 + 192);
  v154 = buf;
LABEL_261:
  *(void *)(a2 + 192) = *v154;
LABEL_42:
  uint64_t v31 = 1LL;
LABEL_107:
  v55 = v190;
  if (v190)
  {
    v56 = (unint64_t *)&v190->__shared_owners_;
    do
      unint64_t v57 = __ldaxr(v56);
    while (__stlxr(v57 - 1, v56));
    if (!v57)
    {
      ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
      std::__shared_weak_count::__release_weak(v55);
    }
  }

  return v31;
}

void sub_100D6ADBC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v9 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  va_copy(va2, va1);
  uint64_t v12 = va_arg(va2, void);
  uint64_t v14 = va_arg(va2, void);
  uint64_t v15 = va_arg(va2, void);
  sub_10000AE14((uint64_t)va);
  sub_10000AE14((uint64_t)va1);
  sub_10000AE14((uint64_t)va2);
  _Unwind_Resume(a1);
}

BOOL sub_100D6AE5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 4056);
  uint64_t v5 = *(void *)(a1 + 4048);
  while (v4 != v5)
    uint64_t v4 = sub_10000AE14(v4 - 56);
  *(void *)(a1 + 4056) = v5;
  if (!*(_BYTE *)(a1 + 114)) {
    return 0LL;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = *(std::__shared_weak_count **)(a1 + 16);
  uint64_t v21 = v6;
  uint64_t v22 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      unint64_t v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    uint64_t v19 = v6;
    uint64_t v20 = v7;
    do
      unint64_t v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
  }

  else
  {
    uint64_t v19 = v6;
    uint64_t v20 = 0LL;
  }

  BOOL v11 = sub_100D6E9D8(a2, &v19, (double *)(a1 + 608), (void *)(a1 + 48), (uint64_t *)(a1 + 4048), 1, 200.0);
  uint64_t v12 = v20;
  if (v20)
  {
    double v13 = (unint64_t *)&v20->__shared_owners_;
    do
      unint64_t v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }

  uint64_t v15 = v22;
  if (v22)
  {
    uint64_t v16 = (unint64_t *)&v22->__shared_owners_;
    do
      unint64_t v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }

  return v11;
}

void sub_100D6AF94( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
}

uint64_t sub_100D6AFB0(uint64_t a1)
{
  if (*(void *)(a1 + 872) == *(void *)(a1 + 864) || !*(_BYTE *)(a1 + 114)) {
    goto LABEL_44;
  }
  if ((sub_100D705F4(a1) & 1) == 0)
  {
    uint64_t v42 = *(void *)(a1 + 4080);
    uint64_t v43 = *(void *)(a1 + 4072);
    if (v42 != v43)
    {
      do
      {
        uint64_t v44 = v42 - 264;
        sub_10000AE14(v42 - 56);
        uint64_t v42 = v44;
      }

      while (v44 != v43);
    }

    char v4 = 0;
    *(void *)(a1 + 4080) = v43;
    return v4 & 1;
  }

  uint64_t v2 = *(void *)(a1 + 4072);
  uint64_t v3 = *(void *)(a1 + 4080);
  if (v2 == v3)
  {
LABEL_44:
    char v4 = 0;
    return v4 & 1;
  }

  char v4 = 0;
  uint64_t v48 = *(void *)(a1 + 4080);
  while (1)
  {
    double v5 = vabdd_f64(*(double *)(v2 + 184), *(double *)(a1 + 1152));
    if (v5 > 0.01)
    {
      uint64_t v34 = *(void *)(a1 + 4080);
      uint64_t v35 = *(void *)(a1 + 4072);
      if (v34 != v35)
      {
        do
        {
          uint64_t v36 = v34 - 264;
          sub_10000AE14(v34 - 56);
          uint64_t v34 = v36;
        }

        while (v36 != v35);
      }

      *(void *)(a1 + 4080) = v35;
      char v47 = v4;
    }

    else
    {
      uint64_t v69 = 0LL;
      int v70 = 0;
      __int128 v66 = 0u;
      __int128 v67 = 0u;
      __int16 v68 = 0;
      __int128 v71 = 0u;
      __int128 v72 = 0u;
      __int128 v73 = 0u;
      memset(v74, 0, 27);
      memset(&v74[32], 0, 48);
      *(_OWORD *)&v65[14] = 0u;
      __int128 v64 = 0u;
      *(_OWORD *)uint64_t v65 = 0u;
      __int128 v62 = 0u;
      __int128 v63 = 0u;
      __int128 v60 = 0u;
      __int128 v61 = 0u;
      __int128 v58 = 0u;
      __int128 v59 = 0u;
      unint64_t v76 = 0xBFF0000000000000LL;
      uint64_t v75 = 0LL;
      __int128 v55 = *(_OWORD *)(v2 + 80);
      uint64_t v6 = *(void *)(v2 + 104);
      uint64_t v7 = *(void *)(v2 + 112);
      uint64_t v8 = *(void *)(v2 + 120);
      uint64_t v56 = *(void *)(v2 + 96);
      uint64_t v57 = v7;
      *((void *)&v64 + 1) = v8;
      *(_OWORD *)uint64_t v65 = *(_OWORD *)(v2 + 160);
      *(void *)&v65[16] = *(void *)(v2 + 176);
      uint64_t v9 = *(void *)(v2 + 144);
      *((void *)&v58 + 1) = *(void *)(v2 + 136);
      *(void *)&__int128 v59 = v6;
      uint64_t v49 = 0LL;
      uint64_t v52 = 0LL;
      uint64_t v53 = 0LL;
      unint64_t v54 = 0xBFF0000000000000LL;
      *(void *)&__int128 v64 = v9;
      v65[28] = *(_BYTE *)(v2 + 152);
      uint64_t v51 = *(void *)(v2 + 184);
      int8x16_t v50 = vextq_s8(*(int8x16_t *)(v2 + 192), *(int8x16_t *)(v2 + 192), 8uLL);
      uint64_t v10 = *(void *)(a1 + 864);
      uint64_t v11 = *(void *)(a1 + 872);
      while (v10 != v11)
      {
        memset(buf, 0, sizeof(buf));
        *(void *)&__int128 v80 = 0LL;
        *((void *)&v80 + 1) = 0x3FF0000000000000LL;
        __int128 v81 = 0u;
        __int128 v82 = 0u;
        LODWORD(v83) = 0;
        sub_100D53370(a1, v2, v10, (double *)&v49, (uint64_t)buf);
        LODWORD(v83) = 2;
        *((void *)&v80 + 1) = *(void *)(v2 + 128);
        unint64_t v12 = *(void *)(v10 + 104);
        unint64_t v13 = *(void *)(v10 + 96);
        if (v13 >= v12)
        {
          uint64_t v18 = *(void *)(v10 + 88);
          unint64_t v19 = 0x8E38E38E38E38E39LL * ((uint64_t)(v13 - v18) >> 3);
          unint64_t v20 = v19 + 1;
          if (v19 + 1 > 0x38E38E38E38E38ELL) {
            sub_100007008();
          }
          unint64_t v21 = 0x8E38E38E38E38E39LL * ((uint64_t)(v12 - v18) >> 3);
          if (2 * v21 > v20) {
            unint64_t v20 = 2 * v21;
          }
          if (v21 >= 0x1C71C71C71C71C7LL) {
            unint64_t v22 = 0x38E38E38E38E38ELL;
          }
          else {
            unint64_t v22 = v20;
          }
          if (v22) {
            uint64_t v23 = (char *)sub_100046304(v10 + 104, v22);
          }
          else {
            uint64_t v23 = 0LL;
          }
          uint64_t v24 = &v23[72 * v19];
          *(_OWORD *)uint64_t v24 = *(_OWORD *)buf;
          __int128 v25 = v80;
          __int128 v26 = v81;
          __int128 v27 = v82;
          *((void *)v24 + 8) = v83;
          *((_OWORD *)v24 + 2) = v26;
          *((_OWORD *)v24 + 3) = v27;
          *((_OWORD *)v24 + 1) = v25;
          v29 = *(char **)(v10 + 88);
          float v28 = *(char **)(v10 + 96);
          uint64_t v30 = v24;
          if (v28 != v29)
          {
            do
            {
              *(_OWORD *)(v30 - 72) = *(_OWORD *)(v28 - 72);
              __int128 v31 = *(_OWORD *)(v28 - 56);
              __int128 v32 = *(_OWORD *)(v28 - 40);
              __int128 v33 = *(_OWORD *)(v28 - 24);
              *((_DWORD *)v30 - 2) = *((_DWORD *)v28 - 2);
              *(_OWORD *)(v30 - 24) = v33;
              *(_OWORD *)(v30 - 40) = v32;
              *(_OWORD *)(v30 - 56) = v31;
              v30 -= 72;
              v28 -= 72;
            }

            while (v28 != v29);
            float v28 = *(char **)(v10 + 88);
          }

          unint64_t v17 = v24 + 72;
          *(void *)(v10 + 88) = v30;
          *(void *)(v10 + 96) = v24 + 72;
          *(void *)(v10 + 104) = &v23[72 * v22];
          if (v28) {
            operator delete(v28);
          }
        }

        else
        {
          *(_OWORD *)unint64_t v13 = *(_OWORD *)buf;
          __int128 v14 = v80;
          __int128 v15 = v81;
          __int128 v16 = v82;
          *(void *)(v13 + 64) = v83;
          *(_OWORD *)(v13 + 32) = v15;
          *(_OWORD *)(v13 + 48) = v16;
          *(_OWORD *)(v13 + 16) = v14;
          unint64_t v17 = (char *)(v13 + 72);
        }

        *(void *)(v10 + 96) = v17;
        sub_100D72794((double *)v10);
        v10 += 112LL;
      }

      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_1018819B8);
      }
      uint64_t v3 = v48;
      __int128 v37 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v38 = *(void *)(a1 + 1136);
        *(_DWORD *)buf = 134349056;
        *(void *)&uint8_t buf[4] = v38;
        _os_log_impl( (void *)&_mh_execute_header,  v37,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}.1lf,routeHints,used route-hint",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_1018819B8);
        }
        uint64_t v39 = *(void *)(a1 + 1136);
        int v77 = 134349056;
        uint64_t v78 = v39;
        LODWORD(v46) = 12;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}.1lf,routeHints,used route-hint",  &v77,  v46);
        __int128 v41 = (uint8_t *)v40;
        sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLParticleMapMatcher::integrateRouteHint()", "%s\n", v40);
        if (v41 != buf) {
          free(v41);
        }
      }

      if (SHIBYTE(v61) < 0) {
        operator delete(*((void **)&v60 + 1));
      }
      char v4 = 1;
    }

    if (v5 > 0.01) {
      break;
    }
    v2 += 264LL;
    if (v2 == v3) {
      return v4 & 1;
    }
  }

  char v4 = v47;
  return v4 & 1;
}

void sub_100D6B53C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, void *__p, uint64_t a38, int a39, __int16 a40, char a41, char a42)
{
  if (a42 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100D6B564(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 872);
  uint64_t v2 = *(void *)(a1 + 864);
  if (v1 == v2) {
    return 1LL;
  }
  double v4 = 0.0;
  uint64_t v5 = *(void *)(a1 + 864);
  do
  {
    double v4 = v4 + *(double *)(v5 + 56);
    v5 += 112LL;
  }

  while (v5 != v1);
  if (v4 > 0.0)
  {
    uint64_t v6 = (void **)(a1 + 936);
    uint64_t v7 = *(float **)(a1 + 936);
    *(void *)(a1 + 944) = v7;
    uint64_t v8 = (void *)(a1 + 952);
    double v9 = 0.0;
    do
    {
      uint64_t v10 = v2;
      double v11 = *(double *)(v2 + 56) / v4;
      *(double *)(v2 + 64) = v11;
      double v9 = v9 + v11;
      float v12 = v9;
      if ((unint64_t)v7 >= *v8)
      {
        __int128 v14 = (float *)*v6;
        uint64_t v15 = ((char *)v7 - (_BYTE *)*v6) >> 2;
        unint64_t v16 = v15 + 1;
        uint64_t v17 = *v8 - (void)v14;
        if (v17 >> 1 > v16) {
          unint64_t v16 = v17 >> 1;
        }
        else {
          unint64_t v18 = v16;
        }
        if (v18)
        {
          unint64_t v19 = (char *)sub_10000956C(a1 + 952, v18);
          uint64_t v7 = *(float **)(a1 + 944);
          __int128 v14 = *(float **)(a1 + 936);
        }

        else
        {
          unint64_t v19 = 0LL;
        }

        unint64_t v20 = (float *)&v19[4 * v15];
        *unint64_t v20 = v12;
        unint64_t v13 = v20 + 1;
        while (v7 != v14)
        {
          int v21 = *((_DWORD *)v7-- - 1);
          *((_DWORD *)v20-- - 1) = v21;
        }

        *(void *)(a1 + 936) = v20;
        *(void *)(a1 + 944) = v13;
        *(void *)(a1 + 952) = &v19[4 * v18];
        if (v14) {
          operator delete(v14);
        }
      }

      else
      {
        *uint64_t v7 = v12;
        unint64_t v13 = v7 + 1;
      }

      *(void *)(a1 + 944) = v13;
      uint64_t v2 = v10 + 112;
      uint64_t v7 = v13;
    }

    while (v10 + 112 != *(void *)(a1 + 872));
    uint64_t v22 = *(void *)(a1 + 864);
    if (v2 != v22)
    {
      uint64_t v23 = v22 - 112;
      double v24 = 0.0;
      do
      {
        double v24 = v24 + *(double *)(v23 + 176) * *(double *)(v23 + 176);
        v23 += 112LL;
      }

      while (v23 != v10);
      if (v24 > 0.0) {
        *(double *)(a1 + 1608) = 1.0 / v24;
      }
    }

    return 1LL;
  }

  do
  {
    v1 -= 112LL;
    sub_100D738F8(a1 + 880, v1);
  }

  while (v1 != v2);
  uint64_t result = 0LL;
  *(void *)(a1 + 872) = v2;
  return result;
}

void sub_100D6B738(uint64_t **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  *(void *)(v2 + 8) = (*a1)[1];
  *(void *)v1[1] = v2;
  a1[2] = (uint64_t *)((char *)a1[2] - 1);
  operator delete(v1);
}

uint64_t sub_100D6B760(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(a2 + 264)) {
    BOOL v2 = *(_BYTE *)(a2 + 265) == 0;
  }
  else {
    BOOL v2 = 0;
  }
  if (!v2) {
    return 0LL;
  }
  uint64_t result = 0LL;
  double v6 = *(double *)(a2 + 80);
  if (v6 < 400.0 && v6 > 0.0)
  {
    if (*(_BYTE *)(a1 + 1649) && !*(_BYTE *)(a1 + 1650))
    {
      double v7 = *(double *)(a1 + 4024);
      double v8 = vabdd_f64(*(double *)(a2 + 8), v7);
      if (v7 < 0.0 || v8 > 2.0) {
        return 0LL;
      }
    }

    double v10 = sub_100D2DBDC( (double *)(a1 + 608),  *(double *)(a2 + 56),  *(double *)(a2 + 64),  *(double *)(a2 + 152),  *(double *)(a2 + 160),  0.0);
    double v11 = v10 / *(double *)(a2 + 80);
    if (v11 > 1.5)
    {
      if (*(_BYTE *)(a1 + 96))
      {
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_1018819B8);
        }
        float v12 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v13 = *(void *)(a2 + 8);
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = *(void *)(a2 + 64);
          uint64_t v16 = *(void *)(a2 + 104);
          uint64_t v17 = *(void *)(a2 + 152);
          uint64_t v18 = *(void *)(a2 + 160);
          uint64_t v19 = *(void *)(a2 + 168);
          uint64_t v20 = *(void *)(a2 + 72);
          uint64_t v21 = *(void *)(a2 + 80);
          *(_DWORD *)buf = 134351617;
          uint64_t v57 = v13;
          __int16 v58 = 2049;
          uint64_t v59 = v14;
          __int16 v60 = 2049;
          uint64_t v61 = v15;
          __int16 v62 = 2050;
          uint64_t v63 = v20;
          __int16 v64 = 2050;
          uint64_t v65 = v16;
          __int16 v66 = 2049;
          uint64_t v67 = v17;
          __int16 v68 = 2049;
          uint64_t v69 = v18;
          __int16 v70 = 2050;
          uint64_t v71 = v19;
          __int16 v72 = 2050;
          double v73 = v10;
          __int16 v74 = 2050;
          uint64_t v75 = v21;
          __int16 v76 = 2050;
          double v77 = v11;
          _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}.1lf,lat,%{private}.8lf,lon,%{private}.8lf,alt,%{public}.2lf,course,%{public}.1lf,snapLat,%{pr ivate}.8lf,snapLon,%{private}.8lf,snapCourse,%{public}.1lf,horizontalError,%{public}.2lf,hunc,%{public}.2lf, ratio,%{public}.2lf",  buf,  0x70u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_1018819B8);
          }
          uint64_t v23 = *(void *)(a2 + 8);
          uint64_t v24 = *(void *)(a2 + 56);
          uint64_t v25 = *(void *)(a2 + 64);
          uint64_t v26 = *(void *)(a2 + 104);
          uint64_t v27 = *(void *)(a2 + 152);
          uint64_t v28 = *(void *)(a2 + 160);
          uint64_t v29 = *(void *)(a2 + 168);
          uint64_t v30 = *(void *)(a2 + 72);
          uint64_t v31 = *(void *)(a2 + 80);
          int v34 = 134351617;
          uint64_t v35 = v23;
          __int16 v36 = 2049;
          uint64_t v37 = v24;
          __int16 v38 = 2049;
          uint64_t v39 = v25;
          __int16 v40 = 2050;
          uint64_t v41 = v30;
          __int16 v42 = 2050;
          uint64_t v43 = v26;
          __int16 v44 = 2049;
          uint64_t v45 = v27;
          __int16 v46 = 2049;
          uint64_t v47 = v28;
          __int16 v48 = 2050;
          uint64_t v49 = v29;
          __int16 v50 = 2050;
          double v51 = v10;
          __int16 v52 = 2050;
          uint64_t v53 = v31;
          __int16 v54 = 2050;
          double v55 = v11;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}.1lf,lat,%{private}.8lf,lon,%{private}.8lf,alt,%{public}.2lf,course,%{public}.1lf,snapLat,%{pr ivate}.8lf,snapLon,%{private}.8lf,snapCourse,%{public}.1lf,horizontalError,%{public}.2lf,hunc,%{public}.2lf, ratio,%{public}.2lf",  &v34,  112);
          __int128 v33 = (uint8_t *)v32;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMapMatcher::modifyHorizontalUncertainty(CLMapCrumb &)",  "%s\n",  v32);
          if (v33 != buf) {
            free(v33);
          }
        }
      }

      double v22 = v10 * 1.05;
      if (v10 * 1.05 > 400.0) {
        double v22 = 400.0;
      }
      *(double *)(a2 + 80) = v22;
      *(void *)(a1 + 4024) = *(void *)(a2 + 8);
    }

    return 1LL;
  }

  return result;
}

BOOL sub_100D6BAC0(uint64_t a1, double *a2, double a3, double a4, double a5)
{
  double v9 = sub_100D504C0(*(double *)(a1 + 1432) - a5);
  if (v9 > 8.0)
  {
    if (*(_BYTE *)(a1 + 96))
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_1018819B8);
      }
      double v10 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "CLMM,no DOT, course is not aligned", buf, 2u);
      }

      BOOL result = sub_1002921D0(115, 2);
      if (result)
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_1018819B8);
        }
        LOWORD(v18[0]) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,no DOT, course is not aligned",  v18,  2,  v16);
LABEL_33:
        uint64_t v15 = (uint8_t *)v12;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMapMatcher::runDirectionOfTravelHelper(double, double, double, double &)",  "%s\n",  v12);
        if (v15 != buf) {
          free(v15);
        }
        return 0LL;
      }

      return result;
    }

    return 0LL;
  }

  if (v9 > *a2) {
    *a2 = v9;
  }
  double v17 = 0.0;
  v18[0] = 0.0;
  sub_100D2E36C( (double *)(a1 + 608),  v18,  &v17,  *(double *)(a1 + 1416),  *(double *)(a1 + 1424),  *(double *)(a1 + 1200),  *(double *)(a1 + 1432),  a3,  a4);
  if (fabs(v18[0]) <= 5.0)
  {
    if (fabs(v17) <= 45.0) {
      return 1LL;
    }
    if (*(_BYTE *)(a1 + 96))
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_1018819B8);
      }
      uint64_t v14 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "CLMM,along track too large, not suitable DOT assistance",  buf,  2u);
      }

      BOOL result = sub_1002921D0(115, 2);
      if (result)
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_1018819B8);
        }
        LOWORD(v16) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,along track too large, not suitable DOT assistance",  &v16,  2,  v16);
        goto LABEL_33;
      }

      return result;
    }

    return 0LL;
  }

  if (!*(_BYTE *)(a1 + 96)) {
    return 0LL;
  }
  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_1018819B8);
  }
  uint64_t v13 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "CLMM,across track too large, not suitable DOT assistance",  buf,  2u);
  }

  BOOL result = sub_1002921D0(115, 2);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_1018819B8);
    }
    LOWORD(v16) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,across track too large, not suitable DOT assistance",  &v16,  2,  v16);
    goto LABEL_33;
  }

  return result;
}

uint64_t sub_100D6BEA4(uint64_t a1, double *a2)
{
  double v4 = *(double *)(a1 + 3728);
  if (v4 > 0.0 && vabdd_f64(*(double *)(a1 + 1136), v4 + -1.0) < 0.9)
  {
    if (!*(_BYTE *)(a1 + 96)) {
      return 0LL;
    }
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_1018819B8);
    }
    uint64_t v5 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "CLMM,no DOT,feedback interval check", buf, 2u);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_1018819B8);
    }
    *(_WORD *)v139 = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,no DOT,feedback interval check",  v139,  2);
    double v7 = (char *)v6;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMapMatcher::getDirectionOfTravelAssistance(CLGpsAssistant_Type::DirectionOfTravelAssistance &)",  "%s\n",  v6);
    goto LABEL_181;
  }

  if (!*(_DWORD *)(a1 + 1248) && sub_1004F6E10() && (sub_1004F84C0() & 1) == 0)
  {
    if (!*(_BYTE *)(a1 + 96)) {
      return 0LL;
    }
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_1018819B8);
    }
    double v10 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "CLMM,no DOT,frc,0", buf, 2u);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_1018819B8);
    }
    *(_WORD *)v139 = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,no DOT,frc,0",  v139,  2);
    double v7 = (char *)v79;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMapMatcher::getDirectionOfTravelAssistance(CLGpsAssistant_Type::DirectionOfTravelAssistance &)",  "%s\n",  v79);
    goto LABEL_181;
  }

  if (*(_BYTE *)(a1 + 2232)
    && *(_BYTE *)(a1 + 1392)
    && !*(_BYTE *)(a1 + 2233)
    && !*(_BYTE *)(a1 + 1393)
    && *(double *)(a1 + 1136) - *(double *)(a1 + 1976) <= 1.5)
  {
    if (*(_BYTE *)(a1 + 2688) && *(double *)(a1 + 2696) < 36.0)
    {
      if (!*(_BYTE *)(a1 + 96)) {
        return 0LL;
      }
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_1018819B8);
      }
      double v8 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "CLMM,no DOT,too close to prior intersection",  buf,  2u);
      }

      if (!sub_1002921D0(115, 2)) {
        return 0LL;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_1018819B8);
      }
      *(_WORD *)v139 = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,no DOT,too close to prior intersection",  v139,  2);
      double v7 = (char *)v9;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMapMatcher::getDirectionOfTravelAssistance(CLGpsAssistant_Type::DirectionOfTravelAssistance &)",  "%s\n",  v9);
      goto LABEL_181;
    }

    if (sub_100D504C0(*(double *)(a1 + 1296) - *(double *)(a1 + 1432)) > 1.0)
    {
      if (!*(_BYTE *)(a1 + 96)) {
        return 0LL;
      }
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_1018819B8);
      }
      uint64_t v13 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "CLMM,no DOT,course not aligned to full snap",  buf,  2u);
      }

      if (!sub_1002921D0(115, 2)) {
        return 0LL;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_1018819B8);
      }
      *(_WORD *)v139 = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,no DOT,course not aligned to full snap",  v139,  2);
      double v7 = (char *)v14;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMapMatcher::getDirectionOfTravelAssistance(CLGpsAssistant_Type::DirectionOfTravelAssistance &)",  "%s\n",  v14);
      goto LABEL_181;
    }

    double v138 = -1.0;
    if (sub_100D6BAC0(a1, &v138, *(double *)(a1 + 2256), *(double *)(a1 + 2264), *(double *)(a1 + 2272)))
    {
      if (*(_BYTE *)(a1 + 1490) && *(_DWORD *)(a1 + 1528) == 1) {
        goto LABEL_63;
      }
      *(void *)v139 = 0x4044000000000000LL;
      LOBYTE(v128[0]) = 1;
      *(void *)buf = 0x4046800000000000LL;
      if ((sub_100D65818(a1, (double *)v139, (double *)buf, v128) & 1) != 0)
      {
        if (LOBYTE(v128[0]))
        {
          if (!*(_BYTE *)(a1 + 96)) {
            return 0LL;
          }
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_1018819B8);
          }
          uint64_t v15 = (os_log_s *)qword_1019348B8;
          if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
          {
            *(_WORD *)buf = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "CLMM,no DOT,too close to a road with similar course",  buf,  2u);
          }

          if (!sub_1002921D0(115, 2)) {
            return 0LL;
          }
          bzero(buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_1018819B8);
          }
          v133[0] = 0;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,no DOT,too close to a road with similar course",  v133,  2);
          double v7 = (char *)v16;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMapMatcher::getDirectionOfTravelAssistance(CLGpsAssistant_Type::DirectionOfTravelAssistance &)",  "%s\n",  v16);
          goto LABEL_181;
        }

void sub_100D6DCF4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, char a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, void *a44, uint64_t a45, uint64_t a46, char a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62)
{
}

uint64_t sub_100D6DDCC(uint64_t a1, uint64_t *a2)
{
  uint64_t v25 = 0x4056800000000000LL;
  double v4 = *(double *)(a1 + 1208);
  uint64_t v5 = 0x4049000000000000LL;
  if (v4 <= 10.0) {
    goto LABEL_7;
  }
  if (v4 < 50.0)
  {
    uint64_t v5 = 0x4052C00000000000LL;
LABEL_7:
    uint64_t v25 = v5;
  }

  char v24 = 1;
  *(void *)buf = 0x4024000000000000LL;
  *a2 = *(void *)(a1 + 3728);
  *(_OWORD *)(a2 + 1) = *(_OWORD *)(a1 + 3752);
  a2[3] = 0x4059000000000000LL;
  a2[4] = *(void *)(a1 + 3792);
  a2[5] = *(void *)(a1 + 3776);
  if (*(_BYTE *)(a1 + 96))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_1018819B8);
    }
    double v6 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v7 = *a2;
      uint64_t v8 = a2[1];
      uint64_t v9 = a2[2];
      uint64_t v10 = a2[3];
      uint64_t v11 = a2[4];
      uint64_t v12 = a2[5];
      uint64_t v13 = *(void *)(a1 + 1432);
      *(_DWORD *)buf = 134350593;
      *(void *)&uint8_t buf[4] = v7;
      __int16 v41 = 2049;
      uint64_t v42 = v8;
      __int16 v43 = 2049;
      uint64_t v44 = v9;
      __int16 v45 = 2050;
      uint64_t v46 = v10;
      __int16 v47 = 2050;
      uint64_t v48 = v11;
      __int16 v49 = 2050;
      uint64_t v50 = v12;
      __int16 v51 = 2050;
      uint64_t v52 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "CLMM,MMPA,%{public}.1lf,lat,%{private}.7lf,lon,%{private}.7lf,a,%{public}.2lf,b,%{public}.2lf,az,%{public}.3lf,c ourse,%{public}.3lf",  buf,  0x48u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_1018819B8);
      }
      uint64_t v15 = *a2;
      uint64_t v16 = a2[1];
      uint64_t v17 = a2[2];
      uint64_t v18 = a2[3];
      uint64_t v19 = a2[4];
      uint64_t v20 = a2[5];
      uint64_t v21 = *(void *)(a1 + 1432);
      int v26 = 134350593;
      uint64_t v27 = v15;
      __int16 v28 = 2049;
      uint64_t v29 = v16;
      __int16 v30 = 2049;
      uint64_t v31 = v17;
      __int16 v32 = 2050;
      uint64_t v33 = v18;
      __int16 v34 = 2050;
      uint64_t v35 = v19;
      __int16 v36 = 2050;
      uint64_t v37 = v20;
      __int16 v38 = 2050;
      uint64_t v39 = v21;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,MMPA,%{public}.1lf,lat,%{private}.7lf,lon,%{private}.7lf,a,%{public}.2lf,b,%{public}.2lf,az,%{public}.3lf,c ourse,%{public}.3lf",  &v26,  72);
      uint64_t v23 = (char *)v22;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMapMatcher::getPosAssistanceForGps(CLGpsAssistant_Type::MapMatchedPositionAssistance &)",  "%s\n",  v22);
      if (v23 != buf) {
        free(v23);
      }
    }
  }

  return 1LL;
}

uint64_t sub_100D6E0DC(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a2 + 8);
  if (v2 < 0.0 || *(double *)a2 < 0.0)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_1018819B8);
    }
    uint64_t v8 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "CLMM,TBA,Invalid time", buf, 2u);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_1018819B8);
    }
    LOWORD(v58[0]) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,TBA,Invalid time",  v58,  2);
    uint64_t v7 = (uint8_t *)v42;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMapMatcher::getTunnelBridgeAssistance(CLGpsAssistant_Type::TunnelBridgeAssistance &)",  "%s\n",  v42);
    goto LABEL_66;
  }

  if (vabdd_f64(*(double *)(a1 + 1136), v2) < 5.0)
  {
    if (*(_BYTE *)(a1 + 1392))
    {
      if (!*(_BYTE *)(a1 + 1393))
      {
        int v40 = *(unsigned __int8 *)(a1 + 1489);
        *(_BYTE *)(a2 + 43) = v40;
        int v41 = *(unsigned __int8 *)(a1 + 1490);
        *(_BYTE *)(a2 + 42) = v41;
        if (v41 | v40)
        {
          *(_BYTE *)(a2 + 40) = v41;
          *(_BYTE *)(a2 + 41) = v40;
          return 1LL;
        }
      }
    }
  }

  if (!sub_10029286C(*(double *)(a2 + 16), *(double *)(a2 + 24)))
  {
    uint64_t v84 = (uint64_t)&v84;
    double v85 = &v84;
    uint64_t v86 = 0LL;
    double v10 = *(double *)(a1 + 3160);
    double v11 = *(double *)a2;
    if (v10 > 0.0 && vabdd_f64(v10, v11) < *(double *)(a2 + 32) / 38.0)
    {
      uint64_t v9 = 0LL;
LABEL_59:
      sub_100890314(&v84);
      return v9;
    }

    *(double *)(a1 + 3160) = v11;
    uint64_t v13 = *(void *)(a1 + 8);
    uint64_t v12 = *(std::__shared_weak_count **)(a1 + 16);
    uint64_t v82 = v13;
    int v83 = v12;
    if (v12)
    {
      p_shared_owners = (unint64_t *)&v12->__shared_owners_;
      do
        unint64_t v15 = __ldxr(p_shared_owners);
      while (__stxr(v15 + 1, p_shared_owners));
    }

    (*(void (**)(uint64_t, void))(*(void *)v13 + 32LL))(v13, 0LL);
    v58[0] = 0LL;
    v58[1] = 0LL;
    __asm { FMOV            V0.2D, #-1.0 }

    __int128 v59 = _Q0;
    uint64_t v60 = 0LL;
    uint64_t v61 = 0LL;
    unint64_t v62 = 0xBFF0000000000000LL;
    uint64_t v74 = 0LL;
    int v75 = 0;
    memset(&v72[32], 0, 32);
    __int16 v73 = 0;
    __int128 v76 = 0u;
    __int128 v77 = 0u;
    __int128 v78 = 0u;
    memset(v79, 0, 27);
    memset(&v79[32], 0, 48);
    memset(v72, 0, 30);
    __int128 v71 = 0u;
    __int128 v70 = 0u;
    __int128 v69 = 0u;
    __int128 v68 = 0u;
    *(_OWORD *)__p = 0u;
    __int128 v66 = 0u;
    __int128 v65 = 0u;
    __int128 v64 = 0u;
    uint64_t v80 = 0LL;
    unint64_t v81 = 0xBFF0000000000000LL;
    __int128 v63 = *(_OWORD *)(a2 + 16);
    if (((*(uint64_t (**)(uint64_t, uint64_t *, void *, uint64_t, double))(*(void *)v13 + 64LL))( v13,  &v84,  v58,  1LL,  *(double *)(a2 + 32)) & 1) != 0)
    {
      if (v86)
      {
        uint64_t v21 = v85;
        if (v85 != &v84)
        {
          char v22 = 0;
          do
          {
            while (1)
            {
              uint64_t v23 = v21[2];
              if (!v23) {
                break;
              }
              if (*(_BYTE *)(v23 + 18))
              {
                char v22 = 1;
                *(_BYTE *)(a2 + 40) = 1;
              }

              if (!*(_BYTE *)(v23 + 19)) {
                break;
              }
              char v22 = 1;
              *(_BYTE *)(a2 + 41) = 1;
              uint64_t v21 = (uint64_t *)v21[1];
              if (v21 == &v84) {
                goto LABEL_39;
              }
            }

            uint64_t v21 = (uint64_t *)v21[1];
          }

          while (v21 != &v84);
          if ((v22 & 1) == 0) {
            goto LABEL_51;
          }
LABEL_39:
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_1018819B8);
          }
          char v24 = (os_log_s *)qword_1019348B8;
          if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v25 = *(void *)(a2 + 16);
            uint64_t v26 = *(void *)(a2 + 24);
            uint64_t v27 = *(void *)(a1 + 1208);
            uint64_t v28 = *(void *)(a2 + 32);
            int v29 = *(unsigned __int8 *)(a2 + 40);
            int v30 = *(unsigned __int8 *)(a2 + 41);
            int v31 = *(unsigned __int8 *)(a2 + 42);
            int v32 = *(unsigned __int8 *)(a2 + 43);
            *(_DWORD *)buf = 134285313;
            uint64_t v104 = v25;
            __int16 v105 = 2049;
            uint64_t v106 = v26;
            __int16 v107 = 2050;
            uint64_t v108 = v27;
            __int16 v109 = 2050;
            uint64_t v110 = v28;
            __int16 v111 = 1026;
            int v112 = v29;
            __int16 v113 = 1026;
            int v114 = v30;
            __int16 v115 = 1026;
            int v116 = v31;
            __int16 v117 = 1026;
            int v118 = v32;
            _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEBUG,  "CLMM, TBA,lat,%{private}.8lf,lon,%{private}.8lf,unc,%{public}.2lf,searchRadius,%{public}.1lf,isCloseToTunn el,%{public}d,isCloseToBridge,%{public}d,isTunnel,%{public}d,isBridge,%{public}d",  buf,  0x42u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1019348B0 != -1) {
              dispatch_once(&qword_1019348B0, &stru_1018819B8);
            }
            uint64_t v48 = *(void *)(a2 + 16);
            uint64_t v49 = *(void *)(a2 + 24);
            uint64_t v50 = *(void *)(a1 + 1208);
            uint64_t v51 = *(void *)(a2 + 32);
            int v52 = *(unsigned __int8 *)(a2 + 40);
            int v53 = *(unsigned __int8 *)(a2 + 41);
            int v54 = *(unsigned __int8 *)(a2 + 42);
            int v55 = *(unsigned __int8 *)(a2 + 43);
            int v87 = 134285313;
            uint64_t v88 = v48;
            __int16 v89 = 2049;
            uint64_t v90 = v49;
            __int16 v91 = 2050;
            uint64_t v92 = v50;
            __int16 v93 = 2050;
            uint64_t v94 = v51;
            __int16 v95 = 1026;
            int v96 = v52;
            __int16 v97 = 1026;
            int v98 = v53;
            __int16 v99 = 1026;
            int v100 = v54;
            __int16 v101 = 1026;
            int v102 = v55;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM, TBA,lat,%{private}.8lf,lon,%{private}.8lf,unc,%{public}.2lf,searchRadius,%{public}.1lf,isCloseToTunn el,%{public}d,isCloseToBridge,%{public}d,isTunnel,%{public}d,isBridge,%{public}d",  &v87,  66);
            uint64_t v57 = (uint8_t *)v56;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMapMatcher::getTunnelBridgeAssistance(CLGpsAssistant_Type::TunnelBridgeAssistance &)",  "%s\n",  v56);
            if (v57 != buf) {
              free(v57);
            }
          }

          uint64_t v9 = 1LL;
          goto LABEL_52;
        }
      }
    }

    else if (*(_BYTE *)(a1 + 96))
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_1018819B8);
      }
      uint64_t v33 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v34 = *(void *)(a1 + 1184);
        uint64_t v35 = *(void *)(a1 + 1192);
        uint64_t v36 = *(void *)(a2 + 32);
        *(_DWORD *)buf = 134284033;
        uint64_t v104 = v34;
        __int16 v105 = 2049;
        uint64_t v106 = v35;
        __int16 v107 = 2050;
        uint64_t v108 = v36;
        _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEBUG,  "CLMM,TBA,roadsWithinDistance returns query failed,lat,%{private}.8lf,lon,%{private}.8lf,searchRadius,%{public}.1lf",  buf,  0x20u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_1018819B8);
        }
        uint64_t v43 = *(void *)(a1 + 1184);
        uint64_t v44 = *(void *)(a1 + 1192);
        uint64_t v45 = *(void *)(a2 + 32);
        int v87 = 134284033;
        uint64_t v88 = v43;
        __int16 v89 = 2049;
        uint64_t v90 = v44;
        __int16 v91 = 2050;
        uint64_t v92 = v45;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,TBA,roadsWithinDistance returns query failed,lat,%{private}.8lf,lon,%{private}.8lf,searchRadius,%{public}.1lf",  &v87,  32);
        __int16 v47 = (uint8_t *)v46;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMapMatcher::getTunnelBridgeAssistance(CLGpsAssistant_Type::TunnelBridgeAssistance &)",  "%s\n",  v46);
        if (v47 != buf) {
          free(v47);
        }
      }
    }

void sub_100D6E994( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, void *__p, uint64_t a28, int a29, __int16 a30, char a31, char a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (a32 < 0) {
    operator delete(__p);
  }
  sub_10000AE14((uint64_t)&a69);
  sub_100890314(&a71);
  _Unwind_Resume(a1);
}

BOOL sub_100D6E9D8(uint64_t a1, void *a2, double *a3, void *a4, uint64_t *a5, int a6, double a7)
{
  uint64_t v14 = *a5;
  for (uint64_t i = a5[1]; i != v14; uint64_t i = sub_10000AE14(i - 56))
    ;
  a5[1] = v14;
  if (a4[2] == a4[1] || sub_100ECF4A4((uint64_t)a4, *(double *)(a1 + 24), 6.0))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_1018819B8);
    }
    unint64_t v15 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v16 = *(void *)(a1 + 8);
      unint64_t v17 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a4[2] - a4[1]) >> 3);
      *(_DWORD *)buf = 134349312;
      *(void *)&uint8_t buf[4] = v16;
      __int16 v246 = 2050;
      unint64_t v247 = v17;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}.1lf,routehint timed out or empty, segments,%{public}lu",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_1018819B8);
      }
      uint64_t v180 = *(void *)(a1 + 8);
      unint64_t v181 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a4[2] - a4[1]) >> 3);
      int v235 = 134349312;
      uint64_t v236 = v180;
      __int16 v237 = 2050;
      unint64_t v238 = v181;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}.1lf,routehint timed out or empty, segments,%{public}lu",  &v235,  22);
      __int16 v183 = (char *)v182;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMapMatcherCommon::determineRouteHintRoadVectors(const CLMapCrumb &, const CLMapGeometryPtr, CLDis tanceCalc &, CLMapsRouteHintData &, std::vector<CLMapGeometry::DistanceQueryResult> &, double, BOOL)",  "%s\n",  v182);
      if (v183 != buf) {
        free(v183);
      }
    }

    BOOL v18 = 0LL;
    a4[2] = a4[1];
    return v18;
  }

  if (!*a2)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_1018819B8);
    }
    uint64_t v26 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v27 = *(void *)(a1 + 8);
      *(_DWORD *)buf = 134349056;
      *(void *)&uint8_t buf[4] = v27;
      _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_ERROR,  "CLMM,%{public}.1lf,Unexpected,invalid geometry pointer, determineRouteHintRoadVectors",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_1018819B8);
    }
    uint64_t v28 = *(void *)(a1 + 8);
    int v235 = 134349056;
    uint64_t v236 = v28;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,%{public}.1lf,Unexpected,invalid geometry pointer, determineRouteHintRoadVectors",  &v235,  12);
    uint64_t v25 = (char *)v29;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLParticleMapMatcherCommon::determineRouteHintRoadVectors(const CLMapCrumb &, const CLMapGeometryPtr, CLDista nceCalc &, CLMapsRouteHintData &, std::vector<CLMapGeometry::DistanceQueryResult> &, double, BOOL)",  "%s\n",  v29);
    goto LABEL_236;
  }

  if (a6)
  {
    if (!sub_100ECF944(a4))
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_1018819B8);
      }
      uint64_t v19 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
      {
        uint64_t v20 = *(void *)(a1 + 8);
        unint64_t v21 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a4[2] - a4[1]) >> 3);
        *(_DWORD *)buf = 134349312;
        *(void *)&uint8_t buf[4] = v20;
        __int16 v246 = 2050;
        unint64_t v247 = v21;
        _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_ERROR,  "CLMM,%{public}.1lf,routeHint road search,isConnectivityGood,poorConnectivity caused by radar:58817500,%{public }lu,file radar if 58817500 is already fixed",  buf,  0x16u);
      }

      if (!sub_1002921D0(115, 0)) {
        return 0LL;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_1018819B8);
      }
      uint64_t v22 = *(void *)(a1 + 8);
      unint64_t v23 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a4[2] - a4[1]) >> 3);
      int v235 = 134349312;
      uint64_t v236 = v22;
      __int16 v237 = 2050;
      unint64_t v238 = v23;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,%{public}.1lf,routeHint road search,isConnectivityGood,poorConnectivity caused by radar:58817500,%{public}l u,file radar if 58817500 is already fixed",  &v235,  22);
      uint64_t v25 = (char *)v24;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLParticleMapMatcherCommon::determineRouteHintRoadVectors(const CLMapCrumb &, const CLMapGeometryPtr, CLDis tanceCalc &, CLMapsRouteHintData &, std::vector<CLMapGeometry::DistanceQueryResult> &, double, BOOL)",  "%s\n",  v24);
LABEL_236:
      if (v25 != buf) {
        free(v25);
      }
      return 0LL;
    }
  }

  else if ((sub_100ECFBC0(a4) & 1) == 0)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_1018819B8);
    }
    uint64_t v157 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v158 = *(void *)(a1 + 8);
      unint64_t v159 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a4[2] - a4[1]) >> 3);
      *(_DWORD *)buf = 134349312;
      *(void *)&uint8_t buf[4] = v158;
      __int16 v246 = 2050;
      unint64_t v247 = v159;
      _os_log_impl( (void *)&_mh_execute_header,  v157,  OS_LOG_TYPE_ERROR,  "CLMM,%{public}.1lf,routeHint road search,getConnectedRouteSegments,poorConnectivity caused by radar:58817500,%{p ublic}lu,file radar if 58817500 is already fixed",  buf,  0x16u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_1018819B8);
    }
    uint64_t v184 = *(void *)(a1 + 8);
    unint64_t v185 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a4[2] - a4[1]) >> 3);
    int v235 = 134349312;
    uint64_t v236 = v184;
    __int16 v237 = 2050;
    unint64_t v238 = v185;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,%{public}.1lf,routeHint road search,getConnectedRouteSegments,poorConnectivity caused by radar:58817500,%{pub lic}lu,file radar if 58817500 is already fixed",  &v235,  22);
    uint64_t v25 = (char *)v186;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLParticleMapMatcherCommon::determineRouteHintRoadVectors(const CLMapCrumb &, const CLMapGeometryPtr, CLDista nceCalc &, CLMapsRouteHintData &, std::vector<CLMapGeometry::DistanceQueryResult> &, double, BOOL)",  "%s\n",  v186);
    goto LABEL_236;
  }

  uint64_t v225 = (uint64_t)&v225;
  v226 = &v225;
  unint64_t v227 = 0LL;
  if (((*(uint64_t (**)(void, uint64_t *, uint64_t, uint64_t, double))(*(void *)*a2 + 64LL))( *a2,  &v225,  a1,  1LL,  a7) & 1) == 0)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_1018819B8);
    }
    __int16 v160 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v161 = *(void *)(a1 + 8);
      *(_DWORD *)buf = 134349056;
      *(void *)&uint8_t buf[4] = v161;
      _os_log_impl( (void *)&_mh_execute_header,  v160,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}.1lf,routeHints,search, roadsWithinDistance returned false",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_205;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_1018819B8);
    }
    uint64_t v162 = *(void *)(a1 + 8);
    int v235 = 134349056;
    uint64_t v236 = v162;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}.1lf,routeHints,search, roadsWithinDistance returned false",  &v235,  12);
    __int16 v164 = (char *)v163;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMapMatcherCommon::determineRouteHintRoadVectors(const CLMapCrumb &, const CLMapGeometryPtr, CLDista nceCalc &, CLMapsRouteHintData &, std::vector<CLMapGeometry::DistanceQueryResult> &, double, BOOL)",  "%s\n",  v163);
    goto LABEL_241;
  }

  if (!v227)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_1018819B8);
    }
    int v165 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v166 = *(void *)(a1 + 8);
      *(_DWORD *)buf = 134349056;
      *(void *)&uint8_t buf[4] = v166;
      _os_log_impl( (void *)&_mh_execute_header,  v165,  OS_LOG_TYPE_ERROR,  "CLMM,%{public}.1lf,Unexpected, empty road list",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 0)) {
      goto LABEL_205;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_1018819B8);
    }
    uint64_t v187 = *(void *)(a1 + 8);
    int v235 = 134349056;
    uint64_t v236 = v187;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,%{public}.1lf,Unexpected, empty road list",  &v235,  12);
    __int16 v164 = (char *)v188;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLParticleMapMatcherCommon::determineRouteHintRoadVectors(const CLMapCrumb &, const CLMapGeometryPtr, CLDista nceCalc &, CLMapsRouteHintData &, std::vector<CLMapGeometry::DistanceQueryResult> &, double, BOOL)",  "%s\n",  v188);
LABEL_241:
    if (v164 != buf) {
      free(v164);
    }
LABEL_205:
    BOOL v18 = 0LL;
    goto LABEL_227;
  }

  v224[0] = 0LL;
  v224[1] = 0LL;
  v223 = (uint64_t *)v224;
  int v30 = (double *)a4[1];
  __int16 v201 = (double *)a4[2];
  if (v30 == v201) {
    goto LABEL_225;
  }
  uint64_t v203 = a1;
  do
  {
    v220 = (__n128 *)&v220;
    v221 = &v220;
    uint64_t v222 = 0LL;
    v217 = (__n128 *)&v217;
    v218 = &v217;
    uint64_t v219 = 0LL;
    int v31 = v226;
    if (v226 == &v225) {
      goto LABEL_180;
    }
    char v32 = 0;
    do
    {
      uint64_t v34 = (unint64_t **)(v31 + 2);
      uint64_t v33 = (void *)v31[2];
      if (*(void *)v30 != *v33) {
        goto LABEL_76;
      }
      *(void *)v228 = 0LL;
      uint64_t v215 = 0LL;
      double v216 = 0.0;
      double v35 = v30[1];
      double v36 = v30[2];
      uint64_t v37 = (std::__shared_weak_count *)v31[3];
      int v212 = v33;
      v213 = v37;
      uint64_t v214 = 0LL;
      if (v37)
      {
        p_shared_owners = (unint64_t *)&v37->__shared_owners_;
        do
          unint64_t v39 = __ldxr(p_shared_owners);
        while (__stxr(v39 + 1, p_shared_owners));
      }

      BOOL v40 = sub_100D73024(a3, (uint64_t *)&v212, (double *)&v215, (double *)v228, v35, v36);
      int v41 = v213;
      if (v213)
      {
        uint64_t v42 = (unint64_t *)&v213->__shared_owners_;
        do
          unint64_t v43 = __ldaxr(v42);
        while (__stlxr(v43 - 1, v42));
        if (!v43)
        {
          ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
          std::__shared_weak_count::__release_weak(v41);
        }
      }

      double v44 = v30[3];
      double v45 = v30[4];
      uint64_t v46 = (std::__shared_weak_count *)v31[3];
      uint64_t v210 = v31[2];
      __int16 v211 = v46;
      if (v46)
      {
        __int16 v47 = (unint64_t *)&v46->__shared_owners_;
        do
          unint64_t v48 = __ldxr(v47);
        while (__stxr(v48 + 1, v47));
      }

      BOOL v49 = sub_100D73024(a3, &v210, (double *)&v214, &v216, v44, v45);
      uint64_t v50 = v211;
      if (v211)
      {
        uint64_t v51 = (unint64_t *)&v211->__shared_owners_;
        do
          unint64_t v52 = __ldaxr(v51);
        while (__stlxr(v52 - 1, v51));
        if (!v52)
        {
          ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
          std::__shared_weak_count::__release_weak(v50);
          if (!v40) {
            goto LABEL_56;
          }
LABEL_55:
          sub_100C7865C(&v220, (__n128 *)v31 + 1);
          goto LABEL_56;
        }
      }

      if (v40) {
        goto LABEL_55;
      }
LABEL_56:
      if (v49)
      {
        sub_100C7865C(&v217, (__n128 *)v31 + 1);
        if (v40)
        {
          if (vabdd_f64(*(double *)v228, v216) < 0.0001)
          {
            if (qword_1019348B0 != -1) {
              dispatch_once(&qword_1019348B0, &stru_1018819B8);
            }
            double v167 = (os_log_s *)qword_1019348B8;
            if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
            {
              uint64_t v168 = *(void *)(v203 + 8);
              unint64_t v169 = *((void *)v30 + 1);
              unint64_t v170 = *((void *)v30 + 2);
              double v171 = v30[3];
              unint64_t v172 = *((void *)v30 + 4);
              *(_DWORD *)buf = 134350081;
              *(void *)&uint8_t buf[4] = v168;
              __int16 v246 = 2049;
              unint64_t v247 = v169;
              __int16 v248 = 2049;
              unint64_t v249 = v170;
              __int16 v250 = 2049;
              double v251 = v171;
              __int16 v252 = 2049;
              unint64_t v253 = v172;
              _os_log_impl( (void *)&_mh_execute_header,  v167,  OS_LOG_TYPE_ERROR,  "CLMM,%{public}.1lf,routeHints,road search, invalid data encountered, same start and end route coords, no t using routehints,sLat,%{private}.7lf,sLon,%{private}.7lf,eLat,%{private}.7lf,eLon,%{private}.7lf",  buf,  0x34u);
            }

            if (sub_1002921D0(115, 0))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1019348B0 != -1) {
                dispatch_once(&qword_1019348B0, &stru_1018819B8);
              }
              uint64_t v189 = *(void *)(v203 + 8);
              unint64_t v190 = *((void *)v30 + 1);
              unint64_t v191 = *((void *)v30 + 2);
              double v192 = v30[3];
              unint64_t v193 = *((void *)v30 + 4);
              int v235 = 134350081;
              uint64_t v236 = v189;
              __int16 v237 = 2049;
              unint64_t v238 = v190;
              __int16 v239 = 2049;
              unint64_t v240 = v191;
              __int16 v241 = 2049;
              double v242 = v192;
              __int16 v243 = 2049;
              unint64_t v244 = v193;
              LODWORD(v200) = 52;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,%{public}.1lf,routeHints,road search, invalid data encountered, same start and end route coords, no t using routehints,sLat,%{private}.7lf,sLon,%{private}.7lf,eLat,%{private}.7lf,eLon,%{private}.7lf",  &v235,  v200);
              __int16 v195 = (char *)v194;
              sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLParticleMapMatcherCommon::determineRouteHintRoadVectors(const CLMapCrumb &, const CLMapGeometryPt r, CLDistanceCalc &, CLMapsRouteHintData &, std::vector<CLMapGeometry::DistanceQueryResult> &, double, BOOL)",  "%s\n",  v194);
              if (v195 != buf) {
                free(v195);
              }
            }

            uint64_t v174 = *a5;
            for (uint64_t j = a5[1]; j != v174; uint64_t j = sub_10000AE14(j - 56))
              ;
            a5[1] = v174;
            sub_100890314((uint64_t *)&v217);
            sub_100890314((uint64_t *)&v220);
            BOOL v18 = 0LL;
            goto LABEL_226;
          }

          if (*(double *)v228 >= v216)
          {
            float v53 = *((float *)v31 + 10) + 180.0;
            *((float *)v31 + 10) = v53;
            sub_100292890(v53);
            *(float *)&double v54 = v54;
            *((_DWORD *)v31 + 10) = LODWORD(v54);
            *((_BYTE *)v31 + 36) ^= 1u;
          }

          int v55 = (std::__shared_weak_count *)v31[3];
          uint64_t v208 = v31[2];
          __int16 v209 = v55;
          if (v55)
          {
            uint64_t v56 = (unint64_t *)&v55->__shared_owners_;
            do
              unint64_t v57 = __ldxr(v56);
            while (__stxr(v57 + 1, v56));
          }

          sub_100BDA324((uint64_t)&v231, (uint64_t)&v208, *((_BYTE *)v31 + 36));
          uint64_t v58 = v209;
          if (v209)
          {
            __int128 v59 = (unint64_t *)&v209->__shared_owners_;
            do
              unint64_t v60 = __ldaxr(v59);
            while (__stlxr(v60 - 1, v59));
            if (!v60)
            {
              ((void (*)(std::__shared_weak_count *))v58->__on_zero_shared)(v58);
              std::__shared_weak_count::__release_weak(v58);
            }
          }

          if (!sub_100D734E8((uint64_t)&v223, (uint64_t)&v231))
          {
            *(void *)buf = &v231;
            *((_BYTE *)sub_100D73550(&v223, (uint64_t)&v231, (uint64_t)&unk_1012CF090, (_OWORD **)buf) + 56) = 1;
            unint64_t v139 = a5[1];
            if (v139 >= a5[2])
            {
              uint64_t v145 = sub_100D73670(a5, (uint64_t)(v31 + 2));
            }

            else
            {
              *(void *)unint64_t v139 = v31[2];
              uint64_t v140 = v31[3];
              *(void *)(v139 + 8) = v140;
              if (v140)
              {
                uint64_t v141 = (unint64_t *)(v140 + 8);
                do
                  unint64_t v142 = __ldxr(v141);
                while (__stxr(v142 + 1, v141));
              }

              __int128 v143 = *((_OWORD *)v31 + 2);
              __int128 v144 = *((_OWORD *)v31 + 3);
              *(void *)(v139 + 48) = v31[8];
              *(_OWORD *)(v139 + 16) = v143;
              *(_OWORD *)(v139 + 32) = v144;
              uint64_t v145 = v139 + 56;
            }

            a5[1] = v145;
            if (qword_1019348B0 != -1) {
              dispatch_once(&qword_1019348B0, &stru_1018819B8);
            }
            __int16 v146 = (os_log_s *)qword_1019348B8;
            if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v147 = *(void *)(v203 + 8);
              unint64_t v148 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a4[2] - a4[1]) >> 3);
              double v149 = *v30;
              unint64_t v150 = **v34;
              *(_DWORD *)buf = 134350081;
              *(void *)&uint8_t buf[4] = v147;
              __int16 v246 = 2050;
              unint64_t v247 = v227;
              __int16 v248 = 2050;
              unint64_t v249 = v148;
              __int16 v250 = 2049;
              double v251 = v149;
              __int16 v252 = 2049;
              unint64_t v253 = v150;
              _os_log_impl( (void *)&_mh_execute_header,  v146,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}.1lf,routeHints,road search,roadList,%{public}lu,routeRoads,%{public}lu,routeID,%{private} lld,matched,%{private}lld",  buf,  0x34u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1019348B0 != -1) {
                dispatch_once(&qword_1019348B0, &stru_1018819B8);
              }
              uint64_t v151 = *(void *)(v203 + 8);
              unint64_t v152 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a4[2] - a4[1]) >> 3);
              double v153 = *v30;
              unint64_t v154 = **v34;
              int v235 = 134350081;
              uint64_t v236 = v151;
              __int16 v237 = 2050;
              unint64_t v238 = v227;
              __int16 v239 = 2050;
              unint64_t v240 = v152;
              __int16 v241 = 2049;
              double v242 = v153;
              __int16 v243 = 2049;
              unint64_t v244 = v154;
              LODWORD(v200) = 52;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}.1lf,routeHints,road search,roadList,%{public}lu,routeRoads,%{public}lu,routeID,%{private} lld,matched,%{private}lld",  &v235,  v200);
              __int16 v156 = (char *)v155;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMapMatcherCommon::determineRouteHintRoadVectors(const CLMapCrumb &, const CLMapGeometryPt r, CLDistanceCalc &, CLMapsRouteHintData &, std::vector<CLMapGeometry::DistanceQueryResult> &, double, BOOL)",  "%s\n",  v155);
              if (v156 != buf) {
                free(v156);
              }
            }

            goto LABEL_180;
          }

          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_1018819B8);
          }
          uint64_t v61 = (os_log_s *)qword_1019348B8;
          if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v62 = *(void *)(v203 + 8);
            unint64_t v63 = **v34;
            *(_DWORD *)buf = 134349313;
            *(void *)&uint8_t buf[4] = v62;
            __int16 v246 = 2049;
            unint64_t v247 = v63;
            _os_log_impl( (void *)&_mh_execute_header,  v61,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}.1lf,routeHints,road search,road already present,%{private}lld",  buf,  0x16u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1019348B0 != -1) {
              dispatch_once(&qword_1019348B0, &stru_1018819B8);
            }
            uint64_t v64 = *(void *)(v203 + 8);
            unint64_t v65 = **v34;
            int v235 = 134349313;
            uint64_t v236 = v64;
            __int16 v237 = 2049;
            unint64_t v238 = v65;
            LODWORD(v200) = 22;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}.1lf,routeHints,road search,road already present,%{private}lld",  &v235,  v200);
            int v67 = (char *)v66;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMapMatcherCommon::determineRouteHintRoadVectors(const CLMapCrumb &, const CLMapGeometryPtr, CLDistanceCalc &, CLMapsRouteHintData &, std::vector<CLMapGeometry::DistanceQueryResult> &, double, BOOL)",  "%s\n",  v66);
            if (v67 != buf) {
              free(v67);
            }
          }

          char v32 = 1;
        }
      }

LABEL_225:
  BOOL v18 = a5[1] != *a5;
LABEL_226:
  sub_100008390((uint64_t)&v223, v224[0]);
LABEL_227:
  sub_100890314(&v225);
  return v18;
}

          *(void *)(a1 + 72) = v82;
          goto LABEL_274;
        case 9u:
          if ((_DWORD)v25 == 2)
          {
            if ((PB::Reader::placeMark(this, v170, v25, a4) & 1) != 0) {
              return 0LL;
            }
            if (*((void *)this + 1) < *((void *)this + 2) && !*((_BYTE *)this + 24))
            {
              uint64_t v34 = *(char **)(a1 + 16);
              do
              {
                if ((unint64_t)v34 >= *v11)
                {
                  double v86 = (char *)*v10;
                  int v87 = (v34 - (_BYTE *)*v10) >> 2;
                  uint64_t v88 = v87 + 1;
                  unint64_t v89 = *v11 - (void)v86;
                  if (v89 >> 1 > v88) {
                    uint64_t v88 = v89 >> 1;
                  }
                  else {
                    uint64_t v90 = v88;
                  }
                  if (v90)
                  {
                    __int16 v91 = (char *)sub_10000956C((uint64_t)v11, v90);
                    double v86 = *(char **)(a1 + 8);
                    uint64_t v34 = *(char **)(a1 + 16);
                  }

                  else
                  {
                    __int16 v91 = 0LL;
                  }

                  unint64_t v92 = &v91[4 * v87];
                  *(_DWORD *)unint64_t v92 = 0;
                  __int16 v93 = v92 + 4;
                  while (v34 != v86)
                  {
                    uint64_t v94 = *((_DWORD *)v34 - 1);
                    v34 -= 4;
                    *((_DWORD *)v92 - 1) = v94;
                    v92 -= 4;
                  }

                  *(void *)(a1 + 8) = v92;
                  *(void *)(a1 + 16) = v93;
                  *(void *)(a1 + 24) = &v91[4 * v90];
                  if (v86) {
                    operator delete(v86);
                  }
                  uint64_t v34 = v93;
                }

                else
                {
                  *(_DWORD *)uint64_t v34 = 0;
                  v34 += 4;
                }

                *(void *)(a1 + 16) = v34;
                uint64_t v96 = *((void *)this + 1);
                unint64_t v95 = *((void *)this + 2);
                unint64_t v97 = *(void *)this;
                if (v96 <= 0xFFFFFFFFFFFFFFF5LL && v96 + 10 <= v95)
                {
                  __int128 v104 = 0;
                  __int128 v105 = 0;
                  uint64_t v106 = 0LL;
                  while (1)
                  {
                    __int16 v107 = v96 + 1;
                    *((void *)this + 1) = v96 + 1;
                    uint64_t v108 = *(_BYTE *)(v97 + v96);
                    v106 |= (unint64_t)(v108 & 0x7F) << v104;
                    if ((v108 & 0x80) == 0) {
                      goto LABEL_152;
                    }
                    v104 += 7;
                    uint64_t v96 = v107;
                    __int16 v47 = v105++ > 8;
                    if (v47)
                    {
                      LODWORD(v106) = 0;
                      goto LABEL_152;
                    }
                  }
                }

                __int16 v99 = 0;
                unint64_t v100 = 0;
                uint64_t v106 = 0LL;
                if (v95 <= v96) {
                  __int16 v101 = *((void *)this + 1);
                }
                else {
                  __int16 v101 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v101 == v96)
                  {
LABEL_190:
                    *((_BYTE *)this + 24) = 1;
                    *((_DWORD *)v34 - 1) = 0;
                    goto LABEL_191;
                  }

                  int v102 = v96++;
                  unint64_t v103 = *(_BYTE *)(v97 + v102);
                  *((void *)this + 1) = v96;
                  v106 |= (unint64_t)(v103 & 0x7F) << v99;
                  if ((v103 & 0x80) == 0) {
                    break;
                  }
                  v99 += 7;
                  __int16 v47 = v100++ > 8;
                  if (v47)
                  {
                    LODWORD(v106) = 0;
                    goto LABEL_151;
                  }
                }

                if (*((_BYTE *)this + 24)) {
                  LODWORD(v106) = 0;
                }
LABEL_151:
                __int16 v107 = v102 + 1;
LABEL_152:
                *((_DWORD *)v34 - 1) = v106;
              }

              while (v107 < v95 && !*((_BYTE *)this + 24));
            }

void sub_100D7052C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, char a37, void *a38, uint64_t a39, uint64_t a40)
{
}

uint64_t sub_100D705F4(uint64_t a1)
{
  uint64_t v1 = (void *)a1;
  double v2 = (double *)(a1 + 4120);
  sub_100BDD018((double *)(a1 + 4120), *(double *)(a1 + 88));
  uint64_t v3 = v1[510];
  uint64_t v4 = v1[509];
  if (v3 != v4)
  {
    sub_100D74278((uint64_t)(v1 + 512), v4, v1[510], 0xF83E0F83E0F83E1LL * ((v3 - v4) >> 3));
    uint64_t v5 = v1[510];
    uint64_t v3 = v1[509];
    if (v5 != v3)
    {
      do
      {
        uint64_t v6 = v5 - 264;
        sub_10000AE14(v5 - 56);
        uint64_t v5 = v6;
      }

      while (v6 != v3);
    }
  }

  v1[510] = v3;
  if (!*((_BYTE *)v1 + 114)) {
    return 0LL;
  }
  if (v1[506] == v1[507]) {
    return 0LL;
  }
  uint64_t v7 = v1[142];
  uint64_t v8 = v1[1];
  uint64_t v9 = (std::__shared_weak_count *)v1[2];
  uint64_t v187 = v8;
  uint64_t v188 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      unint64_t v11 = __ldxr(p_shared_owners);
    while (__stxr(v11 + 1, p_shared_owners));
  }

  if (!v8)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_1018819B8);
    }
    uint64_t v72 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v72,  OS_LOG_TYPE_ERROR,  "CLMM,Unexpected,invalid geometry pointer,generateRouteHint",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_1018819B8);
      }
      *(_WORD *)uint64_t v203 = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,Unexpected,invalid geometry pointer,generateRouteHint",  v203,  2);
      uint64_t v161 = (char *)v160;
      sub_10029211C("Generic", 1LL, 0, 0LL, "BOOL CLParticleMapMatcher::generateRouteHintMeasurement()", "%s\n", v160);
      if (v161 != buf) {
        free(v161);
      }
    }

    uint64_t v70 = 0LL;
    goto LABEL_204;
  }

  uint64_t v184 = 0LL;
  unint64_t v185 = 0LL;
  unint64_t v186 = 0LL;
  double v173 = v1;
  if (*((_BYTE *)v1 + 2232))
  {
    sub_100D5DAC4(v1 + 232, (uint64_t)v183);
    uint64_t v12 = (__n128 *)v1[506];
    if (v12 != (__n128 *)v1[507])
    {
      while (1)
      {
        unint64_t v13 = v12->n128_u64[1];
        unint64_t v181 = v12->n128_u64[0];
        uint64_t v182 = (std::__shared_weak_count *)v13;
        if (v13)
        {
          uint64_t v14 = (unint64_t *)(v13 + 8);
          do
            unint64_t v15 = __ldxr(v14);
          while (__stxr(v15 + 1, v14));
        }

        sub_100BDA324((uint64_t)buf, (uint64_t)&v181, v12[1].n128_i8[4]);
        BOOL v16 = sub_100BDA328((uint64_t)v183, (uint64_t)buf);
        unint64_t v17 = v182;
        if (v182)
        {
          BOOL v18 = (unint64_t *)&v182->__shared_owners_;
          do
            unint64_t v19 = __ldaxr(v18);
          while (__stlxr(v19 - 1, v18));
          if (!v19)
          {
            ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
            std::__shared_weak_count::__release_weak(v17);
          }
        }

        if (v16) {
          break;
        }
        uint64_t v12 = (__n128 *)((char *)v12 + 56);
        if (v12 == (__n128 *)v1[507]) {
          goto LABEL_24;
        }
      }

      double v73 = *((double *)v1 + 144);
      double v74 = -1.0;
      if (v73 >= 0.0)
      {
        double v75 = *((double *)v1 + 249);
        double v76 = vabdd_f64(v73, v75);
        if (v75 >= 0.0) {
          double v74 = v76;
        }
        else {
          double v74 = -1.0;
        }
      }

      double v77 = fmax(*((double *)v1 + 225), 0.0) + (float)((float)random() * 4.6566e-10) * 0.25;
      if (v77 <= v74 * 72.0) {
        double v78 = v77;
      }
      else {
        double v78 = v74 * 72.0;
      }
      sub_100BDC7E0((uint64_t)v217, (uint64_t)(v1 + 232));
      unint64_t v178 = (__n128 *)&v178;
      __int16 v179 = &v178;
      unint64_t v180 = 0LL;
      while (v12 != (__n128 *)v1[507])
      {
        sub_100C7865C(&v178, v12);
        uint64_t v12 = (__n128 *)((char *)v12 + 56);
      }

      int v177 = 0;
      if (((*(uint64_t (**)(uint64_t, _BYTE *, __n128 **, int *, double, double))(*(void *)v187 + 56LL))( v187,  v217,  &v178,  &v177,  *(double *)&v218[16],  v78) & 1) != 0)
      {
        if (v180 <= v177)
        {
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_1018819B8);
          }
          unint64_t v135 = (os_log_s *)qword_1019348B8;
          if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 134349568;
            *(void *)&uint8_t buf[4] = v7;
            __int16 v224 = 1026;
            *(_DWORD *)uint64_t v225 = v177;
            *(_WORD *)&v225[4] = 2050;
            *(void *)&v225[6] = v180;
            _os_log_impl( (void *)&_mh_execute_header,  v135,  OS_LOG_TYPE_ERROR,  "CLMM,%{public}.1lf,routeHints,no meas,moveOnRouteRoads,route index,%{public}d,is more than number of route roads,%{public}ld",  buf,  0x1Cu);
          }

          if (!sub_1002921D0(115, 0)) {
            goto LABEL_201;
          }
          bzero(buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_1018819B8);
          }
          *(_DWORD *)uint64_t v203 = 134349568;
          *(void *)&v203[4] = v7;
          *(_WORD *)&v203[12] = 1026;
          *(_DWORD *)&v203[14] = v177;
          *(_WORD *)&v203[18] = 2050;
          *(void *)&v203[20] = v180;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,%{public}.1lf,routeHints,no meas,moveOnRouteRoads,route index,%{public}d,is more than number of route r oads,%{public}ld",  v203,  28);
          float v134 = (char *)v164;
          sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLParticleMapMatcher::generateRouteHintMeasurement()",  "%s\n",  v164);
          goto LABEL_258;
        }

        double v79 = *(float *)&v217[24];
        double v80 = 5.0;
        if (*(double *)&v218[16] <= 0.97 && *(double *)&v218[16] >= 0.03)
        {
          if (*((double *)v1 + 165) <= 0.0 || (double v81 = *((double *)v1 + 154), v81 < 0.0))
          {
            if (qword_1019348B0 != -1) {
              dispatch_once(&qword_1019348B0, &stru_1018819B8);
            }
            double v82 = (os_log_s *)qword_1019348B8;
            if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
            {
              *(_DWORD *)buf = 134349312;
              *(void *)&uint8_t buf[4] = v7;
              __int16 v224 = 2050;
              *(void *)uint64_t v225 = 0x403E000000000000LL;
              _os_log_impl( (void *)&_mh_execute_header,  v82,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}.1lf,routeHints,no meas,moveOnRouteRoads,course deweighted,unc,%{public}.2lf",  buf,  0x16u);
            }

            double v80 = 30.0;
            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1019348B0 != -1) {
                dispatch_once(&qword_1019348B0, &stru_1018819B8);
              }
              *(_DWORD *)uint64_t v203 = 134349312;
              *(void *)&v203[4] = v7;
              *(_WORD *)&v203[12] = 2050;
              *(void *)&v203[14] = 0x403E000000000000LL;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}.1lf,routeHints,no meas,moveOnRouteRoads,course deweighted,unc,%{public}.2lf",  v203,  22);
              unint64_t v169 = (char *)v168;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMapMatcher::generateRouteHintMeasurement()",  "%s\n",  v168);
              if (v169 != buf) {
                free(v169);
              }
            }

            goto LABEL_111;
          }

          double v139 = fmod(v81 - v79, 360.0);
          if (v139 < 0.0) {
            double v139 = v139 + 360.0;
          }
          if (v139 > 180.0) {
            double v139 = v139 + -360.0;
          }
          double v140 = fabs(v139);
          int v141 = *((_DWORD *)v1 + 1010);
          if (v140 >= 135.0)
          {
            *((_DWORD *)v1 + 1010) = v141 + 1;
            if (qword_1019348B0 != -1) {
              dispatch_once(&qword_1019348B0, &stru_1018819B8);
            }
            unint64_t v148 = (os_log_s *)qword_1019348B8;
            if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v149 = v1[154];
              int v150 = *((_DWORD *)v1 + 1010);
              *(_DWORD *)buf = 134349824;
              *(void *)&uint8_t buf[4] = v7;
              __int16 v224 = 2050;
              *(double *)uint64_t v225 = v79;
              *(_WORD *)&v225[8] = 2050;
              *(void *)&v225[10] = v149;
              __int16 v226 = 1026;
              LODWORD(v227) = v150;
              _os_log_impl( (void *)&_mh_execute_header,  v148,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}.1lf,routeHints,no meas,moveOnRouteRoads,routeCourse,%{public}.1lf,is very different than crumb course,%{public}.1lf,rejection,%{public}d",  buf,  0x26u);
            }

            if (!sub_1002921D0(115, 2)) {
              goto LABEL_201;
            }
            bzero(buf, 0x65CuLL);
            if (qword_1019348B0 != -1) {
              dispatch_once(&qword_1019348B0, &stru_1018819B8);
            }
            uint64_t v151 = v1[154];
            int v152 = *((_DWORD *)v1 + 1010);
            *(_DWORD *)uint64_t v203 = 134349824;
            *(void *)&v203[4] = v7;
            *(_WORD *)&v203[12] = 2050;
            *(double *)&v203[14] = v79;
            *(_WORD *)&v203[22] = 2050;
            *(void *)&v203[24] = v151;
            *(_WORD *)&v203[32] = 1026;
            *(_DWORD *)&v203[34] = v152;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}.1lf,routeHints,no meas,moveOnRouteRoads,routeCourse,%{public}.1lf,is very different than cr umb course,%{public}.1lf,rejection,%{public}d",  v203,  38);
            float v134 = (char *)v153;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMapMatcher::generateRouteHintMeasurement()",  "%s\n",  v153);
            goto LABEL_258;
          }

          if (v140 > 60.0 && v141 >= 1)
          {
            *((_DWORD *)v1 + 1010) = v141 + 1;
            if (qword_1019348B0 != -1) {
              dispatch_once(&qword_1019348B0, &stru_1018819B8);
            }
            unint64_t v154 = (os_log_s *)qword_1019348B8;
            if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v155 = v1[154];
              int v156 = *((_DWORD *)v1 + 1010);
              *(_DWORD *)buf = 134349824;
              *(void *)&uint8_t buf[4] = v7;
              __int16 v224 = 2050;
              *(double *)uint64_t v225 = v79;
              *(_WORD *)&v225[8] = 2050;
              *(void *)&v225[10] = v155;
              __int16 v226 = 1026;
              LODWORD(v227) = v156;
              _os_log_impl( (void *)&_mh_execute_header,  v154,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}.1lf,routeHints,no meas,moveOnRouteRoads,routeCourse,%{public}.1lf,is different than crumb course,%{public}.1lf, and rejections are high,rejection,%{public}d",  buf,  0x26u);
            }

            if (!sub_1002921D0(115, 2)) {
              goto LABEL_201;
            }
            bzero(buf, 0x65CuLL);
            if (qword_1019348B0 != -1) {
              dispatch_once(&qword_1019348B0, &stru_1018819B8);
            }
            uint64_t v157 = v1[154];
            int v158 = *((_DWORD *)v1 + 1010);
            *(_DWORD *)uint64_t v203 = 134349824;
            *(void *)&v203[4] = v7;
            *(_WORD *)&v203[12] = 2050;
            *(double *)&v203[14] = v79;
            *(_WORD *)&v203[22] = 2050;
            *(void *)&v203[24] = v157;
            *(_WORD *)&v203[32] = 1026;
            *(_DWORD *)&v203[34] = v158;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}.1lf,routeHints,no meas,moveOnRouteRoads,routeCourse,%{public}.1lf,is different than crumb c ourse,%{public}.1lf, and rejections are high,rejection,%{public}d",  v203,  38);
            float v134 = (char *)v159;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMapMatcher::generateRouteHintMeasurement()",  "%s\n",  v159);
LABEL_258:
            if (v134 != buf) {
              free(v134);
            }
LABEL_201:
            sub_100890314((uint64_t *)&v178);
            sub_100BDC958((uint64_t)v217);
LABEL_202:
            uint64_t v70 = 0LL;
            goto LABEL_203;
          }

          if (v140 > 80.0)
          {
            if (qword_1019348B0 != -1) {
              dispatch_once(&qword_1019348B0, &stru_1018819B8);
            }
            __int128 v143 = (os_log_s *)qword_1019348B8;
            if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v144 = v1[154];
              *(_DWORD *)buf = 134349568;
              *(void *)&uint8_t buf[4] = v7;
              __int16 v224 = 2050;
              *(double *)uint64_t v225 = v79;
              *(_WORD *)&v225[8] = 2050;
              *(void *)&v225[10] = v144;
              _os_log_impl( (void *)&_mh_execute_header,  v143,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}.1lf,routeHints,skipping,moveOnRouteRoads meas,routeCourse,%{public}.1lf,is somewhat diffe rent than crumb course,%{public}.1lf",  buf,  0x20u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1019348B0 != -1) {
                dispatch_once(&qword_1019348B0, &stru_1018819B8);
              }
              uint64_t v145 = v1[154];
              *(_DWORD *)uint64_t v203 = 134349568;
              *(void *)&v203[4] = v7;
              *(_WORD *)&v203[12] = 2050;
              *(double *)&v203[14] = v79;
              *(_WORD *)&v203[22] = 2050;
              *(void *)&v203[24] = v145;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}.1lf,routeHints,skipping,moveOnRouteRoads meas,routeCourse,%{public}.1lf,is somewhat diffe rent than crumb course,%{public}.1lf",  v203,  32);
              uint64_t v147 = (char *)v146;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMapMatcher::generateRouteHintMeasurement()",  "%s\n",  v146);
              if (v147 != buf) {
                free(v147);
              }
            }

            goto LABEL_126;
          }
        }

void sub_100D72504( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, char a34, uint64_t a35, uint64_t a36, char a37)
{
  STACK[0x2C0] = (unint64_t)&a34;
  sub_100D73A50((void ***)&STACK[0x2C0]);
  sub_10000AE14((uint64_t)&a37);
  _Unwind_Resume(a1);
}

void sub_100D725E4(uint64_t a1, int a2)
{
  __int128 v24 = 0u;
  __int128 v25 = 0u;
  __int128 v29 = 0u;
  __int128 v30 = 0u;
  __int128 v31 = 0u;
  memset(v32, 0, 27);
  memset(&v32[32], 0, 48);
  *(_OWORD *)&v23[14] = 0u;
  *(_OWORD *)int v23 = 0u;
  __int128 v22 = 0u;
  __int128 v21 = 0u;
  __int128 v20 = 0u;
  __int128 v19 = 0u;
  *(_OWORD *)__p = 0u;
  __int128 v17 = 0u;
  __int128 v16 = 0u;
  __int128 v13 = *(_OWORD *)(a1 + 80);
  uint64_t v2 = *(void *)(a1 + 104);
  uint64_t v3 = *(void *)(a1 + 112);
  uint64_t v4 = *(void *)(a1 + 120);
  uint64_t v14 = *(void *)(a1 + 96);
  uint64_t v15 = v3;
  *(_OWORD *)int v23 = *(_OWORD *)(a1 + 160);
  uint64_t v5 = *(void *)(a1 + 184);
  *(void *)&v23[16] = *(void *)(a1 + 176);
  uint64_t v6 = *(void *)(a1 + 144);
  *((void *)&v16 + 1) = *(void *)(a1 + 136);
  *(void *)&__int128 v17 = v2;
  *(void *)&__int128 v22 = v6;
  *((void *)&v22 + 1) = v4;
  uint64_t v7 = 0LL;
  uint64_t v10 = 0LL;
  uint64_t v11 = 0LL;
  unint64_t v12 = 0xBFF0000000000000LL;
  uint64_t v27 = 0LL;
  int v28 = 0;
  __int16 v26 = 0;
  uint64_t v33 = 0LL;
  unint64_t v34 = 0xBFF0000000000000LL;
  v23[28] = *(_BYTE *)(a1 + 152);
  uint64_t v9 = v5;
  int8x16_t v8 = vextq_s8(*(int8x16_t *)(a1 + 192), *(int8x16_t *)(a1 + 192), 8uLL);
  sub_100308AAC(a1, (uint64_t)&v7, a2);
  if (SHIBYTE(v19) < 0) {
    operator delete(__p[1]);
  }
}

void sub_100D726D4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, void *__p, uint64_t a26, int a27, __int16 a28, char a29, char a30)
{
  if (a30 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100D726F0(uint64_t *a1, uint64_t a2)
{
  unint64_t v3 = a1[1];
  if (v3 >= a1[2])
  {
    uint64_t result = sub_100D7466C(a1, a2);
  }

  else
  {
    *(_OWORD *)unint64_t v3 = *(_OWORD *)a2;
    __int128 v4 = *(_OWORD *)(a2 + 16);
    __int128 v5 = *(_OWORD *)(a2 + 32);
    __int128 v6 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(v3 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(v3 + 64) = v6;
    *(_OWORD *)(v3 + 16) = v4;
    *(_OWORD *)(v3 + 32) = v5;
    __int128 v7 = *(_OWORD *)(a2 + 80);
    __int128 v8 = *(_OWORD *)(a2 + 96);
    __int128 v9 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(v3 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(v3 + 128) = v9;
    *(_OWORD *)(v3 + 80) = v7;
    *(_OWORD *)(v3 + 96) = v8;
    __int128 v10 = *(_OWORD *)(a2 + 144);
    __int128 v11 = *(_OWORD *)(a2 + 160);
    __int128 v12 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(v3 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(v3 + 192) = v12;
    *(_OWORD *)(v3 + 144) = v10;
    *(_OWORD *)(v3 + 160) = v11;
    uint64_t v13 = *(void *)(a2 + 216);
    *(void *)(v3 + 208) = *(void *)(a2 + 208);
    *(void *)(v3 + 216) = v13;
    if (v13)
    {
      uint64_t v14 = (unint64_t *)(v13 + 8);
      do
        unint64_t v15 = __ldxr(v14);
      while (__stxr(v15 + 1, v14));
    }

    __int128 v16 = *(_OWORD *)(a2 + 224);
    __int128 v17 = *(_OWORD *)(a2 + 240);
    *(void *)(v3 + 256) = *(void *)(a2 + 256);
    *(_OWORD *)(v3 + 224) = v16;
    *(_OWORD *)(v3 + 240) = v17;
    uint64_t result = v3 + 264;
  }

  a1[1] = result;
  return result;
}

void sub_100D72794(double *a1)
{
  a1[7] = 0.0;
  a1[8] = 0.0;
  a1[9] = 0.0;
  uint64_t v1 = *((void *)a1 + 11);
  uint64_t v2 = *((void *)a1 + 12);
  if (v1 != v2)
  {
    double v4 = 0.0;
    double v5 = 0.0;
    uint64_t v6 = *((void *)a1 + 11);
    do
    {
      if (*(_DWORD *)(v6 + 64) == 2)
      {
        double v7 = *(double *)(v6 + 24);
        double v4 = v4 + *(double *)v6 * v7;
        double v5 = v5 + *(double *)(v6 + 16) * v7;
      }

      v6 += 72LL;
    }

    while (v6 != v2);
    a1[7] = v4;
    double v8 = v5 + 0.0;
    a1[9] = v5 + 0.0;
    while (v1 != v2)
    {
      if (*(_DWORD *)(v1 + 64) != 2)
      {
        double v9 = *(double *)(v1 + 24);
        double v10 = *(double *)v1 * v9;
        if (v4 > 0.0)
        {
          double v11 = log(v4);
          double v12 = log(v10);
          double v10 = exp(v11 + v12);
        }

        a1[7] = v10;
        double v8 = v8 + *(double *)(v1 + 16) * v9;
        a1[9] = v8;
        double v4 = v10;
      }

      v1 += 72LL;
    }
  }

uint64_t sub_100D72880@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(result + 1024);
  *a2 = *(void *)(result + 1016);
  a2[1] = v2;
  if (v2)
  {
    unint64_t v3 = (unint64_t *)(v2 + 8);
    do
      unint64_t v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }

  return result;
}

uint64_t sub_100D728A8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 1036);
}

double sub_100D728B0(uint64_t a1)
{
  *(_BYTE *)a1 = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_DWORD *)(a1 + 24) = 0;
  *(_WORD *)(a1 + 28) = 1;
  *(_DWORD *)(a1 + 32) = 0;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_BYTE *)(a1 + 88) = 0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(void *)(a1 + 128) = 0LL;
  __asm { FMOV            V1.2D, #-1.0 }

  *(_OWORD *)(a1 + 136) = _Q1;
  *(_OWORD *)(a1 + 152) = 0u;
  *(void *)(a1 + 168) = 0xBFF0000000000000LL;
  *(void *)(a1 + 392) = 0LL;
  *(_DWORD *)(a1 + 400) = 0;
  *(_WORD *)(a1 + 384) = 0;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 408) = 0u;
  *(_OWORD *)(a1 + 424) = 0u;
  *(_OWORD *)(a1 + 440) = 0u;
  *(_OWORD *)(a1 + 456) = 0u;
  *(_OWORD *)(a1 + 467) = 0u;
  *(_OWORD *)(a1 + 488) = 0u;
  *(_OWORD *)(a1 + 504) = 0u;
  *(_OWORD *)(a1 + 520) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 334) = 0u;
  *(void *)(a1 + 544) = 0xBFF0000000000000LL;
  *(void *)(a1 + 536) = 0LL;
  *(_BYTE *)(a1 + 552) = 0;
  *(_OWORD *)(a1 + 672) = 0u;
  *(_DWORD *)(a1 + 688) = 0;
  *(_OWORD *)(a1 + 560) = 0u;
  *(_OWORD *)(a1 + 576) = 0u;
  *(_OWORD *)(a1 + 592) = 0u;
  *(_OWORD *)(a1 + 608) = 0u;
  *(_OWORD *)(a1 + 624) = 0u;
  *(_DWORD *)(a1 + 639) = 0;
  *(_BYTE *)(a1 + 664) = 0;
  *(_OWORD *)(a1 + 648) = 0u;
  *(_WORD *)(a1 + 692) = 1;
  *(_DWORD *)(a1 + 696) = 0;
  *(_BYTE *)(a1 + 752) = 0;
  *(_OWORD *)(a1 + 720) = 0u;
  *(_OWORD *)(a1 + 736) = 0u;
  *(_OWORD *)(a1 + 704) = 0u;
  *(_OWORD *)(a1 + 822) = 0u;
  *(_OWORD *)(a1 + 808) = 0u;
  *(_OWORD *)(a1 + 792) = 0u;
  *(_OWORD *)(a1 + 776) = 0u;
  *(_OWORD *)(a1 + 760) = 0u;
  return result;
}

uint64_t sub_100D729A0(uint64_t a1)
{
  *(void *)a1 = 0LL;
  *(_DWORD *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 41) = 0u;
  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + 72) = 0LL;
  __asm { FMOV            V1.2D, #-1.0 }

  *(_OWORD *)(a1 + 80) = _Q1;
  *(void *)(a1 + 96) = 0LL;
  *(void *)(a1 + 104) = 0LL;
  *(void *)(a1 + 112) = 0xBFF0000000000000LL;
  *(void *)(a1 + 336) = 0LL;
  *(_DWORD *)(a1 + 344) = 0;
  *(_WORD *)(a1 + 328) = 0;
  *(_OWORD *)(a1 + 296) = 0u;
  *(_OWORD *)(a1 + 312) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 400) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 411) = 0u;
  *(_OWORD *)(a1 + 448) = 0u;
  *(_OWORD *)(a1 + 464) = 0u;
  *(_OWORD *)(a1 + 432) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 278) = 0u;
  *(void *)(a1 + 488) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 480) = 0;
  *(_DWORD *)(a1 + 484) = 0;
  sub_100D2D9A4(a1 + 496);
  return a1;
}

void sub_100D72A60(_Unwind_Exception *exception_object)
{
}

void sub_100D72A7C(id a1)
{
  qword_1019348B8 = (uint64_t)os_log_create("com.apple.locationd.Position", "MapMatcher");
}

uint64_t sub_100D72AA8(uint64_t a1)
{
  *(_OWORD *)(a1 + 28) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_WORD *)(a1 + 44) = 1;
  *(_DWORD *)(a1 + 48) = 0;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_BYTE *)(a1 + 104) = 0;
  *(_DWORD *)(a1 + 140) = 0;
  *(_BYTE *)(a1 + 144) = 0;
  *(void *)(a1 + 120) = 0LL;
  *(void *)(a1 + 128) = 0LL;
  *(void *)(a1 + 112) = 0LL;
  *(_BYTE *)(a1 + 136) = 0;
  sub_100D72C18(a1 + 152);
  *(_OWORD *)(a1 + 4912) = 0u;
  __asm { FMOV            V0.2D, #-1.0 }

  *(_OWORD *)(a1 + 4928) = _Q0;
  *(_OWORD *)(a1 + 4944) = 0u;
  *(void *)(a1 + 4960) = 0xBFF0000000000000LL;
  *(void *)(a1 + 5184) = 0LL;
  *(_DWORD *)(a1 + 5192) = 0;
  *(_WORD *)(a1 + 5176) = 0;
  *(_OWORD *)(a1 + 5144) = 0u;
  *(_OWORD *)(a1 + 5160) = 0u;
  *(_OWORD *)(a1 + 5200) = 0u;
  *(_OWORD *)(a1 + 5216) = 0u;
  *(_OWORD *)(a1 + 5232) = 0u;
  *(_OWORD *)(a1 + 5248) = 0u;
  *(_OWORD *)(a1 + 5259) = 0u;
  *(_OWORD *)(a1 + 5280) = 0u;
  *(_OWORD *)(a1 + 5296) = 0u;
  *(_OWORD *)(a1 + 5312) = 0u;
  *(_OWORD *)(a1 + 5126) = 0u;
  *(_OWORD *)(a1 + 5112) = 0u;
  *(_OWORD *)(a1 + 5096) = 0u;
  *(_OWORD *)(a1 + 5080) = 0u;
  *(_OWORD *)(a1 + 5064) = 0u;
  *(_OWORD *)(a1 + 5048) = 0u;
  *(_OWORD *)(a1 + 5032) = 0u;
  *(_OWORD *)(a1 + 5016) = 0u;
  *(_OWORD *)(a1 + 5000) = 0u;
  *(_OWORD *)(a1 + 4984) = 0u;
  *(_OWORD *)(a1 + 4968) = 0u;
  *(void *)(a1 + 5336) = 0xBFF0000000000000LL;
  *(void *)(a1 + 5328) = 0LL;
  *(void *)(a1 + 5360) = 0LL;
  *(_OWORD *)(a1 + 5344) = 0u;
  *(void *)(a1 + 5368) = 0x3FF0000000000000LL;
  bzero((void *)(a1 + 1072), 0xC00uLL);
  return a1;
}

void sub_100D72BBC(_Unwind_Exception *a1)
{
}

uint64_t sub_100D72BD8(uint64_t a1)
{
  return a1;
}

double sub_100D72C18(uint64_t a1)
{
  double result = 0.0;
  *(void *)a1 = 0LL;
  *(_DWORD *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0LL;
  *(void *)(a1 + sub_100BDC958(v1 + 24) = 0LL;
  *(_BYTE *)(a1 + 32) = 1;
  *(void *)(a1 + 40) = 0LL;
  *(void *)(a1 + 56) = 0LL;
  __asm { FMOV            V1.2D, #-1.0 }

  *(_OWORD *)(a1 + 64) = _Q1;
  *(void *)(a1 + 80) = 0LL;
  *(void *)(a1 + 88) = 0LL;
  *(void *)(a1 + 96) = 0xBFF0000000000000LL;
  *(void *)(a1 + 320) = 0LL;
  *(_DWORD *)(a1 + 328) = 0;
  *(_WORD *)(a1 + 312) = 0;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 432) = 0u;
  *(_OWORD *)(a1 + 448) = 0u;
  *(_OWORD *)(a1 + 416) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(void *)(a1 + 464) = 0LL;
  *(_OWORD *)(a1 + 827) = 0u;
  *(void *)(a1 + 472) = 0xBFF0000000000000LL;
  *(void *)(a1 + 480) = 0LL;
  *(void *)(a1 + 488) = 0LL;
  *(_OWORD *)(a1 + 496) = _Q1;
  *(void *)(a1 + 520) = 0LL;
  *(void *)(a1 + 512) = 0LL;
  *(void *)(a1 + 528) = 0xBFF0000000000000LL;
  *(void *)(a1 + 752) = 0LL;
  *(_DWORD *)(a1 + 760) = 0;
  *(_WORD *)(a1 + 744) = 0;
  *(_OWORD *)(a1 + 800) = 0u;
  *(_OWORD *)(a1 + 816) = 0u;
  *(_OWORD *)(a1 + 768) = 0u;
  *(_OWORD *)(a1 + 784) = 0u;
  *(_OWORD *)(a1 + 864) = 0u;
  *(_OWORD *)(a1 + 880) = 0u;
  *(_OWORD *)(a1 + 848) = 0u;
  *(void *)(a1 + 904) = 0xBFF0000000000000LL;
  *(void *)(a1 + 896) = 0LL;
  *(void *)(a1 + 912) = 0LL;
  *(void *)(a1 + 48) = 0LL;
  *(_OWORD *)(a1 + 280) = 0u;
  *(_OWORD *)(a1 + 296) = 0u;
  *(_OWORD *)(a1 + 395) = 0u;
  *(_OWORD *)(a1 + 262) = 0u;
  *(_OWORD *)(a1 + 712) = 0u;
  *(_OWORD *)(a1 + 728) = 0u;
  *(_OWORD *)(a1 + 536) = 0u;
  *(_OWORD *)(a1 + 552) = 0u;
  *(_OWORD *)(a1 + 568) = 0u;
  *(_OWORD *)(a1 + 584) = 0u;
  *(_OWORD *)(a1 + 600) = 0u;
  *(_OWORD *)(a1 + 616) = 0u;
  *(_OWORD *)(a1 + 632) = 0u;
  *(_OWORD *)(a1 + 648) = 0u;
  *(_OWORD *)(a1 + 664) = 0u;
  *(_OWORD *)(a1 + 680) = 0u;
  *(_OWORD *)(a1 + 694) = 0u;
  return result;
}

uint64_t sub_100D72D34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  if (v4)
  {
    double v5 = (unint64_t *)(v4 + 8);
    do
      unint64_t v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + sub_100BDC958(v1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  if (v7)
  {
    double v8 = (unint64_t *)(v7 + 8);
    do
      unint64_t v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }

  __int128 v10 = *(_OWORD *)(a2 + 40);
  __int128 v11 = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = v11;
  *(_OWORD *)(a1 + 40) = v10;
  __int128 v12 = *(_OWORD *)(a2 + 80);
  __int128 v13 = *(_OWORD *)(a2 + 89);
  *(void *)(a1 + 112) = 0LL;
  *(_OWORD *)(a1 + 89) = v13;
  *(_OWORD *)(a1 + 80) = v12;
  *(void *)(a1 + 120) = 0LL;
  *(void *)(a1 + 128) = 0LL;
  sub_100BDD080( (void *)(a1 + 112),  *(const void **)(a2 + 112),  *(void *)(a2 + 120),  0x8E38E38E38E38E39LL * ((uint64_t)(*(void *)(a2 + 120) - *(void *)(a2 + 112)) >> 3));
  uint64_t v14 = *(void *)(a2 + 136);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(void *)(a1 + 136) = v14;
  __int128 v15 = *(_OWORD *)(a2 + 152);
  __int128 v16 = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 168) = v16;
  *(_OWORD *)(a1 + 152) = v15;
  __int128 v17 = *(_OWORD *)(a2 + 312);
  __int128 v19 = *(_OWORD *)(a2 + 264);
  __int128 v18 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v17;
  *(_OWORD *)(a1 + 264) = v19;
  *(_OWORD *)(a1 + 280) = v18;
  __int128 v20 = *(_OWORD *)(a2 + 200);
  __int128 v21 = *(_OWORD *)(a2 + 216);
  __int128 v22 = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 232) = v22;
  *(_OWORD *)(a1 + 216) = v21;
  *(_OWORD *)(a1 + 200) = v20;
  if (*(char *)(a2 + 351) < 0)
  {
    sub_1010DD48C((_BYTE *)(a1 + 328), *(void **)(a2 + 328), *(void *)(a2 + 336));
  }

  else
  {
    __int128 v23 = *(_OWORD *)(a2 + 328);
    *(void *)(a1 + 344) = *(void *)(a2 + 344);
    *(_OWORD *)(a1 + 328) = v23;
  }

  memcpy((void *)(a1 + 352), (const void *)(a2 + 352), 0x118uLL);
  __int128 v24 = *(_OWORD *)(a2 + 632);
  __int128 v25 = *(_OWORD *)(a2 + 648);
  __int128 v26 = *(_OWORD *)(a2 + 680);
  *(_OWORD *)(a1 + 664) = *(_OWORD *)(a2 + 664);
  *(_OWORD *)(a1 + 680) = v26;
  *(_OWORD *)(a1 + 632) = v24;
  *(_OWORD *)(a1 + 648) = v25;
  __int128 v27 = *(_OWORD *)(a2 + 696);
  __int128 v28 = *(_OWORD *)(a2 + 712);
  __int128 v29 = *(_OWORD *)(a2 + 744);
  *(_OWORD *)(a1 + 728) = *(_OWORD *)(a2 + 728);
  *(_OWORD *)(a1 + 744) = v29;
  *(_OWORD *)(a1 + 696) = v27;
  *(_OWORD *)(a1 + 712) = v28;
  __int128 v30 = (_BYTE *)(a1 + 760);
  if (*(char *)(a2 + 783) < 0)
  {
    sub_1010DD48C(v30, *(void **)(a2 + 760), *(void *)(a2 + 768));
  }

  else
  {
    __int128 v31 = *(_OWORD *)(a2 + 760);
    *(void *)(a1 + 776) = *(void *)(a2 + 776);
    *(_OWORD *)__int128 v30 = v31;
  }

  memcpy((void *)(a1 + 784), (const void *)(a2 + 784), 0x120uLL);
  memcpy((void *)(a1 + 1072), (const void *)(a2 + 1072), 0xF00uLL);
  __int128 v32 = *(_OWORD *)(a2 + 4912);
  __int128 v33 = *(_OWORD *)(a2 + 4928);
  __int128 v34 = *(_OWORD *)(a2 + 4944);
  *(_OWORD *)(a1 + 4960) = *(_OWORD *)(a2 + 4960);
  *(_OWORD *)(a1 + 4944) = v34;
  *(_OWORD *)(a1 + 4928) = v33;
  *(_OWORD *)(a1 + 4912) = v32;
  __int128 v35 = *(_OWORD *)(a2 + 4976);
  __int128 v36 = *(_OWORD *)(a2 + 4992);
  __int128 v37 = *(_OWORD *)(a2 + 5008);
  *(_OWORD *)(a1 + 50sub_100BDC958(v1 + 24) = *(_OWORD *)(a2 + 5024);
  *(_OWORD *)(a1 + 5008) = v37;
  *(_OWORD *)(a1 + 4992) = v36;
  *(_OWORD *)(a1 + 4976) = v35;
  double v38 = (_BYTE *)(a1 + 5040);
  if (*(char *)(a2 + 5063) < 0)
  {
    sub_1010DD48C(v38, *(void **)(a2 + 5040), *(void *)(a2 + 5048));
  }

  else
  {
    __int128 v39 = *(_OWORD *)(a2 + 5040);
    *(void *)(a1 + 5056) = *(void *)(a2 + 5056);
    *(_OWORD *)double v38 = v39;
  }

  memcpy((void *)(a1 + 5064), (const void *)(a2 + 5064), 0x118uLL);
  __int128 v40 = *(_OWORD *)(a2 + 5360);
  *(_OWORD *)(a1 + 5344) = *(_OWORD *)(a2 + 5344);
  *(_OWORD *)(a1 + 5360) = v40;
  return a1;
}

void sub_100D72FD0(_Unwind_Exception *a1)
{
}

BOOL sub_100D73024(double *a1, uint64_t *a2, double *a3, double *a4, double a5, double a6)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *(double **)(*a2 + 136);
  unint64_t v8 = *(void *)(*a2 + 144) - (void)v7;
  *a3 = -1.0;
  *a4 = -1.0;
  if ((int)(v8 >> 4) > 1)
  {
    double v14 = *v7;
    double v15 = v7[1];
    *(double *)buf = 0.0;
    v47[0] = 0.0;
    double v43 = 0.0;
    sub_100D2DA44(a1, (double *)buf, v47, &v43, a5, a6, 0.0, v14, v15, 0.0);
    uint64_t v16 = 0LL;
    uint64_t v17 = (v8 >> 4) - 1LL;
    double v18 = 0.0;
    double v19 = 0.0;
    while (1)
    {
      uint64_t v20 = *(void *)(v6 + 136) + v16;
      double v21 = *(double *)(v20 + 16);
      double v22 = *(double *)(v20 + 24);
      double v43 = 0.0;
      v44[0] = 0.0;
      uint64_t v45 = 0LL;
      sub_100D2DA44(a1, &v43, v44, (double *)&v45, a5, a6, 0.0, v21, v22, 0.0);
      double v24 = v43;
      double v23 = v44[0];
      double v25 = (*(double *)buf - v43) * (*(double *)buf - v43) + (v47[0] - v44[0]) * (v47[0] - v44[0]);
      double v26 = 0.0 - *(double *)buf;
      if (v25 >= 0.001)
      {
        double v28 = ((0.0 - v47[0]) * (v44[0] - v47[0]) + v26 * (v43 - *(double *)buf)) / v25;
        if (v28 < 0.0)
        {
          double v30 = v26 * v26 + (0.0 - v47[0]) * (0.0 - v47[0]);
          double v28 = 0.0;
          goto LABEL_11;
        }

        if (v28 > 1.0)
        {
          double v30 = (0.0 - v43) * (0.0 - v43) + (0.0 - v44[0]) * (0.0 - v44[0]);
          double v28 = 1.0;
          goto LABEL_11;
        }

        double v29 = 0.0 - (v47[0] + (v44[0] - v47[0]) * v28);
      }

      else
      {
        double v27 = v26 * v26;
        double v28 = 0.0;
        double v29 = 0.0 - v47[0];
      }

      double v30 = v27 + v29 * v29;
LABEL_11:
      double v31 = sqrt(v25);
      double v32 = sqrt(v30);
      if (*a3 < 0.0 || v32 < *a3)
      {
        *a3 = v32;
        double v19 = v18 + v31 * v28;
      }

      double v18 = v18 + v31;
      *(double *)buf = v24;
      v47[0] = v23;
      v16 += 16LL;
      if (!--v17)
      {
        double v33 = v19 / v18;
        if (v18 < 0.001) {
          double v33 = 0.0;
        }
        *a4 = v33;
        return *a3 < 0.03;
      }
    }
  }

  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_1018819B8);
  }
  __int128 v35 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_DEBUG,  "CLMM,findClosestPointOnRoad,CoordinateCount is <= 1",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_1018819B8);
    }
    LOWORD(v43) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,findClosestPointOnRoad,CoordinateCount is <= 1",  &v43,  2);
    __int128 v39 = (uint8_t *)v38;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLGeoAccessCommon::findClosestPointOnRoad(CLDistanceCalc &, const int, const std::vector<Coordinate> &, const Coordinate &, double &, double &) [Coordinate = GEOLocationCoordinate2D]",  "%s\n",  v38);
    if (v39 != buf) {
      free(v39);
    }
  }

  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_1018819B8);
  }
  __int128 v36 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v36,  OS_LOG_TYPE_ERROR,  "#Warning CLMM, findClosestPointOnRoad returned false",  buf,  2u);
  }

  BOOL v37 = sub_1002921D0(115, 0);
  BOOL result = 0LL;
  if (v37)
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_1018819B8);
    }
    LOWORD(v43) = 0;
    LODWORD(v42) = 2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "#Warning CLMM, findClosestPointOnRoad returned false",  &v43,  v42);
    int v41 = (uint8_t *)v40;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLGeoMapFeatureAccessGeometryCommon::isCoordinateOnRoadVector(CLDistanceCalc &, const double, const double, C LMapRoadPtr, double &, double &)",  "%s\n",  v40);
    if (v41 != buf) {
      free(v41);
    }
    return 0LL;
  }

  return result;
}

uint64_t sub_100D734E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a1 + 8);
  if (v2)
  {
    uint64_t v4 = 1LL;
    do
    {
      if (!sub_100BDA364(a2, (uint64_t)(v2 + 4)))
      {
        ++v2;
      }

      uint64_t v2 = (void *)*v2;
    }

    while (v2);
  }

  return 0LL;
}

_OWORD *sub_100D73550(uint64_t **a1, uint64_t a2, uint64_t a3, _OWORD **a4)
{
  uint64_t v6 = (void **)sub_100D735E0((uint64_t)a1, &v11, a2);
  uint64_t v7 = *v6;
  if (!*v6)
  {
    unint64_t v8 = (uint64_t **)v6;
    uint64_t v7 = operator new(0x40uLL);
    uint64_t v9 = *((void *)*a4 + 2);
    v7[2] = **a4;
    *((void *)v7 + 6) = v9;
    *((_BYTE *)v7 + 56) = 0;
    sub_1000085FC(a1, v11, v8, (uint64_t *)v7);
  }

  return v7;
}

void *sub_100D735E0(uint64_t a1, void *a2, uint64_t a3)
{
  double v5 = (void *)(a1 + 8);
  uint64_t v4 = *(void **)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        uint64_t v7 = v4;
        uint64_t v8 = (uint64_t)(v4 + 4);
        uint64_t v4 = (void *)*v7;
        double v5 = v7;
        if (!*v7) {
          goto LABEL_9;
        }
      }

      if (!sub_100BDA364(v8, a3)) {
        break;
      }
      double v5 = v7 + 1;
      uint64_t v4 = (void *)v7[1];
    }

    while (v4);
  }

  else
  {
    uint64_t v7 = (void *)(a1 + 8);
  }

uint64_t sub_100D73670(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = 0x6DB6DB6DB6DB6DB7LL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0x6DB6DB6DB6DB6DB7LL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x249249249249249LL) {
    unint64_t v9 = 0x492492492492492LL;
  }
  else {
    unint64_t v9 = v5;
  }
  v20[4] = a1 + 2;
  if (v9) {
    __int128 v10 = (char *)sub_1000AC8F0(v7, v9);
  }
  else {
    __int128 v10 = 0LL;
  }
  uint64_t v11 = &v10[56 * v4];
  v20[0] = v10;
  v20[1] = v11;
  v20[3] = &v10[56 * v9];
  *(void *)uint64_t v11 = *(void *)a2;
  uint64_t v12 = *(void *)(a2 + 8);
  *((void *)v11 + 1) = v12;
  if (v12)
  {
    __int128 v13 = (unint64_t *)(v12 + 8);
    do
      unint64_t v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }

  double v15 = &v10[56 * v4];
  __int128 v16 = *(_OWORD *)(a2 + 16);
  __int128 v17 = *(_OWORD *)(a2 + 32);
  *((void *)v15 + 6) = *(void *)(a2 + 48);
  *((_OWORD *)v15 + 1) = v16;
  *((_OWORD *)v15 + 2) = v17;
  v20[2] = v11 + 56;
  sub_100D737BC(a1, v20);
  uint64_t v18 = a1[1];
  sub_100D73828((uint64_t)v20);
  return v18;
}

void sub_100D737A8(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t *sub_100D737BC(uint64_t *result, void *a2)
{
  uint64_t v3 = *result;
  uint64_t v2 = result[1];
  uint64_t v4 = a2[1];
  while (v2 != v3)
  {
    __int128 v5 = *(_OWORD *)(v2 - 56);
    v2 -= 56LL;
    *(_OWORD *)(v4 - 56) = v5;
    v4 -= 56LL;
    *(void *)uint64_t v2 = 0LL;
    *(void *)(v2 + 8) = 0LL;
    __int128 v6 = *(_OWORD *)(v2 + 16);
    __int128 v7 = *(_OWORD *)(v2 + 32);
    *(void *)(v4 + 48) = *(void *)(v2 + 48);
    *(_OWORD *)(v4 + 16) = v6;
    *(_OWORD *)(v4 + 32) = v7;
  }

  a2[1] = v4;
  uint64_t v8 = *result;
  *BOOL result = v4;
  a2[1] = v8;
  uint64_t v9 = result[1];
  result[1] = a2[2];
  a2[2] = v9;
  uint64_t v10 = result[2];
  result[2] = a2[3];
  a2[3] = v10;
  *a2 = a2[1];
  return result;
}

uint64_t sub_100D73828(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 56;
    sub_10000AE14(i - 56);
  }

  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_100D73874(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    __int128 v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 112LL;
        sub_100D738F8((uint64_t)(v1 + 2), v4);
      }

      while ((void *)v4 != v2);
      __int128 v5 = **a1;
    }

    v1[1] = v2;
    operator delete(v5);
  }

uint64_t sub_100D738F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a2 + 88);
  if (v3)
  {
    *(void *)(a2 + 96) = v3;
    operator delete(v3);
  }

  return sub_10000AE14(a2);
}

void sub_100D73928(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_100D73928(a1, *a2);
    sub_100D73928(a1, a2[1]);
    sub_100D73970((uint64_t)(a2 + 4));
    operator delete(a2);
  }

uint64_t sub_100D73970(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 136);
  if (v2)
  {
    *(void *)(a1 + 144) = v2;
    operator delete(v2);
  }

  sub_10000AE14(a1 + 48);
  return sub_10000AE14(a1 + 24);
}

void sub_100D739E0(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    __int128 v5 = v2;
    if ((void *)v4 != v2)
    {
      do
        uint64_t v4 = sub_10000AE14(v4 - 56);
      while ((void *)v4 != v2);
      __int128 v5 = **a1;
    }

    v1[1] = v2;
    operator delete(v5);
  }

void sub_100D73A50(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (char *)**a1;
  if (v2)
  {
    uint64_t v4 = (char *)v1[1];
    __int128 v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        __int128 v6 = v4 - 264;
        sub_10000AE14((uint64_t)(v4 - 56));
        uint64_t v4 = v6;
      }

      while (v6 != v2);
      __int128 v5 = **a1;
    }

    v1[1] = v2;
    operator delete(v5);
  }

void *sub_100D73AC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (void *)(a1 + 8);
  uint64_t v3 = *(void **)(a1 + 8);
  if (!v3) {
    return v2;
  }
  __int128 v5 = (void *)(a1 + 8);
  do
  {
    BOOL v6 = sub_100BDA364((uint64_t)(v3 + 4), a2);
    __int128 v7 = v3 + 1;
    if (!v6)
    {
      __int128 v7 = v3;
      __int128 v5 = v3;
    }

    uint64_t v3 = (void *)*v7;
  }

  while (*v7);
  return v5;
}

uint64_t *sub_100D73B3C(uint64_t **a1, uint64_t a2, __int128 *a3)
{
  __int128 v5 = (uint64_t **)sub_100D735E0((uint64_t)a1, &v11, a2);
  BOOL v6 = *v5;
  if (!*v5)
  {
    __int128 v7 = v5;
    BOOL v6 = (uint64_t *)operator new(0x1538uLL);
    v9[1] = a1 + 1;
    sub_100D73BE8((uint64_t)(v6 + 4), a3);
    char v10 = 1;
    sub_1000085FC(a1, v11, v7, v6);
    v9[0] = 0LL;
    sub_100D73E38((uint64_t)v9, 0LL);
  }

  return v6;
}

uint64_t sub_100D73BE8(uint64_t a1, __int128 *a2)
{
  __int128 v3 = *a2;
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(_OWORD *)a1 = v3;
  uint64_t v4 = (uint64_t)a2 + 24;
  *(_OWORD *)(a1 + sub_100BDC958(v1 + 24) = *(__int128 *)((char *)a2 + 24);
  __int128 v5 = (_OWORD *)(a1 + 24);
  *((void *)a2 + 3) = 0LL;
  *((void *)a2 + 4) = 0LL;
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  *(_OWORD *)(a1 + 48) = a2[3];
  *((void *)a2 + 6) = 0LL;
  *((void *)a2 + 7) = 0LL;
  __int128 v6 = a2[4];
  __int128 v7 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v7;
  __int128 v8 = *(__int128 *)((char *)a2 + 104);
  *(_OWORD *)(a1 + 113) = *(__int128 *)((char *)a2 + 113);
  *(_OWORD *)(a1 + 104) = v8;
  *(void *)(a1 + 144) = 0LL;
  *(void *)(a1 + 152) = 0LL;
  *(void *)(a1 + 136) = 0LL;
  *(_OWORD *)(a1 + 136) = *(__int128 *)((char *)a2 + 136);
  *(void *)(a1 + 152) = *((void *)a2 + 19);
  *((void *)a2 + 17) = 0LL;
  *((void *)a2 + 18) = 0LL;
  *((void *)a2 + 19) = 0LL;
  uint64_t v9 = *((void *)a2 + 20);
  *(_BYTE *)(a1 + 168) = *((_BYTE *)a2 + 168);
  *(void *)(a1 + 160) = v9;
  __int128 v10 = a2[11];
  __int128 v11 = a2[13];
  *(_OWORD *)(a1 + 192) = a2[12];
  *(_OWORD *)(a1 + 208) = v11;
  *(_OWORD *)(a1 + 176) = v10;
  __int128 v12 = a2[19];
  __int128 v13 = a2[21];
  __int128 v14 = a2[18];
  *(_OWORD *)(a1 + 320) = a2[20];
  *(_OWORD *)(a1 + 336) = v13;
  *(_OWORD *)(a1 + 288) = v14;
  *(_OWORD *)(a1 + 304) = v12;
  __int128 v15 = a2[14];
  __int128 v16 = a2[15];
  __int128 v17 = a2[17];
  *(_OWORD *)(a1 + 256) = a2[16];
  *(_OWORD *)(a1 + 272) = v17;
  *(_OWORD *)(a1 + 2sub_100BDC958(v1 + 24) = v15;
  *(_OWORD *)(a1 + 240) = v16;
  __int128 v18 = a2[22];
  *(void *)(a1 + 368) = *((void *)a2 + 46);
  *(_OWORD *)(a1 + 352) = v18;
  *((void *)a2 + 44) = 0LL;
  *((void *)a2 + 45) = 0LL;
  *((void *)a2 + 46) = 0LL;
  memcpy((void *)(a1 + 376), (char *)a2 + 376, 0x118uLL);
  __int128 v19 = *(_OWORD *)(v4 + 648);
  __int128 v20 = *(_OWORD *)(v4 + 680);
  __int128 v21 = *(_OWORD *)(v4 + 632);
  *(_OWORD *)(a1 + 688) = *(_OWORD *)(v4 + 664);
  *(_OWORD *)(a1 + 704) = v20;
  *(_OWORD *)(a1 + 656) = v21;
  *(_OWORD *)(a1 + 672) = v19;
  __int128 v22 = *(_OWORD *)(v4 + 712);
  __int128 v23 = *(_OWORD *)(v4 + 744);
  __int128 v24 = *(_OWORD *)(v4 + 696);
  *(_OWORD *)(a1 + 752) = *(_OWORD *)(v4 + 728);
  *(_OWORD *)(a1 + 768) = v23;
  *(_OWORD *)(a1 + 720) = v24;
  *(_OWORD *)(a1 + 736) = v22;
  __int128 v25 = *(_OWORD *)(v4 + 760);
  *(void *)(a1 + 800) = *(void *)(v4 + 776);
  *(_OWORD *)(a1 + 784) = v25;
  *(void *)(v4 + 760) = 0LL;
  *(void *)(v4 + 776) = 0LL;
  *(void *)(v4 + 768) = 0LL;
  memcpy((void *)(a1 + 808), (const void *)(v4 + 784), 0x120uLL);
  memcpy((void *)(a1 + 1096), (const void *)(v4 + 1072), 0xF00uLL);
  __int128 v26 = *(_OWORD *)(v4 + 4928);
  __int128 v27 = *(_OWORD *)(v4 + 4944);
  __int128 v28 = *(_OWORD *)(v4 + 4960);
  v5[307] = *(_OWORD *)(v4 + 4912);
  v5[310] = v28;
  v5[309] = v27;
  v5[308] = v26;
  __int128 v29 = *(_OWORD *)(v4 + 4992);
  __int128 v30 = *(_OWORD *)(v4 + 5008);
  __int128 v31 = *(_OWORD *)(v4 + 5024);
  v5[311] = *(_OWORD *)(v4 + 4976);
  v5[314] = v31;
  v5[313] = v30;
  v5[312] = v29;
  __int128 v32 = *(_OWORD *)(v4 + 5040);
  *(void *)(a1 + 5080) = *(void *)(v4 + 5056);
  v5[315] = v32;
  *(void *)(v4 + 5040) = 0LL;
  *(void *)(v4 + 5056) = 0LL;
  *(void *)(v4 + 5048) = 0LL;
  memcpy((void *)(a1 + 5088), (const void *)(v4 + 5064), 0x118uLL);
  __int128 v33 = *(_OWORD *)(v4 + 5360);
  v5[334] = *(_OWORD *)(v4 + 5344);
  v5[335] = v33;
  return a1;
}

void sub_100D73E38(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16)) {
      sub_100D73970((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }

uint64_t sub_100D73E7C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = 0x6DB6DB6DB6DB6DB7LL * ((a1[1] - *a1) >> 4);
  unint64_t v4 = v3 + 1;
  if (0xDB6DB6DB6DB6DB6ELL * ((a1[2] - *a1) >> 4) > v4) {
    unint64_t v4 = 0xDB6DB6DB6DB6DB6ELL * ((a1[2] - *a1) >> 4);
  }
  else {
    unint64_t v6 = v4;
  }
  __int128 v14 = a1 + 2;
  if (v6) {
    __int128 v7 = (char *)sub_10005057C((uint64_t)(a1 + 2), v6);
  }
  else {
    __int128 v7 = 0LL;
  }
  __int128 v10 = v7;
  __int128 v11 = &v7[112 * v3];
  __int128 v13 = &v7[112 * v6];
  sub_100D73FA0((uint64_t)(a1 + 2), (uint64_t)v11, a2);
  __int128 v12 = v11 + 112;
  sub_100D74040(a1, &v10);
  uint64_t v8 = a1[1];
  sub_100D74204(&v10);
  return v8;
}

void sub_100D73F8C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void *sub_100D73FA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 8);
  *(void *)a2 = *(void *)a3;
  *(void *)(a2 + 8) = v3;
  if (v3)
  {
    unint64_t v4 = (unint64_t *)(v3 + 8);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }

  __int128 v6 = *(_OWORD *)(a3 + 16);
  __int128 v7 = *(_OWORD *)(a3 + 32);
  *(void *)(a2 + 48) = *(void *)(a3 + 48);
  *(_OWORD *)(a2 + 16) = v6;
  *(_OWORD *)(a2 + 32) = v7;
  __int128 v8 = *(_OWORD *)(a3 + 56);
  __int128 v9 = *(_OWORD *)(a3 + 65);
  *(void *)(a2 + 88) = 0LL;
  *(_OWORD *)(a2 + 65) = v9;
  *(_OWORD *)(a2 + 56) = v8;
  *(void *)(a2 + 96) = 0LL;
  *(void *)(a2 + 104) = 0LL;
  return sub_100BDD080( (void *)(a2 + 88),  *(const void **)(a3 + 88),  *(void *)(a3 + 96),  0x8E38E38E38E38E39LL * ((uint64_t)(*(void *)(a3 + 96) - *(void *)(a3 + 88)) >> 3));
}

void sub_100D7402C(_Unwind_Exception *a1)
{
}

uint64_t sub_100D74040(uint64_t *a1, void *a2)
{
  uint64_t result = sub_100D740B4((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_100D740B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&__int128 v17 = a6;
  *((void *)&v17 + 1) = a7;
  __int128 v16 = v17;
  v14[0] = a1;
  v14[1] = &v16;
  v14[2] = &v17;
  if (a3 == a5)
  {
    uint64_t v12 = a6;
  }

  else
  {
    do
    {
      __int128 v8 = *(_OWORD *)(a3 - 112);
      a3 -= 112LL;
      *(_OWORD *)(v7 - 112) = v8;
      *(void *)a3 = 0LL;
      *(void *)(a3 + 8) = 0LL;
      __int128 v9 = *(_OWORD *)(a3 + 16);
      __int128 v10 = *(_OWORD *)(a3 + 32);
      *(void *)(v7 - 64) = *(void *)(a3 + 48);
      *(_OWORD *)(v7 - 96) = v9;
      *(_OWORD *)(v7 - 80) = v10;
      __int128 v11 = *(_OWORD *)(a3 + 56);
      *(_OWORD *)(v7 - 47) = *(_OWORD *)(a3 + 65);
      *(_OWORD *)(v7 - 56) = v11;
      *(void *)(v7 - 16) = 0LL;
      *(void *)(v7 - 8) = 0LL;
      *(void *)(v7 - sub_100BDC958(v1 + 24) = 0LL;
      *(_OWORD *)(v7 - sub_100BDC958(v1 + 24) = *(_OWORD *)(a3 + 88);
      *(void *)(v7 - 8) = *(void *)(a3 + 104);
      *(void *)(a3 + 88) = 0LL;
      *(void *)(a3 + 96) = 0LL;
      *(void *)(a3 + 104) = 0LL;
      uint64_t v7 = *((void *)&v17 + 1) - 112LL;
      *((void *)&v17 + 1) -= 112LL;
    }

    while (a3 != a5);
    uint64_t v12 = v17;
  }

  char v15 = 1;
  sub_100D74180((uint64_t)v14);
  return v12;
}

uint64_t sub_100D74180(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24)) {
    sub_100D741B4((uint64_t *)a1);
  }
  return a1;
}

uint64_t *sub_100D741B4(uint64_t *result)
{
  uint64_t v1 = *(void *)(result[2] + 8);
  uint64_t v2 = *(void *)(result[1] + 8);
  if (v1 != v2)
  {
    uint64_t v3 = *result;
    do
    {
      uint64_t result = (uint64_t *)sub_100D738F8(v3, v1);
      v1 += 112LL;
    }

    while (v1 != v2);
  }

  return result;
}

void **sub_100D74204(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

uint64_t sub_100D74234(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 8);
  uint64_t v1 = *(void *)(result + 16);
  if (v1 != v2)
  {
    uint64_t v3 = result;
    do
    {
      uint64_t v4 = *(void *)(v3 + 32);
      *(void *)(v3 + 16) = v1 - 112;
      uint64_t result = sub_100D738F8(v4, v1 - 112);
      uint64_t v1 = *(void *)(v3 + 16);
    }

    while (v1 != v2);
  }

  return result;
}

uint64_t sub_100D74278(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6 = a2;
  __int128 v8 = *(void **)a1;
  if (0xF83E0F83E0F83E1LL * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3) < a4)
  {
    sub_100D744C0((void **)a1);
    if (a4 > 0xF83E0F83E0F83ELL) {
      sub_100007008();
    }
    unint64_t v9 = 0x1F07C1F07C1F07C2LL * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3);
    if (v9 <= a4) {
      unint64_t v9 = a4;
    }
    else {
      unint64_t v10 = v9;
    }
    uint64_t result = (uint64_t)sub_100D74528((void *)a1, v10);
    uint64_t v12 = *(void *)(a1 + 8);
    while (v6 != a3)
    {
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v6;
      __int128 v13 = *(_OWORD *)(v6 + 16);
      __int128 v14 = *(_OWORD *)(v6 + 32);
      __int128 v15 = *(_OWORD *)(v6 + 64);
      *(_OWORD *)(v12 + 48) = *(_OWORD *)(v6 + 48);
      *(_OWORD *)(v12 + 64) = v15;
      *(_OWORD *)(v12 + 16) = v13;
      *(_OWORD *)(v12 + 32) = v14;
      __int128 v16 = *(_OWORD *)(v6 + 80);
      __int128 v17 = *(_OWORD *)(v6 + 96);
      __int128 v18 = *(_OWORD *)(v6 + 128);
      *(_OWORD *)(v12 + 112) = *(_OWORD *)(v6 + 112);
      *(_OWORD *)(v12 + 128) = v18;
      *(_OWORD *)(v12 + 80) = v16;
      *(_OWORD *)(v12 + 96) = v17;
      __int128 v19 = *(_OWORD *)(v6 + 144);
      __int128 v20 = *(_OWORD *)(v6 + 160);
      __int128 v21 = *(_OWORD *)(v6 + 192);
      *(_OWORD *)(v12 + 176) = *(_OWORD *)(v6 + 176);
      *(_OWORD *)(v12 + 192) = v21;
      *(_OWORD *)(v12 + 144) = v19;
      *(_OWORD *)(v12 + 160) = v20;
      uint64_t v22 = *(void *)(v6 + 216);
      *(void *)(v12 + 208) = *(void *)(v6 + 208);
      *(void *)(v12 + 216) = v22;
      if (v22)
      {
        __int128 v23 = (unint64_t *)(v22 + 8);
        do
          unint64_t v24 = __ldxr(v23);
        while (__stxr(v24 + 1, v23));
      }

      __int128 v25 = *(_OWORD *)(v6 + 224);
      __int128 v26 = *(_OWORD *)(v6 + 240);
      *(void *)(v12 + 256) = *(void *)(v6 + 256);
      *(_OWORD *)(v12 + 2sub_100BDC958(v1 + 24) = v25;
      *(_OWORD *)(v12 + 240) = v26;
      v6 += 264LL;
      v12 += 264LL;
    }

void sub_100D744C0(void **a1)
{
  uint64_t v1 = (char *)*a1;
  if (*a1)
  {
    uint64_t v3 = (char *)a1[1];
    uint64_t v4 = *a1;
    if (v3 != v1)
    {
      do
      {
        uint64_t v5 = v3 - 264;
        sub_10000AE14((uint64_t)(v3 - 56));
        uint64_t v3 = v5;
      }

      while (v5 != v1);
      uint64_t v4 = *a1;
    }

    a1[1] = v1;
    operator delete(v4);
    *a1 = 0LL;
    a1[1] = 0LL;
    a1[2] = 0LL;
  }

char *sub_100D74528(void *a1, unint64_t a2)
{
  if (a2 >= 0xF83E0F83E0F83FLL) {
    sub_100007008();
  }
  uint64_t result = (char *)sub_100D74624((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[264 * v4];
  return result;
}

uint64_t sub_100D7457C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1;
  if (a1 == a2) {
    return a1;
  }
  uint64_t v5 = a2;
  do
  {
    *(_OWORD *)a3 = *(_OWORD *)v4;
    __int128 v6 = *(_OWORD *)(v4 + 16);
    __int128 v7 = *(_OWORD *)(v4 + 32);
    __int128 v8 = *(_OWORD *)(v4 + 64);
    *(_OWORD *)(a3 + 48) = *(_OWORD *)(v4 + 48);
    *(_OWORD *)(a3 + 64) = v8;
    *(_OWORD *)(a3 + 16) = v6;
    *(_OWORD *)(a3 + 32) = v7;
    __int128 v9 = *(_OWORD *)(v4 + 80);
    __int128 v10 = *(_OWORD *)(v4 + 96);
    __int128 v11 = *(_OWORD *)(v4 + 128);
    *(_OWORD *)(a3 + 112) = *(_OWORD *)(v4 + 112);
    *(_OWORD *)(a3 + 128) = v11;
    *(_OWORD *)(a3 + 80) = v9;
    *(_OWORD *)(a3 + 96) = v10;
    __int128 v12 = *(_OWORD *)(v4 + 144);
    __int128 v13 = *(_OWORD *)(v4 + 160);
    __int128 v14 = *(_OWORD *)(v4 + 192);
    *(_OWORD *)(a3 + 176) = *(_OWORD *)(v4 + 176);
    *(_OWORD *)(a3 + 192) = v14;
    *(_OWORD *)(a3 + 144) = v12;
    *(_OWORD *)(a3 + 160) = v13;
    sub_1000F2F30((void *)(a3 + 208), (uint64_t *)(v4 + 208));
    uint64_t v15 = *(void *)(v4 + 256);
    __int128 v16 = *(_OWORD *)(v4 + 240);
    *(_OWORD *)(a3 + 2sub_100BDC958(v1 + 24) = *(_OWORD *)(v4 + 224);
    *(_OWORD *)(a3 + 240) = v16;
    *(void *)(a3 + 256) = v15;
    a3 += 264LL;
    v4 += 264LL;
  }

  while (v4 != v5);
  return v5;
}

void *sub_100D74624(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xF83E0F83E0F83FLL) {
    sub_1000070D4();
  }
  return operator new(264 * a2);
}

uint64_t sub_100D7466C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = 0xF83E0F83E0F83E1LL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xF83E0F83E0F83E1LL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x7C1F07C1F07C1FLL) {
    unint64_t v9 = 0xF83E0F83E0F83ELL;
  }
  else {
    unint64_t v9 = v5;
  }
  v29[4] = a1 + 2;
  if (v9) {
    __int128 v10 = (char *)sub_100D74624(v7, v9);
  }
  else {
    __int128 v10 = 0LL;
  }
  __int128 v11 = &v10[264 * v4];
  v29[0] = v10;
  v29[1] = v11;
  v29[3] = &v10[264 * v9];
  __int128 v12 = *(_OWORD *)(a2 + 16);
  __int128 v13 = *(_OWORD *)(a2 + 32);
  __int128 v14 = *(_OWORD *)(a2 + 64);
  *((_OWORD *)v11 + 3) = *(_OWORD *)(a2 + 48);
  *((_OWORD *)v11 + 4) = v14;
  *((_OWORD *)v11 + 2) = v13;
  __int128 v15 = *(_OWORD *)(a2 + 128);
  __int128 v17 = *(_OWORD *)(a2 + 80);
  __int128 v16 = *(_OWORD *)(a2 + 96);
  *((_OWORD *)v11 + 7) = *(_OWORD *)(a2 + 112);
  *((_OWORD *)v11 + 8) = v15;
  *((_OWORD *)v11 + 5) = v17;
  *((_OWORD *)v11 + 6) = v16;
  __int128 v18 = *(_OWORD *)(a2 + 192);
  __int128 v20 = *(_OWORD *)(a2 + 144);
  __int128 v19 = *(_OWORD *)(a2 + 160);
  *((_OWORD *)v11 + 11) = *(_OWORD *)(a2 + 176);
  *((_OWORD *)v11 + 12) = v18;
  *((_OWORD *)v11 + 9) = v20;
  *((_OWORD *)v11 + 10) = v19;
  *(_OWORD *)__int128 v11 = *(_OWORD *)a2;
  *((_OWORD *)v11 + 1) = v12;
  *((void *)v11 + 26) = *(void *)(a2 + 208);
  uint64_t v21 = *(void *)(a2 + 216);
  *((void *)v11 + 27) = v21;
  if (v21)
  {
    uint64_t v22 = (unint64_t *)(v21 + 8);
    do
      unint64_t v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }

  unint64_t v24 = &v10[264 * v4];
  __int128 v25 = *(_OWORD *)(a2 + 224);
  __int128 v26 = *(_OWORD *)(a2 + 240);
  *((void *)v24 + 32) = *(void *)(a2 + 256);
  *((_OWORD *)v24 + 14) = v25;
  *((_OWORD *)v24 + 15) = v26;
  v29[2] = v11 + 264;
  sub_100D747F0(a1, v29);
  uint64_t v27 = a1[1];
  sub_100D748B0((uint64_t)v29);
  return v27;
}

void sub_100D747DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t *sub_100D747F0(uint64_t *result, void *a2)
{
  uint64_t v2 = *result;
  uint64_t v3 = result[1];
  uint64_t v4 = a2[1];
  if (v3 != *result)
  {
    uint64_t v5 = v4 - 56;
    uint64_t v6 = v3 - 56;
    do
    {
      uint64_t v7 = v6 - 208;
      *(_OWORD *)(v5 - 208) = *(_OWORD *)(v6 - 208);
      __int128 v8 = *(_OWORD *)(v6 - 192);
      __int128 v9 = *(_OWORD *)(v6 - 176);
      __int128 v10 = *(_OWORD *)(v6 - 144);
      *(_OWORD *)(v5 - 160) = *(_OWORD *)(v6 - 160);
      *(_OWORD *)(v5 - 144) = v10;
      *(_OWORD *)(v5 - 192) = v8;
      *(_OWORD *)(v5 - 176) = v9;
      __int128 v11 = *(_OWORD *)(v6 - 128);
      __int128 v12 = *(_OWORD *)(v6 - 112);
      __int128 v13 = *(_OWORD *)(v6 - 80);
      *(_OWORD *)(v5 - 96) = *(_OWORD *)(v6 - 96);
      *(_OWORD *)(v5 - 80) = v13;
      *(_OWORD *)(v5 - 128) = v11;
      *(_OWORD *)(v5 - 112) = v12;
      __int128 v14 = *(_OWORD *)(v6 - 64);
      __int128 v15 = *(_OWORD *)(v6 - 48);
      __int128 v16 = *(_OWORD *)(v6 - 16);
      *(_OWORD *)(v5 - 32) = *(_OWORD *)(v6 - 32);
      *(_OWORD *)(v5 - 16) = v16;
      *(_OWORD *)(v5 - 64) = v14;
      *(_OWORD *)(v5 - 48) = v15;
      *(_OWORD *)uint64_t v5 = *(_OWORD *)v6;
      *(void *)uint64_t v6 = 0LL;
      *(void *)(v6 + 8) = 0LL;
      __int128 v17 = *(_OWORD *)(v6 + 16);
      __int128 v18 = *(_OWORD *)(v6 + 32);
      *(void *)(v5 + 48) = *(void *)(v6 + 48);
      *(_OWORD *)(v5 + 16) = v17;
      *(_OWORD *)(v5 + 32) = v18;
      v5 -= 264LL;
      v6 -= 264LL;
    }

    while (v7 != v2);
    uint64_t v4 = v5 + 56;
  }

  a2[1] = v4;
  uint64_t v19 = *result;
  *uint64_t result = v4;
  a2[1] = v19;
  uint64_t v20 = result[1];
  result[1] = a2[2];
  a2[2] = v20;
  uint64_t v21 = result[2];
  result[2] = a2[3];
  a2[3] = v21;
  *a2 = a2[1];
  return result;
}

uint64_t sub_100D748B0(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 264;
    sub_10000AE14(i - 56);
  }

  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_100D74900(uint64_t a1@<X8>)
{
  *(void *)a1 = 0LL;
  *(void *)(a1 + 8) = 0LL;
  *(_BYTE *)(a1 + sub_100BDC958(v1 + 24) = 0;
  *(void *)(a1 + 16) = 0LL;
  if (qword_101934740 != -1) {
    dispatch_once(&qword_101934740, &stru_1018819D8);
  }
  uint64_t v1 = (os_log_s *)qword_101934748;
  if (os_log_type_enabled((os_log_t)qword_101934748, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v1,  OS_LOG_TYPE_ERROR,  "GaitEventsModel: Tried to use GaitEvents CoreML Model without matching CoreMotionModels framework",  buf,  2u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934740 != -1) {
      dispatch_once(&qword_101934740, &stru_1018819D8);
    }
    v4[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934748,  16LL,  "GaitEventsModel: Tried to use GaitEvents CoreML Model without matching CoreMotionModels framework",  v4,  2);
    uint64_t v3 = (uint8_t *)v2;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "CLGaitEvents::ModelOutput CLGaitEvents::CLGaitEventsClassifier::getPredictions() const",  "%s\n",  v2);
    if (v3 != buf) {
      free(v3);
    }
  }

__n128 sub_100D74A90@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v2;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(a2 + 32) = result;
  *(void *)(a2 + 48) = *(void *)(a1 + 48);
  return result;
}

void sub_100D74AAC(id a1)
{
  qword_101934748 = (uint64_t)os_log_create("com.apple.locationd.Motion", "RunningForm");
}

uint64_t sub_100D74AD8()
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100D74B4C;
  block[3] = &unk_101833840;
  char v2 = 0;
  if (qword_10199E120 != -1) {
    dispatch_once(&qword_10199E120, block);
  }
  return qword_1019A2088;
}

uint64_t sub_100D74B4C(uint64_t a1)
{
  char v2 = operator new(0x810uLL);
  uint64_t result = sub_100D74B98((uint64_t)v2, *(unsigned __int8 *)(a1 + 32));
  qword_1019A2088 = (uint64_t)v2;
  return result;
}

void sub_100D74B84(_Unwind_Exception *a1)
{
}

uint64_t sub_100D74B98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1006F0074();
  sub_100404DBC(v4 + 320, a2);
  sub_100FCCC3C(a1 + 776, a2);
  sub_100E323E8(a1 + 1200, a2);
  sub_100834F38(a1 + 1696, a2);
  return a1;
}

void sub_100D74C0C(_Unwind_Exception *a1)
{
}

uint64_t sub_100D74C50(uint64_t *a1)
{
  unsigned __int8 v2 = atomic_load((unsigned __int8 *)&qword_10199E140);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_10199E140))
  {
    uint64_t v5 = 0LL;
    __int128 v4 = xmmword_10135D678;
    sub_100D58C88(qword_10199E128, &v4, 1uLL);
    __cxa_atexit((void (*)(void *))sub_100D58D10, qword_10199E128, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10199E140);
  }

  sub_1006F00B0(a1, (uint64_t)qword_10199E128);
  sub_100404E18(a1 + 40, (uint64_t)qword_10199E128);
  sub_100FCCC78((uint64_t)(a1 + 97), (uint64_t)qword_10199E128);
  return sub_100E32424((uint64_t)(a1 + 150), (uint64_t)qword_10199E128);
}

void sub_100D74D54(_Unwind_Exception *a1)
{
}

uint64_t sub_100D74D74(void *a1)
{
  return sub_100D8BAC8(a1 + 159);
}

uint64_t sub_100D74DAC(uint64_t a1, uint64_t a2)
{
  return sub_100D74DB4(a1 + 320, a2);
}

uint64_t sub_100D74DB4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a1 + 112;
  uint64_t v4 = *(void *)(a1 + 112);
  uint64_t v6 = a1 + 72;
  *(void *)&v23[1] = a1 + 112;
  (*(void (**)(uint64_t))(v4 + 16))(a1 + 112);
  __int16 v24 = 256;
  v23[0] = *(double *)(a2 + 24);
  if (sub_100D8AB44(v6, v23))
  {
    if (sub_100D8A92C(v6))
    {
      (*(void (**)(uint64_t, uint64_t, void))(*(void *)a1 + 80LL))(a1, a2, 0LL);
    }

    else if (!*(_BYTE *)(a1 + 128))
    {
      __int128 v12 = (void *)(a1 + 176);
      unint64_t v13 = *(void *)(a1 + 216);
      if (v13 > *(int *)(a1 + 368))
      {
        ++*(void *)(a1 + 208);
        *(void *)(a1 + 216) = v13 - 1;
        sub_10044B9C4(a1 + 176, 1);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_101881A18);
        }
        __int128 v14 = (os_log_s *)qword_1019344B8;
        if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "Maximum number of entries exceeded, throwing out oldest entry.",  buf,  2u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019344B0 != -1) {
            dispatch_once(&qword_1019344B0, &stru_101881A18);
          }
          v22[0] = 0;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  2LL,  "Maximum number of entries exceeded, throwing out oldest entry.",  v22,  2);
          uint64_t v20 = (uint8_t *)v19;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLActivityRecorderDb<VO2MaxOutput, CLActivityDB::ClassBDataProtectionPolicy>::addSuspectRecord(const T &) [T = VO2MaxOutput, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v19);
          if (v20 != buf) {
            free(v20);
          }
        }
      }

      if (qword_101934510 != -1) {
        dispatch_once(&qword_101934510, &stru_101881A38);
      }
      __int128 v15 = (os_log_s *)qword_101934518;
      if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "Buffer was added to since db was inaccesible.",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934510 != -1) {
          dispatch_once(&qword_101934510, &stru_101881A38);
        }
        v22[0] = 0;
        LODWORD(v21) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934518,  2LL,  "Buffer was added to since db was inaccesible.",  v22,  v21);
        __int128 v18 = (uint8_t *)v17;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLActivityRecorderDb<VO2MaxOutput, CLActivityDB::ClassBDataProtectionPolicy>::addSuspectRecord(const T &) [T = VO2MaxOutput, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v17);
        if (v18 != buf) {
          free(v18);
        }
      }

      __n128 v7 = sub_100D763E0(v12, a2);
    }
  }

  else
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101881A18);
    }
    __int128 v8 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_ERROR))
    {
      __int128 v9 = (void *)(a1 + 88);
      *(_DWORD *)buf = 68289538;
      int v26 = 0;
      __int16 v27 = 2082;
      __int128 v28 = "";
      __int16 v29 = 1026;
      int v30 = (int)v23[0];
      __int16 v31 = 2082;
      __int128 v32 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "{msg%{public}.0s:CL database error, record contains invalid time, invalid time:%{public}d, name: %{public, location:escape_only}s}",  buf,  0x22u);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101881A18);
      }
    }

    __int128 v10 = (os_log_s *)qword_1019344B8;
    if (os_signpost_enabled((os_log_t)qword_1019344B8))
    {
      __int128 v11 = (void *)(a1 + 88);
      *(_DWORD *)buf = 68289538;
      int v26 = 0;
      __int16 v27 = 2082;
      __int128 v28 = "";
      __int16 v29 = 1026;
      int v30 = (int)v23[0];
      __int16 v31 = 2082;
      __int128 v32 = v11;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v10,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "CL database error, record contains invalid time",  "{msg%{public}.0s:CL database error, record contains invalid time, invalid time:%{public}d, name: %{public, location:escape_only}s}",  buf,  0x22u);
    }
  }

  return (*(uint64_t (**)(uint64_t, __n128))(*(void *)v5 + 24LL))(v5, v7);
}

void sub_100D752AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
}

uint64_t sub_100D752D8(uint64_t a1, char **a2)
{
  return sub_100404F58(a1 + 320, a2);
}

uint64_t sub_100D752E0(uint64_t a1, char **a2, int a3, int a4, double a5)
{
  return sub_10040553C(a1 + 320, a2, a3, a4, a5);
}

BOOL sub_100D752E8(uint64_t a1, const unsigned __int8 *a2, _OWORD *a3)
{
  unint64_t v13 = 0LL;
  __int128 v14 = 0LL;
  uint64_t v15 = 0LL;
  sub_100405948(a1 + 320, a2, &v13);
  uint64_t v4 = v13;
  uint64_t v5 = v14;
  if (v13 != v14)
  {
    *a3 = *(_OWORD *)v13;
    __int128 v6 = *((_OWORD *)v4 + 1);
    __int128 v7 = *((_OWORD *)v4 + 2);
    __int128 v8 = *((_OWORD *)v4 + 4);
    a3[3] = *((_OWORD *)v4 + 3);
    a3[4] = v8;
    a3[1] = v6;
    a3[2] = v7;
    __int128 v9 = *((_OWORD *)v4 + 5);
    __int128 v10 = *((_OWORD *)v4 + 6);
    __int128 v11 = *((_OWORD *)v4 + 8);
    a3[7] = *((_OWORD *)v4 + 7);
    a3[8] = v11;
    a3[5] = v9;
    a3[6] = v10;
LABEL_4:
    __int128 v14 = v4;
    operator delete(v4);
    return v4 != v5;
  }

  if (v13) {
    goto LABEL_4;
  }
  return v4 != v5;
}

void sub_100D75378( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100D75394(uint64_t a1, _OWORD *a2)
{
  unint64_t v13 = 0LL;
  __int128 v14 = 0LL;
  uint64_t v15 = 0LL;
  BOOL v4 = sub_10040553C(a1 + 320, &v13, 1, 1, 0.0) == 100;
  uint64_t v3 = v13;
  BOOL v4 = !v4 || v13 == v14;
  uint64_t v5 = !v4;
  if (v4)
  {
    if (!v13) {
      return 0LL;
    }
  }

  else
  {
    *a2 = *(_OWORD *)v13;
    __int128 v6 = *((_OWORD *)v3 + 1);
    __int128 v7 = *((_OWORD *)v3 + 2);
    __int128 v8 = *((_OWORD *)v3 + 4);
    a2[3] = *((_OWORD *)v3 + 3);
    a2[4] = v8;
    a2[1] = v6;
    a2[2] = v7;
    __int128 v9 = *((_OWORD *)v3 + 5);
    __int128 v10 = *((_OWORD *)v3 + 6);
    __int128 v11 = *((_OWORD *)v3 + 8);
    a2[7] = *((_OWORD *)v3 + 7);
    a2[8] = v11;
    a2[5] = v9;
    a2[6] = v10;
  }

  __int128 v14 = v3;
  operator delete(v3);
  return v5;
}

void sub_100D75430( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100D7544C(uint64_t a1, uint64_t a2)
{
  __p = 0LL;
  uint64_t v5 = 0LL;
  uint64_t v6 = 0LL;
  uint64_t v3 = a1 + 776;
  sub_100FCD454(a1 + 776, (const unsigned __int8 *)(a2 + 16), (char **)&__p);
  if (__p == v5) {
    sub_10024D4E8(v3, a2);
  }
  else {
    sub_100FCD284(v3, a2, *(void *)__p);
  }
  if (__p)
  {
    uint64_t v5 = __p;
    operator delete(__p);
  }

void sub_100D754C8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_100D754E4(uint64_t a1, int a2, double *a3)
{
  return sub_100FCD7C8(a1 + 776, a2, a3);
}

BOOL sub_100D754EC(uint64_t a1, const unsigned __int8 *a2, _OWORD *a3)
{
  __int128 v10 = 0LL;
  __int128 v11 = 0LL;
  uint64_t v12 = 0LL;
  sub_100FCD454(a1 + 776, a2, &v10);
  BOOL v4 = v10;
  uint64_t v5 = v11;
  if (v10 != v11)
  {
    *a3 = *(_OWORD *)v10;
    __int128 v6 = *((_OWORD *)v4 + 1);
    __int128 v7 = *((_OWORD *)v4 + 2);
    __int128 v8 = *((_OWORD *)v4 + 4);
    a3[3] = *((_OWORD *)v4 + 3);
    a3[4] = v8;
    a3[1] = v6;
    a3[2] = v7;
LABEL_4:
    __int128 v11 = v4;
    operator delete(v4);
    return v4 != v5;
  }

  if (v10) {
    goto LABEL_4;
  }
  return v4 != v5;
}

void sub_100D7556C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_100D75588(uint64_t a1, const unsigned __int8 *a2, uint64_t a3)
{
  return *(void *)a3 != *(void *)(a3 + 8);
}

uint64_t sub_100D755B8(uint64_t a1, char **a2, double a3)
{
  return sub_100FCD8B4(a1 + 776, a2, a3);
}

uint64_t sub_100D755C0(uint64_t a1, char **a2, double a3, double a4)
{
  return sub_100FCDC34(a1 + 776, a2, a3, a4);
}

uint64_t sub_100D755C8(uint64_t a1, uint64_t a2)
{
  return sub_1001B3964((void *)(a1 + 1200), a2, 0LL);
}

uint64_t sub_100D755D4(uint64_t a1, const unsigned __int8 *a2)
{
  return sub_100E33C98(a1 + 1200, a2);
}

BOOL sub_100D755DC(uint64_t a1, const unsigned __int8 *a2, uint64_t a3)
{
  *(void *)(a3 + 8) = *(void *)a3;
  return sub_100E33840(a1 + 1200, a2, (char **)a3) != 109;
}

uint64_t sub_100D75604(uint64_t a1, char **a2, double a3)
{
  return sub_100E32B30(a1 + 1200, a2, a3);
}

uint64_t sub_100D7560C(uint64_t a1, int a2, char **a3, double a4)
{
  return sub_100E32F78(a1 + 1200, a2, a3, a4);
}

BOOL sub_100D75614(uint64_t a1, char **a2, double a3, double a4)
{
  return sub_100E333DC(a1 + 1200, a2, a3, a4) != 109;
}

void sub_100D75634(uint64_t a1, uint64_t a2)
{
  sqlite3_int64 v7 = 0LL;
  int64x2_t v8 = vdupq_n_s64(0x7FEFFFFFFFFFFFFFuLL);
  uint64_t v9 = 0LL;
  uint64_t v3 = a1 + 1696;
  if (sub_10029DF68((void *)(a1 + 1696), (uint64_t)&v7))
  {
    *(void *)(a2 + 8) = v8.i64[0];
    if ((sub_10083507C(v3, a2, v7) & 1) != 0) {
      return;
    }
  }

  else if ((sub_100834F74(v3, a2) & 1) != 0)
  {
    return;
  }

  if (qword_1019346E0 != -1) {
    dispatch_once(&qword_1019346E0, &stru_1018819F8);
  }
  BOOL v4 = (os_log_s *)qword_1019346E8;
  if (os_log_type_enabled((os_log_t)qword_1019346E8, OS_LOG_TYPE_FAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_FAULT,  "Unexpected failure attempting to save VO2MaxCloudKitSyncEngineMetadata record",  buf,  2u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019346E0 != -1) {
      dispatch_once(&qword_1019346E0, &stru_1018819F8);
    }
    v6[0] = 0;
    uint64_t v5 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019346E8,  17LL,  "Unexpected failure attempting to save VO2MaxCloudKitSyncEngineMetadata record",  v6,  2);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLVO2MaxOutputStore::addCloudKitSyncEngineMetadata(VO2MaxCloudKitSyncEngineMetadata &)",  "%s\n",  v5);
  }

BOOL sub_100D75814(uint64_t a1, uint64_t a2)
{
  return sub_10029DF68((void *)(a1 + 1696), a2);
}

uint64_t sub_100D7581C(uint64_t a1)
{
  return sub_100D8BAC8((void *)(a1 + 1768));
}

BOOL sub_100D75824(uint64_t a1, const unsigned __int8 *a2, void *a3)
{
  __int128 v6 = -[NSUUID initWithUUIDBytes:](objc_alloc(&OBJC_CLASS___NSUUID), "initWithUUIDBytes:", a2);
  objc_msgSend(a3, "setSessionId:", -[NSUUID UUIDString](v6, "UUIDString"));

  uint64_t v21 = 0LL;
  uint64_t v22 = 0LL;
  uint64_t v23 = 0LL;
  uint64_t v7 = sub_100FCD454(a1 + 776, a2, (char **)&v21);
  if ((_DWORD)v7 == 109)
  {
    BOOL v8 = 0LL;
    goto LABEL_18;
  }

  if (v21 != v22) {
    objc_msgSend(a3, "setSessionAttributes:", sub_100D759E8(v7, (uint64_t)v21));
  }
  __int128 v18 = 0LL;
  uint64_t v19 = 0LL;
  uint64_t v20 = 0LL;
  id v9 = (id)sub_100E33840(a1 + 1200, a2, (char **)&v18);
  if ((_DWORD)v9 != 109)
  {
    __int128 v10 = (char *)v18;
    __int128 v11 = v19;
    while (v10 != v11)
    {
      id v9 = objc_msgSend(a3, "addSummaries:", sub_100D75A60((uint64_t)v9, (uint64_t)v10));
      v10 += 184;
    }

    __p = 0LL;
    __int128 v16 = 0LL;
    uint64_t v17 = 0LL;
    int v12 = sub_100405948(a1 + 320, a2, (char **)&__p);
    BOOL v8 = v12 != 109;
    if (v12 != 109)
    {
      unint64_t v13 = __p;
      if (__p == v16) {
        goto LABEL_14;
      }
      objc_msgSend(a3, "setEstimate:", sub_100D75B8C((uint64_t)__p, (uint64_t)__p));
    }

    unint64_t v13 = __p;
LABEL_14:
    if (v13)
    {
      __int128 v16 = v13;
      operator delete(v13);
    }

    goto LABEL_16;
  }

  BOOL v8 = 0LL;
LABEL_16:
  if (v18)
  {
    uint64_t v19 = (char *)v18;
    operator delete(v18);
  }

void sub_100D75998( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17)
{
  if (__p) {
    operator delete(__p);
  }
  if (a13) {
    operator delete(a13);
  }
  if (a16) {
    operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

CLCKVO2MaxSessionAttributes *sub_100D759E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = objc_alloc_init(&OBJC_CLASS___CLCKVO2MaxSessionAttributes);
  -[CLCKVO2MaxSessionAttributes setStartTime:](v3, "setStartTime:", *(double *)(a2 + 8));
  -[CLCKVO2MaxSessionAttributes setMeanMaxMets:](v3, "setMeanMaxMets:", *(double *)(a2 + 32));
  -[CLCKVO2MaxSessionAttributes setPrior:](v3, "setPrior:", *(double *)(a2 + 40));
  -[CLCKVO2MaxSessionAttributes setHardwareType:](v3, "setHardwareType:", *(unsigned int *)(a2 + 48));
  -[CLCKVO2MaxSessionAttributes setBetaBlockerUse:](v3, "setBetaBlockerUse:", *(unsigned __int8 *)(a2 + 52));
  -[CLCKVO2MaxSessionAttributes setAlgorithmVersion:](v3, "setAlgorithmVersion:", *(unsigned int *)(a2 + 56));
  return v3;
}

CLCKVO2MaxSummary *sub_100D75A60(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = objc_alloc_init(&OBJC_CLASS___CLCKVO2MaxSummary);
  -[CLCKVO2MaxSummary setStartTime:](v3, "setStartTime:", *(double *)(a2 + 8));
  -[CLCKVO2MaxSummary setWorkoutType:](v3, "setWorkoutType:", *(unsigned int *)(a2 + 16));
  -[CLCKVO2MaxSummary setDurationInSeconds:](v3, "setDurationInSeconds:", *(double *)(a2 + 40));
  -[CLCKVO2MaxSummary setPointCount:](v3, "setPointCount:", *(void *)(a2 + 48));
  -[CLCKVO2MaxSummary setHrMax:](v3, "setHrMax:", *(double *)(a2 + 64));
  -[CLCKVO2MaxSummary setHrMin:](v3, "setHrMin:", *(double *)(a2 + 56));
  -[CLCKVO2MaxSummary setHrMean:](v3, "setHrMean:", *(double *)(a2 + 72));
  -[CLCKVO2MaxSummary setHrConfidenceMean:](v3, "setHrConfidenceMean:", *(double *)(a2 + 80));
  -[CLCKVO2MaxSummary setHrCadenceAgreementMean:](v3, "setHrCadenceAgreementMean:", *(double *)(a2 + 88));
  -[CLCKVO2MaxSummary setVo2Mean:](v3, "setVo2Mean:", *(double *)(a2 + 96));
  -[CLCKVO2MaxSummary setSpeedMean:](v3, "setSpeedMean:", *(double *)(a2 + 104));
  -[CLCKVO2MaxSummary setGradeMean:](v3, "setGradeMean:", *(double *)(a2 + 112));
  -[CLCKVO2MaxSummary setCadenceMean:](v3, "setCadenceMean:", *(double *)(a2 + 120));
  -[CLCKVO2MaxSummary setHrVariance:](v3, "setHrVariance:", *(double *)(a2 + 128));
  -[CLCKVO2MaxSummary setHrConfidenceVariance:](v3, "setHrConfidenceVariance:", *(double *)(a2 + 136));
  -[CLCKVO2MaxSummary setHrCadenceAgreementVariance:](v3, "setHrCadenceAgreementVariance:", *(double *)(a2 + 144));
  -[CLCKVO2MaxSummary setVo2Variance:](v3, "setVo2Variance:", *(double *)(a2 + 152));
  -[CLCKVO2MaxSummary setSpeedVariance:](v3, "setSpeedVariance:", *(double *)(a2 + 160));
  -[CLCKVO2MaxSummary setGradeVariance:](v3, "setGradeVariance:", *(double *)(a2 + 168));
  -[CLCKVO2MaxSummary setVo2MaxModelSource:](v3, "setVo2MaxModelSource:", *(unsigned int *)(a2 + 176));
  -[CLCKVO2MaxSummary setSessionType:](v3, "setSessionType:", *(unsigned int *)(a2 + 180));
  return v3;
}

CLCKVO2MaxEstimate *sub_100D75B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = objc_alloc_init(&OBJC_CLASS___CLCKVO2MaxEstimate);
  -[CLCKVO2MaxEstimate setStartTime:](v3, "setStartTime:", *(double *)(a2 + 24));
  -[CLCKVO2MaxEstimate setEstimatedVo2Max:](v3, "setEstimatedVo2Max:", *(double *)(a2 + 32));
  -[CLCKVO2MaxEstimate setWorkoutType:](v3, "setWorkoutType:", *(unsigned int *)(a2 + 40));
  -[CLCKVO2MaxEstimate setDurationInSeconds:](v3, "setDurationInSeconds:", *(double *)(a2 + 48));
  -[CLCKVO2MaxEstimate setHrMax:](v3, "setHrMax:", *(double *)(a2 + 56));
  -[CLCKVO2MaxEstimate setHrMin:](v3, "setHrMin:", *(double *)(a2 + 64));
  -[CLCKVO2MaxEstimate setVariance:](v3, "setVariance:", *(double *)(a2 + 88));
  -[CLCKVO2MaxEstimate setFilteredVo2Max:](v3, "setFilteredVo2Max:", *(double *)(a2 + 96));
  -[CLCKVO2MaxEstimate setSessionType:](v3, "setSessionType:", *(unsigned int *)(a2 + 104));
  -[CLCKVO2MaxEstimate setEligibleForHealthKit:](v3, "setEligibleForHealthKit:", *(unsigned __int8 *)(a2 + 108));
  -[CLCKVO2MaxEstimate setEligibleForCalorimetry:](v3, "setEligibleForCalorimetry:", *(unsigned __int8 *)(a2 + 109));
  -[CLCKVO2MaxEstimate setNumWorkoutsContrToEstimate:]( v3,  "setNumWorkoutsContrToEstimate:",  *(unsigned int *)(a2 + 112));
  -[CLCKVO2MaxEstimate setEstimatedHRResponseParam:](v3, "setEstimatedHRResponseParam:", *(double *)(a2 + 120));
  -[CLCKVO2MaxEstimate setEstimatedHRRecoveryParam:](v3, "setEstimatedHRRecoveryParam:", *(double *)(a2 + 128));
  -[CLCKVO2MaxEstimate setSessionVo2Max:](v3, "setSessionVo2Max:", *(double *)(a2 + 136));
  return v3;
}

uint64_t sub_100D75C70(uint64_t a1, void *a2, uint64_t a3)
{
  __int128 v6 = -[NSUUID initWithUUIDString:]( [NSUUID alloc],  "initWithUUIDString:",  [a2 sessionId]);
  -[NSUUID getUUIDBytes:](v6, "getUUIDBytes:", v23);

  *((void *)&v22 + 1) = 0LL;
  id v8 = sub_100D75DCC(v7, a2, (uint64_t)v21);
  *(void *)&__int128 v22 = a3;
  __p = 0LL;
  unint64_t v13 = 0LL;
  uint64_t v14 = 0LL;
  id v9 = sub_100D75E58((uint64_t)v8, a2, &__p);
  uint64_t v17 = 0LL;
  uint64_t v18 = 0LL;
  uint64_t v19 = 0LL;
  uint64_t v20 = 0LL;
  sub_100D76284((uint64_t)v9, a2, (uint64_t)v16);
  v15[2] = v21[2];
  v15[3] = v21[3];
  v15[4] = v22;
  v15[0] = v21[0];
  v15[1] = v21[1];
  uint64_t v10 = sub_100FCDFD0(a1 + 776, v23, (uint64_t)v15, (uint64_t *)&__p, (uint64_t)v16);
  if (__p)
  {
    unint64_t v13 = __p;
    operator delete(__p);
  }

  return v10;
}

void sub_100D75DA4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

id sub_100D75DCC(uint64_t a1, void *a2, uint64_t a3)
{
  id result = [a2 hasSessionAttributes];
  if ((_DWORD)result)
  {
    objc_msgSend(objc_msgSend(a2, "sessionAttributes"), "startTime");
    *(void *)(a3 + 8) = v6;
    objc_msgSend(objc_msgSend(a2, "sessionAttributes"), "meanMaxMets");
    *(void *)(a3 + 32) = v7;
    objc_msgSend(objc_msgSend(a2, "sessionAttributes"), "prior");
    *(void *)(a3 + 40) = v8;
    *(_DWORD *)(a3 + 48) = objc_msgSend(objc_msgSend(a2, "sessionAttributes"), "hardwareType");
    *(_BYTE *)(a3 + 52) = objc_msgSend(objc_msgSend(a2, "sessionAttributes"), "betaBlockerUse");
    id result = objc_msgSend(objc_msgSend(a2, "sessionAttributes"), "algorithmVersion");
    *(_DWORD *)(a3 + 56) = (_DWORD)result;
  }

  return result;
}

id sub_100D75E58(uint64_t a1, void *a2, void **a3)
{
  __int128 v71 = 0u;
  __int128 v72 = 0u;
  __int128 v73 = 0u;
  __int128 v74 = 0u;
  id v4 = [a2 summaries];
  id result = [v4 countByEnumeratingWithState:&v71 objects:v75 count:16];
  id v6 = result;
  if (result)
  {
    uint64_t v7 = *(void *)v72;
    uint64_t v61 = (uint64_t)(a3 + 2);
    do
    {
      uint64_t v8 = 0LL;
      do
      {
        if (*(void *)v72 != v7) {
          objc_enumerationMutation(v4);
        }
        id v9 = *(void **)(*((void *)&v71 + 1) + 8LL * (void)v8);
        objc_msgSend(v9, "startTime", v61);
        uint64_t v70 = v10;
        signed int v11 = [v9 workoutType];
        [v9 durationInSeconds];
        uint64_t v69 = v12;
        id v13 = [v9 pointCount];
        [v9 hrMax];
        uint64_t v68 = v14;
        [v9 hrMin];
        uint64_t v67 = v15;
        [v9 hrMean];
        uint64_t v66 = v16;
        [v9 hrConfidenceMean];
        uint64_t v65 = v17;
        [v9 hrCadenceAgreementMean];
        uint64_t v64 = v18;
        [v9 vo2Mean];
        uint64_t v63 = v19;
        [v9 speedMean];
        uint64_t v62 = v20;
        [v9 gradeMean];
        uint64_t v22 = v21;
        [v9 cadenceMean];
        uint64_t v24 = v23;
        [v9 hrVariance];
        uint64_t v26 = v25;
        [v9 hrConfidenceVariance];
        uint64_t v28 = v27;
        [v9 hrCadenceAgreementVariance];
        uint64_t v30 = v29;
        [v9 vo2Variance];
        uint64_t v32 = v31;
        [v9 speedVariance];
        uint64_t v34 = v33;
        [v9 gradeVariance];
        uint64_t v36 = v35;
        unsigned int v37 = [v9 vo2MaxModelSource];
        unsigned int v38 = [v9 sessionType];
        unsigned int v39 = v38;
        __int128 v40 = (char *)a3[1];
        __int128 v41 = (char *)a3[2];
        if (v40 >= v41)
        {
          unint64_t v43 = 0xD37A6F4DE9BD37A7LL * ((v40 - (_BYTE *)*a3) >> 3);
          unint64_t v44 = v43 + 1;
          if (v43 + 1 > 0x1642C8590B21642LL) {
            sub_100007008();
          }
          unint64_t v45 = 0xD37A6F4DE9BD37A7LL * ((v41 - (_BYTE *)*a3) >> 3);
          if (2 * v45 > v44) {
            unint64_t v44 = 2 * v45;
          }
          if (v45 >= 0xB21642C8590B21LL) {
            unint64_t v46 = 0x1642C8590B21642LL;
          }
          else {
            unint64_t v46 = v44;
          }
          if (v46) {
            __int128 v47 = (char *)sub_1002DF6FC(v61, v46);
          }
          else {
            __int128 v47 = 0LL;
          }
          __int128 v48 = &v47[184 * v43];
          *(void *)__int128 v48 = 0LL;
          *((void *)v48 + 1) = v70;
          *((void *)v48 + 2) = v11;
          *((void *)v48 + 5) = v69;
          *((void *)v48 + 6) = v13;
          *((void *)v48 + 7) = v67;
          *((void *)v48 + 8) = v68;
          *((void *)v48 + 9) = v66;
          *((void *)v48 + 10) = v65;
          *((void *)v48 + 11) = v64;
          *((void *)v48 + 12) = v63;
          *((void *)v48 + 13) = v62;
          *((void *)v48 + 14) = v22;
          *((void *)v48 + 15) = v24;
          *((void *)v48 + 16) = v26;
          *((void *)v48 + 17) = v28;
          *((void *)v48 + 18) = v30;
          *((void *)v48 + 19) = v32;
          *((void *)v48 + 20) = v34;
          *((void *)v48 + 21) = v36;
          *((_DWORD *)v48 + 44) = v37;
          *((_DWORD *)v48 + 45) = v39;
          __int128 v50 = (char *)*a3;
          __int128 v49 = (char *)a3[1];
          __int128 v51 = v48;
          if (v49 != *a3)
          {
            do
            {
              __int128 v52 = *(_OWORD *)(v49 - 184);
              __int128 v53 = *(_OWORD *)(v49 - 168);
              __int128 v54 = *(_OWORD *)(v49 - 152);
              *(_OWORD *)(v51 - 136) = *(_OWORD *)(v49 - 136);
              *(_OWORD *)(v51 - 152) = v54;
              *(_OWORD *)(v51 - 168) = v53;
              *(_OWORD *)(v51 - 184) = v52;
              __int128 v55 = *(_OWORD *)(v49 - 120);
              __int128 v56 = *(_OWORD *)(v49 - 104);
              __int128 v57 = *(_OWORD *)(v49 - 88);
              *(_OWORD *)(v51 - 72) = *(_OWORD *)(v49 - 72);
              *(_OWORD *)(v51 - 88) = v57;
              *(_OWORD *)(v51 - 104) = v56;
              *(_OWORD *)(v51 - 120) = v55;
              __int128 v58 = *(_OWORD *)(v49 - 56);
              __int128 v59 = *(_OWORD *)(v49 - 40);
              __int128 v60 = *(_OWORD *)(v49 - 24);
              *((void *)v51 - 1) = *((void *)v49 - 1);
              *(_OWORD *)(v51 - sub_100BDC958(v1 + 24) = v60;
              *(_OWORD *)(v51 - 40) = v59;
              *(_OWORD *)(v51 - 56) = v58;
              v51 -= 184;
              v49 -= 184;
            }

            while (v49 != v50);
            __int128 v49 = (char *)*a3;
          }

          uint64_t v42 = v48 + 184;
          *a3 = v51;
          a3[1] = v48 + 184;
          a3[2] = &v47[184 * v46];
          if (v49) {
            operator delete(v49);
          }
        }

        else
        {
          *(void *)__int128 v40 = 0LL;
          *((void *)v40 + 1) = v70;
          *((void *)v40 + 2) = v11;
          *((void *)v40 + 5) = v69;
          *((void *)v40 + 6) = v13;
          *((void *)v40 + 7) = v67;
          *((void *)v40 + 8) = v68;
          *((void *)v40 + 9) = v66;
          *((void *)v40 + 10) = v65;
          *((void *)v40 + 11) = v64;
          *((void *)v40 + 12) = v63;
          *((void *)v40 + 13) = v62;
          *((void *)v40 + 14) = v22;
          *((void *)v40 + 15) = v24;
          *((void *)v40 + 16) = v26;
          *((void *)v40 + 17) = v28;
          *((void *)v40 + 18) = v30;
          *((void *)v40 + 19) = v32;
          *((void *)v40 + 20) = v34;
          *((void *)v40 + 21) = v36;
          uint64_t v42 = v40 + 184;
          *((_DWORD *)v40 + 44) = v37;
          *((_DWORD *)v40 + 45) = v38;
        }

        a3[1] = v42;
        uint64_t v8 = (char *)v8 + 1;
      }

      while (v8 != v6);
      id result = [v4 countByEnumeratingWithState:&v71 objects:v75 count:16];
      id v6 = result;
    }

    while (result);
  }

  return result;
}

id sub_100D76284(uint64_t a1, void *a2, uint64_t a3)
{
  id result = [a2 hasEstimate];
  if ((_DWORD)result)
  {
    objc_msgSend(objc_msgSend(a2, "estimate"), "startTime");
    *(void *)(a3 + sub_100BDC958(v1 + 24) = v6;
    objc_msgSend(objc_msgSend(a2, "estimate"), "estimatedVo2Max");
    *(void *)(a3 + 32) = v7;
    *(void *)(a3 + 40) = (int)objc_msgSend(objc_msgSend(a2, "estimate"), "workoutType");
    objc_msgSend(objc_msgSend(a2, "estimate"), "durationInSeconds");
    *(void *)(a3 + 48) = v8;
    objc_msgSend(objc_msgSend(a2, "estimate"), "hrMax");
    *(void *)(a3 + 56) = v9;
    objc_msgSend(objc_msgSend(a2, "estimate"), "hrMin");
    *(void *)(a3 + 64) = v10;
    objc_msgSend(objc_msgSend(a2, "estimate"), "variance");
    *(void *)(a3 + 88) = v11;
    objc_msgSend(objc_msgSend(a2, "estimate"), "filteredVo2Max");
    *(void *)(a3 + 96) = v12;
    *(_DWORD *)(a3 + 104) = objc_msgSend(objc_msgSend(a2, "estimate"), "sessionType");
    *(_BYTE *)(a3 + 108) = objc_msgSend(objc_msgSend(a2, "estimate"), "eligibleForHealthKit");
    *(_BYTE *)(a3 + 109) = objc_msgSend(objc_msgSend(a2, "estimate"), "eligibleForCalorimetry");
    *(_DWORD *)(a3 + 112) = objc_msgSend(objc_msgSend(a2, "estimate"), "numWorkoutsContrToEstimate");
    objc_msgSend(objc_msgSend(a2, "estimate"), "estimatedHRResponseParam");
    *(void *)(a3 + 120) = v13;
    objc_msgSend(objc_msgSend(a2, "estimate"), "estimatedHRRecoveryParam");
    *(void *)(a3 + 128) = v14;
    id result = objc_msgSend(objc_msgSend(a2, "estimate"), "sessionVo2Max");
    *(void *)(a3 + 136) = v15;
  }

  return result;
}

BOOL sub_100D763A4(uint64_t a1)
{
  return sub_100FD1578(a1 + 776);
}

double sub_100D763AC(uint64_t a1, double a2)
{
  return sub_100407D80(a1 + 320, a2);
}

void sub_100D763B4(id a1)
{
  qword_1019346E8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "VO2Max");
}

__n128 sub_100D763E0(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 28 * ((v4 - v5) >> 3) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0LL;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    sub_100D76508(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }

  unint64_t v8 = *(void *)(v5 + 8 * (v7 / 0x1C)) + 144 * (v7 % 0x1C);
  *(_OWORD *)unint64_t v8 = *(_OWORD *)a2;
  __int128 v9 = *(_OWORD *)(a2 + 16);
  __int128 v10 = *(_OWORD *)(a2 + 32);
  __int128 v11 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v8 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v8 + 64) = v11;
  *(_OWORD *)(v8 + 16) = v9;
  *(_OWORD *)(v8 + 32) = v10;
  __n128 result = *(__n128 *)(a2 + 80);
  __int128 v13 = *(_OWORD *)(a2 + 96);
  __int128 v14 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(v8 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v8 + 128) = v14;
  *(__n128 *)(v8 + 80) = result;
  *(_OWORD *)(v8 + 96) = v13;
  ++a1[5];
  return result;
}

void sub_100D764B0(id a1)
{
  qword_1019344B8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Motion");
}

void sub_100D764DC(id a1)
{
  qword_101934518 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Pedometer");
}

void sub_100D76508(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x1C;
  unint64_t v4 = v2 - 28;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    unint64_t v7 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    __int128 v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)unint64_t v8 = v10;
      a1[2] += 8LL;
      return;
    }

    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000071BC(v5, v33);
      uint64_t v35 = &v34[8 * (v33 >> 2)];
      unsigned int v37 = &v34[8 * v36];
      unsigned int v38 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        unint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v40 = 8 * (v39 >> 3);
        __int128 v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)__int128 v41 = v42;
          v41 += 8;
          v40 -= 8LL;
        }

        while (v40);
      }

      goto LABEL_30;
    }

void sub_100D767D0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_100D768C0(id a1)
{
  qword_10199E148 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLPencilStateSilo");
}

uint64_t sub_100D76974(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100D76B30;
  block[3] = &unk_10181A288;
  void block[4] = a1;
  if (qword_10199E168 != -1) {
    dispatch_once(&qword_10199E168, block);
  }
  return qword_1019A2090;
}

void sub_100D76B14(id a1)
{
  byte_10199E158 = sub_1004F75F8();
}

uint64_t sub_100D76B30(uint64_t a1)
{
  unint64_t v2 = operator new(0x88uLL);
  uint64_t result = sub_100D76B98((uint64_t)v2, "CLPencilState", *(void **)(a1 + 32));
  void *v2 = off_101881AA8;
  v2[14] = 0LL;
  v2[15] = 0LL;
  *((_WORD *)v2 + 64) = 0;
  qword_1019A2090 = (uint64_t)v2;
  return result;
}

void sub_100D76B84(_Unwind_Exception *a1)
{
}

uint64_t sub_100D76B98(uint64_t a1, char *a2, void *a3)
{
  *(void *)a1 = off_101881C30;
  sub_1010DDBC0((void *)(a1 + 8), a2);
  *(void *)(a1 + 32) = a3;
  *(void *)(a1 + 40) = [a3 silo];
  *(void *)(a1 + 48) = 0LL;
  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + 56) = a1 + 64;
  *(void *)(a1 + 88) = 0LL;
  *(void *)(a1 + 96) = 0LL;
  *(void *)(a1 + 72) = 0LL;
  *(void *)(a1 + 80) = a1 + 88;
  *(_DWORD *)(a1 + 104) = 0;
  *(_BYTE *)(a1 + 108) = 0;
  return a1;
}

void sub_100D76C18(_Unwind_Exception *exception_object)
{
}

void sub_100D76C34(uint64_t a1)
{
  *(void *)(a1 + 112) = 0LL;

  *(void *)(a1 + 120) = 0LL;
}

void *sub_100D76C68@<X0>(_DWORD *a1@<X1>, void *a2@<X8>)
{
  return sub_1010DDBC0(a2, __str);
}

void sub_100D76CE0(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  unint64_t v8 = operator new(0x30uLL);
  sub_1010DDBC0(__p, "CLPencilState");
  sub_100D76DA8((uint64_t)v8, 0LL, (uint64_t *)__p, a3, a1, a2);
  *unint64_t v8 = off_101881B88;
  *a4 = v8;
  if (v10 < 0) {
    operator delete(__p[0]);
  }
}

void sub_100D76D7C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_100D76DA8(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4, uint64_t a5, uint64_t a6)
{
  *(void *)a1 = off_101881D80;
  *(void *)(a1 + 8) = -[CLNotifierClientAdapter initWithClient:]( objc_alloc(&OBJC_CLASS___CLNotifierClientAdapter),  "initWithClient:",  a1);
  *(void *)(a1 + sub_100BDC958(v1 + 24) = a5;
  *(void *)(a1 + 32) = a6;
  else {
    uint64_t v12 = (uint64_t *)*a3;
  }
  id v13 = objc_msgSend( objc_msgSend(a4, "vendor"),  "proxyForService:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v12));
  *(void *)(a1 + 16) = v13;
  id v14 = v13;
  if (a2) {
    [*(id *)(a1 + 16) setDelegateEntityName:a2];
  }
  objc_msgSend(*(id *)(a1 + 16), "registerDelegate:inSilo:", *(void *)(a1 + 8), objc_msgSend(a4, "silo"));
  return a1;
}

void sub_100D76E80(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100D78924(a1);
  operator delete(v1);
}

void sub_100D76E94(uint64_t a1, uint64_t a2)
{
  HIDWORD(v15) = a2;
  if (!*(_BYTE *)(a1 + 108))
  {
    uint64_t v4 = *(void *)(a1 + 88);
    if (!v4) {
      goto LABEL_12;
    }
    uint64_t v5 = a1 + 80;
    uint64_t v6 = a1 + 88;
    do
    {
      int v7 = *(_DWORD *)(v4 + 32);
      BOOL v8 = v7 < (int)a2;
      else {
        __int128 v9 = (uint64_t *)(v4 + 8);
      }
      if (!v8) {
        uint64_t v6 = v4;
      }
      uint64_t v4 = *v9;
    }

    while (*v9);
    if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= (int)a2)
    {
      while (*(void *)(v6 + 56))
      {
        *(_DWORD *)buf = *(_DWORD *)(*(void *)(v6 + 40) + 28LL);
        (*(void (**)(uint64_t, uint64_t, uint8_t *))(*(void *)a1 + 112LL))(a1, a2, buf);
      }

      sub_100233254(v5, (int *)&v15 + 1);
    }

    else
    {
LABEL_12:
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101881C00);
      }
      char v10 = (os_log_s *)qword_1019349D8;
      if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
      {
        uint64_t v11 = (void *)(a1 + 8);
        *(_DWORD *)buf = 136446466;
        uint64_t v21 = v11;
        __int16 v22 = 1026;
        int v23 = a2;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
          buf,
          0x12u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_101881C00);
        }
        uint64_t v12 = (void *)(a1 + 8);
        int v16 = 136446466;
        uint64_t v17 = v12;
        __int16 v18 = 1026;
        int v19 = a2;
        LODWORD(v15) = 18;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
          &v16,
          v15);
        id v14 = (uint8_t *)v13;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLNotifier<CLPencilState_Type::Notification, CLPencilState_Type::NotificationData, char, char>::r emoveClient(int) [Notification_T = CLPencilState_Type::Notification, NotificationData_T = CLPencilState_Type:: NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v13);
        if (v14 != buf) {
          free(v14);
        }
      }
    }
  }

uint64_t sub_100D77108(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void *))(*(void *)a1 + 96LL))( a1,  a2,  a3,  &unk_101990B10);
}

uint64_t sub_100D7711C(uint64_t a1, int a2, int *a3, char *a4)
{
  int v42 = a2;
  if (*(_BYTE *)(a1 + 108)) {
    return 0LL;
  }
  uint64_t v7 = *(void *)(a1 + 88);
  if (v7)
  {
    uint64_t v10 = a1 + 88;
    do
    {
      int v11 = *(_DWORD *)(v7 + 32);
      BOOL v12 = v11 < a2;
      if (v11 >= a2) {
        id v13 = (uint64_t *)v7;
      }
      else {
        id v13 = (uint64_t *)(v7 + 8);
      }
      if (!v12) {
        uint64_t v10 = v7;
      }
      uint64_t v7 = *v13;
    }

    while (*v13);
    if (v10 != a1 + 88 && *(_DWORD *)(v10 + 32) <= a2)
    {
      *(void *)unint64_t v43 = v10;
      int v17 = *a3;
      uint64_t v20 = *(void *)(v10 + 48);
      uint64_t v19 = v10 + 48;
      uint64_t v18 = v20;
      if (!v20) {
        goto LABEL_31;
      }
      uint64_t v21 = v19;
      do
      {
        int v22 = *(_DWORD *)(v18 + 28);
        BOOL v23 = v22 < v17;
        if (v22 >= v17) {
          uint64_t v24 = (uint64_t *)v18;
        }
        else {
          uint64_t v24 = (uint64_t *)(v18 + 8);
        }
        if (!v23) {
          uint64_t v21 = v18;
        }
        uint64_t v18 = *v24;
      }

      while (*v24);
      if (v21 == v19 || v17 < *(_DWORD *)(v21 + 28)) {
LABEL_31:
      }
        uint64_t v21 = v19;
      uint64_t v25 = *(void *)(a1 + 64);
      if (!v25) {
        goto LABEL_42;
      }
      uint64_t v26 = a1 + 64;
      do
      {
        int v27 = *(_DWORD *)(v25 + 32);
        BOOL v28 = v27 < v17;
        if (v27 >= v17) {
          uint64_t v29 = (uint64_t *)v25;
        }
        else {
          uint64_t v29 = (uint64_t *)(v25 + 8);
        }
        if (!v28) {
          uint64_t v26 = v25;
        }
        uint64_t v25 = *v29;
      }

      while (*v29);
      if (v26 != a1 + 64 && v17 >= *(_DWORD *)(v26 + 32))
      {
        uint64_t v41 = v26;
        uint64_t v34 = *(void *)(v26 + 56);
        char v35 = *a4;
        *(void *)buf = &v42;
        *((_BYTE *)sub_1004EF3D4((uint64_t **)(v26 + 40), &v42, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = v35;
        buf[0] = 0;
        if (v21 == v19
          && (*(unsigned int (**)(uint64_t, int *, _BYTE *))(*(void *)a1 + 128LL))(a1, a3, buf))
        {
          uint64_t v36 = sub_100D797C4(buf);
          sub_100D78DEC((_BYTE *)a1, (uint64_t)v43, (uint64_t)&v41, v36);
        }

        if (v34) {
          goto LABEL_44;
        }
      }

      else
      {
LABEL_42:
        uint64_t v41 = a1 + 64;
        char v30 = byte_101990B11;
        HIDWORD(v40) = v17;
        *(void *)buf = (char *)&v40 + 4;
        *((_BYTE *)sub_10023347C((uint64_t **)(a1 + 56), (int *)&v40 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 80) = v30;
        HIDWORD(v40) = *a3;
        *(void *)buf = (char *)&v40 + 4;
        __int128 v31 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v40 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        sub_1000F0D38(v31 + 8);
        char v32 = *a4;
        HIDWORD(v40) = *a3;
        *(void *)buf = (char *)&v40 + 4;
        unint64_t v33 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v40 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        *(void *)buf = &v42;
        *((_BYTE *)sub_1004EF3D4(v33 + 5, &v42, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = v32;
      }

      (*(void (**)(uint64_t, int *))(*(void *)a1 + 168LL))(a1, a3);
LABEL_44:
      if (v21 == v19)
      {
        *(_DWORD *)buf = *a3;
        sub_10004A8FC((uint64_t **)(*(void *)v43 + 40LL), (int *)buf, buf);
      }

      return 1LL;
    }
  }

  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101881C00);
  }
  id v14 = (os_log_s *)qword_1019349D8;
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
  {
    uint64_t v15 = (void *)(a1 + 8);
    *(_DWORD *)buf = 136446466;
    *(void *)&uint8_t buf[4] = v15;
    __int16 v47 = 1026;
    int v48 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
      buf,
      0x12u);
  }

  BOOL v16 = sub_1002921D0(115, 0);
  uint64_t result = 0LL;
  if (v16)
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101881C00);
    }
    unsigned int v37 = (void *)(a1 + 8);
    *(_DWORD *)unint64_t v43 = 136446466;
    *(void *)&v43[4] = v37;
    __int16 v44 = 1026;
    int v45 = a2;
    LODWORD(v40) = 18;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
      v43,
      v40);
    uint64_t v39 = (char *)v38;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLPencilState_Type::Notification, CLPencilState_Type::NotificationData, char, char>::regis terForNotification(int, const Notification_T &, const RegistrationInfo_T &) [Notification_T = CLPencilState_Type:: Notification, NotificationData_T = CLPencilState_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v38);
    if (v39 != buf) {
      free(v39);
    }
    return 0LL;
  }

  return result;
}

BOOL sub_100D77578(uint64_t a1, int a2, int *a3)
{
  uint64_t v5 = *(void *)(a1 + 88);
  if (!v5) {
    goto LABEL_11;
  }
  uint64_t v6 = a1 + 88;
  do
  {
    int v7 = *(_DWORD *)(v5 + 32);
    BOOL v8 = v7 < a2;
    if (v7 >= a2) {
      __int128 v9 = (uint64_t *)v5;
    }
    else {
      __int128 v9 = (uint64_t *)(v5 + 8);
    }
    if (!v8) {
      uint64_t v6 = v5;
    }
    uint64_t v5 = *v9;
  }

  while (*v9);
  if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= a2)
  {
    uint64_t v16 = *(void *)(v6 + 48);
    uint64_t v14 = v6 + 48;
    uint64_t v15 = v16;
    if (!v16) {
      goto LABEL_29;
    }
    int v17 = *a3;
    uint64_t v18 = v14;
    do
    {
      int v19 = *(_DWORD *)(v15 + 28);
      BOOL v20 = v19 < v17;
      if (v19 >= v17) {
        uint64_t v21 = (uint64_t *)v15;
      }
      else {
        uint64_t v21 = (uint64_t *)(v15 + 8);
      }
      if (!v20) {
        uint64_t v18 = v15;
      }
      uint64_t v15 = *v21;
    }

    while (*v21);
    if (v18 == v14 || v17 < *(_DWORD *)(v18 + 28)) {
LABEL_29:
    }
      uint64_t v18 = v14;
    return v18 != v14;
  }

  else
  {
LABEL_11:
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101881C00);
    }
    uint64_t v10 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
    {
      int v11 = (void *)(a1 + 8);
      *(_DWORD *)buf = 136446466;
      char v30 = v11;
      __int16 v31 = 1026;
      int v32 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
        buf,
        0x12u);
    }

    BOOL v12 = sub_1002921D0(115, 0);
    BOOL result = 0LL;
    if (v12)
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101881C00);
      }
      int v22 = (void *)(a1 + 8);
      int v25 = 136446466;
      uint64_t v26 = v22;
      __int16 v27 = 1026;
      int v28 = a2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
        &v25,
        18);
      uint64_t v24 = (uint8_t *)v23;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLPencilState_Type::Notification, CLPencilState_Type::NotificationData, char, char>::cli entRegistered(int, const Notification_T &) [Notification_T = CLPencilState_Type::Notification, NotificationData_ T = CLPencilState_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v23);
      if (v24 != buf) {
        free(v24);
      }
      return 0LL;
    }
  }

  return result;
}

BOOL sub_100D777F8(char *a1, int a2, int *a3)
{
  HIDWORD(v34) = a2;
  int v3 = a1[108];
  if (!a1[108])
  {
    uint64_t v6 = *((void *)a1 + 11);
    if (v6)
    {
      BOOL v8 = a1 + 88;
      do
      {
        int v9 = *(_DWORD *)(v6 + 32);
        BOOL v10 = v9 < a2;
        if (v9 >= a2) {
          int v11 = (uint64_t *)v6;
        }
        else {
          int v11 = (uint64_t *)(v6 + 8);
        }
        if (!v10) {
          BOOL v8 = (char *)v6;
        }
        uint64_t v6 = *v11;
      }

      while (*v11);
      if (v8 != a1 + 88 && *((_DWORD *)v8 + 8) <= a2)
      {
        uint64_t v14 = (char *)*((void *)v8 + 6);
        BOOL v12 = v8 + 48;
        id v13 = v14;
        if (v14)
        {
          int v15 = *a3;
          uint64_t v16 = v12;
          do
          {
            int v17 = *((_DWORD *)v13 + 7);
            BOOL v18 = v17 < v15;
            if (v17 >= v15) {
              int v19 = (char **)v13;
            }
            else {
              int v19 = (char **)(v13 + 8);
            }
            if (!v18) {
              uint64_t v16 = v13;
            }
            id v13 = *v19;
          }

          while (*v19);
          if (v16 != v12 && v15 >= *((_DWORD *)v16 + 7))
          {
            LODWORD(__p[0]) = *a3;
            sub_1004EF494((uint64_t)(v12 - 8), (int *)__p);
            uint64_t v20 = *((void *)a1 + 8);
            if (!v20) {
              goto LABEL_33;
            }
            int v21 = *a3;
            int v22 = a1 + 64;
            do
            {
              int v23 = *(_DWORD *)(v20 + 32);
              BOOL v24 = v23 < v21;
              if (v23 >= v21) {
                int v25 = (uint64_t *)v20;
              }
              else {
                int v25 = (uint64_t *)(v20 + 8);
              }
              if (!v24) {
                int v22 = (char *)v20;
              }
              uint64_t v20 = *v25;
            }

            while (*v25);
            if (v22 != a1 + 64 && v21 >= *((_DWORD *)v22 + 8))
            {
              sub_1004EF494((uint64_t)(v22 + 40), (int *)&v34 + 1);
              if (!*((void *)v22 + 7)) {
                (*(void (**)(char *, int *))(*(void *)a1 + 176LL))(a1, a3);
              }
            }

            else
            {
LABEL_33:
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101881C00);
              }
              uint64_t v26 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                __int16 v27 = a1 + 8;
                if (a1[31] < 0) {
                  __int16 v27 = (void *)*v27;
                }
                (*(void (**)(void **__return_ptr, char *, int *))(*(void *)a1 + 160LL))(__p, a1, a3);
                if (v44 >= 0) {
                  int v28 = __p;
                }
                else {
                  int v28 = (void **)__p[0];
                }
                *(_DWORD *)buf = 136446466;
                *(void *)&uint8_t buf[4] = v27;
                __int16 v36 = 2082;
                unsigned int v37 = v28;
                _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_FAULT,  "%{public}s; notification %{public}s not found",
                  buf,
                  0x16u);
                if (v44 < 0) {
                  operator delete(__p[0]);
                }
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(__p, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_101881C00);
                }
                uint64_t v29 = a1 + 8;
                if (a1[31] < 0) {
                  uint64_t v29 = (void *)*v29;
                }
                uint64_t v30 = qword_1019349D8;
                (*(void (**)(_BYTE *__return_ptr, char *, int *))(*(void *)a1 + 160LL))(buf, a1, a3);
                if (v38 >= 0) {
                  __int16 v31 = buf;
                }
                else {
                  __int16 v31 = *(_BYTE **)buf;
                }
                int v39 = 136446466;
                uint64_t v40 = v29;
                __int16 v41 = 2082;
                int v42 = v31;
                LODWORD(v34) = 22;
                _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v30,  17LL,  "%{public}s; notification %{public}s not found",
                  &v39,
                  v34);
                unint64_t v33 = v32;
                if (v38 < 0) {
                  operator delete(*(void **)buf);
                }
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLPencilState_Type::Notification, CLPencilState_Type::NotificationData, char, char>::unregisterForNotification(int, const Notification_T &) [Notification_T = CLPencilState_Type::No tification, NotificationData_T = CLPencilState_Type::NotificationData, NotificationInfo_T = char, Regi strationInfo_T = char]",  "%s\n",  v33);
              }
            }
          }
        }
      }
    }
  }

  return v3 == 0;
}

uint64_t sub_100D77B80(uint64_t a1, int *a2, char *a3)
{
  uint64_t v6 = operator new(0x20uLL);
  v6[2] = 0LL;
  *uint64_t v6 = off_101881D10;
  v6[1] = 0LL;
  char v7 = *a3;
  *((void *)&v14 + 1) = v6;
  *((_BYTE *)v6 + sub_100BDC958(v1 + 24) = v7;
  *(void *)&__int128 v14 = v6 + 3;
  int v13 = *a2;
  int v15 = &v13;
  BOOL v8 = sub_10023347C((uint64_t **)(a1 + 56), &v13, (uint64_t)&unk_1012CF090, &v15);
  sub_10005F550((uint64_t)(v8 + 8), &v14);
  int v9 = (std::__shared_weak_count *)*((void *)&v14 + 1);
  if (*((void *)&v14 + 1))
  {
    BOOL v10 = (unint64_t *)(*((void *)&v14 + 1) + 8LL);
    do
      unint64_t v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }

  return 1LL;
}

void sub_100D77C54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100D77C68(uint64_t a1, unsigned int *a2, _BYTE *a3, int a4, int a5)
{
  if (!*(_BYTE *)(a1 + 108))
  {
    BOOL v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: notifyClientsWithData (Fallback)",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_IF_NONE_PRESENT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101881C00);
    }
    unint64_t v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      BOOL v12 = (void *)(a1 + 8);
      int v13 = (std::__shared_weak_count *)*a2;
      *(_DWORD *)buf = 68289794;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&buf[18] = 2082;
      *(void *)&buf[20] = "activity";
      __int16 v67 = 2082;
      uint64_t v68 = v12;
      __int16 v69 = 2050;
      uint64_t v70 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:notifyClientsWithData, event:%{public, location:escape_only}s, name:%{public, l ocation:escape_only}s, notification:%{public}lld}",  buf,  0x30u);
    }

    int v15 = (__n128 *)(a1 + 64);
    __int128 v14 = *(__n128 **)(a1 + 64);
    if (!v14) {
      goto LABEL_18;
    }
    signed __int32 v16 = *a2;
    int v17 = (__n128 *)(a1 + 64);
    do
    {
      signed __int32 v18 = v14[2].n128_i32[0];
      BOOL v19 = v18 < v16;
      if (v18 >= v16) {
        uint64_t v20 = (__n128 **)v14;
      }
      else {
        uint64_t v20 = (__n128 **)&v14->n128_u64[1];
      }
      if (!v19) {
        int v17 = v14;
      }
      __int128 v14 = *v20;
    }

    while (*v20);
    if (v17 == v15 || v16 < (signed __int32)v17[2].n128_u32[0])
    {
LABEL_18:
      *(void *)__int128 v71 = &v71[8];
      memset(&v71[8], 0, 24);
      __int128 v72 = 0LL;
      sub_1002343E4((uint64_t)buf, a2, (uint64_t)v71);
      int v17 = sub_1002342A4((uint64_t **)(a1 + 56), (__n128 *)buf);
      int v21 = v70;
      if (v70)
      {
        p_shared_owners = (unint64_t *)&v70->__shared_owners_;
        do
          unint64_t v23 = __ldaxr(p_shared_owners);
        while (__stlxr(v23 - 1, p_shared_owners));
        if (!v23)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }

      sub_100008390((uint64_t)&buf[8], *(void **)&buf[16]);
      BOOL v24 = v72;
      if (v72)
      {
        int v25 = (unint64_t *)&v72->__shared_owners_;
        do
          unint64_t v26 = __ldaxr(v25);
        while (__stlxr(v26 - 1, v25));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }

      sub_100008390((uint64_t)v71, *(void **)&v71[8]);
    }

    if (a4)
    {
      __int16 v27 = operator new(0x20uLL);
      v27[2] = 0LL;
      *__int16 v27 = off_101881D10;
      v27[1] = 0LL;
      *((_BYTE *)v27 + sub_100BDC958(v1 + 24) = *a3;
      *(void *)buf = v27 + 3;
      *(void *)&uint8_t buf[8] = v27;
      sub_10005F550((uint64_t)&v17[4], (__int128 *)buf);
      int v28 = *(std::__shared_weak_count **)&buf[8];
      if (*(void *)&buf[8])
      {
        uint64_t v29 = (unint64_t *)(*(void *)&buf[8] + 8LL);
        do
          unint64_t v30 = __ldaxr(v29);
        while (__stlxr(v30 - 1, v29));
        if (!v30)
        {
          ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
          std::__shared_weak_count::__release_weak(v28);
        }
      }
    }

    else
    {
      sub_1000F0D38((__n128 *)v17[4].n128_u64);
    }

    if (!v17[3].n128_u64[1]) {
      goto LABEL_83;
    }
    __int16 v31 = sub_100D78998(a3);
    if (a5 == -1)
    {
      sub_100D78A18((void *)a1, (int *)a2, v31);
    }

    else
    {
      uint64_t v32 = a1 + 88;
      uint64_t v33 = *(void *)(a1 + 88);
      if (!v33) {
        goto LABEL_48;
      }
      uint64_t v34 = a1 + 88;
      do
      {
        int v35 = *(_DWORD *)(v33 + 32);
        BOOL v36 = v35 < a5;
        if (v35 >= a5) {
          unsigned int v37 = (uint64_t *)v33;
        }
        else {
          unsigned int v37 = (uint64_t *)(v33 + 8);
        }
        if (!v36) {
          uint64_t v34 = v33;
        }
        uint64_t v33 = *v37;
      }

      while (*v37);
      if (v34 == v32 || *(_DWORD *)(v34 + 32) > a5) {
LABEL_48:
      }
        uint64_t v34 = a1 + 88;
      uint64_t v64 = v34;
      unint64_t v38 = v15->n128_u64[0];
      if (!v15->n128_u64[0]) {
        goto LABEL_59;
      }
      int v39 = *a2;
      uint64_t v40 = (__n128 *)(a1 + 64);
      do
      {
        int v41 = *(_DWORD *)(v38 + 32);
        BOOL v42 = v41 < v39;
        if (v41 >= v39) {
          unint64_t v43 = (unint64_t *)v38;
        }
        else {
          unint64_t v43 = (unint64_t *)(v38 + 8);
        }
        if (!v42) {
          uint64_t v40 = (__n128 *)v38;
        }
        unint64_t v38 = *v43;
      }

      while (*v43);
      if (v40 == v15 || v39 < (signed __int32)v40[2].n128_u32[0])
      {
LABEL_59:
        uint64_t v63 = (__n128 *)(a1 + 64);
LABEL_60:
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_101881C00);
        }
        char v44 = (os_log_s *)qword_1019349D8;
        if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
        {
          int v45 = (void *)(a1 + 8);
          (*(void (**)(_BYTE *__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(v71, a1, a2);
          if (v71[23] >= 0) {
            unint64_t v46 = v71;
          }
          else {
            unint64_t v46 = *(_BYTE **)v71;
          }
          *(_DWORD *)buf = 136315650;
          *(void *)&uint8_t buf[4] = v45;
          *(_WORD *)&_BYTE buf[12] = 1024;
          *(_DWORD *)&buf[14] = a5;
          *(_WORD *)&buf[18] = 2080;
          *(void *)&buf[20] = v46;
          _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_DEBUG,  "%s; client %d has deregistered, not notifying %s",
            buf,
            0x1Cu);
          if ((v71[23] & 0x80000000) != 0) {
            operator delete(*(void **)v71);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019349D0 != -1) {
            dispatch_once(&qword_1019349D0, &stru_101881C00);
          }
          __int16 v47 = (void *)(a1 + 8);
          uint64_t v48 = qword_1019349D8;
          (*(void (**)(void **__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(__p, a1, a2);
          if (v62 >= 0) {
            uint64_t v49 = __p;
          }
          else {
            uint64_t v49 = (void **)__p[0];
          }
          *(_DWORD *)__int128 v71 = 136315650;
          *(void *)&v71[4] = v47;
          *(_WORD *)&v71[12] = 1024;
          *(_DWORD *)&v71[14] = a5;
          *(_WORD *)&v71[18] = 2080;
          *(void *)&v71[20] = v49;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v48,  2LL,  "%s; client %d has deregistered, not notifying %s",
            v71,
            28,
            v60);
          __int128 v51 = v50;
          if (v62 < 0) {
            operator delete(__p[0]);
          }
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLPencilState_Type::Notification, CLPencilState_Type::NotificationData, char, char>: :notifyClientsWithData(const Notification_T &, const NotificationData_T &, BOOL, int, BOOL) [Notification_T = CLPencilState_Type::Notification, NotificationData_T = CLPencilState_Type::NotificationData, NotificationI nfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v51);
          if (v51 != buf) {
            free(v51);
          }
        }

        goto LABEL_83;
      }

      uint64_t v63 = v40;
      if (v34 == v32) {
        goto LABEL_60;
      }
      uint64_t v54 = v40[3].n128_i64[0];
      uint64_t v52 = v40 + 3;
      __int128 v53 = (__n128 *)v54;
      if (!v54) {
        goto LABEL_60;
      }
      int v55 = *(_DWORD *)(v34 + 32);
      __int128 v56 = v52;
      do
      {
        int v57 = v53[1].n128_i32[3];
        BOOL v58 = v57 < v55;
        if (v57 >= v55) {
          __int128 v59 = v53;
        }
        else {
          __int128 v59 = (__n128 *)&v53->n128_i8[8];
        }
        if (!v58) {
          __int128 v56 = v53;
        }
        __int128 v53 = (__n128 *)v59->n128_u64[0];
      }

      while (v59->n128_u64[0]);
      sub_100D78DEC((_BYTE *)a1, (uint64_t)&v64, (uint64_t)&v63, v31);
    }

void sub_100D782A0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_activity_scope_state_s state, char a18)
{
}

void sub_100D782EC(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 108))
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101881C00);
    }
    unint64_t v2 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      int v3 = (void *)(a1 + 8);
      *(_DWORD *)buf = 136315138;
      unsigned int v37 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "%s; already shutdown; not listing clients",
        buf,
        0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101881C00);
      }
      uint64_t v4 = (void *)(a1 + 8);
      int v32 = 136315138;
      uint64_t v33 = v4;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; already shutdown; not listing clients",
        (const char *)&v32);
      uint64_t v6 = (uint8_t *)v5;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLPencilState_Type::Notification, CLPencilState_Type::NotificationData, char, char>::lis tClients() [Notification_T = CLPencilState_Type::Notification, NotificationData_T = CLPencilState_Type::Notifica tionData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v5);
      if (v6 != buf) {
        free(v6);
      }
    }
  }

  else
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101881C00);
    }
    char v7 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      BOOL v8 = (void *)(a1 + 8);
      uint64_t v9 = *(void *)(a1 + 96);
      *(_DWORD *)buf = 136315394;
      unsigned int v37 = v8;
      __int16 v38 = 2048;
      v39[0] = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "%s; listing clients, num clients: %zu",
        buf,
        0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101881C00);
      }
      __int16 v27 = (void *)(a1 + 8);
      uint64_t v28 = *(void *)(a1 + 96);
      int v32 = 136315394;
      uint64_t v33 = v27;
      __int16 v34 = 2048;
      v35[0] = v28;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; listing clients, num clients: %zu",
        (const char *)&v32,
        22);
      unint64_t v30 = (uint8_t *)v29;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLPencilState_Type::Notification, CLPencilState_Type::NotificationData, char, char>::lis tClients() [Notification_T = CLPencilState_Type::Notification, NotificationData_T = CLPencilState_Type::Notifica tionData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v29);
      if (v30 != buf) {
        free(v30);
      }
    }

    BOOL v10 = *(void **)(a1 + 80);
    if (v10 != (void *)(a1 + 88))
    {
      unint64_t v11 = (void *)(a1 + 8);
      do
      {
        BOOL v12 = (void *)v10[5];
        if (v12 != v10 + 6)
        {
          do
          {
            if (qword_1019349D0 != -1) {
              dispatch_once(&qword_1019349D0, &stru_101881C00);
            }
            int v13 = (os_log_s *)qword_1019349D8;
            if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
            {
              __int128 v14 = (void *)(a1 + 8);
              int v15 = *((_DWORD *)v10 + 8);
              int v16 = *((_DWORD *)v12 + 7);
              *(_DWORD *)buf = 136315650;
              unsigned int v37 = v14;
              __int16 v38 = 1024;
              LODWORD(v39[0]) = v15;
              WORD2(v39[0]) = 1024;
              *(_DWORD *)((char *)v39 + 6) = v16;
              _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "%s; clients, id: %d, notification: %d",
                buf,
                0x18u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101881C00);
              }
              uint64_t v20 = (void *)(a1 + 8);
              int v21 = *((_DWORD *)v10 + 8);
              int v22 = *((_DWORD *)v12 + 7);
              int v32 = 136315650;
              uint64_t v33 = v20;
              __int16 v34 = 1024;
              LODWORD(v35[0]) = v21;
              WORD2(v35[0]) = 1024;
              *(_DWORD *)((char *)v35 + 6) = v22;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; clients, id: %d, notification: %d",
                (const char *)&v32,
                24,
                v31);
              BOOL v24 = (uint8_t *)v23;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLPencilState_Type::Notification, CLPencilState_Type::NotificationData, char, ch ar>::listClients() [Notification_T = CLPencilState_Type::Notification, NotificationData_T = CLPencilStat e_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v23);
              if (v24 != buf) {
                free(v24);
              }
            }

            int v17 = (void *)v12[1];
            if (v17)
            {
              do
              {
                signed __int32 v18 = v17;
                int v17 = (void *)*v17;
              }

              while (v17);
            }

            else
            {
              do
              {
                signed __int32 v18 = (void *)v12[2];
                BOOL v19 = *v18 == (void)v12;
                BOOL v12 = v18;
              }

              while (!v19);
            }

            BOOL v12 = v18;
          }

          while (v18 != v10 + 6);
        }

        int v25 = (void *)v10[1];
        if (v25)
        {
          do
          {
            unint64_t v26 = v25;
            int v25 = (void *)*v25;
          }

          while (v25);
        }

        else
        {
          do
          {
            unint64_t v26 = (void *)v10[2];
            BOOL v19 = *v26 == (void)v10;
            BOOL v10 = v26;
          }

          while (!v19);
        }

        BOOL v10 = v26;
      }

      while (v26 != (void *)(a1 + 88));
    }
  }

void sub_100D78898(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100D79764(a1);
  operator delete(v1);
}

id sub_100D788AC(uint64_t a1, int a2, void *a3)
{
  id result = sub_100D78F18(a3);
  if (result)
  {
    int v6 = a2;
    return (id)(*(uint64_t (**)(void, int *, id, void))(a1 + 24))(0LL, &v6, result, *(void *)(a1 + 32));
  }

  return result;
}

void sub_100D788F8(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

uint64_t sub_100D78924(uint64_t a1)
{
  *(void *)a1 = off_101881C30;
  [*(id *)(a1 + 48) invalidate];

  sub_100231CA4(a1 + 80, *(void **)(a1 + 88));
  sub_100231CF0(a1 + 56, *(void **)(a1 + 64));
  return a1;
}

CLCppContainer *sub_100D78998(_BYTE *a1)
{
  unint64_t v2 = operator new(1uLL);
  _BYTE *v2 = *a1;
  uint64_t v4 = _NSConcreteStackBlock;
  uint64_t v5 = 3221225472LL;
  int v6 = sub_100D78F08;
  char v7 = &unk_10181D3D0;
  BOOL v8 = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:");
}

void sub_100D78A18(void *a1, int *a2, void *a3)
{
  if (!*((_BYTE *)a1 + 108))
  {
    uint64_t v5 = a1 + 8;
    uint64_t v4 = a1[8];
    if (v4)
    {
      int v8 = *a2;
      uint64_t v9 = a1 + 8;
      do
      {
        int v10 = *(_DWORD *)(v4 + 32);
        BOOL v11 = v10 < v8;
        if (v10 >= v8) {
          BOOL v12 = (uint64_t *)v4;
        }
        else {
          BOOL v12 = (uint64_t *)(v4 + 8);
        }
        if (!v11) {
          uint64_t v9 = (void *)v4;
        }
        uint64_t v4 = *v12;
      }

      while (*v12);
      if (v9 != v5 && v8 >= *((_DWORD *)v9 + 8))
      {
        __int128 v51 = v9;
        id v13 = sub_100D78F18(a3);
        (*(void (**)(void *, int *, id, void *))(*a1 + 184LL))(a1, a2, v13, v9 + 10);
        __int128 v14 = (void *)v9[5];
        if (v14 != v9 + 6)
        {
          int v15 = a1 + 11;
          int v16 = a1 + 1;
          do
          {
            uint64_t v17 = *v15;
            if (!*v15) {
              goto LABEL_25;
            }
            int v18 = *((_DWORD *)v14 + 7);
            BOOL v19 = a1 + 11;
            do
            {
              int v20 = *(_DWORD *)(v17 + 32);
              BOOL v21 = v20 < v18;
              if (v20 >= v18) {
                int v22 = (uint64_t *)v17;
              }
              else {
                int v22 = (uint64_t *)(v17 + 8);
              }
              if (!v21) {
                BOOL v19 = (uint64_t *)v17;
              }
              uint64_t v17 = *v22;
            }

            while (*v22);
            if (v19 != v15 && (int v23 = *((_DWORD *)v19 + 8), v18 >= v23))
            {
              uint64_t v50 = v19;
              sub_100D78DEC(a1, (uint64_t)&v50, (uint64_t)&v51, a3);
              uint64_t v27 = a1[8];
              if (!v27) {
                return;
              }
              int v28 = *a2;
              uint64_t v29 = v5;
              do
              {
                int v30 = *(_DWORD *)(v27 + 32);
                BOOL v31 = v30 < v28;
                if (v30 >= v28) {
                  int v32 = (uint64_t *)v27;
                }
                else {
                  int v32 = (uint64_t *)(v27 + 8);
                }
                if (!v31) {
                  uint64_t v29 = (void *)v27;
                }
                uint64_t v27 = *v32;
              }

              while (*v32);
              if (v29 == v5 || v28 < *((_DWORD *)v29 + 8)) {
                return;
              }
              __int128 v51 = v29;
              uint64_t v34 = v29[6];
              __int128 v14 = v29 + 6;
              uint64_t v33 = v34;
              if (v34)
              {
                int v35 = v14;
                uint64_t v36 = v33;
                do
                {
                  int v37 = *(_DWORD *)(v36 + 28);
                  BOOL v38 = v37 < v23;
                  if (v37 >= v23) {
                    int v39 = (uint64_t *)v36;
                  }
                  else {
                    int v39 = (uint64_t *)(v36 + 8);
                  }
                  if (!v38) {
                    int v35 = (void *)v36;
                  }
                  uint64_t v36 = *v39;
                }

                while (*v39);
                if (v35 == v14 || v23 < *((_DWORD *)v35 + 7))
                {
                  do
                  {
                    int v40 = *(_DWORD *)(v33 + 28);
                    BOOL v41 = v23 < v40;
                    if (v23 >= v40) {
                      BOOL v42 = (uint64_t *)(v33 + 8);
                    }
                    else {
                      BOOL v42 = (uint64_t *)v33;
                    }
                    if (v41) {
                      __int128 v14 = (void *)v33;
                    }
                    uint64_t v33 = *v42;
                  }

                  while (*v42);
                }

                else
                {
                  unint64_t v43 = (void *)v35[1];
                  if (v43)
                  {
                    do
                    {
                      __int128 v14 = v43;
                      unint64_t v43 = (void *)*v43;
                    }

                    while (v43);
                  }

                  else
                  {
                    do
                    {
                      __int128 v14 = (void *)v35[2];
                      BOOL v44 = *v14 == (void)v35;
                      int v35 = v14;
                    }

                    while (!v44);
                  }
                }
              }
            }

            else
            {
LABEL_25:
              uint64_t v50 = a1 + 11;
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101881C00);
              }
              BOOL v24 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                int v25 = a1 + 1;
                int v26 = *((_DWORD *)v14 + 7);
                *(_DWORD *)buf = 136446466;
                int v57 = v25;
                __int16 v58 = 1026;
                int v59 = v26;
                _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_FAULT,  "%{public}s; unknown client %{public}d",
                  buf,
                  0x12u);
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(buf, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_101881C00);
                }
                int v45 = a1 + 1;
                int v46 = *((_DWORD *)v14 + 7);
                int v52 = 136446466;
                __int128 v53 = v45;
                __int16 v54 = 1026;
                int v55 = v46;
                LODWORD(v49) = 18;
                _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; unknown client %{public}d",
                  &v52,
                  v49);
                uint64_t v48 = (uint8_t *)v47;
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLNotifier<CLPencilState_Type::Notification, CLPencilState_Type::NotificationData, char, char>::i nvokeClientsWithData(const Notification_T &, CLCppContainer *) [Notification_T = CLPencilState_Type::N otification, NotificationData_T = CLPencilState_Type::NotificationData, NotificationInfo_T = char, Reg istrationInfo_T = char]",  "%s\n",  v47);
                if (v48 != buf) {
                  free(v48);
                }
              }
            }
          }

          while (v14 != v51 + 6);
        }
      }
    }
  }

_BYTE *sub_100D78DEC(_BYTE *result, uint64_t a2, uint64_t a3, void *a4)
{
  if (!result[108])
  {
    char v7 = result;
    uint64_t v8 = *(unsigned int *)(*(void *)a2 + 32LL);
    LODWORD(v13) = *(_DWORD *)(*(void *)a3 + 32LL);
    id v9 = sub_100D78F18(a4);
    uint64_t v10 = *(void *)a3 + 80LL;
    BOOL v11 = (uint64_t **)(*(void *)a3 + 40LL);
    __int128 v14 = (int *)(*(void *)a2 + 32LL);
    BOOL v12 = sub_1004EF3D4(v11, v14, (uint64_t)&unk_1012CF090, &v14);
    id result = (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t *, id, uint64_t, uint64_t **))(*(void *)v7 + 192LL))( v7,  v8,  &v13,  v9,  v10,  v12 + 4);
    if ((_DWORD)result) {
      return objc_msgSend( *(id *)(*(void *)a2 + 64),  "onNotification:withData:",  *(unsigned int *)(*(void *)a3 + 32),  a4,  v13);
    }
  }

  return result;
}

void sub_100D78EC8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_101881D10;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100D78EDC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_101881D10;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_100D78F08(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1) {
    operator delete(v1);
  }
}

id sub_100D78F18(void *a1)
{
  if ((objc_opt_isKindOfClass(a1, v2) & 1) != 0) {
    return sub_100D78F90(a1);
  }
  objc_opt_class(&OBJC_CLASS___CLCppContainer);
  if ((objc_opt_isKindOfClass(a1, v4) & 1) != 0) {
    return sub_100D79318(a1);
  }
  else {
    return 0LL;
  }
}

id sub_100D78F90(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return sub_100D796C4((uint64_t)&v8 + 7, a1);
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101881D50);
    }
    int v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 134218498;
      id v11 = v2;
      __int16 v12 = 2048;
      uint64_t v13 = 0LL;
      __int16 v14 = 2080;
      unint64_t v15 = 0x800000010135D7B8LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101881D50);
    }
    LODWORD(v9) = 134218498;
    HIDWORD(v9) = (_DWORD)v2;
    LODWORD(v8) = 32;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v9,  v8,  v9);
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101881D50);
    }
    int v6 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)buf = 134218498;
      id v11 = v2;
      __int16 v12 = 2048;
      uint64_t v13 = 0LL;
      __int16 v14 = 2080;
      unint64_t v15 = 0x800000010135D7B8LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101881D50);
    }
    LODWORD(v9) = 134218498;
    HIDWORD(v9) = (_DWORD)v2;
    LODWORD(v8) = 32;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v9,  v8,  v9);
  }

  char v7 = (uint8_t *)v4;
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLPencilState_Type::NotificationData, Callback = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:241:46)]",  "%s\n",  v4);
  if (v7 != buf) {
    free(v7);
  }
  return 0LL;
}

id sub_100D79318(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return [a1 cppObjectPtr];
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101881D50);
    }
    int v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x800000010135D7B8LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101881D50);
    }
    LODWORD(v8) = 134218498;
    HIDWORD(v8) = (_DWORD)v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101881D50);
    }
    int v6 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x800000010135D7B8LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101881D50);
    }
    LODWORD(v8) = 134218498;
    HIDWORD(v8) = (_DWORD)v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  char v7 = (uint8_t *)v4;
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLPencilState_Type::NotificationData, Callback = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:250:46)]",  "%s\n",  v4);
  if (v7 != buf) {
    free(v7);
  }
  return 0LL;
}

id sub_100D796C4(uint64_t a1, void *a2)
{
  if (![a2 cppObjectPtr]
    && objc_msgSend(objc_msgSend(a2, "compatibilityInfo"), "isEqual:", &off_1018D4580))
  {
    if (objc_msgSend(objc_msgSend(a2, "serialized"), "length") != (id)1) {
      sub_10126D858();
    }
    objc_msgSend(a2, "setCppObjectPtr:", objc_msgSend(objc_msgSend(a2, "serialized"), "bytes"));
  }

  return [a2 cppObjectPtr];
}

void sub_100D79738(id a1)
{
  qword_101934478 = (uint64_t)os_log_create("com.apple.locationd.Support", "Support");
}

uint64_t sub_100D79764(uint64_t a1)
{
  *(void *)a1 = off_101881D80;
  id v2 = (id *)(a1 + 8);
  [*(id *)(a1 + 16) forget:*(void *)(a1 + 8)];

  [*v2 invalidate];
  id *v2 = 0LL;
  *(void *)(a1 + 16) = 0LL;
  return a1;
}

CLCppContainer *sub_100D797C4(_BYTE *a1)
{
  id v2 = operator new(1uLL);
  _BYTE *v2 = *a1;
  uint64_t v4 = _NSConcreteStackBlock;
  uint64_t v5 = 3221225472LL;
  int v6 = sub_100D79844;
  char v7 = &unk_10181D3D0;
  uint64_t v8 = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:");
}

void sub_100D79844(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1) {
    operator delete(v1);
  }
}

BOOL sub_100D79854(float64_t *a1, double *a2, _DWORD *a3)
{
  if (*a2 > -70.312522 || *a2 < -123.496142 || (v3.f64[0] = *a1, *a1 < 25.127422) || v3.f64[0] > 48.309232)
  {
    int v10 = 0;
    BOOL v5 = 0;
    if (!a3) {
      return v5;
    }
    goto LABEL_13;
  }

  unint64_t v4 = 0LL;
  v3.f64[1] = *a2;
  BOOL v5 = 1;
  while (1)
  {
    float32x4_t v6 = xmmword_101990B14[v4];
    float64x2_t v7 = vcvtq_f64_f32(*(float32x2_t *)v6.f32);
    int64x2_t v8 = (int64x2_t)vmvnq_s8((int8x16_t)vcgeq_f64(vcvt_hight_f64_f32(v6), v3));
    int32x4_t v9 = (int32x4_t)vmvnq_s8((int8x16_t)vcgeq_f64(v3, v7));
    *(int32x2_t *)v9.i8 = vmovn_s64((int64x2_t)v9);
    if ((vmaxv_u16((uint16x4_t)vext_s8( (int8x8_t)vmovn_s32(vmovn_hight_s64(*(int32x2_t *)v8.i8, v8)),  (int8x8_t)vmovn_s32(v9),  4uLL)) & 1) == 0) {
      break;
    }
    BOOL v5 = v4++ < 0x31;
    if (v4 == 50) {
      return 0;
    }
  }

  if (a3)
  {
    int v10 = v4 + 1;
LABEL_13:
    *a3 = v10;
  }

  return v5;
}

uint64_t sub_100D79930(uint64_t a1, char *a2, uint64_t a3, char *a4)
{
  *(_BYTE *)a1 = 0;
  *(void *)(a1 + 8) = 0LL;
  sub_1010DDBC0((void *)(a1 + 16), a2);
  *(void *)(a1 + 40) = a3;
  sub_1010DDBC0((void *)(a1 + 48), a4);
  sub_100D799C4(a1);
  return a1;
}

void sub_100D79990(_Unwind_Exception *exception_object)
{
}

void sub_100D799C4(uint64_t a1)
{
  if (sub_100D7A24C())
  {
    if (*(_BYTE *)a1)
    {
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101881DF8);
      }
      id v2 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
      {
        float64x2_t v3 = (void *)(a1 + 16);
        *(_DWORD *)buf = 136315138;
        unint64_t v43 = v3;
        _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "CLActivityLogger exporting %s is already enabled ",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_101881DF8);
        }
        unint64_t v4 = (void *)(a1 + 16);
        LODWORD(v40[0]) = 136315138;
        *(void **)((char *)v40 + 4) = v4;
        BOOL v5 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  2LL,  "CLActivityLogger exporting %s is already enabled ",  (const char *)v40);
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CLActivityDbExportAdapter::startExportTimerIfNeeded()", "%s\n", v5);
      }
    }

    else
    {
      sub_100D7A218(a1);
      else {
        size_t v8 = *(void *)(a1 + 24);
      }
      int32x4_t v9 = v40;
      sub_1000392EC((uint64_t)v40, v8 + 10);
      int v10 = (void *)(a1 + 16);
      if (v41 < 0) {
        int32x4_t v9 = (void **)v40[0];
      }
      if (v8)
      {
        else {
          __int16 v11 = *(const void **)(a1 + 16);
        }
        memmove(v9, v11, v8);
      }

      strcpy((char *)v9 + v8, "LastDumped");
      int v12 = sub_100D7A8E8("MotionMetricsExportInterval");
      int v13 = sub_100D7A8E8("MotionMetricsExportTimerInterval");
      if (v12 <= 0)
      {
        uint64_t v14 = sub_1002F8DDC();
        if (v41 >= 0) {
          unint64_t v15 = v40;
        }
        else {
          unint64_t v15 = (void **)v40[0];
        }
        sub_1002A667C(v14, (const char *)v15, 0xFFFFFFFFLL);
        int v12 = 864000;
      }

      if (v13 <= 0)
      {
        uint64_t v16 = sub_1002F8DDC();
        if (v41 >= 0) {
          uint64_t v17 = v40;
        }
        else {
          uint64_t v17 = (void **)v40[0];
        }
        sub_1002A667C(v16, (const char *)v17, 0xFFFFFFFFLL);
        int v13 = 864000;
      }

      *(_BYTE *)a1 = 1;
      if (v13 <= 300) {
        int v18 = 300;
      }
      else {
        int v18 = v13;
      }
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101881DF8);
      }
      BOOL v19 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
      {
        int v20 = (void *)(a1 + 16);
        *(_DWORD *)buf = 136315650;
        unint64_t v43 = v20;
        __int16 v44 = 1024;
        int v45 = v18;
        __int16 v46 = 1024;
        int v47 = v12;
        _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEBUG,  "CLActivityLogger exporting %s: MotionMetricsExportTimerInterval = %d, MotionMetricsExportInterval = %d",  buf,  0x18u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_101881DF8);
        }
        int v34 = 136315650;
        int v35 = v10;
        __int16 v36 = 1024;
        int v37 = v18;
        __int16 v38 = 1024;
        int v39 = v12;
        int v25 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  2LL,  "CLActivityLogger exporting %s: MotionMetricsExportTimerInterval = %d, MotionMetricsExportInterval = %d",  (const char *)&v34,  24,  v28);
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CLActivityDbExportAdapter::startExportTimerIfNeeded()", "%s\n", v25);
      }

      BOOL v21 = dispatch_source_create( (dispatch_source_type_t)&_dispatch_source_type_timer,  0LL,  0LL,  *(dispatch_queue_t *)(a1 + 40));
      *(void *)(a1 + 8) = v21;
      dispatch_source_set_timer(v21, 0LL, 0x45D964B800uLL, 0xDF8475800uLL);
      handler[0] = _NSConcreteStackBlock;
      handler[1] = 3321888768LL;
      handler[2] = sub_100D7ABA8;
      handler[3] = &unk_101881DC8;
      handler[4] = a1;
      if (SHIBYTE(v41) < 0)
      {
        sub_1010DD48C(&__p, v40[0], (unint64_t)v40[1]);
      }

      else
      {
        __int128 __p = *(_OWORD *)v40;
        uint64_t v31 = v41;
      }

      int v32 = v12;
      int v33 = v18;
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101881DF8);
      }
      int v22 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEBUG,  "CLActivityLogger exporting timer enabled ",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_101881DF8);
        }
        LOWORD(v34) = 0;
        LODWORD(v27) = 2;
        int v26 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  2LL,  "CLActivityLogger exporting timer enabled ",  &v34,  v27);
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CLActivityDbExportAdapter::startExportTimerIfNeeded()", "%s\n", v26);
      }

      dispatch_source_set_event_handler(*(dispatch_source_t *)(a1 + 8), handler);
      dispatch_resume(*(dispatch_object_t *)(a1 + 8));
      if (SHIBYTE(v31) < 0) {
        operator delete((void *)__p);
      }
      if (SHIBYTE(v41) < 0) {
        operator delete(v40[0]);
      }
    }
  }

  else
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101881DF8);
    }
    float32x4_t v6 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
    {
      float64x2_t v7 = (void *)(a1 + 16);
      *(_DWORD *)buf = 136315138;
      unint64_t v43 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "CLActivityLogger exporting %s is disabled ",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101881DF8);
      }
      int v23 = (void *)(a1 + 16);
      LODWORD(v40[0]) = 136315138;
      *(void **)((char *)v40 + 4) = v23;
      BOOL v24 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  2LL,  "CLActivityLogger exporting %s is disabled ",  (const char *)v40);
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLActivityDbExportAdapter::startExportTimerIfNeeded()", "%s\n", v24);
    }

    sub_100D7A218(a1);
    *(_BYTE *)a1 = 0;
  }

void sub_100D7A1C4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20, char a21, char a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, void *a28, uint64_t a29, int a30, __int16 a31, char a32, char a33)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  if (a33 < 0) {
    operator delete(a28);
  }
  _Unwind_Resume(exception_object);
}

void sub_100D7A218(uint64_t a1)
{
  id v2 = *(dispatch_source_s **)(a1 + 8);
  if (v2)
  {
    dispatch_source_cancel(v2);
    dispatch_release(*(dispatch_object_t *)(a1 + 8));
    *(void *)(a1 + 8) = 0LL;
  }

BOOL sub_100D7A24C()
{
  if (sub_1004F8A40())
  {
    BOOL v17 = 0;
    sub_1002A5370(v16);
    if (sub_1002A59D4((uint64_t)v16, (uint64_t)"/Library/Managed Preferences/mobile/com.apple.nanolifestyle.plist")
      && sub_1002A6FD4((uint64_t)v16, (uint64_t)@"AppleInternalDataCollectionEnabled", &v17))
    {
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101881DF8);
      }
      v0 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 67240192;
        BOOL v23 = v17;
        _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_DEFAULT,  "CLActivityLogger managed should enable data collection setting is %{public}d.",  buf,  8u);
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_35;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101881DF8);
      }
      int v18 = 67240192;
      BOOL v19 = v17;
      uint64_t v1 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  0LL,  "CLActivityLogger managed should enable data collection setting is %{public}d.",  &v18,  8);
      sub_10029211C("Generic", 1LL, 0, 2LL, "static BOOL CLActivityDbExportAdapter::checkExportEnabled()", "%s\n", v1);
    }

    else
    {
      float64x2_t v3 = (const __CFBoolean *)CFPreferencesCopyValue( @"AppleInternalDataCollectionEnabled",  @"com.apple.nanolifestyle",  @"mobile",  kCFPreferencesAnyHost);
      unint64_t v4 = v3;
      if (v3)
      {
        BOOL v17 = CFBooleanGetValue(v3) != 0;
        CFRelease(v4);
      }

      else
      {
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_101881DF8);
        }
        BOOL v5 = (os_log_s *)qword_1019344B8;
        if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "#Warning CLActivityLogger Failed to get data collections enabled setting. It may not have been set yet.",  buf,  2u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019344B0 != -1) {
            dispatch_once(&qword_1019344B0, &stru_101881DF8);
          }
          LOWORD(v18) = 0;
          int v13 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  0LL,  "#Warning CLActivityLogger Failed to get data collections enabled setting. It may not have been set yet.",  &v18,  2);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLActivityDbExportAdapter::checkExportEnabled()",  "%s\n",  v13);
        }

        int v6 = sub_100D7A8E8("MotionMetricsExportInterval");
        int v7 = sub_100D7A8E8("MotionMetricsExportTimerInterval");
        int v8 = v7;
        if (v6 < 1 || v7 <= 0)
        {
          if (qword_1019344B0 != -1) {
            dispatch_once(&qword_1019344B0, &stru_101881DF8);
          }
          int v10 = (os_log_s *)qword_1019344B8;
          if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)buf = 67109376;
            BOOL v23 = v6;
            __int16 v24 = 1024;
            int v25 = v8;
            _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "CLActivityLogger exporting is disabled MotionMetricsExportInterval, %d, MotionMetricsExportTimerInterval, %d",  buf,  0xEu);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1019344B0 != -1) {
              dispatch_once(&qword_1019344B0, &stru_101881DF8);
            }
            int v18 = 67109376;
            BOOL v19 = v6;
            __int16 v20 = 1024;
            int v21 = v8;
            uint64_t v14 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  2LL,  "CLActivityLogger exporting is disabled MotionMetricsExportInterval, %d, MotionMetricsExportT imerInterval, %d",  &v18,  14);
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLActivityDbExportAdapter::checkExportEnabled()",  "%s\n",  v14);
          }

          BOOL v9 = 0;
        }

        else
        {
          BOOL v9 = 1;
        }

        BOOL v17 = v9;
      }

      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101881DF8);
      }
      __int16 v11 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 67240192;
        BOOL v23 = v17;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "CLActivityLogger should enable data collection is %{public}d.",  buf,  8u);
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_35;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101881DF8);
      }
      int v18 = 67240192;
      BOOL v19 = v17;
      LODWORD(v15) = 8;
      uint64_t v1 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  0LL,  "CLActivityLogger should enable data collection is %{public}d.",  &v18,  v15);
      sub_10029211C("Generic", 1LL, 0, 2LL, "static BOOL CLActivityDbExportAdapter::checkExportEnabled()", "%s\n", v1);
    }

void sub_100D7A8B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

uint64_t sub_100D7A8E8(const char *a1)
{
  unsigned int v19 = 0;
  uint64_t v2 = sub_1006E27E8();
  sub_100413284(v2, buf);
  int v3 = sub_1002A7CB0(*(uint64_t *)&buf[0], a1, &v19);
  int v4 = v3;
  BOOL v5 = (std::__shared_weak_count *)*((void *)&buf[0] + 1);
  if (!*((void *)&buf[0] + 1)) {
    goto LABEL_5;
  }
  int v6 = (unint64_t *)(*((void *)&buf[0] + 1) + 8LL);
  do
    unint64_t v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (v4) {
      return v19;
    }
  }

  else
  {
LABEL_5:
    if (v3) {
      return v19;
    }
  }

  uint64_t v9 = sub_1006E27E8();
  sub_100413284(v9, buf);
  char v10 = sub_1002A6E78(*(uint64_t *)&buf[0], a1, &cf, 0xFFFFFFFFLL);
  char v11 = v10;
  int v12 = (std::__shared_weak_count *)*((void *)&buf[0] + 1);
  if (!*((void *)&buf[0] + 1)) {
    goto LABEL_12;
  }
  int v13 = (unint64_t *)(*((void *)&buf[0] + 1) + 8LL);
  do
    unint64_t v14 = __ldaxr(v13);
  while (__stlxr(v14 - 1, v13));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
    if ((v11 & 1) != 0)
    {
LABEL_13:
      CFTypeID v15 = CFGetTypeID(cf);
      if (v15 == CFStringGetTypeID()) {
        return CFStringGetIntValue((CFStringRef)cf);
      }
      return 0LL;
    }
  }

  else
  {
LABEL_12:
    if ((v10 & 1) != 0) {
      goto LABEL_13;
    }
  }

  if (qword_1019344B0 != -1) {
    dispatch_once(&qword_1019344B0, &stru_101881DF8);
  }
  uint64_t v16 = (os_log_s *)qword_1019344B8;
  if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
  {
    LODWORD(buf[0]) = 136315138;
    *(void *)((char *)buf + 4) = a1;
    _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEBUG,  "CLActivityLogger read %s as CFStringRef failed",  (uint8_t *)buf,  0xCu);
  }

  uint64_t result = sub_1002921D0(115, 2);
  if ((_DWORD)result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101881DF8);
    }
    int v20 = 136315138;
    int v21 = a1;
    BOOL v17 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  2LL,  "CLActivityLogger read %s as CFStringRef failed",  (const char *)&v20);
    sub_10029211C("Generic", 1LL, 0, 2LL, "int readIntValueForMotionPreferenceKey(const char *)", "%s\n", v17);
    return 0LL;
  }

  return result;
}

void sub_100D7AB88( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_100D7ABA8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  double v32 = 0.0;
  double Current = CFAbsoluteTimeGetCurrent();
  uint64_t v4 = sub_1002F8DDC();
  BOOL v5 = (const char **)(a1 + 40);
  int v6 = (const char *)(a1 + 40);
  if ((sub_1002A82BC(v4, v6, &v32) & 1) == 0) {
    double v32 = Current - (double)*(int *)(a1 + 64);
  }
  if (qword_1019344B0 != -1) {
    dispatch_once(&qword_1019344B0, &stru_101881DF8);
  }
  unint64_t v7 = (os_log_s *)qword_1019344B8;
  if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
  {
    int v8 = (const char *)(a1 + 40);
    double v9 = v32 + (double)*(int *)(a1 + 68);
    char v10 = "Dumping";
    if (Current < v9) {
      char v10 = "Skipping";
    }
    *(_DWORD *)buf = 136316162;
    __int16 v44 = v8;
    __int16 v45 = 2048;
    double v46 = v32;
    __int16 v47 = 2048;
    double v48 = Current;
    __int16 v49 = 2048;
    double v50 = v9;
    __int16 v51 = 2080;
    int v52 = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "CLActivityLogger exporting %s is %f, currentTime is %f, next dumping time is %f, %s",  buf,  0x34u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101881DF8);
    }
    BOOL v17 = (const char *)(a1 + 40);
    double v18 = v32 + (double)*(int *)(a1 + 68);
    unsigned int v19 = "Dumping";
    if (Current < v18) {
      unsigned int v19 = "Skipping";
    }
    int v33 = 136316162;
    int v34 = v17;
    __int16 v35 = 2048;
    double v36 = v32;
    __int16 v37 = 2048;
    double v38 = Current;
    __int16 v39 = 2048;
    double v40 = v18;
    __int16 v41 = 2080;
    BOOL v42 = v19;
    LODWORD(v23) = 52;
    int v20 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  2LL,  "CLActivityLogger exporting %s is %f, currentTime is %f, next dumping time is %f, %s",  (const char *)&v33,  v23,  *(double *)&v24,  *(double *)&v25,  v26);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLActivityDbExportAdapter::startExportTimerIfNeeded()_block_invoke",  "%s\n",  v20);
  }

  if (Current >= v32 + (double)*(int *)(a1 + 68))
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101881DF8);
    }
    char v11 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
    {
      int v12 = (const char *)(v2 + 16);
      *(_DWORD *)buf = 136315138;
      __int16 v44 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "CLActivityLogger exporting %s metrics with OSAWriteLogForSubmission",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101881DF8);
      }
      int v21 = (const char *)(v2 + 16);
      int v33 = 136315138;
      int v34 = v21;
      int v22 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  2LL,  "CLActivityLogger exporting %s metrics with OSAWriteLogForSubmission",  (const char *)&v33);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLActivityDbExportAdapter::startExportTimerIfNeeded()_block_invoke",  "%s\n",  v22);
    }

    uint64_t v13 = off_101990E38();
    __int16 v24 = _NSConcreteStackBlock;
    uint64_t v25 = 3321888768LL;
    int v26 = (const char *)sub_100D7B2FC;
    uint64_t v27 = &unk_101881D98;
    uint64_t v28 = v2;
    if (*(char *)(a1 + 63) < 0)
    {
      sub_1010DD48C(&__p, *(void **)(a1 + 40), *(void *)(a1 + 48));
    }

    else
    {
      __int128 __p = *(_OWORD *)v5;
      uint64_t v30 = *(void *)(a1 + 56);
    }

    double v31 = Current;
    if (off_101990E40(v13, (uint64_t)@"CMActivityLog", 0LL, 0LL, (uint64_t)&v24))
    {
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101881DF8);
      }
      unint64_t v14 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "CLActivityLogger successfully submit iOS data analysis with type kOSAProblemTypeMotionState",  buf,  2u);
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_39;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101881DF8);
      }
      LOWORD(v33) = 0;
      LODWORD(v23) = 2;
      CFTypeID v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  2LL,  "CLActivityLogger successfully submit iOS data analysis with type kOSAProblemTypeMotionState",  &v33,  *(void *)&v23,  v24,  v25,  v26,  v27,  v28,  (void)__p,  *((void *)&__p + 1),  v30);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLActivityDbExportAdapter::startExportTimerIfNeeded()_block_invoke",  "%s\n",  v15);
    }

    else
    {
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101881DF8);
      }
      uint64_t v16 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "#Warning CLActivityLogger failed to submit iOS data analysis with type kOSAProblemTypeMotionState",  buf,  2u);
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_39;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101881DF8);
      }
      LOWORD(v33) = 0;
      LODWORD(v23) = 2;
      CFTypeID v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  0LL,  "#Warning CLActivityLogger failed to submit iOS data analysis with type kOSAProblemTypeMotionState",  &v33,  *(void *)&v23,  v24,  v25,  v26,  v27,  v28,  (void)__p,  *((void *)&__p + 1),  v30);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLActivityDbExportAdapter::startExportTimerIfNeeded()_block_invoke",  "%s\n",  v15);
    }

void sub_100D7B2CC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100D7B2FC(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)(a1 + 32);
  BOOL v5 = (const char *)(v4 + 48);
  int v6 = (const char *)(v4 + 48);
  unint64_t v7 = +[NSFileHandle fileHandleForReadingAtPath:]( &OBJC_CLASS___NSFileHandle,  "fileHandleForReadingAtPath:",  +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v6));
  if (v7)
  {
    int v8 = v7;
    double v9 = -[NSFileHandle readDataOfLength:](v7, "readDataOfLength:", 1000LL);
    if (v9)
    {
      char v10 = v9;
      do
      {
        if (!-[NSData length](v10, "length")) {
          break;
        }
        [a2 writeData:v10];
        char v10 = -[NSFileHandle readDataOfLength:](v8, "readDataOfLength:", 1000LL);
      }

      while (v10);
    }

    -[NSFileHandle closeFile](v8, "closeFile");
    char v11 = (const char *)(v4 + 48);
    if (unlink(v11))
    {
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101881DF8);
      }
      int v12 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_FAULT))
      {
        uint64_t v13 = (const char *)(v4 + 48);
        *(_DWORD *)buf = 136446210;
        int v22 = v13;
        _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_FAULT,  "CLActivityLogger cannot unlink file %{public}s ",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_101881DF8);
        }
        int v19 = 136446210;
        int v20 = v5;
        unint64_t v14 = (uint8_t *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  17LL,  "CLActivityLogger cannot unlink file %{public}s ",  &v19,  12);
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLActivityDbExportAdapter::startExportTimerIfNeeded()_block_invoke",  "%s\n");
LABEL_39:
        if (v14 != buf) {
          free(v14);
        }
      }
    }

    else
    {
      uint64_t v17 = sub_1002F8DDC();
      double v18 = (const char *)(a1 + 40);
      sub_1002AC7B8(v17, v18, (const void *)(a1 + 64));
    }
  }

  else
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101881DF8);
    }
    CFTypeID v15 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_INFO))
    {
      uint64_t v16 = (const char *)(v4 + 48);
      *(_DWORD *)buf = 136446210;
      int v22 = v16;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_INFO,  "CLActivityLogger cannot open source file %{public}s ",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101881DF8);
      }
      int v19 = 136446210;
      int v20 = v5;
      unint64_t v14 = (uint8_t *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  1LL,  "CLActivityLogger cannot open source file %{public}s ",  &v19,  12);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLActivityDbExportAdapter::startExportTimerIfNeeded()_block_invoke",  "%s\n");
      goto LABEL_39;
    }
  }

void *sub_100D7B704(uint64_t a1, uint64_t a2)
{
  uint64_t result = (void *)(a1 + 40);
  __int128 v3 = *(_OWORD *)(a2 + 40);
  result[2] = *(void *)(a2 + 56);
  *(_OWORD *)uint64_t result = v3;
  return result;
}

void sub_100D7B734(uint64_t a1)
{
}

uint64_t sub_100D7B748(uint64_t a1)
{
  return a1;
}

void sub_100D7B790(id a1)
{
  qword_1019344B8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Motion");
}

uint64_t sub_100D7B7BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (qword_10199E170 != -1) {
    dispatch_once(&qword_10199E170, &stru_101881E18);
  }
  off_101990E40 = (uint64_t (*)())dlsym((void *)qword_10199E178, "OSAWriteLogForSubmission");
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))off_101990E40)(a1, a2, a3, a4, a5);
}

void sub_100D7B854(id a1)
{
  qword_10199E178 = (uint64_t)dlopen( "/System/Library/PrivateFrameworks/CrashReporterSupport.framework/CrashReporterSupport",  2);
}

uint64_t sub_100D7B87C()
{
  if (qword_10199E170 != -1) {
    dispatch_once(&qword_10199E170, &stru_101881E18);
  }
  v0 = (uint64_t *)dlsym((void *)qword_10199E178, "kOSAProblemTypeMotionState");
  if (v0)
  {
    uint64_t result = *v0;
    qword_10199E180 = result;
  }

  else
  {
    uint64_t result = qword_10199E180;
  }

  off_101990E38 = sub_100D7B8F4;
  return result;
}

uint64_t sub_100D7B8F4()
{
  return qword_10199E180;
}

uint64_t sub_100D7B900(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = 0;
  *(void *)(a1 + 8) = 0LL;
  *(_DWORD *)(a1 + 16) = 0;
  *(void *)(a1 + sub_100BDC958(v1 + 24) = 0LL;
  *(_DWORD *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0LL;
  *(_DWORD *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0LL;
  *(_DWORD *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0LL;
  *(_DWORD *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0LL;
  *(_DWORD *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0LL;
  *(_DWORD *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0LL;
  *(_DWORD *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0LL;
  *(_DWORD *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0LL;
  *(_DWORD *)(a1 + 160) = 0x80000000;
  *(void *)(a1 + 168) = a2;
  *(void *)(a1 + 176) = 0xBFF0000000000000LL;
  sub_100824EBC(a1 + 184);
  __asm { FMOV            V0.2D, #-1.0 }

  *(_OWORD *)(a1 + 11936) = _Q0;
  *(_DWORD *)(a1 + 11952) = 0;
  *(_WORD *)(a1 + 11956) = 0;
  *(void *)(a1 + 11960) = 0xBFF0000000000000LL;
  return a1;
}

__n128 sub_100D7B9A4(uint64_t a1, uint64_t a2)
{
  if (sub_100825270(a1 + 184))
  {
    __n128 result = *(__n128 *)(a1 + 11856);
    __int128 v5 = *(_OWORD *)(a1 + 11872);
    __int128 v6 = *(_OWORD *)(a1 + 11888);
    *(_DWORD *)(a2 + 48) = *(_DWORD *)(a1 + 11904);
    *(_OWORD *)(a2 + 16) = v5;
    *(_OWORD *)(a2 + 32) = v6;
    *(__n128 *)a2 = result;
  }

  return result;
}

uint64_t sub_100D7B9EC(uint64_t result, uint64_t a2)
{
  if (*(_BYTE *)(result + 11956))
  {
    if (!*(_DWORD *)(a2 + 100)) {
      *(_DWORD *)(a2 + 100) = 6;
    }
  }

  return result;
}

float sub_100D7BA2C(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 8);
  float v3 = 0.0;
  float v4 = 0.0;
  if (v2) {
    float v4 = *(float *)a2 / (float)v2;
  }
  *(float *)int v21 = v4;
  unint64_t v5 = *(void *)(a2 + 24);
  if (v5) {
    float v3 = *(float *)(a2 + 16) / (float)v5;
  }
  *(float *)&v21[1] = v3;
  unint64_t v6 = *(void *)(a2 + 40);
  float v7 = 0.0;
  float v8 = 0.0;
  if (v6) {
    float v8 = *(float *)(a2 + 32) / (float)v6;
  }
  *(float *)&v21[2] = v8;
  unint64_t v9 = *(void *)(a2 + 88);
  if (v9) {
    float v7 = *(float *)(a2 + 80) / (float)v9;
  }
  *(float *)&v21[3] = v7;
  unint64_t v10 = *(void *)(a2 + 104);
  float v11 = 0.0;
  float v12 = 0.0;
  if (v10) {
    float v12 = *(float *)(a2 + 96) / (float)v10;
  }
  *(float *)&_OWORD v21[4] = v12;
  unint64_t v13 = *(void *)(a2 + 120);
  if (v13) {
    float v11 = *(float *)(a2 + 112) / (float)v13;
  }
  float v14 = (float)*(int *)(a2 + 160);
  *(float *)&v21[5] = v11;
  *(float *)&v21[6] = v14;
  unint64_t v15 = *(void *)(a2 + 152);
  if (v15) {
    float v16 = *(float *)(a2 + 144) / (float)v15;
  }
  else {
    float v16 = 0.0;
  }
  *(float *)&v21[7] = v16;
  v18[0] = xmmword_10135D818;
  v18[1] = unk_10135D828;
  int v19 = 1037899651;
  sub_10050D3D4((uint64_t)v21, v20, (int *)v18, 2LL, 8LL);
  return v20[1];
}

void sub_100D7BB78(uint64_t a1@<X0>, double **a2@<X8>, double a3@<D0>)
{
  *a2 = 0LL;
  a2[1] = 0LL;
  a2[2] = 0LL;
  int v6 = (*(uint64_t (**)(void))(**(void **)(a1 + 168) + 128LL))(*(void *)(a1 + 168));
  uint64_t v7 = (*(uint64_t (**)(void, double))(**(void **)(a1 + 168) + 128LL))( *(void *)(a1 + 168),  *(double *)(a1 + 176));
  int v8 = v6 - v7;
  double v9 = a3 - *(double *)(a1 + 176);
  float v10 = sub_100D7BA2C(v7, a1);
  BOOL v11 = 0;
  BOOL v13 = v8 <= 5 && v9 > 15.0 && v9 < 240.0;
  if (v13 && v10 > 0.275) {
    BOOL v11 = *(float *)(a1 + 80) > 5.0;
  }
  if (qword_1019344E0 != -1) {
    dispatch_once(&qword_1019344E0, &stru_101881E38);
  }
  float v14 = (os_log_s *)qword_1019344E8;
  if (os_log_type_enabled((os_log_t)qword_1019344E8, OS_LOG_TYPE_DEFAULT))
  {
    unint64_t v15 = *(void *)(a1 + 8);
    float v16 = 0.0;
    float v17 = 0.0;
    if (v15) {
      float v17 = *(float *)a1 / (float)v15;
    }
    unint64_t v18 = *(void *)(a1 + 24);
    if (v18) {
      float v16 = *(float *)(a1 + 16) / (float)v18;
    }
    unint64_t v19 = *(void *)(a1 + 40);
    float v20 = 0.0;
    float v21 = 0.0;
    if (v19) {
      float v21 = *(float *)(a1 + 32) / (float)v19;
    }
    unint64_t v22 = *(void *)(a1 + 56);
    if (v22) {
      float v20 = *(float *)(a1 + 48) / (float)v22;
    }
    unint64_t v23 = *(void *)(a1 + 72);
    float v24 = 0.0;
    float v25 = 0.0;
    if (v23) {
      float v25 = *(float *)(a1 + 64) / (float)v23;
    }
    unint64_t v26 = *(void *)(a1 + 88);
    float v27 = *(float *)(a1 + 80);
    if (v26) {
      float v24 = v27 / (float)v26;
    }
    unint64_t v28 = *(void *)(a1 + 104);
    float v29 = 0.0;
    float v30 = 0.0;
    if (v28) {
      float v30 = *(float *)(a1 + 96) / (float)v28;
    }
    unint64_t v31 = *(void *)(a1 + 120);
    if (v31) {
      float v29 = *(float *)(a1 + 112) / (float)v31;
    }
    unint64_t v32 = *(void *)(a1 + 136);
    float v33 = 0.0;
    float v34 = 0.0;
    if (v32) {
      float v34 = *(float *)(a1 + 128) / (float)v32;
    }
    uint64_t v35 = *(void *)(a1 + 11936);
    uint64_t v36 = *(void *)(a1 + 11944);
    int v37 = *(_DWORD *)(a1 + 160);
    unint64_t v38 = *(void *)(a1 + 152);
    if (v38) {
      float v33 = *(float *)(a1 + 144) / (float)v38;
    }
    *(_DWORD *)buf = 134222592;
    double v119 = a3;
    __int16 v120 = 1024;
    BOOL v121 = v11;
    __int16 v122 = 2048;
    double v123 = v10;
    __int16 v124 = 1024;
    int v125 = v8;
    __int16 v126 = 2048;
    double v127 = v9;
    __int16 v128 = 2048;
    double v129 = v17;
    __int16 v130 = 2048;
    double v131 = v16;
    __int16 v132 = 2048;
    double v133 = v21;
    __int16 v134 = 2048;
    double v135 = v20;
    __int16 v136 = 2048;
    double v137 = v25;
    __int16 v138 = 2048;
    double v139 = v24;
    __int16 v140 = 2048;
    double v141 = v27;
    __int16 v142 = 2048;
    double v143 = v30;
    __int16 v144 = 2048;
    double v145 = v29;
    __int16 v146 = 2048;
    double v147 = v34;
    __int16 v148 = 2048;
    uint64_t v149 = v35;
    __int16 v150 = 2048;
    uint64_t v151 = v36;
    __int16 v152 = 1024;
    int v153 = v37;
    __int16 v154 = 2048;
    double v155 = v33;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "Kicking,turnTime,%f,isKicking,%d,prob,%f,strokes,%d,deltaT,%f,accelXY,%f,accelZ,%f,ratio,%f,peakAccel,%f,yaw,%f,me anEpoch,%f,totalEpoch,%f,vertToHoriz,%f,medianCross,%f,accelToGyroHF,%f,startTime,%f,endTime,%f,maxKicks,%d,trimmedYaw,%f",  buf,  0xB4u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344E0 != -1) {
      dispatch_once(&qword_1019344E0, &stru_101881E38);
    }
    unint64_t v52 = *(void *)(a1 + 8);
    float v53 = 0.0;
    float v54 = 0.0;
    if (v52) {
      float v54 = *(float *)a1 / (float)v52;
    }
    unint64_t v55 = *(void *)(a1 + 24);
    if (v55) {
      float v53 = *(float *)(a1 + 16) / (float)v55;
    }
    unint64_t v56 = *(void *)(a1 + 40);
    if (v56) {
      float v57 = *(float *)(a1 + 32) / (float)v56;
    }
    else {
      float v57 = 0.0;
    }
    unint64_t v58 = *(void *)(a1 + 56);
    double v59 = 0.0;
    double v60 = 0.0;
    if (v58) {
      double v60 = (float)(*(float *)(a1 + 48) / (float)v58);
    }
    unint64_t v61 = *(void *)(a1 + 72);
    if (v61) {
      double v59 = (float)(*(float *)(a1 + 64) / (float)v61);
    }
    unint64_t v62 = *(void *)(a1 + 88);
    float v63 = *(float *)(a1 + 80);
    double v64 = 0.0;
    double v65 = 0.0;
    if (v62) {
      double v65 = (float)(v63 / (float)v62);
    }
    unint64_t v66 = *(void *)(a1 + 104);
    if (v66) {
      double v64 = (float)(*(float *)(a1 + 96) / (float)v66);
    }
    unint64_t v67 = *(void *)(a1 + 120);
    double v68 = 0.0;
    double v69 = 0.0;
    if (v67) {
      double v69 = (float)(*(float *)(a1 + 112) / (float)v67);
    }
    unint64_t v70 = *(void *)(a1 + 136);
    if (v70) {
      double v68 = (float)(*(float *)(a1 + 128) / (float)v70);
    }
    double v71 = v53;
    uint64_t v72 = *(void *)(a1 + 11936);
    uint64_t v73 = *(void *)(a1 + 11944);
    double v74 = v57;
    int v75 = *(_DWORD *)(a1 + 160);
    unint64_t v76 = *(void *)(a1 + 152);
    if (v76) {
      double v77 = (float)(*(float *)(a1 + 144) / (float)v76);
    }
    else {
      double v77 = 0.0;
    }
    int v80 = 134222592;
    double v81 = a3;
    __int16 v82 = 1024;
    BOOL v83 = v11;
    __int16 v84 = 2048;
    double v85 = v10;
    __int16 v86 = 1024;
    int v87 = v8;
    __int16 v88 = 2048;
    double v89 = v9;
    __int16 v90 = 2048;
    double v91 = v54;
    __int16 v92 = 2048;
    double v93 = v71;
    __int16 v94 = 2048;
    double v95 = v74;
    __int16 v96 = 2048;
    double v97 = v60;
    __int16 v98 = 2048;
    double v99 = v59;
    __int16 v100 = 2048;
    double v101 = v65;
    __int16 v102 = 2048;
    double v103 = v63;
    __int16 v104 = 2048;
    double v105 = v64;
    __int16 v106 = 2048;
    double v107 = v69;
    __int16 v108 = 2048;
    double v109 = v68;
    __int16 v110 = 2048;
    uint64_t v111 = v72;
    __int16 v112 = 2048;
    uint64_t v113 = v73;
    __int16 v114 = 1024;
    int v115 = v75;
    __int16 v116 = 2048;
    double v117 = v77;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344E8,  0LL,  "Kicking,turnTime,%f,isKicking,%d,prob,%f,strokes,%d,deltaT,%f,accelXY,%f,accelZ,%f,ratio,%f,peakAccel,%f,yaw,%f,me anEpoch,%f,totalEpoch,%f,vertToHoriz,%f,medianCross,%f,accelToGyroHF,%f,startTime,%f,endTime,%f,maxKicks,%d,trimmedYaw,%f",  COERCE_DOUBLE(&v80),  180);
    double v79 = (uint8_t *)v78;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "std::vector<CLMotionTypeTimestamp> CLSwimKickingDetector::addTurn(CLMotionTypeTimestamp)",  "%s\n",  v78);
    if (v79 != buf) {
      free(v79);
    }
  }

  if (v11)
  {
    double v39 = (*(float (**)(void))(**(void **)(a1 + 168) + 168LL))(*(void *)(a1 + 168));
    double v40 = *(double *)(a1 + 176) + v39;
    if (v40 < a3)
    {
      __int16 v41 = a2 + 2;
      BOOL v42 = a2[1];
      do
      {
        if ((unint64_t)v42 >= *v41)
        {
          __int16 v44 = *a2;
          uint64_t v45 = v42 - *a2;
          unint64_t v46 = v45 + 1;
          uint64_t v47 = *v41 - (void)v44;
          if (v47 >> 2 > v46) {
            unint64_t v46 = v47 >> 2;
          }
          else {
            unint64_t v48 = v46;
          }
          if (v48)
          {
            __int16 v49 = (char *)sub_1000071BC((uint64_t)(a2 + 2), v48);
            __int16 v44 = *a2;
            BOOL v42 = a2[1];
          }

          else
          {
            __int16 v49 = 0LL;
          }

          double v50 = (double *)&v49[8 * v45];
          *double v50 = v40;
          unint64_t v43 = v50 + 1;
          while (v42 != v44)
          {
            uint64_t v51 = *((void *)v42-- - 1);
            *((void *)v50-- - 1) = v51;
          }

          *a2 = v50;
          a2[1] = v43;
          a2[2] = (double *)&v49[8 * v48];
          if (v44) {
            operator delete(v44);
          }
        }

        else
        {
          *BOOL v42 = v40;
          unint64_t v43 = v42 + 1;
        }

        a2[1] = v43;
        double v40 = v40 + v39;
        BOOL v42 = v43;
      }

      while (v40 < a3);
    }
  }

  *(_DWORD *)a1 = 0;
  *(void *)(a1 + 8) = 0LL;
  *(_DWORD *)(a1 + 16) = 0;
  *(void *)(a1 + sub_100BDC958(v1 + 24) = 0LL;
  *(_DWORD *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0LL;
  *(_DWORD *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0LL;
  *(_DWORD *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0LL;
  *(_DWORD *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0LL;
  *(_DWORD *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0LL;
  *(_DWORD *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0LL;
  *(_DWORD *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0LL;
  *(_DWORD *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0LL;
  *(_DWORD *)(a1 + 160) = 0x80000000;
  *(double *)(a1 + 176) = a3;
  *(void *)(a1 + 11936) = *(void *)(a1 + 11944);
  *(_DWORD *)(a1 + 11952) = 0;
}

void sub_100D7C2C0(_Unwind_Exception *exception_object)
{
  float v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }

  _Unwind_Resume(exception_object);
}

uint64_t sub_100D7C2F0(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v7 = (char *)(a1 + 11904);
  if (sub_100824EC0(a1 + 184, (float *)a2, a3, a4))
  {
    float v8 = *(float *)(a1 + 11868);
    float v9 = *(float *)(a1 + 11876);
    float v10 = *(float *)(a1 + 11884);
    float v11 = *(float *)(a1 + 11888);
    float v12 = *(float *)(a1 + 11896);
    float v13 = *(float *)(a1 + 11900);
    char v14 = *v7;
    *(float *)a1 = *(float *)(a1 + 11872) + *(float *)a1;
    ++*(void *)(a1 + 8);
    *(float *)(a1 + 16) = v9 + *(float *)(a1 + 16);
    ++*(void *)(a1 + 24);
    *(float *)(a1 + 32) = v10 + *(float *)(a1 + 32);
    int v15 = *(_DWORD *)(a1 + 11892);
    ++*(void *)(a1 + 40);
    *(float *)(a1 + 48) = v11 + *(float *)(a1 + 48);
    ++*(void *)(a1 + 56);
    *(float *)(a1 + 64) = v8 + *(float *)(a1 + 64);
    ++*(void *)(a1 + 72);
    float v16 = 1.0;
    if ((v14 & 1) == 0) {
      float v16 = 0.0;
    }
    *(float *)(a1 + 80) = v16 + *(float *)(a1 + 80);
    ++*(void *)(a1 + 88);
    *(float *)(a1 + 96) = v12 + *(float *)(a1 + 96);
    ++*(void *)(a1 + 104);
    *(float *)(a1 + 112) = *(float *)(a1 + 112) + (float)v15;
    ++*(void *)(a1 + 120);
    *(float *)(a1 + 128) = v13 + *(float *)(a1 + 128);
    ++*(void *)(a1 + 136);
    v7[53] = v14 & 1;
    if ((v14 & 1) != 0)
    {
      int v17 = *(_DWORD *)(a1 + 11952) + 1;
      *(_DWORD *)(a1 + 11952) = v17;
      *(float *)(a1 + 144) = v8 + *(float *)(a1 + 144);
      ++*(void *)(a1 + 152);
      *(double *)(a1 + 11960) = a3;
    }

    else
    {
      int v17 = 0;
      *(_DWORD *)(a1 + 11952) = 0;
    }

    if (*(_DWORD *)(a1 + 160) < v17) {
      *(_DWORD *)(a1 + 160) = v17;
    }
  }

  else
  {
    int v17 = *(_DWORD *)(a1 + 11952);
  }

  *(double *)(a1 + 11944) = a3;
  if (v17 <= 5)
  {
    char v18 = 0;
  }

  else
  {
    char v18 = 1;
  }

  v7[52] = v18;
LABEL_15:
  if (*(double *)(a1 + 176) == -1.0)
  {
    *(void *)(a1 + 176) = *(void *)(a2 + 56);
    *(double *)(a1 + 11936) = a3;
  }

  return 0LL;
}

void sub_100D7C4EC(id a1)
{
  qword_1019344E8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Swimming");
}

uint64_t sub_100D7C518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = off_101881E68;
  sub_1002E4C3C(a1 + 8, a2, 1LL, 1LL);
  *(_OWORD *)(a1 + 240) = 0u;
  *(void *)(a1 + sub_100BDC958(v1 + 24) = a3;
  *(void *)(a1 + 32) = 0LL;
  *(void *)(a1 + 296) = 0LL;
  *(void *)(a1 + 184) = 0LL;
  *(void *)(a1 + 192) = 0LL;
  *(void *)(a1 + 176) = 0LL;
  *(_DWORD *)(a1 + 200) = 0;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_BYTE *)(a1 + 288) = 0;
  double v5 = sub_100D2D9A4(a1 + 304);
  *(void *)(a1 + 344) = 0LL;
  *(_DWORD *)(a1 + 352) = 0;
  *(_BYTE *)(a1 + 356) = 0;
  *(void *)(a1 + 360) = 0LL;
  objc_msgSend(*(id *)(a1 + 24), "silo", v5);
  CLMotionActivity::init((CLMotionActivity *)(a1 + 40));
  *(void *)(a1 + 344) = objc_alloc_init(&OBJC_CLASS___GEOLocationShifter);
  *(_DWORD *)(a1 + 196) = 0;
  *(_DWORD *)(a1 + 200) = 0;
  sub_1002F0B04(&v13);
  char v6 = *(_BYTE *)(a1 + 356);
  int v7 = sub_1002A6F64(v13, "EnableLaneEstimation", &v15);
  BOOL v8 = v15;
  if (!v7) {
    BOOL v8 = v6;
  }
  *(_BYTE *)(a1 + 356) = v8;
  float v9 = v14;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      unint64_t v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }

  sub_100D7C6C8(a1, *(unsigned __int8 *)(a1 + 356));
  return a1;
}

void sub_100D7C654(_Unwind_Exception *a1, uint64_t a2, ...)
{
  int v7 = *(void ***)(v3 + 360);
  *(void *)(v3 + 360) = 0LL;
  if (v7) {
    sub_100D82D4C(v3 + 360, v7);
  }
  BOOL v8 = *v5;
  *double v5 = 0LL;
  if (v8) {
    sub_100381E48((int)v5, v8);
  }
  sub_10000AE14(v3 + 272);
  sub_10000AE14(v3 + 256);
  sub_10000AE14(v4);
  sub_1002E4CB0(v2);
  _Unwind_Resume(a1);
}

void sub_100D7C6C8(uint64_t a1, int a2)
{
  *(_BYTE *)(a1 + 356) = a2;
  if (a2)
  {
    uint64_t v3 = operator new(0xC0uLL);
    v3[1] = 0u;
    v3[2] = 0u;
    v3[3] = 0u;
    v3[4] = 0u;
    v3[5] = 0u;
    v3[6] = 0u;
    v3[7] = 0u;
    v3[8] = 0u;
    v3[9] = 0u;
    v3[10] = 0u;
    v3[11] = 0u;
    *(void *)uint64_t v3 = 0xBFF0000000000000LL;
    *((void *)v3 + 1) = 0LL;
    *((void *)v3 + 2) = 0LL;
    *((_DWORD *)v3 + 6) = -1;
    *((void *)v3 + 4) = 0xBFF0000000000000LL;
    *((void *)v3 + 5) = -1LL;
    *((void *)v3 + 8) = 0xBFF0000000000000LL;
    *((void *)v3 + 9) = 0LL;
    *((void *)v3 + 10) = 0LL;
    sub_100D2D9A4((uint64_t)v3 + 88);
    *((void *)v3 + 17) = 0LL;
    *((void *)v3 + 16) = (char *)v3 + 136;
    *((void *)v3 + 18) = 0LL;
    sub_100D2D9A4((uint64_t)v3 + 152);
    uint64_t v4 = *(void ***)(a1 + 360);
    *(void *)(a1 + 360) = v3;
    if (v4)
    {
      sub_100D82D4C(a1 + 360, v4);
      if (!*(void *)(a1 + 360)) {
        sub_10126D9C8();
      }
    }
  }

uint64_t sub_100D7C7C8(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a1 + 8;
  (*(void (**)(uint64_t))(*(void *)(a1 + 8) + 16LL))(a1 + 8);
  if (CLMotionActivity::isStatic((CLMotionActivity *)a3)
    && (CLMotionActivity::isStatic((CLMotionActivity *)(a1 + 40)) & 1) == 0)
  {
    *(void *)(a1 + 176) = *a2;
  }

  *(void *)(a1 + 32) = *a2;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)a3;
  __int128 v7 = *(_OWORD *)(a3 + 16);
  __int128 v8 = *(_OWORD *)(a3 + 32);
  __int128 v9 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a3 + 64);
  *(_OWORD *)(a1 + 88) = v9;
  *(_OWORD *)(a1 + 72) = v8;
  *(_OWORD *)(a1 + 56) = v7;
  __int128 v10 = *(_OWORD *)(a3 + 80);
  __int128 v11 = *(_OWORD *)(a3 + 96);
  __int128 v12 = *(_OWORD *)(a3 + 112);
  *(void *)(a1 + 168) = *(void *)(a3 + 128);
  *(_OWORD *)(a1 + 152) = v12;
  *(_OWORD *)(a1 + 136) = v11;
  *(_OWORD *)(a1 + 120) = v10;
  int v13 = *(_DWORD *)(a1 + 352);
  if (v13)
  {
    *(_DWORD *)(a1 + 40) = v13;
    *(_DWORD *)(a1 + 44) = 2;
    *(_DWORD *)(a1 + 52) = 0;
    *(void *)(a1 + 176) = 0xBFF0000000000000LL;
  }

  (*(void (**)(uint64_t))(*(void *)v6 + 24LL))(v6);
  return 1LL;
}

void sub_100D7C8B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100D7C8C8(uint64_t a1, _DWORD *a2, void *a3)
{
  uint64_t v5 = a1 + 8;
  (*(void (**)(uint64_t))(*(void *)(a1 + 8) + 16LL))(a1 + 8);
  *(void *)(v5 + 176) = *a3;
  *(_DWORD *)(v5 + 184) = *a2;
  return (*(uint64_t (**)(uint64_t))(*(void *)v5 + 24LL))(v5);
}

uint64_t sub_100D7C928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a1 + 256);
  if (v6) {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v6 + 144LL))(v6, a2, a3);
  }
  uint64_t result = *(void *)(a1 + 272);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)result + 144LL))(result, a2, a3);
  }
  return result;
}

uint64_t sub_100D7C998(uint64_t a1)
{
  uint64_t v1 = (void *)(a1 + 8);
  (*(void (**)(uint64_t))(*(void *)(a1 + 8) + 16LL))(a1 + 8);
  uint64_t v2 = v1[31];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 40LL))(v2);
  }
  return (*(uint64_t (**)(void *))(*v1 + 24LL))(v1);
}

void sub_100D7C9FC(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100D7CA14(uint64_t a1)
{
  uint64_t v1 = (void *)(a1 + 8);
  (*(void (**)(uint64_t))(*(void *)(a1 + 8) + 16LL))(a1 + 8);
  uint64_t v2 = v1[31];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 48LL))(v2);
  }
  return (*(uint64_t (**)(void *))(*v1 + 24LL))(v1);
}

void sub_100D7CA78(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100D7CA90(uint64_t a1)
{
  uint64_t v1 = (void *)(a1 + 8);
  (*(void (**)(uint64_t))(*(void *)(a1 + 8) + 16LL))(a1 + 8);
  uint64_t v2 = v1[31];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 56LL))(v2);
  }
  return (*(uint64_t (**)(void *))(*v1 + 24LL))(v1);
}

void sub_100D7CAF4(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100D7CB0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 8;
  (*(void (**)(uint64_t))(*(void *)(a1 + 8) + 16LL))(a1 + 8);
  uint64_t v5 = *(void *)(v4 + 248);
  if (v5) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)v5 + 104LL))(v5, a2);
  }
  *(_BYTE *)(a1 + 288) = a2;
  return (*(uint64_t (**)(uint64_t))(*(void *)(a1 + 8) + 24LL))(v4);
}

void sub_100D7CB88(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100D7CBA0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a1 + 8;
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v20 = a1 + 8;
  (*(void (**)(uint64_t))(v4 + 16))(a1 + 8);
  __int16 v21 = 256;
  *(void *)(v5 + 188) = a2;
  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_101881F60);
  }
  uint64_t v6 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
  {
    int v7 = *(_DWORD *)(a1 + 196);
    __int128 v8 = (v7 - 1) > 5 ? "Unavailable" : (&off_1018820B8)[v7 - 1];
    sub_1010DDBC0(&v28, v8);
    __int128 v9 = v32 >= 0 ? (void **)&v28 : v28;
    int v10 = *(_DWORD *)(a1 + 200);
    *(_DWORD *)buf = 67240706;
    int v23 = v7;
    __int16 v24 = 2082;
    float v25 = v9;
    __int16 v26 = 1026;
    int v27 = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "CLMM,signalEnvironment,%{public}d,name,%{public}s,fidelity,%{public}d",  buf,  0x18u);
    if (SHIBYTE(v32) < 0) {
      operator delete(v28);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_101881F60);
    }
    uint64_t v12 = qword_1019348B8;
    int v13 = *(_DWORD *)(a1 + 196);
    sub_1009FE16C(v13, __p);
    if (v19 >= 0) {
      char v14 = __p;
    }
    else {
      char v14 = (void **)__p[0];
    }
    int v15 = *(_DWORD *)(a1 + 200);
    LODWORD(v28) = 67240706;
    HIDWORD(v28) = v13;
    __int16 v29 = 2082;
    float v30 = v14;
    __int16 v31 = 1026;
    int v32 = v15;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v12,  2LL,  "CLMM,signalEnvironment,%{public}d,name,%{public}s,fidelity,%{public}d",  &v28,  24);
    int v17 = v16;
    if (v19 < 0) {
      operator delete(__p[0]);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMapMatchingEngineBase::setSignalEnvironment(const CLSignalEnvironmentProvider_Type::SignalEnvironmentInfo)",  "%s\n",  v17);
  }

  return (*(uint64_t (**)(uint64_t))(*(void *)v5 + 24LL))(v5);
}

void sub_100D7CE4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
}

uint64_t sub_100D7CE7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 8;
  (*(void (**)(uint64_t))(*(void *)(a1 + 8) + 16LL))(a1 + 8);
  int v5 = *(_DWORD *)(a2 + 32);
  __int128 v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v4 + 196) = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 212) = v6;
  *(_DWORD *)(v4 + 228) = v5;
  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_101881F60);
  }
  int v7 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
  {
    int v8 = *(_DWORD *)(a1 + 212);
    int v9 = *(_DWORD *)(a1 + 216);
    *(_DWORD *)buf = 67240448;
    int v19 = v8;
    __int16 v20 = 1026;
    int v21 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "CLMM,fitnessSession,%{public}d,predicted,%{public}d",  buf,  0xEu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_101881F60);
    }
    int v11 = *(_DWORD *)(a1 + 212);
    int v12 = *(_DWORD *)(a1 + 216);
    v15[0] = 67240448;
    v15[1] = v11;
    __int16 v16 = 1026;
    int v17 = v12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,fitnessSession,%{public}d,predicted,%{public}d",  v15,  14);
    char v14 = (uint8_t *)v13;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMapMatchingEngineBase::setFitnessActivity(const CLWorkoutUpdate)",  "%s\n",  v13);
    if (v14 != buf) {
      free(v14);
    }
  }

  return (*(uint64_t (**)(uint64_t))(*(void *)v4 + 24LL))(v4);
}

void sub_100D7D08C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

uint64_t sub_100D7D0B4(CLMotionActivity *this, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(a2 + 4);
  *(void *)(a4 + 32) = v8;
  uint64_t v9 = *(void *)(a2 + 12);
  *(void *)(a4 + 40) = v9;
  *(void *)(a4 + 56) = v8;
  *(void *)(a4 + 64) = v9;
  unsigned int v10 = *(_DWORD *)(a2 + 96);
  *(_DWORD *)(a4 + 404) = v10;
  *(void *)(a4 + 408) = *(void *)(a2 + 88);
  *(_BYTE *)(a4 + 351) = *(_DWORD *)(a2 + 132) == 2;
  *(void *)(a4 + 104) = *(void *)(a2 + 60);
  *(void *)(a4 + 192) = *(void *)(a2 + 68);
  *(void *)(a4 + 72) = *(void *)(a2 + 28);
  *(double *)(a4 + 8) = v11;
  *(void *)(a4 + 80) = *(void *)(a2 + 20);
  *(_OWORD *)(a4 + 88) = *(_OWORD *)(a2 + 36);
  *(void *)(a4 + 184) = *(void *)(a2 + 52);
  *(_DWORD *)(a4 + 2sub_100BDC958(v1 + 24) = LODWORD(this->timestamp);
  *(_DWORD *)(a4 + 344) = HIDWORD(this->timestamp);
  *(_BYTE *)(a4 + 228) = CLMotionActivity::isStatic((CLMotionActivity *)&this->timestamp);
  *(void *)(a4 + 352) = *(void *)&this[2].mountedConfidence;
  *(_BYTE *)(a4 + 229) = CLMotionActivity::isMounted((CLMotionActivity *)&this->timestamp);
  *(_BYTE *)(a4 + 360) = *(_BYTE *)(a3 + 356);
  float v12 = *(float *)(a3 + 40);
  if (v12 > 0.0)
  {
    float v13 = *(float *)(a3 + 44);
    if (v13 > 0.0)
    {
      float v14 = *(float *)(a3 + 48);
      if (v14 >= 0.0)
      {
        *(double *)(a4 + 200) = v12;
        *(double *)(a4 + 208) = v13;
        *(double *)(a4 + 216) = v14;
      }
    }
  }

  *(_OWORD *)(a4 + 368) = *(_OWORD *)(a2 + 4);
  double v15 = *(double *)(a3 + 32);
  *(double *)(a4 + 16) = v15;
  double v16 = *(double *)(a3 + 344);
  *(double *)(a4 + sub_100BDC958(v1 + 24) = v16;
  double v17 = *(double *)(a4 + 8);
  if (v17 > 0.0)
  {
    if (v15 <= 0.0)
    {
      double estExitTime = this[3].estExitTime;
      if (estExitTime == 0.0)
      {
        double estExitTime = COERCE_DOUBLE(operator new(0x48uLL));
        **(_OWORD **)&double estExitTime = 0u;
        *(_OWORD *)(*(void *)&estExitTime + 16LL) = 0u;
        *(_OWORD *)(*(void *)&estExitTime + 32LL) = 0u;
        *(_OWORD *)(*(void *)&estExitTime + 48LL) = 0u;
        *(void *)(*(void *)&estExitTime + 64LL) = 0LL;
        this[3].double estExitTime = estExitTime;
      }

      *(void *)buf = 0xBFF0000000000000LL;
      *(double *)unint64_t v28 = v17;
      sub_1007BAEA8(*(uint64_t *)&estExitTime, (double *)v28, (double *)buf);
      double v15 = *(double *)buf;
      *(void *)(a4 + 16) = *(void *)buf;
      double v16 = *(double *)(a4 + 24);
    }

    if (v16 <= 0.0)
    {
      double v19 = this[3].estExitTime;
      if (v19 == 0.0)
      {
        double v19 = COERCE_DOUBLE(operator new(0x48uLL));
        *(void *)(*(void *)&v19 + 64LL) = 0LL;
        *(_OWORD *)(*(void *)&v19 + 32LL) = 0u;
        *(_OWORD *)(*(void *)&v19 + 48LL) = 0u;
        **(_OWORD **)&double v19 = 0u;
        *(_OWORD *)(*(void *)&v19 + 16LL) = 0u;
        this[3].double estExitTime = v19;
      }

      *(void *)buf = 0xBFF0000000000000LL;
      *(double *)unint64_t v28 = v15;
      sub_1007BA8F0(*(uint64_t *)&v19, (double *)v28, (double *)buf);
      *(void *)(a4 + sub_100BDC958(v1 + 24) = *(void *)buf;
    }
  }

  *(_DWORD *)(a4 + 400) = *(_DWORD *)(a3 + 536);
  *(void *)(a4 + 416) = *(void *)&this[2].tilt;
  uint64_t v20 = sub_100D7D4A0((uint64_t)this, a4, (char *)&v27 + 7);
  if ((v20 & 1) == 0)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_101881F60);
    }
    int v21 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v22 = *(void *)(a4 + 8);
      *(_DWORD *)buf = 134349056;
      *(void *)&uint8_t buf[4] = v22;
      _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}.1lf,applyChinaShift() returned false",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_101881F60);
      }
      uint64_t v24 = *(void *)(a4 + 8);
      *(_DWORD *)unint64_t v28 = 134349056;
      *(void *)&v28[4] = v24;
      LODWORD(v27) = 12;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}.1lf,applyChinaShift() returned false",  v28,  v27);
      __int16 v26 = (char *)v25;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLMapMatchingEngineBase::fillCrumb(const CLDaemonLocation &, const CLDaemonLocationPrivate &, CLMapCrumb &) const",  "%s\n",  v25);
      if (v26 != buf) {
        free(v26);
      }
    }
  }

  return v20;
}

uint64_t sub_100D7D4A0(uint64_t a1, uint64_t a2, char *a3)
{
  *a3 = 0;
  if (*(_BYTE *)(a2 + 351))
  {
    uint64_t result = 1LL;
    *a3 = 1;
    return result;
  }

  double v7 = *(double *)(a2 + 56);
  double v8 = *(double *)(a2 + 64);
  if ((+[GEOLocationShifter isLocationShiftRequiredForCoordinate:]( &OBJC_CLASS___GEOLocationShifter,  "isLocationShiftRequiredForCoordinate:",  v7,  v8) & 1) == 0)
  {
    *a3 = 0;
    return 1LL;
  }

  __int128 v12 = 0uLL;
  double v9 = *(double *)(a2 + 80);
  uint64_t v11 = 0LL;
  uint64_t result = (uint64_t)objc_msgSend( *(id *)(a1 + 344),  "shiftCoordinate:accuracy:shiftedCoordinate:shiftedAccuracy:",  &v12,  &v11,  v7,  v8,  v9);
  if ((_DWORD)result)
  {
    *(_OWORD *)(a2 + 56) = v12;
    *(void *)(a2 + 80) = v11;
    char v10 = 1;
    *(_BYTE *)(a2 + 351) = 1;
  }

  else
  {
    char v10 = 0;
  }

  *a3 = v10;
  return result;
}

uint64_t sub_100D7D574(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 256);
  if (!v3) {
    return 0LL;
  }
  if ((*(_DWORD *)(a2 + 96) & 0xFFFFFFF7) == 1)
  {
    int isStatic = CLMotionActivity::isStatic((CLMotionActivity *)(a1 + 40));
    uint64_t v3 = *(void *)(a1 + 256);
    if (isStatic)
    {
      (*(void (**)(uint64_t))(*(void *)v3 + 24LL))(v3);
      return 0LL;
    }
  }

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v3 + 16LL))(v3, a2);
}

double sub_100D7D5E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!*(_BYTE *)(a2 + 265))
  {
    *(_OWORD *)(a3 + 4) = *(_OWORD *)(a2 + 368);
    *(void *)(a3 + 60) = *(void *)(a2 + 168);
    *(void *)(a3 + 116) = *(void *)(a2 + 104);
    *(void *)(a3 + 20) = *(void *)(a2 + 80);
  }

  double result = *(double *)(a2 + 192);
  *(double *)(a3 + 68) = result;
  *(_BYTE *)(a4 + 52) = *(_BYTE *)(a2 + 350);
  return result;
}

uint64_t sub_100D7D658(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  double v9 = a1 + 1;
  uint64_t v8 = a1[1];
  uint64_t v73 = a1 + 1;
  (*(void (**)(void *))(v8 + 16))(a1 + 1);
  __int16 v75 = 256;
  uint64_t v10 = v9[31];
  if (!v10 || !a1[30])
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_101881F60);
    }
    double v15 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v16 = *(void *)(a2 + 76);
      *(_DWORD *)buf = 134349056;
      uint64_t v105 = v16;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_ERROR,  "CLMM,%{public}.1lf,null pointers for matcher and geometry",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_101881F60);
      }
      uint64_t v48 = *(void *)(a2 + 76);
      LODWORD(v94) = 134349056;
      *(void *)((char *)&v94 + 4) = v48;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,%{public}.1lf,null pointers for matcher and geometry",  &v94,  12);
      double v50 = (uint8_t *)v49;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLMapMatchingEngineBase::match(CLDaemonLocation &, CLDaemonLocationPrivate &, CLMapCrumb &)",  "%s\n",  v49);
      if (v50 != buf) {
        free(v50);
      }
    }

    uint64_t v17 = 0LL;
    goto LABEL_60;
  }

  __int128 v11 = *(_OWORD *)(a4 + 80);
  __int128 v98 = *(_OWORD *)(a4 + 64);
  __int128 v99 = v11;
  __int128 v12 = *(_OWORD *)(a4 + 112);
  __int128 v100 = *(_OWORD *)(a4 + 96);
  __int128 v101 = v12;
  __int128 v13 = *(_OWORD *)(a4 + 16);
  __int128 v94 = *(_OWORD *)a4;
  __int128 v95 = v13;
  __int128 v14 = *(_OWORD *)(a4 + 48);
  __int128 v96 = *(_OWORD *)(a4 + 32);
  __int128 v97 = v14;
  if (*(char *)(a4 + 151) < 0)
  {
    sub_1010DD48C(&v102, *(void **)(a4 + 128), *(void *)(a4 + 136));
    uint64_t v10 = a1[32];
  }

  else
  {
    std::string v102 = *(std::string *)(a4 + 128);
  }

  memcpy(v103, (const void *)(a4 + 152), sizeof(v103));
  if (((*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v10 + 32LL))(v10, a4) & 1) != 0)
  {
    (*(void (**)(uint64_t *__return_ptr))(*(void *)a1[32] + 160LL))(&v71);
    int v18 = (*(uint64_t (**)(void))(*(void *)a1[32] + 168LL))(a1[32]);
    sub_1010DDBC0(__p, "NoRouteHintCrumb");
    sub_100F20024(a4, (uint64_t *)__p);
    if (v70 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v19 = a1[34];
    if (v19 && (*(unsigned int (**)(uint64_t, double))(*(void *)v19 + 88LL))(v19, *(double *)(a4 + 24)))
    {
      if (((*(uint64_t (**)(void, __int128 *))(*(void *)a1[34] + 32LL))(a1[34], &v94) & 1) == 0)
      {
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_101881F60);
        }
        unint64_t v43 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 134349056;
          uint64_t v105 = *((void *)&v94 + 1);
          _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}.1lf,matchRouteHints() returned false",  buf,  0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_101881F60);
          }
          LODWORD(v90) = 134349056;
          *(void *)((char *)&v90 + 4) = *((void *)&v94 + 1);
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}.1lf,matchRouteHints() returned false",  &v90,  12);
          unint64_t v55 = (uint8_t *)v54;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLMapMatchingEngineBase::match(CLDaemonLocation &, CLDaemonLocationPrivate &, CLMapCrumb &)",  "%s\n",  v54);
          if (v55 != buf) {
            free(v55);
          }
        }

        uint64_t v17 = 0LL;
        goto LABEL_52;
      }

      sub_1010DDBC0(v67, "RouteHintCrumb");
      sub_100F20024((uint64_t)&v94, (uint64_t *)v67);
      if (v68 < 0) {
        operator delete(v67[0]);
      }
      if (v103[112])
      {
        __int128 v20 = v99;
        *(_OWORD *)(a4 + 64) = v98;
        *(_OWORD *)(a4 + 80) = v20;
        __int128 v21 = v101;
        *(_OWORD *)(a4 + 96) = v100;
        *(_OWORD *)(a4 + 112) = v21;
        __int128 v22 = v95;
        *(_OWORD *)a4 = v94;
        *(_OWORD *)(a4 + 16) = v22;
        __int128 v23 = v97;
        *(_OWORD *)(a4 + 32) = v96;
        *(_OWORD *)(a4 + 48) = v23;
        std::string::operator=((std::string *)(a4 + 128), &v102);
        memcpy((void *)(a4 + 152), v103, 0x118uLL);
        (*(void (**)(uint8_t *__return_ptr))(*(void *)a1[34] + 160LL))(buf);
        sub_1000F2F30(&v71, (uint64_t *)buf);
        sub_10000AE14((uint64_t)buf);
        int v18 = (*(uint64_t (**)(void))(*(void *)a1[32] + 168LL))(a1[32]);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_101881F60);
        }
        uint64_t v24 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 134349056;
          uint64_t v105 = *((void *)&v94 + 1);
          _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}.1lf,Using solution with route hints",  buf,  0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_101881F60);
          }
          LODWORD(v90) = 134349056;
          *(void *)((char *)&v90 + 4) = *((void *)&v94 + 1);
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}.1lf,Using solution with route hints",  &v90,  12);
          double v65 = (uint8_t *)v64;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLMapMatchingEngineBase::match(CLDaemonLocation &, CLDaemonLocationPrivate &, CLMapCrumb &)",  "%s\n",  v64);
          if (v65 != buf) {
            free(v65);
          }
        }
      }
    }

    v25.n128_f64[0] = sub_100D7D5E8((uint64_t)a1, a4, a2, a3);
    uint64_t v26 = a1[45];
    if (v26)
    {
      *(_DWORD *)(a3 + 1sub_100BDC958(v1 + 24) = -1;
      *(void *)(a3 + 128) = 0xBFF0000000000000LL;
      *(void *)(a3 + 136) = -1LL;
      *(void *)(a3 + 144) = 0LL;
      *(void *)(a3 + 152) = 0LL;
      *(void *)(a3 + 160) = 0xBFF0000000000000LL;
      uint64_t v17 = 1LL;
      if (!*(_BYTE *)(a4 + 264) || *(_BYTE *)(a4 + 265) || !sub_1004DAFD4(v26, &v71, v18, a4))
      {
LABEL_52:
        __int16 v44 = v72;
        if (v72)
        {
          p_shared_owners = (unint64_t *)&v72->__shared_owners_;
          do
            unint64_t v46 = __ldaxr(p_shared_owners);
          while (__stlxr(v46 - 1, p_shared_owners));
          if (!v46)
          {
            ((void (*)(std::__shared_weak_count *, __n128))v44->__on_zero_shared)(v44, v25);
            std::__shared_weak_count::__release_weak(v44);
          }
        }

        goto LABEL_57;
      }

      uint64_t v27 = a1[45];
      uint64_t v28 = *(void *)(v27 + 16);
      *(void *)&__int128 v90 = *(void *)(v27 + 8);
      *((void *)&v90 + 1) = v28;
      if (v28)
      {
        __int16 v29 = (unint64_t *)(v28 + 8);
        do
          unint64_t v30 = __ldxr(v29);
        while (__stxr(v30 + 1, v29));
      }

      __int128 v31 = *(_OWORD *)(v27 + 72);
      __int128 v32 = *(_OWORD *)(v27 + 56);
      __int128 v33 = *(_OWORD *)(v27 + 40);
      __int128 v91 = *(_OWORD *)(v27 + 24);
      *(_OWORD *)__int16 v92 = v33;
      *(_OWORD *)&v92[16] = v32;
      __int128 v93 = v31;
      *(_DWORD *)(a3 + 1sub_100BDC958(v1 + 24) = v91;
      *(double *)(a3 + 128) = (double)(int)*((double *)&v91 + 1);
      *(void *)(a3 + 136) = *(void *)v92;
      *(_OWORD *)(a3 + 144) = *(_OWORD *)&v92[8];
      *(void *)(a3 + 160) = *(void *)&v92[24];
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_101881F60);
      }
      float v34 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        int v35 = *(_DWORD *)(a3 + 124);
        uint64_t v36 = *(void *)(a3 + 128);
        uint64_t v37 = *(void *)(a3 + 136);
        uint64_t v38 = *(void *)(a3 + 144);
        uint64_t v39 = *(void *)(a3 + 152);
        uint64_t v40 = *(void *)(a3 + 160);
        *(_DWORD *)buf = 134350593;
        uint64_t v105 = *((void *)&v94 + 1);
        __int16 v106 = 1026;
        int v107 = v35;
        __int16 v108 = 2050;
        uint64_t v109 = v36;
        __int16 v110 = 2049;
        uint64_t v111 = v37;
        __int16 v112 = 2050;
        uint64_t v113 = v38;
        __int16 v114 = 2050;
        uint64_t v115 = v39;
        __int16 v116 = 2050;
        uint64_t v117 = v40;
        _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEBUG,  "CLMMLE,%{public}.1lf,estimatedLane,%{public}d,laneProbability,%{public}.2lf,featureId,%{private}lld,LL,%{publi c}.7lf,%{public}.7lf,course,%{public}.1lf",  buf,  0x44u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_101881F60);
        }
        int v56 = *(_DWORD *)(a3 + 124);
        uint64_t v57 = *(void *)(a3 + 128);
        uint64_t v58 = *(void *)(a3 + 136);
        uint64_t v59 = *(void *)(a3 + 144);
        uint64_t v60 = *(void *)(a3 + 152);
        uint64_t v61 = *(void *)(a3 + 160);
        int v76 = 134350593;
        uint64_t v77 = *((void *)&v94 + 1);
        __int16 v78 = 1026;
        int v79 = v56;
        __int16 v80 = 2050;
        uint64_t v81 = v57;
        __int16 v82 = 2049;
        uint64_t v83 = v58;
        __int16 v84 = 2050;
        uint64_t v85 = v59;
        __int16 v86 = 2050;
        uint64_t v87 = v60;
        __int16 v88 = 2050;
        uint64_t v89 = v61;
        LODWORD(v66) = 68;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMLE,%{public}.1lf,estimatedLane,%{public}d,laneProbability,%{public}.2lf,featureId,%{private}lld,LL,%{publi c}.7lf,%{public}.7lf,course,%{public}.1lf",  &v76,  v66);
        float v63 = (uint8_t *)v62;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLMapMatchingEngineBase::match(CLDaemonLocation &, CLDaemonLocationPrivate &, CLMapCrumb &)",  "%s\n",  v62);
        if (v63 != buf) {
          free(v63);
        }
      }

      sub_10000AE14((uint64_t)&v90);
    }

    uint64_t v17 = 1LL;
    goto LABEL_52;
  }

  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_101881F60);
  }
  __int16 v41 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v42 = *(void *)(a4 + 8);
    *(_DWORD *)buf = 134349056;
    uint64_t v105 = v42;
    _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}.1lf,match() returned false",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_101881F60);
    }
    uint64_t v51 = *(void *)(a4 + 8);
    LODWORD(v90) = 134349056;
    *(void *)((char *)&v90 + 4) = v51;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}.1lf,match() returned false",  &v90,  12);
    float v53 = (uint8_t *)v52;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLMapMatchingEngineBase::match(CLDaemonLocation &, CLDaemonLocationPrivate &, CLMapCrumb &)",  "%s\n",  v52);
    if (v53 != buf) {
      free(v53);
    }
  }

  uint64_t v17 = 0LL;
LABEL_57:
  if (HIBYTE(v75))
  {
LABEL_60:
    if ((_BYTE)v75) {
      pthread_mutex_unlock(v74);
    }
    else {
      (*(void (**)(void *))(*v73 + 24LL))(v73);
    }
  }

  return v17;
}

void sub_100D7E16C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, char a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,void *__p,uint64_t a60,int a61,__int16 a62,char a63)
{
  if (a64 < 0) {
    operator delete(__p);
  }
  sub_1011C52D0((uint64_t)&a20);
  _Unwind_Resume(a1);
}

uint64_t sub_100D7E214(uint64_t a1, uint64_t a2)
{
  int v5 = (unsigned __int8 *)(a1 + 369);
  uint64_t v6 = sub_100D7C518(a1, (uint64_t)"MapMatchingEngine", a2);
  *(void *)uint64_t v6 = off_101881ED8;
  *(_BYTE *)(v6 + 368) = 1;
  *(void *)int v5 = 0LL;
  *(void *)(a1 + 384) =  objc_msgSend( objc_msgSend(*(id *)(v6 + 24), "vendor"),  "proxyForService:",  @"CLGpsAssistant");
  *(void *)(a1 + 392) = 0xBFF0000000000000LL;
  double v7 = (unsigned __int8 *)(a1 + 432);
  *(_OWORD *)(a1 + 440) = xmmword_10135D888;
  *(_OWORD *)(a1 + 4sub_100BDC958(v1 + 24) = 0u;
  *(_OWORD *)(a1 + 408) = 0u;
  *(_BYTE *)(a1 + 400) = 1;
  *(_OWORD *)(a1 + 456) = unk_10135D898;
  *(void *)(a1 + 472) = 0x600000006LL;
  *(void *)(a1 + 480) = 0LL;
  *(void *)(a1 + 488) = 0LL;
  *(void *)(a1 + 496) = 0LL;
  *(void *)(a1 + 504) = 0xBFF0000000000000LL;
  *(void *)(a1 + 512) = 0xBFF0000000000000LL;
  *(_BYTE *)(a1 + 520) = 0;
  *(void *)(a1 + 544) = 0LL;
  *(void *)(a1 + 536) = 0LL;
  *(void *)(a1 + 528) = a1 + 536;
  *(void *)(a1 + 552) = 0x4014000000000000LL;
  *(_WORD *)(a1 + 560) = 257;
  *(_OWORD *)(v5 + 195) = xmmword_10135D840;
  *(_DWORD *)(a1 + 580) = 125;
  *(void *)(a1 + 584) = 0x4059000000000000LL;
  unint64_t v186 = (void **)(a1 + 616);
  uint64_t v187 = (void **)(a1 + 592);
  *(_OWORD *)(a1 + 592) = 0u;
  *(_OWORD *)(a1 + 608) = 0u;
  *(_OWORD *)(a1 + 6sub_100BDC958(v1 + 24) = 0u;
  *(_OWORD *)(a1 + 640) = 0u;
  __asm { FMOV            V1.2D, #-1.0 }

  *(_OWORD *)(a1 + 656) = _Q1;
  *(void *)(a1 + 672) = 0LL;
  *(void *)(a1 + 680) = 0LL;
  *(void *)(a1 + 688) = 0xBFF0000000000000LL;
  *(void *)(a1 + 912) = 0LL;
  *(_DWORD *)(a1 + 920) = 0;
  *(_OWORD *)(a1 + 888) = 0u;
  *(_OWORD *)(a1 + 872) = 0u;
  *(_WORD *)(a1 + 904) = 0;
  *(_OWORD *)(a1 + 987) = 0u;
  *(_OWORD *)(a1 + 960) = 0u;
  *(_OWORD *)(a1 + 976) = 0u;
  *(_OWORD *)(a1 + 928) = 0u;
  *(_OWORD *)(a1 + 944) = 0u;
  *(_OWORD *)(a1 + 1040) = 0u;
  *(_OWORD *)(a1 + 1008) = 0u;
  *(_OWORD *)(a1 + 10sub_100BDC958(v1 + 24) = 0u;
  *(_OWORD *)(a1 + 854) = 0u;
  *(_OWORD *)(a1 + 840) = 0u;
  *(_OWORD *)(a1 + 8sub_100BDC958(v1 + 24) = 0u;
  *(_OWORD *)(a1 + 808) = 0u;
  *(_OWORD *)(a1 + 792) = 0u;
  *(_OWORD *)(a1 + 776) = 0u;
  *(_OWORD *)(a1 + 760) = 0u;
  *(_OWORD *)(a1 + 744) = 0u;
  *(_OWORD *)(a1 + 728) = 0u;
  *(_OWORD *)(a1 + 712) = 0u;
  *(_OWORD *)(a1 + 696) = 0u;
  *(void *)(a1 + 1064) = 0xBFF0000000000000LL;
  *(void *)(a1 + 1056) = 0LL;
  [*(id *)(a1 + 24) silo];
  sub_100D82D88(__p);
  uint64_t v12 = a1 + 240;
  sub_10005F550(a1 + 240, (__int128 *)__p);
  __int128 v13 = (std::__shared_weak_count *)__p[1];
  if (__p[1])
  {
    __int128 v14 = (unint64_t *)((char *)__p[1] + 8);
    do
      unint64_t v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }

  if (*(void *)v12)
  {
    uint64_t v16 = *(std::__shared_weak_count **)(a1 + 248);
    uint64_t v192 = *(void *)v12;
    __int16 v193 = v16;
    if (v16)
    {
      p_shared_owners = (unint64_t *)&v16->__shared_owners_;
      do
        unint64_t v18 = __ldxr(p_shared_owners);
      while (__stxr(v18 + 1, p_shared_owners));
    }

    sub_1010DDBC0(__p, "particle");
    sub_100D4B558(&v192, (uint64_t)__p, v196);
    uint64_t v12 = a1 + 256;
    sub_10005F550(a1 + 256, (__int128 *)v196);
    uint64_t v19 = (std::__shared_weak_count *)v196[1];
    if (v196[1])
    {
      __int128 v20 = (unint64_t *)((char *)v196[1] + 8);
      do
        unint64_t v21 = __ldaxr(v20);
      while (__stlxr(v21 - 1, v20));
      if (!v21)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }

    if (SHIBYTE(v199) < 0) {
      operator delete(__p[0]);
    }
    __int128 v13 = v193;
    if (v193)
    {
      __int128 v22 = (unint64_t *)&v193->__shared_owners_;
      do
        unint64_t v23 = __ldaxr(v22);
      while (__stlxr(v23 - 1, v22));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
        std::__shared_weak_count::__release_weak(v13);
      }
    }

    if (*(void *)v12)
    {
      uint64_t v24 = *(std::__shared_weak_count **)(a1 + 248);
      uint64_t v190 = *(void *)(a1 + 240);
      __int16 v191 = v24;
      if (v24)
      {
        __n128 v25 = (unint64_t *)&v24->__shared_owners_;
        do
          unint64_t v26 = __ldxr(v25);
        while (__stxr(v26 + 1, v25));
      }

      sub_1010DDBC0(__p, "particle");
      sub_100D4B558(&v190, (uint64_t)__p, v196);
      __int128 v13 = (std::__shared_weak_count *)(a1 + 272);
      sub_10005F550(a1 + 272, (__int128 *)v196);
      uint64_t v27 = (std::__shared_weak_count *)v196[1];
      if (v196[1])
      {
        uint64_t v28 = (unint64_t *)((char *)v196[1] + 8);
        do
          unint64_t v29 = __ldaxr(v28);
        while (__stlxr(v29 - 1, v28));
        if (!v29)
        {
          ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
          std::__shared_weak_count::__release_weak(v27);
        }
      }

      if (SHIBYTE(v199) < 0) {
        operator delete(__p[0]);
      }
      unint64_t v30 = v191;
      if (v191)
      {
        __int128 v31 = (unint64_t *)&v191->__shared_owners_;
        do
          unint64_t v32 = __ldaxr(v31);
        while (__stlxr(v32 - 1, v31));
        if (!v32)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
      }

      if (v13->__vftable)
      {
        unsigned __int8 v189 = 0;
        sub_1002F0B04(__p);
        int v33 = sub_1002A6F64((uint64_t)__p[0], "UseFullSnap", (BOOL *)&v189);
        int v34 = v33;
        int v35 = (std::__shared_weak_count *)__p[1];
        if (!__p[1]) {
          goto LABEL_43;
        }
        uint64_t v36 = (unint64_t *)((char *)__p[1] + 8);
        do
          unint64_t v37 = __ldaxr(v36);
        while (__stlxr(v37 - 1, v36));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
          std::__shared_weak_count::__release_weak(v35);
          if (!v34)
          {
LABEL_45:
            p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
            if (qword_1019348B0 != -1) {
              dispatch_once(&qword_1019348B0, &stru_101881F60);
            }
            uint64_t v2 = &OBJC_METACLASS___CLPrivacyManager.vtable;
            uint64_t v38 = (os_log_s *)qword_1019348B8;
            if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
            {
              int v39 = *v5;
              LODWORD(__p[0]) = 67240192;
              HIDWORD(__p[0]) = v39;
              _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_DEBUG,  "CLMM,UseFullSnap,%{public}d",  (uint8_t *)__p,  8u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(__p, 0x65CuLL);
              if (qword_1019348B0 != -1) {
                dispatch_once(&qword_1019348B0, &stru_101881F60);
              }
              int v147 = *v5;
              LODWORD(v196[0]) = 67240192;
              HIDWORD(v196[0]) = v147;
              _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,UseFullSnap,%{public}d",  v196,  8);
              uint64_t v149 = (void **)v148;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLMapMatchingEngine::CLMapMatchingEngine(id<CLIntersiloUniverse>, const std::string &)",  "%s\n",  v148);
              if (v149 != __p) {
                free(v149);
              }
            }

            sub_1002F0B04(__p);
            int v40 = sub_1002A6F64((uint64_t)__p[0], "enableDotGpsFeedback", (BOOL *)&v189);
            int v41 = v40;
            uint64_t v42 = (std::__shared_weak_count *)__p[1];
            if (!__p[1]) {
              goto LABEL_54;
            }
            unint64_t v43 = (unint64_t *)((char *)__p[1] + 8);
            do
              unint64_t v44 = __ldaxr(v43);
            while (__stlxr(v44 - 1, v43));
            if (!v44)
            {
              ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
              std::__shared_weak_count::__release_weak(v42);
              if (!v41)
              {
LABEL_56:
                if (qword_1019348B0 != -1) {
                  dispatch_once(&qword_1019348B0, &stru_101881F60);
                }
                uint64_t v45 = (os_log_s *)qword_1019348B8;
                if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
                {
                  int v46 = *(unsigned __int8 *)(a1 + 368);
                  LODWORD(__p[0]) = 67240192;
                  HIDWORD(__p[0]) = v46;
                  _os_log_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_DEBUG,  "CLMM,enableDotGpsFeedback,%{public}d",  (uint8_t *)__p,  8u);
                }

                if (sub_1002921D0(115, 2))
                {
                  bzero(__p, 0x65CuLL);
                  if (qword_1019348B0 != -1) {
                    dispatch_once(&qword_1019348B0, &stru_101881F60);
                  }
                  int v150 = *(unsigned __int8 *)(a1 + 368);
                  LODWORD(v196[0]) = 67240192;
                  HIDWORD(v196[0]) = v150;
                  LODWORD(v185) = 8;
                  _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,enableDotGpsFeedback,%{public}d",  v196,  v185);
                  __int16 v152 = (void **)v151;
                  sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLMapMatchingEngine::CLMapMatchingEngine(id<CLIntersiloUniverse>, const std::string &)",  "%s\n",  v151);
                  if (v152 != __p) {
                    free(v152);
                  }
                }

                *(_BYTE *)(a1 + 434) = 1;
                sub_1002F0B04(__p);
                int v47 = sub_1002A6F64((uint64_t)__p[0], "EnablePedestrianMapMatching", (BOOL *)&v189);
                int v48 = v47;
                __int16 v49 = (std::__shared_weak_count *)__p[1];
                if (!__p[1]) {
                  goto LABEL_65;
                }
                double v50 = (unint64_t *)((char *)__p[1] + 8);
                do
                  unint64_t v51 = __ldaxr(v50);
                while (__stlxr(v51 - 1, v50));
                if (!v51)
                {
                  ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
                  std::__shared_weak_count::__release_weak(v49);
                  if (!v48)
                  {
LABEL_67:
                    if (qword_1019348B0 != -1) {
                      dispatch_once(&qword_1019348B0, &stru_101881F60);
                    }
                    unint64_t v52 = (os_log_s *)qword_1019348B8;
                    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
                    {
                      int v53 = *(unsigned __int8 *)(a1 + 434);
                      LODWORD(__p[0]) = 67240192;
                      HIDWORD(__p[0]) = v53;
                      _os_log_impl( (void *)&_mh_execute_header,  v52,  OS_LOG_TYPE_DEBUG,  "CLMM,EnablePedestrianMapMatching,%{public}d",  (uint8_t *)__p,  8u);
                    }

                    if (sub_1002921D0(115, 2))
                    {
                      bzero(__p, 0x65CuLL);
                      if (qword_1019348B0 != -1) {
                        dispatch_once(&qword_1019348B0, &stru_101881F60);
                      }
                      int v153 = *(unsigned __int8 *)(a1 + 434);
                      LODWORD(v196[0]) = 67240192;
                      HIDWORD(v196[0]) = v153;
                      LODWORD(v185) = 8;
                      _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,EnablePedestrianMapMatching,%{public}d",  v196,  v185);
                      double v155 = (void **)v154;
                      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLMapMatchingEngine::CLMapMatchingEngine(id<CLIntersiloUniverse>, const std::string &)",  "%s\n",  v154);
                      if (v155 != __p) {
                        free(v155);
                      }
                    }

                    if (!*(_BYTE *)(a1 + 434)) {
                      goto LABEL_117;
                    }
                    LOBYTE(v194) = 0;
                    sub_100D82E74((char *)&v194, __p);
                    sub_10005F550((uint64_t)v187, (__int128 *)__p);
                    float v54 = (std::__shared_weak_count *)__p[1];
                    if (__p[1])
                    {
                      unint64_t v55 = (unint64_t *)((char *)__p[1] + 8);
                      do
                        unint64_t v56 = __ldaxr(v55);
                      while (__stlxr(v56 - 1, v55));
                      if (!v56)
                      {
                        ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
                        std::__shared_weak_count::__release_weak(v54);
                      }
                    }

                    uint64_t v57 = *v187;
                    if (*v187)
                    {
                      uint64_t v58 = operator new(0x8E8uLL);
                      uint64_t v59 = v58;
                      uint64_t v60 = *(unint64_t **)(a1 + 600);
                      __p[0] = v57;
                      __p[1] = v60;
                      if (v60)
                      {
                        uint64_t v61 = v60 + 1;
                        do
                          unint64_t v62 = __ldxr(v61);
                        while (__stxr(v62 + 1, v61));
                      }

                      sub_100D82F78(v58, (uint64_t *)__p);
                      v196[0] = v59;
                      float v63 = (std::__shared_weak_count *)__p[1];
                      if (__p[1])
                      {
                        double v64 = (unint64_t *)((char *)__p[1] + 8);
                        do
                          unint64_t v65 = __ldaxr(v64);
                        while (__stlxr(v65 - 1, v64));
                        if (!v65)
                        {
                          ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
                          std::__shared_weak_count::__release_weak(v63);
                        }
                      }

                      uint64_t v66 = v196[0];
                      v196[0] = 0LL;
                      uint64_t v67 = *(void *)(a1 + 608);
                      *(void *)(a1 + 608) = v66;
                      if (v67)
                      {
                        (*(void (**)(uint64_t))(*(void *)v67 + 8LL))(v67);
                        char v68 = v196[0];
                        v196[0] = 0LL;
                        if (v68) {
                          sub_100D831F8((uint64_t)v196, (uint64_t)v68);
                        }
                        uint64_t v66 = *(_BYTE **)(a1 + 608);
                      }

                      if (v66)
                      {
                        v66[9] = 1;
                        v66[10] = sub_1004F8468();
                        if (qword_1019348B0 != -1) {
                          dispatch_once(&qword_1019348B0, &stru_101881F60);
                        }
                        double v69 = (os_log_s *)qword_1019348B8;
                        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
                        {
                          int v70 = *(unsigned __int8 *)(*(void *)(a1 + 608) + 10LL);
                          LODWORD(__p[0]) = 67109120;
                          HIDWORD(__p[0]) = v70;
                          _os_log_impl( (void *)&_mh_execute_header,  v69,  OS_LOG_TYPE_DEBUG,  "CLMMPED, PedestrianDirectionOfTravel,%d",  (uint8_t *)__p,  8u);
                        }

                        if (sub_1002921D0(115, 2))
                        {
                          bzero(__p, 0x65CuLL);
                          if (qword_1019348B0 != -1) {
                            dispatch_once(&qword_1019348B0, &stru_101881F60);
                          }
                          int v166 = *(unsigned __int8 *)(*(void *)(a1 + 608) + 10LL);
                          LODWORD(v196[0]) = 67109120;
                          HIDWORD(v196[0]) = v166;
                          _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED, PedestrianDirectionOfTravel,%d",  v196);
                          uint64_t v168 = (void **)v167;
                          sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLMapMatchingEngine::CLMapMatchingEngine(id<CLIntersiloUniverse>, const std::string &)",  "%s\n",  v167);
                          if (v168 != __p) {
                            free(v168);
                          }
                        }

                        unsigned __int8 v189 = 0;
                        sub_1002F0B04(__p);
                        int v71 = sub_1002A6F64((uint64_t)__p[0], "EnablePedestrianDirectionOfTravel", (BOOL *)&v189);
                        int v72 = v71;
                        uint64_t v73 = (std::__shared_weak_count *)__p[1];
                        if (!__p[1]) {
                          goto LABEL_101;
                        }
                        double v74 = (unint64_t *)((char *)__p[1] + 8);
                        do
                          unint64_t v75 = __ldaxr(v74);
                        while (__stlxr(v75 - 1, v74));
                        if (!v75)
                        {
                          ((void (*)(std::__shared_weak_count *))v73->__on_zero_shared)(v73);
                          std::__shared_weak_count::__release_weak(v73);
                          if (v72) {
                            goto LABEL_102;
                          }
                        }

                        else
                        {
LABEL_101:
                          if (v71)
                          {
LABEL_102:
                            *(_BYTE *)(*(void *)(a1 + 608) + 10LL) = v189;
                            if (qword_1019348B0 != -1) {
                              dispatch_once(&qword_1019348B0, &stru_101881F60);
                            }
                            int v76 = (os_log_s *)qword_1019348B8;
                            if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
                            {
                              int v77 = *(unsigned __int8 *)(*(void *)(a1 + 608) + 10LL);
                              LODWORD(__p[0]) = 67240192;
                              HIDWORD(__p[0]) = v77;
                              _os_log_impl( (void *)&_mh_execute_header,  v76,  OS_LOG_TYPE_DEBUG,  "CLMMPED,Overwrite,EnablePedestrianDirectionOfTravel,%{public}d",  (uint8_t *)__p,  8u);
                            }

                            if (sub_1002921D0(115, 2))
                            {
                              bzero(__p, 0x65CuLL);
                              if (qword_1019348B0 != -1) {
                                dispatch_once(&qword_1019348B0, &stru_101881F60);
                              }
                              int v173 = *(unsigned __int8 *)(*(void *)(a1 + 608) + 10LL);
                              LODWORD(v196[0]) = 67240192;
                              HIDWORD(v196[0]) = v173;
                              LODWORD(v185) = 8;
                              _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,Overwrite,EnablePedestrianDirectionOfTravel,%{public}d",  v196,  v185);
                              BOOL v175 = (void **)v174;
                              sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLMapMatchingEngine::CLMapMatchingEngine(id<CLIntersiloUniverse>, const std::string &)",  "%s\n",  v174);
                              if (v175 != __p) {
                                free(v175);
                              }
                            }
                          }
                        }

                        unsigned __int8 v189 = 0;
                        *(_BYTE *)(*(void *)(a1 + 608) + 11LL) = 1;
                        sub_1002F0B04(__p);
                        int v78 = sub_1002A6F64( (uint64_t)__p[0],  "EnableActivityBasedPedestrianDirectionOfTravel",  (BOOL *)&v189);
                        int v79 = v78;
                        __int16 v80 = (std::__shared_weak_count *)__p[1];
                        if (!__p[1]) {
                          goto LABEL_111;
                        }
                        uint64_t v81 = (unint64_t *)((char *)__p[1] + 8);
                        do
                          unint64_t v82 = __ldaxr(v81);
                        while (__stlxr(v82 - 1, v81));
                        if (!v82)
                        {
                          ((void (*)(std::__shared_weak_count *))v80->__on_zero_shared)(v80);
                          std::__shared_weak_count::__release_weak(v80);
                          if (!v79) {
                            goto LABEL_117;
                          }
                        }

                        else
                        {
LABEL_111:
                          if (!v78) {
                            goto LABEL_117;
                          }
                        }

                        *(_BYTE *)(*(void *)(a1 + 608) + 11LL) = v189;
                        if (qword_1019348B0 != -1) {
                          dispatch_once(&qword_1019348B0, &stru_101881F60);
                        }
                        uint64_t v83 = (os_log_s *)qword_1019348B8;
                        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
                        {
                          LODWORD(__p[0]) = 67240192;
                          HIDWORD(__p[0]) = v189;
                          _os_log_impl( (void *)&_mh_execute_header,  v83,  OS_LOG_TYPE_DEBUG,  "CLMMPED,Overwrite,EnableActivityBasedPedestrianDirectionOfTravel,%{public}d",  (uint8_t *)__p,  8u);
                        }

                        if (sub_1002921D0(115, 2))
                        {
                          bzero(__p, 0x65CuLL);
                          if (qword_1019348B0 != -1) {
                            dispatch_once(&qword_1019348B0, &stru_101881F60);
                          }
                          LODWORD(v196[0]) = 67240192;
                          HIDWORD(v196[0]) = v189;
                          LODWORD(v185) = 8;
                          _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,Overwrite,EnableActivityBasedPedestrianDirectionOfTravel,%{public}d",  v196,  v185);
                          int v177 = (void **)v176;
                          sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLMapMatchingEngine::CLMapMatchingEngine(id<CLIntersiloUniverse>, const std::string &)",  "%s\n",  v176);
                          if (v177 != __p) {
                            free(v177);
                          }
                        }

LABEL_172:
  *(_BYTE *)(a1 + 435) = 1;
  *(_BYTE *)(a1 + 433) = 1;
  sub_1002F0B04(__p);
  int v121 = sub_1002A6F64((uint64_t)__p[0], "IntegrateRouteHintsInMapMatcher", (BOOL *)&v189);
  int v122 = v121;
  double v123 = (std::__shared_weak_count *)__p[1];
  if (__p[1])
  {
    __int16 v124 = (unint64_t *)((char *)__p[1] + 8);
    do
      unint64_t v125 = __ldaxr(v124);
    while (__stlxr(v125 - 1, v124));
    if (!v125)
    {
      ((void (*)(std::__shared_weak_count *))v123->__on_zero_shared)(v123);
      std::__shared_weak_count::__release_weak(v123);
      if (v122) {
        goto LABEL_177;
      }
LABEL_192:
      BOOL v127 = 1;
      goto LABEL_193;
    }
  }

  if (!v121) {
    goto LABEL_192;
  }
LABEL_177:
  BOOL v126 = v189;
  BOOL v127 = v189 != 0;
  uint64_t v128 = *(void *)(a1 + 608);
  if (v128) {
    *(_BYTE *)(v128 + 9) = v189;
  }
  uint64_t v129 = *(void *)(a1 + 632);
  if (v129) {
    *(_BYTE *)(v129 + 9) = v126;
  }
  if (v13->__vftable) {
    BYTE2(v13->__vftable[2].__on_zero_shared_weak) = v126;
  }
LABEL_193:
  *(_BYTE *)(*(void *)v12 + 114LL) = 0;
  __int16 v130 = (os_log_s *)v2[279];
  if (os_log_type_enabled(v130, OS_LOG_TYPE_DEBUG))
  {
    LODWORD(__p[0]) = 67240192;
    HIDWORD(__p[0]) = v127;
    _os_log_impl( (void *)&_mh_execute_header,  v130,  OS_LOG_TYPE_DEBUG,  "CLMM,IntegrateRouteHintsInMapMatcher,%{public}d",  (uint8_t *)__p,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    unint64_t v159 = v2[279];
    LODWORD(v196[0]) = 67240192;
    HIDWORD(v196[0]) = v127;
    LODWORD(v185) = 8;
    _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v159,  2LL,  "CLMM,IntegrateRouteHintsInMapMatcher,%{public}d",  v196,  v185);
    uint64_t v161 = (void **)v160;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLMapMatchingEngine::CLMapMatchingEngine(id<CLIntersiloUniverse>, const std::string &)",  "%s\n",  v160);
    if (v161 != __p) {
      free(v161);
    }
  }

  *(_BYTE *)(a1 + 376) = sub_1004F84C0();
  *(_DWORD *)(a1 + 352) = 0;
  sub_1002F0B04(&v194);
  memset(&v188, 0, sizeof(v188));
  sub_100373554(v194, "ForceUserActivity", &v188, (uint64_t)__p);
  *(_OWORD *)uint64_t v196 = *(_OWORD *)__p;
  uint64_t v197 = v199;
  HIBYTE(v199) = 0;
  LOBYTE(__p[0]) = 0;
  double v131 = v195;
  if (v195)
  {
    __int16 v132 = (unint64_t *)&v195->__shared_owners_;
    do
      unint64_t v133 = __ldaxr(v132);
    while (__stlxr(v133 - 1, v132));
    if (!v133)
    {
      ((void (*)(std::__shared_weak_count *))v131->__on_zero_shared)(v131);
      std::__shared_weak_count::__release_weak(v131);
    }
  }

  char v134 = HIBYTE(v197);
  if ((v197 & 0x8000000000000000LL) == 0)
  {
    if (HIBYTE(v197) != 7) {
      goto LABEL_243;
    }
    if (LODWORD(v196[0]) != 1802264919 || *(_DWORD *)((char *)v196 + 3) != 1735289195)
    {
      if (LODWORD(v196[0]) != 1818458435 || *(_DWORD *)((char *)v196 + 3) != 1735289196)
      {
        double v137 = v196;
        goto LABEL_226;
      }

  uint64_t v61 = *(_DWORD *)(a2 + 116);
  v5 |= 0x80000uLL;
  dispatch_source_s *v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 116) = v61;
  uint64_t v4 = *v3;
  double v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x1000000000LL) == 0)
  {
LABEL_67:
    if ((v4 & 0x4000000000000000LL) == 0) {
      goto LABEL_68;
    }
    goto LABEL_174;
  }

  PB::TextFormatter::format(this, "pedometerArmConstrainedState", *(_DWORD *)(a1 + 216));
  double v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x200000000000LL) == 0)
  {
LABEL_71:
    if ((v7 & 0x400000000000LL) == 0) {
      goto LABEL_72;
    }
    goto LABEL_174;
  }

  double result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 116), 0x198u);
  int v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x1000000000LL) == 0)
  {
LABEL_67:
    if ((v5 & 0x4000000000000000LL) == 0) {
      goto LABEL_68;
    }
    goto LABEL_174;
  }

          uint64_t v4 = *((void *)this + 1);
          int v5 = *((void *)this + 2);
          uint64_t v6 = *((unsigned __int8 *)this + 24);
          if (v4 >= v5 || *((_BYTE *)this + 24)) {
            return v6 == 0;
          }
          break;
        case 4u:
          *(_BYTE *)(a1 + 116) |= 2u;
          char v68 = *((void *)this + 1);
          if (v68 > 0xFFFFFFFFFFFFFFF7LL || v68 + 8 > *((void *)this + 2)) {
            goto LABEL_169;
          }
          *(void *)(a1 + 88) = *(void *)(*(void *)this + v68);
          goto LABEL_111;
        case 5u:
          *(_BYTE *)(a1 + 116) |= 1u;
          double v69 = *((void *)this + 1);
          if (v69 > 0xFFFFFFFFFFFFFFF7LL || v69 + 8 > *((void *)this + 2)) {
            goto LABEL_169;
          }
          *(void *)(a1 + 80) = *(void *)(*(void *)this + v69);
          goto LABEL_111;
        case 6u:
          *(_BYTE *)(a1 + 116) |= 8u;
          int v70 = *((void *)this + 1);
          if (v70 > 0xFFFFFFFFFFFFFFF7LL || v70 + 8 > *((void *)this + 2)) {
            goto LABEL_169;
          }
          *(void *)(a1 + 104) = *(void *)(*(void *)this + v70);
          goto LABEL_111;
        case 7u:
          *(_BYTE *)(a1 + 116) |= 0x10u;
          int v71 = *((void *)this + 1);
          if (v71 >= *((void *)this + 2))
          {
            double v74 = 0;
            *((_BYTE *)this + sub_100BDC958(v1 + 24) = 1;
          }

          else
          {
            int v72 = v71 + 1;
            uint64_t v73 = *(unsigned __int8 *)(*(void *)this + v71);
            *((void *)this + 1) = v72;
            double v74 = v73 != 0;
          }

          *(_BYTE *)(a1 + 112) = v74;
          goto LABEL_172;
        case 8u:
          *(_BYTE *)(a1 + 116) |= 4u;
          unint64_t v75 = *((void *)this + 1);
          if (v75 > 0xFFFFFFFFFFFFFFF7LL || v75 + 8 > *((void *)this + 2)) {
            goto LABEL_169;
          }
          *(void *)(a1 + 96) = *(void *)(*(void *)this + v75);
LABEL_111:
          int v76 = *((void *)this + 1) + 8LL;
          goto LABEL_171;
        default:
          if ((PB::Reader::skip(this, v16 >> 3, v16 & 7, 0) & 1) == 0) {
            return 0LL;
          }
          goto LABEL_172;
      }
    }

    __int128 v20 = 0;
    unint64_t v21 = 0;
    uint64_t v16 = 0LL;
    if (v4 > v5) {
      int v5 = v4;
    }
    while (v5 != v4)
    {
      __int128 v22 = v4 + 1;
      unint64_t v23 = *(_BYTE *)(v13 + v4);
      *((void *)this + 1) = v22;
      v16 |= (unint64_t)(v23 & 0x7F) << v20;
      if ((v23 & 0x80) == 0) {
        goto LABEL_21;
      }
      v20 += 7;
      uint64_t v4 = v22;
      if (v21++ >= 9)
      {
LABEL_20:
        uint64_t v16 = 0LL;
        goto LABEL_21;
      }
    }

    uint64_t v6 = 1;
    *((_BYTE *)this + sub_100BDC958(v1 + 24) = 1;
  }

  return v6 == 0;
}

          __int16 v106 = (float32x2_t *)((char *)v106 + 20);
          double v123 = v112;
          if (v106 == a2)
          {
            unint64_t v181 = v112;
            uint64_t v182 = v124;
            unint64_t v180 = v125;
            goto LABEL_175;
          }
        }
      }
    }
  }

  unint64_t v112 = 0LL;
LABEL_175:
  a3 = v175;
  if (v175)
  {
LABEL_178:
    __int16 v144 = a3[1];
    if (a3[2] != v144)
    {
      int v145 = a3[4];
      __int16 v146 = (float32x2_t *)(*(void *)(v144 + 8 * (v145 / 0xCC)) + 20 * (v145 % 0xCC));
      int v147 = *(void *)(v144 + 8 * ((a3[5] + v145) / 0xCC)) + 20 * ((a3[5] + v145) % 0xCC);
      if (v146 != (float32x2_t *)v147)
      {
        __int16 v148 = v182;
        uint64_t v149 = (char *)v180;
        int v150 = (void *)(v144 + 8 * (v145 / 0xCC));
        do
        {
          LODWORD(a6) = v146[1].i32[1];
          uint64_t v151 = vmls_lane_f32(*v146, *(float32x2_t *)(a4 + 32), *(float32x2_t *)&a6, 0);
          __int16 v152 = v146[1].f32[0] - (float)(*(float *)(a4 + 40) * *(float *)&a6);
          if ((unint64_t)v112 >= v148)
          {
            int v153 = 0xAAAAAAAAAAAAAAABLL * ((v112 - v149) >> 2) + 1;
            if (v153 > 0x1555555555555555LL) {
              sub_100007008();
            }
            else {
              __int16 v154 = v153;
            }
            if (v154) {
              __int16 v154 = (unint64_t)sub_1011D5FC4(v154);
            }
            else {
              double v155 = 0LL;
            }
            int v156 = v154 + 4 * ((v112 - v149) >> 2);
            *(float32x2_t *)int v156 = v151;
            *(float *)(v156 + 8) = v152;
            uint64_t v157 = (_DWORD *)v156;
            while (v112 != v149)
            {
              int v158 = *(void *)(v112 - 12);
              v112 -= 12;
              unint64_t v159 = *((_DWORD *)v112 + 2);
              *(void *)(v157 - 3) = v158;
              v157 -= 3;
              v157[2] = v159;
            }

            __int16 v148 = v154 + 12 * v155;
            unint64_t v112 = (char *)(v156 + 12);
            unint64_t v180 = v157;
            uint64_t v182 = v148;
            if (v149) {
              operator delete(v149);
            }
            uint64_t v149 = (char *)v157;
          }

          else
          {
            *(float32x2_t *)unint64_t v112 = v151;
            *((float *)v112 + 2) = v152;
            v112 += 12;
          }

          unint64_t v181 = v112;
          __int16 v146 = (float32x2_t *)((char *)v146 + 20);
          if ((float32x2_t *)((char *)v146 - *v150) == (float32x2_t *)4080)
          {
            __int16 v160 = (float32x2_t *)v150[1];
            ++v150;
            __int16 v146 = v160;
          }
        }

        while (v146 != (float32x2_t *)v147);
      }
    }
  }

LABEL_243:
  __int16 v144 = (os_log_s *)v2[279];
  if (os_log_type_enabled(v144, OS_LOG_TYPE_DEBUG))
  {
    int v145 = *(_DWORD *)(a1 + 352);
    LODWORD(__p[0]) = 67240192;
    HIDWORD(__p[0]) = v145;
    _os_log_impl( (void *)&_mh_execute_header,  v144,  OS_LOG_TYPE_DEBUG,  "CLMM,ForceActivity,Activity,%{public}d",  (uint8_t *)__p,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    uint64_t v162 = v2[279];
    int v163 = *(_DWORD *)(a1 + 352);
    LODWORD(v194) = 67240192;
    HIDWORD(v194) = v163;
    LODWORD(v185) = 8;
    _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v162,  2LL,  "CLMM,ForceActivity,Activity,%{public}d",  &v194,  v185);
    uint64_t v165 = (void **)v164;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLMapMatchingEngine::CLMapMatchingEngine(id<CLIntersiloUniverse>, const std::string &)",  "%s\n",  v164);
    if (v165 != __p) {
      free(v165);
    }
  }

  if (v134 < 0) {
    operator delete(v196[0]);
  }
  return a1;
}

          *(_DWORD *)(a1 + 88) = v124;
          goto LABEL_267;
        case 0x21u:
          *(_DWORD *)(a1 + 164) |= 0x2000000u;
          BOOL v127 = *((void *)this + 1);
          if (v127 >= *((void *)this + 2))
          {
            __int16 v130 = 0;
            *((_BYTE *)this + sub_100BDC958(v1 + 24) = 1;
          }

          else
          {
            uint64_t v128 = v127 + 1;
            uint64_t v129 = *(unsigned __int8 *)(*(void *)this + v127);
            *((void *)this + 1) = v128;
            __int16 v130 = v129 != 0;
          }

          *(_BYTE *)(a1 + 155) = v130;
          goto LABEL_267;
        case 0x22u:
          *(_DWORD *)(a1 + 164) |= 0x20000u;
          double v131 = *((void *)this + 1);
          __int16 v132 = *((void *)this + 2);
          unint64_t v133 = *(void *)this;
          if (v131 <= 0xFFFFFFFFFFFFFFF5LL && v131 + 10 <= v132)
          {
            char v134 = 0;
            double v135 = 0;
            __int16 v136 = 0LL;
            do
            {
              double v137 = v131 + 1;
              *((void *)this + 1) = v131 + 1;
              __int16 v138 = *(_BYTE *)(v133 + v131);
              v136 |= (unint64_t)(v138 & 0x7F) << v134;
              if ((v138 & 0x80) == 0) {
                goto LABEL_246;
              }
              v134 += 7;
              double v131 = v137;
              __int128 v20 = v135++ > 8;
            }

            while (!v20);
LABEL_216:
            LODWORD(v136) = 0;
            goto LABEL_246;
          }

          __int16 v152 = 0;
          int v153 = 0;
          __int16 v136 = 0LL;
          if (v132 <= v131) {
            __int16 v132 = *((void *)this + 1);
          }
          while (2)
          {
            if (v132 == v131)
            {
              LODWORD(v136) = 0;
              *((_BYTE *)this + sub_100BDC958(v1 + 24) = 1;
            }

            else
            {
              __int16 v154 = v131 + 1;
              double v155 = *(_BYTE *)(v133 + v131);
              *((void *)this + 1) = v154;
              v136 |= (unint64_t)(v155 & 0x7F) << v152;
              if (v155 < 0)
              {
                v152 += 7;
                double v131 = v154;
                __int128 v20 = v153++ > 8;
                if (v20) {
                  goto LABEL_216;
                }
                continue;
              }

              if (*((_BYTE *)this + 24)) {
                LODWORD(v136) = 0;
              }
            }

            break;
          }

void sub_100D7FEAC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20, uint64_t a21, char a22, uint64_t a23, char a24, uint64_t a25, char a26, uint64_t a27, void *__p, uint64_t a29, uint64_t a30, uint64_t a31, void *a32, uint64_t a33, int a34, __int16 a35, char a36, char a37)
{
  uint64_t v41 = *(void *)(v37 + 632);
  *(void *)(v37 + 632) = 0LL;
  if (v41) {
    (*(void (**)(uint64_t))(*(void *)v41 + 8LL))(v41);
  }
  sub_10000AE14(a13);
  uint64_t v42 = *(void *)(v37 + 608);
  *(void *)(v37 + 608) = 0LL;
  if (v42) {
    (*(void (**)(uint64_t))(*(void *)v42 + 8LL))(v42);
  }
  sub_10000AE14(a14);
  sub_100D80070(v38);
  sub_100D800AC(v37);
  _Unwind_Resume(a1);
}

uint64_t sub_100D80070(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 48);
  if (v2)
  {
    *(void *)(a1 + 56) = v2;
    operator delete(v2);
  }

  return a1;
}

uint64_t sub_100D800AC(uint64_t a1)
{
  *(void *)a1 = off_101881E68;

  uint64_t v2 = *(void ***)(a1 + 360);
  *(void *)(a1 + 360) = 0LL;
  if (v2) {
    sub_100D82D4C(a1 + 360, v2);
  }
  uint64_t v3 = *(void **)(a1 + 296);
  *(void *)(a1 + 296) = 0LL;
  if (v3) {
    sub_100381E48(a1 + 296, v3);
  }
  sub_10000AE14(a1 + 272);
  sub_10000AE14(a1 + 256);
  sub_10000AE14(a1 + 240);
  sub_1002E4CB0(a1 + 8);
  return a1;
}

uint64_t sub_100D80130(uint64_t a1)
{
  *(void *)a1 = off_101881ED8;

  *(void *)(a1 + 384) = 0LL;
  uint64_t v2 = *(void *)(a1 + 632);
  *(void *)(a1 + 632) = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  sub_10000AE14(a1 + 616);
  uint64_t v3 = *(void *)(a1 + 608);
  *(void *)(a1 + 608) = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  sub_10000AE14(a1 + 592);
  sub_10050BDD8(a1 + 528, *(void **)(a1 + 536));
  uint64_t v4 = *(void **)(a1 + 480);
  if (v4)
  {
    *(void *)(a1 + 488) = v4;
    operator delete(v4);
  }

  return sub_100D800AC(a1);
}

void sub_100D801EC(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100D80130(a1);
  operator delete(v1);
}

uint64_t sub_100D80200(uint64_t a1)
{
  double v2 = sub_101171D4C();
  if (*(double *)a1 < 0.0 || v2 - *(double *)a1 > 1800.0)
  {
    *(double *)a1 = v2;
    id v3 = +[GEOCountryConfiguration sharedConfiguration](&OBJC_CLASS___GEOCountryConfiguration, "sharedConfiguration");
    *(_BYTE *)(a1 + 8) = 1;
    if (v3)
    {
      uint64_t v4 = v3;
      id v5 = [v3 countryCode];
      if (v5)
      {
        uint64_t v6 = v5;
        *(_BYTE *)(a1 + 8) = [v4 currentCountrySupportsFeature:1];
        sub_1010DDBC0(buf, (char *)[v6 UTF8String]);
        double v7 = (void **)(a1 + 16);
        *(_OWORD *)double v7 = *(_OWORD *)buf;
        *(void *)(a1 + 32) = *(void *)&buf[16];
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_101881F60);
        }
        uint64_t v8 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
        {
          double v9 = (void *)(a1 + 16);
          int v10 = *(unsigned __int8 *)(a1 + 8);
          *(_DWORD *)buf = 136380931;
          *(void *)&uint8_t buf[4] = v9;
          *(_WORD *)&_BYTE buf[12] = 1026;
          *(_DWORD *)&buf[14] = v10;
          _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "CLMM,Country,%{private}s,supportsTBTFeature,%{public}d",  buf,  0x12u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_101881F60);
          }
          int v12 = *(unsigned __int8 *)(a1 + 8);
          int v15 = 136380931;
          uint64_t v16 = v7;
          __int16 v17 = 1026;
          int v18 = v12;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,Country,%{private}s,supportsTBTFeature,%{public}d",  &v15,  18);
          __int128 v14 = (char *)v13;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLMapMatchingEngine::CountryChecker::isDirectionsSupported()",  "%s\n",  v13);
          if (v14 != buf) {
            free(v14);
          }
        }
      }
    }
  }

  return *(unsigned __int8 *)(a1 + 8);
}

void sub_100D80484(void *a1, double *a2, int a3)
{
  if (a2[1] < 0.0 || sub_10029286C(a2[7], a2[8]))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_101881F60);
    }
    uint64_t v6 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v7 = *((void *)a2 + 1);
      uint64_t v8 = *((void *)a2 + 7);
      uint64_t v9 = *((void *)a2 + 8);
      *(_DWORD *)buf = 134349569;
      uint64_t v22 = v7;
      __int16 v23 = 2049;
      uint64_t v24 = v8;
      __int16 v25 = 2049;
      uint64_t v26 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_ERROR,  "CLMM,%{public}.1lf,bufferMapData,invalid time or location,LL,%{private}.7lf,%{private}.7lf",  buf,  0x20u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_101881F60);
      }
      uint64_t v15 = *((void *)a2 + 1);
      uint64_t v16 = *((void *)a2 + 7);
      uint64_t v17 = *((void *)a2 + 8);
      *(_DWORD *)uint64_t v19 = 134349569;
      *(void *)&v19[4] = v15;
      *(_WORD *)&v19[12] = 2049;
      *(void *)&v19[14] = v16;
      *(_WORD *)&v19[22] = 2049;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,%{public}.1lf,bufferMapData,invalid time or location,LL,%{private}.7lf,%{private}.7lf",  v19,  32,  *(_OWORD *)v19,  *(void *)&v19[16],  v17);
LABEL_27:
      int v18 = (uint8_t *)v13;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLMapMatchingEngine::bufferMapData(const CLMapCrumb &, const CLMapMatcherOperatingPolicy::MatcherOperatingDynamicsEnum)",  "%s\n",  v13);
      if (v18 != buf) {
        free(v18);
      }
    }
  }

  else
  {
    switch(a3)
    {
      case 0:
      case 4:
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_101881F60);
        }
        int v10 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
        {
          uint64_t v11 = *((void *)a2 + 1);
          *(_DWORD *)buf = 134349312;
          uint64_t v22 = v11;
          __int16 v23 = 1026;
          LODWORD(vsub_100BDC958(v1 + 24) = a3;
          _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_ERROR,  "CLMM,%{public}.1lf,bufferMapData,Unknown dynamics,%{public}d",  buf,  0x12u);
        }

        if (sub_1002921D0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_101881F60);
          }
          uint64_t v12 = *((void *)a2 + 1);
          *(_DWORD *)uint64_t v19 = 134349312;
          *(void *)&v19[4] = v12;
          *(_WORD *)&v19[12] = 1026;
          *(_DWORD *)&v19[14] = a3;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,%{public}.1lf,bufferMapData,Unknown dynamics,%{public}d",  v19,  18,  *(_OWORD *)v19,  *(void *)&v19[16],  v20);
          goto LABEL_27;
        }

        break;
      case 1:
        uint64_t v14 = a1[30];
        if (v14) {
          goto LABEL_23;
        }
        break;
      case 2:
        uint64_t v14 = a1[74];
        if (v14) {
          goto LABEL_23;
        }
        break;
      case 3:
        uint64_t v14 = a1[77];
        if (v14) {
LABEL_23:
        }
          sub_100D3F30C(v14, a2[1], a2[7], a2[8]);
        break;
      default:
        return;
    }
  }

uint64_t sub_100D80820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v91 = a1 + 8;
  (*(void (**)(void))(v6 + 16))();
  __int16 v93 = 256;
  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_101881F60);
  }
  uint64_t v7 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
  {
    int v8 = *(unsigned __int8 *)(a1 + 400);
    int v9 = *(_DWORD *)(a1 + 352);
    *(_DWORD *)buf = 67240448;
    *(_DWORD *)__int16 v110 = v8;
    *(_WORD *)&v110[4] = 1026;
    *(_DWORD *)&v110[6] = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "CLMM,match,nav,%{public}d,forceActivity,%{public}d",  buf,  0xEu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_101881F60);
    }
    int v69 = *(unsigned __int8 *)(a1 + 400);
    int v70 = *(_DWORD *)(a1 + 352);
    *(_DWORD *)uint64_t v104 = 67240448;
    *(_DWORD *)&v104[4] = v69;
    *(_WORD *)&v104[8] = 1026;
    *(_DWORD *)&v104[10] = v70;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,match,nav,%{public}d,forceActivity,%{public}d",  v104,  14);
    int v72 = (uint8_t *)v71;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLMapMatchingEngine::match(CLDaemonLocation &, CLDaemonLocationPrivate &)",  "%s\n",  v71);
    if (v72 != buf) {
      free(v72);
    }
  }

  *(_OWORD *)(a3 + 104) = *(_OWORD *)(a2 + 60);
  int v10 = (int *)(a1 + 40);
  uint64_t v11 = (int *)(a1 + 212);
  sub_10050A044( a1 + 432,  a2,  a3,  (CLMotionActivity *)(a1 + 40),  (unsigned int *)(a1 + 212),  (char *)(a1 + 408),  *(_DWORD *)(a1 + 196));
  if ((*(_DWORD *)(a1 + 436) & 0xFFFFFFFE) == 2 && !*(_BYTE *)(a1 + 520))
  {
    if (*(_DWORD *)(a3 + 276))
    {
      double v12 = *(double *)(a3 + 280);
      if (v12 >= 0.0 && v12 < *(double *)(a1 + 584))
      {
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_101881F60);
        }
        __int128 v13 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v14 = *(void *)(a2 + 76);
          uint64_t v15 = *(void *)(a3 + 280);
          *(_DWORD *)buf = 134349312;
          *(void *)__int16 v110 = v14;
          *(_WORD *)&v110[8] = 2050;
          *(void *)uint64_t v111 = v15;
          _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}.1lf,near a running track,no matching,distanceToTrack,%{public}.2lf",  buf,  0x16u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_101881F60);
          }
          uint64_t v82 = *(void *)(a2 + 76);
          uint64_t v83 = *(void *)(a3 + 280);
          *(_DWORD *)uint64_t v104 = 134349312;
          *(void *)&v104[4] = v82;
          *(_WORD *)&v104[12] = 2050;
          *(void *)&v104[14] = v83;
          LODWORD(v86) = 22;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}.1lf,near a running track,no matching,distanceToTrack,%{public}.2lf",  v104,  v86);
          int v85 = (uint8_t *)v84;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLMapMatchingEngine::match(CLDaemonLocation &, CLDaemonLocationPrivate &)",  "%s\n",  v84);
          if (v85 != buf) {
            free(v85);
          }
        }

void sub_100D81AC0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, char a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,void *__p,uint64_t a52,int a53,__int16 a54,char a55,char a56)
{
  if (a56 < 0) {
    operator delete(__p);
  }
  sub_1011C52D0((uint64_t)&a24);
  _Unwind_Resume(a1);
}

void *sub_100D81B6C(void *result, uint64_t a2, uint64_t a3)
{
  if ((*((_DWORD *)result + 109) & 0xFFFFFFFE) != 2)
  {
    unsigned int v3 = *(_DWORD *)(a2 + 96);
    BOOL v4 = v3 > 9;
    int v5 = (1 << v3) & 0x20A;
    if (!v4 && v5 != 0)
    {
      uint64_t v7 = result;
      if (*((_BYTE *)result + 374))
      {
        DWORD2(v17) = 0;
        uint64_t v8 = *(void *)(a2 + 76);
        *(void *)&__int128 v15 = *(void *)(a3 + 344);
        *((void *)&v15 + 1) = v8;
        __int128 v16 = *(_OWORD *)(a2 + 4);
        double v9 = *(double *)(a2 + 20);
        if (v9 > 100.0) {
          double v9 = 100.0;
        }
        if (v9 < 50.0) {
          double v9 = 50.0;
        }
        *(double *)&__int128 v17 = v9;
        double result = (void *)result[32];
        if (result)
        {
          double result = (void *)(*(uint64_t (**)(void *, __int128 *))(*result + 128LL))(result, &v15);
          if ((_DWORD)result)
          {
            if (qword_1019348B0 != -1) {
              dispatch_once(&qword_1019348B0, &stru_101881F60);
            }
            int v10 = (os_log_s *)qword_1019348B8;
            if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
            {
              *(_DWORD *)buf = 134284801;
              uint64_t v31 = v16;
              __int16 v32 = 2049;
              uint64_t v33 = *((void *)&v16 + 1);
              __int16 v34 = 1026;
              int v35 = BYTE8(v17);
              __int16 v36 = 1026;
              int v37 = BYTE9(v17);
              __int16 v38 = 1026;
              int v39 = BYTE10(v17);
              __int16 v40 = 1026;
              int v41 = BYTE11(v17);
              _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "CLMM,TBA,setTunnelBridgeAssistance,lat,%{private}.8lf,lon,%{private}.8lf,isCloseToTunnel,%{public}d,isCl oseToBridge,%{public}d,isTunnel,%{public}d,isBridge,%{public}d",  buf,  0x2Eu);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1019348B0 != -1) {
                dispatch_once(&qword_1019348B0, &stru_101881F60);
              }
              int v18 = 134284801;
              uint64_t v19 = v16;
              __int16 v20 = 2049;
              uint64_t v21 = *((void *)&v16 + 1);
              __int16 v22 = 1026;
              int v23 = BYTE8(v17);
              __int16 v24 = 1026;
              int v25 = BYTE9(v17);
              __int16 v26 = 1026;
              int v27 = BYTE10(v17);
              __int16 v28 = 1026;
              int v29 = BYTE11(v17);
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,TBA,setTunnelBridgeAssistance,lat,%{private}.8lf,lon,%{private}.8lf,isCloseToTunnel,%{public}d,isCl oseToBridge,%{public}d,isTunnel,%{public}d,isBridge,%{public}d",  &v18,  46);
              __int128 v13 = (uint8_t *)v12;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMapMatchingEngine::provideTunnelBridgeAssistance(const CLDaemonLocation &, CLDaemonLocationPrivate &)",  "%s\n",  v12);
              if (v13 != buf) {
                free(v13);
              }
            }

            uint64_t v11 = (void *)v7[48];
            v14[0] = v15;
            v14[1] = v16;
            v14[2] = v17;
            return [v11 setTunnelBridgeAssistance:v14];
          }
        }
      }
    }
  }

  return result;
}

void sub_100D81E50(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(a1 + 371) || *(_BYTE *)(a1 + 375))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_101881F60);
    }
    BOOL v4 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      int v5 = *(unsigned __int8 *)(a1 + 371);
      int v6 = *(unsigned __int8 *)(a1 + 375);
      int v7 = *(_DWORD *)(a1 + 436);
      BOOL v8 = v7 == 2;
      BOOL v9 = v7 == 1;
      int v10 = sub_1004F6E10();
      BOOL v11 = sub_1004F6D00();
      int v12 = *(_DWORD *)(a2 + 96);
      BOOL v13 = *(_DWORD *)(a1 + 436) == 3;
      *(_DWORD *)buf = 67241984;
      *(_DWORD *)&uint8_t buf[4] = v5;
      *(_WORD *)&uint8_t buf[8] = 1026;
      *(_DWORD *)&buf[10] = v6;
      *(_WORD *)&buf[14] = 1026;
      LODWORD(v49) = v8;
      WORD2(v49) = 1026;
      *(_DWORD *)((char *)&v49 + 6) = v9;
      WORD5(v49) = 1026;
      HIDWORD(v49) = v10;
      *(_WORD *)double v50 = 1026;
      *(_DWORD *)&v50[2] = v11;
      *(_WORD *)&v50[6] = 1026;
      *(_DWORD *)&v50[8] = v12;
      *(_WORD *)&v50[12] = 1026;
      *(_DWORD *)&v50[14] = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "CLMM,wantDot,%{public}d,forceDot,%{public}d,isPedestrian,%{public}d,isVehicle,%{public}d,isEurekaGnss,%{public}d ,isFire,%{public}d,type,%{public}d,isCycling,%{public}d",  buf,  0x32u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_101881F60);
      }
      uint64_t v19 = qword_1019348B8;
      int v20 = *(unsigned __int8 *)(a1 + 371);
      int v21 = *(unsigned __int8 *)(a1 + 375);
      int v22 = *(_DWORD *)(a1 + 436);
      BOOL v23 = v22 == 2;
      BOOL v24 = v22 == 1;
      int v25 = sub_1004F6E10();
      BOOL v26 = sub_1004F6D00();
      int v27 = *(_DWORD *)(a2 + 96);
      BOOL v28 = *(_DWORD *)(a1 + 436) == 3;
      v33[0] = 67241984;
      v33[1] = v20;
      __int16 v34 = 1026;
      int v35 = v21;
      __int16 v36 = 1026;
      BOOL v37 = v23;
      __int16 v38 = 1026;
      BOOL v39 = v24;
      __int16 v40 = 1026;
      int v41 = v25;
      __int16 v42 = 1026;
      BOOL v43 = v26;
      __int16 v44 = 1026;
      int v45 = v27;
      __int16 v46 = 1026;
      BOOL v47 = v28;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v19,  2LL,  "CLMM,wantDot,%{public}d,forceDot,%{public}d,isPedestrian,%{public}d,isVehicle,%{public}d,isEurekaGnss,%{public}d ,isFire,%{public}d,type,%{public}d,isCycling,%{public}d",  v33,  50);
      unint64_t v30 = (uint8_t *)v29;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMapMatchingEngine::provideDirectionOfTravelAssistance(const CLDaemonLocation &)",  "%s\n",  v29);
      if (v30 != buf) {
        free(v30);
      }
    }

    int v14 = *(_DWORD *)(a1 + 436);
    switch(v14)
    {
      case 1:
        uint64_t v17 = *(void *)(a1 + 256);
        if (v17
          && (*(_DWORD *)(a2 + 96) & 0xFFFFFFF7) == 1
          && (*(unsigned int (**)(uint64_t, uint8_t *))(*(void *)v17 + 112LL))(v17, buf))
        {
LABEL_22:
          if (vabdd_f64(*(double *)(a2 + 76), *(double *)buf) <= 1.2)
          {
            int v18 = *(void **)(a1 + 384);
            v31[4] = v51;
            v31[5] = v52;
            uint64_t v32 = v53;
            v31[0] = *(_OWORD *)buf;
            v31[1] = v49;
            v31[2] = *(_OWORD *)v50;
            v31[3] = *(_OWORD *)&v50[16];
            [v18 setDirectionOfTravelAssistance:v31];
          }
        }

        break;
      case 3:
        uint64_t v15 = *(void *)(a1 + 632);
        if (v15 && (*(_DWORD *)(a2 + 96) & 0xFFFFFFF7) == 1)
        {
LABEL_21:
          goto LABEL_22;
        }

        break;
      case 2:
        uint64_t v15 = *(void *)(a1 + 608);
        if (!v15) {
          return;
        }
        unsigned int v16 = *(_DWORD *)(a2 + 96);
        if (v16 > 0xB || ((1 << v16) & 0xA02) == 0) {
          return;
        }
        goto LABEL_21;
      default:
        return;
    }
  }

void *sub_100D821F8(void *result, uint64_t a2)
{
  if ((*((_DWORD *)result + 109) & 0xFFFFFFFE) != 2 && (*(_DWORD *)(a2 + 96) | 8) == 9)
  {
    double v2 = result;
    if (*((_BYTE *)result + 372))
    {
      double result = (void *)result[32];
      if (result)
      {
        double result = (void *)(*(uint64_t (**)(void *, _OWORD *))(*result + 120LL))(result, v5);
        if ((_DWORD)result)
        {
          unsigned int v3 = (void *)v2[48];
          v4[0] = v5[0];
          v4[1] = v5[1];
          v4[2] = v5[2];
          return [v3 setMapMatchedPositionAssistance:v4];
        }
      }
    }
  }

  return result;
}

void *sub_100D8227C(void *result, uint64_t a2, char a3)
{
  if ((*((_DWORD *)result + 109) & 0xFFFFFFFE) != 2 && (*(_DWORD *)(a2 + 96) & 0xFFFFFFF7) == 1)
  {
    BOOL v4 = result;
    if (*((_BYTE *)result + 373))
    {
      double result = (void *)result[32];
      if (result)
      {
        double result = (void *)(*(uint64_t (**)(void *, _OWORD *, double))(*result + 136LL))( result,  v9,  *(double *)(a2 + 76));
        if ((_DWORD)result)
        {
          HIDWORD(v10) = *(_DWORD *)(a2 + 132);
          LOBYTE(v11) = a3;
          v7[5] = v11;
          v7[6] = v12;
          v7[0] = v9[0];
          v7[1] = v9[1];
          v7[2] = v9[2];
          v7[3] = v9[3];
          int v6 = (void *)v4[48];
          uint64_t v8 = v13;
          v7[4] = v10;
          return [v6 setTunnelEndPointPositionAssistance:v7];
        }
      }
    }
  }

  return result;
}

uint64_t sub_100D8233C(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(a1 + 436) & 0xFFFFFFFE) == 2) {
    return 0LL;
  }
  uint64_t result = sub_100D7D574(a1, a2);
  if ((_DWORD)result)
  {
    sub_100D8227C((void *)a1, a2, 0);
    return 1LL;
  }

  return result;
}

uint64_t sub_100D82390(uint64_t a1, _DWORD *a2, char a3)
{
  uint64_t v6 = a1 + 8;
  (*(void (**)(uint64_t))(*(void *)(a1 + 8) + 16LL))(a1 + 8);
  switch(*a2)
  {
    case 0:
      *(_BYTE *)(a1 + 371) = a3;
      break;
    case 1:
      *(_BYTE *)(a1 + 372) = a3;
      break;
    case 4:
      *(_BYTE *)(a1 + 374) = a3;
      break;
    case 5:
      *(_BYTE *)(a1 + 373) = a3;
      break;
    default:
      return (*(uint64_t (**)(uint64_t))(*(void *)v6 + 24LL))(v6);
  }

  return (*(uint64_t (**)(uint64_t))(*(void *)v6 + 24LL))(v6);
}

uint64_t sub_100D82424(uint64_t a1, double *a2)
{
  BOOL v4 = (void *)(a1 + 8);
  (*(void (**)(uint64_t))(*(void *)(a1 + 8) + 16LL))(a1 + 8);
  uint64_t v5 = v4[33];
  if (v5) {
    (*(void (**)(uint64_t, double *))(*(void *)v5 + 80LL))(v5, a2);
  }
  uint64_t v6 = *(void *)(a1 + 608);
  if (v6) {
    sub_100EBBED8(v6, (uint64_t)a2);
  }
  uint64_t v7 = *(void *)(a1 + 632);
  if (v7) {
    sub_100EBBED8(v7, (uint64_t)a2);
  }
  __n128 v8 = sub_100D824F0(a1 + 432, (uint64_t)a2);
  if (*(_BYTE *)(a1 + 288)) {
    sub_100ECF4C0(a2);
  }
  return (*(uint64_t (**)(void *, __n128))(*v4 + 24LL))(v4, v8);
}

void sub_100D824DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

__n128 sub_100D824F0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 40) = *(void *)a2;
  if (a1 + 40 != a2) {
    sub_1005F6B84( (char *)(a1 + 48),  *(char **)(a2 + 8),  *(void *)(a2 + 16),  0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3));
  }
  __n128 result = *(__n128 *)(a2 + 32);
  *(__n128 *)(a1 + 72) = result;
  return result;
}

uint64_t sub_100D8254C(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = (void *)(a1 + 8);
  (*(void (**)(uint64_t))(*(void *)(a1 + 8) + 16LL))(a1 + 8);
  uint64_t v4 = v3[31];
  if (v4) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)v4 + 96LL))(v4, a2);
  }
  return (*(uint64_t (**)(void *))(*v3 + 24LL))(v3);
}

void sub_100D825B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100D825D0(uint64_t a1, int a2)
{
  unsigned int v3 = (_BYTE *)(a1 + 8);
  (*(void (**)(uint64_t))(*(void *)(a1 + 8) + 16LL))(a1 + 8);
  v3[362] = a2;
  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_101881F60);
  }
  uint64_t v4 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 67240192;
    int v10 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "CLMM,FullSnapEnabled,%{public}d", buf, 8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_101881F60);
    }
    v8[0] = 67240192;
    v8[1] = a2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,FullSnapEnabled,%{public}d",  v8,  8);
    uint64_t v7 = (uint8_t *)v6;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLMapMatchingEngine::setFullSnapEnabled(BOOL)", "%s\n", v6);
    if (v7 != buf) {
      free(v7);
    }
  }

  return (*(uint64_t (**)(_BYTE *))(*(void *)v3 + 24LL))(v3);
}

void sub_100D827AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

uint64_t sub_100D827D4(void *a1)
{
  double v2 = a1 + 1;
  (*(void (**)(void *))(a1[1] + 16LL))(a1 + 1);
  sub_100D7C998((uint64_t)a1);
  uint64_t v4 = a1[32];
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 40LL))(v4);
  }
  uint64_t v5 = a1[34];
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 40LL))(v5);
  }
  uint64_t v6 = a1[76];
  if (v6) {
    v3.n128_f64[0] = sub_100EB34B4(v6);
  }
  uint64_t v7 = a1[79];
  if (v7) {
    v3.n128_f64[0] = sub_100EB34B4(v7);
  }
  return (*(uint64_t (**)(void *, __n128))(*v2 + 24LL))(v2, v3);
}

void sub_100D82874(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100D82888(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)(a1 + 8);
  (*(void (**)(uint64_t))(*(void *)(a1 + 8) + 16LL))(a1 + 8);
  uint64_t v5 = v4[31];
  if (v5) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)v5 + 64LL))(v5, a2);
  }
  uint64_t v6 = *(void *)(a1 + 272);
  if (v6) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)v6 + 64LL))(v6, a2);
  }
  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_101881F60);
  }
  uint64_t v7 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 67240192;
    int v13 = a2;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "CLMM,ForceNetworkUsage,%{public}d", buf, 8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_101881F60);
    }
    v11[0] = 67240192;
    v11[1] = a2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,ForceNetworkUsage,%{public}d",  v11,  8);
    int v10 = (uint8_t *)v9;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLMapMatchingEngine::setForceNetworkUsage(BOOL)", "%s\n", v9);
    if (v10 != buf) {
      free(v10);
    }
  }

  return (*(uint64_t (**)(void *))(*v4 + 24LL))(v4);
}

void sub_100D82A94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

uint64_t sub_100D82ABC(void *a1, uint64_t a2)
{
  uint64_t v4 = a1 + 1;
  (*(void (**)(void *))(a1[1] + 16LL))(a1 + 1);
  uint64_t v5 = v4[31];
  if (v5) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)v5 + 72LL))(v5, a2);
  }
  uint64_t v6 = a1[34];
  if (v6) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)v6 + 72LL))(v6, a2);
  }
  uint64_t v7 = a1[76];
  if (v7) {
    *(_BYTE *)(v7 + 8) = a2 ^ 1;
  }
  uint64_t v8 = a1[79];
  if (v8) {
    *(_BYTE *)(v8 + 8) = a2 ^ 1;
  }
  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_101881F60);
  }
  BOOL v9 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 67240192;
    int v15 = a2;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "CLMM,DisallowNetworkUsage,%{public}d", buf, 8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_101881F60);
    }
    v13[0] = 67240192;
    v13[1] = a2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,DisallowNetworkUsage,%{public}d",  v13,  8);
    __int128 v12 = (uint8_t *)v11;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLMapMatchingEngine::setDisallowNetworkUsage(BOOL)", "%s\n", v11);
    if (v12 != buf) {
      free(v12);
    }
  }

  return (*(uint64_t (**)(void *))(*v4 + 24LL))(v4);
}

void sub_100D82CE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

BOOL sub_100D82D10(uint64_t a1)
{
  return *(_DWORD *)(a1 + 436) == 1;
}

void sub_100D82D20(id a1)
{
  qword_1019348B8 = (uint64_t)os_log_create("com.apple.locationd.Position", "MapMatcher");
}

void sub_100D82D4C(uint64_t a1, void **a2)
{
  if (a2)
  {
    sub_10031C110((uint64_t)(a2 + 16), a2[17]);
    sub_10000AE14((uint64_t)(a2 + 1));
    operator delete(a2);
  }

void *sub_100D82D88@<X0>(void *a1@<X8>)
{
  double v2 = operator new(0xA70uLL);
  __n128 result = sub_100D82DD0(v2);
  *a1 = v2 + 3;
  a1[1] = v2;
  return result;
}

void sub_100D82DBC(_Unwind_Exception *a1)
{
}

void *sub_100D82DD0(void *a1)
{
  a1[2] = 0LL;
  *a1 = off_101881F90;
  a1[1] = 0LL;
  sub_100D3E78C((uint64_t)(a1 + 3));
  a1[3] = &off_10187A738;
  return a1;
}

void sub_100D82E18(_Unwind_Exception *a1)
{
}

void sub_100D82E2C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_101881F90;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100D82E40(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_101881F90;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_100D82E64(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t sub_100D82E74@<X0>(char *a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = (char *)operator new(0xA78uLL);
  uint64_t result = sub_100D82ECC((uint64_t)v4, a1);
  *a2 = v4 + 24;
  a2[1] = v4;
  return result;
}

void sub_100D82EB8(_Unwind_Exception *a1)
{
}

uint64_t sub_100D82ECC(uint64_t a1, char *a2)
{
  *(void *)(a1 + 8) = 0LL;
  *(void *)(a1 + 16) = 0LL;
  *(void *)a1 = off_101881FE0;
  char v3 = *a2;
  sub_100D3E78C(a1 + 24);
  *(void *)(a1 + sub_100BDC958(v1 + 24) = &off_10188B988;
  *(_BYTE *)(a1 + 2672) = v3;
  return a1;
}

void sub_100D82F1C(_Unwind_Exception *a1)
{
}

void sub_100D82F30(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_101881FE0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100D82F44(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_101881FE0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_100D82F68(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void *sub_100D82F78(void *a1, uint64_t *a2)
{
  char v3 = (std::__shared_weak_count *)a2[1];
  uint64_t v10 = *a2;
  __int128 v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      unint64_t v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }

  sub_100EB3058((uint64_t)a1, &v10);
  uint64_t v6 = v11;
  if (v11)
  {
    uint64_t v7 = (unint64_t *)&v11->__shared_owners_;
    do
      unint64_t v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }

  *a1 = off_10188A850;
  sub_100D2D9A4((uint64_t)(a1 + 276));
  a1[282] = 0LL;
  a1[281] = 0LL;
  a1[283] = 0LL;
  a1[284] = 0xBFF0000000000000LL;
  return a1;
}

void sub_100D83030(_Unwind_Exception *a1)
{
}

uint64_t sub_100D83054(uint64_t a1)
{
  *(void *)a1 = off_101882030;
  double v2 = *(void **)(a1 + 2176);
  if (v2)
  {
    *(void *)(a1 + 2184) = v2;
    operator delete(v2);
  }

  uint64_t v3 = *(void *)(a1 + 2088);
  *(void *)(a1 + 2088) = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  uint64_t v4 = *(void *)(a1 + 2080);
  *(void *)(a1 + 2080) = 0LL;
  if (v4) {
    sub_100D831B4(a1 + 2080, v4);
  }
  uint64_t v10 = (void **)(a1 + 1928);
  sub_100D73A50(&v10);
  uint64_t v10 = (void **)(a1 + 1904);
  sub_100D73A50(&v10);
  uint64_t v10 = (void **)(a1 + 1880);
  sub_100D739E0(&v10);
  unint64_t v5 = *(void **)(a1 + 1840);
  if (v5)
  {
    *(void *)(a1 + 1848) = v5;
    operator delete(v5);
  }

  sub_100890314((uint64_t *)(a1 + 1808));
  sub_100890314((uint64_t *)(a1 + 1784));
  uint64_t v6 = *(void **)(a1 + 1176);
  if (v6)
  {
    *(void *)(a1 + 1184) = v6;
    operator delete(v6);
  }

  sub_10000AE14(a1 + 1088);
  sub_1001B4C40((void *)(a1 + 1040));
  sub_10000AE14(a1 + 992);
  uint64_t v7 = *(void **)(a1 + 472);
  if (v7)
  {
    *(void *)(a1 + 480) = v7;
    operator delete(v7);
  }

  sub_10000AE14(a1 + 384);
  unint64_t v8 = *(void **)(a1 + 352);
  if (v8)
  {
    *(void *)(a1 + 360) = v8;
    operator delete(v8);
  }

  sub_10000AE14(a1 + 264);
  uint64_t v10 = (void **)(a1 + 240);
  sub_100D73874(&v10);
  sub_10000AE14(a1 + 208);
  return a1;
}

uint64_t sub_100D831AC(uint64_t a1)
{
  return a1 + 384;
}

void sub_100D831B4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v4 = (void **)(a2 + 232);
    sub_10004CC28(&v4);
    uint64_t v3 = (void *)sub_100D40684(a2);
    operator delete(v3);
  }

void sub_100D831F8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v3 = *(void **)(a2 + 2248);
    if (v3)
    {
      *(void *)(a2 + 2256) = v3;
      operator delete(v3);
    }

    uint64_t v4 = (void *)sub_100D83054(a2);
    operator delete(v4);
  }

BOOL sub_100D83234()
{
  return os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_FAULT);
}

  ;
}

BOOL sub_100D83254()
{
  return os_log_type_enabled(*(os_log_t *)(v0 + 2232), OS_LOG_TYPE_INFO);
}

BOOL sub_100D83264()
{
  return os_signpost_enabled(*(os_log_t *)(v0 + 2232));
}

uint64_t sub_100D83270()
{
  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_10199E5A8, (void *)&_mh_execute_header);
}

uint64_t sub_100D839A4@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_1002DC708((uint64_t)(a2 + 754), a1 + 3016);
}

void sub_100D839F0(_Unwind_Exception *a1)
{
}

_DWORD *sub_100D83A04(_DWORD *a1, uint64_t a2)
{
  uint64_t v4 = sub_1002E0454(a1);
  sub_1002DCA80((uint64_t)v4, a2);
  sub_1002DC4C4((uint64_t)(a1 + 202), a2 + 808);
  sub_1002DC708((uint64_t)(a1 + 754), a2 + 3016);
  return a1;
}

void sub_100D83A4C(_Unwind_Exception *a1)
{
}

_DWORD *sub_100D83A60(_DWORD *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1002E0454(a1);
  uint64_t v7 = v6 + 1618;
  *(_OWORD *)(v6 + 1618) = 0u;
  sub_1002DCA80((uint64_t)v6, a2);
  sub_1002DC4C4((uint64_t)(a1 + 202), a2 + 808);
  sub_1002DC708((uint64_t)(a1 + 754), a2 + 3016);
  sub_1000F2F30(v7, a3);
  return a1;
}

void sub_100D83AD0(_Unwind_Exception *a1)
{
}

void sub_100D83AEC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_OWORD *)(a2 + 6280) = *(_OWORD *)buf;
  *(void *)(a2 + 6296) = *(void *)&buf[16];
  memset(buf, 0, sizeof(buf));
  sub_10001CDA0(a2 + 6304, v18);
  *(_OWORD *)(a2 + 6344) = v19;
  *(void *)(a2 + 6360) = v20;
  sub_100019CEC((uint64_t)v18);
  *(void *)__int128 v12 = buf;
  sub_1002E067C((void ***)v12);
  if (*(_DWORD *)(a1 + 6348) == 2 && *(double *)(a2 + 6360) > 0.0)
  {
    *(_DWORD *)(a2 + 6348) = 0;
    *(void *)(a2 + 6360) = 0LL;
  }

  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_1018820E8);
  }
  uint64_t v4 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
  {
    unint64_t v5 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 6288) - *(void *)(a2 + 6280)) >> 3);
    uint64_t v6 = *(void *)(a2 + 6328);
    int v7 = *(_DWORD *)(a1 + 6348);
    *(_DWORD *)buf = 134349568;
    *(void *)&uint8_t buf[4] = v5;
    *(_WORD *)&_BYTE buf[12] = 2050;
    *(void *)&buf[14] = v6;
    *(_WORD *)&buf[22] = 1026;
    LODWORD(v18[0]) = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "@WsbReproc, remain, groups, %{public}lu, unknownAPs, %{public}lu, pass, %{public}d",  buf,  0x1Cu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_1018820E8);
    }
    unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 6288) - *(void *)(a2 + 6280)) >> 3);
    uint64_t v9 = *(void *)(a2 + 6328);
    int v10 = *(_DWORD *)(a1 + 6348);
    *(_DWORD *)__int128 v12 = 134349568;
    *(void *)&v12[4] = v8;
    __int16 v13 = 2050;
    uint64_t v14 = v9;
    __int16 v15 = 1026;
    int v16 = v10;
    __int128 v11 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "@WsbReproc, remain, groups, %{public}lu, unknownAPs, %{public}lu, pass, %{public}d",  v12,  28);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PostPositionCalculationStateUpdate::HandleEvent::operator()(const Events::ReprocessWif iScanBuffer &) const",  "%s\n",  v11);
  }

void sub_100D83DB4(_Unwind_Exception *a1)
{
}

void sub_100D83DD0(uint64_t a1@<X0>, uint64_t *a2@<X1>, int i@<W2>, void *a4@<X8>)
{
  int v7 = a4;
  *a4 = 0LL;
  a4[1] = 0LL;
  a4[2] = 0LL;
  sub_1002E1B88( a4,  *(uint64_t **)(a1 + 6280),  *(uint64_t **)(a1 + 6288),  0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 6288) - *(void *)(a1 + 6280)) >> 3));
  uint64_t v8 = (uint64_t)(v7 + 3);
  sub_1002DFAAC((uint64_t)(v7 + 3), a1 + 6304);
  v7[10] = *(void *)(a1 + 6360);
  *((_OWORD *)v7 + 4) = *(_OWORD *)(a1 + 6344);
  if (i)
  {
    sub_10001CE40(v7 + 3);
    uint64_t v9 = *v7;
    uint64_t v10 = v7[1];
    while (v10 != v9)
    {
      v10 -= 24LL;
      *(void *)buf = v10;
      sub_100023498((void ***)buf);
    }

    v7[1] = v9;
  }

  uint64_t v77 = 0LL;
  int v78 = 0LL;
  unint64_t v79 = 0LL;
  uint64_t v11 = *a2;
  if (a2[1] != *a2)
  {
    unint64_t v12 = 0LL;
    int v66 = 0;
    int v67 = 0;
    unsigned int v13 = 0;
    int v69 = v7;
    int v68 = i;
    do
    {
      uint64_t v14 = *(void *)(a1 + 1632);
      uint64_t v15 = *(void *)(a1 + 1640) - v14;
      if (!v15) {
        goto LABEL_11;
      }
      if (0xD37A6F4DE9BD37A7LL * (v15 >> 3) <= v12) {
        sub_100092C20();
      }
      if (*(double *)(v14 + 184 * v12 + 20) < 0.0)
      {
LABEL_11:
        int v16 = (uint64_t *)(v11 + 24 * v12);
        uint64_t v17 = *v16;
        if (i && *(_DWORD *)(a1 + 6348) == 2 && *(double *)(v17 + 56) <= *(double *)(a1 + 6360))
        {
          if (qword_101934860 != -1) {
            dispatch_once(&qword_101934860, &stru_1018820E8);
          }
          unint64_t v30 = (os_log_s *)qword_101934868;
          if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v31 = *(void *)(*v16 + 56);
            uint64_t v32 = (*(void *)(v11 + 24 * v12 + 8) - *v16) >> 3;
            *(_DWORD *)buf = 134349312;
            *(void *)&uint8_t buf[4] = v31;
            *(_WORD *)&_BYTE buf[12] = 2050;
            *(void *)&buf[14] = 0x2E8BA2E8BA2E8BA3LL * v32;
            _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEFAULT,  "@WsbDiscard, unknown, %{public}.1f, aps, %{public}ld",  buf,  0x16u);
          }

          int v7 = v69;
          uint64_t i = v68;
          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934860 != -1) {
              dispatch_once(&qword_101934860, &stru_1018820E8);
            }
            uint64_t v42 = *(void *)(*v16 + 56);
            uint64_t v43 = 0x2E8BA2E8BA2E8BA3LL * ((*(void *)(v11 + 24 * v12 + 8) - *v16) >> 3);
            int v80 = 134349312;
            *(void *)uint64_t v81 = v42;
            *(_WORD *)&v81[8] = 2050;
            *(void *)&v81[10] = v43;
            LODWORD(v65) = 22;
            __int16 v44 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@WsbDiscard, unknown, %{public}.1f, aps, %{public}ld",  &v80,  v65);
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "static Types::Wsb CL::Wifi1::Policies::PostPositionCalculationStateUpdate::HandleEvent::updateScanBuffer(c onst Input &, const CLWifiService_Type::AccessPointGroups &, BOOL)",  "%s\n",  v44);
            if (v44 != buf) {
              free(v44);
            }
          }

          ++v66;
        }

        else
        {
          uint64_t v18 = v11 + 24 * v12;
          uint64_t v20 = *(void *)(v18 + 8);
          __int128 v19 = (uint64_t *)(v18 + 8);
          if (v7[6] + 0x2E8BA2E8BA2E8BA3LL * ((v20 - v17) >> 3) <= (unint64_t)dword_10199E5C0)
          {
            uint64_t v25 = *v7;
            uint64_t v24 = v7[1];
            uint64_t v26 = v77;
            int v27 = v78;
            if (0xAAAAAAAAAAAAAAABLL * ((v24 - v25) >> 3) - 0x5555555555555555LL * (((uint64_t)v27 - v26) >> 3) >= *((int *)sub_100F4CDA4() + 2))
            {
              if (qword_101934860 != -1) {
                dispatch_once(&qword_101934860, &stru_1018820E8);
              }
              uint64_t v33 = (os_log_s *)qword_101934868;
              if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
              {
                int v34 = *((_DWORD *)sub_100F4CDA4() + 2);
                uint64_t v35 = *(void *)(*v16 + 56);
                uint64_t v36 = 0x2E8BA2E8BA2E8BA3LL * ((*v19 - *v16) >> 3);
                *(_DWORD *)buf = 67240704;
                *(_DWORD *)&uint8_t buf[4] = v34;
                *(_WORD *)&uint8_t buf[8] = 2050;
                *(void *)&buf[10] = v35;
                *(_WORD *)&buf[18] = 2050;
                *(void *)&buf[20] = v36;
                _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEFAULT,  "@WsbDiscard, max %{public}d WSB gropus reached, %{public}.1f, aps, %{public}ld",  buf,  0x1Cu);
              }

              if (sub_1002921D0(115, 2))
              {
                bzero(buf, 0x65CuLL);
                int v7 = v69;
                if (qword_101934860 != -1) {
                  dispatch_once(&qword_101934860, &stru_1018820E8);
                }
                uint64_t v45 = qword_101934868;
                int v46 = *((_DWORD *)sub_100F4CDA4() + 2);
                uint64_t v47 = *(void *)(*v16 + 56);
                uint64_t v48 = 0x2E8BA2E8BA2E8BA3LL * ((*v19 - *v16) >> 3);
                int v80 = 67240704;
                *(_DWORD *)uint64_t v81 = v46;
                *(_WORD *)&v81[4] = 2050;
                *(void *)&v81[6] = v47;
                *(_WORD *)&v81[14] = 2050;
                *(void *)&v81[16] = v48;
                LODWORD(v65) = 28;
                __int128 v49 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v45,  0LL,  "@WsbDiscard, max %{public}d WSB gropus reached, %{public}.1f, aps, %{public}ld",  &v80,  v65);
                sub_10029211C( "Generic",  1LL,  0,  2LL,  "static Types::Wsb CL::Wifi1::Policies::PostPositionCalculationStateUpdate::HandleEvent::updateScanBuff er(const Input &, const CLWifiService_Type::AccessPointGroups &, BOOL)",  "%s\n",  v49);
                uint64_t i = v68;
                if (v49 != buf) {
                  free(v49);
                }
              }

              else
              {
                int v7 = v69;
                uint64_t i = v68;
              }
            }

            else
            {
              BOOL v28 = v78;
              if ((unint64_t)v78 >= v79)
              {
                uint64_t v29 = sub_100A69634(&v77, v16);
                int v7 = v69;
              }

              else
              {
                *int v78 = 0LL;
                v28[1] = 0LL;
                v28[2] = 0LL;
                int v7 = v69;
                sub_1002DE3C8(v28, *v16, *v19, 0x2E8BA2E8BA2E8BA3LL * ((*v19 - *v16) >> 3));
                uint64_t v29 = (uint64_t)(v28 + 3);
              }

              int v78 = (void *)v29;
              BOOL v37 = (void *)*v16;
              uint64_t v38 = *v19;
              for (uint64_t i = v68; v37 != (void *)v38; v37 += 11)
              {
                *(void *)buf = *v37;
                sub_1002DFB20(v8, buf, buf);
              }
            }
          }

          else
          {
            if (qword_101934860 != -1) {
              dispatch_once(&qword_101934860, &stru_1018820E8);
            }
            int v21 = (os_log_s *)qword_101934868;
            if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v22 = *(void *)(*v16 + 56);
              uint64_t v23 = 0x2E8BA2E8BA2E8BA3LL * ((*v19 - *v16) >> 3);
              *(_DWORD *)buf = 134349312;
              *(void *)&uint8_t buf[4] = v22;
              *(_WORD *)&_BYTE buf[12] = 2050;
              *(void *)&buf[14] = v23;
              _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "@WsbDiscard, alsmax, %{public}.1f, aps, %{public}ld",  buf,  0x16u);
            }

            int v7 = v69;
            uint64_t i = v68;
            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_101934860 != -1) {
                dispatch_once(&qword_101934860, &stru_1018820E8);
              }
              uint64_t v39 = *(void *)(*v16 + 56);
              uint64_t v40 = 0x2E8BA2E8BA2E8BA3LL * ((*v19 - *v16) >> 3);
              int v80 = 134349312;
              *(void *)uint64_t v81 = v39;
              *(_WORD *)&v81[8] = 2050;
              *(void *)&v81[10] = v40;
              LODWORD(v65) = 22;
              int v41 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@WsbDiscard, alsmax, %{public}.1f, aps, %{public}ld",  &v80,  v65);
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "static Types::Wsb CL::Wifi1::Policies::PostPositionCalculationStateUpdate::HandleEvent::updateScanBuffer (const Input &, const CLWifiService_Type::AccessPointGroups &, BOOL)",  "%s\n",  v41);
              if (v41 != buf) {
                free(v41);
              }
            }

            ++v67;
          }
        }
      }

      uint64_t v11 = *a2;
      unint64_t v12 = ++v13;
    }

    while (0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 3) > v13);
    int v50 = v66;
    if (v66 > 0)
    {
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_1018820E8);
      }
      __int128 v51 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 67240192;
        *(_DWORD *)&uint8_t buf[4] = v66;
        _os_log_impl( (void *)&_mh_execute_header,  v51,  OS_LOG_TYPE_DEBUG,  "WsbMetric, groupresult, unknownaps, %{public}d",  buf,  8u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_1018820E8);
        }
        int v80 = 67240192;
        *(_DWORD *)uint64_t v81 = v66;
        LODWORD(v65) = 8;
        uint64_t v63 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "WsbMetric, groupresult, unknownaps, %{public}d",  &v80,  v65);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "static Types::Wsb CL::Wifi1::Policies::PostPositionCalculationStateUpdate::HandleEvent::updateScanBuffer(const Input &, const CLWifiService_Type::AccessPointGroups &, BOOL)",  "%s\n",  v63);
        if (v63 != buf) {
          free(v63);
        }
        int v50 = v66;
      }

      v75[0] = _NSConcreteStackBlock;
      v75[1] = 3221225472LL;
      v75[2] = sub_100D87F78;
      v75[3] = &unk_1018333B8;
      int v76 = v50;
      AnalyticsSendEventLazy(@"com.apple.clx.wsb.groupresult", v75);
    }

    if (v67 >= 1)
    {
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_1018820E8);
      }
      __int128 v52 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 67240192;
        *(_DWORD *)&uint8_t buf[4] = v67;
        _os_log_impl( (void *)&_mh_execute_header,  v52,  OS_LOG_TYPE_DEBUG,  "WsbMetric, groupresult, alsmax, %{public}d",  buf,  8u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_1018820E8);
        }
        int v80 = 67240192;
        *(_DWORD *)uint64_t v81 = v67;
        LODWORD(v65) = 8;
        double v64 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "WsbMetric, groupresult, alsmax, %{public}d",  &v80,  v65);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "static Types::Wsb CL::Wifi1::Policies::PostPositionCalculationStateUpdate::HandleEvent::updateScanBuffer(const Input &, const CLWifiService_Type::AccessPointGroups &, BOOL)",  "%s\n",  v64);
        if (v64 != buf) {
          free(v64);
        }
        int v50 = v66;
      }

      v73[0] = _NSConcreteStackBlock;
      v73[1] = 3221225472LL;
      v73[2] = sub_100D8800C;
      v73[3] = &unk_1018333B8;
      int v74 = v67;
      AnalyticsSendEventLazy(@"com.apple.clx.wsb.groupresult", v73);
      goto LABEL_68;
    }

    if (v50 >= 1)
    {
LABEL_68:
      v70[0] = _NSConcreteStackBlock;
      v70[1] = 3221225472LL;
      v70[2] = sub_100D880A0;
      v70[3] = &unk_101820718;
      int v71 = v50;
      int v72 = v67;
      AnalyticsSendEventLazy(@"com.apple.clx.wsb.groupresult", v70);
    }
  }

  sub_100D88138( v7,  0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v7[1] - *v7) >> 3) - 0x5555555555555555LL * (((uint64_t)v78 - v77) >> 3));
  uint64_t v53 = v77;
  uint64_t v54 = v78;
  while ((void *)v53 != v54)
  {
    sub_100D89D2C(v7, v53);
    v53 += 24LL;
  }

  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_1018820E8);
  }
  uint64_t v55 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
  {
    unint64_t v56 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v7[1] - *v7) >> 3);
    uint64_t v57 = v7[6];
    uint64_t v58 = *(void *)(a1 + 6360);
    *(_DWORD *)buf = 134349568;
    *(void *)&uint8_t buf[4] = v56;
    *(_WORD *)&_BYTE buf[12] = 2050;
    *(void *)&buf[14] = v57;
    *(_WORD *)&buf[22] = 2050;
    *(void *)&uint8_t buf[24] = v58;
    _os_log_impl( (void *)&_mh_execute_header,  v55,  OS_LOG_TYPE_DEFAULT,  "@WsbReproc, update, groups, %{public}lu, unknownAPs, %{public}lu, deleteTo, %{public}0.1f",  buf,  0x20u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_1018820E8);
    }
    unint64_t v59 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v7[1] - *v7) >> 3);
    uint64_t v60 = v7[6];
    uint64_t v61 = *(void *)(a1 + 6360);
    int v80 = 134349568;
    *(void *)uint64_t v81 = v59;
    *(_WORD *)&v81[8] = 2050;
    *(void *)&v81[10] = v60;
    *(_WORD *)&v81[18] = 2050;
    *(void *)&v81[20] = v61;
    LODWORD(v65) = 32;
    uint64_t v62 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@WsbReproc, update, groups, %{public}lu, unknownAPs, %{public}lu, deleteTo, %{public}0.1f",  &v80,  v65);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static Types::Wsb CL::Wifi1::Policies::PostPositionCalculationStateUpdate::HandleEvent::updateScanBuffer(const Inp ut &, const CLWifiService_Type::AccessPointGroups &, BOOL)",  "%s\n",  v62);
    if (v62 != buf) {
      free(v62);
    }
  }

  *(void *)buf = &v77;
  sub_1002E067C((void ***)buf);
}

void sub_100D84BF4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, char a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, void **a43)
{
  a43 = (void **)&a36;
  sub_1002E067C(&a43);
  sub_1002E0AE8(v43);
  _Unwind_Resume(a1);
}

void sub_100D84C70(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (_BYTE *)(a1 + 6376);
  sub_100D83A04((_DWORD *)a2, a1);
  if (*v4 && (*(int *)(a1 + 6400) > 0 || *(int *)(a1 + 6404) > 0 || *(int *)(a1 + 6408) > 0))
  {
    sub_100D84E50( (__int128 *)(a1 + 6168),  a1 + 5968,  *(_DWORD *)(a1 + 6156),  a1 + 1408,  v4[46],  (uint64_t)&v27,  *(_DWORD **)(a1 + 6384));
    uint64_t v24 = a2 + 6168;
    uint64_t v25 = a2 + 5968;
    uint64_t v26 = a2 + 6156;
    sub_100D89A50((uint64_t)&v24, &v27);
    if (v38 < 0) {
      operator delete(__p);
    }
    if (v36 < 0) {
      operator delete(v35);
    }
    if (sub_100869780(a1 + 1408))
    {
      __int128 v5 = *(_OWORD *)(a1 + 1552);
      *(_OWORD *)(a2 + 5072) = *(_OWORD *)(a1 + 1536);
      *(_OWORD *)(a2 + 5088) = v5;
      *(_OWORD *)(a2 + 5104) = *(_OWORD *)(a1 + 1568);
      __int128 v6 = *(_OWORD *)(a1 + 1488);
      *(_OWORD *)(a2 + 5008) = *(_OWORD *)(a1 + 1472);
      *(_OWORD *)(a2 + 50sub_100BDC958(v1 + 24) = v6;
      __int128 v7 = *(_OWORD *)(a1 + 1520);
      *(_OWORD *)(a2 + 5040) = *(_OWORD *)(a1 + 1504);
      *(_OWORD *)(a2 + 5056) = v7;
      __int128 v8 = *(_OWORD *)(a1 + 1424);
      *(_OWORD *)(a2 + 4944) = *(_OWORD *)(a1 + 1408);
      *(_OWORD *)(a2 + 4960) = v8;
      __int128 v9 = *(_OWORD *)(a1 + 1456);
      *(_OWORD *)(a2 + 4976) = *(_OWORD *)(a1 + 1440);
      *(void *)(a2 + 5120) = *(void *)(a1 + 1584);
      *(_OWORD *)(a2 + 4992) = v9;
    }

    if (*(_BYTE *)(a1 + 1400))
    {
      uint64_t v10 = (uint64_t *)(a1 + 1304);
      *(void *)&__int128 v27 = sub_1005B46E8(a2 + 3208);
      uint64_t v24 = *v10;
      BOOL v11 = sub_1007EC0B0(&v27, &v24);
      if (v11)
      {
        char v19 = sub_100C3A408((uint64_t)v10);
        sub_100B83D6C(a2 + 3208, v19);
      }

      else
      {
        sub_10126E478( v11,  v12,  v13,  v14,  v15,  v16,  v17,  v18,  v20,  v21,  v22,  v23,  v24,  v25,  v26,  v27,  *((uint64_t *)&v27 + 1),  v28,  v29,  v30,  v31,  v32,  v33,  v34);
        abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/Wifi1/Logic/Policies/CLWifi1PostPosition CalculationStateUpdate.mm",  100,  "operator()");
        __break(1u);
      }
    }
  }

void sub_100D84E30(_Unwind_Exception *a1)
{
}

void sub_100D84E50( __int128 *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>, _DWORD *a7@<D0>)
{
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_1018820E8);
  }
  uint64_t v14 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
  {
    int v15 = *(_DWORD *)a1;
    *(_DWORD *)buf = 67240192;
    *(_DWORD *)uint64_t v81 = v15;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "@EmerCheck, top, %{public}d", buf, 8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_1018820E8);
    }
    int v49 = *(_DWORD *)a1;
    LODWORD(v70) = 67240192;
    HIDWORD(v70) = v49;
    LODWORD(v59) = 8;
    int v50 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "@EmerCheck, top, %{public}d",  &v70,  v59);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static std::tuple<Types::Emergency, CLWifiLocationUpdateRequest, Types::AlsQueryType> CL::Wifi1::Policies::PostPos itionCalculationStateUpdate::HandleEvent::updateEmergencyStateCurrentLocationUpdateRequestAndApQueryType(const Typ es::Emergency &, const CLWifiLocationUpdateRequest &, Types::AlsQueryType, const Types::ComputedLocation &, cl::ch rono::CFAbsoluteTimeClock::time_point, BOOL)",  "%s\n",  v50);
  }

  int v16 = *(_DWORD *)a1;
  BOOL v17 = sub_100495E64((_DWORD *)a2);
  if (v16 <= 1 || !v17)
  {
    __int128 v22 = a1[5];
    *(_OWORD *)(a6 + 64) = a1[4];
    *(_OWORD *)(a6 + 80) = v22;
    *(_OWORD *)(a6 + 96) = a1[6];
    __int128 v23 = a1[1];
    *(_OWORD *)a6 = *a1;
    *(_OWORD *)(a6 + 16) = v23;
    __int128 v24 = a1[3];
    *(_OWORD *)(a6 + 32) = a1[2];
    *(_OWORD *)(a6 + 48) = v24;
    sub_100446100(a6 + 112, (uint64_t *)a2);
    *(_DWORD *)(a6 + 256) = 0;
    return;
  }

  __int128 v19 = a1[5];
  __int128 v64 = a1[4];
  __int128 v65 = v19;
  __int128 v66 = a1[6];
  __int128 v20 = a1[1];
  __int128 v60 = *a1;
  __int128 v61 = v20;
  __int128 v21 = a1[3];
  __int128 v62 = a1[2];
  __int128 v63 = v21;
  uint64_t v70 = *(void *)a2;
  char v71 = *(_BYTE *)(a2 + 8);
  if (*(char *)(a2 + 39) < 0)
  {
    sub_1010DD48C(&v72, *(void **)(a2 + 16), *(void *)(a2 + 24));
  }

  else
  {
    __int128 v72 = *(_OWORD *)(a2 + 16);
    uint64_t v73 = *(void *)(a2 + 32);
  }

  __int128 v75 = *(_OWORD *)(a2 + 56);
  __int128 v76 = *(_OWORD *)(a2 + 72);
  v77[0] = *(_OWORD *)(a2 + 88);
  *(_OWORD *)((char *)v77 + 12) = *(_OWORD *)(a2 + 100);
  __int128 v74 = *(_OWORD *)(a2 + 40);
  if (*(char *)(a2 + 143) < 0)
  {
    sub_1010DD48C(&v78, *(void **)(a2 + 120), *(void *)(a2 + 128));
  }

  else
  {
    __int128 v78 = *(_OWORD *)(a2 + 120);
    uint64_t v79 = *(void *)(a2 + 136);
  }

  HIDWORD(v59) = a3;
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_1018820E8);
  }
  uint64_t v25 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
  {
    int v26 = *(_DWORD *)a1;
    *(_DWORD *)buf = 67240192;
    *(_DWORD *)uint64_t v81 = v26;
    _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEBUG, "@EmerCheck, current, %{public}d", buf, 8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_1018820E8);
    }
    int v51 = *(_DWORD *)a1;
    LODWORD(v69[0]) = 67240192;
    HIDWORD(v69[0]) = v51;
    LODWORD(v59) = 8;
    __int128 v52 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "@EmerCheck, current, %{public}d",  v69,  v59);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static std::tuple<Types::Emergency, CLWifiLocationUpdateRequest, Types::AlsQueryType> CL::Wifi1::Policies::PostPos itionCalculationStateUpdate::HandleEvent::updateEmergencyStateCurrentLocationUpdateRequestAndApQueryType(const Typ es::Emergency &, const CLWifiLocationUpdateRequest &, Types::AlsQueryType, const Types::ComputedLocation &, cl::ch rono::CFAbsoluteTimeClock::time_point, BOOL)",  "%s\n",  v52);
  }

  v69[0] = &v60;
  v69[1] = (_DWORD *)&v59 + 1;
  v69[2] = a7;
  switch(*(_DWORD *)a1)
  {
    case 2:
      if (!a5)
      {
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_1018820E8);
        }
        uint64_t v35 = (os_log_s *)qword_101934868;
        if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 67240192;
          *(_DWORD *)uint64_t v81 = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_DEBUG,  "@EmerCheck, support 5GHz, %{public}d",  buf,  8u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934860 != -1) {
            dispatch_once(&qword_101934860, &stru_1018820E8);
          }
          int v67 = 67240192;
          LODWORD(v68[0]) = 0;
          LODWORD(v59) = 8;
          uint64_t v33 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "@EmerCheck, support 5GHz, %{public}d",  &v67,  v59);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "static std::tuple<Types::Emergency, CLWifiLocationUpdateRequest, Types::AlsQueryType> CL::Wifi1::Policies::P ostPositionCalculationStateUpdate::HandleEvent::updateEmergencyStateCurrentLocationUpdateRequestAndApQueryTy pe(const Types::Emergency &, const CLWifiLocationUpdateRequest &, Types::AlsQueryType, const Types::Computed Location &, cl::chrono::CFAbsoluteTimeClock::time_point, BOOL)",  "%s\n",  v33);
          goto LABEL_156;
        }

        goto LABEL_79;
      }

      if (*(_DWORD *)(a4 + 84) >= 0x45u && !*(_BYTE *)sub_100F4BF2C())
      {
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_1018820E8);
        }
        int v46 = (os_log_s *)qword_101934868;
        if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
        {
          int v47 = *(_DWORD *)(a4 + 84);
          *(_DWORD *)buf = 67240192;
          *(_DWORD *)uint64_t v81 = v47;
          _os_log_impl( (void *)&_mh_execute_header,  v46,  OS_LOG_TYPE_DEBUG,  "@EmerCheck, confidence, %{public}d, above threshold",  buf,  8u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934860 != -1) {
            dispatch_once(&qword_101934860, &stru_1018820E8);
          }
          int v48 = *(_DWORD *)(a4 + 84);
          int v67 = 67240192;
          LODWORD(v68[0]) = v48;
          LODWORD(v59) = 8;
          uint64_t v33 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "@EmerCheck, confidence, %{public}d, above threshold",  &v67,  v59);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "static std::tuple<Types::Emergency, CLWifiLocationUpdateRequest, Types::AlsQueryType> CL::Wifi1::Policies::P ostPositionCalculationStateUpdate::HandleEvent::updateEmergencyStateCurrentLocationUpdateRequestAndApQueryTy pe(const Types::Emergency &, const CLWifiLocationUpdateRequest &, Types::AlsQueryType, const Types::Computed Location &, cl::chrono::CFAbsoluteTimeClock::time_point, BOOL)",  "%s\n",  v33);
          goto LABEL_156;
        }

        goto LABEL_79;
      }

      LODWORD(v60) = 3;
      if (*(double *)&v63 < *((double *)&v60 + 1))
      {
        *(void *)&__int128 v63 = a7;
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_1018820E8);
        }
        __int128 v27 = (os_log_s *)qword_101934868;
        if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 134349056;
          *(double *)uint64_t v81 = *(double *)&v63 - *((double *)&v60 + 1);
          _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEFAULT,  "@EmerTick, scanrequest5ghzwithals, %{public}.1f",  buf,  0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934860 != -1) {
            dispatch_once(&qword_101934860, &stru_1018820E8);
          }
          int v67 = 134349056;
          v68[0] = *(double *)&v63 - *((double *)&v60 + 1);
          LODWORD(v59) = 12;
          uint64_t v58 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@EmerTick, scanrequest5ghzwithals, %{public}.1f",  &v67,  v59);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "static std::tuple<Types::Emergency, CLWifiLocationUpdateRequest, Types::AlsQueryType> CL::Wifi1::Policies::P ostPositionCalculationStateUpdate::HandleEvent::updateEmergencyStateCurrentLocationUpdateRequestAndApQueryTy pe(const Types::Emergency &, const CLWifiLocationUpdateRequest &, Types::AlsQueryType, const Types::Computed Location &, cl::chrono::CFAbsoluteTimeClock::time_point, BOOL)",  "%s\n",  v58);
        }
      }

      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_1018820E8);
      }
      uint64_t v28 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 67240448;
        *(_DWORD *)uint64_t v81 = HIDWORD(v59);
        *(_WORD *)&v81[4] = 2050;
        *(double *)&v81[6] = *(double *)&v63 - *((double *)&v60 + 1);
        _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEFAULT,  "@EmerFlow, ScanRequest5GHzWithPendingAls, queryType, %{public}d, tte, %{public}.1f",  buf,  0x12u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_1018820E8);
        }
        int v67 = 67240448;
        LODWORD(v68[0]) = HIDWORD(v59);
        WORD2(v68[0]) = 2050;
        *(double *)((char *)v68 + 6) = *(double *)&v63 - *((double *)&v60 + 1);
        LODWORD(v59) = 18;
        uint64_t v29 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@EmerFlow, ScanRequest5GHzWithPendingAls, queryType, %{public}d, tte, %{public}.1f",  &v67,  v59);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "static std::tuple<Types::Emergency, CLWifiLocationUpdateRequest, Types::AlsQueryType> CL::Wifi1::Policies::Pos tPositionCalculationStateUpdate::HandleEvent::updateEmergencyStateCurrentLocationUpdateRequestAndApQueryType(c onst Types::Emergency &, const CLWifiLocationUpdateRequest &, Types::AlsQueryType, const Types::ComputedLocati on &, cl::chrono::CFAbsoluteTimeClock::time_point, BOOL)",  "%s\n",  v29);
        break;
      }

      goto LABEL_80;
    case 4:
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_1018820E8);
      }
      uint64_t v31 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEFAULT,  "@EmerFlow, ScanRequest5GHzWithAlsReply, waiting for 5GHz scan result",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_1018820E8);
        }
        LOWORD(v67) = 0;
        LODWORD(v59) = 2;
        uint64_t v29 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@EmerFlow, ScanRequest5GHzWithAlsReply, waiting for 5GHz scan result",  &v67,  v59);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "static std::tuple<Types::Emergency, CLWifiLocationUpdateRequest, Types::AlsQueryType> CL::Wifi1::Policies::Pos tPositionCalculationStateUpdate::HandleEvent::updateEmergencyStateCurrentLocationUpdateRequestAndApQueryType(c onst Types::Emergency &, const CLWifiLocationUpdateRequest &, Types::AlsQueryType, const Types::ComputedLocati on &, cl::chrono::CFAbsoluteTimeClock::time_point, BOOL)",  "%s\n",  v29);
        break;
      }

      goto LABEL_80;
    case 5:
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_1018820E8);
      }
      uint64_t v32 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEFAULT,  "@EmerWarn, ScanReply5GHzWithPendingAls, abort waiting for the preliminary ALS response",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_1018820E8);
        }
        LOWORD(v67) = 0;
        LODWORD(v59) = 2;
        uint64_t v33 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@EmerWarn, ScanReply5GHzWithPendingAls, abort waiting for the preliminary ALS response",  &v67,  v59);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "static std::tuple<Types::Emergency, CLWifiLocationUpdateRequest, Types::AlsQueryType> CL::Wifi1::Policies::Pos tPositionCalculationStateUpdate::HandleEvent::updateEmergencyStateCurrentLocationUpdateRequestAndApQueryType(c onst Types::Emergency &, const CLWifiLocationUpdateRequest &, Types::AlsQueryType, const Types::ComputedLocati on &, cl::chrono::CFAbsoluteTimeClock::time_point, BOOL)",  "%s\n",  v33);
LABEL_156:
      }

      goto LABEL_79;
    case 6:
LABEL_79:
      sub_100D881E8(v69);
      goto LABEL_80;
    case 8:
      LODWORD(v60) = 9;
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_1018820E8);
      }
      uint64_t v34 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEFAULT, "@EmerFlow, Done, alsreply", buf, 2u);
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_80;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_1018820E8);
      }
      LOWORD(v67) = 0;
      LODWORD(v59) = 2;
      uint64_t v29 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@EmerFlow, Done, alsreply",  &v67,  v59);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static std::tuple<Types::Emergency, CLWifiLocationUpdateRequest, Types::AlsQueryType> CL::Wifi1::Policies::PostP ositionCalculationStateUpdate::HandleEvent::updateEmergencyStateCurrentLocationUpdateRequestAndApQueryType(const Types::Emergency &, const CLWifiLocationUpdateRequest &, Types::AlsQueryType, const Types::ComputedLocation &, cl::chrono::CFAbsoluteTimeClock::time_point, BOOL)",  "%s\n",  v29);
      break;
    default:
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_1018820E8);
      }
      uint64_t v30 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 67240192;
        *(_DWORD *)uint64_t v81 = v60;
        _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEFAULT,  "@EmerWarn, unexpected state, processScanResult, %{public}d, #CloneMe",  buf,  8u);
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_80;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_1018820E8);
      }
      int v67 = 67240192;
      LODWORD(v68[0]) = v60;
      LODWORD(v59) = 8;
      uint64_t v29 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@EmerWarn, unexpected state, processScanResult, %{public}d, #CloneMe",  &v67,  v59);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static std::tuple<Types::Emergency, CLWifiLocationUpdateRequest, Types::AlsQueryType> CL::Wifi1::Policies::PostP ositionCalculationStateUpdate::HandleEvent::updateEmergencyStateCurrentLocationUpdateRequestAndApQueryType(const Types::Emergency &, const CLWifiLocationUpdateRequest &, Types::AlsQueryType, const Types::ComputedLocation &, cl::chrono::CFAbsoluteTimeClock::time_point, BOOL)",  "%s\n",  v29);
      break;
  }

void sub_100D86414( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, char a33)
{
}

void sub_100D864A4(uint64_t a1@<X0>, int *a2@<X1>, uint64_t a3@<X8>)
{
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_1018820E8);
  }
  __int128 v6 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
  {
    unint64_t v7 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 6288) - *(void *)(a1 + 6280)) >> 3);
    int v8 = *a2;
    int v9 = *(_DWORD *)(a1 + 6344);
    *(_DWORD *)buf = 134349568;
    *(void *)&uint8_t buf[4] = v7;
    *(_WORD *)&_BYTE buf[12] = 1026;
    *(_DWORD *)&buf[14] = v8;
    *(_WORD *)&buf[18] = 1026;
    *(_DWORD *)&buf[20] = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "WsbAls, unknown, groups, %{public}ld, tags, %{public}d, %{public}d",  buf,  0x18u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_1018820E8);
    }
    unint64_t v14 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 6288) - *(void *)(a1 + 6280)) >> 3);
    int v15 = *a2;
    int v16 = *(_DWORD *)(a1 + 6344);
    *(_DWORD *)__int128 v23 = 134349568;
    *(void *)&v23[4] = v14;
    __int16 v24 = 1026;
    *(_DWORD *)uint64_t v25 = v15;
    *(_WORD *)&v25[4] = 1026;
    *(_DWORD *)&v25[6] = v16;
    BOOL v17 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "WsbAls, unknown, groups, %{public}ld, tags, %{public}d, %{public}d",  v23,  24);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PostPositionCalculationStateUpdate::HandleEvent::operator()(const Events::Network::Als AllUnknown &) const",  "%s\n",  v17);
  }

  if (*(void *)(a1 + 6288) != *(void *)(a1 + 6280) && *(_DWORD *)(a1 + 6344) == *a2)
  {
    sub_100D83DD0(a1, (uint64_t *)(a1 + 6280), 1, buf);
    sub_1002DE844((void ***)(a3 + 6280));
    *(_OWORD *)(a3 + 6280) = *(_OWORD *)buf;
    *(void *)(a3 + 6296) = *(void *)&buf[16];
    memset(buf, 0, sizeof(buf));
    sub_10001CDA0(a3 + 6304, v28);
    *(_OWORD *)(a3 + 6344) = v29;
    *(void *)(a3 + 6360) = v30;
    sub_100019CEC((uint64_t)v28);
    *(void *)__int128 v23 = buf;
    sub_1002E067C((void ***)v23);
    if (*(_DWORD *)(a1 + 6348) == 2 && *(double *)(a3 + 6360) > 0.0)
    {
      *(_DWORD *)(a3 + 6348) = 0;
      *(void *)(a3 + 6360) = 0LL;
    }

    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_1018820E8);
    }
    uint64_t v10 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
    {
      unint64_t v11 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a3 + 6288) - *(void *)(a3 + 6280)) >> 3);
      uint64_t v12 = *(void *)(a3 + 6328);
      int v13 = *(_DWORD *)(a1 + 6348);
      *(_DWORD *)buf = 134349568;
      *(void *)&uint8_t buf[4] = v11;
      *(_WORD *)&_BYTE buf[12] = 2050;
      *(void *)&buf[14] = v12;
      *(_WORD *)&buf[22] = 1026;
      LODWORD(v28[0]) = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "@WsbReproc, remain, groups, %{public}lu, unknownAPs, %{public}lu, pass, %{public}d",  buf,  0x1Cu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_1018820E8);
      }
      unint64_t v18 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a3 + 6288) - *(void *)(a3 + 6280)) >> 3);
      uint64_t v19 = *(void *)(a3 + 6328);
      int v20 = *(_DWORD *)(a1 + 6348);
      *(_DWORD *)__int128 v23 = 134349568;
      *(void *)&v23[4] = v18;
      __int16 v24 = 2050;
      *(void *)uint64_t v25 = v19;
      *(_WORD *)&v25[8] = 1026;
      int v26 = v20;
      LODWORD(v22) = 28;
      __int128 v21 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "@WsbReproc, remain, groups, %{public}lu, unknownAPs, %{public}lu, pass, %{public}d",  v23,  v22);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PostPositionCalculationStateUpdate::HandleEvent::operator()(const Events::Network::A lsAllUnknown &) const",  "%s\n",  v21);
    }
  }

void sub_100D86948(_Unwind_Exception *a1)
{
}

void sub_100D86968(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v5 = sub_100D83A04((_DWORD *)a2, a1);
  if (!*(_BYTE *)(a1 + 6376)) {
    return;
  }
  if (0xD37A6F4DE9BD37A7LL * ((uint64_t)(*(void *)(a1 + 1640) - *(void *)(a1 + 1632)) >> 3) != 0xAAAAAAAAAAAAAAABLL
                                                                                                 * ((uint64_t)(*(void *)(a1 + 1080) - *(void *)(a1 + 1072)) >> 3))
  {
    sub_10126E5C0( (uint64_t)v5,  v6,  v7,  v8,  v9,  v10,  v11,  v12,  v24,  v25,  v26,  v27,  (uint64_t)v28,  v29,  *((uint64_t *)&v29 + 1),  v30,  *(uint64_t *)buf,  *(uint64_t *)&buf[8],  *(uint64_t *)&buf[16],  v32[0],  v32[1],  v32[2],  v32[3],  v32[4]);
    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/Wifi1/Logic/Policies/CLWifi1PostPositionCalc ulationStateUpdate.mm",  147,  "operator()");
    __break(1u);
    goto LABEL_17;
  }

  sub_100D83DD0(a1, (uint64_t *)(a1 + 1072), 0, buf);
  sub_1002DE844((void ***)(a2 + 6280));
  *(_OWORD *)(a2 + 6280) = *(_OWORD *)buf;
  *(void *)(a2 + 6296) = *(void *)&buf[16];
  memset(buf, 0, sizeof(buf));
  sub_10001CDA0(a2 + 6304, v32);
  *(_OWORD *)(a2 + 6344) = v33;
  *(void *)(a2 + 6360) = v34;
  sub_100019CEC((uint64_t)v32);
  uint64_t v28 = buf;
  sub_1002E067C((void ***)&v28);
  if (!*(void *)(a2 + 6328)) {
    return;
  }
  if (*(_BYTE *)(a1 + 1096))
  {
    if (!sub_100B83D5C(a1 + 3208))
    {
      uint64_t v13 = 0x40C5180000000000LL;
      goto LABEL_10;
    }

    if (*(_BYTE *)(a1 + 1096)) {
      goto LABEL_11;
    }
  }

  uint64_t v13 = 0x402E000000000000LL;
LABEL_10:
  *(_BYTE *)(a2 + 1656) = 1;
  *(void *)(a2 + 6352) = v13;
LABEL_11:
  p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
  if (qword_101934860 != -1) {
LABEL_17:
  }
    dispatch_once(&qword_101934860, &stru_1018820E8);
  unint64_t v14 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
  {
    int v15 = *(unsigned __int8 *)(a2 + 1656);
    uint64_t v16 = *(void *)(a2 + 6328);
    int v17 = *(unsigned __int8 *)(a1 + 1096);
    int v18 = (int)*(double *)(a2 + 6352);
    *(_DWORD *)buf = 67240960;
    *(_DWORD *)&uint8_t buf[4] = v15;
    *(_WORD *)&uint8_t buf[8] = 2050;
    *(void *)&buf[10] = v16;
    *(_WORD *)&buf[18] = 1026;
    *(_DWORD *)&buf[20] = v17;
    LOWORD(v32[0]) = 1026;
    *(_DWORD *)((char *)v32 + 2) = v18;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "WsbTimer, set, %{public}d, unknown, %{public}ld, wasempty, %{public}d, delay, %{public}d",  buf,  0x1Eu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    int v19 = *(unsigned __int8 *)(a2 + 1656);
    uint64_t v20 = *(void *)(a2 + 6328);
    int v21 = *(unsigned __int8 *)(a1 + 1096);
    int v22 = (int)*(double *)(a2 + 6352);
    LODWORD(v28) = 67240960;
    HIDWORD(v28) = v19;
    LOWORD(v29) = 2050;
    *(void *)((char *)&v29 + 2) = v20;
    WORD5(v29) = 1026;
    HIDWORD(v29) = v21;
    LOWORD(v30) = 1026;
    *(_DWORD *)((char *)&v30 + 2) = v22;
    LODWORD(v25) = 30;
    __int128 v23 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "WsbTimer, set, %{public}d, unknown, %{public}ld, wasempty, %{public}d, delay, %{public}d",  &v28,  v25);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PostPositionCalculationStateUpdate::HandleEvent::operator()(const Events::Wifi::Wsb &) const",  "%s\n",  v23);
  }

void sub_100D86CCC(_Unwind_Exception *a1)
{
}

void sub_100D86CF0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v9 = (_BYTE *)(a1 + 6152);
  sub_100D83A04((_DWORD *)a3, a1);
  if (!v9[227] || !v9[224]) {
    return;
  }
  double v10 = *(double *)(a1 + 6384);
  double v11 = v10;
  if (*(_BYTE *)(a1 + 1400))
  {
    unsigned int v12 = a1 + 1304;
    buf.__r_.__value_.__r.__words[0] = sub_1005B46E8(a3 + 3208);
    *(void *)uint64_t v128 = *(void *)(a1 + 1304);
    BOOL v13 = sub_1007EC0B0(&buf, v128);
    if (!v13)
    {
      sub_10126E478( v13,  v14,  v15,  v16,  v17,  v18,  v19,  v20,  v83,  v84,  v85,  v86,  v87,  (uint64_t)v88,  (uint64_t)v89,  v90,  v91,  v92,  *((uint64_t *)&v92 + 1),  v93,  v94,  (uint64_t)v95,  (uint64_t)v96,  v97);
      abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/Wifi1/Logic/Policies/CLWifi1PostPositionCa lculationStateUpdate.mm",  188,  "operator()");
      __break(1u);
      goto LABEL_129;
    }

    char v21 = sub_100C3A408(a1 + 1304);
    sub_100B83D6C(a3 + 3208, v21);
    double v11 = *(double *)(a1 + 6384);
  }

  double v22 = *(double *)(a1 + 6120);
  uint64_t v118 = *(void *)(a1 + 816);
  char v119 = *(_BYTE *)(a1 + 824);
  if (*(char *)(a1 + 855) < 0)
  {
    sub_1010DD48C(&v120, *(void **)(a1 + 832), *(void *)(a1 + 840));
  }

  else
  {
    __int128 v120 = *(_OWORD *)(a1 + 832);
    uint64_t v121 = *(void *)(a1 + 848);
  }

  uint64_t v3 = &v118;
  __int128 v23 = *(_OWORD *)(a1 + 856);
  __int128 v123 = *(_OWORD *)(a1 + 872);
  __int128 v24 = *(_OWORD *)(a1 + 904);
  __int128 v124 = *(_OWORD *)(a1 + 888);
  v125[0] = v24;
  *(_OWORD *)((char *)v125 + 12) = *(_OWORD *)(a1 + 916);
  __int128 v122 = v23;
  if (*(char *)(a1 + 959) < 0)
  {
    sub_1010DD48C(&v126, *(void **)(a1 + 936), *(void *)(a1 + 944));
  }

  else
  {
    __int128 v126 = *(_OWORD *)(a1 + 936);
    uint64_t v127 = *(void *)(a1 + 952);
  }

  uint64_t v108 = *(void *)a2;
  char v109 = *(_BYTE *)(a2 + 8);
  if (*(char *)(a2 + 39) < 0)
  {
    sub_1010DD48C(&v110, *(void **)(a2 + 16), *(void *)(a2 + 24));
  }

  else
  {
    __int128 v110 = *(_OWORD *)(a2 + 16);
    uint64_t v111 = *(void *)(a2 + 32);
  }

  uint64_t v4 = &v101;
  __int128 v25 = *(_OWORD *)(a2 + 56);
  __int128 v26 = *(_OWORD *)(a2 + 88);
  __int128 v114 = *(_OWORD *)(a2 + 72);
  v115[0] = v26;
  *(_OWORD *)((char *)v115 + 12) = *(_OWORD *)(a2 + 100);
  __int128 v112 = *(_OWORD *)(a2 + 40);
  __int128 v113 = v25;
  if (*(char *)(a2 + 143) < 0)
  {
    sub_1010DD48C(&v116, *(void **)(a2 + 120), *(void *)(a2 + 128));
  }

  else
  {
    __int128 v116 = *(_OWORD *)(a2 + 120);
    uint64_t v117 = *(void *)(a2 + 136);
  }

  if (*(void *)(a1 + 1128)) {
    *(_BYTE *)(a3 + 6076) = 0;
  }
  if (v9[268] && !sub_100495E64(&v108))
  {
    LODWORD(buf.__r_.__value_.__l.__data_) = 2;
    sub_100496E04(&v108, &buf);
  }

  if (v9[20])
  {
    LODWORD(buf.__r_.__value_.__l.__data_) = 6;
    sub_100496E04(&v108, &buf);
  }

  BOOL v27 = sub_100495E98(&v118);
  double v11 = vabdd_f64(v11, v22);
  if (v11 >= 5.0 && v27) {
    sub_100495EC8((int *)&v118);
  }
  if (sub_100495E98(&v118)
    && (int v29 = sub_100496E10((unsigned int *)&v108), v29 <= (int)sub_100496E10((unsigned int *)&v118)))
  {
    else {
      unsigned int v12 = 0;
    }
  }

  else
  {
    unsigned int v12 = 1;
  }

  if (*(unsigned __int8 *)(a1 + 811) != v12)
  {
    p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
    if (qword_101934860 == -1)
    {
LABEL_35:
      uint64_t v30 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_ERROR))
      {
        int v31 = *(unsigned __int8 *)(a1 + 811);
        LODWORD(buf.__r_.__value_.__l.__data_) = 67174913;
        HIDWORD(buf.__r_.__value_.__r.__words[0]) = v31;
        LOWORD(buf.__r_.__value_.__r.__words[1]) = 1025;
        *(_DWORD *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = v12;
        _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_ERROR,  "@WifiFlow, scanreq inconsistent, pre, %{private}d, post, %{private}d",  (uint8_t *)&buf,  0xEu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(&buf, 0x65CuLL);
        uint64_t v71 = qword_101934868;
        int v72 = *(unsigned __int8 *)(a1 + 811);
        *(_DWORD *)uint64_t v128 = 67174913;
        *(_DWORD *)&v128[4] = v72;
        LOWORD(v129[0]) = 1025;
        *(_DWORD *)((char *)v3 + 162) = v12;
        LODWORD(v84) = 14;
        uint64_t v73 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v71,  16LL,  "@WifiFlow, scanreq inconsistent, pre, %{private}d, post, %{private}d",  v128,  v84);
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "Output CL::Wifi1::Policies::PostPositionCalculationStateUpdate::HandleEvent::operator()(const Events::Client:: LocationRequest &) const",  "%s\n",  (const char *)v73);
        if (v73 != &buf) {
          free(v73);
        }
      }

      goto LABEL_38;
    }

void sub_100D87D0C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20, uint64_t a21, void *a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, char a44, uint64_t a45, void *a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62)
{
}

uint64_t sub_100D87E94(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(a1 + 88))
  {
    __int128 v4 = *(_OWORD *)a2;
    *(void *)(a1 + 13) = *(void *)(a2 + 13);
    *(_OWORD *)a1 = v4;
    __int128 v5 = (void **)(a1 + 24);
    uint64_t v6 = (__int128 *)(a2 + 24);
    __int128 v7 = *v6;
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(_OWORD *)__int128 v5 = v7;
    *(_BYTE *)(a2 + 47) = 0;
    *(_BYTE *)(a2 + sub_100BDC958(v1 + 24) = 0;
    sub_100D89C2C(a1 + 48, a2 + 48);
  }

  else
  {
    sub_100D89CC0(a1, (__int128 *)a2);
    *(_BYTE *)(a1 + 88) = 1;
  }

  return a1;
}

uint64_t sub_100D87F30(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 80))
  {
    uint64_t v2 = *(void **)(a1 + 56);
    if (v2)
    {
      *(void *)(a1 + 64) = v2;
      operator delete(v2);
    }
  }

  return a1;
}

NSDictionary *sub_100D87F78(uint64_t a1)
{
  v2[1] = @"numInGroup";
  v3[0] = @"discard:unknownaps";
  v2[0] = @"groupResult";
  v3[1] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 32));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v3,  v2,  2LL);
}

NSDictionary *sub_100D8800C(uint64_t a1)
{
  v2[1] = @"numInGroup";
  v3[0] = @"discard:alsmax";
  v2[0] = @"groupResult";
  v3[1] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 32));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v3,  v2,  2LL);
}

NSDictionary *sub_100D880A0(uint64_t a1)
{
  v2[0] = @"groupResult";
  v2[1] = @"numInGroup";
  v3[0] = @"discard";
  v3[1] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  (*(_DWORD *)(a1 + 36) + *(_DWORD *)(a1 + 32)));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v3,  v2,  2LL);
}

void **sub_100D88138(uint64_t *a1, unint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t result = (void **)(a1 + 2);
  if (0xAAAAAAAAAAAAAAABLL * ((v4 - *a1) >> 3) < a2)
  {
    if (a2 >= 0xAAAAAAAAAAAAAABLL) {
      sub_100007008();
    }
    uint64_t v5 = a1[1] - *a1;
    v7[4] = result;
    v7[0] = sub_10000701C((uint64_t)result, a2);
    v7[1] = (char *)v7[0] + v5;
    v7[2] = (char *)v7[0] + v5;
    v7[3] = (char *)v7[0] + 24 * v6;
    sub_100682F38(a1, v7);
    return sub_1006830C8(v7);
  }

  return result;
}

void sub_100D881D4(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_100D881E8(_DWORD **a1)
{
  if (*((double *)*a1 + 9) < *((double *)*a1 + 1))
  {
    *((void *)*a1 + 9) = a1[2];
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_1018820E8);
    }
    uint64_t v2 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
    {
      double v3 = *((double *)*a1 + 9) - *((double *)*a1 + 1);
      *(_DWORD *)std::stringbuf::string_type buf = 134349056;
      *(double *)uint64_t v16 = v3;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "@EmerTick, alsreq, %{public}.1f", buf, 0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_1018820E8);
      }
      double v10 = *((double *)*a1 + 9) - *((double *)*a1 + 1);
      int v13 = 134349056;
      *(double *)uint64_t v14 = v10;
      double v11 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@EmerTick, alsreq, %{public}.1f",  &v13,  12);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "auto CL::Wifi1::Policies::PostPositionCalculationStateUpdate::HandleEvent::updateEmergencyStateCurrentLocationUp dateRequestAndApQueryType(const Types::Emergency &, const CLWifiLocationUpdateRequest &, Types::AlsQueryType, co nst Types::ComputedLocation &, cl::chrono::CFAbsoluteTimeClock::time_point, BOOL)::(anonymous class)::operator()() const",  "%s\n",  v11);
    }
  }

  **a1 = 7;
  *a1[1] = 1;
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_1018820E8);
  }
  uint64_t v4 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = *a1[1];
    double v6 = *((double *)*a1 + 9) - *((double *)*a1 + 1);
    *(_DWORD *)std::stringbuf::string_type buf = 67240448;
    LODWORD(v16[0]) = v5;
    WORD2(v16[0]) = 2050;
    *(double *)((char *)v16 + 6) = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "@EmerFlow, AlsRequest, queryType, %{public}d, tte, %{public}.1f",  buf,  0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_1018820E8);
    }
    int v7 = *a1[1];
    double v8 = *((double *)*a1 + 9) - *((double *)*a1 + 1);
    int v13 = 67240448;
    LODWORD(v14[0]) = v7;
    WORD2(v14[0]) = 2050;
    *(double *)((char *)v14 + 6) = v8;
    LODWORD(v12) = 18;
    uint64_t v9 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@EmerFlow, AlsRequest, queryType, %{public}d, tte, %{public}.1f",  &v13,  v12);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "auto CL::Wifi1::Policies::PostPositionCalculationStateUpdate::HandleEvent::updateEmergencyStateCurrentLocationUpda teRequestAndApQueryType(const Types::Emergency &, const CLWifiLocationUpdateRequest &, Types::AlsQueryType, const Types::ComputedLocation &, cl::chrono::CFAbsoluteTimeClock::time_point, BOOL)::(anonymous class)::operator()() const",  "%s\n",  v9);
  }

void sub_100D88564(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  p_vtable = (void **)a1;
  double v6 = (_BYTE *)(a1 + 6376);
  sub_100D83A04((_DWORD *)a3, a1);
  if (!*v6) {
    return;
  }
  int v7 = *(unsigned __int8 *)(a2 + 48);
  double v8 = *((double *)p_vtable + 798);
  if (sub_100869780((uint64_t)(p_vtable + 176)))
  {
    __int128 v9 = *((_OWORD *)p_vtable + 97);
    *(_OWORD *)(a3 + 5072) = *((_OWORD *)p_vtable + 96);
    *(_OWORD *)(a3 + 5088) = v9;
    *(_OWORD *)(a3 + 5104) = *((_OWORD *)p_vtable + 98);
    __int128 v10 = *((_OWORD *)p_vtable + 93);
    *(_OWORD *)(a3 + 5008) = *((_OWORD *)p_vtable + 92);
    *(_OWORD *)(a3 + 50sub_100BDC958(v1 + 24) = v10;
    __int128 v11 = *((_OWORD *)p_vtable + 95);
    *(_OWORD *)(a3 + 5040) = *((_OWORD *)p_vtable + 94);
    *(_OWORD *)(a3 + 5056) = v11;
    __int128 v12 = *((_OWORD *)p_vtable + 89);
    *(_OWORD *)(a3 + 4944) = *((_OWORD *)p_vtable + 88);
    *(_OWORD *)(a3 + 4960) = v12;
    __int128 v13 = *((_OWORD *)p_vtable + 91);
    *(_OWORD *)(a3 + 4976) = *((_OWORD *)p_vtable + 90);
    *(void *)(a3 + 5120) = p_vtable[198];
    *(_OWORD *)(a3 + 4992) = v13;
  }

  if (*((_BYTE *)p_vtable + 1400))
  {
    buf.__r_.__value_.__r.__words[0] = sub_1005B46E8(a3 + 3208);
    *(void *)uint64_t v93 = p_vtable[163];
    BOOL v14 = sub_1007EC0B0(&buf, v93);
    if (!v14)
    {
      sub_10126E478( v14,  v15,  v16,  v17,  v18,  v19,  v20,  v21,  v76,  v77,  v78,  v79,  (uint64_t)v80,  (uint64_t)v81,  v82,  v83,  v84,  *((uint64_t *)&v84 + 1),  v85,  v86,  (uint64_t)v87,  (uint64_t)v88,  v89,  v90);
      abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/Wifi1/Logic/Policies/CLWifi1PostPositionCa lculationStateUpdate.mm",  547,  "operator()");
      __break(1u);
LABEL_134:
      dispatch_once(&qword_101934860, &stru_1018820E8);
LABEL_58:
      uint64_t v40 = qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
      {
        LOWORD(buf.__r_.__value_.__l.__data_) = 0;
        _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v40,  OS_LOG_TYPE_DEBUG,  "#post-wifi-position-calculation-state-update, location update not in progress, will not issue scan",  (uint8_t *)&buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        *(_WORD *)uint64_t v93 = 0;
        LODWORD(v77) = 2;
        double v44 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "#post-wifi-position-calculation-state-update, location update not in prog ress, will not issue scan",  v93,  v77);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PostPositionCalculationStateUpdate::HandleEvent::operator()(const Events::Wifi::Scan &) const",  "%s\n",  (const char *)v44);
        goto LABEL_138;
      }

      return;
    }

    char v22 = sub_100C3A408((uint64_t)(p_vtable + 163));
    sub_100B83D6C(a3 + 3208, v22);
  }

  if (p_vtable[141]) {
    *(_BYTE *)(a3 + 6076) = 0;
  }
  if (sub_100496DF0(a3 + 5968) && !sub_100495E64((_DWORD *)(a3 + 5968)))
  {
    if (v7 == 10 || v7 == v6[73])
    {
      if (*(_BYTE *)(a3 + 1624)) {
        unsigned int v23 = 6;
      }
      else {
        unsigned int v23 = 11;
      }
      sub_10049609C(a3 + 5968, 5, v23, v8);
    }
  }

  if (!sub_100495E98((_DWORD *)p_vtable + 1492))
  {
    p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
    if (qword_101934860 == -1) {
      goto LABEL_58;
    }
    goto LABEL_134;
  }

  if (sub_100495E64((_DWORD *)p_vtable + 1492))
  {
    sub_100D84E50( (__int128 *)(p_vtable + 771),  a3 + 5968,  *((_DWORD *)p_vtable + 1539),  (uint64_t)(p_vtable + 176),  v6[46],  (uint64_t)&buf,  p_vtable[798]);
    *(void *)uint64_t v93 = a3 + 6168;
    *(void *)&v93[8] = a3 + 5968;
    *(void *)&v93[16] = a3 + 6156;
    sub_100D89A50((uint64_t)v93, (__int128 *)&buf);
    if (v105 < 0) {
      operator delete(__p);
    }
    if (v103 < 0) {
      operator delete(v102);
    }
    if (*(_DWORD *)(a3 + 6168) == 3)
    {
      if (*(double *)(a3 + 6216) < *(double *)(a3 + 6176))
      {
        *(void *)(a3 + 6216) = p_vtable[798];
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_1018820E8);
        }
        uint64_t v24 = qword_101934868;
        if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
        {
          double v25 = *(double *)(a3 + 6216) - *(double *)(a3 + 6176);
          LODWORD(buf.__r_.__value_.__l.__data_) = 134349056;
          *(double *)((char *)buf.__r_.__value_.__r.__words + 4) = v25;
          _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v24,  OS_LOG_TYPE_DEFAULT,  "@EmerTick, scanrequest5ghzwithals, %{public}.1f",  (uint8_t *)&buf,  0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(&buf, 0x65CuLL);
          if (qword_101934860 != -1) {
            dispatch_once(&qword_101934860, &stru_1018820E8);
          }
          double v74 = *(double *)(a3 + 6216) - *(double *)(a3 + 6176);
          *(_DWORD *)uint64_t v93 = 134349056;
          *(double *)&v93[4] = v74;
          __int128 v75 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@EmerTick, scanrequest5ghzwithals, %{public}.1f",  v93,  12);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PostPositionCalculationStateUpdate::HandleEvent::operator()(const Events::Wifi::Scan &) const",  "%s\n",  (const char *)v75);
          if (v75 != &buf) {
            free(v75);
          }
        }
      }

      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_1018820E8);
      }
      __int128 v26 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
      {
        BOOL v27 = sub_10099EBD8(0xCu);
        double v28 = *(double *)(a3 + 6216) - *(double *)(a3 + 6176);
        LODWORD(buf.__r_.__value_.__l.__data_) = 136446466;
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v27;
        WORD2(buf.__r_.__value_.__r.__words[1]) = 2050;
        *(double *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v28;
        _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEFAULT,  "@EmerFlow, ScanRequest5GHzWithPendingAls, type, %{public}s, tte, %{public}.1f",  (uint8_t *)&buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_1018820E8);
        }
        uint64_t v67 = qword_101934868;
        __int128 v68 = sub_10099EBD8(0xCu);
        double v69 = *(double *)(a3 + 6216) - *(double *)(a3 + 6176);
        *(_DWORD *)uint64_t v93 = 136446466;
        *(void *)&v93[4] = v68;
        *(_WORD *)&v93[12] = 2050;
        *(double *)&v93[14] = v69;
        LODWORD(v77) = 22;
        __int128 v70 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v67,  0LL,  "@EmerFlow, ScanRequest5GHzWithPendingAls, type, %{public}s, tte, %{public}.1f",  v93,  v77);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PostPositionCalculationStateUpdate::HandleEvent::operator()(const Events::Wifi::Scan &) const",  "%s\n",  (const char *)v70);
        if (v70 != &buf) {
          free(v70);
        }
      }

      double v29 = *((double *)p_vtable + 798);
      int v30 = sub_100496E24(a3 + 5968);
      sub_100496B38((char *)(a3 + 5968), (uint64_t)v91);
      (*(void (**)(uint64_t *__return_ptr, void *, uint64_t))(*(void *)p_vtable[809] + 16LL))( &v86,  p_vtable[809],  12LL);
      sub_100D899B4((uint64_t)&buf, 12, v30, 1, (__int128 *)v91, (uint64_t)&v86, v29);
      sub_100D87E94(a3 + 1664, (uint64_t)&buf);
      if (v101 && v99)
      {
        char v100 = v99;
        operator delete(v99);
      }

      if (v98 < 0) {
        operator delete(v97);
      }
      if ((_BYTE)v90 && v87)
      {
        char v88 = v87;
        operator delete(v87);
      }

      if (v92 < 0) {
        operator delete(v91[0]);
      }
      int v31 = (uint64_t **)(*(void *)(a3 + 6424) + 56LL);
      buf.__r_.__value_.__r.__words[0] = a3 + 1688;
      __int128 v32 = sub_1002E2A90(v31, (const void **)(a3 + 1688), (uint64_t)&unk_1012CF090, (__int128 **)&buf);
      ++*((_DWORD *)v32 + 14);
      uint64_t v33 = *(void *)(a3 + 6424);
      sub_1010DDBC0(&buf, "total");
      *(void *)uint64_t v93 = &buf;
      __int128 v34 = sub_1002E2BC8( (uint64_t **)(v33 + 56),  (const void **)&buf.__r_.__value_.__l.__data_,  (uint64_t)&unk_1012CF090,  (_OWORD **)v93);
      ++*((_DWORD *)v34 + 14);
      uint64_t v35 = *(void *)(a3 + 6424);
      if (*(_BYTE *)(a3 + 1744)) {
        __int16 v36 = *(unsigned __int8 *)(a3 + 1712) | 0x100;
      }
      else {
        __int16 v36 = 0;
      }
      sub_1002DAEE8(*(char *)(a3 + 1664), v36, &buf);
      *(void *)uint64_t v93 = &buf;
      BOOL v37 = sub_1002E2BC8( (uint64_t **)(v35 + 80),  (const void **)&buf.__r_.__value_.__l.__data_,  (uint64_t)&unk_1012CF090,  (_OWORD **)v93);
      ++*((_DWORD *)v37 + 14);
      uint64_t v38 = *(void *)(a3 + 6424);
      sub_1010DDBC0(&buf, "total");
      *(void *)uint64_t v93 = &buf;
      int v39 = sub_1002E2BC8( (uint64_t **)(v38 + 80),  (const void **)&buf.__r_.__value_.__l.__data_,  (uint64_t)&unk_1012CF090,  (_OWORD **)v93);
      ++*((_DWORD *)v39 + 14);
      return;
    }

    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_1018820E8);
    }
    __int128 v43 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(buf.__r_.__value_.__l.__data_) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_DEBUG,  "#post-wifi-position-calculation-state-update, #emergency location update in progress, skipping state transition logic",  (uint8_t *)&buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_1018820E8);
      }
      *(_WORD *)uint64_t v93 = 0;
      double v44 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "#post-wifi-position-calculation-state-update, #emergency location update in progress, skipping state transition logic",  v93,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PostPositionCalculationStateUpdate::HandleEvent::operator()(const Events::Wifi::Scan &) const",  "%s\n",  (const char *)v44);
LABEL_138:
      if (v44 != &buf) {
        free(v44);
      }
      return;
    }

    return;
  }

  if (*((_BYTE *)p_vtable + 808))
  {
    if (*((_BYTE *)p_vtable + 1624))
    {
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_1018820E8);
      }
      int v41 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
      {
        LODWORD(buf.__r_.__value_.__l.__data_) = sub_100A694C8((uint64_t)&buf.__r_.__value_.__l.__size_, a2);
        uint64_t v42 = sub_100446354((int *)&buf);
        *(_DWORD *)uint64_t v93 = 136446210;
        *(void *)&v93[4] = v42;
        _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_DEFAULT,  "@WifiFlow, scanreq, false, reason, good fix, event, %{public}s",  v93,  0xCu);
        sub_1002DDAD8((uint64_t)&buf);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_1018820E8);
        }
        uint64_t v71 = qword_101934868;
        *(_DWORD *)uint64_t v93 = sub_100A694C8((uint64_t)&v93[8], a2);
        int v72 = sub_100446354((int *)v93);
        int v94 = 136446210;
        uint64_t v95 = v72;
        uint64_t v73 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v71,  0LL,  "@WifiFlow, scanreq, false, reason, good fix, event, %{public}s",  &v94,  12);
        sub_1002DDAD8((uint64_t)v93);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PostPositionCalculationStateUpdate::HandleEvent::operator()(const Events::Wifi::Scan &) const",  "%s\n",  (const char *)v73);
        if (v73 != &buf) {
          free(v73);
        }
      }

      sub_100495EC8((int *)(a3 + 5968));
      return;
    }

    if (sub_1001CDAF8(a3 + 5968) == 1 && *(char *)(a2 + 48) >= 7)
    {
      if (sub_100496E10((unsigned int *)(a3 + 5968)) == 4)
      {
        int v46 = v6[73];
        if (v46 != 255) {
          goto LABEL_90;
        }
      }

      else
      {
        if (v6[44] && sub_100496E10((unsigned int *)(a3 + 5968)) == 2 && !v6[2])
        {
          LOBYTE(v46) = 10;
LABEL_90:
          sub_1004970CC(2u);
          double v47 = *((double *)p_vtable + 798);
          int v48 = sub_100496E24(a3 + 5968);
          char v49 = sub_100495E64((_DWORD *)(a3 + 5968));
          sub_100496B38((char *)(a3 + 5968), (uint64_t)&v84);
          uint64_t v50 = (char)v46;
          (*(void (**)(uint64_t *__return_ptr, void *, uint64_t))(*(void *)p_vtable[809] + 16LL))( &v79,  p_vtable[809],  v50);
          sub_100D899B4((uint64_t)&buf, v50, v48, v49, &v84, (uint64_t)&v79, v47);
          sub_100D87E94(a3 + 1664, (uint64_t)&buf);
          sub_100D87F30((uint64_t)&buf);
          if ((_BYTE)v83 && v80)
          {
            uint64_t v81 = v80;
            operator delete(v80);
          }

          if (SHIBYTE(v85) < 0) {
            operator delete((void *)v84);
          }
          int v51 = (uint64_t **)(*(void *)(a3 + 6424) + 56LL);
          buf.__r_.__value_.__r.__words[0] = a3 + 1688;
          __int128 v52 = sub_1002E2A90(v51, (const void **)(a3 + 1688), (uint64_t)&unk_1012CF090, (__int128 **)&buf);
          ++*((_DWORD *)v52 + 14);
          uint64_t v53 = *(void *)(a3 + 6424);
          sub_1010DDBC0(&buf, "total");
          *(void *)uint64_t v93 = &buf;
          uint64_t v54 = sub_1002E2BC8( (uint64_t **)(v53 + 56),  (const void **)&buf.__r_.__value_.__l.__data_,  (uint64_t)&unk_1012CF090,  (_OWORD **)v93);
          ++*((_DWORD *)v54 + 14);
          uint64_t v55 = *(void *)(a3 + 6424);
          if (*(_BYTE *)(a3 + 1744)) {
            __int16 v56 = *(unsigned __int8 *)(a3 + 1712) | 0x100;
          }
          else {
            __int16 v56 = 0;
          }
          sub_1002DAEE8(*(char *)(a3 + 1664), v56, &buf);
          *(void *)uint64_t v93 = &buf;
          __int16 v57 = sub_1002E2BC8( (uint64_t **)(v55 + 80),  (const void **)&buf.__r_.__value_.__l.__data_,  (uint64_t)&unk_1012CF090,  (_OWORD **)v93);
          ++*((_DWORD *)v57 + 14);
          uint64_t v58 = *(void *)(a3 + 6424);
          sub_1010DDBC0(&buf, "total");
          *(void *)uint64_t v93 = &buf;
          uint64_t v59 = sub_1002E2BC8( (uint64_t **)(v58 + 80),  (const void **)&buf.__r_.__value_.__l.__data_,  (uint64_t)&unk_1012CF090,  (_OWORD **)v93);
          ++*((_DWORD *)v59 + 14);
          sub_100496E4C(a3 + 5968);
          goto LABEL_118;
        }

        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_1018820E8);
        }
        __int128 v60 = (os_log_s *)qword_101934868;
        if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
        {
          buf.__r_.__value_.__r.__words[0] = 68289026LL;
          LOWORD(buf.__r_.__value_.__r.__words[1]) = 2082;
          *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
          _os_log_impl( (void *)&_mh_execute_header,  v60,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:#post-wifi-position-calculation-state-update, dont issue a scan}",  (uint8_t *)&buf,  0x12u);
        }

        sub_10049609C(a3 + 5968, 5, 4u, v8);
      }

      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_1018820E8);
      }
      __int128 v61 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
      {
        buf.__r_.__value_.__r.__words[0] = 68289026LL;
        LOWORD(buf.__r_.__value_.__r.__words[1]) = 2082;
        *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
        _os_log_impl( (void *)&_mh_execute_header,  v61,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:#post-wifi-position-calculation-state-update, stop after fast scan}",  (uint8_t *)&buf,  0x12u);
      }

      sub_100495EC8((int *)(a3 + 5968));
    }

void sub_100D896AC(_Unwind_Exception *a1)
{
}

void sub_100D89800(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  if (*(_BYTE *)(a1 + 6376))
  {
    sub_1004970CC(3u);
  }

void sub_100D89870(_Unwind_Exception *a1)
{
}

void sub_100D89888(uint64_t *a1@<X0>, int *a2@<X1>, _DWORD *a3@<X8>)
{
  int v5 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      unint64_t v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }

  sub_1002E1244((uint64_t)&v10);
  sub_1002E1094((uint64_t)&v9);
  sub_1002DDAD8((uint64_t)v8);
}

void sub_100D8996C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100D89988(id a1)
{
  qword_101934868 = (uint64_t)os_log_create("com.apple.locationd.Position", "WifiPosition");
}

uint64_t sub_100D899B4(uint64_t a1, char a2, int a3, char a4, __int128 *a5, uint64_t a6, double a7)
{
  *(_BYTE *)a1 = a2;
  *(double *)(a1 + 8) = a7;
  *(_DWORD *)(a1 + 16) = a3;
  *(_BYTE *)(a1 + 20) = a4;
  uint64_t v9 = a1 + 24;
  if (*((char *)a5 + 23) < 0)
  {
    sub_1010DD48C((_BYTE *)v9, *(void **)a5, *((void *)a5 + 1));
  }

  else
  {
    __int128 v10 = *a5;
    *(void *)(v9 + 16) = *((void *)a5 + 2);
    *(_OWORD *)uint64_t v9 = v10;
  }

  *(_BYTE *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 80) = 0;
  if (*(_BYTE *)(a6 + 32))
  {
    *(_BYTE *)(a1 + 48) = *(_BYTE *)a6;
    *(void *)(a1 + 64) = 0LL;
    *(void *)(a1 + 72) = 0LL;
    *(void *)(a1 + 56) = 0LL;
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a6 + 8);
    *(void *)(a1 + 72) = *(void *)(a6 + 24);
    *(void *)(a6 + 8) = 0LL;
    *(void *)(a6 + 16) = 0LL;
    *(void *)(a6 + sub_100BDC958(v1 + 24) = 0LL;
    *(_BYTE *)(a1 + 80) = 1;
  }

  return a1;
}

__n128 sub_100D89A50(uint64_t a1, __int128 *a2)
{
  uint64_t v4 = *(_OWORD **)a1;
  __int128 v5 = *a2;
  __int128 v6 = a2[2];
  v4[1] = a2[1];
  v4[2] = v6;
  *uint64_t v4 = v5;
  __int128 v7 = a2[3];
  __int128 v8 = a2[4];
  __int128 v9 = a2[5];
  *(_OWORD *)((char *)v4 + 89) = *(__int128 *)((char *)a2 + 89);
  v4[4] = v8;
  v4[5] = v9;
  _OWORD v4[3] = v7;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *((void *)a2 + 14);
  *(_BYTE *)(v10 + 8) = *((_BYTE *)a2 + 120);
  *(void *)uint64_t v10 = v11;
  __int128 v12 = (void **)(v10 + 16);
  __int128 v13 = a2 + 8;
  __int128 v14 = *v13;
  *(void *)(v10 + 32) = *((void *)v13 + 2);
  *(_OWORD *)__int128 v12 = v14;
  *((_BYTE *)a2 + 151) = 0;
  *((_BYTE *)a2 + 128) = 0;
  __int128 v15 = *(__int128 *)((char *)a2 + 212);
  __int128 v16 = *(__int128 *)((char *)a2 + 200);
  __int128 v17 = *(__int128 *)((char *)a2 + 184);
  *(_OWORD *)(v10 + 56) = *(__int128 *)((char *)a2 + 168);
  *(_OWORD *)(v10 + 72) = v17;
  *(_OWORD *)(v10 + 88) = v16;
  *(_OWORD *)(v10 + 100) = v15;
  *(_OWORD *)(v10 + 40) = *(__int128 *)((char *)a2 + 152);
  uint64_t v18 = (void **)(v10 + 120);
  __n128 result = *(__n128 *)((char *)a2 + 232);
  *(void *)(v10 + 136) = *((void *)a2 + 31);
  *(__n128 *)uint64_t v18 = result;
  *((_BYTE *)a2 + 255) = 0;
  *((_BYTE *)a2 + 232) = 0;
  **(_DWORD **)(a1 + 16) = *((_DWORD *)a2 + 64);
  return result;
}

uint64_t sub_100D89B50(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(void *)a1 = v4;
  if (*((char *)a2 + 39) < 0)
  {
    sub_1010DD48C((_BYTE *)(a1 + 16), (void *)a2[2], a2[3]);
  }

  else
  {
    __int128 v5 = *((_OWORD *)a2 + 1);
    *(void *)(a1 + 32) = a2[4];
    *(_OWORD *)(a1 + 16) = v5;
  }

  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
  __int128 v6 = *(_OWORD *)(a2 + 7);
  __int128 v7 = *(_OWORD *)(a2 + 9);
  __int128 v8 = *(_OWORD *)(a2 + 11);
  *(_OWORD *)(a1 + 100) = *(_OWORD *)((char *)a2 + 100);
  *(_OWORD *)(a1 + 88) = v8;
  *(_OWORD *)(a1 + 72) = v7;
  *(_OWORD *)(a1 + 56) = v6;
  __int128 v9 = (_BYTE *)(a1 + 120);
  if (*((char *)a2 + 143) < 0)
  {
    sub_1010DD48C(v9, (void *)a2[15], a2[16]);
  }

  else
  {
    __int128 v10 = *(_OWORD *)(a2 + 15);
    *(void *)(a1 + 136) = a2[17];
    *(_OWORD *)__int128 v9 = v10;
  }

  return 24LL;
}

void sub_100D89C10(_Unwind_Exception *exception_object)
{
}

__n128 sub_100D89C2C(uint64_t a1, uint64_t a2)
{
  if (*(unsigned __int8 *)(a1 + 32) == *(unsigned __int8 *)(a2 + 32))
  {
    if (*(_BYTE *)(a1 + 32))
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      result.n128_u64[0] = sub_100007664(a1 + 8, (__n128 *)(a2 + 8)).n128_u64[0];
    }
  }

  else if (*(_BYTE *)(a1 + 32))
  {
    uint64_t v4 = *(void **)(a1 + 8);
    if (v4)
    {
      *(void *)(a1 + 16) = v4;
      operator delete(v4);
    }

    *(_BYTE *)(a1 + 32) = 0;
  }

  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(void *)(a1 + 16) = 0LL;
    *(void *)(a1 + sub_100BDC958(v1 + 24) = 0LL;
    *(void *)(a1 + 8) = 0LL;
    __n128 result = *(__n128 *)(a2 + 8);
    *(__n128 *)(a1 + 8) = result;
    *(void *)(a1 + sub_100BDC958(v1 + 24) = *(void *)(a2 + 24);
    *(void *)(a2 + 8) = 0LL;
    *(void *)(a2 + 16) = 0LL;
    *(void *)(a2 + sub_100BDC958(v1 + 24) = 0LL;
    *(_BYTE *)(a1 + 32) = 1;
  }

  return result;
}

__n128 sub_100D89CC0(uint64_t a1, __int128 *a2)
{
  __int128 v2 = *a2;
  *(void *)(a1 + 13) = *(void *)((char *)a2 + 13);
  *(_OWORD *)a1 = v2;
  __n128 result = *(__n128 *)((char *)a2 + 24);
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  *(__n128 *)(a1 + sub_100BDC958(v1 + 24) = result;
  *((void *)a2 + 4) = 0LL;
  *((void *)a2 + 5) = 0LL;
  *((void *)a2 + 3) = 0LL;
  *(_BYTE *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 80) = 0;
  if (*((_BYTE *)a2 + 80))
  {
    *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
    *(void *)(a1 + 64) = 0LL;
    *(void *)(a1 + 72) = 0LL;
    *(void *)(a1 + 56) = 0LL;
    __n128 result = *(__n128 *)((char *)a2 + 56);
    *(__n128 *)(a1 + 56) = result;
    *(void *)(a1 + 72) = *((void *)a2 + 9);
    *((void *)a2 + 7) = 0LL;
    *((void *)a2 + 8) = 0LL;
    *((void *)a2 + 9) = 0LL;
    *(_BYTE *)(a1 + 80) = 1;
  }

  return result;
}

void **sub_100D89D2C(uint64_t *a1, uint64_t a2)
{
  unint64_t v6 = a1[2];
  __n128 result = (void **)(a1 + 2);
  unint64_t v5 = v6;
  __int128 v7 = *(result - 1);
  if ((unint64_t)v7 >= v6)
  {
    unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v7 - *a1) >> 3);
    unint64_t v10 = v9 + 1;
    if (v9 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_100007008();
    }
    unint64_t v11 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - *a1) >> 3);
    if (2 * v11 > v10) {
      unint64_t v10 = 2 * v11;
    }
    if (v11 >= 0x555555555555555LL) {
      unint64_t v12 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v12 = v10;
    }
    v16[4] = result;
    __int128 v13 = (char *)sub_10000701C((uint64_t)result, v12);
    __int128 v14 = &v13[24 * v9];
    v16[0] = v13;
    v16[1] = v14;
    v16[3] = &v13[24 * v15];
    *((void *)v14 + 1) = 0LL;
    *((void *)v14 + 2) = 0LL;
    *(void *)__int128 v14 = 0LL;
    *(_OWORD *)__int128 v14 = *(_OWORD *)a2;
    *((void *)v14 + 2) = *(void *)(a2 + 16);
    *(void *)a2 = 0LL;
    *(void *)(a2 + 8) = 0LL;
    *(void *)(a2 + 16) = 0LL;
    void v16[2] = v14 + 24;
    sub_100682F38(a1, v16);
    __int128 v8 = (void *)a1[1];
    __n128 result = sub_1006830C8(v16);
  }

  else
  {
    *__int128 v7 = 0LL;
    v7[1] = 0LL;
    v7[2] = 0LL;
    *(_OWORD *)__int128 v7 = *(_OWORD *)a2;
    v7[2] = *(void *)(a2 + 16);
    *(void *)a2 = 0LL;
    *(void *)(a2 + 8) = 0LL;
    *(void *)(a2 + 16) = 0LL;
    __int128 v8 = v7 + 3;
    a1[1] = (uint64_t)(v7 + 3);
  }

  a1[1] = (uint64_t)v8;
  return result;
}

void sub_100D89E54(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_100D89E68(int *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  double v3 = a1 + 2;
  switch(*a1 ^ (*a1 >> 31))
  {
    case 0:
      uint64_t v4 = a2;
      goto LABEL_3;
    case 1:
      uint64_t v4 = a2;
      goto LABEL_3;
    case 2:
      uint64_t v4 = a2;
      goto LABEL_3;
    case 3:
      sub_100D89800(a2, a3);
      return;
    case 4:
      uint64_t v4 = a2;
      goto LABEL_3;
    case 5:
      uint64_t v4 = a2;
      goto LABEL_3;
    case 6:
      uint64_t v4 = a2;
      goto LABEL_3;
    case 7:
      sub_100D88564(a2, (uint64_t)v3, (uint64_t)a3);
      return;
    case 8:
      sub_100D86968(a2, (uint64_t)a3);
      return;
    case 9:
      uint64_t v4 = a2;
      goto LABEL_3;
    case 0xA:
      uint64_t v4 = a2;
      goto LABEL_3;
    case 0xB:
      uint64_t v4 = a2;
      goto LABEL_3;
    case 0xC:
      uint64_t v4 = a2;
      goto LABEL_3;
    case 0xD:
      uint64_t v4 = a2;
      goto LABEL_3;
    case 0xE:
      uint64_t v4 = a2;
      goto LABEL_3;
    case 0xF:
      uint64_t v4 = a2;
      goto LABEL_3;
    case 0x10:
      uint64_t v4 = a2;
      goto LABEL_3;
    case 0x11:
      uint64_t v4 = a2;
      goto LABEL_3;
    case 0x12:
      uint64_t v4 = a2;
      goto LABEL_3;
    case 0x13:
      uint64_t v4 = a2;
      goto LABEL_3;
    case 0x14:
      sub_100D84C70(a2, (uint64_t)a3);
      return;
    case 0x15:
      uint64_t v4 = a2;
      goto LABEL_3;
    case 0x16:
      sub_100D864A4(a2, v3, (uint64_t)a3);
      return;
    case 0x17:
      uint64_t v4 = a2;
      goto LABEL_3;
    case 0x18:
      sub_100D86CF0(a2, (uint64_t)v3, (uint64_t)a3);
      return;
    case 0x19:
      uint64_t v4 = a2;
      goto LABEL_3;
    case 0x1A:
      uint64_t v4 = a2;
      goto LABEL_3;
    case 0x1B:
      uint64_t v4 = a2;
      goto LABEL_3;
    case 0x1C:
      uint64_t v4 = a2;
LABEL_3:
      sub_100D8A070(v4, a3);
      break;
    case 0x1D:
      sub_100D83AEC(a2, (uint64_t)a3);
      break;
    default:
      sub_1002DDAB0();
  }

void sub_100D8A070(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  if (*(double *)(a1 + 1428) != -1.0 || *(_DWORD *)(a1 + 1564))
  {
    sub_10126E708();
    sub_100D8A0B0();
  }

  else
  {
    sub_100D83A04(a2, a1);
  }

void sub_100D8A0D8()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1019361B8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1019361B8))
    {
      qword_1019361A0 = 0LL;
      qword_1019361A8 = 0LL;
      qword_1019361B0 = 0LL;
      uint64_t v1 = operator new(6uLL);
      qword_1019361A8 = (uint64_t)(v1 + 3);
      qword_1019361B0 = (uint64_t)(v1 + 3);
      *(_DWORD *)uint64_t v1 = 151521030;
      v1[2] = 3082;
      qword_1019361A0 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1001CDCD0, &qword_1019361A0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1019361B8);
    }
  }

void sub_100D8A174(_Unwind_Exception *a1)
{
}

void sub_100D8A18C()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1019361D8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1019361D8))
    {
      qword_1019361C0 = 0LL;
      qword_1019361C8 = 0LL;
      qword_1019361D0 = 0LL;
      uint64_t v1 = operator new(2uLL);
      qword_1019361C0 = (uint64_t)v1;
      *uint64_t v1 = 256;
      qword_1019361C8 = (uint64_t)(v1 + 1);
      qword_1019361D0 = (uint64_t)(v1 + 1);
      __cxa_atexit((void (*)(void *))sub_1001CDD00, &qword_1019361C0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1019361D8);
    }
  }

void sub_100D8A218(_Unwind_Exception *a1)
{
}

void sub_100D8A230()
{
  dword_10199E5C0 = 450;
}

uint64_t sub_100D8A584(uint64_t a1, char *a2, int a3, uint64_t a4, float a5, uint64_t a6, int a7, uint64_t a8)
{
  *(void *)a1 = off_101882118;
  *(void *)(a1 + 8) = 0LL;
  sub_1010DDBC0((void *)(a1 + 16), a2);
  sub_1002E4C3C(a1 + 40, a2, 0LL, 1LL);
  *(_BYTE *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 60) = 0;
  *(float *)(a1 + 64) = a5;
  *(_DWORD *)(a1 + 68) = a7;
  *(void *)(a1 + 72) = 0LL;
  *(void *)(a1 + 80) = a4;
  *(void *)(a1 + 88) = 0LL;
  *(void *)(a1 + 96) = a8;
  uint64_t v26 = a1 + 40;
  (*(void (**)(uint64_t))(*(void *)(a1 + 40) + 16LL))(a1 + 40);
  __int16 v27 = 256;
  if (a3)
  {
    sub_1010DDBC0(&__p, "");
    __int16 v23 = 0;
    uint64_t v22 = 0LL;
    if ((char)__p.__r_.__value_.__s.__size_ < 0)
    {
      sub_1010DD48C(&v24, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
      uint64_t v25 = 0LL;
    }

    else
    {
      std::string v24 = __p;
      uint64_t v25 = 0LL;
    }

    std::string::assign(&v24, ":memory:");
    uint64_t v15 = operator new(0x88uLL);
    sub_1003B35F4(v15, &v22);
    uint64_t v16 = *(void *)(a1 + 8);
    *(void *)(a1 + 8) = v15;
    if (v16) {
      (*(void (**)(uint64_t))(*(void *)v16 + 8LL))(v16);
    }
  }

  __int128 v17 = *(void (****)(void, uint64_t, void *))(a1 + 80);
  v28[0] = &off_10182BE40;
  v28[1] = sub_100D8A874;
  double v29 = v28;
  (**v17)(v17, a1, v28);
  uint64_t v18 = v29;
  if (v29 == v28)
  {
    uint64_t v19 = 4LL;
    uint64_t v18 = v28;
    goto LABEL_14;
  }

  if (v29)
  {
    uint64_t v19 = 5LL;
LABEL_14:
    (*(void (**)(void))(*v18 + 8 * v19))();
  }

  (*(void (**)(uint64_t))(*(void *)(a1 + 40) + 24LL))(a1 + 40);
  return a1;
}

void sub_100D8A798( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, uint64_t a24, char a25, uint64_t a26, uint64_t a27, char a28, uint64_t a29, uint64_t a30, uint64_t a31)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_1011C52D0((uint64_t)&a25);
  sub_1002E4CB0(v32);
  uint64_t v35 = *(void *)(v31 + 8);
  *(void *)(v31 + 8) = 0LL;
  if (v35) {
    (*(void (**)(uint64_t))(*(void *)v35 + 8LL))(v35);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100D8A874(uint64_t a1, int a2)
{
  if (a2) {
    return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 24LL))(a1);
  }
  else {
    return 0LL;
  }
}

uint64_t sub_100D8A88C(uint64_t a1)
{
  *(void *)a1 = off_101882118;
  uint64_t v2 = a1 + 40;
  (*(void (**)(uint64_t))(*(void *)(a1 + 40) + 16LL))(a1 + 40);
  double v3 = *(void **)(a1 + 72);
  if (v3)
  {

    *(void *)(a1 + 72) = 0LL;
  }

  (*(void (**)(uint64_t))(*(void *)v2 + 24LL))(v2);
  sub_1002E4CB0(v2);
  uint64_t v4 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = 0LL;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  return a1;
}

BOOL sub_100D8A930(uint64_t a1)
{
  double Current = CFAbsoluteTimeGetCurrent();
  if (Current < 441763200.0 || Current > 3628972800.0)
  {
    if ((byte_10199E5C4 & 1) == 0) {
      byte_10199E5C4 = 1;
    }
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101882168);
    }
    unint64_t v5 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_ERROR))
    {
      int v7 = 68289282;
      int v8 = 0;
      __int16 v9 = 2082;
      unint64_t v10 = "";
      __int16 v11 = 1026;
      int v12 = (int)Current;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_ERROR,  "{msg%{public}.0s:CL database error, CFAbsoluteTimeGetCurrent:%{public}d}",  (uint8_t *)&v7,  0x18u);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101882168);
      }
    }

    unint64_t v6 = (os_log_s *)qword_1019344B8;
    if (os_signpost_enabled((os_log_t)qword_1019344B8))
    {
      int v7 = 68289282;
      int v8 = 0;
      __int16 v9 = 2082;
      unint64_t v10 = "";
      __int16 v11 = 1026;
      int v12 = (int)Current;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v6,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "CL database error",  "{msg%{public}.0s:CL database error, CFAbsoluteTimeGetCurrent:%{public}d}",  (uint8_t *)&v7,  0x18u);
    }
  }

  else
  {
    byte_10199E5C4 = 0;
    uint64_t v3 = *(void *)(a1 + 8);
    if (v3) {
      return sub_1003C1048(v3);
    }
  }

  return 0LL;
}

BOOL sub_100D8AB44(uint64_t a1, double *a2)
{
  BOOL result = *a2 <= 3628972800.0 && *a2 >= 441763200.0;
  if (result || (byte_10199E5C4 & 1) == 0) {
    byte_10199E5C4 = !result;
  }
  return result;
}

BOOL sub_100D8AB84(uint64_t a1)
{
  uint64_t v2 = a1 + 40;
  (*(void (**)(uint64_t))(*(void *)(a1 + 40) + 16LL))(a1 + 40);
  BOOL v3 = sub_100D8A930(a1);
  (*(void (**)(uint64_t))(*(void *)v2 + 24LL))(v2);
  return v3;
}

void sub_100D8ABEC(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100D8AC00(uint64_t a1)
{
  uint64_t v3 = a1 + 40;
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v14 = a1 + 40;
  (*(void (**)(uint64_t))(v2 + 16))(a1 + 40);
  __int16 v15 = 256;
  if (sub_100D8A930(a1))
  {
    if (*(void *)(a1 + 72)) {
      __assert_rtn("setDatabaseAccessible", "CLActivityRecorderBaseDb.mm", 90, "fInMemoryTransaction == nil");
    }
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101882168);
    }
    uint64_t v4 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
    {
      unint64_t v5 = (void *)(a1 + 16);
      *(_DWORD *)std::stringbuf::string_type buf = 68289282;
      int v17 = 0;
      __int16 v18 = 2082;
      uint64_t v19 = "";
      __int16 v20 = 2082;
      uint64_t v21 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:Database is already opened., name:%{public, location:escape_only}s}",  buf,  0x1Cu);
    }

void sub_100D8AEF8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
}

void sub_100D8AF38(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 72)) {
    goto LABEL_18;
  }
  LODWORD(v4) = *(char *)(a1 + 39);
  if ((v4 & 0x80000000) != 0)
  {
    sub_1010DD48C(__p, *(void **)(a1 + 16), *(void *)(a1 + 24));
    LODWORD(v4) = *(char *)(a1 + 39);
    if ((v4 & 0x80000000) != 0)
    {
      unint64_t v4 = *(void *)(a1 + 24);
      goto LABEL_6;
    }
  }

  else
  {
    *(_OWORD *)std::string __p = *(_OWORD *)(a1 + 16);
    uint64_t v24 = *(void *)(a1 + 32);
  }

  unint64_t v4 = v4;
LABEL_6:
  if (v4 >= 0x1A)
  {
    std::string::basic_string( (std::string *)v25,  (const std::string *)(a1 + 16),  0LL,  0x1AuLL,  (std::allocator<char> *)v22);
    if (SHIBYTE(v24) < 0) {
      operator delete(__p[0]);
    }
    *(_OWORD *)std::string __p = *(_OWORD *)v25;
    uint64_t v24 = *(void *)&v25[16];
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101882168);
    }
    unint64_t v5 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_ERROR,  "DB name length exceeds allowed size of OS transaction name. Truncating",  v25,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(v25, 0x65CuLL);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101882168);
      }
      v22[0] = 0;
      uint64_t v21 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  v25,  1628LL,  &_mh_execute_header,  qword_1019344B8,  16LL,  "DB name length exceeds allowed size of OS transaction name. Truncating",  v22,  2);
      sub_10029211C("Generic", 1LL, 0, 0LL, "void CLActivityRecorderBaseDb::initDb(std::string)", "%s\n", v21);
      if (v21 != v25) {
        free(v21);
      }
    }
  }

  uint64_t v6 = __p;
  if (v24 < 0) {
    uint64_t v6 = (void **)__p[0];
  }
  snprintf(__str, 0x2FuLL, "%s.InMemoryTransaction", (const char *)v6);
  *(void *)(a1 + 72) = -[CLOSTransaction initWithDescription:]( objc_alloc(&OBJC_CLASS___CLOSTransaction),  "initWithDescription:",  __str);
  if (SHIBYTE(v24) < 0) {
    operator delete(__p[0]);
  }
LABEL_18:
  int v7 = operator new(0x88uLL);
  int v8 = (*(uint64_t (**)(void))(**(void **)(a1 + 80) + 8LL))(*(void *)(a1 + 80));
  int v9 = *(_DWORD *)(a1 + 68);
  uint64_t v10 = *(void *)(a1 + 96);
  *(_DWORD *)uint64_t v25 = v8;
  *(_DWORD *)&v25[4] = v9;
  *(_WORD *)&v25[8] = 0;
  if (*(char *)(a2 + 23) < 0)
  {
    sub_1010DD48C(&v25[16], *(void **)a2, *(void *)(a2 + 8));
  }

  else
  {
    *(_OWORD *)&v25[16] = *(_OWORD *)a2;
    uint64_t v26 = *(void *)(a2 + 16);
  }

  uint64_t v27 = v10;
  sub_1003B35F4(v7, v25);
  uint64_t v11 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  if (v11) {
    (*(void (**)(uint64_t))(*(void *)v11 + 8LL))(v11);
  }
  if (SHIBYTE(v26) < 0) {
    operator delete(*(void **)&v25[16]);
  }
  if (*(_DWORD *)(a1 + 68) == 7)
  {
    int v12 = v25;
    sub_1003B5CA0(*(char **)(a1 + 8), (uint64_t)v25);
    if (v25[23] < 0) {
      int v12 = *(const char **)v25;
    }
    uid_t v13 = getuid();
    gid_t v14 = getgid();
    sub_100292CFC(v12, v13, v14, 0x1EDu);
    if ((v25[23] & 0x80000000) != 0) {
      operator delete(*(void **)v25);
    }
    __int16 v15 = v25;
    sub_100309AD8(2, (std::string *)v25);
    if (v25[23] < 0) {
      __int16 v15 = *(const char **)v25;
    }
    uid_t v16 = getuid();
    gid_t v17 = getgid();
    sub_100292CFC(v15, v16, v17, 0x1EDu);
    if ((v25[23] & 0x80000000) != 0) {
      operator delete(*(void **)v25);
    }
  }

  if (sub_100D8A930(a1))
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101882168);
    }
    __int16 v18 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v19 = (void *)(a1 + 16);
      *(void *)uint64_t v25 = 68289282LL;
      *(_WORD *)&v25[8] = 2082;
      *(void *)&_BYTE v25[10] = "";
      *(_WORD *)&v25[18] = 2082;
      *(void *)&v25[20] = v19;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:Database can now be opened!, name:%{public, location:escape_only}s}",  v25,  0x1Cu);
    }
  }

  __int16 v20 = *(void **)(a1 + 72);
  if (v20)
  {

    *(void *)(a1 + 72) = 0LL;
  }

void sub_100D8B3A0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, void *a22, uint64_t a23, int a24, __int16 a25, char a26, char a27)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

char *sub_100D8B408@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1003B5CA0(*(char **)(a1 + 8), a2);
}

uint64_t sub_100D8B410(uint64_t a1, const char *a2, uint64_t *a3, char **a4)
{
  return sub_1003C3AC8(*(void *)(a1 + 8), a2, a3, a4);
}

uint64_t sub_100D8B418(uint64_t a1, const char *a2, uint64_t *a3)
{
  return sub_1003C4060(*(void *)(a1 + 8), a2, a3);
}

BOOL sub_100D8B420(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4, char *a5, double a6)
{
  uint64_t v6 = *(void *)(a1 + 8);
  return v6 && (uint64_t v7 = *(void *)(a2 + 8)) != 0 && sub_1003B64B8(v6, v7, a3, a4, a5, a6);
}

uint64_t sub_100D8B43C(uint64_t *a1, uint64_t a2)
{
  (*(void (**)(std::stringbuf::string_type *__return_ptr))(*a1 + 32))(__p);
  if ((char)__p[0].__r_.__value_.__s.__size_ < 0)
  {
    std::string::size_type size = __p[0].__r_.__value_.__l.__size_;
    operator delete(__p[0].__r_.__value_.__l.__data_);
    if (size) {
      goto LABEL_3;
    }
LABEL_22:
    sub_10126E86C();
  }

  if (!__p[0].__r_.__value_.__s.__size_) {
    goto LABEL_22;
  }
LABEL_3:
  sub_1003C0454(a1[1]);
  double Current = CFAbsoluteTimeGetCurrent();
  sub_10000CE18((uint64_t)v25);
  unint64_t v5 = sub_10000CF44(&v26, (uint64_t)"DELETE FROM ", 12LL);
  (*(void (**)(std::stringbuf::string_type *__return_ptr, uint64_t *))(*a1 + 32))(__p, a1);
  if ((__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t v6 = __p;
  }
  else {
    uint64_t v6 = (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
  }
  if ((__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t v7 = __p[0].__r_.__value_.__s.__size_;
  }
  else {
    uint64_t v7 = __p[0].__r_.__value_.__l.__size_;
  }
  int v8 = sub_10000CF44(v5, (uint64_t)v6, v7);
  sub_10000CF44(v8, (uint64_t)" WHERE startTime < ?", 20LL);
  uint64_t v9 = a1[1];
  std::stringbuf::str(__p, &v27);
  if ((__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t v10 = __p;
  }
  else {
    uint64_t v10 = (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
  }
  sub_1003C0D54(v9, (char *)v10, &v30);
  uint64_t v11 = v30;
  uint64_t v30 = 0LL;
  int v12 = (sqlite3_stmt *)sub_100019240(v11);
  if (sub_1003B7480(v12, 1, Current - *(double *)(*(void *)(a2 + 8) - 24LL)))
  {
    uint64_t v13 = a1[1];
    gid_t v14 = (sqlite3_stmt *)sub_100019240(v11);
    sub_1003BB2BC(v13, v14);
    uint64_t v15 = (*(int (**)(uint64_t *))(*a1 + 48))(a1);
  }

  else
  {
    uint64_t v15 = -1LL;
  }

  sub_1003C05BC(a1[1]);
  if (!*(_BYTE *)(*(void *)(a2 + 8) - 8LL))
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101882168);
    }
    gid_t v17 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
    {
      int v18 = *(unsigned __int8 *)(*(void *)(a2 + 8) - 8LL);
      LODWORD(__p[0].__r_.__value_.__l.__data_) = 67109120;
      HIDWORD(__p[0].__r_.__value_.__r.__words[0]) = v18;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEBUG,  "Calling reduceFreePages() after aggregation, skipReduceFreePages, %d",  (uint8_t *)__p,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101882168);
      }
      int v23 = *(unsigned __int8 *)(*(void *)(a2 + 8) - 8LL);
      LODWORD(v30) = 67109120;
      HIDWORD(v30) = v23;
      uint64_t v24 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_1019344B8,  2LL,  "Calling reduceFreePages() after aggregation, skipReduceFreePages, %d",  &v30);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual long CLActivityRecorderBaseDb::aggregateRecords(const CLAggregationRules &)",  "%s\n",  (const char *)v24);
      if (v24 != __p) {
        free(v24);
      }
    }

    uint64_t v19 = a1[1];
    else {
      uint64_t v20 = *(void *)(v19 + 88);
    }
    sub_1003C1EC0(v19, v20);
  }

  if (v11) {
    (*(void (**)(uint64_t))(*(void *)v11 + 8LL))(v11);
  }
  *(void *)((char *)v25
  uint64_t v26 = v21;
  std::streambuf::~streambuf(&v27);
  std::ios::~ios(&v28);
  return v15;
}

void sub_100D8B83C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, void *__p, uint64_t a48, int a49, __int16 a50,char a51,char a52)
{
  if (v52) {
    (*(void (**)(uint64_t))(*(void *)v52 + 8LL))(v52);
  }
  sub_1011F8850((uint64_t)&a12);
  _Unwind_Resume(a1);
}

uint64_t sub_100D8B89C(void *a1)
{
  (*(void (**)(void **__return_ptr))(*a1 + 32LL))(v17);
  if (SHIBYTE(v18) < 0)
  {
    gid_t v14 = v17[1];
    operator delete(v17[0]);
    if (v14) {
      goto LABEL_3;
    }
LABEL_27:
    sub_10126E9E0();
  }

  if (!HIBYTE(v18)) {
    goto LABEL_27;
  }
LABEL_3:
  sub_10000CE18((uint64_t)v17);
  uint64_t v3 = sub_10000CF44(&v18, (uint64_t)"SELECT COUNT(*) FROM ", 21LL);
  (*(void (**)(std::stringbuf::string_type *__return_ptr, void *))(*a1 + 32LL))(&__p, a1);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t size = __p.__r_.__value_.__s.__size_;
  }
  else {
    uint64_t size = __p.__r_.__value_.__l.__size_;
  }
  sub_10000CF44(v3, (uint64_t)p_p, size);
  uint64_t v6 = a1[1];
  std::stringbuf::str(&__p, &v19);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t v7 = &__p;
  }
  else {
    uint64_t v7 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
  }
  sub_1003C0D54(v6, (char *)v7, &v15);
  uint64_t v8 = v15;
  uint64_t v15 = 0LL;
  uint64_t v9 = (sqlite3_stmt *)sub_100019240(v8);
  int v10 = sqlite3_step(v9);
  if (v10 == 100)
  {
    uint64_t v11 = (sqlite3_stmt *)sub_100019240(v8);
    uint64_t v1 = sqlite3_column_int(v11, 0);
  }

  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
  }
  *(void **)((char *)v17
  uint64_t v18 = v12;
  std::streambuf::~streambuf(&v19);
  std::ios::~ios(&v20);
  if (v10 != 100) {
    return 0xFFFFFFFFLL;
  }
  return v1;
}

uint64_t sub_100D8BAC8(void *a1)
{
  uint64_t v2 = a1 + 5;
  (*(void (**)(void *))(a1[5] + 16LL))(a1 + 5);
  (*(void (**)(void *))(*a1 + 56LL))(a1);
  return (*(uint64_t (**)(void *))(*v2 + 24LL))(v2);
}

void sub_100D8BB30(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100D8BB44(void *a1)
{
  (*(void (**)(void **__return_ptr))(*a1 + 32LL))(v17);
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if (HIBYTE(v18)) {
      goto LABEL_3;
    }
LABEL_27:
    sub_10126EB54();
  }

  gid_t v14 = v17[1];
  operator delete(v17[0]);
  if (!v14) {
    goto LABEL_27;
  }
LABEL_3:
  uint64_t result = sub_100D8A930((uint64_t)a1);
  if ((_DWORD)result)
  {
    sub_10000CE18((uint64_t)v17);
    uint64_t v3 = sub_10000CF44(&v18, (uint64_t)"DELETE FROM ", 12LL);
    (*(void (**)(std::stringbuf::string_type *__return_ptr, void *))(*a1 + 32LL))(&__p, a1);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t size = __p.__r_.__value_.__s.__size_;
    }
    else {
      uint64_t size = __p.__r_.__value_.__l.__size_;
    }
    sub_10000CF44(v3, (uint64_t)p_p, size);
    uint64_t v6 = a1[1];
    std::stringbuf::str(&__p, &v19);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v7 = &__p;
    }
    else {
      uint64_t v7 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(v6, (char *)v7, &v15);
    uint64_t v8 = v15;
    uint64_t v15 = 0LL;
    uint64_t v9 = a1[1];
    int v10 = (sqlite3_stmt *)sub_100019240(v8);
    sub_1003BB2BC(v9, v10);
    uint64_t v11 = a1[1];
    else {
      uint64_t v12 = *(void *)(v11 + 88);
    }
    sub_1003C1EC0(v11, v12);
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
    }
    *(void **)((char *)v17
    uint64_t v18 = v13;
    std::streambuf::~streambuf(&v19);
    return std::ios::~ios(&v20);
  }

  return result;
}

uint64_t sub_100D8BD60(uint64_t a1)
{
  return *(void *)(a1 + 88);
}

void sub_100D8BD68(id a1)
{
  qword_1019344B8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Motion");
}

uint64_t sub_100D8BD94()
{
  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_10199E5C8, (void *)&_mh_execute_header);
}

uint64_t sub_100D8BDD8(uint64_t a1)
{
  uint64_t v2 = a1 + 428;
  *(void *)a1 = 0LL;
  *(void *)(a1 + 8) = 0LL;
  *(_DWORD *)(a1 + 16) = 0xFFFF;
  *(void *)(a1 + 28) = 0LL;
  *(void *)(a1 + 20) = 0LL;
  *(_OWORD *)(a1 + 36) = xmmword_1012E0070;
  __asm { FMOV            V0.2D, #-1.0 }

  __int128 v9 = _Q0;
  *(_OWORD *)(a1 + 52) = _Q0;
  *(_OWORD *)(a1 + 68) = _Q0;
  *(_OWORD *)(a1 + 84) = _Q0;
  *(_DWORD *)(a1 + 100) = 0;
  *(void *)(a1 + 112) = 0LL;
  *(void *)(a1 + 120) = 0LL;
  *(void *)(a1 + 104) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 128) = 0;
  *(void *)(a1 + 132) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 140) = 0x7FFFFFFF;
  *(void *)(a1 + 144) = 0LL;
  *(void *)(a1 + 152) = 0LL;
  *(_BYTE *)(a1 + 168) = 0;
  *(void *)(a1 + 160) = 0LL;
  sub_100D2D9A4(a1 + 176);
  *(_WORD *)(a1 + 216) = 0;
  *(void *)(a1 + 2sub_100BDC958(v1 + 24) = 0LL;
  *(_BYTE *)(a1 + 232) = 0;
  *(void *)(a1 + 240) = 0LL;
  *(_BYTE *)(a1 + 248) = 0;
  *(void *)(a1 + 256) = 0LL;
  *(_BYTE *)(a1 + 264) = 0;
  *(void *)(a1 + 272) = 0LL;
  *(_BYTE *)(a1 + 280) = 0;
  *(_BYTE *)(a1 + 288) = 0;
  *(void *)(a1 + 296) = 0LL;
  *(_BYTE *)(a1 + 304) = 0;
  *(void *)(a1 + 312) = 0LL;
  *(_BYTE *)(a1 + 320) = 0;
  *(void *)(a1 + 328) = 0LL;
  *(_BYTE *)(a1 + 336) = 0;
  *(_OWORD *)(a1 + 344) = 0u;
  *(_OWORD *)(a1 + 360) = 0u;
  *(void *)(a1 + 376) = 1LL;
  *(_WORD *)(a1 + 384) = 0;
  *(void *)(a1 + 392) = 0LL;
  *(void *)(a1 + 400) = 0LL;
  *(_DWORD *)(a1 + 408) = 0xFFFF;
  *(void *)(a1 + 412) = 0LL;
  *(void *)(a1 + 420) = 0LL;
  *(_OWORD *)uint64_t v2 = xmmword_1012E0070;
  *(_OWORD *)(v2 + 16) = v9;
  *(_OWORD *)(v2 + 32) = v9;
  *(_OWORD *)(v2 + 48) = v9;
  *(_DWORD *)(a1 + 492) = 0;
  *(_DWORD *)(a1 + 520) = 0;
  *(void *)(a1 + 496) = 0xBFF0000000000000LL;
  *(void *)(a1 + 504) = 0LL;
  *(void *)(a1 + 512) = 0LL;
  *(void *)(v2 + 96) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 532) = 0x7FFFFFFF;
  *(void *)(a1 + 544) = 0LL;
  *(void *)(a1 + 536) = 0LL;
  *(_BYTE *)(a1 + 560) = 0;
  *(void *)(a1 + 552) = 0LL;
  *(void *)(a1 + 584) = 0LL;
  *(void *)(a1 + 576) = 0LL;
  *(void *)(a1 + 568) = a1 + 576;
  *(void *)(a1 + 656) = 0LL;
  *(_OWORD *)(a1 + 6sub_100BDC958(v1 + 24) = 0u;
  *(_OWORD *)(a1 + 640) = 0u;
  *(_OWORD *)(a1 + 592) = 0u;
  *(_OWORD *)(a1 + 608) = 0u;
  *(double *)a1 = sub_101171D4C();
  sub_100D8BF84(a1 + 344, 2uLL);
  return a1;
}

void sub_100D8BF58(_Unwind_Exception *a1)
{
  unint64_t v5 = v4;
  sub_100008390(v3, *v5);
  uint64_t v7 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 352) = v7;
    operator delete(v7);
  }

  _Unwind_Resume(a1);
}

void sub_100D8BF84(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 4);
  BOOL v3 = a2 >= v2;
  unint64_t v4 = a2 - v2;
  if (v4 != 0 && v3)
  {
    sub_100D90FB0((void **)a1, v4);
  }

  else if (!v3)
  {
    *(void *)(a1 + 8) = *(void *)a1 + 48 * a2;
  }

__n128 sub_100D8BFC4(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(a1 + 384) = sub_100869780(a2);
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 408) = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 4sub_100BDC958(v1 + 24) = v4;
  __int128 v5 = *(_OWORD *)(a2 + 64);
  __int128 v6 = *(_OWORD *)(a2 + 80);
  __int128 v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 488) = v6;
  *(_OWORD *)(a1 + 472) = v5;
  *(_OWORD *)(a1 + 456) = v7;
  __int128 v9 = *(_OWORD *)(a2 + 112);
  __n128 result = *(__n128 *)(a2 + 128);
  __int128 v10 = *(_OWORD *)(a2 + 140);
  *(_OWORD *)(a1 + 504) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 548) = v10;
  *(__n128 *)(a1 + 536) = result;
  *(_OWORD *)(a1 + 520) = v9;
  return result;
}

void sub_100D8C034(uint64_t a1, uint64_t a2)
{
  if (!*(_BYTE *)(a1 + 384) || !*(_BYTE *)(a1 + 385))
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_1018821A8);
    }
    uint64_t v15 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      int v16 = *(unsigned __int8 *)(a1 + 384);
      int v17 = *(unsigned __int8 *)(a1 + 385);
      LODWORD(buf[0]) = 67240448;
      DWORD1(buf[0]) = v16;
      WORD4(buf[0]) = 1026;
      *(_DWORD *)((char *)buf + 10) = v17;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "#LCStats,homeVisit,stats not calculated,isHomeVisit,%{public}d,isStatic,%{public}d",  (uint8_t *)buf,  0xEu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_1018821A8);
      }
      int v18 = *(unsigned __int8 *)(a1 + 384);
      int v19 = *(unsigned __int8 *)(a1 + 385);
      *(_DWORD *)uint64_t v55 = 67240448;
      *(_DWORD *)&v55[4] = v18;
      *(_WORD *)&v55[8] = 1026;
      *(_DWORD *)&v55[10] = v19;
      gid_t v14 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#LCStats,homeVisit,stats not calculated,isHomeVisit,%{public}d,isStatic,%{public}d",  v55,  14);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerCAStats::calcHomeVisitStats(const CLDaemonLocation &)",  "%s\n",  v14);
      goto LABEL_82;
    }

    return;
  }

  double v4 = sub_101171D4C();
  double v5 = *(double *)(a1 + 400);
  sub_1002F0B04(buf);
  double v6 = v4 - v5;
  else {
    double v7 = 300.0;
  }
  uint64_t v8 = (std::__shared_weak_count *)*((void *)&buf[0] + 1);
  if (*((void *)&buf[0] + 1))
  {
    __int128 v9 = (unint64_t *)(*((void *)&buf[0] + 1) + 8LL);
    do
      unint64_t v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }

  if (v6 < v7)
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_1018821A8);
    }
    uint64_t v11 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      float v12 = v6;
      LODWORD(buf[0]) = 134349056;
      *(double *)((char *)buf + 4) = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "#LCStats,homeVisit,stats not computed, duration being at rest for %{public}0.1f sec",  (uint8_t *)buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_1018821A8);
      }
      float v13 = v6;
      *(_DWORD *)uint64_t v55 = 134349056;
      *(double *)&v55[4] = v13;
      gid_t v14 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#LCStats,homeVisit,stats not computed, duration being at rest for %{public}0.1f sec",  v55,  12);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerCAStats::calcHomeVisitStats(const CLDaemonLocation &)",  "%s\n",  v14);
LABEL_82:
      return;
    }

    return;
  }

  sub_100D2DCA4((double *)(a1 + 176), a1 + 408, a2);
  double v22 = v21;
  uint64_t v23 = *(void *)(a1 + 576);
  if (!v23) {
    goto LABEL_38;
  }
  int v24 = *(_DWORD *)(a2 + 96);
  uint64_t v25 = a1 + 576;
  do
  {
    int v26 = *(_DWORD *)(v23 + 32);
    BOOL v27 = v26 < v24;
    if (v26 >= v24) {
      uint64_t v28 = (uint64_t *)v23;
    }
    else {
      uint64_t v28 = (uint64_t *)(v23 + 8);
    }
    if (!v27) {
      uint64_t v25 = v23;
    }
    uint64_t v23 = *v28;
  }

  while (*v28);
  if (v25 == a1 + 576 || v24 < *(_DWORD *)(v25 + 32))
  {
LABEL_38:
    memset((char *)&buf[1] + 8, 0, 40);
    double v29 = *(double *)(a2 + 20);
    *(double *)std::stringbuf::string_type buf = v21;
    *((double *)buf + 1) = v29;
    LODWORD(buf[1]) = *(_DWORD *)(a2 + 140);
    DWORD1(buf[1]) = 1;
    float v30 = v21;
    if (v30 >= 100.0)
    {
      if (v30 >= 200.0) {
        LODWORD(buf[2]) = 1;
      }
      else {
        HIDWORD(buf[1]) = 1;
      }
    }

    else
    {
      DWORD2(buf[1]) = 1;
    }

    if (v29 <= 0.0)
    {
      float v54 = 0.0;
    }

    else
    {
      float v31 = v22 / v29;
      float v54 = v31;
      if (v31 >= 1.0)
      {
        if (v31 >= 3.0) {
          HIDWORD(buf[2]) = 1;
        }
        else {
          DWORD2(buf[2]) = 1;
        }
        goto LABEL_49;
      }
    }

    DWORD1(buf[2]) = 1;
LABEL_49:
    *(float *)uint64_t v55 = v22;
    sub_100D8C96C(v20, buf, (float *)v55, &v54);
    *(void *)uint64_t v55 = a2 + 96;
    uint64_t v32 = sub_100D91130((uint64_t **)(a1 + 568), (int *)(a2 + 96), (uint64_t)&unk_1012CF090, (_DWORD **)v55);
    __int128 v33 = buf[1];
    *(_OWORD *)(v32 + 5) = buf[0];
    *(_OWORD *)(v32 + 7) = v33;
    *(_OWORD *)(v32 + 9) = buf[2];
    *(_OWORD *)((char *)v32 + 84) = *(_OWORD *)((char *)&buf[2] + 12);
    goto LABEL_50;
  }

  ++*(_DWORD *)(v25 + 60);
  float v38 = v21;
  if (v38 >= 100.0)
  {
    if (v38 >= 200.0) {
      ++*(_DWORD *)(v25 + 72);
    }
    else {
      ++*(_DWORD *)(v25 + 68);
    }
  }

  else
  {
    ++*(_DWORD *)(v25 + 64);
  }

  double v39 = *(double *)(a2 + 20);
  if (v39 <= 0.0)
  {
    float v54 = 0.0;
    goto LABEL_67;
  }

  float v40 = v22 / v39;
  float v54 = v40;
  if (v40 < 1.0)
  {
LABEL_67:
    ++*(_DWORD *)(v25 + 76);
    goto LABEL_68;
  }

  if (v40 >= 3.0) {
    ++*(_DWORD *)(v25 + 84);
  }
  else {
    ++*(_DWORD *)(v25 + 80);
  }
LABEL_68:
  *(float *)std::stringbuf::string_type buf = v22;
  sub_100D8C96C(v20, (_DWORD *)(v25 + 40), (float *)buf, &v54);
  if (v22 > *(double *)(v25 + 40))
  {
    *(double *)(v25 + 40) = v22;
    *(void *)(v25 + 48) = *(void *)(a2 + 20);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_1018821A8);
    }
    int v41 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v42 = *(void *)(a2 + 20);
      int v43 = *(_DWORD *)(a2 + 96);
      int v44 = *(_DWORD *)(a2 + 140);
      LODWORD(buf[0]) = 134218752;
      *(double *)((char *)buf + 4) = v22;
      WORD6(buf[0]) = 2048;
      *(void *)((char *)buf + 14) = v42;
      WORD3(buf[1]) = 1024;
      DWORD2(buf[1]) = v43;
      WORD6(buf[1]) = 1024;
      *(_DWORD *)((char *)&buf[1] + 14) = v44;
      _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_DEFAULT,  "#LCStats,homeVisit,maxError,%0.2f m,estAcc,%0.2f m,posType,%d,sigEnv,%d",  (uint8_t *)buf,  0x22u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_1018821A8);
      }
      uint64_t v45 = *(void *)(a2 + 20);
      int v46 = *(_DWORD *)(a2 + 96);
      int v47 = *(_DWORD *)(a2 + 140);
      *(_DWORD *)uint64_t v55 = 134218752;
      *(double *)&v55[4] = v22;
      *(_WORD *)&v55[12] = 2048;
      *(void *)&v55[14] = v45;
      *(_WORD *)&v55[22] = 1024;
      *(_DWORD *)&v55[24] = v46;
      __int16 v56 = 1024;
      int v57 = v47;
      LODWORD(v52) = 34;
      int v48 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "#LCStats,homeVisit,maxError,%0.2f m,estAcc,%0.2f m,posType,%d,sigEnv,%d",  COERCE_DOUBLE(v55),  v52,  LODWORD(v53),  LODWORD(v54));
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerCAStats::calcHomeVisitStats(const CLDaemonLocation &)",  "%s\n",  v48);
    }
  }

void sub_100D8C950( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
}

void sub_100D8C96C(uint64_t a1, _DWORD *a2, float *a3, float *a4)
{
  else {
    float v7 = 1.0;
  }
  uint64_t v8 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      unint64_t v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }

  if (*a4 > v7)
  {
    if (*a3 >= 100.0)
    {
      if (*a3 >= 200.0) {
        ++a2[14];
      }
      else {
        ++a2[13];
      }
    }

    else
    {
      ++a2[12];
    }
  }

void sub_100D8CA6C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_100D8CA80(uint64_t a1, int a2)
{
  *(_BYTE *)(a1 + 216) = a2;
  double v4 = sub_101171D4C();
  double v5 = v4;
  if (a2)
  {
    *(double *)(a1 + 8) = v4;
    sub_100D8D054(a1 + 232, v4);
    if (*(_BYTE *)(a1 + 217))
    {
      double v6 = *(double *)(a1 + 8);
      *(double *)(a1 + 2sub_100BDC958(v1 + 24) = v6;
      sub_100D8D054(a1 + 288, v6);
    }

    goto LABEL_26;
  }

  sub_100D8D3A4(a1 + 232, v4);
  double v8 = v7;
  double v9 = *(double *)(a1 + 8);
  BOOL v10 = v5 <= v9;
  double v11 = v5 - v9;
  if (v10 || v11 < v8)
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_1018821A8);
    }
    float v13 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_ERROR))
    {
      uint64_t v14 = *(void *)(a1 + 8);
      *(_DWORD *)std::stringbuf::string_type buf = 134349569;
      *(double *)uint64_t v42 = v5;
      *(_WORD *)&v42[8] = 2049;
      *(void *)&v42[10] = v14;
      __int16 v43 = 2049;
      double v44 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_ERROR,  "#LCStats,outvisit,end,error,time,%{public}0.1f,outVisitStart,%{private}0.1f,durThr,%{private}0.1f",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      goto LABEL_25;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_1018821A8);
    }
    uint64_t v15 = *(void *)(a1 + 8);
    int v33 = 134349569;
    *(double *)__int128 v34 = v5;
    *(_WORD *)&v34[8] = 2049;
    *(void *)&v34[10] = v15;
    __int16 v35 = 2049;
    double v36 = v8;
    int v16 = (uint8_t *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  16LL,  "#LCStats,outvisit,end,error,time,%{public}0.1f,outVisitStart,%{private}0.1f,durThr,%{private}0.1f",  &v33,  32);
    sub_10029211C("Generic", 1LL, 0, 0LL, "void CLLocationControllerCAStats::feedVisit(const BOOL)", "%s\n");
  }

  else
  {
    *(double *)(a1 + 592) = v11 + *(double *)(a1 + 592);
    *(double *)(a1 + 600) = v8 + *(double *)(a1 + 600);
    if (*(_BYTE *)(a1 + 217)) {
      sub_100D8D57C((double *)a1);
    }
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_1018821A8);
    }
    int v17 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
    {
      double v18 = *(double *)(a1 + 8);
      uint64_t v19 = *(void *)(a1 + 592);
      uint64_t v20 = *(void *)(a1 + 600);
      *(_DWORD *)std::stringbuf::string_type buf = 134350081;
      *(double *)uint64_t v42 = v5;
      *(_WORD *)&v42[8] = 2049;
      *(double *)&v42[10] = v18;
      __int16 v43 = 2049;
      double v44 = v5 - v18;
      __int16 v45 = 2049;
      uint64_t v46 = v19;
      __int16 v47 = 2049;
      uint64_t v48 = v20;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "#LCStats,outvisit,end,time,%{public}0.1f,outVisitStart,%{private}0.1f,dur,%{private}0.1f,accDur,%{private}0.1f,a ccDurThr,%{private}0.1f",  buf,  0x34u);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_25;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_1018821A8);
    }
    double v29 = *(double *)(a1 + 8);
    uint64_t v30 = *(void *)(a1 + 592);
    uint64_t v31 = *(void *)(a1 + 600);
    int v33 = 134350081;
    *(double *)__int128 v34 = v5;
    *(_WORD *)&v34[8] = 2049;
    *(double *)&v34[10] = v29;
    __int16 v35 = 2049;
    double v36 = v5 - v29;
    __int16 v37 = 2049;
    uint64_t v38 = v30;
    __int16 v39 = 2049;
    uint64_t v40 = v31;
    int v16 = (uint8_t *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "#LCStats,outvisit,end,time,%{public}0.1f,outVisitStart,%{private}0.1f,dur,%{private}0.1f,accDur,% {private}0.1f,accDurThr,%{private}0.1f",  &v33,  52);
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLLocationControllerCAStats::feedVisit(const BOOL)", "%s\n");
  }

  if (v16 != buf) {
    free(v16);
  }
LABEL_25:
  *(_DWORD *)(a1 + 16) = 0xFFFF;
  *(void *)(a1 + 28) = 0LL;
  *(void *)(a1 + 20) = 0LL;
  *(_OWORD *)(a1 + 36) = xmmword_1012E0070;
  __asm { FMOV            V0.2D, #-1.0 }

  *(_OWORD *)(a1 + 52) = _Q0;
  *(_OWORD *)(a1 + 68) = _Q0;
  *(_OWORD *)(a1 + 84) = _Q0;
  *(_DWORD *)(a1 + 100) = 0;
  *(void *)(a1 + 112) = 0LL;
  *(void *)(a1 + 120) = 0LL;
  *(void *)(a1 + 104) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 128) = 0;
  *(void *)(a1 + 132) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 140) = 0x7FFFFFFF;
  *(void *)(a1 + 152) = 0LL;
  *(void *)(a1 + 160) = 0LL;
  *(void *)(a1 + 144) = 0LL;
  *(_BYTE *)(a1 + 168) = 0;
  sub_100D8D8E4(a1);
LABEL_26:
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_1018821A8);
  }
  uint64_t v25 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v26 = *(void *)(a1 + 8);
    *(_DWORD *)std::stringbuf::string_type buf = 67174913;
    *(_DWORD *)uint64_t v42 = a2;
    *(_WORD *)&v42[4] = 2049;
    *(void *)&v42[6] = v26;
    _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEFAULT,  "#LCStats,outvisit,%{private}d,outVisitStart,%{private}0.1f",  buf,  0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_1018821A8);
    }
    uint64_t v27 = *(void *)(a1 + 8);
    int v33 = 67174913;
    *(_DWORD *)__int128 v34 = a2;
    *(_WORD *)&v34[4] = 2049;
    *(void *)&v34[6] = v27;
    LODWORD(v32) = 18;
    uint64_t v28 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "#LCStats,outvisit,%{private}d,outVisitStart,%{private}0.1f",  &v33,  v32);
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLLocationControllerCAStats::feedVisit(const BOOL)", "%s\n", v28);
  }

void sub_100D8D054(uint64_t a1, double a2)
{
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_1018821A8);
  }
  double v4 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "#LCStats,ThrPosUnc,outvisit,start", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_1018821A8);
    }
    LOWORD(v13) = 0;
    double v8 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#LCStats,ThrPosUnc,outvisit,start",  &v13,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerCAStats::ThresholdPosUncMetric::outsideVisitStart(const CFTimeInterval)",  "%s\n",  v8);
  }

  *(_BYTE *)(a1 + 48) = 1;
  *(void *)(a1 + 40) = 0LL;
  if (*(_BYTE *)(a1 + 16))
  {
    if (*(_BYTE *)a1 && *(double *)(a1 + 8) >= *(double *)(a1 + 24))
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_1018821A8);
      }
      double v5 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v6 = *(void *)(a1 + 8);
        uint64_t v7 = *(void *)(a1 + 24);
        *(_DWORD *)std::stringbuf::string_type buf = 134349569;
        uint64_t v20 = v6;
        __int16 v21 = 2050;
        uint64_t v22 = v7;
        __int16 v23 = 2049;
        double v24 = a2;
        _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "#LCStats,outvisit,device is not static since last loc update,staticTime,%{public}0.1f,posThrTime,%{public}0.1f ,outVisitTime,%{private}0.1f",  buf,  0x20u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_1018821A8);
        }
        uint64_t v9 = *(void *)(a1 + 8);
        uint64_t v10 = *(void *)(a1 + 24);
        int v13 = 134349569;
        uint64_t v14 = v9;
        __int16 v15 = 2050;
        uint64_t v16 = v10;
        __int16 v17 = 2049;
        double v18 = a2;
        LODWORD(v12) = 32;
        double v11 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "#LCStats,outvisit,device is not static since last loc update,staticTime,%{public}0.1f,posThrTime ,%{public}0.1f,outVisitTime,%{private}0.1f",  &v13,  v12);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerCAStats::ThresholdPosUncMetric::outsideVisitStart(const CFTimeInterval)",  "%s\n",  v11);
      }

      *(double *)(a1 + 8) = a2;
    }

    *(double *)(a1 + sub_100BDC958(v1 + 24) = a2;
  }

void sub_100D8D3A4(uint64_t a1, double a2)
{
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_1018821A8);
  }
  double v4 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    int v5 = *(unsigned __int8 *)(a1 + 16);
    *(_DWORD *)std::stringbuf::string_type buf = 67240192;
    int v10 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "#LCStats,ThrPosUnc,outvisit,stop,posUncThr,%{public}d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_1018821A8);
    }
    int v6 = *(unsigned __int8 *)(a1 + 16);
    v8[0] = 67240192;
    v8[1] = v6;
    uint64_t v7 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#LCStats,ThrPosUnc,outvisit,stop,posUncThr,%{public}d",  v8,  8);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CFTimeInterval CLLocationControllerCAStats::ThresholdPosUncMetric::outsideVisitStop(const CFTimeInterval)",  "%s\n",  v7);
  }

  if (*(_BYTE *)(a1 + 16)) {
    sub_100D8E644(a1, a2);
  }
  *(_BYTE *)(a1 + 48) = 0;
}

void sub_100D8D57C(double *a1)
{
  double v2 = sub_101171D4C();
  double v3 = a1[28];
  if (v2 >= v3)
  {
    a1[76] = v2 - v3 + a1[76];
    sub_100D8D3A4((uint64_t)(a1 + 36), v2);
    a1[77] = v8 + a1[77];
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_1018821A8);
    }
    uint64_t v9 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
    {
      double v10 = a1[76];
      uint64_t v11 = *((void *)a1 + 77);
      *(_DWORD *)std::stringbuf::string_type buf = 134283777;
      double v19 = v10;
      __int16 v20 = 2049;
      uint64_t v21 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "#LCStats,updateNonChargingMetrics,DailyAccumulatedOutsideVisitNonChargingTimeSec,%{private}0.1fDailyAccumulatedO utsideVisitNonChargingTimeWithThresholdPosUncSec,%{private}0.1f",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_1018821A8);
      }
      double v12 = a1[76];
      uint64_t v13 = *((void *)a1 + 77);
      int v14 = 134283777;
      double v15 = v12;
      __int16 v16 = 2049;
      uint64_t v17 = v13;
      uint64_t v7 = (uint8_t *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "#LCStats,updateNonChargingMetrics,DailyAccumulatedOutsideVisitNonChargingTimeSec,%{private}0.1fD ailyAccumulatedOutsideVisitNonChargingTimeWithThresholdPosUncSec,%{private}0.1f",  &v14,  22);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerCAStats::updateNonChargingMetrics(const CFTimeInterval)",  "%s\n");
      goto LABEL_19;
    }
  }

  else
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_1018821A8);
    }
    double v4 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_ERROR))
    {
      uint64_t v5 = *((void *)a1 + 28);
      *(_DWORD *)std::stringbuf::string_type buf = 134283777;
      double v19 = v2;
      __int16 v20 = 2049;
      uint64_t v21 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_ERROR,  "#LCStats,updateNonChargingMetrics,current time lags previous timestamp,%{private}0.1f,%{private}0.1f",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_1018821A8);
      }
      uint64_t v6 = *((void *)a1 + 28);
      int v14 = 134283777;
      double v15 = v2;
      __int16 v16 = 2049;
      uint64_t v17 = v6;
      uint64_t v7 = (uint8_t *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  16LL,  "#LCStats,updateNonChargingMetrics,current time lags previous timestamp,%{private}0.1f,%{private}0.1f",  &v14,  22);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLLocationControllerCAStats::updateNonChargingMetrics(const CFTimeInterval)",  "%s\n");
LABEL_19:
      if (v7 != buf) {
        free(v7);
      }
    }
  }

void sub_100D8D8E4(uint64_t a1)
{
  double v2 = sub_101171D4C();
  if (v2 >= *(double *)a1)
  {
    sub_1002F0B04(buf);
    else {
      double v4 = 86400.0;
    }
    uint64_t v5 = v13;
    if (v13)
    {
      p_shared_owners = (unint64_t *)&v13->__shared_owners_;
      do
        unint64_t v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }

    if (v2 - *(double *)a1 >= v4)
    {
      sub_100D8FE80((void *)(a1 + 384));
      sub_100D8EAF0(a1);
      sub_100D8FE1C(a1);
    }

    else
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_1018821A8);
      }
      double v8 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_INFO,  "#LCStats,submitMetrics,less than threshold time to submit metrics",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_1018821A8);
        }
        LOWORD(v11[0]) = 0;
        uint64_t v9 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  1LL,  "#LCStats,submitMetrics,less than threshold time to submit metrics",  v11,  2);
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CLLocationControllerCAStats::submitMetrics()", "%s\n", v9);
      }
    }
  }

  else
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_1018821A8);
    }
    double v3 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "#LCStats,submitMetrics,CurrentMCT < CA baseline time",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_1018821A8);
      }
      LOWORD(v11[0]) = 0;
      double v10 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  16LL,  "#LCStats,submitMetrics,CurrentMCT < CA baseline time",  v11,  2);
      sub_10029211C("Generic", 1LL, 0, 0LL, "void CLLocationControllerCAStats::submitMetrics()", "%s\n", v10);
    }

    sub_100D8FE1C(a1);
  }

void sub_100D8DC60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
}

void sub_100D8DC7C(uint64_t a1, uint64_t a2)
{
  if (sub_100869780(a2))
  {
    sub_100D8C034(a1, a2);
    sub_100D8DD20(a1 + 232, *(double *)(a2 + 20) <= 100.0);
    sub_100D8DD20(a1 + 288, *(double *)(a2 + 20) <= 100.0);
    if (*(_BYTE *)(a1 + 216))
    {
    }
  }

void sub_100D8DD20(uint64_t a1, int a2)
{
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_1018821A8);
  }
  double v4 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    int v5 = *(unsigned __int8 *)(a1 + 16);
    uint64_t v6 = *(void *)(a1 + 24);
    *(_DWORD *)std::stringbuf::string_type buf = 67240704;
    int v17 = v5;
    __int16 v18 = 1026;
    int v19 = a2;
    __int16 v20 = 2050;
    uint64_t v21 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "#LCStats,ThrPosUnc,fPosUncThr,%{public}d,posUncThr,%{public}d,posUncTime,%{public}0.1f",  buf,  0x18u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_1018821A8);
    }
    int v8 = *(unsigned __int8 *)(a1 + 16);
    uint64_t v9 = *(void *)(a1 + 24);
    v11[0] = 67240704;
    v11[1] = v8;
    __int16 v12 = 1026;
    int v13 = a2;
    __int16 v14 = 2050;
    uint64_t v15 = v9;
    double v10 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#LCStats,ThrPosUnc,fPosUncThr,%{public}d,posUncThr,%{public}d,posUncTime,%{public}0.1f",  v11,  24);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerCAStats::ThresholdPosUncMetric::feedPositionUncBetterThanThreshold(const BOOL)",  "%s\n",  v10);
  }

  double v7 = sub_101171D4C();
  *(_BYTE *)(a1 + 16) = a2;
  *(double *)(a1 + sub_100BDC958(v1 + 24) = v7;
}

void sub_100D8DF48(uint64_t a1, _OWORD *a2)
{
  double v4 = (_OWORD *)(a1 + 16);
  if ((sub_100869780(a1 + 16) & 1) != 0)
  {
    sub_100D2DCA4((double *)(a1 + 176), (uint64_t)v4, (uint64_t)a2);
    double v6 = v5;
    if (v5 > *(double *)(a1 + 656))
    {
      *(double *)(a1 + 656) = v5;
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_1018821A8);
      }
      double v7 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v8 = *(void *)(a1 + 656);
        *(_DWORD *)std::stringbuf::string_type buf = 134349056;
        uint64_t v22 = v8;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "#LCStats,update,maxdist,%{public}0.1f",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_1018821A8);
        }
        uint64_t v17 = *(void *)(a1 + 656);
        int v19 = 134349056;
        uint64_t v20 = v17;
        __int16 v18 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "#LCStats,update,maxdist,%{public}0.1f",  &v19,  12);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerCAStats::updateDistanceBetweenQualityPositionDistribution(const CLDaemonLocation &)",  "%s\n",  v18);
      }
    }

    if (v6 >= 20.0)
    {
      if (v6 >= 50.0)
      {
        if (v6 >= 100.0)
        {
          if (v6 >= 500.0)
          {
            if (v6 >= 1000.0)
            {
              if (v6 >= 5000.0)
              {
                if (v6 >= 20000.0)
                {
                  if (v6 >= 50000.0) {
                    goto LABEL_26;
                  }
                  uint64_t v9 = (_DWORD *)(a1 + 652);
                }

                else
                {
                  uint64_t v9 = (_DWORD *)(a1 + 648);
                }
              }

              else
              {
                uint64_t v9 = (_DWORD *)(a1 + 644);
              }
            }

            else
            {
              uint64_t v9 = (_DWORD *)(a1 + 640);
            }
          }

          else
          {
            uint64_t v9 = (_DWORD *)(a1 + 636);
          }
        }

        else
        {
          uint64_t v9 = (_DWORD *)(a1 + 632);
        }
      }

      else
      {
        uint64_t v9 = (_DWORD *)(a1 + 628);
      }
    }

    else
    {
      uint64_t v9 = (_DWORD *)(a1 + 624);
    }

    if (*v9 != -1) {
      ++*v9;
    }
  }

void sub_100D8E23C(uint64_t a1, _DWORD *a2, _DWORD *a3)
{
  if ((*a2 - 1) <= 1)
  {
    unsigned int v4 = *a3 - 1;
    int v5 = v4 < 2;
    sub_100D8E45C((double *)(a1 + 232), v5);
    sub_100D8E45C((double *)(a1 + 288), v5);
    if (*(unsigned __int8 *)(a1 + 385) != v5)
    {
      *(_BYTE *)(a1 + 385) = v5;
      if (v4 <= 1)
      {
        if (*(_BYTE *)(a1 + 384))
        {
          *(double *)(a1 + 400) = sub_101171D4C();
          if (qword_101934830 != -1) {
            dispatch_once(&qword_101934830, &stru_1018821A8);
          }
          double v6 = (os_log_s *)qword_101934838;
          if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
          {
            float v7 = *(double *)(a1 + 400);
            *(_DWORD *)std::stringbuf::string_type buf = 134349056;
            double v13 = v7;
            _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "#LCStats,homeVisit,device static from %{public}0.1f",  buf,  0xCu);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934830 != -1) {
              dispatch_once(&qword_101934830, &stru_1018821A8);
            }
            float v8 = *(double *)(a1 + 400);
            int v10 = 134349056;
            double v11 = v8;
            uint64_t v9 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#LCStats,homeVisit,device static from %{public}0.1f",  &v10,  12);
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerCAStats::feedMotionNotification(const CLMotionState_Type::Notification &, const C LMotionState_Type::NotificationData &)",  "%s\n",  v9);
          }
        }
      }
    }
  }

void sub_100D8E45C(double *a1, int a2)
{
  if (*(unsigned __int8 *)a1 != a2)
  {
    *(_BYTE *)a1 = a2;
    a1[1] = sub_101171D4C();
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_1018821A8);
    }
    double v3 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      int v4 = *(unsigned __int8 *)a1;
      uint64_t v5 = *((void *)a1 + 1);
      *(_DWORD *)std::stringbuf::string_type buf = 67240448;
      int v13 = v4;
      __int16 v14 = 2050;
      uint64_t v15 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "#LCStats,ThrPosUnc,static,%{public}d,time,%{public}0.1f",  buf,  0x12u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_1018821A8);
      }
      int v6 = *(unsigned __int8 *)a1;
      uint64_t v7 = *((void *)a1 + 1);
      v9[0] = 67240448;
      v9[1] = v6;
      __int16 v10 = 2050;
      uint64_t v11 = v7;
      float v8 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#LCStats,ThrPosUnc,static,%{public}d,time,%{public}0.1f",  v9,  18);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerCAStats::ThresholdPosUncMetric::motionStateStatic(const BOOL)",  "%s\n",  v8);
    }
  }

void sub_100D8E644(uint64_t a1, double a2)
{
  if (*(_BYTE *)(a1 + 48))
  {
    double v4 = *(double *)(a1 + 24);
    if (*(_BYTE *)a1) {
      BOOL v5 = *(double *)(a1 + 8) < v4;
    }
    else {
      BOOL v5 = 0;
    }
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_1018821A8);
    }
    double v8 = a2 - v4;
    uint64_t v9 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v10 = *(void *)(a1 + 8);
      uint64_t v11 = *(void *)(a1 + 24);
      *(_DWORD *)std::stringbuf::string_type buf = 67240961;
      *(_DWORD *)uint64_t v25 = v8 > 10.0;
      *(_WORD *)&v25[4] = 1026;
      *(_DWORD *)&v25[6] = v5;
      *(_WORD *)uint64_t v26 = 2049;
      *(void *)&v26[2] = v10;
      __int16 v27 = 2049;
      uint64_t v28 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "#LCStats,ThrPosUnc,update,fixAfterOutage,%{public}d,staticBeforePreviousFix,%{public}d,staticTime,%{private}0.1f ,posUncTime,%{private}0.1f",  buf,  0x22u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_1018821A8);
      }
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = *(void *)(a1 + 24);
      *(_DWORD *)uint64_t v21 = 67240961;
      *(_DWORD *)&_OWORD v21[4] = v8 > 10.0;
      *(_WORD *)&_DWORD v21[8] = 1026;
      *(_DWORD *)&v21[10] = v5;
      *(_WORD *)&v21[14] = 2049;
      *(void *)&v21[16] = v15;
      __int16 v22 = 2049;
      uint64_t v23 = v16;
      uint64_t v17 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#LCStats,ThrPosUnc,update,fixAfterOutage,%{public}d,staticBeforePreviousFix,%{public}d,staticTime, %{private}0.1f,posUncTime,%{private}0.1f",  v21,  34);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerCAStats::ThresholdPosUncMetric::updateMetrics(const CFTimeInterval)",  "%s\n",  v17);
    }

    int v12 = v8 <= 10.0 || v5;
    if (v12 != 1) {
      return;
    }
    *(double *)(a1 + 40) = *(double *)(a1 + 40) + a2 - *(double *)(a1 + 24);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_1018821A8);
    }
    int v13 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v14 = *(void *)(a1 + 40);
      *(_DWORD *)std::stringbuf::string_type buf = 134349312;
      *(void *)uint64_t v25 = v14;
      *(_WORD *)&v25[8] = 2050;
      *(double *)uint64_t v26 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "#LCStats,ThrPosUnc,update,metric,accDurPosUncThr,%{public}0.1f,time,%{public}0.1f",  buf,  0x16u);
    }

    if (!sub_1002921D0(115, 2)) {
      return;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_1018821A8);
    }
    uint64_t v18 = *(void *)(a1 + 40);
    *(_DWORD *)uint64_t v21 = 134349312;
    *(void *)&_OWORD v21[4] = v18;
    *(_WORD *)&v21[12] = 2050;
    *(double *)&v21[14] = a2;
    LODWORD(v20) = 22;
    uint64_t v7 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#LCStats,ThrPosUnc,update,metric,accDurPosUncThr,%{public}0.1f,time,%{public}0.1f",  v21,  v20,  *(_OWORD *)v21,  *(void *)&v21[16]);
LABEL_35:
    int v19 = (uint8_t *)v7;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerCAStats::ThresholdPosUncMetric::updateMetrics(const CFTimeInterval)",  "%s\n",  v7);
    if (v19 != buf) {
      free(v19);
    }
    return;
  }

  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_1018821A8);
  }
  int v6 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "#LCStats,ThrPosUnc,posunc,metric collection is not active",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_1018821A8);
    }
    *(_WORD *)uint64_t v21 = 0;
    uint64_t v7 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#LCStats,ThrPosUnc,posunc,metric collection is not active",  v21,  2,  *(_OWORD *)v21,  *(void *)&v21[16]);
    goto LABEL_35;
  }

void sub_100D8EAF0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 344);
  unsigned int v3 = *(_DWORD *)(v2 + 48LL * *(void *)(a1 + 368) + 40)
     + *(_DWORD *)(v2 + 48LL * *(void *)(a1 + 368) + 36)
     + *(_DWORD *)(v2 + 48LL * *(void *)(a1 + 368) + 44);
  int v4 = *(_DWORD *)(v2 + 48LL * *(void *)(a1 + 376) + 40)
     + *(_DWORD *)(v2 + 48LL * *(void *)(a1 + 376) + 36)
     + *(_DWORD *)(v2 + 48LL * *(void *)(a1 + 376) + 44);
  double v5 = *(double *)(a1 + 592);
  if (v5 >= 1.0 || v3 != 0 || v4 != 0)
  {
    double v8 = 0.0;
    if (v5 > 0.0) {
      double v8 = *(double *)(a1 + 600) / v5;
    }
    double v9 = *(double *)(a1 + 608);
    if (v9 <= 1.0) {
      unsigned int v10 = 0;
    }
    else {
      unsigned int v10 = (*(double *)(a1 + 616) / v9 * 100.0);
    }
    double v15 = v8 * 100.0;
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_1018821A8);
    }
    uint64_t v16 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
    {
      unsigned int v17 = *(double *)(a1 + 592);
      unsigned int v18 = *(double *)(a1 + 656);
      unsigned int v19 = *(double *)(a1 + 608);
      __int32 v20 = *(_DWORD *)(a1 + 624);
      unsigned int v21 = *(_DWORD *)(a1 + 628);
      unsigned int v22 = *(_DWORD *)(a1 + 632);
      unsigned int v23 = *(_DWORD *)(a1 + 636);
      __int32 v24 = *(_DWORD *)(a1 + 640);
      __int32 v25 = *(_DWORD *)(a1 + 644);
      __int32 v26 = *(_DWORD *)(a1 + 648);
      __int32 v27 = *(_DWORD *)(a1 + 652);
      *(_DWORD *)std::stringbuf::string_type buf = 67177729;
      *(_DWORD *)&uint8_t buf[4] = v17;
      *(_WORD *)&uint8_t buf[8] = 1026;
      *(_DWORD *)&buf[10] = v15;
      *(_WORD *)__int16 v142 = 1026;
      *(_DWORD *)&v142[2] = v18;
      *(_WORD *)int v143 = 1025;
      *(_DWORD *)&v143[2] = v19;
      __int16 v144 = 1026;
      unsigned int v145 = v10;
      __int16 v146 = 1026;
      __int32 v147 = v20;
      __int16 v148 = 1026;
      unsigned int v149 = v21;
      __int16 v150 = 1026;
      unsigned int v151 = v22;
      __int16 v152 = 1026;
      unsigned int v153 = v23;
      __int16 v154 = 1026;
      __int32 v155 = v24;
      __int16 v156 = 1026;
      __int32 v157 = v25;
      __int16 v158 = 1026;
      __int32 v159 = v26;
      __int16 v160 = 1026;
      __int32 v161 = v27;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "#LCStats,LocationControllerMetrics,Submit to CA,totalDailyOutsideVisitTimeSeconds,%{private}d,totalDailyOutsideV isitTimePercentPosBetterThresholdUnc,%{public}d,maxDailyDistanceBetweenQualityPosOutsideVisitMeters,%{public}d,t otalDailyOutsideVisitNonChargingTimeSeconds,%{private}d,totalDailyOutsideVisitNonChargingTimePercentPosBetterThr esholdUnc,%{public}d,countPos<20m,%{public}d,countPos<50m,%{public}d,countPos<100m,%{public}d,countPos<500m,%{pu blic}d,countPos<1000m,%{public}d,countPos<5000m,%{public}d,countPos<20000m,%{public}d,countPos<50000m,%{public}d,",  buf,  0x50u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_1018821A8);
      }
      unsigned int v68 = *(double *)(a1 + 592);
      unsigned int v69 = *(double *)(a1 + 656);
      unsigned int v70 = *(double *)(a1 + 608);
      __int32 v71 = *(_DWORD *)(a1 + 624);
      unsigned int v72 = *(_DWORD *)(a1 + 628);
      unsigned int v73 = *(_DWORD *)(a1 + 632);
      unsigned int v74 = *(_DWORD *)(a1 + 636);
      __int32 v75 = *(_DWORD *)(a1 + 640);
      __int32 v76 = *(_DWORD *)(a1 + 644);
      __int32 v77 = *(_DWORD *)(a1 + 648);
      __int32 v78 = *(_DWORD *)(a1 + 652);
      *(_DWORD *)__int128 v110 = 67177729;
      *(_DWORD *)&v110[4] = v68;
      *(_WORD *)&v110[8] = 1026;
      *(_DWORD *)&_BYTE v110[10] = v15;
      *(_WORD *)uint64_t v111 = 1026;
      *(_DWORD *)&v111[2] = v69;
      *(_WORD *)__int128 v112 = 1025;
      *(_DWORD *)&v112[2] = v70;
      __int16 v113 = 1026;
      unsigned int v114 = v10;
      __int16 v115 = 1026;
      __int32 v116 = v71;
      __int16 v117 = 1026;
      unsigned int v118 = v72;
      __int16 v119 = 1026;
      unsigned int v120 = v73;
      __int16 v121 = 1026;
      unsigned int v122 = v74;
      __int16 v123 = 1026;
      __int32 v124 = v75;
      __int16 v125 = 1026;
      __int32 v126 = v76;
      __int16 v127 = 1026;
      __int32 v128 = v77;
      __int16 v129 = 1026;
      __int32 v130 = v78;
      uint64_t v79 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "#LCStats,LocationControllerMetrics,Submit to CA,totalDailyOutsideVisitTimeSeconds,%{private}d,tota lDailyOutsideVisitTimePercentPosBetterThresholdUnc,%{public}d,maxDailyDistanceBetweenQualityPosOut sideVisitMeters,%{public}d,totalDailyOutsideVisitNonChargingTimeSeconds,%{private}d,totalDailyOuts ideVisitNonChargingTimePercentPosBetterThresholdUnc,%{public}d,countPos<20m,%{public}d,countPos<50 m,%{public}d,countPos<100m,%{public}d,countPos<500m,%{public}d,countPos<1000m,%{public}d,countPos< 5000m,%{public}d,countPos<20000m,%{public}d,countPos<50000m,%{public}d,",  v110,  80);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerCAStats::submitMetricsForOutSideVisitAndFuserSessionStart()",  "%s\n",  v79);
      if (v79 != buf) {
        free(v79);
      }
    }

    uint64_t v29 = *(void *)(a1 + 368);
    uint64_t v30 = *(void *)(a1 + 344);
    uint64_t v31 = (_DWORD *)(v30 + 48 * v29);
    unsigned int v32 = v31[9];
    if (v32)
    {
      LODWORD(v28) = *v31;
      double v28 = (double)*(unint64_t *)&v28 * 100.0 / (double)v32;
      unsigned int v96 = v28;
    }

    else
    {
      unsigned int v96 = 0;
    }

    unsigned int v91 = v10;
    unsigned int v33 = *(_DWORD *)(v30 + 48 * v29 + 40);
    if (v33)
    {
      LODWORD(v28) = *(_DWORD *)(v30 + 48 * v29 + 4);
      double v28 = (double)*(unint64_t *)&v28 * 100.0 / (double)v33;
      unsigned int v34 = v28;
    }

    else
    {
      unsigned int v34 = 0;
    }

    unsigned int v35 = *(_DWORD *)(v30 + 48 * v29 + 44);
    if (v35)
    {
      LODWORD(v28) = *(_DWORD *)(v30 + 48 * v29 + 8);
      unsigned int v36 = ((double)*(unint64_t *)&v28 * 100.0 / (double)v35);
      if (v3)
      {
LABEL_35:
        uint64_t v37 = v30 + 48 * v29;
        __int128 v38 = *(_OWORD *)(v37 + 12);
        v39.i64[0] = v38;
        v39.i64[1] = DWORD1(v38);
        float64x2_t v40 = vcvtq_f64_u64(v39);
        v39.i64[0] = DWORD2(v38);
        v39.i64[1] = HIDWORD(v38);
        float64x2_t v41 = (float64x2_t)vdupq_n_s64(0x4059000000000000uLL);
        float64x2_t v42 = (float64x2_t)vdupq_lane_s64(COERCE__INT64((double)v3), 0);
        int32x4_t v95 = vuzp1q_s32( (int32x4_t)vcvtq_u64_f64(vdivq_f64(vmulq_f64(v40, v41), v42)),  (int32x4_t)vcvtq_u64_f64(vdivq_f64(vmulq_f64(vcvtq_f64_u64(v39), v41), v42)));
        *(void *)&__int128 v38 = *(void *)(v37 + 28);
        v39.i64[0] = v38;
        v39.i64[1] = DWORD1(v38);
        int32x2_t v43 = vmovn_s64((int64x2_t)vcvtq_u64_f64(vdivq_f64(vmulq_f64(vcvtq_f64_u64(v39), v41), v42)));
LABEL_38:
        int32x2_t v94 = v43;
        uint64_t v44 = *(void *)(a1 + 376);
        unsigned int v45 = *(_DWORD *)(v30 + 48 * v44 + 36) + v32;
        if (v45) {
          unsigned int v46 = ((double)(*(_DWORD *)(v30 + 48 * v44) + *v31) * 100.0 / (double)v45);
        }
        else {
          unsigned int v46 = 0;
        }
        unsigned int v47 = *(_DWORD *)(v30 + 48 * v44 + 40) + v33;
        if (v47) {
          unsigned int v48 = ((double)(*(_DWORD *)(v30 + 48 * v44 + 4) + *(_DWORD *)(v30 + 48 * v29 + 4))
        }
                             * 100.0
                             / (double)v47);
        else {
          unsigned int v48 = 0;
        }
        unsigned int v49 = *(_DWORD *)(v30 + 48 * v44 + 44) + v35;
        if (v49) {
          unsigned int v50 = ((double)(*(_DWORD *)(v30 + 48 * v44 + 8) + *(_DWORD *)(v30 + 48 * v29 + 8))
        }
                             * 100.0
                             / (double)v49);
        else {
          unsigned int v50 = 0;
        }
        if (v4 + v3)
        {
          uint64_t v51 = v30 + 48 * v29;
          uint64_t v52 = v30 + 48 * v44;
          int32x4_t v53 = vaddq_s32(*(int32x4_t *)(v52 + 12), *(int32x4_t *)(v51 + 12));
          v54.i64[0] = v53.u32[0];
          v54.i64[1] = v53.u32[1];
          float64x2_t v55 = vcvtq_f64_u64(v54);
          v54.i64[0] = v53.u32[2];
          v54.i64[1] = v53.u32[3];
          float64x2_t v56 = (float64x2_t)vdupq_n_s64(0x4059000000000000uLL);
          float64x2_t v57 = (float64x2_t)vdupq_lane_s64(COERCE__INT64((double)(v4 + v3)), 0);
          int32x4_t v93 = vuzp1q_s32( (int32x4_t)vcvtq_u64_f64(vdivq_f64(vmulq_f64(v55, v56), v57)),  (int32x4_t)vcvtq_u64_f64(vdivq_f64(vmulq_f64(vcvtq_f64_u64(v54), v56), v57)));
          *(int32x2_t *)v53.i8 = vadd_s32(*(int32x2_t *)(v52 + 28), *(int32x2_t *)(v51 + 28));
          v54.i64[0] = v53.u32[0];
          v54.i64[1] = v53.u32[1];
          int32x2_t v58 = vmovn_s64((int64x2_t)vcvtq_u64_f64(vdivq_f64(vmulq_f64(vcvtq_f64_u64(v54), v56), v57)));
        }

        else
        {
          int32x2_t v58 = 0LL;
          int32x4_t v93 = 0u;
        }

        int32x2_t v92 = v58;
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_1018821A8);
        }
        uint64_t v59 = (os_log_s *)qword_101934838;
        if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(v60) = 67244544;
          HIDWORD(v60) = v93.i32[0];
          *(void *)std::stringbuf::string_type buf = v60;
          *(_WORD *)&uint8_t buf[8] = 1026;
          *(_DWORD *)((unint64_t)buf | 0xA) = v93.i32[1];
          *(_WORD *)__int16 v142 = 1026;
          *(_DWORD *)&v142[2] = v93.i32[2];
          *(_WORD *)int v143 = 1026;
          *(_DWORD *)&v143[2] = v93.i32[3];
          __int16 v144 = 1026;
          unsigned int v145 = v92.i32[0];
          __int16 v146 = 1026;
          __int32 v147 = v92.i32[1];
          __int16 v148 = 1026;
          unsigned int v149 = v46;
          __int16 v150 = 1026;
          unsigned int v151 = v48;
          __int16 v152 = 1026;
          unsigned int v153 = v50;
          __int16 v154 = 1026;
          __int32 v155 = v95.i32[0];
          __int16 v156 = 1026;
          __int32 v157 = v95.i32[1];
          __int16 v158 = 1026;
          __int32 v159 = v95.i32[2];
          __int16 v160 = 1026;
          __int32 v161 = v95.i32[3];
          __int16 v162 = 1026;
          __int32 v163 = v94.i32[0];
          __int16 v164 = 1026;
          __int32 v165 = v94.i32[1];
          __int16 v166 = 1026;
          unsigned int v167 = v96;
          __int16 v168 = 1026;
          unsigned int v169 = v34;
          __int16 v170 = 1026;
          unsigned int v171 = v36;
          _os_log_impl( (void *)&_mh_execute_header,  v59,  OS_LOG_TYPE_DEFAULT,  "#LCStats,#LCFuser,Percentage,LocationControllerMetrics,Submit to CA,pctSessionStartFuserHuncLT25m,%{public}d ,pctSessionStartFuserHuncLT50m,%{public}d,pctSessionStartFuserHuncLT100m,%{public}d,pctSessionStartFuserHunc LT200m,%{public}d,pctSessionStartFuserHuncLT500m,%{public}d,pctSessionStartFuserHuncGT500m,%{public}d,pctBes tSessionStartFuserHuncLT50m,%{public}d,pctFineSessionStartFuserHuncLT100m,%{public}d,pctCoarseSessionStartFu serHuncLT1000m,%{public}d,pctSessionStartHomeVisitFuserHuncLT25m,%{public}d,pctSessionStartHomeVisitFuserHun cLT50m,%{public}d,pctSessionStartHomeVisitFuserHuncLT100m,%{public}d,pctSessionStartHomeVisitFuserHuncLT200m ,%{public}d,pctSessionStartHomeVisitFuserHuncLT500m,%{public}d,pctSessionStartHomeVisitFuserHuncGT500m,%{pub lic}d,pctBestSessionStartHomeVisitFuserHuncLT50m,%{public}d,pctFineSessionStartHomeVisitFuserHuncLT100m,%{pu blic}d,pctCoarseSessionStartHomeVisitFuserHuncLT1000m,%{public}d,",  buf,  0x6Eu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934830 != -1) {
            dispatch_once(&qword_101934830, &stru_1018821A8);
          }
          uint64_t v80 = qword_101934838;
          LODWORD(v81) = 67244544;
          HIDWORD(v81) = v93.i32[0];
          *(void *)__int128 v110 = v81;
          *(_WORD *)&v110[8] = 1026;
          *(_DWORD *)((unint64_t)v110 | 0xA) = v93.i32[1];
          *(_WORD *)uint64_t v111 = 1026;
          *(_DWORD *)&v111[2] = v93.i32[2];
          *(_WORD *)__int128 v112 = 1026;
          *(_DWORD *)&v112[2] = v93.i32[3];
          __int16 v113 = 1026;
          unsigned int v114 = v92.i32[0];
          __int16 v115 = 1026;
          __int32 v116 = v92.i32[1];
          __int16 v117 = 1026;
          unsigned int v118 = v46;
          __int16 v119 = 1026;
          unsigned int v120 = v48;
          __int16 v121 = 1026;
          unsigned int v122 = v50;
          __int16 v123 = 1026;
          __int32 v124 = v95.i32[0];
          __int16 v125 = 1026;
          __int32 v126 = v95.i32[1];
          __int16 v127 = 1026;
          __int32 v128 = v95.i32[2];
          __int16 v129 = 1026;
          __int32 v130 = v95.i32[3];
          __int16 v131 = 1026;
          __int32 v132 = v94.i32[0];
          __int16 v133 = 1026;
          __int32 v134 = v94.i32[1];
          __int16 v135 = 1026;
          unsigned int v136 = v96;
          __int16 v137 = 1026;
          unsigned int v138 = v34;
          __int16 v139 = 1026;
          unsigned int v140 = v36;
          LODWORD(v90) = 110;
          uint64_t v82 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v80,  0LL,  "#LCStats,#LCFuser,Percentage,LocationControllerMetrics,Submit to CA,pctSessionStartFuserHuncLT 25m,%{public}d,pctSessionStartFuserHuncLT50m,%{public}d,pctSessionStartFuserHuncLT100m,%{publi c}d,pctSessionStartFuserHuncLT200m,%{public}d,pctSessionStartFuserHuncLT500m,%{public}d,pctSes sionStartFuserHuncGT500m,%{public}d,pctBestSessionStartFuserHuncLT50m,%{public}d,pctFineSessio nStartFuserHuncLT100m,%{public}d,pctCoarseSessionStartFuserHuncLT1000m,%{public}d,pctSessionSt artHomeVisitFuserHuncLT25m,%{public}d,pctSessionStartHomeVisitFuserHuncLT50m,%{public}d,pctSes sionStartHomeVisitFuserHuncLT100m,%{public}d,pctSessionStartHomeVisitFuserHuncLT200m,%{public} d,pctSessionStartHomeVisitFuserHuncLT500m,%{public}d,pctSessionStartHomeVisitFuserHuncGT500m,% {public}d,pctBestSessionStartHomeVisitFuserHuncLT50m,%{public}d,pctFineSessionStartHomeVisitFu serHuncLT100m,%{public}d,pctCoarseSessionStartHomeVisitFuserHuncLT1000m,%{public}d,",  v110,  v90);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerCAStats::submitMetricsForOutSideVisitAndFuserSessionStart()",  "%s\n",  v82);
          if (v82 != buf) {
            free(v82);
          }
        }

        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_1018821A8);
        }
        __int128 v61 = (os_log_s *)qword_101934838;
        if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v62 = *(void *)(a1 + 344);
          int v63 = (unsigned int *)(v62 + 48LL * *(void *)(a1 + 368));
          unsigned int v64 = v63[4];
          LODWORD(v62) = *(_DWORD *)(v62 + 48LL * *(void *)(a1 + 376) + 16);
          unsigned int v65 = *v63;
          __int32 v66 = v63[1];
          unsigned int v67 = v63[9];
          LODWORD(v63) = v63[10];
          *(_DWORD *)std::stringbuf::string_type buf = 67241984;
          *(_DWORD *)&uint8_t buf[4] = v3;
          *(_WORD *)&uint8_t buf[8] = 1026;
          *(_DWORD *)&buf[10] = v4;
          *(_WORD *)__int16 v142 = 1026;
          *(_DWORD *)&v142[2] = v64;
          *(_WORD *)int v143 = 1026;
          *(_DWORD *)&v143[2] = v62;
          __int16 v144 = 1026;
          unsigned int v145 = v65;
          __int16 v146 = 1026;
          __int32 v147 = v66;
          __int16 v148 = 1026;
          unsigned int v149 = v67;
          __int16 v150 = 1026;
          unsigned int v151 = v63;
          _os_log_impl( (void *)&_mh_execute_header,  v61,  OS_LOG_TYPE_DEFAULT,  "#LCStats,#LCFuser,Count,LocationControllerMetrics,totalDailySessionStartHomeVisit,%{public}d,totalDailySessi onStartNotHomeVisit,%{public}d,dailyCountSessionStartHomeVisitFuserHuncLT50m,%{public}d,dailyCountSessionSta rtNotHomeVisitFuserHuncLT50m,%{public}d,dailyCountBestSessionStartHomeVisitFuserHuncLT50m,%{public}d,dailyCo untFineSessionStartHomeVisitFuserHuncLT100m,%{public}d,dailyCountBestSessionStartHomeVisit,%{public}d,dailyC ountFineSessionStartHomeVisit,%{public}d,",  buf,  0x32u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934830 != -1) {
            dispatch_once(&qword_101934830, &stru_1018821A8);
          }
          uint64_t v83 = *(void *)(a1 + 344);
          __int128 v84 = (unsigned int *)(v83 + 48LL * *(void *)(a1 + 368));
          unsigned int v85 = v84[4];
          LODWORD(v83) = *(_DWORD *)(v83 + 48LL * *(void *)(a1 + 376) + 16);
          unsigned int v86 = *v84;
          __int32 v87 = v84[1];
          unsigned int v88 = v84[9];
          LODWORD(v84) = v84[10];
          *(_DWORD *)__int128 v110 = 67241984;
          *(_DWORD *)&v110[4] = v3;
          *(_WORD *)&v110[8] = 1026;
          *(_DWORD *)&_BYTE v110[10] = v4;
          *(_WORD *)uint64_t v111 = 1026;
          *(_DWORD *)&v111[2] = v85;
          *(_WORD *)__int128 v112 = 1026;
          *(_DWORD *)&v112[2] = v83;
          __int16 v113 = 1026;
          unsigned int v114 = v86;
          __int16 v115 = 1026;
          __int32 v116 = v87;
          __int16 v117 = 1026;
          unsigned int v118 = v88;
          __int16 v119 = 1026;
          unsigned int v120 = v84;
          LODWORD(v90) = 50;
          uint64_t v89 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "#LCStats,#LCFuser,Count,LocationControllerMetrics,totalDailySessionStartHomeVisit,%{public}d,t otalDailySessionStartNotHomeVisit,%{public}d,dailyCountSessionStartHomeVisitFuserHuncLT50m,%{p ublic}d,dailyCountSessionStartNotHomeVisitFuserHuncLT50m,%{public}d,dailyCountBestSessionStart HomeVisitFuserHuncLT50m,%{public}d,dailyCountFineSessionStartHomeVisitFuserHuncLT100m,%{public }d,dailyCountBestSessionStartHomeVisit,%{public}d,dailyCountFineSessionStartHomeVisit,%{public}d,",  v110,  v90);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerCAStats::submitMetricsForOutSideVisitAndFuserSessionStart()",  "%s\n",  v89);
          if (v89 != buf) {
            free(v89);
          }
        }

        v97[0] = _NSConcreteStackBlock;
        v97[1] = 3221225472LL;
        v97[2] = sub_100D8F838;
        v97[3] = &unk_101882188;
        v97[4] = a1;
        unsigned int v98 = v15;
        unsigned int v99 = v91;
        unsigned int v100 = v50;
        unsigned int v101 = v48;
        unsigned int v102 = v46;
        int32x4_t v103 = v93;
        int32x2_t v104 = v92;
        int32x4_t v105 = v95;
        int32x2_t v106 = v94;
        unsigned int v107 = v96;
        unsigned int v108 = v36;
        unsigned int v109 = v34;
        AnalyticsSendEventLazy(@"com.apple.locationd.position.LocationControllerMetrics", v97);
        return;
      }
    }

    else
    {
      unsigned int v36 = 0;
      if (v3) {
        goto LABEL_35;
      }
    }

    int32x2_t v43 = 0LL;
    int32x4_t v95 = 0u;
    goto LABEL_38;
  }

  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_1018821A8);
  }
  uint64_t v11 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v12 = *(void *)(a1 + 592);
    *(_DWORD *)std::stringbuf::string_type buf = 134284033;
    *(void *)&uint8_t buf[4] = v12;
    *(_WORD *)&_BYTE buf[12] = 1026;
    *(_DWORD *)__int16 v142 = 0;
    *(_WORD *)&v142[4] = 1026;
    *(_DWORD *)int v143 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "#LCStats,ForOutSideVisitAndFuserSessionStart,skip submission,outsideVisitSec,%{private}0.1f,inHomeVisitSessionCnt, %{public}d,inNonHomeVisitSessionCnt,%{public}d",  buf,  0x18u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_1018821A8);
    }
    uint64_t v13 = *(void *)(a1 + 592);
    *(_DWORD *)__int128 v110 = 134284033;
    *(void *)&v110[4] = v13;
    *(_WORD *)&v110[12] = 1026;
    *(_DWORD *)uint64_t v111 = 0;
    *(_WORD *)&v111[4] = 1026;
    *(_DWORD *)__int128 v112 = 0;
    uint64_t v14 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "#LCStats,ForOutSideVisitAndFuserSessionStart,skip submission,outsideVisitSec,%{private}0.1f,inHomeVi sitSessionCnt,%{public}d,inNonHomeVisitSessionCnt,%{public}d",  v110,  24);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerCAStats::submitMetricsForOutSideVisitAndFuserSessionStart()",  "%s\n",  v14);
    if (v14 != buf) {
      free(v14);
    }
  }

NSDictionary *sub_100D8F838(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  v4[0] = @"totalDailyOutsideVisitTimeSeconds";
  v5[0] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(double *)(v2 + 592));
  v4[1] = @"totalDailyOutsideVisitTimePercentPosBetterThresholdUnc";
  v5[1] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 40));
  v4[2] = @"maxDailyDistanceBetweenQualityPosOutsideVisitMeters";
  v5[2] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(double *)(v2 + 656));
  _OWORD v4[3] = @"totalDailyOutsideVisitNonChargingTimeSeconds";
  _OWORD v5[3] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(double *)(v2 + 608));
  v4[4] = @"totalDailyOutsideVisitNonChargingTimePercentPosBetterThresholdUnc";
  v5[4] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 44));
  v4[5] = @"DailyCountOutsideVisitDistanceBetweenQualityPositionLess20m";
  v5[5] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(v2 + 624));
  v4[6] = @"DailyCountOutsideVisitDistanceBetweenQualityPositionLess50m";
  v5[6] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(v2 + 628));
  v4[7] = @"DailyCountOutsideVisitDistanceBetweenQualityPositionLess100m";
  v5[7] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(v2 + 632));
  _WORD v4[8] = @"DailyCountOutsideVisitDistanceBetweenQualityPositionLess500m";
  v5[8] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(v2 + 636));
  v4[9] = @"DailyCountOutsideVisitDistanceBetweenQualityPositionLess1000m";
  v5[9] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(v2 + 640));
  v4[10] = @"DailyCountOutsideVisitDistanceBetweenQualityPositionLess5000m";
  v5[10] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(v2 + 644));
  v4[11] = @"DailyCountOutsideVisitDistanceBetweenQualityPositionLess20000m";
  v5[11] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(v2 + 648));
  v4[12] = @"DailyCountOutsideVisitDistanceBetweenQualityPositionLess50000m";
  v5[12] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(v2 + 652));
  v4[13] = @"DailyPercentCoarseSessionStartFuserHuncLT1000m";
  v5[13] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 48));
  v4[14] = @"DailyPercentFineSessionStartFuserHuncLT100m";
  v5[14] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 52));
  v4[15] = @"DailyPercentBestSessionStartFuserHuncLT50m";
  v5[15] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 56));
  v4[16] = @"DailyPercentSessionStartFuserHuncLT25m";
  v5[16] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 60));
  v4[17] = @"DailyPercentSessionStartFuserHuncLT50m";
  v5[17] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 64));
  v4[18] = @"DailyPercentSessionStartFuserHuncLT100m";
  v5[18] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 68));
  v4[19] = @"DailyPercentSessionStartFuserHuncLT200m";
  v5[19] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 72));
  v4[20] = @"DailyPercentSessionStartFuserHuncLT500m";
  v5[20] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 76));
  v4[21] = @"DailyPercentSessionStartFuserHuncGT500m";
  v5[21] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 80));
  v4[22] = @"DailyPercentSessionStartHomeVisitFuserHuncLT25m";
  v5[22] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 84));
  v4[23] = @"DailyPercentSessionStartHomeVisitFuserHuncLT50m";
  v5[23] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 88));
  v4[24] = @"DailyPercentSessionStartHomeVisitFuserHuncLT100m";
  v5[24] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 92));
  v4[25] = @"DailyPercentSessionStartHomeVisitFuserHuncLT200m";
  v5[25] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 96));
  v4[26] = @"DailyPercentSessionStartHomeVisitFuserHuncLT500m";
  v5[26] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 100));
  v4[27] = @"DailyPercentSessionStartHomeVisitFuserHuncGT500m";
  v5[27] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 104));
  v4[28] = @"DailyPercentBestSessionStartHomeVisitFuserHuncLT50m";
  v5[28] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 108));
  v4[29] = @"DailyPercentCoarseSessionStartHomeVisitFuserHuncLT1000m";
  v5[29] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 112));
  v4[30] = @"DailyPercentFineSessionStartHomeVisitFuserHuncLT100m";
  v5[30] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 116));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v5,  v4,  31LL);
}

void sub_100D8FC20(uint64_t a1, int a2)
{
  if (*(unsigned __int8 *)(a1 + 217) != a2)
  {
    *(_BYTE *)(a1 + 217) = a2;
    if (*(_BYTE *)(a1 + 216))
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_1018821A8);
      }
      unsigned int v3 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
      {
        BOOL v4 = *(_BYTE *)(a1 + 217) == 0;
        *(_DWORD *)std::stringbuf::string_type buf = 67240192;
        BOOL v10 = v4;
        _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "#LCStats,outvisit,battery,charging,%{public}d",  buf,  8u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_1018821A8);
        }
        BOOL v6 = *(_BYTE *)(a1 + 217) == 0;
        v8[0] = 67240192;
        v8[1] = v6;
        uint64_t v7 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "#LCStats,outvisit,battery,charging,%{public}d",  v8,  8);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerCAStats::feedBatteryChargingStatus(BOOL)",  "%s\n",  v7);
      }

      double v5 = sub_101171D4C();
      if (*(_BYTE *)(a1 + 217))
      {
        *(double *)(a1 + 2sub_100BDC958(v1 + 24) = v5;
        sub_100D8D054(a1 + 288, v5);
      }

      else
      {
        sub_100D8D57C((double *)a1);
      }
    }
  }

void sub_100D8FE1C(uint64_t a1)
{
  *(void *)(a1 + 568) = a1 + 576;
  *(void *)(a1 + 584) = 0LL;
  *(void *)(a1 + 576) = 0LL;
  *(_OWORD *)(a1 + 592) = 0u;
  *(_OWORD *)(a1 + 608) = 0u;
  *(_OWORD *)(a1 + 6sub_100BDC958(v1 + 24) = 0u;
  *(_OWORD *)(a1 + 640) = 0u;
  *(void *)(a1 + 656) = 0LL;
  *(void *)(a1 + 352) = *(void *)(a1 + 344);
  sub_100D8BF84(a1 + 344, 2uLL);
  *(double *)a1 = sub_101171D4C();
}

void sub_100D8FE80(void *a1)
{
  if (a1[25])
  {
    uint64_t v2 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    BOOL v4 = (void *)a1[23];
    __int32 v71 = a1 + 24;
    if (v4 != a1 + 24)
    {
      LODWORD(v5) = 0;
      LODWORD(v6) = 0;
      LODWORD(v7) = 0;
      LODWORD(v8) = 0;
      LODWORD(v9) = 0;
      float v10 = 0.0;
      float v11 = 0.0;
      float v12 = 0.0;
      float v13 = 0.0;
      while (1)
      {
        double v14 = *((double *)v4 + 5);
        double v15 = *((double *)v4 + 6);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_1018821A8);
        }
        float v16 = v14;
        float v17 = v15;
        unsigned int v18 = (os_log_s *)qword_101934838;
        if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
        {
          int v19 = *((_DWORD *)v4 + 8);
          int v21 = *((_DWORD *)v4 + 14);
          int v20 = *((_DWORD *)v4 + 15);
          int v22 = *((_DWORD *)v4 + 16);
          int v23 = *((_DWORD *)v4 + 17);
          int v24 = *((_DWORD *)v4 + 18);
          int v25 = *((_DWORD *)v4 + 19);
          int v26 = *((_DWORD *)v4 + 20);
          int v27 = *((_DWORD *)v4 + 21);
          int v29 = *((_DWORD *)v4 + 22);
          int v28 = *((_DWORD *)v4 + 23);
          int v30 = *((_DWORD *)v4 + 24);
          *(_DWORD *)std::stringbuf::string_type buf = 67243520;
          int v101 = v19;
          __int16 v102 = 1026;
          int v103 = v20;
          __int16 v104 = 2050;
          double v105 = v16;
          __int16 v106 = 2050;
          double v107 = v17;
          __int16 v108 = 1026;
          int v109 = v21;
          __int16 v110 = 1026;
          int v111 = v22;
          __int16 v112 = 1026;
          int v113 = v23;
          __int16 v114 = 1026;
          int v115 = v24;
          __int16 v116 = 1026;
          int v117 = v25;
          __int16 v118 = 1026;
          int v119 = v26;
          __int16 v120 = 1026;
          int v121 = v27;
          __int16 v122 = 1026;
          int v123 = v29;
          __int16 v124 = 1026;
          int v125 = v28;
          __int16 v126 = 1026;
          int v127 = v30;
          _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "#LCStats,homeVisit,metrics,posType,%{public}d,countOfPosType,%{public}d,maxPosError,%{public}0.1f,uncAtMaxEr ror,%{public}0.1f,sigEnv,%{public}d,countOfPosErrLT100,%{public}d,countOfPosErr100To200,%{public}d,countOfPo sErrGE200,%{public}d,countOfPosErrOverUncLTOne,%{public}d,countOfPosErrOverUncOneToThree,%{public}d,countOfP osErrOverUncGEThree,%{public}d,countOfPosErrorLT100UncGTOne,%{public}d,countOfPosError100To200UncGTOne,%{pub lic}d,countOfPosErrorGE200UncGTOne,%{public}d",  buf,  0x5Eu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934830 != -1) {
            dispatch_once(&qword_101934830, &stru_1018821A8);
          }
          int v52 = *((_DWORD *)v4 + 8);
          int v54 = *((_DWORD *)v4 + 14);
          int v53 = *((_DWORD *)v4 + 15);
          int v55 = *((_DWORD *)v4 + 16);
          int v56 = *((_DWORD *)v4 + 17);
          int v57 = *((_DWORD *)v4 + 18);
          int v58 = *((_DWORD *)v4 + 19);
          int v59 = *((_DWORD *)v4 + 20);
          int v60 = *((_DWORD *)v4 + 21);
          int v62 = *((_DWORD *)v4 + 22);
          int v61 = *((_DWORD *)v4 + 23);
          int v63 = *((_DWORD *)v4 + 24);
          v73[0] = 67243520;
          v73[1] = v52;
          __int16 v74 = 1026;
          int v75 = v53;
          __int16 v76 = 2050;
          double v77 = v16;
          __int16 v78 = 2050;
          double v79 = v17;
          __int16 v80 = 1026;
          int v81 = v54;
          __int16 v82 = 1026;
          int v83 = v55;
          __int16 v84 = 1026;
          int v85 = v56;
          __int16 v86 = 1026;
          int v87 = v57;
          __int16 v88 = 1026;
          int v89 = v58;
          __int16 v90 = 1026;
          int v91 = v59;
          __int16 v92 = 1026;
          int v93 = v60;
          __int16 v94 = 1026;
          int v95 = v62;
          __int16 v96 = 1026;
          int v97 = v61;
          __int16 v98 = 1026;
          int v99 = v63;
          LODWORD(v70) = 94;
          unsigned int v64 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "#LCStats,homeVisit,metrics,posType,%{public}d,countOfPosType,%{public}d,maxPosError,%{public}0 .1f,uncAtMaxError,%{public}0.1f,sigEnv,%{public}d,countOfPosErrLT100,%{public}d,countOfPosErr1 00To200,%{public}d,countOfPosErrGE200,%{public}d,countOfPosErrOverUncLTOne,%{public}d,countOfP osErrOverUncOneToThree,%{public}d,countOfPosErrOverUncGEThree,%{public}d,countOfPosErrorLT100U ncGTOne,%{public}d,countOfPosError100To200UncGTOne,%{public}d,countOfPosErrorGE200UncGTOne,%{public}d",  v73,  v70);
          sub_10029211C("Generic", 1LL, 0, 2LL, "void HomeVisitInfo::submitMetricsHomeVisit()", "%s\n", v64);
        }

        -[NSMutableDictionary setObject:forKey:]( v2,  "setObject:forKey:",  +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *((unsigned int *)v4 + 14)),  @"SigEnv");
        int v31 = *((_DWORD *)v4 + 8);
        if (v31 <= 5) {
          break;
        }
        if (v31 == 6)
        {
          -[NSMutableDictionary setObject:forKey:]( v2,  "setObject:forKey:",  +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *((unsigned int *)v4 + 15)),  @"numCellFix");
          *(float *)&double v39 = v16;
          -[NSMutableDictionary setObject:forKey:]( v2,  "setObject:forKey:",  +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:", v39),  @"maxCellError");
          *(float *)&double v40 = v17;
          unsigned int v34 = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:", v40);
          unsigned int v35 = v2;
          unsigned int v36 = @"uncAtMaxCellError";
          goto LABEL_18;
        }

        if (v31 == 11) {
          goto LABEL_15;
        }
LABEL_19:
        float v41 = v16 / v17;
        if (v17 <= 0.0) {
          float v41 = 0.0;
        }
        BOOL v42 = v41 > 1.0;
        if (v41 < 1.0 && v11 < v16) {
          float v11 = v16;
        }
        if (v10 < v16) {
          float v10 = v16;
        }
        BOOL v44 = v12 < v16;
        if (v44 && v42) {
          uint64_t v9 = *((unsigned int *)v4 + 8);
        }
        else {
          uint64_t v9 = v9;
        }
        if (v44 && v42)
        {
          float v13 = v17;
          float v12 = v16;
        }

        int v46 = *((_DWORD *)v4 + 23);
        int v45 = *((_DWORD *)v4 + 24);
        int v47 = *((_DWORD *)v4 + 21);
        int v48 = *((_DWORD *)v4 + 22);
        unsigned int v49 = (void *)v4[1];
        if (v49)
        {
          do
          {
            unsigned int v50 = v49;
            unsigned int v49 = (void *)*v49;
          }

          while (v49);
        }

        else
        {
          do
          {
            unsigned int v50 = (void *)v4[2];
            BOOL v51 = *v50 == (void)v4;
            BOOL v4 = v50;
          }

          while (!v51);
        }

        uint64_t v5 = (v48 + v5);
        uint64_t v6 = (v46 + v6);
        uint64_t v7 = (v45 + v7);
        uint64_t v8 = (v47 + v8);
        BOOL v4 = v50;
        if (v50 == v71) {
          goto LABEL_54;
        }
      }

      if (v31 == 1)
      {
        -[NSMutableDictionary setObject:forKey:]( v2,  "setObject:forKey:",  +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *((unsigned int *)v4 + 15)),  @"numGPSFix");
        *(float *)&double v37 = v16;
        -[NSMutableDictionary setObject:forKey:]( v2,  "setObject:forKey:",  +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:", v37),  @"maxGpsError");
        *(float *)&double v38 = v17;
        -[NSMutableDictionary setObject:forKey:]( v2,  "setObject:forKey:",  +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:", v38),  @"uncAtMaxGpsError");
        -[NSMutableDictionary setObject:forKey:]( v2,  "setObject:forKey:",  +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *((unsigned int *)v4 + 16)),  @"countGpsErrorLessThan100");
        -[NSMutableDictionary setObject:forKey:]( v2,  "setObject:forKey:",  +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *((unsigned int *)v4 + 17)),  @"countGpsError100to200");
        -[NSMutableDictionary setObject:forKey:]( v2,  "setObject:forKey:",  +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *((unsigned int *)v4 + 18)),  @"countGpsErrorMoreThan200");
        -[NSMutableDictionary setObject:forKey:]( v2,  "setObject:forKey:",  +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *((unsigned int *)v4 + 19)),  @"countGpsErrorByUncLessThan1");
        -[NSMutableDictionary setObject:forKey:]( v2,  "setObject:forKey:",  +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *((unsigned int *)v4 + 20)),  @"countGpsErrorByUnc1to3");
        unsigned int v34 = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *((unsigned int *)v4 + 21));
        unsigned int v35 = v2;
        unsigned int v36 = @"countGpsErrorByUncMoreThan3";
      }

      else
      {
        if (v31 != 4) {
          goto LABEL_19;
        }
LABEL_15:
        -[NSMutableDictionary setObject:forKey:]( v2,  "setObject:forKey:",  +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *((unsigned int *)v4 + 15)),  @"numWiFiFix");
        *(float *)&double v32 = v16;
        -[NSMutableDictionary setObject:forKey:]( v2,  "setObject:forKey:",  +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:", v32),  @"maxWiFiError");
        *(float *)&double v33 = v17;
        -[NSMutableDictionary setObject:forKey:]( v2,  "setObject:forKey:",  +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:", v33),  @"uncAtMaxWiFiError");
        -[NSMutableDictionary setObject:forKey:]( v2,  "setObject:forKey:",  +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *((unsigned int *)v4 + 16)),  @"countWiFiErrorLessThan100");
        -[NSMutableDictionary setObject:forKey:]( v2,  "setObject:forKey:",  +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *((unsigned int *)v4 + 17)),  @"countWiFiError100to200");
        -[NSMutableDictionary setObject:forKey:]( v2,  "setObject:forKey:",  +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *((unsigned int *)v4 + 18)),  @"countWiFiErrorMoreThan200");
        -[NSMutableDictionary setObject:forKey:]( v2,  "setObject:forKey:",  +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *((unsigned int *)v4 + 19)),  @"countWiFiErrorByUncLessThan1");
        -[NSMutableDictionary setObject:forKey:]( v2,  "setObject:forKey:",  +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *((unsigned int *)v4 + 20)),  @"countWiFiErrorByUnc1to3");
        unsigned int v34 = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *((unsigned int *)v4 + 21));
        unsigned int v35 = v2;
        unsigned int v36 = @"countWiFiErrorByUncMoreThan3";
      }

uint64_t sub_100D90838(uint64_t a1)
{
  return *(void *)(a1 + 32);
}

void sub_100D90840(uint64_t a1, int *a2, int a3, int a4, int a5, double a6)
{
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_1018821A8);
  }
  float v12 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    int v13 = *a2;
    *(_DWORD *)std::stringbuf::string_type buf = 67241216;
    int v51 = v13;
    __int16 v52 = 1026;
    BOOL v53 = a3 != 0;
    __int16 v54 = 1026;
    BOOL v55 = a4 != 0;
    __int16 v56 = 1026;
    BOOL v57 = a5 != 0;
    __int16 v58 = 2050;
    *(double *)int v59 = a6;
    _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "#LCStats,feedLCFuserSessionStartMetrics,ntfy,%{public}d,%{public}d,%{public}d,%{public}d,hunc,%{public}0.2f",  buf,  0x24u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_1018821A8);
    }
    int v33 = *a2;
    LODWORD(v46) = 67241216;
    HIDWORD(v46) = v33;
    LOWORD(v47) = 1026;
    *(_DWORD *)((char *)&v47 + 2) = a3 != 0;
    HIWORD(v47) = 1026;
    *(_DWORD *)int v48 = a4 != 0;
    *(_WORD *)&v48[4] = 1026;
    *(_DWORD *)&v48[6] = a5 != 0;
    *(_WORD *)&v48[10] = 2050;
    *(double *)&v48[12] = a6;
    unsigned int v34 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#LCStats,feedLCFuserSessionStartMetrics,ntfy,%{public}d,%{public}d,%{public}d,%{public}d,hunc,%{public}0.2f",  &v46,  36);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerCAStats::feedLCFuserSessionStartMetrics(const CLLocationProvider_Type::Notification &, co nst int, const int, const int, const double)",  "%s\n",  v34);
  }

  int v14 = *a2;
  if (a3 >= 2 && !v14) {
    goto LABEL_9;
  }
  if (v14 == 2)
  {
    if (a3 > 0 || a4 > 0 || a5 >= 2)
    {
LABEL_9:
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_1018821A8);
      }
      double v15 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "#LCStats,feedLCFuserSessionStartMetrics,not a first client at given granularity",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_1018821A8);
        }
        LOWORD(v46) = 0;
        LODWORD(v45) = 2;
        float v16 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#LCStats,feedLCFuserSessionStartMetrics,not a first client at given granularity",  &v46,  v45,  v46,  v47,  *(_OWORD *)v48,  *(void *)&v48[16],  v49);
LABEL_62:
        BOOL v44 = (uint8_t *)v16;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerCAStats::feedLCFuserSessionStartMetrics(const CLLocationProvider_Type::Notification & , const int, const int, const int, const double)",  "%s\n",  v16);
        if (v44 != buf) {
          free(v44);
        }
        return;
      }

      return;
    }
  }

  else if (v14 == 1 && (a3 > 0 || a4 > 1))
  {
    goto LABEL_9;
  }

  unint64_t v17 = *(_BYTE *)(a1 + 384) == 0;
  uint64_t v18 = *(void *)(a1 + 344);
  if (0xAAAAAAAAAAAAAAABLL * ((*(void *)(a1 + 352) - v18) >> 4) <= v17) {
    sub_100092C20();
  }
  switch(v14)
  {
    case 2:
      ++*(_DWORD *)(v18 + 48LL * (*(_BYTE *)(a1 + 384) == 0) + 44);
      if (a6 >= 1000.0) {
        break;
      }
      int v19 = (_DWORD *)(v18 + 48LL * v17 + 8);
      goto LABEL_35;
    case 1:
      ++*(_DWORD *)(v18 + 48LL * (*(_BYTE *)(a1 + 384) == 0) + 40);
      if (a6 >= 100.0) {
        break;
      }
      int v19 = (_DWORD *)(v18 + 48LL * v17 + 4);
      goto LABEL_35;
    case 0:
      int v19 = (_DWORD *)(v18 + 48LL * (*(_BYTE *)(a1 + 384) == 0));
      ++v19[9];
      if (a6 < 50.0) {
LABEL_35:
      }
        ++*v19;
      break;
  }

  if (a6 < 25.0)
  {
    uint64_t v20 = v18 + 48LL * v17;
    v21.i64[0] = 0x100000001LL;
    v21.i64[1] = 0x100000001LL;
    *(int32x4_t *)(v20 + 12) = vaddq_s32(*(int32x4_t *)(v20 + 12), v21);
LABEL_43:
    int v22 = (_DWORD *)(v20 + 28);
    goto LABEL_44;
  }

  if (a6 < 50.0)
  {
    uint64_t v20 = v18 + 48LL * v17;
    *(int32x2_t *)(v20 + 16) = vadd_s32(*(int32x2_t *)(v20 + 16), (int32x2_t)0x100000001LL);
LABEL_40:
    ++*(_DWORD *)(v20 + 24);
    goto LABEL_43;
  }

  if (a6 < 100.0)
  {
    uint64_t v20 = v18 + 48LL * v17;
    *(int32x2_t *)(v20 + 20) = vadd_s32(*(int32x2_t *)(v20 + 20), (int32x2_t)0x100000001LL);
    goto LABEL_43;
  }

  if (a6 < 200.0)
  {
    uint64_t v20 = v18 + 48LL * v17;
    goto LABEL_40;
  }

  int v22 = (_DWORD *)(v18 + 48LL * v17 + 32);
  if (a6 < 500.0) {
    int v22 = (_DWORD *)(v18 + 48LL * v17 + 28);
  }
LABEL_44:
  ++*v22;
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_1018821A8);
  }
  int v23 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    int v24 = *(unsigned __int8 *)(a1 + 384);
    int v25 = (_DWORD *)(v18 + 48LL * v17);
    int v26 = v25[3];
    int v27 = v25[4];
    int v28 = v25[5];
    int v29 = v25[6];
    int v30 = v25[7];
    int v31 = v25[9];
    int v32 = v25[10];
    LODWORD(v25) = v25[11];
    *(_DWORD *)std::stringbuf::string_type buf = 67176705;
    int v51 = v24;
    __int16 v52 = 1026;
    BOOL v53 = v26;
    __int16 v54 = 1026;
    BOOL v55 = v27;
    __int16 v56 = 1026;
    BOOL v57 = v28;
    __int16 v58 = 1026;
    *(_DWORD *)int v59 = v29;
    *(_WORD *)&v59[4] = 1026;
    *(_DWORD *)&v59[6] = v30;
    __int16 v60 = 1026;
    int v61 = v31;
    __int16 v62 = 1026;
    int v63 = v32;
    __int16 v64 = 1026;
    int v65 = (int)v25;
    _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEBUG,  "#LCStats,feedLCFuserSessionStartMetrics,homeVisit,%{private}d,%{public}d,%{public}d,%{public}d,%{public}d,%{public }d,%{public}d,%{public}d,%{public}d",  buf,  0x38u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_1018821A8);
    }
    int v35 = *(unsigned __int8 *)(a1 + 384);
    unsigned int v36 = (_DWORD *)(v18 + 48LL * v17);
    int v37 = v36[3];
    int v38 = v36[4];
    int v39 = v36[5];
    int v40 = v36[6];
    int v41 = v36[7];
    int v42 = v36[9];
    int v43 = v36[10];
    LODWORD(v36) = v36[11];
    LODWORD(v46) = 67176705;
    HIDWORD(v46) = v35;
    LOWORD(v47) = 1026;
    *(_DWORD *)((char *)&v47 + 2) = v37;
    HIWORD(v47) = 1026;
    *(_DWORD *)int v48 = v38;
    *(_WORD *)&v48[4] = 1026;
    *(_DWORD *)&v48[6] = v39;
    *(_WORD *)&v48[10] = 1026;
    *(_DWORD *)&v48[12] = v40;
    *(_WORD *)&v48[16] = 1026;
    *(_DWORD *)&v48[18] = v41;
    *(_WORD *)&v48[22] = 1026;
    LODWORD(v49) = v42;
    WORD2(v49) = 1026;
    *(_DWORD *)((char *)&v49 + 6) = v43;
    WORD5(v49) = 1026;
    HIDWORD(v49) = (_DWORD)v36;
    LODWORD(v45) = 56;
    float v16 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#LCStats,feedLCFuserSessionStartMetrics,homeVisit,%{private}d,%{public}d,%{public}d,%{public}d ,%{public}d,%{public}d,%{public}d,%{public}d,%{public}d",  &v46,  v45,  v46,  v47,  *(_OWORD *)v48,  *(void *)&v48[16],  v49);
    goto LABEL_62;
  }

void sub_100D90F84(id a1)
{
  qword_101934838 = (uint64_t)os_log_create("com.apple.locationd.Position", "Position");
}

void sub_100D90FB0(void **a1, unint64_t a2)
{
  uint64_t v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  uint64_t v5 = v6;
  uint64_t v7 = *(char **)(v4 - 8);
  if (0xAAAAAAAAAAAAAAABLL * ((v6 - v7) >> 4) >= a2)
  {
    if (a2)
    {
      size_t v13 = 48 * ((48 * a2 - 48) / 0x30) + 48;
      bzero(*(void **)(v4 - 8), v13);
      v7 += v13;
    }

    a1[1] = v7;
  }

  else
  {
    unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((v7 - (_BYTE *)*a1) >> 4);
    unint64_t v9 = v8 + a2;
    if (v8 + a2 > 0x555555555555555LL) {
      sub_100007008();
    }
    unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((v5 - (_BYTE *)*a1) >> 4);
    if (2 * v10 > v9) {
      unint64_t v9 = 2 * v10;
    }
    if (v10 >= 0x2AAAAAAAAAAAAAALL) {
      unint64_t v11 = 0x555555555555555LL;
    }
    else {
      unint64_t v11 = v9;
    }
    if (v11) {
      float v12 = (char *)sub_1000BB1F4(v4, v11);
    }
    else {
      float v12 = 0LL;
    }
    int v14 = &v12[48 * v8];
    double v15 = &v12[48 * v11];
    size_t v16 = 48 * ((48 * a2 - 48) / 0x30) + 48;
    bzero(v14, v16);
    unint64_t v17 = &v14[v16];
    int v19 = (char *)*a1;
    uint64_t v18 = (char *)a1[1];
    if (v18 != *a1)
    {
      do
      {
        __int128 v20 = *((_OWORD *)v18 - 3);
        __int128 v21 = *((_OWORD *)v18 - 1);
        *((_OWORD *)v14 - 2) = *((_OWORD *)v18 - 2);
        *((_OWORD *)v14 - 1) = v21;
        *((_OWORD *)v14 - 3) = v20;
        v14 -= 48;
        v18 -= 48;
      }

      while (v18 != v19);
      uint64_t v18 = (char *)*a1;
    }

    *a1 = v14;
    a1[1] = v17;
    a1[2] = v15;
    if (v18) {
      operator delete(v18);
    }
  }

uint64_t **sub_100D91130(uint64_t **a1, int *a2, uint64_t a3, _DWORD **a4)
{
  uint64_t v7 = a1 + 1;
  uint64_t v6 = a1[1];
  if (v6)
  {
    int v8 = *a2;
    while (1)
    {
      while (1)
      {
        unint64_t v9 = (uint64_t **)v6;
        int v10 = *((_DWORD *)v6 + 8);
        if (v8 >= v10) {
          break;
        }
        uint64_t v6 = *v9;
        uint64_t v7 = v9;
        if (!*v9) {
          goto LABEL_10;
        }
      }

      if (v10 >= v8) {
        break;
      }
      uint64_t v6 = v9[1];
      if (!v6)
      {
        uint64_t v7 = v9 + 1;
        goto LABEL_10;
      }
    }
  }

  else
  {
    unint64_t v9 = a1 + 1;
LABEL_10:
    unint64_t v11 = (char *)operator new(0x68uLL);
    *((_DWORD *)v11 + 8) = **a4;
    *(_OWORD *)(v11 + 88) = 0u;
    *(_OWORD *)(v11 + 72) = 0u;
    *(_OWORD *)(v11 + 56) = 0u;
    *(_OWORD *)(v11 + 40) = 0u;
    sub_1000085FC(a1, (uint64_t)v9, v7, (uint64_t *)v11);
    return (uint64_t **)v11;
  }

  return v9;
}

id sub_100D91200(void *a1)
{
  uint64_t v6 = 0LL;
  id v2 =  [[LSApplicationRecord alloc] initWithBundleIdentifier:a1 allowPlaceholder:0 error:&v6];
  if (v6)
  {
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101882448);
    }
    double v3 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_INFO))
    {
      id v4 = [a1 UTF8String];
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v8 = 0;
      __int16 v9 = 2082;
      int v10 = "";
      __int16 v11 = 2082;
      id v12 = v4;
      __int16 v13 = 2114;
      uint64_t v14 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:LSApplicationRecord returned an error for bundleId on getLSApplicationRecord, bundleI D:%{public, location:escape_only}s, error:%{public, location:escape_only}@}",  buf,  0x26u);
    }
  }

  return v2;
}

void sub_100D913D8(id a1)
{
  qword_10199E5E0 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLAppMonitorSilo");
}

uint64_t sub_100D9148C(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100D93BA0;
  block[3] = &unk_10181A288;
  void block[4] = a1;
  if (qword_10199E5F0 != -1) {
    dispatch_once(&qword_10199E5F0, block);
  }
  return qword_1019A2098;
}

BOOL sub_100D91610(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a2 = *(_DWORD *)(a1 + 120);
  std::string::operator=((std::string *)(a2 + 8), (const std::string *)(a1 + 128));
  std::string::operator=((std::string *)(a2 + 32), (const std::string *)(a1 + 152));
  std::string::operator=((std::string *)(a2 + 56), (const std::string *)(a1 + 176));
  std::string::operator=((std::string *)(a2 + 80), (const std::string *)(a1 + 200));
  *(_WORD *)(a2 + 104) = *(_WORD *)(a1 + 224);
  uint64_t v4 = *(unsigned __int8 *)(a2 + 31);
  if ((v4 & 0x80u) != 0LL) {
    uint64_t v4 = *(void *)(a2 + 16);
  }
  return v4 != 0;
}

BOOL sub_100D916B0(void *a1)
{
  uint64_t v12 = 0LL;
  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_101882448);
  }
  id v2 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 68289282;
    int v14 = 0;
    __int16 v15 = 2082;
    size_t v16 = "";
    __int16 v17 = 2114;
    id v18 = a1;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:#ClearClient isApplicationInstalledLocally determining if app is installed via LSApplicatio nWorkspace & LSApplicationExtensionRecord, bundleID:%{public, location:escape_only}@}",  buf,  0x1Cu);
  }

  if ((objc_msgSend( +[LSApplicationWorkspace defaultWorkspace]( LSApplicationWorkspace,  "defaultWorkspace"),  "applicationIsInstalled:",  a1) & 1) != 0 ||  objc_msgSend( [LSApplicationExtensionRecord alloc],  "initWithBundleIdentifier:error:",  a1,  &v12))
  {
    BOOL v3 = 1LL;
  }

  else
  {
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101882448);
    }
    int v8 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289282;
      int v14 = 0;
      __int16 v15 = 2082;
      size_t v16 = "";
      __int16 v17 = 2114;
      id v18 = a1;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:#ClearClient isApplicationInstalledLocally determining if app is installed via LSApplicat ionRecord, bundleID:%{public, location:escape_only}@}",  buf,  0x1Cu);
    }

    id v9 = [[LSApplicationRecord alloc] initWithBundleIdentifier:a1 allowPlaceholder:0 error:&v12];
    id v10 = [v9 localizedName];
    BOOL v3 = v10 != 0LL;
    if (!v10)
    {
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101882448);
      }
      __int16 v11 = (os_log_s *)qword_101934988;
      if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 68289282;
        int v14 = 0;
        __int16 v15 = 2082;
        size_t v16 = "";
        __int16 v17 = 2114;
        id v18 = a1;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#ClearClient isApplicationInstalledLocally LSApplicationRecord is not considered instal led, bundleID:%{public, location:escape_only}@}",  buf,  0x1Cu);
      }
    }
  }

  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_101882448);
  }
  uint64_t v4 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 68289538;
    int v14 = 0;
    __int16 v15 = 2082;
    size_t v16 = "";
    __int16 v17 = 2114;
    id v18 = a1;
    __int16 v19 = 1026;
    LODWORD(v20) = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:#ClearClient isApplicationInstalledLocally, bundleID:%{public, location:escape_only}@ , isAppInstalled?:%{public}hhd}",  buf,  0x22u);
  }

  if (v12)
  {
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101882448);
    }
    uint64_t v5 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_INFO))
    {
      id v6 = [a1 UTF8String];
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v14 = 0;
      __int16 v15 = 2082;
      size_t v16 = "";
      __int16 v17 = 2082;
      id v18 = v6;
      __int16 v19 = 2114;
      uint64_t v20 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:LaunchServices did not find app in its database, bundleId:%{public, location:escape _only}s, error:%{public, location:escape_only}@}",  buf,  0x26u);
    }
  }

  return v3;
}

uint64_t sub_100D91AA4(uint64_t a1, void *a2, uint64_t a3)
{
  BOOL v5 = sub_100D916B0(a2) || sub_100D916B0(a2);
  return (*(uint64_t (**)(uint64_t, BOOL))(a3 + 16))(a3, v5);
}

uint64_t sub_100D91B10(void *a1)
{
  id v2 = objc_msgSend(objc_msgSend(sub_100D91200(a1), "compatibilityObject"), "applicationType");
  if (v2)
  {
    BOOL v3 = v2;
    if (CFEqual(v2, @"System"))
    {
      return 1LL;
    }

    else if (CFEqual(v3, @"User"))
    {
      return 2LL;
    }

    else if (CFEqual(v3, @"Internal"))
    {
      return 3LL;
    }

    else
    {
      return 0LL;
    }
  }

  else
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101882488);
    }
    BOOL v5 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 136315138;
      id v12 = [a1 UTF8String];
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "#Warning no app type available for %s",  buf,  0xCu);
    }

    uint64_t result = sub_1002921D0(115, 2);
    if ((_DWORD)result)
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101882488);
      }
      uint64_t v6 = qword_101934A78;
      int v9 = 136315138;
      id v10 = [a1 UTF8String];
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v6,  0LL,  "#Warning no app type available for %s",  (const char *)&v9);
      int v8 = (uint8_t *)v7;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static CLAppMonitor_Type::AppType CLAppMonitor::getAppType(CFStringRef)",  "%s\n",  v7);
      if (v8 != buf) {
        free(v8);
      }
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_100D91D58(uint64_t a1, const __CFDictionary *a2)
{
  int v38 = 0;
  int v30 = -1;
  *(_OWORD *)int v31 = 0u;
  *(_OWORD *)int v32 = 0u;
  __int128 v33 = 0u;
  *(_OWORD *)unsigned int v34 = 0u;
  *(_OWORD *)std::stringbuf::string_type __p = 0u;
  __int128 v36 = 0u;
  __int16 v37 = 0;
  if (&BKSApplicationStateKey)
  {
    if ((sub_1002A7D20((uint64_t)v39, BKSApplicationStateKey, &v29) & 1) != 0)
    {
      switch(v29)
      {
        case 0:
          int v3 = 0;
          int v38 = 0;
          goto LABEL_33;
        case 1:
          char v9 = 0;
          int v3 = 1;
          int v38 = 1;
          goto LABEL_34;
        case 2:
          int v3 = 2;
          goto LABEL_32;
        case 3:
        case 5:
        case 6:
        case 7:
          goto LABEL_19;
        case 4:
          int v3 = 3;
          goto LABEL_32;
        case 8:
          int v3 = 4;
          goto LABEL_32;
        default:
          if (v29 == 16)
          {
            int v3 = 5;
            goto LABEL_32;
          }

          if (v29 == 32)
          {
            int v3 = 6;
LABEL_32:
            int v38 = v3;
            goto LABEL_33;
          }

void sub_100D92718( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27)
{
}

void sub_100D927C8(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  int v40 = 0;
  unsigned int v32 = -1;
  *(_OWORD *)__int128 v33 = 0u;
  *(_OWORD *)unsigned int v34 = 0u;
  __int128 v35 = 0u;
  *(_OWORD *)__int128 v36 = 0u;
  *(_OWORD *)__int16 v37 = 0u;
  __int128 v38 = 0u;
  __int16 v39 = 0;
  if (*(void *)(a1 + 280) == a4)
  {
    if (([a3 pid] & 0x80000000) != 0)
    {
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101882448);
      }
      uint64_t v16 = qword_101934988;
      if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 68289026;
        *(_DWORD *)&uint8_t buf[4] = 0;
        __int16 v42 = 2082;
        int v43 = "";
        int v8 = "{msg%{public}.0s:RBS #AppMonitor received with invalid pid...adios!}";
        char v9 = (os_log_s *)v16;
        uint32_t v10 = 18;
        goto LABEL_6;
      }
    }

    else if ([a3 bundle])
    {
      unsigned int v13 = objc_msgSend(objc_msgSend(a2, "state"), "taskState");
      unsigned int v32 = [a3 pid];
      std::string::assign( (std::string *)v33,  (const std::string::value_type *)objc_msgSend( objc_msgSend(objc_msgSend(a3, "bundle"), "identifier"),  "UTF8String"));
      switch(v13)
      {
        case 0u:
          int v14 = 0;
          int v15 = 0;
          int v40 = 0;
          break;
        case 1u:
          int v14 = 1;
          int v40 = 1;
          int v15 = 1;
          break;
        case 2u:
        case 4u:
          int v14 = 0;
          if (objc_msgSend( objc_msgSend(objc_msgSend(a2, "state"), "endowmentNamespaces"),  "containsObject:",  @"com.apple.frontboard.visibility")) {
            int v15 = 4;
          }
          else {
            int v15 = 3;
          }
          goto LABEL_32;
        case 3u:
          int v14 = 0;
          int v15 = 2;
LABEL_32:
          int v40 = v15;
          break;
        default:
          if (qword_101934980 != -1) {
            dispatch_once(&qword_101934980, &stru_101882448);
          }
          id v18 = (os_log_s *)qword_101934988;
          if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_FAULT))
          {
            *(_DWORD *)std::stringbuf::string_type buf = 68289282;
            *(_DWORD *)&uint8_t buf[4] = 0;
            __int16 v42 = 2082;
            int v43 = "";
            __int16 v44 = 2050;
            *(void *)uint64_t v45 = v13;
            _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:RBS #AppMonitor unknown task state, state:%{public, location:RBSTaskState}lld}",  buf,  0x1Cu);
            if (qword_101934980 != -1) {
              dispatch_once(&qword_101934980, &stru_101882448);
            }
          }

          size_t v19 = (os_log_s *)qword_101934988;
          if (os_signpost_enabled((os_log_t)qword_101934988))
          {
            *(_DWORD *)std::stringbuf::string_type buf = 68289282;
            *(_DWORD *)&uint8_t buf[4] = 0;
            __int16 v42 = 2082;
            int v43 = "";
            __int16 v44 = 2050;
            *(void *)uint64_t v45 = v13;
            _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v19,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "RBS #AppMonitor unknown task state",  "{msg%{public}.0s:RBS #AppMonitor unknown task state, state:%{public, location:RBSTaskState}lld}",  buf,  0x1Cu);
          }

          int v14 = 0;
          int v15 = 0;
          break;
      }

      if (!objc_msgSend(objc_msgSend(a3, "bundle"), "identifier"))
      {
        if (qword_101934980 != -1) {
          dispatch_once(&qword_101934980, &stru_101882448);
        }
        uint64_t v20 = (os_log_s *)qword_101934988;
        if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_FAULT))
        {
          *(_DWORD *)std::stringbuf::string_type buf = 68289026;
          *(_DWORD *)&uint8_t buf[4] = 0;
          __int16 v42 = 2082;
          int v43 = "";
          _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:RBS #AppMonitor failed to retreive bundleID}",  buf,  0x12u);
          if (qword_101934980 != -1) {
            dispatch_once(&qword_101934980, &stru_101882448);
          }
        }

        __int128 v21 = (os_log_s *)qword_101934988;
        if (os_signpost_enabled((os_log_t)qword_101934988))
        {
          *(_DWORD *)std::stringbuf::string_type buf = 68289026;
          *(_DWORD *)&uint8_t buf[4] = 0;
          __int16 v42 = 2082;
          int v43 = "";
          _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v21,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "RBS #AppMonitor failed to retreive bundleID",  "{msg%{public}.0s:RBS #AppMonitor failed to retreive bundleID}",  buf,  0x12u);
        }
      }

      if (v14)
      {
        LOBYTE(v39) = objc_msgSend(objc_msgSend(objc_msgSend(a3, "lastExitContext"), "status"), "code") == (id)3735943697;
        if (qword_101934980 != -1) {
          dispatch_once(&qword_101934980, &stru_101882448);
        }
        int v22 = (os_log_s *)qword_101934988;
        if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
        {
          if (SHIBYTE(v34[0]) >= 0) {
            int v23 = v33;
          }
          else {
            int v23 = (void **)v33[0];
          }
          *(_DWORD *)std::stringbuf::string_type buf = 68289794;
          *(_DWORD *)&uint8_t buf[4] = 0;
          __int16 v42 = 2082;
          int v43 = "";
          __int16 v44 = 1026;
          *(_DWORD *)uint64_t v45 = v32;
          *(_WORD *)&v45[4] = 2082;
          *(void *)&v45[6] = v23;
          *(_WORD *)&v45[14] = 1026;
          *(_DWORD *)&v45[16] = v39;
          _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:RBS #dic AppMonitor received Termination, pid:%{public}d, bundleId:%{public , location:escape_only}s, isUserKill:%{public}hhd}",  buf,  0x28u);
        }
      }

      std::string::assign( (std::string *)&v37[1],  (const std::string::value_type *)objc_msgSend(objc_msgSend(objc_msgSend(a3, "bundle"), "path"), "UTF8String"));
      sub_100D9958C((void *)(a1 + 232), (unsigned __int8 *)v33);
      if ((v15 - 1) >= 3)
      {
        if (v15 == 4)
        {
          *(_DWORD *)(a1 + 120) = v32;
          std::string::operator=((std::string *)(a1 + 128), (const std::string *)v33);
          std::string::operator=((std::string *)(a1 + 152), (const std::string *)&v34[1]);
          std::string::operator=((std::string *)(a1 + 176), (const std::string *)v36);
          std::string::operator=((std::string *)(a1 + 200), (const std::string *)&v37[1]);
          *(_WORD *)(a1 + 2sub_100BDC958(v1 + 24) = v39;
          *(_DWORD *)std::stringbuf::string_type buf = 9;
          sub_100D988E8(buf, (__int128 *)v33, (uint64_t)&v32);
          sub_100D9961C(a1 + 232, buf, (__int128 *)buf);
          if (v52 < 0) {
            operator delete(__p);
          }
          if (v50 < 0) {
            operator delete(v49);
          }
          if (v48 < 0) {
            operator delete(v47);
          }
          if (v46 < 0) {
            operator delete(*(void **)&v45[12]);
          }
          if ((v45[3] & 0x80000000) != 0) {
            operator delete(*(void **)buf);
          }
        }
      }

      else
      {
        if (*(char *)(a1 + 151) < 0)
        {
          int v24 = *(const void **)(a1 + 128);
          size_t v25 = *(void *)(a1 + 136);
        }

        else
        {
          int v24 = (const void *)(a1 + 128);
          size_t v25 = *(unsigned __int8 *)(a1 + 151);
        }

        if (SHIBYTE(v34[0]) >= 0) {
          int v26 = (void *)HIBYTE(v34[0]);
        }
        else {
          int v26 = v33[1];
        }
        if (SHIBYTE(v34[0]) >= 0) {
          int v27 = v33;
        }
        else {
          int v27 = (void **)v33[0];
        }
        else {
          size_t v28 = (size_t)v26;
        }
        if (!memcmp(v24, v27, v28) && v26 == (void *)v25)
        {
          sub_100D95248(a1 + 120);
          [*(id *)(a1 + 112) setNextFireDelay:1.79769313e308];
        }
      }

      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101882448);
      }
      int v29 = (os_log_s *)qword_101934988;
      if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
      {
        int v30 = sub_100D943B0(&v40);
        if (SHIBYTE(v34[0]) >= 0) {
          int v31 = v33;
        }
        else {
          int v31 = (void **)v33[0];
        }
        *(_DWORD *)std::stringbuf::string_type buf = 68289794;
        *(_DWORD *)&uint8_t buf[4] = 0;
        __int16 v42 = 2082;
        int v43 = "";
        __int16 v44 = 2082;
        *(void *)uint64_t v45 = v30;
        *(_WORD *)&v45[8] = 1026;
        *(_DWORD *)&v45[10] = v32;
        *(_WORD *)&v45[14] = 2082;
        *(void *)&v45[16] = v31;
        _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:RBS #AppMonitor Post Application State Change Notification, notification:%{public , location:escape_only}s, pid:%{public}d, bundleId:%{public, location:escape_only}s}",  buf,  0x2Cu);
      }

      (*(void (**)(uint64_t, int *, unsigned int *, void, uint64_t, void))(*(void *)a1 + 152LL))( a1,  &v40,  &v32,  0LL,  0xFFFFFFFFLL,  0LL);
    }

    else
    {
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101882448);
      }
      uint64_t v17 = qword_101934988;
      if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 68289282;
        *(_DWORD *)&uint8_t buf[4] = 0;
        __int16 v42 = 2082;
        int v43 = "";
        __int16 v44 = 1026;
        *(_DWORD *)uint64_t v45 = [a3 pid];
        int v8 = "{msg%{public}.0s:RBS #AppMonitor received null bundle info, discarding, pid:%{public}d}";
        char v9 = (os_log_s *)v17;
        uint32_t v10 = 24;
        goto LABEL_6;
      }
    }
  }

  else
  {
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101882448);
    }
    uint64_t v6 = qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = *(void *)(a1 + 280);
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v42 = 2082;
      int v43 = "";
      __int16 v44 = 2050;
      *(void *)uint64_t v45 = v7;
      *(_WORD *)&v45[8] = 2050;
      *(void *)&v45[10] = a4;
      int v8 = "{msg%{public}.0s:RBS #AppMonitor #Warning you're not the one I'm expecting, expected:%{public}p"
           ", received:%{public}p}";
      char v9 = (os_log_s *)v6;
      uint32_t v10 = 38;
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, v8, buf, v10);
    }
  }

  if (SHIBYTE(v38) < 0) {
    operator delete(v37[1]);
  }
  if (SHIBYTE(v37[0]) < 0) {
    operator delete(v36[0]);
  }
  if (SHIBYTE(v35) < 0) {
    operator delete(v34[1]);
  }
  if (SHIBYTE(v34[0]) < 0) {
    operator delete(v33[0]);
  }
}

void sub_100D93100(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  sub_100D94C84((uint64_t)va1);
  sub_100520C7C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100D93174(uint64_t a1, void *a2)
{
  int v16 = -1;
  *(_OWORD *)uint64_t v17 = 0u;
  *(_OWORD *)uint64_t v18 = 0u;
  __int128 v19 = 0u;
  *(_OWORD *)uint64_t v20 = 0u;
  __int128 v21 = 0u;
  __int128 v22 = 0u;
  __int16 v23 = 0;
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  __int128 v14 = 0u;
  __int128 v15 = 0u;
  id v3 = [a2 countByEnumeratingWithState:&v12 objects:v30 count:16];
  if (v3)
  {
    uint64_t v5 = *(void *)v13;
    *(void *)&__int128 v4 = 68289282LL;
    __int128 v10 = v4;
    do
    {
      uint64_t v6 = 0LL;
      do
      {
        if (*(void *)v13 != v5) {
          objc_enumerationMutation(a2);
        }
        uint64_t v7 = *(void **)(*((void *)&v12 + 1) + 8LL * (void)v6);
        if (objc_msgSend(v7, "bundleIdentifier", v10))
        {
          std::string::assign( (std::string *)v17,  (const std::string::value_type *)objc_msgSend(objc_msgSend(v7, "bundleIdentifier"), "UTF8String"));
          std::string::operator=((std::string *)&v18[1], (const std::string *)v17);
          std::string::assign( (std::string *)v20,  (const std::string::value_type *)objc_msgSend( objc_msgSend(objc_msgSend(v7, "bundleURL"), "path"),  "UTF8String"));
          std::string::assign( (std::string *)((char *)&v21 + 8),  (const std::string::value_type *)objc_msgSend( objc_msgSend( objc_msgSend( objc_msgSend(v7, "correspondingApplicationRecord"),  "executableURL"),  "path"),  "UTF8String"));
          *(_DWORD *)std::stringbuf::string_type buf = 10;
          (*(void (**)(uint64_t, uint8_t *, int *, void, uint64_t, void))(*(void *)a1 + 152LL))( a1,  buf,  &v16,  0LL,  0xFFFFFFFFLL,  0LL);
        }

        else
        {
          if (qword_101934980 != -1) {
            dispatch_once(&qword_101934980, &stru_101882448);
          }
          uint64_t v8 = (os_log_s *)qword_101934988;
          if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_FAULT))
          {
            *(_DWORD *)std::stringbuf::string_type buf = v10;
            int v25 = 0;
            __int16 v26 = 2082;
            int v27 = "";
            __int16 v28 = 2114;
            int v29 = v7;
            _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:AppMonitor apps installed, but cannot get bundle info from appProxy, AppProxy :%{public, location:escape_only}@}",  buf,  0x1Cu);
            if (qword_101934980 != -1) {
              dispatch_once(&qword_101934980, &stru_101882448);
            }
          }

          uint64_t v9 = (os_log_s *)qword_101934988;
          if (os_signpost_enabled((os_log_t)qword_101934988))
          {
            *(_DWORD *)std::stringbuf::string_type buf = v10;
            int v25 = 0;
            __int16 v26 = 2082;
            int v27 = "";
            __int16 v28 = 2114;
            int v29 = v7;
            _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v9,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "AppMonitor apps installed, but cannot get bundle info from appProxy",  "{msg%{public}.0s:AppMonitor apps installed, but cannot get bundle info from appProxy, AppProxy :%{public, location:escape_only}@}",  buf,  0x1Cu);
          }
        }

        uint64_t v6 = (char *)v6 + 1;
      }

      while (v3 != v6);
      id v3 = [a2 countByEnumeratingWithState:&v12 objects:v30 count:16];
    }

    while (v3);
  }

  if (SHIBYTE(v22) < 0) {
    operator delete(*((void **)&v21 + 1));
  }
  if (SBYTE7(v21) < 0) {
    operator delete(v20[0]);
  }
  if (SHIBYTE(v19) < 0) {
    operator delete(v18[1]);
  }
  if (SHIBYTE(v18[0]) < 0) {
    operator delete(v17[0]);
  }
}

void sub_100D934C8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
}

void sub_100D9350C(uint64_t a1, void *a2)
{
  int v16 = -1;
  *(_OWORD *)uint64_t v17 = 0u;
  *(_OWORD *)uint64_t v18 = 0u;
  __int128 v19 = 0u;
  *(_OWORD *)uint64_t v20 = 0u;
  __int128 v21 = 0u;
  __int128 v22 = 0u;
  __int16 v23 = 0;
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  __int128 v14 = 0u;
  __int128 v15 = 0u;
  id v4 = [a2 countByEnumeratingWithState:&v12 objects:v30 count:16];
  if (v4)
  {
    uint64_t v6 = *(void *)v13;
    *(void *)&__int128 v5 = 68289282LL;
    __int128 v11 = v5;
    do
    {
      uint64_t v7 = 0LL;
      do
      {
        if (*(void *)v13 != v6) {
          objc_enumerationMutation(a2);
        }
        uint64_t v8 = *(void **)(*((void *)&v12 + 1) + 8LL * (void)v7);
        if (objc_msgSend(v8, "bundleIdentifier", v11))
        {
          std::string::assign( (std::string *)v17,  (const std::string::value_type *)objc_msgSend(objc_msgSend(v8, "bundleIdentifier"), "UTF8String"));
          *(_DWORD *)std::stringbuf::string_type buf = 11;
          (*(void (**)(uint64_t, uint8_t *, int *, void, uint64_t, void))(*(void *)a1 + 152LL))( a1,  buf,  &v16,  0LL,  0xFFFFFFFFLL,  0LL);
        }

        else
        {
          if (qword_101934980 != -1) {
            dispatch_once(&qword_101934980, &stru_101882448);
          }
          uint64_t v9 = (os_log_s *)qword_101934988;
          if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_FAULT))
          {
            *(_DWORD *)std::stringbuf::string_type buf = v11;
            int v25 = 0;
            __int16 v26 = 2082;
            int v27 = "";
            __int16 v28 = 2114;
            int v29 = v8;
            _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:AppMonitor apps uninstalled, but cannot get bundle info from appProxy, AppProxy :%{public, location:escape_only}@}",  buf,  0x1Cu);
            if (qword_101934980 != -1) {
              dispatch_once(&qword_101934980, &stru_101882448);
            }
          }

          __int128 v10 = (os_log_s *)qword_101934988;
          if (os_signpost_enabled((os_log_t)qword_101934988))
          {
            *(_DWORD *)std::stringbuf::string_type buf = v11;
            int v25 = 0;
            __int16 v26 = 2082;
            int v27 = "";
            __int16 v28 = 2114;
            int v29 = v8;
            _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v10,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "AppMonitor apps uninstalled, but cannot get bundle info from appProxy",  "{msg%{public}.0s:AppMonitor apps uninstalled, but cannot get bundle info from appProxy, AppProxy :%{public, location:escape_only}@}",  buf,  0x1Cu);
          }
        }

        uint64_t v7 = (char *)v7 + 1;
      }

      while (v4 != v7);
      id v4 = [a2 countByEnumeratingWithState:&v12 objects:v30 count:16];
    }

    while (v4);
  }

  if (SHIBYTE(v22) < 0) {
    operator delete(*((void **)&v21 + 1));
  }
  if (SBYTE7(v21) < 0) {
    operator delete(v20[0]);
  }
  if (SHIBYTE(v19) < 0) {
    operator delete(v18[1]);
  }
  if (SHIBYTE(v18[0]) < 0) {
    operator delete(v17[0]);
  }
}

void sub_100D93804( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
}

void sub_100D93854(uint64_t a1, void *a2, uint64_t a3)
{
  id v4 = a2;
  if ([a2 count])
  {
    uint64_t v18 = a3;
    id v6 = +[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array");
    id v7 = +[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array");
    id v8 = +[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array");
    uint64_t v9 = dispatch_group_create();
    id v10 = [*(id *)(a1 + 32) silo];
    __int128 v29 = 0u;
    __int128 v30 = 0u;
    __int128 v31 = 0u;
    __int128 v32 = 0u;
    id v11 = [v4 countByEnumeratingWithState:&v29 objects:v33 count:16];
    if (v11)
    {
      id v12 = v11;
      uint64_t v13 = *(void *)v30;
      do
      {
        __int128 v14 = v4;
        __int128 v15 = 0LL;
        do
        {
          if (*(void *)v30 != v13) {
            objc_enumerationMutation(v14);
          }
          int v16 = *(void **)(*((void *)&v29 + 1) + 8LL * (void)v15);
          dispatch_group_enter(v9);
          v20[0] = _NSConcreteStackBlock;
          v20[1] = 3221225472LL;
          __int128 v21 = sub_100D95E34;
          __int128 v22 = &unk_101882378;
          id v23 = v10;
          id v24 = v8;
          int v25 = v16;
          id v26 = v7;
          id v27 = v6;
          __int16 v28 = v9;
          if (sub_100D916B0(v16)) {
            uint64_t v17 = 2LL;
          }
          else {
            uint64_t v17 = 1LL;
          }
          v21((uint64_t)v20, v17);
          __int128 v15 = (char *)v15 + 1;
        }

        while (v12 != v15);
        id v4 = v14;
        id v12 = [v14 countByEnumeratingWithState:&v29 objects:v33 count:16];
      }

      while (v12);
    }

    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100D9600C;
    block[3] = &unk_1018823A0;
    block[7] = v8;
    block[8] = v18;
    void block[4] = v9;
    void block[5] = v6;
    block[6] = v7;
    dispatch_group_notify(v9, (dispatch_queue_t)[v10 queue], block);
  }

  else
  {
    (*(void (**)(uint64_t, NSArray *, NSArray *, NSArray *))(a3 + 16))( a3,  +[NSArray array](&OBJC_CLASS___NSArray, "array"),  +[NSArray array](&OBJC_CLASS___NSArray, "array"),  +[NSArray array](&OBJC_CLASS___NSArray, "array"));
  }

uint64_t sub_100D93BA0(uint64_t a1)
{
  id v2 = operator new(0x130uLL);
  uint64_t result = sub_100D93BEC((uint64_t)v2, *(void **)(a1 + 32));
  qword_1019A2098 = (uint64_t)v2;
  return result;
}

void sub_100D93BD8(_Unwind_Exception *a1)
{
}

uint64_t sub_100D93BEC(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_100D9409C(a1, "CLAppMonitor", a2);
  *(void *)uint64_t v3 = off_1018821F8;
  *(void *)(v3 + 112) = 0LL;
  *(_DWORD *)(v3 + 120) = -1;
  *(_OWORD *)(v3 + 128) = 0u;
  *(_OWORD *)(v3 + 144) = 0u;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_OWORD *)(v3 + 192) = 0u;
  *(_OWORD *)(v3 + 208) = 0u;
  *(_WORD *)(v3 + 2sub_100BDC958(v1 + 24) = 0;
  *(_OWORD *)(v3 + 232) = 0u;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 264) = 1065353216;
  *(void *)(v3 + 296) = 0LL;
  *(void *)(v3 + 272) = 0LL;
  *(void *)(v3 + 280) = 0LL;
  id v4 = [*(id *)(v3 + 40) newTimer];
  *(void *)(a1 + 112) = v4;
  v24[0] = _NSConcreteStackBlock;
  v24[1] = 3221225472LL;
  v24[2] = sub_100D94138;
  v24[3] = &unk_10181D3D0;
  v24[4] = a1;
  [v4 setHandler:v24];
  id v5 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "vendor"), "proxyForService:", @"CLAppMonitor");
  *(void *)(a1 + 288) = -[CLAppMonitorAppObserver initWithAppMonitorProxy:]( objc_alloc(&OBJC_CLASS___CLAppMonitorAppObserver),  "initWithAppMonitorProxy:",  v5);
  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_101882448);
  }
  id v6 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 68289026;
    int v26 = 0;
    __int16 v27 = 2082;
    __int16 v28 = "";
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#AppMonitior using RBSMonitor}",  buf,  0x12u);
  }

  *(void *)&double v7 = objc_opt_class(&OBJC_CLASS___RBSProcessMonitor).n128_u64[0];
  if (v8)
  {
    v23[0] = _NSConcreteStackBlock;
    v23[1] = 3221225472LL;
    v23[2] = sub_100D943D8;
    double v23[3] = &unk_1018822F8;
    v23[4] = v5;
    v23[5] = a1;
    uint64_t v9 = +[RBSProcessMonitor monitorWithConfiguration:]( &OBJC_CLASS___RBSProcessMonitor,  "monitorWithConfiguration:",  v23,  v7);
    *(void *)(a1 + 280) = v9;
    id v10 = v9;
  }

  else
  {
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101882448);
    }
    id v11 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_ERROR))
    {
      sub_1004F2598();
      sub_1004F6370((uint64_t)__p);
      if (v22 >= 0) {
        id v12 = __p;
      }
      else {
        id v12 = (void **)__p[0];
      }
      *(_DWORD *)std::stringbuf::string_type buf = 68289282;
      int v26 = 0;
      __int16 v27 = 2082;
      __int16 v28 = "";
      __int16 v29 = 2082;
      __int128 v30 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_ERROR,  "{msg%{public}.0s:#Warning RBSProcessMonitor is not available on this platform, platfrom:%{public, lo cation:escape_only}s}",  buf,  0x1Cu);
      if (v22 < 0) {
        operator delete(__p[0]);
      }
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101882448);
      }
    }

    uint64_t v13 = (os_log_s *)qword_101934988;
    if (os_signpost_enabled((os_log_t)qword_101934988))
    {
      sub_1004F2598();
      sub_1004F6370((uint64_t)__p);
      __int128 v14 = v22 >= 0 ? __p : (void **)__p[0];
      *(_DWORD *)std::stringbuf::string_type buf = 68289282;
      int v26 = 0;
      __int16 v27 = 2082;
      __int16 v28 = "";
      __int16 v29 = 2082;
      __int128 v30 = v14;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v13,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "#Warning RBSProcessMonitor is not available on this platform",  "{msg%{public}.0s:#Warning RBSProcessMonitor is not available on this platform, platfrom:%{public, lo cation:escape_only}s}",  buf,  0x1Cu);
      if (v22 < 0) {
        operator delete(__p[0]);
      }
    }
  }

  objc_opt_class(&OBJC_CLASS___BKSApplicationStateMonitor);
  if (v15)
  {
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101882448);
    }
    int v16 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289026;
      int v26 = 0;
      __int16 v27 = 2082;
      __int16 v28 = "";
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#AppMonitor using legacy BKSApplicationStateMonitor for reference}",  buf,  0x12u);
    }

    id v17 = objc_alloc(&OBJC_CLASS___BKSApplicationStateMonitor);
    id v18 = [v17 initWithBundleIDs:0 states:BKSApplicationStateAll elevatedPriority:1];
    *(void *)(a1 + 272) = v18;
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 3221225472LL;
    void v20[2] = sub_100D94668;
    v20[3] = &unk_101882320;
    v20[4] = v5;
    [v18 setHandler:v20];
  }

  return a1;
}

void sub_100D9406C(_Unwind_Exception *a1)
{
}

uint64_t sub_100D9409C(uint64_t a1, char *a2, void *a3)
{
  *(void *)a1 = off_1018824B8;
  sub_1010DDBC0((void *)(a1 + 8), a2);
  *(void *)(a1 + 32) = a3;
  *(void *)(a1 + 40) = [a3 silo];
  *(void *)(a1 + 48) = 0LL;
  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + 56) = a1 + 64;
  *(void *)(a1 + 88) = 0LL;
  *(void *)(a1 + 96) = 0LL;
  *(void *)(a1 + 72) = 0LL;
  *(void *)(a1 + 80) = a1 + 88;
  *(_DWORD *)(a1 + 104) = 0;
  *(_BYTE *)(a1 + 108) = 0;
  return a1;
}

void sub_100D9411C(_Unwind_Exception *exception_object)
{
}

uint64_t sub_100D94138(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101882488);
  }
  uint64_t v2 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    int v14 = 9;
    uint64_t v3 = sub_100D943B0(&v14);
    int v4 = *(_DWORD *)(v1 + 120);
    id v5 = (void *)(v1 + 128);
    *(_DWORD *)std::stringbuf::string_type buf = 134219010;
    uint64_t v25 = 0x4014000000000000LL;
    __int16 v26 = 2080;
    __int16 v27 = v3;
    __int16 v28 = 1024;
    int v29 = 9;
    __int16 v30 = 1024;
    int v31 = v4;
    __int16 v32 = 2080;
    __int128 v33 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "App foregrounded for %.2fs.  Post %s (%d), pid, %d, bundleId, %s",  buf,  0x2Cu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101882488);
    }
    uint64_t v7 = qword_101934A78;
    HIDWORD(v13) = 9;
    uint64_t v8 = sub_100D943B0((int *)&v13 + 1);
    int v9 = *(_DWORD *)(v1 + 120);
    id v10 = (void *)(v1 + 128);
    int v14 = 134219010;
    uint64_t v15 = 0x4014000000000000LL;
    __int16 v16 = 2080;
    id v17 = v8;
    __int16 v18 = 1024;
    int v19 = 9;
    __int16 v20 = 1024;
    int v21 = v9;
    __int16 v22 = 2080;
    id v23 = v10;
    LODWORD(v13) = 44;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v7,  2LL,  "App foregrounded for %.2fs.  Post %s (%d), pid, %d, bundleId, %s",  COERCE_DOUBLE(&v14),  v13);
    id v12 = (uint8_t *)v11;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLAppMonitor::CLAppMonitor(id<CLIntersiloUniverse>)_block_invoke",  "%s\n",  v11);
    if (v12 != buf) {
      free(v12);
    }
  }

  *(_DWORD *)std::stringbuf::string_type buf = 9;
  return (*(uint64_t (**)(uint64_t, uint8_t *, uint64_t, void, uint64_t, void))(*(void *)v1 + 152LL))( v1,  buf,  v1 + 120,  0LL,  0xFFFFFFFFLL,  0LL);
}

const char *sub_100D943B0(int *a1)
{
  uint64_t v1 = *a1;
  else {
    return (&off_101882620)[v1];
  }
}

id sub_100D943D8(uint64_t a1, void *a2)
{
  id v8 = objc_alloc_init(NSClassFromString(@"RBSProcessEverythingPredicate"));
  objc_msgSend( a2,  "setPredicates:",  +[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v8, 1));
  [a2 setServiceClass:25];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_100D944FC;
  v6[3] = &unk_1018822D0;
  v6[4] = *(void *)(a1 + 32);
  [a2 setUpdateHandler:v6];
  id v4 = +[RBSProcessStateDescriptor descriptor](&OBJC_CLASS___RBSProcessStateDescriptor, "descriptor");
  uint64_t v7 = @"com.apple.frontboard.visibility";
  objc_msgSend( v4,  "setEndowmentNamespaces:",  +[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v7, 1));
  return [a2 setStateDescriptor:v4];
}

id sub_100D944FC(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_101882448);
  }
  id v8 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
  {
    unsigned int v9 = [a3 pid];
    id v10 = objc_msgSend(objc_msgSend(a3, "bundle"), "identifier");
    objc_msgSend(objc_msgSend(a4, "state"), "taskState");
    v12[0] = 68289794;
    v12[1] = 0;
    __int16 v13 = 2082;
    int v14 = "";
    __int16 v15 = 1026;
    unsigned int v16 = v9;
    __int16 v17 = 2114;
    id v18 = v10;
    __int16 v19 = 2050;
    uint64_t v20 = objc_msgSend(objc_msgSend(a4, "state"), "taskState");
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:RBS #AppMonitor process monitor update handler invoked, pid:%{public}d, bundleID: %{public, location:escape_only}@, state:%{public, location:RBSTaskState}lld}",  (uint8_t *)v12,  0x2Cu);
  }

  return [*(id *)(a1 + 32) onApplicationStateMonitor:a2 didUpdate:a4 forProcess:a3];
}

id sub_100D94668(uint64_t a1, uint64_t a2)
{
  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_101882448);
  }
  id v4 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
  {
    v6[0] = 68289282;
    v6[1] = 0;
    __int16 v7 = 2082;
    id v8 = "";
    __int16 v9 = 2114;
    uint64_t v10 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:invoking applicationStateChange handler, StateChangeData:%{public, location:escape_only}@}",  (uint8_t *)v6,  0x1Cu);
  }

  return [*(id *)(a1 + 32) onApplicationStateChange:a2];
}

uint64_t sub_100D94764(uint64_t a1)
{
  *(void *)a1 = off_1018824B8;
  [*(id *)(a1 + 48) invalidate];

  sub_100231CA4(a1 + 80, *(void **)(a1 + 88));
  sub_100231CF0(a1 + 56, *(void **)(a1 + 64));
  return a1;
}

uint64_t sub_100D947D8(uint64_t a1)
{
  *(void *)a1 = off_1018821F8;
  sub_100D9486C(a1);
  sub_100D98960(a1 + 232);
  return sub_100D94764(a1);
}

void sub_100D94858(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100D947D8(a1);
  operator delete(v1);
}

void sub_100D9486C(uint64_t a1)
{
  *(_BYTE *)(a1 + 108) = 1;
  [*(id *)(a1 + 280) invalidate];

  *(void *)(a1 + 280) = 0LL;
  [*(id *)(a1 + 272) invalidate];

  *(void *)(a1 + 272) = 0LL;
  [*(id *)(a1 + 112) invalidate];

  *(void *)(a1 + 112) = 0LL;
  *(void *)(a1 + 296) = 0LL;
  objc_msgSend( +[LSApplicationWorkspace defaultWorkspace](LSApplicationWorkspace, "defaultWorkspace"),  "removeObserver:",  *(void *)(a1 + 288));

  *(void *)(a1 + 288) = 0LL;
}

void *sub_100D948F8@<X0>(_DWORD *a1@<X1>, void *a2@<X8>)
{
  return sub_1010DDBC0(a2, __str);
}

uint64_t sub_100D94970(void *a1, uint64_t a2, int *a3)
{
  unsigned int v14 = (*(uint64_t (**)(void *, uint64_t, int *, void *))(*a1 + 96LL))(a1, a2, a3, &unk_101990F68);
  int v6 = *a3;
  if (*a3 == 4)
  {
    __int16 v7 = (__int128 *)a1[31];
    if (!v7) {
      return v14;
    }
    do
    {
      sub_100D98854(&__dst, v7 + 1);
      sub_100A9DF9C((uint64_t)&v20, (uint64_t)&v31);
      int v19 = 4;
      (*(void (**)(void *, int *, int *, void, uint64_t, void))(*a1 + 152LL))( a1,  &v19,  &v20,  0LL,  a2,  0LL);
      if (v28 < 0) {
        operator delete(__p);
      }
      if (v26 < 0) {
        operator delete(v25);
      }
      if (v24 < 0) {
        operator delete(v23);
      }
      if (v22 < 0) {
        operator delete(v21);
      }
      if (v37 < 0) {
        operator delete(v36);
      }
      if (SHIBYTE(v35) < 0) {
        operator delete(*((void **)&v34 + 1));
      }
      if (SBYTE7(v34) < 0) {
        operator delete((void *)v33);
      }
      if (SHIBYTE(v32) < 0) {
        operator delete(*((void **)&v31 + 1));
      }
      if (SHIBYTE(v30) < 0) {
        operator delete(__dst);
      }
      __int16 v7 = *(__int128 **)v7;
    }

    while (v7);
    int v6 = *a3;
  }

  if (v6 == 12)
  {
    __int128 v17 = 0u;
    __int128 v18 = 0u;
    __int128 v15 = 0u;
    __int128 v16 = 0u;
    id v8 = (void *)a1[37];
    id v9 = [v8 countByEnumeratingWithState:&v15 objects:v38 count:16];
    if (v9)
    {
      uint64_t v10 = *(void *)v16;
      do
      {
        for (uint64_t i = 0LL; i != v9; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v16 != v10) {
            objc_enumerationMutation(v8);
          }
          id v12 = *(void **)(*((void *)&v15 + 1) + 8LL * (void)i);
          LODWORD(__dst) = -1;
          __int128 v30 = 0u;
          __int128 v31 = 0u;
          __int128 v32 = 0u;
          __int128 v33 = 0u;
          __int128 v34 = 0u;
          __int128 v35 = 0u;
          LOWORD(v36) = 0;
          std::string::assign((std::string *)&v30, (const std::string::value_type *)[v12 UTF8String]);
          BYTE1(v36) = 1;
          int v20 = 12;
          (*(void (**)(void *, int *, void **, void, uint64_t, void))(*a1 + 152LL))( a1,  &v20,  &__dst,  0LL,  a2,  0LL);
          if (SHIBYTE(v35) < 0) {
            operator delete(*((void **)&v34 + 1));
          }
          if (SBYTE7(v34) < 0) {
            operator delete((void *)v33);
          }
          if (SHIBYTE(v32) < 0) {
            operator delete(*((void **)&v31 + 1));
          }
          if (SBYTE7(v31) < 0) {
            operator delete((void *)v30);
          }
        }

        id v9 = [v8 countByEnumeratingWithState:&v15 objects:v38 count:16];
      }

      while (v9);
    }
  }

  return v14;
}

void sub_100D94C30( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, char a34)
{
}

uint64_t sub_100D94C70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void *))(*(void *)a1 + 96LL))( a1,  a2,  a3,  &unk_101990F68);
}

uint64_t sub_100D94C84(uint64_t a1)
{
  return a1;
}

uint64_t sub_100D94CF4(void *a1, int *a2)
{
  int v3 = *a2;
  if ((*a2 - 10) < 2)
  {
    objc_msgSend( +[LSApplicationWorkspace defaultWorkspace](LSApplicationWorkspace, "defaultWorkspace"),  "addObserver:",  a1[36]);
  }

  else
  {
    if (v3 == 7)
    {
      DistributedCenter = CFNotificationCenterGetDistributedCenter();
      id v5 = (void (__cdecl *)(CFNotificationCenterRef, void *, CFNotificationName, const void *, CFDictionaryRef))sub_100D94D88;
      int v6 = @"com.apple.LaunchServices.applicationRegistered";
      goto LABEL_7;
    }

    if (v3 == 8)
    {
      DistributedCenter = CFNotificationCenterGetDistributedCenter();
      id v5 = (void (__cdecl *)(CFNotificationCenterRef, void *, CFNotificationName, const void *, CFDictionaryRef))sub_100D94FA8;
      int v6 = @"com.apple.LaunchServices.applicationUnregistered";
LABEL_7:
      CFNotificationCenterAddObserver( DistributedCenter,  a1,  v5,  v6,  0LL,  CFNotificationSuspensionBehaviorDeliverImmediately);
    }
  }

  return 1LL;
}

void sub_100D94D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101882468);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v15 = 1;
    uint64_t v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLAppMonitor::onApplicationRegistered",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101882468);
    }
    id v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v17 = 0;
      __int16 v18 = 2082;
      int v19 = "";
      __int16 v20 = 2082;
      int v21 = "activity";
      __int16 v22 = 2050;
      uint64_t v23 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLAppMonitor::onApplicationRegistered, event:%{public, location:escape_only}s, th is:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v15 = 0;
  }

  id v12 = [*(id *)(a2 + 32) silo];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  v13[2] = sub_100D988C8;
  v13[3] = &unk_10182D1B8;
  _DWORD v13[4] = a2;
  v13[5] = a1;
  v13[6] = a3;
  v13[7] = a4;
  v13[8] = a5;
  [v12 sync:v13];
  if (v15) {
    os_activity_scope_leave(&state);
  }
}

void sub_100D94F88( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, os_activity_scope_state_s state, char a19)
{
  if (a19) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100D94FA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101882468);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v15 = 1;
    uint64_t v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLAppMonitor::onApplicationUnregistered",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101882468);
    }
    id v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v17 = 0;
      __int16 v18 = 2082;
      int v19 = "";
      __int16 v20 = 2082;
      int v21 = "activity";
      __int16 v22 = 2050;
      uint64_t v23 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLAppMonitor::onApplicationUnregistered, event:%{public, location:escape_only}s,  this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v15 = 0;
  }

  id v12 = [*(id *)(a2 + 32) silo];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  v13[2] = sub_100D988D8;
  v13[3] = &unk_10182D1B8;
  _DWORD v13[4] = a2;
  v13[5] = a1;
  v13[6] = a3;
  v13[7] = a4;
  v13[8] = a5;
  [v12 sync:v13];
  if (v15) {
    os_activity_scope_leave(&state);
  }
}

void sub_100D951A8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, os_activity_scope_state_s state, char a19)
{
  if (a19) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100D951C8(void *a1, int *a2)
{
  int v3 = *a2;
  if ((*a2 - 10) < 2)
  {
    objc_msgSend( +[LSApplicationWorkspace defaultWorkspace](LSApplicationWorkspace, "defaultWorkspace"),  "removeObserver:",  a1[36]);
  }

  else
  {
    if (v3 == 7)
    {
      DistributedCenter = CFNotificationCenterGetDistributedCenter();
      id v5 = @"com.apple.LaunchServices.applicationRegistered";
      goto LABEL_7;
    }

    if (v3 == 8)
    {
      DistributedCenter = CFNotificationCenterGetDistributedCenter();
      id v5 = @"com.apple.LaunchServices.applicationUnregistered";
LABEL_7:
      CFNotificationCenterRemoveObserver(DistributedCenter, a1, v5, 0LL);
    }
  }

  return 1LL;
}

uint64_t sub_100D95248(uint64_t result)
{
  *(_DWORD *)uint64_t result = -1;
  if (*(char *)(result + 31) < 0)
  {
    **(_BYTE **)(result + 8) = 0;
    *(void *)(result + 16) = 0LL;
  }

  else
  {
    *(_BYTE *)(result + 8) = 0;
    *(_BYTE *)(result + 31) = 0;
  }

  if (*(char *)(result + 55) < 0)
  {
    **(_BYTE **)(result + 32) = 0;
    *(void *)(result + 40) = 0LL;
  }

  else
  {
    *(_BYTE *)(result + 32) = 0;
    *(_BYTE *)(result + 55) = 0;
  }

  *(_WORD *)(result + 104) = 0;
  return result;
}

void sub_100D95298(uint64_t a1, int a2, int a3, int a4, CFDictionaryRef theDict)
{
  int v14 = -1;
  *(_OWORD *)char v15 = 0u;
  *(_OWORD *)__int128 v16 = 0u;
  __int128 v17 = 0u;
  *(_OWORD *)__int16 v18 = 0u;
  *(_OWORD *)std::stringbuf::string_type __p = 0u;
  __int128 v20 = 0u;
  __int16 v21 = 0;
  sub_1002A5550((int)v13, theDict);
  int v6 = sub_1002AF180((uint64_t)v13);
  BOOL v12 = 0;
  sub_1002A6FD4((uint64_t)v13, (uint64_t)@"isPlaceholder", &v12);
  HIBYTE(v21) = v12;
  if (v6 >= 1)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (sub_1002A85D0((uint64_t)v13, (uint64_t)@"bundleIDs", (std::string *)v15))
      {
        buf[0] = 7;
        (*(void (**)(uint64_t, _DWORD *, int *, void, uint64_t, void))(*(void *)a1 + 152LL))( a1,  buf,  &v14,  0LL,  0xFFFFFFFFLL,  0LL);
      }

      else
      {
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101882488);
        }
        id v8 = (os_log_s *)qword_101934A78;
        if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
        {
          buf[0] = 67240192;
          buf[1] = i;
          _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_FAULT,  "cannot find bundle ID for %{public}d",  (uint8_t *)buf,  8u);
        }

        if (sub_1002921D0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934A70 != -1) {
            dispatch_once(&qword_101934A70, &stru_101882488);
          }
          v22[0] = 67240192;
          v22[1] = i;
          LODWORD(v11) = 8;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "cannot find bundle ID for %{public}d",  v22,  v11);
          uint64_t v10 = (char *)v9;
          sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLAppMonitor::onApplicationRegistered(CFNotificationCenterRef, CFStringRef, const void *, CFDictionaryRef)",  "%s\n",  v9);
        }
      }
    }
  }

  sub_1002A5590(v13);
  if (SHIBYTE(v20) < 0) {
    operator delete(__p[1]);
  }
  if (SHIBYTE(__p[0]) < 0) {
    operator delete(v18[0]);
  }
  if (SHIBYTE(v17) < 0) {
    operator delete(v16[1]);
  }
  if (SHIBYTE(v16[0]) < 0) {
    operator delete(v15[0]);
  }
}

void sub_100D95580( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  sub_1002A5590((uint64_t *)va);
  sub_100520C7C((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_100D955B4(uint64_t a1, int a2, int a3, int a4, CFDictionaryRef theDict)
{
  int v6 = sub_1002AF180((uint64_t)v20);
  if (v6 >= 1)
  {
    for (int i = 0; i != v6; ++i)
    {
      memset(&v19, 0, sizeof(v19));
      if (sub_1002A85D0((uint64_t)v20, (uint64_t)@"bundleIDs", &v19))
      {
        if ((v19.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          uint64_t v8 = &v19;
        }
        else {
          uint64_t v8 = (std::string *)v19.__r_.__value_.__r.__words[0];
        }
        id v9 = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v8);
        uint64_t v10 = v9;
        v17[0] = _NSConcreteStackBlock;
        v17[1] = 3321888768LL;
        v17[2] = sub_100D95910;
        v17[3] = &unk_101882340;
        v17[4] = a1;
        else {
          std::string __p = v19;
        }
        sub_100D91AA4((uint64_t)v9, v10, (uint64_t)v17);
        if ((v19.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          int v14 = &v19;
        }
        else {
          int v14 = (std::string *)v19.__r_.__value_.__r.__words[0];
        }
        objc_msgSend( *(id *)(a1 + 296),  "removeObject:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v14));
      }

      else
      {
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101882488);
        }
        uint64_t v11 = (os_log_s *)qword_101934A78;
        if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
        {
          *(_DWORD *)std::stringbuf::string_type buf = 67240192;
          int v23 = i;
          _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_FAULT,  "cannot find bundle ID for %{public}d",  buf,  8u);
        }

        if (sub_1002921D0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934A70 != -1) {
            dispatch_once(&qword_101934A70, &stru_101882488);
          }
          v21[0] = 67240192;
          v21[1] = i;
          LODWORD(v16) = 8;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "cannot find bundle ID for %{public}d",  v21,  v16);
          __int16 v13 = (uint8_t *)v12;
          sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLAppMonitor::onApplicationUnregistered(CFNotificationCenterRef, CFStringRef, const void *, CFDictionaryRef)",  "%s\n",  v12);
          if (v13 != buf) {
            free(v13);
          }
        }
      }
    }
  }

  return sub_1002A5590(v20);
}

void sub_100D958BC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20, int a21, __int16 a22, char a23, char a24, void *__p, uint64_t a26, int a27, __int16 a28, char a29, char a30, char a31)
{
  if (a30 < 0) {
    operator delete(__p);
  }
  sub_1002A5590(&a31);
  _Unwind_Resume(a1);
}

void sub_100D95910(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
  {
    uint64_t v2 = *(void *)(a1 + 32);
    int v4 = -1;
    *(_OWORD *)id v5 = 0u;
    *(_OWORD *)int v6 = 0u;
    __int128 v7 = 0u;
    *(_OWORD *)uint64_t v8 = 0u;
    *(_OWORD *)std::string __p = 0u;
    __int128 v10 = 0u;
    __int16 v11 = 0;
    std::string::operator=((std::string *)v5, (const std::string *)(a1 + 40));
    int v3 = 8;
    (*(void (**)(uint64_t, int *, int *, void, uint64_t, void))(*(void *)v2 + 152LL))( v2,  &v3,  &v4,  0LL,  0xFFFFFFFFLL,  0LL);
    if (SHIBYTE(v10) < 0) {
      operator delete(__p[1]);
    }
    if (SHIBYTE(__p[0]) < 0) {
      operator delete(v8[0]);
    }
    if (SHIBYTE(v7) < 0) {
      operator delete(v6[1]);
    }
    if (SHIBYTE(v6[0]) < 0) {
      operator delete(v5[0]);
    }
  }

void sub_100D959E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

CFTypeRef sub_100D959F8(void *a1, const __CFString *a2)
{
  int v3 = (const __CFURL *)sub_100D95A64(a1);
  if (!v3) {
    return 0LL;
  }
  int v4 = CFBundleCreate(kCFAllocatorDefault, v3);
  if (!v4) {
    return 0LL;
  }
  id v5 = v4;
  CFTypeRef ValueForInfoDictionaryKey = CFBundleGetValueForInfoDictionaryKey(v4, a2);
  CFTypeRef v7 = ValueForInfoDictionaryKey;
  if (ValueForInfoDictionaryKey) {
    CFRetain(ValueForInfoDictionaryKey);
  }
  CFRelease(v5);
  return v7;
}

id sub_100D95A64(void *a1)
{
  if (objc_msgSend( +[LSApplicationWorkspace defaultWorkspace]( LSApplicationWorkspace,  "defaultWorkspace"),  "applicationIsInstalled:",  a1))
  {
    id v2 = sub_100D91200(a1);
    if (v2) {
      return [v2 URL];
    }
  }

  else
  {
    id v2 =  [[LSApplicationExtensionRecord alloc] initWithBundleIdentifier:a1 error:0];
    if (v2) {
      return [v2 URL];
    }
  }

  return 0LL;
}

id sub_100D95AD4(void *a1)
{
  id result = [a1 length];
  if (result) {
    return _objc_msgSend(  objc_msgSend( [LSApplicationRecord alloc],  "initWithBundleIdentifier:allowPlaceholder:error:",  a1,  0,  0),  "isWebApp");
  }
  return result;
}

id sub_100D95B24(void *a1)
{
  id result = sub_100D95A64(a1);
  if (result) {
    return [result path];
  }
  return result;
}

__CFBundle *sub_100D95B44(void *a1)
{
  id result = sub_100D95B88(a1);
  if (result)
  {
    id v2 = result;
    CFURLRef v3 = CFBundleCopyBundleURL(result);
    CFRelease(v2);
    return (__CFBundle *)CFAutorelease(v3);
  }

  return result;
}

CFBundleRef sub_100D95B88(void *a1)
{
  if ((sub_1001B9A1C() & 1) == 0)
  {
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101882448);
    }
    id v5 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289282;
      int v12 = 0;
      __int16 v13 = 2082;
      int v14 = "";
      __int16 v15 = 2082;
      id v16 = [a1 UTF8String];
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_ERROR,  "{msg%{public}.0s:Attempted to locate companion placeholder bundle on a non-watch device, bundleId:%{ public, location:escape_only}s}",  buf,  0x1Cu);
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101882448);
      }
    }

    int v6 = (os_log_s *)qword_101934988;
    if (os_signpost_enabled((os_log_t)qword_101934988))
    {
      id v7 = [a1 UTF8String];
      *(_DWORD *)std::stringbuf::string_type buf = 68289282;
      int v12 = 0;
      __int16 v13 = 2082;
      int v14 = "";
      __int16 v15 = 2082;
      id v16 = v7;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v6,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Attempted to locate companion placeholder bundle on a non-watch device",  "{msg%{public}.0s:Attempted to locate companion placeholder bundle on a non-watch device, bundleId:%{ public, location:escape_only}s}",  buf,  0x1Cu);
    }

    return 0LL;
  }

  uint64_t v10 = 0LL;
  id v2 =  [[LSApplicationExtensionRecord alloc] initWithBundleIdentifier:a1 error:&v10];
  if (v10)
  {
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101882448);
    }
    CFURLRef v3 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_INFO))
    {
      id v4 = [a1 UTF8String];
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v12 = 0;
      __int16 v13 = 2082;
      int v14 = "";
      __int16 v15 = 2082;
      id v16 = v4;
      __int16 v17 = 2114;
      uint64_t v18 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:LSApplicationExtensionRecord returned an error for bundleId, bundleId:%{public, loc ation:escape_only}s, error:%{public, location:escape_only}@}",  buf,  0x26u);
    }

    return 0LL;
  }

  if (v2) {
    id v9 = [v2 containingBundleRecord];
  }
  else {
    id v9 = sub_100D91200(a1);
  }
  return CFBundleCreate( kCFAllocatorDefault,  (CFURLRef)objc_msgSend( objc_msgSend(v9, "bundleContainerURL"),  "URLByAppendingPathComponent:",  @"com.apple.mobileinstallation.companion_placeholder"));
}

void sub_100D95E34(uint64_t a1, uint64_t a2)
{
  if (a2 == 4)
  {
    id v4 = *(void **)(a1 + 40);
LABEL_7:
    [v4 addObject:*(void *)(a1 + 48)];
    goto LABEL_8;
  }

  if ((a2 & 6) != 0)
  {
    id v4 = *(void **)(a1 + 56);
    goto LABEL_7;
  }

  if (a2 == 1)
  {
    id v4 = *(void **)(a1 + 64);
    goto LABEL_7;
  }

  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_101882448);
  }
  id v5 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_FAULT))
  {
    uint64_t v6 = *(void *)(a1 + 48);
    int v9 = 68289282;
    int v10 = 0;
    __int16 v11 = 2082;
    int v12 = "";
    __int16 v13 = 2114;
    uint64_t v14 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:#AppMonitor got invalid installation status while checking applications, app:%{public , location:escape_only}@}",  (uint8_t *)&v9,  0x1Cu);
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101882448);
    }
  }

  id v7 = (os_log_s *)qword_101934988;
  if (os_signpost_enabled((os_log_t)qword_101934988))
  {
    uint64_t v8 = *(void *)(a1 + 48);
    int v9 = 68289282;
    int v10 = 0;
    __int16 v11 = 2082;
    int v12 = "";
    __int16 v13 = 2114;
    uint64_t v14 = v8;
    _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v7,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "#AppMonitor got invalid installation status while checking applications",  "{msg%{public}.0s:#AppMonitor got invalid installation status while checking applications, app:%{public , location:escape_only}@}",  (uint8_t *)&v9,  0x1Cu);
  }

uint64_t sub_100D9600C(void *a1)
{
  return (*(uint64_t (**)(void, void, void, void))(a1[8] + 16LL))(a1[8], a1[5], a1[6], a1[7]);
}

BOOL sub_100D96020(uint64_t **a1)
{
  if (*((char *)a1 + 23) < 0)
  {
    if (!a1[1])
    {
LABEL_11:
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101882448);
      }
      uint64_t v8 = (os_log_s *)qword_101934988;
      if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "Either not a watch platform or bundleId is empty",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934980 != -1) {
          dispatch_once(&qword_101934980, &stru_101882448);
        }
        v17[0] = 0;
        id v16 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934988,  2LL,  "Either not a watch platform or bundleId is empty",  v17,  2);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLAppMonitor::isStandAloneWatchApp(const std::string &)",  "%s\n",  v16);
      }

      return 0LL;
    }

    id v2 = *a1;
  }

  else
  {
    id v2 = (uint64_t *)a1;
    if (!*((_BYTE *)a1 + 23)) {
      goto LABEL_11;
    }
  }

  CFURLRef v3 = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v2);
  CFTypeRef v4 = sub_100D959F8(v3, @"WKWatchOnly");
  CFTypeRef v5 = sub_100D959F8(v3, @"WKRunsIndependentlyOfCompanionApp");
  if (v4)
  {
    CFTypeID v6 = CFGetTypeID(v4);
    if (v6 == CFBooleanGetTypeID())
    {
      BOOL v7 = CFBooleanGetValue((CFBooleanRef)v4) != 0;
      if (!v5) {
        goto LABEL_22;
      }
LABEL_19:
      CFTypeID v11 = CFGetTypeID(v5);
      if (v11 == CFBooleanGetTypeID() && CFBooleanGetValue((CFBooleanRef)v5)) {
        BOOL v7 = 1;
      }
      goto LABEL_22;
    }
  }

  BOOL v7 = 0;
  if (v5) {
    goto LABEL_19;
  }
LABEL_22:
  if (v4) {
    CFRelease(v4);
  }
  if (v5) {
    CFRelease(v5);
  }
  if (v7)
  {
    BOOL v9 = 1LL;
  }

  else
  {
    id v12 = objc_alloc(&OBJC_CLASS___LSApplicationExtensionRecord);
    else {
      __int16 v13 = *a1;
    }
    BOOL v9 = objc_msgSend( objc_msgSend(  objc_msgSend( v12,  "initWithBundleIdentifier:error:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v13),  0),  "containingBundleRecord"),  "developerType") == 1;
  }

  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_101882448);
  }
  uint64_t v14 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
  {
    else {
      __int16 v15 = *a1;
    }
    *(_DWORD *)std::stringbuf::string_type buf = 68289538;
    int v19 = 0;
    __int16 v20 = 2082;
    __int16 v21 = "";
    __int16 v22 = 2082;
    int v23 = v15;
    __int16 v24 = 1026;
    BOOL v25 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:stand alone watch app, bundleId:%{public, location:escape_only}s, status:%{public}hhd}",  buf,  0x22u);
  }

  return v9;
}

uint64_t sub_100D963AC(int a1, uint64_t a2)
{
  CFTypeRef v4 = *(unsigned int (**)(uint64_t, const __CFString *))(a2 + 16);
  if (a1 < 2)
  {
    if (v4(a2, @"NSLocationAlwaysUsageDescription")) {
      uint64_t v5 = 7LL;
    }
    else {
      uint64_t v5 = 1LL;
    }
  }

  else if (v4(a2, @"NSLocationAlwaysAndWhenInUseUsageDescription"))
  {
    if ((*(unsigned int (**)(uint64_t, const __CFString *))(a2 + 16))( a2,  @"NSLocationWhenInUseUsageDescription"))
    {
      uint64_t v5 = 7LL;
    }

    else
    {
      uint64_t v5 = 1LL;
    }
  }

  else
  {
    uint64_t v5 = 1LL;
  }

  if (((*(uint64_t (**)(uint64_t, const __CFString *))(a2 + 16))( a2,  @"NSLocationWhenInUseUsageDescription") & 1) != 0 || (*(unsigned int (**)(uint64_t, const __CFString *))(a2 + 16))( a2,  @"NSLocationAuthorizationPurposeDescriptionDictionary"))
  {
    v5 |= 2uLL;
  }

  if (v5 == 1 && a1 == 0) {
    return 7LL;
  }
  else {
    return v5;
  }
}

CFTypeRef sub_100D9649C(void *a1)
{
  id v2 = sub_100D95A64(a1);
  if (!v2 || (CFURLRef v3 = (const __CFString *)[v2 path]) == 0)
  {
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101882448);
    }
    BOOL v9 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
    {
      v10[0] = 68289282;
      v10[1] = 0;
      __int16 v11 = 2082;
      id v12 = "";
      __int16 v13 = 2114;
      uint64_t v14 = a1;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#warning CLAppMonitor bundlePath from bundleId is nil, BundleId:%{public, location:escape_only}@}",  (uint8_t *)v10,  0x1Cu);
    }

    return 0LL;
  }

  CFURLRef v4 = CFURLCreateWithFileSystemPath(kCFAllocatorDefault, v3, kCFURLPOSIXPathStyle, 0);
  if (!v4) {
    return 0LL;
  }
  CFURLRef v5 = v4;
  uint64_t Unique = _CFBundleCreateUnique(kCFAllocatorDefault, v4);
  if (!Unique) {
    sub_10126EE4C();
  }
  BOOL v7 = (const void *)Unique;
  CFRelease(v5);
  return CFAutorelease(v7);
}

uint64_t sub_100D9660C(void *a1)
{
  return 0LL;
}

id sub_100D96624(__CFBundle *a1, void *a2)
{
  CFDictionaryRef InfoDictionary = CFBundleGetInfoDictionary(a1);
  id v4 = +[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary");
  __int128 v11 = 0u;
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  __int128 v14 = 0u;
  id v5 = [a2 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v12;
    do
    {
      for (int i = 0LL; i != v6; int i = (char *)i + 1)
      {
        if (*(void *)v12 != v7) {
          objc_enumerationMutation(a2);
        }
        uint64_t v9 = *(void *)(*((void *)&v11 + 1) + 8LL * (void)i);
        if (-[__CFDictionary objectForKeyedSubscript:](InfoDictionary, "objectForKeyedSubscript:", v9)) {
          objc_msgSend( v4,  "setObject:forKeyedSubscript:",  -[__CFDictionary objectForKeyedSubscript:](InfoDictionary, "objectForKeyedSubscript:", v9),  v9);
        }
      }

      id v6 = [a2 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }

    while (v6);
  }

  return v4;
}

uint64_t sub_100D96750(void *a1, void *a2, const __CFString *a3, void *a4)
{
  int v8 = sub_1001B9A1C();
  if (a4 && v8)
  {
    sub_1010DDBC0(&__p, (char *)[a4 UTF8String]);
    BOOL v9 = sub_100D96020((uint64_t **)&__p);
    BOOL v10 = v9;
    if (SBYTE3(v24) < 0)
    {
      operator delete(__p);
      if (v10)
      {
LABEL_5:
        id v11 = sub_100D95A64(a4);
        if (v11)
        {
          __int128 v12 = (const __CFString *)[v11 path];
          goto LABEL_15;
        }

void sub_100D96A08( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100D96A2C(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  int v8 = operator new(0x30uLL);
  sub_1010DDBC0(__p, "CLAppMonitor");
  sub_100D96AF4((uint64_t)v8, 0LL, (uint64_t *)__p, a3, a1, a2);
  *int v8 = off_1018823D0;
  *a4 = v8;
  if (v10 < 0) {
    operator delete(__p[0]);
  }
}

void sub_100D96AC8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_100D96AF4(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4, uint64_t a5, uint64_t a6)
{
  *(void *)a1 = off_101882608;
  *(void *)(a1 + 8) = -[CLNotifierClientAdapter initWithClient:]( objc_alloc(&OBJC_CLASS___CLNotifierClientAdapter),  "initWithClient:",  a1);
  *(void *)(a1 + sub_100BDC958(v1 + 24) = a5;
  *(void *)(a1 + 32) = a6;
  else {
    __int128 v12 = (uint64_t *)*a3;
  }
  id v13 = objc_msgSend( objc_msgSend(a4, "vendor"),  "proxyForService:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v12));
  *(void *)(a1 + 16) = v13;
  id v14 = v13;
  if (a2) {
    [*(id *)(a1 + 16) setDelegateEntityName:a2];
  }
  objc_msgSend(*(id *)(a1 + 16), "registerDelegate:inSilo:", *(void *)(a1 + 8), objc_msgSend(a4, "silo"));
  return a1;
}

void sub_100D96BC8(uint64_t a1, uint64_t a2)
{
  HIDWORD(v15) = a2;
  if (!*(_BYTE *)(a1 + 108))
  {
    uint64_t v4 = *(void *)(a1 + 88);
    if (!v4) {
      goto LABEL_12;
    }
    uint64_t v5 = a1 + 80;
    uint64_t v6 = a1 + 88;
    do
    {
      int v7 = *(_DWORD *)(v4 + 32);
      BOOL v8 = v7 < (int)a2;
      else {
        BOOL v9 = (uint64_t *)(v4 + 8);
      }
      if (!v8) {
        uint64_t v6 = v4;
      }
      uint64_t v4 = *v9;
    }

    while (*v9);
    if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= (int)a2)
    {
      while (*(void *)(v6 + 56))
      {
        *(_DWORD *)std::stringbuf::string_type buf = *(_DWORD *)(*(void *)(v6 + 40) + 28LL);
        (*(void (**)(uint64_t, uint64_t, uint8_t *))(*(void *)a1 + 112LL))(a1, a2, buf);
      }

      sub_100233254(v5, (int *)&v15 + 1);
    }

    else
    {
LABEL_12:
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101882468);
      }
      char v10 = (os_log_s *)qword_1019349D8;
      if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
      {
        id v11 = (void *)(a1 + 8);
        *(_DWORD *)std::stringbuf::string_type buf = 136446466;
        __int16 v21 = v11;
        __int16 v22 = 1026;
        int v23 = a2;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
          buf,
          0x12u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_101882468);
        }
        __int128 v12 = (void *)(a1 + 8);
        int v16 = 136446466;
        __int16 v17 = v12;
        __int16 v18 = 1026;
        int v19 = a2;
        LODWORD(v15) = 18;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
          &v16,
          v15);
        id v14 = (uint8_t *)v13;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLNotifier<CLAppMonitor_Type::Notification, CLAppMonitor_Type::NotificationData>::removeClient(in t) [Notification_T = CLAppMonitor_Type::Notification, NotificationData_T = CLAppMonitor_Type::NotificationData , NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v13);
        if (v14 != buf) {
          free(v14);
        }
      }
    }
  }

BOOL sub_100D96E3C(uint64_t a1, int a2, int *a3, char *a4)
{
  int v41 = a2;
  if (*(_BYTE *)(a1 + 108)) {
    return 0LL;
  }
  uint64_t v7 = *(void *)(a1 + 88);
  if (v7)
  {
    uint64_t v10 = a1 + 88;
    do
    {
      int v11 = *(_DWORD *)(v7 + 32);
      BOOL v12 = v11 < a2;
      if (v11 >= a2) {
        id v13 = (uint64_t *)v7;
      }
      else {
        id v13 = (uint64_t *)(v7 + 8);
      }
      if (!v12) {
        uint64_t v10 = v7;
      }
      uint64_t v7 = *v13;
    }

    while (*v13);
    if (v10 != a1 + 88 && *(_DWORD *)(v10 + 32) <= a2)
    {
      uint64_t v40 = v10;
      int v16 = *a3;
      uint64_t v19 = *(void *)(v10 + 48);
      uint64_t v18 = v10 + 48;
      uint64_t v17 = v19;
      if (!v19) {
        goto LABEL_31;
      }
      uint64_t v20 = v18;
      do
      {
        int v21 = *(_DWORD *)(v17 + 28);
        BOOL v22 = v21 < v16;
        if (v21 >= v16) {
          int v23 = (uint64_t *)v17;
        }
        else {
          int v23 = (uint64_t *)(v17 + 8);
        }
        if (!v22) {
          uint64_t v20 = v17;
        }
        uint64_t v17 = *v23;
      }

      while (*v23);
      if (v20 == v18 || v16 < *(_DWORD *)(v20 + 28)) {
LABEL_31:
      }
        uint64_t v20 = v18;
      uint64_t v24 = *(void *)(a1 + 64);
      if (!v24) {
        goto LABEL_42;
      }
      uint64_t v25 = a1 + 64;
      do
      {
        int v26 = *(_DWORD *)(v24 + 32);
        BOOL v27 = v26 < v16;
        if (v26 >= v16) {
          char v28 = (uint64_t *)v24;
        }
        else {
          char v28 = (uint64_t *)(v24 + 8);
        }
        if (!v27) {
          uint64_t v25 = v24;
        }
        uint64_t v24 = *v28;
      }

      while (*v28);
      if (v25 != a1 + 64 && v16 >= *(_DWORD *)(v25 + 32))
      {
        *(void *)__int16 v42 = v25;
        uint64_t v33 = *(void *)(v25 + 56);
        char v34 = *a4;
        *(void *)std::stringbuf::string_type buf = &v41;
        *((_BYTE *)sub_1004EF3D4((uint64_t **)(v25 + 40), &v41, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = v34;
        *(_DWORD *)std::stringbuf::string_type buf = -1;
        *(_OWORD *)&uint8_t buf[8] = 0u;
        *(_OWORD *)char v46 = 0u;
        __int128 v47 = 0u;
        *(_OWORD *)std::string __p = 0u;
        __int128 v49 = 0u;
        __int128 v50 = 0u;
        __int16 v51 = 0;
        if (v20 == v18
          && (*(unsigned int (**)(uint64_t, int *, _BYTE *))(*(void *)a1 + 128LL))(a1, a3, buf))
        {
          __int128 v35 = sub_100D99A2C((uint64_t)buf);
          sub_100D98EB4((_BYTE *)a1, (uint64_t)&v40, (uint64_t)v42, v35);
        }

        if (SHIBYTE(v50) < 0) {
          operator delete(*((void **)&v49 + 1));
        }
        if (SBYTE7(v49) < 0) {
          operator delete(__p[0]);
        }
        if (SHIBYTE(v47) < 0) {
          operator delete(v46[1]);
        }
        if (SHIBYTE(v46[0]) < 0) {
          operator delete(*(void **)&buf[8]);
        }
        if (v33) {
          goto LABEL_44;
        }
      }

      else
      {
LABEL_42:
        *(void *)__int16 v42 = a1 + 64;
        char v29 = byte_101990F69;
        HIDWORD(v39) = v16;
        *(void *)std::stringbuf::string_type buf = (char *)&v39 + 4;
        *((_BYTE *)sub_10023347C((uint64_t **)(a1 + 56), (int *)&v39 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 80) = v29;
        HIDWORD(v39) = *a3;
        *(void *)std::stringbuf::string_type buf = (char *)&v39 + 4;
        __int128 v30 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v39 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        sub_1000F0D38(v30 + 8);
        char v31 = *a4;
        HIDWORD(v39) = *a3;
        *(void *)std::stringbuf::string_type buf = (char *)&v39 + 4;
        __int128 v32 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v39 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        *(void *)std::stringbuf::string_type buf = &v41;
        *((_BYTE *)sub_1004EF3D4(v32 + 5, &v41, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = v31;
      }

      (*(void (**)(uint64_t, int *))(*(void *)a1 + 168LL))(a1, a3);
LABEL_44:
      if (v20 == v18)
      {
        *(_DWORD *)std::stringbuf::string_type buf = *a3;
        sub_10004A8FC((uint64_t **)(v40 + 40), (int *)buf, buf);
      }

      return 1LL;
    }
  }

  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101882468);
  }
  id v14 = (os_log_s *)qword_1019349D8;
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
  {
    uint64_t v15 = (void *)(a1 + 8);
    *(_DWORD *)std::stringbuf::string_type buf = 136446466;
    *(void *)&uint8_t buf[4] = v15;
    *(_WORD *)&_BYTE buf[12] = 1026;
    *(_DWORD *)&_BYTE buf[14] = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
      buf,
      0x12u);
  }

  BOOL result = sub_1002921D0(115, 0);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101882468);
    }
    __int128 v36 = (void *)(a1 + 8);
    *(_DWORD *)__int16 v42 = 136446466;
    *(void *)&v42[4] = v36;
    __int16 v43 = 1026;
    int v44 = v41;
    LODWORD(v39) = 18;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
      v42,
      v39);
    __int128 v38 = (char *)v37;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLAppMonitor_Type::Notification, CLAppMonitor_Type::NotificationData>::registerForNotifica tion(int, const Notification_T &, const RegistrationInfo_T &) [Notification_T = CLAppMonitor_Type::Notification, N otificationData_T = CLAppMonitor_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v37);
    if (v38 != buf) {
      free(v38);
    }
    return 0LL;
  }

  return result;
}

void sub_100D9730C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

BOOL sub_100D9732C(uint64_t a1, int a2, int *a3)
{
  uint64_t v5 = *(void *)(a1 + 88);
  if (!v5) {
    goto LABEL_11;
  }
  uint64_t v6 = a1 + 88;
  do
  {
    int v7 = *(_DWORD *)(v5 + 32);
    BOOL v8 = v7 < a2;
    if (v7 >= a2) {
      BOOL v9 = (uint64_t *)v5;
    }
    else {
      BOOL v9 = (uint64_t *)(v5 + 8);
    }
    if (!v8) {
      uint64_t v6 = v5;
    }
    uint64_t v5 = *v9;
  }

  while (*v9);
  if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= a2)
  {
    uint64_t v16 = *(void *)(v6 + 48);
    uint64_t v14 = v6 + 48;
    uint64_t v15 = v16;
    if (!v16) {
      goto LABEL_29;
    }
    int v17 = *a3;
    uint64_t v18 = v14;
    do
    {
      int v19 = *(_DWORD *)(v15 + 28);
      BOOL v20 = v19 < v17;
      if (v19 >= v17) {
        int v21 = (uint64_t *)v15;
      }
      else {
        int v21 = (uint64_t *)(v15 + 8);
      }
      if (!v20) {
        uint64_t v18 = v15;
      }
      uint64_t v15 = *v21;
    }

    while (*v21);
    if (v18 == v14 || v17 < *(_DWORD *)(v18 + 28)) {
LABEL_29:
    }
      uint64_t v18 = v14;
    return v18 != v14;
  }

  else
  {
LABEL_11:
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101882468);
    }
    uint64_t v10 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
    {
      int v11 = (void *)(a1 + 8);
      *(_DWORD *)std::stringbuf::string_type buf = 136446466;
      __int128 v30 = v11;
      __int16 v31 = 1026;
      int v32 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
        buf,
        0x12u);
    }

    BOOL v12 = sub_1002921D0(115, 0);
    BOOL result = 0LL;
    if (v12)
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101882468);
      }
      BOOL v22 = (void *)(a1 + 8);
      int v25 = 136446466;
      int v26 = v22;
      __int16 v27 = 1026;
      int v28 = a2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
        &v25,
        18);
      uint64_t v24 = (uint8_t *)v23;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLAppMonitor_Type::Notification, CLAppMonitor_Type::NotificationData>::clientRegistered( int, const Notification_T &) [Notification_T = CLAppMonitor_Type::Notification, NotificationData_T = CLAppMonito r_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v23);
      if (v24 != buf) {
        free(v24);
      }
      return 0LL;
    }
  }

  return result;
}

BOOL sub_100D975AC(char *a1, int a2, int *a3)
{
  HIDWORD(v34) = a2;
  int v3 = a1[108];
  if (!a1[108])
  {
    uint64_t v6 = *((void *)a1 + 11);
    if (v6)
    {
      BOOL v8 = a1 + 88;
      do
      {
        int v9 = *(_DWORD *)(v6 + 32);
        BOOL v10 = v9 < a2;
        if (v9 >= a2) {
          int v11 = (uint64_t *)v6;
        }
        else {
          int v11 = (uint64_t *)(v6 + 8);
        }
        if (!v10) {
          BOOL v8 = (char *)v6;
        }
        uint64_t v6 = *v11;
      }

      while (*v11);
      if (v8 != a1 + 88 && *((_DWORD *)v8 + 8) <= a2)
      {
        uint64_t v14 = (char *)*((void *)v8 + 6);
        BOOL v12 = v8 + 48;
        id v13 = v14;
        if (v14)
        {
          int v15 = *a3;
          uint64_t v16 = v12;
          do
          {
            int v17 = *((_DWORD *)v13 + 7);
            BOOL v18 = v17 < v15;
            if (v17 >= v15) {
              int v19 = (char **)v13;
            }
            else {
              int v19 = (char **)(v13 + 8);
            }
            if (!v18) {
              uint64_t v16 = v13;
            }
            id v13 = *v19;
          }

          while (*v19);
          if (v16 != v12 && v15 >= *((_DWORD *)v16 + 7))
          {
            LODWORD(__p[0]) = *a3;
            sub_1004EF494((uint64_t)(v12 - 8), (int *)__p);
            uint64_t v20 = *((void *)a1 + 8);
            if (!v20) {
              goto LABEL_33;
            }
            int v21 = *a3;
            BOOL v22 = a1 + 64;
            do
            {
              int v23 = *(_DWORD *)(v20 + 32);
              BOOL v24 = v23 < v21;
              if (v23 >= v21) {
                int v25 = (uint64_t *)v20;
              }
              else {
                int v25 = (uint64_t *)(v20 + 8);
              }
              if (!v24) {
                BOOL v22 = (char *)v20;
              }
              uint64_t v20 = *v25;
            }

            while (*v25);
            if (v22 != a1 + 64 && v21 >= *((_DWORD *)v22 + 8))
            {
              sub_1004EF494((uint64_t)(v22 + 40), (int *)&v34 + 1);
              if (!*((void *)v22 + 7)) {
                (*(void (**)(char *, int *))(*(void *)a1 + 176LL))(a1, a3);
              }
            }

            else
            {
LABEL_33:
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101882468);
              }
              int v26 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                __int16 v27 = a1 + 8;
                if (a1[31] < 0) {
                  __int16 v27 = (void *)*v27;
                }
                (*(void (**)(void **__return_ptr, char *, int *))(*(void *)a1 + 160LL))(__p, a1, a3);
                if (v44 >= 0) {
                  int v28 = __p;
                }
                else {
                  int v28 = (void **)__p[0];
                }
                *(_DWORD *)std::stringbuf::string_type buf = 136446466;
                *(void *)&uint8_t buf[4] = v27;
                __int16 v36 = 2082;
                char v37 = v28;
                _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_FAULT,  "%{public}s; notification %{public}s not found",
                  buf,
                  0x16u);
                if (v44 < 0) {
                  operator delete(__p[0]);
                }
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(__p, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_101882468);
                }
                char v29 = a1 + 8;
                if (a1[31] < 0) {
                  char v29 = (void *)*v29;
                }
                uint64_t v30 = qword_1019349D8;
                (*(void (**)(_BYTE *__return_ptr, char *, int *))(*(void *)a1 + 160LL))(buf, a1, a3);
                if (v38 >= 0) {
                  __int16 v31 = buf;
                }
                else {
                  __int16 v31 = *(_BYTE **)buf;
                }
                int v39 = 136446466;
                uint64_t v40 = v29;
                __int16 v41 = 2082;
                __int16 v42 = v31;
                LODWORD(v34) = 22;
                _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v30,  17LL,  "%{public}s; notification %{public}s not found",
                  &v39,
                  v34);
                uint64_t v33 = v32;
                if (v38 < 0) {
                  operator delete(*(void **)buf);
                }
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLAppMonitor_Type::Notification, CLAppMonitor_Type::NotificationData>::unregis terForNotification(int, const Notification_T &) [Notification_T = CLAppMonitor_Type::Notification, Not ificationData_T = CLAppMonitor_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v33);
              }
            }
          }
        }
      }
    }
  }

  return v3 == 0;
}

uint64_t sub_100D97934(uint64_t a1, int *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v3 = a1 + 64;
  uint64_t v4 = v5;
  if (!v5) {
    return 0LL;
  }
  int v7 = *a2;
  uint64_t v8 = v3;
  do
  {
    int v9 = *(_DWORD *)(v4 + 32);
    BOOL v10 = v9 < v7;
    if (v9 >= v7) {
      int v11 = (uint64_t *)v4;
    }
    else {
      int v11 = (uint64_t *)(v4 + 8);
    }
    if (!v10) {
      uint64_t v8 = v4;
    }
    uint64_t v4 = *v11;
  }

  while (*v11);
  if (v8 == v3) {
    return 0LL;
  }
  if (v7 < *(_DWORD *)(v8 + 32)) {
    return 0LL;
  }
  uint64_t v12 = *(void *)(v8 + 64);
  if (!v12) {
    return 0LL;
  }
  *(_DWORD *)a3 = *(_DWORD *)v12;
  std::string::operator=((std::string *)(a3 + 8), (const std::string *)(v12 + 8));
  std::string::operator=((std::string *)(a3 + 32), (const std::string *)(v12 + 32));
  std::string::operator=((std::string *)(a3 + 56), (const std::string *)(v12 + 56));
  std::string::operator=((std::string *)(a3 + 80), (const std::string *)(v12 + 80));
  *(_WORD *)(a3 + 104) = *(_WORD *)(v12 + 104);
  return 1LL;
}

uint64_t sub_100D979E4(uint64_t a1, int *a2, uint64_t a3)
{
  int v10 = *a2;
  uint64_t v12 = &v10;
  uint64_t v5 = sub_10023347C((uint64_t **)(a1 + 56), &v10, (uint64_t)&unk_1012CF090, &v12);
  sub_10005F550((uint64_t)(v5 + 8), &v11);
  uint64_t v6 = (std::__shared_weak_count *)*((void *)&v11 + 1);
  if (*((void *)&v11 + 1))
  {
    int v7 = (unint64_t *)(*((void *)&v11 + 1) + 8LL);
    do
      unint64_t v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }

  return 1LL;
}

void sub_100D97A90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100D97AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4 = -1;
  *(_OWORD *)uint64_t v5 = 0u;
  *(_OWORD *)uint64_t v6 = 0u;
  __int128 v7 = 0u;
  *(_OWORD *)unint64_t v8 = 0u;
  *(_OWORD *)std::string __p = 0u;
  __int128 v10 = 0u;
  __int16 v11 = 0;
  (*(void (**)(uint64_t, uint64_t, int *, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  a2,  &v4,  a3,  a4,  0LL);
  if (SHIBYTE(v10) < 0) {
    operator delete(__p[1]);
  }
  if (SHIBYTE(__p[0]) < 0) {
    operator delete(v8[0]);
  }
  if (SHIBYTE(v7) < 0) {
    operator delete(v6[1]);
  }
  if (SHIBYTE(v6[0]) < 0) {
    operator delete(v5[0]);
  }
}

void sub_100D97B48( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100D97B5C(uint64_t a1, unsigned int *a2, uint64_t a3, int a4, int a5)
{
  if (!*(_BYTE *)(a1 + 108))
  {
    __int128 v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: notifyClientsWithData (Fallback)",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_IF_NONE_PRESENT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101882468);
    }
    __int16 v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v12 = (void *)(a1 + 8);
      id v13 = (std::__shared_weak_count *)*a2;
      *(_DWORD *)std::stringbuf::string_type buf = 68289794;
      *(_DWORD *)__int32 v66 = 0;
      *(_WORD *)&v66[4] = 2082;
      *(void *)&v66[6] = "";
      *(_WORD *)&v66[14] = 2082;
      *(void *)&v66[16] = "activity";
      __int16 v67 = 2082;
      double v68 = v12;
      __int16 v69 = 2050;
      uint64_t v70 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:notifyClientsWithData, event:%{public, location:escape_only}s, name:%{public, l ocation:escape_only}s, notification:%{public}lld}",  buf,  0x30u);
    }

    int v15 = (__n128 *)(a1 + 64);
    uint64_t v14 = *(__n128 **)(a1 + 64);
    if (!v14) {
      goto LABEL_18;
    }
    signed __int32 v16 = *a2;
    int v17 = (__n128 *)(a1 + 64);
    do
    {
      signed __int32 v18 = v14[2].n128_i32[0];
      BOOL v19 = v18 < v16;
      if (v18 >= v16) {
        uint64_t v20 = (__n128 **)v14;
      }
      else {
        uint64_t v20 = (__n128 **)&v14->n128_u64[1];
      }
      if (!v19) {
        int v17 = v14;
      }
      uint64_t v14 = *v20;
    }

    while (*v20);
    if (v17 == v15 || v16 < (signed __int32)v17[2].n128_u32[0])
    {
LABEL_18:
      *(void *)__int32 v71 = &v71[8];
      memset(&v71[8], 0, 24);
      unsigned int v72 = 0LL;
      sub_1002343E4((uint64_t)buf, a2, (uint64_t)v71);
      int v17 = sub_1002342A4((uint64_t **)(a1 + 56), (__n128 *)buf);
      int v21 = v70;
      if (v70)
      {
        p_shared_owners = (unint64_t *)&v70->__shared_owners_;
        do
          unint64_t v23 = __ldaxr(p_shared_owners);
        while (__stlxr(v23 - 1, p_shared_owners));
        if (!v23)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }

      sub_100008390((uint64_t)&v66[4], *(void **)&v66[12]);
      BOOL v24 = v72;
      if (v72)
      {
        int v25 = (unint64_t *)&v72->__shared_owners_;
        do
          unint64_t v26 = __ldaxr(v25);
        while (__stlxr(v26 - 1, v25));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }

      sub_100008390((uint64_t)v71, *(void **)&v71[8]);
    }

    if (a4)
    {
      sub_100D98F90(a3, buf);
      sub_10005F550((uint64_t)&v17[4], (__int128 *)buf);
      __int16 v27 = *(std::__shared_weak_count **)&v66[4];
      if (*(void *)&v66[4])
      {
        int v28 = (unint64_t *)(*(void *)&v66[4] + 8LL);
        do
          unint64_t v29 = __ldaxr(v28);
        while (__stlxr(v29 - 1, v28));
        if (!v29)
        {
          ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
          std::__shared_weak_count::__release_weak(v27);
        }
      }
    }

    else
    {
      sub_1000F0D38((__n128 *)v17[4].n128_u64);
    }

    if (!v17[3].n128_u64[1]) {
      goto LABEL_83;
    }
    uint64_t v30 = sub_100D98A48(a3);
    if (a5 == -1)
    {
      sub_100D98AE0((void *)a1, (int *)a2, v30);
    }

    else
    {
      uint64_t v31 = a1 + 88;
      uint64_t v32 = *(void *)(a1 + 88);
      if (!v32) {
        goto LABEL_48;
      }
      uint64_t v33 = a1 + 88;
      do
      {
        int v34 = *(_DWORD *)(v32 + 32);
        BOOL v35 = v34 < a5;
        if (v34 >= a5) {
          __int16 v36 = (uint64_t *)v32;
        }
        else {
          __int16 v36 = (uint64_t *)(v32 + 8);
        }
        if (!v35) {
          uint64_t v33 = v32;
        }
        uint64_t v32 = *v36;
      }

      while (*v36);
      if (v33 == v31 || *(_DWORD *)(v33 + 32) > a5) {
LABEL_48:
      }
        uint64_t v33 = a1 + 88;
      uint64_t v63 = v33;
      unint64_t v37 = v15->n128_u64[0];
      if (!v15->n128_u64[0]) {
        goto LABEL_59;
      }
      int v38 = *a2;
      int v39 = (__n128 *)(a1 + 64);
      do
      {
        int v40 = *(_DWORD *)(v37 + 32);
        BOOL v41 = v40 < v38;
        if (v40 >= v38) {
          __int16 v42 = (unint64_t *)v37;
        }
        else {
          __int16 v42 = (unint64_t *)(v37 + 8);
        }
        if (!v41) {
          int v39 = (__n128 *)v37;
        }
        unint64_t v37 = *v42;
      }

      while (*v42);
      if (v39 == v15 || v38 < (signed __int32)v39[2].n128_u32[0])
      {
LABEL_59:
        __int16 v62 = (__n128 *)(a1 + 64);
LABEL_60:
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_101882468);
        }
        __int16 v43 = (os_log_s *)qword_1019349D8;
        if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
        {
          char v44 = (void *)(a1 + 8);
          (*(void (**)(_BYTE *__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(v71, a1, a2);
          if (v71[23] >= 0) {
            uint64_t v45 = v71;
          }
          else {
            uint64_t v45 = *(_BYTE **)v71;
          }
          *(_DWORD *)std::stringbuf::string_type buf = 136315650;
          *(void *)__int32 v66 = v44;
          *(_WORD *)&v66[8] = 1024;
          *(_DWORD *)&v66[10] = a5;
          *(_WORD *)&v66[14] = 2080;
          *(void *)&v66[16] = v45;
          _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_DEBUG,  "%s; client %d has deregistered, not notifying %s",
            buf,
            0x1Cu);
          if ((v71[23] & 0x80000000) != 0) {
            operator delete(*(void **)v71);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019349D0 != -1) {
            dispatch_once(&qword_1019349D0, &stru_101882468);
          }
          char v46 = (void *)(a1 + 8);
          uint64_t v47 = qword_1019349D8;
          (*(void (**)(void **__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(__p, a1, a2);
          if (v61 >= 0) {
            char v48 = __p;
          }
          else {
            char v48 = (void **)__p[0];
          }
          *(_DWORD *)__int32 v71 = 136315650;
          *(void *)&v71[4] = v46;
          *(_WORD *)&v71[12] = 1024;
          *(_DWORD *)&v71[14] = a5;
          *(_WORD *)&v71[18] = 2080;
          *(void *)&v71[20] = v48;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v47,  2LL,  "%s; client %d has deregistered, not notifying %s",
            v71,
            28,
            v59);
          __int128 v50 = v49;
          if (v61 < 0) {
            operator delete(__p[0]);
          }
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLAppMonitor_Type::Notification, CLAppMonitor_Type::NotificationData>::notifyClients WithData(const Notification_T &, const NotificationData_T &, BOOL, int, BOOL) [Notification_T = CLAppMonitor _Type::Notification, NotificationData_T = CLAppMonitor_Type::NotificationData, NotificationInfo_T = char, Re gistrationInfo_T = char]",  "%s\n",  v50);
        }

        goto LABEL_83;
      }

      __int16 v62 = v39;
      if (v33 == v31) {
        goto LABEL_60;
      }
      uint64_t v53 = v39[3].n128_i64[0];
      __int16 v51 = v39 + 3;
      char v52 = (__n128 *)v53;
      if (!v53) {
        goto LABEL_60;
      }
      int v54 = *(_DWORD *)(v33 + 32);
      BOOL v55 = v51;
      do
      {
        int v56 = v52[1].n128_i32[3];
        BOOL v57 = v56 < v54;
        if (v56 >= v54) {
          __int16 v58 = v52;
        }
        else {
          __int16 v58 = (__n128 *)&v52->n128_i8[8];
        }
        if (!v57) {
          BOOL v55 = v52;
        }
        char v52 = (__n128 *)v58->n128_u64[0];
      }

      while (v58->n128_u64[0]);
      sub_100D98EB4((_BYTE *)a1, (uint64_t)&v63, (uint64_t)&v62, v30);
    }

void sub_100D98178( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_activity_scope_state_s state, char a18)
{
}

void sub_100D981C4(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 108))
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101882468);
    }
    id v2 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v3 = (void *)(a1 + 8);
      *(_DWORD *)std::stringbuf::string_type buf = 136315138;
      unint64_t v37 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "%s; already shutdown; not listing clients",
        buf,
        0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101882468);
      }
      int v4 = (void *)(a1 + 8);
      int v32 = 136315138;
      uint64_t v33 = v4;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; already shutdown; not listing clients",
        (const char *)&v32);
      uint64_t v6 = (uint8_t *)v5;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLAppMonitor_Type::Notification, CLAppMonitor_Type::NotificationData>::listClients() [No tification_T = CLAppMonitor_Type::Notification, NotificationData_T = CLAppMonitor_Type::NotificationData, Notifi cationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v5);
      if (v6 != buf) {
        free(v6);
      }
    }
  }

  else
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101882468);
    }
    __int128 v7 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      unint64_t v8 = (void *)(a1 + 8);
      uint64_t v9 = *(void *)(a1 + 96);
      *(_DWORD *)std::stringbuf::string_type buf = 136315394;
      unint64_t v37 = v8;
      __int16 v38 = 2048;
      v39[0] = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "%s; listing clients, num clients: %zu",
        buf,
        0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101882468);
      }
      __int16 v27 = (void *)(a1 + 8);
      uint64_t v28 = *(void *)(a1 + 96);
      int v32 = 136315394;
      uint64_t v33 = v27;
      __int16 v34 = 2048;
      v35[0] = v28;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; listing clients, num clients: %zu",
        (const char *)&v32,
        22);
      uint64_t v30 = (uint8_t *)v29;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLAppMonitor_Type::Notification, CLAppMonitor_Type::NotificationData>::listClients() [No tification_T = CLAppMonitor_Type::Notification, NotificationData_T = CLAppMonitor_Type::NotificationData, Notifi cationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v29);
      if (v30 != buf) {
        free(v30);
      }
    }

    __int128 v10 = *(void **)(a1 + 80);
    if (v10 != (void *)(a1 + 88))
    {
      __int16 v11 = (void *)(a1 + 8);
      do
      {
        uint64_t v12 = (void *)v10[5];
        if (v12 != v10 + 6)
        {
          do
          {
            if (qword_1019349D0 != -1) {
              dispatch_once(&qword_1019349D0, &stru_101882468);
            }
            id v13 = (os_log_s *)qword_1019349D8;
            if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v14 = (void *)(a1 + 8);
              int v15 = *((_DWORD *)v10 + 8);
              int v16 = *((_DWORD *)v12 + 7);
              *(_DWORD *)std::stringbuf::string_type buf = 136315650;
              unint64_t v37 = v14;
              __int16 v38 = 1024;
              LODWORD(v39[0]) = v15;
              WORD2(v39[0]) = 1024;
              *(_DWORD *)((char *)v39 + 6) = v16;
              _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "%s; clients, id: %d, notification: %d",
                buf,
                0x18u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101882468);
              }
              uint64_t v20 = (void *)(a1 + 8);
              int v21 = *((_DWORD *)v10 + 8);
              int v22 = *((_DWORD *)v12 + 7);
              int v32 = 136315650;
              uint64_t v33 = v20;
              __int16 v34 = 1024;
              LODWORD(v35[0]) = v21;
              WORD2(v35[0]) = 1024;
              *(_DWORD *)((char *)v35 + 6) = v22;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; clients, id: %d, notification: %d",
                (const char *)&v32,
                24,
                v31);
              BOOL v24 = (uint8_t *)v23;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLAppMonitor_Type::Notification, CLAppMonitor_Type::NotificationData>::listClien ts() [Notification_T = CLAppMonitor_Type::Notification, NotificationData_T = CLAppMonitor_Type::Notifica tionData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v23);
              if (v24 != buf) {
                free(v24);
              }
            }

            int v17 = (void *)v12[1];
            if (v17)
            {
              do
              {
                signed __int32 v18 = v17;
                int v17 = (void *)*v17;
              }

              while (v17);
            }

            else
            {
              do
              {
                signed __int32 v18 = (void *)v12[2];
                BOOL v19 = *v18 == (void)v12;
                uint64_t v12 = v18;
              }

              while (!v19);
            }

            uint64_t v12 = v18;
          }

          while (v18 != v10 + 6);
        }

        int v25 = (void *)v10[1];
        if (v25)
        {
          do
          {
            unint64_t v26 = v25;
            int v25 = (void *)*v25;
          }

          while (v25);
        }

        else
        {
          do
          {
            unint64_t v26 = (void *)v10[2];
            BOOL v19 = *v26 == (void)v10;
            __int128 v10 = v26;
          }

          while (!v19);
        }

        __int128 v10 = v26;
      }

      while (v26 != (void *)(a1 + 88));
    }
  }

void sub_100D98770(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100D999CC(a1);
  operator delete(v1);
}

id sub_100D98784(uint64_t a1, int a2, void *a3)
{
  id result = sub_100D99168(a3);
  if (result)
  {
    int v6 = a2;
    return (id)(*(uint64_t (**)(void, int *, id, void))(a1 + 24))(0LL, &v6, result, *(void *)(a1 + 32));
  }

  return result;
}

void sub_100D987D0(id a1)
{
  qword_101934988 = (uint64_t)os_log_create("com.apple.locationd.Core", "Core");
}

void sub_100D987FC(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_100D98828(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

void *sub_100D98854(void *__dst, __int128 *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1010DD48C(__dst, *(void **)a2, *((void *)a2 + 1));
  }

  else
  {
    __int128 v4 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)__dst = v4;
  }

  sub_100A9DF9C((uint64_t)(__dst + 3), (uint64_t)a2 + 24);
  return __dst;
}

void sub_100D988AC(_Unwind_Exception *exception_object)
{
}

void sub_100D988C8(uint64_t a1, int a2, int a3, int a4)
{
}

uint64_t sub_100D988D8(uint64_t a1, int a2, int a3, int a4)
{
  return sub_100D955B4(*(void *)(a1 + 32), a2, a3, a4, *(CFDictionaryRef *)(a1 + 64));
}

void *sub_100D988E8(void *__dst, __int128 *a2, uint64_t a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1010DD48C(__dst, *(void **)a2, *((void *)a2 + 1));
  }

  else
  {
    __int128 v5 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)__dst = v5;
  }

  sub_100A9DF9C((uint64_t)(__dst + 3), a3);
  return __dst;
}

void sub_100D98944(_Unwind_Exception *exception_object)
{
}

uint64_t sub_100D98960(uint64_t a1)
{
  id v2 = *(void **)a1;
  *(void *)a1 = 0LL;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void sub_100D98998(uint64_t a1, void *a2)
{
  if (a2)
  {
    id v2 = a2;
    do
    {
      uint64_t v3 = (void *)*v2;
      sub_100D989D4((uint64_t)(v2 + 2));
      operator delete(v2);
      id v2 = v3;
    }

    while (v3);
  }

void sub_100D989D4(uint64_t a1)
{
}

CLCppContainer *sub_100D98A48(uint64_t a1)
{
  id v2 = operator new(0x70uLL);
  sub_100A9DF9C((uint64_t)v2, a1);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_100D990F8;
  _OWORD v4[3] = &unk_10181D3D0;
  v4[4] = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:",  v2,  v4,  0LL,  112LL);
}

void sub_100D98ACC(_Unwind_Exception *a1)
{
}

void sub_100D98AE0(void *a1, int *a2, void *a3)
{
  if (!*((_BYTE *)a1 + 108))
  {
    __int128 v5 = a1 + 8;
    uint64_t v4 = a1[8];
    if (v4)
    {
      int v8 = *a2;
      uint64_t v9 = a1 + 8;
      do
      {
        int v10 = *(_DWORD *)(v4 + 32);
        BOOL v11 = v10 < v8;
        if (v10 >= v8) {
          uint64_t v12 = (uint64_t *)v4;
        }
        else {
          uint64_t v12 = (uint64_t *)(v4 + 8);
        }
        if (!v11) {
          uint64_t v9 = (void *)v4;
        }
        uint64_t v4 = *v12;
      }

      while (*v12);
      if (v9 != v5 && v8 >= *((_DWORD *)v9 + 8))
      {
        __int16 v51 = v9;
        id v13 = sub_100D99168(a3);
        (*(void (**)(void *, int *, id, void *))(*a1 + 184LL))(a1, a2, v13, v9 + 10);
        uint64_t v14 = (void *)v9[5];
        if (v14 != v9 + 6)
        {
          int v15 = a1 + 11;
          int v16 = a1 + 1;
          do
          {
            uint64_t v17 = *v15;
            if (!*v15) {
              goto LABEL_25;
            }
            int v18 = *((_DWORD *)v14 + 7);
            BOOL v19 = a1 + 11;
            do
            {
              int v20 = *(_DWORD *)(v17 + 32);
              BOOL v21 = v20 < v18;
              if (v20 >= v18) {
                int v22 = (uint64_t *)v17;
              }
              else {
                int v22 = (uint64_t *)(v17 + 8);
              }
              if (!v21) {
                BOOL v19 = (uint64_t *)v17;
              }
              uint64_t v17 = *v22;
            }

            while (*v22);
            if (v19 != v15 && (int v23 = *((_DWORD *)v19 + 8), v18 >= v23))
            {
              __int128 v50 = v19;
              sub_100D98EB4(a1, (uint64_t)&v50, (uint64_t)&v51, a3);
              uint64_t v27 = a1[8];
              if (!v27) {
                return;
              }
              int v28 = *a2;
              unint64_t v29 = v5;
              do
              {
                int v30 = *(_DWORD *)(v27 + 32);
                BOOL v31 = v30 < v28;
                if (v30 >= v28) {
                  int v32 = (uint64_t *)v27;
                }
                else {
                  int v32 = (uint64_t *)(v27 + 8);
                }
                if (!v31) {
                  unint64_t v29 = (void *)v27;
                }
                uint64_t v27 = *v32;
              }

              while (*v32);
              if (v29 == v5 || v28 < *((_DWORD *)v29 + 8)) {
                return;
              }
              __int16 v51 = v29;
              uint64_t v34 = v29[6];
              uint64_t v14 = v29 + 6;
              uint64_t v33 = v34;
              if (v34)
              {
                BOOL v35 = v14;
                uint64_t v36 = v33;
                do
                {
                  int v37 = *(_DWORD *)(v36 + 28);
                  BOOL v38 = v37 < v23;
                  if (v37 >= v23) {
                    int v39 = (uint64_t *)v36;
                  }
                  else {
                    int v39 = (uint64_t *)(v36 + 8);
                  }
                  if (!v38) {
                    BOOL v35 = (void *)v36;
                  }
                  uint64_t v36 = *v39;
                }

                while (*v39);
                if (v35 == v14 || v23 < *((_DWORD *)v35 + 7))
                {
                  do
                  {
                    int v40 = *(_DWORD *)(v33 + 28);
                    BOOL v41 = v23 < v40;
                    if (v23 >= v40) {
                      __int16 v42 = (uint64_t *)(v33 + 8);
                    }
                    else {
                      __int16 v42 = (uint64_t *)v33;
                    }
                    if (v41) {
                      uint64_t v14 = (void *)v33;
                    }
                    uint64_t v33 = *v42;
                  }

                  while (*v42);
                }

                else
                {
                  __int16 v43 = (void *)v35[1];
                  if (v43)
                  {
                    do
                    {
                      uint64_t v14 = v43;
                      __int16 v43 = (void *)*v43;
                    }

                    while (v43);
                  }

                  else
                  {
                    do
                    {
                      uint64_t v14 = (void *)v35[2];
                      BOOL v44 = *v14 == (void)v35;
                      BOOL v35 = v14;
                    }

                    while (!v44);
                  }
                }
              }
            }

            else
            {
LABEL_25:
              __int128 v50 = a1 + 11;
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101882468);
              }
              BOOL v24 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                int v25 = a1 + 1;
                int v26 = *((_DWORD *)v14 + 7);
                *(_DWORD *)std::stringbuf::string_type buf = 136446466;
                BOOL v57 = v25;
                __int16 v58 = 1026;
                int v59 = v26;
                _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_FAULT,  "%{public}s; unknown client %{public}d",
                  buf,
                  0x12u);
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(buf, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_101882468);
                }
                uint64_t v45 = a1 + 1;
                int v46 = *((_DWORD *)v14 + 7);
                int v52 = 136446466;
                uint64_t v53 = v45;
                __int16 v54 = 1026;
                int v55 = v46;
                LODWORD(v49) = 18;
                _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; unknown client %{public}d",
                  &v52,
                  v49);
                char v48 = (uint8_t *)v47;
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLNotifier<CLAppMonitor_Type::Notification, CLAppMonitor_Type::NotificationData>::invokeClientsWi thData(const Notification_T &, CLCppContainer *) [Notification_T = CLAppMonitor_Type::Notification, No tificationData_T = CLAppMonitor_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v47);
                if (v48 != buf) {
                  free(v48);
                }
              }
            }
          }

          while (v14 != v51 + 6);
        }
      }
    }
  }

_BYTE *sub_100D98EB4(_BYTE *result, uint64_t a2, uint64_t a3, void *a4)
{
  if (!result[108])
  {
    __int128 v7 = result;
    uint64_t v8 = *(unsigned int *)(*(void *)a2 + 32LL);
    LODWORD(v13) = *(_DWORD *)(*(void *)a3 + 32LL);
    id v9 = sub_100D99168(a4);
    uint64_t v10 = *(void *)a3 + 80LL;
    BOOL v11 = (uint64_t **)(*(void *)a3 + 40LL);
    uint64_t v14 = (int *)(*(void *)a2 + 32LL);
    uint64_t v12 = sub_1004EF3D4(v11, v14, (uint64_t)&unk_1012CF090, &v14);
    id result = (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t *, id, uint64_t, uint64_t **))(*(void *)v7 + 192LL))( v7,  v8,  &v13,  v9,  v10,  v12 + 4);
    if ((_DWORD)result) {
      return objc_msgSend( *(id *)(*(void *)a2 + 64),  "onNotification:withData:",  *(unsigned int *)(*(void *)a3 + 32),  a4,  v13);
    }
  }

  return result;
}

void *sub_100D98F90@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = operator new(0x88uLL);
  id result = sub_100D98FE8(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_100D98FD4(_Unwind_Exception *a1)
{
}

void *sub_100D98FE8(void *a1, uint64_t a2)
{
  a1[2] = 0LL;
  *a1 = off_101882598;
  a1[1] = 0LL;
  sub_100A9DF9C((uint64_t)(a1 + 3), a2);
  return a1;
}

void sub_100D99020(_Unwind_Exception *a1)
{
}

void sub_100D99034(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_101882598;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100D99048(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_101882598;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_100D9906C(uint64_t a1)
{
}

void sub_100D99094(uint64_t a1, uint64_t a2)
{
}

void sub_100D990F8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1)
  {
    operator delete((void *)v1);
  }

id sub_100D99168(void *a1)
{
  if ((objc_opt_isKindOfClass(a1, v2) & 1) != 0) {
    return sub_100D991B4(a1);
  }
  else {
    return 0LL;
  }
}

id sub_100D991B4(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return [a1 cppObjectPtr];
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_1018825D8);
    }
    uint64_t v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x800000010135DB1BLL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_1018825D8);
    }
    LODWORD(v8) = 134218498;
    HIDWORD(v8) = (_DWORD)v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_1018825D8);
    }
    int v6 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x800000010135DB1BLL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_1018825D8);
    }
    LODWORD(v8) = 134218498;
    HIDWORD(v8) = (_DWORD)v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  __int128 v7 = (uint8_t *)v4;
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLAppMonitor_Type::NotificationData, Callback = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:228:46)]",  "%s\n",  v4);
  if (v7 != buf) {
    free(v7);
  }
  return 0LL;
}

void sub_100D99560(id a1)
{
  qword_101934478 = (uint64_t)os_log_create("com.apple.locationd.Support", "Support");
}

unsigned __int8 *sub_100D9958C(void *a1, unsigned __int8 *a2)
{
  id result = sub_100121918(a1, a2);
  if (result)
  {
    sub_10005BEB8(a1, result, (uint64_t)v4);
    sub_100D995D8((uint64_t)v4, 0LL);
    return (unsigned __int8 *)1;
  }

  return result;
}

void sub_100D995D8(uint64_t a1, uint64_t a2)
{
  id v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16)) {
      sub_100D989D4((uint64_t)v2 + 16);
    }
    operator delete(v2);
  }

unsigned __int8 *sub_100D9961C(uint64_t a1, unsigned __int8 *a2, __int128 *a3)
{
  __int128 v7 = (void *)(a1 + 24);
  unint64_t v8 = sub_10004B1A4(a1 + 24, (uint64_t)a2);
  unint64_t v9 = v8;
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    unint64_t v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v3 = v8;
      if (v8 >= v10) {
        unint64_t v3 = v8 % v10;
      }
    }

    else
    {
      unint64_t v3 = (v10 - 1) & v8;
    }

    __int16 v13 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v3);
    if (v13)
    {
      for (int i = *v13; i; int i = *(unsigned __int8 **)i)
      {
        unint64_t v15 = *((void *)i + 1);
        if (v15 == v9)
        {
          if ((sub_100022A24(a1 + 32, i + 16, a2) & 1) != 0) {
            return i;
          }
        }

        else
        {
          if (v12 > 1)
          {
            if (v15 >= v10) {
              v15 %= v10;
            }
          }

          else
          {
            v15 &= v10 - 1;
          }

          if (v15 != v3) {
            break;
          }
        }
      }
    }
  }

  sub_100D9989C(a1, v9, a3, (uint64_t)v25);
  float v16 = (float)(unint64_t)(*(void *)(a1 + 24) + 1LL);
  float v17 = *(float *)(a1 + 32);
  if (!v10 || (float)(v17 * (float)v10) < v16)
  {
    BOOL v18 = 1LL;
    if (v10 >= 3) {
      BOOL v18 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v19 = v18 | (2 * v10);
    unint64_t v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20) {
      size_t v21 = v20;
    }
    else {
      size_t v21 = v19;
    }
    sub_100019E10(a1, v21);
    unint64_t v10 = *(void *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10) {
        unint64_t v3 = v9 % v10;
      }
      else {
        unint64_t v3 = v9;
      }
    }

    else
    {
      unint64_t v3 = (v10 - 1) & v9;
    }
  }

  int v22 = *(void **)(*(void *)a1 + 8 * v3);
  if (v22)
  {
    *(void *)v25[0] = *v22;
    *int v22 = v25[0];
  }

  else
  {
    *(void *)v25[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v25[0];
    *(void *)(*(void *)a1 + 8 * v3) = a1 + 16;
    if (*(void *)v25[0])
    {
      unint64_t v23 = *(void *)(*(void *)v25[0] + 8LL);
      if ((v10 & (v10 - 1)) != 0)
      {
        if (v23 >= v10) {
          v23 %= v10;
        }
      }

      else
      {
        v23 &= v10 - 1;
      }

      *(void *)(*(void *)a1 + 8 * v23) = v25[0];
    }
  }

  int i = (unsigned __int8 *)v25[0];
  v25[0] = 0LL;
  ++*v7;
  sub_100D995D8((uint64_t)v25, 0LL);
  return i;
}

void sub_100D99884(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

char *sub_100D9989C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  unint64_t v8 = operator new(0x98uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + 16) = 0;
  *(void *)unint64_t v8 = 0LL;
  *((void *)v8 + 1) = a2;
  id result = sub_100D99910((char *)v8 + 16, a3);
  *(_BYTE *)(a4 + 16) = 1;
  return result;
}

void sub_100D998F8(_Unwind_Exception *a1)
{
}

char *sub_100D99910(char *__dst, __int128 *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1010DD48C(__dst, *(void **)a2, *((void *)a2 + 1));
  }

  else
  {
    __int128 v4 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)__dst = v4;
  }

  *((_DWORD *)__dst + 6) = *((_DWORD *)a2 + 6);
  __int128 v5 = a2[2];
  *((void *)__dst + 6) = *((void *)a2 + 6);
  *((_OWORD *)__dst + 2) = v5;
  *((void *)a2 + 5) = 0LL;
  *((void *)a2 + 6) = 0LL;
  *((void *)a2 + 4) = 0LL;
  __int128 v6 = *(__int128 *)((char *)a2 + 56);
  *((void *)__dst + 9) = *((void *)a2 + 9);
  *(_OWORD *)(__dst + 56) = v6;
  *((void *)a2 + 8) = 0LL;
  *((void *)a2 + 9) = 0LL;
  *((void *)a2 + 7) = 0LL;
  __int128 v7 = a2[5];
  *((void *)__dst + 12) = *((void *)a2 + 12);
  *((_OWORD *)__dst + 5) = v7;
  *((void *)a2 + 11) = 0LL;
  *((void *)a2 + 12) = 0LL;
  *((void *)a2 + 10) = 0LL;
  __int128 v8 = *(__int128 *)((char *)a2 + 104);
  *((void *)__dst + 15) = *((void *)a2 + 15);
  *(_OWORD *)(__dst + 104) = v8;
  *((void *)a2 + 13) = 0LL;
  *((void *)a2 + 14) = 0LL;
  *((void *)a2 + 15) = 0LL;
  *((_WORD *)__dst + 64) = *((_WORD *)a2 + 64);
  return __dst;
}

uint64_t sub_100D999CC(uint64_t a1)
{
  *(void *)a1 = off_101882608;
  id v2 = (id *)(a1 + 8);
  [*(id *)(a1 + 16) forget:*(void *)(a1 + 8)];

  [*v2 invalidate];
  id *v2 = 0LL;
  *(void *)(a1 + 16) = 0LL;
  return a1;
}

CLCppContainer *sub_100D99A2C(uint64_t a1)
{
  id v2 = operator new(0x70uLL);
  sub_100A9DF9C((uint64_t)v2, a1);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_100D99AC4;
  _OWORD v4[3] = &unk_10181D3D0;
  v4[4] = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:",  v2,  v4,  0LL,  112LL);
}

void sub_100D99AB0(_Unwind_Exception *a1)
{
}

void sub_100D99AC4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1)
  {
    operator delete((void *)v1);
  }

void *sub_100D99B34(void *result, uint64_t a2)
{
  *id result = 26LL;
  result[1] = a2;
  result[6] = 0LL;
  result[7] = 0LL;
  result[2] = 0LL;
  result[3] = 0LL;
  result[4] = 0LL;
  result[5] = result + 6;
  return result;
}

uint64_t sub_100D99B54(uint64_t a1)
{
  id v2 = *(const void **)(a1 + 16);
  if (v2)
  {
    _Block_release(v2);
    *(void *)(a1 + 16) = 0LL;
  }

  sub_100008390(a1 + 40, *(void **)(a1 + 48));
  return a1;
}

void sub_100D99B98(uint64_t a1)
{
  id v2 = *(dispatch_source_s **)(a1 + 32);
  if (v2)
  {
    dispatch_source_cancel(v2);
    dispatch_release(*(dispatch_object_t *)(a1 + 32));
    *(void *)(a1 + 32) = 0LL;
  }

void sub_100D99BD0(uint64_t a1, void *aBlock, double a3)
{
  *(double *)(a1 + sub_100BDC958(v1 + 24) = a3;
  __int128 v5 = *(const void **)(a1 + 16);
  if (v5) {
    _Block_release(v5);
  }
  *(void *)(a1 + 16) = _Block_copy(aBlock);
  sub_100D99B98(a1);
  __int128 v7 = *(void **)(a1 + 48);
  __int128 v6 = (void *)(a1 + 48);
  sub_100008390((uint64_t)(v6 - 1), v7);
  *(v6 - 1) = v6;
  *__int128 v6 = 0LL;
  v6[1] = 0LL;
}

void sub_100D99C28(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v19 = a3;
  unint64_t v20 = a2;
  __int128 v5 = *(void **)(a1 + 48);
  if (!v5) {
    goto LABEL_12;
  }
  uint64_t v6 = a1 + 48;
  do
  {
    unint64_t v7 = v5[4];
    BOOL v8 = v7 >= a2;
    if (v7 >= a2) {
      unint64_t v9 = v5;
    }
    else {
      unint64_t v9 = v5 + 1;
    }
    if (v8) {
      uint64_t v6 = (uint64_t)v5;
    }
    __int128 v5 = (void *)*v9;
  }

  while (*v9);
  if (v6 != a1 + 48 && *(void *)(v6 + 32) <= a2)
  {
    uint64_t v18 = v6 + 40;
    sub_100C5FE9C(v6 + 40, &v19);
    *(void *)std::stringbuf::string_type buf = CFAbsoluteTimeGetCurrent();
    sub_100C5FE90(v18, (double *)buf);
  }

  else
  {
LABEL_12:
    if ((a3 & 1) != 0)
    {
      __int16 v13 = (uint64_t **)(a1 + 40);
      *(void *)std::stringbuf::string_type buf = &v20;
      unint64_t v14 = sub_100D9A82C((uint64_t **)(a1 + 40), &v20, (uint64_t)&unk_1012CF090, (uint64_t **)buf) + 5;
      *(void *)std::stringbuf::string_type buf = CFAbsoluteTimeGetCurrent();
      sub_100C5FE84((uint64_t)v14, (double *)buf);
      *(void *)std::stringbuf::string_type buf = &v20;
      unint64_t v15 = sub_100D9A82C(v13, &v20, (uint64_t)&unk_1012CF090, (uint64_t **)buf) + 5;
      *(void *)std::stringbuf::string_type buf = CFAbsoluteTimeGetCurrent();
      sub_100C5FE90((uint64_t)v15, (double *)buf);
      *(void *)std::stringbuf::string_type buf = &v20;
      float v16 = sub_100D9A82C(v13, &v20, (uint64_t)&unk_1012CF090, (uint64_t **)buf);
      sub_100C5FE9C((uint64_t)(v16 + 5), &v19);
      *(void *)std::stringbuf::string_type buf = &v20;
      float v17 = sub_100D9A82C(v13, &v20, (uint64_t)&unk_1012CF090, (uint64_t **)buf);
      sub_100C5FEB0((uint64_t)(v17 + 5), *(void *)a1);
    }

    else
    {
      if (qword_1019345D0 != -1) {
        dispatch_once(&qword_1019345D0, &stru_101882680);
      }
      unint64_t v10 = (os_log_s *)qword_1019345D8;
      if (os_log_type_enabled((os_log_t)qword_1019345D8, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 134217984;
        *(void *)&uint8_t buf[4] = a3;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_ERROR,  "Unable to log impact due to cancel reason not containing kImpactStart 0x%llu",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019345D0 != -1) {
          dispatch_once(&qword_1019345D0, &stru_101882680);
        }
        int v21 = 134217984;
        uint64_t v22 = v19;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345D8,  16LL,  "Unable to log impact due to cancel reason not containing kImpactStart 0x%llu",  &v21);
        unint64_t v12 = (char *)v11;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLFallImpactEventTracker::trackCancelReason(uint64_t, CMSPUFall_Types::FallCancelReason)",  "%s\n",  v11);
        if (v12 != buf) {
          free(v12);
        }
      }
    }
  }

  sub_100D99F18(a1);
}

void sub_100D99F18(uint64_t a1)
{
  double Current = CFAbsoluteTimeGetCurrent();
  unint64_t v3 = *(uint64_t **)(a1 + 40);
  if (v3 != (uint64_t *)(a1 + 48))
  {
    do
    {
      if (Current <= sub_100924308((uint64_t)(v3 + 5)) + *(double *)(a1 + 24))
      {
        uint64_t v6 = (uint64_t *)v3[1];
        if (v6)
        {
          do
          {
            __int128 v5 = v6;
            uint64_t v6 = (uint64_t *)*v6;
          }

          while (v6);
        }

        else
        {
          do
          {
            __int128 v5 = (uint64_t *)v3[2];
            BOOL v7 = *v5 == (void)v3;
            unint64_t v3 = v5;
          }

          while (!v7);
        }
      }

      else
      {
        uint64_t v4 = *(void *)(a1 + 16);
        if (v4) {
          (*(void (**)(uint64_t, uint64_t, uint64_t *))(v4 + 16))(v4, v3[4], v3 + 5);
        }
        __int128 v5 = sub_1000087E8((uint64_t **)(a1 + 40), v3);
        operator delete(v3);
      }

      unint64_t v3 = v5;
    }

    while (v5 != (uint64_t *)(a1 + 48));
  }

  sub_100D9A544(a1, Current);
}

void sub_100D99FFC(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 19);
  __int128 v5 = *(void **)(a1 + 48);
  unint64_t v3 = (void *)(a1 + 48);
  uint64_t v4 = v5;
  if (!v5) {
    goto LABEL_12;
  }
  BOOL v7 = v3;
  do
  {
    unint64_t v8 = v4[4];
    BOOL v9 = v8 >= v2;
    if (v8 >= v2) {
      unint64_t v10 = v4;
    }
    else {
      unint64_t v10 = v4 + 1;
    }
    if (v9) {
      BOOL v7 = v4;
    }
    uint64_t v4 = (void *)*v10;
  }

  while (*v10);
  if (v7 != v3 && v2 >= v7[4])
  {
    uint64_t v12 = (uint64_t)(v7 + 5);
    float v13 = sub_100734D60((float *)(a2 + 27));
    sub_100C5FEB8(v12, v13);
    float v14 = *(float *)(a2 + 31);
    if (v14 >= 0.0) {
      float v15 = *(float *)(a2 + 31);
    }
    else {
      float v15 = -v14;
    }
    float v16 = *(float *)(a2 + 27);
    if (v16 >= 0.0) {
      float v17 = *(float *)(a2 + 27);
    }
    else {
      float v17 = -v16;
    }
    if (v15 <= v17)
    {
      if (v16 < 0.0) {
        float v14 = -v16;
      }
      else {
        float v14 = *(float *)(a2 + 27);
      }
    }

    else if (v14 < 0.0)
    {
      float v14 = -v14;
    }

    sub_100C5FF40(v12, v14);
    float v18 = *(float *)(a2 + 39);
    if (v18 >= 0.0) {
      float v19 = *(float *)(a2 + 39);
    }
    else {
      float v19 = -v18;
    }
    float v20 = *(float *)(a2 + 35);
    if (v20 >= 0.0) {
      float v21 = *(float *)(a2 + 35);
    }
    else {
      float v21 = -v20;
    }
    if (v19 <= v21)
    {
      if (v20 < 0.0) {
        float v18 = -v20;
      }
      else {
        float v18 = *(float *)(a2 + 35);
      }
    }

    else if (v18 < 0.0)
    {
      float v18 = -v18;
    }

    sub_100C5FF70(v12, v18);
    float v22 = *(float *)(a2 + 47);
    if (v22 >= 0.0) {
      float v23 = *(float *)(a2 + 47);
    }
    else {
      float v23 = -v22;
    }
    float v24 = *(float *)(a2 + 43);
    if (v24 >= 0.0) {
      float v25 = *(float *)(a2 + 43);
    }
    else {
      float v25 = -v24;
    }
    if (v23 <= v25)
    {
      if (v24 < 0.0) {
        float v22 = -v24;
      }
      else {
        float v22 = *(float *)(a2 + 43);
      }
    }

    else if (v22 < 0.0)
    {
      float v22 = -v22;
    }

    sub_100C5FFA0(v12, v22);
    sub_100C5FEFC(v12, *(float *)(a2 + 51));
  }

  else
  {
LABEL_12:
    if (qword_1019345D0 != -1) {
      dispatch_once(&qword_1019345D0, &stru_101882680);
    }
    uint8x8_t v11 = (os_log_s *)qword_1019345D8;
    if (os_log_type_enabled((os_log_t)qword_1019345D8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134217984;
      unint64_t v31 = v2;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_ERROR,  "Could not find impact at time %llu, unable to set impact features",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019345D0 != -1) {
        dispatch_once(&qword_1019345D0, &stru_101882680);
      }
      int v28 = 134217984;
      unint64_t v29 = v2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345D8,  16LL,  "Could not find impact at time %llu, unable to set impact features",  &v28);
      uint64_t v27 = (uint8_t *)v26;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLFallImpactEventTracker::updateImpactFeatures(const CLFall_Types::ImpactEvent &)",  "%s\n",  v26);
      if (v27 != buf) {
        free(v27);
      }
    }
  }

void sub_100D9A2FC(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 8);
  __int128 v5 = *(void **)(a1 + 48);
  unint64_t v3 = (void *)(a1 + 48);
  uint64_t v4 = v5;
  if (!v5) {
    goto LABEL_12;
  }
  BOOL v7 = v3;
  do
  {
    unint64_t v8 = v4[4];
    BOOL v9 = v8 >= v2;
    if (v8 >= v2) {
      unint64_t v10 = v4;
    }
    else {
      unint64_t v10 = v4 + 1;
    }
    if (v9) {
      BOOL v7 = v4;
    }
    uint64_t v4 = (void *)*v10;
  }

  while (*v10);
  if (v7 != v3 && v2 >= v7[4])
  {
    uint64_t v12 = (uint64_t)(v7 + 5);
    sub_100C5FFD0((uint64_t)(v7 + 5), *(float *)(a2 + 52));
    sub_100C5FFD8(v12, *(void *)(a2 + 16));
    sub_100C5FFE0(v12, *(void *)(a2 + 36));
    sub_100C5FFE8(v12, *(void *)(a2 + 44));
  }

  else
  {
LABEL_12:
    if (qword_1019345D0 != -1) {
      dispatch_once(&qword_1019345D0, &stru_101882680);
    }
    uint8x8_t v11 = (os_log_s *)qword_1019345D8;
    if (os_log_type_enabled((os_log_t)qword_1019345D8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134217984;
      unint64_t v18 = v2;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_ERROR,  "Could not find impact at time %llu, unable to set fall distance",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019345D0 != -1) {
        dispatch_once(&qword_1019345D0, &stru_101882680);
      }
      int v15 = 134217984;
      unint64_t v16 = v2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345D8,  16LL,  "Could not find impact at time %llu, unable to set fall distance",  &v15);
      float v14 = (uint8_t *)v13;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLFallImpactEventTracker::updateFallDistance(const CLFall_Types::FallDistance &)",  "%s\n",  v13);
      if (v14 != buf) {
        free(v14);
      }
    }
  }

void sub_100D9A544(uint64_t a1, double a2)
{
  if (*(void *)(a1 + 56) && *(double *)(a1 + 24) > 0.0)
  {
    unint64_t v3 = (void *)(a1 + 48);
    uint64_t v4 = *(void **)(a1 + 48);
    if (v4)
    {
      do
      {
        __int128 v5 = v4;
        uint64_t v4 = (void *)v4[1];
      }

      while (v4);
    }

    else
    {
      do
      {
        __int128 v5 = (void *)v3[2];
        BOOL v6 = *v5 == (void)v3;
        unint64_t v3 = v5;
      }

      while (v6);
    }

    double v7 = sub_100924308((uint64_t)(v5 + 5)) + *(double *)(a1 + 24) - a2;
    if (qword_1019345D0 != -1) {
      dispatch_once(&qword_1019345D0, &stru_101882680);
    }
    double v8 = fmax(v7, 1.0);
    BOOL v9 = (os_log_s *)qword_1019345D8;
    if (os_log_type_enabled((os_log_t)qword_1019345D8, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134217984;
      double v19 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_INFO,  "Rescheduling impact reporting in %.2lf seconds",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019345D0 != -1) {
        dispatch_once(&qword_1019345D0, &stru_101882680);
      }
      int v16 = 134217984;
      double v17 = v8;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345D8,  1LL,  "Rescheduling impact reporting in %.2lf seconds",  COERCE_DOUBLE(&v16));
      float v14 = (uint8_t *)v13;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFallImpactEventTracker::rescheduleFlushTimer(CFAbsoluteTime)",  "%s\n",  v13);
      if (v14 != buf) {
        free(v14);
      }
    }

    unint64_t v10 = dispatch_source_create( (dispatch_source_type_t)&_dispatch_source_type_timer,  2uLL,  0,  (dispatch_queue_t)objc_msgSend(objc_msgSend(*(id *)(a1 + 8), "silo"), "queue"));
    *(void *)(a1 + 32) = v10;
    dispatch_time_t v11 = dispatch_time(0x8000000000000000LL, (unint64_t)(v8 * 1000000000.0));
    dispatch_source_set_timer(v10, v11, 0xFFFFFFFFFFFFFFFFLL, 0LL);
    uint64_t v12 = *(dispatch_source_s **)(a1 + 32);
    handler[0] = _NSConcreteStackBlock;
    handler[1] = 3221225472LL;
    handler[2] = sub_100D9A7F8;
    handler[3] = &unk_10181D3D0;
    handler[4] = a1;
    dispatch_source_set_event_handler(v12, handler);
    dispatch_resume(*(dispatch_object_t *)(a1 + 32));
  }

uint64_t sub_100D9A7F8(uint64_t a1)
{
  return sub_100D99F18(*(void *)(a1 + 32));
}

void sub_100D9A800(id a1)
{
  qword_1019345D8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Fall");
}

uint64_t **sub_100D9A82C(uint64_t **a1, unint64_t *a2, uint64_t a3, uint64_t **a4)
{
  double v7 = a1 + 1;
  BOOL v6 = a1[1];
  if (v6)
  {
    unint64_t v8 = *a2;
    while (1)
    {
      while (1)
      {
        BOOL v9 = (uint64_t **)v6;
        unint64_t v10 = v6[4];
        if (v8 >= v10) {
          break;
        }
        BOOL v6 = *v9;
        double v7 = v9;
        if (!*v9) {
          goto LABEL_10;
        }
      }

      if (v10 >= v8) {
        break;
      }
      BOOL v6 = v9[1];
      if (!v6)
      {
        double v7 = v9 + 1;
        goto LABEL_10;
      }
    }
  }

  else
  {
    BOOL v9 = a1 + 1;
LABEL_10:
    dispatch_time_t v11 = (char *)operator new(0x88uLL);
    uint64_t v12 = **a4;
    *(_OWORD *)(v11 + 72) = 0u;
    *(_OWORD *)(v11 + 88) = 0u;
    *((void *)v11 + 4) = v12;
    *((void *)v11 + 5) = &off_101879F90;
    *((void *)v11 + 7) = 0LL;
    *((void *)v11 + 8) = 0LL;
    *((void *)v11 + 6) = 0LL;
    v11[72] = 0;
    *(void *)&__int128 v13 = 0x8000000080000000LL;
    *((void *)&v13 + 1) = 0x8000000080000000LL;
    *(_OWORD *)(v11 + 76) = v13;
    *((_DWORD *)v11 + 23) = 0x7FFFFFFF;
    *((void *)v11 + 12) = 26LL;
    *((void *)v11 + 13) = 0LL;
    *((_DWORD *)v11 + 26) = 2139095039;
    *((void *)v11 + 14) = 0LL;
    *((void *)v11 + 15) = 0LL;
    *((void *)v11 + 16) = 0LL;
    sub_1000085FC(a1, (uint64_t)v9, v7, (uint64_t *)v11);
    return (uint64_t **)v11;
  }

  return v9;
}

uint64_t sub_100D9A934()
{
  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_10199E5F8, (void *)&_mh_execute_header);
}

uint64_t sub_100D9A978(uint64_t a1, void *a2, int a3)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = 0LL;
  *(_WORD *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 20) = a3;
  sub_10034FF34((uint64_t)sub_100D9AA3C, a1, a2, &v8);
  uint64_t v4 = v8;
  uint64_t v8 = 0LL;
  uint64_t v5 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  if (v5)
  {
    (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
    uint64_t v6 = v8;
    uint64_t v8 = 0LL;
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
    }
  }

  [*(id *)(*(void *)(a1 + 8) + 16) register:*(void *)(*(void *)(a1 + 8) + 8) forNotification:1 registrationInfo:0];
  return a1;
}

void sub_100D9AA14(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void *)(v1 + 8);
  *(void *)(v1 + 8) = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_100D9AA3C(uint64_t a1, int *a2, _BYTE *a3, id *a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_1018826A0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLTransitWsbClient::onWifiNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_1018826A0);
    }
    BOOL v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 2082;
      double v17 = "activity";
      __int16 v18 = 2050;
      double v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLTransitWsbClient::onWifiNotification, event:%{public, location:escape_only}s, t his:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100D9AFFC((uint64_t)a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100D9ABF4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100D9AC18(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  return a1;
}

id sub_100D9AC68(uint64_t a1)
{
  id result = [*(id *)a1 silo];
  if (*(_BYTE *)(a1 + 17))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_1018826C0);
    }
    uint64_t v3 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "Stop active dynamic Wsb", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_1018826C0);
      }
      v6[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "Stop active dynamic Wsb",  v6,  2);
      uint64_t v5 = (uint8_t *)v4;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLTransitWsbClient::stopWsb()", "%s\n", v4);
      if (v5 != buf) {
        free(v5);
      }
    }

    id result = [*(id *)(*(void *)(a1 + 8) + 16) unregister:*(void *)(*(void *)(a1 + 8) + 8) forNotification:12];
    *(_BYTE *)(a1 + 17) = 0;
  }

  return result;
}

id sub_100D9AE20(uint64_t a1)
{
  id result = [*(id *)a1 silo];
  if (!*(_BYTE *)(a1 + 17))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_1018826C0);
    }
    uint64_t v3 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "Start active dynamic Wsb", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_1018826C0);
      }
      v6[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "Start active dynamic Wsb",  v6,  2);
      uint64_t v5 = (uint8_t *)v4;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLTransitWsbClient::startWsb()", "%s\n", v4);
      if (v5 != buf) {
        free(v5);
      }
    }

    *(_WORD *)&uint8_t buf[4] = 1;
    *(_DWORD *)std::stringbuf::string_type buf = *(_DWORD *)(a1 + 20);
    *(void *)&uint8_t buf[8] = "transit";
    id result = [*(id *)(*(void *)(a1 + 8) + 16) register:*(void *)(*(void *)(a1 + 8) + 8) forNotification:12 registrationInfo:sub_10039E77C(buf)];
    *(_BYTE *)(a1 + 17) = 1;
  }

  return result;
}

void sub_100D9AFFC(uint64_t a1, uint64_t a2, int *a3, _BYTE *a4)
{
  if (*a3 == 12)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_1018826C0);
    }
    char v11 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "Received kNotificationScanCache", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_1018826C0);
      }
      double v10 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "Received kNotificationScanCache");
      goto LABEL_19;
    }
  }

  else if (*a3 == 1)
  {
    *(_BYTE *)(a1 + 16) = *a4;
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_1018826C0);
    }
    uint64_t v7 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      int v8 = *(unsigned __int8 *)(a1 + 16);
      *(_DWORD *)std::stringbuf::string_type buf = 67109120;
      int v20 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "Received kNotificationPower, isWifiPowered, %d",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_1018826C0);
      }
      double v10 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "Received kNotificationPower, isWifiPowered, %d",  v18);
LABEL_19:
      uint64_t v12 = v9;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLTransitWsbClient::onWifiNotification(int, const CLWifiService_Type::Notification &, const CLWifiService_T ype::NotificationData &)",  "%s\n",  v10);
LABEL_29:
      if (v12 != buf) {
        free(v12);
      }
    }
  }

  else
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_1018826C0);
    }
    int v13 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      int v14 = *a3;
      *(_DWORD *)std::stringbuf::string_type buf = 67240192;
      int v20 = v14;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_FAULT,  "Unknown notification received, %{public}d",  buf,  8u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_1018826C0);
      }
      int v15 = *a3;
      v18[0] = 67240192;
      v18[1] = v15;
      double v16 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Unknown notification received, %{public}d",  v18,  8);
      uint64_t v12 = v17;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLTransitWsbClient::onWifiNotification(int, const CLWifiService_Type::Notification &, const CLWifiService_T ype::NotificationData &)",  "%s\n",  v16);
      goto LABEL_29;
    }
  }

void sub_100D9B3E8(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_100D9B414(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

uint64_t sub_100D9B440(uint64_t a1, __int128 *a2)
{
  *(void *)a1 = &off_1018826F0;
  uint64_t v3 = (void *)(a1 + 8);
  sub_100DA1C08((char *)(a1 + 8), a2);
  *(void *)(a1 + 136) = v4;
  *(void *)(a1 + 136 + *(void *)(v4 - 24)) = v5;
  uint64_t v6 = (std::ios_base *)(a1 + 136 + *(void *)(*(void *)(a1 + 136) - 24LL));
  std::ios_base::init(v6, (void *)(a1 + 144));
  v6[1].__vftable = 0LL;
  v6[1].__fmtflags_ = -1;
  std::filebuf::basic_filebuf(a1 + 144);
  *(_OWORD *)(a1 + 704) = 0u;
  *(_OWORD *)(a1 + 720) = 0u;
  uint64_t v7 = (char *)operator new(3uLL);
  *(void *)(a1 + 712) = v7;
  *(void *)(a1 + 728) = v7 + 3;
  *(_WORD *)uint64_t v7 = 32126;
  v7[2] = 1;
  *(void *)(a1 + 720) = v7 + 3;
  *(_BYTE *)(a1 + 736) = 0;
  *(_DWORD *)(a1 + 740) = 0;
  if (qword_101934910 != -1) {
    dispatch_once(&qword_101934910, &stru_101882760);
  }
  int v8 = (os_log_s *)qword_101934918;
  if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_INFO))
  {
    BOOL v9 = v3;
    int v10 = *(unsigned __int8 *)(a1 + 126);
    int v11 = *(unsigned __int8 *)(a1 + 124);
    uint64_t v12 = *(void *)(a1 + 104);
    uint64_t v13 = *(void *)(a1 + 112);
    int v14 = *(unsigned __int8 *)(a1 + 127);
    int v15 = *(unsigned __int8 *)(a1 + 129);
    *(_DWORD *)std::stringbuf::string_type buf = 136447747;
    *(void *)&uint8_t buf[4] = v9;
    __int16 v47 = 1026;
    int v48 = v10;
    __int16 v49 = 1026;
    int v50 = v11;
    __int16 v51 = 2049;
    uint64_t v52 = v12;
    __int16 v53 = 2049;
    uint64_t v54 = v13;
    __int16 v55 = 1026;
    int v56 = v14;
    __int16 v57 = 1026;
    int v58 = v15;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_INFO,  "ProtobufSerializer,created instance,%{public}s,disk_enable,%{public}d,compress,%{public}d,retention_sec,%{private} .1f,dir_size_bytes,%{private}lld,localTime,%{public}d,prune,%{public}d",  buf,  0x38u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934910 != -1) {
      dispatch_once(&qword_101934910, &stru_101882760);
    }
    float v22 = v3;
    int v23 = *(unsigned __int8 *)(a1 + 126);
    int v24 = *(unsigned __int8 *)(a1 + 124);
    uint64_t v25 = *(void *)(a1 + 104);
    uint64_t v26 = *(void *)(a1 + 112);
    int v27 = *(unsigned __int8 *)(a1 + 127);
    int v28 = *(unsigned __int8 *)(a1 + 129);
    *(_DWORD *)std::string __p = 136447747;
    *(void *)&__p[4] = v22;
    __int16 v34 = 1026;
    int v35 = v23;
    __int16 v36 = 1026;
    int v37 = v24;
    __int16 v38 = 2049;
    uint64_t v39 = v25;
    __int16 v40 = 2049;
    uint64_t v41 = v26;
    __int16 v42 = 1026;
    int v43 = v27;
    __int16 v44 = 1026;
    int v45 = v28;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934918,  1LL,  "ProtobufSerializer,created instance,%{public}s,disk_enable,%{public}d,compress,%{public}d,retention_sec,%{private} .1f,dir_size_bytes,%{private}lld,localTime,%{public}d,prune,%{public}d",  __p,  56);
    int v30 = (char *)v29;
    sub_10029211C("Generic", 1LL, 0, 2LL, "CLProtobufSerializer::CLProtobufSerializer(Config &&)", "%s\n", v29);
    if (v30 != buf) {
      free(v30);
    }
  }

  id v16 = -[objc_class defaultManager](off_101990F70(), "defaultManager");
  if (v16)
  {
    std::operator+<char>(buf, "com.apple.locationd.diskusage.", v3);
    sub_100D9B940(a1, (uint64_t)__p);
    if (v37 >= 0) {
      double v17 = __p;
    }
    else {
      double v17 = *(_BYTE **)__p;
    }
    __int16 v18 = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v17);
    if (SHIBYTE(v37) < 0) {
      operator delete(*(void **)__p);
    }
    id v32 = -[objc_class pathInfoWithURL:]( off_101990F78(),  "pathInfoWithURL:",  +[NSURL fileURLWithPath:](&OBJC_CLASS___NSURL, "fileURLWithPath:", v18));
    double v19 = +[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v32, 1LL);
    if (v50 >= 0) {
      int v20 = buf;
    }
    else {
      int v20 = *(_BYTE **)buf;
    }
    v31[0] = _NSConcreteStackBlock;
    v31[1] = 3221225472LL;
    v31[2] = sub_100D9BA9C;
    v31[3] = &unk_101830628;
    v31[4] = v18;
    objc_msgSend( v16,  "registerPaths:forBundleID:completionHandler:",  v19,  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v20),  v31);
    if (SHIBYTE(v50) < 0) {
      operator delete(*(void **)buf);
    }
  }

  return a1;
}

void sub_100D9B89C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20, char a21, char a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, void *a28, uint64_t a29, int a30, __int16 a31, char a32, char a33)
{
  int v37 = (void *)v34[89];
  if (v37)
  {
    v34[90] = (uint64_t)v37;
    operator delete(v37);
  }

  sub_100D9E760(v34 + 88, 0LL);
  sub_100D9BDA0(v35);
  sub_100C05928(v33);
  _Unwind_Resume(a1);
}

void sub_100D9B940(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(char *)(a1 + 103) < 0)
  {
    if (*(void *)(a1 + 88)) {
      goto LABEL_3;
    }
LABEL_22:
    if (*(char *)(a1 + 79) < 0)
    {
      sub_1010DD48C((_BYTE *)a2, *(void **)(a1 + 56), *(void *)(a1 + 64));
    }

    else
    {
      *(_OWORD *)a2 = *(_OWORD *)(a1 + 56);
      *(void *)(a2 + 16) = *(void *)(a1 + 72);
    }

    return;
  }

  if (!*(_BYTE *)(a1 + 103)) {
    goto LABEL_22;
  }
LABEL_3:
  else {
    size_t v4 = *(void *)(a1 + 64);
  }
  p_p = &__p;
  sub_1000392EC((uint64_t)&__p, v4 + 1);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if (v4)
  {
    else {
      uint64_t v6 = *(const void **)(a1 + 56);
    }
    memmove(p_p, v6, v4);
  }

  *(_WORD *)((char *)&p_p->__r_.__value_.__l.__data_ + v4) = 47;
  int v7 = *(char *)(a1 + 103);
  if (v7 >= 0) {
    int v8 = (const std::string::value_type *)(a1 + 80);
  }
  else {
    int v8 = *(const std::string::value_type **)(a1 + 80);
  }
  if (v7 >= 0) {
    std::string::size_type v9 = *(unsigned __int8 *)(a1 + 103);
  }
  else {
    std::string::size_type v9 = *(void *)(a1 + 88);
  }
  int v10 = std::string::append(&__p, v8, v9);
  __int128 v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  *(void *)(a2 + 16) = v10->__r_.__value_.__l.__cap_;
  *(_OWORD *)a2 = v11;
  v10->__r_.__value_.__l.__size_ = 0LL;
  v10->__r_.__value_.__l.__cap_ = 0LL;
  v10->__r_.__value_.__r.__words[0] = 0LL;
}

void sub_100D9BA80( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100D9BA9C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    if (qword_101934910 != -1) {
      dispatch_once(&qword_101934910, &stru_101882760);
    }
    size_t v4 = (os_log_s *)qword_101934918;
    if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_ERROR))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      *(_DWORD *)std::stringbuf::string_type buf = 138412546;
      uint64_t v20 = v5;
      __int16 v21 = 2112;
      uint64_t v22 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_ERROR,  "ProtobufSerializer,failed to set space attribution for %@. Error: %@",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934910 != -1) {
        dispatch_once(&qword_101934910, &stru_101882760);
      }
      uint64_t v6 = *(void *)(a1 + 32);
      int v15 = 138412546;
      uint64_t v16 = v6;
      __int16 v17 = 2112;
      uint64_t v18 = a2;
      double v7 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934918,  16LL,  "ProtobufSerializer,failed to set space attribution for %@. Error: %@",  &v15,  22);
      std::string::size_type v9 = v8;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "CLProtobufSerializer::CLProtobufSerializer(Config &&)_block_invoke",  "%s\n",  v7);
LABEL_19:
      if (v9 != buf) {
        free(v9);
      }
    }
  }

  else
  {
    if (qword_101934910 != -1) {
      dispatch_once(&qword_101934910, &stru_101882760);
    }
    int v10 = (os_log_s *)qword_101934918;
    if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_INFO))
    {
      uint64_t v11 = *(void *)(a1 + 32);
      *(_DWORD *)std::stringbuf::string_type buf = 138412290;
      uint64_t v20 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_INFO,  "ProtobufSerializer,set space attribution for %@",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934910 != -1) {
        dispatch_once(&qword_101934910, &stru_101882760);
      }
      uint64_t v12 = *(void *)(a1 + 32);
      int v15 = 138412290;
      uint64_t v16 = v12;
      double v13 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934918,  1LL,  "ProtobufSerializer,set space attribution for %@",  &v15,  12);
      std::string::size_type v9 = v14;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLProtobufSerializer::CLProtobufSerializer(Config &&)_block_invoke",  "%s\n",  v13);
      goto LABEL_19;
    }
  }

void *sub_100D9BDA0(void *a1)
{
  return a1;
}

uint64_t sub_100D9BDF8(uint64_t a1)
{
  *(void *)a1 = &off_1018826F0;
  if (qword_1019A20A0)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100D9BF10;
    block[3] = &unk_10181D3D0;
    void block[4] = a1;
    dispatch_sync((dispatch_queue_t)qword_1019A20A0, block);
  }

  uint64_t v2 = *(void **)(a1 + 712);
  if (v2)
  {
    *(void *)(a1 + 720) = v2;
    operator delete(v2);
  }

  sub_100D9E760((uint64_t *)(a1 + 704), 0LL);
  std::filebuf::~filebuf(a1 + 144);
  std::ios::~ios(a1 + 552);
  return a1;
}

void sub_100D9BF10(uint64_t a1)
{
}

void sub_100D9BF18(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 736))
  {
    *(_BYTE *)(a1 + 736) = 0;
    if (qword_101934910 != -1) {
      dispatch_once(&qword_101934910, &stru_101882760);
    }
    uint64_t v2 = (os_log_s *)qword_101934918;
    if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v3 = (void *)(a1 + 8);
      *(_DWORD *)std::stringbuf::string_type buf = 136446210;
      uint64_t v11 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "ProtobufSerializer,%{public}s,closing",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934910 != -1) {
        dispatch_once(&qword_101934910, &stru_101882760);
      }
      uint64_t v6 = (void *)(a1 + 8);
      int v8 = 136446210;
      std::string::size_type v9 = v6;
      double v7 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934918,  0LL,  "ProtobufSerializer,%{public}s,closing",  &v8,  12);
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLProtobufSerializer::closeInternal()", "%s\n", v7);
    }

    uint64_t v4 = *(void *)(a1 + 704);
    if (v4)
    {
      sub_100D9DFC8(v4, (void *)(a1 + 136));
      sub_100D9E760((uint64_t *)(a1 + 704), 0LL);
    }

    std::ostream::flush(a1 + 136);
    if (!std::filebuf::close(a1 + 144))
    {
      uint64_t v5 = (std::ios_base *)(a1 + 136 + *(void *)(*(void *)(a1 + 136) - 24LL));
      std::ios_base::clear(v5, v5->__rdstate_ | 4);
    }

    if (*(_BYTE *)(a1 + 129)) {
      sub_100D9E78C(a1);
    }
  }

void sub_100D9C150(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100D9BDF8(a1);
  operator delete(v1);
}

void sub_100D9C164(id a1)
{
  uint64_t v1 = dispatch_queue_attr_make_with_qos_class(0LL, QOS_CLASS_DEFAULT, 0);
  qword_1019A20A0 = (uint64_t)dispatch_queue_create("com.apple.locationd.proto_serialize", v1);
}

void sub_100D9C19C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 125))
  {
    if (qword_101934910 != -1) {
      dispatch_once(&qword_101934910, &stru_101882760);
    }
    uint64_t v2 = (void *)(a1 + 8);
    uint64_t v3 = (os_log_s *)qword_101934918;
    if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_INFO))
    {
      uint64_t v4 = (void *)(a1 + 8);
      *(_DWORD *)std::stringbuf::string_type buf = 136446210;
      int v10 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "#p%{public}s,#open", buf, 0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934910 != -1) {
        dispatch_once(&qword_101934910, &stru_101882760);
      }
      int v7 = 136446210;
      int v8 = v2;
      uint64_t v5 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934918,  1LL,  "#p%{public}s,#open",  &v7,  12);
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLProtobufSerializer::open()", "%s\n", v5);
    }

    *(_DWORD *)(a1 + 740) = 0;
  }

  if (*(_BYTE *)(a1 + 126))
  {
    if (qword_10199E610 != -1) {
      dispatch_once(&qword_10199E610, &stru_101882700);
    }
    if (qword_1019A20A0)
    {
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_100D9C3E4;
      block[3] = &unk_10181D3D0;
      void block[4] = a1;
      dispatch_async((dispatch_queue_t)qword_1019A20A0, block);
    }
  }

void sub_100D9C3E4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (*(_BYTE *)(v1 + 736))
  {
    if (qword_101934910 != -1) {
      dispatch_once(&qword_101934910, &stru_101882760);
    }
    uint64_t v2 = (os_log_s *)qword_101934918;
    if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v3 = (void *)(v1 + 8);
      *(_DWORD *)std::stringbuf::string_type buf = 136446210;
      *(void *)&uint8_t buf[4] = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "ProtobufSerializer,%{public}s,#Warning,previous file was not closed",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934910 != -1) {
        dispatch_once(&qword_101934910, &stru_101882760);
      }
      __int16 v17 = (void *)(v1 + 8);
      int v29 = 136446210;
      int v30 = v17;
      uint64_t v18 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934918,  0LL,  "ProtobufSerializer,%{public}s,#Warning,previous file was not closed",  &v29,  12);
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLProtobufSerializer::open()_block_invoke", "%s\n", v18);
      if (v18 != buf) {
        free(v18);
      }
    }

    sub_100D9BF18(v1);
  }

  if (sub_100D9CA6C((char *)(v1 + 56)))
  {
    if (*(char *)(v1 + 103) < 0)
    {
      if (!*(void *)(v1 + 88))
      {
LABEL_19:
        if (*(_BYTE *)(v1 + 124))
        {
          uint64_t v6 = operator new(0x50uLL);
          sub_100DA1844((uint64_t)v6, 256);
          sub_100D9E760((uint64_t *)(v1 + 704), (uint64_t)v6);
        }

        sub_100D9D528(v1, &__p);
        if (qword_101934910 != -1) {
          dispatch_once(&qword_101934910, &stru_101882760);
        }
        int v7 = (uint64_t *)(v1 + 8);
        int v8 = (os_log_s *)qword_101934918;
        if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_DEFAULT))
        {
          std::string::size_type v9 = (void *)(v1 + 8);
          p_p = &__p;
          if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
          }
          *(_DWORD *)std::stringbuf::string_type buf = 136446466;
          *(void *)&uint8_t buf[4] = v9;
          __int16 v36 = 2082;
          int v37 = p_p;
          _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "ProtobufSerializer,%{public}s,opening,%{public}s",  buf,  0x16u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934910 != -1) {
            dispatch_once(&qword_101934910, &stru_101882760);
          }
          uint64_t v19 = v1 + 8;
          uint64_t v20 = &__p;
          if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            uint64_t v20 = (std::string *)__p.__r_.__value_.__r.__words[0];
          }
          int v29 = 136446466;
          int v30 = (void *)v19;
          __int16 v31 = 2082;
          id v32 = v20;
          LODWORD(v27) = 22;
          __int16 v21 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934918,  0LL,  "ProtobufSerializer,%{public}s,opening,%{public}s",  &v29,  v27);
          sub_10029211C("Generic", 1LL, 0, 2LL, "void CLProtobufSerializer::open()_block_invoke", "%s\n", v21);
          if (v21 != buf) {
            free(v21);
          }
        }

        std::ofstream::open(v1 + 136, &__p, 4LL);
        if (*(void *)(v1 + 264))
        {
          *(_BYTE *)(v1 + 736) = 1;
          if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
            uint64_t v11 = &__p;
          }
          else {
            uint64_t v11 = (std::string *)__p.__r_.__value_.__r.__words[0];
          }
          sub_100292BC4((const char *)v11);
        }

        else
        {
          *(_BYTE *)(v1 + 736) = 0;
          if (qword_101934910 != -1) {
            dispatch_once(&qword_101934910, &stru_101882760);
          }
          uint64_t v12 = (os_log_s *)qword_101934918;
          if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_ERROR))
          {
            uint64_t v13 = v1 + 8;
            if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
              int v14 = &__p;
            }
            else {
              int v14 = (std::string *)__p.__r_.__value_.__r.__words[0];
            }
            int v15 = __error();
            uint64_t v16 = strerror(*v15);
            *(_DWORD *)std::stringbuf::string_type buf = 136446722;
            *(void *)&uint8_t buf[4] = v13;
            __int16 v36 = 2082;
            int v37 = v14;
            __int16 v38 = 2082;
            uint64_t v39 = v16;
            _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_ERROR,  "ProtobufSerializer,%{public}s,failed to open,%{public}s,error,%{public}s",  buf,  0x20u);
          }

          if (sub_1002921D0(115, 0))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934910 != -1) {
              dispatch_once(&qword_101934910, &stru_101882760);
            }
            uint64_t v22 = qword_101934918;
            if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
              int v23 = &__p;
            }
            else {
              int v23 = (std::string *)__p.__r_.__value_.__r.__words[0];
            }
            int v24 = __error();
            uint64_t v25 = strerror(*v24);
            int v29 = 136446722;
            int v30 = v7;
            __int16 v31 = 2082;
            id v32 = v23;
            __int16 v33 = 2082;
            __int16 v34 = v25;
            LODWORD(v27) = 32;
            uint64_t v26 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v22,  16LL,  "ProtobufSerializer,%{public}s,failed to open,%{public}s,error,%{public}s",  &v29,  v27);
            sub_10029211C("Generic", 1LL, 0, 0LL, "void CLProtobufSerializer::open()_block_invoke", "%s\n", v26);
            if (v26 != buf) {
              free(v26);
            }
          }
        }

        return;
      }
    }

    else if (!*(_BYTE *)(v1 + 103))
    {
      goto LABEL_19;
    }

    sub_100D9B940(v1, (uint64_t)buf);
    BOOL v4 = sub_100D9CA6C(buf);
    BOOL v5 = v4;
    if (SHIBYTE(v38) < 0)
    {
      operator delete(*(void **)buf);
      if (!v5) {
        return;
      }
    }

    else if (!v4)
    {
      return;
    }

    goto LABEL_19;
  }

void sub_100D9CA18( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, int a24, __int16 a25, char a26, char a27)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_100D9CA6C(char *a1)
{
  uint64_t v1 = a1;
  sub_100DA1E68(&v41.__pn_, a1);
  std::__fs::filesystem::__status(&v41, 0LL);
  if (buf.__r_.__value_.__s.__data_[0] && buf.__r_.__value_.__s.__data_[0] != 255)
  {
    if (qword_101934910 != -1) {
      dispatch_once(&qword_101934910, &stru_101882760);
    }
    uint64_t v12 = (os_log_s *)qword_101934918;
    if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_DEBUG))
    {
      if (v1[23] >= 0) {
        std::string::size_type v13 = (std::string::size_type)v1;
      }
      else {
        std::string::size_type v13 = *(void *)v1;
      }
      LODWORD(v41.__pn_.__r_.__value_.__l.__data_) = 136315138;
      *(std::string::size_type *)((char *)v41.__pn_.__r_.__value_.__r.__words + 4) = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "ProtobufSerializer,directory exists,%s",  (uint8_t *)&v41,  0xCu);
    }

    if (!sub_1002921D0(115, 2)) {
      return 1LL;
    }
    bzero(&v41, 0x65CuLL);
    if (qword_101934910 != -1) {
      dispatch_once(&qword_101934910, &stru_101882760);
    }
    if (v1[23] >= 0) {
      std::string::size_type v31 = (std::string::size_type)v1;
    }
    else {
      std::string::size_type v31 = *(void *)v1;
    }
    LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v31;
    int v28 = (std::__fs::filesystem::path *)_os_log_send_and_compose_impl( 2LL,  0LL,  &v41,  1628LL,  &_mh_execute_header,  qword_101934918,  2LL,  "ProtobufSerializer,directory exists,%s",  (const char *)&buf);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL (anonymous namespace)::ensureDirectoryExistsAndHasLoggingOwnership(const std::string &)",  "%s\n",  (const char *)v28);
    goto LABEL_108;
  }

  v35.__val_ = 0;
  v35.__cat_ = std::system_category();
  sub_100DA1E68(&v41.__pn_, v1);
  BOOL v2 = std::__fs::filesystem::__create_directories(&v41, &v35);
  if (v2)
  {
    if (qword_101934910 != -1) {
      dispatch_once(&qword_101934910, &stru_101882760);
    }
    uint64_t v3 = (os_log_s *)qword_101934918;
    if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_INFO))
    {
      if (v1[23] >= 0) {
        std::string::size_type v4 = (std::string::size_type)v1;
      }
      else {
        std::string::size_type v4 = *(void *)v1;
      }
      LODWORD(v41.__pn_.__r_.__value_.__l.__data_) = 136380675;
      *(std::string::size_type *)((char *)v41.__pn_.__r_.__value_.__r.__words + 4) = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_INFO,  "ProtobufSerializer,created directory,%{private}s",  (uint8_t *)&v41,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(&v41, 0x65CuLL);
      if (qword_101934910 != -1) {
        dispatch_once(&qword_101934910, &stru_101882760);
      }
      if (v1[23] >= 0) {
        std::string::size_type v29 = (std::string::size_type)v1;
      }
      else {
        std::string::size_type v29 = *(void *)v1;
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 136380675;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v29;
      int v30 = (std::__fs::filesystem::path *)_os_log_send_and_compose_impl( 2LL,  0LL,  &v41,  1628LL,  &_mh_execute_header,  qword_101934918,  1LL,  "ProtobufSerializer,created directory,%{private}s",  &buf,  12);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL (anonymous namespace)::ensureDirectoryExistsAndHasLoggingOwnership(const std::string &)",  "%s\n",  (const char *)v30);
      if (v30 != &v41) {
        free(v30);
      }
    }

    sub_100DA1E68(&v41.__pn_, v1);
    std::__fs::filesystem::__permissions(&v41, group_all|owner_all, add, &v35);
    if (v35.__val_)
    {
      if (qword_101934910 != -1) {
        dispatch_once(&qword_101934910, &stru_101882760);
      }
      BOOL v5 = (os_log_s *)qword_101934918;
      if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_ERROR))
      {
        std::string::size_type v6 = v1[23] >= 0 ? (std::string::size_type)v1 : *(void *)v1;
        std::error_code::message(&v41.__pn_, &v35);
        int v7 = (v41.__pn_.__r_.__value_.__s.__size_ & 0x80u) == 0
           ? &v41
           : (std::__fs::filesystem::path *)v41.__pn_.__r_.__value_.__r.__words[0];
        LODWORD(buf.__r_.__value_.__l.__data_) = 136380931;
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v6;
        WORD2(buf.__r_.__value_.__r.__words[1]) = 2082;
        *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v7;
        _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_ERROR,  "ProtobufSerializer,failed to set directory permissions,%{private}s,error,%{public}s",  (uint8_t *)&buf,  0x16u);
      }

      BOOL result = sub_1002921D0(115, 0);
      if (result)
      {
        bzero(&v41, 0x65CuLL);
        if (qword_101934910 != -1) {
          dispatch_once(&qword_101934910, &stru_101882760);
        }
        uint64_t v9 = qword_101934918;
        if (v1[23] < 0) {
          uint64_t v1 = *(char **)v1;
        }
        std::error_code::message(&buf, &v35);
        if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          p_std::string buf = &buf;
        }
        else {
          p_std::string buf = (std::string *)buf.__r_.__value_.__r.__words[0];
        }
        int v37 = 136380931;
        __int16 v38 = v1;
        __int16 v39 = 2082;
        __int16 v40 = p_buf;
        LODWORD(v34) = 22;
        uint64_t v11 = (std::__fs::filesystem::path *)_os_log_send_and_compose_impl( 2LL,  0LL,  &v41,  1628LL,  &_mh_execute_header,  v9,  16LL,  "ProtobufSerializer,failed to set directory permissions,%{private}s,error,%{public}s",  &v37,  v34);
        goto LABEL_119;
      }

      return result;
    }

    if (v1[23] >= 0) {
      __int16 v17 = v1;
    }
    else {
      __int16 v17 = *(const char **)v1;
    }
    if (sub_100292BC4(v17))
    {
      if (qword_101934910 != -1) {
        dispatch_once(&qword_101934910, &stru_101882760);
      }
      uint64_t v18 = (os_log_s *)qword_101934918;
      if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_ERROR))
      {
        if (v1[23] >= 0) {
          std::string::size_type v19 = (std::string::size_type)v1;
        }
        else {
          std::string::size_type v19 = *(void *)v1;
        }
        uint64_t v20 = __error();
        __int16 v21 = strerror(*v20);
        LODWORD(v41.__pn_.__r_.__value_.__l.__data_) = 136446466;
        *(std::string::size_type *)((char *)v41.__pn_.__r_.__value_.__r.__words + 4) = v19;
        WORD2(v41.__pn_.__r_.__value_.__r.__words[1]) = 2082;
        *(std::string::size_type *)((char *)&v41.__pn_.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v21;
        _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_ERROR,  "ProtobufSerializer,chown failed,%{public}s,error,%{public}s",  (uint8_t *)&v41,  0x16u);
      }

      BOOL result = sub_1002921D0(115, 0);
      if (result)
      {
        bzero(&v41, 0x65CuLL);
        if (qword_101934910 != -1) {
          dispatch_once(&qword_101934910, &stru_101882760);
        }
        uint64_t v22 = qword_101934918;
        if (v1[23] < 0) {
          uint64_t v1 = *(char **)v1;
        }
        int v23 = __error();
        int v24 = strerror(*v23);
        LODWORD(buf.__r_.__value_.__l.__data_) = 136446466;
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v1;
        WORD2(buf.__r_.__value_.__r.__words[1]) = 2082;
        *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v24;
        LODWORD(v34) = 22;
        uint64_t v11 = (std::__fs::filesystem::path *)_os_log_send_and_compose_impl( 2LL,  0LL,  &v41,  1628LL,  &_mh_execute_header,  v22,  16LL,  "ProtobufSerializer,chown failed,%{public}s,error,%{public}s",  &buf,  v34);
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL (anonymous namespace)::ensureDirectoryExistsAndHasLoggingOwnership(const std::string &)",  "%s\n",  (const char *)v11);
        if (v11 == &v41) {
          return 0LL;
        }
        goto LABEL_120;
      }

      return result;
    }

    if (qword_101934910 != -1) {
      dispatch_once(&qword_101934910, &stru_101882760);
    }
    uint64_t v25 = (os_log_s *)qword_101934918;
    if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_DEBUG))
    {
      if (v1[23] >= 0) {
        std::string::size_type v26 = (std::string::size_type)v1;
      }
      else {
        std::string::size_type v26 = *(void *)v1;
      }
      LODWORD(v41.__pn_.__r_.__value_.__l.__data_) = 136315138;
      *(std::string::size_type *)((char *)v41.__pn_.__r_.__value_.__r.__words + 4) = v26;
      _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEBUG,  "ProtobufSerializer,chown succeeded,%s",  (uint8_t *)&v41,  0xCu);
    }

    if (!sub_1002921D0(115, 2)) {
      return 1LL;
    }
    bzero(&v41, 0x65CuLL);
    if (qword_101934910 != -1) {
      dispatch_once(&qword_101934910, &stru_101882760);
    }
    if (v1[23] >= 0) {
      std::string::size_type v27 = (std::string::size_type)v1;
    }
    else {
      std::string::size_type v27 = *(void *)v1;
    }
    LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v27;
    int v28 = (std::__fs::filesystem::path *)_os_log_send_and_compose_impl( 2LL,  0LL,  &v41,  1628LL,  &_mh_execute_header,  qword_101934918,  2LL,  "ProtobufSerializer,chown succeeded,%s",  (const char *)&buf);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL (anonymous namespace)::ensureDirectoryExistsAndHasLoggingOwnership(const std::string &)",  "%s\n",  (const char *)v28);
LABEL_108:
    if (v28 != &v41) {
      free(v28);
    }
    return 1LL;
  }

  if (qword_101934910 != -1) {
    dispatch_once(&qword_101934910, &stru_101882760);
  }
  int v14 = (os_log_s *)qword_101934918;
  if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_ERROR))
  {
    std::string::size_type v15 = v1[23] >= 0 ? (std::string::size_type)v1 : *(void *)v1;
    std::error_code::message(&v41.__pn_, &v35);
    uint64_t v16 = (v41.__pn_.__r_.__value_.__s.__size_ & 0x80u) == 0
        ? &v41
        : (std::__fs::filesystem::path *)v41.__pn_.__r_.__value_.__r.__words[0];
    LODWORD(buf.__r_.__value_.__l.__data_) = 136380931;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v15;
    WORD2(buf.__r_.__value_.__r.__words[1]) = 2082;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v16;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_ERROR,  "ProtobufSerializer,failed to create directory,%{private}s,error,%{public}s",  (uint8_t *)&buf,  0x16u);
  }

  BOOL result = sub_1002921D0(115, 0);
  if (result)
  {
    bzero(&v41, 0x65CuLL);
    if (qword_101934910 != -1) {
      dispatch_once(&qword_101934910, &stru_101882760);
    }
    uint64_t v32 = qword_101934918;
    if (v1[23] < 0) {
      uint64_t v1 = *(char **)v1;
    }
    std::error_code::message(&buf, &v35);
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      __int16 v33 = &buf;
    }
    else {
      __int16 v33 = (std::string *)buf.__r_.__value_.__r.__words[0];
    }
    int v37 = 136380931;
    __int16 v38 = v1;
    __int16 v39 = 2082;
    __int16 v40 = v33;
    uint64_t v11 = (std::__fs::filesystem::path *)_os_log_send_and_compose_impl( 2LL,  0LL,  &v41,  1628LL,  &_mh_execute_header,  v32,  16LL,  "ProtobufSerializer,failed to create directory,%{private}s,error,%{public}s",  &v37,  22);
LABEL_119:
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL (anonymous namespace)::ensureDirectoryExistsAndHasLoggingOwnership(const std::string &)",  "%s\n",  (const char *)v11);
    if (v11 == &v41) {
      return 0LL;
    }
LABEL_120:
    free(v11);
    return 0LL;
  }

  return result;
}

void sub_100D9D4FC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, void *__p, uint64_t a22, int a23, __int16 a24, char a25, char a26)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100D9D528(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string::size_type v4 = *(int **)(a1 + 704);
  if (v4) {
    sub_100DA0130(v4, v58);
  }
  else {
    sub_1010DDBC0(v58, "");
  }
  if (*(_BYTE *)(a1 + 128))
  {
    int v5 = *(unsigned __int8 *)(a1 + 127);
    memset(&v61, 0, sizeof(v61));
    uint64_t v6 = sub_1004F2598();
    if (!sub_1004F7AD0(v6, &v61))
    {
      if (qword_101934910 != -1) {
        dispatch_once(&qword_101934910, &stru_101882760);
      }
      int v7 = (os_log_s *)qword_101934918;
      if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_ERROR))
      {
        LOWORD(buf.__r_.__value_.__l.__data_) = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "ProtobufSerializer,could not read device serial number",  (uint8_t *)&buf,  2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_101934910 != -1) {
          dispatch_once(&qword_101934910, &stru_101882760);
        }
        LOWORD(v63.__r_.__value_.__l.__data_) = 0;
        __int16 v55 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934918,  16LL,  "ProtobufSerializer,could not read device serial number",  &v63,  2);
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "std::string (anonymous namespace)::createUniquePortionOfLogFileName(BOOL)",  "%s\n",  (const char *)v55);
        if (v55 != &buf) {
          free(v55);
        }
      }
    }

    memset(&v60, 0, sizeof(v60));
    time_t v66 = time(0LL);
    if (v5) {
      int v8 = localtime(&v66);
    }
    else {
      int v8 = gmtime(&v66);
    }
    p_tm_sec = (uint64_t *)&v8->tm_sec;
    if (v8)
    {
      sub_10000CE18((uint64_t)&v63);
      buf.__r_.__value_.__s.__data_[0] = 48;
      sub_1007EC2C0(&v63.__r_.__value_.__l.__cap_, (char *)&buf);
      *(std::streambuf::char_type **)((char *)&v64.__binp_ + *(void *)(v63.__r_.__value_.__l.__cap_ - 24)) = (std::streambuf::char_type *)4;
      int v10 = (void *)std::ostream::operator<<( &v63.__r_.__value_.__r.__words[2],  (*((_DWORD *)p_tm_sec + 5) + 1900));
      sub_10000CF44(v10, (uint64_t)"-", 1LL);
      *(std::streambuf::char_type **)((char *)&v64.__binp_ + *(void *)(v63.__r_.__value_.__l.__cap_ - 24)) = (std::streambuf::char_type *)2;
      uint64_t v11 = (void *)std::ostream::operator<<( &v63.__r_.__value_.__r.__words[2],  (*((_DWORD *)p_tm_sec + 4) + 1));
      sub_10000CF44(v11, (uint64_t)"-", 1LL);
      *(std::streambuf::char_type **)((char *)&v64.__binp_ + *(void *)(v63.__r_.__value_.__l.__cap_ - 24)) = (std::streambuf::char_type *)2;
      uint64_t v12 = (void *)std::ostream::operator<<(&v63.__r_.__value_.__r.__words[2], *((unsigned int *)p_tm_sec + 3));
      if (v5) {
        sub_10000CF44(v12, (uint64_t)"_T", 2LL);
      }
      else {
        sub_10000CF44(v12, (uint64_t)"-", 1LL);
      }
      *(std::streambuf::char_type **)((char *)&v64.__binp_ + *(void *)(v63.__r_.__value_.__l.__cap_ - 24)) = (std::streambuf::char_type *)2;
      std::string::size_type v15 = (void *)std::ostream::operator<<(&v63.__r_.__value_.__r.__words[2], *((unsigned int *)p_tm_sec + 2));
      sub_10000CF44(v15, (uint64_t)"-", 1LL);
      *(std::streambuf::char_type **)((char *)&v64.__binp_ + *(void *)(v63.__r_.__value_.__l.__cap_ - 24)) = (std::streambuf::char_type *)2;
      uint64_t v16 = (void *)std::ostream::operator<<(&v63.__r_.__value_.__r.__words[2], *((unsigned int *)p_tm_sec + 1));
      sub_10000CF44(v16, (uint64_t)"-", 1LL);
      *(std::streambuf::char_type **)((char *)&v64.__binp_ + *(void *)(v63.__r_.__value_.__l.__cap_ - 24)) = (std::streambuf::char_type *)2;
      std::ostream::operator<<(&v63.__r_.__value_.__r.__words[2], *(unsigned int *)p_tm_sec);
      if (v5)
      {
        sub_10000CE18((uint64_t)&buf);
        if (p_tm_sec[5] >= 0) {
          __int16 v17 = "+";
        }
        else {
          __int16 v17 = "-";
        }
        sub_1010DDBC0(&__p, v17);
        if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          p_p = &__p;
        }
        else {
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          uint64_t size = __p.__r_.__value_.__s.__size_;
        }
        else {
          uint64_t size = __p.__r_.__value_.__l.__size_;
        }
        uint64_t v20 = sub_10000CF44(&buf.__r_.__value_.__l.__cap_, (uint64_t)p_p, size);
        char v67 = 48;
        __int16 v21 = sub_1007EC2C0(v20, &v67);
        *(void *)((char *)v21 + *(void *)(*v21 - 24LL) + sub_100BDC958(v1 + 24) = 4LL;
        std::ostream::operator<<();
        std::stringbuf::str(&v62, &v70);
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words
        buf.__r_.__value_.__l.__cap_ = v22;
        std::streambuf::~streambuf(&v70);
        std::ios::~ios(&v71);
        if ((v62.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          int v23 = &v62;
        }
        else {
          int v23 = (std::stringbuf::string_type *)v62.__r_.__value_.__r.__words[0];
        }
        if ((v62.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          uint64_t v24 = v62.__r_.__value_.__s.__size_;
        }
        else {
          uint64_t v24 = v62.__r_.__value_.__l.__size_;
        }
        sub_10000CF44(&v63.__r_.__value_.__l.__cap_, (uint64_t)v23, v24);
      }

      std::stringbuf::str(&buf, &v64);
      std::stringbuf::string_type v60 = buf;
      *(std::string::size_type *)((char *)v63.__r_.__value_.__r.__words
      v63.__r_.__value_.__l.__cap_ = v25;
      std::streambuf::~streambuf(&v64);
      std::ios::~ios(&v65);
    }

    else
    {
      if (qword_101934910 != -1) {
        dispatch_once(&qword_101934910, &stru_101882760);
      }
      std::string::size_type v13 = (os_log_s *)qword_101934918;
      if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_ERROR))
      {
        LOWORD(buf.__r_.__value_.__l.__data_) = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_ERROR,  "ProtobufSerializer,could not obtain UTC time",  (uint8_t *)&buf,  2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_101934910 != -1) {
          dispatch_once(&qword_101934910, &stru_101882760);
        }
        LOWORD(v63.__r_.__value_.__l.__data_) = 0;
        LODWORD(v56) = 2;
        int v14 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934918,  16LL,  "ProtobufSerializer,could not obtain UTC time",  &v63,  v56);
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "std::string (anonymous namespace)::createUniquePortionOfLogFileName(BOOL)",  "%s\n",  (const char *)v14);
        if (v14 != &buf) {
          free(v14);
        }
      }
    }

    memset(&v57, 0, sizeof(v57));
    std::string::size_type v26 = v61.__r_.__value_.__s.__size_;
    if ((v61.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      std::string::size_type v26 = v61.__r_.__value_.__l.__size_;
    }
    if (v26)
    {
      std::operator+<char>(&buf, "_", &v61);
      std::string::size_type v27 = (buf.__r_.__value_.__s.__size_ & 0x80u) == 0
          ? &buf
          : (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
      std::string::size_type v28 = (buf.__r_.__value_.__s.__size_ & 0x80u) == 0 ? buf.__r_.__value_.__s.__size_ : buf.__r_.__value_.__l.__size_;
      std::string::append(&v57, (const std::string::value_type *)v27, v28);
    }

    std::string::size_type v29 = v60.__r_.__value_.__s.__size_;
    unsigned __int8 v30 = v60.__r_.__value_.__s.__size_;
    if ((v60.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      std::string::size_type v29 = v60.__r_.__value_.__l.__size_;
    }
    if (v29)
    {
      std::operator+<char>(&buf, "_", &v60);
      if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        p_std::stringbuf::string_type buf = &buf;
      }
      else {
        p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
      }
      if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        std::string::size_type v32 = buf.__r_.__value_.__s.__size_;
      }
      else {
        std::string::size_type v32 = buf.__r_.__value_.__l.__size_;
      }
      std::string::append(&v57, (const std::string::value_type *)p_buf, v32);
      unsigned __int8 v30 = v60.__r_.__value_.__s.__size_;
    }

    if ((v30 & 0x80) != 0) {
      operator delete(v60.__r_.__value_.__l.__data_);
    }
  }

  else
  {
    sub_1010DDBC0(&v57, "");
  }

  sub_100D9B940(a1, (uint64_t)&v61);
  __int16 v33 = std::string::append(&v61, "/");
  __int128 v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v62.__r_.__value_.__l.__cap_ = v33->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v62.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0LL;
  v33->__r_.__value_.__l.__cap_ = 0LL;
  v33->__r_.__value_.__r.__words[0] = 0LL;
  int v35 = *(char *)(a1 + 31);
  if (v35 >= 0) {
    __int16 v36 = (const std::string::value_type *)(a1 + 8);
  }
  else {
    __int16 v36 = *(const std::string::value_type **)(a1 + 8);
  }
  if (v35 >= 0) {
    std::string::size_type v37 = *(unsigned __int8 *)(a1 + 31);
  }
  else {
    std::string::size_type v37 = *(void *)(a1 + 16);
  }
  __int16 v38 = std::string::append(&v62, v36, v37);
  __int128 v39 = *(_OWORD *)&v38->__r_.__value_.__l.__data_;
  __p.__r_.__value_.__l.__cap_ = v38->__r_.__value_.__l.__cap_;
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v39;
  v38->__r_.__value_.__l.__size_ = 0LL;
  v38->__r_.__value_.__l.__cap_ = 0LL;
  v38->__r_.__value_.__r.__words[0] = 0LL;
  if ((v57.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    __int16 v40 = &v57;
  }
  else {
    __int16 v40 = (std::string *)v57.__r_.__value_.__r.__words[0];
  }
  if ((v57.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    std::string::size_type v41 = v57.__r_.__value_.__s.__size_;
  }
  else {
    std::string::size_type v41 = v57.__r_.__value_.__l.__size_;
  }
  __int16 v42 = std::string::append(&__p, (const std::string::value_type *)v40, v41);
  __int128 v43 = *(_OWORD *)&v42->__r_.__value_.__l.__data_;
  v63.__r_.__value_.__l.__cap_ = v42->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v63.__r_.__value_.__l.__data_ = v43;
  v42->__r_.__value_.__l.__size_ = 0LL;
  v42->__r_.__value_.__l.__cap_ = 0LL;
  v42->__r_.__value_.__r.__words[0] = 0LL;
  int v46 = *(const std::string::value_type **)(a1 + 32);
  uint64_t v45 = a1 + 32;
  __int16 v44 = v46;
  int v47 = *(char *)(v45 + 23);
  if (v47 >= 0) {
    int v48 = (const std::string::value_type *)v45;
  }
  else {
    int v48 = v44;
  }
  if (v47 >= 0) {
    std::string::size_type v49 = *(unsigned __int8 *)(v45 + 23);
  }
  else {
    std::string::size_type v49 = *(void *)(v45 + 8);
  }
  int v50 = std::string::append(&v63, v48, v49);
  __int128 v51 = *(_OWORD *)&v50->__r_.__value_.__l.__data_;
  buf.__r_.__value_.__l.__cap_ = v50->__r_.__value_.__l.__cap_;
  *(_OWORD *)&buf.__r_.__value_.__l.__data_ = v51;
  v50->__r_.__value_.__l.__size_ = 0LL;
  v50->__r_.__value_.__l.__cap_ = 0LL;
  v50->__r_.__value_.__r.__words[0] = 0LL;
  if ((v59 & 0x80u) == 0) {
    uint64_t v52 = v58;
  }
  else {
    uint64_t v52 = (void **)v58[0];
  }
  if ((v59 & 0x80u) == 0) {
    std::string::size_type v53 = v59;
  }
  else {
    std::string::size_type v53 = (std::string::size_type)v58[1];
  }
  uint64_t v54 = std::string::append(&buf, (const std::string::value_type *)v52, v53);
  *a2 = *v54;
  v54->__r_.__value_.__l.__size_ = 0LL;
  v54->__r_.__value_.__l.__cap_ = 0LL;
  v54->__r_.__value_.__r.__words[0] = 0LL;
}

void sub_100D9DE28( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *__p, uint64_t a21, int a22, __int16 a23, char a24, char a25, void *a26, uint64_t a27, int a28, __int16 a29, char a30, char a31)
{
  if (a25 < 0) {
    operator delete(__p);
  }
  if (a31 < 0) {
    operator delete(a26);
  }
  if (a19 < 0) {
    operator delete(a14);
  }
  _Unwind_Resume(a1);
}

void sub_100D9DFC8(uint64_t a1, void *a2)
{
  if (*(_BYTE *)(a1 + 72))
  {
    uint64_t v3 = (compression_stream *)(a1 + 32);
    std::string::size_type v41 = a2 + 4;
    __int16 v42 = a2;
    std::string::size_type v4 = (mach_header_64 *)&_mh_execute_header;
    int v43 = 134217984;
    while (1)
    {
      char v44 = 0;
      *(void *)(a1 + 48) = &v44;
      *(void *)(a1 + 56) = 0LL;
      uint64_t v5 = *(void *)(a1 + 8);
      uint64_t v6 = *(void *)(a1 + 16) - v5;
      *(void *)(a1 + 32) = v5;
      *(void *)(a1 + 40) = v6;
      if (qword_101934910 != -1) {
        dispatch_once(&qword_101934910, &stru_101882760);
      }
      int v7 = (os_log_s *)qword_101934918;
      if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v8 = *(void *)(a1 + 48);
        uint64_t v9 = *(void *)(a1 + 56);
        uint64_t v10 = *(void *)(a1 + 32);
        uint64_t v11 = *(void *)(a1 + 40);
        *(_DWORD *)std::stringbuf::string_type buf = 134218752;
        uint64_t v56 = v8;
        __int16 v57 = 2048;
        uint64_t v58 = v9;
        __int16 v59 = 2048;
        uint64_t v60 = v10;
        __int16 v61 = 2048;
        uint64_t v62 = v11;
        _os_log_impl(v4, v7, OS_LOG_TYPE_DEBUG, "ProtobufCompressor,flush,before,%p,%zu,%p,%zu", buf, 0x2Au);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934910 != -1) {
          dispatch_once(&qword_101934910, &stru_101882760);
        }
        uint64_t v29 = *(void *)(a1 + 48);
        uint64_t v30 = *(void *)(a1 + 56);
        uint64_t v31 = *(void *)(a1 + 32);
        uint64_t v32 = *(void *)(a1 + 40);
        int v45 = 134218752;
        uint64_t v46 = v29;
        __int16 v47 = 2048;
        uint64_t v48 = v30;
        __int16 v49 = 2048;
        uint64_t v50 = v31;
        __int16 v51 = 2048;
        uint64_t v52 = v32;
        LODWORD(v40) = 42;
        __int16 v33 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  v4,  qword_101934918,  2LL,  "ProtobufCompressor,flush,before,%p,%zu,%p,%zu",  &v45,  v40,  v41,  (size_t)v42);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLProtobufSerializer::StreamingCompressor::flush(std::ofstream &)",  "%s\n",  v33);
      }

      compression_status v12 = compression_stream_process(v3, 1);
      std::string::size_type v13 = v3;
      int v14 = v4;
      uint64_t v16 = *(void *)(a1 + 8);
      uint64_t v15 = *(void *)(a1 + 16);
      uint64_t v17 = *(void *)(a1 + 40);
      if (qword_101934910 != -1) {
        dispatch_once(&qword_101934910, &stru_101882760);
      }
      uint64_t v18 = v15 - v16;
      std::string::size_type v19 = (os_log_s *)qword_101934918;
      if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)std::stringbuf::string_type buf = v43;
        uint64_t v56 = v18 - v17;
        _os_log_impl(v14, v19, OS_LOG_TYPE_DEBUG, "ProtobufCompressor,flush,flushed bytes,%zu", buf, 0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934910 != -1) {
          dispatch_once(&qword_101934910, &stru_101882760);
        }
        int v45 = v43;
        uint64_t v46 = v18 - v17;
        __int128 v39 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  v14,  qword_101934918,  2LL,  "ProtobufCompressor,flush,flushed bytes,%zu",  (size_t)&v45);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLProtobufSerializer::StreamingCompressor::flush(std::ofstream &)",  "%s\n",  v39);
      }

      BOOL v20 = v18 == v17;
      std::string::size_type v4 = v14;
      uint64_t v3 = v13;
      if (v20) {
        goto LABEL_29;
      }
      if ((v41[*(void *)(*v42 - 24LL)] & 5) != 0)
      {
        if (qword_101934910 != -1) {
          dispatch_once(&qword_101934910, &stru_101882760);
        }
        __int16 v21 = (os_log_s *)qword_101934918;
        if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)std::stringbuf::string_type buf = 0;
          _os_log_impl(v4, v21, OS_LOG_TYPE_DEFAULT, "#Warning,ProtobufCompressor,flush,bad stream", buf, 2u);
        }

        if (!sub_1002921D0(115, 2)) {
          goto LABEL_29;
        }
        bzero(buf, 0x65CuLL);
        if (qword_101934910 != -1) {
          dispatch_once(&qword_101934910, &stru_101882760);
        }
        LOWORD(v45) = 0;
        LODWORD(v40) = 2;
        std::string::size_type v22 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  v4,  qword_101934918,  0LL,  "#Warning,ProtobufCompressor,flush,bad stream",  &v45,  v40);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLProtobufSerializer::StreamingCompressor::flush(std::ofstream &)",  "%s\n",  v22);
        goto LABEL_52;
      }

      std::ostream::write(v42);
LABEL_29:
      if (qword_101934910 != -1) {
        dispatch_once(&qword_101934910, &stru_101882760);
      }
      uint64_t v24 = (os_log_s *)qword_101934918;
      if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v25 = *(void *)(a1 + 48);
        uint64_t v26 = *(void *)(a1 + 56);
        uint64_t v27 = *(void *)(a1 + 32);
        uint64_t v28 = *(void *)(a1 + 40);
        *(_DWORD *)std::stringbuf::string_type buf = 134219008;
        uint64_t v56 = v25;
        __int16 v57 = 2048;
        uint64_t v58 = v26;
        __int16 v59 = 2048;
        uint64_t v60 = v27;
        __int16 v61 = 2048;
        uint64_t v62 = v28;
        __int16 v63 = 1024;
        compression_status v64 = v12;
        _os_log_impl(v4, v24, OS_LOG_TYPE_DEBUG, "ProtobufCompressor,flush,after,%p,%zu,%p,%zu,status,%d", buf, 0x30u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934910 != -1) {
          dispatch_once(&qword_101934910, &stru_101882760);
        }
        uint64_t v34 = *(void *)(a1 + 48);
        uint64_t v35 = *(void *)(a1 + 56);
        uint64_t v36 = *(void *)(a1 + 32);
        uint64_t v37 = *(void *)(a1 + 40);
        int v45 = 134219008;
        uint64_t v46 = v34;
        __int16 v47 = 2048;
        uint64_t v48 = v35;
        __int16 v49 = 2048;
        uint64_t v50 = v36;
        __int16 v51 = 2048;
        uint64_t v52 = v37;
        __int16 v53 = 1024;
        compression_status v54 = v12;
        LODWORD(v40) = 48;
        __int16 v38 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  v4,  qword_101934918,  2LL,  "ProtobufCompressor,flush,after,%p,%zu,%p,%zu,status,%d",  &v45,  v40,  v41,  (size_t)v42,  v43);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLProtobufSerializer::StreamingCompressor::flush(std::ofstream &)",  "%s\n",  v38);
      }

      if (v12)
      {
        sub_100DA1A6C(a1);
        return;
      }
    }

    if (qword_101934910 != -1) {
      dispatch_once(&qword_101934910, &stru_101882760);
    }
    int v23 = (os_log_s *)qword_101934918;
    if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl(v4, v23, OS_LOG_TYPE_ERROR, "ProtobufCompressor,flush,failed to finalize stream", buf, 2u);
    }

    if (!sub_1002921D0(115, 0)) {
      goto LABEL_29;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934910 != -1) {
      dispatch_once(&qword_101934910, &stru_101882760);
    }
    LOWORD(v45) = 0;
    LODWORD(v40) = 2;
    std::string::size_type v22 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  v4,  qword_101934918,  16LL,  "ProtobufCompressor,flush,failed to finalize stream",  &v45,  v40);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLProtobufSerializer::StreamingCompressor::flush(std::ofstream &)",  "%s\n",  v22);
LABEL_52:
    goto LABEL_29;
  }

void sub_100D9E760(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  *a1 = a2;
  if (v3)
  {
    std::string::size_type v4 = (void *)sub_100DA1A34(v3);
    operator delete(v4);
  }

void sub_100D9E78C(uint64_t a1)
{
  if (clock_gettime(_CLOCK_REALTIME, &__tp))
  {
    if (qword_101934910 != -1) {
      dispatch_once(&qword_101934910, &stru_101882760);
    }
    BOOL v2 = (os_log_s *)qword_101934918;
    if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_ERROR))
    {
      int v3 = *__error();
      LODWORD(buf.__r_.__value_.__l.__data_) = 67240192;
      HIDWORD(buf.__r_.__value_.__r.__words[0]) = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_ERROR,  "ProtobufSerializer,pruneLogFiles,clock_gettime failed,%{public}d",  (uint8_t *)&buf,  8u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_101934910 != -1) {
        dispatch_once(&qword_101934910, &stru_101882760);
      }
      uint64_t v4 = qword_101934918;
      int v5 = *__error();
      v111.st_dev = 67240192;
      *(_DWORD *)&v111.st_mode = v5;
      uint64_t v6 = (std::string *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v4,  16LL,  "ProtobufSerializer,pruneLogFiles,clock_gettime failed,%{public}d",  &v111,  8);
      sub_10029211C("Generic", 1LL, 0, 0LL, "void CLProtobufSerializer::pruneFiles() const", "%s\n", (const char *)v6);
LABEL_10:
      if (v6 != &buf) {
        free(v6);
      }
      return;
    }

    return;
  }

  double v7 = *(double *)(a1 + 104);
  if (v7 >= (double)__tp.tv_sec)
  {
    if (qword_101934910 != -1) {
      dispatch_once(&qword_101934910, &stru_101882760);
    }
    uint64_t v8 = (os_log_s *)qword_101934918;
    if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_ERROR))
    {
      LODWORD(buf.__r_.__value_.__l.__data_) = 134349056;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = __tp.tv_sec;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "ProtobufSerializer,pruneLogFiles,timespecNow too small to use,%{public}ld",  (uint8_t *)&buf,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_101934910 != -1) {
        dispatch_once(&qword_101934910, &stru_101882760);
      }
      v111.st_dev = 134349056;
      *(void *)&v111.st_mode = __tp.tv_sec;
      __int16 v86 = (std::string *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934918,  16LL,  "ProtobufSerializer,pruneLogFiles,timespecNow too small to use,%{public}ld",  &v111,  12);
      sub_10029211C("Generic", 1LL, 0, 0LL, "void CLProtobufSerializer::pruneFiles() const", "%s\n", (const char *)v86);
      if (v86 != &buf) {
        free(v86);
      }
    }

    uint64_t v90 = 0LL;
  }

  else
  {
    uint64_t v90 = (uint64_t)((double)__tp.tv_sec - v7);
  }

  sub_100D9B940(a1, (uint64_t)&buf);
  uint64_t v9 = (std::string::size_type *)(a1 + 8);
  if ((char)buf.__r_.__value_.__s.__size_ < 0)
  {
    std::string::size_type size = buf.__r_.__value_.__l.__size_;
    operator delete(buf.__r_.__value_.__l.__data_);
    if (size)
    {
LABEL_22:
      uint64_t v94 = 0LL;
      int v95 = 0LL;
      unint64_t v96 = 0LL;
      sub_100D9B940(a1, (uint64_t)v92);
      uint64_t v10 = +[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager");
      if (v93 >= 0) {
        uint64_t v11 = v92;
      }
      else {
        uint64_t v11 = (void **)v92[0];
      }
      compression_status v12 = -[NSFileManager contentsOfDirectoryAtPath:error:]( v10,  "contentsOfDirectoryAtPath:error:",  +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v11),  0LL);
      std::string::size_type v13 = (char *)v94;
      for (int i = v95; i != v13; i -= 24)
      {
        if (*(i - 1) < 0) {
          operator delete(*((void **)i - 3));
        }
      }

      int v95 = v13;
      *(_OWORD *)unsigned int v100 = 0u;
      __int128 v101 = 0u;
      __int128 v102 = 0u;
      __int128 v103 = 0u;
      uint64_t v15 = -[NSArray reverseObjectEnumerator](v12, "reverseObjectEnumerator");
      uint64_t v16 = (char *)-[NSEnumerator countByEnumeratingWithState:objects:count:]( v15,  "countByEnumeratingWithState:objects:count:",  v100,  &v111,  16LL);
      if (v16)
      {
        uint64_t v17 = *(void *)v101;
        do
        {
          uint64_t v18 = 0LL;
          do
          {
            if (*(void *)v101 != v17) {
              objc_enumerationMutation(v15);
            }
            std::string::size_type v19 = (char *)[*((id *)v100[1] + (void)v18) UTF8String];
            if (v19)
            {
              sub_1010DDBC0(v104, v19);
              int v20 = *(char *)(a1 + 31);
              if (v20 >= 0) {
                unint64_t v21 = *(unsigned __int8 *)(a1 + 31);
              }
              else {
                unint64_t v21 = *(void *)(a1 + 16);
              }
              unsigned __int8 v22 = v105;
              if ((char)v105 < 0)
              {
                if (v21 == -1LL) {
LABEL_218:
                }
                  sub_1001040F8();
                uint64_t v24 = *(_BYTE **)v104;
                if (*(void *)&v104[8] >= v21) {
                  size_t v23 = v21;
                }
                else {
                  size_t v23 = *(void *)&v104[8];
                }
              }

              else
              {
                if (v21 == -1LL) {
                  goto LABEL_218;
                }
                if (v105 >= v21) {
                  size_t v23 = v21;
                }
                else {
                  size_t v23 = v105;
                }
                uint64_t v24 = v104;
              }

              if (v20 >= 0) {
                uint64_t v27 = (const void *)(a1 + 8);
              }
              else {
                uint64_t v27 = *(const void **)(a1 + 8);
              }
              if (!memcmp(v24, v27, v23) && v23 == v21)
              {
                sub_1010DDBC0(__p, v19);
                uint64_t v29 = v95;
                if ((unint64_t)v95 >= v96)
                {
                  unint64_t v31 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v95[-v94] >> 3);
                  unint64_t v32 = v31 + 1;
                  if (v31 + 1 > 0xAAAAAAAAAAAAAAALL) {
                    sub_100007008();
                  }
                  else {
                    unint64_t v33 = v32;
                  }
                  *(void *)__int16 v108 = &v96;
                  if (v33) {
                    uint64_t v34 = (char *)sub_10000701C((uint64_t)&v96, v33);
                  }
                  else {
                    uint64_t v34 = 0LL;
                  }
                  std::string::size_type v35 = (std::string::size_type)&v34[24 * v31];
                  buf.__r_.__value_.__r.__words[0] = (std::string::size_type)v34;
                  buf.__r_.__value_.__l.__size_ = v35;
                  double v107 = &v34[24 * v33];
                  __int128 v36 = *(_OWORD *)__p;
                  *(void *)(v35 + 16) = v99;
                  *(_OWORD *)std::string::size_type v35 = v36;
                  __p[1] = 0LL;
                  uint64_t v99 = 0LL;
                  __p[0] = 0LL;
                  buf.__r_.__value_.__l.__cap_ = v35 + 24;
                  sub_100013F10(&v94, &buf);
                  uint64_t v37 = v95;
                  sub_100014098((uint64_t)&buf);
                  int v95 = v37;
                  if (SHIBYTE(v99) < 0) {
                    operator delete(__p[0]);
                  }
                }

                else
                {
                  __int128 v30 = *(_OWORD *)__p;
                  *((void *)v95 + 2) = v99;
                  *(_OWORD *)uint64_t v29 = v30;
                  int v95 = v29 + 24;
                }

                unsigned __int8 v22 = v105;
              }

              if ((v22 & 0x80) != 0) {
                operator delete(*(void **)v104);
              }
            }

            else
            {
              if (qword_101934910 != -1) {
                dispatch_once(&qword_101934910, &stru_101882760);
              }
              uint64_t v25 = (os_log_s *)qword_101934918;
              if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_ERROR))
              {
                LOWORD(buf.__r_.__value_.__l.__data_) = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_ERROR,  "ProtobufSerializer,pruneLogFiles,null filename from reverseEnumerateFiles",  (uint8_t *)&buf,  2u);
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(&buf, 0x65CuLL);
                if (qword_101934910 != -1) {
                  dispatch_once(&qword_101934910, &stru_101882760);
                }
                *(_WORD *)__int16 v104 = 0;
                LODWORD(v87) = 2;
                uint64_t v26 = (std::string *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934918,  16LL,  "ProtobufSerializer,pruneLogFiles,null filename from reverseEnumerateFiles",  v104,  v87);
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "void (anonymous namespace)::enumerateFiles(const std::string &, const std::string &, std::vector<std::string> &)",  "%s\n",  (const char *)v26);
                if (v26 != &buf) {
                  free(v26);
                }
              }
            }

            ++v18;
          }

          while (v16 != v18);
          uint64_t v16 = (char *)-[NSEnumerator countByEnumeratingWithState:objects:count:]( v15,  "countByEnumeratingWithState:objects:count:",  v100,  &v111,  16LL);
        }

        while (v16);
      }

      if (v93 < 0) {
        operator delete(v92[0]);
      }
      unint64_t v38 = 126 - 2 * __clz(0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v95[-v94] >> 3));
      else {
        uint64_t v39 = v38;
      }
      sub_100DA2040(v94, v95, (uint64_t)&buf, v39, 1);
      uint64_t v42 = v94;
      std::string::size_type v41 = v95;
      if ((char *)v94 == v95)
      {
LABEL_204:
        buf.__r_.__value_.__r.__words[0] = (std::string::size_type)&v94;
        sub_1000129D4((void ***)&buf);
        return;
      }

      uint64_t v91 = 0LL;
      int v43 = 0;
      *(void *)&__int128 v40 = 136315138LL;
      __int128 v88 = v40;
      uint64_t v89 = 136315394LL;
      while (1)
      {
        sub_100D9B940(a1, (uint64_t)&v111);
        char v44 = std::string::append((std::string *)&v111, "/");
        __int128 v45 = *(_OWORD *)&v44->__r_.__value_.__l.__data_;
        buf.__r_.__value_.__l.__cap_ = v44->__r_.__value_.__l.__cap_;
        *(_OWORD *)&buf.__r_.__value_.__l.__data_ = v45;
        v44->__r_.__value_.__l.__size_ = 0LL;
        v44->__r_.__value_.__l.__cap_ = 0LL;
        v44->__r_.__value_.__r.__words[0] = 0LL;
        int v46 = *(char *)(v42 + 23);
        if (v46 >= 0) {
          __int16 v47 = (const std::string::value_type *)v42;
        }
        else {
          __int16 v47 = *(const std::string::value_type **)v42;
        }
        if (v46 >= 0) {
          std::string::size_type v48 = *(unsigned __int8 *)(v42 + 23);
        }
        else {
          std::string::size_type v48 = *(void *)(v42 + 8);
        }
        __int16 v49 = std::string::append(&buf, v47, v48);
        __int128 v50 = *(_OWORD *)&v49->__r_.__value_.__l.__data_;
        *(void *)&__int128 v101 = v49->__r_.__value_.__l.__cap_;
        *(_OWORD *)unsigned int v100 = v50;
        v49->__r_.__value_.__l.__size_ = 0LL;
        v49->__r_.__value_.__l.__cap_ = 0LL;
        v49->__r_.__value_.__r.__words[0] = 0LL;
        if (SHIBYTE(v111.st_gid) < 0) {
          operator delete(*(void **)&v111.st_dev);
        }
        if ((SBYTE7(v101) & 0x80u) == 0) {
          __int16 v51 = v100;
        }
        else {
          __int16 v51 = (void **)v100[0];
        }
        if (stat((const char *)v51, &v111))
        {
          if (qword_101934910 != -1) {
            dispatch_once(&qword_101934910, &stru_101882760);
          }
          uint64_t v52 = (os_log_s *)qword_101934918;
          if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_ERROR))
          {
            int v53 = SBYTE7(v101);
            compression_status v54 = (void **)v100[0];
            int v55 = *__error();
            if (v53 >= 0) {
              uint64_t v56 = v100;
            }
            else {
              uint64_t v56 = v54;
            }
            LODWORD(buf.__r_.__value_.__l.__data_) = 136446466;
            *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v56;
            WORD2(buf.__r_.__value_.__r.__words[1]) = 1026;
            *(_DWORD *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v55;
            _os_log_impl( (void *)&_mh_execute_header,  v52,  OS_LOG_TYPE_ERROR,  "ProtobufSerializer,getFileModificationTime could not stat,%{public}s,%{public}d",  (uint8_t *)&buf,  0x12u);
          }

          if (sub_1002921D0(115, 0))
          {
            bzero(&buf, 0x65CuLL);
            if (qword_101934910 != -1) {
              dispatch_once(&qword_101934910, &stru_101882760);
            }
            uint64_t v57 = qword_101934918;
            int v58 = SBYTE7(v101);
            __int16 v59 = (void **)v100[0];
            int v60 = *__error();
            if (v58 >= 0) {
              __int16 v61 = v100;
            }
            else {
              __int16 v61 = v59;
            }
            *(_DWORD *)__int16 v104 = 136446466;
            *(void *)&v104[4] = v61;
            *(_WORD *)&v104[12] = 1026;
            *(_DWORD *)&v104[14] = v60;
            LODWORD(v87) = 18;
            uint64_t v62 = (std::string *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v57,  16LL,  "ProtobufSerializer,getFileModificationTime could not stat,%{public}s,%{public}d",  v104,  v87);
            sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL (anonymous namespace)::getFileModificationTimeAndSize(const std::string &, timespec &, int64_t &)",  "%s\n",  (const char *)v62);
            if (v62 != &buf) {
              free(v62);
            }
          }

          goto LABEL_178;
        }

        __darwin_time_t tv_sec = v111.st_mtimespec.tv_sec;
        st_std::string::size_type size = v111.st_size;
        if (qword_101934910 != -1) {
          dispatch_once(&qword_101934910, &stru_101882760);
        }
        uint64_t v65 = (os_log_s *)qword_101934918;
        if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_DEBUG))
        {
          if ((SBYTE7(v101) & 0x80u) == 0) {
            time_t v66 = v100;
          }
          else {
            time_t v66 = (void **)v100[0];
          }
          LODWORD(buf.__r_.__value_.__l.__data_) = 136316162;
          *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v66;
          WORD2(buf.__r_.__value_.__r.__words[1]) = 2048;
          *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = tv_sec;
          HIWORD(buf.__r_.__value_.__r.__words[2]) = 2048;
          double v107 = (char *)v90;
          *(_WORD *)__int16 v108 = 2048;
          *(void *)&v108[2] = st_size;
          __int16 v109 = 2048;
          off_t v110 = st_size + v91;
          _os_log_impl( (void *)&_mh_execute_header,  v65,  OS_LOG_TYPE_DEBUG,  "ProtobufSerializer,pruneLogFiles,looking at,%s,modTime,%ld,floorTime,%ld,size,%lld,new total,%lld",  (uint8_t *)&buf,  0x34u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(&buf, 0x65CuLL);
          if (qword_101934910 != -1) {
            dispatch_once(&qword_101934910, &stru_101882760);
          }
          if ((SBYTE7(v101) & 0x80u) == 0) {
            __int16 v78 = v100;
          }
          else {
            __int16 v78 = (void **)v100[0];
          }
          v111.st_dev = 136316162;
          *(void *)&v111.st_mode = v78;
          WORD2(v111.st_ino) = 2048;
          *(__darwin_ino64_t *)((char *)&v111.st_ino + 6) = tv_sec;
          HIWORD(v111.st_gid) = 2048;
          *(void *)&v111.st_rdev = v90;
          LOWORD(v111.st_atimespec.tv_sec) = 2048;
          *(__darwin_time_t *)((char *)&v111.st_atimespec.tv_sec + 2) = st_size;
          WORD1(v111.st_atimespec.tv_nsec) = 2048;
          *(uint64_t *)((char *)&v111.st_atimespec.tv_nsec + 4) = st_size + v91;
          LODWORD(v87) = 52;
          double v79 = (std::string *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934918,  2LL,  "ProtobufSerializer,pruneLogFiles,looking at,%s,modTime,%ld,floorTime,%ld,size,%lld,new total,%lld",  (const char *)&v111,  v87,  (void)v88,  *((void *)&v88 + 1),  v89);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLProtobufSerializer::pruneFiles() const",  "%s\n",  (const char *)v79);
          if (v79 != &buf) {
            free(v79);
          }
        }

        if (tv_sec >= v90)
        {
          if (v43 >= *(_DWORD *)(a1 + 120))
          {
            sub_100D9FE90((char *)v100);
            if (qword_101934910 != -1) {
              dispatch_once(&qword_101934910, &stru_101882760);
            }
            unsigned int v73 = (os_log_s *)qword_101934918;
            if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_DEBUG))
            {
              if ((SBYTE7(v101) & 0x80u) == 0) {
                __int16 v74 = v100;
              }
              else {
                __int16 v74 = (void **)v100[0];
              }
              LODWORD(buf.__r_.__value_.__l.__data_) = v89;
              *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v74;
              WORD2(buf.__r_.__value_.__r.__words[1]) = 1024;
              *(_DWORD *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v43 + 1;
              _os_log_impl( (void *)&_mh_execute_header,  v73,  OS_LOG_TYPE_DEBUG,  "ProtobufSerializer,pruneLogFiles,deleted due to num files,%s,num files,%d",  (uint8_t *)&buf,  0x12u);
            }

            if (!sub_1002921D0(115, 2)) {
              goto LABEL_177;
            }
            bzero(&buf, 0x65CuLL);
            if (qword_101934910 != -1) {
              dispatch_once(&qword_101934910, &stru_101882760);
            }
            if ((SBYTE7(v101) & 0x80u) == 0) {
              int v75 = v100;
            }
            else {
              int v75 = (void **)v100[0];
            }
            v111.st_dev = v89;
            *(void *)&v111.st_mode = v75;
            WORD2(v111.st_ino) = 1024;
            *(_DWORD *)((char *)&v111.st_ino + 6) = v43 + 1;
            std::stringbuf v70 = (std::string *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934918,  2LL,  "ProtobufSerializer,pruneLogFiles,deleted due to num files,%s,num files,%d",  (const char *)&v111,  18);
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLProtobufSerializer::pruneFiles() const",  "%s\n",  (const char *)v70);
          }

          else
          {
            if (st_size)
            {
              if (st_size + v91 > *(void *)(a1 + 112))
              {
                sub_100D9FE90((char *)v100);
                if (qword_101934910 != -1) {
                  dispatch_once(&qword_101934910, &stru_101882760);
                }
                uint64_t v71 = (os_log_s *)qword_101934918;
                if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_DEBUG))
                {
                  if ((SBYTE7(v101) & 0x80u) == 0) {
                    unsigned int v72 = v100;
                  }
                  else {
                    unsigned int v72 = (void **)v100[0];
                  }
                  LODWORD(buf.__r_.__value_.__l.__data_) = v88;
                  *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v72;
                  _os_log_impl( (void *)&_mh_execute_header,  v71,  OS_LOG_TYPE_DEBUG,  "ProtobufSerializer,pruneLogFiles,deleted due to size,%s",  (uint8_t *)&buf,  0xCu);
                }

                if (sub_1002921D0(115, 2))
                {
                  bzero(&buf, 0x65CuLL);
                  if (qword_101934910 != -1) {
                    dispatch_once(&qword_101934910, &stru_101882760);
                  }
                  if ((SBYTE7(v101) & 0x80u) == 0) {
                    int v81 = v100;
                  }
                  else {
                    int v81 = (void **)v100[0];
                  }
                  v111.st_dev = v88;
                  *(void *)&v111.st_mode = v81;
                  __int16 v82 = (std::string *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934918,  2LL,  "ProtobufSerializer,pruneLogFiles,deleted due to size,%s",  (const char *)&v111);
                  sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLProtobufSerializer::pruneFiles() const",  "%s\n",  (const char *)v82);
                  if (v82 != &buf) {
                    free(v82);
                  }
                }
              }

              ++v43;
              v91 += st_size;
              goto LABEL_178;
            }

            sub_100D9FE90((char *)v100);
            if (qword_101934910 != -1) {
              dispatch_once(&qword_101934910, &stru_101882760);
            }
            __int16 v76 = (os_log_s *)qword_101934918;
            if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_DEBUG))
            {
              if ((SBYTE7(v101) & 0x80u) == 0) {
                double v77 = v100;
              }
              else {
                double v77 = (void **)v100[0];
              }
              LODWORD(buf.__r_.__value_.__l.__data_) = v88;
              *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v77;
              _os_log_impl( (void *)&_mh_execute_header,  v76,  OS_LOG_TYPE_DEBUG,  "ProtobufSerializer,pruneLogFiles,deleted due to zero size,%s",  (uint8_t *)&buf,  0xCu);
            }

            if (!sub_1002921D0(115, 2)) {
              goto LABEL_177;
            }
            bzero(&buf, 0x65CuLL);
            if (qword_101934910 != -1) {
              dispatch_once(&qword_101934910, &stru_101882760);
            }
            if ((SBYTE7(v101) & 0x80u) == 0) {
              __int16 v80 = v100;
            }
            else {
              __int16 v80 = (void **)v100[0];
            }
            v111.st_dev = v88;
            *(void *)&v111.st_mode = v80;
            std::stringbuf v70 = (std::string *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934918,  2LL,  "ProtobufSerializer,pruneLogFiles,deleted due to zero size,%s",  (const char *)&v111);
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLProtobufSerializer::pruneFiles() const",  "%s\n",  (const char *)v70);
          }
        }

        else
        {
          sub_100D9FE90((char *)v100);
          if (qword_101934910 != -1) {
            dispatch_once(&qword_101934910, &stru_101882760);
          }
          char v67 = (os_log_s *)qword_101934918;
          if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_DEBUG))
          {
            if ((SBYTE7(v101) & 0x80u) == 0) {
              double v68 = v100;
            }
            else {
              double v68 = (void **)v100[0];
            }
            LODWORD(buf.__r_.__value_.__l.__data_) = 136315650;
            *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v68;
            WORD2(buf.__r_.__value_.__r.__words[1]) = 2048;
            *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = tv_sec;
            HIWORD(buf.__r_.__value_.__r.__words[2]) = 2048;
            double v107 = (char *)v90;
            _os_log_impl( (void *)&_mh_execute_header,  v67,  OS_LOG_TYPE_DEBUG,  "ProtobufSerializer,pruneLogFiles,deleted due to age,%s,fileTime,%ld,targetTime,%ld",  (uint8_t *)&buf,  0x20u);
          }

          if (!sub_1002921D0(115, 2)) {
            goto LABEL_177;
          }
          bzero(&buf, 0x65CuLL);
          if (qword_101934910 != -1) {
            dispatch_once(&qword_101934910, &stru_101882760);
          }
          if ((SBYTE7(v101) & 0x80u) == 0) {
            __int16 v69 = v100;
          }
          else {
            __int16 v69 = (void **)v100[0];
          }
          v111.st_dev = 136315650;
          *(void *)&v111.st_mode = v69;
          WORD2(v111.st_ino) = 2048;
          *(__darwin_ino64_t *)((char *)&v111.st_ino + 6) = tv_sec;
          HIWORD(v111.st_gid) = 2048;
          *(void *)&v111.st_rdev = v90;
          LODWORD(v87) = 32;
          std::stringbuf v70 = (std::string *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934918,  2LL,  "ProtobufSerializer,pruneLogFiles,deleted due to age,%s,fileTime,%ld,targetTime,%ld",  (const char *)&v111,  v87,  (void)v88);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLProtobufSerializer::pruneFiles() const",  "%s\n",  (const char *)v70);
        }

        if (v70 != &buf) {
          free(v70);
        }
LABEL_177:
        ++v43;
LABEL_178:
        if (SBYTE7(v101) < 0) {
          operator delete(v100[0]);
        }
        v42 += 24LL;
      }
    }
  }

  else if (buf.__r_.__value_.__s.__size_)
  {
    goto LABEL_22;
  }

  if (qword_101934910 != -1) {
    dispatch_once(&qword_101934910, &stru_101882760);
  }
  __int16 v84 = (os_log_s *)qword_101934918;
  if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_ERROR))
  {
    std::string::size_type v85 = a1 + 8;
    LODWORD(buf.__r_.__value_.__l.__data_) = 136446210;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v85;
    _os_log_impl( (void *)&_mh_execute_header,  v84,  OS_LOG_TYPE_ERROR,  "ProtobufSerializer,%{public}s,pruneLogFiles,null path",  (uint8_t *)&buf,  0xCu);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934910 != -1) {
      dispatch_once(&qword_101934910, &stru_101882760);
    }
    v111.st_dev = 136446210;
    *(void *)&v111.st_mode = v9;
    LODWORD(v87) = 12;
    uint64_t v6 = (std::string *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934918,  16LL,  "ProtobufSerializer,%{public}s,pruneLogFiles,null path",  &v111,  v87);
    sub_10029211C("Generic", 1LL, 0, 0LL, "void CLProtobufSerializer::pruneFiles() const", "%s\n", (const char *)v6);
    goto LABEL_10;
  }

void sub_100D9FB88( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, void *a32, uint64_t a33, uint64_t a34, void *__p, uint64_t a36, int a37, __int16 a38, char a39, char a40)
{
  if (a40 < 0) {
    operator delete(__p);
  }
  a32 = &a27;
  sub_1000129D4((void ***)&a32);
  _Unwind_Resume(a1);
}

void sub_100D9FC74(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 125))
  {
    if (qword_101934910 != -1) {
      dispatch_once(&qword_101934910, &stru_101882760);
    }
    BOOL v2 = (void *)(a1 + 8);
    int v3 = (os_log_s *)qword_101934918;
    if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_INFO))
    {
      uint64_t v4 = (void *)(a1 + 8);
      *(_DWORD *)std::string buf = 136446210;
      uint64_t v10 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "#p%{public}s,#close,", buf, 0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934910 != -1) {
        dispatch_once(&qword_101934910, &stru_101882760);
      }
      int v7 = 136446210;
      uint64_t v8 = v2;
      int v5 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934918,  1LL,  "#p%{public}s,#close,",  &v7,  12);
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLProtobufSerializer::close()", "%s\n", v5);
    }
  }

  if (qword_1019A20A0)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100D9FE88;
    block[3] = &unk_10181D3D0;
    void block[4] = a1;
    dispatch_async((dispatch_queue_t)qword_1019A20A0, block);
  }

void sub_100D9FE88(uint64_t a1)
{
}

void sub_100D9FE90(char *a1)
{
  __ec.__val_ = 0;
  __ec.__cat_ = std::system_category();
  sub_100DA1E68(&v16.__pn_, a1);
  BOOL v2 = std::__fs::filesystem::__remove(&v16, &__ec);
  BOOL v3 = v2;
  if ((char)v16.__pn_.__r_.__value_.__s.__size_ < 0)
  {
    operator delete(v16.__pn_.__r_.__value_.__l.__data_);
    if (v3) {
      return;
    }
  }

  else if (v2)
  {
    return;
  }

  if (qword_101934910 != -1) {
    dispatch_once(&qword_101934910, &stru_101882760);
  }
  uint64_t v4 = (os_log_s *)qword_101934918;
  if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_ERROR))
  {
    std::string::size_type v5 = a1[23] >= 0 ? (std::string::size_type)a1 : *(void *)a1;
    std::error_code::message(&v16.__pn_, &__ec);
    uint64_t v6 = (v16.__pn_.__r_.__value_.__s.__size_ & 0x80u) == 0
       ? &v16
       : (std::__fs::filesystem::path *)v16.__pn_.__r_.__value_.__r.__words[0];
    LODWORD(buf.__r_.__value_.__l.__data_) = 136380931;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v5;
    WORD2(buf.__r_.__value_.__r.__words[1]) = 2082;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v6;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_ERROR,  "ProtobufSerializer,deleteFile could not remove,%{private}s,error,%{public}s",  (uint8_t *)&buf,  0x16u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(&v16, 0x65CuLL);
    if (qword_101934910 != -1) {
      dispatch_once(&qword_101934910, &stru_101882760);
    }
    uint64_t v7 = qword_101934918;
    if (a1[23] < 0) {
      a1 = *(char **)a1;
    }
    std::error_code::message(&buf, &__ec);
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_std::string buf = &buf;
    }
    else {
      p_std::string buf = (std::string *)buf.__r_.__value_.__r.__words[0];
    }
    int v12 = 136380931;
    std::string::size_type v13 = a1;
    __int16 v14 = 2082;
    uint64_t v15 = p_buf;
    uint64_t v9 = (std::__fs::filesystem::path *)_os_log_send_and_compose_impl( 2LL,  0LL,  &v16,  1628LL,  &_mh_execute_header,  v7,  16LL,  "ProtobufSerializer,deleteFile could not remove,%{private}s,error,%{public}s",  &v12,  22,  *(void *)&__ec.__val_,  __ec.__cat_);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL (anonymous namespace)::deleteFile(const std::string &)",  "%s\n",  (const char *)v9);
    if (v9 != &v16) {
      free(v9);
    }
  }

void sub_100DA0124(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_100006BB8(a1);
  }
  _Unwind_Resume(a1);
}

void *sub_100DA0130@<X0>(int *a1@<X0>, void *a2@<X8>)
{
  int v4 = *a1;
  if (*a1 > 773)
  {
    if (v4 == 774)
    {
      std::string::size_type v5 = ".lzma";
      return sub_1010DDBC0(a2, v5);
    }

    if (v4 == 2049)
    {
      std::string::size_type v5 = ".lzfse";
      return sub_1010DDBC0(a2, v5);
    }

void sub_100DA01A0(uint64_t *a1, std::string *this)
{
  uint64_t v4 = *((unsigned __int8 *)a1 + 23);
  if ((v4 & 0x80u) != 0LL) {
    uint64_t v4 = a1[1];
  }
  std::string::resize(this, 2 * v4, 32);
  BOOL v5 = *((char *)a1 + 23) < 0;
  uint64_t v6 = *((unsigned __int8 *)a1 + 23);
  if ((v6 & 0x80u) != 0LL) {
    uint64_t v6 = a1[1];
  }
  if (v6)
  {
    uint64_t v7 = 0LL;
    unint64_t v8 = 0LL;
    do
    {
      if (v5) {
        uint64_t v9 = (uint64_t *)*a1;
      }
      else {
        uint64_t v9 = a1;
      }
      char v10 = a0123456789abcd_0[(unint64_t)*((unsigned __int8 *)v9 + v8) >> 4];
      if ((this->__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v11 = this;
      }
      else {
        uint64_t v11 = (std::string *)this->__r_.__value_.__r.__words[0];
      }
      v11->__r_.__value_.__s.__data_[v7] = v10;
      else {
        int v12 = (uint64_t *)*a1;
      }
      char v13 = a0123456789abcd_0[*((_BYTE *)v12 + v8) & 0xF];
      if ((this->__r_.__value_.__s.__size_ & 0x80u) == 0) {
        __int16 v14 = this;
      }
      else {
        __int16 v14 = (std::string *)this->__r_.__value_.__r.__words[0];
      }
      v14->__r_.__value_.__s.__data_[v7 + 1] = v13;
      ++v8;
      BOOL v5 = *((char *)a1 + 23) < 0;
      unint64_t v15 = *((unsigned __int8 *)a1 + 23);
      if ((v15 & 0x80u) != 0LL) {
        unint64_t v15 = a1[1];
      }
      v7 += 2LL;
    }

    while (v8 < v15);
  }

void sub_100DA0298(uint64_t a1, std::string *a2)
{
  if (*(_BYTE *)(a1 + 125))
  {
    uint64_t v4 = (void *)(a1 + 8);
    memset(&__p, 0, sizeof(__p));
    if ((char)a2->__r_.__value_.__s.__size_ < 0 && a2->__r_.__value_.__l.__size_ >= 0x1C3)
    {
      std::string::size_type v5 = 0LL;
      while (1)
      {
        std::string::basic_string(&v48, a2, v5, 0x1C2uLL, (std::allocator<char> *)buf);
        sub_100DA01A0((uint64_t *)&v48, &__p);
        if (!v5) {
          break;
        }
        if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
          unint64_t size = a2->__r_.__value_.__s.__size_;
        }
        else {
          unint64_t size = a2->__r_.__value_.__l.__size_;
        }
        if (size <= v5 + 450)
        {
          if (qword_101934910 != -1) {
            dispatch_once(&qword_101934910, &stru_101882760);
          }
          int v20 = (os_log_s *)qword_101934918;
          if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_INFO))
          {
            unint64_t v21 = (void *)(a1 + 8);
            int v22 = *(_DWORD *)(a1 + 740);
            p_p = &__p;
            if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
              p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
            }
            *(_DWORD *)std::string buf = 136446723;
            uint64_t v57 = v21;
            __int16 v58 = 1026;
            int v59 = v22;
            __int16 v60 = 2081;
            __int16 v61 = p_p;
            _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_INFO,  "#p%{public}s,#me,%{public}d,%{private}s",  buf,  0x1Cu);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934910 != -1) {
              dispatch_once(&qword_101934910, &stru_101882760);
            }
            uint64_t v27 = (void *)(a1 + 8);
            int v28 = *(_DWORD *)(a1 + 740);
            uint64_t v29 = &__p;
            if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
              uint64_t v29 = (std::string *)__p.__r_.__value_.__r.__words[0];
            }
            int v50 = 136446723;
            __int16 v51 = v27;
            __int16 v52 = 1026;
            int v53 = v28;
            __int16 v54 = 2081;
            int v55 = v29;
            LODWORD(v43) = 28;
            __int128 v30 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934918,  1LL,  "#p%{public}s,#me,%{public}d,%{private}s",  &v50,  v43);
            sub_10029211C("Generic", 1LL, 0, 2LL, "void CLProtobufSerializer::append(const std::string &)", "%s\n", v30);
          }

          char v19 = 0;
          goto LABEL_46;
        }

        if (qword_101934910 != -1) {
          dispatch_once(&qword_101934910, &stru_101882760);
        }
        uint64_t v7 = (os_log_s *)qword_101934918;
        if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_INFO))
        {
          unint64_t v8 = (void *)(a1 + 8);
          int v9 = *(_DWORD *)(a1 + 740);
          char v10 = &__p;
          if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            char v10 = (std::string *)__p.__r_.__value_.__r.__words[0];
          }
          *(_DWORD *)std::string buf = 136446723;
          uint64_t v57 = v8;
          __int16 v58 = 1026;
          int v59 = v9;
          __int16 v60 = 2081;
          __int16 v61 = v10;
          _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_INFO,  "#p%{public}s,#mm,%{public}d,%{private}s",  buf,  0x1Cu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934910 != -1) {
            dispatch_once(&qword_101934910, &stru_101882760);
          }
          uint64_t v11 = (void *)(a1 + 8);
          int v12 = *(_DWORD *)(a1 + 740);
          char v13 = &__p;
          if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            char v13 = (std::string *)__p.__r_.__value_.__r.__words[0];
          }
          int v50 = 136446723;
          __int16 v51 = v11;
          __int16 v52 = 1026;
          int v53 = v12;
          __int16 v54 = 2081;
          int v55 = v13;
          LODWORD(v43) = 28;
          __int16 v14 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934918,  1LL,  "#p%{public}s,#mm,%{public}d,%{private}s",  &v50,  v43);
          sub_10029211C("Generic", 1LL, 0, 2LL, "void CLProtobufSerializer::append(const std::string &)", "%s\n", v14);
LABEL_57:
        }

void sub_100DA0BE4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, void *a23, uint64_t a24, int a25, __int16 a26, char a27, char a28, void *__p, uint64_t a30, int a31, __int16 a32, char a33, char a34, char a35, uint64_t a36, uint64_t a37, uint64_t a38, char a39)
{
  if (a34 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DA0C70(void *a1)
{
  uint64_t v1 = a1[4];
  if (*(_BYTE *)(v1 + 736))
  {
    __int128 __p = 0uLL;
    std::string::size_type v41 = 0LL;
    sub_100DA123C((unint64_t *)&__p, a1[5] + 16LL);
    sub_100DA34BC(&__p, *(char **)(v1 + 712), *(char **)(v1 + 720), *(void *)(v1 + 720) - *(void *)(v1 + 712));
    uint64_t v3 = a1[6];
    if (a1[7] != v3)
    {
      unint64_t v4 = 0LL;
      BOOL v5 = 0;
      do
      {
        if (v5 && (*(unsigned __int8 *)(v3 + v4) | 0x20) == 0x7D)
        {
          uint64_t v6 = (char *)*((void *)&__p + 1);
          if (*((void *)&__p + 1) >= (unint64_t)v41)
          {
            unint64_t v8 = __p;
            uint64_t v9 = *((void *)&__p + 1) - __p;
            uint64_t v10 = *((void *)&__p + 1) - __p + 1;
            if (v10 < 0) {
              goto LABEL_76;
            }
            unint64_t v11 = (unint64_t)&v41[-__p];
            if (v11 >= 0x3FFFFFFFFFFFFFFFLL) {
              size_t v12 = 0x7FFFFFFFFFFFFFFFLL;
            }
            else {
              size_t v12 = v10;
            }
            if (v12) {
              char v13 = (char *)operator new(v12);
            }
            else {
              char v13 = 0LL;
            }
            __int16 v14 = &v13[v9];
            unint64_t v15 = &v13[v9];
            *unint64_t v15 = 93;
            uint64_t v7 = v15 + 1;
            if (v6 != (char *)v8)
            {
              std::__fs::filesystem::path v16 = &v6[~v8];
              do
              {
                char v17 = *--v6;
                (v16--)[(void)v13] = v17;
              }

              while (v6 != (char *)v8);
              uint64_t v6 = (char *)__p;
              __int16 v14 = v13;
            }

            *(void *)&__int128 __p = v14;
            *((void *)&__p + 1) = v7;
            std::string::size_type v41 = &v13[v12];
            if (v6) {
              operator delete(v6);
            }
          }

          else
          {
            **((_BYTE **)&__p + 1) = 93;
            uint64_t v7 = v6 + 1;
          }

          *((void *)&__p + 1) = v7;
          uint64_t v3 = a1[6];
        }

        uint64_t v18 = (char *)*((void *)&__p + 1);
        if (*((void *)&__p + 1) >= (unint64_t)v41)
        {
          unint64_t v20 = __p;
          uint64_t v21 = *((void *)&__p + 1) - __p;
          uint64_t v22 = *((void *)&__p + 1) - __p + 1;
          if (v22 < 0) {
LABEL_76:
          }
            sub_100007008();
          unint64_t v23 = (unint64_t)&v41[-__p];
          if (v23 >= 0x3FFFFFFFFFFFFFFFLL) {
            size_t v24 = 0x7FFFFFFFFFFFFFFFLL;
          }
          else {
            size_t v24 = v22;
          }
          if (v24) {
            int v25 = (char *)operator new(v24);
          }
          else {
            int v25 = 0LL;
          }
          uint64_t v26 = &v25[v21];
          v25[v21] = *(_BYTE *)(v3 + v4);
          uint64_t v19 = (uint64_t)&v25[v21 + 1];
          if (v18 != (char *)v20)
          {
            uint64_t v27 = &v18[~v20];
            do
            {
              char v28 = *--v18;
              (v27--)[(void)v25] = v28;
            }

            while (v18 != (char *)v20);
            uint64_t v18 = (char *)__p;
            uint64_t v26 = v25;
          }

          *(void *)&__int128 __p = v26;
          *((void *)&__p + 1) = &v25[v21 + 1];
          std::string::size_type v41 = &v25[v24];
          if (v18) {
            operator delete(v18);
          }
        }

        else
        {
          **((_BYTE **)&__p + 1) = *(_BYTE *)(v3 + v4);
          uint64_t v19 = (uint64_t)(v18 + 1);
        }

        *((void *)&__p + 1) = v19;
        uint64_t v3 = a1[6];
        BOOL v5 = *(_BYTE *)(v3 + v4++) == 126;
      }

      while (a1[7] - v3 > v4);
    }

    uint64_t v29 = *(void *)(v1 + 704);
    if (v29)
    {
      sub_100DA12E4(v29, __p, *((void *)&__p + 1) - __p, (void *)(v1 + 136));
    }

    else if ((*(_BYTE *)(v1 + 136 + *(void *)(*(void *)(v1 + 136) - 24LL) + 32) & 5) != 0 || !*(void *)(v1 + 264))
    {
      if (qword_101934910 != -1) {
        dispatch_once(&qword_101934910, &stru_101882760);
      }
      uint64_t v34 = (os_log_s *)qword_101934918;
      if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_DEFAULT))
      {
        std::string::size_type v35 = (void *)(v1 + 8);
        *(_DWORD *)std::string buf = 136446210;
        uint64_t v43 = v35;
        _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEFAULT,  "ProtobufSerializer,%{public}s,append,bad stream",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934910 != -1) {
          dispatch_once(&qword_101934910, &stru_101882760);
        }
        uint64_t v36 = (void *)(v1 + 8);
        int v38 = 136446210;
        uint64_t v39 = v36;
        uint64_t v37 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934918,  0LL,  "ProtobufSerializer,%{public}s,append,bad stream",  &v38,  12);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLProtobufSerializer::append(const std::string &)_block_invoke",  "%s\n",  v37);
      }
    }

    else
    {
      std::ostream::write(v1 + 136);
    }

    if ((void)__p)
    {
      *((void *)&__p + 1) = __p;
      operator delete((void *)__p);
    }
  }

  else
  {
    if (qword_101934910 != -1) {
      dispatch_once(&qword_101934910, &stru_101882760);
    }
    __int128 v30 = (os_log_s *)qword_101934918;
    if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_DEFAULT))
    {
      unint64_t v31 = (void *)(v1 + 8);
      *(_DWORD *)std::string buf = 136446210;
      uint64_t v43 = v31;
      _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEFAULT,  "ProtobufSerializer,#p%{public}s,append dropped since closed",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934910 != -1) {
        dispatch_once(&qword_101934910, &stru_101882760);
      }
      unint64_t v32 = (void *)(v1 + 8);
      LODWORD(__p) = 136446210;
      *(void *)((char *)&__p + 4) = v32;
      int v33 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934918,  0LL,  "ProtobufSerializer,#p%{public}s,append dropped since closed",  &__p,  12);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLProtobufSerializer::append(const std::string &)_block_invoke",  "%s\n",  v33);
    }
  }

void sub_100DA1208( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DA123C(unint64_t *a1, size_t __sz)
{
  unint64_t v2 = *a1;
  if (a1[2] - *a1 < __sz)
  {
    if ((__sz & 0x8000000000000000LL) != 0) {
      sub_100007008();
    }
    BOOL v5 = (char *)a1[1];
    uint64_t v6 = operator new(__sz);
    uint64_t v7 = &v5[(void)v6 - v2];
    unint64_t v8 = v7;
    if (v5 != (char *)v2)
    {
      uint64_t v9 = &v5[~v2];
      do
      {
        char v10 = *--v5;
        (v9--)[(void)v6] = v10;
      }

      while (v5 != (char *)v2);
      unint64_t v8 = v6;
    }

    *a1 = (unint64_t)v8;
    a1[1] = (unint64_t)v7;
    a1[2] = (unint64_t)&v6[__sz];
    if (v2) {
      operator delete((void *)v2);
    }
  }

void sub_100DA12E4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (*(_BYTE *)(a1 + 72))
  {
    uint64_t v6 = *(void *)(a1 + 8);
    *(void *)(a1 + 32) = v6;
    uint64_t v7 = (compression_stream *)(a1 + 32);
    *(void *)(a1 + 48) = a2;
    *(void *)(a1 + 56) = a3;
    *(void *)(a1 + 40) = *(void *)(a1 + 16) - v6;
    compression_status v8 = compression_stream_process((compression_stream *)(a1 + 32), 0);
    if (v8 == COMPRESSION_STATUS_OK)
    {
      do
      {
        unint64_t v9 = *(void *)(a1 + 16) - *(void *)(a1 + 8);
        unint64_t v10 = *(void *)(a1 + 40);
        unint64_t v11 = v9 - v10;
        if (v9 == v10)
        {
          if (!*(void *)(a1 + 56)) {
            return;
          }
        }

        else
        {
          if (v9 < v10)
          {
            if (qword_101934910 != -1) {
              dispatch_once(&qword_101934910, &stru_101882760);
            }
            size_t v12 = (os_log_s *)qword_101934918;
            if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_ERROR))
            {
              uint64_t v13 = *(void *)(a1 + 16) - *(void *)(a1 + 8);
              *(_DWORD *)std::string buf = 134349312;
              *(void *)char v28 = v11;
              *(_WORD *)&v28[8] = 2050;
              uint64_t v29 = v13;
              _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_ERROR,  "ProtobufCompressor,excessive bytes_to_print,%{public}zu,limit,%{public}zu",  buf,  0x16u);
            }

            if (sub_1002921D0(115, 0))
            {
              bzero(buf, 0x65CuLL);
              if (qword_101934910 != -1) {
                dispatch_once(&qword_101934910, &stru_101882760);
              }
              uint64_t v19 = *(void *)(a1 + 16) - *(void *)(a1 + 8);
              int v24 = 134349312;
              *(void *)int v25 = v11;
              *(_WORD *)&v25[8] = 2050;
              uint64_t v26 = v19;
              LODWORD(v23) = 22;
              unint64_t v20 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934918,  16LL,  "ProtobufCompressor,excessive bytes_to_print,%{public}zu,limit,%{public}zu",  &v24,  v23);
              sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLProtobufSerializer::StreamingCompressor::write(const uint8_t *const, const size_t, std::ofstream &)",  "%s\n",  v20);
            }
          }

          if ((*((_BYTE *)a4 + *(void *)(*a4 - 24LL) + 32) & 5) != 0)
          {
            if (qword_101934910 != -1) {
              dispatch_once(&qword_101934910, &stru_101882760);
            }
            __int16 v14 = (os_log_s *)qword_101934918;
            if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)std::string buf = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_INFO,  "ProtobufCompressor,write,bad stream",  buf,  2u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_101934910 != -1) {
                dispatch_once(&qword_101934910, &stru_101882760);
              }
              LOWORD(vsub_100BDC958(v1 + 24) = 0;
              LODWORD(v23) = 2;
              unint64_t v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934918,  1LL,  "ProtobufCompressor,write,bad stream",  &v24,  v23);
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLProtobufSerializer::StreamingCompressor::write(const uint8_t *const, const size_t, std::ofstream &)",  "%s\n",  v15);
            }
          }

          else
          {
            std::ostream::write(a4);
          }

          uint64_t v16 = *(void *)(a1 + 8);
          uint64_t v17 = *(void *)(a1 + 16) - v16;
          *(void *)(a1 + 32) = v16;
          *(void *)(a1 + 40) = v17;
        }

        compression_status v18 = compression_stream_process(v7, 0);
      }

      while (v18 == COMPRESSION_STATUS_OK);
      compression_status v8 = v18;
    }

    if (qword_101934910 != -1) {
      dispatch_once(&qword_101934910, &stru_101882760);
    }
    uint64_t v21 = (os_log_s *)qword_101934918;
    if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::string buf = 67240448;
      *(_DWORD *)char v28 = v8 == COMPRESSION_STATUS_END;
      *(_WORD *)&v28[4] = 1026;
      *(_DWORD *)&v28[6] = v8 == COMPRESSION_STATUS_ERROR;
      _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_ERROR,  "ProtobufCompressor,write,unexpected status,isEND,%{public}d,isERROR,%{public}d",  buf,  0xEu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934910 != -1) {
        dispatch_once(&qword_101934910, &stru_101882760);
      }
      int v24 = 67240448;
      *(_DWORD *)int v25 = v8 == COMPRESSION_STATUS_END;
      *(_WORD *)&v25[4] = 1026;
      *(_DWORD *)&v25[6] = v8 == COMPRESSION_STATUS_ERROR;
      LODWORD(v23) = 14;
      uint64_t v22 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934918,  16LL,  "ProtobufCompressor,write,unexpected status,isEND,%{public}d,isERROR,%{public}d",  &v24,  v23);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLProtobufSerializer::StreamingCompressor::write(const uint8_t *const, const size_t, std::ofstream &)",  "%s\n",  v22);
    }
  }

void *sub_100DA1814(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 48) = 0LL;
  *(void *)(a1 + 56) = 0LL;
  unint64_t v2 = (void *)(a1 + 48);
  void v2[2] = 0LL;
  return sub_100740FAC(v2, *(const void **)(a2 + 48), *(void *)(a2 + 56), *(void *)(a2 + 56) - *(void *)(a2 + 48));
}

void sub_100DA182C(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 48);
  if (v2)
  {
    *(void *)(a1 + 56) = v2;
    operator delete(v2);
  }

uint64_t sub_100DA1844(uint64_t a1, int a2)
{
  *(_DWORD *)a1 = a2;
  *(void *)(a1 + 8) = 0LL;
  *(void *)(a1 + 16) = 0LL;
  *(void *)(a1 + sub_100BDC958(v1 + 24) = 0LL;
  *(_BYTE *)(a1 + 72) = 0;
  sub_100297954((unint64_t *)(a1 + 8), 0x8000uLL);
  if (compression_stream_init((compression_stream *)(a1 + 32), COMPRESSION_STREAM_ENCODE, *(compression_algorithm *)a1))
  {
    if (qword_101934910 != -1) {
      dispatch_once(&qword_101934910, &stru_101882760);
    }
    uint64_t v3 = (os_log_s *)qword_101934918;
    if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "ProtobufCompressor,ctor,Could not init stream",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934910 != -1) {
        dispatch_once(&qword_101934910, &stru_101882760);
      }
      v6[0] = 0;
      unint64_t v4 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934918,  16LL,  "ProtobufCompressor,ctor,Could not init stream",  v6,  2);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "CLProtobufSerializer::StreamingCompressor::StreamingCompressor(compression_algorithm)",  "%s\n",  v4);
    }
  }

  else
  {
    *(_BYTE *)(a1 + 72) = 1;
  }

  return a1;
}

void sub_100DA1A14(_Unwind_Exception *exception_object)
{
  unint64_t v4 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 16) = v4;
    operator delete(v4);
  }

  _Unwind_Resume(exception_object);
}

uint64_t sub_100DA1A34(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 8);
  if (v2)
  {
    *(void *)(a1 + 16) = v2;
    operator delete(v2);
  }

  return a1;
}

void sub_100DA1A6C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 72))
  {
    *(_BYTE *)(a1 + 72) = 0;
    if (compression_stream_destroy((compression_stream *)(a1 + 32)))
    {
      if (qword_101934910 != -1) {
        dispatch_once(&qword_101934910, &stru_101882760);
      }
      uint64_t v1 = (os_log_s *)qword_101934918;
      if (os_log_type_enabled((os_log_t)qword_101934918, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v1,  OS_LOG_TYPE_ERROR,  "ProtobufCompressor,failed to destroy stream",  buf,  2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934910 != -1) {
          dispatch_once(&qword_101934910, &stru_101882760);
        }
        v3[0] = 0;
        unint64_t v2 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934918,  16LL,  "ProtobufCompressor,failed to destroy stream",  v3,  2);
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLProtobufSerializer::StreamingCompressor::destroyStream()",  "%s\n",  v2);
      }
    }
  }

char *sub_100DA1C08(char *__dst, __int128 *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1010DD48C(__dst, *(void **)a2, *((void *)a2 + 1));
  }

  else
  {
    __int128 v4 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)__dst = v4;
  }

  if (*((char *)a2 + 47) < 0)
  {
    sub_1010DD48C(__dst + 24, *((void **)a2 + 3), *((void *)a2 + 4));
  }

  else
  {
    __int128 v5 = *(__int128 *)((char *)a2 + 24);
    *((void *)__dst + 5) = *((void *)a2 + 5);
    *(_OWORD *)(__dst + sub_100BDC958(v1 + 24) = v5;
  }

  if (*((char *)a2 + 71) < 0)
  {
    sub_1010DD48C(__dst + 48, *((void **)a2 + 6), *((void *)a2 + 7));
  }

  else
  {
    __int128 v6 = a2[3];
    *((void *)__dst + 8) = *((void *)a2 + 8);
    *((_OWORD *)__dst + 3) = v6;
  }

  uint64_t v7 = __dst + 72;
  if (*((char *)a2 + 95) < 0)
  {
    sub_1010DD48C(v7, *((void **)a2 + 9), *((void *)a2 + 10));
  }

  else
  {
    __int128 v8 = *(__int128 *)((char *)a2 + 72);
    *((void *)__dst + 11) = *((void *)a2 + 11);
    *(_OWORD *)uint64_t v7 = v8;
  }

  __int128 v9 = a2[6];
  *(_OWORD *)(__dst + 106) = *(__int128 *)((char *)a2 + 106);
  *((_OWORD *)__dst + 6) = v9;
  return __dst;
}

void sub_100DA1CF8(_Unwind_Exception *exception_object)
{
}

void sub_100DA1D44(id a1)
{
  qword_101934918 = (uint64_t)os_log_create("com.apple.locationd.Position", "PositionProto");
}

Class sub_100DA1D70()
{
  if (qword_10199E620 != -1) {
    dispatch_once(&qword_10199E620, &stru_101882780);
  }
  Class result = objc_getClass("SAPathManager");
  qword_10199E618 = (uint64_t)result;
  off_101990F70 = sub_100DA1DCC;
  return result;
}

uint64_t sub_100DA1DCC()
{
  return qword_10199E618;
}

void sub_100DA1DD8(id a1)
{
  qword_10199E628 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/SpaceAttribution.framework/SpaceAttribution", 2);
}

Class sub_100DA1E00()
{
  if (qword_10199E620 != -1) {
    dispatch_once(&qword_10199E620, &stru_101882780);
  }
  Class result = objc_getClass("SAPathInfo");
  qword_10199E630 = (uint64_t)result;
  off_101990F78 = sub_100DA1E5C;
  return result;
}

uint64_t sub_100DA1E5C()
{
  return qword_10199E630;
}

std::string *sub_100DA1E68(std::string *a1, char *a2)
{
  a1->__r_.__value_.__r.__words[0] = 0LL;
  a1->__r_.__value_.__l.__size_ = 0LL;
  a1->__r_.__value_.__l.__cap_ = 0LL;
  LODWORD(v3) = a2[23];
  BOOL v4 = (int)v3 < 0;
  uint64_t v5 = *((void *)a2 + 1);
  uint64_t v3 = v3;
  if (v4) {
    uint64_t v3 = v5;
  }
  sub_100DA1ECC(a1, a2, &a2[v3]);
  return a1;
}

void sub_100DA1EB0(_Unwind_Exception *exception_object)
{
}

std::string *sub_100DA1ECC(std::string *this, char *a2, char *a3)
{
  BOOL v4 = a2;
  LODWORD(v6) = (char)this->__r_.__value_.__s.__size_;
  unint64_t v7 = a3 - a2;
  if ((v6 & 0x80000000) != 0)
  {
    if (a3 == a2) {
      return this;
    }
    std::string::size_type size = this->__r_.__value_.__l.__size_;
    std::string::size_type cap = this->__r_.__value_.__l.__cap_;
    std::string::size_type v9 = (cap & 0x7FFFFFFFFFFFFFFFLL) - 1;
    unint64_t v10 = (std::string *)this->__r_.__value_.__r.__words[0];
    std::string::size_type v6 = HIBYTE(cap);
  }

  else
  {
    if (a3 == a2) {
      return this;
    }
    std::string::size_type size = this->__r_.__value_.__s.__size_;
    std::string::size_type v9 = 22LL;
    unint64_t v10 = this;
  }

  if (v10 > (std::string *)v4 || (char *)&v10->__r_.__value_.__l.__data_ + size + 1 <= v4)
  {
    if (v9 - size < v7)
    {
      std::string::__grow_by(this, v9, size - v9 + v7, size, size, 0LL, 0LL);
      this->__r_.__value_.__l.__size_ = size;
      LOBYTE(v6) = this->__r_.__value_.__s.__size_;
    }

    __int16 v14 = this;
    if ((v6 & 0x80) != 0) {
      __int16 v14 = (std::string *)this->__r_.__value_.__r.__words[0];
    }
    for (int i = (char *)v14 + size; v4 != a3; ++i)
    {
      char v16 = *v4++;
      *int i = v16;
    }

    *int i = 0;
    std::string::size_type v17 = v7 + size;
    else {
      this->__r_.__value_.__s.__size_ = v17 & 0x7F;
    }
  }

  else
  {
    sub_101120584(__p, v4, a3, v7);
    if ((v20 & 0x80u) == 0) {
      size_t v12 = __p;
    }
    else {
      size_t v12 = (void **)__p[0];
    }
    if ((v20 & 0x80u) == 0) {
      std::string::size_type v13 = v20;
    }
    else {
      std::string::size_type v13 = (std::string::size_type)__p[1];
    }
    std::string::append(this, (const std::string::value_type *)v12, v13);
  }

  return this;
}

void sub_100DA2024( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DA2040(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, char a5)
{
LABEL_1:
  std::string::size_type v9 = a2 - 24;
  unint64_t v10 = (const void **)a1;
LABEL_2:
  uint64_t v11 = 1 - a4;
  while (2)
  {
    a1 = (uint64_t)v10;
    uint64_t v12 = v11;
    uint64_t v13 = a2 - (char *)v10;
    unint64_t v14 = 0xAAAAAAAAAAAAAAABLL * ((a2 - (char *)v10) >> 3);
    switch(v14)
    {
      case 0uLL:
      case 1uLL:
        return;
      case 2uLL:
        if (sub_100DA23E4(a3, (void *)a2 - 3, v10))
        {
          uint64_t v29 = v10[2];
          __int128 v27 = *(_OWORD *)v10;
          __int128 v25 = *(_OWORD *)v9;
          _DWORD v10[2] = (const void *)*((void *)a2 - 1);
          *(_OWORD *)unint64_t v10 = v25;
          *(_OWORD *)std::string::size_type v9 = v27;
          *((void *)a2 - 1) = v29;
        }

        return;
      case 3uLL:
        sub_100DA2670(v10, v10 + 3, (void *)a2 - 3, a3);
        return;
      case 4uLL:
        sub_100DA2D04((uint64_t)v10, v10 + 3, v10 + 6, (void *)a2 - 3, a3);
        return;
      case 5uLL:
        sub_100DA2DEC((uint64_t)v10, v10 + 3, v10 + 6, v10 + 9, (void *)a2 - 3, a3);
        return;
      default:
        if (v13 <= 575)
        {
          if ((a5 & 1) != 0) {
            sub_100DA244C((uint64_t)v10, a2, a3);
          }
          else {
            sub_100DA256C(v10, a2, a3);
          }
          return;
        }

        if (v12 != 1)
        {
          unint64_t v15 = v14 >> 1;
          char v16 = &v10[3 * (v14 >> 1)];
          if ((unint64_t)v13 < 0xC01)
          {
            sub_100DA2670(&v10[3 * v15], v10, (void *)a2 - 3, a3);
            if ((a5 & 1) != 0) {
              goto LABEL_11;
            }
          }

          else
          {
            sub_100DA2670(v10, &v10[3 * v15], (void *)a2 - 3, a3);
            uint64_t v17 = 3 * v15;
            compression_status v18 = &v10[3 * v15 - 3];
            sub_100DA2670(v10 + 3, v18, (void *)a2 - 6, a3);
            uint64_t v19 = v10 + 6;
            unsigned __int8 v20 = &v10[v17 + 3];
            sub_100DA2670(v19, v20, (void *)a2 - 9, a3);
            sub_100DA2670(v18, v16, v20, a3);
            char v28 = *(const void **)(a1 + 16);
            __int128 v26 = *(_OWORD *)a1;
            __int128 v21 = *(_OWORD *)v16;
            *(void *)(a1 + 16) = v16[2];
            *(_OWORD *)a1 = v21;
            void v16[2] = v28;
            *(_OWORD *)char v16 = v26;
            if ((a5 & 1) != 0) {
              goto LABEL_11;
            }
          }

          if (!sub_100DA23E4(a3, (void *)(a1 - 24), (const void **)a1))
          {
            unint64_t v10 = sub_100DA27B8((const void **)a1, (unint64_t)a2, a3);
            goto LABEL_16;
          }

BOOL sub_100DA23E4(uint64_t a1, void *a2, const void **a3)
{
  int v3 = *((char *)a2 + 23);
  int v4 = *((char *)a3 + 23);
  if (v4 >= 0) {
    size_t v5 = *((unsigned __int8 *)a3 + 23);
  }
  else {
    size_t v5 = (size_t)a3[1];
  }
  if (v4 >= 0) {
    std::string::size_type v6 = a3;
  }
  else {
    std::string::size_type v6 = *a3;
  }
  if (v3 >= 0) {
    size_t v7 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v7 = a2[1];
  }
  if (v3 < 0) {
    a2 = (void *)*a2;
  }
  if (v7 >= v5) {
    size_t v8 = v5;
  }
  else {
    size_t v8 = v7;
  }
  int v9 = memcmp(v6, a2, v8);
  if (v9) {
    return v9 < 0;
  }
  else {
    return v5 < v7;
  }
}

void sub_100DA244C(uint64_t a1, void *a2, uint64_t a3)
{
  if ((void *)a1 != a2)
  {
    uint64_t v19 = v3;
    uint64_t v20 = v4;
    size_t v7 = (void *)(a1 + 24);
    if ((void *)(a1 + 24) != a2)
    {
      uint64_t v9 = 0LL;
      unint64_t v10 = (void *)a1;
      do
      {
        uint64_t v11 = (const void **)v10;
        unint64_t v10 = v7;
        if (sub_100DA23E4(a3, v7, v11))
        {
          __int128 v17 = *(_OWORD *)v10;
          uint64_t v18 = v10[2];
          v10[1] = 0LL;
          _DWORD v10[2] = 0LL;
          *unint64_t v10 = 0LL;
          uint64_t v12 = v9;
          do
          {
            uint64_t v13 = a1 + v12;
            unint64_t v14 = (void **)(a1 + v12 + 24);
            *(_OWORD *)unint64_t v14 = *(_OWORD *)v13;
            *(void *)(a1 + v12 + 40) = *(void *)(v13 + 16);
            *(_BYTE *)(v13 + 23) = 0;
            *(_BYTE *)uint64_t v13 = 0;
            if (!v12)
            {
              uint64_t v16 = a1;
              goto LABEL_13;
            }

            v12 -= 24LL;
          }

          while (sub_100DA23E4(a3, &v17, (const void **)(v12 + a1)));
          int v15 = *(char *)(a1 + v12 + 47);
          uint64_t v16 = a1 + v12 + 24;
          if (v15 < 0) {
            operator delete(*(void **)v16);
          }
LABEL_13:
          *(_OWORD *)uint64_t v16 = v17;
          *(void *)(v16 + 16) = v18;
        }

        size_t v7 = v10 + 3;
        v9 += 24LL;
      }

      while (v10 + 3 != a2);
    }
  }

void sub_100DA256C(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v18 = v3;
    uint64_t v19 = v4;
    std::string::size_type v6 = a1;
    size_t v7 = a1 + 3;
    if (a1 + 3 != a2)
    {
      uint64_t v9 = a1 - 3;
      do
      {
        unint64_t v10 = (const void **)v6;
        std::string::size_type v6 = v7;
        if (sub_100DA23E4(a3, v7, v10))
        {
          __int128 v16 = *(_OWORD *)v6;
          __int128 v17 = (void *)v6[2];
          v6[1] = 0LL;
          _DWORD v6[2] = 0LL;
          *std::string::size_type v6 = 0LL;
          uint64_t v11 = v9;
          do
          {
            uint64_t v12 = (void **)(v11 + 6);
            *(_OWORD *)uint64_t v12 = *(_OWORD *)(v11 + 3);
            v11[8] = v11[5];
            *((_BYTE *)v11 + 47) = 0;
            *((_BYTE *)v11 + sub_100BDC958(v1 + 24) = 0;
            BOOL v13 = sub_100DA23E4(a3, &v16, (const void **)v11);
            v11 -= 3;
          }

          while (v13);
          int v14 = *((char *)v11 + 71);
          int v15 = (void **)(v11 + 6);
          if (v14 < 0) {
            operator delete(*v15);
          }
          *(_OWORD *)int v15 = v16;
          _DWORD v15[2] = v17;
        }

        size_t v7 = v6 + 3;
        v9 += 3;
      }

      while (v6 + 3 != a2);
    }
  }

uint64_t sub_100DA2670(const void **a1, const void **a2, void *a3, uint64_t a4)
{
  BOOL v8 = sub_100DA23E4(a4, a2, a1);
  uint64_t result = sub_100DA23E4(a4, a3, a2);
  if (!v8)
  {
    if (!(_DWORD)result) {
      return result;
    }
    BOOL v13 = a2[2];
    __int128 v14 = *(_OWORD *)a2;
    int v15 = (const void *)a3[2];
    *(_OWORD *)a2 = *(_OWORD *)a3;
    a2[2] = v15;
    *(_OWORD *)a3 = v14;
    a3[2] = v13;
    if (!sub_100DA23E4(a4, a2, a1)) {
      return 1LL;
    }
    __int128 v16 = a1[2];
    __int128 v17 = *(_OWORD *)a1;
    uint64_t v18 = a2[2];
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = v18;
    *(_OWORD *)a2 = v17;
    a2[2] = v16;
    return 2LL;
  }

  if (!(_DWORD)result)
  {
    uint64_t v19 = a1[2];
    __int128 v20 = *(_OWORD *)a1;
    __int128 v21 = a2[2];
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = v21;
    *(_OWORD *)a2 = v20;
    a2[2] = v19;
    if (!sub_100DA23E4(a4, a3, a2)) {
      return 1LL;
    }
    uint64_t v22 = a2[2];
    __int128 v23 = *(_OWORD *)a2;
    BOOL v24 = (const void *)a3[2];
    *(_OWORD *)a2 = *(_OWORD *)a3;
    a2[2] = v24;
    *(_OWORD *)a3 = v23;
    a3[2] = v22;
    return 2LL;
  }

  unint64_t v10 = a1[2];
  __int128 v11 = *(_OWORD *)a1;
  uint64_t v12 = (const void *)a3[2];
  *(_OWORD *)a1 = *(_OWORD *)a3;
  a1[2] = v12;
  *(_OWORD *)a3 = v11;
  a3[2] = v10;
  return 1LL;
}

const void **sub_100DA27B8(const void **a1, unint64_t a2, uint64_t a3)
{
  unint64_t v4 = a2;
  __int128 v16 = *(_OWORD *)a1;
  __int128 v17 = a1[2];
  a1[1] = 0LL;
  a1[2] = 0LL;
  *a1 = 0LL;
  if (sub_100DA23E4(a3, &v16, (const void **)(a2 - 24)))
  {
    std::string::size_type v6 = a1;
    do
      v6 += 3;
    while (!sub_100DA23E4(a3, &v16, v6));
  }

  else
  {
    size_t v7 = a1 + 3;
    do
    {
      std::string::size_type v6 = v7;
      BOOL v8 = sub_100DA23E4(a3, &v16, v7);
      size_t v7 = v6 + 3;
    }

    while (!v8);
  }

  if ((unint64_t)v6 < v4)
  {
    do
      v4 -= 24LL;
    while (sub_100DA23E4(a3, &v16, (const void **)v4));
  }

  while ((unint64_t)v6 < v4)
  {
    __int128 v9 = *(_OWORD *)v6;
    uint64_t v19 = v6[2];
    __int128 v18 = v9;
    __int128 v10 = *(_OWORD *)v4;
    _DWORD v6[2] = *(const void **)(v4 + 16);
    *(_OWORD *)std::string::size_type v6 = v10;
    __int128 v11 = v18;
    *(void *)(v4 + 16) = v19;
    *(_OWORD *)unint64_t v4 = v11;
    do
      v6 += 3;
    while (!sub_100DA23E4(a3, &v16, v6));
    do
      v4 -= 24LL;
    while (sub_100DA23E4(a3, &v16, (const void **)v4));
  }

  uint64_t v12 = (void **)(v6 - 3);
  if (v6 - 3 == a1)
  {
  }

  else
  {
    __int128 v13 = *(_OWORD *)v12;
    a1[2] = *(v6 - 1);
    *(_OWORD *)a1 = v13;
    *((_BYTE *)v6 - 1) = 0;
    *((_BYTE *)v6 - sub_100BDC958(v1 + 24) = 0;
  }

  __int128 v14 = v16;
  *(v6 - 1) = v17;
  *(_OWORD *)uint64_t v12 = v14;
  return v6;
}

void *sub_100DA2948(__int128 *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = 0LL;
  __int128 v17 = *a1;
  uint64_t v18 = *((void *)a1 + 2);
  *((void *)a1 + 1) = 0LL;
  *((void *)a1 + 2) = 0LL;
  *(void *)a1 = 0LL;
  do
    v6 += 24LL;
  while (sub_100DA23E4(a3, (__int128 *)((char *)a1 + v6), (const void **)&v17));
  unint64_t v7 = (unint64_t)a1 + v6;
  if (v6 == 24)
  {
    do
    {
      a2 -= 3;
    }

    while (!sub_100DA23E4(a3, a2, (const void **)&v17));
  }

  else
  {
    do
      a2 -= 3;
    while (!sub_100DA23E4(a3, a2, (const void **)&v17));
  }

  BOOL v8 = (void *)((char *)a1 + v6);
  if (v7 < (unint64_t)a2)
  {
    __int128 v9 = a2;
    do
    {
      __int128 v19 = *(_OWORD *)v8;
      __int128 v10 = v19;
      uint64_t v20 = v8[2];
      uint64_t v11 = v20;
      uint64_t v12 = v9[2];
      *(_OWORD *)BOOL v8 = *(_OWORD *)v9;
      v8[2] = v12;
      _DWORD v9[2] = v11;
      *(_OWORD *)__int128 v9 = v10;
      do
        v8 += 3;
      while (sub_100DA23E4(a3, v8, (const void **)&v17));
      do
        v9 -= 3;
      while (!sub_100DA23E4(a3, v9, (const void **)&v17));
    }

    while (v8 < v9);
  }

  __int128 v13 = (void **)(v8 - 3);
  if (v8 - 3 == (void *)a1)
  {
  }

  else
  {
    __int128 v14 = *(_OWORD *)v13;
    *((void *)a1 + 2) = *(v8 - 1);
    *a1 = v14;
    *((_BYTE *)v8 - 1) = 0;
    *((_BYTE *)v8 - sub_100BDC958(v1 + 24) = 0;
  }

  __int128 v15 = v17;
  *(v8 - 1) = v18;
  *(_OWORD *)__int128 v13 = v15;
  return v8 - 3;
}

BOOL sub_100DA2AD4(uint64_t a1, const void **a2, uint64_t a3)
{
  unint64_t v6 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)a2 - a1) >> 3);
  BOOL result = 1LL;
  switch(v6)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      BOOL v8 = a2 - 3;
      if (sub_100DA23E4(a3, a2 - 3, (const void **)a1))
      {
        __int128 v9 = *(const void **)(a1 + 16);
        __int128 v10 = *(_OWORD *)a1;
        uint64_t v11 = v8[2];
        *(_OWORD *)a1 = *(_OWORD *)v8;
        *(void *)(a1 + 16) = v11;
        *(_OWORD *)BOOL v8 = v10;
        v8[2] = v9;
      }

      return 1LL;
    case 3uLL:
      sub_100DA2670((const void **)a1, (const void **)(a1 + 24), a2 - 3, a3);
      return 1LL;
    case 4uLL:
      sub_100DA2D04(a1, (const void **)(a1 + 24), (const void **)(a1 + 48), a2 - 3, a3);
      return 1LL;
    case 5uLL:
      sub_100DA2DEC(a1, (const void **)(a1 + 24), (const void **)(a1 + 48), (const void **)(a1 + 72), a2 - 3, a3);
      return 1LL;
    default:
      uint64_t v12 = (const void **)(a1 + 48);
      sub_100DA2670((const void **)a1, (const void **)(a1 + 24), (void *)(a1 + 48), a3);
      __int128 v13 = (const void **)(a1 + 72);
      uint64_t v14 = 0LL;
      int v15 = 0;
      break;
  }

  while (1)
  {
    if (sub_100DA23E4(a3, v13, v12))
    {
      __int128 v22 = *(_OWORD *)v13;
      __int128 v23 = v13[2];
      v13[1] = 0LL;
      v13[2] = 0LL;
      *__int128 v13 = 0LL;
      uint64_t v16 = v14;
      do
      {
        uint64_t v17 = a1 + v16;
        uint64_t v18 = (void **)(a1 + v16 + 72);
        *(_OWORD *)uint64_t v18 = *(_OWORD *)(v17 + 48);
        *(void *)(a1 + v16 + 88) = *(void *)(v17 + 64);
        *(_BYTE *)(v17 + 71) = 0;
        *(_BYTE *)(v17 + 48) = 0;
        if (v16 == -48)
        {
          uint64_t v21 = a1;
          goto LABEL_15;
        }

        BOOL v19 = sub_100DA23E4(a3, &v22, (const void **)(a1 + v16 + 24));
        v16 -= 24LL;
      }

      while (v19);
      int v20 = *(char *)(a1 + v16 + 95);
      uint64_t v21 = a1 + v16 + 72;
      if (v20 < 0) {
        operator delete(*(void **)v21);
      }
LABEL_15:
      *(_OWORD *)uint64_t v21 = v22;
      *(void *)(v21 + 16) = v23;
      if (++v15 == 8) {
        return v13 + 3 == a2;
      }
    }

    uint64_t v12 = v13;
    v14 += 24LL;
    v13 += 3;
    if (v13 == a2) {
      return 1LL;
    }
  }

__n128 sub_100DA2D04(uint64_t a1, const void **a2, const void **a3, void *a4, uint64_t a5)
{
  if (sub_100DA23E4(a5, a4, a3))
  {
    uint64_t v11 = a3[2];
    __int128 v12 = *(_OWORD *)a3;
    __int128 v13 = (const void *)a4[2];
    *(_OWORD *)a3 = *(_OWORD *)a4;
    a3[2] = v13;
    *(_OWORD *)a4 = v12;
    a4[2] = v11;
    if (sub_100DA23E4(a5, a3, a2))
    {
      uint64_t v14 = a2[2];
      __int128 v15 = *(_OWORD *)a2;
      uint64_t v16 = a3[2];
      *(_OWORD *)a2 = *(_OWORD *)a3;
      a2[2] = v16;
      *(_OWORD *)a3 = v15;
      a3[2] = v14;
      if (sub_100DA23E4(a5, a2, (const void **)a1))
      {
        uint64_t v17 = *(const void **)(a1 + 16);
        __n128 result = *(__n128 *)a1;
        uint64_t v18 = a2[2];
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(void *)(a1 + 16) = v18;
        *(__n128 *)a2 = result;
        a2[2] = v17;
      }
    }
  }

  return result;
}

__n128 sub_100DA2DEC(uint64_t a1, const void **a2, const void **a3, const void **a4, void *a5, uint64_t a6)
{
  if (sub_100DA23E4(a6, a5, a4))
  {
    __int128 v13 = a4[2];
    __int128 v14 = *(_OWORD *)a4;
    __int128 v15 = (const void *)a5[2];
    *(_OWORD *)a4 = *(_OWORD *)a5;
    a4[2] = v15;
    *(_OWORD *)a5 = v14;
    a5[2] = v13;
    if (sub_100DA23E4(a6, a4, a3))
    {
      uint64_t v16 = a3[2];
      __int128 v17 = *(_OWORD *)a3;
      uint64_t v18 = a4[2];
      *(_OWORD *)a3 = *(_OWORD *)a4;
      a3[2] = v18;
      *(_OWORD *)a4 = v17;
      a4[2] = v16;
      if (sub_100DA23E4(a6, a3, a2))
      {
        BOOL v19 = a2[2];
        __int128 v20 = *(_OWORD *)a2;
        uint64_t v21 = a3[2];
        *(_OWORD *)a2 = *(_OWORD *)a3;
        a2[2] = v21;
        *(_OWORD *)a3 = v20;
        a3[2] = v19;
        if (sub_100DA23E4(a6, a2, (const void **)a1))
        {
          __int128 v22 = *(const void **)(a1 + 16);
          __n128 result = *(__n128 *)a1;
          __int128 v23 = a2[2];
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(void *)(a1 + 16) = v23;
          *(__n128 *)a2 = result;
          a2[2] = v22;
        }
      }
    }
  }

  return result;
}

void *sub_100DA2F0C(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  if ((void *)a1 != a2)
  {
    uint64_t v8 = (uint64_t)a2 - a1;
    uint64_t v9 = ((uint64_t)a2 - a1) / 24;
    if ((uint64_t)a2 - a1 >= 25)
    {
      unint64_t v10 = (unint64_t)(v9 - 2) >> 1;
      unint64_t v11 = v10 + 1;
      __int128 v12 = (__n128 *)(a1 + 24 * v10);
      do
      {
        sub_100DA3154(a1, a4, v9, v12);
        __int128 v12 = (__n128 *)((char *)v12 - 24);
        --v11;
      }

      while (v11);
    }

    __int128 v13 = a2;
    if (a2 != a3)
    {
      __int128 v14 = a2;
      do
      {
        if (sub_100DA23E4(a4, v14, (const void **)a1))
        {
          uint64_t v15 = v14[2];
          __int128 v16 = *(_OWORD *)v14;
          uint64_t v17 = *(void *)(a1 + 16);
          *(_OWORD *)__int128 v14 = *(_OWORD *)a1;
          v14[2] = v17;
          *(_OWORD *)a1 = v16;
          *(void *)(a1 + 16) = v15;
          sub_100DA3154(a1, a4, v9, (__n128 *)a1);
        }

        v14 += 3;
      }

      while (v14 != a3);
      __int128 v13 = a3;
    }

    if (v8 >= 25)
    {
      int64_t v18 = v8 / 0x18uLL;
      BOOL v19 = a2 - 3;
      do
      {
        uint64_t v20 = *(void *)a1;
        *(void *)char v28 = *(void *)(a1 + 8);
        *(void *)&v28[7] = *(void *)(a1 + 15);
        char v21 = *(_BYTE *)(a1 + 23);
        *(void *)(a1 + 8) = 0LL;
        *(void *)(a1 + 16) = 0LL;
        *(void *)a1 = 0LL;
        uint64_t v22 = sub_100DA32E8(a1, a4, v18);
        uint64_t v23 = v22;
        int v24 = *(char *)(v22 + 23);
        if (v19 == (void *)v22)
        {
          if (v24 < 0) {
            operator delete(*(void **)v22);
          }
          *(void *)uint64_t v23 = v20;
          *(void *)(v23 + 8) = *(void *)v28;
          *(void *)(v23 + 15) = *(void *)&v28[7];
          *(_BYTE *)(v23 + 23) = v21;
        }

        else
        {
          if (v24 < 0) {
            operator delete(*(void **)v22);
          }
          __int128 v25 = *(_OWORD *)v19;
          *(void *)(v23 + 16) = v19[2];
          *(_OWORD *)uint64_t v23 = v25;
          *BOOL v19 = v20;
          v19[1] = *(void *)v28;
          *(void *)((char *)v19 + 15) = *(void *)&v28[7];
          *((_BYTE *)v19 + 23) = v21;
          sub_100DA33C0(a1, v23 + 24, a4, 0xAAAAAAAAAAAAAAABLL * ((v23 + 24 - a1) >> 3));
        }

        v19 -= 3;
      }

      while (v18-- > 2);
    }

    return v13;
  }

  return a3;
}

void sub_100DA313C(_Unwind_Exception *exception_object)
{
  if (v2 < 0) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

__n128 sub_100DA3154(uint64_t a1, uint64_t a2, uint64_t a3, __n128 *a4)
{
  unint64_t v6 = a3 - 2;
  if (a3 >= 2)
  {
    uint64_t v22 = v4;
    uint64_t v23 = v5;
    unint64_t v7 = a4;
    uint64_t v9 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) >= (uint64_t)(0xAAAAAAAAAAAAAAABLL * (((uint64_t)a4 - a1) >> 3)))
    {
      uint64_t v12 = (0x5555555555555556LL * (((uint64_t)a4 - a1) >> 3)) | 1;
      uint64_t v13 = a1 + 24 * v12;
      uint64_t v14 = 0x5555555555555556LL * (((uint64_t)a4 - a1) >> 3) + 2;
      if (v14 < a3 && sub_100DA23E4(a2, (void *)(a1 + 24 * v12), (const void **)(v13 + 24)))
      {
        v13 += 24LL;
        uint64_t v12 = v14;
      }

      if (!sub_100DA23E4(a2, (void *)v13, (const void **)v7))
      {
        __n128 v20 = *v7;
        unint64_t v21 = v7[1].n128_u64[0];
        v7->n128_u64[1] = 0LL;
        v7[1].n128_u64[0] = 0LL;
        v7->n128_u64[0] = 0LL;
        while (1)
        {
          __int128 v16 = (__n128 *)v13;
          if (v7[1].n128_i8[7] < 0) {
            operator delete((void *)v7->n128_u64[0]);
          }
          __n128 v17 = *(__n128 *)v13;
          v7[1].n128_u64[0] = *(void *)(v13 + 16);
          *unint64_t v7 = v17;
          *(_BYTE *)(v13 + 23) = 0;
          *(_BYTE *)uint64_t v13 = 0;
          if (v9 < v12) {
            break;
          }
          uint64_t v18 = (2 * v12) | 1;
          uint64_t v13 = a1 + 24 * v18;
          uint64_t v19 = 2 * v12 + 2;
          if (v19 < a3 && sub_100DA23E4(a2, (void *)(a1 + 24 * v18), (const void **)(v13 + 24)))
          {
            v13 += 24LL;
            uint64_t v18 = v19;
          }

          unint64_t v7 = v16;
          uint64_t v12 = v18;
          if (sub_100DA23E4(a2, (void *)v13, (const void **)&v20))
          {
            if (v16[1].n128_i8[7] < 0) {
              operator delete((void *)v16->n128_u64[0]);
            }
            break;
          }
        }

        __n128 result = v20;
        v16[1].n128_u64[0] = v21;
        *__int128 v16 = result;
      }
    }
  }

  return result;
}

uint64_t sub_100DA32E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = 0LL;
  uint64_t v7 = a3 - 2;
  if (a3 < 2) {
    uint64_t v7 = a3 - 1;
  }
  uint64_t v8 = v7 >> 1;
  do
  {
    uint64_t v9 = a1 + 24 * v6 + 24;
    uint64_t v10 = 2 * v6;
    uint64_t v6 = (2 * v6) | 1;
    uint64_t v11 = v10 + 2;
    if (v10 + 2 < a3 && sub_100DA23E4(a2, (void *)v9, (const void **)(v9 + 24)))
    {
      v9 += 24LL;
      uint64_t v6 = v11;
    }

    __int128 v12 = *(_OWORD *)v9;
    *(void *)(a1 + 16) = *(void *)(v9 + 16);
    *(_OWORD *)a1 = v12;
    *(_BYTE *)(v9 + 23) = 0;
    *(_BYTE *)uint64_t v9 = 0;
    a1 = v9;
  }

  while (v6 <= v8);
  return v9;
}

double sub_100DA33C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4 >= 2)
  {
    uint64_t v16 = v4;
    uint64_t v17 = v5;
    unint64_t v8 = (unint64_t)(a4 - 2) >> 1;
    uint64_t v9 = (__int128 *)(a1 + 24 * v8);
    uint64_t v10 = (__int128 *)(a2 - 24);
    if (sub_100DA23E4(a3, v9, (const void **)(a2 - 24)))
    {
      __int128 v14 = *v10;
      uint64_t v15 = *((void *)v10 + 2);
      *((void *)v10 + 1) = 0LL;
      *((void *)v10 + 2) = 0LL;
      *(void *)uint64_t v10 = 0LL;
      while (1)
      {
        __int128 v12 = v9;
        __int128 v13 = *v9;
        *((void *)v10 + 2) = *((void *)v9 + 2);
        *uint64_t v10 = v13;
        *((_BYTE *)v9 + 23) = 0;
        *(_BYTE *)uint64_t v9 = 0;
        if (!v8) {
          break;
        }
        unint64_t v8 = (v8 - 1) >> 1;
        uint64_t v9 = (__int128 *)(a1 + 24 * v8);
        uint64_t v10 = v12;
        if (!sub_100DA23E4(a3, v9, (const void **)&v14))
        {
          break;
        }
      }

      double result = *(double *)&v14;
      __int128 *v12 = v14;
      *((void *)v12 + 2) = v15;
    }
  }

  return result;
}

void *sub_100DA34BC(void *result, char *__src, char *a3, unint64_t a4)
{
  uint64_t v7 = result;
  unint64_t v8 = result[2];
  uint64_t v9 = (char *)*result;
  if (v8 - *result < a4)
  {
    if (v9)
    {
      result[1] = v9;
      operator delete(v9);
      unint64_t v8 = 0LL;
      *uint64_t v7 = 0LL;
      v7[1] = 0LL;
      v7[2] = 0LL;
    }

    if ((a4 & 0x8000000000000000LL) != 0) {
      sub_100007008();
    }
    uint64_t v10 = 2 * v8;
    if (2 * v8 <= a4) {
      uint64_t v10 = a4;
    }
    if (v8 >= 0x3FFFFFFFFFFFFFFFLL) {
      size_t v11 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      size_t v11 = v10;
    }
    double result = sub_1006A33BC(v7, v11);
    uint64_t v9 = (char *)v7[1];
    goto LABEL_17;
  }

  __int128 v12 = (_BYTE *)result[1];
  if (v12 - v9 >= a4)
  {
LABEL_17:
    size_t v15 = a3 - __src;
    if (v15) {
      double result = memmove(v9, __src, v15);
    }
    __int128 v14 = &v9[v15];
    goto LABEL_20;
  }

  __int128 v13 = &__src[v12 - v9];
  if (v12 != v9)
  {
    double result = memmove((void *)*result, __src, v12 - v9);
    uint64_t v9 = (char *)v7[1];
  }

  if (a3 != v13) {
    double result = memmove(v9, v13, a3 - v13);
  }
  __int128 v14 = &v9[a3 - v13];
LABEL_20:
  v7[1] = v14;
  return result;
}

uint64_t sub_100DA35CC(uint64_t a1, int a2)
{
  if (v10 < 0) {
    operator delete(__p[0]);
  }
  *(void *)a1 = off_101882830;
  *(void *)(a1 + 72) = off_1018828E8;
  sub_100B14CF0((void *)(a1 + 424), 0LL, 0LL);
  sub_100B14CF0((void *)(a1 + 440), 0LL, 0LL);
  sub_100B14CF0((void *)(a1 + 456), 0LL, 0LL);
  sub_100B14CF0((void *)(a1 + 472), 0LL, 0LL);
  sub_100B14CF0((void *)(a1 + 488), 0LL, 0LL);
  sub_100B14CF0((void *)(a1 + 504), 0LL, 0LL);
  sub_100B14CF0((void *)(a1 + 520), 0LL, 0LL);
  sub_100B14CF0((void *)(a1 + 536), 0LL, 0LL);
  sub_100B14CF0((void *)(a1 + 552), 0LL, 0LL);
  sub_100B14CF0((void *)(a1 + 568), 0LL, 0LL);
  *(_OWORD *)(a1 + 584) = 0u;
  if (qword_101934510 != -1) {
    dispatch_once(&qword_101934510, &stru_101882978);
  }
  uint64_t v4 = (os_log_s *)qword_101934518;
  if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(__p[0]) = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "CMStrideCalRecorderDb init", (uint8_t *)__p, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934510 != -1) {
      dispatch_once(&qword_101934510, &stru_101882978);
    }
    v8[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934518,  2LL,  "CMStrideCalRecorderDb init",  v8,  2);
    uint64_t v7 = (void **)v6;
    sub_10029211C("Generic", 1LL, 0, 2LL, "CMStrideCalRecorderDb::CMStrideCalRecorderDb(BOOL)", "%s\n", v6);
    if (v7 != __p) {
      free(v7);
    }
  }

  (*(void (**)(uint64_t))(*(void *)a1 + 112LL))(a1);
  *(void *)(a1 + 160) = -[CMStrideCalRecorderCloudKitDelegate initWithStrideCalRecorderDb:]( objc_alloc(&OBJC_CLASS___CMStrideCalRecorderCloudKitDelegate),  "initWithStrideCalRecorderDb:",  a1);
  return a1;
}

void sub_100DA3890( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
}

uint64_t sub_100DA38C8(uint64_t a1, char *a2, int a3, uint64_t a4, int a5, float a6)
{
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + sub_100BDC958(v1 + 24) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  __int128 v12 = (void *)(a1 + 8);
  *(void *)a1 = off_10182BD58;
  sub_1001B9AC4((void *)(a1 + 8));
  void *v12 = &off_10182BDA0;
  *(void *)a1 = off_1018829A8;
  *(void *)(a1 + 72) = off_101882A50;
  sub_100D8A584(a1 + 72, a2, a3, a1, a6, a4, a5, 0LL);
  *(void *)a1 = off_1018829A8;
  *(void *)(a1 + 72) = off_101882A50;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_DWORD *)(a1 + 344) = 12000;
  *(void *)(a1 + 352) = off_10182BD58;
  sub_1001B9AC4((void *)(a1 + 360));
  *(void *)(a1 + 360) = &off_10182BDA0;
  uint64_t v13 = *(void *)(a1 + 112);
  uint64_t v29 = a1 + 112;
  (*(void (**)(void))(v13 + 16))();
  __int16 v31 = 256;
  if (a3)
  {
    *(void *)(a1 + 232) = 0xBFF0000000000000LL;
LABEL_3:
    (*(void (**)(uint64_t))(*(void *)v29 + 24LL))(v29);
    return a1;
  }

  if (*(char *)(a4 + 23) < 0)
  {
    sub_1010DD48C(__p, *(void **)a4, *(void *)(a4 + 8));
  }

  else
  {
    *(_OWORD *)__int128 __p = *(_OWORD *)a4;
    uint64_t v28 = *(void *)(a4 + 16);
  }

  sub_100D8AF38(a1 + 72, (uint64_t)__p);
  if (SHIBYTE(v28) < 0) {
    operator delete(__p[0]);
  }
  uint64_t v14 = sub_1006E27E8();
  sub_100413284(v14, buf);
  size_t v15 = (int *)(a1 + 344);
  char v16 = sub_1002A7CB0(*(uint64_t *)buf, "ActivityInMemoryBufferSize", (_DWORD *)(a1 + 344));
  uint64_t v17 = v34;
  if (v34)
  {
    p_shared_owners = (unint64_t *)&v34->__shared_owners_;
    do
      unint64_t v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }

  if ((v16 & 1) == 0) {
    *size_t v15 = 12000;
  }
  if (qword_1019344B0 != -1) {
    dispatch_once(&qword_1019344B0, &stru_101882A90);
  }
  __n128 v20 = (os_log_s *)qword_1019344B8;
  if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
  {
    int v21 = *v15;
    *(_DWORD *)std::string buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = v21;
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEBUG, "Buffer size: %d", buf, 8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101882A90);
    }
    int v24 = *v15;
    v32[0] = 67109120;
    v32[1] = v24;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  2LL,  "Buffer size: %d",  v32);
    __int128 v26 = (uint8_t *)v25;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLActivityRecorderDb<CLStrideCalEntry>::CLActivityRecorderDb(const char *, BOOL, float, const std::string &, const CLSqliteDatabase::SqlitePropertyPersistence) [T = CLStrideCalEntry, DataProtectionPolicy = CLActivityDB::ClassCDa taProtectionPolicy]",  "%s\n",  v25);
    if (v26 != buf) {
      free(v26);
    }
  }

  int v22 = HIBYTE(v31);
  *(void *)(a1 + 232) = 0xBFF0000000000000LL;
  if (v22)
  {
    if ((_BYTE)v31)
    {
      pthread_mutex_unlock(v30);
      return a1;
    }

    goto LABEL_3;
  }

  return a1;
}

void sub_100DA3C70( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, char a24)
{
  v24[44] = off_10182BD58;
  sub_1001B9C98(v27);
  sub_1005A8CF4(v26);
  sub_100D8A88C(a12);
  *int v24 = off_10182BD58;
  sub_1001B9C98(v25);
  _Unwind_Resume(a1);
}

void sub_100DA3D14()
{
}

void *sub_100DA3D1C(void *a1)
{
  a1[9] = off_101882A50;
  uint64_t v2 = (uint64_t)(a1 + 9);
  *a1 = off_1018829A8;
  a1[44] = off_10182BD58;
  sub_1001B9C98(a1 + 45);
  sub_1005A8CF4(a1 + 22);
  sub_100D8A88C(v2);
  *a1 = off_10182BD58;
  sub_1001B9C98(a1 + 1);
  return a1;
}

void *sub_100DA3D98(void *a1)
{
  *a1 = off_101882830;
  a1[9] = off_1018828E8;
  uint64_t v2 = (void *)a1[73];
  if (v2)
  {

    a1[73] = 0LL;
  }

  uint64_t v3 = (const void *)a1[74];
  if (v3) {
    _Block_release(v3);
  }
  uint64_t v4 = (void *)a1[20];
  if (v4)
  {

    a1[20] = 0LL;
  }

  return sub_100DA3D1C(a1);
}

void *sub_100DA3E00(uint64_t a1)
{
  return sub_100DA3D98((void *)(a1 - 72));
}

void sub_100DA3E08(void *a1)
{
  uint64_t v1 = sub_100DA3D98(a1);
  operator delete(v1);
}

void sub_100DA3E1C(uint64_t a1)
{
  uint64_t v1 = sub_100DA3D98((void *)(a1 - 72));
  operator delete(v1);
}

uint64_t sub_100DA3E34()
{
  return -1LL;
}

uint64_t sub_100DA3E3C()
{
  return -1LL;
}

uint64_t sub_100DA3E44(uint64_t a1, void **a2)
{
  uint64_t v5 = a1 + 112;
  uint64_t v4 = *(void *)(a1 + 112);
  uint64_t v6 = a1 + 72;
  v59[1] = a1 + 112;
  (*(void (**)(uint64_t))(v4 + 16))(a1 + 112);
  __int16 v60 = 256;
  if (sub_100D8A92C(v6))
  {
    uint64_t v42 = v5;
    sub_100B14CF8((uint64_t *)(a1 + 440), v59);
    while (!sub_100DA4118(v59, (uint64_t)&v44))
    {
      int v7 = v44;
      uint64_t v8 = v45;
      int v9 = v46;
      uint64_t v10 = v47;
      uint64_t v11 = v48;
      uint64_t v13 = v49;
      uint64_t v12 = v50;
      uint64_t v14 = v51;
      int v15 = v52;
      int v16 = v53;
      uint64_t v18 = v54;
      uint64_t v17 = v55;
      int v19 = v56;
      uint64_t v20 = v57;
      int v21 = v58;
      int v22 = (char *)a2[1];
      uint64_t v23 = (char *)a2[2];
      if (v22 >= v23)
      {
        uint64_t v43 = v45;
        unint64_t v25 = 0xEEEEEEEEEEEEEEEFLL * ((v22 - (_BYTE *)*a2) >> 3);
        unint64_t v26 = v25 + 1;
        if (v25 + 1 > 0x222222222222222LL) {
          sub_100007008();
        }
        unint64_t v27 = 0xEEEEEEEEEEEEEEEFLL * ((v23 - (_BYTE *)*a2) >> 3);
        if (2 * v27 > v26) {
          unint64_t v26 = 2 * v27;
        }
        if (v27 >= 0x111111111111111LL) {
          unint64_t v28 = 0x222222222222222LL;
        }
        else {
          unint64_t v28 = v26;
        }
        if (v28) {
          uint64_t v29 = (char *)sub_1000BAE04((uint64_t)(a2 + 2), v28);
        }
        else {
          uint64_t v29 = 0LL;
        }
        __int128 v30 = &v29[120 * v25];
        *(_DWORD *)__int128 v30 = v7;
        *((void *)v30 + 1) = v43;
        *((_DWORD *)v30 + 4) = v9;
        *((void *)v30 + 3) = v10;
        *((void *)v30 + 4) = v11;
        *((void *)v30 + 5) = v13;
        *((void *)v30 + 6) = v12;
        *((void *)v30 + 7) = v14;
        *((_DWORD *)v30 + 16) = v15;
        *((_DWORD *)v30 + 17) = v16;
        *((void *)v30 + 9) = v18;
        *((void *)v30 + 10) = v17;
        *((_DWORD *)v30 + 22) = v19;
        *((void *)v30 + 13) = v20;
        *((_DWORD *)v30 + 28) = v21;
        unint64_t v32 = (char *)*a2;
        __int16 v31 = (char *)a2[1];
        int v33 = v30;
        if (v31 != *a2)
        {
          do
          {
            __int128 v34 = *(_OWORD *)(v31 - 120);
            __int128 v35 = *(_OWORD *)(v31 - 104);
            __int128 v36 = *(_OWORD *)(v31 - 88);
            *(_OWORD *)(v33 - 72) = *(_OWORD *)(v31 - 72);
            *(_OWORD *)(v33 - 88) = v36;
            *(_OWORD *)(v33 - 104) = v35;
            *(_OWORD *)(v33 - 120) = v34;
            __int128 v37 = *(_OWORD *)(v31 - 56);
            __int128 v38 = *(_OWORD *)(v31 - 40);
            __int128 v39 = *(_OWORD *)(v31 - 24);
            *((void *)v33 - 1) = *((void *)v31 - 1);
            *(_OWORD *)(v33 - sub_100BDC958(v1 + 24) = v39;
            *(_OWORD *)(v33 - 40) = v38;
            *(_OWORD *)(v33 - 56) = v37;
            v33 -= 120;
            v31 -= 120;
          }

          while (v31 != v32);
          __int16 v31 = (char *)*a2;
        }

        int v24 = v30 + 120;
        *a2 = v33;
        a2[1] = v30 + 120;
        a2[2] = &v29[120 * v28];
        if (v31) {
          operator delete(v31);
        }
      }

      else
      {
        *(_DWORD *)int v22 = v44;
        *((void *)v22 + 1) = v8;
        *((_DWORD *)v22 + 4) = v9;
        *((void *)v22 + 3) = v10;
        *((void *)v22 + 4) = v11;
        *((void *)v22 + 5) = v13;
        *((void *)v22 + 6) = v12;
        *((void *)v22 + 7) = v14;
        *((_DWORD *)v22 + 16) = v15;
        *((_DWORD *)v22 + 17) = v16;
        *((void *)v22 + 9) = v18;
        *((void *)v22 + 10) = v17;
        *((_DWORD *)v22 + 22) = v19;
        *((void *)v22 + 13) = v20;
        int v24 = v22 + 120;
        *((_DWORD *)v22 + 28) = v21;
      }

      a2[1] = v24;
    }

    uint64_t v40 = v59[0];
    v59[0] = 0LL;
    if (v40) {
      (*(void (**)(uint64_t))(*(void *)v40 + 8LL))(v40);
    }
    uint64_t v5 = v42;
  }

  return (*(uint64_t (**)(uint64_t))(*(void *)v5 + 24LL))(v5);
}

void sub_100DA40D8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27)
{
}

uint64_t sub_100DA4118(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = (sqlite3_stmt *)sub_100019240(*a1);
  int v5 = sqlite3_step(v4);
  if (v5 == 101) {
    return 1LL;
  }
  if (v5 != 100) {
    return 2LL;
  }
  sub_100DA689C(a1, a2);
  return 0LL;
}

uint64_t sub_100DA4174(uint64_t a1)
{
  uint64_t v3 = (sqlite3_stmt *)sub_100019240(v8);
  int v4 = sqlite3_step(v3);
  if (v4 == 100)
  {
    int v5 = (sqlite3_stmt *)sub_100019240(v8);
    uint64_t v1 = sqlite3_column_int(v5, 0);
  }

  uint64_t v6 = v8;
  uint64_t v8 = 0LL;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
  }
  if (v4 != 100) {
    return 0xFFFFFFFFLL;
  }
  return v1;
}

void sub_100DA4204( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    (*(void (**)(uint64_t))(*(void *)a10 + 8LL))(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100DA422C(uint64_t a1)
{
  return sub_100DA4174(a1 - 72);
}

void *sub_100DA4234(uint64_t a1, void *a2, const void *a3)
{
  if (a3)
  {

    *(void *)(a1 + 584) = a2;
    uint64_t v6 = *(const void **)(a1 + 592);
    if (v6) {
      _Block_release(v6);
    }
    double result = _Block_copy(a3);
    *(void *)(a1 + 592) = result;
  }

  else
  {
    uint64_t v8 = sub_10126F018();
    return (void *)sub_100DA4290(v8, v9);
  }

  return result;
}

uint64_t sub_100DA4290(uint64_t a1, double a2)
{
  uint64_t v5 = a1 + 112;
  uint64_t v4 = *(void *)(a1 + 112);
  uint64_t v6 = a1 + 72;
  v18[1] = a1 + 112;
  (*(void (**)(uint64_t))(v4 + 16))(a1 + 112);
  __int16 v19 = 256;
  if (sub_100D8A92C(v6))
  {
    sub_100B14CF8((uint64_t *)(a1 + 488), v18);
    int v7 = (sqlite3_stmt *)sub_100019240(v18[0]);
    if (sub_1003B7480(v7, 1, a2))
    {
      uint64_t v8 = *(void *)(a1 + 80);
      double v9 = (sqlite3_stmt *)sub_100019240(v18[0]);
      sub_1003BB2BC(v8, v9);
      uint64_t v10 = *(void *)(a1 + 80);
      else {
        uint64_t v11 = *(void *)(v10 + 88);
      }
      sub_1003C1EC0(v10, v11);
      *(_DWORD *)(a1 + 132) = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 160LL))(a1);
    }

    else
    {
      if (qword_101934510 != -1) {
        dispatch_once(&qword_101934510, &stru_101882978);
      }
      uint64_t v12 = (os_log_s *)qword_101934518;
      if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_FAULT, "Failed to delete records", buf, 2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934510 != -1) {
          dispatch_once(&qword_101934510, &stru_101882978);
        }
        v17[0] = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934518,  17LL,  "Failed to delete records",  v17,  2);
        int v16 = (uint8_t *)v15;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CMStrideCalRecorderDb::deleteRecordsBefore(CFTimeInterval)",  "%s\n",  v15);
        if (v16 != buf) {
          free(v16);
        }
      }
    }

    uint64_t v13 = v18[0];
    v18[0] = 0LL;
    if (v13) {
      (*(void (**)(uint64_t))(*(void *)v13 + 8LL))(v13);
    }
  }

  return (*(uint64_t (**)(uint64_t))(*(void *)v5 + 24LL))(v5);
}

void sub_100DA44F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  if (a6) {
    (*(void (**)(uint64_t))(*(void *)a6 + 8LL))(a6);
  }
  sub_1011C52D0((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_100DA453C(uint64_t a1, uint64_t *a2, NSArray **a3)
{
  if (!a3) {
    return 0LL;
  }
  uint64_t v6 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  int v7 = sub_1001BA11C(a1, a2, (uint64_t)v18);
  if (!v7)
  {
    do
    {
      uint64_t v17 = 0LL;
      uint64_t v8 = -[CLSerializableStrideCalEntry initWithStrideCalEntry:]( objc_alloc(&OBJC_CLASS___CLSerializableStrideCalEntry),  "initWithStrideCalEntry:",  v18);
      double v9 = +[NSKeyedArchiver archivedDataWithRootObject:requiringSecureCoding:error:]( &OBJC_CLASS___NSKeyedArchiver,  "archivedDataWithRootObject:requiringSecureCoding:error:",  v8,  1LL,  &v17);
      if (v17)
      {
        if (qword_101934510 != -1) {
          dispatch_once(&qword_101934510, &stru_101882978);
        }
        uint64_t v10 = (os_log_s *)qword_101934518;
        if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)std::string buf = 138412290;
          uint64_t v22 = v17;
          _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_ERROR,  "Unable to serialize stride cal entry: %@",  buf,  0xCu);
        }

        if (sub_1002921D0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934510 != -1) {
            dispatch_once(&qword_101934510, &stru_101882978);
          }
          int v19 = 138412290;
          uint64_t v20 = v17;
          LODWORD(v16) = 12;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934518,  16LL,  "Unable to serialize stride cal entry: %@",  &v19,  v16);
          uint64_t v12 = (uint8_t *)v11;
          sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CMStrideCalRecorderDb::convertToDataBlobWithCode(const CLSqliteScopedStatement &, NSArray<NSData *> **)",  "%s\n",  v11);
          if (v12 != buf) {
            free(v12);
          }
        }
      }

      else
      {
        -[NSMutableArray addObject:](v6, "addObject:", v9);
      }

      int v13 = sub_1001BA11C(a1, a2, (uint64_t)v18);
    }

    while (!v13);
    int v7 = v13;
  }

  int v15 = (NSArray *)-[NSMutableArray count](v6, "count");
  if (v15) {
    int v15 = +[NSArray arrayWithArray:](&OBJC_CLASS___NSArray, "arrayWithArray:", v6);
  }
  *a3 = v15;

  return v7 == 1;
}

BOOL sub_100DA47D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = 0LL;
  *(void *)&double v5 = objc_opt_class(&OBJC_CLASS___CLSerializableStrideCalEntry).n128_u64[0];
  id v7 = +[NSKeyedUnarchiver unarchivedObjectOfClass:fromData:error:]( &OBJC_CLASS___NSKeyedUnarchiver,  "unarchivedObjectOfClass:fromData:error:",  v6,  a2,  &v13,  v5);
  uint64_t v8 = v13;
  if (v13)
  {
    if (qword_101934510 != -1) {
      dispatch_once(&qword_101934510, &stru_101882978);
    }
    double v9 = (os_log_s *)qword_101934518;
    if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::string buf = 138412290;
      uint64_t v17 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_ERROR,  "Unable to deserialize stride cal entry: %@",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934510 != -1) {
        dispatch_once(&qword_101934510, &stru_101882978);
      }
      int v14 = 138412290;
      uint64_t v15 = v13;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934518,  16LL,  "Unable to deserialize stride cal entry: %@",  &v14,  12);
      uint64_t v11 = (uint8_t *)v10;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CMStrideCalRecorderDb::dataBlobToEntry(NSData *, CLStrideCalEntry &)",  "%s\n",  v10);
      if (v11 != buf) {
        free(v11);
      }
    }
  }

  else
  {
    [v7 getStrideCalEntry:a3];
  }

  return v8 == 0;
}

void sub_100DA49D0(uint64_t a1)
{
  if (sub_1003C1048(*(void *)(a1 + 80)))
  {
    sub_100DA4C80(a1);
    sub_1003B59A0( *(void *)(a1 + 80),  "StrideCalHistory",  (const char **)qword_10199E638,  (const std::string::value_type **)&qword_10199E938,  0);
    *(void *)(a1 + 4sub_100BDC958(v1 + 24) = sub_1003BF158(*(void *)(a1 + 80), "SELECT COUNT(*) FROM StrideCalHistory");
    *(void *)(a1 + 432) = v2;
    *(void *)(a1 + 440) = sub_1003BF158(*(void *)(a1 + 80), "SELECT * FROM StrideCalHistory ORDER BY startTime ASC");
    *(void *)(a1 + 448) = v3;
    *(void *)(a1 + 456) = sub_1003BF158( *(void *)(a1 + 80),  "SELECT * FROM StrideCalHistory WHERE pacebin == ? ORDER BY startTime DESC");
    *(void *)(a1 + 464) = v4;
    *(void *)(a1 + 472) = sub_1003BF158( *(void *)(a1 + 80),  "SELECT * FROM StrideCalHistory WHERE speed > ? AND speed <= ? ORDER BY startTime DESC");
    *(void *)(a1 + 480) = v5;
    *(void *)(a1 + 488) = sub_1003BF158(*(void *)(a1 + 80), "DELETE FROM StrideCalHistory WHERE startTime < ?");
    *(void *)(a1 + 496) = v6;
    *(void *)(a1 + 504) = sub_1003BF158(*(void *)(a1 + 80), "DELETE FROM StrideCalHistory WHERE startTime > ?");
    *(void *)(a1 + 512) = v7;
    *(void *)(a1 + 520) = sub_1003BF158(*(void *)(a1 + 80), "DELETE FROM StrideCalHistory");
    *(void *)(a1 + 528) = v8;
    *(void *)(a1 + 536) = sub_1003BF158( *(void *)(a1 + 80),  "INSERT INTO StrideCalHistory (startTime, pacebin, kvalue, kvalueTrack, score, endTime, dis tance, steps, session, speed, percentGrade, gpsSource, runningFormStrideLength, runningFor mStrideLengthMetrics)VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
    *(void *)(a1 + 544) = v9;
    *(void *)(a1 + 568) = sub_1003BF158( *(void *)(a1 + 80),  "SELECT * FROM StrideCalHistory ORDER BY startTime DESC LIMIT 1");
    *(void *)(a1 + 576) = v10;
    *(void *)(a1 + 552) = sub_1003BF158(*(void *)(a1 + 80), "UPDATE StrideCalHistory SET startTime = startTime + ?");
    *(void *)(a1 + 560) = v11;
    *(_DWORD *)(a1 + 132) = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 160LL))(a1);
  }

  else
  {
    if (qword_101934510 != -1) {
      dispatch_once(&qword_101934510, &stru_101882978);
    }
    uint64_t v12 = (os_log_s *)qword_101934518;
    if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "Device is locked and we are unable to open the database",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934510 != -1) {
        dispatch_once(&qword_101934510, &stru_101882978);
      }
      v15[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934518,  2LL,  "Device is locked and we are unable to open the database",  v15,  2);
      int v14 = (uint8_t *)v13;
      sub_10029211C("Generic", 1LL, 0, 2LL, "virtual void CMStrideCalRecorderDb::prepareSQLStatements()", "%s\n", v13);
      if (v14 != buf) {
        free(v14);
      }
    }
  }

void sub_100DA4C80(uint64_t a1)
{
  if (sub_1003B747C(*(void *)(a1 + 80), "StrideCalHistory"))
  {
    char v2 = 0;
    uint64_t v4 = 6LL;
    while (2)
    {
      uint64_t v5 = (int *)&qword_10199E638[6 * v4 + 1];
      uint64_t v6 = v4;
      while (1)
      {
        uint64_t v7 = off_1018827A0[v6];
        uint64_t v48 = v7;
        int v49 = 5;
        __int16 v50 = 0;
        char v51 = 0;
        char v52 = 0;
        ++v6;
        v5 += 12;
        if (v6 == 15)
        {
          if ((v2 & 1) == 0) {
            return;
          }
          goto LABEL_42;
        }
      }

      sub_1003C0454(*(void *)(a1 + 80));
      sub_10000CE18((uint64_t)buf);
      uint64_t v8 = sub_10000CF44(&v54, (uint64_t)"ALTER TABLE StrideCalHistory", 28LL);
      uint64_t v9 = sub_10000CF44(v8, (uint64_t)" ADD COLUMN ", 12LL);
      size_t v10 = strlen(v7);
      uint64_t v11 = sub_10000CF44(v9, (uint64_t)v7, v10);
      uint64_t v12 = sub_10000CF44(v11, (uint64_t)" ", 1LL);
      uint64_t v13 = (const char *)sub_1003BCC40(*v5);
      size_t v14 = strlen(v13);
      uint64_t v15 = sub_10000CF44(v12, (uint64_t)v13, v14);
      sub_10000CF44(v15, (uint64_t)";", 1LL);
      uint64_t v16 = *(void *)(a1 + 80);
      std::stringbuf::str(&v45, &v55);
      if ((v45.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v17 = &v45;
      }
      else {
        uint64_t v17 = (std::stringbuf::string_type *)v45.__r_.__value_.__r.__words[0];
      }
      sub_1003C0D54(v16, (char *)v17, &v43);
      uint64_t v18 = v43.__r_.__value_.__r.__words[0];
      v43.__r_.__value_.__r.__words[0] = 0LL;
      uint64_t v19 = *(void *)(a1 + 80);
      uint64_t v20 = (sqlite3_stmt *)sub_100019240(v18);
      sub_1003BB2BC(v19, v20);
      sub_10000CE18((uint64_t)&v45);
      if (!strcmp(v7, "speed"))
      {
        int v21 = sub_10000CF44(&v45.__r_.__value_.__l.__cap_, (uint64_t)"UPDATE StrideCalHistory SET ", 28LL);
        size_t v22 = strlen(v7);
        uint64_t v23 = sub_10000CF44(v21, (uint64_t)v7, v22);
        sub_10000CF44(v23, (uint64_t)" = CAST(pacebin AS FLOAT);", 26LL);
      }

      if (!strcmp(v7, "gpsSource"))
      {
        uint64_t v29 = sub_10000CF44(&v45.__r_.__value_.__l.__cap_, (uint64_t)"UPDATE StrideCalHistory SET ", 28LL);
        size_t v30 = strlen(v7);
        __int16 v31 = sub_10000CF44(v29, (uint64_t)v7, v30);
        unint64_t v32 = sub_10000CF44(v31, (uint64_t)" = ", 3LL);
        unint64_t v26 = (void *)std::ostream::operator<<(v32, 1LL);
        unint64_t v27 = ";";
        uint64_t v28 = 1LL;
      }

      else
      {
        int v24 = sub_10000CF44(&v45.__r_.__value_.__l.__cap_, (uint64_t)"UPDATE StrideCalHistory SET ", 28LL);
        size_t v25 = strlen(v7);
        unint64_t v26 = sub_10000CF44(v24, (uint64_t)v7, v25);
        unint64_t v27 = " = 0;";
        uint64_t v28 = 5LL;
      }

      sub_10000CF44(v26, (uint64_t)v27, v28);
      uint64_t v33 = *(void *)(a1 + 80);
      std::stringbuf::str(&v43, &v46);
      if ((v43.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        __int128 v34 = &v43;
      }
      else {
        __int128 v34 = (std::stringbuf::string_type *)v43.__r_.__value_.__r.__words[0];
      }
      sub_1003C0D54(v33, (char *)v34, &v44);
      uint64_t v35 = v44;
      uint64_t v44 = 0LL;
      uint64_t v36 = *(void *)(a1 + 80);
      __int128 v37 = (sqlite3_stmt *)sub_100019240(v35);
      sub_1003BB2BC(v36, v37);
      sub_1003C05BC(*(void *)(a1 + 80));
      if (v35) {
        (*(void (**)(uint64_t))(*(void *)v35 + 8LL))(v35);
      }
      v45.__r_.__value_.__r.__words[0] = v3;
      *(std::string::size_type *)((char *)v45.__r_.__value_.__r.__words + *(void *)(v3 - 24)) = v42;
      v45.__r_.__value_.__l.__cap_ = v41;
      std::streambuf::~streambuf(&v46);
      std::ios::~ios(&v47);
      if (v18) {
        (*(void (**)(uint64_t))(*(void *)v18 + 8LL))(v18);
      }
      *(void *)std::string buf = v3;
      *(void *)&buf[*(void *)(v3 - 24)] = v42;
      std::string::size_type v54 = v41;
      std::streambuf::~streambuf(&v55);
      std::ios::~ios(&v56);
      uint64_t v4 = v6 + 1;
      char v2 = 1;
      if (v6 != 14) {
        continue;
      }
      break;
    }

void sub_100DA525C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, void *__p, uint64_t a22, int a23, __int16 a24, char a25, char a26, uint64_t a27, void *a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a28);
  if (v70) {
    (*(void (**)(uint64_t))(*(void *)v70 + 8LL))(v70);
  }
  sub_1011F8850((uint64_t)&a70);
  _Unwind_Resume(a1);
}

uint64_t sub_100DA52FC(uint64_t a1)
{
  uint64_t result = sub_100D8A92C(a1 + 72);
  if ((_DWORD)result)
  {
    sub_100B14CF8((uint64_t *)(a1 + 520), &v5);
    uint64_t v3 = *(void *)(a1 + 80);
    uint64_t v4 = (sqlite3_stmt *)sub_100019240(v5);
    sub_1003BB2BC(v3, v4);
    *(_DWORD *)(a1 + 132) = 0;
    uint64_t result = v5;
    uint64_t v5 = 0LL;
    if (result) {
      return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
    }
  }

  return result;
}

void sub_100DA536C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    (*(void (**)(uint64_t))(*(void *)a10 + 8LL))(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100DA5390(uint64_t a1)
{
  return sub_100DA52FC(a1 - 72);
}

uint64_t sub_100DA5398(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_100D8A92C(a1 + 72);
  if ((_DWORD)result)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 120LL))(a1, a2, 1LL);
    sub_100B14CF8((uint64_t *)(a1 + 504), &v12);
    uint64_t v5 = (sqlite3_stmt *)sub_100019240(v12);
    if (sub_1003B7480(v5, 1, *(double *)(a2 + 8)))
    {
      uint64_t v6 = *(void *)(a1 + 80);
      uint64_t v7 = (sqlite3_stmt *)sub_100019240(v12);
      sub_1003BB2BC(v6, v7);
      *(_DWORD *)(a1 + 132) = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 160LL))(a1);
    }

    else
    {
      if (qword_101934510 != -1) {
        dispatch_once(&qword_101934510, &stru_101882978);
      }
      uint64_t v8 = (os_log_s *)qword_101934518;
      if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_FAULT, "Failed to delete records", buf, 2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934510 != -1) {
          dispatch_once(&qword_101934510, &stru_101882978);
        }
        __int16 v11 = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934518,  17LL,  "Failed to delete records",  &v11,  2);
        size_t v10 = (uint8_t *)v9;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CMStrideCalRecorderDb::deleteRecordsAfterInsertUL(const CLStrideCalEntry &)",  "%s\n",  v9);
        if (v10 != buf) {
          free(v10);
        }
      }
    }

    uint64_t result = v12;
    uint64_t v12 = 0LL;
    if (result) {
      return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
    }
  }

  return result;
}

void sub_100DA55B4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (a12) {
    (*(void (**)(uint64_t))(*(void *)a12 + 8LL))(a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100DA55E4(uint64_t a1, double a2)
{
  uint64_t result = sub_100D8A92C(a1 + 72);
  if ((_DWORD)result)
  {
    sub_100B14CF8((uint64_t *)(a1 + 552), &v12);
    uint64_t v5 = (sqlite3_stmt *)sub_100019240(v12);
    if (sub_1003B7480(v5, 1, a2))
    {
      uint64_t v6 = *(void *)(a1 + 80);
      uint64_t v7 = (sqlite3_stmt *)sub_100019240(v12);
      sub_1003BB2BC(v6, v7);
    }

    else
    {
      if (qword_101934510 != -1) {
        dispatch_once(&qword_101934510, &stru_101882978);
      }
      uint64_t v8 = (os_log_s *)qword_101934518;
      if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_FAULT, "Failed to shift records", buf, 2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934510 != -1) {
          dispatch_once(&qword_101934510, &stru_101882978);
        }
        __int16 v11 = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934518,  17LL,  "Failed to shift records",  &v11,  2);
        size_t v10 = (uint8_t *)v9;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CMStrideCalRecorderDb::shiftRecordsByUL(CFTimeInterval)",  "%s\n",  v9);
        if (v10 != buf) {
          free(v10);
        }
      }
    }

    uint64_t result = v12;
    uint64_t v12 = 0LL;
    if (result) {
      return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
    }
  }

  return result;
}

void sub_100DA57DC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (a12) {
    (*(void (**)(uint64_t))(*(void *)a12 + 8LL))(a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100DA580C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_100D8A92C(a1 + 72);
  if ((_DWORD)result)
  {
    if (qword_101934510 != -1) {
      dispatch_once(&qword_101934510, &stru_101882978);
    }
    uint64_t v5 = (os_log_s *)qword_101934518;
    if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v6 = *(void *)(a2 + 8);
      int v7 = *(_DWORD *)(a2 + 16);
      uint64_t v8 = *(void *)(a2 + 24);
      uint64_t v9 = *(void *)(a2 + 32);
      uint64_t v10 = *(void *)(a2 + 40);
      uint64_t v11 = *(void *)(a2 + 48);
      uint64_t v12 = *(void *)(a2 + 56);
      int v13 = *(_DWORD *)(a2 + 64);
      int v14 = *(_DWORD *)(a2 + 68);
      uint64_t v16 = *(void *)(a2 + 72);
      uint64_t v15 = *(void *)(a2 + 80);
      int v17 = *(_DWORD *)(a2 + 88);
      uint64_t v18 = *(void *)(a2 + 104);
      int v19 = *(_DWORD *)(a2 + 112);
      *(_DWORD *)std::string buf = 134352384;
      *(void *)&uint8_t buf[4] = v6;
      *(_WORD *)&_BYTE buf[12] = 1024;
      *(_DWORD *)&_BYTE buf[14] = v7;
      *(_WORD *)&buf[18] = 2048;
      *(void *)&buf[20] = v8;
      *(_WORD *)&_BYTE buf[28] = 2048;
      *(void *)&buf[30] = v9;
      *(_WORD *)&buf[38] = 2048;
      *(void *)&buf[40] = v10;
      *(_WORD *)char v93 = 2050;
      *(void *)&v93[2] = v11;
      *(_WORD *)&v93[10] = 2048;
      *(void *)&v93[12] = v12;
      *(_WORD *)&v93[20] = 1024;
      *(_DWORD *)&v93[22] = v13;
      *(_WORD *)&v93[26] = 1024;
      *(_DWORD *)&v93[28] = v14;
      *(_WORD *)uint64_t v94 = 2048;
      *(void *)&v94[2] = v16;
      *(_WORD *)&v94[10] = 2048;
      *(void *)&v94[12] = v15;
      *(_WORD *)&v94[20] = 1024;
      *(_DWORD *)&v94[22] = v17;
      *(_WORD *)&v94[26] = 2048;
      *(void *)&v94[28] = v18;
      *(_WORD *)&v94[36] = 1024;
      *(_DWORD *)&v94[38] = v19;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "StrideCalDb (%{public}f,%d,%f,%f,%f,%{public}f,%f,%d,%d,%f,%f,%d,%.2f,%d).",  buf,  0x7Au);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934510 != -1) {
        dispatch_once(&qword_101934510, &stru_101882978);
      }
      uint64_t v40 = *(void *)(a2 + 8);
      int v41 = *(_DWORD *)(a2 + 16);
      uint64_t v42 = *(void *)(a2 + 24);
      uint64_t v43 = *(void *)(a2 + 32);
      uint64_t v44 = *(void *)(a2 + 40);
      uint64_t v45 = *(void *)(a2 + 48);
      uint64_t v46 = *(void *)(a2 + 56);
      int v47 = *(_DWORD *)(a2 + 64);
      int v48 = *(_DWORD *)(a2 + 68);
      uint64_t v50 = *(void *)(a2 + 72);
      uint64_t v49 = *(void *)(a2 + 80);
      int v51 = *(_DWORD *)(a2 + 88);
      uint64_t v52 = *(void *)(a2 + 104);
      int v53 = *(_DWORD *)(a2 + 112);
      *(_DWORD *)uint64_t v65 = 134352384;
      *(void *)&v65[4] = v40;
      __int16 v66 = 1024;
      int v67 = v41;
      __int16 v68 = 2048;
      uint64_t v69 = v42;
      __int16 v70 = 2048;
      uint64_t v71 = v43;
      __int16 v72 = 2048;
      uint64_t v73 = v44;
      __int16 v74 = 2050;
      uint64_t v75 = v45;
      __int16 v76 = 2048;
      uint64_t v77 = v46;
      __int16 v78 = 1024;
      int v79 = v47;
      __int16 v80 = 1024;
      int v81 = v48;
      __int16 v82 = 2048;
      uint64_t v83 = v50;
      __int16 v84 = 2048;
      uint64_t v85 = v49;
      __int16 v86 = 1024;
      int v87 = v51;
      __int16 v88 = 2048;
      uint64_t v89 = v52;
      __int16 v90 = 1024;
      int v91 = v53;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934518,  2LL,  "StrideCalDb (%{public}f,%d,%f,%f,%f,%{public}f,%f,%d,%d,%f,%f,%d,%.2f,%d).",  v65,  122);
      std::stringbuf v55 = (char *)v54;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CMStrideCalRecorderDb::insertRecordUL(const CLStrideCalEntry &, BOOL)",  "%s\n",  v54);
      if (v55 != buf) {
        free(v55);
      }
    }

    __int128 v20 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)&v93[16] = *(_OWORD *)(a2 + 64);
    *(_OWORD *)uint64_t v94 = v20;
    *(_OWORD *)&v94[16] = *(_OWORD *)(a2 + 96);
    *(void *)&v94[32] = *(void *)(a2 + 112);
    __int128 v21 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)std::string buf = *(_OWORD *)a2;
    *(_OWORD *)&uint8_t buf[16] = v21;
    __int128 v22 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)&buf[32] = *(_OWORD *)(a2 + 32);
    *(_OWORD *)char v93 = v22;
    sub_100B14CF8((uint64_t *)(a1 + 536), v65);
    uint64_t v23 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)v65);
    if (sub_1003B7480(v23, 1, *(double *)(a2 + 8)))
    {
      int v24 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)v65);
      if (sub_1003C2AF0(v24, 2, *(_DWORD *)(a2 + 16)))
      {
        size_t v25 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)v65);
        if (sub_1003B7480(v25, 3, *(double *)(a2 + 24)))
        {
          unint64_t v26 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)v65);
          if (sub_1003B7480(v26, 4, *(double *)(a2 + 32)))
          {
            unint64_t v27 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)v65);
            if (sub_1003B7480(v27, 5, *(double *)(a2 + 40)))
            {
              uint64_t v28 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)v65);
              if (sub_1003B7480(v28, 6, *(double *)(a2 + 48)))
              {
                uint64_t v29 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)v65);
                if (sub_1003B7480(v29, 7, *(double *)(a2 + 56)))
                {
                  size_t v30 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)v65);
                  if (sub_1003C28BC(v30, 8, *(_DWORD *)(a2 + 64)))
                  {
                    __int16 v31 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)v65);
                    if (sub_1003C28BC(v31, 9, *(_DWORD *)(a2 + 68)))
                    {
                      unint64_t v32 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)v65);
                      if (sub_1003B7480(v32, 10, *(double *)(a2 + 72)))
                      {
                        uint64_t v33 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)v65);
                        if (sub_1003B7480(v33, 11, *(double *)(a2 + 80)))
                        {
                          __int128 v34 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)v65);
                          if (sub_1003C28BC(v34, 12, *(_DWORD *)(a2 + 88)))
                          {
                            uint64_t v35 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)v65);
                            if (sub_1003B7480(v35, 13, *(double *)(a2 + 104)))
                            {
                              uint64_t v36 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)v65);
                              if (sub_1003C28BC(v36, 14, *(_DWORD *)(a2 + 112)))
                              {
                                uint64_t v37 = *(void *)(a1 + 80);
                                __int128 v38 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)v65);
                                sub_1003BB2BC(v37, v38);
                                ++*(_DWORD *)(a1 + 132);
                                __int128 v39 = *(void **)(a1 + 584);
                                if (v39)
                                {
                                  if (*(void *)(a1 + 592))
                                  {
                                    v56[1] = 3221225472LL;
                                    __int128 v61 = *(_OWORD *)&v93[16];
                                    __int128 v62 = *(_OWORD *)v94;
                                    __int128 v63 = *(_OWORD *)&v94[16];
                                    __int128 v57 = *(_OWORD *)buf;
                                    __int128 v58 = *(_OWORD *)&buf[16];
                                    __int128 v59 = *(_OWORD *)&buf[32];
                                    v56[0] = _NSConcreteStackBlock;
                                    v56[2] = sub_100DA5D74;
                                    v56[3] = &unk_101881028;
                                    v56[4] = a1;
                                    uint64_t v64 = *(void *)&v94[32];
                                    __int128 v60 = *(_OWORD *)v93;
                                    [v39 async:v56];
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

    uint64_t result = *(void *)v65;
    *(void *)uint64_t v65 = 0LL;
    if (result) {
      return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
    }
  }

  return result;
}

void sub_100DA5D48( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31)
{
}

uint64_t sub_100DA5D74(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 592LL);
  __int128 v2 = *(_OWORD *)(a1 + 120);
  v6[4] = *(_OWORD *)(a1 + 104);
  void v6[5] = v2;
  v6[6] = *(_OWORD *)(a1 + 136);
  uint64_t v7 = *(void *)(a1 + 152);
  __int128 v3 = *(_OWORD *)(a1 + 56);
  __int128 v4 = *(_OWORD *)(a1 + 88);
  _DWORD v6[2] = *(_OWORD *)(a1 + 72);
  v6[3] = v4;
  v6[0] = *(_OWORD *)(a1 + 40);
  v6[1] = v3;
  return (*(uint64_t (**)(uint64_t, _OWORD *))(v1 + 16))(v1, v6);
}

uint64_t sub_100DA5DD8()
{
  return 0LL;
}

uint64_t sub_100DA5DE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100DA4118(&v19, (uint64_t)&v8);
  if (!(_DWORD)v4)
  {
    *(_DWORD *)a2 = v8;
    *(void *)(a2 + 8) = v9;
    *(_DWORD *)(a2 + 16) = v10;
    *(_OWORD *)(a2 + sub_100BDC958(v1 + 24) = v11;
    *(_OWORD *)(a2 + 40) = v12;
    uint64_t v5 = v14;
    *(void *)(a2 + 56) = v13;
    *(void *)(a2 + 64) = v5;
    *(_OWORD *)(a2 + 72) = v15;
    *(_DWORD *)(a2 + 88) = v16;
    *(void *)(a2 + 104) = v17;
    *(_DWORD *)(a2 + 112) = v18;
  }

  uint64_t v6 = v19;
  uint64_t v19 = 0LL;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
  }
  return v4;
}

void sub_100DA5EA8(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void *)(v1 - 24);
  *(void *)(v1 - sub_100BDC958(v1 + 24) = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  _Unwind_Resume(exception_object);
}

NSArray *sub_100DA5ECC(uint64_t a1, double a2)
{
  uint64_t v5 = a1 + 112;
  uint64_t v4 = *(void *)(a1 + 112);
  uint64_t v6 = a1 + 72;
  v71[1] = a1 + 112;
  (*(void (**)(uint64_t))(v4 + 16))(a1 + 112);
  __int16 v72 = 256;
  __int128 __p = 0LL;
  __int16 v70 = 0LL;
  v71[0] = 0LL;
  if (sub_100D8A92C(v6))
  {
    sub_100B14CF8((uint64_t *)(a1 + 472), &v68);
    -[CMPedometerTableRawSpeedToKValue binIntervalForRawSpeed:]( +[CMPedometerTableRawSpeedToKValue sharedInstance]( &OBJC_CLASS___CMPedometerTableRawSpeedToKValue,  "sharedInstance"),  "binIntervalForRawSpeed:",  a2);
    double v8 = v7;
    double v10 = v9;
    __int128 v11 = (sqlite3_stmt *)sub_100019240(v68);
    if (sub_1003C28BC(v11, 1, (int)v8))
    {
      __int128 v12 = (sqlite3_stmt *)sub_100019240(v68);
      if (sub_1003C28BC(v12, 2, (int)v10))
      {
        int v51 = v71;
        while (!sub_100DA4118(&v68, (uint64_t)&v53))
        {
          int v13 = v53;
          uint64_t v14 = v54;
          int v15 = v55;
          uint64_t v16 = v56;
          uint64_t v17 = v57;
          uint64_t v19 = v58;
          uint64_t v18 = v59;
          uint64_t v20 = v60;
          int v22 = v61;
          int v21 = v62;
          uint64_t v24 = v63;
          uint64_t v23 = v64;
          int v25 = v65;
          uint64_t v26 = v66;
          int v27 = v67;
          uint64_t v28 = v70;
          if ((unint64_t)v70 >= v71[0])
          {
            uint64_t v52 = v54;
            unint64_t v30 = 0xEEEEEEEEEEEEEEEFLL * ((v70 - (_BYTE *)__p) >> 3);
            unint64_t v31 = v30 + 1;
            if (v30 + 1 > 0x222222222222222LL) {
              sub_100007008();
            }
            else {
              unint64_t v32 = v31;
            }
            if (v32) {
              uint64_t v33 = (char *)sub_1000BAE04((uint64_t)v71, v32);
            }
            else {
              uint64_t v33 = 0LL;
            }
            __int128 v34 = &v33[120 * v30];
            *(_DWORD *)__int128 v34 = v13;
            *((void *)v34 + 1) = v52;
            *((_DWORD *)v34 + 4) = v15;
            *((void *)v34 + 3) = v16;
            *((void *)v34 + 4) = v17;
            *((void *)v34 + 5) = v19;
            *((void *)v34 + 6) = v18;
            *((void *)v34 + 7) = v20;
            *((_DWORD *)v34 + 16) = v22;
            *((_DWORD *)v34 + 17) = v21;
            *((void *)v34 + 9) = v24;
            *((void *)v34 + 10) = v23;
            *((_DWORD *)v34 + 22) = v25;
            *((void *)v34 + 13) = v26;
            *((_DWORD *)v34 + 28) = v27;
            uint64_t v36 = (char *)__p;
            uint64_t v35 = v70;
            uint64_t v37 = v34;
            if (v70 != __p)
            {
              do
              {
                __int128 v38 = *(_OWORD *)(v35 - 120);
                __int128 v39 = *(_OWORD *)(v35 - 104);
                __int128 v40 = *(_OWORD *)(v35 - 88);
                *(_OWORD *)(v37 - 72) = *(_OWORD *)(v35 - 72);
                *(_OWORD *)(v37 - 88) = v40;
                *(_OWORD *)(v37 - 104) = v39;
                *(_OWORD *)(v37 - 120) = v38;
                __int128 v41 = *(_OWORD *)(v35 - 56);
                __int128 v42 = *(_OWORD *)(v35 - 40);
                __int128 v43 = *(_OWORD *)(v35 - 24);
                *((void *)v37 - 1) = *((void *)v35 - 1);
                *(_OWORD *)(v37 - sub_100BDC958(v1 + 24) = v43;
                *(_OWORD *)(v37 - 40) = v42;
                *(_OWORD *)(v37 - 56) = v41;
                v37 -= 120;
                v35 -= 120;
              }

              while (v35 != v36);
              uint64_t v35 = v36;
            }

            uint64_t v29 = v34 + 120;
            __int128 __p = v37;
            __int16 v70 = v34 + 120;
            v71[0] = &v33[120 * v32];
            if (v35) {
              operator delete(v35);
            }
          }

          else
          {
            *(_DWORD *)__int16 v70 = v53;
            *((void *)v28 + 1) = v14;
            *((_DWORD *)v28 + 4) = v15;
            *((void *)v28 + 3) = v16;
            *((void *)v28 + 4) = v17;
            *((void *)v28 + 5) = v19;
            *((void *)v28 + 6) = v18;
            *((void *)v28 + 7) = v20;
            *((_DWORD *)v28 + 16) = v22;
            *((_DWORD *)v28 + 17) = v21;
            *((void *)v28 + 9) = v24;
            *((void *)v28 + 10) = v23;
            *((_DWORD *)v28 + 22) = v25;
            *((void *)v28 + 13) = v26;
            uint64_t v29 = v28 + 120;
            *((_DWORD *)v28 + 28) = v27;
          }

          __int16 v70 = v29;
        }
      }
    }

    uint64_t v45 = v68;
    uint64_t v68 = 0LL;
    if (v45) {
      (*(void (**)(uint64_t))(*(void *)v45 + 8LL))(v45);
    }
    unint64_t v44 = 0xEEEEEEEEEEEEEEEFLL * ((v70 - (_BYTE *)__p) >> 3);
  }

  else
  {
    unint64_t v44 = 0LL;
  }

  uint64_t v46 = +[NSMutableArray arrayWithCapacity:](&OBJC_CLASS___NSMutableArray, "arrayWithCapacity:", v44, v51);
  int v47 = (char *)__p;
  int v48 = v70;
  if (__p != v70)
  {
    do
    {
      -[NSMutableArray addObject:]( v46,  "addObject:",  +[NSData dataWithBytes:length:](&OBJC_CLASS___NSData, "dataWithBytes:length:", v47, 120LL));
      v47 += 120;
    }

    while (v47 != v48);
  }

  uint64_t v49 = +[NSArray arrayWithArray:](&OBJC_CLASS___NSArray, "arrayWithArray:", v46);
  if (__p)
  {
    __int16 v70 = (char *)__p;
    operator delete(__p);
  }

  (*(void (**)(uint64_t))(*(void *)v5 + 24LL))(v5);
  return v49;
}

void sub_100DA6240( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, void *__p, uint64_t a27, uint64_t a28, char a29)
{
  if (__p) {
    operator delete(__p);
  }
  sub_1011C52D0((uint64_t)&a29);
  _Unwind_Resume(a1);
}

BOOL sub_100DA629C(uint64_t a1, void **a2)
{
  if ((sub_100D8A92C(a1 + 72) & 1) != 0)
  {
    sub_1003C0D54( *(void *)(a1 + 80),  "SELECT * FROM StrideCalHistory WHERE (runningFormStrideLength > 0 AND session = ?);",
      buf);
    uint64_t v4 = *(void *)buf;
    v52[0] = *(void *)buf;
    uint64_t v5 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)buf);
    BOOL v6 = sub_1003C28BC(v5, 1, 17);
    BOOL v7 = v6;
    if (v6)
    {
      BOOL v48 = v6;
      uint64_t v49 = v4;
      while (!sub_100DA4118(v52, (uint64_t)buf))
      {
        int v8 = *(_DWORD *)buf;
        uint64_t v9 = v54;
        int v10 = v55;
        uint64_t v11 = v56;
        uint64_t v12 = v57;
        uint64_t v14 = v58;
        uint64_t v13 = v59;
        uint64_t v15 = v60;
        int v17 = v61;
        int v16 = v62;
        uint64_t v19 = v63;
        uint64_t v18 = v64;
        int v20 = v65;
        uint64_t v21 = v66;
        int v22 = v67;
        uint64_t v23 = (char *)a2[1];
        uint64_t v24 = (char *)a2[2];
        if (v23 >= v24)
        {
          uint64_t v50 = v54;
          unint64_t v26 = 0xEEEEEEEEEEEEEEEFLL * ((v23 - (_BYTE *)*a2) >> 3);
          unint64_t v27 = v26 + 1;
          if (v26 + 1 > 0x222222222222222LL) {
            sub_100007008();
          }
          unint64_t v28 = 0xEEEEEEEEEEEEEEEFLL * ((v24 - (_BYTE *)*a2) >> 3);
          if (2 * v28 > v27) {
            unint64_t v27 = 2 * v28;
          }
          if (v28 >= 0x111111111111111LL) {
            unint64_t v29 = 0x222222222222222LL;
          }
          else {
            unint64_t v29 = v27;
          }
          if (v29) {
            unint64_t v30 = (char *)sub_1000BAE04((uint64_t)(a2 + 2), v29);
          }
          else {
            unint64_t v30 = 0LL;
          }
          unint64_t v31 = &v30[120 * v26];
          *(_DWORD *)unint64_t v31 = v8;
          *((void *)v31 + 1) = v50;
          *((_DWORD *)v31 + 4) = v10;
          *((void *)v31 + 3) = v11;
          *((void *)v31 + 4) = v12;
          *((void *)v31 + 5) = v14;
          *((void *)v31 + 6) = v13;
          *((void *)v31 + 7) = v15;
          *((_DWORD *)v31 + 16) = v17;
          *((_DWORD *)v31 + 17) = v16;
          *((void *)v31 + 9) = v19;
          *((void *)v31 + 10) = v18;
          *((_DWORD *)v31 + 22) = v20;
          *((void *)v31 + 13) = v21;
          *((_DWORD *)v31 + 28) = v22;
          uint64_t v33 = (char *)*a2;
          unint64_t v32 = (char *)a2[1];
          __int128 v34 = v31;
          if (v32 != *a2)
          {
            do
            {
              __int128 v35 = *(_OWORD *)(v32 - 120);
              __int128 v36 = *(_OWORD *)(v32 - 104);
              __int128 v37 = *(_OWORD *)(v32 - 88);
              *(_OWORD *)(v34 - 72) = *(_OWORD *)(v32 - 72);
              *(_OWORD *)(v34 - 88) = v37;
              *(_OWORD *)(v34 - 104) = v36;
              *(_OWORD *)(v34 - 120) = v35;
              __int128 v38 = *(_OWORD *)(v32 - 56);
              __int128 v39 = *(_OWORD *)(v32 - 40);
              __int128 v40 = *(_OWORD *)(v32 - 24);
              *((void *)v34 - 1) = *((void *)v32 - 1);
              *(_OWORD *)(v34 - sub_100BDC958(v1 + 24) = v40;
              *(_OWORD *)(v34 - 40) = v39;
              *(_OWORD *)(v34 - 56) = v38;
              v34 -= 120;
              v32 -= 120;
            }

            while (v32 != v33);
            unint64_t v32 = (char *)*a2;
          }

          int v25 = v31 + 120;
          *a2 = v34;
          a2[1] = v31 + 120;
          a2[2] = &v30[120 * v29];
          if (v32) {
            operator delete(v32);
          }
        }

        else
        {
          *(_DWORD *)uint64_t v23 = *(_DWORD *)buf;
          *((void *)v23 + 1) = v9;
          *((_DWORD *)v23 + 4) = v10;
          *((void *)v23 + 3) = v11;
          *((void *)v23 + 4) = v12;
          *((void *)v23 + 5) = v14;
          *((void *)v23 + 6) = v13;
          *((void *)v23 + 7) = v15;
          *((_DWORD *)v23 + 16) = v17;
          *((_DWORD *)v23 + 17) = v16;
          *((void *)v23 + 9) = v19;
          *((void *)v23 + 10) = v18;
          *((_DWORD *)v23 + 22) = v20;
          *((void *)v23 + 13) = v21;
          int v25 = v23 + 120;
          *((_DWORD *)v23 + 28) = v22;
        }

        a2[1] = v25;
      }

      uint64_t v4 = v49;
      BOOL v7 = v48;
    }

    else
    {
      if (qword_101934510 != -1) {
        dispatch_once(&qword_101934510, &stru_101882978);
      }
      __int128 v42 = (os_log_s *)qword_101934518;
      if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v42,  OS_LOG_TYPE_ERROR,  "[CMStrideCalRecorderDb] queryStrideLengthTracks: failed to bind statement",  buf,  2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934510 != -1) {
          dispatch_once(&qword_101934510, &stru_101882978);
        }
        v51[0] = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934518,  16LL,  "[CMStrideCalRecorderDb] queryStrideLengthTracks: failed to bind statement",  v51,  2);
        unint64_t v44 = (uint8_t *)v43;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CMStrideCalRecorderDb::queryStrideLengthTracks(std::vector<CLStrideCalEntry> &) const",  "%s\n",  v43);
        if (v44 != buf) {
          free(v44);
        }
      }
    }

    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
    }
  }

  else
  {
    if (qword_101934510 != -1) {
      dispatch_once(&qword_101934510, &stru_101882978);
    }
    __int128 v41 = (os_log_s *)qword_101934518;
    if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_ERROR,  "[CMStrideCalRecorderDb] queryStrideLengthTracks: database inaccessible",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934510 != -1) {
        dispatch_once(&qword_101934510, &stru_101882978);
      }
      LOWORD(v52[0]) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934518,  16LL,  "[CMStrideCalRecorderDb] queryStrideLengthTracks: database inaccessible",  v52,  2);
      int v47 = (uint8_t *)v46;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CMStrideCalRecorderDb::queryStrideLengthTracks(std::vector<CLStrideCalEntry> &) const",  "%s\n",  v46);
      if (v47 != buf) {
        free(v47);
      }
    }

    return 0LL;
  }

  return v7;
}

void sub_100DA67C0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (v12) {
    (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100DA67FC@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "StrideCalHistory");
}

void *sub_100DA680C@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "StrideCalHistory");
}

double sub_100DA681C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  *(_DWORD *)a3 = v6;
  *(void *)(a3 + 8) = v7;
  *(_DWORD *)(a3 + 16) = v8;
  *(_OWORD *)(a3 + sub_100BDC958(v1 + 24) = v9;
  *(_OWORD *)(a3 + 40) = v10;
  uint64_t v4 = v12;
  *(void *)(a3 + 56) = v11;
  *(void *)(a3 + 64) = v4;
  *(_OWORD *)(a3 + 72) = v13;
  *(_DWORD *)(a3 + 88) = v14;
  double result = v15;
  *(double *)(a3 + 104) = v15;
  *(_DWORD *)(a3 + 112) = v16;
  return result;
}

uint64_t sub_100DA689C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = (sqlite3_stmt *)sub_100019240(*a1);
  *(_DWORD *)a2 = sqlite3_column_int(v4, 0);
  uint64_t v5 = (sqlite3_stmt *)sub_100019240(*a1);
  *(double *)(a2 + 8) = sqlite3_column_double(v5, 1);
  int v6 = (sqlite3_stmt *)sub_100019240(*a1);
  *(_DWORD *)(a2 + 16) = sqlite3_column_int(v6, 2);
  uint64_t v7 = (sqlite3_stmt *)sub_100019240(*a1);
  *(double *)(a2 + sub_100BDC958(v1 + 24) = sqlite3_column_double(v7, 3);
  int v8 = (sqlite3_stmt *)sub_100019240(*a1);
  *(double *)(a2 + 32) = sqlite3_column_double(v8, 4);
  __int128 v9 = (sqlite3_stmt *)sub_100019240(*a1);
  *(double *)(a2 + 40) = sqlite3_column_double(v9, 5);
  __int128 v10 = (sqlite3_stmt *)sub_100019240(*a1);
  *(double *)(a2 + 48) = sqlite3_column_double(v10, 6);
  uint64_t v11 = (sqlite3_stmt *)sub_100019240(*a1);
  *(double *)(a2 + 56) = sqlite3_column_double(v11, 7);
  uint64_t v12 = (sqlite3_stmt *)sub_100019240(*a1);
  *(_DWORD *)(a2 + 64) = sqlite3_column_int(v12, 8);
  __int128 v13 = (sqlite3_stmt *)sub_100019240(*a1);
  *(_DWORD *)(a2 + 68) = sqlite3_column_int(v13, 9);
  int v14 = (sqlite3_stmt *)sub_100019240(*a1);
  *(double *)(a2 + 72) = sqlite3_column_double(v14, 10);
  double v15 = (sqlite3_stmt *)sub_100019240(*a1);
  *(double *)(a2 + 80) = sqlite3_column_double(v15, 11);
  int v16 = (sqlite3_stmt *)sub_100019240(*a1);
  *(_DWORD *)(a2 + 88) = sqlite3_column_int(v16, 12);
  int v17 = (sqlite3_stmt *)sub_100019240(*a1);
  *(double *)(a2 + 96) = sqlite3_column_double(v17, 13);
  uint64_t v18 = (sqlite3_stmt *)sub_100019240(*a1);
  uint64_t result = sqlite3_column_int(v18, 14);
  *(_DWORD *)(a2 + 104) = result;
  return result;
}

uint64_t sub_100DA69E8(void *a1, void **a2, double a3, double a4)
{
  __int128 v10 = (*(void *(**)(void **__return_ptr))(*a1 + 64LL))(v62);
  if ((SHIBYTE(v63) & 0x80000000) == 0)
  {
    if (HIBYTE(v63)) {
      goto LABEL_3;
    }
LABEL_39:
    sub_10126F1A0(v10);
    goto LABEL_40;
  }

  uint64_t v4 = (std::stringbuf *)v62[1];
  operator delete(v62[0]);
  if (!v4) {
    goto LABEL_39;
  }
LABEL_3:
  sub_10000CE18((uint64_t)v62);
  uint64_t v11 = sub_10000CF44(&v63, (uint64_t)"SELECT * FROM ", 14LL);
  (*(void (**)(void **__return_ptr, void *))(*a1 + 64LL))(__p, a1);
  if ((SBYTE7(v53) & 0x80u) == 0) {
    uint64_t v12 = __p;
  }
  else {
    uint64_t v12 = (void **)__p[0];
  }
  if ((SBYTE7(v53) & 0x80u) == 0) {
    uint64_t v13 = BYTE7(v53);
  }
  else {
    uint64_t v13 = (uint64_t)__p[1];
  }
  int v14 = sub_10000CF44(v11, (uint64_t)v12, v13);
  sub_10000CF44(v14, (uint64_t)" WHERE startTime > ? and startTime <= ? ORDER BY rowid ASC", 58LL);
  if (SBYTE7(v53) < 0) {
    operator delete(__p[0]);
  }
  uint64_t v15 = a1[10];
  uint64_t v4 = &v64;
  std::stringbuf::str((std::stringbuf::string_type *)__p, &v64);
  if ((SBYTE7(v53) & 0x80u) == 0) {
    int v16 = (char *)__p;
  }
  else {
    int v16 = (char *)__p[0];
  }
  sub_1003C0D54(v15, v16, &v60);
  uint64_t v5 = v60;
  uint64_t v60 = 0LL;
  uint64_t v61 = v5;
  if (SBYTE7(v53) < 0) {
    operator delete(__p[0]);
  }
  int v17 = (sqlite3_stmt *)sub_100019240(v5);
  if (sub_1003B7480(v17, 1, a3))
  {
    uint64_t v18 = (sqlite3_stmt *)sub_100019240(v5);
    if (sub_1003B7480(v18, 2, a4))
    {
      while (1)
      {
        uint64_t v19 = sub_1001BA11C((uint64_t)a1, &v61, (uint64_t)__p);
        if ((_DWORD)v19) {
          break;
        }
        int v20 = (char *)a2[1];
        uint64_t v21 = (char *)a2[2];
        if (v20 >= v21)
        {
          unint64_t v29 = 0xEEEEEEEEEEEEEEEFLL * ((v20 - (_BYTE *)*a2) >> 3);
          unint64_t v30 = v29 + 1;
          if (v29 + 1 > 0x222222222222222LL) {
            sub_100007008();
          }
          unint64_t v31 = 0xEEEEEEEEEEEEEEEFLL * ((v21 - (_BYTE *)*a2) >> 3);
          if (2 * v31 > v30) {
            unint64_t v30 = 2 * v31;
          }
          if (v31 >= 0x111111111111111LL) {
            unint64_t v32 = 0x222222222222222LL;
          }
          else {
            unint64_t v32 = v30;
          }
          if (v32) {
            uint64_t v33 = (char *)sub_1000BAE04((uint64_t)(a2 + 2), v32);
          }
          else {
            uint64_t v33 = 0LL;
          }
          __int128 v34 = &v33[120 * v29];
          __int128 v35 = *(_OWORD *)__p;
          __int128 v36 = v53;
          __int128 v37 = v55;
          *((_OWORD *)v34 + 2) = v54;
          *((_OWORD *)v34 + 3) = v37;
          *(_OWORD *)__int128 v34 = v35;
          *((_OWORD *)v34 + 1) = v36;
          __int128 v38 = v56;
          __int128 v39 = v57;
          __int128 v40 = v58;
          *((void *)v34 + 14) = v59;
          *((_OWORD *)v34 + 5) = v39;
          *((_OWORD *)v34 + 6) = v40;
          *((_OWORD *)v34 + 4) = v38;
          __int128 v42 = (char *)*a2;
          __int128 v41 = (char *)a2[1];
          __int128 v43 = v34;
          if (v41 != *a2)
          {
            do
            {
              __int128 v44 = *(_OWORD *)(v41 - 120);
              __int128 v45 = *(_OWORD *)(v41 - 104);
              __int128 v46 = *(_OWORD *)(v41 - 88);
              *(_OWORD *)(v43 - 72) = *(_OWORD *)(v41 - 72);
              *(_OWORD *)(v43 - 88) = v46;
              *(_OWORD *)(v43 - 104) = v45;
              *(_OWORD *)(v43 - 120) = v44;
              __int128 v47 = *(_OWORD *)(v41 - 56);
              __int128 v48 = *(_OWORD *)(v41 - 40);
              __int128 v49 = *(_OWORD *)(v41 - 24);
              *((void *)v43 - 1) = *((void *)v41 - 1);
              *(_OWORD *)(v43 - sub_100BDC958(v1 + 24) = v49;
              *(_OWORD *)(v43 - 40) = v48;
              *(_OWORD *)(v43 - 56) = v47;
              v43 -= 120;
              v41 -= 120;
            }

            while (v41 != v42);
            __int128 v41 = (char *)*a2;
          }

          unint64_t v28 = v34 + 120;
          *a2 = v43;
          a2[1] = v34 + 120;
          a2[2] = &v33[120 * v32];
          if (v41) {
            operator delete(v41);
          }
        }

        else
        {
          __int128 v22 = *(_OWORD *)__p;
          __int128 v23 = v53;
          __int128 v24 = v55;
          *((_OWORD *)v20 + 2) = v54;
          *((_OWORD *)v20 + 3) = v24;
          *(_OWORD *)int v20 = v22;
          *((_OWORD *)v20 + 1) = v23;
          __int128 v25 = v56;
          __int128 v26 = v57;
          __int128 v27 = v58;
          *((void *)v20 + 14) = v59;
          *((_OWORD *)v20 + 5) = v26;
          *((_OWORD *)v20 + 6) = v27;
          *((_OWORD *)v20 + 4) = v25;
          unint64_t v28 = v20 + 120;
        }

        a2[1] = v28;
      }

      uint64_t v5 = v61;
      goto LABEL_42;
    }
  }

void sub_100DA6D88( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, char a29)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a29);
  _Unwind_Resume(a1);
}

uint64_t sub_100DA6DF0(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 112);
  uint64_t v2 = a1 + 112;
  uint64_t v4 = v2 - 40;
  uint64_t v40 = v2;
  (*(void (**)(void))(v3 + 16))();
  if (sub_100D8A92C(v4))
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101882A90);
    }
    uint64_t v5 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
    {
      int v6 = (void *)(a1 + 88);
      *(_DWORD *)std::string buf = 68289282;
      *(_DWORD *)__int128 v44 = 0;
      *(_WORD *)&v44[4] = 2082;
      *(void *)&v44[6] = "";
      __int16 v45 = 2082;
      __int128 v46 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:Database is already opened., name:%{public, location:escape_only}s}",  buf,  0x1Cu);
    }

    if (*(void *)(a1 + 216))
    {
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101882A90);
      }
      uint64_t v7 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_FAULT))
      {
        uint64_t v8 = *(void *)(a1 + 216);
        *(_DWORD *)std::string buf = 134349056;
        *(void *)__int128 v44 = v8;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "In memory buffer should have been empty! Instead it had a size of %{public}lu.",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_101882A90);
        }
        uint64_t v35 = *(void *)(a1 + 216);
        int v41 = 134349056;
        uint64_t v42 = v35;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  17LL,  "In memory buffer should have been empty! Instead it had a size of %{public}lu.",  &v41,  12);
        __int128 v37 = (uint8_t *)v36;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLActivityRecorderDb<CLStrideCalEntry>::setDatabaseAccessible() [T = CLStrideCalEntry, DataProtec tionPolicy = CLActivityDB::ClassCDataProtectionPolicy]",  "%s\n",  v36);
        if (v37 != buf) {
          free(v37);
        }
      }
    }

    uint64_t v9 = 1LL;
    goto LABEL_63;
  }

  sub_1001BA070(a1);
  uint64_t v9 = sub_100D8A92C(v4);
  if ((_DWORD)v9)
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101882A90);
    }
    __int128 v10 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v11 = (void *)(a1 + 88);
      uint64_t v12 = *(void *)(a1 + 216);
      *(_DWORD *)std::string buf = 68289539;
      *(_DWORD *)__int128 v44 = 0;
      *(_WORD *)&v44[4] = 2082;
      *(void *)&v44[6] = "";
      __int16 v45 = 2082;
      __int128 v46 = v11;
      __int16 v47 = 2049;
      uint64_t v48 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:Inserting entries into database, name:%{public, location:escape_only}s, size:%{private}llu}",  buf,  0x26u);
    }

    sub_1003C0454(*(void *)(a1 + 80));
    unint64_t v13 = *(void *)(a1 + 208);
    uint64_t v14 = *(void *)(a1 + 184);
    uint64_t v15 = *(void *)(a1 + 192);
    int v16 = (void *)(v14 + 8 * (v13 / 0x22));
    unsigned int v39 = v9;
    if (v15 == v14) {
      unint64_t v17 = 0LL;
    }
    else {
      unint64_t v17 = *v16 + 120 * (v13 % 0x22);
    }
    while (1)
    {
      if (v15 == v14)
      {
        unint64_t v23 = 0LL;
      }

      else
      {
        unint64_t v22 = *(void *)(a1 + 216) + *(void *)(a1 + 208);
        unint64_t v23 = *(void *)(v14 + 8 * (v22 / 0x22)) + 120 * (v22 % 0x22);
      }

      if (v17 == v23) {
        break;
      }
      if (qword_101934510 != -1) {
        dispatch_once(&qword_101934510, &stru_101882978);
      }
      __int128 v24 = (os_log_s *)qword_101934518;
      if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEBUG, "Adding from buffer to db.", buf, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934510 != -1) {
          dispatch_once(&qword_101934510, &stru_101882978);
        }
        LOWORD(v41) = 0;
        LODWORD(v38) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934518,  2LL,  "Adding from buffer to db.",  &v41,  v38);
        __int128 v27 = (uint8_t *)v26;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLActivityRecorderDb<CLStrideCalEntry>::setDatabaseAccessible() [T = CLStrideCalEntry, DataProtec tionPolicy = CLActivityDB::ClassCDataProtectionPolicy]",  "%s\n",  v26);
        if (v27 != buf) {
          free(v27);
        }
      }

      (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)a1 + 80LL))(a1, v17, 1LL);
      v17 += 120LL;
      if (v17 - *v16 == 4080)
      {
        unint64_t v25 = v16[1];
        ++v16;
        unint64_t v17 = v25;
      }

      uint64_t v14 = *(void *)(a1 + 184);
      uint64_t v15 = *(void *)(a1 + 192);
    }

    sub_1003C05BC(*(void *)(a1 + 80));
    uint64_t v9 = v39;
  }

  else
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101882A90);
    }
    uint64_t v18 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_FAULT))
    {
      uint64_t v19 = (void *)(a1 + 88);
      *(_DWORD *)std::string buf = 68289282;
      *(_DWORD *)__int128 v44 = 0;
      *(_WORD *)&v44[4] = 2082;
      *(void *)&v44[6] = "";
      __int16 v45 = 2082;
      __int128 v46 = v19;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Unexpected error condition! Device has been unlocked but database remains unreadable!, name:%{public, location:escape_only}s}",  buf,  0x1Cu);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101882A90);
      }
    }

    int v20 = (os_log_s *)qword_1019344B8;
    if (os_signpost_enabled((os_log_t)qword_1019344B8))
    {
      uint64_t v21 = (void *)(a1 + 88);
      *(_DWORD *)std::string buf = 68289282;
      *(_DWORD *)__int128 v44 = 0;
      *(_WORD *)&v44[4] = 2082;
      *(void *)&v44[6] = "";
      __int16 v45 = 2082;
      __int128 v46 = v21;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v20,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Unexpected error condition! Device has been unlocked but database remains unreadable!",  "{msg%{public}.0s:Unexpected error condition! Device has been unlocked but database remains unreadable!, name:%{public, location:escape_only}s}",  buf,  0x1Cu);
    }

    *(_BYTE *)(a1 + 128) = 1;
  }

  unint64_t v28 = *(void ***)(a1 + 184);
  uint64_t v29 = *(void *)(a1 + 192);
  *(void *)(a1 + 216) = 0LL;
  unint64_t v30 = v29 - (void)v28;
  if (v30 >= 0x11)
  {
    do
    {
      operator delete(*v28);
      uint64_t v31 = *(void *)(a1 + 192);
      unint64_t v28 = (void **)(*(void *)(a1 + 184) + 8LL);
      *(void *)(a1 + 184) = v28;
      unint64_t v30 = v31 - (void)v28;
    }

    while (v30 > 0x10);
  }

  if (v30 >> 3 == 1)
  {
    uint64_t v32 = 17LL;
  }

  else
  {
    if (v30 >> 3 != 2) {
      goto LABEL_61;
    }
    uint64_t v32 = 34LL;
  }

  *(void *)(a1 + 208) = v32;
LABEL_61:
  uint64_t v33 = *(void **)(a1 + 144);
  if (v33)
  {

    *(void *)(a1 + 144) = 0LL;
  }

void sub_100DA751C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

id *sub_100DA7550(uint64_t a1, __int128 *a2, char a3)
{
  v39[0] = (id)os_transaction_create("CLActivityRecorderDb::sanitizeAndStoreRecordUL");
  v39[1] = 0LL;
  if (*(double *)(a1 + 232) > 0.0
    && (*(unsigned int (**)(uint64_t, uint64_t, __int128 *))(*(void *)a1 + 136LL))(a1, a1 + 224, a2))
  {
    (*(void (**)(uint64_t, uint64_t, __int128 *))(*(void *)a1 + 72LL))(a1, a1 + 224, a2);
    return sub_1001BA1BC(v39);
  }

  if ((a3 & 1) == 0) {
    sub_1003C0454(*(void *)(a1 + 80));
  }
  int v6 = (*(uint64_t (**)(uint64_t, char *))(*(void *)a1 + 104LL))(a1, v37);
  if (v6 == 1)
  {
    (*(void (**)(uint64_t, __int128 *, uint64_t))(*(void *)a1 + 120LL))(a1, a2, 1LL);
  }

  else
  {
    if (v6)
    {
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101882A90);
      }
      uint64_t v14 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "Failed to insert record due to failure from reading the most recent entry.",  buf,  2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_101882A90);
        }
        LOWORD(v40) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  17LL,  "Failed to insert record due to failure from reading the most recent entry.",  &v40,  2);
        int v16 = (uint8_t *)v15;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLActivityRecorderDb<CLStrideCalEntry>::sanitizeAndStoreRecordUL(const T &, BOOL) [T = CLStrideCa lEntry, DataProtectionPolicy = CLActivityDB::ClassCDataProtectionPolicy]",  "%s\n",  v15);
        if (v16 != buf) {
          free(v16);
        }
      }

      goto LABEL_43;
    }

    double v7 = *((double *)a2 + 1);
    double v8 = v38;
    double v9 = v7 - v38;
    if (v7 - v38 < 0.0) {
      double v9 = -(v7 - v38);
    }
    if (v9 > 604800.0)
    {
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101882A90);
      }
      __int128 v10 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v11 = *((void *)a2 + 1);
        *(_DWORD *)std::string buf = 134349312;
        double v45 = v38;
        __int16 v46 = 2050;
        uint64_t v47 = v11;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "#Notice Potential CM database inconsistency, time jump %{public}lf %{public}lf",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_101882A90);
        }
        uint64_t v28 = *((void *)a2 + 1);
        int v40 = 134349312;
        double v41 = v38;
        __int16 v42 = 2050;
        uint64_t v43 = v28;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  0LL,  "#Notice Potential CM database inconsistency, time jump %{public}lf %{public}lf",  &v40,  22);
        unint64_t v30 = (uint8_t *)v29;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLActivityRecorderDb<CLStrideCalEntry>::sanitizeAndStoreRecordUL(const T &, BOOL) [T = CLStrideCa lEntry, DataProtectionPolicy = CLActivityDB::ClassCDataProtectionPolicy]",  "%s\n",  v29);
        if (v30 != buf) {
          free(v30);
        }
      }

      CLWriteStackshot("Potential CM database inconsistency, time jump", 0LL);
      double v7 = *((double *)a2 + 1);
      double v8 = v38;
    }

    if (v7 < v8)
    {
      if (v8 - v7 < 10.0)
      {
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_101882A90);
        }
        uint64_t v12 = (os_log_s *)qword_1019344B8;
        if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_INFO))
        {
          double v13 = *((double *)a2 + 1);
          *(_DWORD *)std::string buf = 134217984;
          double v45 = v13;
          _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_INFO,  "Entry being recorded has a startTime in the recent past.  Deleting records after %f.",  buf,  0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019344B0 != -1) {
            dispatch_once(&qword_1019344B0, &stru_101882A90);
          }
          double v31 = *((double *)a2 + 1);
          int v40 = 134217984;
          double v41 = v31;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  1LL,  "Entry being recorded has a startTime in the recent past.  Deleting records after %f.",  COERCE_DOUBLE(&v40));
          uint64_t v33 = (uint8_t *)v32;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLActivityRecorderDb<CLStrideCalEntry>::sanitizeAndStoreRecordUL(const T &, BOOL) [T = CLStride CalEntry, DataProtectionPolicy = CLActivityDB::ClassCDataProtectionPolicy]",  "%s\n",  v32);
          if (v33 != buf) {
            free(v33);
          }
        }

        (*(void (**)(uint64_t, __int128 *))(*(void *)a1 + 88LL))(a1, a2);
        goto LABEL_42;
      }

      double v17 = v7 - v8;
      double v18 = *(float *)(a1 + 136);
      if (qword_1019344B0 != -1)
      {
        double v36 = *(float *)(a1 + 136);
        dispatch_once(&qword_1019344B0, &stru_101882A90);
        double v18 = v36;
      }

      double v19 = v17 - v18;
      int v20 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)std::string buf = 134217984;
        double v45 = v19;
        _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_INFO,  "Entry being recorded has a startTime in the substantial past.  Shift records by %f.",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_101882A90);
        }
        int v40 = 134217984;
        double v41 = v19;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  1LL,  "Entry being recorded has a startTime in the substantial past.  Shift records by %f.",  COERCE_DOUBLE(&v40));
        uint64_t v35 = (uint8_t *)v34;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLActivityRecorderDb<CLStrideCalEntry>::sanitizeAndStoreRecordUL(const T &, BOOL) [T = CLStrideCa lEntry, DataProtectionPolicy = CLActivityDB::ClassCDataProtectionPolicy]",  "%s\n",  v34);
        if (v35 != buf) {
          free(v35);
        }
      }

      (*(void (**)(uint64_t, double))(*(void *)a1 + 96LL))(a1, v19);
    }

    (*(void (**)(uint64_t, char *, uint64_t, __int128 *))(*(void *)a1 + 144LL))(a1, v37, a1 + 224, a2);
    (*(void (**)(uint64_t, __int128 *, uint64_t))(*(void *)a1 + 120LL))(a1, a2, 1LL);
  }

void sub_100DA7CB8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, id a27)
{
}

uint64_t sub_100DA7CE4(uint64_t a1)
{
  return sub_100DA6DF0(a1 - 72);
}

void sub_100DA7CEC(id a1)
{
  qword_101934518 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Pedometer");
}

uint64_t sub_100DA7D18(uint64_t *a1, char **a2)
{
  uint64_t v4 = (*(void *(**)(void **__return_ptr))(*a1 + 64))(v56);
  if ((SHIBYTE(v57) & 0x80000000) == 0)
  {
    if (HIBYTE(v57)) {
      goto LABEL_3;
    }
LABEL_43:
    sub_10126F30C(v4);
LABEL_44:
    sub_100007008();
  }

  double v45 = v56[1];
  operator delete(v56[0]);
  if (!v45) {
    goto LABEL_43;
  }
LABEL_3:
  uint64_t result = sub_100D8A92C(a1 + 9);
  if ((_DWORD)result)
  {
    a2[1] = *a2;
    sub_10000CE18((uint64_t)v56);
    int v6 = sub_10000CF44(&v57, (uint64_t)"SELECT * from ", 14LL);
    (*(void (**)(void **__return_ptr, uint64_t *))(*a1 + 64))(__p, a1);
    if ((SBYTE7(v47) & 0x80u) == 0) {
      double v7 = __p;
    }
    else {
      double v7 = (void **)__p[0];
    }
    if ((SBYTE7(v47) & 0x80u) == 0) {
      uint64_t v8 = BYTE7(v47);
    }
    else {
      uint64_t v8 = (uint64_t)__p[1];
    }
    double v9 = sub_10000CF44(v6, (uint64_t)v7, v8);
    sub_10000CF44(v9, (uint64_t)" ORDER BY id ASC", 16LL);
    if (SBYTE7(v47) < 0) {
      operator delete(__p[0]);
    }
    uint64_t v10 = a1[10];
    std::stringbuf::str((std::stringbuf::string_type *)__p, &v58);
    if ((SBYTE7(v47) & 0x80u) == 0) {
      uint64_t v11 = (char *)__p;
    }
    else {
      uint64_t v11 = (char *)__p[0];
    }
    sub_1003C0D54(v10, v11, &v54);
    uint64_t v12 = v54;
    uint64_t v54 = 0LL;
    uint64_t v55 = v12;
    if (SBYTE7(v47) < 0) {
      operator delete(__p[0]);
    }
    sub_1003C0454(a1[10]);
    while (!sub_1001BA11C((uint64_t)a1, &v55, (uint64_t)__p))
    {
      unint64_t v13 = (unint64_t)a2[1];
      unint64_t v14 = (unint64_t)a2[2];
      if (v13 >= v14)
      {
        unint64_t v22 = 0xEEEEEEEEEEEEEEEFLL * ((uint64_t)(v13 - (void)*a2) >> 3);
        unint64_t v23 = v22 + 1;
        if (v22 + 1 > 0x222222222222222LL) {
          goto LABEL_44;
        }
        unint64_t v24 = 0xEEEEEEEEEEEEEEEFLL * ((uint64_t)(v14 - (void)*a2) >> 3);
        if (2 * v24 > v23) {
          unint64_t v23 = 2 * v24;
        }
        if (v24 >= 0x111111111111111LL) {
          unint64_t v25 = 0x222222222222222LL;
        }
        else {
          unint64_t v25 = v23;
        }
        if (v25) {
          __int128 v26 = (char *)sub_1000BAE04((uint64_t)(a2 + 2), v25);
        }
        else {
          __int128 v26 = 0LL;
        }
        __int128 v27 = &v26[120 * v22];
        __int128 v28 = *(_OWORD *)__p;
        __int128 v29 = v47;
        __int128 v30 = v49;
        *((_OWORD *)v27 + 2) = v48;
        *((_OWORD *)v27 + 3) = v30;
        *(_OWORD *)__int128 v27 = v28;
        *((_OWORD *)v27 + 1) = v29;
        __int128 v31 = v50;
        __int128 v32 = v51;
        __int128 v33 = v52;
        *((void *)v27 + 14) = v53;
        *((_OWORD *)v27 + 5) = v32;
        *((_OWORD *)v27 + 6) = v33;
        *((_OWORD *)v27 + 4) = v31;
        uint64_t v35 = *a2;
        __int128 v34 = a2[1];
        double v36 = v27;
        if (v34 != *a2)
        {
          do
          {
            __int128 v37 = *(_OWORD *)(v34 - 120);
            __int128 v38 = *(_OWORD *)(v34 - 104);
            __int128 v39 = *(_OWORD *)(v34 - 88);
            *(_OWORD *)(v36 - 72) = *(_OWORD *)(v34 - 72);
            *(_OWORD *)(v36 - 88) = v39;
            *(_OWORD *)(v36 - 104) = v38;
            *(_OWORD *)(v36 - 120) = v37;
            __int128 v40 = *(_OWORD *)(v34 - 56);
            __int128 v41 = *(_OWORD *)(v34 - 40);
            __int128 v42 = *(_OWORD *)(v34 - 24);
            *((void *)v36 - 1) = *((void *)v34 - 1);
            *(_OWORD *)(v36 - sub_100BDC958(v1 + 24) = v42;
            *(_OWORD *)(v36 - 40) = v41;
            *(_OWORD *)(v36 - 56) = v40;
            v36 -= 120;
            v34 -= 120;
          }

          while (v34 != v35);
          __int128 v34 = *a2;
        }

        __int128 v21 = v27 + 120;
        *a2 = v36;
        a2[1] = v27 + 120;
        a2[2] = &v26[120 * v25];
        if (v34) {
          operator delete(v34);
        }
      }

      else
      {
        __int128 v15 = *(_OWORD *)__p;
        __int128 v16 = v47;
        __int128 v17 = v49;
        *(_OWORD *)(v13 + 32) = v48;
        *(_OWORD *)(v13 + 48) = v17;
        *(_OWORD *)unint64_t v13 = v15;
        *(_OWORD *)(v13 + 16) = v16;
        __int128 v18 = v50;
        __int128 v19 = v51;
        __int128 v20 = v52;
        *(void *)(v13 + 112) = v53;
        *(_OWORD *)(v13 + 80) = v19;
        *(_OWORD *)(v13 + 96) = v20;
        *(_OWORD *)(v13 + 64) = v18;
        __int128 v21 = (char *)(v13 + 120);
      }

      a2[1] = v21;
    }

    sub_1003C05BC(a1[10]);
    uint64_t v43 = v55;
    uint64_t v55 = 0LL;
    if (v43) {
      (*(void (**)(uint64_t))(*(void *)v43 + 8LL))(v43);
    }
    *(void **)((char *)v56
    uint64_t v57 = v44;
    std::streambuf::~streambuf(&v58);
    return std::ios::~ios(&v59);
  }

  return result;
}

void sub_100DA8074( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, char a29)
{
  if (v29) {
    (*(void (**)(uint64_t))(*(void *)v29 + 8LL))(v29);
  }
  sub_1011F8850((uint64_t)&a29);
  _Unwind_Resume(a1);
}

uint64_t sub_100DA80DC(void *a1, uint64_t a2)
{
  uint64_t v4 = (*(void *(**)(void **__return_ptr))(*a1 + 64LL))(v23);
  if ((SHIBYTE(v24) & 0x80000000) == 0)
  {
    if (HIBYTE(v24)) {
      goto LABEL_3;
    }
LABEL_29:
    __int128 v20 = (_Unwind_Exception *)sub_10126F478(v4);
    sub_1011F8850((uint64_t)v23);
    _Unwind_Resume(v20);
  }

  __int128 v19 = v23[1];
  operator delete(v23[0]);
  if (!v19) {
    goto LABEL_29;
  }
LABEL_3:
  uint64_t result = sub_100D8A92C(a1 + 9);
  if ((_DWORD)result)
  {
    (*(void (**)(void *, uint64_t, uint64_t))(*a1 + 120LL))(a1, a2, 1LL);
    sub_10000CE18((uint64_t)v23);
    int v6 = sub_10000CF44(&v24, (uint64_t)"DELETE FROM ", 12LL);
    (*(void (**)(std::stringbuf::string_type *__return_ptr, void *))(*a1 + 64LL))(&__p, a1);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t size = __p.__r_.__value_.__s.__size_;
    }
    else {
      uint64_t size = __p.__r_.__value_.__l.__size_;
    }
    double v9 = sub_10000CF44(v6, (uint64_t)p_p, size);
    sub_10000CF44(v9, (uint64_t)" WHERE startTime > ?", 20LL);
    uint64_t v10 = a1[10];
    std::stringbuf::str(&__p, &v25);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v11 = &__p;
    }
    else {
      uint64_t v11 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(v10, (char *)v11, &v21);
    uint64_t v12 = v21;
    uint64_t v21 = 0LL;
    unint64_t v13 = (sqlite3_stmt *)sub_100019240(v12);
    if (sub_1003B7480(v13, 1, *(double *)(a2 + 8)))
    {
      uint64_t v14 = a1[10];
      __int128 v15 = (sqlite3_stmt *)sub_100019240(v12);
      sub_1003BB2BC(v14, v15);
    }

    uint64_t v16 = a1[10];
    else {
      uint64_t v17 = *(void *)(v16 + 88);
    }
    sub_1003C1EC0(v16, v17);
    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
    }
    *(void **)((char *)v23
    uint64_t v24 = v18;
    std::streambuf::~streambuf(&v25);
    return std::ios::~ios(&v26);
  }

  return result;
}

uint64_t sub_100DA833C(void *a1, double a2)
{
  uint64_t v4 = (*(void *(**)(void **__return_ptr))(*a1 + 64LL))(v21);
  if ((SHIBYTE(v22) & 0x80000000) == 0)
  {
    if (HIBYTE(v22)) {
      goto LABEL_3;
    }
LABEL_26:
    uint64_t v18 = (_Unwind_Exception *)sub_10126F5E4(v4);
    sub_1011F8850((uint64_t)v21);
    _Unwind_Resume(v18);
  }

  uint64_t v17 = v21[1];
  operator delete(v21[0]);
  if (!v17) {
    goto LABEL_26;
  }
LABEL_3:
  uint64_t result = sub_100D8A92C(a1 + 9);
  if ((_DWORD)result)
  {
    sub_10000CE18((uint64_t)v21);
    int v6 = sub_10000CF44(&v22, (uint64_t)"UPDATE ", 7LL);
    (*(void (**)(std::stringbuf::string_type *__return_ptr, void *))(*a1 + 64LL))(&__p, a1);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t size = __p.__r_.__value_.__s.__size_;
    }
    else {
      uint64_t size = __p.__r_.__value_.__l.__size_;
    }
    double v9 = sub_10000CF44(v6, (uint64_t)p_p, size);
    sub_10000CF44(v9, (uint64_t)" SET startTime = startTime + ?", 30LL);
    uint64_t v10 = a1[10];
    std::stringbuf::str(&__p, &v23);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v11 = &__p;
    }
    else {
      uint64_t v11 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(v10, (char *)v11, &v19);
    uint64_t v12 = v19;
    uint64_t v19 = 0LL;
    unint64_t v13 = (sqlite3_stmt *)sub_100019240(v12);
    if (sub_1003B7480(v13, 1, a2))
    {
      uint64_t v14 = a1[10];
      __int128 v15 = (sqlite3_stmt *)sub_100019240(v12);
      sub_1003BB2BC(v14, v15);
    }

    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
    }
    *(void **)((char *)v21
    uint64_t v22 = v16;
    std::streambuf::~streambuf(&v23);
    return std::ios::~ios(&v24);
  }

  return result;
}

uint64_t sub_100DA8574(void *a1, uint64_t a2)
{
  uint64_t v4 = (*(void *(**)(void **__return_ptr))(*a1 + 64LL))(v22);
  if ((SHIBYTE(v23) & 0x80000000) == 0)
  {
    if (HIBYTE(v23)) {
      goto LABEL_3;
    }
LABEL_25:
    uint64_t v17 = (_Unwind_Exception *)sub_10126F750(v4);
    uint64_t v18 = v20;
    uint64_t v20 = 0LL;
    if (v18) {
      (*(void (**)(uint64_t))(*(void *)v18 + 8LL))(v18);
    }
    sub_1011F8850((uint64_t)v22);
    _Unwind_Resume(v17);
  }

  uint64_t v16 = v22[1];
  operator delete(v22[0]);
  if (!v16) {
    goto LABEL_25;
  }
LABEL_3:
  sub_10000CE18((uint64_t)v22);
  uint64_t v5 = sub_10000CF44(&v23, (uint64_t)"SELECT * FROM ", 14LL);
  (*(void (**)(std::stringbuf::string_type *__return_ptr, void *))(*a1 + 64LL))(&__p, a1);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t size = __p.__r_.__value_.__s.__size_;
  }
  else {
    uint64_t size = __p.__r_.__value_.__l.__size_;
  }
  uint64_t v8 = sub_10000CF44(v5, (uint64_t)p_p, size);
  sub_10000CF44(v8, (uint64_t)" ORDER BY ROWID DESC LIMIT 1", 28LL);
  uint64_t v9 = a1[10];
  std::stringbuf::str(&__p, &v24);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t v10 = &__p;
  }
  else {
    uint64_t v10 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
  }
  sub_1003C0D54(v9, (char *)v10, &v19);
  uint64_t v11 = v19;
  uint64_t v19 = 0LL;
  uint64_t v20 = v11;
  uint64_t v12 = sub_1001BA11C((uint64_t)a1, &v20, a2);
  uint64_t v13 = v20;
  uint64_t v20 = 0LL;
  if (v13) {
    (*(void (**)(uint64_t))(*(void *)v13 + 8LL))(v13);
  }
  *(void **)((char *)v22
  uint64_t v23 = v14;
  std::streambuf::~streambuf(&v24);
  std::ios::~ios(&v25);
  return v12;
}

void sub_100DA879C(id a1)
{
  qword_1019344B8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Motion");
}

void sub_100DA87C8()
{
  qword_10199E638 = (uint64_t)"id";
  dword_10199E640 = 1;
  word_10199E644 = 1;
  byte_10199E648 = 0;
  byte_10199E660 = 0;
  qword_10199E668 = (uint64_t)"startTime";
  dword_10199E670 = 2;
  word_10199E674 = 0;
  byte_10199E678 = 0;
  byte_10199E690 = 0;
  qword_10199E698 = (uint64_t)"pacebin";
  dword_10199E6A0 = 1;
  word_10199E6A4 = 0;
  byte_10199E6A8 = 0;
  byte_10199E6C0 = 0;
  qword_10199E6C8 = (uint64_t)"kvalue";
  dword_10199E6D0 = 2;
  word_10199E6D4 = 0;
  byte_10199E6D8 = 0;
  byte_10199E6F0 = 0;
  qword_10199E6F8 = (uint64_t)"kvalueTrack";
  dword_10199E700 = 2;
  word_10199E704 = 0;
  byte_10199E708 = 0;
  byte_10199E720 = 0;
  qword_10199E728 = (uint64_t)"score";
  dword_10199E730 = 2;
  word_10199E734 = 0;
  byte_10199E738 = 0;
  byte_10199E750 = 0;
  qword_10199E758 = (uint64_t)"endTime";
  dword_10199E760 = 2;
  word_10199E764 = 0;
  byte_10199E768 = 0;
  byte_10199E780 = 0;
  qword_10199E788 = (uint64_t)"distance";
  dword_10199E790 = 2;
  word_10199E794 = 0;
  byte_10199E798 = 0;
  byte_10199E7B0 = 0;
  qword_10199E7B8 = (uint64_t)"steps";
  dword_10199E7C0 = 1;
  word_10199E7C4 = 0;
  byte_10199E7C8 = 0;
  byte_10199E7E0 = 0;
  qword_10199E7E8 = (uint64_t)"session";
  dword_10199E7F0 = 1;
  word_10199E7F4 = 0;
  byte_10199E7F8 = 0;
  byte_10199E810 = 0;
  qword_10199E818 = (uint64_t)"speed";
  dword_10199E820 = 2;
  word_10199E824 = 0;
  byte_10199E828 = 0;
  byte_10199E840 = 0;
  qword_10199E848 = (uint64_t)"percentGrade";
  dword_10199E850 = 2;
  word_10199E854 = 0;
  byte_10199E858 = 0;
  byte_10199E870 = 0;
  qword_10199E878 = (uint64_t)"gpsSource";
  dword_10199E880 = 1;
  word_10199E884 = 0;
  byte_10199E888 = 0;
  byte_10199E8A0 = 0;
  qword_10199E8A8 = (uint64_t)"runningFormStrideLength";
  dword_10199E8B0 = 2;
  word_10199E8B4 = 0;
  byte_10199E8B8 = 0;
  byte_10199E8D0 = 0;
  qword_10199E8D8 = (uint64_t)"runningFormStrideLengthMetrics";
  dword_10199E8E0 = 1;
  word_10199E8E4 = 0;
  byte_10199E8E8 = 0;
  byte_10199E900 = 0;
  qword_10199E908 = 0LL;
  dword_10199E910 = 5;
  word_10199E914 = 0;
  byte_10199E918 = 0;
  byte_10199E930 = 0;
  qword_10199E938 = (uint64_t)"startTime";
  unk_10199E940 = 0LL;
}

uint64_t sub_100DA8C38(void *a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    uint64_t v6 = 0LL;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        LODWORD(v6) = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LODWORD(v6) = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    if ((v6 & 0x7FFF8) == 8)
    {
      uint64_t v12 = objc_alloc_init(&OBJC_CLASS___TRANSITPbLocationFingerprintV1);
      [a1 addLocationFingerprint:v12];

      PBReaderRecallMark(a2, v14);
    }

    else
    {
      uint64_t result = PBReaderSkipValueWithTag(a2);
      if (!(_DWORD)result) {
        return result;
      }
    }
  }

  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_100DA92B0(id a1)
{
  qword_10199E960 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLMotionStateObserverSilo");
}

uint64_t sub_100DA9364(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100DA94D8;
  block[3] = &unk_10181A288;
  void block[4] = a1;
  if (qword_10199E970 != -1) {
    dispatch_once(&qword_10199E970, block);
  }
  return qword_1019A20A8;
}

void sub_100DA94D8(uint64_t a1)
{
  if (sub_1001B9A1C())
  {
    uint64_t v2 = operator new(0xD8uLL);
    sub_100931880((uint64_t)v2, *(void **)(a1 + 32));
  }

  else
  {
    sub_1004F2598();
    uint64_t v2 = operator new(0x100uLL);
    sub_1002C7358((uint64_t)v2, *(void **)(a1 + 32));
  }

  qword_1019A20A8 = (uint64_t)v2;
}

void sub_100DA9540(_Unwind_Exception *a1)
{
}

uint64_t sub_100DA9558(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_100DA9820(a1, "CLMotionStateObserver", a2);
  *(void *)uint64_t v3 = off_101882AE0;
  *(void *)(v3 + 109) = 0x7FEFFFFFFFFFFFFFLL;
  *(void *)(v3 + 117) = 0LL;
  *(void *)(v3 + 133) = 0LL;
  *(void *)(v3 + 125) = 0LL;
  *(_DWORD *)(v3 + 141) = 0;
  id v4 = [*(id *)(v3 + 40) newTimer];
  *(void *)(a1 + 184) = 0LL;
  uint64_t v5 = a1 + 184;
  *(void *)(a1 + 152) = v4;
  *(_WORD *)(a1 + 160) = 0;
  *(void *)(a1 + 162) = 0x10000000000000LL;
  *(void *)(a1 + 170) = 0LL;
  *(_DWORD *)(a1 + 178) = 0;
  *(void *)(a1 + 192) = 0LL;
  *(void *)(a1 + 200) = 0LL;
  uint64_t v6 = sub_1006E27E8();
  sub_100413284(v6, &v20);
  sub_1002A6F64(v20, "LogMotionStateReplay", (BOOL *)(a1 + 161));
  unint64_t v7 = v21;
  if (v21)
  {
    p_shared_owners = (unint64_t *)&v21->__shared_owners_;
    do
      unint64_t v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }

  sub_1003A09BC((uint64_t)sub_100DA98BC, a1, *(void **)(a1 + 32), &v20);
  uint64_t v10 = v20;
  uint64_t v20 = 0LL;
  uint64_t v11 = *(void *)v5;
  *(void *)uint64_t v5 = v10;
  if (v11)
  {
    (*(void (**)(uint64_t))(*(void *)v11 + 8LL))(v11);
    uint64_t v12 = v20;
    uint64_t v20 = 0LL;
    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
    }
  }

  objc_msgSend( *(id *)(*(void *)v5 + 16),  "register:forNotification:registrationInfo:",  *(void *)(*(void *)v5 + 8),  10,  0,  v20);
  [*(id *)(*(void *)v5 + 16) register:*(void *)(*(void *)v5 + 8) forNotification:6 registrationInfo:0];
  sub_10060B0A4((uint64_t)sub_100DA9A9C, a1, *(void **)(a1 + 32), &v20);
  uint64_t v13 = v20;
  uint64_t v20 = 0LL;
  uint64_t v14 = *(void *)(a1 + 192);
  *(void *)(a1 + 192) = v13;
  if (v14)
  {
    (*(void (**)(uint64_t))(*(void *)v14 + 8LL))(v14);
    uint64_t v15 = v20;
    uint64_t v20 = 0LL;
    if (v15) {
      (*(void (**)(uint64_t))(*(void *)v15 + 8LL))(v15);
    }
  }

  objc_msgSend( *(id *)(*(void *)(a1 + 192) + 16),  "register:forNotification:registrationInfo:",  *(void *)(*(void *)(a1 + 192) + 8),  0,  0,  v20);
  sub_100468458((uint64_t)sub_100DA9C7C, a1, *(void **)(a1 + 32), &v20);
  uint64_t v16 = v20;
  uint64_t v20 = 0LL;
  uint64_t v17 = *(void *)(a1 + 200);
  *(void *)(a1 + 200) = v16;
  if (v17)
  {
    (*(void (**)(uint64_t))(*(void *)v17 + 8LL))(v17);
    uint64_t v18 = v20;
    uint64_t v20 = 0LL;
    if (v18) {
      (*(void (**)(uint64_t))(*(void *)v18 + 8LL))(v18);
    }
  }

  objc_msgSend( *(id *)(*(void *)(a1 + 200) + 16),  "register:forNotification:registrationInfo:",  *(void *)(*(void *)(a1 + 200) + 8),  0,  0,  v20);
  sub_100DA9E5C(a1);
  return a1;
}

void sub_100DA978C(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void *)(v1 + 200);
  *(void *)(v1 + 200) = 0LL;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  uint64_t v5 = *(void *)(v1 + 192);
  *(void *)(v1 + 192) = 0LL;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
  }
  uint64_t v6 = *v2;
  uint64_t *v2 = 0LL;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
  }
  sub_100DAA0D4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100DA9820(uint64_t a1, char *a2, void *a3)
{
  *(void *)a1 = off_101882CC8;
  sub_1010DDBC0((void *)(a1 + 8), a2);
  *(void *)(a1 + 32) = a3;
  *(void *)(a1 + 40) = [a3 silo];
  *(void *)(a1 + 48) = 0LL;
  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + 56) = a1 + 64;
  *(void *)(a1 + 88) = 0LL;
  *(void *)(a1 + 96) = 0LL;
  *(void *)(a1 + 72) = 0LL;
  *(void *)(a1 + 80) = a1 + 88;
  *(_DWORD *)(a1 + 104) = 0;
  *(_BYTE *)(a1 + 108) = 0;
  return a1;
}

void sub_100DA98A0(_Unwind_Exception *exception_object)
{
}

void sub_100DA98BC(uint64_t a1, uint64_t a2, uint64_t a3, id *a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101882C58);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v10 = 1;
    unint64_t v7 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLMotionStateObserver::onCompanionNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v7, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101882C58);
    }
    char v8 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v12 = 0;
      __int16 v13 = 2082;
      uint64_t v14 = "";
      __int16 v15 = 2082;
      uint64_t v16 = "activity";
      __int16 v17 = 2050;
      uint64_t v18 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLMotionStateObserver::onCompanionNotification, event:%{public, location:escape_onl y}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v10 = 0;
  }

  (*((void (**)(id *, uint64_t, uint64_t))*a4 + 27))(a4, a2, a3);
  if (v10) {
    os_activity_scope_leave(&state);
  }
}

void sub_100DA9A7C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DA9A9C(uint64_t a1, uint64_t a2, uint64_t a3, id *a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101882C58);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v10 = 1;
    unint64_t v7 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLMotionStateObserver::onFitnessTrackingNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v7, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101882C58);
    }
    char v8 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v12 = 0;
      __int16 v13 = 2082;
      uint64_t v14 = "";
      __int16 v15 = 2082;
      uint64_t v16 = "activity";
      __int16 v17 = 2050;
      uint64_t v18 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLMotionStateObserver::onFitnessTrackingNotification, event:%{public, location:esca pe_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v10 = 0;
  }

  (*((void (**)(id *, uint64_t, uint64_t))*a4 + 28))(a4, a2, a3);
  if (v10) {
    os_activity_scope_leave(&state);
  }
}

void sub_100DA9C5C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DA9C7C(uint64_t a1, uint64_t a2, uint64_t a3, id *a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101882C58);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v10 = 1;
    unint64_t v7 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLMotionStateObserver::onMotionStateMediatorNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v7, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101882C58);
    }
    char v8 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v12 = 0;
      __int16 v13 = 2082;
      uint64_t v14 = "";
      __int16 v15 = 2082;
      uint64_t v16 = "activity";
      __int16 v17 = 2050;
      uint64_t v18 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLMotionStateObserver::onMotionStateMediatorNotification, event:%{public, location: escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v10 = 0;
  }

  (*((void (**)(id *, uint64_t, uint64_t))*a4 + 29))(a4, a2, a3);
  if (v10) {
    os_activity_scope_leave(&state);
  }
}

void sub_100DA9E3C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100DA9E5C(uint64_t a1)
{
  uint64_t result = sub_1008FA854(0);
  if (result)
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101882C78);
    }
    uint64_t v3 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEFAULT))
    {
      id v4 = +[CMWorkout CMWorkoutTypeFromCLMotionActivityType:]( &OBJC_CLASS___CMWorkout,  "CMWorkoutTypeFromCLMotionActivityType:",  *(unsigned int *)(a1 + 117));
      uint64_t v5 = *(void *)(a1 + 162);
      int v6 = *(_DWORD *)(a1 + 170);
      int v7 = *(_DWORD *)(a1 + 174);
      *(_DWORD *)std::string buf = 134218752;
      id v27 = v4;
      __int16 v28 = 2048;
      uint64_t v29 = v5;
      __int16 v30 = 1024;
      int v31 = v6;
      __int16 v32 = 1024;
      int v33 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "MotionStateObserver, Sending Down ActivityOverride,%ld,startTime,%.3f,activityType,%d,vehicularConfidence,%d",  buf,  0x22u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101882C78);
      }
      uint64_t v11 = qword_1019344B8;
      id v12 = +[CMWorkout CMWorkoutTypeFromCLMotionActivityType:]( &OBJC_CLASS___CMWorkout,  "CMWorkoutTypeFromCLMotionActivityType:",  *(unsigned int *)(a1 + 117));
      uint64_t v13 = *(void *)(a1 + 162);
      int v14 = *(_DWORD *)(a1 + 170);
      int v15 = *(_DWORD *)(a1 + 174);
      int v18 = 134218752;
      id v19 = v12;
      __int16 v20 = 2048;
      uint64_t v21 = v13;
      __int16 v22 = 1024;
      int v23 = v14;
      __int16 v24 = 1024;
      int v25 = v15;
      LODWORD(v17) = 34;
      uint64_t v16 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v11,  0LL,  "MotionStateObserver, Sending Down ActivityOverride,%ld,startTime,%.3f,activityType,%d,vehicularConfidence,%d",  &v18,  v17);
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLMotionStateObserver::updateCoprocessor()", "%s\n", v16);
    }

    uint64_t v8 = sub_1008FA854(0);
    unint64_t v9 = sub_100672D30((unint64_t)+[CMWorkout CMWorkoutTypeFromCLMotionActivityType:]( &OBJC_CLASS___CMWorkout,  "CMWorkoutTypeFromCLMotionActivityType:",  *(unsigned int *)(a1 + 117)));
    (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v8 + 56) + 24LL))( v8 + 56,  v9,  *(unsigned int *)(a1 + 125));
    uint64_t v10 = sub_1008FA854(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 + 56) + 48LL))(v10 + 56, a1 + 162);
  }

  return result;
}

uint64_t sub_100DAA0D4(uint64_t a1)
{
  *(void *)a1 = off_101882CC8;
  [*(id *)(a1 + 48) invalidate];

  sub_100231CA4(a1 + 80, *(void **)(a1 + 88));
  sub_100231CF0(a1 + 56, *(void **)(a1 + 64));
  return a1;
}

uint64_t sub_100DAA148(uint64_t a1)
{
  *(void *)a1 = off_101882AE0;
  [*(id *)(a1 + 152) invalidate];

  *(void *)(a1 + 152) = 0LL;
  *(_BYTE *)(a1 + 108) = 1;
  uint64_t v2 = *(void *)(a1 + 200);
  *(void *)(a1 + 200) = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  uint64_t v3 = *(void *)(a1 + 192);
  *(void *)(a1 + 192) = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  uint64_t v4 = *(void *)(a1 + 184);
  *(void *)(a1 + 184) = 0LL;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  return sub_100DAA0D4(a1);
}

void sub_100DAA1E4(uint64_t a1)
{
  *(void *)(a1 + 152) = 0LL;
  *(_BYTE *)(a1 + 108) = 1;
}

uint64_t sub_100DAA21C(uint64_t a1, __int128 *a2)
{
  __int128 v3 = *a2;
  __int128 v4 = a2[1];
  *(_DWORD *)(a1 + 141) = *((_DWORD *)a2 + 8);
  *(_OWORD *)(a1 + 125) = v4;
  *(_OWORD *)(a1 + 109) = v3;
  uuid_copy((unsigned __int8 *)(a1 + 129), (const unsigned __int8 *)a2 + 20);
  if (qword_1019344B0 != -1) {
    dispatch_once(&qword_1019344B0, &stru_101882C78);
  }
  uint64_t v5 = (os_log_s *)qword_1019344B8;
  if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v6 = *(void *)(a1 + 109);
    uint64_t v7 = CLMotionActivity::activityTypeToString(*(unsigned int *)(a1 + 117));
    uint64_t v8 = CLMotionActivity::activityTypeToString(*(unsigned int *)(a1 + 121));
    int v9 = *(_DWORD *)(a1 + 125);
    *(_DWORD *)std::string buf = 134218754;
    uint64_t v26 = v6;
    __int16 v27 = 2080;
    uint64_t v28 = v7;
    __int16 v29 = 2080;
    uint64_t v30 = v8;
    __int16 v31 = 1024;
    int v32 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "MotionStateObserver, Started session, startTime, %.3f, user type, %s, predicted type, %s, hk activity type, %i",  buf,  0x26u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101882C78);
    }
    uint64_t v11 = qword_1019344B8;
    uint64_t v12 = *(void *)(a1 + 109);
    uint64_t v13 = CLMotionActivity::activityTypeToString(*(unsigned int *)(a1 + 117));
    uint64_t v14 = CLMotionActivity::activityTypeToString(*(unsigned int *)(a1 + 121));
    int v15 = *(_DWORD *)(a1 + 125);
    int v17 = 134218754;
    uint64_t v18 = v12;
    __int16 v19 = 2080;
    uint64_t v20 = v13;
    __int16 v21 = 2080;
    uint64_t v22 = v14;
    __int16 v23 = 1024;
    int v24 = v15;
    uint64_t v16 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v11,  2LL,  "MotionStateObserver, Started session, startTime, %.3f, user type, %s, predicted type, %s, hk activity type, %i",  COERCE_DOUBLE(&v17),  38);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMotionStateObserver::startSession(const CLWorkoutUpdate &)",  "%s\n",  v16);
  }

  sub_100DAA478(a1);
  return sub_100DAA51C(a1);
}

uint64_t sub_100DAA478(uint64_t a1)
{
  __int128 v2 = *(_OWORD *)(a1 + 125);
  __int128 v5 = *(_OWORD *)(a1 + 109);
  __int128 v6 = v2;
  int v7 = *(_DWORD *)(a1 + 141);
  uuid_copy((unsigned __int8 *)&v6 + 4, (const unsigned __int8 *)(a1 + 129));
  int v4 = 0;
  (*(void (**)(uint64_t, int *, __int128 *, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  &v4,  &v5,  1LL,  0xFFFFFFFFLL,  0LL);
  return sub_100DA9E5C(a1);
}

uint64_t sub_100DAA51C(uint64_t result)
{
  if (*(_BYTE *)(result + 161))
  {
    uint64_t v1 = result;
    uint64_t v10 = &off_101857D78;
    int v13 = *(_DWORD *)(result + 117);
    uint64_t v12 = *(void *)(result + 109);
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    uint64_t v2 = sub_100E00E14();
    sub_100E022E0(v2, (uint64_t)&v10);
    sub_101125260(v7);
    sub_10113AA7C(v7);
    v9 |= 1u;
    *(CFAbsoluteTime *)&v7[77] = Current;
    uint64_t v3 = v8;
    uint64_t v4 = *(void *)(v1 + 109);
    *(_BYTE *)(v8 + 20) |= 1u;
    *(void *)(v3 + 8) = v4;
    uint64_t v5 = v8;
    int v6 = *(_DWORD *)(v1 + 117);
    *(_BYTE *)(v8 + 20) |= 2u;
    *(_DWORD *)(v5 + 16) = v6;
    if (qword_1019A1D00 != -1) {
      dispatch_once(&qword_1019A1D00, &stru_101882C98);
    }
    if (qword_1019A1D08) {
      sub_1011CF3D0(qword_1019A1D08, (uint64_t)v7);
    }
    return sub_101127D00((PB::Base *)v7);
  }

  return result;
}

void sub_100DAA61C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100DAA634(uint64_t a1)
{
  if (qword_1019344B0 != -1) {
    dispatch_once(&qword_1019344B0, &stru_101882C78);
  }
  uint64_t v2 = (os_log_s *)qword_1019344B8;
  if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v3 = *(void *)(a1 + 109);
    uint64_t v4 = CLMotionActivity::activityTypeToString(*(unsigned int *)(a1 + 117));
    uint64_t v5 = CLMotionActivity::activityTypeToString(*(unsigned int *)(a1 + 121));
    int v6 = *(_DWORD *)(a1 + 125);
    *(_DWORD *)std::string buf = 134218754;
    uint64_t v23 = v3;
    __int16 v24 = 2080;
    uint64_t v25 = v4;
    __int16 v26 = 2080;
    uint64_t v27 = v5;
    __int16 v28 = 1024;
    int v29 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "MotionStateObserver, Stopped session, startTime, %.3f, user type, %s, predicted type, %s, hk activity type, %i",  buf,  0x26u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101882C78);
    }
    uint64_t v8 = qword_1019344B8;
    uint64_t v9 = *(void *)(a1 + 109);
    uint64_t v10 = CLMotionActivity::activityTypeToString(*(unsigned int *)(a1 + 117));
    uint64_t v11 = CLMotionActivity::activityTypeToString(*(unsigned int *)(a1 + 121));
    int v12 = *(_DWORD *)(a1 + 125);
    int v14 = 134218754;
    uint64_t v15 = v9;
    __int16 v16 = 2080;
    uint64_t v17 = v10;
    __int16 v18 = 2080;
    uint64_t v19 = v11;
    __int16 v20 = 1024;
    int v21 = v12;
    int v13 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v8,  2LL,  "MotionStateObserver, Stopped session, startTime, %.3f, user type, %s, predicted type, %s, hk activity type, %i",  COERCE_DOUBLE(&v14),  38);
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLMotionStateObserver::stopSession()", "%s\n", v13);
  }

  *(void *)(a1 + 109) = 0x7FEFFFFFFFFFFFFFLL;
  *(void *)(a1 + 117) = 0LL;
  *(void *)(a1 + 133) = 0LL;
  *(void *)(a1 + 125) = 0LL;
  *(_DWORD *)(a1 + 141) = 0;
  sub_100DAA478(a1);
  return sub_100DAA51C(a1);
}

uint64_t sub_100DAA888(uint64_t a1, __int128 *a2)
{
  __int128 v2 = *a2;
  *(_DWORD *)(a1 + 178) = *((_DWORD *)a2 + 4);
  *(_OWORD *)(a1 + 162) = v2;
  return sub_100DA9E5C(a1);
}

void *sub_100DAA89C@<X0>(_DWORD *a1@<X1>, void *a2@<X8>)
{
  return sub_1010DDBC0(a2, __str);
}

uint64_t sub_100DAA914()
{
  return 1LL;
}

uint64_t sub_100DAA91C()
{
  return 1LL;
}

uint64_t sub_100DAA924(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4, uint64_t a5, uint64_t a6)
{
  *(void *)a1 = &off_101882DA8;
  *(void *)(a1 + 8) = -[CLNotifierClientAdapter initWithClient:]( objc_alloc(&OBJC_CLASS___CLNotifierClientAdapter),  "initWithClient:",  a1);
  *(void *)(a1 + sub_100BDC958(v1 + 24) = a5;
  *(void *)(a1 + 32) = a6;
  else {
    int v12 = (uint64_t *)*a3;
  }
  id v13 = objc_msgSend( objc_msgSend(a4, "vendor"),  "proxyForService:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v12));
  *(void *)(a1 + 16) = v13;
  id v14 = v13;
  if (a2) {
    [*(id *)(a1 + 16) setDelegateEntityName:a2];
  }
  objc_msgSend(*(id *)(a1 + 16), "registerDelegate:inSilo:", *(void *)(a1 + 8), objc_msgSend(a4, "silo"));
  return a1;
}

void sub_100DAA9F8(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = operator new(0x30uLL);
  sub_1010DDBC0(__p, "CLMotionStateObserver");
  sub_100DAA924((uint64_t)v8, 0LL, (uint64_t *)__p, a3, a1, a2);
  *uint64_t v8 = off_101882BE0;
  *a4 = v8;
  if (v10 < 0) {
    operator delete(__p[0]);
  }
}

void sub_100DAAA94( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete(v15);
  _Unwind_Resume(a1);
}

void sub_100DAAAC4(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100DAAB80(a1);
  operator delete(v1);
}

id sub_100DAAAD8(uint64_t a1, int a2, void *a3)
{
  id result = sub_1002CA5E4(a3);
  if (result)
  {
    int v6 = a2;
    return (id)(*(uint64_t (**)(void, int *, id, void))(a1 + 24))(0LL, &v6, result, *(void *)(a1 + 32));
  }

  return result;
}

void sub_100DAAB24(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_100DAAB50(id a1)
{
  qword_1019344B8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Motion");
}

uint64_t sub_100DAAB80(uint64_t a1)
{
  *(void *)a1 = &off_101882DA8;
  __int128 v2 = (id *)(a1 + 8);
  [*(id *)(a1 + 16) forget:*(void *)(a1 + 8)];

  [*v2 invalidate];
  id *v2 = 0LL;
  *(void *)(a1 + 16) = 0LL;
  return a1;
}

uint64_t sub_100DAABE0()
{
  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_10199E948, (void *)&_mh_execute_header);
}

uint64_t sub_100DAAC24(double *a1)
{
  uint64_t v1 = *(void *)&v3[4];
  if (v5 < 0) {
    operator delete(__p);
  }
  return v1;
}

uint64_t *sub_100DAAC68(uint64_t *a1)
{
  return a1;
}

void sub_100DAACA4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  *a1 = a2;
  if (v3)
  {
    uint64_t v4 = (void *)sub_10052D288(v3);
    operator delete(v4);
  }

uint64_t sub_100DAACD4(uint64_t *a1)
{
  return sub_10052D5C8(*a1);
}

uint64_t sub_100DAACDC(uint64_t *a1)
{
  __int128 v2 = (unsigned int *)__p;
  uint64_t v3 = v20;
  if (__p == v20)
  {
    uint64_t v4 = 0LL;
    if (!__p) {
      return v4;
    }
    goto LABEL_16;
  }

  LODWORD(v4) = 0;
  do
  {
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101882DC0);
    }
    char v5 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
    {
      int v6 = sub_100496E10(v2);
      int v7 = sub_100924300((uint64_t)v2);
      *(_DWORD *)std::string buf = 67174913;
      int v25 = v6;
      __int16 v26 = 1025;
      int v27 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "remaining header in db, deleting, x, %{private}d, y, %{private}d",  buf,  0xEu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101882DC0);
      }
      uint64_t v11 = qword_101934868;
      int v12 = sub_100496E10(v2);
      int v13 = sub_100924300((uint64_t)v2);
      v21[0] = 67174913;
      v21[1] = v12;
      __int16 v22 = 1025;
      int v23 = v13;
      LODWORD(v18) = 14;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v11,  0LL,  "remaining header in db, deleting, x, %{private}d, y, %{private}d",  v21,  v18);
      uint64_t v15 = (uint8_t *)v14;
      sub_10029211C("Generic", 1LL, 0, 2LL, "int CLWifiTileDataRepository::removeAllTileHeaders()", "%s\n", v14);
      if (v15 != buf) {
        free(v15);
      }
    }

    uint64_t v8 = *a1;
    int v9 = sub_100496E10(v2);
    int v10 = sub_100924300((uint64_t)v2);
    *(_DWORD *)std::string buf = v9;
    int v25 = v10;
    if ((sub_10052E064(v8, (int *)buf) & 1) == 0)
    {
      exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
      std::runtime_error::runtime_error(exception, "Failed to delete tile header");
    }

    uint64_t v4 = (v4 + 1);
    v2 += 36;
  }

  while (v2 != v3);
  __int128 v2 = (unsigned int *)__p;
  if (__p)
  {
LABEL_16:
    __int16 v20 = v2;
    operator delete(v2);
  }

  return v4;
}

void sub_100DAAF94( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DAAFDC(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t sub_100DAAFE4(uint64_t *a1)
{
  return sub_100530FDC(*a1);
}

uint64_t sub_100DAAFEC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = a1 + 1;
  (*(void (**)(uint64_t *))(a1[1] + 16))(a1 + 1);
  sub_10052D664(*a1, (uint64_t)v7);
  if ((sub_100DAB548(a1, a2) & 1) == 0)
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error(exception, "Failed to delete tile.");
  }

  sub_100A112B4(v7);
  (*(void (**)(uint64_t *))(*v4 + 24))(v4);
  return 1LL;
}

#error "100DAB4C8: call analysis failed (funcsize=237)"
uint64_t sub_100DAB540@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10052D664(*a1, a2);
}

uint64_t sub_100DAB548(uint64_t *a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(a2 + 4);
  uint64_t v2 = sub_10052E064(*a1, (int *)&v7);
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_101882DC0);
  }
  uint64_t v3 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::string buf = 67175425;
    int v16 = v7;
    __int16 v17 = 1025;
    int v18 = HIDWORD(v7);
    __int16 v19 = 1024;
    int v20 = v2;
    __int16 v21 = 1024;
    int v22 = 1;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "deleting tile, x, %{private}d, y, %{private}d, header, %d, tile, %d",  buf,  0x1Au);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101882DC0);
    }
    v8[0] = 67175425;
    v8[1] = v7;
    __int16 v9 = 1025;
    int v10 = HIDWORD(v7);
    __int16 v11 = 1024;
    int v12 = v2;
    __int16 v13 = 1024;
    int v14 = 1;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "deleting tile, x, %{private}d, y, %{private}d, header, %d, tile, %d",  v8,  26);
    int v6 = (uint8_t *)v5;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWifiTileDataRepository::_deleteByTileIdNoTransaction(const TileId &)",  "%s\n",  v5);
    if (v6 != buf) {
      free(v6);
    }
  }

  return v2;
}

void sub_100DAB758(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100006BB8(a1);
}

void sub_100DAB764(uint64_t *a1@<X0>, const std::string *a2@<X1>, _OWORD *a3@<X8>, double a4@<D0>)
{
  double v24 = a4;
  sub_100C74FE8(a2, &v23);
  sub_10052D664(*a1, (uint64_t)v22);
  LOBYTE(v20[0]) = 0;
  char v21 = 0;
  uint64_t v6 = v23;
  __int16 v28 = 0LL;
  uint64_t v7 = operator new(0x28uLL);
  *uint64_t v7 = &off_101882DF0;
  v7[1] = a1;
  v7[2] = v20;
  v7[3] = &v24;
  v7[4] = &v23;
  __int16 v28 = v7;
  BOOL v8 = sub_100C752D8((uint64_t)(a1 + 3), v6, (uint64_t)v27);
  __int16 v9 = v28;
  if (v28 == v27)
  {
    uint64_t v10 = 4LL;
    __int16 v9 = v27;
  }

  else
  {
    if (!v28) {
      goto LABEL_6;
    }
    uint64_t v10 = 5LL;
  }

  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_6:
  if (!v21)
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    sub_1010DDBC0(buf, "Failed to successfully read and parse wifi tile header");
    std::runtime_error::runtime_error(exception, buf);
    exception->__vftable = (std::runtime_error_vtbl *)&off_10187A640;
  }

  *((double *)a1 + 4) = v24;
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_101882DC0);
  }
  __int16 v11 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_INFO))
  {
    LODWORD(buf[0].__r_.__value_.__l.__data_) = 67109120;
    HIDWORD(buf[0].__r_.__value_.__r.__words[0]) = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "tile parsing complete, successful, %d",  (uint8_t *)buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101882DC0);
    }
    v25[0] = 67109120;
    v25[1] = v8;
    int v18 = (std::string *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  1LL,  "tile parsing complete, successful, %d",  v25);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLWifiTileHeaderEntry CLWifiTileDataRepository::saveWifiTileAccessPointEntries(const std::string &, cl::chrono::CF AbsoluteTimeClock::time_point)",  "%s\n",  (const char *)v18);
    if (v18 != buf) {
      free(v18);
    }
  }

  __int128 v12 = v20[7];
  a3[6] = v20[6];
  a3[7] = v12;
  a3[8] = v20[8];
  __int128 v13 = v20[3];
  a3[2] = v20[2];
  a3[3] = v13;
  __int128 v14 = v20[5];
  a3[4] = v20[4];
  a3[5] = v14;
  __int128 v15 = v20[1];
  *a3 = v20[0];
  a3[1] = v15;
  sub_100A112B4(v22);
  uint64_t v16 = v23;
  uint64_t v23 = 0LL;
  if (v16)
  {
    __int16 v17 = (void *)sub_100C75D28();
    operator delete(v17);
  }

void sub_100DABA5C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, char a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, void *__p, uint64_t a40, int a41, __int16 a42, char a43, char a44)
{
  uint64_t v45 = a35;
  a35 = 0LL;
  if (v45)
  {
    __int16 v46 = (void *)sub_100C75D28();
    operator delete(v46);
  }

  _Unwind_Resume(a1);
}

unint64_t sub_100DABB14(uint64_t *a1, int *a2)
{
  return sub_100530FB0(*a1, a2);
}

void sub_100DABB30( uint64_t *a1@<X0>, void *a2@<X1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, void *a6@<X8>)
{
}

uint64_t sub_100DABB38(uint64_t *a1)
{
  return sub_10052D650(*a1);
}

void sub_100DABB40(uint64_t *a1@<X0>, int *a2@<X1>, uint64_t a3@<X8>)
{
}

uint64_t sub_100DABB48(uint64_t *a1)
{
  return sub_10052EEF4(*a1);
}

uint64_t sub_100DABB50(uint64_t *a1, int *a2, double a3)
{
  return sub_10052F364(*a1, a2, a3);
}

uint64_t sub_100DABB58(uint64_t *a1, int *a2, double a3)
{
  return sub_10052FD64(*a1, a2, a3);
}

unint64_t sub_100DABB60(uint64_t *a1, int *a2)
{
  return sub_10052FDF0(*a1, a2);
}

void sub_100DABB68(uint64_t *a1@<X0>, int *a2@<X1>, std::string::size_type *a3@<X8>)
{
}

void sub_100DABB70(id a1)
{
  qword_101934868 = (uint64_t)os_log_create("com.apple.locationd.Position", "WifiPosition");
}

__n128 sub_100DABBA4(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x28uLL);
  *(void *)uint64_t v2 = &off_101882DF0;
  *(_OWORD *)(v2 + 8) = *(_OWORD *)(a1 + 8);
  __n128 result = *(__n128 *)(a1 + 24);
  *(__n128 *)(v2 + sub_100BDC958(v1 + 24) = result;
  return result;
}

__n128 sub_100DABBE4(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &off_101882DF0;
  __n128 result = *(__n128 *)(a1 + 8);
  *(_OWORD *)(a2 + sub_100BDC958(v1 + 24) = *(_OWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_100DABC0C(uint64_t a1, uint64_t a2, int *a3, int *a4)
{
  if (*(_BYTE *)(*(void *)(a1 + 16) + 144LL)) {
    sub_10126FA44();
  }
  uint64_t v6 = *(uint64_t **)(a1 + 8);
  int v7 = *a4;
  int v8 = *a3;
  uint64_t v9 = **(void **)(a1 + 24);
  uint64_t v10 = *(unsigned int *)(a2 + 192);
  __int128 v12 = (int *)(a2 + 20);
  int v11 = *(_DWORD *)(a2 + 20);
  __int128 v14 = (int *)(a2 + 16);
  int v13 = *(_DWORD *)(a2 + 16);
  int v15 = sub_1000F0F50(**(void **)(a1 + 32));
  sub_100924414(v51, v11, v13, v7, v15);
  sub_1009242C0( (uint64_t)&v43,  *v12,  *v14,  v10,  *(_DWORD *)(a2 + 12),  *(void *)(a2 + 196),  v8,  *(_DWORD *)(a2 + 24),  *(float *)(a2 + 28),  *(float *)(a2 + 32),  *(float *)(a2 + 36),  *(float *)(a2 + 40),  *(float *)(a2 + 44),  *(float *)(a2 + 48),  *(float *)(a2 + 52),  *(double *)&v9,  v9,  0LL,  v51[0],  v51[1]);
  sub_100924340((double *)&v43, (uint64_t)v40);
  if (sub_1008AD1E0(v40))
  {
    if ((sub_100DAB548(v6, (uint64_t)v40) & 1) != 0)
    {
      if ((sub_10052D740(*v6, (unsigned int *)&v43, **(void **)(a1 + 32), 1LL) & 1) != 0)
      {
        uint64_t v16 = *(void *)(a1 + 16);
        if (*(_BYTE *)(v16 + 144))
        {
          *(_OWORD *)uint64_t v16 = v43;
          __int128 v17 = v44;
          __int128 v18 = v45;
          __int128 v19 = v47;
          *(_OWORD *)(v16 + 48) = v46;
          *(_OWORD *)(v16 + 64) = v19;
          *(_OWORD *)(v16 + 16) = v17;
          *(_OWORD *)(v16 + 32) = v18;
          __int128 v20 = v48;
          __int128 v21 = v49;
          __int128 v22 = *(_OWORD *)v50;
          *(_OWORD *)(v16 + 1sub_100BDC958(v1 + 24) = *(_OWORD *)&v50[12];
          *(_OWORD *)(v16 + 96) = v21;
          *(_OWORD *)(v16 + 112) = v22;
          *(_OWORD *)(v16 + 80) = v20;
        }

        else
        {
          *(_OWORD *)uint64_t v16 = v43;
          __int128 v33 = v44;
          __int128 v34 = v45;
          __int128 v35 = v47;
          *(_OWORD *)(v16 + 48) = v46;
          *(_OWORD *)(v16 + 64) = v35;
          *(_OWORD *)(v16 + 16) = v33;
          *(_OWORD *)(v16 + 32) = v34;
          __int128 v36 = v48;
          __int128 v37 = v49;
          __int128 v38 = *(_OWORD *)&v50[16];
          *(_OWORD *)(v16 + 112) = *(_OWORD *)v50;
          *(_OWORD *)(v16 + 128) = v38;
          *(_OWORD *)(v16 + 80) = v36;
          *(_OWORD *)(v16 + 96) = v37;
          *(_BYTE *)(v16 + 144) = 1;
        }

        goto LABEL_44;
      }

      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101882DC0);
      }
      __int16 v31 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_ERROR))
      {
        LOWORD(__p[0].__r_.__value_.__l.__data_) = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_ERROR,  "failed to save tile header",  (uint8_t *)__p,  2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(__p, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_101882DC0);
        }
        LOWORD(buf.__r_.__value_.__l.__data_) = 0;
        LODWORD(v39) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934868,  16LL,  "failed to save tile header",  &buf,  v39);
        __int16 v28 = (std::stringbuf::string_type *)v32;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "auto CLWifiTileDataRepository::saveWifiTileAccessPointEntries(const std::string &, cl::chrono::CFAbsoluteTimeC lock::time_point)::(anonymous class)::operator()(const CLTilesManager_Type::TileHeader &, int, uint32_t, uint32_t) const",  "%s\n",  v32);
        goto LABEL_41;
      }
    }

    else
    {
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101882DC0);
      }
      int v29 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_ERROR))
      {
        LOWORD(__p[0].__r_.__value_.__l.__data_) = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_ERROR,  "failed to delete previous tile before inserting new one",  (uint8_t *)__p,  2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(__p, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_101882DC0);
        }
        LOWORD(buf.__r_.__value_.__l.__data_) = 0;
        LODWORD(v39) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934868,  16LL,  "failed to delete previous tile before inserting new one",  &buf,  v39);
        __int16 v28 = (std::stringbuf::string_type *)v30;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "auto CLWifiTileDataRepository::saveWifiTileAccessPointEntries(const std::string &, cl::chrono::CFAbsoluteTimeC lock::time_point)::(anonymous class)::operator()(const CLTilesManager_Type::TileHeader &, int, uint32_t, uint32_t) const",  "%s\n",  v30);
LABEL_41:
        if (v28 == __p) {
          goto LABEL_44;
        }
        goto LABEL_42;
      }
    }
  }

  else
  {
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101882DC0);
    }
    uint64_t v23 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_FAULT))
    {
      sub_1008AD840(v40, __p);
      double v24 = (__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0
          ? __p
          : (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
      LODWORD(buf.__r_.__value_.__l.__data_) = 136380675;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v24;
      _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_FAULT,  "Invalid tile ID in saveWifiTileAccessPointEntries: %{private}s, #CloneMe",  (uint8_t *)&buf,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(__p, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101882DC0);
      }
      uint64_t v25 = qword_101934868;
      sub_1008AD840(v40, &buf);
      if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        p_std::stringbuf::string_type buf = &buf;
      }
      else {
        p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
      }
      int v53 = 136380675;
      uint64_t v54 = p_buf;
      LODWORD(v39) = 12;
      _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v25,  17LL,  "Invalid tile ID in saveWifiTileAccessPointEntries: %{private}s, #CloneMe",  &v53,  v39);
      __int16 v28 = v27;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "auto CLWifiTileDataRepository::saveWifiTileAccessPointEntries(const std::string &, cl::chrono::CFAbsoluteTimeClo ck::time_point)::(anonymous class)::operator()(const CLTilesManager_Type::TileHeader &, int, uint32_t, uint32_t) const",  "%s\n",  (const char *)v28);
      if (v28 != __p) {
LABEL_42:
      }
        free(v28);
    }
  }

void sub_100DAC204( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100DAC240(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_100DAC27C()
{
}

double sub_100DAC288(uint64_t a1)
{
  *(void *)(a1 + 32) = &_mh_execute_header;
  *(_OWORD *)(a1 + 40) = xmmword_10135DF34;
  *(_OWORD *)(a1 + 56) = unk_10135DF44;
  *(_OWORD *)(a1 + 72) = xmmword_10135DF54;
  *(_OWORD *)(a1 + 88) = unk_10135DF64;
  *(void *)(a1 + 104) = 0x3FDB28C83F4D0FC7LL;
  *(void *)(a1 + 112) = 0x8C00000000LL;
  *(void *)(a1 + 1800) = 0x8C00000000LL;
  *(void *)(a1 + 3488) = 0x8C00000000LL;
  *(void *)(a1 + 5176) = 0x8C00000000LL;
  *(_DWORD *)(a1 + 6864) = 0;
  *(void *)&double result = 1052320862LL;
  *(_OWORD *)(a1 + 6868) = xmmword_10135DF10;
  *(void *)(a1 + 6888) = 7LL;
  *(void *)(a1 + 6896) = 7LL;
  *(_DWORD *)(a1 + 6944) = 0;
  *(_OWORD *)(a1 + 6948) = xmmword_10135DF10;
  *(void *)(a1 + 6968) = 7LL;
  *(void *)(a1 + 6976) = 7LL;
  *(_DWORD *)(a1 + 6904) = 0;
  int64x2_t v2 = vdupq_n_s64(7uLL);
  *(_OWORD *)(a1 + 6908) = xmmword_10135DF10;
  *(int64x2_t *)(a1 + 6928) = v2;
  *(_DWORD *)(a1 + 6984) = 0;
  *(_OWORD *)(a1 + 6988) = xmmword_10135DF10;
  *(int64x2_t *)(a1 + 7008) = v2;
  return result;
}

uint64_t sub_100DAC334(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v8 = *(void *)(a1 + 6896) - 1LL;
  *(void *)(a1 + 6896) = v8;
  if (!v8)
  {
    *(void *)(a1 + 6896) = *(void *)(a1 + 6888);
    int v9 = *(_DWORD *)(a1 + 6880);
    uint64_t v20 = *(void *)(a1 + 6872);
    int v21 = v9;
    sub_10040B364((unsigned __int16 *)(a1 + 112), (uint64_t)&v20);
  }

  sub_100808DFC((float32x2_t *)(a1 + 6944), (float32x2_t *)(a2 + 24));
  uint64_t v10 = *(void *)(a1 + 6976) - 1LL;
  *(void *)(a1 + 6976) = v10;
  if (!v10)
  {
    *(void *)(a1 + 6976) = *(void *)(a1 + 6968);
    int v11 = *(_DWORD *)(a1 + 6960);
    uint64_t v20 = *(void *)(a1 + 6952);
    int v21 = v11;
    sub_10040B364((unsigned __int16 *)(a1 + 1800), (uint64_t)&v20);
  }

  sub_100808DFC((float32x2_t *)(a1 + 6904), (float32x2_t *)(a2 + 12));
  uint64_t v12 = *(void *)(a1 + 6936) - 1LL;
  *(void *)(a1 + 6936) = v12;
  if (!v12)
  {
    *(void *)(a1 + 6936) = *(void *)(a1 + 6928);
    int v13 = *(_DWORD *)(a1 + 6920);
    uint64_t v20 = *(void *)(a1 + 6912);
    int v21 = v13;
    sub_10040B364((unsigned __int16 *)(a1 + 3488), (uint64_t)&v20);
  }

  sub_1008335D0((float *)(a2 + 36), (float *)&v20);
  v18.i32[0] = sub_100DEA49C((uint64_t)&v20);
  v18.i32[1] = v14;
  int v19 = v15;
  sub_100808DFC((float32x2_t *)(a1 + 6984), &v18);
  uint64_t v16 = *(void *)(a1 + 7016) - 1LL;
  *(void *)(a1 + 7016) = v16;
  if (!v16)
  {
    *(void *)(a1 + 7016) = *(void *)(a1 + 7008);
    sub_10040B364((unsigned __int16 *)(a1 + 5176), (uint64_t)&v18);
  }

  *(double *)(a1 + 70sub_100BDC958(v1 + 24) = a4;
  *(double *)(a1 + 7032) = a3;
  return 1LL;
}

float sub_100DAC494(uint64_t a1, float a2)
{
  double v2 = *(double *)(a1 + 7032);
  if (*(_DWORD *)(a1 + 1804) == *(unsigned __int16 *)(a1 + 1802))
  {
    sub_100215518((uint64_t)v23, 0.07, 0.75, 1.2, 4.6);
    unint64_t v5 = vcvtas_u32_f32((float)(a2 * 4.0) / 0.07);
    if (v5 <= 0x47) {
      LODWORD(v5) = 71;
    }
    BOOL v6 = (int)v5 / -2 < -70 || (int)v5 / 2 == 70;
    int v7 = (int)v5 / 2;
    if (v6) {
      int v8 = -70;
    }
    else {
      int v8 = -v7;
    }
    if (v7 >= 69) {
      int v7 = 69;
    }
    sub_100DAC78C((float *)v23, (unsigned __int16 *)(a1 + 5176), (v8 + 70), v7 + 70);
    float v10 = v9;
    float v12 = v11;
    if (qword_1019344E0 != -1) {
      dispatch_once(&qword_1019344E0, &stru_101882EB8);
    }
    int v13 = (os_log_s *)qword_1019344E8;
    if (os_log_type_enabled((os_log_t)qword_1019344E8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v14 = *(void *)(a1 + 7024);
      uint64_t v15 = *(void *)(a1 + 7032);
      *(_DWORD *)std::stringbuf::string_type buf = 134219008;
      double v35 = v10;
      __int16 v36 = 2048;
      double v37 = v12;
      __int16 v38 = 2048;
      uint64_t v39 = v14;
      __int16 v40 = 2048;
      uint64_t v41 = v15;
      __int16 v42 = 2048;
      double v43 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "Period Estimate Update,period,%f,confidence,%f,timestamp,%f,startTime,%f,periodEstimate,%f",  buf,  0x34u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344E0 != -1) {
        dispatch_once(&qword_1019344E0, &stru_101882EB8);
      }
      uint64_t v17 = *(void *)(a1 + 7024);
      uint64_t v18 = *(void *)(a1 + 7032);
      int v24 = 134219008;
      double v25 = v10;
      __int16 v26 = 2048;
      double v27 = v12;
      __int16 v28 = 2048;
      uint64_t v29 = v17;
      __int16 v30 = 2048;
      uint64_t v31 = v18;
      __int16 v32 = 2048;
      double v33 = a2;
      LODWORD(v21) = 52;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344E8,  2LL,  "Period Estimate Update,period,%f,confidence,%f,timestamp,%f,startTime,%f,periodEstimate,%f",  COERCE_DOUBLE(&v24),  v21,  v22,  v23[0],  v23[1]);
      uint64_t v20 = (uint8_t *)v19;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLSwimClassifier::PeriodEstimate CLSwimClassifier::estimatePeriod(float) const",  "%s\n",  v19);
      if (v20 != buf) {
        free(v20);
      }
    }
  }

  return v2;
}

void sub_100DAC78C(float *a1, unsigned __int16 *a2, unint64_t a3, unint64_t a4)
{
  if (a4 >= 0x8B) {
    unint64_t v7 = 139LL;
  }
  else {
    unint64_t v7 = a4;
  }
  HIDWORD(v25) = 0;
  bzero(v29, 0x230uLL);
  float v8 = 1.0;
  if (*a1 != 0.0) {
    float v8 = 1.0 - expf((float)-a1[1] / *a1);
  }
  unint64_t v9 = 0LL;
  float v10 = -v8;
  if (v7 >= a3) {
    uint64_t v11 = v7 - a3;
  }
  else {
    uint64_t v11 = 0LL;
  }
  do
  {
    if (v7 <= a3)
    {
      unint64_t v16 = 0LL;
    }

    else
    {
      float v12 = 0.0;
      int v13 = v27;
      unint64_t v14 = a3;
      do
      {
        uint64_t v15 = sub_10040B624(a2, v14);
        float v12 = v12 + (float)(v10 * (float)(v12 - sub_1002B8AF0(v15, v9)));
        *v13++ = v12;
        ++v14;
      }

      while (v7 != v14);
      unint64_t v16 = v7 - a3;
    }

    sub_100DEA3E0(v27, v16);
    sub_100DEA424((uint64_t)v27, v28, v16, 1);
    float v17 = sub_100215550((uint64_t)a1, (uint64_t)v28, v16);
    v26[v9] = v17;
    if (v16)
    {
      uint64_t v18 = (float *)v29;
      int v19 = v28;
      uint64_t v20 = v11;
      do
      {
        float v21 = *v19++;
        *uint64_t v18 = *v18 + (float)(v17 * v21);
        ++v18;
        --v20;
      }

      while (v20);
    }

    ++v9;
  }

  while (v9 != 3);
  float v22 = (float)(v26[0] + v26[1]) + v26[2];
  if (v22 >= 0.00000011921)
  {
    if (v16)
    {
      uint64_t v23 = v7 - a3;
      if (v7 < a3) {
        uint64_t v23 = 0LL;
      }
      int v24 = (float *)v29;
      do
      {
        *int v24 = *v24 / v22;
        ++v24;
        --v23;
      }

      while (v23);
    }

    sub_1002155DC((uint64_t)a1, (uint64_t)v29, (float *)&v25 + 1, v16);
  }

uint64_t sub_100DAC980(uint64_t a1, float a2)
{
  uint64_t v3 = sub_100DACB78(a1, v25, (uint64_t)v13, (_BYTE *)&v12 + 7, a2);
  if (qword_1019344E0 != -1) {
    dispatch_once(&qword_1019344E0, &stru_101882EB8);
  }
  uint64_t v4 = (os_log_s *)qword_1019344E8;
  if (os_log_type_enabled((os_log_t)qword_1019344E8, OS_LOG_TYPE_INFO))
  {
    uint64_t v5 = *(void *)(a1 + 7032);
    uint64_t v6 = *(void *)(a1 + 7024);
    *(_DWORD *)std::stringbuf::string_type buf = 67109632;
    int v20 = v3;
    __int16 v21 = 2048;
    uint64_t v22 = v5;
    __int16 v23 = 2048;
    uint64_t v24 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_INFO,  "ClassificationResult,%d,startTime,%f,timestamp,%f",  buf,  0x1Cu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344E0 != -1) {
      dispatch_once(&qword_1019344E0, &stru_101882EB8);
    }
    uint64_t v8 = *(void *)(a1 + 7032);
    uint64_t v9 = *(void *)(a1 + 7024);
    v14[0] = 67109632;
    v14[1] = v3;
    __int16 v15 = 2048;
    uint64_t v16 = v8;
    __int16 v17 = 2048;
    uint64_t v18 = v9;
    LODWORD(v12) = 28;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344E8,  1LL,  "ClassificationResult,%d,startTime,%f,timestamp,%f",  v14,  v12,  v13[0]);
    uint64_t v11 = (uint8_t *)v10;
    sub_10029211C("Generic", 1LL, 0, 2LL, "CLSwimStyleType CLSwimClassifier::classify(float)", "%s\n", v10);
    if (v11 != buf) {
      free(v11);
    }
  }

  return v3;
}

uint64_t sub_100DACB78(uint64_t a1, float *a2, uint64_t a3, _BYTE *a4, float a5)
{
  *a4 = 0;
  sub_100DAC494(a1, a5);
  *(void *)a3 = v10;
  *(_DWORD *)(a3 + 8) = v11;
  *(_BYTE *)(a3 + 12) = v12;
  BOOL v13 = *((float *)&v10 + 1) >= 0.5 && *((float *)&v10 + 1) <= 5.5;
  if (v13 && *(float *)&v10 >= 0.2 && (unsigned int v14 = llroundf(*((float *)&v10 + 1) / 0.07), v14 < 0x8D))
  {
    int v15 = 0;
  }

  else
  {
    unsigned int v14 = llroundf((float)(a5 * 0.5) / 0.07);
    int v15 = 1;
  }

  unint64_t v16 = 2 * v14;
  *(void *)(a1 + 16) = v16;
  BOOL v13 = (int)v16 / -2 < -70 || (int)v16 / 2 == 70;
  int v17 = (int)v16 / 2;
  if (v13) {
    int v18 = -70;
  }
  else {
    int v18 = -v17;
  }
  uint64_t v19 = (v18 + 70);
  if (v17 >= 69) {
    int v17 = 69;
  }
  int v20 = v17 + 70;
  unsigned int v21 = v20 - v19 + 1;
  *(void *)a1 = v19;
  *(void *)(a1 + 8) = v20;
  if (v14 >= v21) {
    unsigned int v14 = v20 - v19 + 1;
  }
  *(void *)(a1 + 16) = (int)v21;
  *(void *)(a1 + sub_100BDC958(v1 + 24) = (int)v14;
  *a4 = 1;
  sub_100DACD88(a1, a2);
  if (*a2 < -0.64) {
    return 0LL;
  }
  if (*a2 <= 0.67)
  {
    unint64_t v23 = 0LL;
    uint64_t v24 = (float *)&dword_10135DF88;
    do
    {
      unint64_t v25 = v23;
      if (v23 == 13) {
        break;
      }
      float v26 = a2[v23 + 1];
      if (v26 < *(v24 - 1)) {
        break;
      }
      float v27 = *v24;
      v24 += 2;
      ++v23;
    }

    while (v26 <= v27);
    BOOL v22 = v25 < 0xD;
  }

  else
  {
    BOOL v22 = 1;
  }

  if (((v15 | v22) & 1) != 0) {
    return 0LL;
  }
  else {
    return sub_100DAD24C(a1, (int32x2_t *)a2);
  }
}

uint64_t sub_100DACD54(uint64_t a1, uint64_t a2, float *a3, float a4)
{
  unsigned __int8 v5 = 0;
  sub_100DACB78(a1, a3, a2, &v5, a4);
  return v5;
}

void sub_100DACD88(uint64_t a1, float *a2)
{
  double v2 = a2;
  int v4 = *(_DWORD *)(a1 + 36);
  float v5 = 1.0;
  if (*(_DWORD *)(a1 + 32) == v4) {
    float v6 = -1.0;
  }
  else {
    float v6 = 1.0;
  }
  if (!v4) {
    float v5 = -1.0;
  }
  float v53 = v5;
  float v54 = v6;
  v75[0] = 0LL;
  v75[1] = 0LL;
  int v76 = 0;
  uint64_t v77 = 0LL;
  uint64_t v78 = 0LL;
  int v79 = 0;
  uint64_t v80 = 0LL;
  uint64_t v74 = 0LL;
  memset(v73, 0, 44);
  unint64_t v7 = *(void *)a1;
  if (*(void *)a1 <= *(void *)(a1 + 8))
  {
    uint64_t v16 = 0LL;
    float v55 = 0.0;
    float v17 = 1.1755e-38;
    float v18 = 3.4028e38;
    float v19 = 0.0;
    float v20 = 0.0;
    float v61 = 1.1755e-38;
    float v63 = 3.4028e38;
    float v59 = 1.1755e-38;
    float v60 = 3.4028e38;
    float v58 = 0.0;
    float v11 = 1.1755e-38;
    float v69 = 0.0;
    float v70 = 1.1755e-38;
    float v68 = 1.1755e-38;
    float v10 = 3.4028e38;
    float v12 = 1.1755e-38;
    float v13 = 3.4028e38;
    float v14 = 3.4028e38;
    float v15 = 1.1755e-38;
    do
    {
      float v65 = v20;
      float v67 = v19;
      unsigned int v21 = (float *)sub_10040B624((unsigned __int16 *)(a1 + 1800), v7);
      BOOL v22 = (float *)sub_10040B624((unsigned __int16 *)(a1 + 112), v7);
      unint64_t v23 = (float *)sub_10040B624((unsigned __int16 *)(a1 + 3488), v7);
      uint64_t v24 = 0LL;
      float v26 = *v21;
      float v25 = v21[1];
      float v27 = 0.0;
      float v28 = v21[2];
      do
      {
        float v27 = v27 + (float)(v22[v24] * v22[v24]);
        ++v24;
      }

      while (v24 != 3);
      float v30 = v59;
      float v29 = v60;
      if (v60 > v26) {
        float v29 = *v21;
      }
      if (v59 < v26) {
        float v30 = *v21;
      }
      float v32 = v61;
      float v31 = v63;
      if (v63 > v25) {
        float v31 = v21[1];
      }
      if (v61 < v25) {
        float v32 = v21[1];
      }
      if (v18 > v28) {
        float v18 = v21[2];
      }
      if (v17 < v28) {
        float v17 = v21[2];
      }
      float v56 = v18;
      float v57 = v17;
      float v33 = sqrtf(v27);
      float v34 = 0.0;
      float v61 = v32;
      float v63 = v31;
      float v59 = v30;
      float v60 = v29;
      if (v33 == 0.0)
      {
        float v35 = 0.0;
      }

      else
      {
        float v35 = v22[1] / v33;
        float v55 = v55 + (float)(*v22 / v33);
      }

      float v58 = v58 + v33;
      unint64_t v36 = v16 + 1;
      sub_100DAD990((float *)v75, v25, v35, v33);
      sub_1005B19F8((uint64_t)v73, v21[1], v35);
      for (uint64_t i = 0LL; i != 3; ++i)
        float v34 = v34 + (float)(v23[i] * v23[i]);
      v82[v16] = sqrtf(v34);
      float v38 = v23[2];
      float v19 = v67 + fabsf(v38);
      float v39 = (float)(v38 * v38) + (float)(*v23 * *v23);
      float v41 = *v22;
      float v40 = v22[1];
      float v42 = fabsf(v40);
      float v20 = v65 + v42;
      if (v14 > v42) {
        float v14 = v42;
      }
      if (v15 < v42) {
        float v15 = v42;
      }
      float v43 = sqrtf(v39);
      if (v10 > v43) {
        float v10 = v43;
      }
      if (v11 < v43) {
        float v11 = v43;
      }
      float v44 = fabsf(v41);
      float v45 = v68;
      if (v68 < v44) {
        float v45 = v44;
      }
      float v68 = v45;
      float v69 = v69 + (float)(v41 * v41);
      float v46 = v70;
      if (v70 < v42) {
        float v46 = v42;
      }
      float v70 = v46;
      ++v7;
      ++v16;
      float v18 = v56;
      float v17 = v57;
    }

    while (v7 <= *(void *)(a1 + 8));
    double v2 = a2;
    a2[12] = (float)((float)((float)(v59 - v60) + (float)(v61 - v63)) + (float)(v57 - v56)) / 3.0;
    if (v36)
    {
      int v9 = 0;
      float v62 = (float)v36;
      float v8 = v58 / (float)v36;
    }

    else
    {
      float v8 = 0.0;
      float v62 = 0.0;
      int v9 = 1;
    }

    float v64 = v65 + v42;
    float v66 = v19;
  }

  else
  {
    a2[12] = -INFINITY;
    float v8 = 0.0;
    float v55 = 0.0;
    int v9 = 1;
    float v10 = 3.4028e38;
    float v11 = 1.1755e-38;
    float v64 = 0.0;
    float v66 = 0.0;
    float v69 = 0.0;
    float v70 = 1.1755e-38;
    float v68 = 1.1755e-38;
    float v62 = 0.0;
    float v12 = 1.1755e-38;
    float v13 = 3.4028e38;
    float v14 = 3.4028e38;
    float v15 = 1.1755e-38;
  }

  v2[13] = v8;
  v2[1] = (float)(v54 * v53) * sub_100DADA18((uint64_t)v75);
  v2[4] = (float)(v54 * v53) * sub_1005B1C24((uint64_t)v73);
  float *v2 = (float)(v53 * v55) / (float)*(unint64_t *)(a1 + 16);
  sub_100DAD878((unint64_t *)a1, v82, (uint64_t)v2);
  float v47 = v54 * v2[3];
  v2[9] = v54 * v2[9];
  float v48 = v66 / v64;
  float v49 = 0.0;
  if (v64 == 0.0) {
    float v48 = 0.0;
  }
  void v2[2] = v48;
  v2[3] = v47;
  float v50 = 0.0;
  v2[5] = v50;
  v2[6] = v12;
  float v51 = v68 / v70;
  if (v70 == 0.0) {
    float v51 = 0.0;
  }
  v2[7] = v13;
  v2[8] = v51;
  if (!v9) {
    float v49 = v69 / v62;
  }
  v2[11] = sqrtf(v49);
  uint64_t v71 = 0LL;
  unint64_t v72 = 0LL;
  sub_100DADAD8(a1, (uint64_t)v82, &v72, &v71, v81);
  v2[10] = sub_100DADCE0(a1, v82, v72, v71, (uint64_t)v81);
}

uint64_t sub_100DAD24C(uint64_t a1, int32x2_t *a2)
{
  int32x2_t v89 = vrev64_s32(*a2);
  __int32 v3 = a2[1].i32[0];
  __int32 v90 = a2[1].i32[1];
  __int32 v4 = a2[4].i32[1];
  v84[0] = a2[4].i32[0];
  v84[1] = v3;
  float v5 = *(float *)&a2[2].i32[1];
  v84[2] = a2[2].i32[0];
  v84[3] = v4;
  v84[4] = fminf(v5, 0.475);
  *(int32x2_t *)&__int128 v6 = vrev64_s32(a2[3]);
  *((int32x2_t *)&v6 + 1) = vrev64_s32(a2[5]);
  __int128 v85 = v6;
  sub_10050D3D4((uint64_t)&v89, &v86, (int *)(a1 + 40), 3LL, 3LL);
  uint64_t v7 = 2LL;
  sub_10050D3D4((uint64_t)v84, &v82, (int *)(a1 + 72), 2LL, 9LL);
  if (v88 <= 0.5)
  {
    if (v87 <= 0.725)
    {
      if (v82 <= 0.5) {
        uint64_t v7 = 1LL;
      }
      else {
        uint64_t v7 = 4LL;
      }
    }

    else
    {
      uint64_t v7 = 3LL;
    }
  }

  if (qword_1019344E0 != -1) {
    dispatch_once(&qword_1019344E0, &stru_101882EB8);
  }
  float v8 = (os_log_s *)qword_1019344E8;
  if (os_log_type_enabled((os_log_t)qword_1019344E8, OS_LOG_TYPE_INFO))
  {
    int v9 = (&off_101882E60)[v7];
    uint64_t v10 = *(void *)(a1 + 7024);
    uint64_t v11 = *(void *)(a1 + 7032);
    *(_DWORD *)std::stringbuf::string_type buf = 136318978;
    float v51 = v9;
    __int16 v52 = 1024;
    int v53 = v7;
    __int16 v54 = 2080;
    float v55 = "tier1_0";
    __int16 v56 = 2048;
    double v57 = v86;
    __int16 v58 = 2080;
    float v59 = "tier1_1";
    __int16 v60 = 2048;
    double v61 = v87;
    __int16 v62 = 2080;
    float v63 = "tier1_2";
    __int16 v64 = 2048;
    double v65 = v88;
    __int16 v66 = 2080;
    float v67 = "tier2_0";
    __int16 v68 = 2048;
    double v69 = v82;
    __int16 v70 = 2080;
    uint64_t v71 = "tier2_1";
    __int16 v72 = 2048;
    double v73 = v83;
    __int16 v74 = 2080;
    uint64_t v75 = "timestamp";
    __int16 v76 = 2048;
    uint64_t v77 = v10;
    __int16 v78 = 2080;
    int v79 = "startTime";
    __int16 v80 = 2048;
    uint64_t v81 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_INFO,  "Classification,%s,%d,%s,%f,%s,%f,%s,%f,%s,%f,%s,%f,%s,%f,%s,%f",  buf,  0x9Eu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344E0 != -1) {
      dispatch_once(&qword_1019344E0, &stru_101882EB8);
    }
    float v13 = (&off_101882E60)[v7];
    uint64_t v14 = *(void *)(a1 + 7024);
    uint64_t v15 = *(void *)(a1 + 7032);
    int v18 = 136318978;
    float v19 = v13;
    __int16 v20 = 1024;
    int v21 = v7;
    __int16 v22 = 2080;
    unint64_t v23 = "tier1_0";
    __int16 v24 = 2048;
    double v25 = v86;
    __int16 v26 = 2080;
    float v27 = "tier1_1";
    __int16 v28 = 2048;
    double v29 = v87;
    __int16 v30 = 2080;
    float v31 = "tier1_2";
    __int16 v32 = 2048;
    double v33 = v88;
    __int16 v34 = 2080;
    float v35 = "tier2_0";
    __int16 v36 = 2048;
    double v37 = v82;
    __int16 v38 = 2080;
    float v39 = "tier2_1";
    __int16 v40 = 2048;
    double v41 = v83;
    __int16 v42 = 2080;
    float v43 = "timestamp";
    __int16 v44 = 2048;
    uint64_t v45 = v14;
    __int16 v46 = 2080;
    float v47 = "startTime";
    __int16 v48 = 2048;
    uint64_t v49 = v15;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344E8,  1LL,  "Classification,%s,%d,%s,%f,%s,%f,%s,%f,%s,%f,%s,%f,%s,%f,%s,%f",  (const char *)&v18,  158);
    float v17 = (uint8_t *)v16;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLSwimStyleType CLSwimClassifier::runTieredClassifiers(const float (&)[14]) const",  "%s\n",  v16);
    if (v17 != buf) {
      free(v17);
    }
  }

  return v7;
}

void sub_100DAD6A8(uint64_t a1, void *a2)
{
  *(void *)(a1 + 32) = *a2;
  if (qword_1019344E0 != -1) {
    dispatch_once(&qword_1019344E0, &stru_101882EB8);
  }
  __int32 v3 = (os_log_s *)qword_1019344E8;
  if (os_log_type_enabled((os_log_t)qword_1019344E8, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = *(_DWORD *)(a1 + 32);
    int v5 = *(_DWORD *)(a1 + 36);
    *(_DWORD *)std::stringbuf::string_type buf = 67109376;
    int v14 = v4;
    __int16 v15 = 1024;
    int v16 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Swimming device orientation set,wrist,%d,crown,%d",  buf,  0xEu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344E0 != -1) {
      dispatch_once(&qword_1019344E0, &stru_101882EB8);
    }
    int v6 = *(_DWORD *)(a1 + 32);
    int v7 = *(_DWORD *)(a1 + 36);
    v10[0] = 67109376;
    v10[1] = v6;
    __int16 v11 = 1024;
    int v12 = v7;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344E8,  0LL,  "Swimming device orientation set,wrist,%d,crown,%d",  v10,  14);
    int v9 = (uint8_t *)v8;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSwimClassifier::setDeviceOrientation(const CLGizmoOrientation &)",  "%s\n",  v8);
    if (v9 != buf) {
      free(v9);
    }
  }

unint64_t *sub_100DAD878(unint64_t *result, float *a2, uint64_t a3)
{
  int v4 = a2;
  int v5 = result;
  unint64_t v6 = result[2];
  float v7 = 0.0;
  float v8 = 0.0;
  if (v6)
  {
    uint64_t v9 = 0LL;
    float v10 = 0.0;
    do
      float v10 = v10 + a2[v9++];
    while (v6 != v9);
    float v8 = v10 / (float)v6;
  }

  unint64_t v11 = *result;
  float v12 = 0.0;
  float v13 = 0.0;
  float v14 = 0.0;
  if (*result <= result[1])
  {
    float v7 = 0.0;
    do
    {
      if (*v4 > v8)
      {
        __int16 v15 = (float *)sub_10040B624((unsigned __int16 *)v5 + 900, v11);
        float v7 = v7 + *v4;
        float v12 = v12 + (float)(*v4 * *v15);
      }

      double result = (unint64_t *)sub_10040B624((unsigned __int16 *)v5 + 900, v11);
      float v16 = *v4++;
      float v13 = v13 + v16;
      float v14 = v14 + (float)(v16 * *(float *)result);
      ++v11;
    }

    while (v11 <= v5[1]);
  }

  float v17 = v12 / v7;
  if (v7 == 0.0) {
    float v17 = 0.0;
  }
  *(float *)(a3 + 12) = v17;
  float v18 = v14 / v13;
  if (v13 == 0.0) {
    float v18 = 0.0;
  }
  *(float *)(a3 + 36) = v18;
  return result;
}

float sub_100DAD990(float *a1, float a2, float a3, float a4)
{
  if (a4 <= 0.0)
  {
    uint64_t v9 = *(void *)a1;
  }

  else
  {
    float v4 = a1[4];
    float v5 = v4 + a4;
    float v6 = a1[2];
    float v7 = (float)((float)(a2 - v6) * a4) / (float)(v4 + a4);
    float v8 = a1[3] + (float)((float)(v4 * (float)(a2 - v6)) * v7);
    a1[2] = v6 + v7;
    a1[3] = v8;
    a1[4] = v5;
    uint64_t v9 = *(void *)a1;
    float v10 = a1[10];
    float v11 = v10 + a4;
    float v12 = a1[8];
    float v13 = (float)((float)(a3 - v12) * a4) / (float)(v10 + a4);
    float v14 = a1[9] + (float)((float)(v10 * (float)(a3 - v12)) * v13);
    a1[8] = v12 + v13;
    a1[9] = v14;
    a1[10] = v11;
  }

  *(void *)a1 = v9 + 1;
  ++*((void *)a1 + 3);
  return sub_100DADFF4((uint64_t)(a1 + 12), a2, a3, a4);
}

float sub_100DADA18(uint64_t a1)
{
  float v1 = 0.0;
  float v2 = 0.0;
  if (*(void *)a1 >= 2uLL)
  {
    float v3 = *(float *)(a1 + 16);
    if (v3 != 0.0) {
  }
    }

  unint64_t v4 = *(void *)(a1 + 24);
  if (v4 >= 2)
  {
    float v5 = *(float *)(a1 + 40);
    if (v5 != 0.0) {
      float v1 = (float)((float)v4 / (float)(v4 - 1)) * (float)(*(float *)(a1 + 36) / v5);
    }
  }

  float v6 = v2 * v1;
  float result = 0.0;
  if (v6 > 0.0)
  {
    unint64_t v8 = *(void *)(a1 + 64);
    if (v8 >= 2)
    {
      float v9 = *(float *)(a1 + 72);
      if (v9 != 0.0) {
        float result = (float)((float)v8 / (float)((float)v8 + -1.0)) * (float)(*(float *)(a1 + 56) / v9);
      }
    }

    return result / sqrtf(v6);
  }

  return result;
}

void sub_100DADAD8(uint64_t a1, uint64_t a2, unint64_t *a3, void *a4, float *a5)
{
  unint64_t v9 = *(void *)(a1 + 24);
  if (v9 >= 5)
  {
    unint64_t v10 = 0LL;
    unint64_t v11 = 4LL;
    float v12 = 3.4028e38;
    do
    {
      float v13 = 0.0;
      unint64_t v14 = v10;
      do
        float v13 = v13 + *(float *)(a2 + 4 + 4 * v14++);
      while (v14 < v11);
      if (v13 < v12)
      {
        *a3 = v11;
        unint64_t v9 = *(void *)(a1 + 24);
        float v12 = v13;
      }

      ++v11;
      ++v10;
    }

    while (v11 < v9);
  }

  uint64_t v15 = *a3 - 2;
  *a3 = v15;
  float v16 = *(float *)sub_10040B624((unsigned __int16 *)(a1 + 5176), *(void *)a1 + v15);
  float v17 = *(float *)(sub_10040B624((unsigned __int16 *)(a1 + 5176), *(void *)a1 + *a3) + 4);
  float v18 = sqrtf((float)(v16 * v16) + (float)(v17 * v17));
  if (v18 > 0.00000011921)
  {
    float v16 = v16 / v18;
    float v17 = v17 / v18;
  }

  unint64_t v19 = *(void *)a1;
  if (*(void *)a1 <= *(void *)(a1 + 8))
  {
    __int16 v20 = a5;
    do
    {
      float v21 = *(float *)sub_10040B624((unsigned __int16 *)(a1 + 5176), v19);
      float v22 = *(float *)(sub_10040B624((unsigned __int16 *)(a1 + 5176), v19) + 4);
      float v23 = sqrtf((float)(v21 * v21) + (float)(v22 * v22));
      if (v23 > 0.00000011921)
      {
        float v21 = v21 / v23;
        float v22 = v22 / v23;
      }

      *v20++ = acosf(fmaxf(fminf((float)(v17 * v22) + (float)(v16 * v21), 1.0), -1.0));
      ++v19;
    }

    while (v19 <= *(void *)(a1 + 8));
  }

  unint64_t v24 = *a3;
  unint64_t v25 = *(void *)(a1 + 24) + *a3;
  if (v25 >= *(void *)(a1 + 16)) {
    unint64_t v25 = *(void *)(a1 + 16);
  }
  if (v24 >= v25)
  {
    unint64_t v28 = *a3;
  }

  else
  {
    float v26 = -3.4028e38;
    unint64_t v27 = *a3;
    unint64_t v28 = *a3;
    do
    {
      if (a5[v27] > v26)
      {
        float v26 = a5[v27];
        unint64_t v28 = v27;
      }

      ++v27;
    }

    while (v25 != v27);
  }

  *a3 = *(void *)a1 + v24;
  *a4 = *(void *)a1 + v28;
}

float sub_100DADCE0(uint64_t a1, float *a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10)
  {
    float v11 = 1.1755e-38;
    goto LABEL_9;
  }

  float v11 = 1.1755e-38;
  float v12 = a2;
  do
  {
    float v13 = *v12++;
    float v14 = v13;
    if (v11 < v13) {
      float v11 = v14;
    }
    --v10;
  }

  while (v10);
  float v15 = 0.0;
  if (v11 != 0.0)
  {
LABEL_9:
    unint64_t v16 = *(void *)a1;
    float v15 = 0.0;
    if (*(void *)a1 >= *(void *)(a1 + 8))
    {
      int v20 = 1;
      float v18 = 0.0;
      float v21 = 0.0;
    }

    else
    {
      unint64_t v17 = 0LL;
      float v18 = 0.0;
      do
      {
        uint64_t v19 = sub_10040B624((unsigned __int16 *)(a1 + 112), v16 + v17);
        float v18 = v18 + (float)(*(float *)(v19 + 4) * *(float *)(v19 + 4));
        ++v17;
      }

      while (v16 + v17 < *(void *)(a1 + 8));
      if (v17)
      {
        int v20 = 0;
        float v21 = (float)v17;
        float v22 = v18 / (float)v17;
        goto LABEL_17;
      }

      float v21 = 0.0;
      int v20 = 1;
    }

    float v22 = 0.0;
LABEL_17:
    if (sqrtf(v22) != 0.0)
    {
      uint64_t v23 = a4 - a3;
      float v24 = 0.0;
      float v25 = 0.0;
      if (a4 - a3 != -1LL)
      {
        unint64_t v26 = a3 - *(void *)a1;
        uint64_t v27 = v23 + 1;
        unint64_t v28 = a3;
        do
        {
          if (v26 >= *(void *)(a1 + 16)) {
            unint64_t v29 = 0LL;
          }
          else {
            unint64_t v29 = v26;
          }
          if (v28 > *(void *)(a1 + 8)) {
            unint64_t v28 = *(void *)a1;
          }
          uint64_t v30 = sub_10040B624((unsigned __int16 *)(a1 + 112), v28);
          float v31 = 0.0;
          float v24 = v24 + v31;
          float v25 = v25 + (float)(v31 * (float)(*(float *)(v30 + 4) * *(float *)(v30 + 4)));
          unint64_t v26 = v29 + 1;
          ++v28;
          --v27;
        }

        while (v27);
        uint64_t v32 = *(void *)(a1 + 24);
        unint64_t v33 = v32 + a3;
        unint64_t v34 = a3 - *(void *)a1 + v32;
        uint64_t v35 = v23 + 1;
        do
        {
          if (v34 >= *(void *)(a1 + 16)) {
            unint64_t v36 = 0LL;
          }
          else {
            unint64_t v36 = v34;
          }
          if (v33 > *(void *)(a1 + 8)) {
            unint64_t v33 = *(void *)a1;
          }
          uint64_t v37 = sub_10040B624((unsigned __int16 *)(a1 + 112), v33);
          float v38 = 0.0;
          float v24 = v24 + v38;
          float v25 = v25 + (float)(v38 * (float)(*(float *)(v37 + 4) * *(float *)(v37 + 4)));
          unint64_t v34 = v36 + 1;
          ++v33;
          --v35;
        }

        while (v35);
      }

      float v39 = v25 / v24;
      if (v24 == 0.0) {
        float v39 = 0.0;
      }
      float v40 = sqrtf(v39);
      float v41 = v18 / v21;
      if (v20) {
        float v41 = 0.0;
      }
      return v40 / sqrtf(v41);
    }
  }

  return v15;
}

double sub_100DADF3C(_OWORD *a1)
{
  double result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_100DADF48(uint64_t result, int a2)
{
  if (a2)
  {
    if (a2 != 7)
    {
      ++*(_DWORD *)(result + 28);
      ++*(_DWORD *)(result + 4LL * a2);
    }
  }

  return result;
}

uint64_t sub_100DADF74(uint64_t a1)
{
  unsigned int v2 = *(_DWORD *)(a1 + 28);
  if (!v2) {
    return 0LL;
  }
  uint64_t v3 = 0LL;
  int v4 = 0;
  do
  {
    if (*(_DWORD *)(a1 + 4 * v3) > v4)
    {
      int v4 = *(_DWORD *)(a1 + 4 * v3);
      unsigned int v1 = v3;
    }

    ++v3;
  }

  while (v3 != 7);
  else {
    return v1;
  }
}

void sub_100DADFC8(id a1)
{
  qword_1019344E8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Swimming");
}

float sub_100DADFF4(uint64_t a1, float result, float a3, float a4)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    if (a4 > 0.0)
    {
      float v5 = *(float *)(a1 + 24);
      float v6 = *(float *)(a1 + 4);
      float v7 = v5 + a4;
      float v8 = *(float *)(a1 + 8)
      double result = *(float *)a1 + (float)(a4 * result);
      *(float *)a1 = result;
      *(float *)(a1 + 4) = v6 + (float)(a4 * a3);
      *(float *)(a1 + 8) = v8;
      *(float *)(a1 + sub_100BDC958(v1 + 24) = v7;
    }

    *(void *)(a1 + 16) = v4 + 1;
  }

  else if (a4 > 0.0)
  {
    *(float *)(a1 + sub_100BDC958(v1 + 24) = a4;
    double result = result * a4;
    *(float *)a1 = result;
    *(float *)(a1 + 4) = a3 * a4;
    *(void *)(a1 + 16) = 1LL;
    *(_DWORD *)(a1 + 8) = 0;
  }

  return result;
}

void sub_100DAE07C(uint64_t *a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)(a2 + 4);
  a1[2] = *(void *)(a2 + 28);
  a1[3] = *(void *)(a2 + 44);
  a1[4] = *(void *)(a2 + 60);
  a1[5] = *(void *)(a2 + 20);
  a1[6] = *(void *)(a2 + 36);
  a1[8] = *(void *)(a2 + 52);
  a1[7] = *(void *)(a2 + 68);
  a1[9] = *(void *)(a2 + 184);
  a1[10] = *(void *)(a2 + 504);
  *((_DWORD *)a1 + 22) = *(_DWORD *)(a2 + 132);
  if (qword_101934810 != -1) {
    dispatch_once(&qword_101934810, &stru_101882ED8);
  }
  uint64_t v4 = (os_log_s *)qword_101934818;
  if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_DEBUG))
  {
    int v5 = *(_DWORD *)(a2 + 96);
    uint64_t v6 = *a1;
    uint64_t v7 = a1[1];
    uint64_t v8 = a1[2];
    uint64_t v9 = a1[3];
    uint64_t v10 = a1[4];
    uint64_t v11 = a1[5];
    uint64_t v13 = a1[8];
    uint64_t v12 = a1[9];
    uint64_t v14 = a1[6];
    uint64_t v15 = a1[7];
    uint64_t v16 = a1[10];
    int v17 = *((_DWORD *)a1 + 22);
    *(_DWORD *)std::stringbuf::string_type buf = 134352129;
    uint64_t v59 = v12;
    __int16 v60 = 1026;
    int v61 = v5;
    __int16 v62 = 2049;
    uint64_t v63 = v6;
    __int16 v64 = 2049;
    uint64_t v65 = v7;
    __int16 v66 = 2050;
    uint64_t v67 = v8;
    __int16 v68 = 2050;
    uint64_t v69 = v9;
    __int16 v70 = 2050;
    uint64_t v71 = v10;
    __int16 v72 = 2050;
    uint64_t v73 = v11;
    __int16 v74 = 2050;
    uint64_t v75 = v14;
    __int16 v76 = 2050;
    uint64_t v77 = v13;
    __int16 v78 = 2050;
    uint64_t v79 = v15;
    __int16 v80 = 2050;
    uint64_t v81 = v16;
    __int16 v82 = 1026;
    int v83 = v17;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "CLAccessoryAWD,%{public}.1lf,DeviceLocationData,type,%{public}d,ll,%{private}.7lf,%{private}.7lf,alt,%{public}.2lf ,speed,%{public}.2lf,course,%{public}.2lf,hUnc,%{public}.2lf,vUnc,%{public}.2lf,speedUnc,%{public}.2lf,courseUnc,% {public}.2lf,mct,%{public}.1lf,refFrame,%{public}d",  buf,  0x7Cu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934810 != -1) {
      dispatch_once(&qword_101934810, &stru_101882ED8);
    }
    int v18 = *(_DWORD *)(a2 + 96);
    uint64_t v19 = *a1;
    uint64_t v20 = a1[1];
    uint64_t v21 = a1[2];
    uint64_t v22 = a1[3];
    uint64_t v23 = a1[4];
    uint64_t v24 = a1[5];
    uint64_t v26 = a1[8];
    uint64_t v25 = a1[9];
    uint64_t v28 = a1[6];
    uint64_t v27 = a1[7];
    uint64_t v29 = a1[10];
    int v30 = *((_DWORD *)a1 + 22);
    int v32 = 134352129;
    uint64_t v33 = v25;
    __int16 v34 = 1026;
    int v35 = v18;
    __int16 v36 = 2049;
    uint64_t v37 = v19;
    __int16 v38 = 2049;
    uint64_t v39 = v20;
    __int16 v40 = 2050;
    uint64_t v41 = v21;
    __int16 v42 = 2050;
    uint64_t v43 = v22;
    __int16 v44 = 2050;
    uint64_t v45 = v23;
    __int16 v46 = 2050;
    uint64_t v47 = v24;
    __int16 v48 = 2050;
    uint64_t v49 = v28;
    __int16 v50 = 2050;
    uint64_t v51 = v26;
    __int16 v52 = 2050;
    uint64_t v53 = v27;
    __int16 v54 = 2050;
    uint64_t v55 = v29;
    __int16 v56 = 1026;
    int v57 = v30;
    float v31 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934818,  2LL,  "CLAccessoryAWD,%{public}.1lf,DeviceLocationData,type,%{public}d,ll,%{private}.7lf,%{private}.7lf,alt ,%{public}.2lf,speed,%{public}.2lf,course,%{public}.2lf,hUnc,%{public}.2lf,vUnc,%{public}.2lf,speedU nc,%{public}.2lf,courseUnc,%{public}.2lf,mct,%{public}.1lf,refFrame,%{public}d",  &v32,  124);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void DeviceLocationData::fillData(const CLLocationProvider_Type::NotificationData &)",  "%s\n",  v31);
  }

uint64_t sub_100DAE39C(uint64_t result, int a2, double a3)
{
  double v3 = *(double *)(result + 2992);
  if (a2)
  {
    if (v3 >= 0.0) {
      return result;
    }
LABEL_6:
    *(double *)(result + 2992) = a3;
    return result;
  }

  if (v3 > 0.0)
  {
    *(_DWORD *)(result + 1560) += vabdd_f64(a3, v3);
    a3 = -1.0;
    goto LABEL_6;
  }

  return result;
}

uint64_t *sub_100DAE3D8(uint64_t *result, int a2, double a3, double a4)
{
  if (a4 > 0.0)
  {
    double v4 = *((double *)result + 369);
    if (v4 > 0.0)
    {
      if (v4 > a4) {
        a4 = *((double *)result + 369);
      }
      uint64_t v5 = vabdd_f64(a3, a4);
      *((_DWORD *)result + 94) += v5;
      return sub_100DAE41C(a2, (uint64_t)(result + 48), v5);
    }
  }

  return result;
}

uint64_t *sub_100DAE41C(int a1, uint64_t a2, uint64_t a3)
{
  int v3 = a3;
  int v7 = a1;
  for (uint64_t i = *(uint64_t **)(a2 + 8); i; uint64_t i = (uint64_t *)*i)
  {
    int v5 = *((_DWORD *)i + 7);
    if (v5 <= a1)
    {
      if (v5 >= a1)
      {
        uint64_t v8 = (unsigned int *)&v7;
        double result = sub_100228E48((uint64_t **)a2, &v7, (uint64_t)&unk_1012CF090, &v8);
        *((_DWORD *)result + 8) += v3;
        return result;
      }

      ++i;
    }
  }

  uint64_t v8 = (unsigned int *)(a1 | (unint64_t)(a3 << 32));
  return sub_100DAF454((uint64_t **)a2, (int *)&v8, (uint64_t *)&v8);
}

void sub_100DAE4BC(void **a1, uint64_t **a2, int a3)
{
  if (sub_1004DAD38((uint64_t)a2, (const void **)a1))
  {
    __p[0] = a1;
    uint64_t v6 = sub_1002E2A90(a2, (const void **)a1, (uint64_t)&unk_1012CF090, (__int128 **)__p);
    *((_DWORD *)v6 + 14) += a3;
  }

  else
  {
    if (*((char *)a1 + 23) < 0)
    {
      sub_1010DD48C(__p, *a1, (unint64_t)a1[1]);
    }

    else
    {
      *(_OWORD *)std::stringbuf::string_type __p = *(_OWORD *)a1;
      uint64_t v8 = a1[2];
    }

    int v9 = a3;
    sub_10070C4AC(a2, (const void **)__p, (uint64_t)__p);
    if (SHIBYTE(v8) < 0) {
      operator delete(__p[0]);
    }
  }

void sub_100DAE57C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DAE598(uint64_t a1, double a2)
{
  double v3 = *(double *)(a1 + 2968);
  if (v3 > 0.0)
  {
    *(_DWORD *)(a1 + 240) += vabdd_f64(a2, v3);
    if (qword_101934810 != -1) {
      dispatch_once(&qword_101934810, &stru_101882ED8);
    }
    int v5 = (os_log_s *)qword_101934818;
    if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_DEBUG))
    {
      CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
      uint64_t v7 = *(void *)(a1 + 2968);
      int v9 = *(_DWORD *)(a1 + 236);
      int v8 = *(_DWORD *)(a1 + 240);
      *(_DWORD *)std::stringbuf::string_type buf = 134350080;
      CFAbsoluteTime v27 = Current;
      __int16 v28 = 2050;
      uint64_t v29 = v7;
      __int16 v30 = 2050;
      double v31 = a2;
      __int16 v32 = 1026;
      int v33 = v8;
      __int16 v34 = 1026;
      int v35 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "CLAccessoryAWD,%{public}.1lf,locationSession,start,%{public}.1lf,end,%{public}.1lf,duration,%{public}d,sessions,%{public}d",  buf,  0x2Cu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934810 != -1) {
        dispatch_once(&qword_101934810, &stru_101882ED8);
      }
      uint64_t v10 = qword_101934818;
      CFAbsoluteTime v11 = CFAbsoluteTimeGetCurrent();
      uint64_t v12 = *(void *)(a1 + 2968);
      int v14 = *(_DWORD *)(a1 + 236);
      int v13 = *(_DWORD *)(a1 + 240);
      int v16 = 134350080;
      CFAbsoluteTime v17 = v11;
      __int16 v18 = 2050;
      uint64_t v19 = v12;
      __int16 v20 = 2050;
      double v21 = a2;
      __int16 v22 = 1026;
      int v23 = v13;
      __int16 v24 = 1026;
      int v25 = v14;
      uint64_t v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v10,  2LL,  "CLAccessoryAWD,%{public}.1lf,locationSession,start,%{public}.1lf,end,%{public}.1lf,duration,%{publ ic}d,sessions,%{public}d",  &v16,  44);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLAccessoryAWD::locationSessionEnd(const CFTimeInterval)",  "%s\n",  v15);
    }

    *(void *)(a1 + 2968) = 0xBFF0000000000000LL;
    *(_WORD *)(a1 + 30sub_100BDC958(v1 + 24) = 0;
  }

void sub_100DAE7E4(uint64_t a1, double a2)
{
  if (*(double *)(a1 + 2968) < 0.0)
  {
    *(double *)(a1 + 2968) = a2;
    ++*(_DWORD *)(a1 + 236);
    if (qword_101934810 != -1) {
      dispatch_once(&qword_101934810, &stru_101882ED8);
    }
    double v3 = (os_log_s *)qword_101934818;
    if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_DEBUG))
    {
      CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
      uint64_t v5 = *(void *)(a1 + 2968);
      int v6 = *(_DWORD *)(a1 + 236);
      *(_DWORD *)std::stringbuf::string_type buf = 134349568;
      CFAbsoluteTime v19 = Current;
      __int16 v20 = 2050;
      uint64_t v21 = v5;
      __int16 v22 = 1026;
      int v23 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "CLAccessoryAWD,%{public}.1lf,locationSession,start,%{public}.1lf,sessions,%{public}d",  buf,  0x1Cu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934810 != -1) {
        dispatch_once(&qword_101934810, &stru_101882ED8);
      }
      uint64_t v7 = qword_101934818;
      CFAbsoluteTime v8 = CFAbsoluteTimeGetCurrent();
      uint64_t v9 = *(void *)(a1 + 2968);
      int v10 = *(_DWORD *)(a1 + 236);
      int v12 = 134349568;
      CFAbsoluteTime v13 = v8;
      __int16 v14 = 2050;
      uint64_t v15 = v9;
      __int16 v16 = 1026;
      int v17 = v10;
      CFAbsoluteTime v11 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v7,  2LL,  "CLAccessoryAWD,%{public}.1lf,locationSession,start,%{public}.1lf,sessions,%{public}d",  &v12,  28);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLAccessoryAWD::locationSessionStart(const CFTimeInterval)",  "%s\n",  v11);
    }

    *(_WORD *)(a1 + 30sub_100BDC958(v1 + 24) = 0;
  }

uint64_t sub_100DAE9F8(uint64_t result, int a2)
{
  if (a2 == 1)
  {
    ++*(_DWORD *)(result + 1528);
  }

  else if (a2 == 4)
  {
    ++*(_DWORD *)(result + 1524);
  }

  return result;
}

uint64_t *sub_100DAEA28(uint64_t a1, int a2)
{
  return sub_100DAE41C(a2, a1 + 1536, 1LL);
}

_OWORD *sub_100DAEA48(_OWORD *result, uint64_t a2)
{
  if (*(_DWORD *)(a2 + 96) == 1)
  {
    unsigned int v2 = result;
    __int128 v9 = 0uLL;
    uint64_t v10 = 0LL;
    __asm { FMOV            V0.2D, #-1.0 }

    __int128 v11 = _Q0;
    __int128 v12 = _Q0;
    __int128 v13 = _Q0;
    __int128 v14 = _Q0;
    int v15 = 0;
    sub_100DAE07C((uint64_t *)&v9, a2);
    double result = sub_100DAEADC((uint64_t)v2 + 3000, *((_OWORD **)v2 + 375), &v9);
    uint64_t v8 = *((void *)v2 + 376);
    if (0xAAAAAAAAAAAAAAABLL * ((v8 - *((void *)v2 + 375)) >> 5) >= 6) {
      *((void *)v2 + 376) = v8 - 96;
    }
  }

  return result;
}

_OWORD *sub_100DAEADC(uint64_t a1, _OWORD *__src, _OWORD *a3)
{
  double v3 = a3;
  double v4 = __src;
  int v6 = *(_BYTE **)(a1 + 8);
  uint64_t v8 = a1 + 16;
  unint64_t v7 = *(void *)(a1 + 16);
  if ((unint64_t)v6 >= v7)
  {
    __int16 v16 = *(_BYTE **)a1;
    unint64_t v17 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v6[-*(void *)a1] >> 5) + 1;
    if (v17 > 0x2AAAAAAAAAAAAAALL) {
      sub_100007008();
    }
    uint64_t v18 = (char *)__src - v16;
    int64_t v19 = 0xAAAAAAAAAAAAAAABLL * (((char *)__src - v16) >> 5);
    unint64_t v20 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v7 - (void)v16) >> 5);
    if (2 * v20 > v17) {
      unint64_t v17 = 2 * v20;
    }
    if (v20 >= 0x155555555555555LL) {
      unint64_t v21 = 0x2AAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v21 = v17;
    }
    uint64_t v45 = a1 + 16;
    if (v21) {
      __int16 v22 = (char *)sub_1003F6AEC(a1 + 16, v21);
    }
    else {
      __int16 v22 = 0LL;
    }
    double v31 = &v22[96 * v19];
    std::stringbuf::string_type __p = v22;
    __int16 v42 = v31;
    uint64_t v43 = v31;
    __int16 v44 = &v22[96 * v21];
    if (v19 == v21)
    {
      if (v18 < 1)
      {
        if (v16 == (_BYTE *)v4) {
          unint64_t v33 = 1LL;
        }
        else {
          unint64_t v33 = 2 * v19;
        }
        __int16 v34 = (char *)sub_1003F6AEC(v8, v33);
        double v31 = &v34[96 * (v33 >> 2)];
        std::stringbuf::string_type __p = v34;
        __int16 v42 = v31;
        __int16 v44 = &v34[96 * v35];
        if (v22) {
          operator delete(v22);
        }
      }

      else
      {
        uint64_t v32 = v19 + 2;
        if (v19 >= -1) {
          uint64_t v32 = v19 + 1;
        }
        v31 -= 96 * (v32 >> 1);
        __int16 v42 = v31;
      }
    }

    __int128 v36 = v3[1];
    *(_OWORD *)double v31 = *v3;
    *((_OWORD *)v31 + 1) = v36;
    __int128 v37 = v3[2];
    __int128 v38 = v3[3];
    __int128 v39 = v3[5];
    *((_OWORD *)v31 + 4) = v3[4];
    *((_OWORD *)v31 + 5) = v39;
    *((_OWORD *)v31 + 2) = v37;
    *((_OWORD *)v31 + 3) = v38;
    uint64_t v43 = v31 + 96;
    double v4 = sub_100DAF50C((void **)a1, (uint64_t)&__p, (char *)v4);
    if (v43 != v42) {
      uint64_t v43 = &v42[(v43 - v42 - 96) % 0x60uLL];
    }
    if (__p) {
      operator delete(__p);
    }
  }

  else if (__src == (_OWORD *)v6)
  {
    __int128 v27 = a3[1];
    *__src = *a3;
    __src[1] = v27;
    __int128 v28 = a3[2];
    __int128 v29 = a3[3];
    __int128 v30 = a3[5];
    __src[4] = a3[4];
    __src[5] = v30;
    __src[2] = v28;
    __src[3] = v29;
    *(void *)(a1 + 8) = __src + 6;
  }

  else
  {
    __int128 v9 = (char *)(__src + 6);
    uint64_t v10 = v6 - 96;
    __int128 v11 = *(_OWORD **)(a1 + 8);
    while (v10 < (_OWORD *)v6)
    {
      __int128 v12 = v10[1];
      _OWORD *v11 = *v10;
      v11[1] = v12;
      __int128 v13 = v10[2];
      __int128 v14 = v10[3];
      __int128 v15 = v10[5];
      _DWORD v11[4] = v10[4];
      v11[5] = v15;
      _DWORD v11[2] = v13;
      v11[3] = v14;
      v10 += 6;
      v11 += 6;
    }

    *(void *)(a1 + 8) = v11;
    if (v6 != v9) {
      memmove(v9, __src, v6 - v9 - 4);
    }
    if (v4 <= v3) {
      v3 += 6 * (*(void *)(a1 + 8) > (unint64_t)v3);
    }
    __int128 v23 = v3[1];
    *double v4 = *v3;
    v4[1] = v23;
    __int128 v24 = v3[2];
    __int128 v25 = v3[3];
    __int128 v26 = v3[4];
    *(_OWORD *)((char *)v4 + 76) = *(_OWORD *)((char *)v3 + 76);
    _OWORD v4[3] = v25;
    v4[4] = v26;
    v4[2] = v24;
  }

  return v4;
}

void sub_100DAED80( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DAEDCC(uint64_t a1, uint64_t a2, double *a3, double a4)
{
  if (*(void *)(a1 + 1512) < 0x1FuLL)
  {
    else {
      double v16 = *(double *)(a1 + 2952);
    }
    if (v16 <= a4)
    {
      if (*(char *)(a2 + 23) < 0)
      {
        sub_1010DD48C(__p, *(void **)a2, *(void *)(a2 + 8));
      }

      else
      {
        *(_OWORD *)std::stringbuf::string_type __p = *(_OWORD *)a2;
        uint64_t v34 = *(void *)(a2 + 16);
      }

      __int128 v23 = (uint64_t **)(a1 + 1496);
      int v24 = vabdd_f64(a4, v16);
      sub_100DAE4BC(__p, v23, v24);
      if (SHIBYTE(v34) < 0) {
        operator delete(__p[0]);
      }
      if (qword_101934810 != -1) {
        dispatch_once(&qword_101934810, &stru_101882ED8);
      }
      __int128 v25 = (os_log_s *)qword_101934818;
      if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_DEBUG))
      {
        double Current = CFAbsoluteTimeGetCurrent();
        else {
          __int128 v27 = *(void **)a2;
        }
        double v28 = *a3;
        *(_DWORD *)std::stringbuf::string_type buf = 134350082;
        double v46 = Current;
        __int16 v47 = 2082;
        __int16 v48 = v27;
        __int16 v49 = 2050;
        double v50 = v28;
        __int16 v51 = 2050;
        double v52 = v16;
        __int16 v53 = 1026;
        int v54 = v24;
        _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEBUG,  "CLAccessoryAWD,%{public}.1lf,updateNavigationAppStats,%{public}s,appLaunchTime,%{public}.1lf,appStartTime,%{pu blic}.1lf,appRunTime,%{public}d",  buf,  0x30u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934810 != -1) {
          dispatch_once(&qword_101934810, &stru_101882ED8);
        }
        uint64_t v29 = qword_101934818;
        double v30 = CFAbsoluteTimeGetCurrent();
        double v31 = *(char *)(a2 + 23) >= 0 ? (void *)a2 : *(void **)a2;
        double v32 = *a3;
        int v35 = 134350082;
        double v36 = v30;
        __int16 v37 = 2082;
        __int128 v38 = v31;
        __int16 v39 = 2050;
        double v40 = v32;
        __int16 v41 = 2050;
        double v42 = v16;
        __int16 v43 = 1026;
        int v44 = v24;
        __int128 v11 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v29,  2LL,  "CLAccessoryAWD,%{public}.1lf,updateNavigationAppStats,%{public}s,appLaunchTime,%{public}.1lf,app StartTime,%{public}.1lf,appRunTime,%{public}d",  &v35,  48);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLAccessoryAWD::updateNavigationAppStats(const CFTimeInterval, const std::string &, const CFTimeInterval &)",  "%s\n",  v11);
      }
    }

    else
    {
      if (qword_101934810 != -1) {
        dispatch_once(&qword_101934810, &stru_101882ED8);
      }
      unint64_t v17 = (os_log_s *)qword_101934818;
      if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_DEBUG))
      {
        double v18 = CFAbsoluteTimeGetCurrent();
        else {
          int64_t v19 = *(void **)a2;
        }
        *(_DWORD *)std::stringbuf::string_type buf = 134349826;
        double v46 = v18;
        __int16 v47 = 2082;
        __int16 v48 = v19;
        __int16 v49 = 2050;
        double v50 = v16;
        __int16 v51 = 2050;
        double v52 = a4;
        _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEBUG,  "#Warning,CLAccessoryAWD,%{public}.1lf,updateNavigationAppStats,%{public}s,appStartTime,%{public}.1lf, greater than machContTime,%{public}.1lf",  buf,  0x2Au);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934810 != -1) {
          dispatch_once(&qword_101934810, &stru_101882ED8);
        }
        uint64_t v20 = qword_101934818;
        double v21 = CFAbsoluteTimeGetCurrent();
        else {
          __int16 v22 = *(void **)a2;
        }
        int v35 = 134349826;
        double v36 = v21;
        __int16 v37 = 2082;
        __int128 v38 = v22;
        __int16 v39 = 2050;
        double v40 = v16;
        __int16 v41 = 2050;
        double v42 = a4;
        __int128 v11 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v20,  2LL,  "#Warning,CLAccessoryAWD,%{public}.1lf,updateNavigationAppStats,%{public}s,appStartTime,%{public} .1lf, greater than machContTime,%{public}.1lf",  &v35,  42);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLAccessoryAWD::updateNavigationAppStats(const CFTimeInterval, const std::string &, const CFTimeInterval &)",  "%s\n",  v11);
LABEL_37:
LABEL_59:
        free(v11);
      }
    }
  }

  else
  {
    if (qword_101934810 != -1) {
      dispatch_once(&qword_101934810, &stru_101882ED8);
    }
    uint64_t v5 = (os_log_s *)qword_101934818;
    if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_DEBUG))
    {
      double v6 = CFAbsoluteTimeGetCurrent();
      else {
        unint64_t v7 = *(void **)a2;
      }
      *(_DWORD *)std::stringbuf::string_type buf = 134349570;
      double v46 = v6;
      __int16 v47 = 2082;
      __int16 v48 = v7;
      __int16 v49 = 1026;
      LODWORD(v50) = 30;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "CLAccessoryAWD,%{public}.1lf,updateNavigationAppStats,%{public}s,more than allowed location apps open,%{public}d",  buf,  0x1Cu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934810 != -1) {
        dispatch_once(&qword_101934810, &stru_101882ED8);
      }
      uint64_t v8 = qword_101934818;
      double v9 = CFAbsoluteTimeGetCurrent();
      else {
        uint64_t v10 = *(void **)a2;
      }
      int v35 = 134349570;
      double v36 = v9;
      __int16 v37 = 2082;
      __int128 v38 = v10;
      __int16 v39 = 1026;
      LODWORD(v40) = 30;
      __int128 v11 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v8,  2LL,  "CLAccessoryAWD,%{public}.1lf,updateNavigationAppStats,%{public}s,more than allowed location apps open,%{public}d",  &v35,  28);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLAccessoryAWD::updateNavigationAppStats(const CFTimeInterval, const std::string &, const CFTimeInterval &)",  "%s\n",  v11);
      goto LABEL_37;
    }
  }

void sub_100DAF3DC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_100DAF400(uint64_t a1, int a2, int a3)
{
  *(_DWORD *)(a1 + 1568) += a2;
  return sub_100DAE41C(a3, a1 + 1576, 1LL);
}

void sub_100DAF428(id a1)
{
  qword_101934818 = (uint64_t)os_log_create("com.apple.locationd.Position", "GpsAccessory");
}

uint64_t *sub_100DAF454(uint64_t **a1, int *a2, uint64_t *a3)
{
  double v6 = a1 + 1;
  uint64_t v5 = a1[1];
  if (v5)
  {
    int v7 = *a2;
    while (1)
    {
      while (1)
      {
        uint64_t v8 = (uint64_t **)v5;
        int v9 = *((_DWORD *)v5 + 7);
        if (v7 >= v9) {
          break;
        }
        uint64_t v5 = *v8;
        double v6 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }

      if (v9 >= v7) {
        break;
      }
      uint64_t v5 = v8[1];
      if (!v5)
      {
        double v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }

  else
  {
    uint64_t v8 = a1 + 1;
LABEL_10:
    uint64_t v10 = (uint64_t *)operator new(0x28uLL);
    *(uint64_t *)((char *)v10 + 28) = *a3;
    sub_1000085FC(a1, (uint64_t)v8, v6, v10);
    return v10;
  }

  return (uint64_t *)v8;
}

void *sub_100DAF50C(void **a1, uint64_t a2, char *__src)
{
  uint64_t v5 = *(void **)(a2 + 8);
  double v6 = (char *)*a1;
  int v7 = v5;
  if (*a1 != __src)
  {
    uint64_t v8 = __src;
    uint64_t v9 = *(void *)(a2 + 8);
    do
    {
      __int128 v10 = *((_OWORD *)v8 - 5);
      *(_OWORD *)(v9 - 96) = *((_OWORD *)v8 - 6);
      *(_OWORD *)(v9 - 80) = v10;
      __int128 v11 = *((_OWORD *)v8 - 4);
      __int128 v12 = *((_OWORD *)v8 - 3);
      __int128 v13 = *((_OWORD *)v8 - 2);
      int v7 = (void *)(v9 - 96);
      *(_OWORD *)(v9 - 20) = *(_OWORD *)(v8 - 20);
      *(_OWORD *)(v9 - 48) = v12;
      *(_OWORD *)(v9 - 32) = v13;
      *(_OWORD *)(v9 - 64) = v11;
      v8 -= 96;
      v9 -= 96LL;
    }

    while (v8 != v6);
  }

  *(void *)(a2 + 8) = v7;
  __int128 v14 = a1[1];
  uint64_t v15 = *(void *)(a2 + 16);
  int64_t v16 = v14 - __src;
  if (v14 != __src)
  {
    memmove(*(void **)(a2 + 16), __src, v16 - 4);
    int v7 = *(void **)(a2 + 8);
  }

  *(void *)(a2 + 16) = v15 + v16;
  unint64_t v17 = (char *)*a1;
  *a1 = v7;
  *(void *)(a2 + 8) = v17;
  double v18 = a1[1];
  a1[1] = *(void **)(a2 + 16);
  *(void *)(a2 + 16) = v18;
  int64_t v19 = a1[2];
  a1[2] = *(void **)(a2 + 24);
  *(void *)(a2 + sub_100BDC958(v1 + 24) = v19;
  *(void *)a2 = *(void *)(a2 + 8);
  return v5;
}

id *sub_100DAF688(id *a1)
{
  return a1;
}

uint64_t sub_100DAF6B8(uint64_t a1)
{
  uint64_t v2 = mach_absolute_time();
  double v3 = sub_101171C7C(v2 - *(void *)(a1 + 8));
  v6[0] = *(void *)a1;
  v5[0] = @"client";
  v5[1] = @"inForegroundPercent";
  v6[1] = +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  round(*(double *)(a1 + 24) / v3 / 0.05) * 0.05);
  v5[2] = @"desiredAccuracy";
  _DWORD v6[2] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", *(double *)(a1 + 40));
  _OWORD v5[3] = @"duration";
  v6[3] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", round(v3 / 10.0) * 10.0);
  v5[4] = @"durationForeground";
  v6[4] = +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  round(*(double *)(a1 + 24) / 10.0) * 10.0);
  v5[5] = @"durationBackground";
  void v6[5] = +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  round(*(double *)(a1 + 32) / 10.0) * 10.0);
  uint64_t result = AnalyticsSendEvent( @"com.apple.locationd.CLLocationSubscription.session_duration",  +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v6,  v5,  6LL));
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v2;
  *(void *)(a1 + sub_100BDC958(v1 + 24) = 0LL;
  *(void *)(a1 + 32) = 0LL;
  return result;
}

double sub_100DAF840(uint64_t a1)
{
  uint64_t v2 = mach_absolute_time();
  double v3 = sub_101171C7C(v2 - *(void *)(a1 + 16));
  uint64_t v4 = 24LL;
  if (!*(_BYTE *)(a1 + 48)) {
    uint64_t v4 = 32LL;
  }
  double result = v3 + *(double *)(a1 + v4);
  *(double *)(a1 + v4) = result;
  *(void *)(a1 + 16) = v2;
  return result;
}

uint64_t sub_100DAF894(uint64_t a1)
{
  uint64_t v1 = a1 + 136;
  if (!*(void *)(a1 + 136))
  {
    sub_1004EEF6C((uint64_t)sub_100DAF918, a1, *(void **)(a1 + 8), &v7);
    uint64_t v3 = v7;
    uint64_t v7 = 0LL;
    uint64_t v4 = *(void *)(a1 + 136);
    *(void *)(a1 + 136) = v3;
    if (v4)
    {
      (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
      uint64_t v5 = v7;
      uint64_t v7 = 0LL;
      if (v5) {
        (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
      }
    }
  }

  return v1;
}

void sub_100DAF918(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101883110);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLLocationSubscription::onLocationNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101883110);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      unint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLLocationSubscription::onLocationNotification, event:%{public, location:escape_onl y}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100DBC31C(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100DAFAD0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100DAFAF0(uint64_t a1)
{
  uint64_t v1 = a1 + 144;
  if (!*(void *)(a1 + 144))
  {
    sub_1005DCB1C((uint64_t)sub_100DAF918, a1, *(void **)(a1 + 8), &v7);
    uint64_t v3 = v7;
    uint64_t v7 = 0LL;
    uint64_t v4 = *(void *)(a1 + 144);
    *(void *)(a1 + 144) = v3;
    if (v4)
    {
      (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
      uint64_t v5 = v7;
      uint64_t v7 = 0LL;
      if (v5) {
        (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
      }
    }
  }

  return v1;
}

uint64_t sub_100DAFB74(uint64_t a1)
{
  uint64_t v1 = a1 + 128;
  if (!*(void *)(a1 + 128))
  {
    sub_10043AC3C((uint64_t)sub_100DAF918, a1, *(void **)(a1 + 8), &v7);
    uint64_t v3 = v7;
    uint64_t v7 = 0LL;
    uint64_t v4 = *(void *)(a1 + 128);
    *(void *)(a1 + 128) = v3;
    if (v4)
    {
      (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
      uint64_t v5 = v7;
      uint64_t v7 = 0LL;
      if (v5) {
        (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
      }
    }
  }

  return v1;
}

uint64_t sub_100DAFBF8(uint64_t a1)
{
  uint64_t v1 = a1 + 152;
  if (!*(void *)(a1 + 152))
  {
    sub_10034FF34((uint64_t)sub_100DAFC7C, a1, *(void **)(a1 + 8), &v7);
    uint64_t v3 = v7;
    uint64_t v7 = 0LL;
    uint64_t v4 = *(void *)(a1 + 152);
    *(void *)(a1 + 152) = v3;
    if (v4)
    {
      (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
      uint64_t v5 = v7;
      uint64_t v7 = 0LL;
      if (v5) {
        (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
      }
    }
  }

  return v1;
}

void sub_100DAFC7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101883110);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v8 = 1;
    uint64_t v5 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLLocationSubscription::onWifiServiceNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v5, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101883110);
    }
    double v6 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v10 = 0;
      __int16 v11 = 2082;
      __int128 v12 = "";
      __int16 v13 = 2082;
      __int16 v14 = "activity";
      __int16 v15 = 2050;
      uint64_t v16 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLLocationSubscription::onWifiServiceNotification, event:%{public, location:escape_ only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v8 = 0;
  }

  if (v8) {
    os_activity_scope_leave(&state);
  }
}

void sub_100DAFE14( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100DAFE30@<X0>(uint64_t a1@<X8>)
{
  v32[0] = &off_1018831C0;
  v32[1] = sub_100DB03E0;
  v32[2] = 0LL;
  unint64_t v33 = v32;
  sub_1010DDBC0(v34, "kCLConnectionMessagePausesLocationUpdatesAutomatically");
  sub_100893828((uint64_t)&v35, (uint64_t)v32);
  uint64_t v29 = &off_101883250;
  v30[0] = sub_100DB0774;
  v30[1] = 0LL;
  double v31 = &v29;
  sub_1010DDBC0(v36, "kCLConnectionMessageLocation");
  sub_100893828((uint64_t)&v37, (uint64_t)&v29);
  v27[0] = &off_1018831C0;
  v27[1] = sub_100DB0DD4;
  v27[2] = 0LL;
  double v28 = v27;
  sub_1010DDBC0(v38, "kCLConnectionMessageBatch");
  sub_100893828((uint64_t)&v39, (uint64_t)v27);
  v25[0] = &off_1018831C0;
  v25[1] = sub_100DB1D44;
  void v25[2] = 0LL;
  __int128 v26 = v25;
  sub_1010DDBC0(v40, "kCLConnectionMessageAllowsBackgroundLocationUpdates");
  sub_100893828((uint64_t)&v41, (uint64_t)v25);
  v23[0] = &off_1018831C0;
  v23[1] = sub_100DB2058;
  v23[2] = 0LL;
  int v24 = v23;
  sub_1010DDBC0(v42, "kCLConnectionMessageShowsBackgroundLocationIndicator");
  sub_100893828((uint64_t)&v43, (uint64_t)v23);
  v21[0] = &off_1018831C0;
  v21[1] = sub_100DB2348;
  _DWORD v21[2] = 0LL;
  __int16 v22 = v21;
  sub_1010DDBC0(v44, "kCLConnectionMessageAllowsMapCorrection");
  sub_100893828((uint64_t)&v45, (uint64_t)v21);
  v19[0] = &off_1018831C0;
  v19[1] = sub_100DB2994;
  v19[2] = 0LL;
  uint64_t v20 = v19;
  sub_1010DDBC0(v46, "kCLConnectionMessageActivityType");
  sub_100893828((uint64_t)&v47, (uint64_t)v19);
  sub_100DBD0D8(a1, (unsigned __int8 *)v34, 7LL);
  uint64_t v2 = 49LL;
  do
  {
    uint64_t v3 = (void *)v34[v2 - 1];
    if (&v32[v2] == v3)
    {
      uint64_t v3 = &v32[v2];
      uint64_t v4 = 4LL;
    }

    else
    {
      if (!v3) {
        goto LABEL_7;
      }
      uint64_t v4 = 5LL;
    }

    (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_7:
    if (SHIBYTE((&v31)[v2]) < 0) {
      operator delete((void *)v30[v2]);
    }
    v2 -= 7LL;
  }

  while (v2 * 8);
  uint64_t v5 = v20;
  if (v20 == v19)
  {
    uint64_t v6 = 4LL;
    uint64_t v5 = v19;
LABEL_14:
    (*(void (**)(void))(*v5 + 8 * v6))();
  }

  else if (v20)
  {
    uint64_t v6 = 5LL;
    goto LABEL_14;
  }

  uint64_t v7 = v22;
  if (v22 == v21)
  {
    uint64_t v8 = 4LL;
    uint64_t v7 = v21;
LABEL_19:
    (*(void (**)(void))(*v7 + 8 * v8))();
  }

  else if (v22)
  {
    uint64_t v8 = 5LL;
    goto LABEL_19;
  }

  uint64_t v9 = v24;
  if (v24 == v23)
  {
    uint64_t v10 = 4LL;
    uint64_t v9 = v23;
LABEL_24:
    (*(void (**)(void))(*v9 + 8 * v10))();
  }

  else if (v24)
  {
    uint64_t v10 = 5LL;
    goto LABEL_24;
  }

  __int16 v11 = v26;
  if (v26 == v25)
  {
    uint64_t v12 = 4LL;
    __int16 v11 = v25;
LABEL_29:
    (*(void (**)(void))(*v11 + 8 * v12))();
  }

  else if (v26)
  {
    uint64_t v12 = 5LL;
    goto LABEL_29;
  }

  __int16 v13 = v28;
  if (v28 == v27)
  {
    uint64_t v14 = 4LL;
    __int16 v13 = v27;
LABEL_34:
    (*(void (**)(void))(*v13 + 8 * v14))();
  }

  else if (v28)
  {
    uint64_t v14 = 5LL;
    goto LABEL_34;
  }

  __int16 v15 = v31;
  if (v31 == &v29)
  {
    uint64_t v16 = 4LL;
    __int16 v15 = &v29;
LABEL_39:
    (*v15)[v16]();
  }

  else if (v31)
  {
    uint64_t v16 = 5LL;
    goto LABEL_39;
  }

  double result = v33;
  if (v33 == v32)
  {
    uint64_t v18 = 4LL;
    double result = v32;
    return (void *)(*(uint64_t (**)(void))(*result + 8 * v18))();
  }

  else if (v33)
  {
    uint64_t v18 = 5LL;
    return (void *)(*(uint64_t (**)(void))(*result + 8 * v18))();
  }

  return result;
}

void sub_100DB01E4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t *a12, char a13, uint64_t a14, uint64_t a15, char *a16, char a17, uint64_t a18, uint64_t a19, char *a20, char a21, uint64_t a22, uint64_t a23, char *a24, char a25, uint64_t a26, uint64_t a27, char *a28, char a29, uint64_t a30, uint64_t a31, char *a32, char a33, uint64_t a34, uint64_t a35, char *a36, char a37)
{
  for (uint64_t i = 336LL; i != -56; i -= 56LL)
    sub_10026E430((uint64_t)(&a37 + i));
  uint64_t v39 = a12;
  if (a12 == &a9)
  {
    uint64_t v40 = 4LL;
    uint64_t v39 = &a9;
  }

  else
  {
    if (!a12) {
      goto LABEL_8;
    }
    uint64_t v40 = 5LL;
  }

  (*(void (**)(void))(*v39 + 8 * v40))();
LABEL_8:
  uint64_t v41 = a16;
  if (a16 == &a13)
  {
    uint64_t v42 = 4LL;
    uint64_t v41 = &a13;
  }

  else
  {
    if (!a16) {
      goto LABEL_13;
    }
    uint64_t v42 = 5LL;
  }

  (*(void (**)(void))(*(void *)v41 + 8 * v42))();
LABEL_13:
  uint64_t v43 = a20;
  if (a20 == &a17)
  {
    uint64_t v44 = 4LL;
    uint64_t v43 = &a17;
  }

  else
  {
    if (!a20) {
      goto LABEL_18;
    }
    uint64_t v44 = 5LL;
  }

  (*(void (**)(void))(*(void *)v43 + 8 * v44))();
LABEL_18:
  uint64_t v45 = a24;
  if (a24 == &a21)
  {
    uint64_t v46 = 4LL;
    uint64_t v45 = &a21;
  }

  else
  {
    if (!a24) {
      goto LABEL_23;
    }
    uint64_t v46 = 5LL;
  }

  (*(void (**)(void))(*(void *)v45 + 8 * v46))();
LABEL_23:
  uint64_t v47 = a28;
  if (a28 == &a25)
  {
    uint64_t v48 = 4LL;
    uint64_t v47 = &a25;
  }

  else
  {
    if (!a28) {
      goto LABEL_28;
    }
    uint64_t v48 = 5LL;
  }

  (*(void (**)(void))(*(void *)v47 + 8 * v48))();
LABEL_28:
  __int16 v49 = a32;
  if (a32 == &a29)
  {
    uint64_t v50 = 4LL;
    __int16 v49 = &a29;
  }

  else
  {
    if (!a32) {
      goto LABEL_33;
    }
    uint64_t v50 = 5LL;
  }

  (*(void (**)(void))(*(void *)v49 + 8 * v50))();
LABEL_33:
  __int16 v51 = a36;
  if (a36 == &a33)
  {
    uint64_t v52 = 4LL;
    __int16 v51 = &a33;
  }

  else
  {
    if (!a36) {
      goto LABEL_38;
    }
    uint64_t v52 = 5LL;
  }

  (*(void (**)(void))(*(void *)v51 + 8 * v52))();
LABEL_38:
  _Unwind_Resume(a1);
}

void sub_100DB03C4()
{
}

void sub_100DB03D0()
{
}

void sub_100DB03E0(uint64_t a1, CLConnectionMessage **a2)
{
  uint64_t v4 = objc_alloc_init(&OBJC_CLASS___NSAutoreleasePool);
  id v5 = [(id)CLConnectionMessage::getDictionary(*a2) objectForKeyedSubscript:@"kCLConnectionMessagePausesLocationUpdatesAutomaticallyKey"];
  if (v5 && (sub_1002A96F8(v5, (_DWORD *)&v16 + 1) & 1) != 0)
  {
    if (*(_DWORD *)(a1 + 184) != HIDWORD(v16))
    {
      *(_DWORD *)(a1 + 184) = HIDWORD(v16);
      if (qword_101934970 != -1) {
        dispatch_once(&qword_101934970, &stru_101883130);
      }
      uint64_t v6 = (os_log_s *)qword_101934978;
      if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v7 = *(void *)(a1 + 24);
        int v8 = *(_DWORD *)(a1 + 184);
        *(_DWORD *)std::stringbuf::string_type buf = 68289538;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        __int16 v20 = 2114;
        uint64_t v21 = v7;
        __int16 v22 = 1026;
        int v23 = v8;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:Client is setting AutoPause, Client:%{public, location:escape_only}@, autopause:%{public}d}",  buf,  0x22u);
      }

      sub_100DB6450(a1);
      sub_1010DDBC0(buf, "kCLConnectionMessageLocation");
      int v9 = sub_100C6ACAC(a1);
      int v10 = v9;
      if (SBYTE3(v21) < 0)
      {
        operator delete(*(void **)buf);
        if (!v10) {
          goto LABEL_16;
        }
      }

      else if (!v9)
      {
        goto LABEL_16;
      }

      int v13 = *(_DWORD *)(a1 + 184);
      int v12 = *(_DWORD *)(a1 + 188);
      if (v13 < 5)
      {
        if (v12 != 2 && (v13 != 2 || v12 != 3)) {
          goto LABEL_26;
        }
      }

      else if (v12 == 1)
      {
        goto LABEL_26;
      }

      if (!sub_100DB7AE8(a1))
      {
LABEL_26:
        sub_100DB7EA8(a1);
        goto LABEL_16;
      }

      sub_100DB7C0C(a1);
    }
  }

  else
  {
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101883170);
    }
    __int16 v11 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 136446210;
      *(void *)&uint8_t buf[4] = "kCLConnectionMessagePausesLocationUpdatesAutomaticallyKey";
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_FAULT,  "Couldn't get value for key %{public}s",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101883170);
      }
      int v17 = 136446210;
      uint64_t v18 = "kCLConnectionMessagePausesLocationUpdatesAutomaticallyKey";
      LODWORD(v16) = 12;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934988,  17LL,  "Couldn't get value for key %{public}s",  &v17,  v16);
      __int16 v15 = (char *)v14;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLLocationSubscription::handleMessagePausesLocationUpdatesAutomatically(std::shared_ptr<CLConnectionMessage>)",  "%s\n",  v14);
      if (v15 != buf) {
        free(v15);
      }
    }
  }

void sub_100DB0728( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  _Unwind_Resume(a1);
}

void sub_100DB0774(uint64_t a1, int a2, void *a3)
{
  uint64_t v6 = objc_alloc_init(&OBJC_CLASS___NSAutoreleasePool);
  unsigned int v7 = objc_msgSend( objc_msgSend( *(id *)(a1 + 176),  "objectForKeyedSubscript:",  @"kCLConnectionMessageDynamicAccuracyReductionKey"),  "BOOLValue");
  int v8 = *(void **)(a1 + 176);
  *(void *)(a1 + 176) = a3;
  id v9 = a3;

  if ((sub_100C6AC8C(a1) & 1) == 0) {
    goto LABEL_37;
  }
  sub_100C6AC8C(a1);
  if ([*(id *)(a1 + 176) objectForKeyedSubscript:@"kCLConnectionMessageDesiredAccuracyKey"])
  {
    objc_msgSend( objc_msgSend(*(id *)(a1 + 176), "objectForKeyedSubscript:", @"kCLConnectionMessageDesiredAccuracyKey"),  "doubleValue");
    double v11 = v10;
  }

  else
  {
    double v11 = -1.0;
  }

  if ([*(id *)(a1 + 176) objectForKeyedSubscript:@"kCLConnectionMessageDistanceFilterKey"])
  {
    objc_msgSend( objc_msgSend(*(id *)(a1 + 176), "objectForKeyedSubscript:", @"kCLConnectionMessageDistanceFilterKey"),  "doubleValue");
    double v13 = v12;
    if (a2)
    {
LABEL_7:
      unsigned int v14 = objc_msgSend( objc_msgSend( *(id *)(a1 + 176),  "objectForKeyedSubscript:",  @"kCLConnectionMessageDynamicAccuracyReductionKey"),  "BOOLValue");
      unsigned int v15 = objc_msgSend( objc_msgSend( *(id *)(a1 + 176),  "objectForKeyedSubscript:",  @"kCLConnectionMessageAlteredAccessoryLocationsKey"),  "BOOLValue");
      if (qword_101934970 != -1) {
        dispatch_once(&qword_101934970, &stru_101883130);
      }
      uint64_t v16 = (os_log_s *)qword_101934978;
      if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v17 = *(void *)(a1 + 24);
        *(_DWORD *)std::stringbuf::string_type buf = 68290306;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        *(_WORD *)&_BYTE buf[18] = 2114;
        *(void *)&buf[20] = v17;
        *(_WORD *)&_BYTE buf[28] = 2050;
        *(double *)&buf[30] = v11;
        *(_WORD *)&buf[38] = 2050;
        *(double *)&buf[40] = v13;
        *(_WORD *)&_BYTE buf[48] = 1026;
        *(_DWORD *)&buf[50] = v14;
        *(_WORD *)&buf[54] = 1026;
        *(_DWORD *)&buf[56] = v15;
        _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:client subscribing to location, Client:%{public, location:escape_only}@, desire dAccuracy:%{public}f, distanceFilter:%{public}f, dynamicAccuracyReductionEnabled:%{public}d, allowsAlteredAccessoryLocations:%{public}d}",  buf,  0x3Cu);
      }

      if (v7 != v14) {
        sub_1002B70AC(a1 + 520);
      }
      sub_100DB4764(a1);
      sub_100C6ACDC(a1);
      goto LABEL_37;
    }
  }

  else
  {
    double v13 = -1.0;
    if (a2) {
      goto LABEL_7;
    }
  }

  if (qword_101934970 != -1) {
    dispatch_once(&qword_101934970, &stru_101883130);
  }
  uint64_t v18 = (os_log_s *)qword_101934978;
  if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v19 = *(void *)(a1 + 24);
    *(_DWORD *)std::stringbuf::string_type buf = 68290050;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    *(_WORD *)&_BYTE buf[18] = 2050;
    *(void *)&buf[20] = a1;
    *(_WORD *)&_BYTE buf[28] = 2114;
    *(void *)&buf[30] = v19;
    *(_WORD *)&buf[38] = 2050;
    *(double *)&buf[40] = v11;
    *(_WORD *)&_BYTE buf[48] = 2050;
    *(double *)&buf[50] = v13;
    _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:LocationSubcription #pwrlog client unsubscribing, this:%{public}p, ClientKeyPat h:%{public, location:escape_only}@, DesiredAccuracy:%{public}f, DistanceFilter:%{public}f}",  buf,  0x3Au);
  }

  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101883150);
  }
  __int16 v20 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v21 = *(void *)(a1 + 24);
    *(_DWORD *)std::stringbuf::string_type buf = 138543362;
    *(void *)&uint8_t buf[4] = v21;
    _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "@ClxClient, unsubscribe, %{public}@",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883150);
    }
    uint64_t v35 = *(void *)(a1 + 24);
    int v38 = 138543362;
    uint64_t v39 = v35;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "@ClxClient, unsubscribe, %{public}@",  &v38,  12);
    uint64_t v37 = (uint8_t *)v36;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationSubscription::handleRequestLocation(BOOL, NSDictionary *)",  "%s\n",  v36);
    if (v37 != buf) {
      free(v37);
    }
  }

  [*(id *)(a1 + 576) invalidate];

  *(void *)(a1 + 576) = 0LL;
  char v22 = *(_BYTE *)(a1 + 236);
  *(_BYTE *)(a1 + 236) = 0;
  sub_100DB444C(a1);
  sub_100DB7ABC((id **)(a1 + 512), 0LL);
  if (*(_BYTE *)(a1 + 312))
  {
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101883130);
    }
    int v23 = (os_log_s *)qword_101934978;
    if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v24 = *(void *)(a1 + 24);
      *(_DWORD *)std::stringbuf::string_type buf = 68289282;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&_BYTE buf[18] = 2114;
      *(void *)&buf[20] = v24;
      _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:ending metric session (LocationUpdateSession), Client:%{public, location:escape_only}@}",  buf,  0x1Cu);
    }

    *(CFAbsoluteTime *)(a1 + 376) = CFAbsoluteTimeGetCurrent();
    *(_BYTE *)(a1 + 432) = v22;
    if (*(_BYTE *)(a1 + 58))
    {
      *(double *)(a1 + 504) = *(double *)(a1 + 504) + CFAbsoluteTimeGetCurrent() - *(double *)(a1 + 64);
      *(void *)(a1 + 64) = 0xBFF0000000000000LL;
    }

    uint64_t v25 = sub_1004DD868();
    sub_1004DE8B0(v25, (unsigned __int8 *)(a1 + 312));
    memset(buf, 0, 71);
    __int128 v26 = 0uLL;
    *(void *)(a1 + 312) = 0LL;
    *(void *)(a1 + 320) = 0xBFF0000000000000LL;
    __int128 v27 = (void **)(a1 + 328);
    if (*(char *)(a1 + 351) < 0)
    {
      operator delete(*v27);
      __int128 v26 = 0uLL;
    }

    *(_OWORD *)__int128 v27 = v26;
    *(_OWORD *)(a1 + 344) = v26;
    *(_DWORD *)(a1 + 360) = 1000;
    *(_DWORD *)(a1 + 372) = 0;
    *(void *)(a1 + 364) = 0LL;
    *(void *)(a1 + 376) = 0xBFF0000000000000LL;
    __asm { FMOV            V1.2D, #-1.0 }

    *(_OWORD *)(a1 + 384) = xmmword_1012EA5D0;
    *(_OWORD *)(a1 + 400) = _Q1;
    *(_OWORD *)(a1 + 416) = _Q1;
    *(_BYTE *)(a1 + 432) = 0;
    *(void *)(a1 + 496) = *(void *)&buf[63];
    *(void *)(a1 + 504) = 0xBFF0000000000000LL;
    __int128 v33 = *(_OWORD *)&buf[48];
    *(_OWORD *)(a1 + 465) = *(_OWORD *)&buf[32];
    *(_OWORD *)(a1 + 481) = v33;
    __int128 v34 = *(_OWORD *)&buf[16];
    *(_OWORD *)(a1 + 433) = *(_OWORD *)buf;
    *(_OWORD *)(a1 + 449) = v34;
  }

  *(_BYTE *)(a1 + 58) = 0;
LABEL_37:
}

void sub_100DB0D90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100DB0DD4(uint64_t a1, CLConnectionMessage **a2)
{
  uint64_t v4 = objc_alloc_init(&OBJC_CLASS___NSAutoreleasePool);
  double Current = CFAbsoluteTimeGetCurrent();
  BOOL v53 = 0;
  double v51 = -1.0;
  double v52 = -1.0;
  int v6 = *(unsigned __int8 *)(a1 + 241);
  if (*(_BYTE *)(a1 + 241))
  {
    sub_100DB8A48(a1);
    sub_100DB8CA4(a1, 15LL);
  }

  id v7 = [(id)CLConnectionMessage::getDictionary(*a2) objectForKeyedSubscript:@"kCLConnectionMessageBatchAllowedKey"];
  if (!v7 || (sub_1002A9230(v7, &v53) & 1) == 0)
  {
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101883170);
    }
    uint64_t v18 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 136446210;
      *(void *)uint64_t v67 = "kCLConnectionMessageBatchAllowedKey";
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_FAULT,  "Couldn't get value for key %{public}s",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 0)) {
      goto LABEL_32;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101883170);
    }
    int v54 = 136446210;
    uint64_t v55 = "kCLConnectionMessageBatchAllowedKey";
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934988,  17LL,  "Couldn't get value for key %{public}s",  &v54,  12);
    double v28 = (uint8_t *)v44;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLLocationSubscription::handleMessageBatch(std::shared_ptr<CLConnectionMessage>)",  "%s\n",  v44);
    goto LABEL_108;
  }

  if (v53)
  {
    sub_1004F2598();
    if ((sub_1001B9A1C() & 1) == 0)
    {
      if (v6)
      {
        if (qword_101934980 != -1) {
          dispatch_once(&qword_101934980, &stru_101883170);
        }
        uint64_t v24 = (os_log_s *)qword_101934988;
        if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_FAULT))
        {
          *(_DWORD *)std::stringbuf::string_type buf = 68289026;
          *(_DWORD *)uint64_t v67 = 0;
          *(_WORD *)&v67[4] = 2082;
          *(void *)&v67[6] = "";
          _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:BATCH: How were we batching if this wasn't supported?}",  buf,  0x12u);
          if (qword_101934980 != -1) {
            dispatch_once(&qword_101934980, &stru_101883170);
          }
        }

        uint64_t v25 = (os_log_s *)qword_101934988;
        if (os_signpost_enabled((os_log_t)qword_101934988))
        {
          *(_DWORD *)std::stringbuf::string_type buf = 68289026;
          *(_DWORD *)uint64_t v67 = 0;
          *(_WORD *)&v67[4] = 2082;
          *(void *)&v67[6] = "";
          _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v25,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "BATCH: How were we batching if this wasn't supported?",  "{msg%{public}.0s:BATCH: How were we batching if this wasn't supported?}",  buf,  0x12u);
        }
      }

      sub_100DB7790(a1, 1);
      uint64_t v17 = 11LL;
      goto LABEL_47;
    }

    id v8 = [(id)CLConnectionMessage::getDictionary(*a2) objectForKeyedSubscript:@"kCLConnectionMessageBatchDistanceKey"];
    if (v8 && (sub_1002A9AE8(v8, &v52) & 1) != 0)
    {
      id v9 = [(id)CLConnectionMessage::getDictionary(*a2) objectForKeyedSubscript:@"kCLConnectionMessageBatchTimeoutKey"];
      if (v9 && (sub_1002A9AE8(v9, &v51) & 1) != 0)
      {
        if (qword_101934970 != -1) {
          dispatch_once(&qword_101934970, &stru_101883130);
        }
        double v10 = (os_log_s *)qword_101934978;
        if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v11 = *(void *)(a1 + 248);
          uint64_t v12 = *(void *)(a1 + 256);
          uint64_t v13 = *(void *)(a1 + 24);
          *(_DWORD *)std::stringbuf::string_type buf = 134219266;
          *(double *)uint64_t v67 = v52;
          *(_WORD *)&v67[8] = 2048;
          *(double *)&v67[10] = v51;
          *(_WORD *)&v67[18] = 2048;
          *(void *)&v67[20] = v11;
          __int16 v68 = 2048;
          uint64_t v69 = v12;
          __int16 v70 = 2048;
          double v71 = Current;
          __int16 v72 = 2112;
          uint64_t v73 = v13;
          _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "BATCH: request (%.1fm, %.1fs) will be based on %.1fm (%.1fs), %.1fs for client %@",  buf,  0x3Eu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934970 != -1) {
            dispatch_once(&qword_101934970, &stru_101883130);
          }
          uint64_t v46 = *(void *)(a1 + 248);
          uint64_t v47 = *(void *)(a1 + 256);
          uint64_t v48 = *(void *)(a1 + 24);
          int v54 = 134219266;
          uint64_t v55 = *(const char **)&v52;
          __int16 v56 = 2048;
          double v57 = v51;
          __int16 v58 = 2048;
          uint64_t v59 = v46;
          __int16 v60 = 2048;
          uint64_t v61 = v47;
          __int16 v62 = 2048;
          double v63 = Current;
          __int16 v64 = 2112;
          uint64_t v65 = v48;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934978,  2LL,  "BATCH: request (%.1fm, %.1fs) will be based on %.1fm (%.1fs), %.1fs for client %@",  &v54,  62);
          uint64_t v50 = (uint8_t *)v49;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationSubscription::handleMessageBatch(std::shared_ptr<CLConnectionMessage>)",  "%s\n",  v49);
          if (v50 != buf) {
            free(v50);
          }
        }

        int v14 = *(_DWORD *)(a1 + 196);
        if (v14 < 0)
        {
          if (v6)
          {
            if (qword_101934970 != -1) {
              dispatch_once(&qword_101934970, &stru_101883130);
            }
            double v31 = (os_log_s *)qword_101934978;
            if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_FAULT))
            {
              *(_DWORD *)std::stringbuf::string_type buf = 68289026;
              *(_DWORD *)uint64_t v67 = 0;
              *(_WORD *)&v67[4] = 2082;
              *(void *)&v67[6] = "";
              _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:BATCH: How were we not updating location?}",  buf,  0x12u);
              if (qword_101934970 != -1) {
                dispatch_once(&qword_101934970, &stru_101883130);
              }
            }

            double v32 = (os_log_s *)qword_101934978;
            if (os_signpost_enabled((os_log_t)qword_101934978))
            {
              *(_DWORD *)std::stringbuf::string_type buf = 68289026;
              *(_DWORD *)uint64_t v67 = 0;
              *(_WORD *)&v67[4] = 2082;
              *(void *)&v67[6] = "";
              _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v32,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "BATCH: How were we not updating location?",  "{msg%{public}.0s:BATCH: How were we not updating location?}",  buf,  0x12u);
            }
          }

          sub_100DB7790(a1, 1);
          uint64_t v17 = 12LL;
          goto LABEL_47;
        }

        if (v14)
        {
          if (v6)
          {
            if (qword_101934970 != -1) {
              dispatch_once(&qword_101934970, &stru_101883130);
            }
            unsigned int v15 = (os_log_s *)qword_101934978;
            if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_FAULT))
            {
              *(_DWORD *)std::stringbuf::string_type buf = 68289026;
              *(_DWORD *)uint64_t v67 = 0;
              *(_WORD *)&v67[4] = 2082;
              *(void *)&v67[6] = "";
              _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:BATCH: How were we batching accuracy was too low?}",  buf,  0x12u);
              if (qword_101934970 != -1) {
                dispatch_once(&qword_101934970, &stru_101883130);
              }
            }

            uint64_t v16 = (os_log_s *)qword_101934978;
            if (os_signpost_enabled((os_log_t)qword_101934978))
            {
              *(_DWORD *)std::stringbuf::string_type buf = 68289026;
              *(_DWORD *)uint64_t v67 = 0;
              *(_WORD *)&v67[4] = 2082;
              *(void *)&v67[6] = "";
              _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v16,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "BATCH: How were we batching accuracy was too low?",  "{msg%{public}.0s:BATCH: How were we batching accuracy was too low?}",  buf,  0x12u);
            }
          }

          sub_100DB7790(a1, 1);
          uint64_t v17 = 13LL;
LABEL_47:
          sub_100DB8CA4(a1, v17);
          goto LABEL_32;
        }

        if ([*(id *)(a1 + 176) objectForKeyedSubscript:@"kCLConnectionMessageDistanceFilterKey"])
        {
          objc_msgSend( objc_msgSend(*(id *)(a1 + 176), "objectForKeyedSubscript:", @"kCLConnectionMessageDistanceFilterKey"),  "doubleValue");
          if (v33 > 0.0)
          {
            if (v6)
            {
              if (qword_101934970 != -1) {
                dispatch_once(&qword_101934970, &stru_101883130);
              }
              __int128 v34 = (os_log_s *)qword_101934978;
              if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_FAULT))
              {
                *(_DWORD *)std::stringbuf::string_type buf = 68289026;
                *(_DWORD *)uint64_t v67 = 0;
                *(_WORD *)&v67[4] = 2082;
                *(void *)&v67[6] = "";
                _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:BATCH: How were we batching if a distance filter was on?}",  buf,  0x12u);
                if (qword_101934970 != -1) {
                  dispatch_once(&qword_101934970, &stru_101883130);
                }
              }

              uint64_t v35 = (os_log_s *)qword_101934978;
              if (os_signpost_enabled((os_log_t)qword_101934978))
              {
                *(_DWORD *)std::stringbuf::string_type buf = 68289026;
                *(_DWORD *)uint64_t v67 = 0;
                *(_WORD *)&v67[4] = 2082;
                *(void *)&v67[6] = "";
                _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v35,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "BATCH: How were we batching if a distance filter was on?",  "{msg%{public}.0s:BATCH: How were we batching if a distance filter was on?}",  buf,  0x12u);
              }
            }

            sub_100DB7790(a1, 1);
            uint64_t v17 = 14LL;
            goto LABEL_47;
          }
        }

        double v36 = v52;
        if (v52 <= 0.0 || (double v37 = v51, v51 <= 0.0))
        {
          if (qword_101934970 != -1) {
            dispatch_once(&qword_101934970, &stru_101883130);
          }
          uint64_t v41 = (os_log_s *)qword_101934978;
          if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)std::stringbuf::string_type buf = 68289026;
            *(_DWORD *)uint64_t v67 = 0;
            *(_WORD *)&v67[4] = 2082;
            *(void *)&v67[6] = "";
            _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:BATCH: distance or timeout was <= 0 (techincally exit criteria has already been satisfied.)}",  buf,  0x12u);
          }

          sub_100DB7790(a1, 1);
          uint64_t v17 = 0xFFFFFFFFLL;
          goto LABEL_47;
        }

        double v38 = *(double *)(a1 + 248);
        if (v52 != 1.79769313e308 && (v38 < 0.0 || *(double *)(a1 + 256) + 7.0 < Current))
        {
          if (qword_101934970 != -1) {
            dispatch_once(&qword_101934970, &stru_101883130);
          }
          uint64_t v39 = (os_log_s *)qword_101934978;
          if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)std::stringbuf::string_type buf = 68289026;
            *(_DWORD *)uint64_t v67 = 0;
            *(_WORD *)&v67[4] = 2082;
            *(void *)&v67[6] = "";
            _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#Notice Location uncertainty too high to allow deferred updates now}",  buf,  0x12u);
            if (qword_101934970 != -1) {
              dispatch_once(&qword_101934970, &stru_101883130);
            }
          }

          uint64_t v40 = (os_log_s *)qword_101934978;
          if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)std::stringbuf::string_type buf = 68289026;
            *(_DWORD *)uint64_t v67 = 0;
            *(_WORD *)&v67[4] = 2082;
            *(void *)&v67[6] = "";
            _os_log_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#Warning BATCH: odometer is not running, we have no way to know what distance is relative to}",  buf,  0x12u);
          }

          sub_100DB7790(a1, 1);
          uint64_t v17 = 11LL;
          goto LABEL_47;
        }

        double v42 = v52 + v38;
        double v43 = Current + v51;
        *(double *)(a1 + 264) = v42;
        *(double *)(a1 + 272) = Current + v37;
        if (v36 >= 100.0 && v37 >= 30.0)
        {
          sub_100DB83C0(a1, v42, v43);
          goto LABEL_32;
        }

        sub_100DB7790(a1, 1);
        if (qword_101934970 != -1) {
          dispatch_once(&qword_101934970, &stru_101883130);
        }
        uint64_t v45 = qword_101934978;
        if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)std::stringbuf::string_type buf = 68289026;
          *(_DWORD *)uint64_t v67 = 0;
          *(_WORD *)&v67[4] = 2082;
          *(void *)&v67[6] = "";
          uint64_t v21 = "{msg%{public}.0s:BATCH: scheduled batch exit but not off-boarding}";
          char v22 = (os_log_s *)v45;
          uint32_t v23 = 18;
          goto LABEL_37;
        }

        goto LABEL_32;
      }

      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101883170);
      }
      uint64_t v29 = (os_log_s *)qword_101934988;
      if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 136446210;
        *(void *)uint64_t v67 = "kCLConnectionMessageBatchTimeoutKey";
        _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_FAULT,  "Couldn't get value for key %{public}s",  buf,  0xCu);
      }

      if (!sub_1002921D0(115, 0)) {
        goto LABEL_32;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101883170);
      }
      int v54 = 136446210;
      uint64_t v55 = "kCLConnectionMessageBatchTimeoutKey";
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934988,  17LL,  "Couldn't get value for key %{public}s",  &v54,  12);
      double v28 = (uint8_t *)v30;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLLocationSubscription::handleMessageBatch(std::shared_ptr<CLConnectionMessage>)",  "%s\n",  v30);
    }

    else
    {
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101883170);
      }
      __int128 v26 = (os_log_s *)qword_101934988;
      if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 136446210;
        *(void *)uint64_t v67 = "kCLConnectionMessageBatchDistanceKey";
        _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_FAULT,  "Couldn't get value for key %{public}s",  buf,  0xCu);
      }

      if (!sub_1002921D0(115, 0)) {
        goto LABEL_32;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101883170);
      }
      int v54 = 136446210;
      uint64_t v55 = "kCLConnectionMessageBatchDistanceKey";
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934988,  17LL,  "Couldn't get value for key %{public}s",  &v54,  12);
      double v28 = (uint8_t *)v27;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLLocationSubscription::handleMessageBatch(std::shared_ptr<CLConnectionMessage>)",  "%s\n",  v27);
    }

void sub_100DB1CF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100DB1D44(uint64_t a1, CLConnectionMessage **a2)
{
  uint64_t v4 = objc_alloc_init(&OBJC_CLASS___NSAutoreleasePool);
  HIBYTE(v12) = 0;
  id v5 = [(id)CLConnectionMessage::getDictionary(*a2) objectForKeyedSubscript:@"kCLConnectionMessageAllowsBackgroundLocationUpdatesKey"];
  if (v5 && (sub_1002A9230(v5, (BOOL *)&v12 + 7) & 1) != 0)
  {
    if (*(unsigned __int8 *)(a1 + 90) != HIBYTE(v12))
    {
      *(_BYTE *)(a1 + 90) = HIBYTE(v12);
      if (qword_101934970 != -1) {
        dispatch_once(&qword_101934970, &stru_101883130);
      }
      int v6 = (os_log_s *)qword_101934978;
      if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v7 = *(void *)(a1 + 24);
        int v8 = *(unsigned __int8 *)(a1 + 90);
        *(_DWORD *)std::stringbuf::string_type buf = 68289538;
        *(_DWORD *)uint64_t v16 = 0;
        *(_WORD *)&v16[4] = 2082;
        *(void *)&v16[6] = "";
        __int16 v17 = 2114;
        uint64_t v18 = v7;
        __int16 v19 = 1026;
        int v20 = v8;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:Client is setting ContinuousBackgroundLocationRequested, Client:%{public, locatio n:escape_only}@, ContinuousBackgroundLocationRequested:%{public}d}",  buf,  0x22u);
      }

      sub_100DB4080(a1);
      if (*(_BYTE *)(a1 + 90)) {
        sub_100DB5EEC(a1, 0);
      }
      else {
        sub_100DB803C(a1, 0);
      }
    }
  }

  else
  {
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101883170);
    }
    id v9 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 136446210;
      *(void *)uint64_t v16 = "kCLConnectionMessageAllowsBackgroundLocationUpdatesKey";
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_FAULT,  "Couldn't get value for key %{public}s",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101883170);
      }
      int v13 = 136446210;
      int v14 = "kCLConnectionMessageAllowsBackgroundLocationUpdatesKey";
      LODWORD(v12) = 12;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934988,  17LL,  "Couldn't get value for key %{public}s",  &v13,  v12);
      uint64_t v11 = (uint8_t *)v10;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLLocationSubscription::handleMessageAllowsBackgroundLocationUpdates(std::shared_ptr<CLConnectionMessage>)",  "%s\n",  v10);
      if (v11 != buf) {
        free(v11);
      }
    }
  }
}

void sub_100DB2028(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100DB2058(uint64_t a1, CLConnectionMessage **a2)
{
  uint64_t v4 = objc_alloc_init(&OBJC_CLASS___NSAutoreleasePool);
  HIBYTE(v12) = 0;
  id v5 = [(id)CLConnectionMessage::getDictionary(*a2) objectForKeyedSubscript:@"kCLConnectionMessageShowsBackgroundLocationIndicatorKey"];
  if (v5 && (sub_1002A9230(v5, (BOOL *)&v12 + 7) & 1) != 0)
  {
    if (*(unsigned __int8 *)(a1 + 91) != HIBYTE(v12))
    {
      *(_BYTE *)(a1 + 91) = HIBYTE(v12);
      if (qword_101934970 != -1) {
        dispatch_once(&qword_101934970, &stru_101883130);
      }
      int v6 = (os_log_s *)qword_101934978;
      if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v7 = *(void *)(a1 + 24);
        int v8 = *(unsigned __int8 *)(a1 + 91);
        *(_DWORD *)std::stringbuf::string_type buf = 68289538;
        *(_DWORD *)uint64_t v16 = 0;
        *(_WORD *)&v16[4] = 2082;
        *(void *)&v16[6] = "";
        __int16 v17 = 2114;
        uint64_t v18 = v7;
        __int16 v19 = 1026;
        int v20 = v8;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:Client is setting ContinuousBackgroundLocationIndicatorForAlwaysEnabled, Client:% {public, location:escape_only}@, ContinuousBackgroundLocationIndicatorForAlwaysEnabled:%{public}d}",  buf,  0x22u);
      }

      sub_100DB7654(a1);
    }
  }

  else
  {
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101883170);
    }
    id v9 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 136446210;
      *(void *)uint64_t v16 = "kCLConnectionMessageShowsBackgroundLocationIndicatorKey";
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_FAULT,  "Couldn't get value for key %{public}s",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101883170);
      }
      int v13 = 136446210;
      int v14 = "kCLConnectionMessageShowsBackgroundLocationIndicatorKey";
      LODWORD(v12) = 12;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934988,  17LL,  "Couldn't get value for key %{public}s",  &v13,  v12);
      uint64_t v11 = (uint8_t *)v10;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLLocationSubscription::handleMessageShowsBackgroundLocationIndicator(std::shared_ptr<CLConnectionMessage>)",  "%s\n",  v10);
      if (v11 != buf) {
        free(v11);
      }
    }
  }
}

void sub_100DB2318(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100DB2348(uint64_t a1, CLConnectionMessage **a2)
{
  uint64_t v4 = objc_alloc_init(&OBJC_CLASS___NSAutoreleasePool);
  if (([*(id *)(a1 + 16) isAuthorizedForServiceType:12] & 1) == 0)
  {
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101883170);
    }
    uint64_t v7 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v8 = *(void *)(a1 + 24);
      *(_DWORD *)std::stringbuf::string_type buf = 138412290;
      *(void *)&uint8_t buf[4] = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "%@ with CorrectiveCompensation enabled attempting allowsMapCorrection.",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101883170);
      }
      id v9 = *(const char **)(a1 + 24);
      int v29 = 138412290;
      double v30 = v9;
      LODWORD(v28) = 12;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934988,  2LL,  "%@ with CorrectiveCompensation enabled attempting allowsMapCorrection.",  &v29,  v28);
      uint64_t v11 = (char *)v10;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationSubscription::handleMessageAllowsMapCorrection(std::shared_ptr<CLConnectionMessage>)",  "%s\n",  v10);
      goto LABEL_47;
    }

    goto LABEL_32;
  }

  if ([*(id *)(a1 + 176) objectForKeyedSubscript:@"kCLConnectionMessageDesiredAccuracyKey"])
  {
    objc_msgSend( objc_msgSend(*(id *)(a1 + 176), "objectForKeyedSubscript:", @"kCLConnectionMessageDesiredAccuracyKey"),  "doubleValue");
    double v6 = v5;
  }

  else
  {
    double v6 = -1.0;
  }

  HIBYTE(v28) = 1;
  id v12 = [(id)CLConnectionMessage::getDictionary(*a2) objectForKeyedSubscript:@"kCLConnectionMessageAllowsMapCorrectionKey"];
  if (v12 && (sub_1002A9230(v12, (BOOL *)&v28 + 7) & 1) != 0)
  {
    *(_BYTE *)(a1 + 193) = HIBYTE(v28);
    sub_1010DDBC0(buf, "kCLConnectionMessageLocation");
    if (sub_100C6ACAC(a1))
    {
      BOOL v14 = v6 < 100.0 && (*(unsigned __int8 *)(a1 + 194) | *(unsigned __int8 *)(a1 + 193)) != 0;
      if (SHIBYTE(v43) < 0) {
        operator delete(*(void **)buf);
      }
      if (v14)
      {
        uint64_t v15 = sub_100DAF894(a1);
        [*(id *)(*(void *)v15 + 16) register:*(void *)(*(void *)v15 + 8) forNotification:17 registrationInfo:0];
        int v16 = 1;
        goto LABEL_36;
      }
    }

    else if (SHIBYTE(v43) < 0)
    {
      operator delete(*(void **)buf);
    }

    uint64_t v18 = sub_100DAF894(a1);
    [*(id *)(*(void *)v18 + 16) unregister:*(void *)(*(void *)v18 + 8) forNotification:17];
    int v16 = 0;
LABEL_36:
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101883130);
    }
    __int16 v19 = (os_log_s *)qword_101934978;
    if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v20 = *(void *)(a1 + 24);
      int v21 = *(_DWORD *)(a1 + 44);
      int v22 = *(unsigned __int8 *)(a1 + 193);
      *(_DWORD *)std::stringbuf::string_type buf = 138413314;
      *(void *)&uint8_t buf[4] = v20;
      __int16 v40 = 1024;
      int v41 = v21;
      __int16 v42 = 1024;
      int v43 = v22;
      __int16 v44 = 2048;
      double v45 = v6;
      __int16 v46 = 1024;
      int v47 = v16;
      _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEBUG,  "CLMM,Client,'%@',pid,%u,allowsMapCorrection,%d,desiredAccuracy,%lf,kNotificationMapMatching,%d",  buf,  0x28u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934970 != -1) {
        dispatch_once(&qword_101934970, &stru_101883130);
      }
      uint32_t v23 = *(const char **)(a1 + 24);
      int v24 = *(_DWORD *)(a1 + 44);
      int v25 = *(unsigned __int8 *)(a1 + 193);
      int v29 = 138413314;
      double v30 = v23;
      __int16 v31 = 1024;
      int v32 = v24;
      __int16 v33 = 1024;
      int v34 = v25;
      __int16 v35 = 2048;
      double v36 = v6;
      __int16 v37 = 1024;
      int v38 = v16;
      LODWORD(v28) = 40;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934978,  2LL,  "CLMM,Client,'%@',pid,%u,allowsMapCorrection,%d,desiredAccuracy,%lf,kNotificationMapMatching,%d",  &v29,  v28);
      uint64_t v11 = (char *)v26;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationSubscription::handleMessageAllowsMapCorrection(std::shared_ptr<CLConnectionMessage>)",  "%s\n",  v26);
LABEL_47:
      if (v11 != buf) {
        free(v11);
      }
      goto LABEL_32;
    }

    goto LABEL_32;
  }

  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_101883170);
  }
  __int16 v17 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_FAULT))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 136446210;
    *(void *)&uint8_t buf[4] = "kCLConnectionMessageAllowsMapCorrectionKey";
    _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_FAULT,  "Couldn't get value for key %{public}s",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101883170);
    }
    int v29 = 136446210;
    double v30 = "kCLConnectionMessageAllowsMapCorrectionKey";
    LODWORD(v28) = 12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934988,  17LL,  "Couldn't get value for key %{public}s",  &v29,  v28);
    uint64_t v11 = (char *)v27;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLLocationSubscription::handleMessageAllowsMapCorrection(std::shared_ptr<CLConnectionMessage>)",  "%s\n",  v27);
    goto LABEL_47;
  }

void sub_100DB2930( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20, char a21, char a22)
{
  _Unwind_Resume(a1);
}

void sub_100DB2994(uint64_t a1, CLConnectionMessage **a2)
{
  uint64_t v4 = objc_alloc_init(&OBJC_CLASS___NSAutoreleasePool);
  HIDWORD(v13) = 0;
  id v5 = [(id)CLConnectionMessage::getDictionary(*a2) objectForKeyedSubscript:@"kCLConnectionMessageActivityTypeKey"];
  if (v5 && (sub_1002A96F8(v5, (_DWORD *)&v13 + 1) & 1) != 0)
  {
    unsigned int v6 = HIDWORD(v13);
    if (*(_DWORD *)(a1 + 232) != HIDWORD(v13))
    {
      if (qword_101934970 != -1) {
        dispatch_once(&qword_101934970, &stru_101883130);
      }
      uint64_t v7 = (os_log_s *)qword_101934978;
      if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v8 = *(void *)(a1 + 24);
        int v9 = *(_DWORD *)(a1 + 232);
        *(_DWORD *)std::stringbuf::string_type buf = 68289794;
        *(_DWORD *)__int16 v17 = 0;
        *(_WORD *)&v17[4] = 2082;
        *(void *)&v17[6] = "";
        __int16 v18 = 2114;
        uint64_t v19 = v8;
        __int16 v20 = 1026;
        int v21 = v9;
        __int16 v22 = 1026;
        unsigned int v23 = v6;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:Client changed activity type, Client:%{public, location:escape_only}@, from:% {public}d, to:%{public}d}",  buf,  0x28u);
      }

      sub_100DB3558(a1, v6);
      sub_100DB6450(a1);
    }
  }

  else
  {
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101883170);
    }
    double v10 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 136446210;
      *(void *)__int16 v17 = "kCLConnectionMessageActivityTypeKey";
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "Couldn't get value for key %{public}s",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101883170);
      }
      int v14 = 136446210;
      uint64_t v15 = "kCLConnectionMessageActivityTypeKey";
      LODWORD(v13) = 12;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934988,  17LL,  "Couldn't get value for key %{public}s",  &v14,  v13);
      id v12 = (uint8_t *)v11;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLLocationSubscription::handleMessageActivityType(std::shared_ptr<CLConnectionMessage>)",  "%s\n",  v11);
      if (v12 != buf) {
        free(v12);
      }
    }
  }
}

void sub_100DB2C64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100DB2C94(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, char a6, int a7)
{
  uint64_t v10 = sub_100C6AAF0(a1, a2, a3, a4, a5);
  *(void *)uint64_t v10 = off_101882F08;
  *(_DWORD *)(v10 + 44) = a7;
  uint64_t v11 = objc_alloc_init(&OBJC_CLASS___CLLocationSubscriptionAdapter);
  *(void *)(a1 + 104) = 0LL;
  *(void *)(a1 + 48) = v11;
  *(_WORD *)(a1 + 56) = 1;
  *(_BYTE *)(a1 + 58) = 0;
  *(void *)(a1 + 64) = 0xBFF0000000000000LL;
  *(void *)(a1 + 72) = 0LL;
  *(void *)(a1 + 80) = 0x7FF0000000000000LL;
  *(_BYTE *)(a1 + 88) = 0;
  *(_BYTE *)(a1 + 89) = a6;
  *(_WORD *)(a1 + 90) = 0;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_BYTE *)(a1 + 192) = 0;
  id v12 = (_BYTE *)(a1 + 192);
  *(void *)(a1 + 96) = 0LL;
  *(void *)(a1 + 112) = 0LL;
  *(_DWORD *)(a1 + 120) = 0;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_BYTE *)(a1 + 193) = 1;
  *(void *)(a1 + 196) = -1LL;
  *(void *)(a1 + 208) = 0x7FEFFFFFFFFFFFFFLL;
  *(void *)(a1 + 216) = 0LL;
  *(void *)(a1 + 2sub_100BDC958(v1 + 24) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 232) = 0;
  *(_BYTE *)(a1 + 236) = 0;
  *(_WORD *)(a1 + 240) = 0;
  __asm { FMOV            V1.2D, #-1.0 }

  *(_OWORD *)(a1 + 248) = _Q1;
  *(void *)(a1 + 264) = 0xBFF0000000000000LL;
  *(void *)(a1 + 272) = 0xBFF0000000000000LL;
  *(void *)(a1 + 280) = 0LL;
  *(void *)(a1 + 288) = 0LL;
  *(void *)(a1 + 296) = 0LL;
  *(void *)(a1 + 304) = 0x7FF0000000000000LL;
  *(_BYTE *)(a1 + 312) = 0;
  *(void *)(a1 + 336) = 0LL;
  *(void *)(a1 + 344) = 0LL;
  *(void *)(a1 + 349) = 0LL;
  *(void *)(a1 + 320) = 0xBFF0000000000000LL;
  *(void *)(a1 + 328) = 0LL;
  *(_DWORD *)(a1 + 360) = 1000;
  *(_BYTE *)(a1 + 364) = 0;
  *(void *)(a1 + 368) = 0LL;
  *(void *)(a1 + 376) = 0xBFF0000000000000LL;
  *(_OWORD *)(a1 + 384) = xmmword_1012EA5D0;
  *(_OWORD *)(a1 + 400) = _Q1;
  *(_OWORD *)(a1 + 416) = _Q1;
  *(_BYTE *)(a1 + 432) = 0;
  *(_DWORD *)(a1 + 500) = 0;
  *(_OWORD *)(a1 + 484) = 0u;
  *(_OWORD *)(a1 + 468) = 0u;
  *(_OWORD *)(a1 + 452) = 0u;
  *(_OWORD *)(a1 + 436) = 0u;
  *(void *)(a1 + 504) = 0xBFF0000000000000LL;
  *(void *)(a1 + 512) = 0LL;
  *(void *)(a1 + 520) = off_10182F180;
  __int16 v18 = operator new(0x20uLL);
  _OWORD v18[2] = 0LL;
  *__int16 v18 = off_10182F1B8;
  v18[1] = 0LL;
  *((_DWORD *)v18 + 6) = 31337;
  *(void *)(a1 + 528) = v18 + 3;
  *(void *)(a1 + 536) = v18;
  *(void *)(a1 + 552) = off_10182F180;
  uint64_t v19 = operator new(0x20uLL);
  v19[1] = 0LL;
  v19[2] = 0LL;
  *uint64_t v19 = off_10182F1B8;
  *((_DWORD *)v19 + 6) = 31337;
  *(void *)(a1 + 560) = v19 + 3;
  *(void *)(a1 + 568) = v19;
  *(void *)(a1 + 576) = 0LL;
  sub_1002F0B04(buf);
  char v20 = sub_1002A832C(*(uint64_t *)buf, (uint64_t)off_101991040, (void *)(a1 + 544));
  char v21 = v20;
  __int16 v22 = *(std::__shared_weak_count **)v59;
  if (*(void *)v59)
  {
    unsigned int v23 = (unint64_t *)(*(void *)v59 + 8LL);
    do
      unint64_t v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
      if ((v21 & 1) != 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
  }

  if ((v20 & 1) == 0) {
LABEL_6:
  }
    *(void *)(a1 + 544) = 0x408C200000000000LL;
LABEL_7:
  sub_1002F0B04(buf);
  char v25 = sub_1002A6F64(*(uint64_t *)buf, "ForceMapMatching", (BOOL *)(a1 + 194));
  char v26 = v25;
  __int128 v27 = *(std::__shared_weak_count **)v59;
  if (*(void *)v59)
  {
    uint64_t v28 = (unint64_t *)(*(void *)v59 + 8LL);
    do
      unint64_t v29 = __ldaxr(v28);
    while (__stlxr(v29 - 1, v28));
    if (!v29)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
      if ((v26 & 1) != 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
  }

  if ((v25 & 1) == 0) {
LABEL_12:
  }
    *(_BYTE *)(a1 + 194) = 0;
LABEL_13:
  sub_1002F0B04(buf);
  int v30 = sub_1002A7CB0(*(uint64_t *)buf, "AutoPauseOverride", &v57);
  int v31 = v30;
  int v32 = *(std::__shared_weak_count **)v59;
  if (!*(void *)v59) {
    goto LABEL_17;
  }
  __int16 v33 = (unint64_t *)(*(void *)v59 + 8LL);
  do
    unint64_t v34 = __ldaxr(v33);
  while (__stlxr(v34 - 1, v33));
  if (!v34)
  {
    ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
    std::__shared_weak_count::__release_weak(v32);
    if (!v31) {
      goto LABEL_25;
    }
  }

  else
  {
LABEL_17:
    if (!v30) {
      goto LABEL_25;
    }
  }

  unsigned int v35 = v57;
  if (v57 <= 3)
  {
    *(_DWORD *)(a1 + 188) = v57;
    goto LABEL_26;
  }

void sub_100DB3428(_Unwind_Exception *a1)
{
  uint64_t v5 = *(void *)(v1 + 160);
  *(void *)(v1 + 160) = 0LL;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
  }
  uint64_t v6 = *(void *)(v1 + 152);
  *(void *)(v1 + 152) = 0LL;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
  }
  uint64_t v7 = *(void *)(v1 + 144);
  *(void *)(v1 + 144) = 0LL;
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
  }
  uint64_t v8 = *(void *)(v1 + 136);
  *(void *)(v1 + 136) = 0LL;
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
  }
  uint64_t v9 = *v3;
  *uint64_t v3 = 0LL;
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8LL))(v9);
  }
  sub_10058A4D0((uint64_t *)v2, 0LL);
  sub_100C6AB50(v1);
  _Unwind_Resume(a1);
}

void sub_100DB3530()
{
}

void sub_100DB3538()
{
}

void sub_100DB3558(uint64_t a1, unsigned int a2)
{
  if ([*(id *)(a1 + 16) isAuthorizedForServiceType:12])
  {
    unsigned int v4 = *(_DWORD *)(a1 + 232);
    if (v4 == 5) {
      unsigned int v5 = 29;
    }
    else {
      unsigned int v5 = 28;
    }
    BOOL v6 = v4 < 3 || v4 == 4;
    char v7 = v6;
    if (v6) {
      uint64_t v8 = 48LL;
    }
    else {
      uint64_t v8 = v5;
    }
    if (a2 < 3 || a2 == 4)
    {
      uint64_t v10 = 48LL;
      char v9 = 1;
    }

    else
    {
      char v9 = 0;
      if (a2 == 5) {
        uint64_t v10 = 29LL;
      }
      else {
        uint64_t v10 = 28LL;
      }
    }

    if ((_DWORD)v10 != (_DWORD)v8)
    {
      if ((v7 & 1) == 0)
      {
        uint64_t v16 = sub_100DAF894(a1);
        [*(id *)(*(void *)v16 + 16) unregister:*(void *)(*(void *)v16 + 8) forNotification:v8];
      }

      if ((v9 & 1) == 0)
      {
        uint64_t v17 = sub_100DAF894(a1);
        [*(id *)(*(void *)v17 + 16) register:*(void *)(*(void *)v17 + 8) forNotification:v10 registrationInfo:0];
      }
    }

    *(_DWORD *)(a1 + 232) = a2;
    if (*(double *)(a1 + 208) != 1.79769313e308)
    {
      BOOL v18 = (a2 == 4 || a2 == 2) && ([*(id *)(a1 + 16) inUseLevelIsAtLeast:5] & 1) != 0;
      sub_100DB9FB8(a1, v18);
    }
  }

  else
  {
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101883170);
    }
    uint64_t v11 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v12 = *(void *)(a1 + 24);
      *(_DWORD *)std::stringbuf::string_type buf = 138412290;
      uint64_t v22 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "%@ with CorrectiveCompensation enabled attempting setActivityType",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101883170);
      }
      uint64_t v13 = *(void *)(a1 + 24);
      int v19 = 138412290;
      uint64_t v20 = v13;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934988,  2LL,  "%@ with CorrectiveCompensation enabled attempting setActivityType",  &v19,  12);
      uint64_t v15 = (uint8_t *)v14;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationSubscription::setActivityType(CLClientActivityType)",  "%s\n",  v14);
      if (v15 != buf) {
        free(v15);
      }
    }
  }

uint64_t sub_100DB3844(uint64_t a1)
{
  *(void *)a1 = off_101882F08;
  *(_DWORD *)(a1 + 200) = -1;

  *(void *)(a1 + 216) = 0LL;
  *(void *)(a1 + 176) = 0LL;
  *(double *)&__int128 v2 = CFAbsoluteTimeGetCurrent();
  if (*(_BYTE *)(a1 + 312))
  {
    double v3 = *(double *)&v2;
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101883130);
    }
    unsigned int v4 = (os_log_s *)qword_101934978;
    if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v5 = *(void *)(a1 + 24);
      *(void *)char v25 = 68289282LL;
      *(_WORD *)&v25[8] = 2082;
      *(void *)&_BYTE v25[10] = "";
      *(_WORD *)&v25[18] = 2114;
      *(void *)&v25[20] = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:ending metric session (LocationUpdateSession), Client:%{public, location:escape_only}@}",  v25,  0x1Cu);
    }

    *(double *)(a1 + 376) = v3;
    *(_BYTE *)(a1 + 432) = *(_BYTE *)(a1 + 236);
    if (*(_BYTE *)(a1 + 58)) {
      *(double *)(a1 + 504) = *(double *)(a1 + 504) + v3 - *(double *)(a1 + 64);
    }
    uint64_t v6 = sub_1004DD868();
    sub_1004DE8B0(v6, (unsigned __int8 *)(a1 + 312));
    memset(v25, 0, sizeof(v25));
    __int128 v7 = 0uLL;
    *(void *)(a1 + 312) = 0LL;
    *(void *)(a1 + 320) = 0xBFF0000000000000LL;
    uint64_t v8 = (void **)(a1 + 328);
    if (*(char *)(a1 + 351) < 0)
    {
      operator delete(*v8);
      __int128 v7 = 0uLL;
    }

    *(_OWORD *)uint64_t v8 = v7;
    *(_OWORD *)(a1 + 344) = v7;
    *(_DWORD *)(a1 + 360) = 1000;
    *(_DWORD *)(a1 + 372) = 0;
    *(void *)(a1 + 364) = 0LL;
    *(void *)(a1 + 376) = 0xBFF0000000000000LL;
    __asm { FMOV            V1.2D, #-1.0 }

    *(_OWORD *)(a1 + 384) = xmmword_1012EA5D0;
    *(_OWORD *)(a1 + 400) = _Q1;
    *(_OWORD *)(a1 + 416) = _Q1;
    *(_BYTE *)(a1 + 432) = 0;
    *(void *)(a1 + 496) = *(void *)&v25[63];
    *(void *)(a1 + 504) = 0xBFF0000000000000LL;
    __int128 v14 = *(_OWORD *)&v25[48];
    *(_OWORD *)(a1 + 465) = *(_OWORD *)&v25[32];
    *(_OWORD *)(a1 + 481) = v14;
    __int128 v2 = *(_OWORD *)&v25[16];
    *(_OWORD *)(a1 + 433) = *(_OWORD *)v25;
    *(_OWORD *)(a1 + 449) = v2;
  }

  objc_msgSend(*(id *)(a1 + 576), "invalidate", *(double *)&v2, *(_OWORD *)v25, *(_OWORD *)&v25[16]);

  *(void *)(a1 + 576) = 0LL;
  if (*(_BYTE *)(a1 + 88)) {
    [*(id *)(a1 + 72) releaseAccuracyEnablementAssertionForClient:*(void *)(a1 + 48)];
  }

  *(void *)(a1 + 72) = 0LL;
  *(void *)(a1 + 168) = 0LL;
  uint64_t v15 = (void *)sub_100DB3BDC(a1, 0LL);
  [v15 invalidate:1];

  uint64_t v16 = *(void **)(a1 + 112);
  if (v16)
  {
    [v16 invalidate];

    *(void *)(a1 + 112) = 0LL;
  }

  [*(id *)(a1 + 280) invalidate];

  *(void *)(a1 + 280) = 0LL;
  uint64_t v17 = *(void *)(a1 + 136);
  *(void *)(a1 + 136) = 0LL;
  if (v17) {
    (*(void (**)(uint64_t))(*(void *)v17 + 8LL))(v17);
  }
  uint64_t v18 = *(void *)(a1 + 160);
  *(void *)(a1 + 160) = 0LL;
  if (v18) {
    (*(void (**)(uint64_t))(*(void *)v18 + 8LL))(v18);
  }
  [*(id *)(a1 + 48) setValid:0];

  *(void *)(a1 + 48) = 0LL;
  sub_1002B729C((void *)(a1 + 552));
  sub_1002B729C((void *)(a1 + 520));
  sub_100DB7ABC((id **)(a1 + 512), 0LL);
  sub_10000AE14(a1 + 288);
  uint64_t v19 = *(void *)(a1 + 160);
  *(void *)(a1 + 160) = 0LL;
  if (v19) {
    (*(void (**)(uint64_t))(*(void *)v19 + 8LL))(v19);
  }
  uint64_t v20 = *(void *)(a1 + 152);
  *(void *)(a1 + 152) = 0LL;
  if (v20) {
    (*(void (**)(uint64_t))(*(void *)v20 + 8LL))(v20);
  }
  uint64_t v21 = *(void *)(a1 + 144);
  *(void *)(a1 + 144) = 0LL;
  if (v21) {
    (*(void (**)(uint64_t))(*(void *)v21 + 8LL))(v21);
  }
  uint64_t v22 = *(void *)(a1 + 136);
  *(void *)(a1 + 136) = 0LL;
  if (v22) {
    (*(void (**)(uint64_t))(*(void *)v22 + 8LL))(v22);
  }
  uint64_t v23 = *(void *)(a1 + 128);
  *(void *)(a1 + 128) = 0LL;
  if (v23) {
    (*(void (**)(uint64_t))(*(void *)v23 + 8LL))(v23);
  }
  sub_10058A4D0((uint64_t *)(a1 + 104), 0LL);
  sub_100C6AB50(a1);
  return a1;
}

void sub_100DB3BD0(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100006BB8(a1);
}

uint64_t sub_100DB3BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(a1 + 96);
  uint64_t v4 = *(void *)(a1 + 96);
  if (a2)
  {
    if (v4) {
      sub_10126FC18((void *)(a1 + 96));
    }
  }

  else if (!v4)
  {
    return 0LL;
  }

  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_101883170);
  }
  uint64_t v6 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = *(void *)(a1 + 96);
    v9[0] = 68290562;
    v9[1] = 0;
    __int16 v10 = 2082;
    uint64_t v11 = "";
    __int16 v12 = 2082;
    uint64_t v13 = "state_transition";
    __int16 v14 = 2082;
    uint64_t v15 = "DaemonClient";
    __int16 v16 = 2050;
    uint64_t v17 = a1;
    __int16 v18 = 2082;
    uint64_t v19 = "visibilityAssertion";
    __int16 v20 = 2050;
    uint64_t v21 = v7;
    __int16 v22 = 2050;
    uint64_t v23 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:state transition, event:%{public, location:escape_only}s, state:%{public, locatio n:escape_only}s, id:%{public}p, property:%{public, location:escape_only}s, old:%{public}p, n ew:%{public}p}",  (uint8_t *)v9,  0x4Eu);
  }

  uint64_t result = *v5;
  *uint64_t v5 = a2;
  return result;
}

void sub_100DB3D40(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100DB3844(a1);
  operator delete(v1);
}

uint64_t sub_100DB3D54(unsigned int a1)
{
  if (a1 > 2) {
    return 0LL;
  }
  else {
    return qword_10135E580[a1];
  }
}

void sub_100DB3D7C(uint64_t a1)
{
  unsigned __int8 v2 = [*(id *)(a1 + 16) inUseLevelIsAtLeast:5];
  double v3 = -1.0;
  if ((v2 & 1) == 0)
  {
    double v3 = sub_100295E8C();
  }

  *(double *)(a1 + 2sub_100BDC958(v1 + 24) = v3;
LABEL_7:
  sub_100DB3FBC(a1);
  sub_100DB4080(a1);
  if ([*(id *)(a1 + 16) transientAwareRegistrationResult] - 2 <= 2)
  {
    *(_BYTE *)(a1 + 236) = 0;
    sub_100DB444C(a1);
  }

  uint64_t v4 = *(void *)(a1 + 512);
  if (v4)
  {
    unsigned int v5 = [*(id *)(a1 + 16) inUseLevelIsAtLeast:3];
    if (*(unsigned __int8 *)(v4 + 48) != v5)
    {
      char v6 = v5;
      sub_100DAF840(v4);
      *(_BYTE *)(v4 + 48) = v6;
    }
  }

  if (*(_BYTE *)(a1 + 58) && [*(id *)(a1 + 16) inUseLevelIsAtLeast:5])
  {
    *(_BYTE *)(a1 + 58) = 0;
    double Current = CFAbsoluteTimeGetCurrent();
    *(double *)(a1 + 504) = *(double *)(a1 + 504) + Current - *(double *)(a1 + 64);
    *(void *)(a1 + 64) = 0xBFF0000000000000LL;
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101883130);
    }
    uint64_t v8 = (os_log_s *)qword_101934978;
    if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v9 = *(void *)(a1 + 24);
      int v10 = *(_DWORD *)(a1 + 500);
      uint64_t v11 = *(void *)(a1 + 504);
      v13[0] = 68290050;
      v13[1] = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2114;
      uint64_t v17 = v9;
      __int16 v18 = 2050;
      double v19 = Current;
      __int16 v20 = 1026;
      int v21 = v10;
      __int16 v22 = 2050;
      uint64_t v23 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:#cblsPowerSaver LossTracking disabled due to App Foregrounding, Client:%{public, lo cation:escape_only}@, endTime:%{public}f, LocationLoss:%{public}d, RuntimeLoss:%{public}f}",  (uint8_t *)v13,  0x36u);
    }
  }

  sub_100DB4764(a1);
  unsigned int v12 = [*(id *)(a1 + 16) inUseLevelIsAtLeast:5];
  if (v12) {
    sub_100DB5EEC(a1, 0);
  }
  [*(id *)(a1 + 96) setBackgrounded:v12 ^ 1];
  sub_100DB6450(a1);
}

id sub_100DB3FBC(uint64_t a1)
{
  id result = [*(id *)(a1 + 16) inUseLevelIsAtLeast:3];
  if (*(double *)(a1 + 208) != 1.79769313e308
    && (int v3 = (int)result,
        (id result = [*(id *)(a1 + 176) objectForKeyedSubscript:@"kCLConnectionMessageDesiredAccuracyKey"]) != 0)
    && (id result = [result doubleValue], v3))
  {
    double v5 = v4;
    if (!*(_BYTE *)(a1 + 88) || *(double *)(a1 + 80) != v4)
    {
      id result = [(id)sub_100DB7A50(a1) takeAccuracyEnablementAssertionForClient:*(void *)(a1 + 48) withDesiredAccuracy:v4];
      *(double *)(a1 + 80) = v5;
      *(_BYTE *)(a1 + 88) = 1;
    }
  }

  else if (*(_BYTE *)(a1 + 88))
  {
    id result = [(id)sub_100DB7A50(a1) releaseAccuracyEnablementAssertionForClient:*(void *)(a1 + 48)];
    *(void *)(a1 + 80) = 0x7FF0000000000000LL;
    *(_BYTE *)(a1 + 88) = 0;
  }

  return result;
}

void sub_100DB4080(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 24) description];
  double v3 = *(double *)(a1 + 208);
  BOOL v4 = v3 != 1.79769313e308 && *(_BYTE *)(a1 + 89) && *(_BYTE *)(a1 + 90) != 0;
  int v5 = *(_DWORD *)(a1 + 44);
  int v6 = sub_100C6ACEC(a1);
  int v7 = v6;
  uint64_t v8 = "None";
  if (v4 != (*(void *)(a1 + 96) != 0LL))
  {
    if ((v4 & v6) != 0) {
      uint64_t v8 = "Acquiring";
    }
    if (!v4)
    {
      uint64_t v9 = sub_100DB3BDC(a1, 0LL);
      id v10 = [*(id *)(a1 + 8) silo];
      char v26 = _NSConcreteStackBlock;
      uint64_t v27 = 3221225472LL;
      uint64_t v28 = sub_100DB9DA4;
      unint64_t v29 = (const char *)&unk_101862178;
      int v32 = v5;
      id v30 = v2;
      uint64_t v31 = v9;
      [v10 afterInterval:&v26 async:1.0];
      uint64_t v8 = "Releasing";
    }
  }

  sub_100DB7654(a1);
  if (qword_101934970 != -1) {
    dispatch_once(&qword_101934970, &stru_101883130);
  }
  uint64_t v11 = (os_log_s *)qword_101934978;
  if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
  {
    id v12 = [v2 UTF8String];
    uint64_t v13 = "N";
    if (*(_BYTE *)(a1 + 89))
    {
      if (*(_BYTE *)(a1 + 90)) {
        __int16 v14 = "Y";
      }
      else {
        __int16 v14 = "N";
      }
    }

    else
    {
      __int16 v14 = "N";
    }

    *(_DWORD *)std::stringbuf::string_type buf = 136316674;
    id v48 = v12;
    __int16 v49 = 1024;
    if (v3 == 1.79769313e308) {
      uint64_t v15 = "N";
    }
    else {
      uint64_t v15 = "Y";
    }
    int v50 = v5;
    if (v4) {
      __int16 v16 = "Y";
    }
    else {
      __int16 v16 = "N";
    }
    __int16 v51 = 2080;
    if (v7) {
      uint64_t v13 = "Y";
    }
    unint64_t v52 = v14;
    __int16 v53 = 2080;
    int v54 = v15;
    __int16 v55 = 2080;
    signed int v56 = v16;
    __int16 v57 = 2080;
    __int16 v58 = v13;
    __int16 v59 = 2080;
    __int16 v60 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "#visibility For %s (PID:%d)  Background:%s  Started:%s  > Needed:%s  Eligible:%s  Action:%s",  buf,  0x44u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101883130);
    }
    uint64_t v17 = qword_101934978;
    id v18 = [v2 UTF8String];
    double v19 = "N";
    if (*(_BYTE *)(a1 + 89))
    {
      if (*(_BYTE *)(a1 + 90)) {
        __int16 v20 = "Y";
      }
      else {
        __int16 v20 = "N";
      }
    }

    else
    {
      __int16 v20 = "N";
    }

    int v33 = 136316674;
    if (v3 == 1.79769313e308) {
      int v21 = "N";
    }
    else {
      int v21 = "Y";
    }
    id v34 = v18;
    __int16 v35 = 1024;
    if (v4) {
      __int16 v22 = "Y";
    }
    else {
      __int16 v22 = "N";
    }
    int v36 = v5;
    if (v7) {
      double v19 = "Y";
    }
    __int16 v37 = 2080;
    char v38 = v20;
    __int16 v39 = 2080;
    __int16 v40 = v21;
    __int16 v41 = 2080;
    unint64_t v42 = v22;
    __int16 v43 = 2080;
    int v44 = v19;
    __int16 v45 = 2080;
    int v46 = v8;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v17,  2LL,  "#visibility For %s (PID:%d)  Background:%s  Started:%s  > Needed:%s  Eligible:%s  Action:%s",  (const char *)&v33,  68,  v25,  (const char *)v26,  (const char *)v27,  (const char *)v28,  v29);
    unint64_t v24 = (uint8_t *)v23;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLLocationSubscription::updateVisibilityAssertion()", "%s\n", v23);
    if (v24 != buf) {
      free(v24);
    }
  }

void sub_100DB444C(uint64_t a1)
{
  if (qword_101934970 != -1) {
    dispatch_once(&qword_101934970, &stru_101883130);
  }
  id v2 = (os_log_s *)qword_101934978;
  if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 24);
    int v14 = 68289538;
    int v15 = 0;
    __int16 v16 = 2082;
    uint64_t v17 = "";
    __int16 v18 = 2114;
    uint64_t v19 = v3;
    __int16 v20 = 2050;
    uint64_t v21 = sub_1000F0F58(a1);
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:stopLocation_nl, Client:%{public, location:escape_only}@, DC:%{public}p}",  (uint8_t *)&v14,  0x26u);
  }

  if (*(_BYTE *)(a1 + 241))
  {
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101883130);
    }
    BOOL v4 = (os_log_s *)qword_101934978;
    if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v5 = *(void *)(a1 + 24);
      int v14 = 68289282;
      int v15 = 0;
      __int16 v16 = 2082;
      uint64_t v17 = "";
      __int16 v18 = 2114;
      uint64_t v19 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:BATCH: stop because stopping location for, Client:%{public, location:escape_only}@}",  (uint8_t *)&v14,  0x1Cu);
    }

    sub_100DB8CA4(a1, 12LL);
  }

  sub_100C6AE20(a1);
  *(void *)(a1 + 208) = 0x7FEFFFFFFFFFFFFFLL;
  *(void *)(a1 + 196) = -1LL;
  sub_100DBA374(a1, 2LL);
  sub_100DBA374(a1, 1LL);
  sub_100DBA374(a1, 4LL);
  sub_100DBA374(a1, 39LL);
  sub_100DBA374(a1, 5LL);
  sub_100DBA374(a1, 0LL);
  sub_100DBA374(a1, 9LL);
  uint64_t v6 = sub_100DAF894(a1);
  [*(id *)(*(void *)v6 + 16) unregister:*(void *)(*(void *)v6 + 8) forNotification:8];
  uint64_t v7 = sub_100DAF894(a1);
  [*(id *)(*(void *)v7 + 16) unregister:*(void *)(*(void *)v7 + 8) forNotification:17];
  uint64_t v8 = sub_100DAF894(a1);
  [*(id *)(*(void *)v8 + 16) unregister:*(void *)(*(void *)v8 + 8) forNotification:22];
  uint64_t v9 = sub_100DAF894(a1);
  [*(id *)(*(void *)v9 + 16) unregister:*(void *)(*(void *)v9 + 8) forNotification:34];
  uint64_t v10 = sub_100DAF894(a1);
  [*(id *)(*(void *)v10 + 16) unregister:*(void *)(*(void *)v10 + 8) forNotification:35];
  uint64_t v11 = sub_100DAFBF8(a1);
  [*(id *)(*(void *)v11 + 16) unregister:*(void *)(*(void *)v11 + 8) forNotification:12];
  sub_100DB4080(a1);
  sub_100DB3FBC(a1);
  int v13 = *(_DWORD *)(a1 + 184);
  int v12 = *(_DWORD *)(a1 + 188);
  if (v13 >= 5)
  {
    if (v12 == 1) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }

  if (v12 == 2 || v13 == 2 && v12 == 3) {
LABEL_17:
  }
    sub_100DB7EA8(a1);
LABEL_18:

  *(void *)(a1 + 216) = 0LL;
  sub_1002B70AC(a1 + 520);
  sub_100DB803C(a1, 1);
}

void sub_100DB4764(uint64_t a1)
{
  char v2 = sub_100C6ACAC(a1);
  char v3 = v2;
  if ((__p[23] & 0x80000000) != 0)
  {
    operator delete(*(void **)__p);
    if ((v3 & 1) == 0) {
      return;
    }
  }

  else if ((v2 & 1) == 0)
  {
    return;
  }

  v128[0] = _NSConcreteStackBlock;
  v128[1] = 3221225472LL;
  __int16 v129 = sub_100DBA068;
  __int32 v130 = &unk_10181D3D0;
  uint64_t v131 = a1;
  if ((sub_100C6ADAC(a1, 4) & 1) != 0)
  {
    [*(id *)(a1 + 576) invalidate];

    *(void *)(a1 + 576) = 0LL;
    if (*(_BYTE *)(a1 + 236))
    {
      if (qword_101934970 != -1) {
        dispatch_once(&qword_101934970, &stru_101883130);
      }
      BOOL v4 = (os_log_s *)qword_101934978;
      if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v5 = *(void *)(a1 + 24);
        *(_DWORD *)std::stringbuf::string_type __p = 138543362;
        *(void *)&__p[4] = v5;
        _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Client '%{public}@' paused, not starting location",  __p,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(__p, 0x65CuLL);
        if (qword_101934970 != -1) {
          dispatch_once(&qword_101934970, &stru_101883130);
        }
        uint64_t v6 = *(void *)(a1 + 24);
        *(_DWORD *)__int32 v132 = 138543362;
        *(void *)&v132[4] = v6;
        _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934978,  0LL,  "Client '%{public}@' paused, not starting location",  v132,  12);
        uint64_t v8 = (char *)v7;
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CLLocationSubscription::startLocation_nl()", "%s\n", v7);
        if (v8 != __p) {
          free(v8);
        }
      }

      return;
    }

    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101883130);
    }
    uint64_t v9 = (os_log_s *)qword_101934978;
    if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = *(void *)(a1 + 24);
      uint64_t v11 = sub_1000F0F58(a1);
      *(void *)std::stringbuf::string_type __p = 68289538LL;
      *(_WORD *)&__p[8] = 2082;
      *(void *)&__p[10] = "";
      *(_WORD *)&__p[18] = 2114;
      *(void *)&__p[20] = v10;
      __int16 v140 = 2050;
      *(void *)char v141 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:client authorized for location; starting shortly, Client:%{public, location:escape_"
        "only}@, DC:%{public}p}",
        __p,
        0x26u);
    }

    sub_100C6AD0C(a1, 16LL);
    if ([*(id *)(a1 + 176) objectForKeyedSubscript:@"kCLConnectionMessageDesiredAccuracyKey"]) {
      objc_msgSend( objc_msgSend(*(id *)(a1 + 176), "objectForKeyedSubscript:", @"kCLConnectionMessageDesiredAccuracyKey"),  "doubleValue");
    }
    else {
      double v12 = -1.0;
    }
    double v126 = v12;
    if ([*(id *)(a1 + 176) objectForKeyedSubscript:@"kCLConnectionMessageDistanceFilterKey"])
    {
      objc_msgSend( objc_msgSend(*(id *)(a1 + 176), "objectForKeyedSubscript:", @"kCLConnectionMessageDistanceFilterKey"),  "doubleValue");
      double v18 = v17;
    }

    else
    {
      double v18 = -1.0;
    }

    unsigned int v19 = objc_msgSend( objc_msgSend( *(id *)(a1 + 176),  "objectForKeyedSubscript:",  @"kCLConnectionMessageDynamicAccuracyReductionKey"),  "BOOLValue");
    unsigned int v20 = objc_msgSend( objc_msgSend( *(id *)(a1 + 176),  "objectForKeyedSubscript:",  @"kCLConnectionMessageAlteredAccessoryLocationsKey"),  "BOOLValue");
    if ([*(id *)(a1 + 176) objectForKeyedSubscript:@"kCLConnectionMessageActivityTypeKey"]) {
      unsigned int v21 = objc_msgSend( objc_msgSend( *(id *)(a1 + 176),  "objectForKeyedSubscript:",  @"kCLConnectionMessageActivityTypeKey"),  "intValue");
    }
    else {
      unsigned int v21 = 0;
    }
    if (v18 >= 0.0) {
      double v22 = v18;
    }
    else {
      double v22 = -1.0;
    }
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101883130);
    }
    uint64_t v23 = (os_log_s *)qword_101934978;
    if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v24 = sub_1000F0F58(a1);
      uint64_t v25 = *(void *)(a1 + 24);
      *(void *)std::stringbuf::string_type __p = 68291330LL;
      *(_WORD *)&__p[8] = 2082;
      *(void *)&__p[10] = "";
      *(_WORD *)&__p[18] = 2050;
      *(void *)&__p[20] = a1;
      __int16 v140 = 2050;
      *(void *)char v141 = v24;
      *(_WORD *)&v141[8] = 2114;
      *(void *)&v141[10] = v25;
      *(_WORD *)&v141[18] = 2050;
      double v142 = v126;
      __int16 v143 = 2050;
      double v144 = v22;
      __int16 v145 = 1026;
      int v146 = 0;
      __int16 v147 = 1026;
      unsigned int v148 = v19;
      __int16 v149 = 1026;
      unsigned int v150 = v20;
      __int16 v151 = 1026;
      unsigned int v152 = v21;
      _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:LocationSubcription #pwrlog authorized client subscribing, this:%{public}p, D C:%{public}p, ClientKeyPath:%{public, location:escape_only}@, DesiredAccuracy:%{public}f, Di stanceFilter:%{public}f, OperatingMode:%{public}d, DynamicAccuracyReductionEnabled:%{public}d, A llowsAlteredAccessoryLocations:%{public}d, ActivityType:%{public}d}",  __p,  0x5Cu);
    }

    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883150);
    }
    char v26 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v27 = *(void *)(a1 + 24);
      *(_DWORD *)std::stringbuf::string_type __p = 138543618;
      *(void *)&__p[4] = v27;
      *(_WORD *)&_BYTE __p[12] = 2050;
      *(double *)&__p[14] = v126;
      _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEFAULT,  "@ClxClient, register, %{public}@, accuracy, %{public}.1lf",  __p,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101883150);
      }
      uint64_t v98 = *(void *)(a1 + 24);
      *(_DWORD *)__int32 v132 = 138543618;
      *(void *)&v132[4] = v98;
      *(_WORD *)&v132[12] = 2050;
      *(double *)&v132[14] = v126;
      _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "@ClxClient, register, %{public}@, accuracy, %{public}.1lf",  v132,  22);
      unsigned int v100 = (char *)v99;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLLocationSubscription::startLocation_nl()", "%s\n", v99);
      if (v100 != __p) {
        free(v100);
      }
    }

    double v28 = v126;
    if (v126 == 2147483640.0)
    {
      *(_DWORD *)(a1 + 200) = -1;
    }

    else
    {
      *(_DWORD *)(a1 + 200) = -1;
      if (v28 != 2147483640.0)
      {
        if (v28 < 100.0)
        {
          char v31 = 0;
          uint64_t v32 = 0LL;
          goto LABEL_87;
        }

        if (v28 < 1000.0)
        {
          char v31 = 0;
          int v39 = 1;
          uint64_t v32 = 1LL;
          goto LABEL_88;
        }

        if (v28 < 6378135.0)
        {
          char v31 = 0;
          uint64_t v32 = 2LL;
          goto LABEL_87;
        }

        if (v28 < 6383135.0)
        {
          uint64_t v32 = v28 == 6380001.0;
          char v31 = 1;
          goto LABEL_87;
        }

void sub_100DB5EA4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, std::__shared_weak_count *a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,void *__p,std::__shared_weak_count *a54,int a55,__int16 a56,char a57,char a58)
{
  if (a18) {
    std::__shared_weak_count::__release_weak(a18);
  }
  if (a54) {
    std::__shared_weak_count::__release_weak(a54);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DB5EEC(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 120) |= a2;
  objc_opt_class(&OBJC_CLASS___RBSAssertion);
  if (v3)
  {
    uint64_t v4 = *(void *)(a1 + 112);
    if (*(_DWORD *)(a1 + 120) && *(_BYTE *)(a1 + 89))
    {
      uint64_t v5 = *(void *)(a1 + 112);
      if (*(_BYTE *)(a1 + 90))
      {
        int v6 = sub_100C6ACEC(a1);
        uint64_t v5 = *(void *)(a1 + 112);
        if (v6)
        {
          if (v5) {
            goto LABEL_22;
          }
          if (qword_101934980 != -1) {
            dispatch_once(&qword_101934980, &stru_101883170);
          }
          uint64_t v7 = (os_log_s *)qword_101934988;
          if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
          {
            int v8 = *(_DWORD *)(a1 + 44);
            uint64_t v9 = *(void *)(a1 + 24);
            *(_DWORD *)std::stringbuf::string_type buf = 68289538;
            int v29 = 0;
            __int16 v30 = 2082;
            char v31 = "";
            __int16 v32 = 1026;
            *(_DWORD *)int v33 = v8;
            *(_WORD *)&v33[4] = 2114;
            *(void *)&v33[6] = v9;
            _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:initializing process assertion to support background location for client, pid :%{public}u, Client:%{public, location:escape_only}@}",  buf,  0x22u);
          }

          uint64_t v36 = +[RBSDomainAttribute attributeWithDomain:name:]( &OBJC_CLASS___RBSDomainAttribute,  "attributeWithDomain:name:",  @"com.apple.locationd",  @"Location");
          id v10 = objc_msgSend( [RBSAssertion alloc],  "initWithExplanation:target:attributes:",  @"Location subscription",  +[RBSTarget targetWithPid:](RBSTarget, "targetWithPid:", *(unsigned int *)(a1 + 44)),  +[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v36, 1));
          *(void *)(a1 + 112) = v10;
          uint64_t v27 = 0LL;
          if (([v10 acquireWithError:&v27] & 1) == 0)
          {
            if (qword_101934980 != -1) {
              dispatch_once(&qword_101934980, &stru_101883170);
            }
            uint64_t v11 = (os_log_s *)qword_101934988;
            if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_FAULT))
            {
              int v12 = *(_DWORD *)(a1 + 44);
              uint64_t v13 = *(void *)(a1 + 24);
              *(_DWORD *)std::stringbuf::string_type buf = 68289794;
              int v29 = 0;
              __int16 v30 = 2082;
              char v31 = "";
              __int16 v32 = 1026;
              *(_DWORD *)int v33 = v12;
              *(_WORD *)&v33[4] = 2114;
              *(void *)&v33[6] = v13;
              __int16 v34 = 2114;
              uint64_t v35 = v27;
              _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Couldn't initialize process assertion for client, pid:%{public}u, Client :%{public, location:escape_only}@, error:%{public, location:escape_only}@}",  buf,  0x2Cu);
              if (qword_101934980 != -1) {
                dispatch_once(&qword_101934980, &stru_101883170);
              }
            }

            uint64_t v14 = (os_log_s *)qword_101934988;
            if (os_signpost_enabled((os_log_t)qword_101934988))
            {
              int v15 = *(_DWORD *)(a1 + 44);
              uint64_t v16 = *(void *)(a1 + 24);
              *(_DWORD *)std::stringbuf::string_type buf = 68289794;
              int v29 = 0;
              __int16 v30 = 2082;
              char v31 = "";
              __int16 v32 = 1026;
              *(_DWORD *)int v33 = v15;
              *(_WORD *)&v33[4] = 2114;
              *(void *)&v33[6] = v16;
              __int16 v34 = 2114;
              uint64_t v35 = v27;
              _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v14,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Couldn't initialize process assertion for client",  "{msg%{public}.0s:Couldn't initialize process assertion for client, pid:%{public}u, Client :%{public, location:escape_only}@, error:%{public, location:escape_only}@}",  buf,  0x2Cu);
            }
          }

          uint64_t v5 = *(void *)(a1 + 112);
        }
      }
    }

    else
    {
      uint64_t v5 = *(void *)(a1 + 112);
    }

    if (!v5) {
      goto LABEL_37;
    }
LABEL_22:
    if (*(_DWORD *)(a1 + 120) == 3)
    {
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101883170);
      }
      double v17 = (os_log_s *)qword_101934988;
      if (!os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG)) {
        goto LABEL_37;
      }
      int v18 = *(_DWORD *)(a1 + 44);
      uint64_t v19 = *(void *)(a1 + 24);
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v29 = 0;
      __int16 v30 = 2082;
      char v31 = "";
      __int16 v32 = 1026;
      *(_DWORD *)int v33 = v18;
      *(_WORD *)&v33[4] = 2114;
      *(void *)&v33[6] = v19;
      unsigned int v20 = "{msg%{public}.0s:Client is performing batch location, allowing idle sleep., pid:%{public}u, Cl"
            "ient:%{public, location:escape_only}@}";
      goto LABEL_36;
    }

    uint64_t v21 = qword_101934980;
    if ((*(_DWORD *)(a1 + 120) & 3) == 2)
    {
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101883170);
      }
      double v22 = (os_log_s *)qword_101934988;
      if (!os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_34;
      }
      uint64_t v23 = *(void *)(a1 + 24);
      int v24 = *(_DWORD *)(a1 + 44);
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v29 = 0;
      __int16 v30 = 2082;
      char v31 = "";
      __int16 v32 = 2114;
      *(void *)int v33 = v23;
      *(_WORD *)&v33[8] = 1026;
      *(_DWORD *)&v33[10] = v24;
      _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#Warning Client is performing batch without location., Client:%{public, location:es cape_only}@, pid:%{public}u}",  buf,  0x22u);
      uint64_t v21 = qword_101934980;
    }

    if (v21 != -1) {
      dispatch_once(&qword_101934980, &stru_101883170);
    }
LABEL_34:
    double v17 = (os_log_s *)qword_101934988;
    if (!os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG)) {
      goto LABEL_37;
    }
    int v25 = *(_DWORD *)(a1 + 44);
    uint64_t v26 = *(void *)(a1 + 24);
    *(_DWORD *)std::stringbuf::string_type buf = 68289538;
    int v29 = 0;
    __int16 v30 = 2082;
    char v31 = "";
    __int16 v32 = 1026;
    *(_DWORD *)int v33 = v25;
    *(_WORD *)&v33[4] = 2114;
    *(void *)&v33[6] = v26;
    unsigned int v20 = "{msg%{public}.0s:Client is not performing batch location, preventing task suspend., pid:%{public}u"
          ", Client:%{public, location:escape_only}@}";
LABEL_36:
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEBUG, v20, buf, 0x22u);
LABEL_37:
    if ((v4 != 0) != (*(void *)(a1 + 112) != 0LL)) {
      sub_100C6ACFC(a1);
    }
  }

void sub_100DB6450(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 236);
  sub_1010DDBC0(__p, "kCLConnectionMessageLocation");
  int v3 = sub_100C6ACAC(a1);
  if ((v93[9] & 0x80000000) != 0) {
    operator delete(*(void **)__p);
  }
  unsigned int v4 = sub_100C6ADAC(a1, 4);
  if ((v3 & v4 & 1) == 0)
  {
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101883130);
    }
    uint64_t v11 = (os_log_s *)qword_101934978;
    if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v12 = *(void *)(a1 + 24);
      *(_DWORD *)std::stringbuf::string_type __p = 138412802;
      *(void *)&__p[4] = v12;
      __int16 v92 = 1024;
      *(_DWORD *)int v93 = v3;
      *(_WORD *)&v93[4] = 1024;
      *(_DWORD *)&v93[6] = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "PAUSE: '%@' not a location client (%d), or not authorized (%d).",  __p,  0x18u);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_18;
    }
    bzero(__p, 0x65CuLL);
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101883130);
    }
    double v61 = *(double *)(a1 + 24);
    int v83 = 138412802;
    double v84 = v61;
    __int16 v85 = 1024;
    *(_DWORD *)int v86 = v3;
    *(_WORD *)&v86[4] = 1024;
    *(_DWORD *)&v86[6] = v4;
    _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934978,  2LL,  "PAUSE: '%@' not a location client (%d), or not authorized (%d).",  &v83,  24);
    id v10 = (char *)v62;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLLocationSubscription::checkPauseState()", "%s\n", v62);
    goto LABEL_96;
  }

  int v5 = *(_DWORD *)(a1 + 188);
  if (v5 == 1)
  {
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101883130);
    }
    int v6 = (os_log_s *)qword_101934978;
    if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v7 = *(void *)(a1 + 24);
      *(_DWORD *)std::stringbuf::string_type __p = 138412290;
      *(void *)&__p[4] = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "PAUSE: '%@' overridden to off.", __p, 0xCu);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_18;
    }
    bzero(__p, 0x65CuLL);
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101883130);
    }
    double v8 = *(double *)(a1 + 24);
    int v83 = 138412290;
    double v84 = v8;
    _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934978,  2LL,  "PAUSE: '%@' overridden to off.",  &v83,  12);
    id v10 = (char *)v9;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLLocationSubscription::checkPauseState()", "%s\n", v9);
LABEL_96:
    if (v10 != __p) {
      free(v10);
    }
LABEL_18:
    *(_BYTE *)(a1 + 236) = 0;
    goto LABEL_19;
  }

  if (v5 != 2)
  {
    int v18 = *(_DWORD *)(a1 + 184);
    if (v18 <= 4 && (v5 != 3 || v18 != 2))
    {
      if (qword_101934970 != -1) {
        dispatch_once(&qword_101934970, &stru_101883130);
      }
      __int16 v41 = (os_log_s *)qword_101934978;
      if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v42 = *(void *)(a1 + 24);
        *(_DWORD *)std::stringbuf::string_type __p = 138412290;
        *(void *)&__p[4] = v42;
        _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_DEBUG,  "PAUSE: '%@' not allowed to pause.",  __p,  0xCu);
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_18;
      }
      bzero(__p, 0x65CuLL);
      if (qword_101934970 != -1) {
        dispatch_once(&qword_101934970, &stru_101883130);
      }
      double v43 = *(double *)(a1 + 24);
      int v83 = 138412290;
      double v84 = v43;
      _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934978,  2LL,  "PAUSE: '%@' not allowed to pause.",  &v83,  12);
      id v10 = (char *)v44;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLLocationSubscription::checkPauseState()", "%s\n", v44);
      goto LABEL_96;
    }
  }

  if (*(double *)(a1 + 224) == -1.0)
  {
    *(_BYTE *)(a1 + 236) = 0;
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101883130);
    }
    uint64_t v19 = (os_log_s *)qword_101934978;
    if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v20 = *(void *)(a1 + 24);
      uint64_t v21 = *(void *)(a1 + 224);
      *(_DWORD *)std::stringbuf::string_type __p = 138412546;
      *(void *)&__p[4] = v20;
      __int16 v92 = 2048;
      *(void *)int v93 = v21;
      _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEBUG,  "PAUSE: '%@' not backgrounded right now (%.1f).",  __p,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_101934970 != -1) {
        dispatch_once(&qword_101934970, &stru_101883130);
      }
      double v22 = *(double *)(a1 + 24);
      uint64_t v23 = *(void *)(a1 + 224);
      int v83 = 138412546;
      double v84 = v22;
      __int16 v85 = 2048;
      *(void *)int v86 = v23;
      _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934978,  2LL,  "PAUSE: '%@' not backgrounded right now (%.1f).",  &v83,  22);
      int v25 = (char *)v24;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLLocationSubscription::checkPauseState()", "%s\n", v24);
LABEL_61:
      if (v25 != __p) {
        free(v25);
      }
    }
  }

  else if (v2 || !*(_BYTE *)(a1 + 240) || sub_100295E8C() <= *(double *)(a1 + 224) + *(double *)(a1 + 544))
  {
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101883130);
    }
    double v28 = (os_log_s *)qword_101934978;
    if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v29 = *(void *)(a1 + 24);
      int v30 = *(unsigned __int8 *)(a1 + 240);
      double v31 = sub_100295E8C();
      uint64_t v32 = *(void *)(a1 + 224);
      uint64_t v33 = *(void *)(a1 + 544);
      *(_DWORD *)std::stringbuf::string_type __p = 138413570;
      *(void *)&__p[4] = v29;
      __int16 v92 = 1024;
      *(_DWORD *)int v93 = v2;
      *(_WORD *)&v93[4] = 1024;
      *(_DWORD *)&v93[6] = v30;
      *(_WORD *)int v94 = 2048;
      *(double *)&v94[2] = v31;
      *(_WORD *)&v94[10] = 2048;
      uint64_t v95 = v32;
      __int16 v96 = 2048;
      uint64_t v97 = v33;
      _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEBUG,  "PAUSE: '%@' not changing state wasPaused: %d lastState: %d now clock: %f timestamp: %f thresh: %f.",  __p,  0x36u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_101934970 != -1) {
        dispatch_once(&qword_101934970, &stru_101883130);
      }
      uint64_t v34 = qword_101934978;
      double v35 = *(double *)(a1 + 24);
      int v36 = *(unsigned __int8 *)(a1 + 240);
      double v37 = sub_100295E8C();
      uint64_t v38 = *(void *)(a1 + 224);
      uint64_t v39 = *(void *)(a1 + 544);
      int v83 = 138413570;
      double v84 = v35;
      __int16 v85 = 1024;
      *(_DWORD *)int v86 = v2;
      *(_WORD *)&v86[4] = 1024;
      *(_DWORD *)&v86[6] = v36;
      *(_WORD *)float v87 = 2048;
      *(double *)&v87[2] = v37;
      *(_WORD *)&v87[10] = 2048;
      uint64_t v88 = v38;
      __int16 v89 = 2048;
      uint64_t v90 = v39;
      _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v34,  2LL,  "PAUSE: '%@' not changing state wasPaused: %d lastState: %d now clock: %f timestamp: %f thresh: %f.",  &v83,  54);
      int v25 = (char *)v40;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLLocationSubscription::checkPauseState()", "%s\n", v40);
      goto LABEL_61;
    }
  }

  else
  {
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101883130);
    }
    uint64_t v45 = (os_log_s *)qword_101934978;
    if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
    {
      double v46 = sub_100295E8C();
      uint64_t v47 = *(void *)(a1 + 224);
      uint64_t v48 = *(void *)(a1 + 544);
      *(_DWORD *)std::stringbuf::string_type __p = 134218496;
      *(double *)&__p[4] = v46;
      __int16 v92 = 2048;
      *(void *)int v93 = v47;
      *(_WORD *)&v93[8] = 2048;
      *(void *)int v94 = v48;
      _os_log_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_DEBUG,  "PAUSE: now clock %f timestamp %f thresh %f.",  __p,  0x20u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_101934970 != -1) {
        dispatch_once(&qword_101934970, &stru_101883130);
      }
      uint64_t v69 = qword_101934978;
      double v70 = sub_100295E8C();
      uint64_t v71 = *(void *)(a1 + 224);
      uint64_t v72 = *(void *)(a1 + 544);
      int v83 = 134218496;
      double v84 = v70;
      __int16 v85 = 2048;
      *(void *)int v86 = v71;
      *(_WORD *)&v86[8] = 2048;
      *(void *)float v87 = v72;
      LODWORD(v82) = 32;
      _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v69,  2LL,  "PAUSE: now clock %f timestamp %f thresh %f.",  COERCE_DOUBLE(&v83),  v82);
      int v74 = (char *)v73;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLLocationSubscription::checkPauseState()", "%s\n", v73);
      if (v74 != __p) {
        free(v74);
      }
    }

    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101883130);
    }
    __int16 v49 = (os_log_s *)qword_101934978;
    if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v50 = *(void *)(a1 + 24);
      int v51 = *(_DWORD *)(a1 + 232);
      int v52 = *(unsigned __int8 *)(a1 + 238);
      int v53 = *(unsigned __int8 *)(a1 + 239);
      int v54 = *(unsigned __int8 *)(a1 + 237);
      *(_DWORD *)std::stringbuf::string_type __p = 138413314;
      *(void *)&__p[4] = v50;
      __int16 v92 = 1024;
      *(_DWORD *)int v93 = v51;
      *(_WORD *)&v93[4] = 1024;
      *(_DWORD *)&v93[6] = v52;
      *(_WORD *)int v94 = 1024;
      *(_DWORD *)&v94[2] = v53;
      *(_WORD *)&v94[6] = 1024;
      *(_DWORD *)&v94[8] = v54;
      _os_log_impl( (void *)&_mh_execute_header,  v49,  OS_LOG_TYPE_DEBUG,  "PAUSE: client: '%@' type: %d states: veh %d fit %d oth %d",  __p,  0x24u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_101934970 != -1) {
        dispatch_once(&qword_101934970, &stru_101883130);
      }
      double v75 = *(double *)(a1 + 24);
      int v76 = *(_DWORD *)(a1 + 232);
      int v77 = *(unsigned __int8 *)(a1 + 238);
      int v78 = *(unsigned __int8 *)(a1 + 239);
      int v79 = *(unsigned __int8 *)(a1 + 237);
      int v83 = 138413314;
      double v84 = v75;
      __int16 v85 = 1024;
      *(_DWORD *)int v86 = v76;
      *(_WORD *)&v86[4] = 1024;
      *(_DWORD *)&v86[6] = v77;
      *(_WORD *)float v87 = 1024;
      *(_DWORD *)&v87[2] = v78;
      *(_WORD *)&v87[6] = 1024;
      *(_DWORD *)&v87[8] = v79;
      LODWORD(v82) = 36;
      _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934978,  2LL,  "PAUSE: client: '%@' type: %d states: veh %d fit %d oth %d",  &v83,  *(void *)&v82);
      int v81 = (char *)v80;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLLocationSubscription::checkPauseState()", "%s\n", v80);
      if (v81 != __p) {
        free(v81);
      }
    }

    int v55 = *(_DWORD *)(a1 + 232);
    if (v55 == 3)
    {
      char v56 = *(_BYTE *)(a1 + 239);
    }

    else if (v55 == 2)
    {
      char v56 = *(_BYTE *)(a1 + 238);
    }

    else
    {
      char v56 = *(_BYTE *)(a1 + 237);
    }

    *(_BYTE *)(a1 + 236) = v56;
  }

void sub_100DB7434( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20, int a21, __int16 a22, char a23, char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DB7458(uint64_t a1, int a2)
{
  if (qword_101934970 != -1) {
    dispatch_once(&qword_101934970, &stru_101883130);
  }
  unsigned int v4 = (os_log_s *)qword_101934978;
  if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 24);
    int v6 = *(unsigned __int8 *)(a1 + 56);
    *(_DWORD *)std::stringbuf::string_type buf = 138412802;
    uint64_t v17 = v5;
    __int16 v18 = 1024;
    int v19 = a2;
    __int16 v20 = 1024;
    int v21 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Background indicator enabled for %@ is now %d (was %d)",  buf,  0x18u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101883130);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    int v8 = *(unsigned __int8 *)(a1 + 56);
    int v10 = 138412802;
    uint64_t v11 = v7;
    __int16 v12 = 1024;
    int v13 = a2;
    __int16 v14 = 1024;
    int v15 = v8;
    uint64_t v9 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934978,  0LL,  "Background indicator enabled for %@ is now %d (was %d)",  &v10,  24);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationSubscription::setBackgroundIndicatorEnabled(BOOL)",  "%s\n",  v9);
  }

  if (*(unsigned __int8 *)(a1 + 56) != a2)
  {
    *(_BYTE *)(a1 + 56) = a2;
    sub_100DB7654(a1);
  }

void sub_100DB7654(uint64_t a1)
{
  int v2 = *(void **)(a1 + 96);
  if (v2)
  {
    if (*(_BYTE *)(a1 + 56))
    {
      if (*(_BYTE *)(a1 + 91))
      {
LABEL_4:
        uint64_t v3 = 1LL;
LABEL_10:
        [v2 setDesiredEnablementState:v3];
        goto LABEL_11;
      }

      if (([*(id *)(a1 + 16) isAuthorizedForServiceType:13] & 1) == 0
        && [*(id *)(a1 + 16) inUseLevelIsAtLeast:4])
      {
        int v2 = *(void **)(a1 + 96);
        goto LABEL_4;
      }

      int v2 = *(void **)(a1 + 96);
    }

    uint64_t v3 = 0LL;
    goto LABEL_10;
  }

void sub_100DB7754( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100DB7790(uint64_t result, int a2)
{
  if ((*(_BYTE *)(result + 241) != 0) != a2)
  {
    uint64_t v2 = result;
    *(_BYTE *)(result + 241) = a2;
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101883130);
    }
    uint64_t v3 = (os_log_s *)qword_101934978;
    if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v4 = *(void *)(v2 + 24);
      int v5 = *(unsigned __int8 *)(v2 + 241);
      v6[0] = 68289538;
      v6[1] = 0;
      __int16 v7 = 2082;
      int v8 = "";
      __int16 v9 = 2114;
      uint64_t v10 = v4;
      __int16 v11 = 1026;
      int v12 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:BATCH: setBatching, Client:%{public, location:escape_only}@, isBatching:%{public}d}",  (uint8_t *)v6,  0x22u);
    }

    return sub_100C6ACFC(v2);
  }

  return result;
}

void sub_100DB78A8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v4 = *(_BYTE *)(a1 + 241);
  uint64_t v5 = *(void *)(a1 + 112);
  sub_1010DDBC0(&__p, "kCLConnectionMessageLocation");
  char v6 = sub_100C6ACAC(a1);
  char v7 = v6;
  if ((v14 & 0x80000000) == 0)
  {
    if ((v6 & 1) != 0) {
      goto LABEL_4;
    }
LABEL_9:
    char v11 = 0;
    char v12 = 0;
    goto LABEL_10;
  }

  operator delete(__p);
  if ((v7 & 1) == 0) {
    goto LABEL_9;
  }
LABEL_4:
  objc_msgSend( objc_msgSend(*(id *)(a1 + 176), "objectForKeyedSubscript:", @"kCLConnectionMessageDesiredAccuracyKey"),  "doubleValue");
  double v9 = v8;
  objc_msgSend( objc_msgSend(*(id *)(a1 + 176), "objectForKeyedSubscript:", @"kCLConnectionMessageDistanceFilterKey"),  "doubleValue");
  if (fabs(v9 + -2147483650.0) >= 2.22044605e-16
    && fabs(v9 + -2147483650.0) >= 2.22044605e-16
    && fabs(v9 + -2147483640.0) >= 2.22044605e-16)
  {
    char v12 = 0;
    char v11 = 1;
    goto LABEL_11;
  }

  char v11 = 0;
  char v12 = 1;
LABEL_10:
  double v9 = INFINITY;
  uint64_t v10 = 0x7FF0000000000000LL;
LABEL_11:
  *(_BYTE *)a2 = v11;
  *(double *)(a2 + 8) = v9;
  *(void *)(a2 + 16) = v10;
  *(_DWORD *)(a2 + sub_100BDC958(v1 + 24) = 0;
  *(_BYTE *)(a2 + 28) = v4;
  *(_BYTE *)(a2 + 29) = v12;
  *(_BYTE *)(a2 + 30) = v5 != 0;
  *(_BYTE *)(a2 + 32) = 1;
}

void sub_100DB7A14( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

id sub_100DB7A30(uint64_t a1)
{
  return objc_msgSend( objc_msgSend( *(id *)(a1 + 176),  "objectForKeyedSubscript:",  @"kCLConnectionMessageAlteredAccessoryLocationsKey"),  "BOOLValue");
}

uint64_t sub_100DB7A50(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 72);
  if (!result)
  {
    id v3 =  objc_msgSend( objc_msgSend(*(id *)(a1 + 8), "vendor"),  "proxyForService:",  @"CLStreamingAwareLocationProvider");
    *(void *)(a1 + 72) = v3;
    objc_msgSend(v3, "registerDelegate:inSilo:", *(void *)(a1 + 48), objc_msgSend(*(id *)(a1 + 8), "silo"));
    return *(void *)(a1 + 72);
  }

  return result;
}

void sub_100DB7ABC(id **a1, id *a2)
{
  id v3 = *a1;
  *a1 = a2;
  if (v3)
  {
    char v4 = sub_100DAF688(v3);
    operator delete(v4);
  }

BOOL sub_100DB7AE8(uint64_t a1)
{
  signed int v2 = [*(id *)(a1 + 16) inUseLevel];
  if (qword_101934970 != -1) {
    dispatch_once(&qword_101934970, &stru_101883130);
  }
  id v3 = (os_log_s *)qword_101934978;
  if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v4 = *(void *)(a1 + 24);
    int v5 = *(_DWORD *)(a1 + 44);
    v7[0] = 68289794;
    v7[1] = 0;
    __int16 v8 = 2082;
    double v9 = "";
    __int16 v10 = 2114;
    uint64_t v11 = v4;
    __int16 v12 = 1026;
    int v13 = v5;
    __int16 v14 = 1026;
    BOOL v15 = v2 < 5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:canBePaused(), Client:%{public, location:escape_only}@, pid:%{public}d, flag:%{public}hhd}",  (uint8_t *)v7,  0x28u);
  }

  return v2 < 5;
}

void sub_100DB7C0C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 160);
  if (v2) {
    goto LABEL_7;
  }
  sub_100C07BBC((uint64_t)sub_100DBAB5C, a1, *(void **)(a1 + 8), &v11);
  uint64_t v2 = v11;
  uint64_t v11 = 0LL;
  uint64_t v3 = *(void *)(a1 + 160);
  *(void *)(a1 + 160) = v2;
  if (v3)
  {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
    uint64_t v4 = v11;
    uint64_t v11 = 0LL;
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
    }
    uint64_t v2 = *(void *)(a1 + 160);
  }

  if (v2)
  {
LABEL_7:
    objc_msgSend(*(id *)(v2 + 16), "register:forNotification:registrationInfo:", *(void *)(v2 + 8), 0, 0, v11);
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101883130);
    }
    int v5 = (os_log_s *)qword_101934978;
    if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v6 = *(void *)(a1 + 24);
      uint64_t v11 = 68289282LL;
      __int16 v12 = 2082;
      int v13 = "";
      __int16 v14 = 2114;
      uint64_t v15 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:Client registered for autopause notifications, Client:%{public, location:escape_only}@}",  (uint8_t *)&v11,  0x1Cu);
    }
  }

  else
  {
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101883130);
    }
    char v7 = (os_log_s *)qword_101934978;
    if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_FAULT))
    {
      uint64_t v8 = *(void *)(a1 + 24);
      uint64_t v11 = 68289282LL;
      __int16 v12 = 2082;
      int v13 = "";
      __int16 v14 = 2114;
      uint64_t v15 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:failed to become client of CLAutopauseProvider, Client:%{public, location:escape_only}@}",  (uint8_t *)&v11,  0x1Cu);
      if (qword_101934970 != -1) {
        dispatch_once(&qword_101934970, &stru_101883130);
      }
    }

    double v9 = (os_log_s *)qword_101934978;
    if (os_signpost_enabled((os_log_t)qword_101934978))
    {
      uint64_t v10 = *(void *)(a1 + 24);
      uint64_t v11 = 68289282LL;
      __int16 v12 = 2082;
      int v13 = "";
      __int16 v14 = 2114;
      uint64_t v15 = v10;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v9,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "failed to become client of CLAutopauseProvider",  "{msg%{public}.0s:failed to become client of CLAutopauseProvider, Client:%{public, location:escape_only}@}",  (uint8_t *)&v11,  0x1Cu);
    }
  }

void sub_100DB7EA8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 160);
  if (v2)
  {
    [*(id *)(v2 + 16) unregister:*(void *)(v2 + 8) forNotification:0];
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101883130);
    }
    uint64_t v3 = qword_101934978;
    if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v4 = *(void *)(a1 + 24);
      int v10 = 68289282;
      int v11 = 0;
      __int16 v12 = 2082;
      int v13 = "";
      __int16 v14 = 2114;
      uint64_t v15 = v4;
      int v5 = "{msg%{public}.0s:PAUSE: Client unregistered for autopause notifications, Client:%{public, locatio"
           "n:escape_only}@}";
      uint64_t v6 = (os_log_s *)v3;
      os_log_type_t v7 = OS_LOG_TYPE_DEBUG;
LABEL_10:
      _os_log_impl((void *)&_mh_execute_header, v6, v7, v5, (uint8_t *)&v10, 0x1Cu);
    }
  }

  else
  {
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101883130);
    }
    uint64_t v8 = qword_101934978;
    if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = *(void *)(a1 + 24);
      int v10 = 68289282;
      int v11 = 0;
      __int16 v12 = 2082;
      int v13 = "";
      __int16 v14 = 2114;
      uint64_t v15 = v9;
      int v5 = "{msg%{public}.0s:#Warning PAUSE: Unregistering for autopause notification when client does not exist,"
           " Client:%{public, location:escape_only}@}";
      uint64_t v6 = (os_log_s *)v8;
      os_log_type_t v7 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }

  *(_BYTE *)(a1 + 240) = 0;
}

void sub_100DB803C(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 120) &= ~a2;
  objc_opt_class(&OBJC_CLASS___RBSAssertion);
  if (!v3) {
    return;
  }
  if (!*(void *)(a1 + 112)) {
    goto LABEL_18;
  }
  if (*(_DWORD *)(a1 + 120) == 3)
  {
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101883170);
    }
    uint64_t v4 = (os_log_s *)qword_101934988;
    if (!os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG)) {
      goto LABEL_20;
    }
    uint64_t v5 = *(void *)(a1 + 24);
    int v6 = *(_DWORD *)(a1 + 44);
    *(_DWORD *)std::stringbuf::string_type buf = 68289538;
    int v23 = 0;
    __int16 v24 = 2082;
    int v25 = "";
    __int16 v26 = 2114;
    uint64_t v27 = v5;
    __int16 v28 = 1026;
    int v29 = v6;
    os_log_type_t v7 = "{msg%{public}.0s:Client is performing batch location, allowing idle sleep., Client:%{public, locati"
         "on:escape_only}@, pid:%{public}u}";
    goto LABEL_17;
  }

  if ((*(_DWORD *)(a1 + 120) & 3) != 2) {
    goto LABEL_13;
  }
  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_101883170);
  }
  uint64_t v8 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v9 = *(void *)(a1 + 24);
    int v10 = *(_DWORD *)(a1 + 44);
    *(_DWORD *)std::stringbuf::string_type buf = 68289538;
    int v23 = 0;
    __int16 v24 = 2082;
    int v25 = "";
    __int16 v26 = 2114;
    uint64_t v27 = v9;
    __int16 v28 = 1026;
    int v29 = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#Warning Client is performing batch without location., Client:%{public, location:esca pe_only}@, pid:%{public}u}",  buf,  0x22u);
LABEL_13:
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101883170);
    }
  }

  uint64_t v4 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v11 = *(void *)(a1 + 24);
    int v12 = *(_DWORD *)(a1 + 44);
    *(_DWORD *)std::stringbuf::string_type buf = 68289538;
    int v23 = 0;
    __int16 v24 = 2082;
    int v25 = "";
    __int16 v26 = 2114;
    uint64_t v27 = v11;
    __int16 v28 = 1026;
    int v29 = v12;
    os_log_type_t v7 = "{msg%{public}.0s:Client is not performing batch location, preventing task suspend., Client:%{public"
         ", location:escape_only}@, pid:%{public}u}";
LABEL_17:
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, v7, buf, 0x22u);
LABEL_18:
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101883170);
    }
  }

void sub_100DB83C0(uint64_t a1, double a2, double a3)
{
  if (*(_BYTE *)(a1 + 241) || *(void *)(a1 + 280) || *(void *)(a1 + 288))
  {
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101883130);
    }
    int v6 = (os_log_s *)qword_101934978;
    if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:BATCH: startBatching called but we're already batching}",  buf,  0x12u);
      if (qword_101934970 != -1) {
        dispatch_once(&qword_101934970, &stru_101883130);
      }
    }

    os_log_type_t v7 = (os_log_s *)qword_101934978;
    if (os_signpost_enabled((os_log_t)qword_101934978))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v7,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "BATCH: startBatching called but we're already batching",  "{msg%{public}.0s:BATCH: startBatching called but we're already batching}",  buf,  0x12u);
    }

    sub_100DB8A48(a1);
    sub_100DB8CA4(a1, 15LL);
  }

  if (qword_101934970 != -1) {
    dispatch_once(&qword_101934970, &stru_101883130);
  }
  uint64_t v8 = (os_log_s *)qword_101934978;
  if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v9 = *(void *)(a1 + 24);
    *(_DWORD *)std::stringbuf::string_type buf = 68289282;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    __int16 v31 = 2114;
    uint64_t v32 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:BATCH: starting client, Client:%{public, location:escape_only}@}",  buf,  0x1Cu);
  }

  if (a2 == 1.79769313e308) {
    goto LABEL_23;
  }
  if (qword_101934970 != -1) {
    dispatch_once(&qword_101934970, &stru_101883130);
  }
  int v10 = (os_log_s *)qword_101934978;
  if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 134217984;
    *(double *)&uint8_t buf[4] = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "BATCH: scheduling odometer alarm for %.1f",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101883130);
    }
    int v28 = 134217984;
    double v29 = a2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934978,  2LL,  "BATCH: scheduling odometer alarm for %.1f",  COERCE_DOUBLE(&v28));
    __int16 v24 = (char *)v23;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationSubscription::startBatching(CLTypeOdometer, CFAbsoluteTime)",  "%s\n",  v23);
    if (v24 != buf) {
      free(v24);
    }
  }

  uint64_t v11 = objc_alloc(&OBJC_CLASS___CLOdometerAlarm);
  uint64_t v12 = *(void *)(a1 + 8);
  v27[0] = _NSConcreteStackBlock;
  v27[1] = 3221225472LL;
  v27[2] = sub_100DB8F54;
  void v27[3] = &unk_101882F50;
  v27[4] = a1;
  *(double *)&v27[5] = a2;
  int v13 = -[CLOdometerAlarm initWithDistance:inUniverse:handler:]( v11,  "initWithDistance:inUniverse:handler:",  v12,  v27,  a2);
  *(void *)(a1 + 280) = v13;
  if (v13)
  {
LABEL_23:
    if (a3 != 1.79769313e308)
    {
      if (qword_101934970 != -1) {
        dispatch_once(&qword_101934970, &stru_101883130);
      }
      uint64_t v14 = (os_log_s *)qword_101934978;
      if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 134217984;
        *(double *)&uint8_t buf[4] = a3;
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "BATCH: scheduling timer for %.1f", buf, 0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934970 != -1) {
          dispatch_once(&qword_101934970, &stru_101883130);
        }
        int v28 = 134217984;
        double v29 = a3;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934978,  2LL,  "BATCH: scheduling timer for %.1f",  COERCE_DOUBLE(&v28));
        __int16 v26 = (char *)v25;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationSubscription::startBatching(CLTypeOdometer, CFAbsoluteTime)",  "%s\n",  v25);
        if (v26 != buf) {
          free(v26);
        }
      }

      int v15 = +[NSString stringWithFormat:]( NSString,  "stringWithFormat:",  @"BatchAlarm.%@",  [*(id *)(a1 + 24) description]);
      uint64_t v16 = operator new(0x38uLL);
      sub_1010DDBC0(buf, (char *)-[NSString UTF8String](v15, "UTF8String"));
      sub_1006B5FBC(v16, buf, sub_100DB9478, a1, [*(id *)(a1 + 8) silo], 1, a3, 1.79769313e308, 1.0);
      sub_100DB9408((void *)(a1 + 288), (uint64_t)v16);
      if (SBYTE3(v32) < 0) {
        operator delete(*(void **)buf);
      }
    }

    sub_100DB5EEC(a1, 2);
    __asm { FMOV            V0.2D, #-1.0 }

    *(_OWORD *)std::stringbuf::string_type buf = _Q0;
    *(_WORD *)&uint8_t buf[16] = 0;
    uint64_t v32 = 0LL;
    uint64_t v22 = *(void *)sub_100DAFB74(a1);
    [*(id *)(v22 + 16) register:*(void *)(v22 + 8) forNotification:15 registrationInfo:sub_100419014(buf)];
    sub_100DB7790(a1, 1);
  }

  else
  {
    sub_100DB7790(a1, 1);
    sub_100DB8CA4(a1, 11LL);
  }

void sub_100DB8A08( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20, int a21, __int16 a22, char a23, char a24)
{
}

id sub_100DB8A48(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 241))
  {
LABEL_9:
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101883130);
    }
    goto LABEL_11;
  }

  if (qword_101934970 != -1) {
    dispatch_once(&qword_101934970, &stru_101883130);
  }
  uint64_t v2 = (os_log_s *)qword_101934978;
  if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_FAULT))
  {
    int v9 = 68289026;
    int v10 = 0;
    __int16 v11 = 2082;
    uint64_t v12 = "";
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:BATCH: stopBatching called but we're not batching}",  (uint8_t *)&v9,  0x12u);
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101883130);
    }
  }

  uint64_t v3 = (os_log_s *)qword_101934978;
  if (os_signpost_enabled((os_log_t)qword_101934978))
  {
    int v9 = 68289026;
    int v10 = 0;
    __int16 v11 = 2082;
    uint64_t v12 = "";
    _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v3,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "BATCH: stopBatching called but we're not batching",  "{msg%{public}.0s:BATCH: stopBatching called but we're not batching}",  (uint8_t *)&v9,  0x12u);
    goto LABEL_9;
  }

void sub_100DB8CA4(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(a1 + 241))
  {
    sub_100DB7790(a1, 0);
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101883130);
    }
    uint64_t v4 = (os_log_s *)qword_101934978;
    if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v5 = *(void *)(a1 + 24);
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v13 = 2082;
      uint64_t v14 = "";
      __int16 v15 = 1026;
      int v16 = a2;
      __int16 v17 = 2114;
      uint64_t v18 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:BATCH: Sending didFinishDeferredUpdatesWithError message to client, error:%{public} d, Client:%{public, location:escape_only}@}",  buf,  0x22u);
    }

    int v9 = @"kCLConnectionMessageErrorKey";
    int v10 = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", a2);
    *(void *)std::stringbuf::string_type buf = +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v10,  &v9,  1LL);
    sub_100DB9BEC(a1, buf);
  }

  else
  {
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101883130);
    }
    uint64_t v6 = (os_log_s *)qword_101934978;
    if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 67240192;
      *(_DWORD *)&uint8_t buf[4] = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "BATCH: Not batching but tried to finish with error %{public}d",  buf,  8u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934970 != -1) {
        dispatch_once(&qword_101934970, &stru_101883130);
      }
      v11[0] = 67240192;
      v11[1] = a2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934978,  17LL,  "BATCH: Not batching but tried to finish with error %{public}d",  v11,  8);
      uint64_t v8 = (uint8_t *)v7;
      sub_10029211C("Generic", 1LL, 0, 0LL, "void CLLocationSubscription::sendBatchDidFinish(int)", "%s\n", v7);
      if (v8 != buf) {
        free(v8);
      }
    }
  }

id sub_100DB8F54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a1 + 32);
  id v7 = [*(id *)(v6 + 8) silo];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  _DWORD v9[2] = sub_100DB8FD8;
  v9[3] = &unk_101882F30;
  v9[5] = a3;
  v9[6] = v6;
  _OWORD v9[4] = a2;
  v9[7] = *(void *)(a1 + 40);
  return [v7 async:v9];
}

void sub_100DB8FD8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  if (*(void *)(a1 + 32) == *(void *)(v2 + 280))
  {
    sub_100DB8A48(*(void *)(a1 + 48));
    if (*(void *)(a1 + 40))
    {
      if (qword_101934970 != -1) {
        dispatch_once(&qword_101934970, &stru_101883130);
      }
      __int16 v11 = (os_log_s *)qword_101934978;
      if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_FAULT))
      {
        id v12 = objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "description"), "UTF8String");
        uint64_t v13 = *(void *)(v2 + 24);
        *(_DWORD *)std::stringbuf::string_type buf = 136446466;
        *(void *)__int16 v26 = v12;
        *(_WORD *)&v26[8] = 2114;
        *(void *)&_BYTE v26[10] = v13;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_FAULT,  "BATCH: Odometer errored (%{public}s) for client (%{public}@)",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934970 != -1) {
          dispatch_once(&qword_101934970, &stru_101883130);
        }
        uint64_t v16 = qword_101934978;
        id v17 = objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "description"), "UTF8String");
        uint64_t v18 = *(void **)(v2 + 24);
        int v21 = 136446466;
        id v22 = v17;
        __int16 v23 = 2114;
        id v24 = v18;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v16,  17LL,  "BATCH: Odometer errored (%{public}s) for client (%{public}@)",  &v21,  22);
        __int16 v20 = (uint8_t *)v19;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLLocationSubscription::startBatching(CLTypeOdometer, CFAbsoluteTime)_block_invoke",  "%s\n",  v19);
        if (v20 != buf) {
          free(v20);
        }
      }

      sub_100DB8CA4(v2, (uint64_t)[*(id *)(a1 + 40) code]);
    }

    else
    {
      if (qword_101934970 != -1) {
        dispatch_once(&qword_101934970, &stru_101883130);
      }
      uint64_t v14 = (os_log_s *)qword_101934978;
      if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v15 = *(void *)(v2 + 24);
        *(_DWORD *)std::stringbuf::string_type buf = 68289282;
        *(_DWORD *)__int16 v26 = 0;
        *(_WORD *)&v26[4] = 2082;
        *(void *)&v26[6] = "";
        *(_WORD *)&v26[14] = 2114;
        *(void *)&v26[16] = v15;
        _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:BATCH: Odometer criterion met, waiting for location event to notify client, Client :%{public, location:escape_only}@}",  buf,  0x1Cu);
      }
    }
  }

  else
  {
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101883130);
    }
    uint64_t v3 = (os_log_s *)qword_101934978;
    if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v4 = *(void *)(a1 + 56);
      id v5 = objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "description"), "UTF8String");
      *(_DWORD *)std::stringbuf::string_type buf = 134218242;
      *(void *)__int16 v26 = v4;
      *(_WORD *)&v26[8] = 2080;
      *(void *)&_BYTE v26[10] = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "BATCH: Odometer fired (%.1f,%s) but no longer relevant to us",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934970 != -1) {
        dispatch_once(&qword_101934970, &stru_101883130);
      }
      uint64_t v6 = qword_101934978;
      id v7 = *(void **)(a1 + 56);
      id v8 = objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "description"), "UTF8String");
      int v21 = 134218242;
      id v22 = v7;
      __int16 v23 = 2080;
      id v24 = v8;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v6,  2LL,  "BATCH: Odometer fired (%.1f,%s) but no longer relevant to us",  COERCE_DOUBLE(&v21),  22);
      int v10 = (uint8_t *)v9;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationSubscription::startBatching(CLTypeOdometer, CFAbsoluteTime)_block_invoke",  "%s\n",  v9);
      if (v10 != buf) {
        free(v10);
      }
    }
  }

void sub_100DB9408(void *a1, uint64_t a2)
{
  uint64_t v3 = (std::__shared_weak_count *)a1[1];
  __int128 v4 = v7;
  *(void *)&__int128 v7 = *a1;
  *((void *)&v7 + 1) = v3;
  *(_OWORD *)a1 = v4;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      unint64_t v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }

void sub_100DB9478(uint64_t a1, uint64_t a2)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101883110);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v7 = 1;
    __int128 v4 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLLocationSubscription::onBatchTimer",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v4, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101883110);
    }
    id v5 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v9 = 0;
      __int16 v10 = 2082;
      __int16 v11 = "";
      __int16 v12 = 2082;
      uint64_t v13 = "activity";
      __int16 v14 = 2050;
      uint64_t v15 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLLocationSubscription::onBatchTimer, event:%{public, location:escape_only}s, thi s:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v7 = 0;
  }

  sub_100DBCBDC(a2, a1);
  if (v7) {
    os_activity_scope_leave(&state);
  }
}

void sub_100DB9628( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DB9648(uint64_t a1, uint64_t a2)
{
  if ((_DWORD)a2) {
    __int128 v4 = "didPause";
  }
  else {
    __int128 v4 = "willResume";
  }
  int v5 = *(_DWORD *)(a1 + 188);
  if (v5 == 2)
  {
    BOOL v8 = 1LL;
  }

  else
  {
    if (v5 == 1)
    {
      if (qword_101934970 != -1) {
        dispatch_once(&qword_101934970, &stru_101883130);
      }
      unint64_t v6 = (os_log_s *)qword_101934978;
      if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v7 = *(void *)(a1 + 24);
        *(_DWORD *)std::stringbuf::string_type buf = 68289538;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        *(_WORD *)&_BYTE buf[18] = 2082;
        *(void *)&buf[20] = v4;
        __int16 v47 = 2114;
        uint64_t v48 = v7;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:PAUSE: AutoPause is overridden to off, reject message to client, msg:%{public, lo cation:escape_only}s, Client:%{public, location:escape_only}@}",  buf,  0x26u);
      }

      return;
    }

    BOOL v8 = v5 == 3 && *(_DWORD *)(a1 + 184) == 2;
  }

  if (*(_BYTE *)(a1 + 192))
  {
    __int16 v10 = +[NSDate date](&OBJC_CLASS___NSDate, "date");
    __int16 v11 = -[NSCalendar components:fromDate:]( +[NSCalendar currentCalendar](&OBJC_CLASS___NSCalendar, "currentCalendar"),  "components:fromDate:",  252LL,  v10);
    if (sub_100292108())
    {
      uint64_t v35 = *(void *)(a1 + 24);
      id v34 = -[NSDateComponents hour](v11, "hour");
      id v19 = -[NSDateComponents minute](v11, "minute");
      id v20 = -[NSDateComponents second](v11, "second");
      id v21 = -[NSDateComponents month](v11, "month");
      id v22 = -[NSDateComponents day](v11, "day");
      id v23 = -[NSDateComponents year](v11, "year");
      -[NSDate timeIntervalSinceReferenceDate](v10, "timeIntervalSinceReferenceDate");
      int v25 = CFStringCreateWithFormat( kCFAllocatorDefault,  0LL,  @"locationd paused updates to '%@' at %ld:%ld:%ld %ld-%ld-%ld (%.2f). If you believe this was in error, file a radar with a screenshot and your locationd.log",  v35,  v34,  v19,  v20,  v21,  v22,  v23,  v24);
      sub_100A15640(@"Autopause", 0, v25);
      CFRelease(v25);
    }

    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101883130);
    }
    __int16 v12 = (os_log_s *)qword_101934978;
    if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v13 = *(void *)(a1 + 24);
      -[NSDate timeIntervalSinceReferenceDate](v10, "timeIntervalSinceReferenceDate");
      int v14 = *(_DWORD *)(a1 + 184);
      int v15 = *(_DWORD *)(a1 + 188);
      *(_DWORD *)std::stringbuf::string_type buf = 138413058;
      *(void *)&uint8_t buf[4] = v13;
      *(_WORD *)&_BYTE buf[12] = 2048;
      *(void *)&_BYTE buf[14] = v16;
      *(_WORD *)&buf[22] = 1024;
      *(_DWORD *)&_BYTE buf[24] = v14;
      __int16 v47 = 1024;
      LODWORD(v48) = v15;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "locationd paused updates to '%@' at %.2f. client autopause setting: %d, override setting: %d",  buf,  0x22u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934970 != -1) {
        dispatch_once(&qword_101934970, &stru_101883130);
      }
      uint64_t v26 = qword_101934978;
      uint64_t v27 = *(void *)(a1 + 24);
      -[NSDate timeIntervalSinceReferenceDate](v10, "timeIntervalSinceReferenceDate");
      int v28 = *(_DWORD *)(a1 + 184);
      int v29 = *(_DWORD *)(a1 + 188);
      int v38 = 138413058;
      uint64_t v39 = v27;
      __int16 v40 = 2048;
      uint64_t v41 = v30;
      __int16 v42 = 1024;
      int v43 = v28;
      __int16 v44 = 1024;
      int v45 = v29;
      LODWORD(v33) = 34;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v26,  2LL,  "locationd paused updates to '%@' at %.2f. client autopause setting: %d, override setting: %d",  &v38,  v33);
      uint64_t v32 = (char *)v31;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationSubscription::sendAutopauseStatusMessage(BOOL)",  "%s\n",  v31);
      if (v32 != buf) {
        free(v32);
      }
    }
  }

  if (qword_101934970 != -1) {
    dispatch_once(&qword_101934970, &stru_101883130);
  }
  id v17 = (os_log_s *)qword_101934978;
  if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v18 = *(void *)(a1 + 24);
    *(_DWORD *)std::stringbuf::string_type buf = 68289538;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    *(_WORD *)&_BYTE buf[18] = 2082;
    *(void *)&buf[20] = v4;
    __int16 v47 = 2114;
    uint64_t v48 = v18;
    _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:PAUSE: Sending message to client, msg:%{public, location:escape_only}s, Client:%{ public, location:escape_only}@}",  buf,  0x26u);
  }

  v36[0] = @"kCLConnectionMessageAutopauseStatusKey";
  v36[1] = @"kCLConnectionMessageAutopauseOverrideKey";
  v37[0] = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", a2);
  v37[1] = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", v8);
  *(void *)std::stringbuf::string_type buf = +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v37,  v36,  2LL);
  sub_100DB9B44(a1, buf);
}

void sub_100DB9B44(uint64_t a1, void *a2)
{
  uint64_t v3 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      unint64_t v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }

void sub_100DB9BD8(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_100DB9BEC(uint64_t a1, void *a2)
{
  uint64_t v3 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      unint64_t v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }

void sub_100DB9C80(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_100DB9C94(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101883170);
    }
    uint64_t v2 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
    {
      int v3 = *(_DWORD *)(a1 + 48);
      uint64_t v4 = *(void *)(a1 + 40);
      v5[0] = 68289538;
      v5[1] = 0;
      __int16 v6 = 2082;
      uint64_t v7 = "";
      __int16 v8 = 1026;
      int v9 = v3;
      __int16 v10 = 2114;
      uint64_t v11 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:Releasing process assertion, pid:%{public}u, clientKeyPath:%{public, location:escape_only}@}",  (uint8_t *)v5,  0x22u);
    }

    [*(id *)(a1 + 32) invalidate];
  }

void sub_100DB9DA4(uint64_t a1)
{
  if (qword_101934970 != -1) {
    dispatch_once(&qword_101934970, &stru_101883130);
  }
  uint64_t v2 = (os_log_s *)qword_101934978;
  if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_INFO))
  {
    id v3 = [*(id *)(a1 + 32) UTF8String];
    int v4 = *(_DWORD *)(a1 + 48);
    uint64_t v5 = *(void *)(a1 + 40);
    *(_DWORD *)std::stringbuf::string_type buf = 136446722;
    id v20 = v3;
    __int16 v21 = 1026;
    int v22 = v4;
    __int16 v23 = 2048;
    uint64_t v24 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "#visibility Completing async release of visibility assertion for %{public}s (PID:%{public}d, ptr:%p)",  buf,  0x1Cu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101883130);
    }
    uint64_t v7 = qword_101934978;
    id v8 = [*(id *)(a1 + 32) UTF8String];
    int v9 = *(_DWORD *)(a1 + 48);
    uint64_t v10 = *(void *)(a1 + 40);
    int v13 = 136446722;
    id v14 = v8;
    __int16 v15 = 1026;
    int v16 = v9;
    __int16 v17 = 2048;
    uint64_t v18 = v10;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v7,  1LL,  "#visibility Completing async release of visibility assertion for %{public}s (PID:%{public}d, ptr:%p)",  &v13,  28);
    __int16 v12 = (uint8_t *)v11;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationSubscription::updateVisibilityAssertion()_block_invoke",  "%s\n",  v11);
    if (v12 != buf) {
      free(v12);
    }
  }

  __int16 v6 = *(void **)(a1 + 40);
  if (v6)
  {
    [v6 invalidate:0];
  }

id sub_100DB9FB8(uint64_t a1, int a2)
{
  uint64_t v3 = sub_100DAF894(a1);
  uint64_t v5 = *(void *)(*(void *)v3 + 8LL);
  int v4 = *(void **)(*(void *)v3 + 16LL);
  if (a2) {
    return [v4 register:v5 forNotification:35 registrationInfo:0];
  }
  else {
    return [v4 unregister:v5 forNotification:35];
  }
}

CLOSTransaction *sub_100DB9FF8(const void *a1, const char *a2)
{
  return -[CLOSTransaction initWithDescription:]( objc_alloc(&OBJC_CLASS___CLOSTransaction),  "initWithDescription:",  __str);
}

void sub_100DBA068(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (qword_101934970 != -1) {
    dispatch_once(&qword_101934970, &stru_101883130);
  }
  uint64_t v2 = (os_log_s *)qword_101934978;
  if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(v1 + 24);
    *(_DWORD *)std::stringbuf::string_type buf = 68289538;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v7 = 2082;
    id v8 = "";
    __int16 v9 = 2114;
    uint64_t v10 = v3;
    __int16 v11 = 2050;
    uint64_t v12 = sub_1000F0F58(v1);
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:client not currently authorized for location; sending error, Client:%{public, locatio"
      "n:escape_only}@, DC:%{public}p}",
      buf,
      0x26u);
  }

  int v4 = @"kCLConnectionMessageErrorKey";
  uint64_t v5 = &off_1018D45C8;
  *(void *)std::stringbuf::string_type buf = +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v5,  &v4,  1LL);
  sub_100DBA1AC(v1, buf);
}

void sub_100DBA1AC(uint64_t a1, void *a2)
{
  uint64_t v3 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      unint64_t v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }

void sub_100DBA240(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_100DBA254(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if ((sub_100C6ADAC(v2, 4) & 1) != 0)
  {
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101883130);
    }
    uint64_t v3 = (os_log_s *)qword_101934978;
    if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(v2 + 24);
      v5[0] = 68289282;
      v5[1] = 0;
      __int16 v6 = 2082;
      __int16 v7 = "";
      __int16 v8 = 2114;
      uint64_t v9 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#warning failed to release fNotYetAuthorizedTimer after client was re-authorized, Cli ent:%{public, location:escape_only}@}",  (uint8_t *)v5,  0x1Cu);
    }
  }

  else
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
  }

  [*(id *)(v2 + 576) invalidate];

  *(void *)(v2 + 576) = 0LL;
}

id sub_100DBA374(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100DAFAF0(a1);
  [*(id *)(*(void *)v4 + 16) unregister:*(void *)(*(void *)v4 + 8) forNotification:a2];
  uint64_t v5 = sub_100DAF894(a1);
  return [*(id *)(*(void *)v5 + 16) unregister:*(void *)(*(void *)v5 + 8) forNotification:a2];
}

id sub_100DBA3BC@<X0>(id *a1@<X0>, void **a2@<X1>, uint64_t *a3@<X2>, void *a4@<X8>)
{
  __int16 v8 = operator new(0x38uLL);
  uint64_t v9 = *a2;
  uint64_t v10 = *a3;
  *__int16 v8 = [*a1 copy];
  uint64_t v11 = mach_absolute_time();
  v8[1] = v11;
  _DWORD v8[2] = v11;
  v8[3] = 0LL;
  _DWORD v8[4] = 0LL;
  v8[5] = v10;
  id result = [v9 inUseLevelIsAtLeast:3];
  *((_BYTE *)v8 + 48) = (_BYTE)result;
  *a4 = v8;
  return result;
}

void sub_100DBA440(_Unwind_Exception *a1)
{
}

id sub_100DBA454(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  if (*(_BYTE *)(a1 + 57))
  {
    uint64_t v5 = sub_100DAF894(a1);
    [*(id *)(*(void *)v5 + 16) unregister:*(void *)(*(void *)v5 + 8) forNotification:a2];
    __int16 v6 = (uint64_t *)sub_100DAFAF0(a1);
    __int16 v7 = 0LL;
    uint64_t v8 = *v6;
  }

  else
  {
    uint64_t v10 = sub_100DAFAF0(a1);
    [*(id *)(*(void *)v10 + 16) unregister:*(void *)(*(void *)v10 + 8) forNotification:a2];
    uint64_t v8 = *(void *)sub_100DAF894(a1);
    __int16 v7 = sub_100419014(a3);
  }

  return [*(id *)(v8 + 16) register:*(void *)(v8 + 8) forNotification:a2 registrationInfo:v7];
}

id sub_100DBA4EC(uint64_t a1, int a2)
{
  uint64_t v3 = sub_100DAF894(a1);
  uint64_t v5 = *(void *)(*(void *)v3 + 8LL);
  uint64_t v4 = *(void **)(*(void *)v3 + 16LL);
  if (a2) {
    return [v4 register:v5 forNotification:34 registrationInfo:0];
  }
  else {
    return [v4 unregister:v5 forNotification:34];
  }
}

uint64_t sub_100DBA52C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 168);
  if (!result)
  {
    id v3 = objc_msgSend(objc_msgSend(*(id *)(a1 + 8), "vendor"), "proxyForService:", @"CLClientManager");
    *(void *)(a1 + 168) = v3;
    objc_msgSend(v3, "registerDelegate:inSilo:", *(void *)(a1 + 48), objc_msgSend(*(id *)(a1 + 8), "silo"));
    return *(void *)(a1 + 168);
  }

  return result;
}

void sub_100DBA598(uint64_t a1, int a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (qword_101934970 != -1) {
    dispatch_once(&qword_101934970, &stru_101883130);
  }
  uint64_t v4 = (os_log_s *)qword_101934978;
  if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v5 = *(void *)(v3 + 24);
    v6[0] = 68289538;
    v6[1] = 0;
    __int16 v7 = 2082;
    uint64_t v8 = "";
    __int16 v9 = 2114;
    uint64_t v10 = v5;
    __int16 v11 = 1026;
    int v12 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:#provisional force intermediation response(#cblsPowerSaver), Client:%{public, locatio n:escape_only}@, shouldContinue:%{public}hhd}",  (uint8_t *)v6,  0x22u);
  }

uint64_t sub_100DBA698(uint64_t a1)
{
  double v3 = v2;
  objc_msgSend( objc_msgSend(*(id *)(a1 + 176), "objectForKey:", @"kCLConnectionMessageDesiredAccuracyKey"),  "doubleValue");
  double v5 = v4;
  unsigned int v6 = [*(id *)(a1 + 16) inUseLevelIsAtLeast:3] ^ 1;
  unsigned int v7 = [*(id *)(a1 + 16) isAuthorizedForServiceType:17];
  unsigned int v8 = v7;
  if (v3 > 0.0 || (uint64_t v9 = 0LL, v5 >= 1000.0) && v5 <= 6383135.0)
  {
    uint64_t v9 = v6 & v7;
    if (!*(_BYTE *)(a1 + 58))
    {
      if ((_DWORD)v9)
      {
        uint64_t v9 = 1LL;
        if ((sub_100C6AE10(a1) & 1) == 0)
        {
          *(_BYTE *)(a1 + 58) = 1;
          *(CFAbsoluteTime *)(a1 + 64) = CFAbsoluteTimeGetCurrent();
          if (qword_101934980 != -1) {
            dispatch_once(&qword_101934980, &stru_101883170);
          }
          uint64_t v10 = (os_log_s *)qword_101934988;
          if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v11 = *(void *)(a1 + 24);
            double v12 = *(double *)(a1 + 64);
            int v18 = 68289538;
            int v19 = 0;
            __int16 v20 = 2082;
            __int16 v21 = "";
            __int16 v22 = 2114;
            uint64_t v23 = v11;
            __int16 v24 = 2050;
            double v25 = v12;
            _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:#cblsPowerSaver LossTracking enabled, Client:%{public, location:escape_only}@ , LossTrackingStartTime:%{public}f}",  (uint8_t *)&v18,  0x26u);
          }

          uint64_t v9 = 1LL;
        }
      }
    }
  }

  if ((_os_feature_enabled_impl("CoreLocation", "CBLSPowerSaver") & 1) != 0)
  {
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101883170);
    }
    int v13 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v14 = *(void *)(a1 + 24);
      int v18 = 68290562;
      int v19 = 0;
      __int16 v20 = 2082;
      __int16 v21 = "";
      __int16 v22 = 2114;
      uint64_t v23 = v14;
      __int16 v24 = 2050;
      double v25 = v3;
      __int16 v26 = 2050;
      double v27 = v5;
      __int16 v28 = 1026;
      unsigned int v29 = v6;
      __int16 v30 = 1026;
      unsigned int v31 = v8;
      __int16 v32 = 1026;
      int v33 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:#cblsPowerSaver should release processAssertion, Client:%{public, location:escape_o nly}@, distanceFilter:%{public}f, desiredAccuracy:%{public}f, inUseLevelLessThanDecayingUserEn g:%{public}hhd, backgroundLaunchable:%{public}hhd, eligibleForReleasingProcessAssertion:%{public}hhd}",  (uint8_t *)&v18,  0x42u);
    }
  }

  else
  {
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101883170);
    }
    __int16 v15 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v16 = *(void *)(a1 + 24);
      int v18 = 68289282;
      int v19 = 0;
      __int16 v20 = 2082;
      __int16 v21 = "";
      __int16 v22 = 2114;
      uint64_t v23 = v16;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:ineligible for releasing process assertion - #cblsPowerSaver feature-flag not enabled, Client:%{public, location:escape_only}@}",  (uint8_t *)&v18,  0x1Cu);
    }

    return 0LL;
  }

  return v9;
}

double sub_100DBA9C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  _DWORD v5[2] = sub_100DBAA3C;
  _OWORD v5[3] = &unk_101830558;
  v5[4] = v2;
  double result = *(double *)(a1 + 56);
  *(double *)&v5[5] = result;
  void v5[6] = a2;
  uint64_t v4 = *(void *)(a1 + 48);
  if (v4)
  {
    if (*(void *)(v4 + 8) != -1LL) {
      *(void *)&double result = sub_100DBAA3C((uint64_t)v5).n128_u64[0];
    }
  }

  return result;
}

__n128 sub_100DBAA3C(uint64_t a1)
{
  uint64_t v1 = *(__n128 **)(a1 + 32);
  if (v1[19].n128_u8[8])
  {
    result.n128_u64[0] = v1[20].n128_u64[0];
    if (result.n128_f64[0] == *(double *)(a1 + 40))
    {
      if (qword_101934970 != -1) {
        dispatch_once(&qword_101934970, &stru_101883130);
      }
      uint64_t v4 = (os_log_s *)qword_101934978;
      if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
      {
        unint64_t v5 = v1[1].n128_u64[1];
        v7[0] = 68289282;
        v7[1] = 0;
        __int16 v8 = 2082;
        uint64_t v9 = "";
        __int16 v10 = 2114;
        unint64_t v11 = v5;
        _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:received location system state of LocationUpdateSession, Client:%{public, locatio n:escape_only}@}",  (uint8_t *)v7,  0x1Cu);
      }

      unsigned int v6 = *(__n128 **)(a1 + 48);
      __n128 result = *v6;
      v1[23].n128_u64[0] = v6[1].n128_u64[0];
      v1[22] = result;
    }
  }

  return result;
}

void sub_100DBAB5C(uint64_t a1, int *a2, __int16 *a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101883110);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    __int16 v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLLocationSubscription::onPauseNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101883110);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      __int16 v15 = "";
      __int16 v16 = 2082;
      __int16 v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLLocationSubscription::onPauseNotification, event:%{public, location:escape_only}s , this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100DBCAAC(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100DBAD14( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DBAD34(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  unsigned __int8 v6 = objc_msgSend( objc_msgSend( *(id *)(a1 + 176),  "objectForKeyedSubscript:",  @"kCLConnectionMessageDynamicAccuracyReductionKey"),  "BOOLValue");
  if ([*(id *)(a1 + 16) isAuthorizedForServiceType:12] && (v6 & 1) != 0)
  {
    sub_1002B68E8(a1 + 520, &v52);
    sub_100246C40((uint64_t)v45, (uint64_t)a2);
    uint64_t v7 = (void *)sub_100DBA52C(a1);
    __int16 v8 = objc_alloc(&OBJC_CLASS___CLLocation);
    __int128 v9 = a2[7];
    v43[6] = a2[6];
    v43[7] = v9;
    v44[0] = a2[8];
    *(_OWORD *)((char *)v44 + 12) = *(_OWORD *)((char *)a2 + 140);
    __int128 v10 = a2[3];
    v43[2] = a2[2];
    v43[3] = v10;
    __int128 v11 = a2[5];
    v43[4] = a2[4];
    v43[5] = v11;
    __int128 v12 = a2[1];
    v43[0] = *a2;
    v43[1] = v12;
    int v13 = -[CLLocation initWithClientLocation:](v8, "initWithClientLocation:", v43);
    v34[0] = _NSConcreteStackBlock;
    v34[1] = 3321888768LL;
    v34[2] = sub_100DBB0A4;
    void v34[3] = &unk_101883000;
    v34[5] = v52;
    uint64_t v35 = v53;
    if (v53)
    {
      p_shared_weak_owners = &v53->__shared_weak_owners_;
      do
        unint64_t v15 = __ldxr((unint64_t *)p_shared_weak_owners);
      while (__stxr(v15 + 1, (unint64_t *)p_shared_weak_owners));
    }

    sub_100246C40((uint64_t)&v36, (uint64_t)v45);
    v34[4] = a3;
    [v7 reduceAccuracy:v13 withReply:v34];

    __int16 v16 = v41;
    if (v41)
    {
      p_shared_owners = (unint64_t *)&v41->__shared_owners_;
      do
        unint64_t v18 = __ldaxr(p_shared_owners);
      while (__stlxr(v18 - 1, p_shared_owners));
      if (!v18)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }

    if (v40 < 0) {
      operator delete(__p);
    }
    uint64_t v19 = v38;
    if (v38)
    {
      __int16 v20 = (unint64_t *)&v38->__shared_owners_;
      do
        unint64_t v21 = __ldaxr(v20);
      while (__stlxr(v21 - 1, v20));
      if (!v21)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }

    __int16 v22 = v37;
    if (v37)
    {
      uint64_t v23 = (unint64_t *)&v37->__shared_owners_;
      do
        unint64_t v24 = __ldaxr(v23);
      while (__stlxr(v24 - 1, v23));
      if (!v24)
      {
        ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
        std::__shared_weak_count::__release_weak(v22);
      }
    }

    if (v35) {
      std::__shared_weak_count::__release_weak(v35);
    }

    double v25 = v50;
    if (v50)
    {
      __int16 v26 = (unint64_t *)&v50->__shared_owners_;
      do
        unint64_t v27 = __ldaxr(v26);
      while (__stlxr(v27 - 1, v26));
      if (!v27)
      {
        ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
        std::__shared_weak_count::__release_weak(v25);
      }
    }

    if (v49 < 0) {
      operator delete(v48);
    }
    __int16 v28 = v47;
    if (v47)
    {
      unsigned int v29 = (unint64_t *)&v47->__shared_owners_;
      do
        unint64_t v30 = __ldaxr(v29);
      while (__stlxr(v30 - 1, v29));
      if (!v30)
      {
        ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
        std::__shared_weak_count::__release_weak(v28);
      }
    }

    unsigned int v31 = v46;
    if (v46)
    {
      __int16 v32 = (unint64_t *)&v46->__shared_owners_;
      do
        unint64_t v33 = __ldaxr(v32);
      while (__stlxr(v33 - 1, v32));
      if (!v33)
      {
        ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
        std::__shared_weak_count::__release_weak(v31);
      }
    }

    if (v53) {
      std::__shared_weak_count::__release_weak(v53);
    }
  }

  else
  {
    (*(void (**)(uint64_t, _OWORD *))(a3 + 16))(a3, a2);
  }

void sub_100DBB058( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, std::__shared_weak_count *a15)
{
  if (a15) {
    std::__shared_weak_count::__release_weak(a15);
  }
  sub_100243768((uint64_t)&STACK[0x6D8]);
  unint64_t v18 = *(std::__shared_weak_count **)(v16 - 56);
  if (v18) {
    std::__shared_weak_count::__release_weak(v18);
  }
  _Unwind_Resume(a1);
}

void sub_100DBB0A4(uint64_t a1, uint64_t a2)
{
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3321888768LL;
  uint64_t v16 = sub_100DBB214;
  __int16 v17 = &unk_101882FC8;
  sub_100246C40((uint64_t)&v20, a1 + 56);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v18 = a2;
  uint64_t v19 = v4;
  uint64_t v5 = *(void *)(a1 + 48);
  if (v5 && *(void *)(v5 + 8) != -1LL) {
    v16((uint64_t)v15);
  }

  unsigned __int8 v6 = v25;
  if (v25)
  {
    p_shared_owners = (unint64_t *)&v25->__shared_owners_;
    do
      unint64_t v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }

  if (v24 < 0) {
    operator delete(__p);
  }
  __int128 v9 = v22;
  if (v22)
  {
    __int128 v10 = (unint64_t *)&v22->__shared_owners_;
    do
      unint64_t v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }

  __int128 v12 = v21;
  if (v21)
  {
    int v13 = (unint64_t *)&v21->__shared_owners_;
    do
      unint64_t v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }

void sub_100DBB1FC(_Unwind_Exception *a1)
{
}

void sub_100DBB214(uint64_t a1)
{
  uint64_t v2 = (std::__shared_weak_count *)*((void *)&v27 + 1);
  __int128 v27 = 0u;
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      unint64_t v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }

  uint64_t v5 = *(void **)(a1 + 32);
  if (v5)
  {
    [v5 clientLocation];
  }

  else
  {
    __int128 v22 = 0u;
    memset(v23, 0, 28);
    __int128 v20 = 0u;
    __int128 v21 = 0u;
    __int128 v18 = 0u;
    __int128 v19 = 0u;
    __int128 v16 = 0u;
    __int128 v17 = 0u;
    __int128 v15 = 0u;
  }

  v24[6] = v21;
  v24[7] = v22;
  v25[0] = v23[0];
  *(_OWORD *)((char *)v25 + 12) = *(_OWORD *)((char *)v23 + 12);
  v24[2] = v17;
  v24[3] = v18;
  v24[4] = v19;
  void v24[5] = v20;
  v24[0] = v15;
  v24[1] = v16;
  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();

  unsigned __int8 v6 = v30;
  if (v30)
  {
    uint64_t v7 = (unint64_t *)&v30->__shared_owners_;
    do
      unint64_t v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }

  if (v29 < 0) {
    operator delete(__p);
  }
  __int128 v9 = (std::__shared_weak_count *)*((void *)&v27 + 1);
  if (*((void *)&v27 + 1))
  {
    __int128 v10 = (unint64_t *)(*((void *)&v27 + 1) + 8LL);
    do
      unint64_t v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }

  __int128 v12 = v26;
  if (v26)
  {
    int v13 = (unint64_t *)&v26->__shared_owners_;
    do
      unint64_t v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }

void sub_100DBB3C4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, char a29)
{
}

uint64_t sub_100DBB3E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v2;
  if (v2)
  {
    double v3 = (unint64_t *)(v2 + 16);
    do
      unint64_t v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }

  return sub_100246C40(a1 + 56, a2 + 56);
}

void sub_100DBB428(_Unwind_Exception *exception_object)
{
  double v3 = *(std::__shared_weak_count **)(v1 + 48);
  if (v3) {
    std::__shared_weak_count::__release_weak(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DBB440(uint64_t a1)
{
  sub_10000AE14(a1 + 1216);
  sub_10000AE14(a1 + 856);
  sub_10000AE14(a1 + 736);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 48);
  if (v2) {
    std::__shared_weak_count::__release_weak(v2);
  }
}

void sub_100DBB4A4(uint64_t a1, uint64_t a2)
{
  v33[0] = _NSConcreteStackBlock;
  v33[1] = 3321888768LL;
  id v34 = sub_100DBB80C;
  uint64_t v35 = &unk_101883030;
  uint64_t v36 = a1;
  sub_100246C40((uint64_t)&v37, (uint64_t)v44);
  sub_1002B68E8(a1 + 552, &v31);
  if ([*(id *)(a1 + 16) isNonProvisionallyAuthorizedForServiceType:5])
  {
    v34((uint64_t)v33);
  }

  else
  {
    double v3 = objc_alloc(&OBJC_CLASS___CLLocation);
    v29[6] = v44[6];
    v29[7] = v44[7];
    v30[0] = v45[0];
    *(_OWORD *)((char *)v30 + 12) = *(_OWORD *)((char *)v45 + 12);
    v29[2] = v44[2];
    v29[3] = v44[3];
    v29[4] = v44[4];
    void v29[5] = v44[5];
    v29[0] = v44[0];
    v29[1] = v44[1];
    unint64_t v4 = -[CLLocation initWithClientLocation:](v3, "initWithClientLocation:", v29);
    uint64_t v5 = (void *)sub_100DBA52C(a1);
    id v6 = [*(id *)(a1 + 24) legacyClientKey];
    v27[0] = _NSConcreteStackBlock;
    v27[1] = 3321888768LL;
    v27[2] = sub_100DBBF88;
    void v27[3] = &unk_101883090;
    v27[5] = a1;
    void v27[6] = v31;
    __int16 v28 = v32;
    if (v32)
    {
      p_shared_weak_owners = &v32->__shared_weak_owners_;
      do
        unint64_t v8 = __ldxr((unint64_t *)p_shared_weak_owners);
      while (__stxr(v8 + 1, (unint64_t *)p_shared_weak_owners));
    }

    v27[4] = v33;
    [v5 handleProvisionalIntermediationForService:5 forClientKey:v6 at:v4 withReply:v27];
    if (v28) {
      std::__shared_weak_count::__release_weak(v28);
    }
  }

  if (v32) {
    std::__shared_weak_count::__release_weak(v32);
  }

  __int128 v9 = v42;
  if (v42)
  {
    p_shared_owners = (unint64_t *)&v42->__shared_owners_;
    do
      unint64_t v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }

  if (v41 < 0) {
    operator delete(__p);
  }
  __int128 v12 = v39;
  if (v39)
  {
    int v13 = (unint64_t *)&v39->__shared_owners_;
    do
      unint64_t v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }

  __int128 v15 = v38;
  if (v38)
  {
    __int128 v16 = (unint64_t *)&v38->__shared_owners_;
    do
      unint64_t v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }

  __int128 v18 = v50;
  if (v50)
  {
    __int128 v19 = (unint64_t *)&v50->__shared_owners_;
    do
      unint64_t v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }

  if (v49 < 0) {
    operator delete(v48);
  }
  __int128 v21 = v47;
  if (v47)
  {
    __int128 v22 = (unint64_t *)&v47->__shared_owners_;
    do
      unint64_t v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
  }

  char v24 = v46;
  if (v46)
  {
    double v25 = (unint64_t *)&v46->__shared_owners_;
    do
      unint64_t v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
  }

void sub_100DBB7B4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, std::__shared_weak_count *a39)
{
  if (a16) {
    std::__shared_weak_count::__release_weak(a16);
  }
  if (a39) {
    std::__shared_weak_count::__release_weak(a39);
  }
  sub_100243768(v39);
  sub_100243768((uint64_t)&STACK[0x718]);
  _Unwind_Resume(a1);
}

uint64_t sub_100DBB80C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  sub_1002A5370(v35);
  if (sub_100C6ACBC(v2))
  {
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101883130);
    }
    double v3 = (os_log_s *)qword_101934978;
    if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(v2 + 24);
      uint64_t v5 = sub_1000F0F58(v2);
      uint64_t v6 = *(void *)(v2 + 304);
      *(_DWORD *)std::stringbuf::string_type buf = 68290307;
      *(_DWORD *)uint64_t v39 = 0;
      *(_WORD *)&v39[4] = 2082;
      *(void *)&v39[6] = "";
      __int16 v40 = 2114;
      uint64_t v41 = v4;
      __int16 v42 = 2050;
      uint64_t v43 = v5;
      __int16 v44 = 1040;
      *(_DWORD *)int v45 = 156;
      *(_WORD *)&v45[4] = 2097;
      *(void *)&v45[6] = a1 + 40;
      *(_WORD *)&v45[14] = 2050;
      *(void *)&v45[16] = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:Sending location to client, Client:%{public, location:escape_only}@, DC:%{pub lic}p, location:%{private, location:CLClientLocation}.*P, desiredAccuracy:%{public}f}",  buf,  0x40u);
    }

    if (objc_msgSend( objc_msgSend(*(id *)(v2 + 24), "clientAnchor"),  "isEqualToString:",  @"/System/Library/PrivateFrameworks/IPTelephony.framework"))
    {
      if (qword_101934890 != -1) {
        dispatch_once(&qword_101934890, &stru_101883190);
      }
      uint64_t v7 = (os_log_s *)qword_101934898;
      if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v8 = *(void *)(a1 + 44);
        uint64_t v9 = *(void *)(a1 + 52);
        uint64_t v10 = *(void *)(a1 + 68);
        uint64_t v11 = *(void *)(a1 + 60);
        *(_DWORD *)std::stringbuf::string_type buf = 68290051;
        *(_DWORD *)uint64_t v39 = 0;
        *(_WORD *)&v39[4] = 2082;
        *(void *)&v39[6] = "";
        __int16 v40 = 2049;
        uint64_t v41 = v8;
        __int16 v42 = 2049;
        uint64_t v43 = v9;
        __int16 v44 = 2049;
        *(void *)int v45 = v10;
        *(_WORD *)&v45[8] = 2049;
        *(void *)&v45[10] = v11;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:#awd #thumper Caching location , lat:%{private}.08f, lon:%{private}.08f , alt:%{private}f, accuracy:%{private}f}",  buf,  0x3Au);
      }

      id v12 = objc_msgSend(objc_msgSend(*(id *)(v2 + 8), "vendor"), "proxyForService:", @"CLGnssProvider");
      __int128 v13 = *(_OWORD *)(a1 + 152);
      v33[6] = *(_OWORD *)(a1 + 136);
      v33[7] = v13;
      v34[0] = *(_OWORD *)(a1 + 168);
      *(_OWORD *)((char *)v34 + 12) = *(_OWORD *)(a1 + 180);
      __int128 v14 = *(_OWORD *)(a1 + 88);
      void v33[2] = *(_OWORD *)(a1 + 72);
      v33[3] = v14;
      __int128 v15 = *(_OWORD *)(a1 + 120);
      v33[4] = *(_OWORD *)(a1 + 104);
      v33[5] = v15;
      __int128 v16 = *(_OWORD *)(a1 + 56);
      v33[0] = *(_OWORD *)(a1 + 40);
      v33[1] = v16;
      [v12 cacheEmergencyAWDStatistics:v33];
    }

    unint64_t v17 = (void *)sub_1002A59CC((uint64_t)v35);
    __int16 v32 = v17;
    if (objc_msgSend(objc_msgSend(v17, "allKeys"), "containsObject:", @"CoarseMetaData"))
    {
      id v18 = [v17 valueForKey:@"CoarseMetaData"];
      if (qword_101934970 != -1) {
        dispatch_once(&qword_101934970, &stru_101883130);
      }
      __int128 v19 = (os_log_s *)qword_101934978;
      if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
      {
        id v20 = [v18 length];
        *(_DWORD *)std::stringbuf::string_type buf = 134217984;
        *(void *)uint64_t v39 = v20;
        _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEBUG,  "CoarseMetaData found in nvp. Encoded data size : %lu",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934970 != -1) {
          dispatch_once(&qword_101934970, &stru_101883130);
        }
        uint64_t v25 = qword_101934978;
        id v26 = [v18 length];
        int v36 = 134217984;
        id v37 = v26;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v25,  2LL,  "CoarseMetaData found in nvp. Encoded data size : %lu",  &v36);
        __int16 v28 = (uint8_t *)v27;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationSubscription::deliverLocationToClient(const CLLocationProvider_Type::NotificationData &)_block_invoke",  "%s\n",  v27);
        if (v28 != buf) {
          free(v28);
        }
      }
    }

    if (*(_DWORD *)(a1 + 136) == 12) {
      sub_100DBBE38(v2, &v32);
    }
    else {
      sub_100DBBEE0(v2, &v32);
    }
    double v21 = *(double *)(a1 + 200);
    if (v21 >= 0.0)
    {
      *(double *)(v2 + 248) = v21;
      *(void *)(v2 + 256) = *(void *)(a1 + 116);
    }

    if (*(_BYTE *)(v2 + 241)
      && (*(double *)(a1 + 116) > *(double *)(v2 + 272) || *(double *)(v2 + 248) > *(double *)(v2 + 264)))
    {
      if (qword_101934970 != -1) {
        dispatch_once(&qword_101934970, &stru_101883130);
      }
      __int128 v22 = (os_log_s *)qword_101934978;
      if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v23 = *(void *)(v2 + 24);
        *(_DWORD *)std::stringbuf::string_type buf = 138412290;
        *(void *)uint64_t v39 = v23;
        _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEBUG, "BATCH: successfully ended for %@", buf, 0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934970 != -1) {
          dispatch_once(&qword_101934970, &stru_101883130);
        }
        char v29 = *(void **)(v2 + 24);
        int v36 = 138412290;
        id v37 = v29;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934978,  2LL,  "BATCH: successfully ended for %@",  &v36,  12);
        uint64_t v31 = (uint8_t *)v30;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationSubscription::deliverLocationToClient(const CLLocationProvider_Type::NotificationData &)_block_invoke",  "%s\n",  v30);
        if (v31 != buf) {
          free(v31);
        }
      }

      sub_100DB8A48(v2);
      sub_100DB8CA4(v2, 0xFFFFFFFFLL);
    }
  }

  return sub_1002A5590(v35);
}

void sub_100DBBDF8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, char a33)
{
}

void sub_100DBBE38(uint64_t a1, void *a2)
{
  double v3 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      unint64_t v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }

void sub_100DBBECC(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_100DBBEE0(uint64_t a1, void *a2)
{
  double v3 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      unint64_t v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }

void sub_100DBBF74(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_100DBBF88(uint64_t a1, char a2)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  void v3[2] = sub_100DBBFF4;
  v3[3] = &unk_101883068;
  char v5 = a2;
  __int128 v4 = *(_OWORD *)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 56);
  if (v2)
  {
    if (*(void *)(v2 + 8) != -1LL) {
      sub_100DBBFF4((uint64_t)v3);
    }
  }

void sub_100DBBFF4(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 48))
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
  }

  else
  {
    uint64_t v1 = *(void *)(a1 + 40);
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101883130);
    }
    uint64_t v2 = (os_log_s *)qword_101934978;
    if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(v1 + 16);
      uint64_t v3 = *(void *)(v1 + 24);
      v5[0] = 68289538;
      v5[1] = 0;
      __int16 v6 = 2082;
      uint64_t v7 = "";
      __int16 v8 = 2114;
      uint64_t v9 = v3;
      __int16 v10 = 2114;
      uint64_t v11 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:Got location, but not sending location to client because ProvisionalIntermediation said s o., Client:%{public, location:escape_only}@, AuthContext:%{public, location:escape_only}@}",  (uint8_t *)v5,  0x26u);
    }
  }

void sub_100DBC11C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(unsigned int *)(a2 + 96);
  if (v3 > 0xD)
  {
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101883130);
    }
    char v5 = (os_log_s *)qword_101934978;
    if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_ERROR))
    {
      int v6 = *(_DWORD *)(a2 + 96);
      *(_DWORD *)std::stringbuf::string_type buf = 67109120;
      int v12 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "The location type is undefined (%d).", buf, 8u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934970 != -1) {
        dispatch_once(&qword_101934970, &stru_101883130);
      }
      int v7 = *(_DWORD *)(a2 + 96);
      v10[0] = 67109120;
      v10[1] = v7;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934978,  16LL,  "The location type is undefined (%d).",  v10);
      uint64_t v9 = (uint8_t *)v8;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLLocationSubscription::updateLocationUpdateSessionWithLocation(const CLClientLocation &)",  "%s\n",  v8);
      if (v9 != buf) {
        free(v9);
      }
    }

    ++*(_DWORD *)(a1 + 496);
  }

  else
  {
    ++*(_DWORD *)(a1 + 4 * v3 + 440);
  }

  if (*(_BYTE *)(a1 + 58)) {
    ++*(_DWORD *)(a1 + 500);
  }
}

uint64_t sub_100DBC31C(uint64_t a1, uint64_t a2, void **p_vtable, uint64_t a4)
{
  uint64_t v7 = *(unsigned int *)p_vtable;
  if (((1LL << v7) & 0x800040003FLL) != 0)
  {
    v28[0] = _NSConcreteStackBlock;
    v28[1] = 3221225472LL;
    v28[2] = sub_100DBC9FC;
    void v28[3] = &unk_1018830C0;
    v28[4] = a1;
    sub_100DBAD34(a1, (_OWORD *)a4, (uint64_t)v28);
    if (*(_BYTE *)(a1 + 312))
    {
      __int16 v8 = *(int **)(a4 + 800);
      if (v8)
      {
        for (unint64_t i = 0LL; i < sub_100CBED60(v8); ++i)
        {
          sub_100CBE5DC(*(void *)(a4 + 800), i, (uint64_t)buf);
          sub_100DBC11C(a1, (uint64_t)buf);
          __int16 v8 = *(int **)(a4 + 800);
        }
      }

      else
      {
        sub_100DBC11C(a1, a4);
      }

      v32[0] = @"ClientKey";
      __int16 v10 = (void *)(a1 + 328);
      v33[0] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v10);
      v32[1] = @"DeliveredLocationCount";
      v33[1] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 436));
      v32[2] = @"DesiredHAccuracy";
      void v33[2] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", *(double *)(a1 + 384));
      void v32[3] = @"ReportedHAccuracy";
      v33[3] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", *(double *)(a4 + 20));
      _DWORD v32[4] = @"CorrectiveCompensation";
      v33[4] = +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  sub_100C6ADAC(a1, 12) ^ 1);
      AnalyticsSendEvent( @"com.apple.locationd.client.accuracyrelationship",  +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v33,  v32,  5LL));
      double Current = CFAbsoluteTimeGetCurrent();
      double v12 = *(double *)(a4 + 76);
      if (vabdd_f64(Current, v12) < 3.0)
      {
        double v13 = v12 - *(double *)(a1 + 320);
        if (v13 < 0.0) {
          double v13 = 0.0;
        }
        double v14 = *(double *)(a1 + 400);
        double v15 = *(double *)(a4 + 20);
        if (v14 < 0.0 || v15 >= 0.0 && v15 < v14) {
          *(double *)(a1 + 400) = v15;
        }
        double v16 = *(double *)(a4 + 44);
      }
    }

    return sub_1002A5590(v29);
  }

  if (v7 != 9)
  {
    if (((1LL << v7) & 0xC10000000LL) == 0) {
      return sub_1002A5590(v29);
    }
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101883130);
    }
    a1 = qword_101934978;
    if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEFAULT))
    {
      int v24 = *(_DWORD *)p_vtable;
      *(_DWORD *)std::stringbuf::string_type buf = 67240192;
      *(_DWORD *)&uint8_t buf[4] = v24;
      _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)a1,  OS_LOG_TYPE_DEFAULT,  "Wiring bug: %{public}d should not notify",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934970 != -1) {
        dispatch_once(&qword_101934970, &stru_101883130);
      }
      int v25 = *(_DWORD *)p_vtable;
      v30[0] = 67240192;
      v30[1] = v25;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934978,  0LL,  "Wiring bug: %{public}d should not notify",  v30,  8);
      a1 = (uint64_t)v26;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationSubscription::onLocationNotification(int, const CLLocationProvider_Type::Notification &, const CL LocationProvider_Type::NotificationData &)",  "%s\n",  v26);
    }

    abort_report_np("Wiring bug: unexpected notification");
    __break(1u);
LABEL_53:
    dispatch_once(&qword_101934970, &stru_101883130);
    goto LABEL_41;
  }

  p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
  if (qword_101934970 != -1) {
    dispatch_once(&qword_101934970, &stru_101883130);
  }
  unint64_t v17 = (os_log_s *)qword_101934978;
  if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEBUG,  "notifying clients of unavailable location",  buf,  2u);
  }

  if (!sub_1002921D0(115, 2)) {
    goto LABEL_31;
  }
  bzero(buf, 0x65CuLL);
  if (qword_101934970 != -1) {
    goto LABEL_53;
  }
LABEL_41:
  LOWORD(v30[0]) = 0;
  LODWORD(v27) = 2;
  _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934978,  2LL,  "notifying clients of unavailable location",  v30,  v27);
  double v21 = (uint8_t *)v20;
  sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationSubscription::onLocationNotification(int, const CLLocationProvider_Type::Notification &, const CLLoca tionProvider_Type::NotificationData &)",  "%s\n",  v20);
  if (v21 != buf) {
    free(v21);
  }
LABEL_31:
  *(void *)std::stringbuf::string_type buf = sub_1002A59CC((uint64_t)v29);
  sub_100DBCA04(a1, buf);
  if (*(_BYTE *)(a1 + 241))
  {
    id v18 = (os_log_s *)qword_101934978;
    if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEBUG,  "BATCH: location unavailable caused batch failure",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      LOWORD(v30[0]) = 0;
      LODWORD(v27) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934978,  2LL,  "BATCH: location unavailable caused batch failure",  v30,  v27);
      uint64_t v23 = (uint8_t *)v22;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationSubscription::onLocationNotification(int, const CLLocationProvider_Type::Notification &, const CL LocationProvider_Type::NotificationData &)",  "%s\n",  v22);
      if (v23 != buf) {
        free(v23);
      }
    }

    sub_100DB8CA4(a1, 11LL);
  }

  return sub_1002A5590(v29);
}

void sub_100DBC9C8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_100DBC9FC(uint64_t a1, uint64_t a2)
{
}

void sub_100DBCA04(uint64_t a1, void *a2)
{
  uint64_t v3 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      unint64_t v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }

void sub_100DBCA98(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_100DBCAAC(uint64_t a1, uint64_t a2, int *a3, __int16 *a4)
{
  if (qword_101934970 != -1) {
    dispatch_once(&qword_101934970, &stru_101883130);
  }
  uint64_t v7 = (os_log_s *)qword_101934978;
  if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v8 = *(void *)(a1 + 24);
    int v9 = *a3;
    v11[0] = 68289538;
    v11[1] = 0;
    __int16 v12 = 2082;
    double v13 = "";
    __int16 v14 = 2114;
    uint64_t v15 = v8;
    __int16 v16 = 1026;
    int v17 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:PAUSE: received pause notification, Client:%{public, location:escape_only}@, notifi cation:%{public}d}",  (uint8_t *)v11,  0x22u);
  }

  if (!*a3)
  {
    __int16 v10 = *a4;
    *(_BYTE *)(a1 + 239) = *((_BYTE *)a4 + 2);
    *(_WORD *)(a1 + 237) = v10;
    *(_BYTE *)(a1 + 240) = 1;
    sub_100DB6450(a1);
  }

void sub_100DBCBDC(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 288) == a2)
  {
    sub_100DB8A48(a1);
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101883130);
    }
    uint64_t v3 = (os_log_s *)qword_101934978;
    if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v4 = *(void *)(a1 + 24);
      v5[0] = 68289282;
      v5[1] = 0;
      __int16 v6 = 2082;
      uint64_t v7 = "";
      __int16 v8 = 2114;
      uint64_t v9 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:BATCH: Time criterion met, waiting for location event to notify client, Client:%{pu blic, location:escape_only}@}",  (uint8_t *)v5,  0x1Cu);
    }
  }

void sub_100DBCCD4(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_100DBCD00(id a1)
{
  qword_101934978 = (uint64_t)os_log_create("com.apple.locationd.Core", "Client");
}

void sub_100DBCD2C(id a1)
{
  qword_101934858 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

void sub_100DBCD58(id a1)
{
  qword_101934988 = (uint64_t)os_log_create("com.apple.locationd.Core", "Core");
}

void sub_100DBCD84(id a1)
{
  qword_101934898 = (uint64_t)os_log_create("com.apple.locationd.Position", "Emergency");
}

__n128 sub_100DBCDB0(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x18uLL);
  *(void *)uint64_t v2 = &off_1018831C0;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_100DBCDEC(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &off_1018831C0;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_100DBCE10(uint64_t a1, uint64_t a2, uint64_t *a3)
{
}

uint64_t sub_100DBCE18(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_100DBCE54()
{
}

void sub_100DBCE60(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *a3;
  uint64_t v3 = (std::__shared_weak_count *)a3[1];
  uint64_t v15 = v3;
  *a3 = 0LL;
  a3[1] = 0LL;
  unint64_t v5 = *(void (**)(void *, uint64_t *))a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = (void *)(a2 + (v6 >> 1));
  if ((v6 & 1) != 0) {
    unint64_t v5 = *(void (**)(void *, uint64_t *))(*v7 + v5);
  }
  uint64_t v16 = v4;
  int v17 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      unint64_t v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }

  v5(v7, &v16);
  __int16 v10 = v17;
  if (v17)
  {
    uint64_t v11 = (unint64_t *)&v17->__shared_owners_;
    do
      unint64_t v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }

  if (v15)
  {
    double v13 = (unint64_t *)&v15->__shared_owners_;
    do
      unint64_t v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }

void sub_100DBCF34( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
}

__n128 sub_100DBCF50(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x18uLL);
  *(void *)uint64_t v2 = &off_101883250;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_100DBCF8C(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &off_101883250;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_100DBCFB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_100DBCFB8(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_100DBCFF4()
{
}

void sub_100DBD000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(CLConnectionMessage **)a3;
  unint64_t v5 = *(std::__shared_weak_count **)(a3 + 8);
  *(void *)a3 = 0LL;
  *(void *)(a3 + 8) = 0LL;
  uint64_t v7 = (NSSet *)(*(uint64_t (**)(uint64_t))(*(void *)a2 + 16LL))(a2);
  DictionaryOfClasses = (void *)CLConnectionMessage::getDictionaryOfClasses(v6, v7);
  id v9 = objc_msgSend( objc_msgSend(DictionaryOfClasses, "objectForKeyedSubscript:", @"kCLConnectionMessageSubscribeKey"),  "BOOLValue");
  __int16 v10 = *(void (**)(void *, id, void *))a1;
  uint64_t v11 = *(void *)(a1 + 8);
  unint64_t v12 = (void *)(a2 + (v11 >> 1));
  if ((v11 & 1) != 0) {
    __int16 v10 = *(void (**)(void *, id, void *))(*v12 + v10);
  }
  v10(v12, v9, DictionaryOfClasses);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      unint64_t v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }

void sub_100DBD0C0(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_101236AC4(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100DBD0D8(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  if (a3)
  {
    uint64_t v5 = 56 * a3;
    do
    {
      sub_100DBD150(a1, a2, (__int128 *)a2);
      a2 += 56;
      v5 -= 56LL;
    }

    while (v5);
  }

  return a1;
}

void sub_100DBD13C(_Unwind_Exception *a1)
{
}

unsigned __int8 *sub_100DBD150(uint64_t a1, unsigned __int8 *a2, __int128 *a3)
{
  uint64_t v7 = (void *)(a1 + 24);
  unint64_t v8 = sub_10004B1A4(a1 + 24, (uint64_t)a2);
  unint64_t v9 = v8;
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    unint64_t v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v3 = v8;
      if (v8 >= v10) {
        unint64_t v3 = v8 % v10;
      }
    }

    else
    {
      unint64_t v3 = (v10 - 1) & v8;
    }

    double v13 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v3);
    if (v13)
    {
      for (unint64_t i = *v13; i; unint64_t i = *(unsigned __int8 **)i)
      {
        unint64_t v15 = *((void *)i + 1);
        if (v15 == v9)
        {
          if ((sub_100022A24(a1 + 32, i + 16, a2) & 1) != 0) {
            return i;
          }
        }

        else
        {
          if (v12 > 1)
          {
            if (v15 >= v10) {
              v15 %= v10;
            }
          }

          else
          {
            v15 &= v10 - 1;
          }

          if (v15 != v3) {
            break;
          }
        }
      }
    }
  }

  sub_100DBD3D0(a1, v9, a3, (uint64_t)v25);
  float v16 = (float)(unint64_t)(*(void *)(a1 + 24) + 1LL);
  float v17 = *(float *)(a1 + 32);
  if (!v10 || (float)(v17 * (float)v10) < v16)
  {
    BOOL v18 = 1LL;
    if (v10 >= 3) {
      BOOL v18 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v19 = v18 | (2 * v10);
    unint64_t v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20) {
      size_t v21 = v20;
    }
    else {
      size_t v21 = v19;
    }
    sub_100019E10(a1, v21);
    unint64_t v10 = *(void *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10) {
        unint64_t v3 = v9 % v10;
      }
      else {
        unint64_t v3 = v9;
      }
    }

    else
    {
      unint64_t v3 = (v10 - 1) & v9;
    }
  }

  __int128 v22 = *(void **)(*(void *)a1 + 8 * v3);
  if (v22)
  {
    *(void *)v25[0] = *v22;
    *__int128 v22 = v25[0];
  }

  else
  {
    *(void *)v25[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v25[0];
    *(void *)(*(void *)a1 + 8 * v3) = a1 + 16;
    if (*(void *)v25[0])
    {
      unint64_t v23 = *(void *)(*(void *)v25[0] + 8LL);
      if ((v10 & (v10 - 1)) != 0)
      {
        if (v23 >= v10) {
          v23 %= v10;
        }
      }

      else
      {
        v23 &= v10 - 1;
      }

      *(void *)(*(void *)a1 + 8 * v23) = v25[0];
    }
  }

  unint64_t i = (unsigned __int8 *)v25[0];
  v25[0] = 0LL;
  ++*v7;
  sub_100272D04((uint64_t)v25, 0LL);
  return i;
}

void sub_100DBD3B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void *sub_100DBD3D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  unint64_t v8 = operator new(0x48uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + 16) = 0;
  *unint64_t v8 = 0LL;
  v8[1] = a2;
  __n128 result = sub_100DBD444(v8 + 2, a3);
  *(_BYTE *)(a4 + 16) = 1;
  return result;
}

void sub_100DBD42C(_Unwind_Exception *a1)
{
}

void *sub_100DBD444(void *__dst, __int128 *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1010DD48C(__dst, *(void **)a2, *((void *)a2 + 1));
  }

  else
  {
    __int128 v4 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)__dst = v4;
  }

  sub_10001A504((uint64_t)(__dst + 3), (uint64_t)a2 + 24);
  return __dst;
}

void sub_100DBD49C(_Unwind_Exception *exception_object)
{
}

void *sub_100DBD4B8(void *a1, uint64_t a2)
{
  *a1 = a2;
  __int128 v4 = operator new(0x20uLL);
  *__int128 v4 = &off_1018832D0;
  v4[1] = 0LL;
  v4[2] = 0LL;
  _OWORD v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_100DBD500(_Unwind_Exception *exception_object)
{
  if (v1)
  {
    unint64_t v3 = (void *)sub_1006B6010(v1);
    operator delete(v3);
  }

  _Unwind_Resume(exception_object);
}

void sub_100DBD51C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  if (v1)
  {
    uint64_t v2 = (void *)sub_1006B6010(v1);
    operator delete(v2);
  }

uint64_t sub_100DBD540(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }

  else
  {
    return 0LL;
  }

void sub_100DBD5C4()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936138);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936138))
    {
      uint64_t v2 = 0x7FFFFFFF00000000LL;
      v1[2] = xmmword_10135E070;
      v1[3] = unk_10135E080;
      v1[4] = xmmword_10135E090;
      v1[0] = xmmword_10135E050;
      v1[1] = unk_10135E060;
      sub_1001BB3C4((uint64_t)&unk_101936120, (int *)v1, 11LL);
      __cxa_atexit((void (*)(void *))sub_1001BA444, &unk_101936120, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936138);
    }
  }

void sub_100DBD698(_Unwind_Exception *a1)
{
}

uint64_t sub_100DBD6B4(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = (*(uint64_t (**)(void))(*(void *)*a2 + 64LL))(*a2);
  sub_10046E868(v6);
  uint64_t v7 = (*(uint64_t (**)(void))(*(void *)*a2 + 40LL))(*a2);
  sub_10046E868(v7);
  uint64_t v8 = (uint64_t)(a2 + 1);
  sub_10046E868((uint64_t)(a2 + 1));
  uint64_t v9 = (*(uint64_t (**)(void))(*(void *)*a2 + 56LL))(*a2);
  sub_10046E868(v9);
  double v10 = *(double *)(v6 + 136);
  int v13 = *(_DWORD *)(v6 + 200);
  int v14 = *(_DWORD *)(v6 + 220);
  *(double *)(a1 + 16) = v10;
  int v15 = *(_DWORD *)(a1 + 8);
  if (v15 < 0)
  {
    uint64_t v11 = 0LL;
    *(_DWORD *)(a1 + 8) = v13;
    *(double *)(a1 + sub_100BDC958(v1 + 24) = v10;
    return v11;
  }

  *(_DWORD *)a3 = v13 - v15;
  *(double *)(a3 + 16) = v10;
  *(_DWORD *)(a3 + 32) = v14;
  *(_DWORD *)(a1 + 8) = v13;
  if ((sub_100CDBE80(v7, (uint64_t)v25, v10) & 1) == 0)
  {
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018833A8);
    }
    BOOL v18 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134349056;
      double v41 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_INFO,  "SwimStop is unable to get tier2 data!,the last swim time is %{public}f",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018833A8);
    }
    LODWORD(v37[0]) = 134349056;
    *(double *)((char *)v37 + 4) = v10;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  1LL,  "SwimStop is unable to get tier2 data!,the last swim time is %{public}f",  v37,  12);
LABEL_27:
    size_t v21 = (uint8_t *)v19;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLSwimWorkoutStopModel::getCurrentEpoch(const CLWorkoutPredictorInputs &, Epoch &)",  "%s\n",  v19);
    if (v21 != buf) {
      free(v21);
    }
    return 0LL;
  }

  if ((sub_10079897C(v8, v37, v10) & 1) == 0)
  {
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018833A8);
    }
    unint64_t v20 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134349056;
      double v41 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_INFO,  "SwimStop is unable to get activity data!,the last swim time is %{public}f",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018833A8);
    }
    int v28 = 134349056;
    *(double *)char v29 = v10;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  1LL,  "SwimStop is unable to get activity data!,the last swim time is %{public}f",  &v28,  12);
    goto LABEL_27;
  }

  *(void *)&v29[4] = 0LL;
  uint64_t v30 = 0LL;
  uint64_t v31 = 0x80000000800000LL;
  uint64_t v32 = 0LL;
  uint64_t v33 = 0LL;
  uint64_t v34 = 0x80000000800000LL;
  uint64_t v35 = 0x80000000800000LL;
  int v36 = -8388609;
  uint64_t v11 = sub_100798CD4(v9, (uint64_t)&v28, v10);
  if ((v11 & 1) != 0)
  {
    *(void *)(a3 + 8) = v25[1];
    *(void *)(a3 + sub_100BDC958(v1 + 24) = v25[0];
    int v16 = v39;
    float v17 = v38 * 57.296;
    *(float *)(a3 + 36) = *(float *)&v30 * 57.296;
    *(float *)(a3 + 40) = v17;
    *(_DWORD *)(a3 + 44) = v16;
  }

  else
  {
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018833A8);
    }
    __int128 v22 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134349056;
      double v41 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_INFO,  "SwimStop is unable to get turn data!,the last swim time is %{public}f",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_1018833A8);
      }
      int v26 = 134349056;
      double v27 = v10;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  1LL,  "SwimStop is unable to get turn data!,the last swim time is %{public}f",  &v26,  12);
      int v24 = (uint8_t *)v23;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLSwimWorkoutStopModel::getCurrentEpoch(const CLWorkoutPredictorInputs &, Epoch &)",  "%s\n",  v23);
      if (v24 != buf) {
        free(v24);
      }
    }
  }

  return v11;
}

uint64_t sub_100DBDBF4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  int v3 = *(unsigned __int16 *)(result + 42);
  *(_DWORD *)a2 = 0;
  *(_DWORD *)(a2 + 4) = v3;
  *(void *)(a2 + 8) = 0LL;
  *(void *)(a2 + 16) = 0LL;
  if (v3)
  {
    uint64_t v4 = result;
    unint64_t v5 = 0LL;
    int v6 = 0;
    int v7 = 0;
    int v8 = 0;
    uint64_t v9 = (unsigned __int16 *)(result + 40);
    double v10 = -1.79769313e308;
    double v11 = -1.79769313e308;
    do
    {
      uint64_t v12 = *(void *)(sub_100DBDD50(v9, v5) + 8);
      if (v12 != 1) {
        LODWORD(v12) = *(void *)(sub_100DBDD50(v9, v5) + 8) == 2LL;
      }
      v6 += v12;
      *(_DWORD *)(a2 + 8) = v6;
      if (*(void *)(sub_100DBDD50(v9, v5) + 8) == 19LL)
      {
        *(_DWORD *)(a2 + 12) = ++v7;
        double v11 = *(double *)(sub_100DBDD50(v9, v5) + 24);
      }

      __n128 result = sub_100DBDD50(v9, v5);
      if (*(int *)result >= 1)
      {
        __n128 result = sub_100DBDD50(v9, v5);
        if (*(_DWORD *)(result + 32))
        {
          v8 += *(_DWORD *)sub_100DBDD50(v9, v5);
          *(_DWORD *)a2 = v8;
          __n128 result = sub_100DBDD50(v9, v5);
          double v10 = *(double *)(result + 16);
        }
      }

      ++v5;
    }

    while (v5 < *(unsigned __int16 *)(v4 + 42));
    if (v8 <= 0) {
      double v13 = v11;
    }
    else {
      double v13 = v10;
    }
  }

  else
  {
    double v13 = -1.79769313e308;
  }

  *(double *)(a2 + 16) = v13;
  return result;
}

uint64_t sub_100DBDD50(unsigned __int16 *a1, unint64_t a2)
{
  if (*((unsigned int *)a1 + 1) <= a2)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_1018833C8);
    }
    int v7 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      int v8 = *((_DWORD *)a1 + 1);
      *(_DWORD *)std::stringbuf::string_type buf = 134218240;
      unint64_t v17 = a2;
      __int16 v18 = 1024;
      int v19 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "Assertion failed: i < fCapacity, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/CMQueue.h, line 2 33,i,%zu,capacity,%u.",  buf,  0x12u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_1018833C8);
      }
      int v9 = *((_DWORD *)a1 + 1);
      int v12 = 134218240;
      unint64_t v13 = a2;
      __int16 v14 = 1024;
      int v15 = v9;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assertion failed: i < fCapacity, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/CMQueue.h, line 2 33,i,%zu,capacity,%u.",  (size_t)&v12,  18);
      double v11 = (uint8_t *)v10;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "const T &CMQueue<CLSwimWorkoutStopModel::Epoch>::operator[](const size_t) const [T = CLSwimWorkoutStopModel::Epoch]",  "%s\n",  v10);
      if (v11 != buf) {
        free(v11);
      }
    }
  }

  unint64_t v4 = *a1 + a2;
  unint64_t v5 = *((unsigned int *)a1 + 1);
  if (v4 < v5) {
    unint64_t v5 = 0LL;
  }
  return (uint64_t)&a1[24 * (v4 - v5) + 4];
}

BOOL sub_100DBDF4C(uint64_t a1, float *a2)
{
  std::stringbuf::string_type __p = 0LL;
  id v37 = 0LL;
  float v38 = 0LL;
  if (*(unsigned __int16 *)(a1 + 42) < 7u)
  {
    int v19 = 0LL;
    unint64_t v20 = 0LL;
    unsigned int v4 = 0;
  }

  else
  {
    unsigned int v4 = 0;
    unint64_t v5 = 6LL;
    do
    {
      uint64_t v6 = sub_100DBDD50((unsigned __int16 *)(a1 + 40), v5);
      uint64_t v7 = v6;
      int v8 = v37;
      if (v37 >= (float *)v38)
      {
        double v10 = __p;
        uint64_t v11 = v37 - __p;
        unint64_t v12 = v11 + 1;
        uint64_t v13 = v38 - (char *)__p;
        else {
          unint64_t v14 = v12;
        }
        if (v14)
        {
          int v15 = (char *)sub_10000956C((uint64_t)&v38, v14);
          double v10 = __p;
          int v8 = v37;
        }

        else
        {
          int v15 = 0LL;
        }

        int v16 = (float *)&v15[4 * v11];
        *int v16 = *(float *)(v7 + 40);
        int v9 = v16 + 1;
        while (v8 != v10)
        {
          int v17 = *((_DWORD *)v8-- - 1);
          *((_DWORD *)v16-- - 1) = v17;
        }

        std::stringbuf::string_type __p = v16;
        float v38 = &v15[4 * v14];
        if (v10) {
          operator delete(v10);
        }
      }

      else
      {
        *id v37 = *(float *)(v6 + 40);
        int v9 = v37 + 1;
      }

      id v37 = v9;
      sub_100DBDD50((unsigned __int16 *)(a1 + 40), v5);
      int v18 = *(void *)(sub_100DBDD50((unsigned __int16 *)(a1 + 40), v5) + 8) == 19LL
         || *(void *)(sub_100DBDD50((unsigned __int16 *)(a1 + 40), v5) + 8) == 25LL;
      v4 += v18;
      ++v5;
    }

    while (v5 < *(unsigned __int16 *)(a1 + 42));
    int v19 = __p;
    unint64_t v20 = v9;
  }

  double v21 = (float)(unint64_t)(v20 - v19 - 1) * 0.25;
  unint64_t v22 = (unint64_t)v21;
  unint64_t v23 = &v19[(unint64_t)v21];
  if (v23 != v20)
  {
    sub_1002C3C90(v19, v23, v20, *(float *)&v21);
    int v19 = __p;
  }

  float v24 = v19[v22];
  double v25 = (float)(unint64_t)(v37 - v19 - 1) * 0.75;
  unint64_t v26 = (unint64_t)v25;
  double v27 = &v19[(unint64_t)v25];
  if (v27 != v37)
  {
    sub_1002C3C90(v19, v27, v37, *(float *)&v25);
    int v19 = __p;
  }

  v29 = (float)(v19[v26] - v24) >= 20.0 || (float v28 = a2[10], v28 < -30.0) || v28 > 45.0;
  BOOL v30 = 0LL;
  if (!v29)
  {
    float v31 = a2[11];
    if (a2[9] < 10.0 && v31 > 2.0 && v31 < 20.0 && v4 >= 7) {
      BOOL v30 = *(_DWORD *)(a1 + 12) < 36;
    }
  }

  operator delete(v19);
  return v30;
}

void sub_100DBE1F4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_100DBE21C(uint64_t a1, uint64_t a2)
{
  LODWORD(result) = *(_DWORD *)(a2 + 4);
  int v3 = *(_DWORD *)(a1 + 36);
  *(_DWORD *)(a1 + 36) = v3 + 1;
  if (*(int *)a2 >= 4
    && ((*(float *)&double result = (float)SLODWORD(result) * 0.25, *(_DWORD *)(a2 + 12) > (int)*(float *)&result)
      ? (BOOL v4 = v3 <= 1)
      : (BOOL v4 = 1),
        !v4)
    || (v3 <= 22 ? (BOOL v5 = *(_DWORD *)a2 < 16) : (BOOL v5 = 0), !v5))
  {
    *(void *)(a1 + 32) = 0LL;
LABEL_13:
    double result = *(double *)(a2 + 16);
    *(double *)(a1 + sub_100BDC958(v1 + 24) = result;
  }

  return result;
}

BOOL sub_100DBE280(uint64_t a1, void *a2)
{
  LODWORD(v35) = 0;
  *((void *)&v35 + 1) = 26LL;
  __asm { FMOV            V0.2D, #-1.0 }

  __int128 v36 = _Q0;
  double v37 = 0.0;
  double v38 = 0.0;
  sub_100DBE764((unsigned __int16 *)(a1 + 40), &v35);
  if (*(_DWORD *)(a1 + 44) != *(unsigned __int16 *)(a1 + 42))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 0;
    sub_10032E068((unsigned __int16 *)(a1 + 928), buf);
    BOOL result = 0LL;
    *(_BYTE *)(a1 + 912) = 1;
    return result;
  }

  *(_DWORD *)std::stringbuf::string_type buf = sub_100DBDF4C(a1, (float *)&v35);
  sub_10032E068((unsigned __int16 *)(a1 + 928), buf);
  *(_BYTE *)(a1 + 912) = 1;
  else {
    int v8 = 0;
  }
  *(_DWORD *)(a1 + 12) = v8;
  sub_100DBDBF4(a1, (uint64_t)&v31);
  int v10 = v31;
  int v11 = v32;
  int v12 = v33;
  if (v32) {
    BOOL v13 = 1;
  }
  else {
    BOOL v13 = (int)v31 < (int)(float)((float)((float)SHIDWORD(v31) * 0.2) * 2.56);
  }
  if (!v13 || v33 >= (int)(float)((float)SHIDWORD(v31) * 0.75))
  {
    sub_100DBE21C(a1, (uint64_t)&v31);
    goto LABEL_28;
  }

  uint64_t v15 = *(unsigned __int16 *)(a1 + 930);
  if (!*(_WORD *)(a1 + 930)) {
    goto LABEL_24;
  }
  unint64_t v16 = 0LL;
  int v17 = 0;
  do
    v17 += *(_DWORD *)sub_10032DE70((unsigned __int16 *)(a1 + 928), v16++);
  while (v15 != v16);
  if (v17 >= 9)
  {
    *(void *)(a1 + 32) = 0LL;
    goto LABEL_28;
  }

  if (!*(_WORD *)(a1 + 930)
    || !*(_DWORD *)sub_10032DE70((unsigned __int16 *)(a1 + 928), *(unsigned __int16 *)(a1 + 930) - 1LL))
  {
LABEL_24:
    int v18 = *(_DWORD *)(a1 + 32);
    if (v18) {
      int v19 = v18 + 1;
    }
    else {
      int v19 = *(unsigned __int16 *)(a1 + 42);
    }
    *(_DWORD *)(a1 + 32) = v19;
  }

unsigned __int16 *sub_100DBE764(unsigned __int16 *result, __int128 *a2)
{
  unint64_t v2 = *((unsigned int *)result + 1);
  unint64_t v3 = *result + (unint64_t)result[1];
  if (v3 < v2) {
    unint64_t v2 = 0LL;
  }
  BOOL v4 = &result[24 * (v3 - v2)];
  __int128 v6 = *a2;
  __int128 v5 = a2[1];
  *(_OWORD *)(v4 + 20) = a2[2];
  *(_OWORD *)(v4 + 4) = v6;
  *(_OWORD *)(v4 + 12) = v5;
  unsigned int v7 = result[1];
  unint64_t v8 = *((unsigned int *)result + 1);
  if (v8 <= v7)
  {
    unint64_t v9 = *result + 1LL;
    if (v9 < v8) {
      LOWORD(v8) = 0;
    }
    *BOOL result = v9 - v8;
  }

  else
  {
    result[1] = v7 + 1;
  }

  return result;
}

void *sub_100DBE7D4(void *result)
{
  *BOOL result = off_101883370;
  return result;
}

void sub_100DBE7E4(id a1)
{
  qword_101934688 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Workout");
}

void sub_100DBE810(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

void sub_100DBE8E0(id a1)
{
  qword_10199E990 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLCellTilesManagerSilo");
}

uint64_t sub_100DBE994(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100DC1750;
  block[3] = &unk_10181A288;
  void block[4] = a1;
  if (qword_10199E9A0 != -1) {
    dispatch_once(&qword_10199E9A0, block);
  }
  return qword_1019A20B0;
}

uint64_t sub_100DBED08(uint64_t a1, unsigned int a2, uint64_t a3, double a4, double a5, double a6)
{
  unsigned int v57 = a2;
  if (a2 - 3 >= 3)
  {
    sub_101270118();
    __break(1u);
LABEL_50:
    dispatch_once(&qword_101934850, &stru_101883640);
    goto LABEL_17;
  }

  uint64_t v6 = a1;
  if (*(_BYTE *)(a1 + 129))
  {
    sub_1008ACE9C((uint64_t)&v54, &v57);
    std::string::assign(&v56, "");
    uint64_t v12 = sub_100DD9288(v54, (void *)(v6 + 416));
    if (*(_BYTE *)(v6 + 160))
    {
      sub_100C11F48((uint64_t)&v54, a3, a4, a5, *(double *)(v12 + 152), *(double *)(v12 + 160));
      if (sub_1008AD1E0((unsigned int *)&v54))
      {
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101883640);
        }
        BOOL v13 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
        {
          unsigned int v14 = v57;
          uint64_t v15 = sub_100DD8CC8(v57);
          sub_1008AD840((unsigned int *)&v54, (std::stringbuf::string_type *)__p);
          unint64_t v16 = __p[23] >= 0 ? __p : *(_BYTE **)__p;
          int v17 = *(_DWORD *)(v6 + 352);
          *(_DWORD *)std::stringbuf::string_type buf = 67241475;
          *(_DWORD *)__int16 v65 = v14;
          *(_WORD *)&v65[4] = 2082;
          *(void *)&v65[6] = v15;
          *(_WORD *)&v65[14] = 2049;
          *(double *)&v65[16] = a4;
          __int16 v66 = 2049;
          *(double *)BOOL v67 = a5;
          *(_WORD *)&v67[8] = 2081;
          uint64_t v68 = v16;
          __int16 v69 = 1026;
          int v70 = v17;
          _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "TileDl, requestDownload, type, %{public}d, %{public}s, location, %{private}14.8lf, %{private}14.8lf, id, %{p rivate}s, reachbility, %{public}d",  buf,  0x36u);
          if ((__p[23] & 0x80000000) != 0) {
            operator delete(*(void **)__p);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101883640);
          }
          uint64_t v40 = qword_101934858;
          unsigned int v41 = v57;
          uint64_t v42 = sub_100DD8CC8(v57);
          sub_1008AD840((unsigned int *)&v54, &v53);
          if ((v53.__r_.__value_.__s.__size_ & 0x80u) == 0) {
            __int16 v43 = &v53;
          }
          else {
            __int16 v43 = (std::stringbuf::string_type *)v53.__r_.__value_.__r.__words[0];
          }
          int v44 = *(_DWORD *)(v6 + 352);
          *(_DWORD *)std::stringbuf::string_type __p = 67241475;
          *(_DWORD *)&__p[4] = v41;
          *(_WORD *)&__p[8] = 2082;
          *(void *)&__p[10] = v42;
          *(_WORD *)&__p[18] = 2049;
          *(double *)&__p[20] = a4;
          __int16 v59 = 2049;
          *(double *)double v60 = a5;
          *(_WORD *)&v60[8] = 2081;
          __int16 v61 = v43;
          __int16 v62 = 1026;
          int v63 = v44;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v40,  2LL,  "TileDl, requestDownload, type, %{public}d, %{public}s, location, %{private}14.8lf, %{private}14.8lf, id, %{p rivate}s, reachbility, %{public}d",  __p,  54);
          uint64_t v46 = v45;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCellTilesManager::requestDownload(CLTilesManager_Type::TileType, double, double, sec_key_t, CFAbsoluteTime)",  "%s\n",  v46);
        }

        uint64_t v18 = *(void *)(v6 + 376);
        __int128 v50 = v54;
        uint64_t v51 = v55;
        else {
          std::string v52 = v56;
        }
        int v31 = sub_100CEEA48(v18, (uint64_t)&v50, a6);
        int v32 = v31;
        if ((char)v52.__r_.__value_.__s.__size_ < 0)
        {
          operator delete(v52.__r_.__value_.__l.__data_);
          if (!v32)
          {
LABEL_45:
            uint64_t v21 = 1LL;
LABEL_46:
            return v21;
          }
        }

        else if (!v31)
        {
          goto LABEL_45;
        }

        int v33 = (*(uint64_t (**)(void))(**(void **)(v6 + 368) + 40LL))(*(void *)(v6 + 368));
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101883640);
        }
        int v34 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)std::stringbuf::string_type buf = 67240192;
          *(_DWORD *)__int16 v65 = v33;
          _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEFAULT,  "@TileSched, cell, set, %{public}d",  buf,  8u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101883640);
          }
          *(_DWORD *)std::stringbuf::string_type __p = 67240192;
          *(_DWORD *)&__p[4] = v33;
          LODWORD(v49) = 8;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "@TileSched, cell, set, %{public}d",  __p,  v49,  v50,  v51);
          int v48 = (uint8_t *)v47;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCellTilesManager::requestDownload(CLTilesManager_Type::TileType, double, double, sec_key_t, CFAbsoluteTime)",  "%s\n",  v47);
          if (v48 != buf) {
            free(v48);
          }
        }

        goto LABEL_45;
      }

      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101883640);
      }
      int v30 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 134284545;
        *(double *)__int16 v65 = a4;
        *(_WORD *)&v65[8] = 2049;
        *(double *)&v65[10] = a5;
        *(_WORD *)&v65[18] = 1024;
        *(_DWORD *)&v65[20] = v54;
        __int16 v66 = 1024;
        *(_DWORD *)BOOL v67 = DWORD1(v54);
        *(_WORD *)&v67[4] = 1024;
        *(_DWORD *)&v67[6] = DWORD2(v54);
        _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEFAULT,  "@TileError, RequestID, ll, %{private}.3lf, %{private}.3lf, tid, %d, %d, %d",  buf,  0x28u);
      }

      if (!sub_1002921D0(115, 2))
      {
LABEL_34:
        uint64_t v21 = 0LL;
        goto LABEL_46;
      }

      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101883640);
      }
      *(_DWORD *)std::stringbuf::string_type __p = 134284545;
      *(double *)&__p[4] = a4;
      *(_WORD *)&_BYTE __p[12] = 2049;
      *(double *)&__p[14] = a5;
      *(_WORD *)&__p[22] = 1024;
      *(_DWORD *)&__p[24] = v54;
      __int16 v59 = 1024;
      *(_DWORD *)double v60 = DWORD1(v54);
      *(_WORD *)&v60[4] = 1024;
      *(_DWORD *)&v60[6] = DWORD2(v54);
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "@TileError, RequestID, ll, %{private}.3lf, %{private}.3lf, tid, %d, %d, %d",  __p,  40);
      double v29 = (uint8_t *)v39;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCellTilesManager::requestDownload(CLTilesManager_Type::TileType, double, double, sec_key_t, CFAbsoluteTime)",  "%s\n",  v39);
    }

    else
    {
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101883640);
      }
      uint64_t v22 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_INFO))
      {
        unsigned int v23 = v57;
        int v24 = sub_100DD8CC8(v57);
        *(_DWORD *)std::stringbuf::string_type buf = 67240451;
        *(_DWORD *)__int16 v65 = v23;
        *(_WORD *)&v65[4] = 2081;
        *(void *)&v65[6] = v24;
        _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_INFO,  "@TileDl, requestDownload, type, %{public}d, %{private}s, not active",  buf,  0x12u);
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_34;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101883640);
      }
      uint64_t v25 = qword_101934858;
      unsigned int v26 = v57;
      double v27 = sub_100DD8CC8(v57);
      *(_DWORD *)std::stringbuf::string_type __p = 67240451;
      *(_DWORD *)&__p[4] = v26;
      *(_WORD *)&__p[8] = 2081;
      *(void *)&__p[10] = v27;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v25,  1LL,  "@TileDl, requestDownload, type, %{public}d, %{private}s, not active",  __p,  18);
      double v29 = (uint8_t *)v28;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCellTilesManager::requestDownload(CLTilesManager_Type::TileType, double, double, sec_key_t, CFAbsoluteTime)",  "%s\n",  v28);
    }

    if (v29 != buf) {
      free(v29);
    }
    goto LABEL_34;
  }

  p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
  if (qword_101934850 != -1) {
    goto LABEL_50;
  }
LABEL_17:
  int v19 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    int v20 = *(unsigned __int8 *)(v6 + 128);
    *(_DWORD *)std::stringbuf::string_type buf = 67240192;
    *(_DWORD *)__int16 v65 = v20;
    _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEBUG,  "TileDl, ignore before first unlock, fDataProtectionEnabled, %{public}d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    int v36 = *(unsigned __int8 *)(v6 + 128);
    *(_DWORD *)std::stringbuf::string_type __p = 67240192;
    *(_DWORD *)&__p[4] = v36;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "TileDl, ignore before first unlock, fDataProtectionEnabled, %{public}d",  __p,  8);
    double v38 = (uint8_t *)v37;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCellTilesManager::requestDownload(CLTilesManager_Type::TileType, double, double, sec_key_t, CFAbsoluteTime)",  "%s\n",  v37);
    if (v38 != buf) {
      free(v38);
    }
  }

  return 0LL;
}

void sub_100DBF6A0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, void *__p, uint64_t a27, int a28, __int16 a29, char a30, char a31)
{
  if (a31 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100DBF710(uint64_t a1, void *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v7 = sub_100DC0380(a1, "CLCellTilesManager", a2);
  *(void *)uint64_t v7 = off_101883418;
  *(void *)(v7 + 112) = &off_101883500;
  *(void *)(v7 + 120) = 0LL;
  *(_WORD *)(v7 + 128) = 1;
  *(_OWORD *)(v7 + 136) = xmmword_101350110;
  unint64_t v8 = (uint64_t *)(v7 + 136);
  *(void *)(v7 + 152) = 0x40C5180000000000LL;
  unint64_t v9 = (uint64_t *)(v7 + 152);
  *(void *)(v7 + 168) = 0LL;
  *(_DWORD *)(v7 + 176) = 0xFFFF;
  *(void *)(v7 + 188) = 0LL;
  *(void *)(v7 + 180) = 0LL;
  *(_OWORD *)(v7 + 196) = xmmword_1012E0070;
  __asm { FMOV            V0.2D, #-1.0 }

  *(_OWORD *)(v7 + 212) = _Q0;
  *(_OWORD *)(v7 + 228) = _Q0;
  *(_OWORD *)(v7 + 244) = _Q0;
  *(_DWORD *)(v7 + 260) = 0;
  *(void *)(v7 + 272) = 0LL;
  *(void *)(v7 + 280) = 0LL;
  *(void *)(v7 + 264) = 0xBFF0000000000000LL;
  *(_DWORD *)(v7 + 288) = 0;
  *(void *)(v7 + 292) = 0xBFF0000000000000LL;
  *(_DWORD *)(v7 + 300) = 0x7FFFFFFF;
  *(void *)(v7 + 312) = 0LL;
  *(void *)(v7 + 320) = 0LL;
  *(void *)(v7 + 304) = 0LL;
  *(_BYTE *)(v7 + 328) = 0;
  *(void *)(v7 + 350) = 0LL;
  *(void *)(v7 + 336) = 0LL;
  *(void *)(v7 + 344) = 0LL;
  *(_DWORD *)(v7 + 364) = 100;
  uint64_t v15 = *a3;
  *a3 = 0LL;
  unint64_t v16 = (uint64_t *)(v7 + 376);
  *(void *)(a1 + 368) = v15;
  *(void *)(a1 + 376) = 0LL;
  uint64_t v64 = v7 + 384;
  sub_100CFCAE4((void *)(v7 + 384));
  uint64_t v63 = a1 + 392;
  sub_100BD82E0((void *)(a1 + 392), *(void *)(a1 + 40));
  sub_100E79F28(a1 + 416);
  *(_BYTE *)(a1 + 440) = 0;
  sub_1002F0B04(&buf);
  sub_1002A82BC(buf, "MaxTileAge", v8);
  int v17 = (std::__shared_weak_count *)*((void *)&buf + 1);
  if (*((void *)&buf + 1))
  {
    uint64_t v18 = (unint64_t *)(*((void *)&buf + 1) + 8LL);
    do
      unint64_t v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101883660);
  }
  int v20 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v21 = *v8;
    LODWORD(buf) = 134217984;
    *(void *)((char *)&buf + 4) = v21;
    _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEBUG,  "TILE: fMaxTileSecurityAge, %.1lf",  (uint8_t *)&buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101883660);
    }
    uint64_t v49 = *v8;
    *(_DWORD *)__int16 v65 = 134217984;
    *(void *)&v65[4] = v49;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "TILE: fMaxTileSecurityAge, %.1lf",  COERCE_DOUBLE(v65));
    uint64_t v51 = (__int128 *)v50;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLCellTilesManager::CLCellTilesManager(id<CLIntersiloUniverse>, std::unique_ptr<CLICellTilesManagerExternal>, std: :optional<CLTilesSetCollection>)",  "%s\n",  v50);
    if (v51 != &buf) {
      free(v51);
    }
  }

  sub_1002F0B04(&buf);
  uint64_t v22 = (uint64_t *)(a1 + 144);
  sub_1002A82BC(buf, "AncientTilesThreshold", (void *)(a1 + 144));
  unsigned int v23 = (std::__shared_weak_count *)*((void *)&buf + 1);
  if (*((void *)&buf + 1))
  {
    int v24 = (unint64_t *)(*((void *)&buf + 1) + 8LL);
    do
      unint64_t v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101883660);
  }
  unsigned int v26 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v27 = *v22;
    LODWORD(buf) = 134217984;
    *(void *)((char *)&buf + 4) = v27;
    _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEBUG,  "TILE: fMaxTileDataAge, %.1lf",  (uint8_t *)&buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101883660);
    }
    uint64_t v52 = *v22;
    *(_DWORD *)__int16 v65 = 134217984;
    *(void *)&v65[4] = v52;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "TILE: fMaxTileDataAge, %.1lf",  COERCE_DOUBLE(v65));
    __int128 v54 = (__int128 *)v53;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLCellTilesManager::CLCellTilesManager(id<CLIntersiloUniverse>, std::unique_ptr<CLICellTilesManagerExternal>, std: :optional<CLTilesSetCollection>)",  "%s\n",  v53);
    if (v54 != &buf) {
      free(v54);
    }
  }

  sub_1002F0B04(&buf);
  sub_1002A82BC(buf, "EncryptionGracePeriod", v9);
  float v28 = (std::__shared_weak_count *)*((void *)&buf + 1);
  if (*((void *)&buf + 1))
  {
    double v29 = (unint64_t *)(*((void *)&buf + 1) + 8LL);
    do
      unint64_t v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101883660);
  }
  int v31 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v32 = *v9;
    LODWORD(buf) = 134217984;
    *(void *)((char *)&buf + 4) = v32;
    _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEBUG,  "TILE: fEncryptionGracePeriod, %.1lf",  (uint8_t *)&buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101883660);
    }
    uint64_t v55 = *v9;
    *(_DWORD *)__int16 v65 = 134217984;
    *(void *)&v65[4] = v55;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "TILE: fEncryptionGracePeriod, %.1lf",  COERCE_DOUBLE(v65));
    unsigned int v57 = (__int128 *)v56;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLCellTilesManager::CLCellTilesManager(id<CLIntersiloUniverse>, std::unique_ptr<CLICellTilesManagerExternal>, std: :optional<CLTilesSetCollection>)",  "%s\n",  v56);
    if (v57 != &buf) {
      free(v57);
    }
  }

  *(_BYTE *)(a1 + 160) = (*(uint64_t (**)(void))(**(void **)(a1 + 368) + 32LL))(*(void *)(a1 + 368));
  int v33 = (unsigned __int8 *)(a1 + 160);
  sub_1002F0B04(&buf);
  sub_1002A6F64(buf, "CellTilesActive", (BOOL *)(a1 + 160));
  int v34 = (std::__shared_weak_count *)*((void *)&buf + 1);
  if (*((void *)&buf + 1))
  {
    __int128 v35 = (unint64_t *)(*((void *)&buf + 1) + 8LL);
    do
      unint64_t v36 = __ldaxr(v35);
    while (__stlxr(v36 - 1, v35));
    if (!v36)
    {
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
    }
  }

  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101883640);
  }
  double v37 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    int v38 = *v33;
    LODWORD(buf) = 67240192;
    DWORD1(buf) = v38;
    _os_log_impl( (void *)&_mh_execute_header,  v37,  OS_LOG_TYPE_DEBUG,  "TileCell, isActive, %{public}d",  (uint8_t *)&buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    int v58 = *v33;
    *(_DWORD *)__int16 v65 = 67240192;
    *(_DWORD *)&v65[4] = v58;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "TileCell, isActive, %{public}d",  v65,  8,  v63,  v64);
    double v60 = (__int128 *)v59;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLCellTilesManager::CLCellTilesManager(id<CLIntersiloUniverse>, std::unique_ptr<CLICellTilesManagerExternal>, std: :optional<CLTilesSetCollection>)",  "%s\n",  v59);
    if (v60 != &buf) {
      free(v60);
    }
  }

  if (*(_BYTE *)(a4 + 24))
  {
    sub_100E79F2C((__int128 *)(a1 + 416), (__int128 *)a4);
  }

  else
  {
    sub_100DC041C(&buf);
    sub_100E79F2C((__int128 *)(a1 + 416), &buf);
    *(void *)__int16 v65 = &buf;
    sub_1009708B4((void ***)v65);
  }

  sub_1002F0B04(&buf);
  sub_1002A82BC(buf, "MTimeModificationPeriod", &qword_101991110);
  int v39 = (std::__shared_weak_count *)*((void *)&buf + 1);
  if (*((void *)&buf + 1))
  {
    uint64_t v40 = (unint64_t *)(*((void *)&buf + 1) + 8LL);
    do
      unint64_t v41 = __ldaxr(v40);
    while (__stlxr(v41 - 1, v40));
    if (!v41)
    {
      ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
      std::__shared_weak_count::__release_weak(v39);
    }
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101883660);
  }
  uint64_t v42 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    LODWORD(buf) = 134217984;
    *(void *)((char *)&buf + 4) = qword_101991110;
    _os_log_impl( (void *)&_mh_execute_header,  v42,  OS_LOG_TYPE_DEBUG,  "TILE: MTimeModificationPeriod, %.1lf",  (uint8_t *)&buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101883660);
    }
    *(_DWORD *)__int16 v65 = 134217984;
    *(void *)&v65[4] = qword_101991110;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "TILE: MTimeModificationPeriod, %.1lf",  COERCE_DOUBLE(v65));
    __int16 v62 = (__int128 *)v61;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLCellTilesManager::CLCellTilesManager(id<CLIntersiloUniverse>, std::unique_ptr<CLICellTilesManagerExternal>, std: :optional<CLTilesSetCollection>)",  "%s\n",  v61);
    if (v62 != &buf) {
      free(v62);
    }
  }

  __int16 v43 = operator new(0x38uLL);
  sub_1010DDBC0(&buf, "ExpiredLocationTimer");
  sub_1006B5FBC(v43, &buf, sub_100DC131C, a1, *(void *)(a1 + 40), 1LL, 1.79769313e308, 1.79769313e308, 0.9);
  *(void *)(a1 + 168) = v43;
  if (SHIBYTE(v67) < 0) {
    operator delete((void *)buf);
  }
  if (_os_feature_enabled_impl("CoreLocation", "TilesService"))
  {
    int v44 = operator new(0x78uLL);
    sub_100E74504(v44, *(void *)(a1 + 40), sub_100DC14EC, a1);
  }

  else
  {
    int v44 = operator new(0x70uLL);
    sub_1002B5C60((uint64_t)v44, *(void *)(a1 + 40), (uint64_t)sub_100DC14EC, a1);
  }

  uint64_t v45 = *(void *)(a1 + 120);
  *(void *)(a1 + 120) = v44;
  if (v45) {
    (*(void (**)(uint64_t))(*(void *)v45 + 8LL))(v45);
  }
  uint64_t v46 = (uint64_t)operator new(0x88uLL);
  *(void *)&__int128 buf = 0x100000002LL;
  DWORD2(buf) = 1;
  WORD6(buf) = 256;
  uint64_t v67 = 0x6400000001LL;
  __int128 v68 = xmmword_1013417C0;
  int v69 = 1056964608;
  char v70 = 1;
  sub_100CEEA44(v46, &buf, v64, a1 + 416, v63);
  uint64_t v47 = *v16;
  *unint64_t v16 = v46;
  if (v47)
  {
    sub_100970954((uint64_t)v16, v47);
    uint64_t v46 = *v16;
  }

  sub_100CF41FC(v46, *(_BYTE *)(a1 + 128));
  return a1;
}

void sub_100DC0274( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  uint64_t v23 = *v21;
  *uint64_t v21 = 0LL;
  if (v23) {
    sub_100970954((uint64_t)v21, v23);
  }
  uint64_t v24 = *(void *)(v20 + 368);
  *(void *)(v20 + 368) = 0LL;
  if (v24) {
    (*(void (**)(uint64_t))(*(void *)v24 + 8LL))(v24);
  }
  uint64_t v25 = *(void *)(v20 + 120);
  *(void *)(v20 + 120) = 0LL;
  if (v25) {
    (*(void (**)(uint64_t))(*(void *)v25 + 8LL))(v25);
  }
  sub_100DC154C(v20);
  _Unwind_Resume(a1);
}

uint64_t sub_100DC0380(uint64_t a1, char *a2, void *a3)
{
  *(void *)a1 = off_1018836B0;
  sub_1010DDBC0((void *)(a1 + 8), a2);
  *(void *)(a1 + 32) = a3;
  *(void *)(a1 + 40) = [a3 silo];
  *(void *)(a1 + 48) = 0LL;
  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + 56) = a1 + 64;
  *(void *)(a1 + 88) = 0LL;
  *(void *)(a1 + 96) = 0LL;
  *(void *)(a1 + 72) = 0LL;
  *(void *)(a1 + 80) = a1 + 88;
  *(_DWORD *)(a1 + 104) = 0;
  *(_BYTE *)(a1 + 108) = 0;
  return a1;
}

void sub_100DC0400(_Unwind_Exception *exception_object)
{
}

void sub_100DC041C(void *a1@<X8>)
{
  if (byte_10199E9D0[23] < 0) {
    sub_1010DD48C(&__dst, *(void **)byte_10199E9D0, *(unint64_t *)&byte_10199E9D0[8]);
  }
  else {
    std::string __dst = *(std::string *)byte_10199E9D0;
  }
  sub_1002F0B04(buf);
  BOOL v2 = sub_1002A8560(*(uint64_t *)buf, "CellTilesServerUrl", &__dst);
  unint64_t v3 = *(std::__shared_weak_count **)&buf[8];
  if (*(void *)&buf[8])
  {
    BOOL v4 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      unint64_t v5 = __ldaxr(v4);
    while (__stlxr(v5 - 1, v4));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }

  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101883640);
  }
  uint64_t v6 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    p_dst = &__dst;
    if ((__dst.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      p_dst = (std::string *)__dst.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)__int128 buf = 136380931;
    *(void *)&uint8_t buf[4] = p_dst;
    *(_WORD *)&_BYTE buf[12] = 1026;
    *(_DWORD *)&_BYTE buf[14] = v2;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "TILE: defaultCellTilesServerUrl, %{private}s, overridden, %{public}d",  buf,  0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    __int128 v68 = &__dst;
    if ((__dst.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      __int128 v68 = (std::string *)__dst.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)double v88 = 136380931;
    *(void *)&v88[4] = v68;
    __int16 v89 = 1026;
    BOOL v90 = v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "TILE: defaultCellTilesServerUrl, %{private}s, overridden, %{public}d",  v88,  18);
    char v70 = (uint8_t *)v69;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLTilesSetCollection CLCellTilesManager::initializeProductionTilesSetCollection()",  "%s\n",  v69);
    if (v70 != buf) {
      free(v70);
    }
  }

  if ((__dst.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    size_t size = __dst.__r_.__value_.__s.__size_;
  }
  else {
    size_t size = __dst.__r_.__value_.__l.__size_;
  }
  unint64_t v9 = v88;
  sub_1000392EC((uint64_t)v88, size + 5);
  if (v91 < 0) {
    unint64_t v9 = *(_BYTE **)v88;
  }
  if (size)
  {
    if ((__dst.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      int v10 = &__dst;
    }
    else {
      int v10 = (std::string *)__dst.__r_.__value_.__r.__words[0];
    }
    memmove(v9, v10, size);
  }

  strcpy(&v9[size], "/3/v1");
  if ((__dst.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    size_t v11 = __dst.__r_.__value_.__s.__size_;
  }
  else {
    size_t v11 = __dst.__r_.__value_.__l.__size_;
  }
  uint64_t v12 = v81;
  sub_1000392EC((uint64_t)v81, v11 + 5);
  if (v82 < 0) {
    uint64_t v12 = (void **)v81[0];
  }
  if (v11)
  {
    if ((__dst.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      BOOL v13 = &__dst;
    }
    else {
      BOOL v13 = (std::string *)__dst.__r_.__value_.__r.__words[0];
    }
    memmove(v12, v13, v11);
  }

  strcpy((char *)v12 + v11, "/4/v1");
  if ((__dst.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    size_t v14 = __dst.__r_.__value_.__s.__size_;
  }
  else {
    size_t v14 = __dst.__r_.__value_.__l.__size_;
  }
  uint64_t v15 = v79;
  sub_1000392EC((uint64_t)v79, v14 + 5);
  if (v80 < 0) {
    uint64_t v15 = (void **)v79[0];
  }
  if (v14)
  {
    if ((__dst.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      unint64_t v16 = &__dst;
    }
    else {
      unint64_t v16 = (std::string *)__dst.__r_.__value_.__r.__words[0];
    }
    memmove(v15, v16, v14);
  }

  strcpy((char *)v15 + v14, "/5/v1");
  sub_100E79F28(a1);
  sub_100DC1830();
  if (byte_10199E9BF >= 0) {
    int v17 = (const char *)&qword_10199E9A8;
  }
  else {
    int v17 = (const char *)qword_10199E9A8;
  }
  int v18 = mkdir(v17, 0x1C0u);
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101883660);
  }
  unint64_t v19 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    sub_100DC1830();
    if (byte_10199E9BF >= 0) {
      uint64_t v20 = &qword_10199E9A8;
    }
    else {
      uint64_t v20 = (uint64_t *)qword_10199E9A8;
    }
    *(_DWORD *)__int128 buf = 136315394;
    *(void *)&uint8_t buf[4] = v20;
    *(_WORD *)&_BYTE buf[12] = 1024;
    *(_DWORD *)&_BYTE buf[14] = v18;
    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEBUG, "TILE: mkdir, %s, ret, %d", buf, 0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101883660);
    }
    uint64_t v71 = qword_101934A78;
    sub_100DC1830();
    if (byte_10199E9BF >= 0) {
      int v72 = &qword_10199E9A8;
    }
    else {
      int v72 = (uint64_t *)qword_10199E9A8;
    }
    *(_DWORD *)std::stringbuf::string_type __p = 136315394;
    *(void *)&__p[4] = v72;
    __int16 v85 = 1024;
    int v86 = v18;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v71,  2LL,  "TILE: mkdir, %s, ret, %d",  __p,  18);
    uint64_t v74 = (uint8_t *)v73;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLTilesSetCollection CLCellTilesManager::initializeProductionTilesSetCollection()",  "%s\n",  v73);
    if (v74 != buf) {
      free(v74);
    }
  }

  uint64_t v21 = (char *)operator new(0x138uLL);
  sub_100DC1830();
  if (byte_10199E9BF >= 0) {
    size_t v22 = byte_10199E9BF;
  }
  else {
    size_t v22 = qword_10199E9B0;
  }
  uint64_t v23 = buf;
  sub_1000392EC((uint64_t)buf, v22 + 4);
  if ((buf[23] & 0x80u) != 0) {
    uint64_t v23 = *(uint8_t **)buf;
  }
  if (v22)
  {
    if (byte_10199E9BF >= 0) {
      uint64_t v24 = &qword_10199E9A8;
    }
    else {
      uint64_t v24 = (uint64_t *)qword_10199E9A8;
    }
    memmove(v23, v24, v22);
  }

  strcpy((char *)&v23[v22], "/gsm");
  sub_1010DDBC0(__p, "CLGsmTileServer");
  sub_100E79D6C(v21, 3LL, buf, v88, __p);
  if (v87 < 0) {
    operator delete(*(void **)__p);
  }
  v21[80] = v2;
  __asm { FMOV            V0.2D, #2.0 }

  __int128 v75 = _Q0;
  *(_OWORD *)(v21 + 152) = _Q0;
  *((void *)v21 + 21) = 0x1000000010000LL;
  v21[176] = 1;
  unint64_t v30 = (char *)operator new(0x68uLL);
  sub_1010DDBC0(buf, "gsm-known");
  *(void *)unint64_t v30 = off_101883790;
  int v31 = v30 + 8;
  if ((char)buf[23] < 0)
  {
    sub_1010DD48C(v31, *(void **)buf, *(unint64_t *)&buf[8]);
    BOOL v32 = (buf[23] & 0x80u) != 0;
  }

  else
  {
    BOOL v32 = 0;
    *(_OWORD *)int v31 = *(_OWORD *)buf;
    *((void *)v30 + 3) = *(void *)&buf[16];
  }

  *((void *)v30 + 11) = 0LL;
  *((void *)v30 + 4) = 20LL;
  v30[40] = 1;
  *((void *)v30 + 8) = 0LL;
  *((void *)v30 + 6) = 0x40C5180000000000LL;
  *((void *)v30 + 7) = v30 + 64;
  *((void *)v30 + 12) = 0LL;
  *((void *)v30 + 9) = 0LL;
  *((void *)v30 + 10) = v30 + 88;
  if (v32) {
    operator delete(*(void **)buf);
  }
  uint64_t v33 = *((void *)v21 + 37);
  *((void *)v21 + 37) = v30;
  if (v33) {
    (*(void (**)(uint64_t))(*(void *)v33 + 8LL))(v33);
  }
  int v34 = (char *)operator new(0x68uLL);
  sub_1010DDBC0(buf, "gsm-unknown");
  *(void *)int v34 = off_101883790;
  __int128 v35 = v34 + 8;
  if ((char)buf[23] < 0)
  {
    sub_1010DD48C(v35, *(void **)buf, *(unint64_t *)&buf[8]);
    BOOL v36 = (buf[23] & 0x80u) != 0;
  }

  else
  {
    BOOL v36 = 0;
    *(_OWORD *)__int128 v35 = *(_OWORD *)buf;
    *((void *)v34 + 3) = *(void *)&buf[16];
  }

  *((void *)v34 + 11) = 0LL;
  *((void *)v34 + 4) = 20LL;
  v34[40] = 1;
  *((void *)v34 + 8) = 0LL;
  *((void *)v34 + 6) = 0x40C5180000000000LL;
  *((void *)v34 + 7) = v34 + 64;
  *((void *)v34 + 12) = 0LL;
  *((void *)v34 + 9) = 0LL;
  *((void *)v34 + 10) = v34 + 88;
  if (v36) {
    operator delete(*(void **)buf);
  }
  uint64_t v37 = *((void *)v21 + 38);
  *((void *)v21 + 38) = v34;
  if (v37) {
    (*(void (**)(uint64_t))(*(void *)v37 + 8LL))(v37);
  }
  uint64_t v78 = (uint64_t)v21;
  sub_100E7A284(a1, 3u, &v78);
  uint64_t v38 = v78;
  uint64_t v78 = 0LL;
  if (v38)
  {
    int v39 = (void *)sub_100970994(v38);
    operator delete(v39);
  }

  uint64_t v40 = (char *)operator new(0x138uLL);
  sub_100DC1830();
  if (byte_10199E9BF >= 0) {
    size_t v41 = byte_10199E9BF;
  }
  else {
    size_t v41 = qword_10199E9B0;
  }
  uint64_t v42 = buf;
  sub_1000392EC((uint64_t)buf, v41 + 5);
  if ((buf[23] & 0x80u) != 0) {
    uint64_t v42 = *(uint8_t **)buf;
  }
  if (v41)
  {
    if (byte_10199E9BF >= 0) {
      __int16 v43 = &qword_10199E9A8;
    }
    else {
      __int16 v43 = (uint64_t *)qword_10199E9A8;
    }
    memmove(v42, v43, v41);
  }

  strcpy((char *)&v42[v41], "/cdma");
  sub_1010DDBC0(__p, "CLCdmaTileServer");
  sub_100E79D6C(v40, 5LL, buf, v79, __p);
  if (v87 < 0) {
    operator delete(*(void **)__p);
  }
  v40[80] = v2;
  *(_OWORD *)(v40 + 152) = v75;
  *((void *)v40 + 21) = 0x1000000010000LL;
  v40[176] = 1;
  int v44 = (char *)operator new(0x68uLL);
  sub_1010DDBC0(buf, "cdma-known");
  *(void *)int v44 = off_101883790;
  uint64_t v45 = v44 + 8;
  if ((char)buf[23] < 0)
  {
    sub_1010DD48C(v45, *(void **)buf, *(unint64_t *)&buf[8]);
    BOOL v46 = (buf[23] & 0x80u) != 0;
  }

  else
  {
    BOOL v46 = 0;
    *(_OWORD *)uint64_t v45 = *(_OWORD *)buf;
    *((void *)v44 + 3) = *(void *)&buf[16];
  }

  *((void *)v44 + 11) = 0LL;
  *((void *)v44 + 4) = 20LL;
  v44[40] = 1;
  *((void *)v44 + 8) = 0LL;
  *((void *)v44 + 6) = 0x40C5180000000000LL;
  *((void *)v44 + 7) = v44 + 64;
  *((void *)v44 + 12) = 0LL;
  *((void *)v44 + 9) = 0LL;
  *((void *)v44 + 10) = v44 + 88;
  if (v46) {
    operator delete(*(void **)buf);
  }
  uint64_t v47 = *((void *)v40 + 37);
  *((void *)v40 + 37) = v44;
  if (v47) {
    (*(void (**)(uint64_t))(*(void *)v47 + 8LL))(v47);
  }
  int v48 = (char *)operator new(0x68uLL);
  sub_1010DDBC0(buf, "cdma-unknown");
  *(void *)int v48 = off_101883790;
  uint64_t v49 = v48 + 8;
  if ((char)buf[23] < 0)
  {
    sub_1010DD48C(v49, *(void **)buf, *(unint64_t *)&buf[8]);
    BOOL v50 = (buf[23] & 0x80u) != 0;
  }

  else
  {
    BOOL v50 = 0;
    *(_OWORD *)uint64_t v49 = *(_OWORD *)buf;
    *((void *)v48 + 3) = *(void *)&buf[16];
  }

  *((void *)v48 + 11) = 0LL;
  *((void *)v48 + 4) = 20LL;
  v48[40] = 1;
  *((void *)v48 + 8) = 0LL;
  *((void *)v48 + 6) = 0x40C5180000000000LL;
  *((void *)v48 + 7) = v48 + 64;
  *((void *)v48 + 12) = 0LL;
  *((void *)v48 + 9) = 0LL;
  *((void *)v48 + 10) = v48 + 88;
  if (v50) {
    operator delete(*(void **)buf);
  }
  uint64_t v51 = *((void *)v40 + 38);
  *((void *)v40 + 38) = v48;
  if (v51) {
    (*(void (**)(uint64_t))(*(void *)v51 + 8LL))(v51);
  }
  uint64_t v77 = (uint64_t)v40;
  sub_100E7A284(a1, 5u, &v77);
  uint64_t v52 = v77;
  uint64_t v77 = 0LL;
  if (v52)
  {
    std::stringbuf::string_type v53 = (void *)sub_100970994(v52);
    operator delete(v53);
  }

  __int128 v54 = (char *)operator new(0x138uLL);
  sub_100DC1830();
  if (byte_10199E9BF >= 0) {
    size_t v55 = byte_10199E9BF;
  }
  else {
    size_t v55 = qword_10199E9B0;
  }
  std::string v56 = buf;
  sub_1000392EC((uint64_t)buf, v55 + 4);
  if ((buf[23] & 0x80u) != 0) {
    std::string v56 = *(uint8_t **)buf;
  }
  if (v55)
  {
    if (byte_10199E9BF >= 0) {
      unsigned int v57 = &qword_10199E9A8;
    }
    else {
      unsigned int v57 = (uint64_t *)qword_10199E9A8;
    }
    memmove(v56, v57, v55);
  }

  strcpy((char *)&v56[v55], "/lte");
  sub_1010DDBC0(__p, "CLLteTileServer");
  sub_100E79D6C(v54, 4LL, buf, v81, __p);
  if (v87 < 0) {
    operator delete(*(void **)__p);
  }
  v54[80] = v2;
  *(_OWORD *)(v54 + 152) = v75;
  *((void *)v54 + 21) = 0x1000000010000LL;
  v54[176] = 1;
  int v58 = (char *)operator new(0x68uLL);
  sub_1010DDBC0(buf, "lte-known");
  *(void *)int v58 = off_101883790;
  __int16 v59 = v58 + 8;
  if ((char)buf[23] < 0)
  {
    sub_1010DD48C(v59, *(void **)buf, *(unint64_t *)&buf[8]);
    BOOL v60 = (buf[23] & 0x80u) != 0;
  }

  else
  {
    BOOL v60 = 0;
    *(_OWORD *)__int16 v59 = *(_OWORD *)buf;
    *((void *)v58 + 3) = *(void *)&buf[16];
  }

  *((void *)v58 + 11) = 0LL;
  *((void *)v58 + 4) = 20LL;
  v58[40] = 1;
  *((void *)v58 + 8) = 0LL;
  *((void *)v58 + 6) = 0x40C5180000000000LL;
  *((void *)v58 + 7) = v58 + 64;
  *((void *)v58 + 12) = 0LL;
  *((void *)v58 + 9) = 0LL;
  *((void *)v58 + 10) = v58 + 88;
  if (v60) {
    operator delete(*(void **)buf);
  }
  uint64_t v61 = *((void *)v54 + 37);
  *((void *)v54 + 37) = v58;
  if (v61) {
    (*(void (**)(uint64_t))(*(void *)v61 + 8LL))(v61);
  }
  __int16 v62 = (char *)operator new(0x68uLL);
  sub_1010DDBC0(buf, "lte-unknown");
  *(void *)__int16 v62 = off_101883790;
  uint64_t v63 = v62 + 8;
  if ((char)buf[23] < 0)
  {
    sub_1010DD48C(v63, *(void **)buf, *(unint64_t *)&buf[8]);
    BOOL v64 = (buf[23] & 0x80u) != 0;
  }

  else
  {
    BOOL v64 = 0;
    *(_OWORD *)uint64_t v63 = *(_OWORD *)buf;
    *((void *)v62 + 3) = *(void *)&buf[16];
  }

  *((void *)v62 + 11) = 0LL;
  *((void *)v62 + 4) = 20LL;
  v62[40] = 1;
  *((void *)v62 + 8) = 0LL;
  *((void *)v62 + 6) = 0x40C5180000000000LL;
  *((void *)v62 + 7) = v62 + 64;
  *((void *)v62 + 12) = 0LL;
  *((void *)v62 + 9) = 0LL;
  *((void *)v62 + 10) = v62 + 88;
  if (v64) {
    operator delete(*(void **)buf);
  }
  uint64_t v65 = *((void *)v54 + 38);
  *((void *)v54 + 38) = v62;
  if (v65) {
    (*(void (**)(uint64_t))(*(void *)v65 + 8LL))(v65);
  }
  uint64_t v76 = (uint64_t)v54;
  sub_100E7A284(a1, 4u, &v76);
  uint64_t v66 = v76;
  uint64_t v76 = 0LL;
  if (v66)
  {
    uint64_t v67 = (void *)sub_100970994(v66);
    operator delete(v67);
  }

  if (v80 < 0) {
    operator delete(v79[0]);
  }
  if (v82 < 0) {
    operator delete(v81[0]);
  }
  if (v91 < 0) {
    operator delete(*(void **)v88);
  }
}

void sub_100DC1174( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20, char a21, char a22, void *a23, uint64_t a24, int a25, __int16 a26, char a27, char a28, void *a29, uint64_t a30, int a31, __int16 a32, char a33, char a34, uint64_t a35, void *a36, uint64_t a37, int a38, __int16 a39, char a40, char a41, uint64_t a42, void *a43, uint64_t a44, int a45, __int16 a46, char a47, char a48, uint64_t a49, void *a50,uint64_t a51,int a52,__int16 a53,char a54,char a55)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a48 < 0) {
    operator delete(a43);
  }
  if (a34 < 0) {
    operator delete(a29);
  }
  _Unwind_Resume(a1);
}

void sub_100DC131C(uint64_t a1, uint64_t a2)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101883620);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v7 = 1;
    BOOL v4 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLCellTilesManager::onTimerFired",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v4, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101883620);
    }
    unint64_t v5 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)__int128 buf = 68289538;
      int v9 = 0;
      __int16 v10 = 2082;
      size_t v11 = "";
      __int16 v12 = 2082;
      BOOL v13 = "activity";
      __int16 v14 = 2050;
      uint64_t v15 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLCellTilesManager::onTimerFired, event:%{public, location:escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v7 = 0;
  }

  sub_100DC4804(a2, a1);
  if (v7) {
    os_activity_scope_leave(&state);
  }
}

void sub_100DC14CC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

id sub_100DC14EC(uint64_t a1, char a2, uint64_t a3)
{
  unint64_t v3 = *(void **)(a3 + 40);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  _DWORD v5[2] = sub_100DC71D0;
  _OWORD v5[3] = &unk_101861AD0;
  char v6 = a2;
  v5[4] = a3;
  v5[5] = a1;
  void v5[6] = a3;
  return [v3 async:v5];
}

uint64_t sub_100DC154C(uint64_t a1)
{
  *(void *)a1 = off_1018836B0;
  [*(id *)(a1 + 48) invalidate];

  sub_100231CA4(a1 + 80, *(void **)(a1 + 88));
  sub_100231CF0(a1 + 56, *(void **)(a1 + 64));
  return a1;
}

uint64_t sub_100DC15C0(uint64_t a1, void *a2)
{
  v6[0] = 0;
  char v7 = 0;
  sub_100DBF710(a1, a2, &v8, (uint64_t)v6);
  if (v7)
  {
    int v9 = (void **)v6;
    sub_1009708B4(&v9);
  }

  uint64_t v4 = v8;
  uint64_t v8 = 0LL;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  return a1;
}

void sub_100DC1648( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13)
{
  if (a12)
  {
    *(void *)(v13 - sub_100BDC958(v1 + 24) = &a9;
    sub_1009708B4((void ***)(v13 - 24));
  }

  sub_1012549C0(&a13);
  _Unwind_Resume(a1);
}

uint64_t sub_100DC1674(uint64_t a1)
{
  *(void *)a1 = off_101883418;
  *(void *)(a1 + 112) = &off_101883500;
  sub_100DC18C4((void *)a1);
  char v6 = (void **)(a1 + 416);
  sub_1009708B4(&v6);
  nullsub_1111(a1 + 384);
  uint64_t v2 = *(void *)(a1 + 376);
  *(void *)(a1 + 376) = 0LL;
  if (v2) {
    sub_100970954(a1 + 376, v2);
  }
  uint64_t v3 = *(void *)(a1 + 368);
  *(void *)(a1 + 368) = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  uint64_t v4 = *(void *)(a1 + 120);
  *(void *)(a1 + 120) = 0LL;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  return sub_100DC154C(a1);
}

uint64_t sub_100DC171C(uint64_t a1)
{
  return sub_100DC1674(a1 - 112);
}

void sub_100DC1724(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100DC1674(a1);
  operator delete(v1);
}

void sub_100DC1738(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100DC1674(a1 - 112);
  operator delete(v1);
}

uint64_t sub_100DC1750(uint64_t a1)
{
  uint64_t v2 = operator new(0x1C0uLL);
  uint64_t result = sub_100DC15C0((uint64_t)v2, *(void **)(a1 + 32));
  qword_1019A20B0 = (uint64_t)v2;
  return result;
}

void sub_100DC1788(_Unwind_Exception *a1)
{
}

__int128 *sub_100DC179C()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_10199E9E8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_10199E9E8))
  {
    xmmword_10199E9D0 = 0uLL;
    unk_10199E9E0 = 0LL;
    __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10199E9D0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10199E9E8);
  }

  if (qword_10199E9F0 != -1) {
    dispatch_once(&qword_10199E9F0, &stru_101883558);
  }
  return &xmmword_10199E9D0;
}

uint64_t *sub_100DC1830()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_10199E9C0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_10199E9C0))
  {
    qword_10199E9A8 = 0LL;
    qword_10199E9B0 = 0LL;
    unk_10199E9B8 = 0LL;
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10199E9A8, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10199E9C0);
  }

  if (qword_10199E9C8 != -1) {
    dispatch_once(&qword_10199E9C8, &stru_101883538);
  }
  return &qword_10199E9A8;
}

uint64_t sub_100DC18C4(void *a1)
{
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101883660);
  }
  uint64_t v2 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "TILE: CLCellTilesManager::shutdown", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101883660);
    }
    v8[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "TILE: CLCellTilesManager::shutdown",  v8,  2);
    char v7 = (uint8_t *)v6;
    sub_10029211C("Generic", 1LL, 0, 2LL, "virtual void CLCellTilesManager::shutdown()", "%s\n", v6);
    if (v7 != buf) {
      free(v7);
    }
  }

  if (a1[21])
  {
    sub_100DC1A98(a1);
    uint64_t v3 = a1[21];
    if (v3)
    {
      uint64_t v4 = (void *)sub_1006B6010(v3);
      operator delete(v4);
    }

    a1[21] = 0LL;
  }

  sub_100CF3320(a1[47]);
  uint64_t result = a1[15];
  a1[15] = 0LL;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

void *sub_100DC1A98(void *result)
{
  if (result[21])
  {
    uint64_t v1 = result;
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    uint64_t v2 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "TileTimer, cancel", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101883640);
      }
      v5[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "TileTimer, cancel",  v5,  2);
      uint64_t v4 = (uint8_t *)v3;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLCellTilesManager::cancelExpiredLocationTimer()", "%s\n", v3);
      if (v4 != buf) {
        free(v4);
      }
    }

    return sub_1006B6294(v1[21]);
  }

  return result;
}

void sub_100DC1C38(uint64_t a1, uint64_t a2, int *a3, _DWORD *a4)
{
  if (*a3)
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    unint64_t v5 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      int v6 = *a3;
      *(_DWORD *)__int128 buf = 67240192;
      int v34 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "TileCell, unexpected, dataprotection, %{public}d",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101883640);
      }
      int v7 = *a3;
      int v29 = 67240192;
      int v30 = v7;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "TileCell, unexpected, dataprotection, %{public}d",  &v29,  8);
LABEL_40:
      uint64_t v24 = (uint8_t *)v8;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::onDataProtectionNotification(int, const CLDataProtectionManager_Type::Notification &, c onst CLDataProtectionManager_Type::NotificationData &)",  "%s\n",  v8);
      if (v24 != buf) {
        free(v24);
      }
    }
  }

  else
  {
    double v11 = (*(double (**)(void))(**(void **)(a1 + 368) + 16LL))(*(void *)(a1 + 368));
    int v12 = *(unsigned __int8 *)(a1 + 128);
    char v13 = *a4 != 1;
    *(_BYTE *)(a1 + 128) = v13;
    sub_100CF41FC(*(void *)(a1 + 376), v13);
    if (*(_BYTE *)(a1 + 128))
    {
      int v14 = 1;
    }

    else
    {
      sub_100DC2280(a1, v11);
      int v14 = *(unsigned __int8 *)(a1 + 128);
    }

    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    uint64_t v15 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      int v16 = *(unsigned __int8 *)(a1 + 128);
      *(_DWORD *)__int128 buf = 67109376;
      int v34 = v16;
      __int16 v35 = 1024;
      BOOL v36 = v12 != v14;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "TileCell, kNotificationEncryptedDataAvailability, %d, changed, %d",  buf,  0xEu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101883640);
      }
      int v20 = *(unsigned __int8 *)(a1 + 128);
      int v29 = 67109376;
      int v30 = v20;
      __int16 v31 = 1024;
      BOOL v32 = v12 != v14;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "TileCell, kNotificationEncryptedDataAvailability, %d, changed, %d",  &v29,  14);
      size_t v22 = (uint8_t *)v21;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::onDataProtectionNotification(int, const CLDataProtectionManager_Type::Notification &, c onst CLDataProtectionManager_Type::NotificationData &)",  "%s\n",  v21);
      if (v22 != buf) {
        free(v22);
      }
    }

    if (v12 != v14)
    {
      if (*(_BYTE *)(a1 + 128))
      {
        sub_100DC2708(a1, (std::string::size_type)"onDataProtectionNotification", a1 + 176, 1);
      }

      else
      {
        sub_100CF36F8(*(void *)(a1 + 376), v11);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101883660);
        }
        int v17 = (os_log_s *)qword_101934A78;
        if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)__int128 buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEBUG,  "TILE: updateProtectionClass, skip on unlock",  buf,  2u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934A70 != -1) {
            dispatch_once(&qword_101934A70, &stru_101883660);
          }
          LOWORD(v29) = 0;
          LODWORD(v27) = 2;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "TILE: updateProtectionClass, skip on unlock",  &v29,  v27);
          unsigned int v26 = (uint8_t *)v25;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::onDataProtectionNotification(int, const CLDataProtectionManager_Type::Notification &, const CLDataProtectionManager_Type::NotificationData &)",  "%s\n",  v25);
          if (v26 != buf) {
            free(v26);
          }
        }

        sub_100DC1A98((void *)a1);
        v28[0] = _NSConcreteStackBlock;
        v28[1] = 3221225472LL;
        v28[2] = sub_100DC2D64;
        void v28[3] = &unk_101838B18;
        v28[4] = a1;
        sub_100DC2AE0(a1, (uint64_t)"onDataProtectionNotification.cleanUnknownCache", (uint64_t)v28);
      }
    }

    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    int v18 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_INFO))
    {
      int v19 = *(unsigned __int8 *)(a1 + 128);
      *(_DWORD *)__int128 buf = 67240192;
      int v34 = v19;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, "@TileEvent, all, locked, %{public}d", buf, 8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101883640);
      }
      int v23 = *(unsigned __int8 *)(a1 + 128);
      int v29 = 67240192;
      int v30 = v23;
      LODWORD(v27) = 8;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  1LL,  "@TileEvent, all, locked, %{public}d",  &v29,  v27);
      goto LABEL_40;
    }
  }

void sub_100DC2280(uint64_t a1, double a2)
{
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101883640);
  }
  uint64_t v4 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    int v5 = *(unsigned __int8 *)(a1 + 129);
    *(_DWORD *)__int128 buf = 67240192;
    int v19 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "TileCell, listAvailableFilesAllTypes, indexed, %{public}d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    int v8 = *(unsigned __int8 *)(a1 + 129);
    v17[0] = 67240192;
    v17[1] = v8;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "TileCell, listAvailableFilesAllTypes, indexed, %{public}d",  v17,  8);
    __int16 v10 = (uint8_t *)v9;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::listAvailableFilesAllTypes(CFAbsoluteTime)",  "%s\n",  v9);
    if (v10 != buf) {
      free(v10);
    }
  }

  if (!*(_BYTE *)(a1 + 129))
  {
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472LL;
    void v16[2] = sub_100DC4D4C;
    v16[3] = &unk_101840280;
    v16[4] = a1;
    *(double *)&v16[5] = a2;
    sub_100DC2AE0(a1, (uint64_t)"indexTiles", (uint64_t)v16);
    *(_BYTE *)(a1 + 129) = 1;
    if (*(_BYTE *)(a1 + 440))
    {
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101883640);
      }
      int v6 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "TileCell, clear on index", buf, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101883640);
        }
        LOWORD(v17[0]) = 0;
        LODWORD(v15) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  1LL,  "TileCell, clear on index",  v17,  v15);
        int v14 = (uint8_t *)v13;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::listAvailableFilesAllTypes(CFAbsoluteTime)",  "%s\n",  v13);
        if (v14 != buf) {
          free(v14);
        }
      }

      sub_100DC3F50(a1);
      *(_BYTE *)(a1 + 440) = 0;
    }

    else
    {
      sub_100DC4C80(a1, a2);
    }

    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    int v7 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "TileCell, listAvailableFilesAllTypes, done",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101883640);
      }
      LOWORD(v17[0]) = 0;
      LODWORD(v15) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "TileCell, listAvailableFilesAllTypes, done",  v17,  v15);
      int v12 = (uint8_t *)v11;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::listAvailableFilesAllTypes(CFAbsoluteTime)",  "%s\n",  v11);
      if (v12 != buf) {
        free(v12);
      }
    }
  }

void sub_100DC2708(uint64_t a1, std::string::size_type a2, uint64_t a3, int a4)
{
  uint64_t v17 = 0LL;
  int v18 = &v17;
  uint64_t v19 = 0x2020000000LL;
  int v20 = 0;
  if (*(_BYTE *)(a1 + 128))
  {
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472LL;
    void v15[2] = sub_100DCC808;
    v15[3] = &unk_101878F10;
    v15[6] = a3;
    v15[7] = a2;
    char v16 = a4;
    v15[4] = &v17;
    _OWORD v15[5] = a1;
    sub_100DC2AE0(a1, (uint64_t)"updateProtectionClass", (uint64_t)v15);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101883660);
    }
    int v7 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      int v8 = *((_DWORD *)v18 + 6);
      *(_DWORD *)__int128 buf = 67109376;
      int v25 = a4;
      __int16 v26 = 1024;
      int v27 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "TILE: updateProtectionClass, done, isAboutToLock, %d, numOfUnProtectedTiles, %d",  buf,  0xEu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101883660);
      }
      int v10 = *((_DWORD *)v18 + 6);
      v21[0] = 67109376;
      v21[1] = a4;
      __int16 v22 = 1024;
      int v23 = v10;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "TILE: updateProtectionClass, done, isAboutToLock, %d, numOfUnProtectedTiles, %d",  v21,  14);
      int v12 = (uint8_t *)v11;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::updateProtectionClass(const char *, const CLDaemonLocation &, BOOL)",  "%s\n",  v11);
      if (v12 != buf) {
        free(v12);
      }
    }

    if (*(_BYTE *)(a1 + 128) && *((_DWORD *)v18 + 6)) {
      sub_100DCE218(a1, a2);
    }
    else {
      sub_100DC1A98((void *)a1);
    }
  }

  else
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101883660);
    }
    int v9 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "#Warning TILE: updateProtectionClass, called on when not locked",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101883660);
      }
      LOWORD(v21[0]) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning TILE: updateProtectionClass, called on when not locked",  v21,  2);
      int v14 = (uint8_t *)v13;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::updateProtectionClass(const char *, const CLDaemonLocation &, BOOL)",  "%s\n",  v13);
      if (v14 != buf) {
        free(v14);
      }
    }
  }

  _Block_object_dispose(&v17, 8);
}

void sub_100DC2ABC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
}

id *sub_100DC2AE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v6 = (void *)(a1 + 416);
  for (unsigned int i = -3; i != 10; ++i)
  {
    if (i <= 2)
    {
      uint64_t v8 = sub_100DD9288(i + 3, v6);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101883660);
      }
      int v9 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v10 = v8 + 8;
        *(_DWORD *)__int128 buf = 136315394;
        uint64_t v22 = a2;
        __int16 v23 = 2080;
        uint64_t v24 = v10;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "TILE: performing, sAction, %s, tilesSet, %s",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101883660);
        }
        uint64_t v11 = v8 + 8;
        int v17 = 136315394;
        uint64_t v18 = a2;
        __int16 v19 = 2080;
        uint64_t v20 = v11;
        LODWORD(v15) = 22;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "TILE: performing, sAction, %s, tilesSet, %s",  (const char *)&v17,  v15);
        char v13 = (uint8_t *)v12;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::traverseAllTilesSets(const char *, CLTileManagerTraverseTilesSetBlock)",  "%s\n",  v12);
        if (v13 != buf) {
          free(v13);
        }
      }

      (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, v8);
    }
  }

  return sub_1001BA1BC(v16);
}

void sub_100DC2D44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
}

void *sub_100DC2D64(void *result, uint64_t a2)
{
  if (*(_BYTE *)(result[4] + 160LL))
  {
    uint64_t result = *(void **)(a2 + 304);
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 32LL))(result);
    }
  }

  return result;
}

void sub_100DC2D88(uint64_t a1, uint64_t a2, unsigned int *a3, uint64_t a4)
{
  if (*a3 != 5)
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    __int16 v26 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      unsigned int v27 = *a3;
      float v28 = sub_10100D9D8(*a3);
      *(_DWORD *)__int128 buf = 67240450;
      *(_DWORD *)BOOL v50 = v27;
      *(_WORD *)&v50[4] = 2082;
      *(void *)&v50[6] = v28;
      _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEFAULT,  "TileCell, unexpected, location, %{public}d, %{public}s",  buf,  0x12u);
    }

    if (!sub_1002921D0(115, 2)) {
      return;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    uint64_t v29 = qword_101934858;
    unsigned int v30 = *a3;
    *(_DWORD *)std::stringbuf::string_type __p = 67240450;
    *(_DWORD *)&__p[4] = v30;
    *(_WORD *)&__p[8] = 2082;
    *(void *)&__p[10] = sub_10100D9D8(v30);
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v29,  0LL,  "TileCell, unexpected, location, %{public}d, %{public}s",  __p,  18);
    BOOL v32 = (uint8_t *)v31;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::onLocationNotification(int, const CLLocationProvider_Type::Notification &, const CLLocati onProvider_Type::NotificationData &)",  "%s\n",  v31);
LABEL_54:
    if (v32 != buf) {
      free(v32);
    }
    return;
  }

  uint64_t v6 = a1 + 176;
  double v7 = *(double *)(a1 + 196);
  __int128 v8 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)a4;
  __int128 v9 = *(_OWORD *)(a4 + 80);
  __int128 v11 = *(_OWORD *)(a4 + 32);
  __int128 v10 = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(a1 + 24sub_100222B94(v16, (uint64_t)"CLCellTilesManager::traverseAllTilesSets", 0) = *(_OWORD *)(a4 + 64);
  *(_OWORD *)(a1 + 256) = v9;
  *(_OWORD *)(a1 + 20_Block_object_dispose(va, 8) = v11;
  *(_OWORD *)(a1 + 2sub_100BDC958(v1 + 24) = v10;
  __int128 v13 = *(_OWORD *)(a4 + 112);
  __int128 v12 = *(_OWORD *)(a4 + 128);
  __int128 v14 = *(_OWORD *)(a4 + 96);
  *(_OWORD *)(a1 + 316) = *(_OWORD *)(a4 + 140);
  *(_OWORD *)(a1 + 28_Block_object_dispose(va, 8) = v13;
  *(_OWORD *)(a1 + 304) = v12;
  *(_OWORD *)(a1 + 272) = v14;
  *(_OWORD *)(a1 + 192) = v8;
  if (*(_BYTE *)(a1 + 129))
  {
    double v15 = (*(double (**)(void))(**(void **)(a1 + 368) + 16LL))(*(void *)(a1 + 368));
    double v16 = *(double *)(a1 + 336);
    BOOL v17 = v7 > *(double *)(a4 + 20) && v7 > 100.0;
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    uint64_t v18 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v20 = *(void *)(a1 + 336);
      uint64_t v19 = *(void *)(a1 + 344);
      sub_100832C64(a4, (std::stringbuf::string_type *)__p);
      uint64_t v21 = (v46 & 0x80000000LL) == 0 ? __p : *(_BYTE **)__p;
      *(_DWORD *)__int128 buf = 134349827;
      *(void *)BOOL v50 = v20;
      *(_WORD *)&v50[8] = 1026;
      *(_DWORD *)&v50[10] = v17;
      __int16 v51 = 2050;
      uint64_t v52 = v19;
      __int16 v53 = 2081;
      __int128 v54 = v21;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEBUG,  "TileCell, kNotificationLocationLeech, fLastLocationDownloadCheckTimestamp, %{public}.1lf, isForceLocationCheck, %{public}d, fLastLocationProtectionCheckTimestamp, %{public}.1f, leech location, %{private}s",  buf,  0x26u);
      if (SBYTE3(v46) < 0) {
        operator delete(*(void **)__p);
      }
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101883640);
      }
      uint64_t v35 = qword_101934858;
      uint64_t v37 = *(void *)(a1 + 336);
      uint64_t v36 = *(void *)(a1 + 344);
      sub_100832C64(a4, &v43);
      if ((v43.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v38 = &v43;
      }
      else {
        uint64_t v38 = (std::stringbuf::string_type *)v43.__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)std::stringbuf::string_type __p = 134349827;
      *(void *)&__p[4] = v37;
      *(_WORD *)&_BYTE __p[12] = 1026;
      *(_DWORD *)&__p[14] = v17;
      __int16 v45 = 2050;
      uint64_t v46 = v36;
      __int16 v47 = 2081;
      int v48 = v38;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v35,  2LL,  "TileCell, kNotificationLocationLeech, fLastLocationDownloadCheckTimestamp, %{public}.1lf, isForceLocationCheck, %{public}d, fLastLocationProtectionCheckTimestamp, %{public}.1f, leech location, %{private}s",  __p,  38);
      uint64_t v40 = v39;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::onLocationNotification(int, const CLLocationProvider_Type::Notification &, const CLLoca tionProvider_Type::NotificationData &)",  "%s\n",  v40);
    }

    int v22 = v15 - v16 >= 600.0 || v17;
    if (v22 == 1)
    {
      double v23 = *(double *)(a1 + 196);
      if (v23 >= 0.0 && v23 <= 5000.0)
      {
        sub_100DC33E0((const char *)a1, v6);
        *(double *)(a1 + 336) = v15;
      }
    }

    if (*(_BYTE *)(a1 + 128))
    {
      int v24 = v15 - *(double *)(a1 + 344) >= 330.0 || v17;
      if (v24 == 1)
      {
        sub_100DC2708(a1, (std::string::size_type)"onLocationNotification", v6, 0);
        *(double *)(a1 + 344) = v15;
      }
    }

    return;
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101883660);
  }
  uint64_t v33 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    int v34 = *(unsigned __int8 *)(a1 + 128);
    *(_DWORD *)__int128 buf = 67109120;
    *(_DWORD *)BOOL v50 = v34;
    _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEBUG,  "TILE: onLocationNotification, index is not available until first unlock, fDataProtectionEnabled, %d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101883660);
    }
    int v41 = *(unsigned __int8 *)(a1 + 128);
    *(_DWORD *)std::stringbuf::string_type __p = 67109120;
    *(_DWORD *)&__p[4] = v41;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "TILE: onLocationNotification, index is not available until first unlock, fDataProtectionEnabled, %d",  __p);
    BOOL v32 = (uint8_t *)v42;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::onLocationNotification(int, const CLLocationProvider_Type::Notification &, const CLLocati onProvider_Type::NotificationData &)",  "%s\n",  v42);
    goto LABEL_54;
  }

id *sub_100DC33E0(const char *a1, uint64_t a2)
{
  if (*(double *)(a2 + 20) <= 0.0)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101883660);
    }
    int v5 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)__int128 buf = 136315650;
      double v16 = "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/Tiles/CLCellTilesManager.mm";
      __int16 v17 = 1024;
      int v18 = 1582;
      __int16 v19 = 2080;
      uint64_t v20 = "location.horizontalAccuracy > 0.0";
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_FAULT, "Assert Failed, %s, %d, %s", buf, 0x1Cu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101883660);
      }
      int v9 = 136315650;
      __int128 v10 = "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/Tiles/CLCellTilesManager.mm";
      __int16 v11 = 1024;
      int v12 = 1582;
      __int16 v13 = 2080;
      __int128 v14 = "location.horizontalAccuracy > 0.0";
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assert Failed, %s, %d, %s",  (const char *)&v9,  28,  v8[0]);
      double v7 = (uint8_t *)v6;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLCellTilesManager::updateTileLocationRelevancy(const CLDaemonLocation &)",  "%s\n",  v6);
      if (v7 != buf) {
        free(v7);
      }
    }

    sub_1002920DC();
  }

  v8[0] = (const char *)_NSConcreteStackBlock;
  v8[1] = (const char *)3221225472LL;
  _DWORD v8[2] = (const char *)sub_100DCE700;
  v8[3] = (const char *)&unk_101840280;
  _DWORD v8[4] = a1;
  v8[5] = (const char *)a2;
  return sub_100DC2AE0((uint64_t)a1, (uint64_t)"updateTileLocationRelevancy", (uint64_t)v8);
}

void sub_100DC363C(uint64_t a1, uint64_t a2, int *a3, int *a4)
{
  if (*a3 == 6)
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    uint64_t v6 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_INFO))
    {
      int v8 = *a4;
      int v7 = a4[1];
      *(_DWORD *)__int128 buf = 67240448;
      int v25 = v7;
      __int16 v26 = 1026;
      int v27 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "TileCell, kNotificationReachability, %{public}d, was, %{public}d",  buf,  0xEu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101883640);
      }
      int v14 = *a4;
      int v13 = a4[1];
      int v20 = 67240448;
      int v21 = v13;
      __int16 v22 = 1026;
      int v23 = v14;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  1LL,  "TileCell, kNotificationReachability, %{public}d, was, %{public}d",  &v20,  14);
      double v16 = (uint8_t *)v15;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDaemonStat us_Type::NotificationData &)",  "%s\n",  v15);
      if (v16 != buf) {
        free(v16);
      }
    }

    int v9 = a4[1];
    *(_DWORD *)(a1 + 352) = v9;
    sub_100CF4014(*(void *)(a1 + 376), v9);
  }

  else
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    __int16 v11 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      int v12 = *a3;
      *(_DWORD *)__int128 buf = 67240192;
      int v25 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "TileCell, unexpected, status, %{public}d",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101883640);
      }
      int v17 = *a3;
      int v20 = 67240192;
      int v21 = v17;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "TileCell, unexpected, status, %{public}d",  &v20,  8);
      __int16 v19 = (uint8_t *)v18;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDaemonStat us_Type::NotificationData &)",  "%s\n",  v18);
      if (v19 != buf) {
        free(v19);
      }
    }
  }

void sub_100DC3974(uint64_t a1, uint64_t a2, int *a3, uint64_t a4)
{
  int v5 = *a3;
  if (*a3 == 6)
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    int v7 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "TileCell, #CacheDelete kNotificationSoftwareUpdateStorageRecovery",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101883640);
      }
      LOWORD(v23) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "TileCell, #CacheDelete kNotificationSoftwareUpdateStorageRecovery",  &v23,  2);
      int v9 = (uint8_t *)v8;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::onClientNotification(int, const CLClientManager_Type::Notification &, const CLClientMan ager_Type::NotificationData &)",  "%s\n",  v8);
      if (v9 != buf) {
        free(v9);
      }
    }

id *sub_100DC3F50(uint64_t a1)
{
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101883640);
  }
  uint64_t v2 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)__int128 buf = 136446210;
    int v17 = "clearLocationInformationCell";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "TileCell, %{public}s", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    int v14 = 136446210;
    double v15 = "clearLocationInformationCell";
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "TileCell, %{public}s",  &v14,  12);
    int v11 = (uint8_t *)v10;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLCellTilesManager::clearLocationInformation()", "%s\n", v10);
    if (v11 != buf) {
      free(v11);
    }
  }

  uint64_t v3 = *(void *)(a1 + 120);
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 24LL))(v3);
  }
  sub_100CF3320(*(void *)(a1 + 376));
  *(_DWORD *)(a1 + 176) = 0xFFFF;
  *(void *)(a1 + 18_Block_object_dispose(va, 8) = 0LL;
  *(void *)(a1 + 18sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0LL;
  *(_OWORD *)(a1 + 196) = xmmword_1012E0070;
  __asm { FMOV            V0.2D, #-1.0 }

  *(_OWORD *)(a1 + 212) = _Q0;
  *(_OWORD *)(a1 + 22_Block_object_dispose(va, 8) = _Q0;
  *(_OWORD *)(a1 + 244) = _Q0;
  *(_DWORD *)(a1 + 26sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0;
  *(void *)(a1 + 272) = 0LL;
  *(void *)(a1 + 28sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0LL;
  *(void *)(a1 + 264) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 28_Block_object_dispose(va, 8) = 0;
  *(void *)(a1 + 292) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 30sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0x7FFFFFFF;
  *(void *)(a1 + 312) = 0LL;
  *(void *)(a1 + 32sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0LL;
  *(void *)(a1 + 304) = 0LL;
  *(_BYTE *)(a1 + 32_Block_object_dispose(va, 8) = 0;
  *(void *)(a1 + 336) = 0LL;
  *(void *)(a1 + 344) = 0LL;
  sub_100BD8374(a1 + 392);
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  _DWORD v12[2] = sub_100DCB574;
  v12[3] = &unk_101838B18;
  v12[4] = a1;
  sub_100DC2AE0(a1, (uint64_t)"label", (uint64_t)v12);
  return sub_1001BA1BC(v13);
}

void sub_100DC41E0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_100DC4200(uint64_t a1, uint64_t a2, int *a3, char *a4)
{
  if (*a3 == 5)
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    int v7 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = *a3;
      *(_DWORD *)__int128 buf = 67240192;
      int v21 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "TileCell, unexpected, companion, %{public}d",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101883640);
      }
      int v12 = *a3;
      int v18 = 67240192;
      int v19 = v12;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "TileCell, unexpected, companion, %{public}d",  &v18,  8);
      int v14 = (uint8_t *)v13;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::onCompanionNotification(int, const CLCompanionNotifier_Type::Notification &, const CLCo mpanionNotifier_Type::NotificationData &)",  "%s\n",  v13);
      if (v14 != buf) {
        free(v14);
      }
    }

    if ((*(unsigned int (**)(void))(**(void **)(a1 + 368) + 24LL))(*(void *)(a1 + 368)))
    {
      double v9 = (*(double (**)(void))(**(void **)(a1 + 368) + 16LL))(*(void *)(a1 + 368));
      *(_BYTE *)(a1 + 356) = *a4;
      sub_100CF41C4(*(void *)(a1 + 376), *a4);
      if (*(_BYTE *)(a1 + 356)) {
        sub_100DC4570(a1, v9);
      }
    }
  }

  else
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    __int128 v10 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      int v11 = *a3;
      *(_DWORD *)__int128 buf = 67240192;
      int v21 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "TileCell, unexpected, companion, %{public}d",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101883640);
      }
      int v15 = *a3;
      int v18 = 67240192;
      int v19 = v15;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "TileCell, unexpected, companion, %{public}d",  &v18,  8);
      int v17 = (uint8_t *)v16;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::onCompanionNotification(int, const CLCompanionNotifier_Type::Notification &, const CLCo mpanionNotifier_Type::NotificationData &)",  "%s\n",  v16);
      if (v17 != buf) {
        free(v17);
      }
    }
  }

BOOL sub_100DC4570(uint64_t a1, double a2)
{
  if (*(_BYTE *)(a1 + 357) && sub_100CF0BCC(*(void *)(a1 + 376)))
  {
    LODWORD(v17) = 13;
    sub_1008ACE9C((uint64_t)buf, &v17);
    uint64_t v4 = *(void *)(a1 + 376);
    uint64_t v5 = *(void *)(a1 + 120);
    __int128 v6 = *(_OWORD *)(a1 + 288);
    v15[6] = *(_OWORD *)(a1 + 272);
    v15[7] = v6;
    v16[0] = *(_OWORD *)(a1 + 304);
    *(_OWORD *)((char *)v16 + 12) = *(_OWORD *)(a1 + 316);
    __int128 v7 = *(_OWORD *)(a1 + 224);
    void v15[2] = *(_OWORD *)(a1 + 208);
    v15[3] = v7;
    __int128 v8 = *(_OWORD *)(a1 + 256);
    v15[4] = *(_OWORD *)(a1 + 240);
    _OWORD v15[5] = v8;
    __int128 v9 = *(_OWORD *)(a1 + 192);
    v15[0] = *(_OWORD *)(a1 + 176);
    v15[1] = v9;
    sub_100CF0F28(v4, v5, (uint64_t)v15, (uint64_t)&v17, a2);
    *(_OWORD *)__int128 buf = v17;
    uint64_t v22 = v18;
    if (SHIBYTE(v24) < 0) {
      operator delete((void *)__p);
    }
    __int128 __p = v19;
    uint64_t v24 = v20;
    BOOL v10 = sub_1008AD1E0((unsigned int *)buf);
    if (SHIBYTE(v24) < 0) {
      operator delete((void *)__p);
    }
  }

  else
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    int v11 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "@TileDl, cell, failed criteria", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101883640);
      }
      LOWORD(v17) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "@TileDl, cell, failed criteria",  &v17,  2);
      int v14 = (uint8_t *)v13;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCellTilesManager::checkDownloadSchedule(CFAbsoluteTime)",  "%s\n",  v13);
      if (v14 != buf) {
        free(v14);
      }
    }

    return 0LL;
  }

  return v10;
}

void sub_100DC47DC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, void *__p, uint64_t a41, int a42, __int16 a43, char a44, char a45)
{
  if (a45 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DC4804(uint64_t a1, uint64_t a2)
{
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101883640);
  }
  uint64_t v4 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_INFO))
  {
    BOOL v5 = *(void *)(a1 + 168) == a2;
    int v6 = *(unsigned __int8 *)(a1 + 128);
    *(_DWORD *)__int128 buf = 67240448;
    BOOL v15 = v5;
    __int16 v16 = 1026;
    int v17 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_INFO,  "TileCell, Timer, %{public}d, locked, %{public}d",  buf,  0xEu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    BOOL v7 = *(void *)(a1 + 168) == a2;
    int v8 = *(unsigned __int8 *)(a1 + 128);
    v11[0] = 67240448;
    v11[1] = v7;
    __int16 v12 = 1026;
    int v13 = v8;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  1LL,  "TileCell, Timer, %{public}d, locked, %{public}d",  v11,  14);
    BOOL v10 = (uint8_t *)v9;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLCellTilesManager::onTimerFired(CLPersistentTimer *)", "%s\n", v9);
    if (v10 != buf) {
      free(v10);
    }
  }

  if (*(void *)(a1 + 168) == a2)
  {
    if (*(_BYTE *)(a1 + 128)) {
      sub_100DC2708(a1, (std::string::size_type)"onExpiredLocationTimerFired", a1 + 176, 0);
    }
  }

id sub_100DC4A14(uint64_t a1)
{
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101883640);
  }
  uint64_t v2 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "TileCell, Cleanup", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    v9[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  1LL,  "TileCell, Cleanup",  v9,  2);
    BOOL v7 = (uint8_t *)v6;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLCellTilesManager::onCleanupAgedTiles()", "%s\n", v6);
    if (v7 != buf) {
      free(v7);
    }
  }

  double v3 = (*(double (**)(void))(**(void **)(a1 + 368) + 16LL))(*(void *)(a1 + 368));
  uint64_t v4 = *(void **)(a1 + 40);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  _DWORD v8[2] = sub_100DC4BF4;
  v8[3] = &unk_101830538;
  _DWORD v8[4] = a1;
  *(double *)&v8[5] = v3;
  return [v4 async:v8];
}

id *sub_100DC4BF4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  sub_100DC4C80(v1, *(double *)(a1 + 40));
  sub_100DC2AE0(v1, (uint64_t)"onCleanupAgedTiles", (uint64_t)&stru_101883518);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  void v3[2] = sub_100DC87A8;
  v3[3] = &unk_101838B18;
  void v3[4] = v1;
  return sub_100DC2AE0(v1, (uint64_t)"refreshTilesDataIfNeeded", (uint64_t)v3);
}

uint64_t *sub_100DC4C80(uint64_t a1, double a2)
{
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  _DWORD v5[2] = sub_100DCB708;
  _OWORD v5[3] = &unk_101840280;
  v5[4] = a1;
  *(double *)&v5[5] = a2;
  sub_100DC2AE0(a1, (uint64_t)"deleteAgedTiles", (uint64_t)v5);
  return sub_100CF2788(*(void *)(a1 + 376), a2);
}

void sub_100DC4D00(id a1, void *a2)
{
  uint64_t v3 = *((void *)a2 + 37);
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 40LL))(v3);
  }
  uint64_t v4 = *((void *)a2 + 38);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 40LL))(v4);
  }
}

BOOL sub_100DC4D4C(uint64_t a1, uint64_t a2)
{
  return sub_100DC4D5C(*(void *)(a1 + 32), a2, *(double *)(a1 + 40));
}

BOOL sub_100DC4D5C(uint64_t a1, uint64_t a2, double a3)
{
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101883640);
  }
  BOOL v5 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_INFO))
  {
    std::string::size_type v6 = *(void *)(a2 + 32);
    std::string::size_type v7 = a2 + 8;
    LODWORD(buf.__r_.__value_.__l.__data_) = 136446466;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v6;
    WORD2(buf.__r_.__value_.__r.__words[1]) = 2082;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_INFO,  "TileCell, indexTiles, rootDirectory, %{public}s, name, %{public}s",  (uint8_t *)&buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    uint64_t v74 = *(void *)(a2 + 32);
    __darwin_ino64_t v75 = a2 + 8;
    v97.st_dev = 136446466;
    *(void *)&v97.st_mode = v74;
    WORD2(v97.st_ino) = 2082;
    *(__darwin_ino64_t *)((char *)&v97.st_ino + 6) = v75;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934858,  1LL,  "TileCell, indexTiles, rootDirectory, %{public}s, name, %{public}s",  &v97,  22);
    uint64_t v77 = (std::string *)v76;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCellTilesManager::indexTiles(CLTilesSet &, CFAbsoluteTime)",  "%s\n",  v76);
    if (v77 != &buf) {
      free(v77);
    }
  }

  else {
    int v8 = *(const char **)(a2 + 32);
  }
  __int128 v9 = opendir(v8);
  sub_100DC5D60(a1, 0, *(_DWORD *)(a2 + 4));
  if (!v9)
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    int v72 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_ERROR))
    {
      LODWORD(buf.__r_.__value_.__l.__data_) = 136446210;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v8;
      _os_log_impl( (void *)&_mh_execute_header,  v72,  OS_LOG_TYPE_ERROR,  "TileCell, indexTiles, can't open dir, %{public}s, #CloneMe",  (uint8_t *)&buf,  0xCu);
    }

    if (!sub_1002921D0(115, 0)) {
      return v9 != 0LL;
    }
    bzero(&buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    v97.st_dev = 136446210;
    *(void *)&v97.st_mode = v8;
    LODWORD(v79) = 12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934858,  16LL,  "TileCell, indexTiles, can't open dir, %{public}s, #CloneMe",  &v97,  v79);
    uint64_t v71 = (std::string *)v78;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLCellTilesManager::indexTiles(CLTilesSet &, CFAbsoluteTime)",  "%s\n",  v78);
    if (v71 == &buf) {
      return v9 != 0LL;
    }
LABEL_149:
    free(v71);
    return v9 != 0LL;
  }

  BOOL v10 = readdir(v9);
  if (v10)
  {
    int v11 = 0;
    uint64_t v80 = a2 + 184;
    while (1)
    {
      sub_100104050(__dst, v10->d_name, v10->d_namlen);
      else {
        size_t v12 = *(void *)(a2 + 40);
      }
      sub_1000392EC((uint64_t)&buf, v12 + 1);
      if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        p_std::string buf = &buf;
      }
      else {
        p_std::string buf = (std::string *)buf.__r_.__value_.__r.__words[0];
      }
      if (v12)
      {
        else {
          int v14 = *(const void **)(a2 + 32);
        }
        memmove(p_buf, v14, v12);
      }

      *(_WORD *)((char *)&p_buf->__r_.__value_.__l.__data_ + v12) = 47;
      if ((v85 & 0x80u) == 0) {
        BOOL v15 = __dst;
      }
      else {
        BOOL v15 = (void **)__dst[0];
      }
      if ((v85 & 0x80u) == 0) {
        std::string::size_type v16 = v85;
      }
      else {
        std::string::size_type v16 = (std::string::size_type)__dst[1];
      }
      int v17 = std::string::append(&buf, (const std::string::value_type *)v15, v16);
      __int128 v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
      int64_t cap = v17->__r_.__value_.__l.__cap_;
      *(_OWORD *)__int128 __p = v18;
      v17->__r_.__value_.__l.__size_ = 0LL;
      v17->__r_.__value_.__l.__cap_ = 0LL;
      v17->__r_.__value_.__r.__words[0] = 0LL;
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101883640);
      }
      __int128 v19 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_INFO))
      {
        uint64_t v20 = __p;
        if (cap < 0) {
          uint64_t v20 = (void **)__p[0];
        }
        int d_type = v10->d_type;
        LODWORD(buf.__r_.__value_.__l.__data_) = 136446466;
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v20;
        WORD2(buf.__r_.__value_.__r.__words[1]) = 1026;
        *(_DWORD *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = d_type;
        _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_INFO,  "TileCell, indexTiles, absoluteFilename, '%{public}s', d_type, %{public}d",  (uint8_t *)&buf,  0x12u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101883640);
        }
        uint64_t v42 = __p;
        if (cap < 0) {
          uint64_t v42 = (void **)__p[0];
        }
        int v43 = v10->d_type;
        v97.st_dev = 136446466;
        *(void *)&v97.st_mode = v42;
        WORD2(v97.st_ino) = 1026;
        *(_DWORD *)((char *)&v97.st_ino + 6) = v43;
        LODWORD(v79) = 18;
        _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934858,  1LL,  "TileCell, indexTiles, absoluteFilename, '%{public}s', d_type, %{public}d",  &v97,  v79);
        __int16 v45 = (std::string *)v44;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCellTilesManager::indexTiles(CLTilesSet &, CFAbsoluteTime)",  "%s\n",  v44);
        if (v45 != &buf) {
          free(v45);
        }
      }

      if (v10->d_type != 8) {
        goto LABEL_77;
      }
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101883640);
      }
      ++v11;
      uint64_t v22 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_INFO))
      {
        int v23 = __p;
        if (cap < 0) {
          int v23 = (void **)__p[0];
        }
        LODWORD(buf.__r_.__value_.__l.__data_) = 136446466;
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v23;
        WORD2(buf.__r_.__value_.__r.__words[1]) = 1026;
        *(_DWORD *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v11;
        _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_INFO,  "TileCell, convert to class B, first unlock, %{public}s, files, %{public}d",  (uint8_t *)&buf,  0x12u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101883640);
        }
        uint64_t v46 = __p;
        if (cap < 0) {
          uint64_t v46 = (void **)__p[0];
        }
        v97.st_dev = 136446466;
        *(void *)&v97.st_mode = v46;
        WORD2(v97.st_ino) = 1026;
        *(_DWORD *)((char *)&v97.st_ino + 6) = v11;
        LODWORD(v79) = 18;
        _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934858,  1LL,  "TileCell, convert to class B, first unlock, %{public}s, files, %{public}d",  &v97,  v79);
        int v48 = (std::string *)v47;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCellTilesManager::indexTiles(CLTilesSet &, CFAbsoluteTime)",  "%s\n",  v47);
        if (v48 != &buf) {
          free(v48);
        }
      }

      if (cap >= 0) {
        uint64_t v24 = __p;
      }
      else {
        uint64_t v24 = (void **)__p[0];
      }
      sub_100C148A0((const char *)v24);
      if (cap >= 0) {
        int v25 = __p;
      }
      else {
        int v25 = (void **)__p[0];
      }
      int v26 = stat((const char *)v25, &v97);
      if (!v26)
      {
        if (sub_100DC644C( a1,  *(_DWORD *)(a2 + 4),  (char *)(a2 + 32),  (std::string::value_type *)__dst,  a3))
        {
          uint64_t v35 = v34;
          *(_OWORD *)int v94 = *(_OWORD *)(v34 + 48);
          *(void *)&v94[16] = *(void *)(v34 + 64);
          if (*(char *)(v34 + 95) < 0)
          {
            sub_1010DD48C(&v95, *(void **)(v34 + 72), *(void *)(v34 + 80));
          }

          else
          {
            __int128 v95 = *(_OWORD *)(v34 + 72);
            uint64_t v96 = *(void *)(v34 + 88);
          }

          sub_100DC6A38(a1, v35, a2, (uint64_t)"index", a3);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101883640);
          }
          uint64_t v36 = (unsigned int *)(v35 + 48);
          uint64_t v37 = (os_log_s *)qword_101934858;
          if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v38 = sub_100DD8CC8(*v36);
            double v39 = sub_1008ADB4C((uint64_t)v94);
            double v40 = sub_1008ADB70((uint64_t)v94);
            uint64_t v41 = sub_100019240(v80);
            LODWORD(buf.__r_.__value_.__l.__data_) = 136446979;
            *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v38;
            WORD2(buf.__r_.__value_.__r.__words[1]) = 2049;
            *(double *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v39;
            HIWORD(buf.__r_.__value_.__r.__words[2]) = 2049;
            double v99 = v40;
            __int16 v100 = 2050;
            uint64_t v101 = v41;
            _os_log_impl( (void *)&_mh_execute_header,  v37,  OS_LOG_TYPE_DEFAULT,  "@TileList, %{public}s, add, llsw, %{private}.2lf, %{private}.2lf, index, size, %{public}lu",  (uint8_t *)&buf,  0x2Au);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(&buf, 0x65CuLL);
            if (qword_101934850 != -1) {
              dispatch_once(&qword_101934850, &stru_101883640);
            }
            uint64_t v51 = qword_101934858;
            uint64_t v52 = sub_100DD8CC8(*v36);
            double v53 = sub_1008ADB4C((uint64_t)v94);
            double v54 = sub_1008ADB70((uint64_t)v94);
            uint64_t v55 = sub_100019240(v80);
            int v86 = 136446979;
            char v87 = v52;
            __int16 v88 = 2049;
            double v89 = v53;
            __int16 v90 = 2049;
            double v91 = v54;
            __int16 v92 = 2050;
            uint64_t v93 = v55;
            LODWORD(v79) = 42;
            _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v51,  0LL,  "@TileList, %{public}s, add, llsw, %{private}.2lf, %{private}.2lf, index, size, %{public}lu",  &v86,  v79);
            unsigned int v57 = (std::string *)v56;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCellTilesManager::indexTiles(CLTilesSet &, CFAbsoluteTime)",  "%s\n",  v56);
            if (v57 != &buf) {
              free(v57);
            }
          }

          if (SHIBYTE(v96) < 0) {
            operator delete((void *)v95);
          }
        }

        goto LABEL_77;
      }

      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101883640);
      }
      int v27 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_ERROR))
      {
        float v28 = __dst;
        if ((v85 & 0x80u) != 0) {
          float v28 = (void **)__dst[0];
        }
        LODWORD(buf.__r_.__value_.__l.__data_) = 136446466;
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v28;
        WORD2(buf.__r_.__value_.__r.__words[1]) = 1026;
        *(_DWORD *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v26;
        _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_ERROR,  "TileCell, indexTiles, failed to stat file, %{public}s, ret, %{public}d, #CloneMe",  (uint8_t *)&buf,  0x12u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101883640);
        }
        uint64_t v29 = __dst;
        if ((v85 & 0x80u) != 0) {
          uint64_t v29 = (void **)__dst[0];
        }
        *(_DWORD *)int v94 = 136446466;
        *(void *)&v94[4] = v29;
        *(_WORD *)&_BYTE v94[12] = 1026;
        *(_DWORD *)&v94[14] = v26;
        LODWORD(v79) = 18;
        _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934858,  16LL,  "TileCell, indexTiles, failed to stat file, %{public}s, ret, %{public}d, #CloneMe",  v94,  v79);
        __int16 v31 = (std::string *)v30;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLCellTilesManager::indexTiles(CLTilesSet &, CFAbsoluteTime)",  "%s\n",  v30);
LABEL_111:
        if (v31 != &buf) {
          free(v31);
        }
      }

void sub_100DC5CD0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, void *a21, uint64_t a22, int a23, __int16 a24, char a25, char a26, void *a27, uint64_t a28, int a29, __int16 a30, char a31, char a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, void *__p, uint64_t a43, int a44, __int16 a45, char a46, char a47)
{
  if (a47 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (a32 < 0) {
    operator delete(a27);
  }
  _Unwind_Resume(a1);
}

uint64_t *sub_100DC5D60(uint64_t a1, int a2, unsigned int a3)
{
  if (a3 - 3 >= 3)
  {
    sub_101270294();
    __break(1u);
  }

  else
  {
    int v4 = a2;
    v53[0] = _NSConcreteStackBlock;
    v53[1] = 3221225472LL;
    v53[2] = sub_100DCB5D0;
    v53[3] = &unk_101862750;
    unsigned int v54 = a3;
    v55[0] = mach_absolute_time();
    v55[1] = (uint64_t)v53;
    uint64_t v52 = sub_100DD9288(a3, (void *)(a1 + 416));
    p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
    if (qword_101934850 == -1) {
      goto LABEL_3;
    }
  }

  dispatch_once(&qword_101934850, &stru_101883640);
LABEL_3:
  std::string::size_type v7 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_INFO))
  {
    uint64_t v8 = *(void *)(v52 + 8);
    int v9 = *(char *)(v52 + 31);
    uint64_t v10 = sub_100019240(v52 + 184);
    if (v9 >= 0) {
      uint64_t v11 = v52 + 8;
    }
    else {
      uint64_t v11 = v8;
    }
    *(_DWORD *)std::string buf = 136446466;
    uint64_t v65 = (const char *)v11;
    __int16 v66 = 2050;
    double v67 = *(double *)&v10;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_INFO,  "TileCell, %{public}s, removeAllTiles, size, %{public}lu",  buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    uint64_t v37 = qword_101934858;
    uint64_t v38 = *(void *)(v52 + 8);
    int v39 = *(char *)(v52 + 31);
    uint64_t v40 = sub_100019240(v52 + 184);
    if (v39 >= 0) {
      uint64_t v41 = v52 + 8;
    }
    else {
      uint64_t v41 = v38;
    }
    int v56 = 136446466;
    unsigned int v57 = (const char *)v41;
    __int16 v58 = 2050;
    double v59 = *(double *)&v40;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v37,  1LL,  "TileCell, %{public}s, removeAllTiles, size, %{public}lu",  &v56,  22);
    int v43 = (uint8_t *)v42;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::removeAllTiles(BOOL, CLTilesManager_Type::TileType)",  "%s\n",  v42);
    if (v43 != buf) {
      free(v43);
    }
  }

  uint64_t v12 = v52 + 184;
  int v13 = (void *)sub_1005B46E8(v52 + 184);
  if (v13 != (void *)sub_100056FA8(v52 + 184))
  {
    do
    {
      if (v4)
      {
        uint64_t v14 = v13[10];
        sub_100C0FD9C(v14);
        BOOL v15 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
        {
          std::string::size_type v16 = sub_100DD8CC8(*(_DWORD *)(v14 + 48));
          double v17 = sub_1008ADB4C(v14 + 48);
          double v18 = sub_1008ADB70(v14 + 48);
          uint64_t v19 = sub_100019240(v12);
          *(_DWORD *)std::string buf = 136446979;
          uint64_t v65 = v16;
          __int16 v66 = 2049;
          double v67 = v17;
          __int16 v68 = 2049;
          double v69 = v18;
          __int16 v70 = 2050;
          uint64_t v71 = v19;
          _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "@TileList, %{public}s, delete, llsw, %{private}.2lf, %{private}.2lf, all, size, %{public}lu",  buf,  0x2Au);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          uint64_t v23 = qword_101934858;
          unsigned int v25 = *(_DWORD *)(v14 + 48);
          uint64_t v24 = v14 + 48;
          int v26 = sub_100DD8CC8(v25);
          double v27 = sub_1008ADB4C(v24);
          double v28 = sub_1008ADB70(v24);
          uint64_t v29 = sub_100019240(v12);
          int v56 = 136446979;
          unsigned int v57 = v26;
          __int16 v58 = 2049;
          double v59 = v27;
          __int16 v60 = 2049;
          double v61 = v28;
          __int16 v62 = 2050;
          uint64_t v63 = v29;
          LODWORD(v5sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 42;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v23,  0LL,  "@TileList, %{public}s, delete, llsw, %{private}.2lf, %{private}.2lf, all, size, %{public}lu",  &v56,  v50);
          __int16 v31 = (uint8_t *)v30;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::removeAllTiles(BOOL, CLTilesManager_Type::TileType)",  "%s\n",  v30);
          if (v31 != buf) {
            free(v31);
          }
        }
      }

      uint64_t v20 = (void *)v13[1];
      if (v20)
      {
        do
        {
          int v21 = v20;
          uint64_t v20 = (void *)*v20;
        }

        while (v20);
      }

      else
      {
        do
        {
          int v21 = (void *)v13[2];
          BOOL v22 = *v21 == (void)v13;
          int v13 = v21;
        }

        while (!v22);
      }

      int v13 = v21;
    }

    while (v21 != (void *)sub_100056FA8(v12));
  }

  sub_100603210(v12);
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101883660);
  }
  BOOL v32 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    else {
      uint64_t v33 = *(void *)(v52 + 8);
    }
    uint64_t v34 = sub_100019240(v12);
    uint64_t v35 = sub_100603208(v12);
    *(_DWORD *)std::string buf = 136315650;
    uint64_t v65 = (const char *)v33;
    __int16 v66 = 2048;
    double v67 = *(double *)&v34;
    __int16 v68 = 2048;
    double v69 = *(double *)&v35;
    _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEBUG,  "TILE: removeAllTiles, end, name, %s, size, %lu, unprot size, %lu",  buf,  0x20u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101883660);
    }
    uint64_t v44 = qword_101934A78;
    else {
      uint64_t v45 = *(void *)(v52 + 8);
    }
    uint64_t v46 = sub_100019240(v12);
    uint64_t v47 = sub_100603208(v12);
    int v56 = 136315650;
    unsigned int v57 = (const char *)v45;
    __int16 v58 = 2048;
    double v59 = *(double *)&v46;
    __int16 v60 = 2048;
    double v61 = *(double *)&v47;
    LODWORD(v5sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 32;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v44,  2LL,  "TILE: removeAllTiles, end, name, %s, size, %lu, unprot size, %lu",  (const char *)&v56,  v50,  v51);
    uint64_t v49 = (uint8_t *)v48;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::removeAllTiles(BOOL, CLTilesManager_Type::TileType)",  "%s\n",  v48);
    if (v49 != buf) {
      free(v49);
    }
  }

  return sub_1011F6BE4(v55);
}

void sub_100DC6408( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
}

uint64_t sub_100DC644C(uint64_t a1, unsigned int a2, char *a3, std::string::value_type *a4, double a5)
{
  if (a2 - 3 >= 3)
  {
    sub_101270400();
    __break(1u);
LABEL_39:
    dispatch_once(&qword_101934850, &stru_101883640);
    goto LABEL_12;
  }

  std::string::size_type v6 = a4;
  std::string::size_type v7 = a3;
  unsigned int v5 = a2;
  uint64_t v11 = sub_100DD9288(a2, (void *)(a1 + 416));
  sub_100DD9668(v5, a1 + 392, &v45);
  if (v7[23] >= 0) {
    uint64_t v12 = v7;
  }
  else {
    uint64_t v12 = *(char **)v7;
  }
  if (v6[23] >= 0) {
    int v13 = v6;
  }
  else {
    int v13 = *(std::string::value_type **)v6;
  }
  if ((sub_100C124C8(v45, v12, v13, v5, 1, a5) & 1) != 0)
  {
    uint64_t v14 = v45;
    *(_OWORD *)unsigned int v54 = *((_OWORD *)v45 + 3);
    *(void *)&v54[16] = v45[8];
    if (*((char *)v45 + 95) < 0)
    {
      sub_1010DD48C(&__p, (void *)v45[9], v45[10]);
      uint64_t v14 = v45;
    }

    else
    {
      __int128 __p = *(_OWORD *)(v45 + 9);
      uint64_t v56 = v45[11];
    }

    sub_100DD9DDC((uint64_t)v14, v11, (uint64_t)"lister");
    uint64_t v20 = v11 + 184;
    int v21 = sub_100603294((uint64_t **)(v11 + 184), (unsigned int *)v54);
    BOOL v22 = v45;
    uint64_t v45 = 0LL;
    uint64_t v23 = *v21;
    *int v21 = (uint64_t)v22;
    if (v23) {
      (*(void (**)(uint64_t))(*(void *)v23 + 8LL))(v23);
    }
    uint64_t v24 = *(void *)(v11 + 304);
    if (v24) {
      (*(void (**)(uint64_t))(*(void *)v24 + 32LL))(v24);
    }
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    unsigned int v25 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_INFO))
    {
      int v26 = sub_100DD8CC8(v5);
      double v27 = sub_1008ADB4C((uint64_t)v54);
      double v28 = sub_1008ADB70((uint64_t)v54);
      uint64_t v29 = sub_100019240(v20);
      *(_DWORD *)std::string buf = 136446979;
      __int16 v58 = v26;
      __int16 v59 = 2049;
      double v60 = v27;
      __int16 v61 = 2049;
      double v62 = v28;
      __int16 v63 = 2050;
      uint64_t v64 = v29;
      _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_INFO,  "@TileList, %{public}s, create, llsw, %{private}.2lf, %{private}.2lf, size, %{public}lu",  buf,  0x2Au);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101883640);
      }
      uint64_t v38 = qword_101934858;
      int v39 = sub_100DD8CC8(v5);
      double v40 = sub_1008ADB4C((uint64_t)v54);
      double v41 = sub_1008ADB70((uint64_t)v54);
      uint64_t v42 = sub_100019240(v20);
      int v46 = 136446979;
      uint64_t v47 = v39;
      __int16 v48 = 2049;
      double v49 = v40;
      __int16 v50 = 2049;
      double v51 = v41;
      __int16 v52 = 2050;
      uint64_t v53 = v42;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v38,  1LL,  "@TileList, %{public}s, create, llsw, %{private}.2lf, %{private}.2lf, size, %{public}lu",  &v46,  42);
      uint64_t v44 = (uint8_t *)v43;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "std::tuple<BOOL, CLTileFile *> CLCellTilesManager::createTileFileObject(CLTilesManager_Type::TileType, const std ::string &, const std::string &, CFAbsoluteTime)",  "%s\n",  v43);
      if (v44 != buf) {
        free(v44);
      }
    }

    sub_1006025CC(v20, (unsigned int *)v54);
    if (SHIBYTE(v56) < 0) {
      operator delete((void *)__p);
    }
    uint64_t v19 = 1LL;
    goto LABEL_35;
  }

  p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
  if (qword_101934850 != -1) {
    goto LABEL_39;
  }
LABEL_12:
  BOOL v15 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    std::string::size_type v16 = sub_100DD8CC8(v5);
    if (v7[23] >= 0) {
      double v17 = v7;
    }
    else {
      double v17 = *(char **)v7;
    }
    if (v6[23] >= 0) {
      double v18 = v6;
    }
    else {
      double v18 = *(std::string::value_type **)v6;
    }
    *(_DWORD *)std::string buf = 136446722;
    __int16 v58 = v16;
    __int16 v59 = 2082;
    double v60 = *(double *)&v17;
    __int16 v61 = 2082;
    double v62 = *(double *)&v18;
    _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "@TileList, %{public}s, readerror, dir, %{public}s, file, %{public}s, #CloneMe",  buf,  0x20u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    uint64_t v32 = qword_101934858;
    uint64_t v33 = sub_100DD8CC8(v5);
    if (v7[23] >= 0) {
      uint64_t v34 = v7;
    }
    else {
      uint64_t v34 = *(char **)v7;
    }
    if (v6[23] >= 0) {
      uint64_t v35 = v6;
    }
    else {
      uint64_t v35 = *(std::string::value_type **)v6;
    }
    *(_DWORD *)unsigned int v54 = 136446722;
    *(void *)&v54[4] = v33;
    *(_WORD *)&v54[12] = 2082;
    *(void *)&v54[14] = v34;
    *(_WORD *)&v54[22] = 2082;
    *(void *)&__int128 __p = v35;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v32,  0LL,  "@TileList, %{public}s, readerror, dir, %{public}s, file, %{public}s, #CloneMe",  v54,  32);
    uint64_t v37 = (uint8_t *)v36;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "std::tuple<BOOL, CLTileFile *> CLCellTilesManager::createTileFileObject(CLTilesManager_Type::TileType, const std:: string &, const std::string &, CFAbsoluteTime)",  "%s\n",  v36);
    if (v37 != buf) {
      free(v37);
    }
  }

  uint64_t v19 = 0LL;
LABEL_35:
  unsigned int v30 = v45;
  uint64_t v45 = 0LL;
  if (v30) {
    (*(void (**)(uint64_t *))(*v30 + 8))(v30);
  }
  return v19;
}

void sub_100DC69D4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, void *__p, uint64_t a23, int a24, __int16 a25, char a26, char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  if (a12) {
    (*(void (**)(uint64_t))(*(void *)a12 + 8LL))(a12);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DC6A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  __int128 v53 = *(_OWORD *)(a2 + 48);
  uint64_t v54 = *(void *)(a2 + 64);
  if (*(char *)(a2 + 95) < 0)
  {
    sub_1010DD48C(&v55, *(void **)(a2 + 72), *(void *)(a2 + 80));
  }

  else
  {
    __int128 v55 = *(_OWORD *)(a2 + 72);
    uint64_t v56 = *(void *)(a2 + 88);
  }

  double v10 = *(double *)(a1 + 252);
  double v11 = *(double *)(a1 + 152);
  BOOL v12 = sub_100C148B0((double *)a2, a1 + 176, 30000.0);
  if (!*(_BYTE *)(a1 + 128) || fabs(a5 - v10 + 60.0) >= v11 || !v12)
  {
    sub_100C145F0(a2, *(unsigned __int8 *)(a1 + 128) != 0);
  }

  else
  {
    char v13 = sub_100C11C74(a2);
    uint64_t v14 = a3 + 184;
    sub_100602F80(v14, (unsigned int *)&v53);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101883660);
    }
    BOOL v15 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(__p, a2);
      int v16 = SHIBYTE(v73);
      double v17 = *(_BYTE **)__p;
      uint64_t v18 = sub_100603208(v14);
      uint64_t v19 = __p;
      if (v16 < 0) {
        uint64_t v19 = v17;
      }
      *(_DWORD *)std::string buf = 136315394;
      *(void *)&uint8_t buf[4] = v19;
      __int16 v58 = 2048;
      double v59 = *(double *)&v18;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "TILE: tileDecompressionCompleted, added to unprotected list, tileid, %s, size, %lu",  buf,  0x16u);
      if (SHIBYTE(v73) < 0) {
        operator delete(*(void **)__p);
      }
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101883660);
      }
      uint64_t v38 = qword_101934A78;
      (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(buf, a2);
      int v39 = SHIBYTE(v60);
      double v40 = *(_BYTE **)buf;
      uint64_t v41 = sub_100603208(v14);
      uint64_t v42 = buf;
      if (v39 < 0) {
        uint64_t v42 = v40;
      }
      int v66 = 136315394;
      double v67 = v42;
      __int16 v68 = 2048;
      uint64_t v69 = v41;
      _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v38,  2LL,  "TILE: tileDecompressionCompleted, added to unprotected list, tileid, %s, size, %lu",  (const char *)&v66,  22);
      uint64_t v44 = v43;
      if (SHIBYTE(v60) < 0) {
        operator delete(*(void **)buf);
      }
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::lockTileIfNeeded(CLTileFile *, CLTilesSet &, CFAbsoluteTime, const char *)",  "%s\n",  v44);
      if (v44 != __p) {
        free(v44);
      }
    }

    if ((v13 & 1) == 0)
    {
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101883660);
      }
      uint64_t v20 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(__p, a2);
        int v21 = SHIBYTE(v73);
        BOOL v22 = *(_BYTE **)__p;
        uint64_t v23 = sub_100603208(v14);
        uint64_t v24 = __p;
        if (v21 < 0) {
          uint64_t v24 = v22;
        }
        *(_DWORD *)std::string buf = 136315394;
        *(void *)&uint8_t buf[4] = v24;
        __int16 v58 = 2048;
        double v59 = *(double *)&v23;
        _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEBUG,  "TILE: tileDecompressionCompleted, unable to unlock, tileid, %s, size, %lu",  buf,  0x16u);
        if (SHIBYTE(v73) < 0) {
          operator delete(*(void **)__p);
        }
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(__p, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101883660);
        }
        uint64_t v45 = qword_101934A78;
        (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(buf, a2);
        int v46 = SHIBYTE(v60);
        uint64_t v47 = *(_BYTE **)buf;
        uint64_t v48 = sub_100603208(v14);
        double v49 = buf;
        if (v46 < 0) {
          double v49 = v47;
        }
        int v66 = 136315394;
        double v67 = v49;
        __int16 v68 = 2048;
        uint64_t v69 = v48;
        LODWORD(v52) = 22;
        _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v45,  2LL,  "TILE: tileDecompressionCompleted, unable to unlock, tileid, %s, size, %lu",  (const char *)&v66,  v52);
        double v51 = v50;
        if (SHIBYTE(v60) < 0) {
          operator delete(*(void **)buf);
        }
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::lockTileIfNeeded(CLTileFile *, CLTilesSet &, CFAbsoluteTime, const char *)",  "%s\n",  v51);
        if (v51 != __p) {
          free(v51);
        }
      }
    }

    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    unsigned int v25 = (unsigned int *)(a2 + 48);
    int v26 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_INFO))
    {
      double v27 = sub_100DD8CC8(*v25);
      double v28 = sub_1008ADB4C((uint64_t)&v53);
      double v29 = sub_1008ADB70((uint64_t)&v53);
      uint64_t v30 = sub_100603208(v14);
      *(_DWORD *)__int128 __p = 136447235;
      *(void *)&__p[4] = v27;
      __int16 v71 = 2049;
      double v72 = v28;
      __int16 v73 = 2049;
      double v74 = v29;
      __int16 v75 = 2082;
      uint64_t v76 = a4;
      __int16 v77 = 2050;
      uint64_t v78 = v30;
      _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_INFO,  "@TileList, %{public}s, unprotect, llsw, %{private}.2lf, %{private}.2lf, %{public}s, size, %{public}lu",  __p,  0x34u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101883640);
      }
      uint64_t v31 = qword_101934858;
      uint64_t v32 = sub_100DD8CC8(*v25);
      double v33 = sub_1008ADB4C((uint64_t)&v53);
      double v34 = sub_1008ADB70((uint64_t)&v53);
      uint64_t v35 = sub_100603208(v14);
      *(_DWORD *)std::string buf = 136447235;
      *(void *)&uint8_t buf[4] = v32;
      __int16 v58 = 2049;
      double v59 = v33;
      __int16 v60 = 2049;
      double v61 = v34;
      __int16 v62 = 2082;
      uint64_t v63 = a4;
      __int16 v64 = 2050;
      uint64_t v65 = v35;
      LODWORD(v52) = 52;
      _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v31,  1LL,  "@TileList, %{public}s, unprotect, llsw, %{private}.2lf, %{private}.2lf, %{public}s, size, %{public}lu",  buf,  v52,  v53,  v54);
      uint64_t v37 = (char *)v36;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::lockTileIfNeeded(CLTileFile *, CLTilesSet &, CFAbsoluteTime, const char *)",  "%s\n",  v36);
      if (v37 != __p) {
        free(v37);
      }
    }
  }

  if (SHIBYTE(v56) < 0) {
    operator delete((void *)v55);
  }
}

void sub_100DC7154( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *a20, uint64_t a21, int a22, __int16 a23, char a24, char a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, int a37, __int16 a38, char a39, char a40)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

id *sub_100DC71D0(uint64_t a1)
{
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101883640);
  }
  uint64_t v2 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    int v3 = *(unsigned __int8 *)(a1 + 56);
    *(_DWORD *)std::string buf = 67240192;
    int v10 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "TileDl, tileDownloadedCallback, success, %{public}d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    int v5 = *(unsigned __int8 *)(a1 + 56);
    v8[0] = 67240192;
    v8[1] = v5;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "TileDl, tileDownloadedCallback, success, %{public}d",  v8,  8);
    std::string::size_type v7 = (uint8_t *)v6;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLCellTilesManager::tileDownloadCallback(CLFileDownload *, BOOL, void *)_block_invoke",  "%s\n",  v6);
    if (v7 != buf) {
      free(v7);
    }
  }

  return sub_100DC738C(*(void *)(a1 + 32), *(void *)(a1 + 40), *(_BYTE *)(a1 + 56));
}

id *sub_100DC738C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  unsigned __int8 v96 = a3;
  sub_100222B94(v95, (uint64_t)"cellTileDownloaded", 0);
  double v5 = (*(double (**)(void))(**(void **)(a1 + 368) + 16LL))(*(void *)(a1 + 368));
  uint64_t v6 = sub_100CF1D84(*(void **)(a1 + 376), a2);
  std::string::size_type v7 = (char *)v6;
  int v94 = 0;
  if (v6)
  {
    __int128 v90 = *(_OWORD *)(v6 + 48);
    uint64_t v91 = *(void *)(v6 + 64);
    if (*(char *)(v6 + 95) < 0)
    {
      sub_1010DD48C(&v92, *(void **)(v6 + 72), *(void *)(v6 + 80));
    }

    else
    {
      __int128 v92 = *(_OWORD *)(v6 + 72);
      uint64_t v93 = *(void *)(v6 + 88);
    }

    unsigned int v11 = *((_DWORD *)v7 + 12);
    uint64_t v12 = *(void *)(sub_10096B584((uint64_t)v7) + 96);
    uint64_t v13 = a1 + 392;
    uint64_t v78 = v12;
    if (v96 || v12 == -1100) {
      sub_100BD8374(v13);
    }
    else {
      sub_100BD83A0(v13, v5);
    }
    uint64_t v14 = sub_100DD9288(v11, (void *)(a1 + 416));
    if (v96 && (_os_feature_enabled_impl("CoreLocation", "TilesService") & 1) == 0) {
      unsigned __int8 v96 = (*(uint64_t (**)(char *, int *))(*(void *)v7 + 40LL))(v7, &v94);
    }
    p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    int v16 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      double v17 = sub_100DD8CC8(v11);
      double v18 = sub_1008ADB4C((uint64_t)&v90);
      double v19 = sub_1008ADB70((uint64_t)&v90);
      int v20 = v96;
      uint64_t v21 = *(void *)(sub_10096B584((uint64_t)v7) + 96);
      *(_DWORD *)std::string buf = 136447235;
      *(void *)&uint8_t buf[4] = v17;
      __int16 v106 = 2049;
      *(double *)int v107 = v18;
      *(_WORD *)&v107[8] = 2049;
      double v108 = v19;
      *(_WORD *)int v109 = 1026;
      *(_DWORD *)&v109[2] = v20;
      *(_WORD *)&v109[6] = 1026;
      *(_DWORD *)&v109[8] = v21;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "@TileReq, %{public}s, downloaded, llsw, %{private}.2lf, %{private}.2lf, success, %{public}d, NSURLErrorCode, %{public}d",  buf,  0x2Cu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101883640);
      }
      uint64_t v50 = qword_101934858;
      double v51 = sub_100DD8CC8(v11);
      double v52 = sub_1008ADB4C((uint64_t)&v90);
      double v53 = sub_1008ADB70((uint64_t)&v90);
      int v54 = v96;
      uint64_t v55 = *(void *)(sub_10096B584((uint64_t)v7) + 96);
      *(_DWORD *)__int128 __p = 136447235;
      *(void *)&__p[4] = v51;
      __int16 v98 = 2049;
      *(double *)double v99 = v52;
      *(_WORD *)&v99[8] = 2049;
      double v100 = v53;
      *(_WORD *)uint64_t v101 = 1026;
      *(_DWORD *)&v101[2] = v54;
      *(_WORD *)&v101[6] = 1026;
      *(_DWORD *)&v101[8] = v55;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v50,  0LL,  "@TileReq, %{public}s, downloaded, llsw, %{private}.2lf, %{private}.2lf, success, %{public}d, NSURLErrorCode, %{public}d",  __p,  44);
      unsigned int v57 = (char *)v56;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::tileDownloadCompleted(CLFileDownload *, BOOL, void *)",  "%s\n",  v56);
      if (v57 != buf) {
        free(v57);
      }
    }

    if (v96)
    {
      int v22 = v94;
      (*(void (**)(uint64_t))(*(void *)(v14 + 232) + 16LL))(v14 + 232);
      *(_DWORD *)(v14 + 276) += v22;
      (*(void (**)(uint64_t))(*(void *)(v14 + 232) + 24LL))(v14 + 232);
      (*(void (**)(uint64_t))(*(void *)(v14 + 232) + 16LL))(v14 + 232);
      ++*(_DWORD *)(v14 + 284);
      (*(void (**)(uint64_t))(*(void *)(v14 + 232) + 24LL))(v14 + 232);
      sub_1010DDBC0(buf, "tileDownloadCompleted");
      sub_100987188(v14 + 232, (uint64_t *)buf, *(_DWORD *)(a1 + 352));
      if ((v107[9] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
    }

    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    uint64_t v23 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      unsigned int v24 = v11;
      unsigned int v25 = __p;
      (*(void (**)(_BYTE *__return_ptr, char *))(*(void *)v7 + 16LL))(__p, v7);
      if (v99[9] < 0) {
        unsigned int v25 = *(_BYTE **)__p;
      }
      int v26 = v96;
      uint64_t v27 = *(void *)(sub_10096B584((uint64_t)v7) + 96);
      int v28 = *(_DWORD *)(a1 + 352);
      BOOL v29 = sub_1008AD1E0((unsigned int *)&v90);
      int v30 = *(unsigned __int8 *)(a1 + 128);
      *(_DWORD *)std::string buf = 136382467;
      *(void *)&uint8_t buf[4] = v25;
      __int16 v106 = 1026;
      *(_DWORD *)int v107 = v26;
      *(_WORD *)&v107[4] = 1026;
      *(_DWORD *)&v107[6] = v27;
      LOWORD(v10_Block_object_dispose(va, 8) = 1026;
      *(_DWORD *)((char *)&v108 + 2) = v78 == -1100;
      HIWORD(v10_Block_object_dispose(va, 8) = 1026;
      *(_DWORD *)int v109 = v28;
      *(_WORD *)&v109[4] = 1026;
      *(_DWORD *)&v109[6] = v29;
      *(_WORD *)&v109[10] = 1026;
      int v110 = v30;
      __int16 v111 = 1026;
      int v112 = v94;
      _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEBUG,  "@TileDl, tileDecompressionCompleted, tile, %{private}s, decompress done, success, %{public}d, NSURLErrorCode, %{ public}d, tileDoesNotExist, %{public}d, reachability, %{public}d, validId, %{public}d, locked, %{public}d, fileSize, %{public}d",  buf,  0x36u);
      if ((v99[9] & 0x80000000) != 0) {
        operator delete(*(void **)__p);
      }
      unsigned int v11 = v24;
      p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101883640);
      }
      uint64_t v58 = qword_101934858;
      double v59 = v88;
      (*(void (**)(void **__return_ptr, char *))(*(void *)v7 + 16LL))(v88, v7);
      HIDWORD(v77) = v11;
      if (v89 < 0) {
        double v59 = (void **)v88[0];
      }
      int v60 = v96;
      uint64_t v61 = *(void *)(sub_10096B584((uint64_t)v7) + 96);
      int v62 = *(_DWORD *)(a1 + 352);
      BOOL v63 = sub_1008AD1E0((unsigned int *)&v90);
      int v64 = *(unsigned __int8 *)(a1 + 128);
      *(_DWORD *)__int128 __p = 136382467;
      *(void *)&__p[4] = v59;
      __int16 v98 = 1026;
      *(_DWORD *)double v99 = v60;
      *(_WORD *)&v99[4] = 1026;
      *(_DWORD *)&v99[6] = v61;
      LOWORD(v10sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 1026;
      *(_DWORD *)((char *)&v100 + 2) = v78 == -1100;
      HIWORD(v10sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 1026;
      *(_DWORD *)uint64_t v101 = v62;
      *(_WORD *)&v101[4] = 1026;
      *(_DWORD *)&v101[6] = v63;
      *(_WORD *)&v101[10] = 1026;
      int v102 = v64;
      __int16 v103 = 1026;
      int v104 = v94;
      LODWORD(v77) = 54;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v58,  2LL,  "@TileDl, tileDecompressionCompleted, tile, %{private}s, decompress done, success, %{public}d, NSURLErrorCode, %{ public}d, tileDoesNotExist, %{public}d, reachability, %{public}d, validId, %{public}d, locked, %{public}d, fileSize, %{public}d",  __p,  v77);
      int v66 = v65;
      if (v89 < 0) {
        operator delete(v88[0]);
      }
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::tileDownloadCompleted(CLFileDownload *, BOOL, void *)",  "%s\n",  v66);
      unsigned int v11 = HIDWORD(v76);
      p_vtable = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
      if (v66 != buf) {
        free(v66);
      }
    }

    if (!sub_1008AD1E0((unsigned int *)&v90))
    {
      uint64_t v31 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, "@TileError, DecompressionID", buf, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        *(_WORD *)__int128 __p = 0;
        LODWORD(v76) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "@TileError, DecompressionID",  __p,  v76);
        __int16 v75 = (char *)v74;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::tileDownloadCompleted(CLFileDownload *, BOOL, void *)",  "%s\n",  v74);
        if (v75 != buf) {
          free(v75);
        }
      }
    }

    unsigned __int8 v96 = sub_100C102DC((uint64_t)v7, v96, v78 == -1100, v5);
    (*(void (**)(uint64_t))(*(void *)a2 + 24LL))(a2);
    sub_100DC82DC(a1, v96, v7, v14, v94);
    if (sub_100E575B0())
    {
      sub_1002A5370(buf);
      uint64_t v32 = v7 + 8;
      if (v7[31] < 0) {
        uint64_t v32 = *(char **)v32;
      }
      sub_1002ACA84((uint64_t)buf, "gotTile", v32);
      sub_1002AB3FC((uint64_t)buf, "success", &v96);
      sub_1002AB3FC((uint64_t)buf, "protection", (_BYTE *)(a1 + 128));
      sub_100E57614((uint64_t)buf, (uint64_t)"locationd");
      sub_1002A5590(buf);
    }

    if (v96)
    {
      sub_100DD9DDC((uint64_t)v7, v14, (uint64_t)"download");
      uint64_t v33 = *(void *)(a1 + 376);
      __int128 v84 = v90;
      uint64_t v85 = v91;
      if (SHIBYTE(v93) < 0)
      {
        sub_1010DD48C(&v86, (void *)v92, *((unint64_t *)&v92 + 1));
      }

      else
      {
        __int128 v86 = v92;
        uint64_t v87 = v93;
      }

      sub_100CF1E0C(v33, (uint64_t)&v84, v96, v78 == -1100, (uint64_t *)v88, v5);
      if (SHIBYTE(v87) < 0) {
        operator delete((void *)v86);
      }
      if (v88[0])
      {
        uint64_t v36 = sub_100603294((uint64_t **)(v14 + 184), (unsigned int *)&v90);
        uint64_t v37 = v88[0];
        v88[0] = 0LL;
        uint64_t v38 = *v36;
        *uint64_t v36 = (uint64_t)v37;
        if (v38) {
          (*(void (**)(uint64_t))(*(void *)v38 + 8LL))(v38);
        }
      }

      uint64_t v39 = sub_1006025CC(v14 + 184, (unsigned int *)&v90);
      sub_100DD963C(v39, v5);
      uint64_t v40 = sub_1006025CC(v14 + 184, (unsigned int *)&v90);
      sub_100DC6A38(a1, v40, v14, (uint64_t)"download", v5);
      uint64_t v41 = *(void *)(v14 + 304);
      if (v41) {
        (*(void (**)(uint64_t))(*(void *)v41 + 32LL))(v41);
      }
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101883640);
      }
      uint64_t v42 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_INFO))
      {
        int v43 = sub_100DD8CC8(v11);
        double v44 = sub_1008ADB4C((uint64_t)&v90);
        double v45 = sub_1008ADB70((uint64_t)&v90);
        uint64_t v46 = sub_100019240(v14 + 184);
        *(_DWORD *)std::string buf = 136446979;
        *(void *)&uint8_t buf[4] = v43;
        __int16 v106 = 2049;
        *(double *)int v107 = v44;
        *(_WORD *)&v107[8] = 2049;
        double v108 = v45;
        *(_WORD *)int v109 = 2050;
        *(void *)&v109[2] = v46;
        _os_log_impl( (void *)&_mh_execute_header,  v42,  OS_LOG_TYPE_INFO,  "@TileReq, %{public}s, add, llsw, %{private}.2lf, %{private}.2lf, download, size, %{public}lu",  buf,  0x2Au);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101883640);
        }
        uint64_t v67 = qword_101934858;
        __int16 v68 = sub_100DD8CC8(v11);
        double v69 = sub_1008ADB4C((uint64_t)&v90);
        double v70 = sub_1008ADB70((uint64_t)&v90);
        uint64_t v71 = sub_100019240(v14 + 184);
        *(_DWORD *)__int128 __p = 136446979;
        *(void *)&__p[4] = v68;
        __int16 v98 = 2049;
        *(double *)double v99 = v69;
        *(_WORD *)&v99[8] = 2049;
        double v100 = v70;
        *(_WORD *)uint64_t v101 = 2050;
        *(void *)&v101[2] = v71;
        LODWORD(v76) = 42;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v67,  1LL,  "@TileReq, %{public}s, add, llsw, %{private}.2lf, %{private}.2lf, download, size, %{public}lu",  __p,  v76);
        __int16 v73 = (char *)v72;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::tileDownloadCompleted(CLFileDownload *, BOOL, void *)",  "%s\n",  v72);
        if (v73 != buf) {
          free(v73);
        }
      }

      ++*(_DWORD *)(v14 + 288);
      sub_100DC4C80(a1, v5);
      uint64_t v47 = v88[0];
      v88[0] = 0LL;
      if (v47) {
        (*(void (**)(void *))(*(void *)v47 + 8LL))(v47);
      }
    }

    else
    {
      uint64_t v34 = *(void *)(a1 + 376);
      __int128 v79 = v90;
      uint64_t v80 = v91;
      if (SHIBYTE(v93) < 0)
      {
        sub_1010DD48C(&v81, (void *)v92, *((unint64_t *)&v92 + 1));
        BOOL v35 = v96 != 0;
      }

      else
      {
        BOOL v35 = 0;
        __int128 v81 = v92;
        uint64_t v82 = v93;
      }

      sub_100CF1E0C(v34, (uint64_t)&v79, v35, v78 == -1100, &v83, v5);
      uint64_t v48 = v83;
      uint64_t v83 = 0LL;
      if (v48) {
        (*(void (**)(uint64_t))(*(void *)v48 + 8LL))(v48);
      }
      if (SHIBYTE(v82) < 0) {
        operator delete((void *)v81);
      }
    }

    if (SHIBYTE(v93) < 0) {
      operator delete((void *)v92);
    }
  }

  else
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    uint64_t v8 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "@TileError, tile not on download list, #CloneMe",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101883640);
      }
      *(_WORD *)__int128 __p = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  16LL,  "@TileError, tile not on download list, #CloneMe",  __p,  2);
      int v10 = (char *)v9;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLCellTilesManager::tileDownloadCompleted(CLFileDownload *, BOOL, void *)",  "%s\n",  v9);
      if (v10 != buf) {
        free(v10);
      }
    }
  }

  sub_100DC4570(a1, v5);
  return sub_1001BA1BC(v95);
}

void sub_100DC81B4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, void *a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, void *__p, uint64_t a35, int a36, __int16 a37, char a38, char a39, uint64_t a40, id a41)
{
  if (a39 < 0) {
    operator delete(__p);
  }
  sub_1001BA1BC(&a41);
  _Unwind_Resume(a1);
}

void sub_100DC82DC(uint64_t a1, char a2, _DWORD *a3, uint64_t a4, int a5)
{
  double v10 = (*(double (**)(void))(**(void **)(a1 + 368) + 16LL))(*(void *)(a1 + 368));
  int v11 = a3[12];
  memset(&v37, 0, sizeof(v37));
  memset(v36, 0, sizeof(v36));
  v34[0] = a2;
  int v35 = v11;
  std::string::operator=(v36, (const std::string *)(a4 + 56));
  sub_1008AE164((uint64_t)(a3 + 12), &buf);
  v36[1] = buf;
  sub_100C0FCEC((uint64_t)a3, &buf);
  std::string v37 = buf;
  int v38 = a5;
  double v12 = *(double *)(a4 + 136);
  __int128 v13 = *(_OWORD *)(a1 + 272);
  __int128 v14 = *(_OWORD *)(a1 + 304);
  v32[7] = *(_OWORD *)(a1 + 288);
  v33[0] = v14;
  *(_OWORD *)((char *)v33 + 12) = *(_OWORD *)(a1 + 316);
  __int128 v15 = *(_OWORD *)(a1 + 224);
  v32[2] = *(_OWORD *)(a1 + 208);
  void v32[3] = v15;
  __int128 v16 = *(_OWORD *)(a1 + 256);
  _DWORD v32[4] = *(_OWORD *)(a1 + 240);
  void v32[5] = v16;
  v32[6] = v13;
  __int128 v17 = *(_OWORD *)(a1 + 192);
  v32[0] = *(_OWORD *)(a1 + 176);
  v32[1] = v17;
  unsigned __int8 v39 = sub_100DD8DB4((uint64_t)a3, (uint64_t)v32, v12, v10);
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101883640);
  }
  double v18 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    (*(void (**)(_BYTE *__return_ptr, _DWORD *))(*(void *)a3 + 16LL))(v40, a3);
    double v19 = v44 >= 0 ? v40 : *(_BYTE **)v40;
    int v20 = (v36[0].__r_.__value_.__s.__size_ & 0x80u) == 0 ? v36 : (std::string *)v36[0].__r_.__value_.__r.__words[0];
    uint64_t v21 = (v36[1].__r_.__value_.__s.__size_ & 0x80u) == 0 ? &v36[1] : (std::string *)v36[1].__r_.__value_.__r.__words[0];
    int v22 = (v37.__r_.__value_.__s.__size_ & 0x80u) == 0 ? &v37 : (std::string *)v37.__r_.__value_.__r.__words[0];
    LODWORD(buf.__r_.__value_.__l.__data_) = 136382467;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v19;
    WORD2(buf.__r_.__value_.__r.__words[1]) = 1026;
    *(_DWORD *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v34[0];
    WORD1(buf.__r_.__value_.__r.__words[2]) = 1026;
    HIDWORD(buf.__r_.__value_.__r.__words[2]) = v35;
    __int16 v56 = 2081;
    unsigned int v57 = v20;
    __int16 v58 = 2081;
    double v59 = v21;
    __int16 v60 = 2081;
    uint64_t v61 = v22;
    __int16 v62 = 1026;
    int v63 = a5;
    __int16 v64 = 1026;
    int v65 = v39;
    _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEBUG,  "@TileDl, kNotificationTileWasDownloaded, tileid, %{private}s, tileHeaderParsed, %{public}d, tileType, %{public}d, serverUrl, %{private}s, serverFilename, %{private}s, absoluteLocalFilename, %{private}s, size, %{public}d, current, %{public}d",  (uint8_t *)&buf,  0x42u);
    if (SHIBYTE(v44) < 0) {
      operator delete(*(void **)v40);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    uint64_t v23 = qword_101934858;
    (*(void (**)(void **__return_ptr, _DWORD *))(*(void *)a3 + 16LL))(v30, a3);
    if (v31 >= 0) {
      unsigned int v24 = v30;
    }
    else {
      unsigned int v24 = (void **)v30[0];
    }
    if ((v36[0].__r_.__value_.__s.__size_ & 0x80u) == 0) {
      unsigned int v25 = v36;
    }
    else {
      unsigned int v25 = (std::string *)v36[0].__r_.__value_.__r.__words[0];
    }
    if ((v36[1].__r_.__value_.__s.__size_ & 0x80u) == 0) {
      data = &v36[1];
    }
    else {
      data = (std::string *)v36[1].__r_.__value_.__l.__data_;
    }
    if ((v37.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v27 = &v37;
    }
    else {
      uint64_t v27 = (std::string *)v37.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)uint64_t v40 = 136382467;
    *(void *)&_DWORD v40[4] = v24;
    __int16 v41 = 1026;
    int v42 = v34[0];
    __int16 v43 = 1026;
    int v44 = v35;
    __int16 v45 = 2081;
    uint64_t v46 = v25;
    __int16 v47 = 2081;
    uint64_t v48 = data;
    __int16 v49 = 2081;
    uint64_t v50 = v27;
    __int16 v51 = 1026;
    int v52 = a5;
    __int16 v53 = 1026;
    int v54 = v39;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v23,  2LL,  "@TileDl, kNotificationTileWasDownloaded, tileid, %{private}s, tileHeaderParsed, %{public}d, tileType, %{public}d, serverUrl, %{private}s, serverFilename, %{private}s, absoluteLocalFilename, %{private}s, size, %{public}d, current, %{public}d",  v40,  66);
    BOOL v29 = v28;
    if (v31 < 0) {
      operator delete(v30[0]);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::sendNotificationTileWasDownloaded(BOOL, const CLTileFile &, const CLTilesSet &, unsigned int)",  "%s\n",  (const char *)v29);
    if (v29 != &buf) {
      free(v29);
    }
  }

  LODWORD(buf.__r_.__value_.__l.__data_) = 0;
  (*(void (**)(uint64_t, std::string *, _BYTE *, void, uint64_t, void))(*(void *)a1 + 152LL))( a1,  &buf,  v34,  0LL,  0xFFFFFFFFLL,  0LL);
}

void sub_100DC877C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, char a36)
{
}

id sub_100DC87A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  int v3 = *(void **)(v2 + 40);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  _DWORD v5[2] = sub_100DC8800;
  _OWORD v5[3] = &unk_101830538;
  v5[4] = v2;
  v5[5] = a2;
  return [v3 async:v5];
}

void sub_100DC8800(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  double v3 = (*(double (**)(void))(**(void **)(v2 + 368) + 16LL))(*(void *)(v2 + 368));
  uint64_t v4 = *(void *)(a1 + 40) + 184LL;
  double v5 = (void *)sub_1005B46E8(v4);
  uint64_t v6 = sub_100056FA8(v4);
  if (v5 != (void *)v6)
  {
    std::string::size_type v7 = (void *)v6;
    char v8 = 0;
    do
    {
      char v9 = sub_100CF21F8(*(void *)(v2 + 376), v5[10], v3);
      double v10 = (void *)v5[1];
      if (v10)
      {
        do
        {
          int v11 = v10;
          double v10 = (void *)*v10;
        }

        while (v10);
      }

      else
      {
        do
        {
          int v11 = (void *)v5[2];
          BOOL v12 = *v11 == (void)v5;
          double v5 = v11;
        }

        while (!v12);
      }

      v8 |= v9;
      double v5 = v11;
    }

    while (v11 != v7);
    if ((v8 & 1) != 0)
    {
      int v13 = (*(uint64_t (**)(void))(**(void **)(v2 + 368) + 40LL))(*(void *)(v2 + 368));
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101883640);
      }
      __int128 v14 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::string buf = 67240192;
        int v19 = v13;
        _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "@TileSched, cell, set, %{public}d",  buf,  8u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101883640);
        }
        v17[0] = 67240192;
        v17[1] = v13;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "@TileSched, cell, set, %{public}d",  v17,  8);
        __int128 v16 = (uint8_t *)v15;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::refreshTilesDataIfNeeded()_block_invoke",  "%s\n",  v15);
        if (v16 != buf) {
          free(v16);
        }
      }
    }
  }

uint64_t sub_100DC8A5C(uint64_t a1, void *a2, unsigned int *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_100F59508((uint64_t)a3);
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101883660);
  }
  double v10 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    sub_100F57510(a3, __p);
    int v11 = (__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0
        ? __p
        : (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
    LODWORD(buf.__r_.__value_.__l.__data_) = 134218242;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v9;
    WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v11;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "TILE: getLocationByCellFromTile, searching, sec_key, %016llX, %s",  (uint8_t *)&buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101883660);
    }
    uint64_t v31 = qword_101934A78;
    sub_100F57510(a3, &buf);
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_std::stringbuf::string_type buf = &buf;
    }
    else {
      p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    int v46 = 134218242;
    *(void *)__int16 v47 = v9;
    *(_WORD *)&v47[8] = 2080;
    *(void *)&v47[10] = p_buf;
    _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v31,  2LL,  "TILE: getLocationByCellFromTile, searching, sec_key, %016llX, %s",  &v46,  22);
    uint64_t v34 = v33;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCellTilesManager::getLocationByCellFromTile(CLTileFile *, const CLCell &, SearchContext &, CLDaemonLocation &)",  "%s\n",  (const char *)v34);
    if (v34 != __p) {
      free(v34);
    }
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101883660);
  }
  BOOL v12 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    int v13 = sub_100C14E3C((uint64_t)a2, *(_BYTE *)(a1 + 128));
    (*(void (**)(std::stringbuf::string_type *__return_ptr, void *))(*a2 + 16LL))(__p, a2);
    __int128 v14 = (__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0
        ? __p
        : (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
    LODWORD(buf.__r_.__value_.__l.__data_) = 67109378;
    HIDWORD(buf.__r_.__value_.__r.__words[0]) = v13;
    LOWORD(buf.__r_.__value_.__r.__words[1]) = 2080;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)v14;
    _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "TILE: getLocationByCellFromTile, in tile, accessible, %d, %s",  (uint8_t *)&buf,  0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101883660);
    }
    uint64_t v35 = qword_101934A78;
    int v36 = sub_100C14E3C((uint64_t)a2, *(_BYTE *)(a1 + 128));
    (*(void (**)(std::stringbuf::string_type *__return_ptr, void *))(*a2 + 16LL))(&buf, a2);
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      std::string v37 = &buf;
    }
    else {
      std::string v37 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    int v46 = 67109378;
    *(_DWORD *)__int16 v47 = v36;
    *(_WORD *)&v47[4] = 2080;
    *(void *)&v47[6] = v37;
    LODWORD(v44) = 18;
    _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v35,  2LL,  "TILE: getLocationByCellFromTile, in tile, accessible, %d, %s",  &v46,  v44);
    unsigned __int8 v39 = v38;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCellTilesManager::getLocationByCellFromTile(CLTileFile *, const CLCell &, SearchContext &, CLDaemonLocation &)",  "%s\n",  (const char *)v39);
    if (v39 != __p) {
      free(v39);
    }
  }

  unsigned int v15 = a3[2];
  if (v15 > 7 || ((1 << v15) & 0x87) == 0 || a2[8] != v9)
  {
    if (v15 - 3 > 2)
    {
      if (v15 == 6 && a2[8] == v9)
      {
        WORD2(__p[0].__r_.__value_.__r.__words[1]) = 0;
        LODWORD(__p[0].__r_.__value_.__r.__words[1]) = 0;
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 6) = 0LL;
        buf.__r_.__value_.__r.__words[0] = 0LL;
        __p[0].__r_.__value_.__r.__words[0] = *(void *)(sub_100450CD0((uint64_t)a3) + 8);
        int v21 = (*(uint64_t (**)(void *, std::stringbuf::string_type *, std::stringbuf::string_type *))(*a2 + 176LL))( a2,  __p,  &buf);
LABEL_33:
        if (v21) {
          goto LABEL_24;
        }
        goto LABEL_34;
      }
    }

    else if (a2[8] == v9)
    {
      WORD2(__p[0].__r_.__value_.__r.__words[1]) = 0;
      LODWORD(__p[0].__r_.__value_.__r.__words[1]) = 0;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 6) = 0LL;
      buf.__r_.__value_.__r.__words[0] = 0LL;
      LODWORD(__p[0].__r_.__value_.__l.__data_) = *(_DWORD *)(sub_1004A8578((uint64_t)a3) + 32);
      HIDWORD(__p[0].__r_.__value_.__r.__words[0]) = *(_DWORD *)(sub_1004A8578((uint64_t)a3) + 44);
      int v21 = (*(uint64_t (**)(void *, std::stringbuf::string_type *, std::stringbuf::string_type *))(*a2 + 176LL))( a2,  __p,  &buf);
      goto LABEL_33;
    }

    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101883660);
    }
    int v28 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      sub_100F57510(a3, __p);
      BOOL v29 = (__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0
          ? __p
          : (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v29;
      _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEBUG,  "TILE: no cell tiles for, %s",  (uint8_t *)&buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101883660);
      }
      uint64_t v40 = qword_101934A78;
      sub_100F57510(a3, &buf);
      if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        __int16 v41 = &buf;
      }
      else {
        __int16 v41 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
      }
      int v46 = 136315138;
      *(void *)__int16 v47 = v41;
      _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v40,  2LL,  "TILE: no cell tiles for, %s",  (const char *)&v46);
      __int16 v43 = v42;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCellTilesManager::getLocationByCellFromTile(CLTileFile *, const CLCell &, SearchContext &, CLDaemonLocation &)",  "%s\n",  (const char *)v43);
      if (v43 != __p) {
        free(v43);
      }
    }

    return 0LL;
  }

  WORD2(__p[0].__r_.__value_.__r.__words[1]) = 0;
  LODWORD(__p[0].__r_.__value_.__r.__words[1]) = 0;
  *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 6) = 0LL;
  buf.__r_.__value_.__r.__words[0] = 0LL;
  __p[0].__r_.__value_.__r.__words[0] = *(void *)(sub_1004A932C((uint64_t)a3) + 8);
  if ((*(unsigned int (**)(void *, std::stringbuf::string_type *, std::stringbuf::string_type *))(*a2 + 176LL))( a2,  __p,  &buf))
  {
LABEL_24:
    unsigned int v17 = LOWORD(buf.__r_.__value_.__r.__words[1]);
    unsigned int v18 = WORD1(buf.__r_.__value_.__r.__words[1]);
    LOBYTE(v16) = buf.__r_.__value_.__s.__data_[12];
    *(double *)(a5 + 2sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = (double)v16 * 1000.0;
    sub_100C13C70((uint64_t)a2, v17, v18, (double *)(a5 + 4), (double *)(a5 + 12));
    *(_OWORD *)(a5 + 2_Block_object_dispose(va, 8) = xmmword_1012EA5D0;
    *(double *)(a5 + 76) = (*(double (**)(void))(**(void **)(a1 + 368) + 16LL))(*(void *)(a1 + 368));
    *(void *)(a5 + 8_Block_object_dispose(va, 8) = 0xBFF0000000000000LL;
    *(_DWORD *)(a5 + 96) = 6;
    *(void *)(a5 + 12_Block_object_dispose(va, 8) = 0x100000032LL;
    *(_DWORD *)(a5 + 84) = 70;
    if (sub_100C14E3C((uint64_t)a2, *(_BYTE *)(a1 + 128)))
    {
      double v19 = (*(double (**)(void))(**(void **)(a1 + 368) + 16LL))(*(void *)(a1 + 368));
      sub_100DD963C((uint64_t)a2, v19);
    }

    uint64_t v20 = 1LL;
    goto LABEL_35;
  }

BOOL sub_100DC93F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(a5 + 96) = 0LL;
  *(void *)(a5 + 104) = 0LL;
  *(_DWORD *)(a5 + 112) = 0;
  *(void *)(a5 + 136) = 0LL;
  *(void *)(a5 + 144) = 0LL;
  *(void *)(a5 + 12_Block_object_dispose(va, 8) = 0LL;
  *(_BYTE *)(a5 + 152) = 0;
  *(_DWORD *)a5 = 0xFFFF;
  *(void *)(a5 + 12) = 0LL;
  *(void *)(a5 + 4) = 0LL;
  *(_OWORD *)(a5 + 2sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = xmmword_1012E0070;
  __asm { FMOV            V0.2D, #-1.0 }

  *(_OWORD *)(a5 + 36) = _Q0;
  *(_OWORD *)(a5 + 52) = _Q0;
  *(_OWORD *)(a5 + 6_Block_object_dispose(va, 8) = _Q0;
  *(_DWORD *)(a5 + 84) = 0;
  *(void *)(a5 + 8_Block_object_dispose(va, 8) = 0xBFF0000000000000LL;
  *(void *)(a5 + 116) = 0xBFF0000000000000LL;
  *(_DWORD *)(a5 + 1sub_100BDC958(v1 + 24) = 0x7FFFFFFF;
  if (!*(_BYTE *)(a1 + 129))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101883660);
    }
    uint64_t v23 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      int v24 = *(unsigned __int8 *)(a1 + 128);
      LODWORD(buf[0].__r_.__value_.__l.__data_) = 67109120;
      HIDWORD(buf[0].__r_.__value_.__r.__words[0]) = v24;
      _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEBUG,  "TILE: getLocationByCell, index is not available, can't search tiles (locationd launched when device was locked?) , fDataProtectionEnabled, %d",  (uint8_t *)buf,  8u);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101883660);
    }
    int v25 = *(unsigned __int8 *)(a1 + 128);
    LODWORD(v108.__r_.__value_.__l.__data_) = 67109120;
    HIDWORD(v108.__r_.__value_.__r.__words[0]) = v25;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "TILE: getLocationByCell, index is not available, can't search tiles (locationd launched when device was locked?), fDataProtectionEnabled, %d",  &v108);
    uint64_t v27 = (std::stringbuf::string_type *)v26;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCellTilesManager::getLocationByCell(const CLCell &, const CLDaemonLocation &, SearchContext &, CLDaemonLocation &)",  "%s\n",  v26);
    goto LABEL_33;
  }

  int v11 = (unsigned int *)a2;
  unsigned __int8 v96 = (_DWORD *)(a5 + 96);
  uint64_t v12 = sub_100F59508(a2);
  unsigned int v13 = v11[2];
  if (v13 < 3) {
    goto LABEL_5;
  }
  if (v13 == 9)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101883660);
    }
    int v30 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      sub_100F57510(v11, buf);
      uint64_t v31 = (buf[0].__r_.__value_.__s.__size_ & 0x80u) == 0
          ? buf
          : (std::stringbuf::string_type *)buf[0].__r_.__value_.__r.__words[0];
      LODWORD(v108.__r_.__value_.__l.__data_) = 136315138;
      *(std::string::size_type *)((char *)v108.__r_.__value_.__r.__words + 4) = (std::string::size_type)v31;
      _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEBUG,  "TILE: no tiles for, %s",  (uint8_t *)&v108,  0xCu);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101883660);
    }
    uint64_t v32 = qword_101934A78;
    sub_100F57510(v11, &v108);
    if ((v108.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v33 = &v108;
    }
    else {
      uint64_t v33 = (std::stringbuf::string_type *)v108.__r_.__value_.__r.__words[0];
    }
    LODWORD(v106.__r_.__value_.__l.__data_) = 136315138;
    *(std::string::size_type *)((char *)v106.__r_.__value_.__r.__words + 4) = (std::string::size_type)v33;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v32,  2LL,  "TILE: no tiles for, %s",  (const char *)&v106);
    uint64_t v27 = v34;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCellTilesManager::getLocationByCell(const CLCell &, const CLDaemonLocation &, SearchContext &, CLDaemonLocation &)",  "%s\n",  (const char *)v27);
    goto LABEL_52;
  }

  if (v13 == 7)
  {
LABEL_5:
    unsigned int v14 = 3;
LABEL_6:
    int v102 = v14;
    goto LABEL_7;
  }

  if (v13 - 3 > 2)
  {
    if (v13 == 6)
    {
      unsigned int v14 = 4;
      goto LABEL_6;
    }

    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    int v38 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_ERROR))
    {
      sub_100F57510(v11, buf);
      unsigned __int8 v39 = (buf[0].__r_.__value_.__s.__size_ & 0x80u) == 0
          ? buf
          : (std::stringbuf::string_type *)buf[0].__r_.__value_.__r.__words[0];
      LODWORD(v108.__r_.__value_.__l.__data_) = 136380675;
      *(std::string::size_type *)((char *)v108.__r_.__value_.__r.__words + 4) = (std::string::size_type)v39;
      _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_ERROR,  "CellTile, getLocationByCell, un-supported cell type, %{private}s, #CloneMe",  (uint8_t *)&v108,  0xCu);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    uint64_t v89 = qword_101934858;
    sub_100F57510(v11, &v108);
    if ((v108.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      __int128 v90 = &v108;
    }
    else {
      __int128 v90 = (std::stringbuf::string_type *)v108.__r_.__value_.__r.__words[0];
    }
    LODWORD(v106.__r_.__value_.__l.__data_) = 136380675;
    *(std::string::size_type *)((char *)v106.__r_.__value_.__r.__words + 4) = (std::string::size_type)v90;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v89,  16LL,  "CellTile, getLocationByCell, un-supported cell type, %{private}s, #CloneMe",  &v106,  12);
    uint64_t v27 = v91;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLCellTilesManager::getLocationByCell(const CLCell &, const CLDaemonLocation &, SearchContext &, CLDaemonLocation &)",  "%s\n",  (const char *)v27);
LABEL_52:
    if (v27 == buf) {
      return 0LL;
    }
    goto LABEL_34;
  }

  unsigned int v14 = 5;
  int v102 = 5;
  if (v13 != 3) {
    return 0LL;
  }
LABEL_7:
  uint64_t v15 = sub_100DD9288(v14, (void *)(a1 + 416));
  if (!*(_BYTE *)(a1 + 160))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101883660);
    }
    int v28 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      LODWORD(buf[0].__r_.__value_.__l.__data_) = 67109120;
      HIDWORD(buf[0].__r_.__value_.__r.__words[0]) = v14;
      _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEBUG,  "TILE: getLocationByCell, tiles, %d, are not active on this device",  (uint8_t *)buf,  8u);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101883660);
    }
    LODWORD(v108.__r_.__value_.__l.__data_) = 67109120;
    HIDWORD(v108.__r_.__value_.__r.__words[0]) = v102;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "TILE: getLocationByCell, tiles, %d, are not active on this device",  &v108);
    uint64_t v27 = (std::stringbuf::string_type *)v29;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCellTilesManager::getLocationByCell(const CLCell &, const CLDaemonLocation &, SearchContext &, CLDaemonLocation &)",  "%s\n",  v29);
LABEL_33:
    if (v27 == buf) {
      return 0LL;
    }
LABEL_34:
    free(v27);
    return 0LL;
  }

  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 + 296);
  uint64_t v18 = *(void *)(v15 + 304);
  sub_100F591F4(v11, &v101);
  uint64_t v93 = v17;
  uint64_t v94 = v18;
  if (v17) {
    _ZF = v18 == 0;
  }
  else {
    _ZF = 1;
  }
  char v20 = !_ZF;
  char v95 = v20;
  if (_ZF) {
    goto LABEL_84;
  }
  BOOL v21 = sub_100DCA7E4(v17, &v101, (_OWORD *)a5);
  BOOL v22 = !v21 && sub_100DCA7E4(v18, &v101, (_OWORD *)a5);
  uint64_t v35 = v11;
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101883660);
  }
  int v36 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    LODWORD(buf[0].__r_.__value_.__l.__data_) = 67109376;
    HIDWORD(buf[0].__r_.__value_.__r.__words[0]) = v21;
    LOWORD(buf[0].__r_.__value_.__r.__words[1]) = 1024;
    *(_DWORD *)((char *)&buf[0].__r_.__value_.__r.__words[1] + 2) = v22;
    _os_log_impl( (void *)&_mh_execute_header,  v36,  OS_LOG_TYPE_DEBUG,  "TILE: getLocationByCell, isInKnownCache, %d, isInUnKnownCache, %d",  (uint8_t *)buf,  0xEu);
  }

  int v11 = v35;
  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101883660);
    }
    LODWORD(v108.__r_.__value_.__l.__data_) = 67109376;
    HIDWORD(v108.__r_.__value_.__r.__words[0]) = v21;
    LOWORD(v108.__r_.__value_.__r.__words[1]) = 1024;
    *(_DWORD *)((char *)&v108.__r_.__value_.__r.__words[1] + 2) = v22;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "TILE: getLocationByCell, isInKnownCache, %d, isInUnKnownCache, %d",  &v108,  14);
    __int16 v41 = (std::stringbuf::string_type *)v40;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCellTilesManager::getLocationByCell(const CLCell &, const CLDaemonLocation &, SearchContext &, CLDaemonLocation &)",  "%s\n",  v40);
    if (v41 != buf) {
      free(v41);
    }
    int v11 = v35;
    if (v21) {
      goto LABEL_64;
    }
  }

  else if (v21)
  {
LABEL_64:
    *(double *)(a5 + 76) = (*(double (**)(void))(**(void **)(a1 + 368) + 16LL))(*(void *)(a1 + 368));
    BOOL v37 = 1LL;
    goto LABEL_177;
  }

  if (!v22)
  {
LABEL_84:
    double v42 = (*(double (**)(void))(**(void **)(a1 + 368) + 16LL))(*(void *)(a1 + 368));
    v100[0] = 0LL;
    v100[1] = 0LL;
    double v99 = v100;
    double v43 = *(double *)(a3 + 76);
    sub_1008ACE9C((uint64_t)&v108, &v102);
    sub_1008ACE9C((uint64_t)&v106, &v102);
    stat v97 = v11;
    if (*(double *)(a3 + 20) >= 0.0 && vabdd_f64(v42, v43) <= 3600.0 * 0.5)
    {
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101883660);
      }
      int v44 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        sub_100832C64(a3, buf);
        __int16 v45 = (buf[0].__r_.__value_.__s.__size_ & 0x80u) == 0
            ? buf
            : (std::stringbuf::string_type *)buf[0].__r_.__value_.__r.__words[0];
        LODWORD(v103.__r_.__value_.__l.__data_) = 136315138;
        *(std::string::size_type *)((char *)v103.__r_.__value_.__r.__words + 4) = (std::string::size_type)v45;
        _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_DEBUG,  "TILE: getLocationByCell, using locationHint, %s",  (uint8_t *)&v103,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101883660);
        }
        uint64_t v85 = qword_101934A78;
        sub_100832C64(a3, &v103);
        if ((v103.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          __int128 v86 = &v103;
        }
        else {
          __int128 v86 = (std::stringbuf::string_type *)v103.__r_.__value_.__r.__words[0];
        }
        int v104 = 136315138;
        uint64_t v105 = v86;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v85,  2LL,  "TILE: getLocationByCell, using locationHint, %s",  (const char *)&v104);
        __int16 v88 = v87;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCellTilesManager::getLocationByCell(const CLCell &, const CLDaemonLocation &, SearchContext &, CLDaemonLocation &)",  "%s\n",  (const char *)v88);
        if (v88 != buf) {
          free(v88);
        }
      }

      sub_100C11F48( (uint64_t)&v108,  v12,  *(double *)(a3 + 4),  *(double *)(a3 + 12),  *(double *)(v16 + 152),  *(double *)(v16 + 160));
    }

    if (sub_1008AD1E0((unsigned int *)&v108)
      && (__int16 v47 = (void *)sub_1006025CC(v16 + 184, (unsigned int *)&v108)) != 0LL
      && (char v48 = sub_100DC8A5C(a1, v47, v11, v46, a5),
          buf[0].__r_.__value_.__r.__words[0] = (std::string::size_type)(v47 + 6),
          sub_100DD2674((uint64_t **)&v99, (uint64_t)(v47 + 6), (uint64_t)&unk_1012CF090, buf)[10] = (uint64_t)v47,
          (v48 & 1) != 0))
    {
LABEL_99:
      sub_1005B46E8(v16 + 184);
      char v49 = v95;
      if (*v96 != 6) {
        char v49 = 0;
      }
      if ((v49 & 1) == 0) {
        goto LABEL_170;
      }
    }

    else
    {
      uint64_t v50 = 0LL;
      __int16 v51 = &byte_10135E92D;
      uint64_t v52 = v16 + 184;
      do
      {
        unsigned int v53 = *v51;
        unsigned int v54 = *(v51 - 1);
        std::stringbuf::string_type v106 = v108;
        std::string::operator=(&__p, &v109);
        double v55 = *(double *)(v16 + 160);
        float32_t v56 = *(double *)(v16 + 152);
        *(float *)&double v55 = v55;
        sub_1008AE784((uint64_t)&v106, v53, v54, v56, *(float32x2_t *)&v55);
        if (sub_1008AD1E0((unsigned int *)&v106))
        {
          if (qword_101934A70 != -1) {
            dispatch_once(&qword_101934A70, &stru_101883660);
          }
          unsigned int v57 = (os_log_s *)qword_101934A78;
          if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
          {
            LODWORD(buf[0].__r_.__value_.__l.__data_) = 67109632;
            HIDWORD(buf[0].__r_.__value_.__r.__words[0]) = v50;
            LOWORD(buf[0].__r_.__value_.__r.__words[1]) = 1024;
            *(_DWORD *)((char *)&buf[0].__r_.__value_.__r.__words[1] + 2) = v53;
            HIWORD(buf[0].__r_.__value_.__r.__words[1]) = 1024;
            LODWORD(buf[0].__r_.__value_.__r.__words[2]) = v54;
            _os_log_impl( (void *)&_mh_execute_header,  v57,  OS_LOG_TYPE_DEBUG,  "TILE: getLocationByCell, search neighbor, step, %2d, y, %+2d, x, %+2d",  (uint8_t *)buf,  0x14u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934A70 != -1) {
              dispatch_once(&qword_101934A70, &stru_101883660);
            }
            LODWORD(v103.__r_.__value_.__l.__data_) = 67109632;
            HIDWORD(v103.__r_.__value_.__r.__words[0]) = v50;
            LOWORD(v103.__r_.__value_.__r.__words[1]) = 1024;
            *(_DWORD *)((char *)&v103.__r_.__value_.__r.__words[1] + 2) = v53;
            HIWORD(v103.__r_.__value_.__r.__words[1]) = 1024;
            LODWORD(v103.__r_.__value_.__r.__words[2]) = v54;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "TILE: getLocationByCell, search neighbor, step, %2d, y, %+2d, x, %+2d",  &v103,  20,  v92);
            __int16 v64 = (std::stringbuf::string_type *)v63;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCellTilesManager::getLocationByCell(const CLCell &, const CLDaemonLocation &, SearchContext &, CLDaemonLocation &)",  "%s\n",  v63);
            if (v64 != buf) {
              free(v64);
            }
          }

          double v59 = (void *)sub_1006025CC(v16 + 184, (unsigned int *)&v106);
          if (v59)
          {
            char v60 = sub_100DC8A5C(a1, v59, v11, v58, a5);
            buf[0].__r_.__value_.__r.__words[0] = (std::string::size_type)(v59 + 6);
            sub_100DD2674((uint64_t **)&v99, (uint64_t)(v59 + 6), (uint64_t)&unk_1012CF090, buf)[10] = (uint64_t)v59;
            if ((v60 & 1) != 0) {
              goto LABEL_99;
            }
          }
        }

        else
        {
          if (qword_101934A70 != -1) {
            dispatch_once(&qword_101934A70, &stru_101883660);
          }
          uint64_t v61 = (os_log_s *)qword_101934A78;
          if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
          {
            sub_1008AD840((unsigned int *)&v106, buf);
            __int16 v62 = buf;
            if ((buf[0].__r_.__value_.__s.__size_ & 0x80u) != 0) {
              __int16 v62 = (std::stringbuf::string_type *)buf[0].__r_.__value_.__r.__words[0];
            }
            LODWORD(v103.__r_.__value_.__l.__data_) = 136315138;
            *(std::string::size_type *)((char *)v103.__r_.__value_.__r.__words + 4) = (std::string::size_type)v62;
            _os_log_impl( (void *)&_mh_execute_header,  v61,  OS_LOG_TYPE_DEBUG,  "TILE: getLocationByCell, out of boundary, %s",  (uint8_t *)&v103,  0xCu);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934A70 != -1) {
              dispatch_once(&qword_101934A70, &stru_101883660);
            }
            uint64_t v65 = qword_101934A78;
            sub_1008AD840((unsigned int *)&v106, &v103);
            int v66 = &v103;
            if ((v103.__r_.__value_.__s.__size_ & 0x80u) != 0) {
              int v66 = (std::stringbuf::string_type *)v103.__r_.__value_.__r.__words[0];
            }
            int v104 = 136315138;
            uint64_t v105 = v66;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v65,  2LL,  "TILE: getLocationByCell, out of boundary, %s",  (const char *)&v104);
            __int16 v68 = v67;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCellTilesManager::getLocationByCell(const CLCell &, const CLDaemonLocation &, SearchContext &, CLDaemonLocation &)",  "%s\n",  (const char *)v68);
            if (v68 != buf) {
              free(v68);
            }
          }
        }

        ++v50;
        v51 += 2;
      }

      while (v50 != 24);
      double v69 = (void *)sub_1005B46E8(v16 + 184);
      do
      {
        double v70 = v69;
        uint64_t v71 = sub_100056FA8(v52);
        BOOL v37 = v70 != (void *)v71;
        if (v70 == (void *)v71) {
          break;
        }
        double v72 = (void *)v70[10];
        if (v100 == sub_100603554((uint64_t)&v99, (uint64_t)(v72 + 6)))
        {
          if (qword_101934A70 != -1) {
            dispatch_once(&qword_101934A70, &stru_101883660);
          }
          double v74 = (os_log_s *)qword_101934A78;
          if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
          {
            (*(void (**)(std::stringbuf::string_type *__return_ptr, void *))(*v72 + 16LL))(buf, v72);
            __int16 v75 = (buf[0].__r_.__value_.__s.__size_ & 0x80u) == 0
                ? buf
                : (std::stringbuf::string_type *)buf[0].__r_.__value_.__r.__words[0];
            LODWORD(v103.__r_.__value_.__l.__data_) = 136315138;
            *(std::string::size_type *)((char *)v103.__r_.__value_.__r.__words + 4) = (std::string::size_type)v75;
            _os_log_impl( (void *)&_mh_execute_header,  v74,  OS_LOG_TYPE_DEBUG,  "TILE: getLocationByCell, search remaining tiles, %s",  (uint8_t *)&v103,  0xCu);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934A70 != -1) {
              dispatch_once(&qword_101934A70, &stru_101883660);
            }
            uint64_t v79 = qword_101934A78;
            (*(void (**)(std::stringbuf::string_type *__return_ptr, void *))(*v72 + 16LL))(&v103, v72);
            uint64_t v80 = &v103;
            if ((v103.__r_.__value_.__s.__size_ & 0x80u) != 0) {
              uint64_t v80 = (std::stringbuf::string_type *)v103.__r_.__value_.__r.__words[0];
            }
            int v104 = 136315138;
            uint64_t v105 = v80;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v79,  2LL,  "TILE: getLocationByCell, search remaining tiles, %s",  (const char *)&v104);
            uint64_t v82 = v81;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCellTilesManager::getLocationByCell(const CLCell &, const CLDaemonLocation &, SearchContext &, CLDaemonLocation &)",  "%s\n",  (const char *)v82);
            if (v82 != buf) {
              free(v82);
            }
          }

          char v73 = sub_100DC8A5C(a1, v72, v97, v76, a5);
          buf[0].__r_.__value_.__r.__words[0] = (std::string::size_type)(v72 + 6);
          sub_100DD2674((uint64_t **)&v99, (uint64_t)(v72 + 6), (uint64_t)&unk_1012CF090, buf)[10] = (uint64_t)v72;
        }

        else
        {
          char v73 = 0;
        }

        uint64_t v77 = (void *)v70[1];
        uint64_t v78 = v70;
        if (v77)
        {
          do
          {
            double v69 = v77;
            uint64_t v77 = (void *)*v77;
          }

          while (v77);
        }

        else
        {
          do
          {
            double v69 = (void *)v78[2];
            _ZF = *v69 == (void)v78;
            uint64_t v78 = v69;
          }

          while (!_ZF);
        }
      }

      while ((v73 & 1) == 0);
      char v83 = v95;
      if (*v96 != 6) {
        char v83 = 0;
      }
      if ((v83 & 1) == 0) {
        goto LABEL_172;
      }
      if (v70 == (void *)v71)
      {
        sub_100DCAC48(v94, &v101, a5);
        BOOL v37 = 0LL;
        goto LABEL_172;
      }
    }

    sub_100DCAC48(v93, &v101, a5);
LABEL_170:
    BOOL v37 = 1LL;
LABEL_172:
    sub_100603B94((uint64_t)&v99, v100[0]);
    goto LABEL_177;
  }

  BOOL v37 = 0LL;
  *(double *)(a5 + 76) = (*(double (**)(void))(**(void **)(a1 + 368) + 16LL))(*(void *)(a1 + 368));
LABEL_177:
  return v37;
}

void sub_100DCA738( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, char a24, char *a25, uint64_t a26, void *a27, uint64_t a28, int a29, __int16 a30, char a31, char a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, void *__p, uint64_t a44, int a45, __int16 a46, char a47, char a48, uint64_t a49, uint64_t a50,uint64_t a51,void *a52,uint64_t a53,int a54,__int16 a55,char a56,char a57)
{
  if (a48 < 0) {
    operator delete(__p);
  }
  if (a57 < 0) {
    operator delete(a52);
  }
  sub_100603B94((uint64_t)&a24, a25);
  if (a32 < 0) {
    operator delete(a27);
  }
  _Unwind_Resume(a1);
}

BOOL sub_100DCA7E4(uint64_t a1, std::string *a2, _OWORD *a3)
{
  uint64_t v6 = sub_10008E8D0(a1 + 56, (const void **)&a2->__r_.__value_.__l.__data_);
  uint64_t v7 = v6;
  uint64_t v8 = a1 + 64;
  if (a1 + 64 != v6)
  {
    __int128 v9 = *(_OWORD *)(v6 + 72);
    *a3 = *(_OWORD *)(v6 + 56);
    a3[1] = v9;
    __int128 v10 = *(_OWORD *)(v6 + 88);
    __int128 v11 = *(_OWORD *)(v6 + 104);
    __int128 v12 = *(_OWORD *)(v6 + 136);
    a3[4] = *(_OWORD *)(v6 + 120);
    a3[5] = v12;
    a3[2] = v10;
    a3[3] = v11;
    __int128 v13 = *(_OWORD *)(v6 + 152);
    __int128 v14 = *(_OWORD *)(v6 + 168);
    __int128 v15 = *(_OWORD *)(v6 + 184);
    *(_OWORD *)((char *)a3 + 14sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = *(_OWORD *)(v6 + 196);
    a3[7] = v14;
    a3[8] = v15;
    a3[6] = v13;
    memset(__p, 0, sizeof(__p));
    uint64_t v16 = *(void *)(v6 + 216);
    if (v16 == a1 + 88)
    {
      std::string::operator=((std::string *)&__p[1], a2);
    }

    else
    {
      __p[0] = *(void **)(v16 + 32);
      std::string::operator=((std::string *)&__p[1], (const std::string *)(v16 + 40));
      sub_10052A090((uint64_t **)(a1 + 80), *(void *)(v7 + 216));
    }

    __p[0] = COERCE_VOID_(CFAbsoluteTimeGetCurrent());
    sub_100DD2408(a1, (uint64_t)__p, v7 + 56);
    if (SHIBYTE(__p[3]) < 0) {
      operator delete(__p[1]);
    }
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101883660);
  }
  uint64_t v17 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v18 = (void *)(a1 + 8);
    double v19 = *(void **)(a1 + 72);
    (*(void (**)(_BYTE *__return_ptr, uint64_t, std::string *))(*(void *)a1 + 56LL))(v41, a1, a2);
    int v36 = (const char *)a2;
    int v20 = SHIBYTE(v44);
    BOOL v21 = *(_BYTE **)v41;
    (*(void (**)(void **__return_ptr, uint64_t, _OWORD *))(*(void *)a1 + 72LL))(v39, a1, a3);
    BOOL v22 = v41;
    if (v20 < 0) {
      BOOL v22 = v21;
    }
    if (v40 >= 0) {
      uint64_t v23 = v39;
    }
    else {
      uint64_t v23 = (void **)v39[0];
    }
    LODWORD(__p[0]) = 136315906;
    *(void **)((char *)__p + 4) = v18;
    WORD2(__p[1]) = 2048;
    *(void **)((char *)&__p[1] + 6) = v19;
    HIWORD(__p[2]) = 2080;
    __p[3] = v22;
    __int16 v49 = 2080;
    uint64_t v50 = v23;
    _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEBUG,  "CACHE: name, %s, getEntry, end, size, %lu, %s, entry, %s",  (uint8_t *)__p,  0x2Au);
    if (v40 < 0) {
      operator delete(v39[0]);
    }
    uint64_t v8 = a1 + 64;
    if (SHIBYTE(v44) < 0) {
      operator delete(*(void **)v41);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101883660);
    }
    int v25 = (void *)(a1 + 8);
    uint64_t v26 = qword_101934A78;
    uint64_t v27 = *(void *)(a1 + 72);
    (*(void (**)(void **__return_ptr, uint64_t, std::string *))(*(void *)a1 + 56LL))(v39, a1, a2);
    uint64_t v28 = v8;
    int v29 = v40;
    int v30 = (void **)v39[0];
    (*(void (**)(void **__return_ptr, uint64_t, _OWORD *))(*(void *)a1 + 72LL))(v37, a1, a3);
    uint64_t v31 = v39;
    if (v29 < 0) {
      uint64_t v31 = v30;
    }
    if (v38 >= 0) {
      uint64_t v32 = v37;
    }
    else {
      uint64_t v32 = (void **)v37[0];
    }
    *(_DWORD *)__int16 v41 = 136315906;
    *(void *)&v41[4] = v25;
    __int16 v42 = 2048;
    uint64_t v43 = v27;
    __int16 v44 = 2080;
    __int16 v45 = v31;
    __int16 v46 = 2080;
    __int16 v47 = v32;
    _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v26,  2LL,  "CACHE: name, %s, getEntry, end, size, %lu, %s, entry, %s",  v41,  42,  v35,  v36);
    uint64_t v34 = v33;
    if (v38 < 0) {
      operator delete(v37[0]);
    }
    uint64_t v8 = v28;
    if (v40 < 0) {
      operator delete(v39[0]);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLEntryCache<std::string, CLDaemonLocation>::getEntry(const Key_T &, DataEntry_T &) [Key_T = std::string, Dat aEntry_T = CLDaemonLocation]",  "%s\n",  v34);
  }

  return v8 != v7;
}

void sub_100DCABF8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21, uint64_t a22, uint64_t a23, int a24, __int16 a25, char a26, char a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, int a34, __int16 a35, char a36, char a37)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DCAC48(uint64_t a1, std::string *a2, uint64_t a3)
{
  uint64_t v60 = a3;
  uint64_t v4 = (uint64_t **)(a1 + 56);
  uint64_t v5 = sub_10008E8D0(a1 + 56, (const void **)&a2->__r_.__value_.__l.__data_);
  if (a1 + 64 != v5)
  {
    uint64_t v6 = *(void *)(v5 + 216);
    if (a1 + 88 == v6)
    {
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101883660);
      }
      uint64_t v7 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
      {
        uint64_t v8 = (void *)(a1 + 8);
        uint64_t v9 = *(void *)(a1 + 72);
        (*(void (**)(_BYTE *__return_ptr, uint64_t, std::string *))(*(void *)a1 + 56LL))(__p, a1, a2);
        if (__p[23] >= 0) {
          __int128 v10 = __p;
        }
        else {
          __int128 v10 = *(_BYTE **)__p;
        }
        *(_DWORD *)std::stringbuf::string_type buf = 136315650;
        *(void *)&uint8_t buf[4] = v8;
        __int16 v81 = 2048;
        uint64_t v82 = v9;
        __int16 v83 = 2080;
        __int128 v84 = v10;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "CACHE: name, %s, bad set iterator - recovering, size, %lu, %s",  buf,  0x20u);
        if ((__p[23] & 0x80000000) != 0) {
          operator delete(*(void **)__p);
        }
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101883660);
        }
        unsigned int v53 = (void *)(a1 + 8);
        uint64_t v54 = qword_101934A78;
        uint64_t v55 = *(void *)(a1 + 72);
        (*(void (**)(_BYTE *__return_ptr, uint64_t, std::string *))(*(void *)a1 + 56LL))(v68, a1, a2);
        if (v71 >= 0) {
          float32_t v56 = v68;
        }
        else {
          float32_t v56 = *(_BYTE **)v68;
        }
        *(_DWORD *)std::string __p = 136315650;
        *(void *)&__p[4] = v53;
        *(_WORD *)&_BYTE __p[12] = 2048;
        *(void *)&__p[14] = v55;
        *(_WORD *)&__p[22] = 2080;
        *(void *)&__p[24] = v56;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v54,  17LL,  "CACHE: name, %s, bad set iterator - recovering, size, %lu, %s",  __p,  32,  (const char *)v60);
        uint64_t v58 = v57;
        if (SHIBYTE(v71) < 0) {
          operator delete(*(void **)v68);
        }
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLEntryCache<std::string, CLDaemonLocation>::addEntry(const Key_T &, const DataEntry_T &) [Key_T = std::s tring, DataEntry_T = CLDaemonLocation]",  "%s\n",  v58);
        if (v58 != buf) {
          free(v58);
        }
      }
    }

    else
    {
      sub_100588FC8(v4, (const void **)(v6 + 40));
      sub_10052A090((uint64_t **)(a1 + 80), v6);
    }

    uint64_t v11 = sub_10008E8D0((uint64_t)v4, (const void **)&a2->__r_.__value_.__l.__data_);
    if (a1 + 64 != v11) {
      sub_1003F9708(v4, v11);
    }
  }

  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  memset(&v67, 0, sizeof(v67));
  *(_OWORD *)&__p[4] = 0uLL;
  *(_OWORD *)&__p[20] = xmmword_1012E0070;
  __asm { FMOV            V1.2D, #-1.0 }

  *(_OWORD *)&__p[36] = _Q1;
  *(_OWORD *)&__p[52] = _Q1;
  *(_OWORD *)&std::stringbuf::string_type __p[68] = _Q1;
  *(_DWORD *)std::string __p = 0xFFFF;
  *(_DWORD *)&__p[84] = 0;
  __int128 v76 = 0uLL;
  *(void *)&__p[88] = 0xBFF0000000000000LL;
  *(void *)((char *)&v77 + 4) = 0xBFF0000000000000LL;
  LODWORD(v77) = 0;
  HIDWORD(v77) = 0x7FFFFFFF;
  memset(v78, 0, 25);
  uint64_t v79 = 0LL;
  double v66 = Current;
  if (*(_BYTE *)(a1 + 40))
  {
    double v18 = *(double *)(a1 + 48);
    double v66 = v66 - (double)(rand() % ((int)(v18 * 0.9) / 9));
  }

  __int128 v19 = *(_OWORD *)(v60 + 112);
  __int128 v76 = *(_OWORD *)(v60 + 96);
  __int128 v77 = v19;
  *(_OWORD *)uint64_t v78 = *(_OWORD *)(v60 + 128);
  *(_OWORD *)&v78[12] = *(_OWORD *)(v60 + 140);
  __int128 v20 = *(_OWORD *)(v60 + 48);
  *(_OWORD *)&__p[32] = *(_OWORD *)(v60 + 32);
  *(_OWORD *)&__p[48] = v20;
  __int128 v21 = *(_OWORD *)(v60 + 80);
  *(_OWORD *)&__p[64] = *(_OWORD *)(v60 + 64);
  *(_OWORD *)&__p[80] = v21;
  __int128 v22 = *(_OWORD *)(v60 + 16);
  *(_OWORD *)std::string __p = *(_OWORD *)v60;
  *(_OWORD *)&__p[16] = v22;
  std::string::operator=(&v67, a2);
  sub_100DD2408(a1, (uint64_t)&v66, (uint64_t)__p);
  *(void *)std::stringbuf::string_type buf = a2;
  uint64_t v23 = sub_100DD27BC(v4, (const void **)&a2->__r_.__value_.__l.__data_, (uint64_t)&unk_1012CF090, (__int128 **)buf);
  __int128 v24 = v76;
  *(_OWORD *)(v23 + 21) = v77;
  __int128 v25 = *(_OWORD *)&v78[16];
  *(_OWORD *)(v23 + 23) = *(_OWORD *)v78;
  *(_OWORD *)(v23 + 25) = v25;
  uint64_t v26 = v79;
  __int128 v27 = *(_OWORD *)&__p[32];
  *(_OWORD *)(v23 + 13) = *(_OWORD *)&__p[48];
  __int128 v28 = *(_OWORD *)&__p[80];
  *(_OWORD *)(v23 + 15) = *(_OWORD *)&__p[64];
  *(_OWORD *)(v23 + 17) = v28;
  *(_OWORD *)(v23 + 19) = v24;
  __int128 v29 = *(_OWORD *)&__p[16];
  *(_OWORD *)(v23 + 7) = *(_OWORD *)__p;
  int v30 = (uint64_t *)(a1 + 8);
  v23[27] = v26;
  *(_OWORD *)(v23 + 9) = v29;
  *(_OWORD *)(v23 + 11) = v27;
  while (*(void *)(a1 + 72) > *(void *)(a1 + 32))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101883660);
    }
    uint64_t v31 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v32 = (void *)(a1 + 8);
      uint64_t v33 = *(void *)(a1 + 72);
      *(_DWORD *)std::stringbuf::string_type buf = 136315394;
      *(void *)&uint8_t buf[4] = v32;
      __int16 v81 = 2048;
      uint64_t v82 = v33;
      _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEBUG,  "CACHE: name, %s, cache too large, evicting, size, %lu",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101883660);
      }
      uint64_t v34 = a1 + 8;
      uint64_t v35 = *(void *)(a1 + 72);
      *(_DWORD *)__int16 v68 = 136315394;
      *(void *)&v68[4] = v34;
      __int16 v69 = 2048;
      uint64_t v70 = v35;
      LODWORD(v59) = 22;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "CACHE: name, %s, cache too large, evicting, size, %lu",  v68,  v59);
      BOOL v37 = (char *)v36;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLEntryCache<std::string, CLDaemonLocation>::addEntry(const Key_T &, const DataEntry_T &) [Key_T = std::str ing, DataEntry_T = CLDaemonLocation]",  "%s\n",  v36);
      if (v37 != buf) {
        free(v37);
      }
    }

    sub_100DD12FC(a1);
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101883660);
  }
  char v38 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v39 = a1 + 8;
    uint64_t v40 = *(void *)(a1 + 72);
    (*(void (**)(_BYTE *__return_ptr, uint64_t, std::string *))(*(void *)a1 + 56LL))(v68, a1, a2);
    int v41 = SHIBYTE(v71);
    __int16 v42 = *(_BYTE **)v68;
    (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(*(void *)a1 + 72LL))(v64, a1, v60);
    uint64_t v43 = v68;
    if (v41 < 0) {
      uint64_t v43 = v42;
    }
    __int16 v44 = v64;
    if (v65 < 0) {
      __int16 v44 = (void **)v64[0];
    }
    *(_DWORD *)std::stringbuf::string_type buf = 136315906;
    *(void *)&uint8_t buf[4] = v39;
    __int16 v81 = 2048;
    uint64_t v82 = v40;
    __int16 v83 = 2080;
    __int128 v84 = v43;
    __int16 v85 = 2080;
    __int128 v86 = v44;
    _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_DEBUG,  "CACHE: name, %s, addEntry, end, size, %lu, %s, entry, %s",  buf,  0x2Au);
    if (v65 < 0) {
      operator delete(v64[0]);
    }
    if (SHIBYTE(v71) < 0) {
      operator delete(*(void **)v68);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101883660);
    }
    uint64_t v45 = qword_101934A78;
    uint64_t v46 = *(void *)(a1 + 72);
    (*(void (**)(void **__return_ptr, uint64_t, std::string *))(*(void *)a1 + 56LL))(v64, a1, a2);
    int v47 = v65;
    char v48 = (void **)v64[0];
    (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(*(void *)a1 + 72LL))(v62, a1, v60);
    __int16 v49 = v64;
    if (v47 < 0) {
      __int16 v49 = v48;
    }
    if (v63 >= 0) {
      uint64_t v50 = v62;
    }
    else {
      uint64_t v50 = (void **)v62[0];
    }
    *(_DWORD *)__int16 v68 = 136315906;
    *(void *)&v68[4] = v30;
    __int16 v69 = 2048;
    uint64_t v70 = v46;
    __int16 v71 = 2080;
    double v72 = v49;
    __int16 v73 = 2080;
    double v74 = v50;
    LODWORD(v59) = 42;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v45,  2LL,  "CACHE: name, %s, addEntry, end, size, %lu, %s, entry, %s",  v68,  v59,  (const char *)v60,  (const char *)a2);
    uint64_t v52 = v51;
    if (v63 < 0) {
      operator delete(v62[0]);
    }
    if (v65 < 0) {
      operator delete(v64[0]);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLEntryCache<std::string, CLDaemonLocation>::addEntry(const Key_T &, const DataEntry_T &) [Key_T = std::strin g, DataEntry_T = CLDaemonLocation]",  "%s\n",  v52);
    if (v52 != buf) {
      free(v52);
    }
  }

void sub_100DCB50C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, uint64_t a24, void *__p, uint64_t a26, int a27, __int16 a28, char a29, char a30, uint64_t a31, uint64_t a32, int a33, __int16 a34, char a35, char a36)
{
  if (a30 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100DCB574(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 296);
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 32LL))(v3);
  }
  uint64_t result = *(void *)(a2 + 304);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 32LL))(result);
  }
  return result;
}

void sub_100DCB5D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v6 = sub_101171C7C(a3 - a2);
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101883680);
  }
  uint64_t v7 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_INFO))
  {
    int v8 = *(_DWORD *)(a1 + 32);
    v9[0] = 68290307;
    v9[1] = 0;
    __int16 v10 = 2082;
    uint64_t v11 = "";
    __int16 v12 = 2082;
    __int128 v13 = "elapsed";
    __int16 v14 = 2050;
    uint64_t v15 = a2;
    __int16 v16 = 2050;
    uint64_t v17 = a3;
    __int16 v18 = 2050;
    double v19 = v6;
    __int16 v20 = 1025;
    int v21 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:CLCellTilesManager::removeAllTiles, event:%{public, location:escape_only}s, begin_m ach:%{public}llu, end_mach:%{public}llu, elapsed_s:%{public}.09f, type:%{private}d}",  (uint8_t *)v9,  0x40u);
  }

id sub_100DCB708(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 32);
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101883640);
  }
  uint64_t v5 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v6 = a2 + 8;
    *(_DWORD *)std::stringbuf::string_type buf = 136446210;
    uint64_t v16 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "TileCell, deleteAgedTiles, dispatch, %{public}s",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    uint64_t v9 = a2 + 8;
    int v13 = 136446210;
    uint64_t v14 = v9;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "TileCell, deleteAgedTiles, dispatch, %{public}s",  &v13,  12);
    uint64_t v11 = (uint8_t *)v10;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::deleteAgedTiles(CFAbsoluteTime)_block_invoke",  "%s\n",  v10);
    if (v11 != buf) {
      free(v11);
    }
  }

  uint64_t v7 = *(void **)(v4 + 40);
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  _DWORD v12[2] = sub_100DCB92C;
  v12[3] = &unk_101830558;
  v12[4] = v4;
  void v12[5] = a2;
  v12[6] = *(void *)(a1 + 40);
  return [v7 async:v12];
}

unint64_t sub_100DCB92C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101883640);
  }
  uint64_t v3 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v4 = *(void *)(a1 + 40);
    uint64_t v5 = (void *)(v4 + 8);
    *(_DWORD *)std::stringbuf::string_type buf = 136446466;
    __int16 v18 = v5;
    __int16 v19 = 2050;
    uint64_t v20 = sub_100019240(v4 + 184);
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "TileCell, deleteAgedTiles, start, name, %{public}s, size, %{public}lu",  buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    uint64_t v8 = qword_101934858;
    uint64_t v9 = *(void *)(a1 + 40);
    __int16 v10 = (void *)(v9 + 8);
    int v13 = 136446466;
    uint64_t v14 = v10;
    __int16 v15 = 2050;
    uint64_t v16 = sub_100019240(v9 + 184);
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v8,  2LL,  "TileCell, deleteAgedTiles, start, name, %{public}s, size, %{public}lu",  &v13,  22);
    __int16 v12 = (uint8_t *)v11;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::deleteAgedTiles(CFAbsoluteTime)_block_invoke",  "%s\n",  v11);
    if (v12 != buf) {
      free(v12);
    }
  }

  uint64_t v6 = *(void *)(a1 + 40) + 184LL;
  do
  {
    sub_100DCBB5C(v2, *(void *)(a1 + 40), *(double *)(a1 + 48));
    unint64_t result = sub_100019240(v6);
  }

  while (result > 0x32);
  return result;
}

uint64_t *sub_100DCBB5C(uint64_t a1, uint64_t a2, double a3)
{
  v86[0] = _NSConcreteStackBlock;
  v86[1] = 3221225472LL;
  v86[2] = sub_100DCC6D4;
  v86[3] = &unk_101862770;
  *(double *)&v86[4] = a3;
  v87[0] = mach_absolute_time();
  v87[1] = (uint64_t)v86;
  double v78 = *(double *)&a2;
  uint64_t v6 = (uint64_t **)(a2 + 184);
  uint64_t v7 = (void *)sub_1005B46E8(a2 + 184);
  uint64_t v8 = sub_100056FA8(a2 + 184);
  if (v7 == (void *)sub_100056FA8(a2 + 184))
  {
    LODWORD(v1sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0;
  }

  else
  {
    uint64_t v10 = 0LL;
    uint64_t v80 = 134219522LL;
    *(void *)&__int128 v9 = 136447235LL;
    __int128 v79 = v9;
    uint64_t v81 = a1;
    do
    {
      uint64_t v11 = v7;
      __int16 v12 = (void *)v7[1];
      int v13 = v7;
      if (v12)
      {
        do
        {
          uint64_t v7 = v12;
          __int16 v12 = (void *)*v12;
        }

        while (v12);
      }

      else
      {
        do
        {
          uint64_t v7 = (void *)v13[2];
          BOOL v14 = *v7 == (void)v13;
          int v13 = v7;
        }

        while (!v14);
      }

      uint64_t v83 = (uint64_t)v11;
      __int16 v15 = (unsigned int *)v11[10];
      double v16 = sub_100C0CC30((uint64_t)v15, a3);
      double v17 = sub_100C0CC24((uint64_t)v15, a3);
      double v18 = fabs(v16);
      BOOL v19 = v18 >= *(double *)(a1 + 136) || v17 >= *(double *)(a1 + 144) || sub_100C15770((uint64_t)v15);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101883660);
      }
      uint64_t v20 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v82 = v8;
        int v21 = v6;
        uint64_t v22 = v10;
        uint64_t v23 = *(void *)(a1 + 136);
        __int128 v24 = *(const char **)(a1 + 144);
        BOOL v25 = sub_100C15770((uint64_t)v15);
        (*(void (**)(_BYTE *__return_ptr, unsigned int *))(*(void *)v15 + 16LL))(__p, v15);
        if (__p[23] >= 0) {
          uint64_t v26 = __p;
        }
        else {
          uint64_t v26 = *(_BYTE **)__p;
        }
        *(_DWORD *)std::stringbuf::string_type buf = v80;
        *(double *)unsigned __int8 v96 = v18;
        *(_WORD *)&v96[8] = 2048;
        *(void *)&v96[10] = v23;
        *(_WORD *)&v96[18] = 2048;
        *(double *)&v96[20] = v17;
        __int16 v97 = 2048;
        __int16 v98 = v24;
        __int16 v99 = 1024;
        *(_DWORD *)double v100 = v25;
        *(_WORD *)&v100[4] = 1024;
        *(_DWORD *)&v100[6] = v19;
        __int16 v101 = 2080;
        int v102 = v26;
        _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEBUG,  "TILE: deleteAgedTiles, age, %.1lf, %.1lf, tileDataAge, %.1lf, %.1lf, corrupt, %d, isDelete, %d, tile, %s",  buf,  0x40u);
        if ((__p[23] & 0x80000000) != 0) {
          operator delete(*(void **)__p);
        }
        uint64_t v10 = v22;
        uint64_t v6 = v21;
        a1 = v81;
        uint64_t v8 = v82;
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        HIDWORD(v77) = v10;
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101883660);
        }
        uint64_t v34 = qword_101934A78;
        uint64_t v36 = *(void *)(a1 + 136);
        uint64_t v35 = *(const char **)(a1 + 144);
        BOOL v37 = sub_100C15770((uint64_t)v15);
        (*(void (**)(void **__return_ptr, unsigned int *))(*(void *)v15 + 16LL))(v84, v15);
        char v38 = v84;
        if (v85 < 0) {
          char v38 = (void **)v84[0];
        }
        *(_DWORD *)std::string __p = v80;
        *(double *)&__p[4] = v18;
        *(_WORD *)&_BYTE __p[12] = 2048;
        *(void *)&__p[14] = v36;
        *(_WORD *)&__p[22] = 2048;
        *(double *)&__p[24] = v17;
        __int16 v89 = 2048;
        __int128 v90 = v35;
        __int16 v91 = 1024;
        *(_DWORD *)int v92 = v37;
        *(_WORD *)&v92[4] = 1024;
        *(_DWORD *)&v92[6] = v19;
        __int16 v93 = 2080;
        uint64_t v94 = v38;
        LODWORD(v76) = 64;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v34,  2LL,  "TILE: deleteAgedTiles, age, %.1lf, %.1lf, tileDataAge, %.1lf, %.1lf, corrupt, %d, isDelete, %d, tile, %s",  COERCE_DOUBLE(__p),  v76,  v77,  v78,  (_DWORD)v79,  DWORD2(v79),  (const char *)v80);
        uint64_t v40 = v39;
        if (v85 < 0) {
          operator delete(v84[0]);
        }
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::agedTileDeleter(CLTilesSet &, CFAbsoluteTime)",  "%s\n",  v40);
        uint64_t v10 = HIDWORD(v77);
        a1 = v81;
      }

      if (v19)
      {
        sub_100C0FD9C((uint64_t)v15);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101883640);
        }
        __int128 v27 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
        {
          __int128 v28 = sub_100DD8CC8(v15[12]);
          double v29 = sub_1008ADB4C((uint64_t)(v15 + 12));
          double v30 = sub_1008ADB70((uint64_t)(v15 + 12));
          BOOL v31 = sub_100C15770((uint64_t)v15);
          uint64_t v32 = sub_100019240((uint64_t)v6);
          *(_DWORD *)std::stringbuf::string_type buf = v79;
          uint64_t v33 = "age";
          if (v31) {
            uint64_t v33 = "corrupt";
          }
          *(void *)unsigned __int8 v96 = v28;
          *(_WORD *)&v96[8] = 2049;
          *(double *)&v96[10] = v29;
          *(_WORD *)&v96[18] = 2049;
          *(double *)&v96[20] = v30;
          __int16 v97 = 2082;
          __int16 v98 = v33;
          __int16 v99 = 2050;
          *(void *)double v100 = v32 - 1;
          _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEFAULT,  "@TileList, %{public}s, delete, llsw, %{private}.2lf, %{private}.2lf, %{public}s, size, %{public}lu",  buf,  0x34u);
          a1 = v81;
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101883640);
          }
          uint64_t v41 = qword_101934858;
          __int16 v42 = sub_100DD8CC8(v15[12]);
          double v43 = sub_1008ADB4C((uint64_t)(v15 + 12));
          double v44 = sub_1008ADB70((uint64_t)(v15 + 12));
          BOOL v45 = sub_100C15770((uint64_t)v15);
          uint64_t v46 = sub_100019240((uint64_t)v6);
          *(_DWORD *)std::string __p = v79;
          int v47 = "age";
          if (v45) {
            int v47 = "corrupt";
          }
          *(void *)&__p[4] = v42;
          *(_WORD *)&_BYTE __p[12] = 2049;
          *(double *)&__p[14] = v43;
          *(_WORD *)&__p[22] = 2049;
          *(double *)&__p[24] = v44;
          __int16 v89 = 2082;
          __int128 v90 = v47;
          __int16 v91 = 2050;
          *(void *)int v92 = v46 - 1;
          LODWORD(v76) = 52;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v41,  0LL,  "@TileList, %{public}s, delete, llsw, %{private}.2lf, %{private}.2lf, %{public}s, size, %{public}lu",  __p,  *(void *)&v76);
          __int16 v49 = (uint8_t *)v48;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::agedTileDeleter(CLTilesSet &, CFAbsoluteTime)",  "%s\n",  v48);
          a1 = v81;
          if (v49 != buf) {
            free(v49);
          }
        }

        sub_100602810(v6, v83);
        uint64_t v10 = (v10 + 1);
      }

      else if (v8 == sub_100056FA8((uint64_t)v6))
      {
        uint64_t v8 = v83;
      }

      else if (v8 != sub_100056FA8((uint64_t)v6) && v18 >= fabs(sub_100C0CC30(*(void *)(v8 + 80), a3)))
      {
        uint64_t v8 = v83;
      }
    }

    while (v7 != (void *)sub_100056FA8((uint64_t)v6));
  }

  if (v8 != sub_100056FA8((uint64_t)v6) && (unint64_t)sub_100019240((uint64_t)v6) >= 0x33)
  {
    uint64_t v50 = *(void *)(v8 + 80);
    if (sub_100C0CCC8(v50))
    {
      sub_100C0FD9C(v50);
      LODWORD(v1sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = v10 + 1;
    }

    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    __int16 v51 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v52 = v8;
      unsigned int v53 = sub_100DD8CC8(*(_DWORD *)(v50 + 48));
      double v54 = sub_1008ADB4C(v50 + 48);
      double v55 = sub_1008ADB70(v50 + 48);
      uint64_t v56 = sub_100019240((uint64_t)v6);
      *(_DWORD *)std::stringbuf::string_type buf = 136446979;
      *(void *)unsigned __int8 v96 = v53;
      *(_WORD *)&v96[8] = 2049;
      *(double *)&v96[10] = v54;
      *(_WORD *)&v96[18] = 2049;
      *(double *)&v96[20] = v55;
      __int16 v97 = 2050;
      __int16 v98 = (const char *)(v56 - 1);
      _os_log_impl( (void *)&_mh_execute_header,  v51,  OS_LOG_TYPE_DEFAULT,  "@TileList, %{public}s, delete, llsw, %{private}.2lf, %{private}.2lf, limits, size, %{public}lu",  buf,  0x2Au);
      uint64_t v8 = v52;
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      uint64_t v66 = v8;
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101883640);
      }
      uint64_t v67 = qword_101934858;
      unsigned int v69 = *(_DWORD *)(v50 + 48);
      uint64_t v68 = v50 + 48;
      uint64_t v70 = sub_100DD8CC8(v69);
      double v71 = sub_1008ADB4C(v68);
      double v72 = sub_1008ADB70(v68);
      uint64_t v73 = sub_100019240((uint64_t)v6);
      *(_DWORD *)std::string __p = 136446979;
      *(void *)&__p[4] = v70;
      *(_WORD *)&_BYTE __p[12] = 2049;
      *(double *)&__p[14] = v71;
      *(_WORD *)&__p[22] = 2049;
      *(double *)&__p[24] = v72;
      __int16 v89 = 2050;
      __int128 v90 = (const char *)(v73 - 1);
      LODWORD(v76) = 42;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v67,  0LL,  "@TileList, %{public}s, delete, llsw, %{private}.2lf, %{private}.2lf, limits, size, %{public}lu",  __p,  *(void *)&v76);
      __int16 v75 = (uint8_t *)v74;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::agedTileDeleter(CLTilesSet &, CFAbsoluteTime)",  "%s\n",  v74);
      if (v75 != buf) {
        free(v75);
      }
      uint64_t v8 = v66;
    }

    sub_100602810(v6, v8);
  }

  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101883640);
  }
  unsigned int v57 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v58 = sub_100019240((uint64_t)v6);
    uint64_t v59 = *(void *)&v78 + 8LL;
    *(_DWORD *)std::stringbuf::string_type buf = 67240707;
    *(_DWORD *)unsigned __int8 v96 = v10;
    *(_WORD *)&v96[4] = 2050;
    *(void *)&v96[6] = v58;
    *(_WORD *)&v96[14] = 2081;
    *(void *)&v96[16] = v59;
    _os_log_impl( (void *)&_mh_execute_header,  v57,  OS_LOG_TYPE_DEFAULT,  "TileCell, deleteAgedTiles, end, numOfDeletedTiles, %{public}u, remain, %{public}lu, name, %{private}s",  buf,  0x1Cu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    uint64_t v61 = qword_101934858;
    uint64_t v62 = sub_100019240((uint64_t)v6);
    uint64_t v63 = *(void *)(*(void *)&v78 + 8LL);
    *(_DWORD *)std::string __p = 67240707;
    *(_DWORD *)&__p[4] = v10;
    *(_WORD *)&__p[8] = 2050;
    *(void *)&__p[10] = v62;
    *(_WORD *)&_BYTE __p[18] = 2081;
    *(void *)&__p[20] = v63;
    LODWORD(v76) = 28;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v61,  0LL,  "TileCell, deleteAgedTiles, end, numOfDeletedTiles, %{public}u, remain, %{public}lu, name, %{private}s",  __p,  *(void *)&v76);
    char v65 = (uint8_t *)v64;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::agedTileDeleter(CLTilesSet &, CFAbsoluteTime)",  "%s\n",  v64);
    if (v65 != buf) {
      free(v65);
    }
  }

  return sub_1011F6BE4(v87);
}

void sub_100DCC678( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29)
{
}

void sub_100DCC6D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v6 = sub_101171C7C(a3 - a2);
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101883680);
  }
  uint64_t v7 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_INFO))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    v9[0] = 68290306;
    v9[1] = 0;
    __int16 v10 = 2082;
    uint64_t v11 = "";
    __int16 v12 = 2082;
    int v13 = "elapsed";
    __int16 v14 = 2050;
    uint64_t v15 = a2;
    __int16 v16 = 2050;
    uint64_t v17 = a3;
    __int16 v18 = 2050;
    double v19 = v6;
    __int16 v20 = 2050;
    uint64_t v21 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:CLCellTilesManager::agedTileDeleter, event:%{public, location:escape_only}s, begin_ mach:%{public}llu, end_mach:%{public}llu, elapsed_s:%{public}.09f, now_s:%{public}.09f}",  (uint8_t *)v9,  0x44u);
  }

void sub_100DCC808(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1;
  uint64_t v3 = *(void *)(a1 + 40);
  double v5 = *(double *)(v3 + 152);
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101883660);
  }
  double v6 = v4 + 60.0;
  uint64_t v7 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v8 = *(char *)(a2 + 31) >= 0 ? a2 + 8 : *(void *)(a2 + 8);
    uint64_t v9 = *(void *)(v2 + 56);
    int v10 = *(unsigned __int8 *)(v2 + 64);
    uint64_t v11 = sub_100019240(a2 + 184);
    uint64_t v12 = sub_100603208(a2 + 184);
    sub_100832C64(*(void *)(v2 + 48), (std::stringbuf::string_type *)__p);
    int v13 = __p[23] >= 0 ? __p : *(_BYTE **)__p;
    *(_DWORD *)std::stringbuf::string_type buf = 136316930;
    *(void *)&uint8_t buf[4] = v8;
    __int16 v158 = 2080;
    *(void *)&__int128 v159 = v9;
    WORD4(v159) = 1024;
    *(_DWORD *)((char *)&v159 + 1sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = v10;
    HIWORD(v159) = 2048;
    *(double *)__int16 v160 = v6;
    *(_WORD *)&v160[8] = 1024;
    BOOL v161 = v6 < v5;
    __int16 v162 = 2048;
    uint64_t v163 = v11;
    __int16 v164 = 2048;
    uint64_t v165 = v12;
    __int16 v166 = 2080;
    unsigned int v167 = v13;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "TILE: updateProtectionClass, start, %s, reason, %s, isAboutToLock, %d, locationAge, %.1lf, doLocCheck, %d, sizes, %lu, %lu, knownLocation, %s",  buf,  0x4Au);
    if ((__p[23] & 0x80000000) != 0) {
      operator delete(*(void **)__p);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101883660);
    }
    uint64_t v140 = qword_101934A78;
    else {
      uint64_t v104 = *(void *)(a2 + 8);
    }
    uint64_t v105 = *(void *)(v2 + 56);
    int v106 = *(unsigned __int8 *)(v2 + 64);
    uint64_t v107 = sub_100019240(a2 + 184);
    uint64_t v108 = sub_100603208(a2 + 184);
    sub_100832C64(*(void *)(v2 + 48), &v147);
    if ((v147.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      std::string v109 = &v147;
    }
    else {
      std::string v109 = (std::stringbuf::string_type *)v147.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)std::string __p = 136316930;
    *(void *)&__p[4] = v104;
    *(_WORD *)&_BYTE __p[12] = 2080;
    *(void *)&__p[14] = v105;
    *(_WORD *)&__p[22] = 1024;
    *(_DWORD *)&__p[24] = v106;
    *(_WORD *)&_BYTE __p[28] = 2048;
    *(double *)__int16 v149 = v6;
    *(_WORD *)&v149[8] = 1024;
    BOOL v150 = v6 < v5;
    __int16 v151 = 2048;
    uint64_t v152 = v107;
    __int16 v153 = 2048;
    uint64_t v154 = v108;
    __int16 v155 = 2080;
    __int16 v156 = v109;
    LODWORD(v134) = 74;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v140,  2LL,  "TILE: updateProtectionClass, start, %s, reason, %s, isAboutToLock, %d, locationAge, %.1lf, doLocCheck, %d, sizes, %lu, %lu, knownLocation, %s",  __p,  v134,  v135,  v136,  v138,  v139,  v140,  v141);
    __int16 v111 = v110;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::updateProtectionClass(const char *, const CLDaemonLocation &, BOOL)_block_invoke",  "%s\n",  v111);
    if (v111 != buf) {
      free(v111);
    }
  }

  if (v6 < v5)
  {
    if (*(_BYTE *)(v2 + 64))
    {
      uint64_t v14 = a2 + 184;
      sub_100603264(a2 + 184);
      uint64_t v15 = (void *)sub_1005B46E8(a2 + 184);
      uint64_t v16 = sub_100056FA8(a2 + 184);
      if (v15 != (void *)v16)
      {
        uint64_t v17 = (void *)v16;
        __int16 v18 = (mach_header_64 *)&_mh_execute_header;
        double v19 = "CellTile, tile ptr is NULL, #CloneMe";
        uint64_t v137 = v16;
        while (1)
        {
          __int16 v20 = (unsigned int *)v15[10];
          if (!v20) {
            break;
          }
          if (sub_100C0CCC8(v15[10]))
          {
            if (!sub_100C148B0((double *)v20, *(void *)(v2 + 48), *(float *)(a2 + 144)))
            {
              sub_100602F80(v14, v20 + 12);
              ++*(_DWORD *)(*(void *)(*(void *)(v2 + 32) + 8LL) + 24LL);
              if (qword_101934850 != -1) {
                dispatch_once(&qword_101934850, &stru_101883640);
              }
              BOOL v25 = (os_log_s *)qword_101934858;
              if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_ERROR))
              {
                (*(void (**)(_BYTE *__return_ptr, unsigned int *))(*(void *)v20 + 16LL))(buf, v20);
                uint64_t v26 = buf;
                if (SBYTE9(v159) < 0) {
                  uint64_t v26 = *(_BYTE **)buf;
                }
                *(_DWORD *)std::string __p = 136380675;
                *(void *)&__p[4] = v26;
                _os_log_impl( v18,  v25,  OS_LOG_TYPE_ERROR,  "CellTile, updateProtectionClass, unable to lock tile, locking tileid, %{private}s, #CloneMe",  __p,  0xCu);
                if (SBYTE9(v159) < 0) {
                  operator delete(*(void **)buf);
                }
              }

              if (!sub_1002921D0(115, 0)) {
                goto LABEL_27;
              }
              bzero(buf, 0x65CuLL);
              if (qword_101934850 != -1) {
                dispatch_once(&qword_101934850, &stru_101883640);
              }
              uint64_t v27 = qword_101934858;
              (*(void (**)(_BYTE *__return_ptr, unsigned int *))(*(void *)v20 + 16LL))(__p, v20);
              __int128 v28 = __p;
              if (__p[23] < 0) {
                __int128 v28 = *(_BYTE **)__p;
              }
              LODWORD(v147.__r_.__value_.__l.__data_) = 136380675;
              *(std::string::size_type *)((char *)v147.__r_.__value_.__r.__words + 4) = (std::string::size_type)v28;
              LODWORD(v134) = 12;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  v18,  v27,  16LL,  "CellTile, updateProtectionClass, unable to lock tile, locking tileid, %{private}s, #CloneMe",  &v147,  v134);
              double v30 = v29;
              if ((__p[23] & 0x80000000) != 0) {
                operator delete(*(void **)__p);
              }
              goto LABEL_49;
            }

            if (!sub_100C11C74((uint64_t)v20))
            {
              if (qword_101934850 != -1) {
                dispatch_once(&qword_101934850, &stru_101883640);
              }
              BOOL v31 = (os_log_s *)qword_101934858;
              if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_ERROR))
              {
                (*(void (**)(_BYTE *__return_ptr, unsigned int *))(*(void *)v20 + 16LL))(buf, v20);
                uint64_t v32 = v3;
                uint64_t v33 = v2;
                uint64_t v34 = v14;
                uint64_t v35 = v18;
                uint64_t v36 = v19;
                int v37 = SBYTE9(v159);
                char v38 = *(_BYTE **)buf;
                uint64_t v39 = v34;
                uint64_t v40 = sub_100603208(v34);
                *(_DWORD *)std::string __p = 136380931;
                uint64_t v41 = buf;
                if (v37 < 0) {
                  uint64_t v41 = v38;
                }
                *(void *)&__p[4] = v41;
                *(_WORD *)&_BYTE __p[12] = 2050;
                *(void *)&__p[14] = v40;
                __int16 v18 = v35;
                _os_log_impl( v35,  v31,  OS_LOG_TYPE_ERROR,  "CellTile, updateProtectionClass, failed unlocking tileid, %{private}s, size, %{public}lu, #CloneMe",  __p,  0x16u);
                if (SBYTE9(v159) < 0) {
                  operator delete(*(void **)buf);
                }
                double v19 = v36;
                uint64_t v14 = v39;
                uint64_t v2 = v33;
                uint64_t v3 = v32;
                uint64_t v17 = (void *)v137;
              }

              if (!sub_1002921D0(115, 0)) {
                goto LABEL_27;
              }
              bzero(buf, 0x65CuLL);
              if (qword_101934850 != -1) {
                dispatch_once(&qword_101934850, &stru_101883640);
              }
              uint64_t v42 = qword_101934858;
              (*(void (**)(_BYTE *__return_ptr, unsigned int *))(*(void *)v20 + 16LL))(__p, v20);
              double v43 = v18;
              int v44 = __p[23];
              BOOL v45 = *(_BYTE **)__p;
              uint64_t v46 = sub_100603208(v14);
              LODWORD(v147.__r_.__value_.__l.__data_) = 136380931;
              int v47 = __p;
              if (v44 < 0) {
                int v47 = v45;
              }
              *(std::string::size_type *)((char *)v147.__r_.__value_.__r.__words + 4) = (std::string::size_type)v47;
              WORD2(v147.__r_.__value_.__r.__words[1]) = 2050;
              *(std::string::size_type *)((char *)&v147.__r_.__value_.__r.__words[1] + 6) = v46;
              LODWORD(v134) = 22;
              __int16 v18 = v43;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  v43,  v42,  16LL,  "CellTile, updateProtectionClass, failed unlocking tileid, %{private}s, size, %{public}lu, #CloneMe",  &v147,  v134);
              double v30 = v48;
              if ((__p[23] & 0x80000000) != 0) {
                operator delete(*(void **)__p);
              }
LABEL_49:
              sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLCellTilesManager::updateProtectionClass(const char *, const CLDaemonLocation &, BOOL)_block_invoke",  "%s\n",  v30);
LABEL_69:
              if (v30 != buf) {
                free(v30);
              }
              goto LABEL_27;
            }

            sub_100602F80(v14, v20 + 12);
            ++*(_DWORD *)(*(void *)(*(void *)(v2 + 32) + 8LL) + 24LL);
          }

void sub_100DCE168( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, char a25, uint64_t a26, uint64_t a27, uint64_t a28, void *__p, uint64_t a30, int a31, __int16 a32, char a33, char a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, char *a42, uint64_t a43, int a44, __int16 a45, char a46, char a47)
{
  a42 = &a25;
  sub_100222DE8((void ***)&a42);
  _Unwind_Resume(a1);
}

void sub_100DCE218(uint64_t a1, std::string::size_type a2)
{
  if (*(void *)(a1 + 168) || *(double *)(a1 + 196) >= 0.0)
  {
    double v9 = vabdd_f64( (*(double (**)(void))(**(void **)(a1 + 368) + 16LL))(*(void *)(a1 + 368)),  *(double *)(a1 + 252));
    double v10 = *(double *)(a1 + 152);
    double v11 = v10 - v9 + 20.0;
    double v12 = v10 * 0.170000002;
    if (v11 > v12) {
      double v13 = v11;
    }
    else {
      double v13 = v12;
    }
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    uint64_t v14 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      sub_100832C64(a1 + 176, &__p);
      uint64_t v15 = (__p.__r_.__value_.__s.__size_ & 0x80u) == 0
          ? &__p
          : (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
      *(_DWORD *)std::stringbuf::string_type buf = 136315906;
      std::string::size_type v30 = a2;
      __int16 v31 = 2048;
      double v32 = v9;
      __int16 v33 = 2048;
      double v34 = v13;
      __int16 v35 = 2080;
      uint64_t v36 = v15;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "TileTimer, schedule, reason, %s, locationAge, %.1lf, secondsFromNow, %.1lf, lastKnownLocation, %s",  buf,  0x2Au);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101883640);
      }
      uint64_t v18 = qword_101934858;
      sub_100832C64(a1 + 176, &v24);
      if ((v24.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        double v19 = &v24;
      }
      else {
        double v19 = (std::stringbuf::string_type *)v24.__r_.__value_.__r.__words[0];
      }
      LODWORD(__p.__r_.__value_.__l.__data_) = 136315906;
      *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + 4) = a2;
      WORD2(__p.__r_.__value_.__r.__words[1]) = 2048;
      *(double *)((char *)&__p.__r_.__value_.__r.__words[1] + 6) = v9;
      HIWORD(__p.__r_.__value_.__r.__words[2]) = 2048;
      double v26 = v13;
      __int16 v27 = 2080;
      __int128 v28 = v19;
      LODWORD(v22) = 42;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v18,  2LL,  "TileTimer, schedule, reason, %s, locationAge, %.1lf, secondsFromNow, %.1lf, lastKnownLocation, %s",  (const char *)&__p,  v22,  v23,  v24.__r_.__value_.__l.__data_);
      uint64_t v21 = v20;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::scheduleExpiredLocationTimer(const char *)",  "%s\n",  v21);
    }

    uint64_t v16 = *(void *)(a1 + 168);
    double v17 = (*(double (**)(void))(**(void **)(a1 + 368) + 16LL))(*(void *)(a1 + 368));
    sub_1006B6014(v16, v13 + v17);
  }

  else
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    double v4 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      BOOL v5 = *(double *)(a1 + 196) < 0.0;
      *(_DWORD *)std::stringbuf::string_type buf = 67240192;
      LODWORD(v3sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "TileTimer, skip, location, %{public}d", buf, 8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101883640);
      }
      BOOL v6 = *(double *)(a1 + 196) < 0.0;
      LODWORD(__p.__r_.__value_.__l.__data_) = 67240192;
      HIDWORD(__p.__r_.__value_.__r.__words[0]) = v6;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "TileTimer, skip, location, %{public}d",  &__p,  8);
      uint64_t v8 = (uint8_t *)v7;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::scheduleExpiredLocationTimer(const char *)",  "%s\n",  v7);
      if (v8 != buf) {
        free(v8);
      }
    }
  }

void sub_100DCE650(id a1)
{
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  std::string::assign( (std::string *)&qword_10199E9A8,  -[NSString UTF8String]( -[NSString stringByAppendingPathComponent:]( +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", p_p),  "stringByAppendingPathComponent:",  @"tiles_cell"),  "UTF8String"));
}

void sub_100DCE6D0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DCE6EC(id a1)
{
}

void sub_100DCE700(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (*(_BYTE *)(v3 + 160))
  {
    (*(void (**)(void))(**(void **)(v3 + 368) + 16LL))(*(void *)(v3 + 368));
    uint64_t v6 = *(void *)(a1 + 40);
    if (*(double *)(v6 + 20) < 0.0 || vabdd_f64(v5, *(double *)(v6 + 76)) > 3600.0)
    {
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101883660);
      }
      uint64_t v7 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "TILE: location not relevant", buf, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101883660);
        }
        LOWORD(v34) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "TILE: location not relevant",  &v34,  2);
        double v9 = (uint8_t *)v8;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::updateTileLocationRelevancy(const CLDaemonLocation &)_block_invoke",  "%s\n",  v8);
LABEL_24:
        if (v9 != buf) {
          free(v9);
        }
        return;
      }

      return;
    }

    uint64_t v16 = (int *)(a2 + 4);
    sub_1008ACE9C((uint64_t)&v34, (_DWORD *)(a2 + 4));
    sub_100C11F48( (uint64_t)&v34,  -1LL,  *(double *)(*(void *)(a1 + 40) + 4LL),  *(double *)(*(void *)(a1 + 40) + 12LL),  *(double *)(a2 + 152),  *(double *)(a2 + 160));
    if (sub_1008AD1E0(&v34))
    {
      uint64_t v17 = sub_1006025CC(a2 + 184, &v34);
      uint64_t v18 = v17;
      double v19 = (*(double (**)(void))(**(void **)(v3 + 368) + 16LL))(*(void *)(v3 + 368));
      int v20 = sub_100DD963C(v18, v19);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101883660);
      }
      uint64_t v21 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        int v22 = *v16;
        sub_1008AD840(&v34, &__p);
        double v23 = (__p.__r_.__value_.__s.__size_ & 0x80u) == 0
            ? &__p
            : (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
        *(_DWORD *)std::stringbuf::string_type buf = 67109634;
        *(_DWORD *)uint64_t v39 = v20;
        *(_WORD *)&v39[4] = 1024;
        *(_DWORD *)&v39[6] = (__int16)v22;
        __int16 v40 = 2080;
        uint64_t v41 = v23;
        _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEBUG,  "TILE: updating mtime, %d, type, %d, tileid, %s",  buf,  0x18u);
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_52;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101883660);
      }
      uint64_t v24 = qword_101934A78;
      int v25 = *v16;
      sub_1008AD840(&v34, &v32);
      if ((v32.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        double v26 = &v32;
      }
      else {
        double v26 = (std::stringbuf::string_type *)v32.__r_.__value_.__r.__words[0];
      }
      LODWORD(__p.__r_.__value_.__l.__data_) = 67109634;
      HIDWORD(__p.__r_.__value_.__r.__words[0]) = v20;
      LOWORD(__p.__r_.__value_.__r.__words[1]) = 1024;
      *(_DWORD *)((char *)&__p.__r_.__value_.__r.__words[1] + 2) = (__int16)v25;
      HIWORD(__p.__r_.__value_.__r.__words[1]) = 2080;
      __p.__r_.__value_.__l.__cap_ = (std::string::size_type)v26;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v24,  2LL,  "TILE: updating mtime, %d, type, %d, tileid, %s",  &__p,  24,  v31);
      __int128 v28 = v27;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::updateTileLocationRelevancy(const CLDaemonLocation &)_block_invoke",  "%s\n",  v28);
    }

    else
    {
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101883640);
      }
      double v29 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_ERROR,  "CellTile, Invalid tile id!, #CloneMe",  buf,  2u);
      }

      if (!sub_1002921D0(115, 0)) {
        goto LABEL_52;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101883640);
      }
      LOWORD(__p.__r_.__value_.__l.__data_) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  16LL,  "CellTile, Invalid tile id!, #CloneMe",  &__p,  2);
      __int128 v28 = (char *)v30;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLCellTilesManager::updateTileLocationRelevancy(const CLDaemonLocation &)_block_invoke",  "%s\n",  v30);
    }

    free(v28);
LABEL_52:
    if (v37 < 0) {
      operator delete(v36);
    }
    return;
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101883660);
  }
  double v10 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v11 = a2 + 8;
    *(_DWORD *)std::stringbuf::string_type buf = 136315138;
    *(void *)uint64_t v39 = v11;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "TILE: tiles, %s, not active", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101883660);
    }
    uint64_t v14 = *(void *)(a2 + 8);
    uint64_t v13 = a2 + 8;
    uint64_t v12 = v14;
    unsigned int v34 = 136315138;
    uint64_t v35 = v12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "TILE: tiles, %s, not active",  (const char *)&v34);
    double v9 = (uint8_t *)v15;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::updateTileLocationRelevancy(const CLDaemonLocation &)_block_invoke",  "%s\n",  v15);
    goto LABEL_24;
  }

void sub_100DCEDDC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, void *__p, uint64_t a23, int a24, __int16 a25, char a26, char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_100DCEE1C(uint64_t a1, uint64_t a2)
{
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101883640);
  }
  double v4 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 134349056;
    uint64_t v12 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "@TileSched, cell, called, %{public}ld",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    int v9 = 134349056;
    uint64_t v10 = a2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "@TileSched, cell, called, %{public}ld",  &v9,  12);
    uint64_t v8 = (uint8_t *)v7;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLCellTilesManager::onScheduledTileDownloadsCallback(CLTileDownloadReachabilityRequirement)",  "%s\n",  v7);
    if (v8 != buf) {
      free(v8);
    }
  }

  double v5 = (*(double (**)(void))(**(void **)(a1 + 368) + 16LL))(*(void *)(a1 + 368));
  return sub_100DC4570(a1, v5);
}

BOOL sub_100DCEFE0(uint64_t a1, uint64_t a2)
{
  return sub_100DCEE1C(a1 - 112, a2);
}

void sub_100DCEFE8(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = operator new(0x30uLL);
  sub_1010DDBC0(__p, "CLCellTilesManager");
  sub_100DCF0B0((uint64_t)v8, 0LL, (uint64_t *)__p, a3, a1, a2);
  *uint64_t v8 = off_101883588;
  *a4 = v8;
  if (v10 < 0) {
    operator delete(__p[0]);
  }
}

void sub_100DCF084( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_100DCF0B0(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4, uint64_t a5, uint64_t a6)
{
  *(void *)a1 = off_101883888;
  *(void *)(a1 + _Block_object_dispose(va, 8) = -[CLNotifierClientAdapter initWithClient:]( objc_alloc(&OBJC_CLASS___CLNotifierClientAdapter),  "initWithClient:",  a1);
  *(void *)(a1 + sub_100BDC958(v1 + 24) = a5;
  *(void *)(a1 + 32) = a6;
  else {
    uint64_t v12 = (uint64_t *)*a3;
  }
  id v13 = objc_msgSend( objc_msgSend(a4, "vendor"),  "proxyForService:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v12));
  *(void *)(a1 + 16) = v13;
  id v14 = v13;
  if (a2) {
    [*(id *)(a1 + 16) setDelegateEntityName:a2];
  }
  objc_msgSend(*(id *)(a1 + 16), "registerDelegate:inSilo:", *(void *)(a1 + 8), objc_msgSend(a4, "silo"));
  return a1;
}

id sub_100DCF184(uint64_t a1)
{
  return objc_msgSend( -[CLServiceVendor proxyForService:]( +[CLServiceVendor sharedInstance](CLServiceVendor, "sharedInstance"),  "proxyForService:",  @"CLCellTilesManager"),  "syncgetDoSync:",  a1);
}

void sub_100DCF1BC(uint64_t a1, uint64_t a2)
{
  HIDWORD(v15) = a2;
  if (!*(_BYTE *)(a1 + 108))
  {
    uint64_t v4 = *(void *)(a1 + 88);
    if (!v4) {
      goto LABEL_12;
    }
    uint64_t v5 = a1 + 80;
    uint64_t v6 = a1 + 88;
    do
    {
      int v7 = *(_DWORD *)(v4 + 32);
      BOOL v8 = v7 < (int)a2;
      else {
        int v9 = (uint64_t *)(v4 + 8);
      }
      if (!v8) {
        uint64_t v6 = v4;
      }
      uint64_t v4 = *v9;
    }

    while (*v9);
    if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= (int)a2)
    {
      while (*(void *)(v6 + 56))
      {
        *(_DWORD *)std::stringbuf::string_type buf = *(_DWORD *)(*(void *)(v6 + 40) + 28LL);
        (*(void (**)(uint64_t, uint64_t, uint8_t *))(*(void *)a1 + 112LL))(a1, a2, buf);
      }

      sub_100233254(v5, (int *)&v15 + 1);
    }

    else
    {
LABEL_12:
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101883620);
      }
      char v10 = (os_log_s *)qword_1019349D8;
      if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
      {
        uint64_t v11 = (void *)(a1 + 8);
        *(_DWORD *)std::stringbuf::string_type buf = 136446466;
        uint64_t v21 = v11;
        __int16 v22 = 1026;
        int v23 = a2;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
          buf,
          0x12u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_101883620);
        }
        uint64_t v12 = (void *)(a1 + 8);
        int v16 = 136446466;
        uint64_t v17 = v12;
        __int16 v18 = 1026;
        int v19 = a2;
        LODWORD(v15) = 18;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
          &v16,
          v15);
        id v14 = (uint8_t *)v13;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLNotifier<CLCellTilesManager_Type::Notification, CLCellTilesManager_Type::NotificationData, char , char>::removeClient(int) [Notification_T = CLCellTilesManager_Type::Notification, NotificationData_T = CLCel lTilesManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v13);
        if (v14 != buf) {
          free(v14);
        }
      }
    }
  }

uint64_t sub_100DCF430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void *))(*(void *)a1 + 96LL))( a1,  a2,  a3,  &unk_101991108);
}

BOOL sub_100DCF444(uint64_t a1, int a2, int *a3, char *a4)
{
  int v41 = a2;
  if (*(_BYTE *)(a1 + 108)) {
    return 0LL;
  }
  uint64_t v7 = *(void *)(a1 + 88);
  if (v7)
  {
    uint64_t v10 = a1 + 88;
    do
    {
      int v11 = *(_DWORD *)(v7 + 32);
      BOOL v12 = v11 < a2;
      if (v11 >= a2) {
        id v13 = (uint64_t *)v7;
      }
      else {
        id v13 = (uint64_t *)(v7 + 8);
      }
      if (!v12) {
        uint64_t v10 = v7;
      }
      uint64_t v7 = *v13;
    }

    while (*v13);
    if (v10 != a1 + 88 && *(_DWORD *)(v10 + 32) <= a2)
    {
      uint64_t v40 = v10;
      int v16 = *a3;
      uint64_t v19 = *(void *)(v10 + 48);
      uint64_t v18 = v10 + 48;
      uint64_t v17 = v19;
      if (!v19) {
        goto LABEL_31;
      }
      uint64_t v20 = v18;
      do
      {
        int v21 = *(_DWORD *)(v17 + 28);
        BOOL v22 = v21 < v16;
        if (v21 >= v16) {
          int v23 = (uint64_t *)v17;
        }
        else {
          int v23 = (uint64_t *)(v17 + 8);
        }
        if (!v22) {
          uint64_t v20 = v17;
        }
        uint64_t v17 = *v23;
      }

      while (*v23);
      if (v20 == v18 || v16 < *(_DWORD *)(v20 + 28)) {
LABEL_31:
      }
        uint64_t v20 = v18;
      uint64_t v24 = *(void *)(a1 + 64);
      if (!v24) {
        goto LABEL_42;
      }
      uint64_t v25 = a1 + 64;
      do
      {
        int v26 = *(_DWORD *)(v24 + 32);
        BOOL v27 = v26 < v16;
        if (v26 >= v16) {
          __int128 v28 = (uint64_t *)v24;
        }
        else {
          __int128 v28 = (uint64_t *)(v24 + 8);
        }
        if (!v27) {
          uint64_t v25 = v24;
        }
        uint64_t v24 = *v28;
      }

      while (*v28);
      if (v25 != a1 + 64 && v16 >= *(_DWORD *)(v25 + 32))
      {
        *(void *)uint64_t v42 = v25;
        uint64_t v33 = *(void *)(v25 + 56);
        char v34 = *a4;
        *(void *)std::stringbuf::string_type buf = &v41;
        *((_BYTE *)sub_1004EF3D4((uint64_t **)(v25 + 40), &v41, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = v34;
        buf[0] = 0;
        memset(&buf[4], 0, 48);
        *(_OWORD *)std::stringbuf::string_type __p = 0u;
        __int128 v47 = 0u;
        char v48 = 0;
        if (v20 == v18
          && (*(unsigned int (**)(uint64_t, int *, _BYTE *))(*(void *)a1 + 128LL))(a1, a3, buf))
        {
          uint64_t v35 = sub_100DD29D8((uint64_t)buf);
          sub_100DD1DA4((_BYTE *)a1, (uint64_t)&v40, (uint64_t)v42, v35);
        }

        if (SBYTE11(v47) < 0) {
          operator delete(*(void **)((char *)__p + 4));
        }
        if (SBYTE3(__p[0]) < 0) {
          operator delete(*(void **)&buf[32]);
        }
        if ((buf[31] & 0x80000000) != 0) {
          operator delete(*(void **)&buf[8]);
        }
        if (v33) {
          goto LABEL_44;
        }
      }

      else
      {
LABEL_42:
        *(void *)uint64_t v42 = a1 + 64;
        char v29 = byte_101991109;
        HIDWORD(v39) = v16;
        *(void *)std::stringbuf::string_type buf = (char *)&v39 + 4;
        *((_BYTE *)sub_10023347C((uint64_t **)(a1 + 56), (int *)&v39 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 8sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = v29;
        HIDWORD(v39) = *a3;
        *(void *)std::stringbuf::string_type buf = (char *)&v39 + 4;
        std::string::size_type v30 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v39 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        sub_1000F0D38(v30 + 8);
        char v31 = *a4;
        HIDWORD(v39) = *a3;
        *(void *)std::stringbuf::string_type buf = (char *)&v39 + 4;
        std::stringbuf::string_type v32 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v39 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        *(void *)std::stringbuf::string_type buf = &v41;
        *((_BYTE *)sub_1004EF3D4(v32 + 5, &v41, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = v31;
      }

      (*(void (**)(uint64_t, int *))(*(void *)a1 + 168LL))(a1, a3);
LABEL_44:
      if (v20 == v18)
      {
        *(_DWORD *)std::stringbuf::string_type buf = *a3;
        sub_10004A8FC((uint64_t **)(v40 + 40), (int *)buf, buf);
      }

      return 1LL;
    }
  }

  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101883620);
  }
  id v14 = (os_log_s *)qword_1019349D8;
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
  {
    uint64_t v15 = (void *)(a1 + 8);
    *(_DWORD *)std::stringbuf::string_type buf = 136446466;
    *(void *)&uint8_t buf[4] = v15;
    *(_WORD *)&_BYTE buf[12] = 1026;
    *(_DWORD *)&_BYTE buf[14] = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
      buf,
      0x12u);
  }

  BOOL result = sub_1002921D0(115, 0);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101883620);
    }
    uint64_t v36 = (void *)(a1 + 8);
    *(_DWORD *)uint64_t v42 = 136446466;
    *(void *)&v42[4] = v36;
    __int16 v43 = 1026;
    int v44 = a2;
    LODWORD(v39) = 18;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
      v42,
      v39);
    char v38 = (char *)v37;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLCellTilesManager_Type::Notification, CLCellTilesManager_Type::NotificationData, char, ch ar>::registerForNotification(int, const Notification_T &, const RegistrationInfo_T &) [Notification_T = CLCellTile sManager_Type::Notification, NotificationData_T = CLCellTilesManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v37);
    if (v38 != buf) {
      free(v38);
    }
    return 0LL;
  }

  return result;
}

void sub_100DCF8F4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

BOOL sub_100DCF914(uint64_t a1, int a2, int *a3)
{
  uint64_t v5 = *(void *)(a1 + 88);
  if (!v5) {
    goto LABEL_11;
  }
  uint64_t v6 = a1 + 88;
  do
  {
    int v7 = *(_DWORD *)(v5 + 32);
    BOOL v8 = v7 < a2;
    if (v7 >= a2) {
      int v9 = (uint64_t *)v5;
    }
    else {
      int v9 = (uint64_t *)(v5 + 8);
    }
    if (!v8) {
      uint64_t v6 = v5;
    }
    uint64_t v5 = *v9;
  }

  while (*v9);
  if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= a2)
  {
    uint64_t v16 = *(void *)(v6 + 48);
    uint64_t v14 = v6 + 48;
    uint64_t v15 = v16;
    if (!v16) {
      goto LABEL_29;
    }
    int v17 = *a3;
    uint64_t v18 = v14;
    do
    {
      int v19 = *(_DWORD *)(v15 + 28);
      BOOL v20 = v19 < v17;
      if (v19 >= v17) {
        int v21 = (uint64_t *)v15;
      }
      else {
        int v21 = (uint64_t *)(v15 + 8);
      }
      if (!v20) {
        uint64_t v18 = v15;
      }
      uint64_t v15 = *v21;
    }

    while (*v21);
    if (v18 == v14 || v17 < *(_DWORD *)(v18 + 28)) {
LABEL_29:
    }
      uint64_t v18 = v14;
    return v18 != v14;
  }

  else
  {
LABEL_11:
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101883620);
    }
    uint64_t v10 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
    {
      int v11 = (void *)(a1 + 8);
      *(_DWORD *)std::stringbuf::string_type buf = 136446466;
      std::string::size_type v30 = v11;
      __int16 v31 = 1026;
      int v32 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
        buf,
        0x12u);
    }

    BOOL v12 = sub_1002921D0(115, 0);
    BOOL result = 0LL;
    if (v12)
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101883620);
      }
      BOOL v22 = (void *)(a1 + 8);
      int v25 = 136446466;
      int v26 = v22;
      __int16 v27 = 1026;
      int v28 = a2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
        &v25,
        18);
      uint64_t v24 = (uint8_t *)v23;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLCellTilesManager_Type::Notification, CLCellTilesManager_Type::NotificationData, char, char>::clientRegistered(int, const Notification_T &) [Notification_T = CLCellTilesManager_Type::Notification, No tificationData_T = CLCellTilesManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v23);
      if (v24 != buf) {
        free(v24);
      }
      return 0LL;
    }
  }

  return result;
}

BOOL sub_100DCFB94(char *a1, int a2, int *a3)
{
  HIDWORD(v34) = a2;
  int v3 = a1[108];
  if (!a1[108])
  {
    uint64_t v6 = *((void *)a1 + 11);
    if (v6)
    {
      BOOL v8 = a1 + 88;
      do
      {
        int v9 = *(_DWORD *)(v6 + 32);
        BOOL v10 = v9 < a2;
        if (v9 >= a2) {
          int v11 = (uint64_t *)v6;
        }
        else {
          int v11 = (uint64_t *)(v6 + 8);
        }
        if (!v10) {
          BOOL v8 = (char *)v6;
        }
        uint64_t v6 = *v11;
      }

      while (*v11);
      if (v8 != a1 + 88 && *((_DWORD *)v8 + 8) <= a2)
      {
        uint64_t v14 = (char *)*((void *)v8 + 6);
        BOOL v12 = v8 + 48;
        id v13 = v14;
        if (v14)
        {
          int v15 = *a3;
          uint64_t v16 = v12;
          do
          {
            int v17 = *((_DWORD *)v13 + 7);
            BOOL v18 = v17 < v15;
            if (v17 >= v15) {
              int v19 = (char **)v13;
            }
            else {
              int v19 = (char **)(v13 + 8);
            }
            if (!v18) {
              uint64_t v16 = v13;
            }
            id v13 = *v19;
          }

          while (*v19);
          if (v16 != v12 && v15 >= *((_DWORD *)v16 + 7))
          {
            LODWORD(__p[0]) = *a3;
            sub_1004EF494((uint64_t)(v12 - 8), (int *)__p);
            uint64_t v20 = *((void *)a1 + 8);
            if (!v20) {
              goto LABEL_33;
            }
            int v21 = *a3;
            BOOL v22 = a1 + 64;
            do
            {
              int v23 = *(_DWORD *)(v20 + 32);
              BOOL v24 = v23 < v21;
              if (v23 >= v21) {
                int v25 = (uint64_t *)v20;
              }
              else {
                int v25 = (uint64_t *)(v20 + 8);
              }
              if (!v24) {
                BOOL v22 = (char *)v20;
              }
              uint64_t v20 = *v25;
            }

            while (*v25);
            if (v22 != a1 + 64 && v21 >= *((_DWORD *)v22 + 8))
            {
              sub_1004EF494((uint64_t)(v22 + 40), (int *)&v34 + 1);
              if (!*((void *)v22 + 7)) {
                (*(void (**)(char *, int *))(*(void *)a1 + 176LL))(a1, a3);
              }
            }

            else
            {
LABEL_33:
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101883620);
              }
              int v26 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                __int16 v27 = a1 + 8;
                if (a1[31] < 0) {
                  __int16 v27 = (void *)*v27;
                }
                (*(void (**)(void **__return_ptr, char *, int *))(*(void *)a1 + 160LL))(__p, a1, a3);
                if (v44 >= 0) {
                  int v28 = __p;
                }
                else {
                  int v28 = (void **)__p[0];
                }
                *(_DWORD *)std::stringbuf::string_type buf = 136446466;
                *(void *)&uint8_t buf[4] = v27;
                __int16 v36 = 2082;
                char v37 = v28;
                _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_FAULT,  "%{public}s; notification %{public}s not found",
                  buf,
                  0x16u);
                if (v44 < 0) {
                  operator delete(__p[0]);
                }
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(__p, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_101883620);
                }
                char v29 = a1 + 8;
                if (a1[31] < 0) {
                  char v29 = (void *)*v29;
                }
                uint64_t v30 = qword_1019349D8;
                (*(void (**)(_BYTE *__return_ptr, char *, int *))(*(void *)a1 + 160LL))(buf, a1, a3);
                if (v38 >= 0) {
                  __int16 v31 = buf;
                }
                else {
                  __int16 v31 = *(_BYTE **)buf;
                }
                int v39 = 136446466;
                uint64_t v40 = v29;
                __int16 v41 = 2082;
                uint64_t v42 = v31;
                LODWORD(v34) = 22;
                _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v30,  17LL,  "%{public}s; notification %{public}s not found",
                  &v39,
                  v34);
                uint64_t v33 = v32;
                if (v38 < 0) {
                  operator delete(*(void **)buf);
                }
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLCellTilesManager_Type::Notification, CLCellTilesManager_Type::NotificationDa ta, char, char>::unregisterForNotification(int, const Notification_T &) [Notification_T = CLCellTilesM anager_Type::Notification, NotificationData_T = CLCellTilesManager_Type::NotificationData, Notificatio nInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v33);
              }
            }
          }
        }
      }
    }
  }

  return v3 == 0;
}

uint64_t sub_100DCFF1C(uint64_t a1, int *a2, uint64_t a3)
{
  int v10 = *a2;
  BOOL v12 = &v10;
  uint64_t v5 = sub_10023347C((uint64_t **)(a1 + 56), &v10, (uint64_t)&unk_1012CF090, &v12);
  sub_10005F550((uint64_t)(v5 + 8), &v11);
  uint64_t v6 = (std::__shared_weak_count *)*((void *)&v11 + 1);
  if (*((void *)&v11 + 1))
  {
    int v7 = (unint64_t *)(*((void *)&v11 + 1) + 8LL);
    do
      unint64_t v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }

  return 1LL;
}

void sub_100DCFFC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100DCFFDC(uint64_t a1, unsigned int *a2, uint64_t a3, int a4, int a5)
{
  if (!*(_BYTE *)(a1 + 108))
  {
    int v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: notifyClientsWithData (Fallback)",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_IF_NONE_PRESENT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101883620);
    }
    __int128 v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      BOOL v12 = (void *)(a1 + 8);
      id v13 = (std::__shared_weak_count *)*a2;
      *(_DWORD *)std::stringbuf::string_type buf = 68289794;
      *(_DWORD *)uint64_t v66 = 0;
      *(_WORD *)&v66[4] = 2082;
      *(void *)&v66[6] = "";
      *(_WORD *)&v66[14] = 2082;
      *(void *)&v66[16] = "activity";
      __int16 v67 = 2082;
      uint64_t v68 = v12;
      __int16 v69 = 2050;
      std::string::size_type v70 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:notifyClientsWithData, event:%{public, location:escape_only}s, name:%{public, l ocation:escape_only}s, notification:%{public}lld}",  buf,  0x30u);
    }

    int v15 = (__n128 *)(a1 + 64);
    uint64_t v14 = *(__n128 **)(a1 + 64);
    if (!v14) {
      goto LABEL_18;
    }
    signed __int32 v16 = *a2;
    int v17 = (__n128 *)(a1 + 64);
    do
    {
      signed __int32 v18 = v14[2].n128_i32[0];
      BOOL v19 = v18 < v16;
      if (v18 >= v16) {
        uint64_t v20 = (__n128 **)v14;
      }
      else {
        uint64_t v20 = (__n128 **)&v14->n128_u64[1];
      }
      if (!v19) {
        int v17 = v14;
      }
      uint64_t v14 = *v20;
    }

    while (*v20);
    if (v17 == v15 || v16 < (signed __int32)v17[2].n128_u32[0])
    {
LABEL_18:
      *(void *)std::string::size_type v71 = &v71[8];
      memset(&v71[8], 0, 24);
      double v72 = 0LL;
      sub_1002343E4((uint64_t)buf, a2, (uint64_t)v71);
      int v17 = sub_1002342A4((uint64_t **)(a1 + 56), (__n128 *)buf);
      int v21 = v70;
      if (v70)
      {
        p_shared_owners = (unint64_t *)&v70->__shared_owners_;
        do
          unint64_t v23 = __ldaxr(p_shared_owners);
        while (__stlxr(v23 - 1, p_shared_owners));
        if (!v23)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }

      sub_100008390((uint64_t)&v66[4], *(void **)&v66[12]);
      BOOL v24 = v72;
      if (v72)
      {
        int v25 = (unint64_t *)&v72->__shared_owners_;
        do
          unint64_t v26 = __ldaxr(v25);
        while (__stlxr(v26 - 1, v25));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }

      sub_100008390((uint64_t)v71, *(void **)&v71[8]);
    }

    if (a4)
    {
      sub_100DD1E80(a3, buf);
      sub_10005F550((uint64_t)&v17[4], (__int128 *)buf);
      __int16 v27 = *(std::__shared_weak_count **)&v66[4];
      if (*(void *)&v66[4])
      {
        int v28 = (unint64_t *)(*(void *)&v66[4] + 8LL);
        do
          unint64_t v29 = __ldaxr(v28);
        while (__stlxr(v29 - 1, v28));
        if (!v29)
        {
          ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
          std::__shared_weak_count::__release_weak(v27);
        }
      }
    }

    else
    {
      sub_1000F0D38((__n128 *)v17[4].n128_u64);
    }

    if (!v17[3].n128_u64[1]) {
      goto LABEL_83;
    }
    uint64_t v30 = sub_100DD1934(a3);
    if (a5 == -1)
    {
      sub_100DD19CC((void *)a1, (int *)a2, v30);
    }

    else
    {
      uint64_t v31 = a1 + 88;
      uint64_t v32 = *(void *)(a1 + 88);
      if (!v32) {
        goto LABEL_48;
      }
      uint64_t v33 = a1 + 88;
      do
      {
        int v34 = *(_DWORD *)(v32 + 32);
        BOOL v35 = v34 < a5;
        if (v34 >= a5) {
          __int16 v36 = (uint64_t *)v32;
        }
        else {
          __int16 v36 = (uint64_t *)(v32 + 8);
        }
        if (!v35) {
          uint64_t v33 = v32;
        }
        uint64_t v32 = *v36;
      }

      while (*v36);
      if (v33 == v31 || *(_DWORD *)(v33 + 32) > a5) {
LABEL_48:
      }
        uint64_t v33 = a1 + 88;
      uint64_t v63 = v33;
      unint64_t v37 = v15->n128_u64[0];
      if (!v15->n128_u64[0]) {
        goto LABEL_59;
      }
      int v38 = *a2;
      int v39 = (__n128 *)(a1 + 64);
      do
      {
        int v40 = *(_DWORD *)(v37 + 32);
        BOOL v41 = v40 < v38;
        if (v40 >= v38) {
          uint64_t v42 = (unint64_t *)v37;
        }
        else {
          uint64_t v42 = (unint64_t *)(v37 + 8);
        }
        if (!v41) {
          int v39 = (__n128 *)v37;
        }
        unint64_t v37 = *v42;
      }

      while (*v42);
      if (v39 == v15 || v38 < (signed __int32)v39[2].n128_u32[0])
      {
LABEL_59:
        uint64_t v62 = (__n128 *)(a1 + 64);
LABEL_60:
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_101883620);
        }
        __int16 v43 = (os_log_s *)qword_1019349D8;
        if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
        {
          char v44 = (void *)(a1 + 8);
          (*(void (**)(_BYTE *__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(v71, a1, a2);
          if (v71[23] >= 0) {
            BOOL v45 = v71;
          }
          else {
            BOOL v45 = *(_BYTE **)v71;
          }
          *(_DWORD *)std::stringbuf::string_type buf = 136315650;
          *(void *)uint64_t v66 = v44;
          *(_WORD *)&v66[8] = 1024;
          *(_DWORD *)&v66[10] = a5;
          *(_WORD *)&v66[14] = 2080;
          *(void *)&v66[16] = v45;
          _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_DEBUG,  "%s; client %d has deregistered, not notifying %s",
            buf,
            0x1Cu);
          if ((v71[23] & 0x80000000) != 0) {
            operator delete(*(void **)v71);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019349D0 != -1) {
            dispatch_once(&qword_1019349D0, &stru_101883620);
          }
          uint64_t v46 = (void *)(a1 + 8);
          uint64_t v47 = qword_1019349D8;
          (*(void (**)(void **__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(__p, a1, a2);
          if (v61 >= 0) {
            char v48 = __p;
          }
          else {
            char v48 = (void **)__p[0];
          }
          *(_DWORD *)std::string::size_type v71 = 136315650;
          *(void *)&v71[4] = v46;
          *(_WORD *)&v71[12] = 1024;
          *(_DWORD *)&v71[14] = a5;
          *(_WORD *)&v71[18] = 2080;
          *(void *)&v71[20] = v48;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v47,  2LL,  "%s; client %d has deregistered, not notifying %s",
            v71,
            28,
            v59);
          uint64_t v50 = v49;
          if (v61 < 0) {
            operator delete(__p[0]);
          }
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLCellTilesManager_Type::Notification, CLCellTilesManager_Type::NotificationData, ch ar, char>::notifyClientsWithData(const Notification_T &, const NotificationData_T &, BOOL, int, BOOL) [Notif ication_T = CLCellTilesManager_Type::Notification, NotificationData_T = CLCellTilesManager_Type::Notificatio nData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v50);
        }

        goto LABEL_83;
      }

      uint64_t v62 = v39;
      if (v33 == v31) {
        goto LABEL_60;
      }
      uint64_t v53 = v39[3].n128_i64[0];
      __int16 v51 = v39 + 3;
      int v52 = (__n128 *)v53;
      if (!v53) {
        goto LABEL_60;
      }
      int v54 = *(_DWORD *)(v33 + 32);
      BOOL v55 = v51;
      do
      {
        int v56 = v52[1].n128_i32[3];
        BOOL v57 = v56 < v54;
        if (v56 >= v54) {
          uint64_t v58 = v52;
        }
        else {
          uint64_t v58 = (__n128 *)&v52->n128_i8[8];
        }
        if (!v57) {
          BOOL v55 = v52;
        }
        int v52 = (__n128 *)v58->n128_u64[0];
      }

      while (v58->n128_u64[0]);
      sub_100DD1DA4((_BYTE *)a1, (uint64_t)&v63, (uint64_t)&v62, v30);
    }

void sub_100DD05F8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_activity_scope_state_s state, char a18)
{
}

void sub_100DD0644(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 108))
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101883620);
    }
    uint64_t v2 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      int v3 = (void *)(a1 + 8);
      *(_DWORD *)std::stringbuf::string_type buf = 136315138;
      unint64_t v37 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "%s; already shutdown; not listing clients",
        buf,
        0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101883620);
      }
      uint64_t v4 = (void *)(a1 + 8);
      int v32 = 136315138;
      uint64_t v33 = v4;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; already shutdown; not listing clients",
        (const char *)&v32);
      uint64_t v6 = (uint8_t *)v5;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLCellTilesManager_Type::Notification, CLCellTilesManager_Type::NotificationData, char, char>::listClients() [Notification_T = CLCellTilesManager_Type::Notification, NotificationData_T = CLCellTilesMa nager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v5);
      if (v6 != buf) {
        free(v6);
      }
    }
  }

  else
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101883620);
    }
    int v7 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      unint64_t v8 = (void *)(a1 + 8);
      uint64_t v9 = *(void *)(a1 + 96);
      *(_DWORD *)std::stringbuf::string_type buf = 136315394;
      unint64_t v37 = v8;
      __int16 v38 = 2048;
      v39[0] = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "%s; listing clients, num clients: %zu",
        buf,
        0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101883620);
      }
      __int16 v27 = (void *)(a1 + 8);
      uint64_t v28 = *(void *)(a1 + 96);
      int v32 = 136315394;
      uint64_t v33 = v27;
      __int16 v34 = 2048;
      v35[0] = v28;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; listing clients, num clients: %zu",
        (const char *)&v32,
        22);
      uint64_t v30 = (uint8_t *)v29;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLCellTilesManager_Type::Notification, CLCellTilesManager_Type::NotificationData, char, char>::listClients() [Notification_T = CLCellTilesManager_Type::Notification, NotificationData_T = CLCellTilesMa nager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v29);
      if (v30 != buf) {
        free(v30);
      }
    }

    int v10 = *(void **)(a1 + 80);
    if (v10 != (void *)(a1 + 88))
    {
      __int128 v11 = (void *)(a1 + 8);
      do
      {
        BOOL v12 = (void *)v10[5];
        if (v12 != v10 + 6)
        {
          do
          {
            if (qword_1019349D0 != -1) {
              dispatch_once(&qword_1019349D0, &stru_101883620);
            }
            id v13 = (os_log_s *)qword_1019349D8;
            if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v14 = (void *)(a1 + 8);
              int v15 = *((_DWORD *)v10 + 8);
              int v16 = *((_DWORD *)v12 + 7);
              *(_DWORD *)std::stringbuf::string_type buf = 136315650;
              unint64_t v37 = v14;
              __int16 v38 = 1024;
              LODWORD(v39[0]) = v15;
              WORD2(v39[0]) = 1024;
              *(_DWORD *)((char *)v39 + 6) = v16;
              _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "%s; clients, id: %d, notification: %d",
                buf,
                0x18u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101883620);
              }
              uint64_t v20 = (void *)(a1 + 8);
              int v21 = *((_DWORD *)v10 + 8);
              int v22 = *((_DWORD *)v12 + 7);
              int v32 = 136315650;
              uint64_t v33 = v20;
              __int16 v34 = 1024;
              LODWORD(v35[0]) = v21;
              WORD2(v35[0]) = 1024;
              *(_DWORD *)((char *)v35 + 6) = v22;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; clients, id: %d, notification: %d",
                (const char *)&v32,
                24,
                v31);
              BOOL v24 = (uint8_t *)v23;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLCellTilesManager_Type::Notification, CLCellTilesManager_Type::NotificationData , char, char>::listClients() [Notification_T = CLCellTilesManager_Type::Notification, NotificationData_T = CLCellTilesManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v23);
              if (v24 != buf) {
                free(v24);
              }
            }

            int v17 = (void *)v12[1];
            if (v17)
            {
              do
              {
                signed __int32 v18 = v17;
                int v17 = (void *)*v17;
              }

              while (v17);
            }

            else
            {
              do
              {
                signed __int32 v18 = (void *)v12[2];
                BOOL v19 = *v18 == (void)v12;
                BOOL v12 = v18;
              }

              while (!v19);
            }

            BOOL v12 = v18;
          }

          while (v18 != v10 + 6);
        }

        int v25 = (void *)v10[1];
        if (v25)
        {
          do
          {
            unint64_t v26 = v25;
            int v25 = (void *)*v25;
          }

          while (v25);
        }

        else
        {
          do
          {
            unint64_t v26 = (void *)v10[2];
            BOOL v19 = *v26 == (void)v10;
            int v10 = v26;
          }

          while (!v19);
        }

        int v10 = v26;
      }

      while (v26 != (void *)(a1 + 88));
    }
  }

void sub_100DD0BF4(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100DD2978(a1);
  operator delete(v1);
}

id sub_100DD0C08(uint64_t a1, int a2, void *a3)
{
  id result = sub_100DD1FE4(a3);
  if (result)
  {
    int v6 = a2;
    return (id)(*(uint64_t (**)(void, int *, id, void))(a1 + 24))(0LL, &v6, result, *(void *)(a1 + 32));
  }

  return result;
}

void sub_100DD0C54(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_100DD0C80(id a1)
{
  qword_101934858 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

void sub_100DD0CAC(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

void sub_100DD0CD8(id a1)
{
  qword_101934838 = (uint64_t)os_log_create("com.apple.locationd.Position", "Position");
}

void sub_100DD0D08(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100DD129C(a1);
  operator delete(v1);
}

void sub_100DD0D1C(uint64_t a1)
{
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101883660);
  }
  uint64_t v2 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    int v3 = (void *)(a1 + 8);
    uint64_t v4 = *(void *)(a1 + 72);
    *(_DWORD *)std::stringbuf::string_type buf = 136315394;
    int v16 = v3;
    __int16 v17 = 2048;
    uint64_t v18 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "CACHE: name, %s, clear, size, %lu", buf, 0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101883660);
    }
    int v7 = (void *)(a1 + 8);
    uint64_t v8 = *(void *)(a1 + 72);
    int v11 = 136315394;
    BOOL v12 = v7;
    __int16 v13 = 2048;
    uint64_t v14 = v8;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "CACHE: name, %s, clear, size, %lu",  (const char *)&v11,  22);
    int v10 = (uint8_t *)v9;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLEntryCache<std::string, CLDaemonLocation>::clear() [Key_T = std::string, DataEntry_T = CLDaemonLocation]",  "%s\n",  v9);
    if (v10 != buf) {
      free(v10);
    }
  }

  sub_1000229D4(a1 + 56, *(char **)(a1 + 64));
  *(void *)(a1 + 56) = a1 + 64;
  *(void *)(a1 + 64) = 0LL;
  int v6 = *(char **)(a1 + 88);
  uint64_t v5 = (void *)(a1 + 88);
  *(v5 - 2) = 0LL;
  sub_100528854((uint64_t)(v5 - 1), v6);
  *(v5 - 1) = v5;
  *uint64_t v5 = 0LL;
  v5[1] = 0LL;
}

uint64_t *sub_100DD0F34(uint64_t a1)
{
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101883660);
  }
  uint64_t v2 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    int v3 = (void *)(a1 + 8);
    uint64_t v4 = *(void *)(a1 + 72);
    *(_DWORD *)std::stringbuf::string_type buf = 136315394;
    int v15 = v3;
    __int16 v16 = 2048;
    uint64_t v17 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "CACHE: name, %s, deleteAgedEntries, size, %lu",  buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101883660);
    }
    int v6 = (void *)(a1 + 8);
    uint64_t v7 = *(void *)(a1 + 72);
    int v10 = 136315394;
    int v11 = v6;
    __int16 v12 = 2048;
    uint64_t v13 = v7;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "CACHE: name, %s, deleteAgedEntries, size, %lu",  (const char *)&v10,  22);
    uint64_t v9 = (uint8_t *)v8;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLEntryCache<std::string, CLDaemonLocation>::deleteAgedEntries() [Key_T = std::string, DataEntry_T = CLDaemonLocation]",  "%s\n",  v8);
    if (v9 != buf) {
      free(v9);
    }
  }

  return sub_100DD12FC(a1);
}

uint64_t sub_100DD1124@<X0>(uint64_t a1@<X1>, std::stringbuf::string_type *a2@<X8>)
{
  char v8 = 48;
  uint64_t v4 = sub_1007EC2C0(&v10, &v8);
  uint64_t v5 = *v4;
  *(uint64_t *)((char *)v4 + *(void *)(*v4 - 24) + sub_100BDC958(v1 + 24) = 12LL;
  *(_DWORD *)((char *)v4 + *(void *)(v5 - 24) + _Block_object_dispose(va, 8) = *(_DWORD *)((_BYTE *)v4 + *(void *)(v5 - 24) + 8) & 0xFFFFFFB5 | 8;
  *(_DWORD *)((char *)v4 + *(void *)(v5 - 24) + 8) |= 0x4000u;
  std::ostream::operator<<(v4, a1);
  std::stringbuf::str(a2, &v11);
  *(void *)((char *)v9
  uint64_t v10 = v6;
  std::streambuf::~streambuf(&v11);
  return std::ios::~ios(&v12);
}

void sub_100DD1230(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void *sub_100DD124C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(void *)(a2 + 16) = *(void *)(a1 + 16);
  return result;
}

void sub_100DD1278(std::string *a1@<X8>)
{
}

uint64_t sub_100DD129C(uint64_t a1)
{
  *(void *)a1 = off_101883790;
  sub_100DD0D1C(a1);
  sub_100528854(a1 + 80, *(char **)(a1 + 88));
  sub_1000229D4(a1 + 56, *(char **)(a1 + 64));
  return a1;
}

uint64_t *sub_100DD12FC(uint64_t a1)
{
  id result = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 16LL))(a1);
  if (result)
  {
    double Current = CFAbsoluteTimeGetCurrent();
    uint64_t v5 = *(void *)(a1 + 80);
    char v44 = (uint64_t **)(a1 + 80);
    if (v5 != a1 + 88)
    {
      __int16 v43 = (void *)(a1 + 8);
      *(void *)&__int128 v3 = 136316162LL;
      __int128 v41 = v3;
      do
      {
        uint64_t v6 = *(void **)(v5 + 8);
        uint64_t v7 = (void *)v5;
        if (v6)
        {
          do
          {
            char v8 = v6;
            uint64_t v6 = (void *)*v6;
          }

          while (v6);
        }

        else
        {
          do
          {
            char v8 = (void *)v7[2];
            BOOL v9 = *v8 == (void)v7;
            uint64_t v7 = v8;
          }

          while (!v9);
        }

        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101883660);
        }
        uint64_t v10 = (os_log_s *)qword_101934A78;
        if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
        {
          std::stringbuf v11 = (void *)(a1 + 8);
          double v12 = *(double *)(v5 + 32);
          uint64_t v13 = *(void *)(a1 + 72);
          uint64_t v14 = *(void *)(a1 + 32);
          (*(void (**)(_BYTE *__return_ptr, uint64_t, uint64_t))(*(void *)a1 + 56LL))(__p, a1, v5 + 40);
          int v15 = __p;
          if (v50 < 0) {
            int v15 = *(_BYTE **)__p;
          }
          *(_DWORD *)std::stringbuf::string_type buf = v41;
          BOOL v57 = v11;
          __int16 v58 = 2048;
          double v59 = Current - v12;
          __int16 v60 = 2048;
          uint64_t v61 = v13;
          __int16 v62 = 2048;
          uint64_t v63 = v14;
          __int16 v64 = 2080;
          char v65 = v15;
          _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "CACHE: name, %s, evict, aged, age, %.1lf, size, %lu, %lu, key, %s",  buf,  0x34u);
          if (SHIBYTE(v50) < 0) {
            operator delete(*(void **)__p);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934A70 != -1) {
            dispatch_once(&qword_101934A70, &stru_101883660);
          }
          uint64_t v16 = qword_101934A78;
          uint64_t v17 = (void *)(a1 + 8);
          double v18 = *(double *)(v5 + 32);
          uint64_t v19 = *(void *)(a1 + 72);
          uint64_t v20 = *(void *)(a1 + 32);
          (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(*(void *)a1 + 56LL))(v45, a1, v5 + 40);
          int v21 = v45;
          if (v46 < 0) {
            int v21 = (void **)v45[0];
          }
          *(_DWORD *)std::stringbuf::string_type __p = v41;
          *(void *)&__p[4] = v17;
          __int16 v48 = 2048;
          double v49 = Current - v18;
          __int16 v50 = 2048;
          uint64_t v51 = v19;
          __int16 v52 = 2048;
          uint64_t v53 = v20;
          __int16 v54 = 2080;
          BOOL v55 = v21;
          LODWORD(v4sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 52;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v16,  2LL,  "CACHE: name, %s, evict, aged, age, %.1lf, size, %lu, %lu, key, %s",  __p,  v40,  (void)v41,  *((void *)&v41 + 1),  v42);
          unint64_t v23 = v22;
          if (v46 < 0) {
            operator delete(v45[0]);
          }
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLEntryCache<std::string, CLDaemonLocation>::evict() [Key_T = std::string, DataEntry_T = CLDaemonLocation]",  "%s\n",  v23);
        }

        sub_100588FC8((uint64_t **)(a1 + 56), (const void **)(v5 + 40));
        sub_10052A090(v44, v5);
        uint64_t v5 = (uint64_t)v8;
      }

      while (v8 != (void *)(a1 + 88));
    }

    unint64_t v24 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 16LL))(a1);
    id result = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 24LL))(a1);
    if (v24 > (unint64_t)result)
    {
      int v25 = *v44;
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101883660);
      }
      unint64_t v26 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        __int16 v27 = (void *)(a1 + 8);
        double v28 = *((double *)v25 + 4);
        uint64_t v29 = *(void *)(a1 + 72);
        uint64_t v30 = *(void *)(a1 + 32);
        (*(void (**)(_BYTE *__return_ptr, uint64_t, uint64_t *))(*(void *)a1 + 56LL))(__p, a1, v25 + 5);
        if (v50 >= 0) {
          int v31 = __p;
        }
        else {
          int v31 = *(_BYTE **)__p;
        }
        *(_DWORD *)std::stringbuf::string_type buf = 136316162;
        BOOL v57 = v27;
        __int16 v58 = 2048;
        double v59 = Current - v28;
        __int16 v60 = 2048;
        uint64_t v61 = v29;
        __int16 v62 = 2048;
        uint64_t v63 = v30;
        __int16 v64 = 2080;
        char v65 = v31;
        _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEBUG,  "CACHE: name, %s, evict, size, age, %.1lf, size, %lu, %lu, key, %s",  buf,  0x34u);
        if (SHIBYTE(v50) < 0) {
          operator delete(*(void **)__p);
        }
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101883660);
        }
        int v32 = (void *)(a1 + 8);
        uint64_t v33 = qword_101934A78;
        double v34 = *((double *)v25 + 4);
        uint64_t v35 = *(void *)(a1 + 72);
        uint64_t v36 = *(void *)(a1 + 32);
        (*(void (**)(void **__return_ptr, uint64_t, uint64_t *))(*(void *)a1 + 56LL))(v45, a1, v25 + 5);
        if (v46 >= 0) {
          unint64_t v37 = v45;
        }
        else {
          unint64_t v37 = (void **)v45[0];
        }
        *(_DWORD *)std::stringbuf::string_type __p = 136316162;
        *(void *)&__p[4] = v32;
        __int16 v48 = 2048;
        double v49 = Current - v34;
        __int16 v50 = 2048;
        uint64_t v51 = v35;
        __int16 v52 = 2048;
        uint64_t v53 = v36;
        __int16 v54 = 2080;
        BOOL v55 = v37;
        LODWORD(v4sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 52;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v33,  2LL,  "CACHE: name, %s, evict, size, age, %.1lf, size, %lu, %lu, key, %s",  __p,  v40,  (void)v41,  *((void *)&v41 + 1),  v42);
        int v39 = v38;
        if (v46 < 0) {
          operator delete(v45[0]);
        }
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLEntryCache<std::string, CLDaemonLocation>::evict() [Key_T = std::string, DataEntry_T = CLDaemonLocation]",  "%s\n",  v39);
      }

      sub_100588FC8((uint64_t **)(a1 + 56), (const void **)v25 + 5);
      return sub_10052A090(v44, (uint64_t)v25);
    }
  }

  return result;
}

CLCppContainer *sub_100DD1934(uint64_t a1)
{
  uint64_t v2 = operator new(0x58uLL);
  sub_1009710A8((uint64_t)v2, a1);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_100DD1F84;
  _OWORD v4[3] = &unk_10181D3D0;
  v4[4] = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:",  v2,  v4,  0LL,  88LL);
}

void sub_100DD19B8(_Unwind_Exception *a1)
{
}

void sub_100DD19CC(void *a1, int *a2, void *a3)
{
  if (!*((_BYTE *)a1 + 108))
  {
    uint64_t v5 = a1 + 8;
    uint64_t v4 = a1[8];
    if (v4)
    {
      int v8 = *a2;
      BOOL v9 = a1 + 8;
      do
      {
        int v10 = *(_DWORD *)(v4 + 32);
        BOOL v11 = v10 < v8;
        if (v10 >= v8) {
          double v12 = (uint64_t *)v4;
        }
        else {
          double v12 = (uint64_t *)(v4 + 8);
        }
        if (!v11) {
          BOOL v9 = (void *)v4;
        }
        uint64_t v4 = *v12;
      }

      while (*v12);
      if (v9 != v5 && v8 >= *((_DWORD *)v9 + 8))
      {
        uint64_t v51 = v9;
        id v13 = sub_100DD1FE4(a3);
        (*(void (**)(void *, int *, id, void *))(*a1 + 184LL))(a1, a2, v13, v9 + 10);
        uint64_t v14 = (void *)v9[5];
        if (v14 != v9 + 6)
        {
          int v15 = a1 + 11;
          uint64_t v16 = a1 + 1;
          do
          {
            uint64_t v17 = *v15;
            if (!*v15) {
              goto LABEL_25;
            }
            int v18 = *((_DWORD *)v14 + 7);
            uint64_t v19 = a1 + 11;
            do
            {
              int v20 = *(_DWORD *)(v17 + 32);
              BOOL v21 = v20 < v18;
              if (v20 >= v18) {
                int v22 = (uint64_t *)v17;
              }
              else {
                int v22 = (uint64_t *)(v17 + 8);
              }
              if (!v21) {
                uint64_t v19 = (uint64_t *)v17;
              }
              uint64_t v17 = *v22;
            }

            while (*v22);
            if (v19 != v15 && (int v23 = *((_DWORD *)v19 + 8), v18 >= v23))
            {
              __int16 v50 = v19;
              sub_100DD1DA4(a1, (uint64_t)&v50, (uint64_t)&v51, a3);
              uint64_t v27 = a1[8];
              if (!v27) {
                return;
              }
              int v28 = *a2;
              uint64_t v29 = v5;
              do
              {
                int v30 = *(_DWORD *)(v27 + 32);
                BOOL v31 = v30 < v28;
                if (v30 >= v28) {
                  int v32 = (uint64_t *)v27;
                }
                else {
                  int v32 = (uint64_t *)(v27 + 8);
                }
                if (!v31) {
                  uint64_t v29 = (void *)v27;
                }
                uint64_t v27 = *v32;
              }

              while (*v32);
              if (v29 == v5 || v28 < *((_DWORD *)v29 + 8)) {
                return;
              }
              uint64_t v51 = v29;
              uint64_t v34 = v29[6];
              uint64_t v14 = v29 + 6;
              uint64_t v33 = v34;
              if (v34)
              {
                uint64_t v35 = v14;
                uint64_t v36 = v33;
                do
                {
                  int v37 = *(_DWORD *)(v36 + 28);
                  BOOL v38 = v37 < v23;
                  if (v37 >= v23) {
                    int v39 = (uint64_t *)v36;
                  }
                  else {
                    int v39 = (uint64_t *)(v36 + 8);
                  }
                  if (!v38) {
                    uint64_t v35 = (void *)v36;
                  }
                  uint64_t v36 = *v39;
                }

                while (*v39);
                if (v35 == v14 || v23 < *((_DWORD *)v35 + 7))
                {
                  do
                  {
                    int v40 = *(_DWORD *)(v33 + 28);
                    BOOL v41 = v23 < v40;
                    if (v23 >= v40) {
                      uint64_t v42 = (uint64_t *)(v33 + 8);
                    }
                    else {
                      uint64_t v42 = (uint64_t *)v33;
                    }
                    if (v41) {
                      uint64_t v14 = (void *)v33;
                    }
                    uint64_t v33 = *v42;
                  }

                  while (*v42);
                }

                else
                {
                  __int16 v43 = (void *)v35[1];
                  if (v43)
                  {
                    do
                    {
                      uint64_t v14 = v43;
                      __int16 v43 = (void *)*v43;
                    }

                    while (v43);
                  }

                  else
                  {
                    do
                    {
                      uint64_t v14 = (void *)v35[2];
                      BOOL v44 = *v14 == (void)v35;
                      uint64_t v35 = v14;
                    }

                    while (!v44);
                  }
                }
              }
            }

            else
            {
LABEL_25:
              __int16 v50 = a1 + 11;
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101883620);
              }
              unint64_t v24 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                int v25 = a1 + 1;
                int v26 = *((_DWORD *)v14 + 7);
                *(_DWORD *)std::stringbuf::string_type buf = 136446466;
                BOOL v57 = v25;
                __int16 v58 = 1026;
                int v59 = v26;
                _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_FAULT,  "%{public}s; unknown client %{public}d",
                  buf,
                  0x12u);
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(buf, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_101883620);
                }
                BOOL v45 = a1 + 1;
                int v46 = *((_DWORD *)v14 + 7);
                int v52 = 136446466;
                uint64_t v53 = v45;
                __int16 v54 = 1026;
                int v55 = v46;
                LODWORD(v49) = 18;
                _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; unknown client %{public}d",
                  &v52,
                  v49);
                __int16 v48 = (uint8_t *)v47;
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLNotifier<CLCellTilesManager_Type::Notification, CLCellTilesManager_Type::NotificationData, char , char>::invokeClientsWithData(const Notification_T &, CLCppContainer *) [Notification_T = CLCellTiles Manager_Type::Notification, NotificationData_T = CLCellTilesManager_Type::NotificationData, Notificati onInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v47);
                if (v48 != buf) {
                  free(v48);
                }
              }
            }
          }

          while (v14 != v51 + 6);
        }
      }
    }
  }

_BYTE *sub_100DD1DA4(_BYTE *result, uint64_t a2, uint64_t a3, void *a4)
{
  if (!result[108])
  {
    uint64_t v7 = result;
    uint64_t v8 = *(unsigned int *)(*(void *)a2 + 32LL);
    LODWORD(v13) = *(_DWORD *)(*(void *)a3 + 32LL);
    id v9 = sub_100DD1FE4(a4);
    uint64_t v10 = *(void *)a3 + 80LL;
    BOOL v11 = (uint64_t **)(*(void *)a3 + 40LL);
    uint64_t v14 = (int *)(*(void *)a2 + 32LL);
    double v12 = sub_1004EF3D4(v11, v14, (uint64_t)&unk_1012CF090, &v14);
    id result = (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t *, id, uint64_t, uint64_t **))(*(void *)v7 + 192LL))( v7,  v8,  &v13,  v9,  v10,  v12 + 4);
    if ((_DWORD)result) {
      return objc_msgSend( *(id *)(*(void *)a2 + 64),  "onNotification:withData:",  *(unsigned int *)(*(void *)a3 + 32),  a4,  v13);
    }
  }

  return result;
}

void *sub_100DD1E80@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = operator new(0x70uLL);
  id result = sub_100DD1ED8(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_100DD1EC4(_Unwind_Exception *a1)
{
}

void *sub_100DD1ED8(void *a1, uint64_t a2)
{
  a1[2] = 0LL;
  *a1 = off_101883818;
  a1[1] = 0LL;
  sub_1009710A8((uint64_t)(a1 + 3), a2);
  return a1;
}

void sub_100DD1F10(_Unwind_Exception *a1)
{
}

void sub_100DD1F24(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_101883818;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100DD1F38(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_101883818;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_100DD1F5C(uint64_t a1)
{
}

void sub_100DD1F84(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1)
  {
    operator delete((void *)v1);
  }

id sub_100DD1FE4(void *a1)
{
  if ((objc_opt_isKindOfClass(a1, v2) & 1) != 0) {
    return sub_100DD2030(a1);
  }
  else {
    return 0LL;
  }
}

id sub_100DD2030(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return [a1 cppObjectPtr];
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101883858);
    }
    __int128 v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x800000010135E777LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101883858);
    }
    LODWORD(v_Block_object_dispose(va, 8) = 134218498;
    HIDWORD(v_Block_object_dispose(va, 8) = (_DWORD)v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101883858);
    }
    uint64_t v6 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x800000010135E777LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101883858);
    }
    LODWORD(v_Block_object_dispose(va, 8) = 134218498;
    HIDWORD(v_Block_object_dispose(va, 8) = (_DWORD)v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  uint64_t v7 = (uint8_t *)v4;
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLCellTilesManager_Type::NotificationData, Callb ack = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:228:46)]",  "%s\n",  v4);
  if (v7 != buf) {
    free(v7);
  }
  return 0LL;
}

void sub_100DD23DC(id a1)
{
  qword_101934478 = (uint64_t)os_log_create("com.apple.locationd.Support", "Support");
}

void sub_100DD2408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v9 = *(double *)a2;
  if (*(char *)(a2 + 31) < 0)
  {
    sub_1010DD48C(&__p, *(void **)(a2 + 8), *(void *)(a2 + 16));
  }

  else
  {
    __int128 __p = *(_OWORD *)(a2 + 8);
    uint64_t v11 = *(void *)(a2 + 24);
  }

  uint64_t v5 = a1 + 80;
  uint64_t v6 = (uint64_t *)(a1 + 88);
  while (1)
  {
    uint64_t v7 = sub_100DD251C(v5, &v9, (uint64_t)&v9);
    if (v8) {
      break;
    }
    double v9 = v9 + -10.0;
  }

  if (v6 == v7)
  {
    sub_10127056C();
    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/Tiles/CLEntryCache.h",  236,  "insertToAgeSet");
    __break(1u);
  }

  else
  {
    *(void *)(a3 + 16sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = v7;
    if (SHIBYTE(v11) < 0) {
      operator delete((void *)__p);
    }
  }

void sub_100DD24FC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_100DD251C(uint64_t a1, double *a2, uint64_t a3)
{
  uint64_t v5 = (uint64_t **)(a1 + 8);
  uint64_t v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    double v6 = *a2;
    while (1)
    {
      while (1)
      {
        uint64_t v7 = (uint64_t **)v4;
        double v8 = *((double *)v4 + 4);
        if (v6 >= v8) {
          break;
        }
        uint64_t v4 = (uint64_t *)*v4;
        uint64_t v5 = v7;
        if (!*v7) {
          goto LABEL_10;
        }
      }

      if (v8 >= v6) {
        break;
      }
      uint64_t v4 = (uint64_t *)v4[1];
      if (!v4)
      {
        uint64_t v5 = v7 + 1;
        goto LABEL_10;
      }
    }
  }

  else
  {
    uint64_t v7 = (uint64_t **)(a1 + 8);
LABEL_10:
    sub_100DD25CC(a1, a3, (uint64_t)&v10);
    sub_1000085FC((uint64_t **)a1, (uint64_t)v7, v5, v10);
    return v10;
  }

  return (uint64_t *)v7;
}

void *sub_100DD25CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  double v6 = operator new(0x40uLL);
  *(void *)(a3 + _Block_object_dispose(va, 8) = v5;
  *(void *)a3 = v6;
  *(_BYTE *)(a3 + 16) = 0;
  v6[4] = *(void *)a2;
  id result = v6 + 5;
  if (*(char *)(a2 + 31) < 0)
  {
    id result = sub_1010DD48C(result, *(void **)(a2 + 8), *(void *)(a2 + 16));
  }

  else
  {
    *(_OWORD *)id result = *(_OWORD *)(a2 + 8);
    result[2] = *(void *)(a2 + 24);
  }

  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_100DD2658(_Unwind_Exception *a1)
{
  *uint64_t v1 = 0LL;
  sub_100528808(v3, v2);
  _Unwind_Resume(a1);
}

uint64_t *sub_100DD2674(uint64_t **a1, uint64_t a2, uint64_t a3, _OWORD **a4)
{
  double v6 = (uint64_t **)sub_10060372C((uint64_t)a1, &v9, a2);
  id result = *v6;
  if (!*v6)
  {
    sub_100DD2708((uint64_t)a1, a4, (uint64_t)&v8);
    sub_1000085FC(a1, v9, v6, v8);
    return v8;
  }

  return result;
}

_BYTE *sub_100DD2708@<X0>(uint64_t a1@<X0>, _OWORD **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  double v6 = (char *)operator new(0x58uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + _Block_object_dispose(va, 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  uint64_t v7 = *a2;
  uint64_t v8 = *((void *)*a2 + 2);
  *((_OWORD *)v6 + 2) = **a2;
  *((void *)v6 + 6) = v8;
  id result = v6 + 56;
  if (*((char *)v7 + 47) < 0)
  {
    id result = sub_1010DD48C(result, *((void **)v7 + 3), *((void *)v7 + 4));
  }

  else
  {
    __int128 v10 = *(_OWORD *)((char *)v7 + 24);
    *((void *)v6 + 9) = *((void *)v7 + 5);
    *(_OWORD *)id result = v10;
  }

  *((void *)v6 + 1sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0LL;
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_100DD27A0(_Unwind_Exception *a1)
{
  *uint64_t v1 = 0LL;
  sub_10060386C(v3, v2);
  _Unwind_Resume(a1);
}

uint64_t *sub_100DD27BC(uint64_t **a1, const void **a2, uint64_t a3, __int128 **a4)
{
  double v6 = (uint64_t **)sub_1000227E8((uint64_t)a1, &v9, a2);
  id result = *v6;
  if (!*v6)
  {
    sub_100DD2850((uint64_t)a1, a4, (uint64_t)&v8);
    sub_1000085FC(a1, v9, v6, v8);
    return v8;
  }

  return result;
}

char *sub_100DD2850@<X0>(uint64_t a1@<X0>, __int128 **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  double v6 = (char *)operator new(0xE0uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + _Block_object_dispose(va, 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  id result = sub_100DD28D0(v6 + 32, *a2);
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_100DD28B4(_Unwind_Exception *a1)
{
  *uint64_t v1 = 0LL;
  sub_100022988(v3, v2);
  _Unwind_Resume(a1);
}

char *sub_100DD28D0(char *__dst, __int128 *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1010DD48C(__dst, *(void **)a2, *((void *)a2 + 1));
  }

  else
  {
    __int128 v3 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)std::string __dst = v3;
  }

  *((_DWORD *)__dst + 6) = 0xFFFF;
  *(void *)(__dst + 36) = 0LL;
  *(void *)(__dst + 2_Block_object_dispose(va, 8) = 0LL;
  *(_OWORD *)(__dst + 44) = xmmword_1012E0070;
  __asm { FMOV            V0.2D, #-1.0 }

  *(_OWORD *)(__dst + 6sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = _Q0;
  *(_OWORD *)(__dst + 76) = _Q0;
  *(_OWORD *)(__dst + 92) = _Q0;
  *((_DWORD *)__dst + 27) = 0;
  *((void *)__dst + 15) = 0LL;
  *((void *)__dst + 16) = 0LL;
  *((void *)__dst + 14) = 0xBFF0000000000000LL;
  *((_DWORD *)__dst + 34) = 0;
  *(void *)(__dst + 14sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0xBFF0000000000000LL;
  *((_DWORD *)__dst + 37) = 0x7FFFFFFF;
  *((void *)__dst + 2sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0LL;
  *((void *)__dst + 21) = 0LL;
  *((void *)__dst + 19) = 0LL;
  __dst[176] = 0;
  *((void *)__dst + 23) = 0LL;
  return __dst;
}

uint64_t sub_100DD2978(uint64_t a1)
{
  *(void *)a1 = off_101883888;
  id v2 = (id *)(a1 + 8);
  [*(id *)(a1 + 16) forget:*(void *)(a1 + 8)];

  [*v2 invalidate];
  id *v2 = 0LL;
  *(void *)(a1 + 16) = 0LL;
  return a1;
}

CLCppContainer *sub_100DD29D8(uint64_t a1)
{
  id v2 = operator new(0x58uLL);
  sub_1009710A8((uint64_t)v2, a1);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_100DD2A70;
  _OWORD v4[3] = &unk_10181D3D0;
  v4[4] = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:",  v2,  v4,  0LL,  88LL);
}

void sub_100DD2A5C(_Unwind_Exception *a1)
{
}

void sub_100DD2A70(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1)
  {
    operator delete((void *)v1);
  }

void sub_100DD2AD0()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936068);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936068))
    {
      qword_101936050 = 0LL;
      *(void *)algn_101936058 = 0LL;
      qword_101936060 = 0LL;
      __cxa_atexit((void (*)(void *))sub_1001BA3E4, &qword_101936050, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936068);
    }
  }

void sub_100DD2B34()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936118);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936118))
    {
      std::__shared_mutex_base::__shared_mutex_base(&stru_101936070);
      __cxa_atexit((void (*)(void *))sub_1001BA414, &stru_101936070, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936118);
    }
  }

void sub_100DD2BA8(_Unwind_Exception *a1)
{
}

uint64_t sub_100DD2BC0()
{
  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_10199E978, (void *)&_mh_execute_header);
}

uint64_t sub_100DD2C04(uint64_t a1, void *a2)
{
  __int128 v3 = sub_100C079E8(a1, a2);
  *__int128 v3 = off_1018838B0;
  *((_OWORD *)v3 + 7) = 0u;
  uint64_t v4 = v3 + 14;
  *((_OWORD *)v3 + _Block_object_dispose(va, 8) = 0u;
  sub_100C67E34((uint64_t)(v3 + 18));
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101883998);
  }
  uint64_t v5 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "PAUSE: Constructing CLAutopauseProviderConcrete",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101883998);
    }
    v20[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "PAUSE: Constructing CLAutopauseProviderConcrete",  v20,  2);
    int v18 = (uint8_t *)v17;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLAutopauseProviderConcrete::CLAutopauseProviderConcrete(id<CLIntersiloUniverse>)",  "%s\n",  v17);
    if (v18 != buf) {
      free(v18);
    }
  }

  sub_10043AC3C((uint64_t)sub_100DD2F80, a1, *(void **)(a1 + 32), buf);
  uint64_t v6 = *(void *)buf;
  *(void *)std::stringbuf::string_type buf = 0LL;
  uint64_t v7 = *(void *)(a1 + 120);
  *(void *)(a1 + 12sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = v6;
  if (v7)
  {
    (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
    uint64_t v8 = *(void *)buf;
    *(void *)std::stringbuf::string_type buf = 0LL;
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
    }
  }

  sub_10036B3B4((uint64_t)sub_100DD3158, a1, *(void **)(a1 + 32), buf);
  uint64_t v9 = *(void *)buf;
  *(void *)std::stringbuf::string_type buf = 0LL;
  uint64_t v10 = *v4;
  *uint64_t v4 = v9;
  if (v10)
  {
    (*(void (**)(uint64_t))(*(void *)v10 + 8LL))(v10);
    uint64_t v11 = *(void *)buf;
    *(void *)std::stringbuf::string_type buf = 0LL;
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8LL))(v11);
    }
  }

  sub_1003CC884((uint64_t)sub_100DD3330, a1, *(void **)(a1 + 32), buf);
  uint64_t v12 = *(void *)buf;
  *(void *)std::stringbuf::string_type buf = 0LL;
  uint64_t v13 = *(void *)(a1 + 128);
  *(void *)(a1 + 12_Block_object_dispose(va, 8) = v12;
  if (v13)
  {
    (*(void (**)(uint64_t))(*(void *)v13 + 8LL))(v13);
    uint64_t v14 = *(void *)buf;
    *(void *)std::stringbuf::string_type buf = 0LL;
    if (v14) {
      (*(void (**)(uint64_t))(*(void *)v14 + 8LL))(v14);
    }
  }

  id v15 = [*(id *)(a1 + 40) newTimer];
  *(void *)(a1 + 136) = v15;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472LL;
  v19[2] = sub_100DD3500;
  void v19[3] = &unk_10181D3D0;
  v19[4] = a1;
  [v15 setHandler:v19];
  return a1;
}

void sub_100DD2F00(_Unwind_Exception *a1)
{
  uint64_t v5 = *(void *)(v1 + 128);
  *(void *)(v1 + 12_Block_object_dispose(va, 8) = 0LL;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
  }
  uint64_t v6 = *(void *)(v1 + 120);
  *(void *)(v1 + 12sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0LL;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
  }
  uint64_t v7 = *v3;
  *__int128 v3 = 0LL;
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
  }
  sub_100C07AB0(v1);
  _Unwind_Resume(a1);
}

void sub_100DD2F80(uint64_t a1, _DWORD *a2, uint64_t a3, id *a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_1018839B8);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLAutopauseProviderConcrete::onLocationNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_1018839B8);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      id v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLAutopauseProviderConcrete::onLocationNotification, event:%{public, location:escap e_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100DD3C1C(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100DD3138( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DD3158(uint64_t a1, int *a2, _DWORD *a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_1018839B8);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLAutopauseProviderConcrete::onMotionNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_1018839B8);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      id v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLAutopauseProviderConcrete::onMotionNotification, event:%{public, location:escape_ only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100DD412C(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100DD3310( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DD3330(uint64_t a1, _DWORD *a2, uint64_t a3, id *a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_1018839B8);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v10 = 1;
    uint64_t v7 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLAutopauseProviderConcrete::onStatusNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v7, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_1018839B8);
    }
    uint64_t v8 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v12 = 0;
      __int16 v13 = 2082;
      __int16 v14 = "";
      __int16 v15 = 2082;
      __int16 v16 = "activity";
      __int16 v17 = 2050;
      __int16 v18 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLAutopauseProviderConcrete::onStatusNotification, event:%{public, location:escape_ only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v10 = 0;
  }

  sub_100DD4408(a4, v6, a2);
  if (v10) {
    os_activity_scope_leave(&state);
  }
}

void sub_100DD34E0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100DD3500(uint64_t a1)
{
  return sub_100DD3508(*(id **)(a1 + 32));
}

uint64_t sub_100DD3508(id *a1)
{
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101883998);
  }
  id v2 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "PAUSE: Autopause provider has no location updates for 15 minutes.",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101883998);
    }
    __int16 v6 = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "PAUSE: Autopause provider has no location updates for 15 minutes.",  &v6,  2);
    uint64_t v5 = (uint8_t *)v4;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLAutopauseProviderConcrete::onLocationTimer()", "%s\n", v4);
    if (v5 != buf) {
      free(v5);
    }
  }

  [a1[17] setNextFireDelay:1.79769313e308];
  __int16 v6 = 257;
  char v7 = 1;
  *(_DWORD *)std::stringbuf::string_type buf = 0;
  return (*((uint64_t (**)(id *, uint8_t *, __int16 *, uint64_t, uint64_t, void))*a1 + 19))( a1,  buf,  &v6,  1LL,  0xFFFFFFFFLL,  0LL);
}

uint64_t sub_100DD36E4(uint64_t a1)
{
  *(void *)a1 = off_1018838B0;
  sub_100DD378C(a1);
  [*(id *)(a1 + 136) invalidate];

  *(void *)(a1 + 136) = 0LL;
  (*(void (**)(uint64_t))(*(void *)a1 + 16LL))(a1);
  sub_100C67E8C((void *)(a1 + 144));
  uint64_t v2 = *(void *)(a1 + 128);
  *(void *)(a1 + 12_Block_object_dispose(va, 8) = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  uint64_t v3 = *(void *)(a1 + 120);
  *(void *)(a1 + 12sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  uint64_t v4 = *(void *)(a1 + 112);
  *(void *)(a1 + 112) = 0LL;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  return sub_100C07AB0(a1);
}

id sub_100DD378C(uint64_t a1)
{
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101883998);
  }
  uint64_t v2 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "PAUSE: Stopping auto-pause monitoring.", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101883998);
    }
    v6[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "PAUSE: Stopping auto-pause monitoring.",  v6,  2);
    uint64_t v5 = (uint8_t *)v4;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLAutopauseProviderConcrete::stopMonitoringPauseState()", "%s\n", v4);
    if (v5 != buf) {
      free(v5);
    }
  }

  [*(id *)(*(void *)(a1 + 120) + 16) unregister:*(void *)(*(void *)(a1 + 120) + 8) forNotification:4];
  [*(id *)(*(void *)(a1 + 112) + 16) unregister:*(void *)(*(void *)(a1 + 112) + 8) forNotification:2];
  [*(id *)(*(void *)(a1 + 128) + 16) unregister:*(void *)(*(void *)(a1 + 128) + 8) forNotification:2];
  [*(id *)(*(void *)(a1 + 128) + 16) unregister:*(void *)(*(void *)(a1 + 128) + 8) forNotification:3];
  *(_DWORD *)std::stringbuf::string_type buf = 0;
  (*(void (**)(uint64_t, uint8_t *))(*(void *)a1 + 120LL))(a1, buf);
  sub_100C67EA4(a1 + 144);
  return [*(id *)(a1 + 136) setNextFireDelay:1.79769313e308];
}

void sub_100DD3990(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100DD36E4(a1);
  operator delete(v1);
}

id sub_100DD39A4(uint64_t a1)
{
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101883998);
  }
  uint64_t v2 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "PAUSE: Starting auto-pause monitoring.", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101883998);
    }
    v6[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "PAUSE: Starting auto-pause monitoring.",  v6,  2);
    uint64_t v5 = (uint8_t *)v4;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLAutopauseProviderConcrete::startMonitoringPauseState()", "%s\n", v4);
    if (v5 != buf) {
      free(v5);
    }
  }

  [*(id *)(*(void *)(a1 + 120) + 16) register:*(void *)(*(void *)(a1 + 120) + 8) forNotification:4 registrationInfo:0];
  [*(id *)(*(void *)(a1 + 112) + 16) register:*(void *)(*(void *)(a1 + 112) + 8) forNotification:2 registrationInfo:0];
  [*(id *)(*(void *)(a1 + 128) + 16) register:*(void *)(*(void *)(a1 + 128) + 8) forNotification:2 registrationInfo:0];
  [*(id *)(*(void *)(a1 + 128) + 16) register:*(void *)(*(void *)(a1 + 128) + 8) forNotification:3 registrationInfo:0];
  return [*(id *)(a1 + 136) setNextFireDelay:900.0];
}

uint64_t sub_100DD3B94(uint64_t a1)
{
  int v3 = 0;
  return 1LL;
}

uint64_t sub_100DD3BD8(uint64_t a1)
{
  int v3 = 0;
  return 1LL;
}

id sub_100DD3C1C(id result, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  if (*a3 == 4)
  {
    uint64_t v5 = (uint64_t)result;
    __int16 v6 = *(int **)(a4 + 800);
    if (v6 && sub_100CBED60(v6))
    {
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101883998);
      }
      char v7 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v8 = sub_100CBED60(*(int **)(a4 + 800));
        *(_DWORD *)std::stringbuf::string_type buf = 134217984;
        uint64_t v17 = v8;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "PAUSE: Batched notification response in auto-pause with %zu locations.",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101883998);
        }
        uint64_t v10 = qword_101934A78;
        uint64_t v11 = sub_100CBED60(*(int **)(a4 + 800));
        int v14 = 134217984;
        uint64_t v15 = v11;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v10,  2LL,  "PAUSE: Batched notification response in auto-pause with %zu locations.",  (size_t)&v14);
        __int16 v13 = (uint8_t *)v12;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLAutopauseProviderConcrete::onLocationNotification(int, const CLLocationProvider_Type::Notification &, c onst CLLocationProvider_Type::NotificationData &)",  "%s\n",  v12);
        if (v13 != buf) {
          free(v13);
        }
      }

      id result = (id)sub_100CBED60(*(int **)(a4 + 800));
      if (result)
      {
        for (unint64_t i = 0LL; i < (unint64_t)result; ++i)
        {
          sub_100CBE5DC(*(void *)(a4 + 800), i, (uint64_t)buf);
          sub_100DD3E70(v5, (uint64_t)buf);
          id result = (id)sub_100CBED60(*(int **)(a4 + 800));
        }
      }
    }

    else
    {
      return sub_100DD3E70(v5, a4);
    }
  }

  return result;
}

id sub_100DD3E70(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 202);
  int v5 = *(unsigned __int8 *)(a1 + 201);
  int v6 = *(unsigned __int8 *)(a1 + 200);
  char v17 = 0;
  sub_100C68AB4(a1 + 144, (_OWORD *)a2, &v17);
  id result = (id)sub_100C67FE8(*(_DWORD *)(a2 + 96));
  if ((_DWORD)result) {
    id result = [*(id *)(a1 + 136) setNextFireDelay:900.0];
  }
  if (v17)
  {
    BOOL v8 = v4 != 0;
    int v9 = *(unsigned __int8 *)(a1 + 202);
    int v10 = *(unsigned __int8 *)(a1 + 201);
    if (v8 == (*(_BYTE *)(a1 + 202) != 0))
    {
      char v13 = (v5 != 0) ^ (v10 != 0);
      int v11 = *(unsigned __int8 *)(a1 + 200);
      if ((v13 & 1) == 0 && (v6 != 0) == (*(_BYTE *)(a1 + 200) != 0)) {
        return result;
      }
    }

    else
    {
      int v11 = *(unsigned __int8 *)(a1 + 200);
    }

    v16[0] = *(_BYTE *)(a1 + 202);
    v16[1] = v10;
    _OWORD v16[2] = v11;
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101883998);
    }
    int v12 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 67109632;
      int v24 = v11;
      __int16 v25 = 1024;
      int v26 = v10;
      __int16 v27 = 1024;
      int v28 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "PAUSE: Pause state changed, notifying - fitness: %d navigation: %d other: %d",  buf,  0x14u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101883998);
      }
      __int16 v19 = 1024;
      int v20 = v10;
      __int16 v21 = 1024;
      int v22 = v9;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "PAUSE: Pause state changed, notifying - fitness: %d navigation: %d other: %d",  &v18,  20,  67109632);
      uint64_t v15 = (uint8_t *)v14;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLAutopauseProviderConcrete::onLocationNotificationHelper(const CLDaemonLocation &)",  "%s\n",  v14);
      if (v15 != buf) {
        free(v15);
      }
    }

    (*(void (**)(uint64_t))(*(void *)a1 + 200LL))(a1);
    *(_DWORD *)std::stringbuf::string_type buf = 0;
    return (id)(*(uint64_t (**)(uint64_t, uint8_t *, _BYTE *, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  buf,  v16,  1LL,  0xFFFFFFFFLL,  0LL);
  }

  return result;
}

void sub_100DD412C(uint64_t a1, uint64_t a2, int *a3, _DWORD *a4)
{
  if (*a3 >= 2)
  {
    if (*a3 == 2)
    {
      uint64_t v9 = a1 + 144;
      *(void *)std::stringbuf::string_type buf = CFAbsoluteTimeGetCurrent();
      sub_100C681B4(v9, (unint64_t *)buf, a4, a4 + 1);
      return;
    }

    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101883998);
    }
    int v10 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
    {
      int v11 = *a3;
      *(_DWORD *)std::stringbuf::string_type buf = 67109120;
      *(_DWORD *)&uint8_t buf[4] = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "#Warning PAUSE: Unknown notification %d",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101883998);
      }
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning PAUSE: Unknown notification %d",  &v13);
      goto LABEL_21;
    }
  }

  else
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101883998);
    }
    int v5 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
    {
      int v6 = *a3;
      *(_DWORD *)std::stringbuf::string_type buf = 67109120;
      *(_DWORD *)&uint8_t buf[4] = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "#Warning PAUSE: unexpected notification %d",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101883998);
      }
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning PAUSE: unexpected notification %d",  &v13);
LABEL_21:
      int v12 = (uint8_t *)v7;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLAutopauseProviderConcrete::onMotionNotification(int, const CLMotionState_Type::Notification &, const CLMo tionState_Type::NotificationData &)",  "%s\n",  v7);
      if (v12 != buf) {
        free(v12);
      }
    }
  }

id *sub_100DD4408(id *result, uint64_t a2, _DWORD *a3)
{
  int v3 = result;
  if (*a3 == 3)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101883998);
    }
    int v6 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "PAUSE: got kNotificationWake.", buf, 2u);
    }

    double v5 = 900.0;
    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101883998);
      }
      v11[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "PAUSE: got kNotificationWake.",  v11,  2);
      int v10 = (uint8_t *)v9;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLAutopauseProviderConcrete::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLD aemonStatus_Type::NotificationData &)",  "%s\n",  v9);
      if (v10 != buf) {
        free(v10);
      }
    }
  }

  else
  {
    if (*a3 != 2) {
      return result;
    }
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101883998);
    }
    int v4 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "PAUSE: got kNotificationSleep.", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101883998);
      }
      v11[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "PAUSE: got kNotificationSleep.",  v11,  2);
      BOOL v8 = (uint8_t *)v7;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLAutopauseProviderConcrete::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLD aemonStatus_Type::NotificationData &)",  "%s\n",  v7);
      if (v8 != buf) {
        free(v8);
      }
    }

    double v5 = 1.79769313e308;
  }

  return (id *)[v3[17] setNextFireDelay:v5];
}

void sub_100DD4704(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

void sub_100DD4730(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_100DD475C()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936138);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936138))
    {
      uint64_t v2 = 0x7FFFFFFF00000000LL;
      v1[2] = xmmword_10135E7C8;
      v1[3] = unk_10135E7D8;
      v1[4] = xmmword_10135E7E8;
      v1[0] = xmmword_10135E7A8;
      v1[1] = unk_10135E7B8;
      sub_1001BB3C4((uint64_t)&unk_101936120, (int *)v1, 11LL);
      __cxa_atexit((void (*)(void *))sub_1001BA444, &unk_101936120, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936138);
    }
  }

void sub_100DD4830(_Unwind_Exception *a1)
{
}

BOOL sub_100DD49AC(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0LL;
      while (1)
      {
        unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0LL;
          int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }

      *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0LL;
      }
LABEL_13:
      if (v10 || (v6 & 7) == 4) {
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      if ((v6 >> 3) == 2)
      {
        int v12 = &OBJC_IVAR___ALSMeta__productId;
LABEL_21:
        String = (void *)PBReaderReadString(a2);

        *(void *)(a1 + *v12) = String;
        goto LABEL_23;
      }

      if ((PBReaderSkipValueWithTag(a2) & 1) == 0) {
        return 0LL;
      }
LABEL_23:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }

    int v12 = &OBJC_IVAR___ALSMeta__softwareBuild;
    goto LABEL_21;
  }

  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

char *sub_100DD50B4(uint64_t a1, uint64_t a2, void *a3)
{
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  __int128 v12 = 0u;
  id result = (char *)[a3 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (result)
  {
    unint64_t v6 = result;
    uint64_t v7 = *(void *)v10;
    do
    {
      char v8 = 0LL;
      do
      {
        if (*(void *)v10 != v7) {
          objc_enumerationMutation(a3);
        }
        (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
        ++v8;
      }

      while (v6 != v8);
      id result = (char *)[a3 countByEnumeratingWithState:&v9 objects:v13 count:16];
      unint64_t v6 = result;
    }

    while (result);
  }

  return result;
}

void sub_100DD51E0(id a1, NSString *a2, CLFallLogger *a3)
{
}

void sub_100DD5220(id a1, NSString *a2, CLFallLogger *a3)
{
}

id sub_100DD5334(uint64_t a1, uint64_t a2, void *a3)
{
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  void v9[2] = sub_100DD53B8;
  v9[3] = &unk_101883A68;
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 48);
  _OWORD v9[4] = a2;
  v9[5] = v7;
  v9[6] = *(void *)(a1 + 32);
  return [a3 flushInMemoryDataWithCompletionQueue:v6 completionBlock:v9];
}

void sub_100DD53B8(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 32))
  {
    id v4 = objc_msgSend(*(id *)(a1 + 40), "objectForKeyedSubscript:");
    if (a2)
    {
      if (!v4) {
        [*(id *)(a1 + 40) setObject:a2 forKeyedSubscript:*(void *)(a1 + 32)];
      }
    }
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
}

void *sub_100DD545C(void *result)
{
  uint64_t v1 = result[4];
  if (*(_BYTE *)(v1 + 8))
  {
    uint64_t v2 = result;
    __int128 v9 = 0u;
    __int128 v10 = 0u;
    __int128 v7 = 0u;
    __int128 v8 = 0u;
    id v3 = objc_msgSend( *(id *)(v1 + 16),  "objectForKeyedSubscript:",  +[CLFallLoggerManager loggerDataTypeString:]( CLFallLoggerManager,  "loggerDataTypeString:",  *((unsigned __int8 *)result + 48),  0));
    id result = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
    if (result)
    {
      id v4 = result;
      uint64_t v5 = *(void *)v8;
      do
      {
        uint64_t v6 = 0LL;
        do
        {
          if (*(void *)v8 != v5) {
            objc_enumerationMutation(v3);
          }
          [*(id *)(*((void *)&v7 + 1) + 8 * (void)v6) logData:v2[5]];
          uint64_t v6 = (void *)((char *)v6 + 1);
        }

        while (v4 != v6);
        id result = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
        id v4 = result;
      }

      while (result);
    }
  }

  return result;
}

void sub_100DD5DFC(id a1)
{
  qword_1019345D8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Fall");
}

uint64_t sub_100DD5E28()
{
  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_10199E9F8, (void *)&_mh_execute_header);
}

double sub_100DD5E6C(_OWORD *a1)
{
  double result = -1.0;
  *a1 = xmmword_1012E0070;
  a1[1] = xmmword_1012E0070;
  a1[2] = xmmword_1012E0070;
  return result;
}

double sub_100DD5E80(uint64_t a1, uint64_t a2, _BYTE *a3, double *a4)
{
  *a3 = 0;
  *a4 = -1.0;
  double result = *(double *)(a2 + 44);
  if (result >= 0.0)
  {
    unsigned int v5 = *(_DWORD *)(a2 + 96);
    BOOL v6 = v5 > 9;
    int v7 = (1 << v5) & 0x20A;
    if (!v6 && v7 != 0)
    {
      *(double *)(a1 + 32) = result;
      double v9 = *(double *)(a2 + 76);
      *(double *)(a1 + 4sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = v9;
      double result = vabdd_f64(v9, *(double *)(a1 + 24));
      if (result < 1.5)
      {
        *a3 = 1;
        *(_OWORD *)a1 = *(_OWORD *)(a1 + 32);
        double result = *(double *)(a2 + 44);
        *a4 = result;
      }
    }
  }

  return result;
}

double sub_100DD5EF8(uint64_t a1, void *a2, double *a3, _BYTE *a4, void *a5)
{
  *a4 = 0;
  *a5 = 0xBFF0000000000000LL;
  double result = *a3;
  if (*a3 >= 0.0)
  {
    if (*(double *)a2 >= 0.0)
    {
      *(double *)(a1 + 16) = result;
      *(void *)(a1 + sub_100BDC958(v1 + 24) = *a2;
      double result = *(double *)a2;
      double v12 = *(double *)(a1 + 8);
      if (*(double *)a1 >= 0.0 && result < v12)
      {
        double result = -1.0;
        *(_OWORD *)(a1 + 32) = xmmword_1012E0070;
        *(_OWORD *)a1 = xmmword_1012E0070;
      }

      else if (result - v12 >= 0.9)
      {
        double result = result - *(double *)(a1 + 40);
        if (result >= 1.5)
        {
          *a4 = 1;
          *(_OWORD *)a1 = *(_OWORD *)(a1 + 16);
          double result = *(double *)a1;
          *a5 = *(void *)a1;
        }
      }
    }
  }

  else
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101883B58);
    }
    int v7 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = *a2;
      *(_DWORD *)std::stringbuf::string_type buf = 134349056;
      uint64_t v17 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "#Warning,SpeedFilter,%{public}.1lf,unexpected,vehicleSpeed < 0",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101883B58);
      }
      uint64_t v9 = *a2;
      int v14 = 134349056;
      uint64_t v15 = v9;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "#Warning,SpeedFilter,%{public}.1lf,unexpected,vehicleSpeed < 0",  &v14,  12);
      __int128 v11 = (uint8_t *)v10;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLVehicleSpeedFilter::update(const CFAbsoluteTime &, const double &, BOOL &, double &)",  "%s\n",  v10);
      if (v11 != buf) {
        free(v11);
      }
    }
  }

  return result;
}

void sub_100DD6144(id a1)
{
  qword_101934838 = (uint64_t)os_log_create("com.apple.locationd.Position", "Position");
}

void sub_100DD6530(_Unwind_Exception *a1)
{
}

id sub_100DD6544(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return _[a4 onStepCountNotification:a2 data:a3];
}

void sub_100DD6554(uint64_t a1, int *a2, _BYTE *a3, void *a4)
{
  if (*a2 == 5)
  {
    if (!*a3) {
      [a4 setSession:0];
    }
  }

  else
  {
    if (qword_101934510 != -1) {
      dispatch_once(&qword_101934510, &stru_101883B78);
    }
    unsigned int v5 = (os_log_s *)qword_101934518;
    if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_DEFAULT))
    {
      int v6 = *a2;
      *(_DWORD *)std::stringbuf::string_type buf = 67109120;
      int v12 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "#Warning Received unhandled notification, %d",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934510 != -1) {
        dispatch_once(&qword_101934510, &stru_101883B78);
      }
      int v7 = *a2;
      v10[0] = 67109120;
      v10[1] = v7;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934518,  0LL,  "#Warning Received unhandled notification, %d",  v10);
      uint64_t v9 = (uint8_t *)v8;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void onCompanionNotification_bounce(int, const CLCompanionNotifier_Type::Notification &, const CLCompanionNotifi er_Type::NotificationData &, void *)",  "%s\n",  v8);
      if (v9 != buf) {
        free(v9);
      }
    }
  }

id sub_100DD6750(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return [a4 onOdometerNotification:a2 data:a3];
}

id sub_100DD6760(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return [a4 onLocationNotification:a2 data:a3];
}

id sub_100DD6770(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return [a4 onMotionStateMediatorNotification:a2 data:a3];
}

id sub_100DD6780(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return [a4 onMotionStateNotification:a2 data:a3];
}

void sub_100DD71A0(id a1)
{
  qword_101934518 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Pedometer");
}

CLCppContainer *sub_100DD71CC(void *a1)
{
  uint64_t v2 = operator new(8uLL);
  void *v2 = *a1;
  id v4 = _NSConcreteStackBlock;
  uint64_t v5 = 3221225472LL;
  int v6 = sub_100DD724C;
  int v7 = &unk_10181D3D0;
  uint64_t v8 = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:");
}

void sub_100DD724C(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1) {
    operator delete(v1);
  }
}

void sub_100DD725C()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936138);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936138))
    {
      uint64_t v2 = 0x7FFFFFFF00000000LL;
      v1[2] = xmmword_10135E870;
      v1[3] = unk_10135E880;
      v1[4] = xmmword_10135E890;
      v1[0] = xmmword_10135E850;
      v1[1] = unk_10135E860;
      sub_1001BB3C4((uint64_t)&unk_101936120, (int *)v1, 11LL);
      __cxa_atexit((void (*)(void *))sub_1001BA444, &unk_101936120, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936138);
    }
  }

void sub_100DD7330(_Unwind_Exception *a1)
{
}

uint64_t sub_100DD7348()
{
  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_10199EA10, (void *)&_mh_execute_header);
}

void sub_100DD738C(uint64_t a1)
{
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101883B98);
  }
  uint64_t v2 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#CLProactiveLocStats,submitStats()", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101883B98);
    }
    LOWORD(v145) = 0;
    uint64_t v80 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "#CLProactiveLocStats,submitStats()",  &v145,  2);
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLProactiveLocationStats::submitStats() const", "%s\n", v80);
  }

  if (*(double *)(a1 + 48) >= 1.0 && *(_DWORD *)(a1 + 16) && *(_DWORD *)(a1 + 120))
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101883B98);
    }
    id v3 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
    {
      unsigned int v4 = *(double *)(a1 + 112);
      int v5 = *(_DWORD *)(a1 + 120);
      unsigned int v6 = *(double *)(a1 + 48);
      int v7 = *(_DWORD *)(a1 + 16);
      *(_DWORD *)std::stringbuf::string_type buf = 67240960;
      *(_DWORD *)__int128 v159 = v4;
      *(_WORD *)&v159[4] = 1026;
      *(_DWORD *)&v159[6] = v5;
      *(_WORD *)__int16 v160 = 1026;
      *(_DWORD *)&v160[2] = v7;
      *(_WORD *)BOOL v161 = 1026;
      *(_DWORD *)&v161[2] = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "#CLProactiveLoc,CA,Overall,APWakeDur,%{public}d,APWakeCnt,%{public}d,sessCnt,%{public}d,gnssSec,%{public}d",  buf,  0x1Au);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101883B98);
      }
      unsigned int v85 = *(double *)(a1 + 112);
      int v86 = *(_DWORD *)(a1 + 120);
      unsigned int v87 = *(double *)(a1 + 48);
      int v88 = *(_DWORD *)(a1 + 16);
      int v145 = 67240960;
      *(_DWORD *)int v146 = v85;
      *(_WORD *)&v146[4] = 1026;
      *(_DWORD *)&v146[6] = v86;
      *(_WORD *)std::stringbuf::string_type v147 = 1026;
      *(_DWORD *)&v147[2] = v88;
      *(_WORD *)unsigned int v148 = 1026;
      *(_DWORD *)&v148[2] = v87;
      LODWORD(v103) = 26;
      uint64_t v89 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "#CLProactiveLoc,CA,Overall,APWakeDur,%{public}d,APWakeCnt,%{public}d,sessCnt,%{public}d,gnssSec,%{public}d",  &v145,  v103);
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLProactiveLocationStats::submitStats() const", "%s\n", v89);
    }

    LODWORD(v9) = *(_DWORD *)(a1 + 120);
    LODWORD(v_Block_object_dispose(va, 8) = *(_DWORD *)(a1 + 124);
    *(double *)&uint64_t v10 = (double)v9;
    double v11 = (double)v8 * 100.0 / *(double *)&v10;
    uint64_t v12 = *(void *)(a1 + 128);
    v13.i64[0] = v12;
    v13.i64[1] = HIDWORD(v12);
    float64x2_t v14 = vdivq_f64( vmulq_f64(vcvtq_f64_u64(v13), (float64x2_t)vdupq_n_s64(0x4059000000000000uLL)),  (float64x2_t)vdupq_lane_s64(v10, 0));
    int64x2_t v15 = (int64x2_t)vcvtq_u64_f64(v14);
    LODWORD(v14.f64[0]) = *(_DWORD *)(a1 + 136);
    double v16 = (double)*(unint64_t *)&v14.f64[0] * 100.0 / *(double *)&v10;
    if (qword_101934830 != -1)
    {
      int64x2_t v124 = v15;
      dispatch_once(&qword_101934830, &stru_101883B98);
      int64x2_t v15 = v124;
    }

    int32x2_t v122 = vmovn_s64(v15);
    uint64_t v17 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 67240960;
      *(_DWORD *)__int128 v159 = v11;
      *(_WORD *)&v159[4] = 1026;
      *(_DWORD *)&v159[6] = v122.i32[0];
      *(_WORD *)__int16 v160 = 1026;
      *(_DWORD *)&v160[2] = v122.i32[1];
      *(_WORD *)BOOL v161 = 1026;
      *(_DWORD *)&v161[2] = v16;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "#CLProactiveLoc,CA,AP WakeDuration sec,percentage,[-,10),%{public}d,[10,20),%{public}d,[20,30),%{public}d,[30,+),%{public}d",  buf,  0x1Au);
    }

    unsigned int v111 = v16;
    unsigned int v112 = v11;
    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101883B98);
      }
      int v145 = 67240960;
      *(_DWORD *)int v146 = v11;
      *(_WORD *)&v146[4] = 1026;
      *(_DWORD *)&v146[6] = v122.i32[0];
      *(_WORD *)std::stringbuf::string_type v147 = 1026;
      *(_DWORD *)&v147[2] = v122.i32[1];
      *(_WORD *)unsigned int v148 = 1026;
      *(_DWORD *)&v148[2] = v16;
      LODWORD(v103) = 26;
      int v90 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "#CLProactiveLoc,CA,AP WakeDuration sec,percentage,[-,10),%{public}d,[10,20),%{public}d,[20,30),%{p ublic}d,[30,+),%{public}d",  &v145,  v103);
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLProactiveLocationStats::submitStats() const", "%s\n", v90);
    }

    LODWORD(v1_Block_object_dispose(va, 8) = *(_DWORD *)(a1 + 80);
    float64x2_t v29 = (float64x2_t)vdupq_n_s64(0x4059000000000000uLL);
    LODWORD(v19) = *(_DWORD *)(a1 + 16);
    double v20 = (double)v19;
    double v21 = (double)v18 * 100.0 / v20;
    uint64_t v22 = *(void *)(a1 + 84);
    v23.i64[0] = v22;
    v23.i64[1] = HIDWORD(v22);
    float64x2_t v24 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v20, 0);
    int64x2_t v25 = (int64x2_t)vcvtq_u64_f64(vdivq_f64(vmulq_f64(vcvtq_f64_u64(v23), v29), v24));
    uint64_t v26 = *(void *)(a1 + 92);
    v23.i64[0] = v26;
    v23.i64[1] = HIDWORD(v26);
    float64x2_t v27 = vdivq_f64(vmulq_f64(vcvtq_f64_u64(v23), v29), v24);
    int64x2_t v28 = (int64x2_t)vcvtq_u64_f64(v27);
    LODWORD(v27.f64[0]) = *(_DWORD *)(a1 + 100);
    LODWORD(v29.f64[0]) = *(_DWORD *)(a1 + 104);
    double v30 = (double)*(unint64_t *)&v27.f64[0] * 100.0 / v20;
    double v31 = (double)*(unint64_t *)&v29.f64[0] * 100.0 / v20;
    if (qword_101934830 != -1)
    {
      double v121 = (double)*(unint64_t *)&v29.f64[0] * 100.0 / v20;
      int64x2_t v116 = v28;
      int64x2_t v119 = v25;
      dispatch_once(&qword_101934830, &stru_101883B98);
      int64x2_t v28 = v116;
      int64x2_t v25 = v119;
      double v31 = v121;
    }

    int32x2_t v120 = vmovn_s64(v25);
    int32x2_t v118 = vmovn_s64(v28);
    unsigned int v32 = v31;
    uint64_t v33 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 67241728;
      *(_DWORD *)__int128 v159 = v21;
      *(_WORD *)&v159[4] = 1026;
      *(_DWORD *)&v159[6] = v120.i32[0];
      *(_WORD *)__int16 v160 = 1026;
      *(_DWORD *)&v160[2] = v120.i32[1];
      *(_WORD *)BOOL v161 = 1026;
      *(_DWORD *)&v161[2] = v118.i32[0];
      __int16 v162 = 1026;
      unsigned int v163 = v118.u32[1];
      __int16 v164 = 1026;
      *(_DWORD *)uint64_t v165 = v30;
      *(_WORD *)&v165[4] = 1026;
      *(_DWORD *)&v165[6] = v32;
      _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEFAULT,  "#CLProactiveLoc,CA,Intersession min, percentage,[-,3),%{public}d,[3,5),%{public}d,[5,10),%{public}d,[10,15),%{pu blic}d,[15,20),%{public}d,[20,30),%{public}d,[30,+),%{public}d",  buf,  0x2Cu);
    }

    unsigned int v109 = v32;
    unsigned int v110 = v21;
    unsigned int v108 = v30;
    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101883B98);
      }
      int v145 = 67241728;
      *(_DWORD *)int v146 = v21;
      *(_WORD *)&v146[4] = 1026;
      *(_DWORD *)&v146[6] = v120.i32[0];
      *(_WORD *)std::stringbuf::string_type v147 = 1026;
      *(_DWORD *)&v147[2] = v120.i32[1];
      *(_WORD *)unsigned int v148 = 1026;
      *(_DWORD *)&v148[2] = v118.i32[0];
      __int16 v149 = 1026;
      unsigned int v150 = v118.u32[1];
      __int16 v151 = 1026;
      *(_DWORD *)uint64_t v152 = v30;
      *(_WORD *)&v152[4] = 1026;
      *(_DWORD *)&v152[6] = v32;
      LODWORD(v103) = 44;
      int v91 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "#CLProactiveLoc,CA,Intersession min, percentage,[-,3),%{public}d,[3,5),%{public}d,[5,10),%{public} d,[10,15),%{public}d,[15,20),%{public}d,[20,30),%{public}d,[30,+),%{public}d",  &v145,  v103);
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLProactiveLocationStats::submitStats() const", "%s\n", v91);
    }

    LODWORD(v35) = *(_DWORD *)(a1 + 16);
    LODWORD(v34) = *(_DWORD *)(a1 + 20);
    *(double *)&unint64_t v36 = (double)v34 * 100.0;
    *(double *)&uint64_t v37 = (double)v35;
    double v38 = *(double *)&v36 / (double)v35;
    LODWORD(v36) = *(_DWORD *)(a1 + 32);
    LODWORD(v35) = *(_DWORD *)(a1 + 36);
    double v39 = (double)v36 * 100.0 / *(double *)&v37;
    uint64_t v40 = *(void *)(a1 + 40);
    v41.i64[0] = v40;
    v41.i64[1] = HIDWORD(v40);
    float64x2_t v42 = (float64x2_t)vdupq_lane_s64(v37, 0);
    float64x2_t v43 = vdivq_f64(vmulq_f64(vcvtq_f64_u64(v41), (float64x2_t)vdupq_n_s64(0x4059000000000000uLL)), v42);
    int64x2_t v44 = (int64x2_t)vcvtq_u64_f64(v43);
    LODWORD(v42.f64[0]) = *(_DWORD *)(a1 + 24);
    LODWORD(v43.f64[0]) = *(_DWORD *)(a1 + 28);
    double v45 = (double)*(unint64_t *)&v43.f64[0] * 100.0 / *(double *)&v37;
    double v46 = (double)v35 * 100.0 / *(double *)&v37;
    double v47 = (double)*(unint64_t *)&v42.f64[0] * 100.0 / *(double *)&v37;
    if (qword_101934830 != -1)
    {
      double v117 = v45;
      double v107 = v46;
      double v114 = v47;
      int64x2_t v105 = v44;
      dispatch_once(&qword_101934830, &stru_101883B98);
      int64x2_t v44 = v105;
      double v47 = v114;
      double v46 = v107;
      double v45 = v117;
    }

    unsigned int v48 = v45;
    int32x2_t v115 = vmovn_s64(v44);
    unsigned int v49 = v46;
    unsigned int v50 = v47;
    uint64_t v51 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 67241728;
      *(_DWORD *)__int128 v159 = v38;
      *(_WORD *)&v159[4] = 1026;
      *(_DWORD *)&v159[6] = v39;
      *(_WORD *)__int16 v160 = 1026;
      *(_DWORD *)&v160[2] = v115.i32[1];
      *(_WORD *)BOOL v161 = 1026;
      *(_DWORD *)&v161[2] = v115.i32[0];
      __int16 v162 = 1026;
      unsigned int v163 = v48;
      __int16 v164 = 1026;
      *(_DWORD *)uint64_t v165 = v49;
      *(_WORD *)&v165[4] = 1026;
      *(_DWORD *)&v165[6] = v50;
      _os_log_impl( (void *)&_mh_execute_header,  v51,  OS_LOG_TYPE_DEFAULT,  "#CLProactiveLoc,CA,Session percentage,converged,%{public}d,APSleep,%{public}d,LocSrvDisabled,%{public}d,lpm,%{pu blic}d,timeout,%{public}d,visitEnd,%{public}d,noYield,%{public}d",  buf,  0x2Cu);
    }

    unsigned int v106 = v48;
    unsigned int v104 = v49;
    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101883B98);
      }
      int v145 = 67241728;
      *(_DWORD *)int v146 = v38;
      *(_WORD *)&v146[4] = 1026;
      *(_DWORD *)&v146[6] = v39;
      *(_WORD *)std::stringbuf::string_type v147 = 1026;
      *(_DWORD *)&v147[2] = v115.i32[1];
      *(_WORD *)unsigned int v148 = 1026;
      *(_DWORD *)&v148[2] = v115.i32[0];
      __int16 v149 = 1026;
      unsigned int v150 = v48;
      __int16 v151 = 1026;
      *(_DWORD *)uint64_t v152 = v49;
      *(_WORD *)&v152[4] = 1026;
      *(_DWORD *)&v152[6] = v50;
      LODWORD(v103) = 44;
      uint64_t v92 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "#CLProactiveLoc,CA,Session percentage,converged,%{public}d,APSleep,%{public}d,LocSrvDisabled,%{pub lic}d,lpm,%{public}d,timeout,%{public}d,visitEnd,%{public}d,noYield,%{public}d",  &v145,  v103);
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLProactiveLocationStats::submitStats() const", "%s\n", v92);
    }

    unsigned int v53 = *(_DWORD *)(a1 + 20);
    if (v53)
    {
      LODWORD(v52) = *(_DWORD *)(a1 + 56);
      float64x2_t v54 = (float64x2_t)vdupq_n_s64(0x4059000000000000uLL);
      unsigned int v55 = ((double)v52 * 100.0 / (double)v53);
      __int128 v56 = *(_OWORD *)(a1 + 60);
      v57.i64[0] = v56;
      v57.i64[1] = DWORD1(v56);
      float64x2_t v58 = vcvtq_f64_u64(v57);
      v57.i64[0] = DWORD2(v56);
      v57.i64[1] = HIDWORD(v56);
      float64x2_t v59 = (float64x2_t)vdupq_lane_s64(COERCE__INT64((double)v53), 0);
      int32x4_t v60 = vuzp1q_s32( (int32x4_t)vcvtq_u64_f64(vdivq_f64(vmulq_f64(v58, v54), v59)),  (int32x4_t)vcvtq_u64_f64(vdivq_f64(vmulq_f64(vcvtq_f64_u64(v57), v54), v59)));
      int8x16_t v113 = (int8x16_t)v60;
      v60.i32[0] = *(_DWORD *)(a1 + 76);
      unsigned int v61 = ((double)v60.u64[0] * 100.0 / (double)v53);
    }

    else
    {
      unsigned int v61 = 0;
      unsigned int v55 = 0;
      int8x16_t v113 = 0u;
    }

    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101883B98);
    }
    uint64_t v66 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 67241472;
      *(_DWORD *)__int128 v159 = v55;
      *(_WORD *)&v159[4] = 1026;
      *(_DWORD *)&v159[6] = v113.i32[0];
      *(_WORD *)__int16 v160 = 1026;
      *(_DWORD *)&v160[2] = v113.i32[1];
      *(_WORD *)BOOL v161 = 1026;
      *(_DWORD *)&v161[2] = v113.i32[2];
      __int16 v162 = 1026;
      unsigned int v163 = v113.u32[3];
      __int16 v164 = 1026;
      *(_DWORD *)uint64_t v165 = v61;
      _os_log_impl( (void *)&_mh_execute_header,  v66,  OS_LOG_TYPE_DEFAULT,  "#CLProactiveLoc,CA,Converged session sec, percentage,[-,3),%{public}d,[3,5),%{public}d,[5,8),%{public}d,[8,10),% {public}d,[10,15),%{public}d,[15,+),%{public}d",  buf,  0x26u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101883B98);
      }
      int v145 = 67241472;
      *(_DWORD *)int v146 = v55;
      *(_WORD *)&v146[4] = 1026;
      *(_DWORD *)&v146[6] = v113.i32[0];
      *(_WORD *)std::stringbuf::string_type v147 = 1026;
      *(_DWORD *)&v147[2] = v113.i32[1];
      *(_WORD *)unsigned int v148 = 1026;
      *(_DWORD *)&v148[2] = v113.i32[2];
      __int16 v149 = 1026;
      unsigned int v150 = v113.u32[3];
      __int16 v151 = 1026;
      *(_DWORD *)uint64_t v152 = v61;
      LODWORD(v103) = 38;
      uint64_t v93 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "#CLProactiveLoc,CA,Converged session sec, percentage,[-,3),%{public}d,[3,5),%{public}d,[5,8),%{pub lic}d,[8,10),%{public}d,[10,15),%{public}d,[15,+),%{public}d",  &v145,  v103);
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLProactiveLocationStats::submitStats() const", "%s\n", v93);
    }

    v128[0] = _NSConcreteStackBlock;
    v128[1] = 3221225472LL;
    void v128[2] = sub_100DD8550;
    void v128[3] = &unk_101848B78;
    v128[4] = a1;
    v128[5] = v118;
    unsigned int v129 = v108;
    int32x2_t v130 = v120;
    unsigned int v131 = v110;
    unsigned int v132 = v109;
    int32x2_t v133 = v122;
    unsigned int v134 = v112;
    unsigned int v135 = v111;
    int8x16_t v136 = vextq_s8(v113, v113, 0xCuLL);
    unsigned int v137 = v55;
    unsigned int v138 = v61;
    unsigned int v139 = v38;
    unsigned int v140 = v39;
    int32x2_t v141 = vrev64_s32(v115);
    unsigned int v142 = v106;
    unsigned int v143 = v104;
    unsigned int v144 = v50;
    AnalyticsSendEventLazy(@"com.apple.locationd.position.ProactiveLocation", v128);
    float32x2_t v67 = *(float32x2_t *)(a1 + 160);
    float v68 = *(float *)(a1 + 168);
    float v69 = vaddv_f32(v67) + v68;
    if (v69 <= 0.0)
    {
      unsigned int v70 = 0;
      int32x2_t v123 = 0LL;
    }

    else
    {
      int32x2_t v123 = vmovn_s64((int64x2_t)vcvtq_u64_f64( vdivq_f64( vmulq_f64(vcvtq_f64_f32(v67), (float64x2_t)vdupq_n_s64(0x4059000000000000uLL)),  (float64x2_t)vdupq_lane_s64(COERCE__INT64(v69), 0))));
      unsigned int v70 = (v68 * 100.0 / v69);
    }

    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101883B98);
    }
    std::string::size_type v71 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
    {
      int v72 = *(_DWORD *)(a1 + 140);
      int v73 = *(_DWORD *)(a1 + 144);
      int v74 = *(_DWORD *)(a1 + 148);
      int v75 = *(_DWORD *)(a1 + 152);
      unsigned int v76 = *(_DWORD *)(a1 + 156);
      double v77 = *(float *)(a1 + 160);
      double v78 = *(float *)(a1 + 164);
      double v79 = *(float *)(a1 + 168);
      *(_DWORD *)std::stringbuf::string_type buf = 67242240;
      *(_DWORD *)__int128 v159 = v72;
      *(_WORD *)&v159[4] = 1026;
      *(_DWORD *)&v159[6] = v73;
      *(_WORD *)__int16 v160 = 1026;
      *(_DWORD *)&v160[2] = v74;
      *(_WORD *)BOOL v161 = 1026;
      *(_DWORD *)&v161[2] = v75;
      __int16 v162 = 1026;
      unsigned int v163 = v76;
      __int16 v164 = 2050;
      *(double *)uint64_t v165 = v77;
      *(_WORD *)&v165[8] = 2050;
      double v166 = v78;
      __int16 v167 = 2050;
      double v168 = v79;
      __int16 v169 = 2050;
      double v170 = v69;
      _os_log_impl( (void *)&_mh_execute_header,  v71,  OS_LOG_TYPE_DEFAULT,  "#CLProactiveLoc,CA,PerformanceMetrics,cntVisitExitSuccessfulPredict,%{public}d,cntVisitExitUnSuccessfulPredict,% {public}d,cntVisitExitMissedPredict,%{public}d,maxVisitExitPullInSec,%{public}d,avgVisitExitPullInSec,%{public}d ,APSleepDurationLT2minSec,%{public}0.2f,APSleepDurationGT2minLT5minSec,%{public}0.2f,APSleepDurationGT5minSec,%{ public}0.2f,APSleepDurationTotalSec,%{public}0.2f,",  buf,  0x48u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101883B98);
      }
      int v94 = *(_DWORD *)(a1 + 140);
      int v95 = *(_DWORD *)(a1 + 144);
      int v96 = *(_DWORD *)(a1 + 148);
      int v97 = *(_DWORD *)(a1 + 152);
      unsigned int v98 = *(_DWORD *)(a1 + 156);
      double v99 = *(float *)(a1 + 160);
      double v100 = *(float *)(a1 + 164);
      double v101 = *(float *)(a1 + 168);
      int v145 = 67242240;
      *(_DWORD *)int v146 = v94;
      *(_WORD *)&v146[4] = 1026;
      *(_DWORD *)&v146[6] = v95;
      *(_WORD *)std::stringbuf::string_type v147 = 1026;
      *(_DWORD *)&v147[2] = v96;
      *(_WORD *)unsigned int v148 = 1026;
      *(_DWORD *)&v148[2] = v97;
      __int16 v149 = 1026;
      unsigned int v150 = v98;
      __int16 v151 = 2050;
      *(double *)uint64_t v152 = v99;
      *(_WORD *)&v152[8] = 2050;
      double v153 = v100;
      __int16 v154 = 2050;
      double v155 = v101;
      __int16 v156 = 2050;
      double v157 = v69;
      LODWORD(v103) = 72;
      int v102 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "#CLProactiveLoc,CA,PerformanceMetrics,cntVisitExitSuccessfulPredict,%{public}d,cntVisitExitUnSucc essfulPredict,%{public}d,cntVisitExitMissedPredict,%{public}d,maxVisitExitPullInSec,%{public}d,av gVisitExitPullInSec,%{public}d,APSleepDurationLT2minSec,%{public}0.2f,APSleepDurationGT2minLT5min Sec,%{public}0.2f,APSleepDurationGT5minSec,%{public}0.2f,APSleepDurationTotalSec,%{public}0.2f,",  &v145,  v103);
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLProactiveLocationStats::submitStats() const", "%s\n", v102);
    }

    v125[0] = _NSConcreteStackBlock;
    v125[1] = 3221225472LL;
    _OWORD v125[2] = sub_100DD88E0;
    v125[3] = &unk_101863CA8;
    v125[4] = a1;
    v125[5] = vrev64_s32(v123);
    unsigned int v126 = v70;
    float v127 = v69;
    AnalyticsSendEventLazy(@"com.apple.locationd.position.PerformanceMetricsProactiveLocation", v125);
  }

  else
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101883B98);
    }
    __int16 v62 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v63 = *(void *)(a1 + 48);
      int v64 = *(_DWORD *)(a1 + 16);
      int v65 = *(_DWORD *)(a1 + 120);
      *(_DWORD *)std::stringbuf::string_type buf = 134349568;
      *(void *)__int128 v159 = v63;
      *(_WORD *)&v159[8] = 1026;
      *(_DWORD *)__int16 v160 = v64;
      *(_WORD *)&v160[4] = 1026;
      *(_DWORD *)BOOL v161 = v65;
      _os_log_impl( (void *)&_mh_execute_header,  v62,  OS_LOG_TYPE_DEFAULT,  "#CLProactiveLoc,CA,small or invalid data,CA submit skipped,activeSec,%{public}0.2f,numSess,%{public}d,numApWake,%{public}d",  buf,  0x18u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101883B98);
      }
      uint64_t v81 = *(void *)(a1 + 48);
      int v82 = *(_DWORD *)(a1 + 16);
      int v83 = *(_DWORD *)(a1 + 120);
      int v145 = 134349568;
      *(void *)int v146 = v81;
      *(_WORD *)&v146[8] = 1026;
      *(_DWORD *)std::stringbuf::string_type v147 = v82;
      *(_WORD *)&v147[4] = 1026;
      *(_DWORD *)unsigned int v148 = v83;
      LODWORD(v103) = 24;
      __int128 v84 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "#CLProactiveLoc,CA,small or invalid data,CA submit skipped,activeSec,%{public}0.2f,numSess,%{publi c}d,numApWake,%{public}d",  &v145,  v103);
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLProactiveLocationStats::submitStats() const", "%s\n", v84);
    }
  }

NSDictionary *sub_100DD8550(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  v4[0] = @"DailyAPWakeDurationSeconds";
  v5[0] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(double *)(v2 + 112));
  v4[1] = @"DailyCountAPWakes";
  v5[1] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(v2 + 120));
  v4[2] = @"DailyCountGNSSSessions";
  _DWORD v5[2] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(v2 + 16));
  _OWORD v4[3] = @"DailyGNSSLocationReqActiveSec";
  _OWORD v5[3] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(double *)(v2 + 48));
  v4[4] = @"PercentageIntersessionTime10to15min";
  v5[4] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 40));
  void v4[5] = @"PercentageIntersessionTime15to20min";
  v5[5] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 44));
  v4[6] = @"PercentageIntersessionTime20to30min";
  void v5[6] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 48));
  v4[7] = @"PercentageIntersessionTime3To5min";
  void v5[7] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 52));
  _WORD v4[8] = @"PercentageIntersessionTime5to10min";
  _WORD v5[8] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 56));
  v4[9] = @"PercentageIntersessionTimeLessThan3min";
  v5[9] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 60));
  v4[10] = @"PercentageIntersessionTimeMoreThan30min";
  v5[10] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 64));
  v4[11] = @"PercentAPWakeDuration10To20Sec";
  v5[11] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 68));
  v4[12] = @"PercentAPWakeDuration20To30Sec";
  v5[12] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 72));
  v4[13] = @"PercentAPWakeDurationLessThan10Sec";
  v5[13] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 76));
  v4[14] = @"PercentAPWakeDurationMoreThan30Sec";
  v5[14] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 80));
  v4[15] = @"PercentConvergedGNSSSessionDuration10To15Sec";
  v5[15] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 84));
  v4[16] = @"PercentConvergedGNSSSessionDuration3To5Sec";
  v5[16] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 88));
  v4[17] = @"PercentConvergedGNSSSessionDuration5To8Sec";
  v5[17] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 92));
  v4[18] = @"PercentConvergedGNSSSessionDuration8To10Sec";
  v5[18] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 96));
  v4[19] = @"PercentConvergedGNSSSessionDurationLessThan3Sec";
  v5[19] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 100));
  v4[20] = @"PercentConvergedGNSSSessionDurationMoreThan15Sec";
  v5[20] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 104));
  v4[21] = @"PercentGNSSSessionConverged";
  v5[21] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 108));
  v4[22] = @"PercentGNSSSessionIncompleteAPSleep";
  v5[22] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 112));
  v4[23] = @"PercentGNSSSessionIncompleteLocSrvcDisabled";
  v5[23] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 116));
  _BYTE v4[24] = @"PercentGNSSSessionIncompleteLowPowerMode";
  v5[24] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 120));
  v4[25] = @"PercentGNSSSessionIncompleteTimeout";
  v5[25] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 124));
  v4[26] = @"PercentGNSSSessionIncompleteVisitEnd";
  v5[26] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 128));
  v4[27] = @"PercentGNSSSessionNoYield";
  v5[27] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 132));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v5,  v4,  28LL);
}

NSDictionary *sub_100DD88E0(uint64_t a1)
{
  uint64_t v2 = *(unsigned int **)(a1 + 32);
  v4[0] = @"DailyEarlyVisitExitPredictionAverage";
  v5[0] = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v2[39]);
  v4[1] = @"DailyEarlyVisitExitPredictionMax";
  v5[1] = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v2[38]);
  v4[2] = @"DailyMissedVisitExitPredictionCount";
  _DWORD v5[2] = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v2[37]);
  _OWORD v4[3] = @"DailyPercentAPSleep2To5min";
  _OWORD v5[3] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 40));
  v4[4] = @"DailyPercentAPSleepLessThan2min";
  v5[4] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 44));
  void v4[5] = @"DailyPercentAPSleepMoreThan5min";
  v5[5] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 48));
  v4[6] = @"DailySuccessfulVisitExitPredictionCount";
  void v5[6] = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v2[35]);
  v4[7] = @"DailyTotalAPSleepDurationSec";
  void v5[7] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(float *)(a1 + 52));
  _WORD v4[8] = @"DailyUnsuccessfulVisitExitPredictionCount";
  _WORD v5[8] = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v2[36]);
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v5,  v4,  9LL);
}

void sub_100DD8A58(id a1)
{
  qword_101934838 = (uint64_t)os_log_create("com.apple.locationd.Position", "Position");
}

const char *sub_100DD8CC8(unsigned int a1)
{
  if (a1 > 0xC) {
    return "?";
  }
  else {
    return (&off_101883BB8)[a1];
  }
}

int8x8_t sub_100DD8CEC(unsigned __int16 *a1, uint64_t a2)
{
  *(_WORD *)(a2 + 2) = bswap32(a1[1]) >> 16;
  *(_WORD *)a2 = bswap32(*a1) >> 16;
  int8x8_t result = vrev32_s8(*(int8x8_t *)(a1 + 2));
  *(int8x8_t *)(a2 + 4) = result;
  return result;
}

int8x16_t sub_100DD8D1C(unsigned __int16 *a1, uint64_t a2)
{
  __int128 v2 = *(_OWORD *)a1;
  __int128 v3 = *((_OWORD *)a1 + 1);
  __int128 v4 = *((_OWORD *)a1 + 3);
  *(_OWORD *)(a2 + 32) = *((_OWORD *)a1 + 2);
  *(_OWORD *)(a2 + 4_Block_object_dispose(va, 8) = v4;
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  __int128 v5 = *((_OWORD *)a1 + 4);
  __int128 v6 = *((_OWORD *)a1 + 5);
  __int128 v7 = *((_OWORD *)a1 + 7);
  *(_OWORD *)(a2 + 96) = *((_OWORD *)a1 + 6);
  *(_OWORD *)(a2 + 112) = v7;
  *(_OWORD *)(a2 + 64) = v5;
  *(_OWORD *)(a2 + 8sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = v6;
  __int128 v8 = *((_OWORD *)a1 + 8);
  __int128 v9 = *((_OWORD *)a1 + 9);
  __int128 v10 = *((_OWORD *)a1 + 10);
  *(_OWORD *)(a2 + 172) = *(_OWORD *)(a1 + 86);
  *(_OWORD *)(a2 + 144) = v9;
  *(_OWORD *)(a2 + 16sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = v10;
  *(_OWORD *)(a2 + 12_Block_object_dispose(va, 8) = v8;
  *(_WORD *)(a2 + 2) = bswap32(a1[1]) >> 16;
  *(_WORD *)a2 = bswap32(*a1) >> 16;
  *(int8x16_t *)(a2 + 2sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = vrev32q_s8(*(int8x16_t *)(a1 + 10));
  int8x16_t result = vrev32q_s8(*(int8x16_t *)(a1 + 2));
  *(int8x16_t *)(a2 + 4) = result;
  unsigned int v12 = bswap32(*((_DWORD *)a1 + 44));
  unint64_t v13 = bswap64(*((void *)a1 + 5));
  *(_DWORD *)(a2 + 36) = bswap32(*((_DWORD *)a1 + 9));
  *(_DWORD *)(a2 + 176) = v12;
  *(void *)(a2 + 4sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = v13;
  return result;
}

uint64_t sub_100DD8DB4(uint64_t a1, uint64_t a2, double a3, double a4)
{
  double v8 = *(double *)(a2 + 76);
  double v9 = *(double *)(a2 + 20);
  double v10 = (*(double (**)(uint64_t))(*(void *)a1 + 56LL))(a1) / 20.0;
  double v11 = fmin(fmax(v10, (*(double (**)(uint64_t))(*(void *)a1 + 64LL))(a1) / 20.0), 0.01);
  double v12 = *(double *)(a2 + 4);
  double v13 = v12 - sub_1008ADB4C(a1 + 48);
  double v14 = *(double *)(a2 + 12);
  double v15 = v14 - sub_1008ADB70(a1 + 48);
  BOOL v16 = v13 >= -v11 && v13 <= v11 + (*(double (**)(uint64_t))(*(void *)a1 + 56LL))(a1);
  double v17 = a4 - v8;
  BOOL v18 = v15 >= -v11 && v15 <= v11 + (*(double (**)(uint64_t))(*(void *)a1 + 64LL))(a1);
  BOOL v19 = v17 < a3 && v9 > 0.0;
  else {
    uint64_t v20 = 0LL;
  }
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101883C20);
  }
  double v21 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    double v22 = *(double *)(a2 + 20);
    (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a1 + 16LL))(&__p, a1);
    int v23 = SBYTE1(v44);
    float64x2_t v24 = (void **)__p;
    (*(void (**)(uint64_t))(*(void *)a1 + 56LL))(a1);
    *(_DWORD *)std::stringbuf::string_type buf = 67242243;
    int v56 = v20;
    p_p = &__p;
    __int16 v57 = 1026;
    if (v23 < 0) {
      p_p = v24;
    }
    BOOL v58 = v16;
    __int16 v59 = 1026;
    BOOL v60 = v18;
    __int16 v61 = 1026;
    BOOL v62 = v19;
    __int16 v63 = 1026;
    BOOL v64 = v9 > 0.0;
    __int16 v65 = 1026;
    BOOL v66 = v17 < a3;
    __int16 v67 = 1026;
    BOOL v68 = v22 <= 3000.0;
    __int16 v69 = 2081;
    unsigned int v70 = p_p;
    __int16 v71 = 2050;
    uint64_t v72 = v25;
    _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEBUG,  "@TileDl, isCurrent, %{public}d, inside, %{public}d, %{public}d, locknown, %{public}d, %{public}d, %{public}d, %{pu blic}d, tile, %{private}s, delta, %{public}.02f",  buf,  0x40u);
    if (SBYTE1(v44) < 0) {
      operator delete(__p);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883C20);
    }
    uint64_t v28 = qword_101934858;
    double v29 = *(double *)(a2 + 20);
    (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a1 + 16LL))(v36, a1);
    int v30 = v37;
    double v31 = (void **)v36[0];
    (*(void (**)(uint64_t))(*(void *)a1 + 56LL))(a1);
    LODWORD(__p) = 67242243;
    HIDWORD(__p) = v20;
    uint64_t v33 = v36;
    __int16 v39 = 1026;
    if (v30 < 0) {
      uint64_t v33 = v31;
    }
    BOOL v40 = v16;
    __int16 v41 = 1026;
    BOOL v42 = v18;
    __int16 v43 = 1026;
    BOOL v44 = v19;
    __int16 v45 = 1026;
    BOOL v46 = v9 > 0.0;
    __int16 v47 = 1026;
    BOOL v48 = v17 < a3;
    __int16 v49 = 1026;
    BOOL v50 = v29 <= 3000.0;
    __int16 v51 = 2081;
    unint64_t v52 = v33;
    __int16 v53 = 2050;
    uint64_t v54 = v32;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v28,  2LL,  "@TileDl, isCurrent, %{public}d, inside, %{public}d, %{public}d, locknown, %{public}d, %{public}d, %{public}d, %{pu blic}d, tile, %{private}s, delta, %{public}.02f",  &__p,  64);
    unint64_t v35 = v34;
    if (v37 < 0) {
      operator delete(v36[0]);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLTilesManagerUtility::isCurrentTile(const CLTileFile *, CFTimeInterval, CLDaemonLocation, CFAbsoluteTime)",  "%s\n",  v35);
  }

  return v20;
}

void sub_100DD9210( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, int a20, __int16 a21, char a22, char a23)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_100DD9248(uint64_t a1, double a2)
{
  return a2 - *(double *)(a1 + 76) <= 1800.0 && *(double *)(a1 + 20) > 0.0;
}

uint64_t sub_100DD9270(int a1, unsigned int a2)
{
  if (a1) {
    return 1LL;
  }
  else {
    return a2;
  }
}

uint64_t sub_100DD927C(int a1, unsigned int a2)
{
  if (a1 == 2) {
    return 1LL;
  }
  else {
    return a2;
  }
}

uint64_t sub_100DD9288(unsigned int a1, void *a2)
{
  uint64_t result = sub_100E79F88(a2, a1);
  if (!result)
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883C20);
    }
    __int128 v4 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 67240192;
      unsigned int v12 = a1;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_ERROR,  "TileMgr, invalid tileType, %{public}d, #CloneMe",  buf,  8u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101883C20);
      }
      v10[0] = 67240192;
      v10[1] = a1;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  16LL,  "TileMgr, invalid tileType, %{public}d, #CloneMe",  v10,  8);
      double v9 = (uint8_t *)v8;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "static CLTilesSet &CLTilesManagerUtility::getTilesSet(CLTilesManager_Type::TileType, CLTilesSetCollection *)",  "%s\n",  v8);
      if (v9 != buf) {
        free(v9);
      }
    }

    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101883C40);
    }
    __int128 v5 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289539;
      unsigned int v12 = 0;
      __int16 v13 = 2082;
      double v14 = "";
      __int16 v15 = 2082;
      BOOL v16 = "assert";
      __int16 v17 = 2081;
      BOOL v18 = "false";
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Assertion failed, event:%{public, location:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101883C40);
      }
    }

    __int128 v6 = (os_log_s *)qword_101934838;
    if (os_signpost_enabled((os_log_t)qword_101934838))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289539;
      unsigned int v12 = 0;
      __int16 v13 = 2082;
      double v14 = "";
      __int16 v15 = 2082;
      BOOL v16 = "assert";
      __int16 v17 = 2081;
      BOOL v18 = "false";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v6,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Assertion failed",  "{msg%{public}.0s:Assertion failed, event:%{public, location:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101883C40);
      }
    }

    __int128 v7 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289539;
      unsigned int v12 = 0;
      __int16 v13 = 2082;
      double v14 = "";
      __int16 v15 = 2082;
      BOOL v16 = "assert";
      __int16 v17 = 2081;
      BOOL v18 = "false";
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Assertion failed, event:%{public, location:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/Tiles/CLTilesManagerUtility.mm",  77,  "getTilesSet");
  }

  return result;
}

uint64_t sub_100DD963C(uint64_t a1, double a2)
{
  double v3 = a2;
  return sub_100C14EDC(a1, &v3, (double *)&qword_101991110);
}

void sub_100DD9668(int a1@<W0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = 0LL;
  switch(a1)
  {
    case 0:
      double v8 = operator new(0x268uLL);
      sub_100C4A684(v8, a2);
      goto LABEL_13;
    case 1:
      double v8 = operator new(0x148uLL);
      sub_100CCE43C((uint64_t)v8, a2);
      goto LABEL_13;
    case 2:
      double v8 = operator new(0x148uLL);
      sub_1009D5434((uint64_t)v8, a2);
      goto LABEL_13;
    case 3:
      double v8 = operator new(0x190uLL);
      sub_100E677D0((uint64_t)v8, a2);
      goto LABEL_13;
    case 4:
      double v8 = operator new(0x190uLL);
      sub_100E679A8((uint64_t)v8, a2);
      goto LABEL_13;
    case 5:
      double v8 = operator new(0x190uLL);
      sub_100E678BC((uint64_t)v8, a2);
      goto LABEL_13;
    case 6:
    case 7:
    case 8:
      __int128 v7 = operator new(0x190uLL);
      sub_101016AB8((uint64_t)v7, a1, a2);
      *a3 = v7;
      return;
    case 9:
      double v8 = operator new(0x178uLL);
      sub_10101B9E0((uint64_t)v8, a2);
      goto LABEL_13;
    case 10:
      double v8 = operator new(0x140uLL);
      sub_1004F0910((uint64_t)v8, a2);
      goto LABEL_13;
    case 11:
      double v8 = operator new(0x148uLL);
      sub_100397D74((uint64_t)v8, a2);
      goto LABEL_13;
    case 12:
      double v8 = operator new(0x190uLL);
      sub_101016AB8((uint64_t)v8, 12, a2);
LABEL_13:
      *a3 = v8;
      return;
    case 13:
      sub_101270710();
      abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/Tiles/CLTilesManagerUtility.mm",  193,  "allocateTile");
      __break(1u);
      goto LABEL_24;
    default:
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101883C20);
      }
      p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
      double v9 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 67240192;
        int v15 = a1;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_ERROR,  "TileMgr, failed to allocate a tile for type, %{public}d, #CloneMe",  buf,  8u);
      }

      if (!sub_1002921D0(115, 0)) {
        return;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
LABEL_24:
      }
        dispatch_once(&qword_101934850, &stru_101883C20);
      double v10 = p_vtable[267];
      v13[0] = 67240192;
      v13[1] = a1;
      LODWORD(v12) = 8;
      double v11 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v10,  16LL,  "TileMgr, failed to allocate a tile for type, %{public}d, #CloneMe",  v13,  v12);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "static std::unique_ptr<CLTileFile> CLTilesManagerUtility::allocateTile(CLTilesManager_Type::TileType, CLTileDownloadPolicy *)",  "%s\n",  v11);
      return;
  }

void sub_100DD9984(_Unwind_Exception *exception_object)
{
  *uint64_t v1 = 0LL;
  _Unwind_Resume(exception_object);
}

uint64_t sub_100DD9A44(uint64_t a1)
{
  unsigned __int8 v2 = atomic_load((unsigned __int8 *)&qword_10199EA80);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_10199EA80))
  {
    sub_100C2B9B8("([0-9]{8})", (const void **)&unk_10199EA28, __p);
    sub_100BFA368((std::locale *)&unk_10199EA40, (uint64_t)__p, 0);
    if ((v35[7] & 0x80000000) != 0) {
      operator delete(__p[0]);
    }
    __cxa_atexit((void (*)(void *))sub_100C34E18, &unk_10199EA40, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10199EA80);
  }

  uint64_t v36 = 0LL;
  uint64_t v37 = 0LL;
  char v38 = 0;
  uint64_t v39 = 0LL;
  uint64_t v40 = 0LL;
  char v41 = 0;
  char v42 = 0;
  uint64_t v43 = 0LL;
  *(_OWORD *)__int128 __p = 0u;
  memset(v35, 0, 25);
  uint64_t v3 = *(unsigned __int8 *)(a1 + 23);
  if ((v3 & 0x80u) == 0LL) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = *(void *)a1;
  }
  if ((v3 & 0x80u) != 0LL) {
    uint64_t v3 = *(void *)(a1 + 8);
  }
  if ((sub_100BFFCB0(v4, v4 + v3, (uint64_t)__p, (uint64_t)&unk_10199EA40, 0) & 1) != 0)
  {
    int v5 = 0;
    int v6 = 1;
  }

  else
  {
    __int128 v7 = sub_100C34E40();
    int v8 = *(char *)(a1 + 23);
    BOOL v9 = v8 < 0;
    if (v8 >= 0) {
      uint64_t v10 = a1;
    }
    else {
      uint64_t v10 = *(void *)a1;
    }
    uint64_t v11 = *(unsigned __int8 *)(a1 + 23);
    if (v9) {
      uint64_t v11 = *(void *)(a1 + 8);
    }
    int v12 = *((char *)v7 + 23);
    BOOL v13 = v12 < 0;
    if (v12 >= 0) {
      double v14 = v7;
    }
    else {
      double v14 = (void *)*v7;
    }
    uint64_t v15 = *((unsigned __int8 *)v7 + 23);
    if (v13) {
      uint64_t v15 = v7[1];
    }
    uint64_t v16 = v10 - 1;
    __int16 v17 = (char *)v14 - 1;
    while (v11 && v15)
    {
      int v18 = *(unsigned __int8 *)(v16 + v11);
      int v19 = v17[v15];
      --v11;
      --v15;
      if (v18 != v19) {
        goto LABEL_25;
      }
    }

    if (!v15)
    {
LABEL_42:
      int v6 = 0;
      int v5 = 0;
      goto LABEL_43;
    }

void sub_100DD9C44( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  __cxa_guard_abort(&qword_10199EA80);
  _Unwind_Resume(a1);
}

BOOL sub_100DD9C8C(uint64_t a1, const void **a2)
{
  unsigned __int16 v4 = sub_100DD9A44(a1);
  if (v4 < 0x100u) {
    return v4 != 0;
  }
  else {
    size_t v6 = (size_t)a2[1];
  }
  __int128 v7 = &v15;
  sub_1000392EC((uint64_t)&v15, v6 + 1);
  if ((v15.__r_.__value_.__s.__size_ & 0x80u) != 0) {
    __int128 v7 = (std::string *)v15.__r_.__value_.__r.__words[0];
  }
  if (v6)
  {
    else {
      int v8 = *a2;
    }
    memmove(v7, v8, v6);
  }

  *(_WORD *)((char *)&v7->__r_.__value_.__l.__data_ + v6) = 47;
  int v9 = *(char *)(a1 + 23);
  if (v9 >= 0) {
    uint64_t v10 = (const std::string::value_type *)a1;
  }
  else {
    uint64_t v10 = *(const std::string::value_type **)a1;
  }
  if (v9 >= 0) {
    std::string::size_type v11 = *(unsigned __int8 *)(a1 + 23);
  }
  else {
    std::string::size_type v11 = *(void *)(a1 + 8);
  }
  int v12 = std::string::append(&v15, v10, v11);
  __int128 v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  int64_t cap = v12->__r_.__value_.__l.__cap_;
  *(_OWORD *)__int128 __p = v13;
  v12->__r_.__value_.__l.__size_ = 0LL;
  v12->__r_.__value_.__l.__cap_ = 0LL;
  v12->__r_.__value_.__r.__words[0] = 0LL;
  if (cap >= 0) {
    double v14 = __p;
  }
  else {
    double v14 = (void **)__p[0];
  }
  sub_100296964((const char *)v14);
  if (SHIBYTE(cap) < 0) {
    operator delete(__p[0]);
  }
  return 0LL;
}

void sub_100DD9DAC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DD9DDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v38 = *(_OWORD *)(a1 + 48);
  uint64_t v39 = *(void *)(a1 + 64);
  if (*(char *)(a1 + 95) < 0)
  {
    sub_1010DD48C(&__p, *(void **)(a1 + 72), *(void *)(a1 + 80));
  }

  else
  {
    __int128 __p = *(_OWORD *)(a1 + 72);
    uint64_t v41 = *(void *)(a1 + 88);
  }

  size_t v6 = (uint64_t **)(a2 + 184);
  uint64_t v7 = sub_1006025CC(a2 + 184, (unsigned int *)&v38);
  uint64_t v8 = v7;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 31);
  if ((v9 & 0x80u) == 0LL) {
    uint64_t v10 = *(unsigned __int8 *)(v7 + 31);
  }
  else {
    uint64_t v10 = *(void *)(v7 + 16);
  }
  uint64_t v11 = *(unsigned __int8 *)(a1 + 31);
  int v12 = (char)v11;
  if ((v11 & 0x80u) != 0LL) {
    uint64_t v11 = *(void *)(a1 + 16);
  }
  if (v10 != v11) {
    goto LABEL_20;
  }
  __int128 v13 = (const void **)(v7 + 8);
  uint64_t v16 = *(unsigned __int8 **)(a1 + 8);
  std::string v15 = (unsigned __int8 *)(a1 + 8);
  double v14 = v16;
  if (v12 >= 0) {
    __int16 v17 = v15;
  }
  else {
    __int16 v17 = v14;
  }
  if ((v9 & 0x80) != 0)
  {
    if (memcmp(*v13, v17, *(void *)(v7 + 16)))
    {
LABEL_20:
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101883C20);
      }
      int v18 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_INFO))
      {
        else {
          uint64_t v19 = *(void *)(a2 + 8);
        }
        double v20 = sub_1008ADB4C((uint64_t)&v38);
        double v21 = sub_1008ADB70((uint64_t)&v38);
        uint64_t v22 = sub_100019240(a2 + 184);
        *(_DWORD *)std::stringbuf::string_type buf = 136447235;
        *(void *)&uint8_t buf[4] = v19;
        __int16 v54 = 2049;
        double v55 = v20;
        __int16 v56 = 2049;
        double v57 = v21;
        __int16 v58 = 2082;
        uint64_t v59 = a3;
        __int16 v60 = 2050;
        uint64_t v61 = v22;
        _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_INFO,  "@TileList, %{public}s, duplicate, llsw, %{private}.2lf, %{private}.2lf, %{public}s, size, %{public}lu",  buf,  0x34u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101883C20);
        }
        uint64_t v25 = qword_101934858;
        uint64_t v28 = *(void *)(a2 + 8);
        uint64_t v27 = a2 + 8;
        uint64_t v26 = v28;
        double v29 = sub_1008ADB4C((uint64_t)&v38);
        double v30 = sub_1008ADB70((uint64_t)&v38);
        uint64_t v31 = sub_100019240((uint64_t)v6);
        *(_DWORD *)BOOL v44 = 136447235;
        *(void *)&v44[4] = v27;
        __int16 v45 = 2049;
        double v46 = v29;
        __int16 v47 = 2049;
        double v48 = v30;
        __int16 v49 = 2082;
        uint64_t v50 = a3;
        __int16 v51 = 2050;
        uint64_t v52 = v31;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v25,  1LL,  "@TileList, %{public}s, duplicate, llsw, %{private}.2lf, %{private}.2lf, %{public}s, size, %{public}lu",  v44,  52,  v38,  v39);
        uint64_t v33 = (char *)v32;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLTilesManagerUtility::deleteIfDuplicate(CLTileFile *, CLTilesSet &, const char *)",  "%s\n",  v32);
        if (v33 != buf) {
          free(v33);
        }
      }

      sub_100C0FD9C(v8);
      goto LABEL_38;
    }
  }

  else if (*(_BYTE *)(v7 + 31))
  {
    while (*(unsigned __int8 *)v13 == *v17)
    {
      __int128 v13 = (const void **)((char *)v13 + 1);
      ++v17;
      if (!--v9) {
        goto LABEL_29;
      }
    }

    goto LABEL_20;
  }

void sub_100DDA328( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DDA36C(id a1)
{
  qword_101934858 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

void sub_100DDA398(id a1)
{
  qword_101934838 = (uint64_t)os_log_create("com.apple.locationd.Position", "Position");
}

  ;
}

uint64_t sub_100DDA400()
{
  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_10199EA28, (void *)&_mh_execute_header);
}

double sub_100DDA444()
{
  if (sub_1006E5C40())
  {
    if (sub_1006FE6A0())
    {
      uint64_t v1 = (char *)operator new(0x68uLL);
      sub_1006DC9EC((uint64_t)v1, (uint64_t)"CLDeviceMotion", 11);
      *(void *)uint64_t v1 = off_101883C90;
      v1[28] = 0;
      *((_OWORD *)v1 + 2) = 0u;
      *((_OWORD *)v1 + 3) = 0u;
      *((_OWORD *)v1 + 4) = 0u;
      *((void *)v1 + 1sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0LL;
      double result = -1.0;
      *(_OWORD *)(v1 + 8_Block_object_dispose(va, 8) = xmmword_1012E0070;
      qword_1019A20B8 = (uint64_t)v1;
    }
  }

  return result;
}

void sub_100DDA4C0(_Unwind_Exception *a1)
{
}

uint64_t sub_100DDA4D4()
{
  if (qword_10199EA88 != -1) {
    dispatch_once(&qword_10199EA88, &stru_101883C60);
  }
  return qword_1019A20B8;
}

void *sub_100DDA518(void *a1)
{
  *a1 = off_101883C90;
  uint64_t v2 = a1[10];
  a1[10] = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  return sub_1006DCAA8(a1);
}

void sub_100DDA55C(void *a1)
{
  *a1 = off_101883C90;
  uint64_t v2 = a1[10];
  a1[10] = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  uint64_t v3 = sub_1006DCAA8(a1);
  operator delete(v3);
}

float sub_100DDA5A4(uint64_t a1, float32x2_t *a2)
{
  float32x2_t v2 = *a2;
  *(float64x2_t *)(a1 + 16) = vcvtq_f64_f32(a2[1]);
  float v3 = a2[2].f32[1];
  *(double *)(a1 + 32) = a2[2].f32[0];
  *(float32x2_t *)a1 = v2;
  *(double *)(a1 + _Block_object_dispose(va, 8) = v3;
  *(_DWORD *)(a1 + 4sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = a2[3].i32[0];
  *(_DWORD *)(a1 + 44) = a2[3].i32[1];
  *(_DWORD *)(a1 + 4_Block_object_dispose(va, 8) = a2[4].i32[0];
  *(_DWORD *)(a1 + 52) = a2[4].i32[1];
  *(_DWORD *)(a1 + 56) = a2[5].i32[0];
  *(_DWORD *)(a1 + 6sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = a2[5].i32[1];
  *(_DWORD *)(a1 + 64) = a2[6].i32[0];
  *(_DWORD *)(a1 + 6_Block_object_dispose(va, 8) = a2[6].i32[1];
  __int32 v4 = a2[7].i32[1];
  *(_DWORD *)(a1 + 72) = a2[7].i32[0];
  *(_WORD *)(a1 + 11sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0;
  unsigned int v5 = a2[10].u8[0];
  if (v5 >= 7) {
    LOBYTE(v5) = -1;
  }
  *(_DWORD *)(a1 + 76) = (char)v5;
  __int16 v6 = a2[10].i16[1];
  *(_BYTE *)(a1 + 81) = (v6 & 0x10) != 0;
  *(_BYTE *)(a1 + 8sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = (v6 & 8) != 0;
  *(_BYTE *)(a1 + 82) = HIBYTE(v6) & 1;
  *(_DWORD *)(a1 + 84) = v4;
  *(_BYTE *)(a1 + 8_Block_object_dispose(va, 8) = (v6 & 0x4000) != 0;
  *(_BYTE *)(a1 + 89) = (v6 & 0x40) != 0;
  float result = a2[8].f32[0];
  *(float *)(a1 + 96) = result;
  *(_DWORD *)(a1 + 92) = 0;
  *(_BYTE *)(a1 + 10sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = a2[11].i8[0];
  *(_WORD *)(a1 + 11sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = v6;
  *(_BYTE *)(a1 + 10_Block_object_dispose(va, 8) = a2[10].i8[1];
  *(_DWORD *)(a1 + 112) = 0;
  return result;
}

uint64_t sub_100DDA67C(int a1)
{
  if (a1 > 18)
  {
    if (a1 > 66)
    {
      if (a1 == 67) {
        return 10LL;
      }
      if (a1 == 143) {
        return 4LL;
      }
    }

    else
    {
      if (a1 == 19) {
        return 5LL;
      }
      if (a1 == 34) {
        return 9LL;
      }
    }
  }

  else if (a1 > 6)
  {
    if (a1 == 7) {
      return 2LL;
    }
    if (a1 == 15) {
      return 3LL;
    }
  }

  else
  {
    if (a1 == 2) {
      return 0LL;
    }
    if (a1 == 3) {
      return 1LL;
    }
  }

  if (qword_101934560 != -1) {
    dispatch_once(&qword_101934560, &stru_101883CD8);
  }
  float v3 = (os_log_s *)qword_101934568;
  if (os_log_type_enabled((os_log_t)qword_101934568, OS_LOG_TYPE_FAULT))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 67240192;
    int v7 = a1;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_FAULT,  "No viable conversion for mode %{public}#x",  buf,  8u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934560 != -1) {
      dispatch_once(&qword_101934560, &stru_101883CD8);
    }
    v5[0] = 67240192;
    v5[1] = a1;
    __int32 v4 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934568,  17LL,  "No viable conversion for mode %{public}#x",  v5,  8);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "static CLDeviceMotion::CLDeviceMotionNotification CLDeviceMotion::CLMotionTypeDeviceMotionModeToCLDeviceMotionNoti fication(const CLMotionTypeDeviceMotionMode)",  "%s\n",  v4);
  }

  return 11LL;
}

uint64_t sub_100DDA8C0(unsigned int a1)
{
  if (a1 < 0xB && ((0x63Fu >> a1) & 1) != 0) {
    return dword_10135E9D0[a1];
  }
  if (qword_101934560 != -1) {
    dispatch_once(&qword_101934560, &stru_101883CD8);
  }
  float32x2_t v2 = (os_log_s *)qword_101934568;
  if (os_log_type_enabled((os_log_t)qword_101934568, OS_LOG_TYPE_FAULT))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 67240192;
    unsigned int v9 = a1;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_FAULT,  "No viable conversion for notification %{public}#x",  buf,  8u);
  }

  BOOL v3 = sub_1002921D0(115, 0);
  uint64_t result = 0LL;
  if (v3)
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934560 != -1) {
      dispatch_once(&qword_101934560, &stru_101883CD8);
    }
    v7[0] = 67240192;
    v7[1] = a1;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934568,  17LL,  "No viable conversion for notification %{public}#x",  v7,  8);
    __int16 v6 = (uint8_t *)v5;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "static CLMotionTypeDeviceMotionMode CLDeviceMotion::CLDeviceMotionNotificationToCLMotionTypeDeviceMotionMode(const int)",  "%s\n",  v5);
    if (v6 != buf) {
      free(v6);
    }
    return 0LL;
  }

  return result;
}

uint64_t sub_100DDAA94(uint64_t a1, int *a2)
{
  int v3 = *a2;
  BOOL v4 = (*a2 - 7) > 0x3C || ((1LL << (*a2 - 7)) & 0x1000000008001101LL) == 0;
  if (v4 && (v3 - 2) >= 2 && v3 != 143)
  {
    if (qword_101934560 != -1) {
      dispatch_once(&qword_101934560, &stru_101883CD8);
    }
    std::string v15 = (os_log_s *)qword_101934568;
    if (os_log_type_enabled((os_log_t)qword_101934568, OS_LOG_TYPE_FAULT))
    {
      int v16 = *a2;
      *(_DWORD *)std::stringbuf::string_type buf = 67240192;
      int v22 = v16;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_FAULT,  "Unsupported mode (%{public}d). Returning.",  buf,  8u);
    }

    BOOL v17 = sub_1002921D0(115, 0);
    uint64_t result = 0LL;
    if (v17)
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934560 != -1) {
        dispatch_once(&qword_101934560, &stru_101883CD8);
      }
      int v18 = *a2;
      LODWORD(v20[0]) = 67240192;
      HIDWORD(v20[0]) = v18;
      uint64_t v10 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934568,  17LL,  "Unsupported mode (%{public}d). Returning.",  v20,  8,  v20[0]);
      goto LABEL_38;
    }

    return result;
  }

  if ((v3 & 4) == 0) {
    goto LABEL_11;
  }
  if (sub_1007492FC())
  {
    int v3 = *a2;
LABEL_11:
    if ((v3 & 2) != 0) {
      return 1LL;
    }
    if (qword_101934560 != -1) {
      dispatch_once(&qword_101934560, &stru_101883CD8);
    }
    unsigned int v5 = (os_log_s *)qword_101934568;
    if (os_log_type_enabled((os_log_t)qword_101934568, OS_LOG_TYPE_FAULT))
    {
      int v6 = *a2;
      *(_DWORD *)std::stringbuf::string_type buf = 67240192;
      int v22 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_FAULT,  "Unsupported mode (%{public}d). Couldn't do DeviceMotion without Gyro. Returning.",  buf,  8u);
    }

    BOOL v7 = sub_1002921D0(115, 0);
    uint64_t result = 0LL;
    if (v7)
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934560 != -1) {
        dispatch_once(&qword_101934560, &stru_101883CD8);
      }
      int v9 = *a2;
      LODWORD(v20[0]) = 67240192;
      HIDWORD(v20[0]) = v9;
      uint64_t v10 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934568,  17LL,  "Unsupported mode (%{public}d). Couldn't do DeviceMotion without Gyro. Returning.",  v20,  8,  v20[0]);
LABEL_38:
      uint64_t v19 = (uint8_t *)v10;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLDeviceMotion::isModeValid(const CLMotionTypeDeviceMotionMode &) const",  "%s\n",  v10);
      if (v19 != buf) {
        free(v19);
      }
      return 0LL;
    }

    return result;
  }

  if (qword_101934560 != -1) {
    dispatch_once(&qword_101934560, &stru_101883CD8);
  }
  uint64_t v11 = (os_log_s *)qword_101934568;
  if (os_log_type_enabled((os_log_t)qword_101934568, OS_LOG_TYPE_FAULT))
  {
    int v12 = *a2;
    *(_DWORD *)std::stringbuf::string_type buf = 67240192;
    int v22 = v12;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_FAULT,  "Unsupported mode (%{public}d). Compass not found. Returning.",  buf,  8u);
  }

  BOOL v13 = sub_1002921D0(115, 0);
  uint64_t result = 0LL;
  if (v13)
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934560 != -1) {
      dispatch_once(&qword_101934560, &stru_101883CD8);
    }
    int v14 = *a2;
    LODWORD(v20[0]) = 67240192;
    HIDWORD(v20[0]) = v14;
    uint64_t v10 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934568,  17LL,  "Unsupported mode (%{public}d). Compass not found. Returning.",  v20,  8,  v20[0]);
    goto LABEL_38;
  }

  return result;
}

void sub_100DDAEA4(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6 = sub_1006E27E8();
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  _DWORD v7[2] = sub_100DDAF18;
  v7[3] = &unk_101830558;
  _DWORD v7[4] = a1;
  v7[5] = a2;
  *(double *)&v7[6] = a3;
  sub_1006E28B8(v6, (uint64_t)v7);
}

uint64_t sub_100DDAF18(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = (*(uint64_t (**)(void))(**(void **)(a1 + 40) + 32LL))(*(void *)(a1 + 40));
  if (v4)
  {
    uint64_t v1 = (void *)v4;
    if (qword_101934560 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    sub_1012708D4(qword_101934560 == -1);
  }

  dispatch_once(&qword_101934560, &stru_101883CD8);
LABEL_3:
  unsigned int v5 = (os_log_s *)qword_101934568;
  if (os_log_type_enabled((os_log_t)qword_101934568, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 136446210;
    id v14 = objc_msgSend(objc_msgSend(v1, "description"), "UTF8String");
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_INFO,  "CLDeviceMotion::addDeviceMotionDispatcher adding dispatcher with property: %{public}s",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934560 != -1) {
      dispatch_once(&qword_101934560, &stru_101883CD8);
    }
    uint64_t v9 = qword_101934568;
    int v11 = 136446210;
    id v12 = objc_msgSend(objc_msgSend(v1, "description"), "UTF8String");
    uint64_t v10 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v9,  1LL,  "CLDeviceMotion::addDeviceMotionDispatcher adding dispatcher with property: %{public}s",  &v11,  12);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLDeviceMotion::addDeviceMotionDispatcher(CLDeviceMotion::Dispatcher *, CFTimeInterval)_block_invoke",  "%s\n",  v10);
  }

  id v6 = [v1 mode];
  *(_DWORD *)std::stringbuf::string_type buf = (_DWORD)v6;
  uint64_t result = sub_100DDAA94((uint64_t)v6, (int *)buf);
  if ((_DWORD)result)
  {
    int v8 = sub_100DDA67C((int)[v1 mode]);
    return sub_1006DCB40(v3, v8, *(void *)(a1 + 40), *(double *)(a1 + 48));
  }

  return result;
}

void sub_100DDB140(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1006E27E8();
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  _DWORD v5[2] = sub_100DDB1A4;
  _OWORD v5[3] = &unk_101830538;
  _DWORD v5[4] = a1;
  v5[5] = a2;
  sub_1006E28B8(v4, (uint64_t)v5);
}

void sub_100DDB1A4(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = (*(uint64_t (**)(void))(**(void **)(a1 + 40) + 32LL))(*(void *)(a1 + 40));
  if (v4)
  {
    uint64_t v1 = (void *)v4;
    if (qword_101934560 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    sub_101270A4C(qword_101934560 == -1);
  }

  dispatch_once(&qword_101934560, &stru_101883CD8);
LABEL_3:
  unsigned int v5 = (os_log_s *)qword_101934568;
  if (os_log_type_enabled((os_log_t)qword_101934568, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 136446210;
    id v13 = objc_msgSend(objc_msgSend(v1, "description"), "UTF8String");
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_INFO,  "CLDeviceMotion::removeDeviceMotionDispatcher removing dispatcher with property: %{public}s",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934560 != -1) {
      dispatch_once(&qword_101934560, &stru_101883CD8);
    }
    uint64_t v8 = qword_101934568;
    int v10 = 136446210;
    id v11 = objc_msgSend(objc_msgSend(v1, "description"), "UTF8String");
    uint64_t v9 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v8,  1LL,  "CLDeviceMotion::removeDeviceMotionDispatcher removing dispatcher with property: %{public}s",  &v10,  12);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLDeviceMotion::removeDeviceMotionDispatcher(CLDeviceMotion::Dispatcher *)_block_invoke",  "%s\n",  v9);
  }

  id v6 = [v1 mode];
  *(_DWORD *)std::stringbuf::string_type buf = (_DWORD)v6;
  if (sub_100DDAA94((uint64_t)v6, (int *)buf))
  {
    int v7 = sub_100DDA67C((int)[v1 mode]);
    sub_1006DD2A0(v3, v7, *(void *)(a1 + 40));
  }

BOOL sub_100DDB3C8(uint64_t a1, int *a2)
{
  BOOL result = 0LL;
  int v4 = *a2;
  if (*a2 > 18)
  {
    if (v4 <= 66)
    {
      if (v4 == 19)
      {
        uint64_t v5 = *(void *)(a1 + 32);
        if (!v5) {
          return 0LL;
        }
      }

      else
      {
        if (v4 != 34) {
          return result;
        }
        uint64_t v5 = *(void *)(a1 + 48);
        if (!v5) {
          return 0LL;
        }
      }

void sub_100DDB4DC(void *a1, int a2, uint64_t *a3)
{
  if (qword_101934560 != -1) {
    dispatch_once(&qword_101934560, &stru_101883CD8);
  }
  uint64_t v6 = (os_log_s *)qword_101934568;
  if (os_log_type_enabled((os_log_t)qword_101934568, OS_LOG_TYPE_INFO))
  {
    uint64_t v7 = *a3;
    *(_DWORD *)std::stringbuf::string_type buf = 67240448;
    *(_DWORD *)&uint8_t buf[4] = a2;
    *(_WORD *)&uint8_t buf[8] = 2050;
    *(void *)&buf[10] = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "CLDeviceMotion::minimumUpdateIntervalChanged,notification,%{public}d,minimumUpdateInterval,%{public}f",  buf,  0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934560 != -1) {
      dispatch_once(&qword_101934560, &stru_101883CD8);
    }
    uint64_t v29 = *a3;
    int v44 = 67240448;
    *(_DWORD *)__int16 v45 = a2;
    *(_WORD *)&v45[4] = 2050;
    *(void *)&v45[6] = v29;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934568,  1LL,  "CLDeviceMotion::minimumUpdateIntervalChanged,notification,%{public}d,minimumUpdateInterval,%{public}f",  &v44,  18);
    uint64_t v31 = (char *)v30;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual CFTimeInterval CLDeviceMotion::minimumUpdateIntervalChanged(int, const CFTimeInterval &)",  "%s\n",  v30);
    if (v31 != buf) {
      free(v31);
    }
  }

  if (qword_101934560 != -1) {
    dispatch_once(&qword_101934560, &stru_101883CD8);
  }
  uint64_t v8 = (os_log_s *)qword_101934568;
  if (os_log_type_enabled((os_log_t)qword_101934568, OS_LOG_TYPE_INFO))
  {
    double v9 = sub_1006DDB1C((uint64_t)a1, 0);
    double v10 = sub_1006DDB1C((uint64_t)a1, 9);
    double v11 = sub_1006DDB1C((uint64_t)a1, 1);
    double v12 = sub_1006DDB1C((uint64_t)a1, 10);
    double v13 = sub_1006DDB1C((uint64_t)a1, 2);
    double v14 = sub_1006DDB1C((uint64_t)a1, 3);
    double v15 = sub_1006DDB1C((uint64_t)a1, 4);
    double v16 = sub_1006DDB1C((uint64_t)a1, 5);
    *(_DWORD *)std::stringbuf::string_type buf = 134350848;
    *(double *)&uint8_t buf[4] = v9;
    *(_WORD *)&_BYTE buf[12] = 2050;
    *(double *)&_BYTE buf[14] = v10;
    __int16 v59 = 2050;
    double v60 = v11;
    __int16 v61 = 2050;
    double v62 = v12;
    __int16 v63 = 2050;
    double v64 = v13;
    __int16 v65 = 2050;
    double v66 = v14;
    __int16 v67 = 2050;
    double v68 = v15;
    __int16 v69 = 2050;
    double v70 = v16;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_INFO,  "minimumUpdateInterval GyroOnly:%{public}f, 3AxisDynamicGyro:%{public}f, 6Axis:%{public}f, 6AxisThrottledGyro:%{pub lic}f, 9Axis:%{public}f, 9AxisWithNorthReference:%{public}f, 9AxisWithTrueNorthReference:%{public}f, BuildGYTT:%{public}f",  buf,  0x52u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934560 != -1) {
      dispatch_once(&qword_101934560, &stru_101883CD8);
    }
    uint64_t v32 = qword_101934568;
    double v33 = sub_1006DDB1C((uint64_t)a1, 0);
    double v34 = sub_1006DDB1C((uint64_t)a1, 9);
    double v35 = sub_1006DDB1C((uint64_t)a1, 1);
    double v36 = sub_1006DDB1C((uint64_t)a1, 10);
    double v37 = sub_1006DDB1C((uint64_t)a1, 2);
    double v38 = sub_1006DDB1C((uint64_t)a1, 3);
    double v39 = sub_1006DDB1C((uint64_t)a1, 4);
    double v40 = sub_1006DDB1C((uint64_t)a1, 5);
    int v44 = 134350848;
    *(double *)__int16 v45 = v33;
    *(_WORD *)&v45[8] = 2050;
    *(double *)&v45[10] = v34;
    __int16 v46 = 2050;
    double v47 = v35;
    __int16 v48 = 2050;
    double v49 = v36;
    __int16 v50 = 2050;
    double v51 = v37;
    __int16 v52 = 2050;
    double v53 = v38;
    __int16 v54 = 2050;
    double v55 = v39;
    __int16 v56 = 2050;
    double v57 = v40;
    LODWORD(v43) = 82;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v32,  1LL,  "minimumUpdateInterval GyroOnly:%{public}f, 3AxisDynamicGyro:%{public}f, 6Axis:%{public}f, 6AxisThrottledGyro:%{pub lic}f, 9Axis:%{public}f, 9AxisWithNorthReference:%{public}f, 9AxisWithTrueNorthReference:%{public}f, BuildGYTT:%{public}f",  &v44,  v43);
    int v42 = (char *)v41;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual CFTimeInterval CLDeviceMotion::minimumUpdateIntervalChanged(int, const CFTimeInterval &)",  "%s\n",  v41);
    if (v42 != buf) {
      free(v42);
    }
  }

  switch(a2)
  {
    case 0:
      uint64_t v27 = a1[7];
      if (v27)
      {
        *(void *)std::stringbuf::string_type buf = sub_1006DDB1C((uint64_t)a1, 0);
        (*(void (**)(uint64_t, _BYTE *))(*(void *)v27 + 16LL))(v27, buf);
      }

      uint64_t v28 = a1[5];
      if (v28) {
        goto LABEL_47;
      }
      break;
    case 1:
    case 10:
      if (a1[8])
      {
        double v23 = sub_1006DDB1C((uint64_t)a1, 1);
        double v24 = sub_1006DDB1C((uint64_t)a1, 10);
        if (v23 <= 0.0) {
          double v25 = 1.79769313e308;
        }
        else {
          double v25 = v23;
        }
        if (v24 <= 0.0) {
          double v24 = 1.79769313e308;
        }
        if (v24 >= v25) {
          double v24 = v25;
        }
        if (v24 == 1.79769313e308) {
          double v24 = 0.0;
        }
        *(double *)std::stringbuf::string_type buf = v24;
        uint64_t v22 = a1[8];
        goto LABEL_39;
      }

      break;
    case 2:
    case 3:
    case 4:
      if (a1[9])
      {
        double v17 = sub_1006DDB1C((uint64_t)a1, 2);
        double v18 = sub_1006DDB1C((uint64_t)a1, 3);
        if (v17 <= 0.0) {
          double v19 = 1.79769313e308;
        }
        else {
          double v19 = v17;
        }
        if (v18 <= 0.0) {
          double v18 = 1.79769313e308;
        }
        if (v18 >= v19) {
          double v20 = v19;
        }
        else {
          double v20 = v18;
        }
        double v21 = sub_1006DDB1C((uint64_t)a1, 4);
        if (v21 <= 0.0) {
          double v21 = 1.79769313e308;
        }
        if (v21 >= v20) {
          double v21 = v20;
        }
        if (v21 == 1.79769313e308) {
          double v21 = 0.0;
        }
        *(double *)std::stringbuf::string_type buf = v21;
        uint64_t v22 = a1[9];
LABEL_39:
        uint64_t v26 = *(void (**)(void))(*(void *)v22 + 16LL);
        goto LABEL_48;
      }

      break;
    case 5:
      uint64_t v28 = a1[4];
      if (v28) {
        goto LABEL_47;
      }
      break;
    case 9:
      uint64_t v28 = a1[6];
      if (v28)
      {
LABEL_47:
        uint64_t v26 = *(void (**)(void))(*(void *)v28 + 16LL);
LABEL_48:
        v26();
      }

      break;
    default:
      return;
  }

void sub_100DDBB1C(void *a1, unsigned int a2, unint64_t a3, unint64_t a4)
{
  p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
  if (qword_101934560 != -1) {
    dispatch_once(&qword_101934560, &stru_101883CD8);
  }
  uint64_t v8 = &OBJC_METACLASS___CLPrivacyManager.vtable;
  double v9 = (os_log_s *)qword_101934568;
  if (os_log_type_enabled((os_log_t)qword_101934568, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 67240704;
    *(_DWORD *)__int16 v61 = a2;
    *(_WORD *)&v61[4] = 2050;
    *(void *)&v61[6] = a3;
    *(_WORD *)&v61[14] = 2050;
    *(void *)&v61[16] = a4;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_INFO,  "CLDeviceMotion::numberOfClientsChanged notification:%{public}d, from:%{public}zu, to:%{public}zu",  buf,  0x1Cu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934560 != -1) {
      dispatch_once(&qword_101934560, &stru_101883CD8);
    }
    int v48 = 67240704;
    *(_DWORD *)double v49 = a2;
    *(_WORD *)&v49[4] = 2050;
    *(void *)&v49[6] = a3;
    *(_WORD *)&v49[14] = 2050;
    *(void *)&v49[16] = a4;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934568,  1LL,  "CLDeviceMotion::numberOfClientsChanged notification:%{public}d, from:%{public}zu, to:%{public}zu",  &v48,  28);
    uint64_t v29 = (uint8_t *)v28;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLDeviceMotion::numberOfClientsChanged(int, size_t, size_t)",  "%s\n",  v28);
    if (v29 != buf) {
      free(v29);
    }
  }

  if (qword_101934560 != -1) {
    dispatch_once(&qword_101934560, &stru_101883CD8);
  }
  double v10 = (os_log_s *)qword_101934568;
  if (os_log_type_enabled((os_log_t)qword_101934568, OS_LOG_TYPE_INFO))
  {
    uint64_t v46 = sub_1006DD784((uint64_t)a1, 0);
    uint64_t v11 = sub_1006DD784((uint64_t)a1, 9);
    uint64_t v12 = sub_1006DD784((uint64_t)a1, 1);
    uint64_t v13 = sub_1006DD784((uint64_t)a1, 10);
    uint64_t v14 = sub_1006DD784((uint64_t)a1, 2);
    unint64_t v15 = a4;
    unsigned int v16 = a2;
    uint64_t v17 = sub_1006DD784((uint64_t)a1, 3);
    uint64_t v18 = sub_1006DD784((uint64_t)a1, 4);
    uint64_t v19 = sub_1006DD784((uint64_t)a1, 5);
    *(_DWORD *)std::stringbuf::string_type buf = 134350848;
    *(void *)__int16 v61 = v46;
    *(_WORD *)&v61[8] = 2050;
    *(void *)&v61[10] = v11;
    *(_WORD *)&v61[18] = 2050;
    *(void *)&v61[20] = v12;
    __int16 v62 = 2050;
    uint64_t v63 = v13;
    __int16 v64 = 2050;
    uint64_t v65 = v14;
    uint64_t v8 = &OBJC_METACLASS___CLPrivacyManager.vtable;
    __int16 v66 = 2050;
    uint64_t v67 = v17;
    a2 = v16;
    a4 = v15;
    __int16 v68 = 2050;
    uint64_t v69 = v18;
    p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
    __int16 v70 = 2050;
    uint64_t v71 = v19;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_INFO,  "numberOfClients GyroOnly:%{public}zd, 3AxisDynamicGyro:%{public}zd, 6Axis:%{public}zd, 6AxisThrottledGyro:%{public }zd, 9Axis:%{public}zd, 9AxisWithNorthReference:%{public}zd, 9AxisWithTrueNorthReference:%{public}zd, BuildGYTT:%{public}zd",  buf,  0x52u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    unsigned int v45 = a2;
    if (qword_101934560 != -1) {
      dispatch_once(&qword_101934560, &stru_101883CD8);
    }
    uint64_t v30 = qword_101934568;
    uint64_t v31 = sub_1006DD784((uint64_t)a1, 0);
    uint64_t v32 = sub_1006DD784((uint64_t)a1, 9);
    uint64_t v33 = sub_1006DD784((uint64_t)a1, 1);
    uint64_t v34 = sub_1006DD784((uint64_t)a1, 10);
    uint64_t v35 = sub_1006DD784((uint64_t)a1, 2);
    uint64_t v36 = sub_1006DD784((uint64_t)a1, 3);
    uint64_t v37 = sub_1006DD784((uint64_t)a1, 4);
    uint64_t v38 = sub_1006DD784((uint64_t)a1, 5);
    int v48 = 134350848;
    *(void *)double v49 = v31;
    *(_WORD *)&v49[8] = 2050;
    *(void *)&v49[10] = v32;
    *(_WORD *)&v49[18] = 2050;
    *(void *)&v49[20] = v33;
    __int16 v50 = 2050;
    uint64_t v51 = v34;
    __int16 v52 = 2050;
    uint64_t v53 = v35;
    __int16 v54 = 2050;
    uint64_t v55 = v36;
    __int16 v56 = 2050;
    uint64_t v57 = v37;
    __int16 v58 = 2050;
    uint64_t v59 = v38;
    LODWORD(v44) = 82;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v30,  1LL,  "numberOfClients GyroOnly:%{public}zd, 3AxisDynamicGyro:%{public}zd, 6Axis:%{public}zd, 6AxisThrottledGyro:%{public }zd, 9Axis:%{public}zd, 9AxisWithNorthReference:%{public}zd, 9AxisWithTrueNorthReference:%{public}zd, BuildGYTT:%{public}zd",  &v48,  v44);
    double v40 = (uint8_t *)v39;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLDeviceMotion::numberOfClientsChanged(int, size_t, size_t)",  "%s\n",  v39);
    if (v40 != buf) {
      free(v40);
    }
    a2 = v45;
    p_vtable = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
    uint64_t v8 = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
  }

  if (a2 == 10) {
    unsigned int v20 = 1;
  }
  else {
    unsigned int v20 = a2;
  }
  uint64_t v21 = sub_1006DD784((uint64_t)a1, 2);
  uint64_t v22 = sub_1006DD784((uint64_t)a1, 3);
  uint64_t v23 = sub_1006DD784((uint64_t)a1, 4);
  char v24 = sub_1004F97F4();
  if (v20 > 9) {
    goto LABEL_34;
  }
  if (((1 << v20) & 0x223) != 0)
  {
    if (!a3 && a4 == 1)
    {
      *(_DWORD *)std::stringbuf::string_type buf = sub_100DDA8C0(v20);
      sub_100DDC658((uint64_t)a1, (int *)buf);
      return;
    }

id sub_100DDC2A0(uint64_t a1)
{
  if (!*(void *)(a1 + 80))
  {
    int v4 = (void *)sub_1006E2838();
    sub_100A15BEC((uint64_t)sub_100DDD220, a1, v4, buf);
    uint64_t v5 = *(void *)buf;
    *(void *)std::stringbuf::string_type buf = 0LL;
    uint64_t v6 = *(void *)(a1 + 80);
    *(void *)(a1 + 8sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = v5;
    if (v6)
    {
      (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
      uint64_t v7 = *(void *)buf;
      *(void *)std::stringbuf::string_type buf = 0LL;
      if (v7) {
        (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
      }
    }
  }

  if (qword_101934560 != -1) {
    dispatch_once(&qword_101934560, &stru_101883CD8);
  }
  float32x2_t v2 = (os_log_s *)qword_101934568;
  if (os_log_type_enabled((os_log_t)qword_101934568, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "Registering for geomagnetic model updates",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934560 != -1) {
      dispatch_once(&qword_101934560, &stru_101883CD8);
    }
    v10[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934568,  1LL,  "Registering for geomagnetic model updates",  v10,  2);
    double v9 = (uint8_t *)v8;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLDeviceMotion::registerForGeomagneticModelNotification()", "%s\n", v8);
    if (v9 != buf) {
      free(v9);
    }
  }

  return [*(id *)(*(void *)(a1 + 80) + 16) register:*(void *)(*(void *)(a1 + 80) + 8) forNotification:0 registrationInfo:0];
}

double sub_100DDC4A4(uint64_t a1)
{
  if (*(void *)(a1 + 80))
  {
    if (qword_101934560 != -1) {
      dispatch_once(&qword_101934560, &stru_101883CD8);
    }
    float32x2_t v2 = (os_log_s *)qword_101934568;
    if (os_log_type_enabled((os_log_t)qword_101934568, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "Unregistering for geomagnetic model updates",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934560 != -1) {
        dispatch_once(&qword_101934560, &stru_101883CD8);
      }
      v6[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934568,  1LL,  "Unregistering for geomagnetic model updates",  v6,  2);
      uint64_t v5 = (uint8_t *)v4;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLDeviceMotion::unregisterForGeomagneticModelNotification()",  "%s\n",  v4);
      if (v5 != buf) {
        free(v5);
      }
    }

    [*(id *)(*(void *)(a1 + 80) + 16) unregister:*(void *)(*(void *)(a1 + 80) + 8) forNotification:0];
    double result = -1.0;
    *(_OWORD *)(a1 + 8_Block_object_dispose(va, 8) = xmmword_1012E0070;
  }

  return result;
}

void sub_100DDC658(uint64_t a1, int *a2)
{
  int v4 = *a2;
  if ((*a2 & 4) != 0) {
    *(_BYTE *)(a1 + 2_Block_object_dispose(va, 8) = (*a2 & 8) != 0;
  }
  int v5 = v4 & 1;
  if (qword_101934560 != -1) {
    dispatch_once(&qword_101934560, &stru_101883CD8);
  }
  unsigned int v6 = v4 & 2;
  unsigned int v7 = v4 & 4;
  unsigned int v8 = v4 & 0x10;
  double v9 = (os_log_s *)qword_101934568;
  if (os_log_type_enabled((os_log_t)qword_101934568, OS_LOG_TYPE_DEFAULT))
  {
    int v10 = *a2;
    int v11 = *(unsigned __int8 *)(a1 + 28);
    *(_DWORD *)std::stringbuf::string_type buf = 67241472;
    *(_DWORD *)&uint8_t buf[4] = v10;
    LOWORD(v44) = 1026;
    *(_DWORD *)((char *)&v44 + 2) = v5;
    HIWORD(v44) = 1026;
    unsigned int v45 = v6 >> 1;
    __int16 v46 = 1026;
    unsigned int v47 = v7 >> 2;
    __int16 v48 = 1026;
    int v49 = v11;
    __int16 v50 = 1026;
    unsigned int v51 = v8 >> 4;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Starting device motion, mode=%{public}#x,useAccelerometer=%{public}d,useGyro=%{public}d,useCompass=%{public}d,fUse NorthRef=%{public}d,buildingGYTT=%{public}d",  buf,  0x26u);
  }

  uint64_t v12 = sub_1002921D0(115, 2);
  if ((_DWORD)v12)
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934560 != -1) {
      dispatch_once(&qword_101934560, &stru_101883CD8);
    }
    int v28 = *a2;
    int v29 = *(unsigned __int8 *)(a1 + 28);
    v32[0] = 67241472;
    v32[1] = v28;
    __int16 v33 = 1026;
    int v34 = v5;
    __int16 v35 = 1026;
    unsigned int v36 = v6 >> 1;
    __int16 v37 = 1026;
    unsigned int v38 = v7 >> 2;
    __int16 v39 = 1026;
    int v40 = v29;
    __int16 v41 = 1026;
    unsigned int v42 = v8 >> 4;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934568,  0LL,  "Starting device motion, mode=%{public}#x,useAccelerometer=%{public}d,useGyro=%{public}d,useCompass=%{public}d,fUse NorthRef=%{public}d,buildingGYTT=%{public}d",  v32,  38);
    uint64_t v31 = (uint8_t *)v30;
    uint64_t v12 = sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLDeviceMotion::enableSensorFusionWithMode(const CLMotionTypeDeviceMotionMode &)",  "%s\n",  v30);
    if (v31 != buf) {
      free(v31);
    }
  }

  if (sub_100DDAA94(v12, a2))
  {
    uint64_t v13 = sub_1006E27E8();
    sub_100413284(v13, buf);
    char v14 = sub_1002A6F64(*(uint64_t *)buf, "LogSensorFusion", (BOOL *)v32);
    unint64_t v15 = v44;
    if (v44)
    {
      p_shared_owners = (unint64_t *)&v44->__shared_owners_;
      do
        unint64_t v17 = __ldaxr(p_shared_owners);
      while (__stlxr(v17 - 1, p_shared_owners));
      if (!v17)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }

    if ((v14 & 1) == 0) {
      LOBYTE(v32[0]) = 0;
    }
    int v18 = *a2;
    if (*a2 > 18)
    {
      if (v18 <= 66)
      {
        if (v18 == 19)
        {
          uint64_t v19 = *(void **)(a1 + 32);
          if (!v19)
          {
            uint64_t v19 = operator new(0x390uLL);
            sub_1005D0220((uint64_t)v19, LOBYTE(v32[0]), 5, 1, 1);
            *(void *)(a1 + 32) = v19;
          }
        }

        else
        {
          if (v18 != 34) {
            return;
          }
          uint64_t v19 = *(void **)(a1 + 48);
          if (!v19)
          {
            uint64_t v19 = operator new(0x3B8uLL);
            sub_100F68FD8(v19, LOBYTE(v32[0]), 9LL);
            *(void *)(a1 + 4_Block_object_dispose(va, 8) = v19;
          }

          v19[9] = sub_100DDD01C;
          v19[10] = a1;
        }

        goto LABEL_54;
      }

      if (v18 == 67) {
        goto LABEL_35;
      }
      if (v18 != 143) {
        return;
      }
    }

    else
    {
      if (v18 <= 6)
      {
        if (v18 != 2)
        {
          if (v18 != 3) {
            return;
          }
LABEL_35:
          uint64_t v21 = *(void **)(a1 + 64);
          if (!v21)
          {
            if ((sub_1004F97F4() & 8) != 0)
            {
              uint64_t v21 = operator new(0xE0uLL);
              sub_100DDD4D8(v21, 1);
            }

            else if ((sub_1004F97F4() & 0x10) != 0)
            {
              uint64_t v21 = operator new(0x4B0uLL);
              sub_1006EF24C((uint64_t)v21, 1);
            }

            else
            {
              uint64_t v21 = operator new(0x390uLL);
              sub_1005D0220((uint64_t)v21, LOBYTE(v32[0]), 1, 1, 0);
            }

            *(void *)(a1 + 64) = v21;
          }

          int v27 = sub_100DDA67C(*a2);
          *(void *)std::stringbuf::string_type buf = sub_1006DDB1C(a1, v27);
          (*(void (**)(void *, uint8_t *))(*v21 + 16LL))(v21, buf);
          uint64_t v19 = *(void **)(a1 + 64);
          goto LABEL_54;
        }

        if ((sub_1004F97F4() & 0x80) == 0)
        {
          if (*(void *)(a1 + 40)) {
            return;
          }
          uint64_t v19 = operator new(0x390uLL);
          sub_1005D0220((uint64_t)v19, LOBYTE(v32[0]), 0, 0, 0);
          *(void *)(a1 + 4sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = v19;
          goto LABEL_54;
        }

        if (*(void *)(a1 + 56)) {
          return;
        }
        char v25 = operator new(0xE0uLL);
        sub_100DDD42C((uint64_t)v25, 0);
        *(void *)(a1 + 56) = v25;
        uint64_t v23 = (void **)(a1 + 56);
        int v26 = sub_100DDA67C(*a2);
        *(void *)std::stringbuf::string_type buf = sub_1006DDB1C(a1, v26);
        (*(void (**)(void *, uint8_t *))(*(void *)v25 + 16LL))(v25, buf);
LABEL_47:
        uint64_t v19 = *v23;
LABEL_54:
        if ((void (*)(float32x2_t *, uint64_t, uint64_t))v19[7] != sub_100DDD008 || v19[8] != a1)
        {
          v19[7] = sub_100DDD008;
          v19[8] = a1;
          (*(void (**)(void *))(*v19 + 48LL))(v19);
        }

        return;
      }

      if (v18 != 7 && v18 != 15) {
        return;
      }
    }

    unsigned int v20 = *(void **)(a1 + 72);
    if (!v20)
    {
      if ((sub_1004F97F4() & 0x10) != 0)
      {
        unsigned int v20 = operator new(0xE0uLL);
        sub_100DDD580((uint64_t)v20, 2);
      }

      else
      {
        unsigned int v20 = operator new(0x4C0uLL);
        sub_10095E43C((uint64_t)v20, v32[0], 2, *(_BYTE *)(a1 + 28));
      }

      *(void *)(a1 + 72) = v20;
    }

    (*(void (**)(void *, void))(*(void *)v20 + 24LL))(v20, *(unsigned __int8 *)(a1 + 28));
    uint64_t v23 = (void **)(a1 + 72);
    uint64_t v22 = *(void *)(a1 + 72);
    int v24 = sub_100DDA67C(*a2);
    *(void *)std::stringbuf::string_type buf = sub_1006DDB1C(a1, v24);
    (*(void (**)(uint64_t, uint8_t *))(*(void *)v22 + 16LL))(v22, buf);
    goto LABEL_47;
  }

void sub_100DDCBF0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
}

void sub_100DDCC44(void *a1, int *a2)
{
  if (qword_101934560 != -1) {
    dispatch_once(&qword_101934560, &stru_101883CD8);
  }
  int v4 = (os_log_s *)qword_101934568;
  if (os_log_type_enabled((os_log_t)qword_101934568, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = *a2;
    *(_DWORD *)std::stringbuf::string_type buf = 67240192;
    int v21 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Stopping device motion, mode=%{public}#x",  buf,  8u);
  }

  uint64_t v6 = sub_1002921D0(115, 2);
  if ((_DWORD)v6)
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934560 != -1) {
      dispatch_once(&qword_101934560, &stru_101883CD8);
    }
    int v14 = *a2;
    int v18 = 67240192;
    int v19 = v14;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934568,  0LL,  "Stopping device motion, mode=%{public}#x",  &v18,  8);
    unsigned int v16 = (uint8_t *)v15;
    uint64_t v6 = sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLDeviceMotion::disableSensorFusionWithMode(const CLMotionTypeDeviceMotionMode &)",  "%s\n",  v15);
    if (v16 != buf) {
      free(v16);
    }
  }

  if (sub_100DDAA94(v6, a2))
  {
    int v7 = *a2;
    if (*a2 <= 18)
    {
      if (v7 <= 6)
      {
        if (v7 != 2)
        {
          if (v7 != 3) {
            goto LABEL_19;
          }
          goto LABEL_33;
        }

        sub_1004F2598();
        if ((sub_1004F97F4() & 0x80) != 0)
        {
          uint64_t v8 = a1[7];
          if (!v8) {
            return;
          }
        }

        else
        {
          uint64_t v8 = a1[5];
          if (!v8) {
            return;
          }
        }

void sub_100DDD008(float32x2_t *a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_100DDD01C(uint64_t a1, uint64_t a2)
{
  return sub_1006DD65C(a2, 6LL, a1, 8LL);
}

__n128 sub_100DDD030(uint64_t a1)
{
  *(double *)v2.i64 = (*(double (**)(uint64_t))(*(void *)a1 + 56LL))(a1);
  *(void *)(a1 + 56) = 0LL;
  *(void *)(a1 + 64) = 0LL;
  float32x4_t v6 = 0uLL;
  unint64_t v5 = 0xBFF0000000000000LL;
  sub_100833700(&v6, v2);
  *(_DWORD *)double v9 = 0;
  __int128 v7 = 0u;
  __int128 v8 = 0u;
  *(_OWORD *)&_OWORD v9[4] = xmmword_1012E2F40;
  *(void *)&v9[20] = 0x1FF00000000LL;
  *(_DWORD *)int v10 = 0;
  _DWORD v10[4] = 0;
  *(void *)&v10[12] = 0LL;
  *(void *)(a1 + 96) = v5;
  __int128 v3 = v8;
  *(_OWORD *)(a1 + 12sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = v7;
  *(_OWORD *)(a1 + 136) = v3;
  *(_OWORD *)(a1 + 152) = *(_OWORD *)v9;
  *(_OWORD *)(a1 + 164) = *(_OWORD *)&v9[12];
  __n128 result = *(__n128 *)v10;
  *(_OWORD *)(a1 + 18sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = *(_OWORD *)v10;
  *(_DWORD *)(a1 + 196) = *(_DWORD *)&v10[16];
  return result;
}

void sub_100DDD104(uint64_t a1, float32x2_t *a2, uint64_t a3)
{
  if (a3 <= 0xA)
  {
    if (((1 << a3) & 0x1C) != 0)
    {
      sub_1006DD528(a1, 2LL, (uint64_t)v9, 120LL);
      sub_1006DD528(a1, 3LL, (uint64_t)v9, 120LL);
      double v7 = *(double *)(a1 + 88);
      if (v7 >= 0.0)
      {
        float v8 = *(double *)(a1 + 96);
        sub_10070D310((uint64_t)v10, v8, v7);
      }

      else
      {
        v10[22] = 1127481344;
      }

      uint64_t v5 = a1;
      uint64_t v6 = 4LL;
    }

    else if (((1 << a3) & 0x221) != 0)
    {
      uint64_t v5 = a1;
      uint64_t v6 = a3;
    }

    else
    {
      if (((1 << a3) & 0x402) == 0) {
        return;
      }
      sub_1006DD528(a1, 1LL, (uint64_t)v9, 120LL);
      uint64_t v5 = a1;
      uint64_t v6 = 10LL;
    }

    sub_1006DD528(v5, v6, (uint64_t)v9, 120LL);
  }

void sub_100DDD220(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  if (!*a2)
  {
    *(void *)(a4 + 96) = *(void *)(a3 + 40);
    *(void *)(a4 + 8_Block_object_dispose(va, 8) = *(void *)(a3 + 56);
    if (qword_101934560 != -1) {
      dispatch_once(&qword_101934560, &stru_101883CD8);
    }
    uint64_t v5 = (os_log_s *)qword_101934568;
    if (os_log_type_enabled((os_log_t)qword_101934568, OS_LOG_TYPE_INFO))
    {
      uint64_t v7 = *(void *)(a4 + 88);
      uint64_t v6 = *(void *)(a4 + 96);
      *(_DWORD *)std::stringbuf::string_type buf = 134218240;
      uint64_t v18 = v6;
      __int16 v19 = 2048;
      uint64_t v20 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_INFO,  "Received geomagnetic model, declination,%f,timestamp,%f",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934560 != -1) {
        dispatch_once(&qword_101934560, &stru_101883CD8);
      }
      uint64_t v9 = *(void *)(a4 + 88);
      uint64_t v8 = *(void *)(a4 + 96);
      int v13 = 134218240;
      uint64_t v14 = v8;
      __int16 v15 = 2048;
      uint64_t v16 = v9;
      LODWORD(v12) = 22;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934568,  1LL,  "Received geomagnetic model, declination,%f,timestamp,%f",  COERCE_DOUBLE(&v13),  v12);
      int v11 = (uint8_t *)v10;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLDeviceMotion::onGeomagneticModelNotification(int, const CLGeomagneticModelProvider_Type::Notificat ion &, const CLGeomagneticModelProvider_Type::NotificationData &, void *)",  "%s\n",  v10);
      if (v11 != buf) {
        free(v11);
      }
    }
  }

void sub_100DDD400(id a1)
{
  qword_101934568 = (uint64_t)os_log_create("com.apple.locationd.Motion", "DeviceMotion");
}

void sub_100DDD42C(uint64_t a1, int a2)
{
  *(void *)sub_10025E204(a1, a2, 7, 1) = &off_101883D08;
  if ((sub_1004F97F4() & 0x80) == 0)
  {
    sub_101270D44();
    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Motion/DeviceMotion/CLSensorFusionServiceSPU.h",  67,  "CLSensorFusionService3AxisSPU");
    __break(1u);
  }

void sub_100DDD4A8(_Unwind_Exception *a1)
{
}

void sub_100DDD4C4(void *a1)
{
  uint64_t v1 = (void *)sub_10025E244(a1);
  operator delete(v1);
}

void sub_100DDD4D8(void *a1, int a2)
{
  char v4 = sub_1004FCB14();
  sub_10025E204((uint64_t)a1, a2, 5, v4);
  *a1 = &off_101883D70;
  if ((sub_1004F97F4() & 8) == 0)
  {
    sub_101270EA4();
    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Motion/DeviceMotion/CLSensorFusionServiceSPU.h",  57,  "CLSensorFusionService6AxisSPU");
    __break(1u);
  }

void sub_100DDD568(_Unwind_Exception *a1)
{
}

void sub_100DDD580(uint64_t a1, int a2)
{
  *(void *)sub_10025E204(a1, a2, 4, 1) = &off_101883DD8;
  if ((sub_1004F97F4() & 0x10) == 0)
  {
    sub_101271004();
    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Motion/DeviceMotion/CLSensorFusionServiceSPU.h",  46,  "CLSensorFusionService9AxisSPU");
    __break(1u);
  }

void sub_100DDD5FC(_Unwind_Exception *a1)
{
}

  ;
}

uint64_t sub_100DDD628(uint64_t a1)
{
  for (uint64_t i = 0LL; i != -72; i -= 24LL)
  {
  }

  return a1;
}

void sub_100DDD7A4(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_100DDD7C0(uint64_t a1, uint64_t a2, void *a3)
{
  char v6 = sub_100C6ACAC(a1);
  char v7 = v6;
  if (SHIBYTE(v35) < 0)
  {
    operator delete(*(void **)__p);
    if ((v7 & 1) == 0) {
      return;
    }
  }

  else if ((v6 & 1) == 0)
  {
    return;
  }

  uint64_t v8 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  uint64_t v9 = a3[6];
  if (a3[7] != v9)
  {
    unint64_t v10 = a3[9];
    int v11 = (void *)(v9 + 8 * (v10 / 0x11));
    double v12 = (double *)(*v11 + 232 * (v10 % 0x11));
    unint64_t v13 = *(void *)(v9 + 8 * ((a3[10] + v10) / 0x11)) + 232 * ((a3[10] + v10) % 0x11);
    while (v12 != (double *)v13)
    {
      id v14 = sub_100DE2EB4(v12, 1);
      -[NSMutableArray addObject:](v8, "addObject:", v14);

      v12 += 29;
      if ((double *)((char *)v12 - *v11) == (double *)3944)
      {
        __int16 v15 = (double *)v11[1];
        ++v11;
        double v12 = v15;
      }
    }
  }

  uint64_t v16 = -[NSUUID initWithUUIDBytes:](objc_alloc(&OBJC_CLASS___NSUUID), "initWithUUIDBytes:", a3);
  id v17 = [[CMWorkoutOverview alloc] initWithOverviewId:v16 workouts:v8];
  id v18 = sub_100DE2EB4((double *)a2, 0);
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_101883F10);
  }
  __int16 v19 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v20 = *(void *)(a2 + 16);
    *(_DWORD *)__int128 __p = 134218498;
    *(void *)&__p[4] = v20;
    __int16 v33 = 2112;
    id v34 = v18;
    __int16 v35 = 2112;
    id v36 = v17;
    _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "WorkoutSession, session update, event, %ld, workout, %@, overview, %@",  __p,  0x20u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_101883F10);
    }
    uint64_t v21 = *(void *)(a2 + 16);
    int v26 = 134218498;
    uint64_t v27 = v21;
    __int16 v28 = 2112;
    id v29 = v18;
    __int16 v30 = 2112;
    id v31 = v17;
    _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "WorkoutSession, session update, event, %ld, workout, %@, overview, %@",  &v26,  32);
    uint64_t v23 = (char *)v22;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWorkoutSubscription::onWorkoutSessionUpdate(CLMotionStateMediator_Type::WorkoutEvent, const CLMotionStateMe diator_Type::WorkoutSessionOverview &)",  "%s\n",  v22);
    if (v23 != __p) {
      free(v23);
    }
  }

  v24[0] = CMReturnCode;
  v25[0] = +[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", *(void *)(a2 + 16));
  v25[1] = v17;
  v24[1] = CMWorkoutOverviewData;
  v24[2] = CMWorkoutAttributes;
  void v25[2] = v18;
  *(void *)__int128 __p = +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v25,  v24,  3LL);
  sub_100DE4178(a1, __p);
}

void sub_100DDDB60( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, void *__p, uint64_t a22, int a23, __int16 a24, char a25, char a26)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100DDDBB0(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  char v7 = (void *)sub_100C6AAF0(a1, a2, a3, a4, a5);
  *char v7 = off_101883E40;
  v7[6] = 0LL;
  uint64_t v8 = (void **)(v7 + 41);
  v7[42] = 0LL;
  v7[43] = 0LL;
  v7[41] = 0LL;
  void v7[7] = 0LL;
  v7[8] = 0LL;
  sub_100468458((uint64_t)sub_100DDDD98, a1, a3, &v15);
  uint64_t v9 = v15;
  *(void *)&__int128 v15 = 0LL;
  uint64_t v10 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = v9;
  if (v10)
  {
    (*(void (**)(uint64_t))(*(void *)v10 + 8LL))(v10);
    uint64_t v11 = v15;
    *(void *)&__int128 v15 = 0LL;
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8LL))(v11);
    }
  }

  double v12 = -[CLWorkoutSubscriptionAdapter initWithWorkoutSubscription:]( objc_alloc(&OBJC_CLASS___CLWorkoutSubscriptionAdapter),  "initWithWorkoutSubscription:",  a1);
  *(void *)(a1 + 72) = v12;
  -[CLWorkoutSubscriptionAdapter setValid:](v12, "setValid:", 1LL);
  id v13 = objc_msgSend(objc_msgSend(a3, "vendor"), "proxyForService:", @"CLMotionStateMediator");
  *(void *)(a1 + 8sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = v13;
  objc_msgSend(v13, "registerDelegate:inSilo:", *(void *)(a1 + 72), objc_msgSend(a3, "silo"));
  *(int64x2_t *)(a1 + 8_Block_object_dispose(va, 8) = vdupq_n_s64(0x7FEFFFFFFFFFFFFFuLL);
  *(void *)(a1 + 104) = 23LL;
  *(void *)(a1 + 112) = 0x7FEFFFFFFFFFFFFFLL;
  *(_OWORD *)(a1 + 12sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 16_Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(a1 + sub_10000AE14(v2 + 184) = 0u;
  *(_OWORD *)(a1 + 20sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 24_Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 28sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0u;
  *(_OWORD *)(a1 + 296) = 0u;
  *(void *)(a1 + 312) = 0LL;
  *(_DWORD *)(a1 + 32sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 2;
  [*(id *)(*(void *)(a1 + 64) + 16) register:*(void *)(*(void *)(a1 + 64) + 8) forNotification:2 registrationInfo:0];
  [*(id *)(a1 + 80) registerForWorkoutSessionUpdates:*(void *)(a1 + 72)];
  sub_100DDDF70(a1, (uint64_t)&v15);
  *(_OWORD *)uint64_t v8 = v15;
  _DWORD v8[2] = v16;
  return a1;
}

void sub_100DDDD48(_Unwind_Exception *a1)
{
  uint64_t v5 = *(void *)(v1 + 64);
  *(void *)(v1 + 64) = 0LL;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
  }
  sub_10000AE14(v2);
  sub_100C6AB50(v1);
  _Unwind_Resume(a1);
}

void sub_100DDDD98(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101883EF0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLWorkoutSubscription::onMotionStateMediatorNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101883EF0);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      __int128 v15 = "";
      __int16 v16 = 2082;
      id v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLWorkoutSubscription::onMotionStateMediatorNotification, event:%{public, location: escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100DE3790(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100DDDF50( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DDDF70(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v4 = *(void **)(a1 + 24);
  if (v4)
  {
    [v4 clientName];
  }

  else
  {
    uint64_t v18 = 0LL;
    *(_OWORD *)__int128 __p = 0u;
    __int128 v17 = 0u;
    *(_OWORD *)__int128 v15 = 0u;
    __int128 v13 = 0u;
    memset(v14, 0, sizeof(v14));
    *(_OWORD *)char v11 = 0u;
    *(_OWORD *)double v12 = 0u;
    *(_OWORD *)uint64_t v9 = 0u;
    __int128 v10 = 0u;
    *(_OWORD *)uint64_t v8 = 0u;
  }

  sub_100FE370C((uint64_t)v8);
  if (SHIBYTE(v14[3]) >= 0) {
    uint64_t v5 = (void *)HIBYTE(v14[3]);
  }
  else {
    uint64_t v5 = v14[2];
  }
  if (SHIBYTE(v17) < 0) {
    operator delete(__p[1]);
  }
  if (SHIBYTE(__p[0]) < 0) {
    operator delete(v15[0]);
  }
  if (SHIBYTE(v14[3]) < 0) {
    operator delete(v14[1]);
  }
  if (SHIBYTE(v13) < 0) {
    operator delete(v12[1]);
  }
  if (SHIBYTE(v12[0]) < 0) {
    operator delete(v11[0]);
  }
  if (SHIBYTE(v10) < 0) {
    operator delete(v9[1]);
  }
  if (SHIBYTE(v9[0]) < 0)
  {
    operator delete(v8[0]);
    if (v5) {
      goto LABEL_21;
    }
LABEL_24:
    if (objc_msgSend(*(id *)(a1 + 24), "executablePath", v8[0], v8[1], v9[0])) {
      uint64_t v7 = (char *)objc_msgSend(objc_msgSend(*(id *)(a1 + 24), "executablePath"), "UTF8String");
    }
    else {
      uint64_t v7 = "";
    }
    sub_1010DDBC0((void *)a2, v7);
    return;
  }

  if (!v5) {
    goto LABEL_24;
  }
LABEL_21:
  char v6 = *(void **)(a1 + 24);
  if (v6)
  {
    [v6 clientName];
  }

  else
  {
    uint64_t v18 = 0LL;
    *(_OWORD *)__int128 __p = 0u;
    __int128 v17 = 0u;
    *(_OWORD *)__int128 v15 = 0u;
    __int128 v13 = 0u;
    memset(v14, 0, sizeof(v14));
    *(_OWORD *)char v11 = 0u;
    *(_OWORD *)double v12 = 0u;
    *(_OWORD *)uint64_t v9 = 0u;
    __int128 v10 = 0u;
    *(_OWORD *)uint64_t v8 = 0u;
  }

  sub_100FE370C((uint64_t)v8);
  if (SHIBYTE(v14[3]) < 0)
  {
    sub_1010DD48C((_BYTE *)a2, v14[1], (unint64_t)v14[2]);
  }

  else
  {
    *(_OWORD *)a2 = *(_OWORD *)&v14[1];
    *(void **)(a2 + 16) = v14[3];
  }

  if (SHIBYTE(v17) < 0) {
    operator delete(__p[1]);
  }
  if (SHIBYTE(__p[0]) < 0) {
    operator delete(v15[0]);
  }
  if (SHIBYTE(v14[3]) < 0) {
    operator delete(v14[1]);
  }
  if (SHIBYTE(v13) < 0) {
    operator delete(v12[1]);
  }
  if (SHIBYTE(v12[0]) < 0) {
    operator delete(v11[0]);
  }
  if (SHIBYTE(v10) < 0) {
    operator delete(v9[1]);
  }
  if (SHIBYTE(v9[0]) < 0) {
    operator delete(v8[0]);
  }
}

void sub_100DDE178( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100DDE194(uint64_t a1)
{
  *(void *)a1 = off_101883E40;
  uint64_t v2 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  if (sub_1000AC7C8((uint64_t)&unk_10199EAA8, (uint64_t)&qword_10199EAF0, (unsigned __int8 **)(a1 + 328))
     - (void)&unk_10199EAA8 != 72)
  {
    [*(id *)(a1 + 80) updateWorkoutReminderMuteSetting:0 mute:0];
    [*(id *)(a1 + 80) updateWorkoutReminderMuteSetting:1 mute:0];
    [*(id *)(a1 + 80) updateWorkoutReminderMuteSetting:2 mute:0];
  }

  [*(id *)(a1 + 80) unregisterForWorkoutSessionUpdates:*(void *)(a1 + 72)];

  *(void *)(a1 + 8sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0LL;
  [*(id *)(a1 + 72) setValid:0];

  *(void *)(a1 + 72) = 0LL;
  uint64_t v3 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  sub_10000AE14(a1 + 48);
  return sub_100C6AB50(a1);
}

void sub_100DDE2AC(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100DDE194(a1);
  operator delete(v1);
}

void *sub_100DDE2C0@<X0>(uint64_t a1@<X8>)
{
  v52[0] = &off_101883F60;
  v52[1] = sub_100DDEB9C;
  uint64_t v52[2] = 0LL;
  uint64_t v53 = v52;
  sub_1010DDBC0(v54, "kCLConnectionMessageWorkoutEvent");
  sub_1008999B0((uint64_t)&v55, (uint64_t)v52);
  int v49 = &off_101884010;
  v50[0] = sub_100DDEE88;
  v50[1] = 0LL;
  unsigned int v51 = &v49;
  sub_1010DDBC0(v56, "kCLConnectionMessageSetWorkoutTimeout");
  sub_1008999B0((uint64_t)&v57, (uint64_t)&v49);
  v47[0] = &off_101884010;
  v47[1] = sub_100DDF334;
  v47[2] = 0LL;
  __int16 v48 = v47;
  sub_1010DDBC0(v58, "kCLConnectionMessageUserDismissedWorkoutAlert");
  sub_1008999B0((uint64_t)&v59, (uint64_t)v47);
  v45[0] = &off_101884010;
  v45[1] = sub_100DDF42C;
  v45[2] = 0LL;
  __int16 v46 = v45;
  sub_1010DDBC0(v60, "kCLConnectionMessageWorkoutPrompts");
  sub_1008999B0((uint64_t)&v61, (uint64_t)v45);
  v43[0] = &off_101884010;
  v43[1] = sub_100DDF61C;
  v43[2] = 0LL;
  uint64_t v44 = v43;
  sub_1010DDBC0(v62, "kCLConnectionMessageTriggerWorkoutLocationEventForTesting");
  sub_1008999B0((uint64_t)&v63, (uint64_t)v43);
  v41[0] = &off_101884010;
  v41[1] = sub_100DDF858;
  v41[2] = 0LL;
  unsigned int v42 = v41;
  sub_1010DDBC0(v64, "kCLConnectionMessageBeginWorkoutSession");
  sub_1008999B0((uint64_t)&v65, (uint64_t)v41);
  v39[0] = &off_101884010;
  v39[1] = sub_100DE0850;
  id v39[2] = 0LL;
  int v40 = v39;
  sub_1010DDBC0(v66, "kCLConnectionMessageEndWorkoutSession");
  sub_1008999B0((uint64_t)&v67, (uint64_t)v39);
  v37[0] = &off_101884010;
  v37[1] = sub_100DE0E10;
  void v37[2] = 0LL;
  unsigned int v38 = v37;
  sub_1010DDBC0(v68, "kCLConnectionMessageSetCurrentWorkoutType");
  sub_1008999B0((uint64_t)&v69, (uint64_t)v37);
  v35[0] = &off_101884010;
  v35[1] = sub_100DE13D8;
  void v35[2] = 0LL;
  id v36 = v35;
  sub_1010DDBC0(v70, "kCLConnectionMessagePauseWorkout");
  sub_1008999B0((uint64_t)&v71, (uint64_t)v35);
  v33[0] = &off_101884010;
  v33[1] = sub_100DE1980;
  _OWORD v33[2] = 0LL;
  id v34 = v33;
  sub_1010DDBC0(v72, "kCLConnectionMessageResumeWorkout");
  sub_1008999B0((uint64_t)&v73, (uint64_t)v33);
  v31[0] = &off_101884010;
  v31[1] = sub_100DE1F28;
  v31[2] = 0LL;
  uint64_t v32 = v31;
  sub_1010DDBC0(v74, "kCLConnectionMessageWorkoutSnapshot");
  sub_1008999B0((uint64_t)&v75, (uint64_t)v31);
  v29[0] = &off_101884010;
  v29[1] = sub_100DE2098;
  void v29[2] = 0LL;
  __int16 v30 = v29;
  sub_1010DDBC0(v76, "kCLConnectionMessageUpdateWorkoutReminderMuteSetting");
  sub_1008999B0((uint64_t)&v77, (uint64_t)v29);
  sub_100DE47A4(a1, (unsigned __int8 *)v54, 12LL);
  uint64_t v2 = 84LL;
  do
  {
    uint64_t v3 = (void *)v54[v2 - 1];
    if (&v52[v2] == v3)
    {
      uint64_t v3 = &v52[v2];
      uint64_t v4 = 4LL;
    }

    else
    {
      if (!v3) {
        goto LABEL_7;
      }
      uint64_t v4 = 5LL;
    }

    (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_7:
    if (SHIBYTE((&v51)[v2]) < 0) {
      operator delete((void *)v50[v2]);
    }
    v2 -= 7LL;
  }

  while (v2 * 8);
  uint64_t v5 = v30;
  if (v30 == v29)
  {
    uint64_t v6 = 4LL;
    uint64_t v5 = v29;
LABEL_14:
    (*(void (**)(void))(*v5 + 8 * v6))();
  }

  else if (v30)
  {
    uint64_t v6 = 5LL;
    goto LABEL_14;
  }

  uint64_t v7 = v32;
  if (v32 == v31)
  {
    uint64_t v8 = 4LL;
    uint64_t v7 = v31;
LABEL_19:
    (*(void (**)(void))(*v7 + 8 * v8))();
  }

  else if (v32)
  {
    uint64_t v8 = 5LL;
    goto LABEL_19;
  }

  uint64_t v9 = v34;
  if (v34 == v33)
  {
    uint64_t v10 = 4LL;
    uint64_t v9 = v33;
LABEL_24:
    (*(void (**)(void))(*v9 + 8 * v10))();
  }

  else if (v34)
  {
    uint64_t v10 = 5LL;
    goto LABEL_24;
  }

  char v11 = v36;
  if (v36 == v35)
  {
    uint64_t v12 = 4LL;
    char v11 = v35;
LABEL_29:
    (*(void (**)(void))(*v11 + 8 * v12))();
  }

  else if (v36)
  {
    uint64_t v12 = 5LL;
    goto LABEL_29;
  }

  __int128 v13 = v38;
  if (v38 == v37)
  {
    uint64_t v14 = 4LL;
    __int128 v13 = v37;
LABEL_34:
    (*(void (**)(void))(*v13 + 8 * v14))();
  }

  else if (v38)
  {
    uint64_t v14 = 5LL;
    goto LABEL_34;
  }

  __int128 v15 = v40;
  if (v40 == v39)
  {
    uint64_t v16 = 4LL;
    __int128 v15 = v39;
LABEL_39:
    (*(void (**)(void))(*v15 + 8 * v16))();
  }

  else if (v40)
  {
    uint64_t v16 = 5LL;
    goto LABEL_39;
  }

  __int128 v17 = v42;
  if (v42 == v41)
  {
    uint64_t v18 = 4LL;
    __int128 v17 = v41;
LABEL_44:
    (*(void (**)(void))(*v17 + 8 * v18))();
  }

  else if (v42)
  {
    uint64_t v18 = 5LL;
    goto LABEL_44;
  }

  uint64_t v19 = v44;
  if (v44 == v43)
  {
    uint64_t v20 = 4LL;
    uint64_t v19 = v43;
LABEL_49:
    (*(void (**)(void))(*v19 + 8 * v20))();
  }

  else if (v44)
  {
    uint64_t v20 = 5LL;
    goto LABEL_49;
  }

  uint64_t v21 = v46;
  if (v46 == v45)
  {
    uint64_t v22 = 4LL;
    uint64_t v21 = v45;
LABEL_54:
    (*(void (**)(void))(*v21 + 8 * v22))();
  }

  else if (v46)
  {
    uint64_t v22 = 5LL;
    goto LABEL_54;
  }

  uint64_t v23 = v48;
  if (v48 == v47)
  {
    uint64_t v24 = 4LL;
    uint64_t v23 = v47;
LABEL_59:
    (*(void (**)(void))(*v23 + 8 * v24))();
  }

  else if (v48)
  {
    uint64_t v24 = 5LL;
    goto LABEL_59;
  }

  char v25 = v51;
  if (v51 == &v49)
  {
    uint64_t v26 = 4LL;
    char v25 = &v49;
LABEL_64:
    (*v25)[v26]();
  }

  else if (v51)
  {
    uint64_t v26 = 5LL;
    goto LABEL_64;
  }

  __n128 result = v53;
  if (v53 == v52)
  {
    uint64_t v28 = 4LL;
    __n128 result = v52;
    return (void *)(*(uint64_t (**)(void))(*result + 8 * v28))();
  }

  else if (v53)
  {
    uint64_t v28 = 5LL;
    return (void *)(*(uint64_t (**)(void))(*result + 8 * v28))();
  }

  return result;
}

void sub_100DDE878( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char *a13, char a14, uint64_t a15, uint64_t a16, char *a17, char a18, uint64_t a19, uint64_t a20, char *a21, char a22, uint64_t a23, uint64_t a24, char *a25, char a26, uint64_t a27, uint64_t a28, char *a29, char a30, uint64_t a31, uint64_t a32, char *a33, char a34, uint64_t a35, uint64_t a36, char *a37, char a38, uint64_t a39, uint64_t a40, char *a41, char a42, uint64_t a43, uint64_t a44, char *a45, char a46, uint64_t a47, uint64_t a48, char *a49, char a50,uint64_t a51,uint64_t a52,char *a53,char a54,uint64_t a55,uint64_t a56,char *a57)
{
  for (uint64_t i = 616LL; i != -56; i -= 56LL)
    sub_10026E430(v57 + i);
  double v60 = a13;
  if (a13 == &a10)
  {
    uint64_t v61 = 4LL;
    double v60 = &a10;
  }

  else
  {
    if (!a13) {
      goto LABEL_8;
    }
    uint64_t v61 = 5LL;
  }

  (*(void (**)(void))(*(void *)v60 + 8 * v61))();
LABEL_8:
  __int16 v62 = a17;
  if (a17 == &a14)
  {
    uint64_t v63 = 4LL;
    __int16 v62 = &a14;
  }

  else
  {
    if (!a17) {
      goto LABEL_13;
    }
    uint64_t v63 = 5LL;
  }

  (*(void (**)(void))(*(void *)v62 + 8 * v63))();
LABEL_13:
  __int16 v64 = a21;
  if (a21 == &a18)
  {
    uint64_t v65 = 4LL;
    __int16 v64 = &a18;
  }

  else
  {
    if (!a21) {
      goto LABEL_18;
    }
    uint64_t v65 = 5LL;
  }

  (*(void (**)(void))(*(void *)v64 + 8 * v65))();
LABEL_18:
  __int16 v66 = a25;
  if (a25 == &a22)
  {
    uint64_t v67 = 4LL;
    __int16 v66 = &a22;
  }

  else
  {
    if (!a25) {
      goto LABEL_23;
    }
    uint64_t v67 = 5LL;
  }

  (*(void (**)(void))(*(void *)v66 + 8 * v67))();
LABEL_23:
  __int16 v68 = a29;
  if (a29 == &a26)
  {
    uint64_t v69 = 4LL;
    __int16 v68 = &a26;
  }

  else
  {
    if (!a29) {
      goto LABEL_28;
    }
    uint64_t v69 = 5LL;
  }

  (*(void (**)(void))(*(void *)v68 + 8 * v69))();
LABEL_28:
  __int16 v70 = a33;
  if (a33 == &a30)
  {
    uint64_t v71 = 4LL;
    __int16 v70 = &a30;
  }

  else
  {
    if (!a33) {
      goto LABEL_33;
    }
    uint64_t v71 = 5LL;
  }

  (*(void (**)(void))(*(void *)v70 + 8 * v71))();
LABEL_33:
  uint64_t v72 = a37;
  if (a37 == &a34)
  {
    uint64_t v73 = 4LL;
    uint64_t v72 = &a34;
  }

  else
  {
    if (!a37) {
      goto LABEL_38;
    }
    uint64_t v73 = 5LL;
  }

  (*(void (**)(void))(*(void *)v72 + 8 * v73))();
LABEL_38:
  int v74 = a41;
  if (a41 == &a38)
  {
    uint64_t v75 = 4LL;
    int v74 = &a38;
  }

  else
  {
    if (!a41) {
      goto LABEL_43;
    }
    uint64_t v75 = 5LL;
  }

  (*(void (**)(void))(*(void *)v74 + 8 * v75))();
LABEL_43:
  unsigned int v76 = a45;
  if (a45 == &a42)
  {
    uint64_t v77 = 4LL;
    unsigned int v76 = &a42;
  }

  else
  {
    if (!a45) {
      goto LABEL_48;
    }
    uint64_t v77 = 5LL;
  }

  (*(void (**)(void))(*(void *)v76 + 8 * v77))();
LABEL_48:
  double v78 = a49;
  if (a49 == &a46)
  {
    uint64_t v79 = 4LL;
    double v78 = &a46;
  }

  else
  {
    if (!a49) {
      goto LABEL_53;
    }
    uint64_t v79 = 5LL;
  }

  (*(void (**)(void))(*(void *)v78 + 8 * v79))();
LABEL_53:
  uint64_t v80 = a53;
  if (a53 == &a50)
  {
    uint64_t v81 = 4LL;
    uint64_t v80 = &a50;
  }

  else
  {
    if (!a53) {
      goto LABEL_58;
    }
    uint64_t v81 = 5LL;
  }

  (*(void (**)(void))(*(void *)v80 + 8 * v81))();
LABEL_58:
  int v82 = a57;
  if (a57 == &a54)
  {
    uint64_t v83 = 4LL;
    int v82 = &a54;
  }

  else
  {
    if (!a57) {
      goto LABEL_63;
    }
    uint64_t v83 = 5LL;
  }

  (*(void (**)(void))(*(void *)v82 + 8 * v83))();
LABEL_63:
  _Unwind_Resume(a1);
}

void sub_100DDEB44()
{
}

void sub_100DDEB50()
{
}

void sub_100DDEB5C()
{
}

void sub_100DDEB68()
{
}

void sub_100DDEB74()
{
}

void sub_100DDEB80()
{
}

void sub_100DDEB8C()
{
}

void sub_100DDEB9C(uint64_t a1, int a2)
{
  uint64_t v4 = objc_alloc_init(&OBJC_CLASS___NSAutoreleasePool);
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_101883F10);
  }
  uint64_t v5 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(a1 + 24);
    *(_DWORD *)std::stringbuf::string_type buf = 67109634;
    *(_DWORD *)&uint8_t buf[4] = a2;
    __int16 v20 = 2112;
    uint64_t v21 = v6;
    __int16 v22 = 2048;
    uint64_t v23 = a1;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Workout, event subscription changed, %d, %@, %p",  buf,  0x1Cu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_101883F10);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    v14[0] = 67109634;
    v14[1] = a2;
    __int16 v15 = 2112;
    uint64_t v16 = v7;
    __int16 v17 = 2048;
    uint64_t v18 = a1;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Workout, event subscription changed, %d, %@, %p",  v14,  28);
    uint64_t v9 = (uint8_t *)v8;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWorkoutSubscription::handleRequestWorkoutEvent(BOOL, const CLNameValuePair &)",  "%s\n",  v8);
    if (v9 != buf) {
      free(v9);
    }
  }

  if ((sub_100C6ADE0(a1) & 1) != 0)
  {
    sub_1004F2598();
    if ((sub_1004F97F4() & 0x100000000LL) != 0)
    {
      sub_100C6AC8C(a1);
    }

    else
    {
      uint64_t v10 = CMErrorMessage;
      char v11 = &off_1018D4628;
      *(void *)std::stringbuf::string_type buf = +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v11,  &v10,  1LL);
      sub_100DE2598(a1, buf);
    }
  }

  else
  {
    uint64_t v12 = CMErrorMessage;
    __int128 v13 = &off_1018D4610;
    *(void *)std::stringbuf::string_type buf = +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v13,  &v12,  1LL);
    sub_100DE2598(a1, buf);
  }
}

void sub_100DDEE50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100DDEE88(uint64_t a1, CLConnectionMessage **a2)
{
  uint64_t v4 = objc_alloc_init(&OBJC_CLASS___NSAutoreleasePool);
  char v5 = sub_100DE2638(a1, (int *)&v20 + 1);
  uint64_t v6 = *a2;
  if ((v5 & 1) != 0)
  {
    Dictionary = (void *)CLConnectionMessage::getDictionary(*a2);
    uint64_t v8 = Dictionary;
    if (Dictionary && (uint64_t v9 = CMWorkoutTimeout, [Dictionary objectForKeyedSubscript:CMWorkoutTimeout]))
    {
      objc_msgSend(objc_msgSend(v8, "objectForKeyedSubscript:", v9), "doubleValue");
      if (*(void *)(a1 + 48))
      {
        double v11 = v10;
        if (qword_101934680 != -1) {
          dispatch_once(&qword_101934680, &stru_101883F10);
        }
        uint64_t v12 = (os_log_s *)qword_101934688;
        if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)std::stringbuf::string_type buf = 134217984;
          double v28 = v11;
          _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "Workout, setting workout timeout %f.",  buf,  0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934680 != -1) {
            dispatch_once(&qword_101934680, &stru_101883F10);
          }
          int v23 = 134217984;
          double v24 = v11;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Workout, setting workout timeout %f.",  COERCE_DOUBLE(&v23));
          __int16 v17 = (uint8_t *)v16;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWorkoutSubscription::handleMessageSetWorkoutTimeout(std::shared_ptr<CLConnectionMessage>)",  "%s\n",  v16);
          if (v17 != buf) {
            free(v17);
          }
        }

        [*(id *)(a1 + 80) setWorkoutSuggestedStopTimeout:v11];
        __int128 v13 = *a2;
        uint64_t v21 = CMReturnCode;
        __int16 v22 = &__kCFBooleanTrue;
        +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v22,  &v21,  1LL);
      }

      else
      {
        if (qword_101934680 != -1) {
          dispatch_once(&qword_101934680, &stru_101883F10);
        }
        __int16 v15 = (os_log_s *)qword_101934688;
        if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)std::stringbuf::string_type buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "No active workouts to set a timeout for!",  buf,  2u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934680 != -1) {
            dispatch_once(&qword_101934680, &stru_101883F10);
          }
          LOWORD(v23) = 0;
          LODWORD(v2sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 2;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  2LL,  "No active workouts to set a timeout for!",  &v23,  v20);
          uint64_t v19 = (uint8_t *)v18;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWorkoutSubscription::handleMessageSetWorkoutTimeout(std::shared_ptr<CLConnectionMessage>)",  "%s\n",  v18);
          if (v19 != buf) {
            free(v19);
          }
        }

        __int128 v13 = *a2;
        uint64_t v25 = CMErrorMessage;
        uint64_t v26 = &off_1018D4658;
        +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v26,  &v25,  1LL);
      }

      CLConnectionMessage::sendReply(v13);
    }

    else
    {
      uint64_t v14 = *a2;
      uint64_t v29 = CMErrorMessage;
      __int16 v30 = &off_1018D4640;
      +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v30,  &v29,  1LL);
      CLConnectionMessage::sendReply(v14);
    }
  }

  else
  {
    uint64_t v31 = CMErrorMessage;
    uint64_t v32 = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", HIDWORD(v20));
    +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v32,  &v31,  1LL);
    CLConnectionMessage::sendReply(v6);
  }
}

void sub_100DDF2FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100DDF334(uint64_t a1)
{
  uint64_t v2 = objc_alloc_init(&OBJC_CLASS___NSAutoreleasePool);
  if ((sub_100C6ADE0(a1) & 1) != 0)
  {
    objc_msgSend( objc_msgSend(objc_msgSend(*(id *)(a1 + 8), "vendor"), "proxyForService:", @"CLMotionStateMediator"),  "userDismissedWorkoutAlert");
  }

  else
  {
    uint64_t v4 = CMErrorMessage;
    char v5 = &off_1018D4610;
    uint64_t v3 = +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v5,  &v4,  1LL);
    sub_100DE2598(a1, &v3);
  }
}

void sub_100DDF400(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_100006BB8(exception_object);
}

void sub_100DDF42C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = objc_alloc_init(&OBJC_CLASS___NSAutoreleasePool);
  unsigned int v9 = 103;
  if ((sub_100DE2638(a1, (int *)&v9) & 1) != 0)
  {
    uint64_t v5 = sub_100DE26F4(a1) ^ 1;
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_101883F30);
    }
    uint64_t v6 = (os_log_s *)qword_1019344D8;
    if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289283;
      int v13 = 0;
      __int16 v14 = 2082;
      __int16 v15 = "";
      __int16 v16 = 2049;
      uint64_t v17 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:Calibration prompt, needed:%{private}ld}",  buf,  0x1Cu);
    }

    uint64_t v7 = *a2;
    uint64_t v10 = CMReturnCode;
    double v11 = +[NSNumber numberWithUnsignedInteger:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInteger:", v5);
    +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v11,  &v10,  1LL);
    CLConnectionMessage::sendReply(v7);
  }

  else
  {
    uint64_t v8 = *a2;
    uint64_t v18 = CMErrorMessage;
    uint64_t v19 = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v9);
    +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v19,  &v18,  1LL);
    CLConnectionMessage::sendReply(v8);
  }
}

void sub_100DDF5F0(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_100006BB8(exception_object);
}

void sub_100DDF61C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = objc_alloc_init(&OBJC_CLASS___NSAutoreleasePool);
  char v5 = sub_100DE2638(a1, (int *)&v18);
  uint64_t v6 = *(CLConnectionMessage **)a2;
  if ((v5 & 1) != 0)
  {
    Dictionary = (void *)CLConnectionMessage::getDictionary(*(CLConnectionMessage **)a2);
    uint64_t v8 = Dictionary;
    if (Dictionary
      && (uint64_t v9 = CMWorkoutTriggerWorkoutLocationEventForTesting,
          [Dictionary objectForKeyedSubscript:CMWorkoutTriggerWorkoutLocationEventForTesting]))
    {
      objc_msgSend(objc_msgSend(v8, "objectForKeyedSubscript:", v9), "integerValue");
      uint64_t v10 = *(void **)(*(void *)(a1 + 64) + 16LL);
      double v11 = *(std::__shared_weak_count **)(a2 + 8);
      uint64_t v17 = v11;
      if (v11)
      {
        p_shared_owners = (unint64_t *)&v11->__shared_owners_;
        do
          unint64_t v13 = __ldxr(p_shared_owners);
        while (__stxr(v13 + 1, p_shared_owners));
      }

      objc_msgSend(v10, "triggerWorkoutLocationEventForTesting:withReply:");
      if (v17)
      {
        __int16 v14 = (unint64_t *)&v17->__shared_owners_;
        do
          unint64_t v15 = __ldaxr(v14);
        while (__stlxr(v15 - 1, v14));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
    }

    else
    {
      __int16 v16 = *(CLConnectionMessage **)a2;
      uint64_t v19 = CMErrorMessage;
      uint64_t v20 = &off_1018D4640;
      +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v20,  &v19,  1LL);
      CLConnectionMessage::sendReply(v16);
    }
  }

  else
  {
    uint64_t v21 = CMErrorMessage;
    __int16 v22 = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v18);
    +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v22,  &v21,  1LL);
    CLConnectionMessage::sendReply(v6);
  }
}

void sub_100DDF818(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100DDF858(uint64_t a1, CLConnectionMessage **a2)
{
  void (**v32)(_BYTE *__return_ptr);
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  os_log_s *v36;
  uint64_t v37;
  os_log_s *v38;
  os_log_s *v39;
  CLConnectionMessage *v40;
  uint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  void *j;
  double v46;
  void *v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  CLConnectionMessage *v53;
  const char *v54;
  char *v55;
  const char *v56;
  char *v57;
  uint64_t v58;
  const char *v59;
  char *v60;
  uint64_t v61;
  const char *v62;
  char *v63;
  const char *v64;
  char *v65;
  const char *v66;
  char *v67;
  uint64_t v68;
  unsigned int v69;
  id v70;
  NSAutoreleasePool *v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  unsigned int v80;
  uint64_t v81;
  _UNKNOWN **v82;
  uint64_t v83;
  _UNKNOWN **v84;
  __int128 v85[5];
  _OWORD v86[10];
  uint64_t v87;
  char v88[128];
  int out;
  id out_4;
  __int16 out_12;
  void out_14[10];
  uuid_t uu;
  uint64_t v94;
  _UNKNOWN **v95;
  uint64_t v96;
  _UNKNOWN **v97;
  _BYTE v98[128];
  uint64_t v99;
  _UNKNOWN **v100;
  _BYTE buf[24];
  uint64_t v102;
  __int16 v103;
  uint64_t v104;
  uint64_t v105;
  _UNKNOWN **v106;
  uint64_t v107;
  NSNumber *v108;
  uint64_t v71 = objc_alloc_init(&OBJC_CLASS___NSAutoreleasePool);
  if ((sub_100DE2638(a1, (int *)&v80) & 1) == 0)
  {
    unsigned int v18 = *a2;
    double v107 = CMErrorMessage;
    unsigned int v108 = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v80);
    +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v108,  &v107,  1LL);
    CLConnectionMessage::sendReply(v18);
    goto LABEL_15;
  }

  objc_opt_class(&OBJC_CLASS___CMWorkoutOverview);
  uint64_t v5 = v4;
  objc_opt_class(&OBJC_CLASS___CMWorkout);
  uint64_t v7 = v6;
  *(void *)&double v8 = objc_opt_class(&OBJC_CLASS___NSString).n128_u64[0];
  DictionaryOfClasses = (void *)CLConnectionMessage::getDictionaryOfClasses( *a2,  +[NSSet setWithObjects:](&OBJC_CLASS___NSSet, "setWithObjects:", v5, v8, v7, v9, 0LL));
  double v11 = DictionaryOfClasses;
  if (!DictionaryOfClasses
    || (uint64_t v12 = CMWorkoutAttributes, ![DictionaryOfClasses objectForKeyedSubscript:CMWorkoutAttributes])
    || (uint64_t v13 = CMWorkoutOverviewData, ![v11 objectForKeyedSubscript:CMWorkoutOverviewData]))
  {
    uint64_t v19 = *a2;
    int64x2_t v105 = CMErrorMessage;
    unsigned int v106 = &off_1018D4640;
    +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v106,  &v105,  1LL);
    CLConnectionMessage::sendReply(v19);
    goto LABEL_15;
  }

  id v14 = [v11 objectForKeyedSubscript:v12];
  __int16 v70 = [v11 objectForKeyedSubscript:v13];
  unsigned int v15 = objc_msgSend( objc_msgSend(v11, "objectForKeyedSubscript:", CMWorkoutEnableWorkoutChangeDetection),  "BOOLValue");
  if (v15 && (unint64_t)objc_msgSend(objc_msgSend(v70, "workouts"), "count") <= 1)
  {
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_101883F10);
    }
    __int16 v16 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 138412546;
      *(void *)&uint8_t buf[4] = v14;
      *(_WORD *)&_BYTE buf[12] = 2112;
      *(void *)&_BYTE buf[14] = v70;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_ERROR,  "WorkoutSession, client requested detection but no priors exist, %@, %@",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_101883F10);
      }
      out = 138412546;
      out_4 = v14;
      out_12 = 2112;
      out_14[0] = v70;
      LODWORD(v6_Block_object_dispose(va, 8) = 22;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  16LL,  "WorkoutSession, client requested detection but no priors exist, %@, %@",  &out,  v68);
      uint64_t v57 = (char *)v56;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLWorkoutSubscription::handleMessageBeginWorkoutSession(std::shared_ptr<CLConnectionMessage>)",  "%s\n",  v56);
      if (v57 != buf) {
        free(v57);
      }
    }

    uint64_t v17 = *a2;
    double v99 = CMErrorMessage;
    double v100 = &off_1018D4640;
    +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v100,  &v99,  1LL);
    CLConnectionMessage::sendReply(v17);
    goto LABEL_15;
  }

  double v78 = 0u;
  uint64_t v79 = 0u;
  unsigned int v76 = 0u;
  uint64_t v77 = 0u;
  id v20 = [v70 workouts];
  id v21 = [v20 countByEnumeratingWithState:&v76 objects:v98 count:16];
  uint64_t v69 = v15;
  char v22 = 0;
  if (v21)
  {
    uint64_t v23 = *(void *)v77;
    do
    {
      for (uint64_t i = 0LL; i != v21; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v77 != v23) {
          objc_enumerationMutation(v20);
        }
        uint64_t v25 = *(void **)(*((void *)&v76 + 1) + 8LL * (void)i);
        id v26 = [v25 type];
        if (v26 == [v14 type])
        {
          id v27 = [v25 locationType];
          v22 |= v27 == [v14 locationType];
        }
      }

      id v21 = [v20 countByEnumeratingWithState:&v76 objects:v98 count:16];
    }

    while (v21);
  }

  if (v69 && (v22 & 1) == 0)
  {
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_101883F10);
    }
    double v28 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 138412546;
      *(void *)&uint8_t buf[4] = v14;
      *(_WORD *)&_BYTE buf[12] = 2112;
      *(void *)&_BYTE buf[14] = v70;
      _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_ERROR,  "WorkoutSession, workout overview doesn't include the current workout, %@, %@",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_101883F10);
      }
      out = 138412546;
      out_4 = v14;
      out_12 = 2112;
      out_14[0] = v70;
      LODWORD(v6_Block_object_dispose(va, 8) = 22;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  16LL,  "WorkoutSession, workout overview doesn't include the current workout, %@, %@",  &out,  v68);
      uint64_t v55 = (char *)v54;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLWorkoutSubscription::handleMessageBeginWorkoutSession(std::shared_ptr<CLConnectionMessage>)",  "%s\n",  v54);
      if (v55 != buf) {
        free(v55);
      }
    }

    uint64_t v29 = *a2;
    int v96 = CMErrorMessage;
    int v97 = &off_1018D4640;
    +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v97,  &v96,  1LL);
LABEL_40:
    CLConnectionMessage::sendReply(v29);
    goto LABEL_15;
  }

  if (*(void *)(a1 + 48))
  {
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_101883F10);
    }
    __int16 v30 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_FAULT))
    {
      uint64_t v31 = *(void *)(a1 + 24);
      *(_DWORD *)std::stringbuf::string_type buf = 138412802;
      *(void *)&uint8_t buf[4] = v14;
      *(_WORD *)&_BYTE buf[12] = 2112;
      *(void *)&_BYTE buf[14] = v31;
      *(_WORD *)&_BYTE buf[22] = 2048;
      int v102 = a1;
      _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_FAULT,  "WorkoutSession, duplicate session begin, %@, %@, %p",  buf,  0x20u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_101883F10);
      }
      __int16 v58 = *(void *)(a1 + 24);
      out = 138412802;
      out_4 = v14;
      out_12 = 2112;
      out_14[0] = v58;
      LOWORD(out_14[1]) = 2048;
      *(void *)((char *)&out_14[1] + 2) = a1;
      LODWORD(v6_Block_object_dispose(va, 8) = 32;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  17LL,  "WorkoutSession, duplicate session begin, %@, %@, %p",  &out,  v68);
      double v60 = (char *)v59;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLWorkoutSubscription::handleMessageBeginWorkoutSession(std::shared_ptr<CLConnectionMessage>)",  "%s\n",  v59);
      if (v60 != buf) {
        free(v60);
      }
    }

    uint64_t v29 = *a2;
    int v94 = CMErrorMessage;
    int v95 = &off_1018D4658;
    +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v95,  &v94,  1LL);
    goto LABEL_40;
  }

  uint64_t v32 = (void (**)(_BYTE *__return_ptr))[*(id *)(*(void *)(a1 + 64) + 16) syncgetActivityOverride];
  if (v32)
  {
    v32[2](buf);
  }

  else
  {
    *(void *)&uint8_t buf[8] = 0LL;
    *(void *)std::stringbuf::string_type buf = 0LL;
  }

  sub_10005F550(a1 + 48, (__int128 *)buf);
  __int16 v33 = *(std::__shared_weak_count **)&buf[8];
  if (*(void *)&buf[8])
  {
    id v34 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      __int16 v35 = __ldaxr(v34);
    while (__stlxr(v35 - 1, v34));
    if (!v35)
    {
      ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
      std::__shared_weak_count::__release_weak(v33);
    }
  }

  if (*(void *)(a1 + 48))
  {
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_101883F10);
    }
    id v36 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
    {
      __int16 v37 = *(void *)(a1 + 24);
      *(_DWORD *)std::stringbuf::string_type buf = 138413058;
      *(void *)&uint8_t buf[4] = v70;
      *(_WORD *)&_BYTE buf[12] = 2112;
      *(void *)&_BYTE buf[14] = v14;
      *(_WORD *)&_BYTE buf[22] = 2112;
      int v102 = v37;
      uint64_t v103 = 2048;
      unsigned int v104 = a1;
      _os_log_impl( (void *)&_mh_execute_header,  v36,  OS_LOG_TYPE_DEFAULT,  "WorkoutSession, beginning session, overview, %@, workout, %@, %@, %p",  buf,  0x2Au);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_101883F10);
      }
      uint64_t v61 = *(void *)(a1 + 24);
      out = 138413058;
      out_4 = v70;
      out_12 = 2112;
      out_14[0] = v14;
      LOWORD(out_14[1]) = 2112;
      *(void *)((char *)&out_14[1] + 2) = v61;
      WORD1(out_14[2]) = 2048;
      *(void *)((char *)&out_14[2] + 4) = a1;
      LODWORD(v6_Block_object_dispose(va, 8) = 42;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "WorkoutSession, beginning session, overview, %@, workout, %@, %@, %p",  &out,  v68);
      uint64_t v63 = (char *)v62;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWorkoutSubscription::handleMessageBeginWorkoutSession(std::shared_ptr<CLConnectionMessage>)",  "%s\n",  v62);
      if (v63 != buf) {
        free(v63);
      }
    }

    if (!uuid_is_null((const unsigned __int8 *)(a1 + 168)))
    {
      uuid_unparse((const unsigned __int8 *)(a1 + 168), (char *)&out);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_101883F10);
      }
      unsigned int v38 = (os_log_s *)qword_101934688;
      if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 136446210;
        *(void *)&uint8_t buf[4] = &out;
        _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_FAULT,  "WorkoutSession, overviewId unitialized or already present when beginning a new session, clearing, prevOverviewId, %{public}s",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934680 != -1) {
          dispatch_once(&qword_101934680, &stru_101883F10);
        }
        *(_DWORD *)uu = 136446210;
        *(void *)&uu[4] = &out;
        LODWORD(v6_Block_object_dispose(va, 8) = 12;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  17LL,  "WorkoutSession, overviewId unitialized or already present when beginning a new session, clearing, prevOverviewId, %{public}s",  uu,  v68);
        uint64_t v67 = (char *)v66;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLWorkoutSubscription::handleMessageBeginWorkoutSession(std::shared_ptr<CLConnectionMessage>)",  "%s\n",  v66);
        if (v67 != buf) {
          free(v67);
        }
      }
    }

    if ([v70 overviewId]) {
      objc_msgSend(objc_msgSend(v70, "overviewId"), "getUUIDBytes:", uu);
    }
    else {
      uuid_clear(uu);
    }
    __int16 v41 = a1 + 152;
    sub_100DE315C(v14, uu, a1 + 152);
    *(void *)((char *)&out_14[8] + 2) = 0LL;
    memset((char *)out_14 + 2, 0, 64);
    if (uuid_is_null((const unsigned __int8 *)(a1 + 168)))
    {
      uuid_clear((unsigned __int8 *)&out);
    }

    else
    {
      uuid_copy((unsigned __int8 *)&out, (const unsigned __int8 *)(a1 + 168));
      if ([v14 appId])
      {
        sub_1010DDBC0(buf, (char *)objc_msgSend(objc_msgSend(v14, "appId"), "UTF8String"));
        if (SBYTE1(out_14[3]) < 0) {
          operator delete(*(void **)((char *)out_14 + 2));
        }
        *(_OWORD *)((char *)out_14 + 2) = *(_OWORD *)buf;
        *(void *)((char *)&out_14[2] + 2) = *(void *)&buf[16];
        goto LABEL_77;
      }
    }

    std::string::assign((std::string *)((char *)out_14 + 2), "");
LABEL_77:
    int v74 = 0u;
    uint64_t v75 = 0u;
    uint64_t v72 = 0u;
    uint64_t v73 = 0u;
    unsigned int v42 = [v70 workouts];
    uint64_t v43 = [v42 countByEnumeratingWithState:&v72 objects:v88 count:16];
    if (v43)
    {
      uint64_t v44 = *(void *)v73;
      do
      {
        for (uint64_t j = 0LL; j != v43; uint64_t j = (char *)j + 1)
        {
          if (*(void *)v73 != v44) {
            objc_enumerationMutation(v42);
          }
          sub_100DE315C( *(void **)(*((void *)&v72 + 1) + 8LL * (void)j),  (const unsigned __int8 *)(a1 + 168),  (uint64_t)buf);
          *(void *)&__int16 v46 = sub_100DE3630((void *)((char *)&out_14[3] + 2), (__int128 *)buf).n128_u64[0];
        }

        uint64_t v43 = objc_msgSend(v42, "countByEnumeratingWithState:objects:count:", &v72, v88, 16, v46);
      }

      while (v43);
    }

    uuid_generate(buf);
    uuid_copy((unsigned __int8 *)(a1 + 184), buf);
    unsigned int v47 = *(void **)(a1 + 80);
    __int16 v48 = *(_OWORD *)(v41 + 144);
    v86[8] = *(_OWORD *)(v41 + 128);
    v86[9] = v48;
    unsigned int v87 = *(void *)(v41 + 160);
    int v49 = *(_OWORD *)(v41 + 80);
    v86[4] = *(_OWORD *)(v41 + 64);
    void v86[5] = v49;
    __int16 v50 = *(_OWORD *)(v41 + 112);
    v86[6] = *(_OWORD *)(v41 + 96);
    v86[7] = v50;
    unsigned int v51 = *(_OWORD *)(v41 + 16);
    v86[0] = *(_OWORD *)v41;
    v86[1] = v51;
    __int16 v52 = *(_OWORD *)(v41 + 48);
    v86[2] = *(_OWORD *)(v41 + 32);
    v86[3] = v52;
    sub_100DE3704((uint64_t)v85, (uint64_t)&out);
    [v47 beginWorkoutSession:v86 withOverview:sub_10045FEE0(v85) enableWorkoutChangeDetection:v69];
    sub_100457A68((uint64_t)v85);
    uint64_t v53 = *a2;
    uint64_t v83 = CMReturnCode;
    __int128 v84 = &off_1018D4688;
    +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v84,  &v83,  1LL);
    CLConnectionMessage::sendReply(v53);
    sub_100457A68((uint64_t)&out);
    goto LABEL_15;
  }

  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_101883F10);
  }
  __int16 v39 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_FAULT))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_FAULT,  "WorkoutSession, unable to begin session, another client has an active workout.",  buf,  2u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_101883F10);
    }
    LOWORD(out) = 0;
    LODWORD(v6_Block_object_dispose(va, 8) = 2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  17LL,  "WorkoutSession, unable to begin session, another client has an active workout.",  &out,  v68);
    uint64_t v65 = (char *)v64;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLWorkoutSubscription::handleMessageBeginWorkoutSession(std::shared_ptr<CLConnectionMessage>)",  "%s\n",  v64);
    if (v65 != buf) {
      free(v65);
    }
  }

  int v40 = *a2;
  uint64_t v81 = CMErrorMessage;
  int v82 = &off_1018D4658;
  +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v82,  &v81,  1LL);
  CLConnectionMessage::sendReply(v40);
LABEL_15:
}

void sub_100DE07A0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
}

void sub_100DE0850(uint64_t a1, CLConnectionMessage **a2)
{
  uint64_t v4 = objc_alloc_init(&OBJC_CLASS___NSAutoreleasePool);
  if ((sub_100DE2638(a1, (int *)&v29) & 1) != 0)
  {
    objc_opt_class(&OBJC_CLASS___CMWorkout);
    uint64_t v6 = v5;
    *(void *)&double v7 = objc_opt_class(&OBJC_CLASS___NSString).n128_u64[0];
    DictionaryOfClasses = (void *)CLConnectionMessage::getDictionaryOfClasses( *a2,  +[NSSet setWithObjects:](&OBJC_CLASS___NSSet, "setWithObjects:", v6, v7, v8, 0LL));
    uint64_t v10 = DictionaryOfClasses;
    if (DictionaryOfClasses
      && (uint64_t v11 = CMWorkoutAttributes, [DictionaryOfClasses objectForKeyedSubscript:CMWorkoutAttributes]))
    {
      id v12 = [v10 objectForKeyedSubscript:v11];
      if (*(void *)(a1 + 48))
      {
        if (qword_101934680 != -1) {
          dispatch_once(&qword_101934680, &stru_101883F10);
        }
        uint64_t v13 = (os_log_s *)qword_101934688;
        if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v14 = *(void *)(a1 + 48);
          *(_DWORD *)std::stringbuf::string_type buf = 138412802;
          *(void *)&uint8_t buf[4] = v12;
          *(_WORD *)&_BYTE buf[12] = 2048;
          *(void *)&_BYTE buf[14] = v14;
          *(_WORD *)&_BYTE buf[22] = 2048;
          *(void *)&_BYTE buf[24] = a1;
          _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "WorkoutSession, ending session, %@, %p, %p",  buf,  0x20u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934680 != -1) {
            dispatch_once(&qword_101934680, &stru_101883F10);
          }
          uint64_t v22 = *(void *)(a1 + 48);
          int v36 = 138412802;
          id v37 = v12;
          __int16 v38 = 2048;
          uint64_t v39 = v22;
          __int16 v40 = 2048;
          uint64_t v41 = a1;
          LODWORD(v2_Block_object_dispose(va, 8) = 32;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "WorkoutSession, ending session, %@, %p, %p",  &v36,  v28);
          double v24 = (char *)v23;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWorkoutSubscription::handleMessageEndWorkoutSession(std::shared_ptr<CLConnectionMessage>)",  "%s\n",  v23);
          if (v24 != buf) {
            free(v24);
          }
        }

        sub_100DE315C(v12, (const unsigned __int8 *)(a1 + 168), (uint64_t)buf);
        unsigned int v15 = *(void **)(a1 + 80);
        v32[7] = v48;
        _OWORD v32[8] = v49;
        v32[9] = v50;
        uint64_t v33 = v51;
        _DWORD v32[4] = v45;
        void v32[5] = v46;
        v32[6] = v47;
        v32[0] = *(_OWORD *)buf;
        v32[1] = *(_OWORD *)&buf[16];
        _DWORD v32[2] = v43;
        void v32[3] = v44;
        [v15 endWorkoutSession:v32];
        sub_1000F0D38((void *)(a1 + 48));
        uuid_clear((unsigned __int8 *)(a1 + 168));
        __int16 v16 = *a2;
        uint64_t v30 = CMReturnCode;
        uint64_t v31 = &off_1018D4688;
        +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v31,  &v30,  1LL);
        CLConnectionMessage::sendReply(v16);
      }

      else
      {
        if (qword_101934680 != -1) {
          dispatch_once(&qword_101934680, &stru_101883F10);
        }
        uint64_t v19 = (os_log_s *)qword_101934688;
        if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_FAULT))
        {
          uint64_t v20 = *(void *)(a1 + 48);
          *(_DWORD *)std::stringbuf::string_type buf = 138412802;
          *(void *)&uint8_t buf[4] = v12;
          *(_WORD *)&_BYTE buf[12] = 2048;
          *(void *)&_BYTE buf[14] = v20;
          *(_WORD *)&_BYTE buf[22] = 2048;
          *(void *)&_BYTE buf[24] = a1;
          _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_FAULT,  "WorkoutSession, no active workouts to stop, requested, %@, %p, %p",  buf,  0x20u);
        }

        if (sub_1002921D0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934680 != -1) {
            dispatch_once(&qword_101934680, &stru_101883F10);
          }
          uint64_t v25 = *(void *)(a1 + 48);
          int v36 = 138412802;
          id v37 = v12;
          __int16 v38 = 2048;
          uint64_t v39 = v25;
          __int16 v40 = 2048;
          uint64_t v41 = a1;
          LODWORD(v2_Block_object_dispose(va, 8) = 32;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  17LL,  "WorkoutSession, no active workouts to stop, requested, %@, %p, %p",  &v36,  v28);
          id v27 = (char *)v26;
          sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLWorkoutSubscription::handleMessageEndWorkoutSession(std::shared_ptr<CLConnectionMessage>)",  "%s\n",  v26);
          if (v27 != buf) {
            free(v27);
          }
        }

        id v21 = *a2;
        uint64_t v34 = CMErrorMessage;
        __int16 v35 = &off_1018D4658;
        +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v35,  &v34,  1LL);
        CLConnectionMessage::sendReply(v21);
      }
    }

    else
    {
      unsigned int v18 = *a2;
      uint64_t v52 = CMErrorMessage;
      uint64_t v53 = &off_1018D4640;
      +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v53,  &v52,  1LL);
      CLConnectionMessage::sendReply(v18);
    }
  }

  else
  {
    uint64_t v17 = *a2;
    uint64_t v54 = CMErrorMessage;
    uint64_t v55 = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v29);
    +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v55,  &v54,  1LL);
    CLConnectionMessage::sendReply(v17);
  }
}

void sub_100DE0DD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100DE0E10(uint64_t a1, CLConnectionMessage **a2)
{
  uint64_t v4 = objc_alloc_init(&OBJC_CLASS___NSAutoreleasePool);
  if ((sub_100DE2638(a1, (int *)&v30) & 1) != 0)
  {
    objc_opt_class(&OBJC_CLASS___CMWorkout);
    uint64_t v6 = v5;
    *(void *)&double v7 = objc_opt_class(&OBJC_CLASS___NSString).n128_u64[0];
    DictionaryOfClasses = (void *)CLConnectionMessage::getDictionaryOfClasses( *a2,  +[NSSet setWithObjects:](&OBJC_CLASS___NSSet, "setWithObjects:", v6, v7, v8, 0LL));
    uint64_t v10 = DictionaryOfClasses;
    if (DictionaryOfClasses
      && (uint64_t v11 = CMWorkoutAttributes, [DictionaryOfClasses objectForKeyedSubscript:CMWorkoutAttributes]))
    {
      id v12 = [v10 objectForKeyedSubscript:v11];
      if (*(void *)(a1 + 48))
      {
        if (qword_101934680 != -1) {
          dispatch_once(&qword_101934680, &stru_101883F10);
        }
        uint64_t v13 = (os_log_s *)qword_101934688;
        if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v14 = *(void *)(a1 + 48);
          *(_DWORD *)std::stringbuf::string_type buf = 138412802;
          *(void *)&uint8_t buf[4] = v12;
          *(_WORD *)&_BYTE buf[12] = 2048;
          *(void *)&_BYTE buf[14] = v14;
          *(_WORD *)&_BYTE buf[22] = 2048;
          *(void *)&_BYTE buf[24] = a1;
          _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "WorkoutSession, setting current type, %@, %p, %p",  buf,  0x20u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934680 != -1) {
            dispatch_once(&qword_101934680, &stru_101883F10);
          }
          uint64_t v23 = *(void *)(a1 + 48);
          int v37 = 138412802;
          id v38 = v12;
          __int16 v39 = 2048;
          uint64_t v40 = v23;
          __int16 v41 = 2048;
          uint64_t v42 = a1;
          LODWORD(v29) = 32;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "WorkoutSession, setting current type, %@, %p, %p",  &v37,  v29);
          uint64_t v25 = (char *)v24;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWorkoutSubscription::handleMessageSetCurrentWorkoutType(std::shared_ptr<CLConnectionMessage>)",  "%s\n",  v24);
          if (v25 != buf) {
            free(v25);
          }
        }

        sub_100DE315C(v12, (const unsigned __int8 *)(a1 + 168), (uint64_t)buf);
        id v15 = objc_msgSend(objc_msgSend(v10, "objectForKeyedSubscript:", CMWorkoutIsManualTransition), "BOOLValue");
        __int16 v16 = *(void **)(a1 + 80);
        v33[7] = v49;
        _OWORD v33[8] = v50;
        v33[9] = v51;
        uint64_t v34 = v52;
        v33[4] = v46;
        void v33[5] = v47;
        v33[6] = v48;
        v33[0] = *(_OWORD *)buf;
        v33[1] = *(_OWORD *)&buf[16];
        _OWORD v33[2] = v44;
        void v33[3] = v45;
        [v16 setCurrentWorkoutType:v33 isManualTransition:v15];
        uint64_t v17 = *a2;
        uint64_t v31 = CMReturnCode;
        uint64_t v32 = &off_1018D4688;
        +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v32,  &v31,  1LL);
        CLConnectionMessage::sendReply(v17);
      }

      else
      {
        if (qword_101934680 != -1) {
          dispatch_once(&qword_101934680, &stru_101883F10);
        }
        uint64_t v20 = (os_log_s *)qword_101934688;
        if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_FAULT))
        {
          uint64_t v21 = *(void *)(a1 + 48);
          *(_DWORD *)std::stringbuf::string_type buf = 138412802;
          *(void *)&uint8_t buf[4] = v12;
          *(_WORD *)&_BYTE buf[12] = 2048;
          *(void *)&_BYTE buf[14] = v21;
          *(_WORD *)&_BYTE buf[22] = 2048;
          *(void *)&_BYTE buf[24] = a1;
          _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_FAULT,  "WorkoutSession, no active workouts to change, requested, %@, %p, %p",  buf,  0x20u);
        }

        if (sub_1002921D0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934680 != -1) {
            dispatch_once(&qword_101934680, &stru_101883F10);
          }
          uint64_t v26 = *(void *)(a1 + 48);
          int v37 = 138412802;
          id v38 = v12;
          __int16 v39 = 2048;
          uint64_t v40 = v26;
          __int16 v41 = 2048;
          uint64_t v42 = a1;
          LODWORD(v29) = 32;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  17LL,  "WorkoutSession, no active workouts to change, requested, %@, %p, %p",  &v37,  v29);
          uint64_t v28 = (char *)v27;
          sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLWorkoutSubscription::handleMessageSetCurrentWorkoutType(std::shared_ptr<CLConnectionMessage>)",  "%s\n",  v27);
          if (v28 != buf) {
            free(v28);
          }
        }

        uint64_t v22 = *a2;
        uint64_t v35 = CMErrorMessage;
        int v36 = &off_1018D4658;
        +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v36,  &v35,  1LL);
        CLConnectionMessage::sendReply(v22);
      }
    }

    else
    {
      uint64_t v19 = *a2;
      uint64_t v53 = CMErrorMessage;
      uint64_t v54 = &off_1018D4640;
      +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v54,  &v53,  1LL);
      CLConnectionMessage::sendReply(v19);
    }
  }

  else
  {
    unsigned int v18 = *a2;
    uint64_t v55 = CMErrorMessage;
    __int16 v56 = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v30);
    +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v56,  &v55,  1LL);
    CLConnectionMessage::sendReply(v18);
  }
}

void sub_100DE1394(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100DE13D8(uint64_t a1, CLConnectionMessage **a2)
{
  uint64_t v4 = objc_alloc_init(&OBJC_CLASS___NSAutoreleasePool);
  if ((sub_100DE2638(a1, (int *)&v29) & 1) != 0)
  {
    objc_opt_class(&OBJC_CLASS___CMWorkout);
    uint64_t v6 = v5;
    *(void *)&double v7 = objc_opt_class(&OBJC_CLASS___NSString).n128_u64[0];
    DictionaryOfClasses = (void *)CLConnectionMessage::getDictionaryOfClasses( *a2,  +[NSSet setWithObjects:](&OBJC_CLASS___NSSet, "setWithObjects:", v6, v7, v8, 0LL));
    uint64_t v10 = DictionaryOfClasses;
    if (DictionaryOfClasses
      && (uint64_t v11 = CMWorkoutAttributes, [DictionaryOfClasses objectForKeyedSubscript:CMWorkoutAttributes]))
    {
      id v12 = [v10 objectForKeyedSubscript:v11];
      if (*(void *)(a1 + 48))
      {
        if (qword_101934680 != -1) {
          dispatch_once(&qword_101934680, &stru_101883F10);
        }
        uint64_t v13 = (os_log_s *)qword_101934688;
        if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v14 = *(void *)(a1 + 48);
          *(_DWORD *)std::stringbuf::string_type buf = 138412802;
          *(void *)&uint8_t buf[4] = v12;
          *(_WORD *)&_BYTE buf[12] = 2048;
          *(void *)&_BYTE buf[14] = v14;
          *(_WORD *)&_BYTE buf[22] = 2048;
          *(void *)&_BYTE buf[24] = a1;
          _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "WorkoutSession, pausing workout, %@, %p, %p",  buf,  0x20u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934680 != -1) {
            dispatch_once(&qword_101934680, &stru_101883F10);
          }
          uint64_t v22 = *(void *)(a1 + 48);
          int v36 = 138412802;
          id v37 = v12;
          __int16 v38 = 2048;
          uint64_t v39 = v22;
          __int16 v40 = 2048;
          uint64_t v41 = a1;
          LODWORD(v2_Block_object_dispose(va, 8) = 32;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "WorkoutSession, pausing workout, %@, %p, %p",  &v36,  v28);
          double v24 = (char *)v23;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWorkoutSubscription::handleMessagePauseWorkout(std::shared_ptr<CLConnectionMessage>)",  "%s\n",  v23);
          if (v24 != buf) {
            free(v24);
          }
        }

        sub_100DE315C(v12, (const unsigned __int8 *)(a1 + 168), (uint64_t)buf);
        id v15 = *(void **)(a1 + 80);
        v32[7] = v48;
        _OWORD v32[8] = v49;
        v32[9] = v50;
        uint64_t v33 = v51;
        _DWORD v32[4] = v45;
        void v32[5] = v46;
        v32[6] = v47;
        v32[0] = *(_OWORD *)buf;
        v32[1] = *(_OWORD *)&buf[16];
        _DWORD v32[2] = v43;
        void v32[3] = v44;
        [v15 pauseWorkout:v32];
        __int16 v16 = *a2;
        uint64_t v30 = CMReturnCode;
        uint64_t v31 = &off_1018D4688;
        +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v31,  &v30,  1LL);
        CLConnectionMessage::sendReply(v16);
      }

      else
      {
        if (qword_101934680 != -1) {
          dispatch_once(&qword_101934680, &stru_101883F10);
        }
        uint64_t v19 = (os_log_s *)qword_101934688;
        if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_FAULT))
        {
          uint64_t v20 = *(void *)(a1 + 48);
          *(_DWORD *)std::stringbuf::string_type buf = 138412802;
          *(void *)&uint8_t buf[4] = v12;
          *(_WORD *)&_BYTE buf[12] = 2048;
          *(void *)&_BYTE buf[14] = v20;
          *(_WORD *)&_BYTE buf[22] = 2048;
          *(void *)&_BYTE buf[24] = a1;
          _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_FAULT,  "WorkoutSession, no active workouts to pause, requested, %@, %p, %p",  buf,  0x20u);
        }

        if (sub_1002921D0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934680 != -1) {
            dispatch_once(&qword_101934680, &stru_101883F10);
          }
          uint64_t v25 = *(void *)(a1 + 48);
          int v36 = 138412802;
          id v37 = v12;
          __int16 v38 = 2048;
          uint64_t v39 = v25;
          __int16 v40 = 2048;
          uint64_t v41 = a1;
          LODWORD(v2_Block_object_dispose(va, 8) = 32;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  17LL,  "WorkoutSession, no active workouts to pause, requested, %@, %p, %p",  &v36,  v28);
          id v27 = (char *)v26;
          sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLWorkoutSubscription::handleMessagePauseWorkout(std::shared_ptr<CLConnectionMessage>)",  "%s\n",  v26);
          if (v27 != buf) {
            free(v27);
          }
        }

        uint64_t v21 = *a2;
        uint64_t v34 = CMErrorMessage;
        uint64_t v35 = &off_1018D4658;
        +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v35,  &v34,  1LL);
        CLConnectionMessage::sendReply(v21);
      }
    }

    else
    {
      unsigned int v18 = *a2;
      uint64_t v52 = CMErrorMessage;
      uint64_t v53 = &off_1018D4640;
      +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v53,  &v52,  1LL);
      CLConnectionMessage::sendReply(v18);
    }
  }

  else
  {
    uint64_t v17 = *a2;
    uint64_t v54 = CMErrorMessage;
    uint64_t v55 = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v29);
    +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v55,  &v54,  1LL);
    CLConnectionMessage::sendReply(v17);
  }
}

void sub_100DE1940(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100DE1980(uint64_t a1, CLConnectionMessage **a2)
{
  uint64_t v4 = objc_alloc_init(&OBJC_CLASS___NSAutoreleasePool);
  if ((sub_100DE2638(a1, (int *)&v29) & 1) != 0)
  {
    objc_opt_class(&OBJC_CLASS___CMWorkout);
    uint64_t v6 = v5;
    *(void *)&double v7 = objc_opt_class(&OBJC_CLASS___NSString).n128_u64[0];
    DictionaryOfClasses = (void *)CLConnectionMessage::getDictionaryOfClasses( *a2,  +[NSSet setWithObjects:](&OBJC_CLASS___NSSet, "setWithObjects:", v6, v7, v8, 0LL));
    uint64_t v10 = DictionaryOfClasses;
    if (DictionaryOfClasses
      && (uint64_t v11 = CMWorkoutAttributes, [DictionaryOfClasses objectForKeyedSubscript:CMWorkoutAttributes]))
    {
      id v12 = [v10 objectForKeyedSubscript:v11];
      if (*(void *)(a1 + 48))
      {
        if (qword_101934680 != -1) {
          dispatch_once(&qword_101934680, &stru_101883F10);
        }
        uint64_t v13 = (os_log_s *)qword_101934688;
        if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v14 = *(void *)(a1 + 48);
          *(_DWORD *)std::stringbuf::string_type buf = 138412802;
          *(void *)&uint8_t buf[4] = v12;
          *(_WORD *)&_BYTE buf[12] = 2048;
          *(void *)&_BYTE buf[14] = v14;
          *(_WORD *)&_BYTE buf[22] = 2048;
          *(void *)&_BYTE buf[24] = a1;
          _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "WorkoutSession, resuming workout, %@, %p, %p",  buf,  0x20u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934680 != -1) {
            dispatch_once(&qword_101934680, &stru_101883F10);
          }
          uint64_t v22 = *(void *)(a1 + 48);
          int v36 = 138412802;
          id v37 = v12;
          __int16 v38 = 2048;
          uint64_t v39 = v22;
          __int16 v40 = 2048;
          uint64_t v41 = a1;
          LODWORD(v2_Block_object_dispose(va, 8) = 32;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "WorkoutSession, resuming workout, %@, %p, %p",  &v36,  v28);
          double v24 = (char *)v23;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWorkoutSubscription::handleMessageResumeWorkout(std::shared_ptr<CLConnectionMessage>)",  "%s\n",  v23);
          if (v24 != buf) {
            free(v24);
          }
        }

        sub_100DE315C(v12, (const unsigned __int8 *)(a1 + 168), (uint64_t)buf);
        id v15 = *(void **)(a1 + 80);
        v32[7] = v48;
        _OWORD v32[8] = v49;
        v32[9] = v50;
        uint64_t v33 = v51;
        _DWORD v32[4] = v45;
        void v32[5] = v46;
        v32[6] = v47;
        v32[0] = *(_OWORD *)buf;
        v32[1] = *(_OWORD *)&buf[16];
        _DWORD v32[2] = v43;
        void v32[3] = v44;
        [v15 resumeWorkout:v32];
        __int16 v16 = *a2;
        uint64_t v30 = CMReturnCode;
        uint64_t v31 = &off_1018D4688;
        +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v31,  &v30,  1LL);
        CLConnectionMessage::sendReply(v16);
      }

      else
      {
        if (qword_101934680 != -1) {
          dispatch_once(&qword_101934680, &stru_101883F10);
        }
        uint64_t v19 = (os_log_s *)qword_101934688;
        if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_FAULT))
        {
          uint64_t v20 = *(void *)(a1 + 48);
          *(_DWORD *)std::stringbuf::string_type buf = 138412802;
          *(void *)&uint8_t buf[4] = v12;
          *(_WORD *)&_BYTE buf[12] = 2048;
          *(void *)&_BYTE buf[14] = v20;
          *(_WORD *)&_BYTE buf[22] = 2048;
          *(void *)&_BYTE buf[24] = a1;
          _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_FAULT,  "WorkoutSession, no active workouts to resume, requested, %@, %p, %p",  buf,  0x20u);
        }

        if (sub_1002921D0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934680 != -1) {
            dispatch_once(&qword_101934680, &stru_101883F10);
          }
          uint64_t v25 = *(void *)(a1 + 48);
          int v36 = 138412802;
          id v37 = v12;
          __int16 v38 = 2048;
          uint64_t v39 = v25;
          __int16 v40 = 2048;
          uint64_t v41 = a1;
          LODWORD(v2_Block_object_dispose(va, 8) = 32;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  17LL,  "WorkoutSession, no active workouts to resume, requested, %@, %p, %p",  &v36,  v28);
          id v27 = (char *)v26;
          sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLWorkoutSubscription::handleMessageResumeWorkout(std::shared_ptr<CLConnectionMessage>)",  "%s\n",  v26);
          if (v27 != buf) {
            free(v27);
          }
        }

        uint64_t v21 = *a2;
        uint64_t v34 = CMErrorMessage;
        uint64_t v35 = &off_1018D4658;
        +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v35,  &v34,  1LL);
        CLConnectionMessage::sendReply(v21);
      }
    }

    else
    {
      unsigned int v18 = *a2;
      uint64_t v52 = CMErrorMessage;
      uint64_t v53 = &off_1018D4640;
      +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v53,  &v52,  1LL);
      CLConnectionMessage::sendReply(v18);
    }
  }

  else
  {
    uint64_t v17 = *a2;
    uint64_t v54 = CMErrorMessage;
    uint64_t v55 = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v29);
    +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v55,  &v54,  1LL);
    CLConnectionMessage::sendReply(v17);
  }
}

void sub_100DE1EE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100DE1F28(uint64_t a1, uint64_t *a2)
{
  if ((sub_100DE2638(a1, (int *)&v15) & 1) != 0)
  {
    uint64_t v4 = *(void **)(a1 + 80);
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3321888768LL;
    id v13[2] = sub_100DE2C38;
    v13[3] = &unk_101883E90;
    uint64_t v6 = *a2;
    uint64_t v5 = (std::__shared_weak_count *)a2[1];
    _DWORD v13[4] = a1;
    v13[5] = v6;
    uint64_t v14 = v5;
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        unint64_t v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
    }

    [v4 workoutSnapshotWithReply:v13];
    uint64_t v9 = v14;
    if (v14)
    {
      uint64_t v10 = (unint64_t *)&v14->__shared_owners_;
      do
        unint64_t v11 = __ldaxr(v10);
      while (__stlxr(v11 - 1, v10));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
    }
  }

  else
  {
    uint64_t v12 = *a2;
    uint64_t v16 = CMErrorMessage;
    uint64_t v17 = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v15);
    +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v17,  &v16,  1LL);
    CLConnectionMessage::sendReply(v12);
  }

void sub_100DE207C(_Unwind_Exception *a1)
{
}

id sub_100DE2098(uint64_t a1, CLConnectionMessage **a2)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_101883F10);
  }
  uint64_t v4 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = (void *)(a1 + 328);
    *(_DWORD *)std::stringbuf::string_type buf = 136315138;
    uint64_t v39 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Workout, reminder mute settings, client %s attempting to toggle mute reminder settings",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_101883F10);
    }
    uint64_t v20 = (void *)(a1 + 328);
    int v28 = 136315138;
    unsigned int v29 = v20;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Workout, reminder mute settings, client %s attempting to toggle mute reminder settings",  (const char *)&v28);
    uint64_t v22 = (uint8_t *)v21;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWorkoutSubscription::handleMessageUpdateWorkoutReminderMuteSetting(std::shared_ptr<CLConnectionMessage>)",  "%s\n",  v21);
    if (v22 != buf) {
      free(v22);
    }
  }

  char v6 = sub_100DE2638(a1, (int *)&v25 + 1);
  double v7 = *a2;
  if ((v6 & 1) != 0)
  {
    Dictionary = (void *)CLConnectionMessage::getDictionary(*a2);
    uint64_t v9 = Dictionary;
    if (Dictionary
      && (uint64_t v10 = CMWorkoutReminderSettingType,
          [Dictionary objectForKeyedSubscript:CMWorkoutReminderSettingType])
      && (uint64_t v11 = CMWorkoutReminderMuteValue, [v9 objectForKeyedSubscript:CMWorkoutReminderMuteValue]))
    {
      id v12 = objc_msgSend(objc_msgSend(v9, "objectForKeyedSubscript:", v10), "integerValue");
      id v13 = objc_msgSend(objc_msgSend(v9, "objectForKeyedSubscript:", v11), "BOOLValue");
      uint64_t v14 = (void *)(a1 + 328);
      if (sub_1000AC7C8((uint64_t)&unk_10199EAA8, (uint64_t)&qword_10199EAF0, (unsigned __int8 **)(a1 + 328))
         - (void)&unk_10199EAA8 == 72)
      {
        if (qword_101934680 != -1) {
          dispatch_once(&qword_101934680, &stru_101883F10);
        }
        unsigned int v15 = (os_log_s *)qword_101934688;
        if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_ERROR))
        {
          uint64_t v16 = (void *)(a1 + 328);
          *(_DWORD *)std::stringbuf::string_type buf = 136315650;
          uint64_t v39 = v16;
          __int16 v40 = 2048;
          id v41 = v12;
          __int16 v42 = 1024;
          int v43 = (int)v13;
          _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_ERROR,  "Workout, reminder mute settings, disallowed client %s attempting to toggle mute reminder for %ld to %d",  buf,  0x1Cu);
        }

        if (sub_1002921D0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934680 != -1) {
            dispatch_once(&qword_101934680, &stru_101883F10);
          }
          int v28 = 136315650;
          unsigned int v29 = v14;
          __int16 v30 = 2048;
          id v31 = v12;
          __int16 v32 = 1024;
          int v33 = (int)v13;
          LODWORD(v25) = 28;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  16LL,  "Workout, reminder mute settings, disallowed client %s attempting to toggle mute reminder for %ld to %d",  (const char *)&v28,  v25,  v26);
          double v24 = (uint8_t *)v23;
          sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLWorkoutSubscription::handleMessageUpdateWorkoutReminderMuteSetting(std::shared_ptr<CLConnectionMessage>)",  "%s\n",  v23);
          if (v24 != buf) {
            free(v24);
          }
        }

        uint64_t v17 = *a2;
        uint64_t v26 = CMErrorMessage;
        id v27 = &off_1018D4670;
        +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v27,  &v26,  1LL);
        return (id)CLConnectionMessage::sendReply(v17);
      }

      else
      {
        return [*(id *)(a1 + 80) updateWorkoutReminderMuteSetting:v12 mute:v13];
      }
    }

    else
    {
      uint64_t v19 = *a2;
      uint64_t v34 = CMErrorMessage;
      uint64_t v35 = &off_1018D4640;
      +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v35,  &v34,  1LL);
      return (id)CLConnectionMessage::sendReply(v19);
    }
  }

  else
  {
    uint64_t v36 = CMErrorMessage;
    id v37 = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", HIDWORD(v25));
    +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v37,  &v36,  1LL);
    return (id)CLConnectionMessage::sendReply(v7);
  }

void sub_100DE2598(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  sub_100272EB8(&off_101884080, a2, &v6);
  (*(void (**)(uint64_t, uint64_t *, void))(*(void *)v2 + 24LL))(v2, &v6, 0LL);
  uint64_t v3 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      unint64_t v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }

void sub_100DE2624(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100DE2638(uint64_t a1, int *a2)
{
  char v4 = sub_100C6AC9C(a1);
  char v5 = v4;
  if (v9 < 0)
  {
    operator delete(__p);
    if ((v5 & 1) == 0) {
      goto LABEL_8;
    }
  }

  else if ((v4 & 1) == 0)
  {
    goto LABEL_8;
  }

  if (!sub_100E0DFC0(*(void *)(a1 + 8)))
  {
    int v7 = 104;
    goto LABEL_10;
  }

  if ((sub_100C6ADE0(a1) & 1) != 0) {
    return 1LL;
  }
LABEL_8:
  int v7 = 105;
LABEL_10:
  uint64_t result = 0LL;
  *a2 = v7;
  return result;
}

void sub_100DE26D8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

id sub_100DE26F4(uint64_t a1)
{
  id v1 = objc_msgSend(objc_msgSend(*(id *)(a1 + 8), "vendor"), "proxyForService:", @"CLClientAuthorizationCache");
  id v2 = objc_msgSend( objc_msgSend( v1,  "syncgetAuthorizationContextIfClientIsNonZonal:",  +[NSString stringWithUTF8String:]( NSString,  "stringWithUTF8String:",  "com.apple.locationd.bundle-/System/Library/LocationBundles/MotionCalibration.bundle")),  "isAuthorizedForServiceTypeMask:",  16);
  if ((v2 & 1) == 0)
  {
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_101883F30);
    }
    uint64_t v3 = (os_log_s *)qword_1019344D8;
    if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Motion calibration system service is disabled.",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344D0 != -1) {
        dispatch_once(&qword_1019344D0, &stru_101883F30);
      }
      v7[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  0LL,  "Motion calibration system service is disabled.",  v7,  2);
      uint64_t v6 = (uint8_t *)v5;
      sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLWorkoutSubscription::isMotionCalibrationAuthorized()", "%s\n", v5);
      if (v6 != buf) {
        free(v6);
      }
    }
  }

  return v2;
}

uint64_t sub_100DE28D4(uint64_t a1, uint64_t a2)
{
  if ((_DWORD)a2 == 100)
  {
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_101883F10);
    }
    uint64_t v3 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 48);
      *(_DWORD *)std::stringbuf::string_type buf = 134217984;
      uint64_t v23 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Workout, LOCATION UPDATE FOR TESTING %zd.",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_101883F10);
      }
      uint64_t v11 = *(void *)(a1 + 48);
      int v18 = 134217984;
      uint64_t v19 = v11;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Workout, LOCATION UPDATE FOR TESTING %zd.",  (size_t)&v18);
      id v13 = (uint8_t *)v12;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWorkoutSubscription::handleMessageTriggerWorkoutLocationEventForTesting(std::shared_ptr<CLConnectionMessa ge>)_block_invoke",  "%s\n",  v12);
      if (v13 != buf) {
        free(v13);
      }
    }

    uint64_t v5 = *(void *)(a1 + 32);
    uint64_t v16 = CMReturnCode;
    uint64_t v17 = &__kCFBooleanTrue;
    uint64_t v6 = (NSNumber **)&v17;
    int v7 = &v16;
  }

  else
  {
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_101883F10);
    }
    char v9 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "No active workouts or defaults write not set to force location updates!",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_101883F10);
      }
      LOWORD(v1_Block_object_dispose(va, 8) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "No active workouts or defaults write not set to force location updates!",  &v18,  2);
      unsigned int v15 = (uint8_t *)v14;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWorkoutSubscription::handleMessageTriggerWorkoutLocationEventForTesting(std::shared_ptr<CLConnectionMessa ge>)_block_invoke",  "%s\n",  v14);
      if (v15 != buf) {
        free(v15);
      }
    }

    uint64_t v5 = *(void *)(a1 + 32);
    uint64_t v20 = CMErrorMessage;
    uint64_t v21 = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", a2);
    uint64_t v6 = &v21;
    int v7 = &v20;
  }

  +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v6,  v7,  1LL);
  return CLConnectionMessage::sendReply(v5);
}

void sub_100DE2C38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 32);
  if (*(void *)a2) {
    id v5 = sub_100DE2EB4((double *)(a2 + 8), 0);
  }
  else {
    id v5 = 0LL;
  }
  if (*(_BYTE *)(a2 + 248)) {
    uint64_t v6 = +[NSDate dateWithTimeIntervalSinceReferenceDate:]( &OBJC_CLASS___NSDate,  "dateWithTimeIntervalSinceReferenceDate:",  *(double *)(a2 + 240));
  }
  else {
    uint64_t v6 = 0LL;
  }
  id v7 = [[CMWorkoutSnapshot alloc] initWithState:*(void *)a2 workout:v5 entryDate:v6];
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_101883F10);
  }
  unint64_t v8 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_INFO))
  {
    uint64_t v9 = *(void *)(v4 + 24);
    *(_DWORD *)std::stringbuf::string_type buf = 138412546;
    uint64_t v21 = v9;
    __int16 v22 = 2112;
    id v23 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_INFO,  "[snapshot] sending snapshot to client %@, %@",  buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_101883F10);
    }
    uint64_t v11 = *(void *)(v4 + 24);
    int v16 = 138412546;
    uint64_t v17 = v11;
    __int16 v18 = 2112;
    id v19 = v7;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  1LL,  "[snapshot] sending snapshot to client %@, %@",  &v16,  22);
    id v13 = (uint8_t *)v12;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWorkoutSubscription::handleMessageWorkoutSnapshot(std::shared_ptr<CLConnectionMessage>)_block_invoke",  "%s\n",  v12);
    if (v13 != buf) {
      free(v13);
    }
  }

  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v14 = CMWorkoutSnapshotData;
  id v15 = v7;
  +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v15,  &v14,  1LL);
  CLConnectionMessage::sendReply(v10);
}

id sub_100DE2EB4(double *a1, int a2)
{
  uint64_t v4 = -[NSUUID initWithUUIDBytes:](objc_alloc(&OBJC_CLASS___NSUUID), "initWithUUIDBytes:", a1 + 8);
  if (*a1 == 1.79769313e308) {
    id v5 = +[NSDate distantFuture](&OBJC_CLASS___NSDate, "distantFuture", *a1);
  }
  else {
    id v5 = -[NSDate initWithTimeIntervalSinceReferenceDate:]( objc_alloc(&OBJC_CLASS___NSDate),  "initWithTimeIntervalSinceReferenceDate:",  *a1);
  }
  uint64_t v6 = v5;
  if (a1[1] == 1.79769313e308) {
    id v7 = +[NSDate distantFuture](&OBJC_CLASS___NSDate, "distantFuture");
  }
  else {
    id v7 = -[NSDate initWithTimeIntervalSinceReferenceDate:]( objc_alloc(&OBJC_CLASS___NSDate),  "initWithTimeIntervalSinceReferenceDate:",  a1[1]);
  }
  unint64_t v8 = v7;
  uint64_t v9 = v4;
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_101883F10);
  }
  uint64_t v10 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    if (a2) {
      uint64_t v11 = "overview event";
    }
    else {
      uint64_t v11 = "current event";
    }
    id v12 = v8;
    uint64_t v14 = *((void *)a1 + 2);
    uint64_t v13 = *((void *)a1 + 3);
    uint64_t v15 = *((void *)a1 + 14);
    uint64_t v16 = *((void *)a1 + 15);
    __int16 v22 = v6;
    uint64_t v17 = *((void *)a1 + 28);
    uint64_t v20 = *(void *)a1;
    uint64_t v21 = *((void *)a1 + 1);
    *(_DWORD *)std::stringbuf::string_type buf = 68291330;
    int v24 = 0;
    __int16 v25 = 2082;
    uint64_t v26 = "";
    __int16 v27 = 2082;
    int v28 = v11;
    __int16 v29 = 2050;
    uint64_t v30 = v13;
    unint64_t v8 = v12;
    __int16 v31 = 2050;
    uint64_t v32 = v14;
    __int16 v33 = 2050;
    uint64_t v34 = v15;
    __int16 v35 = 2050;
    uint64_t v36 = v16;
    __int16 v37 = 2050;
    uint64_t v38 = v17;
    __int16 v39 = 2050;
    uint64_t v40 = v20;
    __int16 v41 = 2050;
    uint64_t v6 = v22;
    uint64_t v42 = v21;
    __int16 v43 = 2082;
    __int128 v44 = -[NSString UTF8String](-[NSUUID UUIDString](v9, "UUIDString"), "UTF8String");
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:WorkoutSession, event, type:%{public, location:escape_only}s, eventTime:%{publi c}.6f, eventType:%{public}ld, workoutType:%{public}ld, locationType:%{public}ld, workoutMode:%{p ublic}ld, startTime:%{public}.6f, endTime:%{public}.6f, sessionID:%{public, location:escape_only}s}",  buf,  0x6Cu);
  }

  if (*((void *)a1 + 14) == 19LL && (unint64_t)(*((void *)a1 + 15) - 1LL) <= 1)
  {
    id v18 = [[CMSwimWorkout alloc] initWithSessionId:v9 locationType:*((void *)a1 + 15) poolLength:v6 startDate:v8 endDate:a1[17]];
    [v18 setWorkoutMode:*((void *)a1 + 28)];
  }

  else
  {
    id v18 = [[CMWorkout alloc] initWithSessionId:v9 type:*((void *)a1 + 14) locationType:*((void *)a1 + 15) mode:*((void *)a1 + 28) startDate:v6 endDate:v8];
  }

  return v18;
}

char *sub_100DE315C(void *a1, const unsigned __int8 *a2, uint64_t a3)
{
  id v6 = [a1 sessionId];
  if (v6) {
    [v6 getUUIDBytes:a3];
  }
  else {
    uuid_clear((unsigned __int8 *)a3);
  }
  int is_null = uuid_is_null(a2);
  unint64_t v8 = (unsigned __int8 *)(a3 + 16);
  if (is_null) {
    uuid_clear(v8);
  }
  else {
    uuid_copy(v8, a2);
  }
  *(void *)(a3 + 4_Block_object_dispose(va, 8) = [a1 type];
  *(void *)(a3 + 56) = [a1 locationType];
  *(void *)(a3 + 16sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = [a1 mode];
  buf[0] = 0;
  sub_1012049AC((unsigned __int8 *)&v27 + 5, "ForceOneButtonWorkouts", buf, 0);
  if (BYTE6(v27)
    && ((+[CMWorkout workoutIsTypeWalking:]( &OBJC_CLASS___CMWorkout,  "workoutIsTypeWalking:",  *(void *)(a3 + 48)) & 1) != 0 || +[CMWorkout workoutIsTypeRunning:]( &OBJC_CLASS___CMWorkout,  "workoutIsTypeRunning:",  *(void *)(a3 + 48))))
  {
    if (+[CMWorkout workoutIsTypeWalking:]( &OBJC_CLASS___CMWorkout,  "workoutIsTypeWalking:",  *(void *)(a3 + 48))) {
      uint64_t v9 = 1LL;
    }
    else {
      uint64_t v9 = 2LL;
    }
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_101883F10);
    }
    uint64_t v10 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v11 = *(const char **)(a3 + 48);
      uint64_t v12 = *(void *)(a3 + 56);
      *(_DWORD *)std::stringbuf::string_type buf = 134218752;
      __int16 v37 = v11;
      __int16 v38 = 2048;
      uint64_t v39 = v12;
      __int16 v40 = 2048;
      uint64_t v41 = v9;
      __int16 v42 = 2048;
      uint64_t v43 = 3LL;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Forcing workout from workoutType: %zd, locationType: %zd, to workoutType: %zd, locationType: %zd",  buf,  0x2Au);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_101883F10);
      }
      uint64_t v21 = *(const char **)(a3 + 48);
      uint64_t v22 = *(void *)(a3 + 56);
      int v28 = 134218752;
      __int16 v29 = v21;
      __int16 v30 = 2048;
      uint64_t v31 = v22;
      __int16 v32 = 2048;
      uint64_t v33 = v9;
      __int16 v34 = 2048;
      uint64_t v35 = 3LL;
      LODWORD(v27) = 42;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Forcing workout from workoutType: %zd, locationType: %zd, to workoutType: %zd, locationType: %zd",  (size_t)&v28,  v27);
      int v24 = (uint8_t *)v23;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLWorkoutSubscription::getWorkoutSettingsFromWorkoutObject(CMWorkout *, const uuid_t &, CLMotionStat eMediator_Type::WorkoutSettings &)",  "%s\n",  v23);
      if (v24 != buf) {
        free(v24);
      }
    }

    *(void *)(a3 + 4_Block_object_dispose(va, 8) = v9;
    *(void *)(a3 + 56) = 3LL;
  }

  id v13 = +[CMSwimWorkout swimWorkoutInstance:](&OBJC_CLASS___CMSwimWorkout, "swimWorkoutInstance:", a1);
  if (v13)
  {
    uint64_t v14 = v13;
    id v15 = [v13 location];
    [v14 poolLength];
    *(void *)(a3 + 64) = v15;
    *(void *)(a3 + 72) = v16;
  }

  if (+[CMGenericWorkout genericWorkoutInstance:](&OBJC_CLASS___CMGenericWorkout, "genericWorkoutInstance:", a1)) {
    *(void *)(a3 + 64) = 3000LL;
  }
  uint64_t result = (char *)+[CMFitnessPlusWorkout fitnessPlusWorkoutInstance:]( &OBJC_CLASS___CMFitnessPlusWorkout,  "fitnessPlusWorkoutInstance:",  a1);
  *(_BYTE *)(a3 + 8sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0;
  if (result)
  {
    id v18 = result;
    *(_BYTE *)(a3 + 8sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 1;
    *(void *)(a3 + 152) = [result mediaType];
    if ([v18 catalogWorkoutId]) {
      id v19 = (const char *)objc_msgSend(objc_msgSend(v18, "catalogWorkoutId"), "UTF8String");
    }
    else {
      id v19 = "Invalid";
    }
    if (strlen(v19) >= 0x40)
    {
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_101883F10);
      }
      uint64_t v20 = (os_log_s *)qword_101934688;
      if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 136315138;
        __int16 v37 = v19;
        _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_ERROR,  "catalogWorkoutId string is too long, %s",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934680 != -1) {
          dispatch_once(&qword_101934680, &stru_101883F10);
        }
        int v28 = 136315138;
        __int16 v29 = v19;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  16LL,  "catalogWorkoutId string is too long, %s",  (const char *)&v28);
        uint64_t v26 = (uint8_t *)v25;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "static void CLWorkoutSubscription::getWorkoutSettingsFromWorkoutObject(CMWorkout *, const uuid_t &, CLMotionSt ateMediator_Type::WorkoutSettings &)",  "%s\n",  v25);
        if (v26 != buf) {
          free(v26);
        }
      }
    }

    return strncpy((char *)(a3 + 81), v19, 0x40uLL);
  }

  return result;
}

__n128 sub_100DE3630(void *a1, __int128 *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 24 * ((v4 - v5) >> 3) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0LL;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    sub_100DE4B84(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }

  unint64_t v8 = *(void *)(v5 + 8 * (v7 / 0x18)) + 168 * (v7 % 0x18);
  __int128 v9 = *a2;
  __int128 v10 = a2[2];
  *(_OWORD *)(v8 + 16) = a2[1];
  *(_OWORD *)(v8 + 32) = v10;
  *(_OWORD *)unint64_t v8 = v9;
  __int128 v11 = a2[3];
  __int128 v12 = a2[4];
  __int128 v13 = a2[6];
  *(_OWORD *)(v8 + 8sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = a2[5];
  *(_OWORD *)(v8 + 96) = v13;
  *(_OWORD *)(v8 + 4_Block_object_dispose(va, 8) = v11;
  *(_OWORD *)(v8 + 64) = v12;
  __n128 result = (__n128)a2[7];
  __int128 v15 = a2[8];
  __int128 v16 = a2[9];
  *(void *)(v8 + 16sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = *((void *)a2 + 20);
  *(_OWORD *)(v8 + 12_Block_object_dispose(va, 8) = v15;
  *(_OWORD *)(v8 + 144) = v16;
  *(__n128 *)(v8 + 112) = result;
  ++a1[5];
  return result;
}

uint64_t sub_100DE3704(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  if (*(char *)(a2 + 39) < 0)
  {
    sub_1010DD48C((_BYTE *)(a1 + 16), *(void **)(a2 + 16), *(void *)(a2 + 24));
  }

  else
  {
    __int128 v4 = *(_OWORD *)(a2 + 16);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = v4;
  }

  sub_10046E90C(a1 + 40, (void *)(a2 + 40));
  return a1;
}

void sub_100DE3774(_Unwind_Exception *exception_object)
{
}

void sub_100DE3790(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  if (*a3 == 2)
  {
    __int128 v6 = *(_OWORD *)a4;
    __int128 v7 = *(_OWORD *)(a4 + 16);
    *(_OWORD *)(a1 + 12sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = *(_OWORD *)(a4 + 32);
    *(_OWORD *)(a1 + 104) = v7;
    *(_OWORD *)(a1 + 8_Block_object_dispose(va, 8) = v6;
    __int128 v8 = *(_OWORD *)(a4 + 48);
    __int128 v9 = *(_OWORD *)(a4 + 64);
    __int128 v10 = *(_OWORD *)(a4 + 80);
    *(_OWORD *)(a1 + sub_10000AE14(v2 + 184) = *(_OWORD *)(a4 + 96);
    *(_OWORD *)(a1 + 16_Block_object_dispose(va, 8) = v10;
    *(_OWORD *)(a1 + 152) = v9;
    *(_OWORD *)(a1 + 136) = v8;
    __int128 v11 = *(_OWORD *)(a4 + 112);
    __int128 v12 = *(_OWORD *)(a4 + 128);
    __int128 v13 = *(_OWORD *)(a4 + 144);
    *(_OWORD *)(a1 + 24_Block_object_dispose(va, 8) = *(_OWORD *)(a4 + 160);
    *(_OWORD *)(a1 + 232) = v13;
    *(_OWORD *)(a1 + 216) = v12;
    *(_OWORD *)(a1 + 20sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = v11;
    __int128 v14 = *(_OWORD *)(a4 + 176);
    __int128 v15 = *(_OWORD *)(a4 + 192);
    __int128 v16 = *(_OWORD *)(a4 + 208);
    *(void *)(a1 + 312) = *(void *)(a4 + 224);
    *(_OWORD *)(a1 + 28sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = v15;
    *(_OWORD *)(a1 + 296) = v16;
    *(_OWORD *)(a1 + 264) = v14;
    if (*(void *)(a4 + 16) == 15LL) {
      uuid_clear((unsigned __int8 *)(a1 + 168));
    }
    sub_100DE3CB4(a1, (void *)a4);
    sub_1010DDBC0(__p, "kCLConnectionMessageWorkoutEvent");
    char v17 = sub_100C6ACAC(a1);
    char v18 = v17;
    if (v42 < 0)
    {
      operator delete(*(void **)__p);
      if ((v18 & 1) == 0) {
        return;
      }
    }

    else if ((v17 & 1) == 0)
    {
      return;
    }

    if (!sub_100BEF684(a4) && (*(void *)(a4 + 16) & 0xFFFFFFFFFFFFFFFELL) != 0x14)
    {
      if (*(void *)(a4 + 112) == 4LL
        && (sub_1004F2598(), (sub_1001B9A1C() & 1) == 0)
        && (unint64_t v24 = *(void *)(a4 + 16), v24 <= 0xB)
        && ((1LL << v24) & 0xBCC) != 0)
      {
        if (qword_101934680 != -1) {
          dispatch_once(&qword_101934680, &stru_101883F10);
        }
        __int16 v25 = (os_log_s *)qword_101934688;
        if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v26 = *(void *)(a4 + 16);
          *(_DWORD *)__int128 __p = 134217984;
          *(void *)&__p[4] = v26;
          _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEFAULT,  "Suppressing workout event for cycling,%ld",  __p,  0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(__p, 0x65CuLL);
          if (qword_101934680 != -1) {
            dispatch_once(&qword_101934680, &stru_101883F10);
          }
          uint64_t v30 = *(void *)(a4 + 16);
          int v33 = 134217984;
          uint64_t v34 = v30;
          _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Suppressing workout event for cycling,%ld",  &v33);
          __int16 v32 = (char *)v31;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWorkoutSubscription::onMotionStateMediatorNotification(int, const CLMotionStateMediator_Type::Notific ation &, const CLMotionStateMediator_Type::NotificationData &)",  "%s\n",  v31);
          if (v32 != __p) {
            free(v32);
          }
        }
      }

      else
      {
        id v19 = -[NSDate initWithTimeIntervalSinceReferenceDate:]( objc_alloc(&OBJC_CLASS___NSDate),  "initWithTimeIntervalSinceReferenceDate:",  *(double *)(a4 + 24));
        id v20 = sub_100DE2EB4((double *)a4, 0);
        uint64_t v21 = v20;
        if (v19 && v20 && [v20 sessionId])
        {
          v37[0] = CMReturnCode;
          v38[0] = +[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", *(void *)(a4 + 16));
          v38[1] = v19;
          v37[1] = CMWorkoutEventDate;
          void v37[2] = CMWorkoutAttributes;
          v38[2] = v21;
          *(void *)__int128 __p = +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v38,  v37,  3LL);
          sub_100DE40D0(a1, __p);
        }

        else
        {
          if (qword_101934680 != -1) {
            dispatch_once(&qword_101934680, &stru_101883F10);
          }
          uint64_t v22 = (os_log_s *)qword_101934688;
          if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_FAULT))
          {
            uint64_t v23 = *(void *)(a1 + 24);
            *(_DWORD *)__int128 __p = 138412546;
            *(void *)&__p[4] = v23;
            __int16 v40 = 2048;
            uint64_t v41 = a1;
            _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_FAULT,  "Error delivering event, %@, %p",  __p,  0x16u);
          }

          if (sub_1002921D0(115, 0))
          {
            bzero(__p, 0x65CuLL);
            if (qword_101934680 != -1) {
              dispatch_once(&qword_101934680, &stru_101883F10);
            }
            uint64_t v27 = *(void *)(a1 + 24);
            int v33 = 138412546;
            uint64_t v34 = v27;
            __int16 v35 = 2048;
            uint64_t v36 = a1;
            _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934688,  17LL,  "Error delivering event, %@, %p",  &v33,  22);
            __int16 v29 = (char *)v28;
            sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLWorkoutSubscription::onMotionStateMediatorNotification(int, const CLMotionStateMediator_Type::Notif ication &, const CLMotionStateMediator_Type::NotificationData &)",  "%s\n",  v28);
            if (v29 != __p) {
              free(v29);
            }
          }
        }
      }
    }
  }

void sub_100DE3C90( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, void *__p, uint64_t a22, int a23, __int16 a24, char a25, char a26)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DE3CB4(uint64_t a1, void *a2)
{
  if (sub_100BEF698((uint64_t)a2) == 1)
  {
    int v4 = 1;
  }

  else
  {
    int v4 = 2;
  }

  *(_DWORD *)(a1 + 32sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = v4;
LABEL_6:
  uint64_t v5 = a2[14];
  BOOL v7 = v5 == 23 || v5 == 37;
  uint64_t v8 = a2[2];
  BOOL v9 = v7 && v8 == 2;
  if (v9 || (uint64_t v10 = a2[28], v10 == 1) || (v11 = *(_DWORD *)(a1 + 320), v11 == 2))
  {
    uint64_t v13 = *(void *)(a1 + 48);
    __int128 v12 = (uint64_t *)(a1 + 48);
    if (!v13) {
      return;
    }
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_101883F10);
    }
    __int128 v14 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v15 = a2[2];
      uint64_t v16 = a2[14];
      uint64_t v17 = a2[28];
      *(_DWORD *)std::stringbuf::string_type buf = 134218496;
      uint64_t v41 = v15;
      __int16 v42 = 2048;
      uint64_t v43 = v16;
      __int16 v44 = 2048;
      uint64_t v45 = v17;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "Workout, Releasing power assertion, event, %ld, type, %ld, mode, %ld",  buf,  0x20u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_101883F10);
      }
      uint64_t v24 = a2[2];
      uint64_t v25 = a2[14];
      uint64_t v26 = a2[28];
      int v34 = 134218496;
      uint64_t v35 = v24;
      __int16 v36 = 2048;
      uint64_t v37 = v25;
      __int16 v38 = 2048;
      uint64_t v39 = v26;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Workout, Releasing power assertion, event, %ld, type, %ld, mode, %ld",  &v34,  32);
      int v28 = (uint8_t *)v27;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWorkoutSubscription::updateWorkoutStateAndPowerAssertion(const CLMotionStateMediator_Type::WorkoutEvent &)",  "%s\n",  v27);
      if (v28 != buf) {
        free(v28);
      }
    }

    int v18 = 0;
    goto LABEL_25;
  }

  if (v8 != 3) {
    LOBYTE(v7) = 0;
  }
  if (v7 || !v10 && v11 == 1)
  {
    uint64_t v19 = *(void *)(a1 + 48);
    __int128 v12 = (uint64_t *)(a1 + 48);
    if (v19)
    {
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_101883F10);
      }
      id v20 = (os_log_s *)qword_101934688;
      if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v21 = a2[2];
        uint64_t v22 = a2[14];
        uint64_t v23 = a2[28];
        *(_DWORD *)std::stringbuf::string_type buf = 134218496;
        uint64_t v41 = v21;
        __int16 v42 = 2048;
        uint64_t v43 = v22;
        __int16 v44 = 2048;
        uint64_t v45 = v23;
        _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "Workout, Taking power assertion, event, %ld, type, %ld, mode, %ld",  buf,  0x20u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934680 != -1) {
          dispatch_once(&qword_101934680, &stru_101883F10);
        }
        uint64_t v29 = a2[2];
        uint64_t v30 = a2[14];
        uint64_t v31 = a2[28];
        int v34 = 134218496;
        uint64_t v35 = v29;
        __int16 v36 = 2048;
        uint64_t v37 = v30;
        __int16 v38 = 2048;
        uint64_t v39 = v31;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Workout, Taking power assertion, event, %ld, type, %ld, mode, %ld",  &v34,  32);
        int v33 = (uint8_t *)v32;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWorkoutSubscription::updateWorkoutStateAndPowerAssertion(const CLMotionStateMediator_Type::WorkoutEvent &)",  "%s\n",  v32);
        if (v33 != buf) {
          free(v33);
        }
      }

      int v18 = 1;
LABEL_25:
      sub_100455360(*v12, v18);
    }
  }

void sub_100DE40D0(uint64_t a1, void *a2)
{
  uint64_t v3 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      unint64_t v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }

void sub_100DE4164(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_100DE4178(uint64_t a1, void *a2)
{
  uint64_t v3 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      unint64_t v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }

void sub_100DE420C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_100DE4220(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_100DE424C(id a1)
{
  qword_101934688 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Workout");
}

void sub_100DE4278(id a1)
{
  qword_1019344D8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Calorimetry");
}

__n128 sub_100DE42A4(uint64_t a1)
{
  id v2 = (char *)operator new(0x18uLL);
  *(void *)id v2 = &off_101883F60;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + _Block_object_dispose(va, 8) = result;
  return result;
}

__n128 sub_100DE42E0(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &off_101883F60;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + _Block_object_dispose(va, 8) = result;
  return result;
}

void sub_100DE4304(uint64_t a1, uint64_t a2, __int128 *a3)
{
}

uint64_t sub_100DE430C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_100DE4348()
{
}

void sub_100DE4354(uint64_t a1, uint64_t a2, __int128 *a3)
{
  __int128 v6 = *a3;
  *(void *)a3 = 0LL;
  *((void *)a3 + 1) = 0LL;
  sub_100DE43D8(a1, a2, (CLConnectionMessage **)&v6);
  uint64_t v3 = (std::__shared_weak_count *)*((void *)&v6 + 1);
  if (*((void *)&v6 + 1))
  {
    int v4 = (unint64_t *)(*((void *)&v6 + 1) + 8LL);
    do
      unint64_t v5 = __ldaxr(v4);
    while (__stlxr(v5 - 1, v4));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }

void sub_100DE43C0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1012310A8(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100DE43D8(uint64_t a1, uint64_t a2, CLConnectionMessage **a3)
{
  __int128 v6 = (NSSet *)(*(uint64_t (**)(uint64_t))(*(void *)a2 + 16LL))(a2);
  DictionaryOfClasses = (const __CFDictionary *)CLConnectionMessage::getDictionaryOfClasses(*a3, v6);
  sub_1002A5550((int)v15, DictionaryOfClasses);
  if ((sub_1002A6F64((uint64_t)v15, "kCLConnectionMessageSubscribeKey", &v14) & 1) != 0)
  {
    uint64_t v8 = *(void (**)(void *, BOOL, uint8_t *))a1;
    uint64_t v9 = *(void *)(a1 + 8);
    uint64_t v10 = (void *)(a2 + (v9 >> 1));
    if ((v9 & 1) != 0) {
      uint64_t v8 = *(void (**)(void *, BOOL, uint8_t *))(*v10 + v8);
    }
    v8(v10, v14, v15);
  }

  else
  {
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101883FD0);
    }
    int v11 = (os_log_s *)qword_101934978;
    if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289026;
      int v17 = 0;
      __int16 v18 = 2082;
      uint64_t v19 = "";
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Couldn't get value for kCLConnectionMessageSubscribeKey key}",  buf,  0x12u);
      if (qword_101934970 != -1) {
        dispatch_once(&qword_101934970, &stru_101883FD0);
      }
    }

    __int128 v12 = (os_log_s *)qword_101934978;
    if (os_signpost_enabled((os_log_t)qword_101934978))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289026;
      int v17 = 0;
      __int16 v18 = 2082;
      uint64_t v19 = "";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v12,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Couldn't get value for kCLConnectionMessageSubscribeKey key",  "{msg%{public}.0s:Couldn't get value for kCLConnectionMessageSubscribeKey key}",  buf,  0x12u);
    }
  }

  return sub_1002A5590(v15);
}

void sub_100DE45BC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
}

void sub_100DE45D8(id a1)
{
  qword_101934978 = (uint64_t)os_log_create("com.apple.locationd.Core", "Client");
}

__n128 sub_100DE4604(uint64_t a1)
{
  id v2 = (char *)operator new(0x18uLL);
  *(void *)id v2 = &off_101884010;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + _Block_object_dispose(va, 8) = result;
  return result;
}

__n128 sub_100DE4640(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &off_101884010;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + _Block_object_dispose(va, 8) = result;
  return result;
}

void sub_100DE4664(uint64_t a1, uint64_t a2, uint64_t *a3)
{
}

uint64_t sub_100DE466C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_100DE46A8()
{
}

void sub_100DE46B4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *a3;
  uint64_t v3 = (std::__shared_weak_count *)a3[1];
  uint64_t v15 = v3;
  *a3 = 0LL;
  a3[1] = 0LL;
  unint64_t v5 = *(void (**)(void *, uint64_t *))a1;
  uint64_t v6 = *(void *)(a1 + 8);
  BOOL v7 = (void *)(a2 + (v6 >> 1));
  if ((v6 & 1) != 0) {
    unint64_t v5 = *(void (**)(void *, uint64_t *))(*v7 + v5);
  }
  uint64_t v16 = v4;
  int v17 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      unint64_t v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }

  v5(v7, &v16);
  uint64_t v10 = v17;
  if (v17)
  {
    int v11 = (unint64_t *)&v17->__shared_owners_;
    do
      unint64_t v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }

  if (v15)
  {
    uint64_t v13 = (unint64_t *)&v15->__shared_owners_;
    do
      unint64_t v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }

void sub_100DE4788( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
}

uint64_t sub_100DE47A4(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  if (a3)
  {
    uint64_t v5 = 56 * a3;
    do
    {
      sub_100DE481C(a1, a2, (__int128 *)a2);
      a2 += 56;
      v5 -= 56LL;
    }

    while (v5);
  }

  return a1;
}

void sub_100DE4808(_Unwind_Exception *a1)
{
}

unsigned __int8 *sub_100DE481C(uint64_t a1, unsigned __int8 *a2, __int128 *a3)
{
  BOOL v7 = (void *)(a1 + 24);
  unint64_t v8 = sub_10004B1A4(a1 + 24, (uint64_t)a2);
  unint64_t v9 = v8;
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    unint64_t v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v3 = v8;
      if (v8 >= v10) {
        unint64_t v3 = v8 % v10;
      }
    }

    else
    {
      unint64_t v3 = (v10 - 1) & v8;
    }

    uint64_t v13 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v3);
    if (v13)
    {
      for (uint64_t i = *v13; i; uint64_t i = *(unsigned __int8 **)i)
      {
        unint64_t v15 = *((void *)i + 1);
        if (v15 == v9)
        {
          if ((sub_100022A24(a1 + 32, i + 16, a2) & 1) != 0) {
            return i;
          }
        }

        else
        {
          if (v12 > 1)
          {
            if (v15 >= v10) {
              v15 %= v10;
            }
          }

          else
          {
            v15 &= v10 - 1;
          }

          if (v15 != v3) {
            break;
          }
        }
      }
    }
  }

  sub_100DE4A9C(a1, v9, a3, (uint64_t)v25);
  float v16 = (float)(unint64_t)(*(void *)(a1 + 24) + 1LL);
  float v17 = *(float *)(a1 + 32);
  if (!v10 || (float)(v17 * (float)v10) < v16)
  {
    BOOL v18 = 1LL;
    if (v10 >= 3) {
      BOOL v18 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v19 = v18 | (2 * v10);
    unint64_t v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20) {
      size_t v21 = v20;
    }
    else {
      size_t v21 = v19;
    }
    sub_100019E10(a1, v21);
    unint64_t v10 = *(void *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10) {
        unint64_t v3 = v9 % v10;
      }
      else {
        unint64_t v3 = v9;
      }
    }

    else
    {
      unint64_t v3 = (v10 - 1) & v9;
    }
  }

  uint64_t v22 = *(void **)(*(void *)a1 + 8 * v3);
  if (v22)
  {
    *(void *)v25[0] = *v22;
    *uint64_t v22 = v25[0];
  }

  else
  {
    *(void *)v25[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v25[0];
    *(void *)(*(void *)a1 + 8 * v3) = a1 + 16;
    if (*(void *)v25[0])
    {
      unint64_t v23 = *(void *)(*(void *)v25[0] + 8LL);
      if ((v10 & (v10 - 1)) != 0)
      {
        if (v23 >= v10) {
          v23 %= v10;
        }
      }

      else
      {
        v23 &= v10 - 1;
      }

      *(void *)(*(void *)a1 + 8 * v23) = v25[0];
    }
  }

  uint64_t i = (unsigned __int8 *)v25[0];
  v25[0] = 0LL;
  ++*v7;
  sub_100272D04((uint64_t)v25, 0LL);
  return i;
}

void sub_100DE4A84(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void *sub_100DE4A9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  unint64_t v8 = operator new(0x48uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + _Block_object_dispose(va, 8) = v7;
  *(_BYTE *)(a4 + 16) = 0;
  *unint64_t v8 = 0LL;
  v8[1] = a2;
  __n128 result = sub_100DE4B10(v8 + 2, a3);
  *(_BYTE *)(a4 + 16) = 1;
  return result;
}

void sub_100DE4AF8(_Unwind_Exception *a1)
{
}

void *sub_100DE4B10(void *__dst, __int128 *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1010DD48C(__dst, *(void **)a2, *((void *)a2 + 1));
  }

  else
  {
    __int128 v4 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)std::string __dst = v4;
  }

  sub_10001A504((uint64_t)(__dst + 3), (uint64_t)a2 + 24);
  return __dst;
}

void sub_100DE4B68(_Unwind_Exception *exception_object)
{
}

void sub_100DE4B84(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x18;
  unint64_t v4 = v2 - 24;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    uint64_t v7 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    unint64_t v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)unint64_t v8 = v10;
      a1[2] += 8LL;
      return;
    }

    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      int v34 = (char *)sub_1000071BC(v5, v33);
      uint64_t v35 = &v34[8 * (v33 >> 2)];
      uint64_t v37 = &v34[8 * v36];
      __int16 v38 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        unint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v40 = 8 * (v39 >> 3);
        uint64_t v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)uint64_t v41 = v42;
          v41 += 8;
          v40 -= 8LL;
        }

        while (v40);
      }

      goto LABEL_30;
    }

void sub_100DE4E4C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100DE4E98()
{
  unsigned __int8 v0 = sub_1010DDBC0(qword_10199EAA8, "com.apple.HealthKit");
  sub_1010DDBC0(v0 + 3, "com.apple.SessionTrackerApp");
  sub_1010DDBC0(qword_10199EAD8, "/usr/local/bin/motmonObjc");
  return __cxa_atexit((void (*)(void *))sub_100DDD628, qword_10199EAA8, (void *)&_mh_execute_header);
}

void sub_100DE4F38(_Unwind_Exception *a1)
{
}

void *sub_100DE4F4C(void *a1, void *a2)
{
  __n128 result = sub_100E030A8(a1, a2);
  *__n128 result = off_101884098;
  result[6] = 0LL;
  result[5] = 0LL;
  result[4] = result + 5;
  return result;
}

BOOL sub_100DE4F7C(uint64_t a1, uint64_t a2)
{
  double v22 = 0.0;
  unsigned int v3 = sub_100E03180(a1, a2, &v22);
  unsigned int v4 = v3;
  HIWORD(v21) = v3;
  uint64_t v6 = a1 + 40;
  uint64_t v5 = *(void *)(a1 + 40);
  double v7 = 0.0;
  if (v5)
  {
    uint64_t v8 = a1 + 40;
    do
    {
      unsigned int v9 = *(unsigned __int16 *)(v5 + 32);
      BOOL v10 = v9 >= v3;
      if (v9 >= v3) {
        uint64_t v11 = (uint64_t *)v5;
      }
      else {
        uint64_t v11 = (uint64_t *)(v5 + 8);
      }
      if (v10) {
        uint64_t v8 = v5;
      }
      uint64_t v5 = *v11;
    }

    while (*v11);
  }

  uint64_t v12 = (unsigned __int8 *)[*(id *)(a1 + 24) bytes];
  else {
    unint64_t v13 = (v12[(unint64_t)v4 >> 1] >> (~(4 * v4) & 4)) & 0xF;
  }
  BOOL v14 = *(uint64_t **)&v22;
  double v15 = v22 - v7;
  double v16 = (double)v13;
  if (v22 - v7 >= (double)v13)
  {
    *(void *)std::stringbuf::string_type buf = (char *)&v21 + 6;
    sub_100DE531C((uint64_t **)(v6 - 8), (unsigned __int16 *)&v21 + 3, (uint64_t)&unk_1012CF090, (_WORD **)buf)[5] = v14;
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_1018840C8);
  }
  uint64_t v17 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 67110144;
    *(_DWORD *)&uint8_t buf[4] = v15 >= v16;
    __int16 v33 = 1024;
    int v34 = HIWORD(v21);
    __int16 v35 = 2048;
    double v36 = v7;
    __int16 v37 = 2048;
    double v38 = v22;
    __int16 v39 = 2048;
    unint64_t v40 = v13;
    _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEBUG,  "shouldILog returned %d for tag %d, last %f now %f, threshold is %lu",  buf,  0x2Cu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_1018840C8);
    }
    LODWORD(v23) = 67110144;
    HIDWORD(v23) = v15 >= v16;
    __int16 v24 = 1024;
    int v25 = HIWORD(v21);
    __int16 v26 = 2048;
    double v27 = v7;
    __int16 v28 = 2048;
    double v29 = v22;
    __int16 v30 = 2048;
    unint64_t v31 = v13;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "shouldILog returned %d for tag %d, last %f now %f, threshold is %lu",  &v23,  44,  v21,  v22,  v23);
    int64_t v20 = (uint8_t *)v19;
    sub_10029211C("Generic", 1LL, 0, 2LL, "virtual BOOL CLActivityLoggerRatePolicy::shouldILog(NSData *)", "%s\n", v19);
    if (v20 != buf) {
      free(v20);
    }
  }

  return v15 >= v16;
}

uint64_t sub_100DE5284(uint64_t a1)
{
  *(void *)a1 = off_101884098;
  sub_100008390(a1 + 32, *(void **)(a1 + 40));
  return sub_100E03118(a1);
}

void sub_100DE52B8(uint64_t a1)
{
  *(void *)a1 = off_101884098;
  sub_100008390(a1 + 32, *(void **)(a1 + 40));
  unint64_t v2 = (void *)sub_100E03118(a1);
  operator delete(v2);
}

void sub_100DE52F0(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

uint64_t **sub_100DE531C(uint64_t **a1, unsigned __int16 *a2, uint64_t a3, _WORD **a4)
{
  double v7 = a1 + 1;
  uint64_t v6 = a1[1];
  if (v6)
  {
    unsigned int v8 = *a2;
    while (1)
    {
      while (1)
      {
        unsigned int v9 = (uint64_t **)v6;
        unsigned int v10 = *((unsigned __int16 *)v6 + 16);
        if (v8 >= v10) {
          break;
        }
        uint64_t v6 = *v9;
        double v7 = v9;
        if (!*v9) {
          goto LABEL_10;
        }
      }

      if (v10 >= v8) {
        break;
      }
      uint64_t v6 = v9[1];
      if (!v6)
      {
        double v7 = v9 + 1;
        goto LABEL_10;
      }
    }
  }

  else
  {
    unsigned int v9 = a1 + 1;
LABEL_10:
    uint64_t v11 = operator new(0x30uLL);
    v11[16] = **a4;
    *((void *)v11 + 5) = 0LL;
    sub_1000085FC(a1, (uint64_t)v9, v7, (uint64_t *)v11);
    return (uint64_t **)v11;
  }

  return v9;
}

uint64_t sub_100DE53DC(uint64_t a1)
{
  *(_OWORD *)(a1 + 16sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 12_Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 8sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 4_Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 20sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 117;
  *(_OWORD *)(a1 + 20_Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(a1 + 2sub_100BDC958(v1 + 24) = 0u;
  *(_OWORD *)(a1 + 24sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0u;
  *(_OWORD *)(a1 + 264) = 0u;
  *(void *)(a1 + 256) = a1 + 264;
  *(void *)(a1 + 192) = off_101884118;
  *(_DWORD *)(a1 + 28sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0;
  *(void *)(a1 + 28_Block_object_dispose(va, 8) = 0xFFEFFFFFFFFFFFFFLL;
  *(_OWORD *)(a1 + 296) = 0u;
  *(_OWORD *)(a1 + 312) = 0u;
  *(_OWORD *)(a1 + 32_Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(a1 + 344) = 0u;
  *(_OWORD *)(a1 + 36sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0u;
  *(_OWORD *)(a1 + 376) = 0u;
  *(_DWORD *)(a1 + 391) = 0;
  *(_DWORD *)(a1 + 396) = 1000;
  *(_OWORD *)(a1 + 52_Block_object_dispose(va, 8) = xmmword_10135EE88;
  *(_OWORD *)(a1 + 544) = unk_10135EE98;
  *(_OWORD *)(a1 + 56sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = xmmword_10135EEA8;
  *(_OWORD *)(a1 + 576) = unk_10135EEB8;
  *(_OWORD *)(a1 + 464) = xmmword_10135EE48;
  *(_OWORD *)(a1 + 48sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = unk_10135EE58;
  *(_OWORD *)(a1 + 496) = xmmword_10135EE68;
  *(_OWORD *)(a1 + 512) = unk_10135EE78;
  *(_OWORD *)(a1 + 40sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = xmmword_10135EE08;
  *(_OWORD *)(a1 + 416) = unk_10135EE18;
  *(_OWORD *)(a1 + 432) = xmmword_10135EE28;
  *(_OWORD *)(a1 + 44_Block_object_dispose(va, 8) = unk_10135EE38;
  *(_DWORD *)(a1 + 60sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0;
  *(void *)(a1 + 592) = 0LL;
  *(void *)(a1 + 664) = 0LL;
  *(_OWORD *)(a1 + 60_Block_object_dispose(va, 8) = xmmword_1012CFB80;
  *(_OWORD *)(a1 + 6sub_100BDC958(v1 + 24) = 0u;
  *(void *)(a1 + 644) = 0LL;
  *(void *)(a1 + 649) = 0LL;
  *(_BYTE *)(a1 + 64sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0;
  *(_OWORD *)(a1 + 672) = xmmword_10135EEC8;
  *(_OWORD *)(a1 + 68_Block_object_dispose(va, 8) = unk_10135EED8;
  *(_OWORD *)(a1 + 704) = xmmword_10135EEE8;
  *(_OWORD *)(a1 + 72sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = unk_10135EEF8;
  *(_OWORD *)(a1 + 736) = 0u;
  *(_OWORD *)(a1 + 752) = 0u;
  *(_OWORD *)(a1 + 76_Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(a1 + 784) = 0u;
  *(_OWORD *)(a1 + 80sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0u;
  *(_DWORD *)(a1 + 816) = 0;
  *(_BYTE *)(a1 + 732) = 1;
  unsigned __int8 v3 = 0;
  sub_1012049AC(v4, "ElevationVerbose", &v3, 0);
  *(_BYTE *)(a1 + 392) = v4[1];
  return a1;
}

void sub_100DE5544(_Unwind_Exception *a1)
{
}

void sub_100DE5598(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)a2;
  __int128 v5 = *(_OWORD *)(a2 + 16);
  __int128 v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 44_Block_object_dispose(va, 8) = v6;
  *(_OWORD *)(a1 + 40sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = v4;
  *(_OWORD *)(a1 + 41sub_1002D62D8(v1 + 6) = v5;
  __int128 v7 = *(_OWORD *)(a2 + 64);
  __int128 v8 = *(_OWORD *)(a2 + 80);
  __int128 v9 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 49sub_1002D62D8(v1 + 6) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 5sub_10046D318(v1 + 12) = v9;
  *(_OWORD *)(a1 + 464) = v7;
  *(_OWORD *)(a1 + 48sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = v8;
  __int128 v10 = *(_OWORD *)(a2 + 128);
  __int128 v11 = *(_OWORD *)(a2 + 144);
  __int128 v12 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 56sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 57sub_1002D62D8(v1 + 6) = v12;
  *(_OWORD *)(a1 + 52_Block_object_dispose(va, 8) = v10;
  *(_OWORD *)(a1 + 544) = v11;
  *(_DWORD *)(a1 + 592) = *(_DWORD *)(a2 + 164);
  sub_100DE566C(a1, a2);
  if (*(uint64_t *)(a1 + 664) >= 21)
  {
    double v13 = *(double *)(a2 + 120);
    if (v13 > 0.0 && v13 <= 20.0)
    {
      unsigned int v14 = *(_DWORD *)(a1 + 592);
      if (v14 > 4 || ((1 << v14) & 0x19) == 0)
      {
        double v15 = *(double *)(a2 + 112);
      }
    }
  }

void sub_100DE566C(uint64_t a1, uint64_t a2)
{
  __int128 v4 = (void *)(a1 + 96);
  unint64_t v5 = *(void *)(a1 + 136);
  if (v5 >= 0x19)
  {
    unint64_t v6 = *(void *)(a1 + 128);
    double v7 = *(double *)(*(void *)(*(void *)(a1 + 104) + 8 * (v6 / 0x15)) + 192 * (v6 % 0x15) + 120);
    if (v7 > 0.0 && v7 <= 20.0) {
      --*(_DWORD *)(a1 + 600);
    }
    *(void *)(a1 + 12_Block_object_dispose(va, 8) = v6 + 1;
    *(void *)(a1 + 13sub_1002D62D8(v1 + 6) = v5 - 1;
    sub_10079BD88(a1 + 96, 1);
  }

  sub_100477DFC(v4, (__int128 *)a2);
  double v9 = *(double *)(a2 + 120);
  if (v9 > 0.0 && v9 <= 20.0) {
    ++*(_DWORD *)(a1 + 600);
  }
}

double sub_100DE5744(uint64_t a1)
{
  return *(double *)(a1 + 608);
}

double sub_100DE574C(uint64_t a1)
{
  return *(double *)(a1 + 616);
}

void sub_100DE5754(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  *(_BYTE *)(a1 + 64sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 1;
  unint64_t v6 = (void *)(a1 + 144);
  unint64_t v7 = *(void *)(a1 + 184);
  if (v7)
  {
    double v8 = *(double *)(a2 + 8);
    double v9 = *(double *)(*(void *)(*(void *)(a1 + 152) + (((v7 + *(void *)(a1 + 176) - 1) >> 3) & 0x1FFFFFFFFFFFFFF8LL))
                   + (((v7 + *(void *)(a1 + 176) - 1) & 0x3F) << 6)
                   + 8);
    if (v8 <= v9 || v8 - v9 > 20.0)
    {
      if (qword_1019345B0 != -1) {
        dispatch_once(&qword_1019345B0, &stru_1018840E8);
      }
      __int128 v11 = (os_log_s *)qword_1019345B8;
      if (os_log_type_enabled((os_log_t)qword_1019345B8, OS_LOG_TYPE_ERROR))
      {
        uint64_t v12 = *(void *)(a2 + 8);
        uint64_t v13 = *(void *)(*(void *)(*(void *)(a1 + 152) + ((*(void *)(a1 + 176) >> 3) & 0x1FFFFFFFFFFFFFF8LL))
                        + ((*(void *)(a1 + 176) & 0x3FLL) << 6)
                        + 8);
        *(_DWORD *)std::stringbuf::string_type buf = 134218240;
        uint64_t v23 = v12;
        __int16 v24 = 2048;
        uint64_t v25 = v13;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_ERROR,  "WorkoutElevationFusion,phone source time rolled back, now %f, prev, %f",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019345B0 != -1) {
          dispatch_once(&qword_1019345B0, &stru_1018840E8);
        }
        uint64_t v14 = *(void *)(a2 + 8);
        uint64_t v15 = *(void *)(*(void *)(*(void *)(a1 + 152) + ((*(void *)(a1 + 176) >> 3) & 0x1FFFFFFFFFFFFFF8LL))
                        + ((*(void *)(a1 + 176) & 0x3FLL) << 6)
                        + 8);
        int v18 = 134218240;
        uint64_t v19 = v14;
        __int16 v20 = 2048;
        uint64_t v21 = v15;
        LODWORD(v17) = 22;
        double v16 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345B8,  16LL,  "WorkoutElevationFusion,phone source time rolled back, now %f, prev, %f",  COERCE_DOUBLE(&v18),  v17);
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "CLElevationChangeEntry CLWorkoutElevationFusion::feedPhoneBaroElevation(const CLElevationChangeEntry &)",  "%s\n",  v16);
      }

      sub_100DE5A08(a1);
      unint64_t v7 = *(void *)(a1 + 184);
    }

    if (v7 >= 0xA)
    {
      ++*(void *)(a1 + 176);
      *(void *)(a1 + sub_10000AE14(v2 + 184) = v7 - 1;
      sub_1002D6E20((uint64_t)v6, 1);
    }
  }

  sub_10046E4C0(v6, a2);
  sub_100DE5C88(a1, a3);
}

double sub_100DE5A08(uint64_t a1)
{
  uint64_t v2 = *(void ***)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  *(void *)(a1 + 4sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0LL;
  unint64_t v4 = v3 - (void)v2;
  if (v4 >= 0x11)
  {
    do
    {
      operator delete(*v2);
      uint64_t v5 = *(void *)(a1 + 16);
      uint64_t v2 = (void **)(*(void *)(a1 + 8) + 8LL);
      *(void *)(a1 + _Block_object_dispose(va, 8) = v2;
      unint64_t v4 = v5 - (void)v2;
    }

    while (v4 > 0x10);
  }

  if (v4 >> 3 == 1)
  {
    uint64_t v6 = 10LL;
  }

  else
  {
    if (v4 >> 3 != 2) {
      goto LABEL_8;
    }
    uint64_t v6 = 21LL;
  }

  *(void *)(a1 + 32) = v6;
LABEL_8:
  unint64_t v7 = *(void ***)(a1 + 56);
  uint64_t v8 = *(void *)(a1 + 64);
  *(void *)(a1 + 8_Block_object_dispose(va, 8) = 0LL;
  unint64_t v9 = v8 - (void)v7;
  if (v9 >= 0x11)
  {
    do
    {
      operator delete(*v7);
      uint64_t v10 = *(void *)(a1 + 64);
      unint64_t v7 = (void **)(*(void *)(a1 + 56) + 8LL);
      *(void *)(a1 + 5sub_1002D62D8(v1 + 6) = v7;
      unint64_t v9 = v10 - (void)v7;
    }

    while (v9 > 0x10);
  }

  if (v9 >> 3 == 1)
  {
    uint64_t v11 = 32LL;
  }

  else
  {
    if (v9 >> 3 != 2) {
      goto LABEL_15;
    }
    uint64_t v11 = 64LL;
  }

  *(void *)(a1 + 8sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = v11;
LABEL_15:
  uint64_t v12 = *(void ***)(a1 + 104);
  uint64_t v13 = *(void *)(a1 + 112);
  *(void *)(a1 + 13sub_1002D62D8(v1 + 6) = 0LL;
  unint64_t v14 = v13 - (void)v12;
  if (v14 >= 0x11)
  {
    do
    {
      operator delete(*v12);
      uint64_t v15 = *(void *)(a1 + 112);
      uint64_t v12 = (void **)(*(void *)(a1 + 104) + 8LL);
      *(void *)(a1 + 104) = v12;
      unint64_t v14 = v15 - (void)v12;
    }

    while (v14 > 0x10);
  }

  if (v14 >> 3 == 1)
  {
    uint64_t v16 = 10LL;
  }

  else
  {
    if (v14 >> 3 != 2) {
      goto LABEL_22;
    }
    uint64_t v16 = 21LL;
  }

  *(void *)(a1 + 12_Block_object_dispose(va, 8) = v16;
LABEL_22:
  double v17 = *(void ***)(a1 + 152);
  uint64_t v18 = *(void *)(a1 + 160);
  *(void *)(a1 + sub_10000AE14(v2 + 184) = 0LL;
  unint64_t v19 = v18 - (void)v17;
  if (v19 >= 0x11)
  {
    do
    {
      operator delete(*v17);
      uint64_t v20 = *(void *)(a1 + 160);
      double v17 = (void **)(*(void *)(a1 + 152) + 8LL);
      *(void *)(a1 + 152) = v17;
      unint64_t v19 = v20 - (void)v17;
    }

    while (v19 > 0x10);
  }

  if (v19 >> 3 == 1)
  {
    uint64_t v21 = 32LL;
  }

  else
  {
    if (v19 >> 3 != 2) {
      goto LABEL_29;
    }
    uint64_t v21 = 64LL;
  }

  *(void *)(a1 + 17sub_1002D62D8(v1 + 6) = v21;
LABEL_29:
  double v22 = *(void ***)(a1 + 304);
  uint64_t v23 = *(void *)(a1 + 312);
  *(void *)(a1 + 33sub_1002D62D8(v1 + 6) = 0LL;
  unint64_t v24 = v23 - (void)v22;
  if (v24 >= 0x11)
  {
    do
    {
      operator delete(*v22);
      uint64_t v25 = *(void *)(a1 + 312);
      double v22 = (void **)(*(void *)(a1 + 304) + 8LL);
      *(void *)(a1 + 304) = v22;
      unint64_t v24 = v25 - (void)v22;
    }

    while (v24 > 0x10);
  }

  if (v24 >> 3 == 1)
  {
    uint64_t v26 = 256LL;
  }

  else
  {
    if (v24 >> 3 != 2) {
      goto LABEL_36;
    }
    uint64_t v26 = 512LL;
  }

  *(void *)(a1 + 32_Block_object_dispose(va, 8) = v26;
LABEL_36:
  double v27 = *(void ***)(a1 + 352);
  uint64_t v28 = *(void *)(a1 + 360);
  *(void *)(a1 + 384) = 0LL;
  unint64_t v29 = v28 - (void)v27;
  if (v29 >= 0x11)
  {
    do
    {
      operator delete(*v27);
      uint64_t v30 = *(void *)(a1 + 360);
      double v27 = (void **)(*(void *)(a1 + 352) + 8LL);
      *(void *)(a1 + 352) = v27;
      unint64_t v29 = v30 - (void)v27;
    }

    while (v29 > 0x10);
  }

  if (v29 >> 3 == 1)
  {
    uint64_t v31 = 256LL;
    goto LABEL_42;
  }

  if (v29 >> 3 == 2)
  {
    uint64_t v31 = 512LL;
LABEL_42:
    *(void *)(a1 + 37sub_1002D62D8(v1 + 6) = v31;
  }

  sub_100210444((void *)(a1 + 192));
  *(_DWORD *)(a1 + 28sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0;
  *(_WORD *)(a1 + 393) = 0;
  *(_DWORD *)(a1 + 39sub_1002D62D8(v1 + 6) = 1000;
  double result = 0.0;
  *(_OWORD *)(a1 + 40sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0u;
  *(_OWORD *)(a1 + 41sub_1002D62D8(v1 + 6) = 0u;
  *(_OWORD *)(a1 + 432) = 0u;
  *(_OWORD *)(a1 + 44_Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(a1 + 464) = 0u;
  *(_OWORD *)(a1 + 48sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0u;
  *(_OWORD *)(a1 + 49sub_1002D62D8(v1 + 6) = 0u;
  *(_OWORD *)(a1 + 5sub_10046D318(v1 + 12) = 0u;
  *(_OWORD *)(a1 + 52_Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(a1 + 544) = 0u;
  *(_OWORD *)(a1 + 56sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0u;
  *(_OWORD *)(a1 + 57sub_1002D62D8(v1 + 6) = 0u;
  *(void *)(a1 + 59sub_1002D62D8(v1 + 6) = 0LL;
  *(_OWORD *)(a1 + 60_Block_object_dispose(va, 8) = xmmword_1012CFB80;
  *(_OWORD *)(a1 + 6sub_100BDC958(v1 + 24) = 0u;
  *(_DWORD *)(a1 + 592) = 0;
  *(void *)(a1 + 664) = 0LL;
  return result;
}

void sub_100DE5C88(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  int v4 = sub_100DE6A30(a1);
  int v5 = v4;
  double v6 = *(double *)(a1 + 680);
  if (v6 == 0.0) {
    goto LABEL_14;
  }
  if (v4)
  {
    uint64_t v7 = *(void *)(a1 + 88);
    if (!v7) {
      goto LABEL_14;
    }
    unint64_t v8 = v7 + *(void *)(a1 + 80) - 1;
    uint64_t v9 = *(void *)(a1 + 56);
  }

  else
  {
    uint64_t v10 = *(void *)(a1 + 184);
    if (!v10) {
      goto LABEL_14;
    }
    unint64_t v8 = v10 + *(void *)(a1 + 176) - 1;
    uint64_t v9 = *(void *)(a1 + 152);
  }

  if (v6 <= *(double *)(*(void *)(v9 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) + ((v8 & 0x3F) << 6) + 8))
  {
LABEL_14:
    sub_100DE6D98(a1, v4, a2);
    int v16 = *(_DWORD *)(a1 + 396);
    if (v16 == v5) {
      return;
    }
    if (v5 != 2 || v16 != 1)
    {
      if (v5 == 1000)
      {
        switch(v16)
        {
          case 3:
            ++*(_DWORD *)(a1 + 816);
            break;
          case 2:
            ++*(_DWORD *)(a1 + 812);
            break;
          case 1:
            ++*(_DWORD *)(a1 + 808);
            break;
        }

        goto LABEL_18;
      }

      if (v5 == 3)
      {
        ++*(_DWORD *)(a1 + 804);
        goto LABEL_18;
      }

      if (v5 != 1 || v16 != 2) {
        goto LABEL_18;
      }
    }

    ++*(_DWORD *)(a1 + 800);
LABEL_18:
    *(_DWORD *)(a1 + 39sub_1002D62D8(v1 + 6) = v5;
    return;
  }

  if (qword_1019345B0 != -1) {
    dispatch_once(&qword_1019345B0, &stru_1018840E8);
  }
  uint64_t v11 = (os_log_s *)qword_1019345B8;
  if (os_log_type_enabled((os_log_t)qword_1019345B8, OS_LOG_TYPE_ERROR))
  {
    uint64_t v12 = *(void *)(a1 + 680);
    *(_DWORD *)std::stringbuf::string_type buf = 134217984;
    uint64_t v22 = v12;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_ERROR,  "WorkoutElevationFusion,unexpected timestamp on source switch,fElevationWatch.startTime,%f",  buf,  0xCu);
  }

  uint64_t v13 = (_OWORD *)(a1 + 672);
  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019345B0 != -1) {
      dispatch_once(&qword_1019345B0, &stru_1018840E8);
    }
    uint64_t v17 = *(void *)(a1 + 680);
    int v19 = 134217984;
    uint64_t v20 = v17;
    uint64_t v18 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345B8,  16LL,  "WorkoutElevationFusion,unexpected timestamp on source switch,fElevationWatch.startTime,%f",  COERCE_DOUBLE(&v19));
    sub_10029211C("Generic", 1LL, 0, 0LL, "CLElevationChangeEntry CLWorkoutElevationFusion::tick()", "%s\n", v18);
  }

  __int128 v14 = v13[1];
  *a2 = *v13;
  a2[1] = v14;
  __int128 v15 = v13[3];
  a2[2] = v13[2];
  a2[3] = v15;
}

void sub_100DE5F78(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  double v6 = (void *)(a1 + 48);
  unint64_t v7 = *(void *)(a1 + 88);
  if (v7)
  {
    double v8 = *(double *)(a2 + 8);
    double v9 = *(double *)(*(void *)(*(void *)(a1 + 56) + (((v7 + *(void *)(a1 + 80) - 1) >> 3) & 0x1FFFFFFFFFFFFFF8LL))
                   + (((v7 + *(void *)(a1 + 80) - 1) & 0x3F) << 6)
                   + 8);
    if (v8 <= v9 || v8 - v9 > 20.0)
    {
      if (qword_1019345B0 != -1) {
        dispatch_once(&qword_1019345B0, &stru_1018840E8);
      }
      uint64_t v11 = (os_log_s *)qword_1019345B8;
      if (os_log_type_enabled((os_log_t)qword_1019345B8, OS_LOG_TYPE_ERROR))
      {
        uint64_t v12 = *(void *)(a2 + 8);
        uint64_t v13 = *(void *)(*(void *)(*(void *)(a1 + 56) + ((*(void *)(a1 + 80) >> 3) & 0x1FFFFFFFFFFFFFF8LL))
                        + ((*(void *)(a1 + 80) & 0x3FLL) << 6)
                        + 8);
        *(_DWORD *)std::stringbuf::string_type buf = 134218240;
        *(void *)&uint8_t buf[4] = v12;
        *(_WORD *)&_BYTE buf[12] = 2048;
        *(void *)&_BYTE buf[14] = v13;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_ERROR,  "WorkoutElevationFusion,watch source time rolled back, now %f, prev, %f",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019345B0 != -1) {
          dispatch_once(&qword_1019345B0, &stru_1018840E8);
        }
        uint64_t v22 = *(void *)(a2 + 8);
        uint64_t v23 = *(void *)(*(void *)(*(void *)(a1 + 56) + ((*(void *)(a1 + 80) >> 3) & 0x1FFFFFFFFFFFFFF8LL))
                        + ((*(void *)(a1 + 80) & 0x3FLL) << 6)
                        + 8);
        int v26 = 134218240;
        uint64_t v27 = v22;
        __int16 v28 = 2048;
        uint64_t v29 = v23;
        LODWORD(v25) = 22;
        unint64_t v24 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345B8,  16LL,  "WorkoutElevationFusion,watch source time rolled back, now %f, prev, %f",  COERCE_DOUBLE(&v26),  v25);
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "CLElevationChangeEntry CLWorkoutElevationFusion::feedWatchBaroElevation(const CLElevationChangeEntry &)",  "%s\n",  v24);
        if (v24 != buf) {
          free(v24);
        }
      }

      sub_100DE5A08(a1);
      unint64_t v7 = *(void *)(a1 + 88);
    }

    if (v7 >= 0xA)
    {
      unint64_t v14 = *(void *)(a1 + 80);
      if (*(_BYTE *)(*(void *)(*(void *)(a1 + 56) + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) + ((v14 & 0x3F) << 6) + 52) == 3)
      {
        double v15 = *(double *)(*(void *)(*(void *)(a1 + 8) + 8 * (*(void *)(a1 + 32) / 0x15uLL))
                        + 192 * (*(void *)(a1 + 32) % 0x15uLL)
                        + 104);
        if (v15 <= 0.0 || v15 > 32.5) {
          --*(_DWORD *)(a1 + 624);
        }
      }

      *(void *)(a1 + 8sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = v14 + 1;
      *(void *)(a1 + 8_Block_object_dispose(va, 8) = v7 - 1;
      sub_1002D6E20((uint64_t)v6, 1);
    }
  }

  sub_10046E4C0(v6, a2);
  unint64_t v16 = *(void *)(a1 + 40);
  if (v16 >= 0xA)
  {
    ++*(void *)(a1 + 32);
    *(void *)(a1 + 4sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = v16 - 1;
    sub_10079BD88(a1, 1);
  }

  if (*(double *)(a2 + 8) - *(double *)(a1 + 400) >= 2.56)
  {
    memset(&v32.u64[1], 0, 72);
    memset(&buf[8], 0, 88);
    *(void *)std::stringbuf::string_type buf = 0xFFEFFFFFFFFFFFFFLL;
    int64x2_t v31 = vdupq_n_s64(0xFFEFFFFFFFFFFFFFLL);
    int64x2_t v32 = v31;
    sub_100477DFC((void *)a1, (__int128 *)buf);
  }

  else
  {
    sub_100477DFC((void *)a1, (__int128 *)(a1 + 400));
  }

  sub_100DE6398(a1, *(double *)(a2 + 8));
  sub_100DE6474((void *)a1, v17, v18, v19);
  sub_100DE656C(a1);
  sub_100DE6854((void *)a1, v20, v21);
  if (*(_BYTE *)(a2 + 52) == 3 && !*(_BYTE *)(a1 + 393)) {
    ++*(_DWORD *)(a1 + 624);
  }
  sub_100DE5C88(a1, a3);
}

uint64_t sub_100DE6398(uint64_t result, double a2)
{
  uint64_t v2 = *(void *)(result + 136);
  if (v2)
  {
    uint64_t v4 = result;
    uint64_t v5 = result + 96;
    do
    {
      unint64_t v6 = *(void *)(v4 + 128);
      uint64_t v7 = (v6 * (unsigned __int128)0x8618618618618619LL) >> 64;
      if (*v8 + 25.0 >= a2) {
        break;
      }
      double v9 = v8[15];
      if (v9 > 0.0 && v9 <= 20.0) {
        --*(_DWORD *)(v4 + 600);
      }
      *(void *)(v4 + 12_Block_object_dispose(va, 8) = v6 + 1;
      *(void *)(v4 + 13sub_1002D62D8(v1 + 6) = v2 - 1;
      double result = sub_10079BD88(v5, 1);
      uint64_t v2 = *(void *)(v4 + 136);
    }

    while (v2);
  }

  return result;
}

void sub_100DE6474(void *a1, double a2, double a3, double a4)
{
  uint64_t v4 = a1[11];
  if (v4)
  {
    uint64_t v5 = a1[5];
    if (v5)
    {
      unint64_t v6 = *(void *)(a1[1] + 8 * ((v5 + a1[4] - 1) / 0x15uLL)) + 192 * ((v5 + a1[4] - 1) % 0x15uLL);
      double v7 = *(double *)(v6 + 104);
      if (v7 <= 0.0 || (HIDWORD(v_Block_object_dispose(va, 8) = 1077952512, v7 > 32.5))
      {
        sub_100DE7E08((uint64_t)(a1 + 24), &dbl_10135EF08);
      }

      else
      {
        LODWORD(v_Block_object_dispose(va, 8) = *(_DWORD *)(v9 + 16);
        LODWORD(a4) = *(_DWORD *)(v9 + 20);
        double v10 = *(double *)(v6 + 96) + ((double)v8 - (double)*(unint64_t *)&a4) / -100.0;
        sub_100DE7E08((uint64_t)(a1 + 24), &v10);
      }
    }
  }

void sub_100DE656C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2)
  {
    unint64_t v3 = *(void *)(*(void *)(a1 + 8) + 8 * ((v2 + *(void *)(a1 + 32) - 1) / 0x15uLL))
       + 192 * ((v2 + *(void *)(a1 + 32) - 1) % 0x15uLL);
    double v4 = *(double *)(v3 + 104);
    BOOL v5 = v4 > 0.0;
    if (v4 > 32.5) {
      BOOL v5 = 0;
    }
    *(_BYTE *)(a1 + 393) = v5;
    double v6 = *(double *)(v3 + 120);
    BOOL v7 = v6 <= 0.0 || v6 > 20.0;
    LOBYTE(v2) = !v7 && ((unsigned int v8 = *(_DWORD *)(a1 + 592), v8 > 4) || ((1 << v8) & 0x19) == 0);
  }

  else
  {
    *(_BYTE *)(a1 + 393) = 0;
  }

  *(_BYTE *)(a1 + 394) = v2;
  if (qword_1019345B0 != -1) {
    dispatch_once(&qword_1019345B0, &stru_1018840E8);
  }
  uint64_t v9 = (os_log_s *)qword_1019345B8;
  if (os_log_type_enabled((os_log_t)qword_1019345B8, OS_LOG_TYPE_DEBUG))
  {
    unint64_t v10 = *(void *)(a1 + 88) + *(void *)(a1 + 80) - 1LL;
    LODWORD(v1sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 56) + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8LL))
                                      + ((v10 & 0x3F) << 6)
                                      + 52);
    int v11 = *(unsigned __int8 *)(a1 + 393);
    int v12 = *(unsigned __int8 *)(a1 + 394);
    *(_DWORD *)std::stringbuf::string_type buf = 67109632;
    int v22 = v10;
    __int16 v23 = 1024;
    int v24 = v11;
    __int16 v25 = 1024;
    int v26 = v12;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "WorkoutElevationFusion,BaroQuality,%d,DEMSourceAvailable,%d,GPSSourceAvailable,%d",  buf,  0x14u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019345B0 != -1) {
      dispatch_once(&qword_1019345B0, &stru_1018840E8);
    }
    int v13 = *(unsigned __int8 *)(a1 + 393);
    int v14 = *(unsigned __int8 *)(a1 + 394);
    __int16 v17 = 1024;
    int v18 = v13;
    __int16 v19 = 1024;
    int v20 = v14;
    double v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345B8,  2LL,  "WorkoutElevationFusion,BaroQuality,%d,DEMSourceAvailable,%d,GPSSourceAvailable,%d",  &v16,  20,  67109632);
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLWorkoutElevationFusion::updateSourceAvailability()", "%s\n", v15);
  }

void sub_100DE6854(void *a1, double a2, double a3)
{
  unint64_t v4 = a1[11];
  if (v4 >= 2)
  {
    unint64_t v5 = v4 + a1[10];
    uint64_t v6 = a1[7];
    uint64_t v7 = *(void *)(v6 + (((v5 - 1) >> 3) & 0x1FFFFFFFFFFFFFF8LL)) + (((v5 - 1) & 0x3F) << 6);
    uint64_t v8 = *(void *)(v6 + (((v5 - 2) >> 3) & 0x1FFFFFFFFFFFFFF8LL)) + (((v5 - 2) & 0x3F) << 6);
    LODWORD(a2) = *(_DWORD *)(v7 + 16);
    LODWORD(a3) = *(_DWORD *)(v7 + 20);
    *(double *)&unint64_t v9 = (double)*(unint64_t *)&a2;
    *(double *)&unint64_t v10 = (double)*(unint64_t *)&a3;
    double v11 = *(double *)&v9 - *(double *)&v10;
    LODWORD(v9) = *(_DWORD *)(v8 + 16);
    LODWORD(v1sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = *(_DWORD *)(v8 + 20);
    double v12 = (double)v9;
    double v13 = (double)v10;
    unint64_t v14 = a1[42];
    if (v14 >= 7)
    {
      ++a1[41];
      a1[42] = v14 - 1;
      sub_1002109A4((uint64_t)(a1 + 37), 1);
    }

    double v27 = (v11 + v13 - v12) / 100.0;
    sub_100355FA8(a1 + 37, &v27);
  }

  unint64_t v15 = a1[5];
  if (v15 >= 2)
  {
    unint64_t v16 = v15 + a1[4];
    uint64_t v17 = a1[1];
    uint64_t v18 = ((v16 - 1) * (unsigned __int128)0x8618618618618619LL) >> 64;
    unint64_t v19 = (v18 + ((v16 - 1 - v18) >> 1)) >> 4;
    uint64_t v20 = *(void *)(v17 + 8 * v19) + 192 * (v16 - 1 - 21 * v19);
    double v21 = *(double *)(v20 + 96);
    double v22 = *(double *)(v20 + 104);
    unint64_t v23 = *(void *)(v17 + 8 * ((v16 - 2) / 0x15)) + 192 * ((v16 - 2) % 0x15);
    double v24 = *(double *)(v23 + 96);
    double v25 = *(double *)(v23 + 104);
    unint64_t v26 = a1[48];
    if (v26 >= 7)
    {
      ++a1[47];
      a1[48] = v26 - 1;
      sub_1002109A4((uint64_t)(a1 + 43), 1);
    }

    if (v22 <= 0.0 || v22 > 32.5 || v25 <= 0.0 || v25 > 32.5)
    {
      sub_100355FA8(a1 + 43, &dbl_10135EF08);
    }

    else
    {
      double v27 = v21 - v24;
      sub_100355FA8(a1 + 43, &v27);
    }
  }

uint64_t sub_100DE6A30(uint64_t a1)
{
  uint64_t v1 = 0LL;
  *(_BYTE *)(a1 + 599) = 0;
  if (*(_BYTE *)(a1 + 640)) {
    return v1;
  }
  double Current = CFAbsoluteTimeGetCurrent();
  double v5 = *(double *)(a1 + 400);
  BOOL v6 = v5 <= 0.0;
  double v7 = vabdd_f64(Current, v5);
  if (!v6 && v7 < 25.0)
  {
    if (*(_DWORD *)(a1 + 576) == 4)
    {
      double v11 = *(double *)(a1 + 584);
      BOOL v12 = v11 <= 1.0 && v11 >= 0.0;
    }

    else
    {
      BOOL v12 = 0;
    }

    if (qword_1019345B0 != -1) {
      dispatch_once(&qword_1019345B0, &stru_1018840E8);
    }
    unint64_t v15 = (os_log_s *)qword_1019345B8;
    if (os_log_type_enabled((os_log_t)qword_1019345B8, OS_LOG_TYPE_INFO))
    {
      int v16 = *(_DWORD *)(a1 + 576);
      uint64_t v17 = *(void *)(a1 + 584);
      *(_DWORD *)std::stringbuf::string_type buf = 134218752;
      double v30 = Current;
      __int16 v31 = 1024;
      BOOL v32 = v12;
      __int16 v33 = 1024;
      int v34 = v16;
      __int16 v35 = 2048;
      uint64_t v36 = v17;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_INFO,  "WorkoutElevationFusion,timestamp,%.3f,onRunningTrack,%d,proximity,%u,distanceToTrackMeters,%.1f",  buf,  0x22u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019345B0 != -1) {
        dispatch_once(&qword_1019345B0, &stru_1018840E8);
      }
      int v18 = *(_DWORD *)(a1 + 576);
      uint64_t v19 = *(void *)(a1 + 584);
      int v21 = 134218752;
      double v22 = Current;
      __int16 v23 = 1024;
      BOOL v24 = v12;
      __int16 v25 = 1024;
      int v26 = v18;
      __int16 v27 = 2048;
      uint64_t v28 = v19;
      uint64_t v20 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345B8,  1LL,  "WorkoutElevationFusion,timestamp,%.3f,onRunningTrack,%d,proximity,%u,distanceToTrackMeters,%.1f",  COERCE_DOUBLE(&v21),  34);
      sub_10029211C("Generic", 1LL, 0, 2LL, "CLElevationSource CLWorkoutElevationFusion::chooseSource()", "%s\n", v20);
    }

    if (v12) {
      return 4LL;
    }
  }

  if (!*(void *)(a1 + 88)) {
    return 1000LL;
  }
  if ((sub_1004F97F4() & 0x1000000000LL) == 0) {
    return 1LL;
  }
  unsigned int v9 = *(_DWORD *)(a1 + 624);
  if (v9 < 8)
  {
    if (v9 > 2) {
      goto LABEL_22;
    }
    int v13 = *(_DWORD *)(a1 + 628);
    if (v13 <= 1) {
      int v13 = 1;
    }
    int v10 = v13 - 1;
  }

  else
  {
    if (*(_DWORD *)(a1 + 600) < 0x14u) {
      goto LABEL_22;
    }
    int v10 = 75;
  }

  *(_DWORD *)(a1 + 62_Block_object_dispose(va, 8) = v10;
LABEL_22:
  if (*(_DWORD *)(a1 + 600) <= 0xCu) {
    *(_DWORD *)(a1 + 62_Block_object_dispose(va, 8) = 0;
  }
  unint64_t v14 = *(void *)(a1 + 88) + *(void *)(a1 + 80) - 1LL;
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 56) + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8LL))
                          + ((v14 & 0x3F) << 6)
                          + 52);
  if ((_DWORD)v1 != 1)
  {
    if ((_DWORD)v1 == 3)
    {
      if (*(_BYTE *)(a1 + 393))
      {
        *(_BYTE *)(a1 + 599) = 1;
        return 2LL;
      }

      return 1000LL;
    }

    if (*(_BYTE *)(a1 + 393))
    {
      uint64_t v1 = 1LL;
      if (!sub_100DE7EF4((_BYTE *)a1, a1 + 192))
      {
        if (sub_100DE82DC((void *)a1, (void *)(a1 + 344))) {
          return 1LL;
        }
        else {
          return 2LL;
        }
      }
    }

    else
    {
      uint64_t v1 = 1LL;
      *(_BYTE *)(a1 + 599) = 1;
    }
  }

  return v1;
}

void sub_100DE6D98(uint64_t a1@<X0>, int a2@<W1>, _OWORD *a3@<X8>)
{
  unint64_t v6 = *(void *)(a1 + 88);
  double v7 = 0.0;
  if (v6 < 2)
  {
    int v11 = 0;
    unsigned int v10 = 0;
    unsigned int v9 = 0;
    double v20 = -1.0;
    double v19 = 0.0;
    double v18 = -1.0;
    double v17 = 0.0;
    double v23 = -1.0;
    double v22 = 0.0;
  }

  else
  {
    uint64_t v8 = *(void *)(*(void *)(a1 + 56) + (((v6 + *(void *)(a1 + 80) - 1) >> 3) & 0x1FFFFFFFFFFFFFF8LL))
       + (((v6 + *(void *)(a1 + 80) - 1) & 0x3F) << 6);
    unsigned int v9 = *(_DWORD *)(v8 + 16);
    unsigned int v10 = *(_DWORD *)(v8 + 20);
    int v11 = *(unsigned __int8 *)(v8 + 52);
    uint64_t v12 = *(void *)(a1 + 32) + *(void *)(a1 + 40);
    uint64_t v13 = *(void *)(a1 + 8);
    uint64_t v14 = ((unint64_t)(v12 - 1) * (unsigned __int128)0x8618618618618619LL) >> 64;
    unint64_t v15 = (v14 + ((unint64_t)(v12 - 1 - v14) >> 1)) >> 4;
    int v16 = (double *)(*(void *)(v13 + 8 * v15) + 192 * (v12 - 1 - 21 * v15));
    double v17 = v16[12];
    double v18 = v16[13];
    double v19 = v16[14];
    double v20 = v16[15];
    unint64_t v21 = *(void *)(v13 + 8 * ((v12 - 2) / 0x15uLL)) + 192 * ((v12 - 2) % 0x15uLL);
    double v22 = *(double *)(v21 + 96);
    double v23 = *(double *)(v21 + 104);
  }

  switch(a2)
  {
    case 0:
      if (!*(_DWORD *)(a1 + 396))
      {
        unint64_t v24 = *(void *)(a1 + 184);
        if (v24 >= 2)
        {
          unint64_t v25 = v24 + *(void *)(a1 + 176);
          uint64_t v26 = *(void *)(a1 + 152);
          uint64_t v27 = *(void *)(v26 + (((v25 - 1) >> 3) & 0x1FFFFFFFFFFFFFF8LL)) + (((v25 - 1) & 0x3F) << 6);
          uint64_t v28 = *(void *)(v26 + (((v25 - 2) >> 3) & 0x1FFFFFFFFFFFFFF8LL)) + (((v25 - 2) & 0x3F) << 6);
          LODWORD(v19) = *(_DWORD *)(v27 + 16);
          LODWORD(v17) = *(_DWORD *)(v27 + 20);
          *(double *)&unint64_t v29 = (double)*(unint64_t *)&v17;
          double v19 = (double)*(unint64_t *)&v19 - *(double *)&v29;
          LODWORD(v29) = *(_DWORD *)(v28 + 16);
          LODWORD(v22) = *(_DWORD *)(v28 + 20);
          double v17 = (double)*(unint64_t *)&v22 - (double)v29;
          double v7 = v19 + v17;
          ++*(_DWORD *)(a1 + 792);
        }
      }

      goto LABEL_46;
    case 1:
      if (v6 < 2) {
        goto LABEL_45;
      }
      uint64_t v30 = *(void *)(*(void *)(a1 + 56) + (((v6 + *(void *)(a1 + 80) - 2) >> 3) & 0x1FFFFFFFFFFFFFF8LL))
          + (((v6 + *(void *)(a1 + 80) - 2) & 0x3F) << 6);
      if (*(_BYTE *)(v30 + 52) == 3)
      {
        if (*(_DWORD *)(a1 + 396) != 2) {
          goto LABEL_45;
        }
        if (v18 <= 0.0) {
          goto LABEL_45;
        }
        HIDWORD(v19) = 1077952512;
        if (v18 > 32.5 || v23 <= 0.0 || v23 > 32.5) {
          goto LABEL_45;
        }
        double v19 = v17 - v22;
        HIDWORD(v17) = 1079574528;
        double v7 = v19 * 100.0;
        ++*(_DWORD *)(a1 + 760);
      }

      else
      {
        *(double *)&unint64_t v39 = (double)v10;
        double v19 = (double)v9 - (double)v10;
        LODWORD(v39) = *(_DWORD *)(v30 + 16);
        LODWORD(v22) = *(_DWORD *)(v30 + 20);
        double v17 = (double)*(unint64_t *)&v22 - (double)v39;
        double v7 = v19 + v17;
        if (v11 == 2)
        {
          if (*(_BYTE *)(a1 + 393))
          {
            if (*(_BYTE *)(a1 + 598)) {
              ++*(_DWORD *)(a1 + 744);
            }
            else {
              ++*(_DWORD *)(a1 + 752);
            }
          }

          else
          {
            ++*(_DWORD *)(a1 + 756);
          }
        }

        else if (v11 == 1)
        {
          ++*(_DWORD *)(a1 + 740);
        }
      }

      goto LABEL_46;
    case 2:
      int v31 = *(_DWORD *)(a1 + 396);
      if (v31 == 3)
      {
        double v17 = 20.0;
        if (v20 <= 0.0 || v20 > 20.0) {
          goto LABEL_45;
        }
        switch(v11)
        {
          case 3:
            ++*(_DWORD *)(a1 + 776);
            break;
          case 2:
            ++*(_DWORD *)(a1 + 772);
            break;
          case 1:
            ++*(_DWORD *)(a1 + 768);
            break;
        }

        double v19 = v19 - *(double *)(a1 + 632);
      }

      else
      {
        if (v31 != 2)
        {
          if (v31 != 1) {
            goto LABEL_45;
          }
          if (v23 <= 0.0) {
            goto LABEL_45;
          }
          HIDWORD(v19) = 1077952512;
          if (v23 > 32.5) {
            goto LABEL_45;
          }
        }

        if (v11 == 3) {
          ++*(_DWORD *)(a1 + 760);
        }
        else {
          ++*(_DWORD *)(a1 + 748);
        }
        double v19 = v17 - v22;
      }

      HIDWORD(v17) = 1079574528;
      double v7 = v19 * 100.0;
      goto LABEL_46;
    case 3:
      if (*(_DWORD *)(a1 + 396) == 3)
      {
        double v17 = 20.0;
        if (v20 > 0.0 && v20 <= 20.0)
        {
          switch(v11)
          {
            case 3:
              ++*(_DWORD *)(a1 + 776);
              break;
            case 2:
              ++*(_DWORD *)(a1 + 772);
              break;
            case 1:
              ++*(_DWORD *)(a1 + 768);
              break;
          }

          double v17 = v19 - *(double *)(a1 + 632);
          double v7 = v17 * 100.0;
          *(double *)(a1 + 632) = v19;
          goto LABEL_46;
        }
      }

      else
      {
        unint64_t v33 = *(void *)(a1 + 128);
        unint64_t v34 = v33 + *(void *)(a1 + 136);
        uint64_t v35 = *(void *)(a1 + 104);
        uint64_t v36 = *(void *)(a1 + 112);
        __int16 v37 = (void *)(v35 + 8 * (v34 / 0x15));
        if (v36 == v35) {
          unint64_t v38 = 0LL;
        }
        else {
          unint64_t v38 = *v37 + 192 * (v34 % 0x15);
        }
        unint64_t v46 = v33 / 0x15;
        unint64_t v47 = v33 % 0x15;
        double v19 = 20.0;
        while (1)
        {
          uint64_t v48 = v36 == v35 ? 0LL : *(void *)(v35 + 8 * v46) + 192 * v47;
          if (v38 == v48) {
            break;
          }
          if (v38 == *v37)
          {
            uint64_t v49 = *--v37;
            double v17 = *(double *)(v49 + 3960);
            unint64_t v38 = v49 + 4032;
          }

          else
          {
            double v17 = *(double *)(v38 - 72);
          }

          if (v17 > 0.0 && v17 <= 20.0)
          {
            double v19 = *(double *)(v38 - 80);
            *(double *)(a1 + 632) = v19;
            break;
          }

          v38 -= 192LL;
        }
      }

      switch(v11)
      {
        case 3:
          ++*(_DWORD *)(a1 + 788);
          break;
        case 2:
          ++*(_DWORD *)(a1 + 784);
          break;
        case 1:
          ++*(_DWORD *)(a1 + 780);
          break;
      }

uint64_t sub_100DE7558(uint64_t result)
{
  *(_BYTE *)(result + 65sub_1002D62D8(v1 + 6) = 0;
  return result;
}

double sub_100DE7560(uint64_t a1, uint64_t a2)
{
  if (!*(_BYTE *)(a1 + 656))
  {
    sub_100CF4CD4(&v54, 0LL);
    if (sub_100CF547C((uint64_t)&v54))
    {
      float v15 = v53;
      *(float *)(a1 + 644) = sub_100FADFE8(v15, 101320.0);
      if (qword_1019345B0 != -1) {
        dispatch_once(&qword_1019345B0, &stru_1018840E8);
      }
      int v16 = (os_log_s *)qword_1019345B8;
      if (os_log_type_enabled((os_log_t)qword_1019345B8, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 134218240;
        double v41 = v52;
        __int16 v42 = 2048;
        double v43 = v53;
        _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEBUG,  "updateWatchPressureWithPhoneElevationChange: timestamp,%f,pressure,%f",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019345B0 != -1) {
          dispatch_once(&qword_1019345B0, &stru_1018840E8);
        }
        *(_DWORD *)int v31 = 134218240;
        *(double *)&v31[4] = v52;
        __int16 v32 = 2048;
        double v33 = v53;
        LODWORD(v3sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 22;
        unint64_t v25 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345B8,  2LL,  "updateWatchPressureWithPhoneElevationChange: timestamp,%f,pressure,%f",  COERCE_DOUBLE(v31),  v30);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "double CLWorkoutElevationFusion::updateWatchPressureWithPhoneElevationChange(const CLElevationChangeEntry &)",  "%s\n",  v25);
      }

      if (*(double *)(a2 + 8) >= v52)
      {
        *(void *)(a1 + 64_Block_object_dispose(va, 8) = *(void *)(a2 + 16);
        *(_BYTE *)(a1 + 65sub_1002D62D8(v1 + 6) = 1;
        if (*(_BYTE *)(a1 + 392))
        {
          if (qword_1019345B0 != -1) {
            dispatch_once(&qword_1019345B0, &stru_1018840E8);
          }
          unint64_t v21 = (os_log_s *)qword_1019345B8;
          if (os_log_type_enabled((os_log_t)qword_1019345B8, OS_LOG_TYPE_DEBUG))
          {
            double v22 = *(float *)(a1 + 644);
            int v23 = *(_DWORD *)(a1 + 648);
            int v24 = *(_DWORD *)(a1 + 652);
            *(_DWORD *)std::stringbuf::string_type buf = 134219008;
            double v41 = v52;
            __int16 v42 = 2048;
            double v43 = v53;
            __int16 v44 = 2048;
            double v45 = v22;
            __int16 v46 = 1024;
            int v47 = v23;
            __int16 v48 = 1024;
            int v49 = v24;
            _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEBUG,  "set baseline elevation changes,timestamp,%f,pressure,%f,elevation,%f,ascend,%d,descend,%d",  buf,  0x2Cu);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1019345B0 != -1) {
              dispatch_once(&qword_1019345B0, &stru_1018840E8);
            }
            double v26 = *(float *)(a1 + 644);
            int v27 = *(_DWORD *)(a1 + 648);
            int v28 = *(_DWORD *)(a1 + 652);
            *(_DWORD *)int v31 = 134219008;
            *(double *)&v31[4] = v52;
            __int16 v32 = 2048;
            double v33 = v53;
            __int16 v34 = 2048;
            double v35 = v26;
            __int16 v36 = 1024;
            int v37 = v27;
            __int16 v38 = 1024;
            int v39 = v28;
            LODWORD(v3sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 44;
            unint64_t v29 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345B8,  2LL,  "set baseline elevation changes,timestamp,%f,pressure,%f,elevation,%f,ascend,%d,descend,%d",  COERCE_DOUBLE(v31),  v30);
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "double CLWorkoutElevationFusion::updateWatchPressureWithPhoneElevationChange(const CLElevationChangeEntry &)",  "%s\n",  v29);
          }
        }

        sub_100CF4D90(&v54);
        goto LABEL_2;
      }

      if (qword_1019345B0 != -1) {
        dispatch_once(&qword_1019345B0, &stru_1018840E8);
      }
      double v17 = (os_log_s *)qword_1019345B8;
      if (os_log_type_enabled((os_log_t)qword_1019345B8, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEBUG,  "updateWatchPressureWithPhoneElevationChange: phone startTime rolls back from the endTime of the most recent record",  buf,  2u);
      }

      if (!sub_1002921D0(115, 2))
      {
LABEL_32:
        sub_100CF4D90(&v54);
        return -1.0;
      }

      bzero(buf, 0x65CuLL);
      if (qword_1019345B0 != -1) {
        dispatch_once(&qword_1019345B0, &stru_1018840E8);
      }
      *(_WORD *)int v31 = 0;
      LODWORD(v3sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 2;
      double v18 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345B8,  2LL,  "updateWatchPressureWithPhoneElevationChange: phone startTime rolls back from the endTime of the mo st recent record",  v31,  *(void *)&v30);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "double CLWorkoutElevationFusion::updateWatchPressureWithPhoneElevationChange(const CLElevationChangeEntry &)",  "%s\n",  v18);
    }

    else
    {
      if (qword_1019345B0 != -1) {
        dispatch_once(&qword_1019345B0, &stru_1018840E8);
      }
      double v19 = (os_log_s *)qword_1019345B8;
      if (os_log_type_enabled((os_log_t)qword_1019345B8, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEBUG,  "updateWatchPressureWithPhoneElevationChange: cannot fetch the most recent query",  buf,  2u);
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_32;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1019345B0 != -1) {
        dispatch_once(&qword_1019345B0, &stru_1018840E8);
      }
      *(_WORD *)int v31 = 0;
      double v18 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345B8,  2LL,  "updateWatchPressureWithPhoneElevationChange: cannot fetch the most recent query",  v31,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "double CLWorkoutElevationFusion::updateWatchPressureWithPhoneElevationChange(const CLElevationChangeEntry &)",  "%s\n",  v18);
    }

    goto LABEL_32;
  }

void sub_100DE7DDC(_Unwind_Exception *a1)
{
}

void sub_100DE7E08(uint64_t a1, double *a2)
{
  float v5 = sub_1000F0468((uint64_t **)(a1 + 64), a2);
  sub_10021060C((void *)(a1 + 16), &v5);
  if (*(void *)(a1 + 56) > (unint64_t)*(unsigned int *)(a1 + 8))
  {
    uint64_t v3 = *(void *)(*(void *)(*(void *)(a1 + 24) + ((*(void *)(a1 + 48) >> 6) & 0x3FFFFFFFFFFFFF8LL))
                   + 8 * (*(void *)(a1 + 48) & 0x1FFLL));
    if (*(double *)(v3 + 32) != *(double *)(a1 + 96))
    {
      int v4 = *(_DWORD *)(a1 + 88);
      if (v4 <= 1) {
        int v4 = 1;
      }
      *(_DWORD *)(a1 + 8_Block_object_dispose(va, 8) = v4 - 1;
    }

    sub_1000087E8((uint64_t **)(a1 + 64), (uint64_t *)v3);
    operator delete((void *)v3);
    *(int64x2_t *)(a1 + 4_Block_object_dispose(va, 8) = vaddq_s64(*(int64x2_t *)(a1 + 48), (int64x2_t)xmmword_1012CE4D0);
    sub_1002109A4(a1 + 16, 1);
  }

BOOL sub_100DE7EF4(_BYTE *a1, uint64_t a2)
{
  unint64_t v40 = 0xFFEFFFFFFFFFFFFFLL;
  if (*(_DWORD *)(a2 + 80) < 0xBu) {
    return 0LL;
  }
  sub_100DE8F1C((uint64_t)&v35, (void *)(a2 + 16));
  float v5 = (uint64_t *)(v36 + 8 * ((unint64_t)(v38 + v39) >> 9));
  uint64_t v6 = *v5;
  uint64_t v7 = (v38 + v39) & 0x1FF;
  uint64_t v8 = *v5 + 8 * v7;
  if (v37 == v36) {
    uint64_t v9 = 0LL;
  }
  else {
    uint64_t v9 = *v5 + 8 * v7;
  }
  uint64_t v10 = v9 - v6;
  uint64_t v11 = (v9 - v6) >> 3;
  if (v10 < 89) {
    uint64_t v12 = v5[-((unint64_t)(522 - v11) >> 9)] + 8LL * (~(522 - (_WORD)v11) & 0x1FF);
  }
  else {
  if (v37 == v36) {
    uint64_t v13 = 0LL;
  }
  else {
    uint64_t v13 = v8;
  }
  if (v13 == v12)
  {
    unsigned int v14 = 0;
    double v23 = -INFINITY;
  }

  else
  {
    unsigned int v14 = 0;
    double v15 = -1.79769313e308;
    double v16 = 1.79769313e308;
    uint64_t v17 = *v5;
    uint64_t v18 = v13;
    double v19 = (uint64_t *)(v36 + 8 * ((unint64_t)(v38 + v39) >> 9));
    do
    {
      if (v18 == v17)
      {
        uint64_t v21 = *--v19;
        double v22 = *(double *)(*(void *)(v21 + 4088) + 32LL);
        if (v22 != -1.79769313e308)
        {
          if (v22 < v16) {
            double v16 = v22;
          }
          if (v15 < v22) {
            double v15 = v22;
          }
          ++v14;
        }

        uint64_t v17 = *v19;
        uint64_t v18 = *v19 + 4096;
      }

      else
      {
        double v20 = *(double *)(*(void *)(v18 - 8) + 32LL);
        if (v20 != -1.79769313e308)
        {
          if (v20 < v16) {
            double v16 = *(double *)(*(void *)(v18 - 8) + 32LL);
          }
          if (v15 < v20) {
            double v15 = *(double *)(*(void *)(v18 - 8) + 32LL);
          }
          ++v14;
        }
      }

      v18 -= 8LL;
    }

    while (v18 != v12);
    double v23 = v15 - v16;
  }

  double v24 = dbl_10135EDE0[a1[596] == 0];
  a1[596] = v23 < v24;
  if (v13 == v6) {
    uint64_t v13 = *(v5 - 1) + 4096;
  }
  uint64_t v25 = *(void *)(*(void *)(v13 - 8) + 32LL);
  sub_100DE8E7C(a2, &v40);
  a1[597] = 0;
  BOOL v27 = v23 < v24 && v14 > 2;
  a1[598] = v27;
  if (qword_1019345B0 != -1) {
    dispatch_once(&qword_1019345B0, &stru_1018840E8);
  }
  int v28 = (os_log_s *)qword_1019345B8;
  if (os_log_type_enabled((os_log_t)qword_1019345B8, OS_LOG_TYPE_DEBUG))
  {
    int v29 = a1[598];
    *(_DWORD *)std::stringbuf::string_type buf = 67109888;
    int v49 = v29;
    __int16 v50 = 2048;
    double v51 = v23;
    __int16 v52 = 2048;
    unint64_t v53 = v40;
    __int16 v54 = 2048;
    uint64_t v55 = v25;
    _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEBUG,  "WorkoutElevationFusion,ResidualCheck,agree,%d,max-min,%f,median,%f,residual,%f",  buf,  0x26u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019345B0 != -1) {
      dispatch_once(&qword_1019345B0, &stru_1018840E8);
    }
    int v31 = a1[598];
    v41[0] = 67109888;
    v41[1] = v31;
    __int16 v42 = 2048;
    double v43 = v23;
    __int16 v44 = 2048;
    unint64_t v45 = v40;
    __int16 v46 = 2048;
    uint64_t v47 = v25;
    LODWORD(v33) = 38;
    __int16 v32 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345B8,  2LL,  "WorkoutElevationFusion,ResidualCheck,agree,%d,max-min,%f,median,%f,residual,%f",  v41,  v33,  v34,  v35);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWorkoutElevationFusion::baroAgreesWith(const T &) [T = CLFlexibleMedianFilter<double>]",  "%s\n",  v32);
  }

  BOOL v2 = a1[598] != 0;
  sub_100210578(&v35);
  return v2;
}

void sub_100DE82B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

BOOL sub_100DE82DC(void *a1, void *a2)
{
  uint64_t v2 = a1[42];
  if (v2) {
    BOOL v3 = a2[5] == 0LL;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3) {
    return 0LL;
  }
  unint64_t v5 = a2[4];
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v8 = (double **)(v6 + 8 * (v5 >> 9));
  if (v7 == v6) {
    uint64_t v9 = 0LL;
  }
  else {
    uint64_t v9 = &(*v8)[a2[4] & 0x1FFLL];
  }
  unint64_t v10 = a1[41];
  uint64_t v11 = a1[38];
  uint64_t v12 = a1[39];
  uint64_t v13 = (void *)(v11 + 8 * (v10 >> 9));
  if (v12 == v11)
  {
    unint64_t v15 = v10 + v2;
    double v16 = (void *)(v11 + 8 * (v15 >> 9));
  }

  else
  {
    unsigned int v14 = (double *)(*v13 + 8 * (a1[41] & 0x1FFLL));
    unint64_t v15 = v10 + v2;
    double v16 = (void *)(v11 + 8 * (v15 >> 9));
    uint64_t v17 = *v16 + 8 * (v15 & 0x1FF);
    if (v14 != (double *)v17)
    {
      uint64_t v18 = *v8;
      double v19 = 0.0;
      double v20 = 0.0;
      double v21 = 0.0;
      uint64_t v22 = v6 + 8 * (v5 >> 9);
      double v23 = 0.0;
      double v24 = (void *)(v11 + 8 * (v10 >> 9));
      do
      {
        double v25 = *v9++;
        double v26 = v25;
        if (v25 == -1.79769313e308) {
          double v26 = -0.0;
        }
        else {
          double v23 = v23 + 1.0;
        }
        double v27 = *v14;
        if (*v14 == -1.79769313e308) {
          double v27 = -0.0;
        }
        else {
          double v21 = v21 + 1.0;
        }
        if ((char *)v9 - (char *)v18 == 4096)
        {
          int v28 = *(double **)(v22 + 8);
          v22 += 8LL;
          uint64_t v18 = v28;
          uint64_t v9 = v28;
        }

        if ((double *)((char *)++v14 - *v24) == (double *)4096)
        {
          int v29 = (double *)v24[1];
          ++v24;
          unsigned int v14 = v29;
        }

        double v20 = v20 + v26;
        double v19 = v19 + v27;
      }

      while (v14 != (double *)v17);
      double v30 = v19 / v21;
      double v31 = 0.0;
      if (v21 <= 0.0) {
        double v30 = 0.0;
      }
      if (v23 > 0.0) {
        double v31 = v20 / v23;
      }
      goto LABEL_30;
    }
  }

  double v30 = 0.0;
  double v31 = 0.0;
LABEL_30:
  if (v7 == v6) {
    __int16 v32 = 0LL;
  }
  else {
    __int16 v32 = &(*v8)[v5 & 0x1FF];
  }
  double v33 = 0.0;
  if (v12 == v11)
  {
    double v36 = 0.0;
  }

  else
  {
    double v34 = (double *)(*v13 + 8 * (v10 & 0x1FF));
    uint64_t v35 = *v16 + 8 * (v15 & 0x1FF);
    double v36 = 0.0;
    if (v34 != (double *)v35)
    {
      uint64_t v37 = *v8;
      do
      {
        double v38 = *v32++;
        double v39 = vabdd_f64(v38, v31);
        if (v38 == -1.79769313e308) {
          double v40 = -0.0;
        }
        else {
          double v40 = v39;
        }
        double v41 = vabdd_f64(*v34, v30);
        if (*v34 == -1.79769313e308) {
          double v42 = -0.0;
        }
        else {
          double v42 = v41;
        }
        if ((char *)v32 - (char *)v37 == 4096)
        {
          double v43 = v8[1];
          ++v8;
          uint64_t v37 = v43;
          __int16 v32 = v43;
        }

        if ((double *)((char *)++v34 - *v13) == (double *)4096)
        {
          __int16 v44 = (double *)v13[1];
          ++v13;
          double v34 = v44;
        }

        double v36 = v36 + v40;
        double v33 = v33 + v42;
      }

      while (v34 != (double *)v35);
    }
  }

  if (qword_1019345B0 != -1) {
    dispatch_once(&qword_1019345B0, &stru_1018840E8);
  }
  unint64_t v45 = (os_log_s *)qword_1019345B8;
  if (os_log_type_enabled((os_log_t)qword_1019345B8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 134218240;
    double v53 = v33;
    __int16 v54 = 2048;
    double v55 = v36;
    _os_log_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_DEBUG,  "WorkoutElevationFusion,VariabilityCheck,Baro,%f,Source,%f",  buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019345B0 != -1) {
      dispatch_once(&qword_1019345B0, &stru_1018840E8);
    }
    int v48 = 134218240;
    double v49 = v33;
    __int16 v50 = 2048;
    double v51 = v36;
    LODWORD(v47) = 22;
    __int16 v46 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345B8,  2LL,  "WorkoutElevationFusion,VariabilityCheck,Baro,%f,Source,%f",  COERCE_DOUBLE(&v48),  v47);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWorkoutElevationFusion::baroLessVariable(const std::deque<double> &) const",  "%s\n",  v46);
  }

  return v33 < v36 + 1.5;
}

double sub_100DE86C0(_DWORD *a1, int a2)
{
  BOOL v3 = a1 + 184;
  if (a1[184])
  {
    if (qword_1019345B0 != -1) {
      dispatch_once(&qword_1019345B0, &stru_1018840E8);
    }
    unint64_t v5 = (os_log_s *)qword_1019345B8;
    if (os_log_type_enabled((os_log_t)qword_1019345B8, OS_LOG_TYPE_INFO))
    {
      int v6 = a1[185];
      int v7 = a1[186];
      int v8 = a1[187];
      int v9 = a1[188];
      int v10 = a1[189];
      int v11 = a1[190];
      int v12 = a1[191];
      int v13 = a1[192];
      int v14 = a1[193];
      int v15 = a1[194];
      int v16 = a1[195];
      int v17 = a1[196];
      int v18 = a1[197];
      int v19 = a1[200];
      int v20 = a1[201];
      int v21 = a1[202];
      int v22 = a1[203];
      int v23 = a1[204];
      int v24 = a1[198];
      int v25 = a1[199];
      *(_DWORD *)std::stringbuf::string_type buf = 67114240;
      int v106 = a2;
      __int16 v107 = 1024;
      int v108 = v6;
      __int16 v109 = 1024;
      int v110 = v7;
      __int16 v111 = 1024;
      int v112 = v8;
      __int16 v113 = 1024;
      int v114 = v9;
      __int16 v115 = 1024;
      int v116 = v10;
      __int16 v117 = 1024;
      int v118 = v11;
      __int16 v119 = 1024;
      int v120 = v12;
      __int16 v121 = 1024;
      int v122 = v13;
      __int16 v123 = 1024;
      int v124 = v14;
      __int16 v125 = 1024;
      int v126 = v15;
      __int16 v127 = 1024;
      int v128 = v16;
      __int16 v129 = 1024;
      int v130 = v17;
      __int16 v131 = 1024;
      int v132 = v18;
      __int16 v133 = 1024;
      int v134 = v19;
      __int16 v135 = 1024;
      int v136 = v20;
      __int16 v137 = 1024;
      int v138 = v21;
      __int16 v139 = 1024;
      int v140 = v22;
      __int16 v141 = 1024;
      int v142 = v23;
      __int16 v143 = 1024;
      int v144 = v24;
      __int16 v145 = 1024;
      int v146 = v25;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_INFO,  "WorkoutElevationFusion,WorkoutType,%d,BaroGood,%d,BaroUnkDEMAgree,%d,DEMBaroUnk,%d,BaroUnkDEMDisagree,%d,BaroUnk NoDEM,%d,DEMBaroBad,%d,None,%d,GPSBaroGood,%d,GPSBaroUnk,%d,GPSBaroBad,%d,GPSUnvailBaroGood,%d,GPSUnvailBaroUnk, %d,GPSUnvailBaroBad,%d,TransBaroDEM,%d,TransToGPS,%d,TransBaroToNone,%d,TransDEMToNone,%d,TransGPSToNone,%d,Phon eSource,%d,RunningTrackSource,%d",  buf,  0x80u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019345B0 != -1) {
        dispatch_once(&qword_1019345B0, &stru_1018840E8);
      }
      int v41 = a1[185];
      int v42 = a1[186];
      int v43 = a1[187];
      int v44 = a1[189];
      int v45 = a1[190];
      int v46 = a1[191];
      int v47 = a1[192];
      int v48 = a1[193];
      int v49 = a1[194];
      int v50 = a1[195];
      int v51 = a1[196];
      int v52 = a1[197];
      int v53 = a1[200];
      int v54 = a1[201];
      int v55 = a1[202];
      int v56 = a1[203];
      int v57 = a1[204];
      int v58 = a1[198];
      int v59 = a1[199];
      LOWORD(v73) = 1024;
      HIWORD(v73) = v41;
      LOWORD(v74) = HIWORD(v43);
      HIWORD(v74) = 1024;
      LOWORD(v75) = 1024;
      HIWORD(v75) = v44;
      int v76 = v45;
      __int16 v77 = 1024;
      int v78 = v46;
      __int16 v79 = 1024;
      int v80 = v47;
      __int16 v81 = 1024;
      int v82 = v48;
      __int16 v83 = 1024;
      int v84 = v49;
      __int16 v85 = 1024;
      int v86 = v50;
      __int16 v87 = 1024;
      int v88 = v51;
      __int16 v89 = 1024;
      int v90 = v52;
      __int16 v91 = 1024;
      int v92 = v53;
      __int16 v93 = 1024;
      int v94 = v54;
      __int16 v95 = 1024;
      int v96 = v55;
      __int16 v97 = 1024;
      int v98 = v56;
      __int16 v99 = 1024;
      int v100 = v57;
      __int16 v101 = 1024;
      int v102 = v58;
      __int16 v103 = 1024;
      int v104 = v59;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345B8,  1LL,  "WorkoutElevationFusion,WorkoutType,%d,BaroGood,%d,BaroUnkDEMAgree,%d,DEMBaroUnk,%d,BaroUnkDEMDisagree,%d,BaroUnk NoDEM,%d,DEMBaroBad,%d,None,%d,GPSBaroGood,%d,GPSBaroUnk,%d,GPSBaroBad,%d,GPSUnvailBaroGood,%d,GPSUnvailBaroUnk, %d,GPSUnvailBaroBad,%d,TransBaroDEM,%d,TransToGPS,%d,TransBaroToNone,%d,TransDEMToNone,%d,TransGPSToNone,%d,Phon eSource,%d,RunningTrackSource,%d",  &v72,  128,  (_DWORD)v62,  DWORD2(v62),  (_DWORD)v63,  DWORD2(v63),  (_DWORD)v64,  DWORD2(v64),  (_DWORD)v65,  DWORD2(v65),  v66,  (_DWORD)v67,  v68,  (_DWORD)v69,  (_DWORD)v70,  (_DWORD)v71,  67114240,  v73,  v42,  v74,  v75);
      int v61 = (uint8_t *)v60;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWorkoutElevationFusion::logAndClearStatistics(CLMotionActivity::Type)",  "%s\n",  v60);
      if (v61 != buf) {
        free(v61);
      }
    }

    unsigned int v26 = *v3;
    if (*v3 >= 0x2BD)
    {
      __int128 v27 = *(_OWORD *)(a1 + 185);
      __int128 v28 = *(_OWORD *)(a1 + 189);
      v29.i64[0] = DWORD2(v27);
      v29.i64[1] = HIDWORD(v27);
      float64x2_t v30 = vcvtq_f64_u64(v29);
      v29.i64[0] = v27;
      v29.i64[1] = DWORD1(v27);
      float64x2_t v31 = (float64x2_t)vdupq_n_s64(0x4085E00000000000uLL);
      float64x2_t v32 = (float64x2_t)vdupq_lane_s64(COERCE__INT64((double)v26), 0);
      int32x4_t v33 = vuzp1q_s32( (int32x4_t)vcvtq_u64_f64(vrndpq_f64(vdivq_f64(vmulq_f64(vcvtq_f64_u64(v29), v31), v32))),  (int32x4_t)vcvtq_u64_f64(vrndpq_f64(vdivq_f64(vmulq_f64(v30, v31), v32))));
      v29.i64[0] = DWORD2(v28);
      v29.i64[1] = HIDWORD(v28);
      float64x2_t v34 = vcvtq_f64_u64(v29);
      v29.i64[0] = v28;
      v29.i64[1] = DWORD1(v28);
      *(int32x4_t *)(a1 + 185) = v33;
      *(int32x4_t *)(a1 + 189) = vuzp1q_s32( (int32x4_t)vcvtq_u64_f64(vrndpq_f64(vdivq_f64(vmulq_f64(vcvtq_f64_u64(v29), v31), v32))),  (int32x4_t)vcvtq_u64_f64(vrndpq_f64(vdivq_f64(vmulq_f64(v34, v31), v32))));
      __int128 v35 = *(_OWORD *)(a1 + 193);
      v29.i64[0] = DWORD2(v35);
      v29.i64[1] = HIDWORD(v35);
      float64x2_t v36 = vcvtq_f64_u64(v29);
      v29.i64[0] = v35;
      v29.i64[1] = DWORD1(v35);
      *(int32x4_t *)(a1 + 193) = vuzp1q_s32( (int32x4_t)vcvtq_u64_f64(vrndpq_f64(vdivq_f64(vmulq_f64(vcvtq_f64_u64(v29), v31), v32))),  (int32x4_t)vcvtq_u64_f64(vrndpq_f64(vdivq_f64(vmulq_f64(v36, v31), v32))));
      *(void *)&__int128 v35 = *(void *)(a1 + 197);
      v29.i64[0] = v35;
      v29.i64[1] = DWORD1(v35);
      *(int32x2_t *)&__int128 v35 = vmovn_s64((int64x2_t)vcvtq_u64_f64(vrndpq_f64(vdivq_f64(vmulq_f64(vcvtq_f64_u64(v29), v31), v32))));
      *(void *)(a1 + 197) = v35;
      LODWORD(v35) = a1[199];
      a1[199] = vcvtpd_u64_f64((double)(unint64_t)v35 * 700.0 / (double)v26);
    }

    uint64_t v67 = _NSConcreteStackBlock;
    uint64_t v68 = 3221225472LL;
    uint64_t v69 = sub_100DE8BF8;
    __int16 v70 = &unk_101820718;
    uint64_t v71 = a1;
    AnalyticsSendEventLazy(@"com.apple.Motion.Altimeter.WorkoutElevationFusion", &v67);
    uint64_t v37 = sub_100F5A080();
    __int128 v38 = *((_OWORD *)v3 + 1);
    __int128 v62 = *(_OWORD *)v3;
    __int128 v63 = v38;
    __int128 v39 = *((_OWORD *)v3 + 3);
    __int128 v64 = *((_OWORD *)v3 + 2);
    __int128 v65 = v39;
    sub_100F5D6E4(v37, &v62);
  }

  double result = 0.0;
  *((_OWORD *)v3 + 2) = 0u;
  *((_OWORD *)v3 + 3) = 0u;
  *(_OWORD *)BOOL v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_OWORD *)a1 + 5sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0u;
  a1[204] = 0;
  return result;
}

NSDictionary *sub_100DE8BF8(uint64_t a1)
{
  uint64_t v1 = *(unsigned int **)(a1 + 32);
  v3[0] = @"numBaroBadDEMAvailDEMUsed";
  v4[0] = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v1[190]);
  v3[1] = @"numBaroGoodBaroUsed";
  v4[1] = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v1[185]);
  void v3[2] = @"numBaroUnkBaroDEMAgreeBaroUsed";
  v4[2] = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v1[186]);
  v3[3] = @"numBaroUnkBaroDEMDisagreeBaroUsed";
  unsigned __int8 v4[3] = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v1[188]);
  void v3[4] = @"numBaroUnkBaroDEMDisagreeDEMUsed";
  v4[4] = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v1[187]);
  void v3[5] = @"numBaroUnkDEMUnavailBaroUsed";
  void v4[5] = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v1[189]);
  v3[6] = @"numEpochs";
  v4[6] = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v1[184]);
  v3[7] = @"numGPSSelectedGPSAvailGPSUsedBaroBad";
  v4[7] = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v1[194]);
  _WORD v3[8] = @"numGPSSelectedGPSAvailGPSUsedBaroGood";
  _WORD v4[8] = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v1[192]);
  v3[9] = @"numGPSSelectedGPSAvailGPSUsedBaroUnk";
  void v4[9] = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v1[193]);
  v3[10] = @"numGPSSelectedGPSUnavailNoUpdateBaroBad";
  v4[10] = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v1[197]);
  v3[11] = @"numGPSSelectedGPSUnavailNoUpdateBaroGood";
  v4[11] = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v1[195]);
  v3[12] = @"numGPSSelectedGPSUnavailNoUpdateBaroUnk";
  v4[12] = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v1[196]);
  v3[13] = @"numNoSource";
  v4[13] = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v1[191]);
  v3[14] = @"numPhoneSourceUsed";
  v4[14] = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v1[198]);
  v3[15] = @"numRunningTrackUsed";
  v4[15] = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v1[199]);
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v4,  v3,  16LL);
}

void sub_100DE8E2C(uint64_t a1)
{
  *(_DWORD *)(a1 + 8_Block_object_dispose(va, 8) = 0;
}

void sub_100DE8E50(id a1)
{
  qword_1019345B8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Pressure");
}

uint64_t sub_100DE8E7C(uint64_t a1, void *a2)
{
  if (!*(void *)(a1 + 80)) {
    return 0LL;
  }
  int v2 = *(_DWORD *)(a1 + 88);
  if (v2 < 2) {
    return 0LL;
  }
  float v4 = (double)v2 * 0.5;
  int v5 = vcvtms_s32_f32(v4);
  int v6 = *(double **)(a1 + 64);
  if (v5 < 1)
  {
    int v9 = *(double **)(a1 + 64);
  }

  else
  {
    int v7 = 0;
    do
    {
      int v8 = (double *)*((void *)v6 + 1);
      if (v8)
      {
        do
        {
          int v9 = v8;
          int v8 = *(double **)v8;
        }

        while (v8);
      }

      else
      {
        do
        {
          int v9 = (double *)*((void *)v6 + 2);
          BOOL v10 = *(void *)v9 == (void)v6;
          int v6 = v9;
        }

        while (!v10);
      }

      int v6 = v9;
    }

    while (v7 < v5);
  }

  *a2 = *((void *)v9 + 4);
  return 1LL;
}

uint64_t sub_100DE8F1C(uint64_t a1, void *a2)
{
  *(_OWORD *)(a1 + 1sub_1002D62D8(v1 + 6) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  unint64_t v4 = a2[4];
  uint64_t v5 = a2[1];
  uint64_t v6 = a2[2];
  int v7 = (char *)(v5 + 8 * (v4 >> 9));
  if (v6 == v5)
  {
    int v8 = 0LL;
    int v11 = 0LL;
    BOOL v10 = (char *)(v5 + 8 * ((a2[5] + v4) >> 9));
  }

  else
  {
    int v8 = (uint64_t *)(*(void *)v7 + 8 * (v4 & 0x1FF));
    unint64_t v9 = a2[5] + v4;
    BOOL v10 = (char *)(v5 + 8 * (v9 >> 9));
    int v11 = (uint64_t *)(*(void *)v10 + 8 * (v9 & 0x1FF));
  }

  sub_100DE8FC4((void *)a1, v7, v8, v10, v11);
  return a1;
}

void sub_100DE8FB0(_Unwind_Exception *a1)
{
}

void *sub_100DE8FC4(void *a1, char *a2, uint64_t *a3, char *a4, uint64_t *a5)
{
  if (a5 == a3) {
    unint64_t v5 = 0LL;
  }
  else {
    unint64_t v5 = (((uint64_t)a5 - *(void *)a4) >> 3) + ((a4 - a2) << 6) - (((uint64_t)a3 - *(void *)a2) >> 3);
  }
  return sub_100DE8FF8(a1, a2, a3, v5);
}

void *sub_100DE8FF8(void *a1, void *a2, uint64_t *a3, unint64_t a4)
{
  uint64_t v8 = a1[1];
  uint64_t v9 = a1[2];
  if (v9 == v8) {
    uint64_t v10 = 0LL;
  }
  else {
    uint64_t v10 = ((v9 - v8) << 6) - 1;
  }
  unint64_t v11 = a1[5] + a1[4];
  unint64_t v12 = v10 - v11;
  if (a4 > v12)
  {
    sub_100DE9128(a1, a4 - v12);
    uint64_t v8 = a1[1];
    uint64_t v9 = a1[2];
    unint64_t v11 = a1[4] + a1[5];
  }

  int v13 = (void *)(v8 + 8 * (v11 >> 9));
  if (v9 == v8) {
    uint64_t v14 = 0LL;
  }
  else {
    uint64_t v14 = *v13 + 8 * (v11 & 0x1FF);
  }
  v23[0] = v8 + 8 * (v11 >> 9);
  v23[1] = v14;
  double result = sub_1008232F8((uint64_t)v23, a4);
  if (v14 != v16)
  {
    uint64_t v17 = a1[5];
    do
    {
      if (v13 == result) {
        uint64_t v18 = v16;
      }
      else {
        uint64_t v18 = *v13 + 4096LL;
      }
      if (v14 == v18)
      {
        uint64_t v18 = v14;
      }

      else
      {
        int v19 = (void *)v14;
        do
        {
          uint64_t v20 = *a3++;
          *v19++ = v20;
          if ((uint64_t *)((char *)a3 - *a2) == (uint64_t *)4096)
          {
            int v21 = (uint64_t *)a2[1];
            ++a2;
            a3 = v21;
          }
        }

        while (v19 != (void *)v18);
      }

      v17 += (v18 - v14) >> 3;
      if (v13 == result) {
        break;
      }
      uint64_t v22 = v13[1];
      ++v13;
      uint64_t v14 = v22;
    }

    while (v22 != v16);
    a1[5] = v17;
  }

  return result;
}

void sub_100DE9128(void *a1, unint64_t a2)
{
  BOOL v3 = (char *)a1[2];
  uint64_t v4 = (uint64_t)&v3[-a1[1]];
  if (v4) {
    unint64_t v5 = a2;
  }
  else {
    unint64_t v5 = a2 + 1;
  }
  if ((v5 & 0x1FF) != 0) {
    unint64_t v6 = (v5 >> 9) + 1;
  }
  else {
    unint64_t v6 = v5 >> 9;
  }
  unint64_t v7 = a1[4];
  if (v6 >= v7 >> 9) {
    unint64_t v8 = v7 >> 9;
  }
  else {
    unint64_t v8 = v6;
  }
  if (v6 <= v7 >> 9)
  {
    for (a1[4] = v7 - (v8 << 9); v8; --v8)
    {
      uint64_t v16 = (void *)a1[1];
      uint64_t v19 = *v16;
      uint64_t v17 = (char *)(v16 + 1);
      uint64_t v18 = v19;
      a1[1] = v17;
      if (v3 == (char *)a1[3])
      {
        uint64_t v20 = (uint64_t)&v17[-*a1];
        if ((unint64_t)v17 <= *a1)
        {
          else {
            unint64_t v28 = (uint64_t)&v3[-*a1] >> 2;
          }
          uint64x2_t v29 = (char *)sub_1000071BC((uint64_t)(a1 + 3), v28);
          float64x2_t v31 = &v29[8 * (v28 >> 2)];
          float64x2_t v32 = (uint64_t *)a1[1];
          BOOL v3 = v31;
          uint64_t v33 = a1[2] - (void)v32;
          if (v33)
          {
            BOOL v3 = &v31[v33 & 0xFFFFFFFFFFFFFFF8LL];
            uint64_t v34 = 8 * (v33 >> 3);
            __int128 v35 = &v29[8 * (v28 >> 2)];
            do
            {
              uint64_t v36 = *v32++;
              *(void *)__int128 v35 = v36;
              v35 += 8;
              v34 -= 8LL;
            }

            while (v34);
          }

          uint64_t v37 = (char *)*a1;
          *a1 = v29;
          a1[1] = v31;
          a1[2] = v3;
          a1[3] = &v29[8 * v30];
          if (v37)
          {
            operator delete(v37);
            BOOL v3 = (char *)a1[2];
          }
        }

        else
        {
          uint64_t v21 = v20 >> 3;
          BOOL v22 = v20 >> 3 < -1;
          uint64_t v23 = (v20 >> 3) + 2;
          if (v22) {
            uint64_t v24 = v23;
          }
          else {
            uint64_t v24 = v21 + 1;
          }
          int v25 = &v17[-8 * (v24 >> 1)];
          int64_t v26 = v3 - v17;
          if (v3 != v17)
          {
            memmove(&v17[-8 * (v24 >> 1)], v17, v3 - v17);
            BOOL v3 = (char *)a1[1];
          }

          __int128 v27 = &v3[-8 * (v24 >> 1)];
          BOOL v3 = &v25[v26];
          a1[1] = v27;
          a1[2] = &v25[v26];
        }
      }

      *(void *)BOOL v3 = v18;
      BOOL v3 = (char *)(a1[2] + 8LL);
      a1[2] = v3;
    }
  }

  else
  {
    unint64_t v9 = v6 - v8;
    uint64_t v10 = a1[3] - *a1;
    if (v6 - v8 <= (v10 >> 3) - (v4 >> 3))
    {
      if (v9)
      {
        while (a1[3] != a1[2])
        {
          __p[0] = operator new(0x1000uLL);
          sub_1000EC960(a1, __p);
          --v6;
          if (!--v9) {
            goto LABEL_75;
          }
        }

        for (uint64_t i = 0LL; i != v9; ++i)
        {
          __p[0] = operator new(0x1000uLL);
          sub_1000ECA74((uint64_t)a1, __p);
          if (a1[2] - a1[1] == 8LL) {
            uint64_t v64 = 511LL;
          }
          else {
            uint64_t v64 = 512LL;
          }
          uint64_t v65 = v64 + a1[4];
          a1[4] = v65;
        }

        unint64_t v8 = v6;
      }

      else
      {
LABEL_75:
        uint64_t v65 = a1[4];
      }

      a1[4] = v65 - (v8 << 9);
      if (v8)
      {
        int v66 = (char *)a1[2];
        do
        {
          uint64_t v67 = (void *)a1[1];
          uint64_t v70 = *v67;
          uint64_t v68 = (char *)(v67 + 1);
          uint64_t v69 = v70;
          a1[1] = v68;
          if (v66 == (char *)a1[3])
          {
            uint64_t v71 = (uint64_t)&v68[-*a1];
            if ((unint64_t)v68 <= *a1)
            {
              else {
                unint64_t v78 = (uint64_t)&v66[-*a1] >> 2;
              }
              __int16 v79 = (char *)sub_1000071BC((uint64_t)(a1 + 3), v78);
              __int16 v81 = &v79[8 * (v78 >> 2)];
              int v82 = (uint64_t *)a1[1];
              int v66 = v81;
              uint64_t v83 = a1[2] - (void)v82;
              if (v83)
              {
                int v66 = &v81[v83 & 0xFFFFFFFFFFFFFFF8LL];
                uint64_t v84 = 8 * (v83 >> 3);
                __int16 v85 = &v79[8 * (v78 >> 2)];
                do
                {
                  uint64_t v86 = *v82++;
                  *(void *)__int16 v85 = v86;
                  v85 += 8;
                  v84 -= 8LL;
                }

                while (v84);
              }

              __int16 v87 = (char *)*a1;
              *a1 = v79;
              a1[1] = v81;
              a1[2] = v66;
              a1[3] = &v79[8 * v80];
              if (v87)
              {
                operator delete(v87);
                int v66 = (char *)a1[2];
              }
            }

            else
            {
              uint64_t v72 = v71 >> 3;
              BOOL v22 = v71 >> 3 < -1;
              uint64_t v73 = (v71 >> 3) + 2;
              if (v22) {
                uint64_t v74 = v73;
              }
              else {
                uint64_t v74 = v72 + 1;
              }
              int v75 = &v68[-8 * (v74 >> 1)];
              int64_t v76 = v66 - v68;
              if (v66 != v68)
              {
                memmove(&v68[-8 * (v74 >> 1)], v68, v66 - v68);
                int v66 = (char *)a1[1];
              }

              __int16 v77 = &v66[-8 * (v74 >> 1)];
              int v66 = &v75[v76];
              a1[1] = v77;
              a1[2] = &v75[v76];
            }
          }

          *(void *)int v66 = v69;
          int v66 = (char *)(a1[2] + 8LL);
          a1[2] = v66;
          --v8;
        }

        while (v8);
      }
    }

    else
    {
      uint64_t v11 = v4 >> 3;
      unint64_t v12 = v10 >> 2;
      if (v12 <= v9 + v11) {
        unint64_t v13 = v9 + v11;
      }
      else {
        unint64_t v13 = v12;
      }
      unint64_t v14 = v11 - v8;
      __int16 v91 = a1 + 3;
      if (v13) {
        int v15 = (char *)sub_1000071BC((uint64_t)(a1 + 3), v13);
      }
      else {
        int v15 = 0LL;
      }
      uint64_t v38 = v8 << 9;
      __p[0] = v15;
      __p[1] = &v15[8 * v14];
      *(void **)&__int128 v90 = __p[1];
      *((void *)&v90 + 1) = &v15[8 * v13];
      do
      {
        int v88 = operator new(0x1000uLL);
        sub_1000ECB90(__p, &v88);
        --v9;
      }

      while (v9);
      if (v8)
      {
        __int128 v39 = (void *)a1[1];
        double v40 = (char *)v90;
        do
        {
          if (v40 == *((char **)&v90 + 1))
          {
            int64_t v41 = (char *)__p[1] - (char *)__p[0];
            if (__p[1] <= __p[0])
            {
              if (v40 == __p[0]) {
                unint64_t v48 = 1LL;
              }
              else {
                unint64_t v48 = (v40 - (char *)__p[0]) >> 2;
              }
              int v49 = (char *)sub_1000071BC((uint64_t)v91, v48);
              int v51 = (uint64_t *)__p[1];
              double v40 = &v49[8 * (v48 >> 2)];
              uint64_t v52 = v90 - (unint64_t)__p[1];
              if ((void *)v90 != __p[1])
              {
                double v40 = &v49[8 * (v48 >> 2) + (v52 & 0xFFFFFFFFFFFFFFF8LL)];
                uint64_t v53 = 8 * (v52 >> 3);
                int v54 = &v49[8 * (v48 >> 2)];
                do
                {
                  uint64_t v55 = *v51++;
                  *(void *)int v54 = v55;
                  v54 += 8;
                  v53 -= 8LL;
                }

                while (v53);
              }

              int v56 = __p[0];
              __p[0] = v49;
              __p[1] = &v49[8 * (v48 >> 2)];
              *(void *)&__int128 v90 = v40;
              *((void *)&v90 + 1) = &v49[8 * v50];
              if (v56)
              {
                operator delete(v56);
                double v40 = (char *)v90;
              }
            }

            else
            {
              uint64_t v42 = v41 >> 3;
              BOOL v22 = v41 >> 3 < -1;
              uint64_t v43 = (v41 >> 3) + 2;
              if (v22) {
                uint64_t v44 = v43;
              }
              else {
                uint64_t v44 = v42 + 1;
              }
              int v45 = (char *)__p[1] - 8 * (v44 >> 1);
              int64_t v46 = v40 - (char *)__p[1];
              if (v40 != __p[1])
              {
                memmove((char *)__p[1] - 8 * (v44 >> 1), __p[1], v40 - (char *)__p[1]);
                double v40 = (char *)__p[1];
              }

              int v47 = &v40[-8 * (v44 >> 1)];
              double v40 = &v45[v46];
              __p[1] = v47;
              *(void *)&__int128 v90 = &v45[v46];
            }
          }

          *(void *)double v40 = *v39;
          double v40 = (char *)(v90 + 8);
          *(void *)&__int128 v90 = v90 + 8;
          __int128 v39 = (void *)(a1[1] + 8LL);
          a1[1] = v39;
          --v8;
        }

        while (v8);
      }

      int v57 = (void *)a1[2];
      uint64_t v58 = -7LL - (void)v57;
      while (v57 != (void *)a1[1])
      {
        --v57;
        v58 += 8LL;
        sub_1000ECCA4((uint64_t)__p, v57);
      }

      int v59 = (char *)*a1;
      __int128 v60 = *(_OWORD *)__p;
      __int128 v61 = v90;
      __p[0] = *(void **)a1;
      __p[1] = v57;
      __int128 v62 = *((_OWORD *)a1 + 1);
      *(_OWORD *)a1 = v60;
      *((_OWORD *)a1 + 1) = v61;
      __int128 v90 = v62;
      a1[4] -= v38;
      if (v57 != (void *)v62) {
        *(void *)&__int128 v90 = v62 + (-(v62 + v58) & 0xFFFFFFFFFFFFFFF8LL);
      }
      if (v59) {
        operator delete(v59);
      }
    }
  }

void sub_100DE963C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DE96B0(uint64_t a1, uint64_t a2)
{
  *BOOL v3 = off_101884160;
  _WORD v3[8] = a2;
}

BOOL sub_100DE96EC(uint64_t a1)
{
  return *(double *)(a1 + 24) > 50.0;
}

uint64_t (***sub_100DE9704(uint64_t a1, double a2))(void, double *)
{
  double v3 = a2;
  double result = *(uint64_t (****)(void, double *))(a1 + 64);
  if (result) {
    return (uint64_t (***)(void, double *))(**result)(result, &v3);
  }
  return result;
}

BOOL sub_100DE9738(uint64_t a1, uint64_t a2)
{
  return *(double *)(a2 + 24) > 50.0;
}

void *sub_100DE9750(void *a1, unsigned __int8 a2)
{
  unsigned __int8 v12 = a2;
  sub_100DE97E4(&v12, &v10);
  double v3 = v11;
  *a1 = v10;
  a1[1] = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      unint64_t v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
    unint64_t v6 = v11;
    if (v11)
    {
      unint64_t v7 = (unint64_t *)&v11->__shared_owners_;
      do
        unint64_t v8 = __ldaxr(v7);
      while (__stlxr(v8 - 1, v7));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }

  return a1;
}

void *sub_100DE97E4@<X0>(unsigned __int8 *a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = operator new(0x1A0uLL);
  double result = sub_100DE983C(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_100DE9828(_Unwind_Exception *a1)
{
}

void *sub_100DE983C(void *a1, unsigned __int8 *a2)
{
  a1[1] = 0LL;
  a1[2] = 0LL;
  *a1 = off_1018841A8;
  sub_1009B17B0(a1 + 3, *a2);
  return a1;
}

void sub_100DE9878(_Unwind_Exception *a1)
{
}

void sub_100DE988C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1018841A8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100DE98A0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1018841A8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_100DE98C4(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(void *)(a1 + 24) + 16LL))(a1 + 24);
}

double sub_100DE9988(uint64_t a1)
{
  *(_DWORD *)(a1 + 9sub_1002D62D8(v1 + 6) = 0;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 8sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 4_Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 1sub_1002D62D8(v1 + 6) = 0u;
  double result = 2.84809589e-306;
  *(_OWORD *)(a1 + 10sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = xmmword_10135EFA0;
  return result;
}

uint64_t sub_100DE99AC(uint64_t a1)
{
  unint64_t v6 = (void **)(a1 + 72);
  sub_100006BC8(&v6);
  int v2 = *(void **)(a1 + 48);
  if (v2)
  {
    *(void *)(a1 + 5sub_1002D62D8(v1 + 6) = v2;
    operator delete(v2);
  }

  double v3 = *(void **)(a1 + 24);
  if (v3)
  {
    *(void *)(a1 + 32) = v3;
    operator delete(v3);
  }

  uint64_t v4 = *(void **)a1;
  if (*(void *)a1)
  {
    *(void *)(a1 + _Block_object_dispose(va, 8) = v4;
    operator delete(v4);
  }

  return a1;
}

BOOL sub_100DE9A18(uint64_t a1)
{
  return (-1030792151 * *(_DWORD *)(a1 + 96) + 85899345) <= 0xA3D70A2
      && *(void *)(a1 + 8) - *(void *)a1 == 6000LL;
}

unint64_t sub_100DE9A60(uint64_t a1, uint64_t a2, float a3)
{
  uint64_t v6 = a2 + 16;
  unint64_t v7 = *(void *)(a2 + 16);
  unint64_t v8 = *(float **)(a2 + 8);
  if ((unint64_t)v8 >= v7)
  {
    uint64_t v10 = *(float **)a2;
    uint64_t v11 = ((uint64_t)v8 - *(void *)a2) >> 2;
    unint64_t v12 = v11 + 1;
    uint64_t v13 = v7 - (void)v10;
    if (v13 >> 1 > v12) {
      unint64_t v12 = v13 >> 1;
    }
    else {
      unint64_t v14 = v12;
    }
    if (v14)
    {
      int v15 = (char *)sub_10000956C(v6, v14);
      uint64_t v10 = *(float **)a2;
      unint64_t v8 = *(float **)(a2 + 8);
    }

    else
    {
      int v15 = 0LL;
    }

    uint64_t v16 = (float *)&v15[4 * v11];
    uint64_t v17 = &v15[4 * v14];
    *uint64_t v16 = a3;
    unint64_t v9 = v16 + 1;
    while (v8 != v10)
    {
      int v18 = *((_DWORD *)v8-- - 1);
      *((_DWORD *)v16-- - 1) = v18;
    }

    *(void *)a2 = v16;
    *(void *)(a2 + _Block_object_dispose(va, 8) = v9;
    *(void *)(a2 + 1sub_1002D62D8(v1 + 6) = v17;
    if (v10) {
      operator delete(v10);
    }
  }

  else
  {
    *unint64_t v8 = a3;
    unint64_t v9 = v8 + 1;
  }

  *(void *)(a2 + _Block_object_dispose(va, 8) = v9;
  uint64_t v19 = *(float **)a2;
  unint64_t result = ((unint64_t)v9 - *(void *)a2) >> 2;
  if ((int)result >= 1501)
  {
    uint64_t v21 = &v19[(result - 1500)];
    size_t v22 = (char *)v9 - (char *)v21;
    if (v22) {
      memmove(*(void **)a2, v21, v22);
    }
    uint64_t v23 = *(float **)a2;
    *(void *)(a2 + _Block_object_dispose(va, 8) = (char *)v19 + v22;
    unint64_t result = (unint64_t)((char *)v19 + v22 - (char *)v23) >> 2;
  }

  *(_DWORD *)(a1 + 9sub_1002D62D8(v1 + 6) = (*(_DWORD *)(a1 + 96) + 1) % 25;
  return result;
}

double sub_100DE9BC0(uint64_t a1)
{
  *(void *)(a1 + _Block_object_dispose(va, 8) = *(void *)a1;
  *(void *)(a1 + 32) = *(void *)(a1 + 24);
  *(void *)(a1 + 5sub_1002D62D8(v1 + 6) = *(void *)(a1 + 48);
  sub_100006C08((uint64_t *)(a1 + 72));
  *(_DWORD *)(a1 + 9sub_1002D62D8(v1 + 6) = 0;
  double result = 2.84809589e-306;
  *(_OWORD *)(a1 + 10sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = xmmword_10135EFA0;
  return result;
}

void sub_100DE9C0C(float **a1@<X1>, float **a2@<X8>)
{
  *a2 = 0LL;
  a2[1] = 0LL;
  a2[2] = 0LL;
  uint64_t v4 = *a1;
  uint64_t v5 = (char *)a1[1] - (char *)*a1;
  unint64_t v6 = v5 >> 2;
  if (v5)
  {
    if (v6 <= 1) {
      uint64_t v7 = 1LL;
    }
    else {
      uint64_t v7 = v5 >> 2;
    }
    float v8 = 0.0;
    do
    {
      float v9 = *v4++;
      float v8 = v8 + fabsf(v9);
      --v7;
    }

    while (v7);
  }

  else
  {
    float v8 = 0.0;
  }

  float v10 = sub_1009DE744((uint64_t)a1);
  float v11 = (float)v6;
  unint64_t v12 = *a1;
  uint64_t v13 = (char *)a1[1] - (char *)*a1;
  unint64_t v14 = v13 >> 2;
  if (v13)
  {
    if (v14 <= 1) {
      uint64_t v15 = 1LL;
    }
    else {
      uint64_t v15 = v13 >> 2;
    }
    float v16 = 0.0;
    do
    {
      float v17 = *v12++;
      float v16 = (float)(v17 - v10) * (float)(v17 - v10) + v16;
      --v15;
    }

    while (v15);
  }

  else
  {
    float v16 = 0.0;
  }

  int v18 = a2[2];
  uint64_t v19 = a2[1];
  float v20 = v8 / v11;
  if (v19 >= v18)
  {
    size_t v22 = *a2;
    uint64_t v23 = v19 - *a2;
    unint64_t v24 = v23 + 1;
    uint64_t v25 = (char *)v18 - (char *)v22;
    if (v25 >> 1 > v24) {
      unint64_t v24 = v25 >> 1;
    }
    else {
      unint64_t v26 = v24;
    }
    if (v26)
    {
      __int128 v27 = (char *)sub_10000956C((uint64_t)(a2 + 2), v26);
      size_t v22 = *a2;
      uint64_t v19 = a2[1];
    }

    else
    {
      __int128 v27 = 0LL;
    }

    unint64_t v28 = (float *)&v27[4 * v23];
    int v18 = (float *)&v27[4 * v26];
    *unint64_t v28 = v20;
    uint64_t v21 = v28 + 1;
    while (v19 != v22)
    {
      int v29 = *((_DWORD *)v19-- - 1);
      *((_DWORD *)v28-- - 1) = v29;
    }

    *a2 = v28;
    a2[1] = v21;
    a2[2] = v18;
    if (v22)
    {
      operator delete(v22);
      int v18 = a2[2];
    }
  }

  else
  {
    *uint64_t v19 = v20;
    uint64_t v21 = v19 + 1;
  }

  float v30 = v16 / (float)v14;
  a2[1] = v21;
  if (v21 < v18)
  {
    *uint64_t v21 = v30;
    float64x2_t v31 = v21 + 1;
    goto LABEL_49;
  }

  float64x2_t v32 = *a2;
  uint64_t v33 = v21 - *a2;
  unint64_t v34 = v33 + 1;
  if ((unint64_t)(v33 + 1) >> 62) {
LABEL_50:
  }
    sub_100007008();
  uint64_t v35 = (char *)v18 - (char *)v32;
  if (v35 >> 1 > v34) {
    unint64_t v34 = v35 >> 1;
  }
  else {
    unint64_t v36 = v34;
  }
  if (v36)
  {
    uint64_t v37 = (char *)sub_10000956C((uint64_t)(a2 + 2), v36);
    float64x2_t v32 = *a2;
    uint64_t v21 = a2[1];
  }

  else
  {
    uint64_t v37 = 0LL;
  }

  uint64_t v38 = (float *)&v37[4 * v33];
  __int128 v39 = (float *)&v37[4 * v36];
  *uint64_t v38 = v30;
  float64x2_t v31 = v38 + 1;
  while (v21 != v32)
  {
    int v40 = *((_DWORD *)v21-- - 1);
    *((_DWORD *)v38-- - 1) = v40;
  }

  *a2 = v38;
  a2[1] = v31;
  a2[2] = v39;
  if (v32) {
    operator delete(v32);
  }
LABEL_49:
  a2[1] = v31;
}

void sub_100DE9E38(_Unwind_Exception *exception_object)
{
  double v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + _Block_object_dispose(va, 8) = v3;
    operator delete(v3);
  }

  _Unwind_Resume(exception_object);
}

void sub_100DE9E54(void *a1)
{
  float v2 = sub_100825C70((uint64_t)a1);
  double v3 = (void **)(a1 + 3);
  uint64_t v4 = (float *)a1[4];
  for (uint64_t i = 1475LL; i != 1500; ++i)
  {
    float v6 = *(float *)(*a1 + 4 * i) - v2;
    unint64_t v7 = a1[5];
    if ((unint64_t)v4 >= v7)
    {
      float v8 = (float *)*v3;
      uint64_t v9 = ((char *)v4 - (_BYTE *)*v3) >> 2;
      unint64_t v10 = v9 + 1;
      uint64_t v11 = v7 - (void)v8;
      if (v11 >> 1 > v10) {
        unint64_t v10 = v11 >> 1;
      }
      else {
        unint64_t v12 = v10;
      }
      if (v12)
      {
        uint64_t v13 = (char *)sub_10000956C((uint64_t)(a1 + 5), v12);
        float v8 = (float *)a1[3];
        uint64_t v4 = (float *)a1[4];
      }

      else
      {
        uint64_t v13 = 0LL;
      }

      unint64_t v14 = (float *)&v13[4 * v9];
      *unint64_t v14 = v6;
      uint64_t v15 = v14 + 1;
      while (v4 != v8)
      {
        int v16 = *((_DWORD *)v4-- - 1);
        *((_DWORD *)v14-- - 1) = v16;
      }

      a1[3] = v14;
      a1[4] = v15;
      a1[5] = &v13[4 * v12];
      if (v8) {
        operator delete(v8);
      }
      uint64_t v4 = v15;
    }

    else
    {
      *v4++ = v6;
    }

    a1[4] = v4;
  }

  float v17 = (char *)*v3;
  unint64_t v18 = (unint64_t)((char *)v4 - (_BYTE *)*v3) >> 2;
  if ((int)v18 < 501)
  {
    uint64_t v21 = (char *)*v3;
  }

  else
  {
    uint64_t v19 = (float *)&v17[4 * (v18 - 500)];
    int64_t v20 = (char *)v4 - (char *)v19;
    if (v4 != v19) {
      memmove(*v3, v19, (char *)v4 - (char *)v19);
    }
    uint64_t v21 = (char *)*v3;
    uint64_t v4 = (float *)&v17[v20];
    a1[4] = &v17[v20];
    float v17 = v21;
  }

  if ((char *)v4 - v21 == 2000)
  {
    unint64_t v26 = 0LL;
    uint64_t v27 = 0LL;
    __int128 __p = 0LL;
    sub_10001B72C(&__p, v17, (uint64_t)v4, 0x1F4uLL);
    sub_100DE9C0C((float **)&__p, (float **)v28);
    if (__p)
    {
      unint64_t v26 = __p;
      operator delete(__p);
    }

    size_t v22 = a1 + 9;
    unint64_t v23 = a1[10];
    if (v23 >= a1[11])
    {
      uint64_t v24 = sub_100DEA0D8(v22, (uint64_t)v28);
    }

    else
    {
      sub_10078C9D8((uint64_t)v22, (uint64_t)v28);
      uint64_t v24 = v23 + 24;
    }

    a1[10] = v24;
    if (v28[0])
    {
      v28[1] = v28[0];
      operator delete(v28[0]);
    }
  }

void sub_100DEA058( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p)
{
  if (__p)
  {
    void *v12 = __p;
    operator delete(__p);
  }

  _Unwind_Resume(exception_object);
}

uint64_t sub_100DEA088(uint64_t result, float a2)
{
  float v2 = *(float *)(result + 108);
  if (v2 > a2) {
    float v2 = a2;
  }
  *(float *)(result + 10_Block_object_dispose(va, 8) = v2;
  *(float *)(result + 1sub_10046D318(v1 + 12) = a2;
  return result;
}

uint64_t sub_100DEA0A4(uint64_t result, float a2)
{
  float v2 = *(float *)(result + 100);
  if (v2 > a2) {
    float v2 = a2;
  }
  *(float *)(result + 10sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = v2;
  *(float *)(result + 104) = a2;
  return result;
}

float sub_100DEA0C0(uint64_t a1)
{
  return *(float *)(a1 + 112) - *(float *)(a1 + 108);
}

float sub_100DEA0CC(uint64_t a1)
{
  return *(float *)(a1 + 104) - *(float *)(a1 + 100);
}

uint64_t sub_100DEA0D8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_100007008();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x555555555555555LL) {
    unint64_t v9 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v5;
  }
  float v17 = a1 + 2;
  if (v9) {
    unint64_t v10 = (char *)sub_10000701C(v7, v9);
  }
  else {
    unint64_t v10 = 0LL;
  }
  uint64_t v11 = &v10[24 * v4];
  v14[0] = v10;
  v14[1] = v11;
  uint64_t v15 = v11;
  int v16 = &v10[24 * v9];
  *(void *)uint64_t v11 = 0LL;
  *((void *)v11 + 1) = 0LL;
  *((void *)v11 + 2) = 0LL;
  sub_10001B72C(v11, *(const void **)a2, *(void *)(a2 + 8), (uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 2);
  v15 += 24;
  sub_100DEA1EC(a1, v14);
  uint64_t v12 = a1[1];
  sub_100007504((uint64_t)v14);
  return v12;
}

void sub_100DEA1D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100DEA1EC(uint64_t *a1, void *a2)
{
  uint64_t result = sub_100DEA260((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_100DEA260(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&__int128 v14 = a6;
  *((void *)&v14 + 1) = a7;
  __int128 v13 = v14;
  v11[0] = a1;
  v11[1] = &v13;
  _DWORD v11[2] = &v14;
  if (a3 == a5)
  {
    uint64_t v9 = a6;
  }

  else
  {
    do
    {
      *(void *)(v7 - sub_100BDC958(v1 + 24) = 0LL;
      *(void *)(v7 - 1sub_1002D62D8(v1 + 6) = 0LL;
      *(void *)(v7 - _Block_object_dispose(va, 8) = 0LL;
      __int128 v8 = *(_OWORD *)(a3 - 3);
      a3 -= 3;
      *(_OWORD *)(v7 - sub_100BDC958(v1 + 24) = v8;
      *(void *)(v7 - _Block_object_dispose(va, 8) = a3[2];
      *a3 = 0LL;
      a3[1] = 0LL;
      a3[2] = 0LL;
      uint64_t v7 = *((void *)&v14 + 1) - 24LL;
      *((void *)&v14 + 1) -= 24LL;
    }

    while (a3 != a5);
    uint64_t v9 = v14;
  }

  char v12 = 1;
  sub_100DEA300((uint64_t)v11);
  return v9;
}

uint64_t sub_100DEA300(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24)) {
    sub_1000074C0(a1);
  }
  return a1;
}

double sub_100DEA334(double **a1, char a2)
{
  float v2 = a1[1];
  if (*a1 == v2) {
    return 0.0;
  }
  double v3 = 0.0;
  double v4 = 0.0;
  uint64_t v5 = *a1;
  do
  {
    double v6 = *v5;
    double v7 = v5[1];
    v5 += 2;
    double v3 = v3 + v6 * v6;
    double v4 = v4 + v6 * v7;
  }

  while (v5 != v2);
  if ((a2 & 1) == 0)
  {
    double v9 = 0.0;
    double v10 = 0.0;
    uint64_t v11 = *a1;
    do
    {
      double v13 = *v11;
      double v12 = v11[1];
      v11 += 2;
      double v9 = v9 + v12;
      double v10 = v10 + v13;
    }

    while (v11 != v2);
    double v14 = (double)(unint64_t)(((char *)v2 - (char *)*a1) >> 4);
    double v15 = v14 * v3 - v10 * v10;
    if (v15 != 0.0) {
      return (v9 * -v10 + v14 * v4) / v15;
    }
    return 0.0;
  }

  double result = v4 / v3;
  if (v3 <= 0.0) {
    return 0.0;
  }
  return result;
}

float *sub_100DEA3E0(float *result, unint64_t a2)
{
  if (a2)
  {
    uint64_t v2 = 0LL;
    float v3 = 0.0;
    do
      float v3 = v3 + result[v2++];
    while (a2 != v2);
    float v4 = v3 / (float)a2;
    do
    {
      *double result = *result - v4;
      ++result;
      --a2;
    }

    while (a2);
  }

  return result;
}

uint64_t sub_100DEA424(uint64_t result, float *a2, uint64_t a3, char a4)
{
  if (a3)
  {
    uint64_t v4 = 0LL;
    uint64_t v5 = a3;
    uint64_t v6 = result;
    do
    {
      if (v5)
      {
        uint64_t v7 = 0LL;
        float v8 = 0.0;
        do
        {
          float v8 = v8 + (float)(*(float *)(result + 4 * v7) * *(float *)(v6 + 4 * v7));
          ++v7;
        }

        while (v5 != v7);
      }

      else
      {
        float v8 = 0.0;
      }

      --v5;
      v6 += 4LL;
      a2[v4++] = v8;
    }

    while (v4 != a3);
    if ((a4 & 1) != 0)
    {
      float v9 = *a2;
      do
      {
        *a2 = *a2 / v9;
        ++a2;
        --a3;
      }

      while (a3);
    }
  }

  return result;
}

float sub_100DEA49C(uint64_t a1)
{
  return *(float *)a1;
}

float sub_100DEA4AC(float *a1)
{
  return (float)((float)(*a1 + a1[1]) + a1[2]) / 1.7321;
}

float sub_100DEA4DC(float *a1, float *a2, float *a3)
{
  uint64_t v3 = 0LL;
  float v4 = *a1;
  float v5 = a1[1];
  float v6 = a1[2];
  float v7 = *a2;
  float v8 = a2[1];
  float v9 = a2[2];
  float v33 = *a1 - *a2;
  float v34 = v5 - v8;
  float v35 = v6 - v9;
  float v10 = 0.0;
  do
  {
    float v10 = v10 + (float)(*(float *)((char *)&v33 + v3) * *(float *)((char *)&v33 + v3));
    v3 += 4LL;
  }

  while (v3 != 12);
  uint64_t v11 = 0LL;
  float v12 = *a3;
  float v13 = a3[1];
  float v14 = v8 - v13;
  float v15 = a3[2];
  float v33 = v7 - *a3;
  float v34 = v14;
  float v35 = v9 - v15;
  float v16 = 0.0;
  do
  {
    float v16 = v16 + (float)(*(float *)((char *)&v33 + v11) * *(float *)((char *)&v33 + v11));
    v11 += 4LL;
  }

  while (v11 != 12);
  uint64_t v17 = 0LL;
  float v33 = v4 - v12;
  float v34 = v5 - v13;
  float v35 = v6 - v15;
  float v18 = 0.0;
  float v19 = sqrtf(v10);
  do
  {
    float v18 = v18 + (float)(*(float *)((char *)&v33 + v17) * *(float *)((char *)&v33 + v17));
    v17 += 4LL;
  }

  while (v17 != 12);
  float v20 = sqrtf(v16);
  float v21 = sqrtf(v18);
  float v22 = v19 + v20;
  float v23 = log10f((float)(v19 + v20) - v21);
  float v24 = -6.0;
  if (v23 >= -3.0)
  {
    float v25 = v23;
    float v26 = log10f(v19);
    float v24 = 6.0;
    if (v26 >= -3.0)
    {
      float v27 = v26;
      float v28 = log10f(v20);
      if (v28 >= -3.0)
      {
        float v29 = v25 + log10f((float)(v19 - v20) + v21);
        float v30 = log10f((float)(v20 - v19) + v21) + v29;
        float v31 = (float)-(float)(v27 - (float)((float)(log10f(v22 + v21) + v30) * 0.5)) - v28;
        return v31 - log10f(v21);
      }
    }
  }

  return v24;
}

BOOL sub_100DEA678(float *a1, float *a2, float a3)
{
  float v3 = a1[1] - a2[1];
}

double sub_100DEA6B0(double a1)
{
  double v1 = round(a1 * 0.5);
  return v1 + v1;
}

double sub_100DEA6C4(unsigned int a1, double a2)
{
  return round(a2 / (double)a1) * (double)a1;
}

double sub_100DEA6D8(double a1, double a2, double a3, double a4, double a5)
{
  if (vabdd_f64(a2, a3) <= 0.001) {
    return 0.0;
  }
  else {
    return (a1 - a2) / (a3 - a2) * a5 + (1.0 - (a1 - a2) / (a3 - a2)) * a4;
  }
}

double sub_100DEA714(double a1, double a2, double a3)
{
  return 1.0 / a3 * 0.39894228 * exp(-((a1 - a2) * (a1 - a2)) / ((a3 + a3) * a3));
}

uint64_t sub_100DEA75C(unint64_t a1)
{
  uint64_t v1 = 0LL;
  LODWORD(v2) = 0;
  int v3 = 63689;
  do
  {
    uint64_t v2 = v3 * (_DWORD)v2 + (a1 >> v1);
    v3 *= 378551;
    v1 += 8LL;
  }

  while (v1 != 64);
  return v2;
}

double sub_100DEA794(uint64_t a1, int a2)
{
  __int128 __p = 0LL;
  float64x2_t v32 = 0LL;
  uint64_t v33 = 0LL;
  sub_100007590(&__p, *(const void **)a1, *(void *)(a1 + 8), (uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 3);
  double v4 = (double)(int)((((*(void *)(a1 + 8) - *(void *)a1) >> 3) - 1) * a2) / 100.0;
  int v5 = (int)v4;
  if (v4 == (double)(int)v4)
  {
    float v6 = (double *)__p;
    float v7 = (double *)((char *)__p + 8 * v5);
    if (v7 != v32)
    {
      sub_10023DA1C((double *)__p, v7, v32, v4);
      float v6 = (double *)__p;
    }

    double v8 = v6[v5];
LABEL_26:
    float64x2_t v32 = v6;
    operator delete(v6);
    return v8;
  }

  if (a2 < 50)
  {
    signed int v21 = vcvtpd_s64_f64(v4);
    float v6 = (double *)__p;
    float v22 = (double *)((char *)__p + 8 * v21);
    if (v22 != v32)
    {
      sub_10023DA1C((double *)__p, v22, v32, v4);
      float v6 = (double *)__p;
    }

    float v23 = v6;
    if (v21 >= 2)
    {
      float v24 = v6 + 1;
      double v25 = *v6;
      uint64_t v26 = 8LL * v21 - 8;
      float v23 = v6;
      float v27 = v6 + 1;
      do
      {
        double v28 = *v27++;
        double v29 = v28;
        if (v25 < v28)
        {
          double v25 = v29;
          float v23 = v24;
        }

        float v24 = v27;
        v26 -= 8LL;
      }

      while (v26);
    }

    double v20 = v6[v21];
    double v14 = *v23;
  }

  else
  {
    float v6 = (double *)__p;
    float v9 = (double *)((char *)__p + 8 * v5);
    if (v9 != v32)
    {
      sub_10023DA1C((double *)__p, v9, v32, v4);
      float v6 = (double *)__p;
      float v9 = v32;
    }

    float v10 = &v6[v5];
    uint64_t v11 = v10 + 1;
    double v13 = *v10;
    float v12 = v10 + 2;
    double v14 = v13;
    if (v11 != v9 && v12 != v9)
    {
      double v16 = *v11;
      uint64_t v17 = v12;
      do
      {
        double v18 = *v17++;
        double v19 = v18;
        if (v18 < v16)
        {
          double v16 = v19;
          uint64_t v11 = v12;
        }

        float v12 = v17;
      }

      while (v17 != v9);
    }

    double v20 = *v11;
  }

  double v8 = (v20 + v14) * 0.5;
  if (v6) {
    goto LABEL_26;
  }
  return v8;
}

void sub_100DEA930( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_100DEA954(uint64_t a1, int a2)
{
  int v3 = *(const void **)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = v4 - *(void *)a1;
  if (v4 == *(void *)a1) {
    return -INFINITY;
  }
  __int128 __p = 0LL;
  uint64_t v38 = 0LL;
  uint64_t v39 = 0LL;
  sub_100007590(&__p, v3, v4, v5 >> 3);
  double v7 = (double)(int)((((*(void *)(a1 + 8) - *(void *)a1) >> 3) - 1) * a2) / 100.0;
  int v8 = (int)v7;
  if (v7 == (double)(int)v7)
  {
    float v9 = (double *)__p;
    float v10 = (double *)((char *)__p + 8 * v8);
    if (v10 != v38)
    {
      sub_10023DA1C((double *)__p, v10, v38, (double)(int)v7);
      float v9 = (double *)__p;
    }

    double v11 = v9[v8];
LABEL_28:
    uint64_t v38 = v9;
    operator delete(v9);
    return v11;
  }

  double v12 = modf(v7, &v36);
  double v13 = v12;
  if (a2 < 50)
  {
    signed int v26 = vcvtpd_s64_f64(v7);
    float v9 = (double *)__p;
    float v27 = (double *)((char *)__p + 8 * v26);
    if (v27 != v38)
    {
      sub_10023DA1C((double *)__p, v27, v38, v12);
      float v9 = (double *)__p;
    }

    double v28 = v9;
    if (v26 >= 2)
    {
      double v29 = v9 + 1;
      double v30 = *v9;
      uint64_t v31 = 8LL * v26 - 8;
      double v28 = v9;
      float64x2_t v32 = v9 + 1;
      do
      {
        double v33 = *v32++;
        double v34 = v33;
        if (v30 < v33)
        {
          double v30 = v34;
          double v28 = v29;
        }

        double v29 = v32;
        v31 -= 8LL;
      }

      while (v31);
    }

    double v25 = v9[v26];
    double v19 = *v28;
  }

  else
  {
    float v9 = (double *)__p;
    double v14 = (double *)((char *)__p + 8 * v8);
    if (v14 != v38)
    {
      sub_10023DA1C((double *)__p, v14, v38, v12);
      float v9 = (double *)__p;
      double v14 = v38;
    }

    float v15 = &v9[v8];
    double v16 = v15 + 1;
    double v18 = *v15;
    uint64_t v17 = v15 + 2;
    double v19 = v18;
    if (v16 != v14 && v17 != v14)
    {
      double v21 = *v16;
      float v22 = v17;
      do
      {
        double v23 = *v22++;
        double v24 = v23;
        if (v23 < v21)
        {
          double v21 = v24;
          double v16 = v17;
        }

        uint64_t v17 = v22;
      }

      while (v22 != v14);
    }

    double v25 = *v16;
  }

  double v11 = v19 + (v25 - v19) * v13;
  if (v9) {
    goto LABEL_28;
  }
  return v11;
}

void sub_100DEAB0C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DEAB30(double a1)
{
  double v1 = a1 * 3.14159265;
  double v2 = -(a1 * 3.14159265);
  if (v1 <= 0.0) {
    double v3 = v2;
  }
  else {
    double v3 = v1;
  }
  if (v3 > 0.0001)
  {
    float v4 = v1;
    sinf(v4);
  }

uint64_t sub_100DEAB84(uint64_t a1, void *a2)
{
  *(void *)a1 = off_1018841F8;
  *(void *)(a1 + _Block_object_dispose(va, 8) = a2;
  *(void *)(a1 + 1sub_1002D62D8(v1 + 6) = 0LL;
  *(void *)(a1 + 22) = 0LL;
  *(void *)(a1 + 32) = 0x7FFFFFFFFFFFFFFFLL;
  *(_DWORD *)(a1 + 4sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0x7FFFFFFF;
  id v3 = [a2 newTimer];
  *(void *)(a1 + 1sub_1002D62D8(v1 + 6) = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  _DWORD v8[2] = sub_100DEAC48;
  v8[3] = &unk_10181D3D0;
  _DWORD v8[4] = a1;
  [v3 setHandler:v8];
  float v4 = *(void **)(a1 + 16);
  sub_101204164(v6, "FallUserMetricsUploadIntervalSeconds", &qword_10135EFF0, 0);
  [v4 setNextFireDelay:0.0 interval:v7];
  return a1;
}

uint64_t sub_100DEAC48(uint64_t a1)
{
  double v1 = *(_BYTE **)(a1 + 32);
  v1[25] = 1;
  return (*(uint64_t (**)(_BYTE *))(*(void *)v1 + 16LL))(v1);
}

uint64_t sub_100DEAC64(uint64_t a1)
{
  *(void *)a1 = off_1018841F8;
  [*(id *)(a1 + 16) invalidate];

  *(void *)(a1 + 1sub_1002D62D8(v1 + 6) = 0LL;
  return a1;
}

void sub_100DEACAC(uint64_t a1)
{
  double v1 = (void *)sub_100DEAC64(a1);
  operator delete(v1);
}

uint64_t sub_100DEACC0(uint64_t result, char a2)
{
  *(_BYTE *)(result + sub_100BDC958(v1 + 24) = a2;
  return result;
}

uint64_t sub_100DEACC8(uint64_t result, int a2)
{
  if (*(unsigned __int8 *)(result + 26) != a2)
  {
    *(_BYTE *)(result + 2sub_1002D62D8(v1 + 6) = a2;
    *(_BYTE *)(result + 25) = 1;
  }

  return result;
}

uint64_t sub_100DEACE4(uint64_t result, int a2)
{
  if (*(unsigned __int8 *)(result + 27) != a2)
  {
    *(_BYTE *)(result + 27) = a2;
    *(_BYTE *)(result + 25) = 1;
  }

  return result;
}

uint64_t sub_100DEAD00(uint64_t result, int a2)
{
  if (*(unsigned __int8 *)(result + 28) != a2)
  {
    *(_BYTE *)(result + 2_Block_object_dispose(va, 8) = a2;
    *(_BYTE *)(result + 25) = 1;
  }

  return result;
}

uint64_t sub_100DEAD1C(uint64_t result, int a2)
{
  if (*(unsigned __int8 *)(result + 29) != a2)
  {
    *(_BYTE *)(result + 29) = a2;
    *(_BYTE *)(result + 25) = 1;
  }

  return result;
}

uint64_t sub_100DEAD38(uint64_t result, int a2)
{
  if (*(_DWORD *)(result + 32) != a2)
  {
    *(_DWORD *)(result + 32) = a2;
    *(_BYTE *)(result + 25) = 1;
  }

  return result;
}

uint64_t sub_100DEAD54(uint64_t result, float a2)
{
  int v2 = (int)(float)(a2 * 100.0);
  if (*(_DWORD *)(result + 36) != v2)
  {
    *(_DWORD *)(result + 3sub_1002D62D8(v1 + 6) = v2;
    *(_BYTE *)(result + 25) = 1;
  }

  return result;
}

uint64_t sub_100DEAD80(uint64_t result, float a2)
{
  if (*(_DWORD *)(result + 40) != (int)a2)
  {
    *(_DWORD *)(result + 4sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = (int)a2;
    *(_BYTE *)(result + 25) = 1;
  }

  return result;
}

uint64_t sub_100DEADA0(uint64_t result)
{
  if (*(_BYTE *)(result + 25))
  {
    uint64_t v1 = result;
    if (*(_BYTE *)(result + 24))
    {
      if (qword_1019345D0 != -1) {
        dispatch_once(&qword_1019345D0, &stru_101884228);
      }
      int v2 = (os_log_s *)qword_1019345D8;
      if (os_log_type_enabled((os_log_t)qword_1019345D8, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Sending UserInfo to CoreAnalytics", buf, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019345D0 != -1) {
          dispatch_once(&qword_1019345D0, &stru_101884228);
        }
        v12[0] = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345D8,  2LL,  "Sending UserInfo to CoreAnalytics",  v12,  2);
        double v7 = (uint8_t *)v6;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLFallUserInfoMetrics::sendEventToCoreAnalytics() const",  "%s\n",  v6);
        if (v7 != buf) {
          free(v7);
        }
      }

      float v10 = _NSConcreteStackBlock;
      id v3 = sub_100DEB1A0;
      float v4 = &v10;
    }

    else
    {
      if (qword_1019345D0 != -1) {
        dispatch_once(&qword_1019345D0, &stru_101884228);
      }
      uint64_t v5 = (os_log_s *)qword_1019345D8;
      if (os_log_type_enabled((os_log_t)qword_1019345D8, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "UserInfo health not sent to CoreAnalytics because logging not enabled",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019345D0 != -1) {
          dispatch_once(&qword_1019345D0, &stru_101884228);
        }
        v12[0] = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345D8,  2LL,  "UserInfo health not sent to CoreAnalytics because logging not enabled",  v12,  2);
        float v9 = (uint8_t *)v8;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLFallUserInfoMetrics::sendEventToCoreAnalytics() const",  "%s\n",  v8);
        if (v9 != buf) {
          free(v9);
        }
      }

      double v11 = _NSConcreteStackBlock;
      id v3 = sub_100DEB0C4;
      float v4 = &v11;
    }

    v4[1] = (void **)3221225472LL;
    v4[2] = (void **)v3;
    unsigned __int8 v4[3] = (void **)&unk_101820718;
    v4[4] = (void **)v1;
    double result = AnalyticsSendEventLazy(@"com.apple.CoreMotion.FallUserInfo", v4);
    *(_BYTE *)(v1 + 25) = 0;
  }

  return result;
}

NSDictionary *sub_100DEB0C4(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 **)(a1 + 32);
  v3[0] = @"isFallDetectionAvailable";
  v4[0] = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", v1[26]);
  v3[1] = @"didEnableAnomalyDetection";
  v4[1] = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", v1[27]);
  void v3[2] = @"didEnableBackgroundAllDayAnomalyDetection";
  v4[2] = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", v1[28]);
  v3[3] = @"isImproveHealthAndFitnessOptInEnabled";
  unsigned __int8 v4[3] = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", v1[29]);
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v4,  v3,  4LL);
}

NSDictionary *sub_100DEB1A0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  v3[0] = @"isFallDetectionAvailable";
  v4[0] = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", *(unsigned __int8 *)(v1 + 26));
  v3[1] = @"didEnableAnomalyDetection";
  v4[1] = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", *(unsigned __int8 *)(v1 + 27));
  void v3[2] = @"didEnableBackgroundAllDayAnomalyDetection";
  v4[2] = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", *(unsigned __int8 *)(v1 + 28));
  v3[3] = @"isImproveHealthAndFitnessOptInEnabled";
  unsigned __int8 v4[3] = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", *(unsigned __int8 *)(v1 + 29));
  void v3[4] = @"maxAccelNormThreshold";
  void v4[4] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(v1 + 40));
  void v3[5] = @"userAgeBin";
  void v4[5] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(v1 + 32));
  v3[6] = @"userMaxMets";
  v4[6] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(v1 + 36));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v4,  v3,  7LL);
}

void sub_100DEB2D0(id a1)
{
  qword_1019345D8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Fall");
}

void sub_100DEB3A0(id a1)
{
  qword_10199EB08 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLWifiTilesManagerSilo");
}

uint64_t sub_100DEB454(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100DF64C4;
  block[3] = &unk_10181A288;
  void block[4] = a1;
  if (qword_10199EB18 != -1) {
    dispatch_once(&qword_10199EB18, block);
  }
  return qword_1019A20C0;
}

void sub_100DEB91C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100DEB938( uint64_t a1, unsigned int a2, const std::string *a3, uint64_t a4, double a5, double a6, double a7)
{
  unsigned int v196 = a2;
  if (a2)
  {
    sub_10127146C();
LABEL_107:
    __break(1u);
    goto LABEL_108;
  }

  double v13 = a7;
  double v14 = a6;
  double v15 = a5;
  uint64_t v8 = a1;
  sub_1008ACE9C((uint64_t)&v194, &v196);
  __str = &v195;
  std::string::operator=(&v195, a3);
  __int128 v18 = *(_OWORD *)(a4 + 16);
  __int128 v191 = *(_OWORD *)a4;
  __int128 v192 = v18;
  uint64_t v193 = *(void *)(a4 + 32);
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 224LL))(v8);
  uint64_t v9 = v19;
  double v7 = __p;
  if (!*(_BYTE *)v19)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101884558);
    }
    int64_t v46 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      unsigned int v47 = v196;
      unint64_t v48 = sub_100DD8CC8(v196);
      *(_DWORD *)std::stringbuf::string_type buf = 67109378;
      *(_DWORD *)&uint8_t buf[4] = v47;
      *(_WORD *)&uint8_t buf[8] = 2080;
      *(void *)&buf[10] = v48;
      _os_log_impl( (void *)&_mh_execute_header,  v46,  OS_LOG_TYPE_DEBUG,  "WIFITILE: requestDownload, type, %d, %s, not active",  buf,  0x12u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101884558);
      }
      uint64_t v49 = qword_101934A78;
      unsigned int v50 = v196;
      int v51 = sub_100DD8CC8(v196);
      LODWORD(v200.__r_.__value_.__l.__data_) = 67109378;
      HIDWORD(v200.__r_.__value_.__r.__words[0]) = v50;
      LOWORD(v200.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&v200.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)v51;
      LODWORD(v16_Block_object_dispose(va, 8) = 18;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v49,  2LL,  "WIFITILE: requestDownload, type, %d, %s, not active",  &v200,  v168);
      uint64_t v53 = (char *)v52;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWifiTilesManager::requestDownload(CLTilesManager_Type::TileType, double, double, const std::string &, con st CLTileFileDownloadDetails &, CFAbsoluteTime)",  "%s\n",  v52);
      if (v53 != buf) {
        free(v53);
      }
    }

    goto LABEL_265;
  }

  sub_100C11F48((uint64_t)&v194, -1LL, v15, v14, *(double *)(v19 + 152), *(double *)(v19 + 160));
  if (!sub_1008AD1E0((unsigned int *)&v194))
  {
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101884578);
    }
    int v54 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_FAULT))
    {
      sub_1008AD840((unsigned int *)&v194, (std::stringbuf::string_type *)buf);
      uint64_t v55 = buf[23] >= 0 ? buf : *(_BYTE **)buf;
      LODWORD(v200.__r_.__value_.__l.__data_) = 136380675;
      *(std::string::size_type *)((char *)v200.__r_.__value_.__r.__words + 4) = (std::string::size_type)v55;
      _os_log_impl( (void *)&_mh_execute_header,  v54,  OS_LOG_TYPE_FAULT,  "WIFITILE: requestDownload, invalid tile ID: %{private}s, #CloneMe",  (uint8_t *)&v200,  0xCu);
      if ((buf[23] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
    }

    if (!sub_1002921D0(115, 0)) {
      goto LABEL_91;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101884578);
    }
    uint64_t v56 = qword_101934868;
    sub_1008AD840((unsigned int *)&v194, &v200);
    if ((v200.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      int v57 = &v200;
    }
    else {
      int v57 = (std::stringbuf::string_type *)v200.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)__int128 __p = 136380675;
    *(void *)&__p[4] = v57;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v56,  17LL,  "WIFITILE: requestDownload, invalid tile ID: %{private}s, #CloneMe",  __p,  12);
    int v59 = v58;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLWifiTilesManager::requestDownload(CLTilesManager_Type::TileType, double, double, const std::string &, const CLTileFileDownloadDetails &, CFAbsoluteTime)",  "%s\n",  v59);
    if (v59 == buf) {
      goto LABEL_91;
    }
LABEL_272:
    free(v59);
LABEL_91:
    uint64_t v62 = 0LL;
    goto LABEL_266;
  }

  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101884538);
  }
  double v20 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_INFO))
  {
    double v21 = sub_1008ADB4C((uint64_t)&v194);
    double v22 = sub_1008ADB70((uint64_t)&v194);
    *(_DWORD *)std::stringbuf::string_type buf = 134284033;
    *(double *)&uint8_t buf[4] = v21;
    *(_WORD *)&_BYTE buf[12] = 2049;
    double v7 = __p;
    *(double *)&_BYTE buf[14] = v22;
    *(_WORD *)&_BYTE buf[22] = 1026;
    *(_DWORD *)&_BYTE buf[24] = v191;
    _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_INFO,  "@TileDl, wifi, request, llsw, %{private}.2lf, %{private}.2lf, currOverCell, %{public}d",  buf,  0x1Cu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101884538);
    }
    uint64_t v63 = qword_101934858;
    double v64 = sub_1008ADB4C((uint64_t)&v194);
    double v65 = sub_1008ADB70((uint64_t)&v194);
    LODWORD(v200.__r_.__value_.__l.__data_) = 134284033;
    *(double *)((char *)v200.__r_.__value_.__r.__words + 4) = v64;
    WORD2(v200.__r_.__value_.__r.__words[1]) = 2049;
    double v7 = __p;
    *(double *)((char *)&v200.__r_.__value_.__r.__words[1] + sub_1002D62D8(v1 + 6) = v65;
    HIWORD(v200.__r_.__value_.__r.__words[2]) = 1026;
    LODWORD(v201.__r_.__value_.__l.__data_) = v191;
    LODWORD(v16_Block_object_dispose(va, 8) = 28;
    float v10 = (std::stringbuf::string_type *)buf;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v63,  1LL,  "@TileDl, wifi, request, llsw, %{private}.2lf, %{private}.2lf, currOverCell, %{public}d",  &v200);
    uint64_t v67 = (char *)v66;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWifiTilesManager::requestDownload(CLTilesManager_Type::TileType, double, double, const std::string &, const CLTileFileDownloadDetails &, CFAbsoluteTime)",  "%s\n",  v66);
    if (v67 != buf) {
      free(v67);
    }
  }

  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101884538);
  }
  double v23 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    float v10 = (std::stringbuf::string_type *)buf;
    sub_100C11224((double *)&v191, (std::stringbuf::string_type *)buf);
    double v24 = buf[23] >= 0 ? buf : *(_BYTE **)buf;
    LODWORD(v200.__r_.__value_.__l.__data_) = 136446210;
    *(std::string::size_type *)((char *)v200.__r_.__value_.__r.__words + 4) = (std::string::size_type)v24;
    _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEBUG,  "TileDl, wifi, %{public}s",  (uint8_t *)&v200,  0xCu);
    if ((buf[23] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
  }

  uint64_t v25 = sub_1002921D0(115, 2);
  if ((_DWORD)v25)
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101884538);
    }
    uint64_t v68 = qword_101934858;
    float v10 = &v200;
    sub_100C11224((double *)&v191, &v200);
    if ((v200.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v69 = &v200;
    }
    else {
      uint64_t v69 = (std::stringbuf::string_type *)v200.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)__int128 __p = 136446210;
    *(void *)&__p[4] = v69;
    LODWORD(v16_Block_object_dispose(va, 8) = 12;
    _os_log_send_and_compose_impl(2LL, 0LL, buf, 1628LL, &_mh_execute_header, v68, 2LL, "TileDl, wifi, %{public}s", __p);
    uint64_t v71 = v70;
    uint64_t v25 = sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWifiTilesManager::requestDownload(CLTilesManager_Type::TileType, double, double, const std::string &, const CLTileFileDownloadDetails &, CFAbsoluteTime)",  "%s\n",  v71);
    if (v71 != buf) {
      free(v71);
    }
  }

  uint64_t v187 = v8;
  if (!*(_BYTE *)(v8 + 217))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101884558);
    }
    __int128 v60 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      int v61 = *(unsigned __int8 *)(v187 + 216);
      *(_DWORD *)std::stringbuf::string_type buf = 67109120;
      *(_DWORD *)&uint8_t buf[4] = v61;
      _os_log_impl( (void *)&_mh_execute_header,  v60,  OS_LOG_TYPE_DEBUG,  "WIFITILE: requestDownload, index is not available until first unlock, fDataProtectionEnabled, %d",  buf,  8u);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_91;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101884558);
    }
    int v150 = *(unsigned __int8 *)(v187 + 216);
    LODWORD(v200.__r_.__value_.__l.__data_) = 67109120;
    HIDWORD(v200.__r_.__value_.__r.__words[0]) = v150;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "WIFITILE: requestDownload, index is not available until first unlock, fDataProtectionEnabled, %d",  &v200);
    int v59 = (char *)v151;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWifiTilesManager::requestDownload(CLTilesManager_Type::TileType, double, double, const std::string &, const CLTileFileDownloadDetails &, CFAbsoluteTime)",  "%s\n",  v151);
    if (v59 == buf) {
      goto LABEL_91;
    }
    goto LABEL_272;
  }

  if (*(_BYTE *)(v9 + 176))
  {
    sub_101271324( v25,  v26,  v27,  v28,  v29,  v30,  v31,  v32,  v167,  (uint64_t)v168,  (uint64_t)v169,  v170,  (uint64_t)v171,  v172,  v175,  v176,  v177,  v178,  v179,  v181,  v183,  v184,  v185,  v186);
    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/Tiles/CLWifiTilesManager.mm",  1289,  "requestDownload");
    goto LABEL_107;
  }

  LODWORD(v1sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = *(_DWORD *)(v8 + 408);
  uint64_t v185 = v8 + 128;
  double v11 = sub_100603554(v8 + 128, (uint64_t)&v194);
  uint64_t v186 = v9 + 184;
  BOOL v12 = sub_10060238C(v9 + 184, (unsigned int *)&v194);
  if (qword_101934A70 != -1) {
LABEL_108:
  }
    dispatch_once(&qword_101934A70, &stru_101884558);
  uint64_t v182 = (void *)(v8 + 136);
  double v33 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    sub_1008AD840((unsigned int *)&v194, &v200);
    double v34 = (v200.__r_.__value_.__s.__size_ & 0x80u) == 0
        ? &v200
        : (std::stringbuf::string_type *)v200.__r_.__value_.__r.__words[0];
    *(_DWORD *)std::stringbuf::string_type buf = 136316162;
    *(void *)&uint8_t buf[4] = v34;
    *(_WORD *)&_BYTE buf[12] = 1024;
    *(_DWORD *)&_BYTE buf[14] = v12;
    *(_WORD *)&_BYTE buf[18] = 1024;
    *(_DWORD *)&buf[20] = v182 != v11;
    *(_WORD *)&_BYTE buf[24] = 1024;
    double v7 = __p;
    *(_DWORD *)&buf[26] = 0;
    *(_WORD *)&buf[30] = 1024;
    *(_DWORD *)&_BYTE buf[32] = v12;
    _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEBUG,  "WIFITILE: requestDownload, tileId=%s isAlreadyDownloaded, %d, isBeingDownloaded, %d, shouldDownloadedBasedOnPermis sions, %d, isAlreadyDownloaded, %d",  buf,  0x24u);
  }

  if (!sub_1002921D0(115, 2))
  {
    if (v12) {
      goto LABEL_29;
    }
LABEL_119:
    if (v182 != v11)
    {
      uint64_t v76 = v11[10];
      __int16 v77 = (_BYTE *)(v76 + 112);
      BOOL v39 = *(unsigned __int8 *)(v76 + 114) != BYTE2(v191)
         || *v77 != v191
         || *(unsigned __int8 *)(v76 + 113) != BYTE1(v191);
      if (*(_BYTE *)(v76 + 114)) {
        BYTE2(v191) = 1;
      }
      if (*v77) {
        LOBYTE(v191) = 1;
      }
      if (*(_BYTE *)(v76 + 113)) {
        BYTE1(v191) = 1;
      }
      __int128 v78 = v192;
      *(_OWORD *)__int16 v77 = v191;
      *(_OWORD *)(v76 + 12_Block_object_dispose(va, 8) = v78;
      *(_WORD *)(v76 + 144) = v193;
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101884558);
      }
      __int16 v79 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        (*(void (**)(std::stringbuf::string_type *__return_ptr, uint64_t))(*(void *)v76 + 16LL))(&v200, v76);
        int size = (char)v200.__r_.__value_.__s.__size_;
        std::string::size_type v81 = v200.__r_.__value_.__r.__words[0];
        sub_100C11224((double *)&v191, (std::stringbuf::string_type *)__p);
        int v82 = &v200;
        if (size < 0) {
          int v82 = (std::stringbuf::string_type *)v81;
        }
        if (v199[1] >= 0) {
          uint64_t v83 = __p;
        }
        else {
          uint64_t v83 = *(_BYTE **)__p;
        }
        *(_DWORD *)std::stringbuf::string_type buf = 136315650;
        *(void *)&uint8_t buf[4] = v82;
        *(_WORD *)&_BYTE buf[12] = 2080;
        double v7 = __p;
        *(void *)&_BYTE buf[14] = v83;
        *(_WORD *)&_BYTE buf[22] = 1024;
        *(_DWORD *)&_BYTE buf[24] = v39;
        _os_log_impl( (void *)&_mh_execute_header,  v79,  OS_LOG_TYPE_DEBUG,  "WIFITILE: requestDownload, tileid, %s, will be downloaded, details, %s, updated, %d",  buf,  0x1Cu);
        if ((v199[1] & 0x80000000) != 0) {
          operator delete(*(void **)__p);
        }
        uint64_t v8 = v187;
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101884558);
        }
        uint64_t v84 = qword_101934A78;
        (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)v76 + 16LL))(__p, v76);
        int v85 = v199[1];
        uint64_t v86 = *(_BYTE **)__p;
        sub_100C11224((double *)&v191, &v202);
        __int16 v87 = __p;
        if (v85 < 0) {
          __int16 v87 = v86;
        }
        if ((v202.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          int v88 = &v202;
        }
        else {
          int v88 = (std::stringbuf::string_type *)v202.__r_.__value_.__r.__words[0];
        }
        LODWORD(v200.__r_.__value_.__l.__data_) = 136315650;
        *(std::string::size_type *)((char *)v200.__r_.__value_.__r.__words + 4) = (std::string::size_type)v87;
        WORD2(v200.__r_.__value_.__r.__words[1]) = 2080;
        double v7 = __p;
        *(std::string::size_type *)((char *)&v200.__r_.__value_.__r.__words[1] + sub_1002D62D8(v1 + 6) = (std::string::size_type)v88;
        HIWORD(v200.__r_.__value_.__r.__words[2]) = 1024;
        LODWORD(v201.__r_.__value_.__l.__data_) = v39;
        LODWORD(v16_Block_object_dispose(va, 8) = 28;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v84,  2LL,  "WIFITILE: requestDownload, tileid, %s, will be downloaded, details, %s, updated, %d",  (const char *)&v200,  v168,  (_DWORD)v169);
        __int128 v90 = v89;
        if ((v199[1] & 0x80000000) != 0) {
          operator delete(*(void **)__p);
        }
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWifiTilesManager::requestDownload(CLTilesManager_Type::TileType, double, double, const std::string &, c onst CLTileFileDownloadDetails &, CFAbsoluteTime)",  "%s\n",  v90);
        if (v90 != buf) {
          free(v90);
        }
        uint64_t v8 = v187;
      }

      goto LABEL_177;
    }

    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101884558);
    }
    __int16 v91 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      sub_100C11224((double *)&v191, &v200);
      int v92 = (v200.__r_.__value_.__s.__size_ & 0x80u) == 0
          ? &v200
          : (std::stringbuf::string_type *)v200.__r_.__value_.__r.__words[0];
      *(_DWORD *)std::stringbuf::string_type buf = 134218498;
      *(double *)&uint8_t buf[4] = v15;
      *(_WORD *)&_BYTE buf[12] = 2048;
      double v7 = __p;
      *(double *)&_BYTE buf[14] = v14;
      *(_WORD *)&_BYTE buf[22] = 2080;
      *(void *)&_BYTE buf[24] = v92;
      _os_log_impl( (void *)&_mh_execute_header,  v91,  OS_LOG_TYPE_DEBUG,  "WIFITILE: requestDownload, tileid, %.8lf, %8lf, will be downloaded, details, %s",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_167;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101884558);
    }
    uint64_t v164 = qword_101934A78;
    sub_100C11224((double *)&v191, (std::stringbuf::string_type *)__p);
    if (v199[1] >= 0) {
      uint64_t v165 = __p;
    }
    else {
      uint64_t v165 = *(_BYTE **)__p;
    }
    LODWORD(v200.__r_.__value_.__l.__data_) = 134218498;
    *(double *)((char *)v200.__r_.__value_.__r.__words + 4) = v15;
    WORD2(v200.__r_.__value_.__r.__words[1]) = 2048;
    double v7 = __p;
    *(double *)((char *)&v200.__r_.__value_.__r.__words[1] + sub_1002D62D8(v1 + 6) = v14;
    HIWORD(v200.__r_.__value_.__r.__words[2]) = 2080;
    v201.__r_.__value_.__r.__words[0] = (std::string::size_type)v165;
    LODWORD(v16_Block_object_dispose(va, 8) = 32;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v164,  2LL,  "WIFITILE: requestDownload, tileid, %.8lf, %8lf, will be downloaded, details, %s",  COERCE_DOUBLE(&v200),  *(double *)&v168,  v169);
    int v45 = v166;
    if ((v199[1] & 0x80000000) != 0) {
      operator delete(*(void **)__p);
    }
    goto LABEL_299;
  }

  bzero(buf, 0x65CuLL);
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101884558);
  }
  uint64_t v72 = qword_101934A78;
  sub_1008AD840((unsigned int *)&v194, (std::stringbuf::string_type *)__p);
  if (v199[1] >= 0) {
    uint64_t v73 = __p;
  }
  else {
    uint64_t v73 = *(_BYTE **)__p;
  }
  LODWORD(v200.__r_.__value_.__l.__data_) = 136316162;
  *(std::string::size_type *)((char *)v200.__r_.__value_.__r.__words + 4) = (std::string::size_type)v73;
  WORD2(v200.__r_.__value_.__r.__words[1]) = 1024;
  *(_DWORD *)((char *)&v200.__r_.__value_.__r.__words[1] + sub_1002D62D8(v1 + 6) = v12;
  WORD1(v200.__r_.__value_.__r.__words[2]) = 1024;
  HIDWORD(v200.__r_.__value_.__r.__words[2]) = v182 != v11;
  LOWORD(v201.__r_.__value_.__l.__data_) = 1024;
  double v7 = __p;
  *(_DWORD *)&v201.__r_.__value_.__s.__data_[2] = 0;
  HIWORD(v201.__r_.__value_.__r.__words[0]) = 1024;
  LODWORD(v201.__r_.__value_.__r.__words[1]) = v12;
  _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v72,  2LL,  "WIFITILE: requestDownload, tileId=%s isAlreadyDownloaded, %d, isBeingDownloaded, %d, shouldDownloadedBasedOnPermissi ons, %d, isAlreadyDownloaded, %d",  (const char *)&v200,  36,  (_DWORD)v169,  v170,  (_DWORD)v171);
  int v75 = v74;
  if ((v199[1] & 0x80000000) != 0) {
    operator delete(*(void **)__p);
  }
  sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWifiTilesManager::requestDownload(CLTilesManager_Type::TileType, double, double, const std::string &, const C LTileFileDownloadDetails &, CFAbsoluteTime)",  "%s\n",  v75);
  if (v75 != buf) {
    free(v75);
  }
  uint64_t v8 = v187;
  if (!v12) {
    goto LABEL_119;
  }
LABEL_29:
  uint64_t v35 = sub_1006025CC(v186, (unsigned int *)&v194);
  BOOL v36 = sub_100C0D05C(v35, (int)v10 > 1, *(float *)(v9 + 128), v13);
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101884558);
  }
  uint64_t v37 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    (*(void (**)(std::stringbuf::string_type *__return_ptr, uint64_t))(*(void *)v35 + 16LL))(&v200, v35);
    uint64_t v38 = (v200.__r_.__value_.__s.__size_ & 0x80u) == 0
        ? &v200
        : (std::stringbuf::string_type *)v200.__r_.__value_.__r.__words[0];
    *(_DWORD *)std::stringbuf::string_type buf = 136315906;
    *(void *)&uint8_t buf[4] = v38;
    *(_WORD *)&_BYTE buf[12] = 1024;
    *(_DWORD *)&_BYTE buf[14] = BYTE1(v193);
    *(_WORD *)&_BYTE buf[18] = 1024;
    *(_DWORD *)&buf[20] = v36;
    *(_WORD *)&_BYTE buf[24] = 1024;
    double v7 = __p;
    *(_DWORD *)&buf[26] = v182 != v11;
    _os_log_impl( (void *)&_mh_execute_header,  v37,  OS_LOG_TYPE_DEBUG,  "WIFITILE: requestDownload, tileid, %s, already available, isUpdateMTimestamp, %d, isShouldBeRefreshed, %d, isBeingDownloaded, %d",  buf,  0x1Eu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101884558);
    }
    uint64_t v152 = qword_101934A78;
    (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)v35 + 16LL))(__p, v35);
    if (v199[1] >= 0) {
      double v153 = __p;
    }
    else {
      double v153 = *(_BYTE **)__p;
    }
    LODWORD(v200.__r_.__value_.__l.__data_) = 136315906;
    *(std::string::size_type *)((char *)v200.__r_.__value_.__r.__words + 4) = (std::string::size_type)v153;
    WORD2(v200.__r_.__value_.__r.__words[1]) = 1024;
    *(_DWORD *)((char *)&v200.__r_.__value_.__r.__words[1] + sub_1002D62D8(v1 + 6) = BYTE1(v193);
    WORD1(v200.__r_.__value_.__r.__words[2]) = 1024;
    HIDWORD(v200.__r_.__value_.__r.__words[2]) = v36;
    LOWORD(v201.__r_.__value_.__l.__data_) = 1024;
    double v7 = __p;
    *(_DWORD *)&v201.__r_.__value_.__s.__data_[2] = v182 != v11;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v152,  2LL,  "WIFITILE: requestDownload, tileid, %s, already available, isUpdateMTimestamp, %d, isShouldBeRefreshed, %d, isBeingDownloaded, %d",  (const char *)&v200,  30,  (_DWORD)v169,  v170);
    double v155 = v154;
    if ((v199[1] & 0x80000000) != 0) {
      operator delete(*(void **)__p);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWifiTilesManager::requestDownload(CLTilesManager_Type::TileType, double, double, const std::string &, const CLTileFileDownloadDetails &, CFAbsoluteTime)",  "%s\n",  v155);
    if (v155 != buf) {
      free(v155);
    }
    uint64_t v8 = v187;
  }

  if (BYTE1(v193)) {
    sub_100DFA6D4(v8, v35, buf, v13);
  }
  LOBYTE(v39) = 0;
  if (!v36 || v182 != v11) {
    goto LABEL_177;
  }
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101884558);
  }
  int v40 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)v35 + 16LL))(buf, v35);
    int64_t v41 = buf[23] >= 0 ? buf : *(_BYTE **)buf;
    LODWORD(v200.__r_.__value_.__l.__data_) = 136315138;
    *(void *)(v7 + 52) = v41;
    _os_log_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_DEBUG,  "WIFITILE: requestDownload, refresh download, %s",  (uint8_t *)&v200,  0xCu);
    if ((buf[23] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101884558);
    }
    uint64_t v42 = qword_101934A78;
    (*(void (**)(std::stringbuf::string_type *__return_ptr, uint64_t))(*(void *)v35 + 16LL))(&v200, v35);
    if ((v200.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v43 = &v200;
    }
    else {
      uint64_t v43 = (std::stringbuf::string_type *)v200.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)__int128 __p = 136315138;
    *(void *)&__p[4] = v43;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v42,  2LL,  "WIFITILE: requestDownload, refresh download, %s",  __p);
    int v45 = v44;
LABEL_299:
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWifiTilesManager::requestDownload(CLTilesManager_Type::TileType, double, double, const std::string &, const CLTileFileDownloadDetails &, CFAbsoluteTime)",  "%s\n",  v45);
    if (v45 != buf) {
      free(v45);
    }
    uint64_t v8 = v187;
  }

LABEL_265:
  uint64_t v62 = 1LL;
LABEL_266:
  return v62;
}

          *(void *)(a1 + 104) = v33;
          goto LABEL_339;
        case 2u:
          if ((_DWORD)v27 != 2)
          {
            uint64_t v136 = *(char **)(a1 + 16);
            __int16 v135 = *(void *)(a1 + 24);
            if ((unint64_t)v136 >= v135)
            {
              double v153 = (char *)*v14;
              __int16 v154 = (v136 - (_BYTE *)*v14) >> 2;
              double v155 = v154 + 1;
              if ((unint64_t)(v154 + 1) >> 62) {
LABEL_349:
              }
                sub_100007008();
              __int16 v156 = v135 - (void)v153;
              if (v156 >> 1 > v155) {
                double v155 = v156 >> 1;
              }
              else {
                double v157 = v155;
              }
              if (v157)
              {
                uint64_t v158 = (char *)sub_10000956C(v15, v157);
                double v153 = *(char **)(a1 + 8);
                uint64_t v136 = *(char **)(a1 + 16);
              }

              else
              {
                uint64_t v158 = 0LL;
              }

              uint64_t v177 = &v158[4 * v154];
              *(_DWORD *)uint64_t v177 = 0;
              __int16 v137 = v177 + 4;
              while (v136 != v153)
              {
                uint64_t v178 = *((_DWORD *)v136 - 1);
                v136 -= 4;
                *((_DWORD *)v177 - 1) = v178;
                v177 -= 4;
              }

              *(void *)(a1 + _Block_object_dispose(va, 8) = v177;
              *(void *)(a1 + 1sub_1002D62D8(v1 + 6) = v137;
              *(void *)(a1 + sub_100BDC958(v1 + 24) = &v158[4 * v157];
              if (v153) {
                operator delete(v153);
              }
            }

            else
            {
              *(_DWORD *)uint64_t v136 = 0;
              __int16 v137 = v136 + 4;
            }

            *(void *)(a1 + 1sub_1002D62D8(v1 + 6) = v137;
            goto LABEL_286;
          }

          if ((PB::Reader::placeMark(this, v211, v27, a4) & 1) != 0) {
            return 0LL;
          }
          BOOL v36 = *((void *)this + 1);
          uint64_t v37 = *((void *)this + 2);
          while (v36 < v37 && !*((_BYTE *)this + 24))
          {
            BOOL v39 = *(char **)(a1 + 16);
            uint64_t v38 = *(void *)(a1 + 24);
            if ((unint64_t)v39 >= v38)
            {
              int64_t v41 = (char *)*v14;
              uint64_t v42 = (v39 - (_BYTE *)*v14) >> 2;
              uint64_t v43 = v42 + 1;
              uint64_t v44 = v38 - (void)v41;
              if (v44 >> 1 > v43) {
                uint64_t v43 = v44 >> 1;
              }
              else {
                int v45 = v43;
              }
              if (v45)
              {
                int64_t v46 = (char *)sub_10000956C(v15, v45);
                int64_t v41 = *(char **)(a1 + 8);
                BOOL v39 = *(char **)(a1 + 16);
              }

              else
              {
                int64_t v46 = 0LL;
              }

              unsigned int v47 = &v46[4 * v42];
              *(_DWORD *)unsigned int v47 = 0;
              int v40 = v47 + 4;
              while (v39 != v41)
              {
                unint64_t v48 = *((_DWORD *)v39 - 1);
                v39 -= 4;
                *((_DWORD *)v47 - 1) = v48;
                v47 -= 4;
              }

              *(void *)(a1 + _Block_object_dispose(va, 8) = v47;
              *(void *)(a1 + 1sub_1002D62D8(v1 + 6) = v40;
              *(void *)(a1 + sub_100BDC958(v1 + 24) = &v46[4 * v45];
              if (v41) {
                operator delete(v41);
              }
            }

            else
            {
              *(_DWORD *)BOOL v39 = 0;
              int v40 = v39 + 4;
            }

            *(void *)(a1 + 1sub_1002D62D8(v1 + 6) = v40;
            uint64_t v49 = *((void *)this + 1);
            if (v49 > 0xFFFFFFFFFFFFFFFBLL || v49 + 4 > *((void *)this + 2)) {
              goto LABEL_226;
            }
            *(v40 - 1) = *(_DWORD *)(*(void *)this + v49);
            uint64_t v37 = *((void *)this + 2);
            BOOL v36 = *((void *)this + 1) + 4LL;
            *((void *)this + 1) = v36;
          }

          goto LABEL_227;
        case 3u:
          *(_BYTE *)(a1 + 140) |= 4u;
          unsigned int v50 = *((void *)this + 1);
          int v51 = *((void *)this + 2);
          uint64_t v52 = *(void *)this;
          if (v50 <= 0xFFFFFFFFFFFFFFF5LL && v50 + 10 <= v51)
          {
            uint64_t v53 = 0;
            int v54 = 0;
            uint64_t v55 = 0LL;
            do
            {
              uint64_t v56 = v50 + 1;
              *((void *)this + 1) = v50 + 1;
              int v57 = *(_BYTE *)(v52 + v50);
              v55 |= (unint64_t)(v57 & 0x7F) << v53;
              if ((v57 & 0x80) == 0) {
                goto LABEL_268;
              }
              v53 += 7;
              unsigned int v50 = v56;
              uint64_t v93 = v54++ > 8;
            }

            while (!v93);
LABEL_211:
            LODWORD(v55) = 0;
            goto LABEL_268;
          }

          int v138 = 0;
          __int16 v139 = 0;
          uint64_t v55 = 0LL;
          if (v51 <= v50) {
            int v51 = *((void *)this + 1);
          }
          while (2)
          {
            if (v51 == v50)
            {
              LODWORD(v55) = 0;
              *((_BYTE *)this + sub_100BDC958(v1 + 24) = 1;
            }

            else
            {
              uint64_t v140 = v50 + 1;
              double v141 = *(_BYTE *)(v52 + v50);
              *((void *)this + 1) = v140;
              v55 |= (unint64_t)(v141 & 0x7F) << v138;
              if (v141 < 0)
              {
                v138 += 7;
                unsigned int v50 = v140;
                uint64_t v93 = v139++ > 8;
                if (v93) {
                  goto LABEL_211;
                }
                continue;
              }

              if (*((_BYTE *)this + 24)) {
                LODWORD(v55) = 0;
              }
            }

            break;
          }

void sub_100DEDB24( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, void *__p, uint64_t a38, int a39, __int16 a40, char a41, char a42)
{
  if (a42 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100DEDD24(uint64_t a1, void *a2, uint64_t *a3, void *a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v11 = a1 + 268;
  uint64_t v12 = sub_100DEE774(a1, "CLWifiTilesManager", a2);
  *(void *)(v12 + 13sub_1002D62D8(v1 + 6) = 0LL;
  *(void *)(v12 + 12_Block_object_dispose(va, 8) = v12 + 136;
  double v13 = (void *)(v12 + 128);
  *(void *)uint64_t v12 = off_101884278;
  *(void *)(v12 + 1sub_10046D318(v1 + 12) = off_1018843A0;
  *(void *)(v12 + 12sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = &off_101884400;
  *(void *)(v12 + 144) = 0LL;
  *(void *)(v12 + 152) = "";
  *(_BYTE *)(v12 + 16sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0;
  *(void *)(v12 + 16_Block_object_dispose(va, 8) = 0LL;
  *(void *)(v12 + 17sub_1002D62D8(v1 + 6) = 0LL;
  *(void *)(v12 + sub_10000AE14(v2 + 184) = "";
  *(_BYTE *)(v12 + 192) = 0;
  *(void *)(v12 + 20sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0LL;
  *(void *)(v12 + 20_Block_object_dispose(va, 8) = 0LL;
  *(_WORD *)(v12 + 21sub_1002D62D8(v1 + 6) = 0;
  *(void *)(v12 + 2sub_100BDC958(v1 + 24) = 0x40C5180000000000LL;
  *(_DWORD *)(v12 + 232) = 0xFFFF;
  *(void *)(v12 + 244) = 0LL;
  *(void *)(v12 + 23sub_1002D62D8(v1 + 6) = 0LL;
  *(_OWORD *)(v12 + 252) = xmmword_1012E0070;
  __asm { FMOV            V0.2D, #-1.0 }

  *(_OWORD *)uint64_t v11 = _Q0;
  *(_OWORD *)(v11 + 1sub_1002D62D8(v1 + 6) = _Q0;
  *(_OWORD *)(v11 + 32) = _Q0;
  *(_DWORD *)(v12 + 31sub_1002D62D8(v1 + 6) = 0;
  *(_DWORD *)(v12 + 344) = 0;
  *(void *)(v12 + 32sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0xBFF0000000000000LL;
  *(void *)(v12 + 32_Block_object_dispose(va, 8) = 0LL;
  *(void *)(v12 + 33sub_1002D62D8(v1 + 6) = 0LL;
  *(void *)(v11 + 8sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0xBFF0000000000000LL;
  *(_DWORD *)(v12 + 35sub_1002D62D8(v1 + 6) = 0x7FFFFFFF;
  *(void *)(v12 + 36_Block_object_dispose(va, 8) = 0LL;
  *(void *)(v12 + 37sub_1002D62D8(v1 + 6) = 0LL;
  *(void *)(v12 + 36sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0LL;
  *(_BYTE *)(v12 + 384) = 0;
  *(_DWORD *)(v12 + 40_Block_object_dispose(va, 8) = 0;
  *(void *)(v12 + 392) = 0LL;
  *(void *)(v12 + 40sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0LL;
  *(_BYTE *)(v12 + 413) = 1;
  *(_DWORD *)(v12 + 41sub_1002D62D8(v1 + 6) = 400;
  *(_BYTE *)(v12 + 42sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0;
  uint64_t v19 = (std::string *)(v12 + 424);
  *(void *)(v12 + 432) = 0LL;
  *(void *)(v12 + 44sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0LL;
  *(void *)(v12 + 4sub_100BDC958(v1 + 24) = 0LL;
  uint64_t v20 = *a3;
  *a3 = 0LL;
  *(void *)(v12 + 44_Block_object_dispose(va, 8) = v20;
  sub_100BD82E0((void *)(v12 + 456), *(void *)(a1 + 40));
  *(void *)(a1 + 48sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = *a4;
  uint64_t v21 = a4[1];
  *(void *)(a1 + 48_Block_object_dispose(va, 8) = v21;
  if (v21)
  {
    double v22 = (unint64_t *)(v21 + 8);
    do
      unint64_t v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }

  *(void *)(a1 + 49sub_1002D62D8(v1 + 6) = 0LL;
  *(_BYTE *)(a1 + 504) = 0;
  sub_100E79F28(a1 + 512);
  sub_100DEE810();
  std::string::operator=(v19, (const std::string *)&qword_10199EB20);
  if (*(_BYTE *)(a5 + 24))
  {
    sub_100E79F2C((__int128 *)(a1 + 512), (__int128 *)a5);
    uint64_t v24 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 224LL))(a1);
    std::string::operator=(v19, (const std::string *)(v24 + 32));
  }

  else
  {
    sub_100DEE8A4(a1, buf);
    sub_100E79F2C((__int128 *)(a1 + 512), (__int128 *)buf);
    *(void *)uint64_t v69 = buf;
    sub_1009708B4((void ***)v69);
  }

  if (*((_BYTE *)a6 + 8))
  {
    uint64_t v25 = *a6;
    *a6 = 0LL;
    uint64_t v26 = *(void *)(a1 + 496);
    *(void *)(a1 + 49sub_1002D62D8(v1 + 6) = v25;
    if (v26) {
      (*(void (**)(uint64_t))(*(void *)v26 + 8LL))(v26);
    }
  }

  else
  {
    uint64_t v27 = *(void **)(a1 + 32);
    uint64_t v28 = (std::__shared_weak_count *)a4[1];
    uint64_t v67 = *a4;
    uint64_t v68 = v28;
    if (v28)
    {
      p_shared_owners = (unint64_t *)&v28->__shared_owners_;
      do
        unint64_t v30 = __ldxr(p_shared_owners);
      while (__stxr(v30 + 1, p_shared_owners));
    }

    sub_100CFEC38(a1, v27, &v67, buf);
    uint64_t v31 = *(void *)buf;
    *(void *)std::stringbuf::string_type buf = 0LL;
    uint64_t v32 = *(void *)(a1 + 496);
    *(void *)(a1 + 49sub_1002D62D8(v1 + 6) = v31;
    if (v32)
    {
      (*(void (**)(uint64_t))(*(void *)v32 + 8LL))(v32);
      uint64_t v33 = *(void *)buf;
      *(void *)std::stringbuf::string_type buf = 0LL;
      if (v33) {
        (*(void (**)(uint64_t))(*(void *)v33 + 8LL))(v33);
      }
    }

    double v34 = v68;
    if (v68)
    {
      uint64_t v35 = (unint64_t *)&v68->__shared_owners_;
      do
        unint64_t v36 = __ldaxr(v35);
      while (__stlxr(v36 - 1, v35));
      if (!v36)
      {
        ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
        std::__shared_weak_count::__release_weak(v34);
      }
    }
  }

  *(_BYTE *)(a1 + 21sub_1002D62D8(v1 + 6) = (*(uint64_t (**)(void))(**(void **)(a1 + 448) + 24LL))(*(void *)(a1 + 448));
  sub_1002F0B04(buf);
  uint64_t v37 = (int *)(a1 + 416);
  sub_1002A7CB0(*(uint64_t *)buf, "MaxDownloadListSize", (_DWORD *)(a1 + 416));
  uint64_t v38 = *(std::__shared_weak_count **)&buf[8];
  if (*(void *)&buf[8])
  {
    BOOL v39 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      unint64_t v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101884558);
  }
  int64_t v41 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    int v42 = *v37;
    *(_DWORD *)std::stringbuf::string_type buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = v42;
    _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_DEBUG,  "WIFITILE: fDefaultMaxDownloadListSize, %d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101884558);
    }
    int v58 = *v37;
    *(_DWORD *)uint64_t v69 = 67109120;
    *(_DWORD *)&v69[4] = v58;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "WIFITILE: fDefaultMaxDownloadListSize, %d",  v69);
    __int128 v60 = (uint8_t *)v59;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLWifiTilesManager::CLWifiTilesManager(id<CLIntersiloUniverse>, std::unique_ptr<CLIWifiTilesManagerExternal>, std: :shared_ptr<CLWifiAccessPointLocationService>, std::optional<CLTilesSetCollection>, std::optional<std::unique_ptr< CLITileSyncManager>>)",  "%s\n",  v59);
    if (v60 != buf) {
      free(v60);
    }
  }

  sub_1002F0B04(buf);
  sub_1002A82BC(*(uint64_t *)buf, "MTimeModificationPeriod", &qword_101991110);
  uint64_t v43 = *(std::__shared_weak_count **)&buf[8];
  if (*(void *)&buf[8])
  {
    uint64_t v44 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      unint64_t v45 = __ldaxr(v44);
    while (__stlxr(v45 - 1, v44));
    if (!v45)
    {
      ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
      std::__shared_weak_count::__release_weak(v43);
    }
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101884558);
  }
  int64_t v46 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 134217984;
    *(void *)&uint8_t buf[4] = qword_101991110;
    _os_log_impl( (void *)&_mh_execute_header,  v46,  OS_LOG_TYPE_DEBUG,  "WIFITILE: MTimeModificationPeriod, %.1lf",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101884558);
    }
    *(_DWORD *)uint64_t v69 = 134217984;
    *(void *)&v69[4] = qword_101991110;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "WIFITILE: MTimeModificationPeriod, %.1lf",  COERCE_DOUBLE(v69));
    uint64_t v62 = (uint8_t *)v61;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLWifiTilesManager::CLWifiTilesManager(id<CLIntersiloUniverse>, std::unique_ptr<CLIWifiTilesManagerExternal>, std: :shared_ptr<CLWifiAccessPointLocationService>, std::optional<CLTilesSetCollection>, std::optional<std::unique_ptr< CLITileSyncManager>>)",  "%s\n",  v61);
    if (v62 != buf) {
      free(v62);
    }
  }

  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101884538);
  }
  unsigned int v47 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_INFO))
  {
    int v48 = *(unsigned __int8 *)(a1 + 216);
    *(_DWORD *)std::stringbuf::string_type buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = v48;
    _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_INFO, "@TileEvent, wifi, locked, %d", buf, 8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101884538);
    }
    int v63 = *(unsigned __int8 *)(a1 + 216);
    *(_DWORD *)uint64_t v69 = 67109120;
    *(_DWORD *)&v69[4] = v63;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  1LL,  "@TileEvent, wifi, locked, %d",  v69);
    double v65 = (uint8_t *)v64;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLWifiTilesManager::CLWifiTilesManager(id<CLIntersiloUniverse>, std::unique_ptr<CLIWifiTilesManagerExternal>, std: :shared_ptr<CLWifiAccessPointLocationService>, std::optional<CLTilesSetCollection>, std::optional<std::unique_ptr< CLITileSyncManager>>)",  "%s\n",  v64);
    if (v65 != buf) {
      free(v65);
    }
  }

  sub_100DEF05C(a1);
  sub_100DEF388(v13, (uint64_t)v19, (uint64_t)v66);
  *(void *)std::stringbuf::string_type buf = v66;
  sub_1000129D4((void ***)buf);
  if (!*(_BYTE *)(a1 + 216))
  {
    sub_100F7D598(*(void *)(a1 + 480));
    double v49 = (*(double (**)(void))(**(void **)(a1 + 448) + 56LL))(*(void *)(a1 + 448));
    sub_100DEF940(a1, v49);
    double v50 = (*(double (**)(void))(**(void **)(a1 + 448) + 56LL))(*(void *)(a1 + 448));
    sub_100DEFB68(a1, v50);
  }

  if (_os_feature_enabled_impl("CoreLocation", "TilesService"))
  {
    int v51 = operator new(0x78uLL);
    sub_100E74504(v51, *(void *)(a1 + 40), sub_100DEFEC0, a1);
    uint64_t v52 = *(void *)(a1 + 176);
    *(void *)(a1 + 17sub_1002D62D8(v1 + 6) = v51;
    if (v52) {
      (*(void (**)(uint64_t))(*(void *)v52 + 8LL))(v52);
    }
    uint64_t v53 = operator new(0x78uLL);
    sub_100E74504(v53, *(void *)(a1 + 40), sub_100DEFEC0, a1);
  }

  else
  {
    int v54 = operator new(0x70uLL);
    sub_1002B5C60((uint64_t)v54, *(void *)(a1 + 40), (uint64_t)sub_100DEFEC0, a1);
    uint64_t v55 = *(void *)(a1 + 176);
    *(void *)(a1 + 17sub_1002D62D8(v1 + 6) = v54;
    if (v55) {
      (*(void (**)(uint64_t))(*(void *)v55 + 8LL))(v55);
    }
    uint64_t v53 = operator new(0x70uLL);
    sub_1002B5C60((uint64_t)v53, *(void *)(a1 + 40), (uint64_t)sub_100DEFEC0, a1);
  }

  uint64_t v56 = *(void *)(a1 + 208);
  *(void *)(a1 + 20_Block_object_dispose(va, 8) = v53;
  if (v56) {
    (*(void (**)(uint64_t))(*(void *)v56 + 8LL))(v56);
  }
  *(_BYTE *)(*(void *)(a1 + 176) + 8sub_100272D04(v1, 0LL) = 1;
  *(void *)(a1 + 152) = "Small";
  *(_BYTE *)(*(void *)(a1 + 208) + 8sub_100272D04(v1, 0LL) = 0;
  *(void *)(a1 + sub_10000AE14(v2 + 184) = "Large";
  return a1;
}

void sub_100DEE658( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v16 = *(void *)(v11 + 496);
  *(void *)(v11 + 49sub_1002D62D8(v1 + 6) = 0LL;
  if (v16) {
    (*(void (**)(uint64_t))(*(void *)v16 + 8LL))(v16);
  }
  sub_10000AE14(v14);
  uint64_t v17 = *(void *)(v11 + 448);
  *(void *)(v11 + 44_Block_object_dispose(va, 8) = 0LL;
  if (v17) {
    (*(void (**)(uint64_t))(*(void *)v17 + 8LL))(v17);
  }
  uint64_t v18 = *(void *)(v11 + 208);
  *(void *)(v11 + 20_Block_object_dispose(va, 8) = 0LL;
  if (v18) {
    (*(void (**)(uint64_t))(*(void *)v18 + 8LL))(v18);
  }
  uint64_t v19 = *(void *)(v11 + 176);
  *(void *)(v11 + 17sub_1002D62D8(v1 + 6) = 0LL;
  if (v19) {
    (*(void (**)(uint64_t))(*(void *)v19 + 8LL))(v19);
  }
  sub_100603BE4(v12, *(void **)(v11 + 136));
  sub_100DF00BC(v11);
  _Unwind_Resume(a1);
}

uint64_t sub_100DEE774(uint64_t a1, char *a2, void *a3)
{
  *(void *)a1 = off_1018845C8;
  sub_1010DDBC0((void *)(a1 + 8), a2);
  *(void *)(a1 + 32) = a3;
  *(void *)(a1 + 4sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = [a3 silo];
  *(void *)(a1 + 4_Block_object_dispose(va, 8) = 0LL;
  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + 5sub_1002D62D8(v1 + 6) = a1 + 64;
  *(void *)(a1 + 8_Block_object_dispose(va, 8) = 0LL;
  *(void *)(a1 + 9sub_1002D62D8(v1 + 6) = 0LL;
  *(void *)(a1 + 72) = 0LL;
  *(void *)(a1 + 8sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = a1 + 88;
  *(_DWORD *)(a1 + 104) = 0;
  *(_BYTE *)(a1 + 10_Block_object_dispose(va, 8) = 0;
  return a1;
}

void sub_100DEE7F4(_Unwind_Exception *exception_object)
{
}

uint64_t *sub_100DEE810()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_10199EB38);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_10199EB38))
  {
    qword_10199EB20 = 0LL;
    *(void *)algn_10199EB28 = 0LL;
    qword_10199EB30 = 0LL;
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10199EB20, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10199EB38);
  }

  if (qword_10199EB40 != -1) {
    dispatch_once(&qword_10199EB40, &stru_101884468);
  }
  return &qword_10199EB20;
}

void sub_100DEE8A4(uint64_t a1@<X0>, void *a2@<X8>)
{
  if (byte_10199EB48[23] < 0) {
    sub_1010DD48C(&__p, *(void **)byte_10199EB48, *(unint64_t *)&byte_10199EB48[8]);
  }
  else {
    std::string __p = *(std::string *)byte_10199EB48;
  }
  sub_1002F0B04(buf);
  BOOL v4 = sub_1002A8560(*(uint64_t *)buf, "WifiTilesServerUrl", &__p);
  uint64_t v5 = *(std::__shared_weak_count **)&buf[8];
  if (*(void *)&buf[8])
  {
    float v6 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      unint64_t v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }

  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101884538);
  }
  uint64_t v8 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    p_p = &__p;
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)std::stringbuf::string_type buf = 136380931;
    *(void *)&uint8_t buf[4] = p_p;
    *(_WORD *)&_BYTE buf[12] = 1026;
    *(_DWORD *)&_BYTE buf[14] = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "TILE: defaultWifiTilesServerUrl, %{private}s, overridden, %{public}d",  buf,  0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101884538);
    }
    uint64_t v32 = &__p;
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      uint64_t v32 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    int v43 = 136380931;
    uint64_t v44 = v32;
    __int16 v45 = 1026;
    BOOL v46 = v4;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "TILE: defaultWifiTilesServerUrl, %{private}s, overridden, %{public}d",  &v43,  18);
    double v34 = (char *)v33;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLTilesSetCollection CLWifiTilesManager::initializeProductionTilesSetCollection()",  "%s\n",  v33);
    if (v34 != buf) {
      free(v34);
    }
  }

  sub_1002F0B04(buf);
  float v10 = (std::string **)(a1 + 224);
  sub_1002A82BC(*(uint64_t *)buf, "EncryptionGracePeriod", (void *)(a1 + 224));
  uint64_t v11 = *(std::__shared_weak_count **)&buf[8];
  if (*(void *)&buf[8])
  {
    uint64_t v12 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      unint64_t v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101884558);
  }
  uint64_t v14 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    double v15 = *v10;
    *(_DWORD *)std::stringbuf::string_type buf = 134217984;
    *(void *)&uint8_t buf[4] = v15;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "WIFITILE: fDefaultEncryptionGracePeriod, %.1lf",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101884558);
    }
    uint64_t v35 = *v10;
    int v43 = 134217984;
    uint64_t v44 = v35;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "WIFITILE: fDefaultEncryptionGracePeriod, %.1lf",  COERCE_DOUBLE(&v43));
    uint64_t v37 = (char *)v36;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLTilesSetCollection CLWifiTilesManager::initializeProductionTilesSetCollection()",  "%s\n",  v36);
    if (v37 != buf) {
      free(v37);
    }
  }

  sub_1002F0B04(buf);
  uint64_t v16 = (BOOL *)(a1 + 420);
  char v17 = sub_1002A6F64(*(uint64_t *)buf, "DisableTilesWhileLocked", (BOOL *)(a1 + 420));
  char v18 = v17;
  uint64_t v19 = *(std::__shared_weak_count **)&buf[8];
  if (!*(void *)&buf[8]) {
    goto LABEL_30;
  }
  uint64_t v20 = (unint64_t *)(*(void *)&buf[8] + 8LL);
  do
    unint64_t v21 = __ldaxr(v20);
  while (__stlxr(v21 - 1, v20));
  if (v21)
  {
LABEL_30:
    if ((v17 & 1) != 0) {
      goto LABEL_32;
    }
    goto LABEL_31;
  }

  ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
  std::__shared_weak_count::__release_weak(v19);
  if ((v18 & 1) == 0)
  {
LABEL_31:
    sub_1004F2598();
    *uint64_t v16 = sub_1004F7B54();
  }

void sub_100DEEFA4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, void *a24, uint64_t a25, int a26, __int16 a27, char a28, char a29)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_100DEF05C(uint64_t a1)
{
  v22[0] = mach_absolute_time();
  v22[1] = (uint64_t)&stru_101884418;
  sub_100DF6214((const char *)(a1 + 424), (uint64_t *)&v20);
  uint64_t v2 = (uint64_t)v20;
  id v3 = v21;
  if (v20 != v21)
  {
    while (sub_100DFCA94(v2))
    {
      v2 += 24LL;
      if ((__int128 *)v2 == v3)
      {
        uint64_t v2 = (uint64_t)v3;
        goto LABEL_13;
      }
    }

    if ((__int128 *)v2 != v3)
    {
      for (uint64_t i = v2 + 24; (__int128 *)i != v3; i += 24LL)
      {
        if (sub_100DFCA94(i))
        {
          __int128 v5 = *(_OWORD *)i;
          *(void *)(v2 + 1sub_1002D62D8(v1 + 6) = *(void *)(i + 16);
          *(_OWORD *)uint64_t v2 = v5;
          v2 += 24LL;
          *(_BYTE *)(i + 23) = 0;
          *(_BYTE *)uint64_t i = 0;
        }
      }
    }
  }

void sub_100DEF324( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, char *__p, uint64_t a23, int a24, __int16 a25, char a26, char a27)
{
  std::string __p = &a16;
  sub_1000129D4((void ***)&__p);
  sub_1011F6BE4(&a19);
  _Unwind_Resume(a1);
}

uint64_t sub_100DEF388@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v92 = 1065353216;
  __int128 v5 = a1 + 1;
  float v6 = (void *)*a1;
  if ((void *)*a1 != a1 + 1)
  {
    do
    {
      if (sub_100C0DB30(v6[10]))
      {
        sub_10008D2C8((char *)v6[10], (uint64_t)__p);
        sub_100E00348((uint64_t)v91, (unsigned __int8 *)__p, (uint64_t)__p);
        if (SHIBYTE(cap) < 0) {
          operator delete(__p[0]);
        }
      }

      unint64_t v7 = (void *)v6[1];
      if (v7)
      {
        do
        {
          uint64_t v8 = v7;
          unint64_t v7 = (void *)*v7;
        }

        while (v7);
      }

      else
      {
        do
        {
          uint64_t v8 = (void *)v6[2];
          BOOL v9 = *v8 == (void)v6;
          float v6 = v8;
        }

        while (!v9);
      }

      float v6 = v8;
    }

    while (v8 != v5);
  }

  sub_100DF6214((const char *)a2, (uint64_t *)a3);
  uint64_t v10 = *(void *)a3;
  uint64_t v11 = *(void *)(a3 + 8);
  if (*(void *)a3 != v11)
  {
    while ((sub_100DFCA94(v10) & 1) == 0)
    {
      v10 += 24LL;
      if (v10 == v11)
      {
        uint64_t v10 = v11;
        goto LABEL_23;
      }
    }

    if (v10 != v11)
    {
      for (uint64_t i = v10 + 24; i != v11; i += 24LL)
      {
        if ((sub_100DFCA94(i) & 1) == 0)
        {
          __int128 v13 = *(_OWORD *)i;
          *(void *)(v10 + 1sub_1002D62D8(v1 + 6) = *(void *)(i + 16);
          *(_OWORD *)uint64_t v10 = v13;
          v10 += 24LL;
          *(_BYTE *)(i + 23) = 0;
          *(_BYTE *)uint64_t i = 0;
        }
      }
    }
  }

void sub_100DEF8A8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21, uint64_t a22, char a23)
{
}

void sub_100DEF940(uint64_t a1, double a2)
{
  if (*(_BYTE *)(a1 + 504))
  {
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101884578);
    }
    uint64_t v2 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Side loading already in progress.", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101884578);
      }
      LOWORD(v9[0]) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "Side loading already in progress.",  v9,  2);
      BOOL v4 = (uint8_t *)v3;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::addAnyRawWifiTilesToDatabaseThenDelete(CFAbsoluteTime)",  "%s\n",  v3);
      if (v4 != buf) {
        free(v4);
      }
    }
  }

  else
  {
    *(_BYTE *)(a1 + 504) = 1;
    sub_100DF6214((const char *)(a1 + 424), (uint64_t *)buf);
    __int128 v7 = *(_OWORD *)buf;
    uint64_t v8 = v11;
    uint64_t v11 = 0LL;
    memset(buf, 0, sizeof(buf));
    sub_100DFC468((void *)a1, (uint64_t)&v7, a2);
    v9[0] = (void **)&v7;
    sub_1000129D4(v9);
    v9[0] = (void **)buf;
    sub_1000129D4(v9);
  }

void sub_100DEFB38( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void **a15, uint64_t a16, char a17)
{
  a15 = (void **)&a17;
  sub_1000129D4(&a15);
  _Unwind_Resume(a1);
}

void sub_100DEFB68(uint64_t a1, double a2)
{
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_101884578);
  }
  BOOL v4 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "wifi #tiles, populateTilesSet", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101884578);
    }
    LOWORD(v15) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  1LL,  "wifi #tiles, populateTilesSet",  &v15,  2);
    BOOL v9 = (uint8_t *)v8;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLWifiTilesManager::populateTilesSet(CFAbsoluteTime)", "%s\n", v8);
    if (v9 != buf) {
      free(v9);
    }
  }

  if (!*(_BYTE *)(a1 + 216) && !*(_BYTE *)(a1 + 217))
  {
    uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 224LL))(a1);
    sub_100DF6510((uint64_t *)a1, a2);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101884538);
    }
    float v6 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_INFO))
    {
      uint64_t v7 = sub_100019240(v5 + 184);
      *(_DWORD *)std::stringbuf::string_type buf = 134349056;
      uint64_t v18 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "@TileEvent, wifi, indexed, %{public}lu",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101884538);
      }
      uint64_t v10 = qword_101934858;
      uint64_t v11 = sub_100019240(v5 + 184);
      int v15 = 134349056;
      uint64_t v16 = v11;
      LODWORD(v14) = 12;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v10,  1LL,  "@TileEvent, wifi, indexed, %{public}lu",  &v15,  v14);
      __int128 v13 = (uint8_t *)v12;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLWifiTilesManager::populateTilesSet(CFAbsoluteTime)", "%s\n", v12);
      if (v13 != buf) {
        free(v13);
      }
    }

    *(_BYTE *)(a1 + 217) = 1;
    (*(void (**)(uint64_t, double))(*(void *)a1 + 232LL))(a1, a2);
    (*(void (**)(void))(**(void **)(a1 + 496) + 24LL))(*(void *)(a1 + 496));
  }

id sub_100DEFEC0(uint64_t a1, int a2, uint64_t a3)
{
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101884558);
  }
  float v6 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 67109120;
    int v15 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "WIFITILE: _tileDownloadCompleted, success, %d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101884558);
    }
    v13[0] = 67109120;
    v13[1] = a2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "WIFITILE: _tileDownloadCompleted, success, %d",  v13);
    uint64_t v10 = (uint8_t *)v9;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLWifiTilesManager::_tileDownloadCompleted(CLFileDownload *, BOOL, void *)",  "%s\n",  v9);
    if (v10 != buf) {
      free(v10);
    }
  }

  uint64_t v7 = *(void **)(a3 + 40);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472LL;
  _DWORD v11[2] = sub_100DFA514;
  void v11[3] = &unk_101861AD0;
  char v12 = a2;
  _DWORD v11[4] = a3;
  __int128 v11[5] = a1;
  v11[6] = a3;
  return [v7 async:v11];
}

uint64_t sub_100DF00BC(uint64_t a1)
{
  *(void *)a1 = off_1018845C8;
  [*(id *)(a1 + 48) invalidate];

  sub_100231CA4(a1 + 80, *(void **)(a1 + 88));
  sub_100231CF0(a1 + 56, *(void **)(a1 + 64));
  return a1;
}

uint64_t sub_100DF0130(uint64_t a1, void *a2)
{
  v12[0] = 0;
  char v13 = 0;
  LOBYTE(v1sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = 0;
  char v11 = 0;
  sub_100DEDD24(a1, a2, &v16, &v14, (uint64_t)v12, &v10);
  if (v11)
  {
    uint64_t v4 = v10;
    uint64_t v10 = 0LL;
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
    }
  }

  if (v13)
  {
    int v17 = (void **)v12;
    sub_1009708B4(&v17);
  }

  uint64_t v5 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      unint64_t v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }

  uint64_t v8 = v16;
  uint64_t v16 = 0LL;
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
  }
  return a1;
}

void sub_100DF0228( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, int a11, char a12, uint64_t a13, uint64_t a14, char a15, int a16, char a17)
{
  if (a10) {
    sub_1012715E0(&a9);
  }
  if (a15)
  {
    *(void *)(v17 - sub_100BDC958(v1 + 24) = &a12;
    sub_1009708B4((void ***)(v17 - 24));
  }

  sub_10000AE14((uint64_t)&a17);
  uint64_t v19 = *(void *)(v17 - 32);
  *(void *)(v17 - 32) = 0LL;
  if (v19) {
    (*(void (**)(uint64_t))(*(void *)v19 + 8LL))(v19);
  }
  _Unwind_Resume(a1);
}

__int128 *sub_100DF0284()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_10199EB60);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_10199EB60))
  {
    xmmword_10199EB48 = 0uLL;
    unk_10199EB58 = 0LL;
    __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10199EB48, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10199EB60);
  }

  if (qword_10199EB68 != -1) {
    dispatch_once(&qword_10199EB68, &stru_101884488);
  }
  return &xmmword_10199EB48;
}

uint64_t sub_100DF0318(uint64_t a1)
{
  *(void *)a1 = off_101884278;
  *(void *)(a1 + 1sub_10046D318(v1 + 12) = off_1018843A0;
  *(void *)(a1 + 12sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = &off_101884400;
  sub_100DFBEE8(a1);
  unint64_t v7 = (void **)(a1 + 512);
  sub_1009708B4(&v7);
  uint64_t v2 = *(void *)(a1 + 496);
  *(void *)(a1 + 49sub_1002D62D8(v1 + 6) = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  sub_10000AE14(a1 + 480);
  uint64_t v3 = *(void *)(a1 + 448);
  *(void *)(a1 + 44_Block_object_dispose(va, 8) = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  uint64_t v4 = *(void *)(a1 + 208);
  *(void *)(a1 + 20_Block_object_dispose(va, 8) = 0LL;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  uint64_t v5 = *(void *)(a1 + 176);
  *(void *)(a1 + 17sub_1002D62D8(v1 + 6) = 0LL;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
  }
  sub_100603BE4(a1 + 128, *(void **)(a1 + 136));
  return sub_100DF00BC(a1);
}

uint64_t sub_100DF03FC(uint64_t a1)
{
  return sub_100DF0318(a1 - 112);
}

uint64_t sub_100DF0404(uint64_t a1)
{
  return sub_100DF0318(a1 - 120);
}

void sub_100DF040C(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100DF0318(a1);
  operator delete(v1);
}

void sub_100DF0420(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100DF0318(a1 - 112);
  operator delete(v1);
}

void sub_100DF0438(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100DF0318(a1 - 120);
  operator delete(v1);
}

void sub_100DF0450(uint64_t a1, uint64_t a2, int *a3, int *a4)
{
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101884558);
  }
  unint64_t v7 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    int v8 = *a3;
    *(_DWORD *)std::stringbuf::string_type buf = 134218240;
    *(void *)&uint8_t buf[4] = a1;
    *(_WORD *)&_BYTE buf[12] = 1024;
    v36[0] = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "WIFITILE: onDataProtectionNotification, %p, notification, %d",  buf,  0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101884558);
    }
    int v19 = *a3;
    int v32 = 134218240;
    *(void *)uint64_t v33 = a1;
    *(_WORD *)&_OWORD v33[8] = 1024;
    v34[0] = v19;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "WIFITILE: onDataProtectionNotification, %p, notification, %d",  &v32,  18);
    int v21 = (char *)v20;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::onDataProtectionNotification(int, const CLDataProtectionManager_Type::Notification &, con st CLDataProtectionManager_Type::NotificationData &)",  "%s\n",  v20);
    if (v21 != buf) {
      free(v21);
    }
  }

  (*(void (**)(void))(**(void **)(a1 + 448) + 56LL))(*(void *)(a1 + 448));
  if (!*a3)
  {
    double v10 = v9;
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101884558);
    }
    char v11 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      int v12 = *(unsigned __int8 *)(a1 + 216);
      int v13 = *a4;
      BOOL v14 = *a4 != 1;
      *(_DWORD *)std::stringbuf::string_type buf = 67109632;
      *(_DWORD *)&uint8_t buf[4] = v12;
      *(_WORD *)&uint8_t buf[8] = 1024;
      *(_DWORD *)&buf[10] = v14;
      LOWORD(v36[0]) = 1024;
      *(_DWORD *)((char *)v36 + 2) = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "WIFITILE: onDataProtectionNotification, kNotificationEncryptedDataAvailability, was, %d, now, %d, availability, %d",  buf,  0x14u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101884558);
      }
      int v22 = *(unsigned __int8 *)(a1 + 216);
      int v23 = *a4;
      BOOL v24 = *a4 != 1;
      int v32 = 67109632;
      *(_DWORD *)uint64_t v33 = v22;
      *(_WORD *)&v33[4] = 1024;
      *(_DWORD *)&v33[6] = v24;
      LOWORD(v34[0]) = 1024;
      *(_DWORD *)((char *)v34 + 2) = v23;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "WIFITILE: onDataProtectionNotification, kNotificationEncryptedDataAvailability, was, %d, now, %d, availability, %d",  &v32,  20,  v30);
      uint64_t v26 = (char *)v25;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::onDataProtectionNotification(int, const CLDataProtectionManager_Type::Notification &, c onst CLDataProtectionManager_Type::NotificationData &)",  "%s\n",  v25);
      if (v26 != buf) {
        free(v26);
      }
    }

    int v15 = *(unsigned __int8 *)(a1 + 216);
    int v16 = *a4;
    int v17 = *a4 != 1;
    *(_BYTE *)(a1 + 21sub_1002D62D8(v1 + 6) = v17;
    if (v16 == 1)
    {
      sub_100F7D598(*(void *)(a1 + 480));
      sub_100DEFB68(a1, v10);
      sub_100DEF388((void *)(a1 + 128), a1 + 424, (uint64_t)v31);
      *(void *)std::stringbuf::string_type buf = v31;
      sub_1000129D4((void ***)buf);
      sub_100DEF940(a1, v10);
    }

    if (v15 != v17)
    {
      sub_100DF0994(a1, v10);
      if (!*(_BYTE *)(a1 + 216))
      {
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101884558);
        }
        uint64_t v18 = (os_log_s *)qword_101934A78;
        if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)std::stringbuf::string_type buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEBUG,  "WIFITILE: updateProtectionClass, skip on unlock",  buf,  2u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934A70 != -1) {
            dispatch_once(&qword_101934A70, &stru_101884558);
          }
          LOWORD(v32) = 0;
          LODWORD(v29) = 2;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "WIFITILE: updateProtectionClass, skip on unlock",  &v32,  v29);
          int v28 = (char *)v27;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::onDataProtectionNotification(int, const CLDataProtectionManager_Type::Notification &, const CLDataProtectionManager_Type::NotificationData &)",  "%s\n",  v27);
          if (v28 != buf) {
            free(v28);
          }
        }

        sub_100F7D520(*(void *)(a1 + 480), (uint64_t)"Unlock");
      }

      sub_100DF1154(a1, 0, v10);
    }
  }

void sub_100DF0994(uint64_t a1, double a2)
{
  if (qword_101934A70 != -1) {
    goto LABEL_53;
  }
  while (1)
  {
    uint64_t v4 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      int v5 = *(unsigned __int8 *)(a1 + 216);
      *(_DWORD *)std::stringbuf::string_type buf = 67109120;
      *(_DWORD *)&uint8_t buf[4] = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "WIFITILE: cleanUpDownloadList, start, isLocked, %d",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101884558);
      }
      int v28 = *(unsigned __int8 *)(a1 + 216);
      *(_DWORD *)uint64_t v38 = 67109120;
      *(_DWORD *)&v38[4] = v28;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "WIFITILE: cleanUpDownloadList, start, isLocked, %d",  v38);
      int v30 = (char *)v29;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLWifiTilesManager::cleanUpDownloadList(CFAbsoluteTime)", "%s\n", v29);
      if (v30 != buf) {
        free(v30);
      }
    }

    if (*(void *)(a1 + 144) >= (unint64_t)*(int *)(a1 + 416))
    {
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101884558);
      }
      float v6 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v7 = *(void *)(a1 + 144);
        *(_DWORD *)std::stringbuf::string_type buf = 134217984;
        *(void *)&uint8_t buf[4] = v7;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "TILES: cleanUpDownloadList, download list is too large, %lu",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101884558);
        }
        uint64_t v34 = *(void *)(a1 + 144);
        *(_DWORD *)uint64_t v38 = 134217984;
        *(void *)&v38[4] = v34;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "TILES: cleanUpDownloadList, download list is too large, %lu",  v38);
        unint64_t v36 = (char *)v35;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::cleanUpDownloadList(CFAbsoluteTime)",  "%s\n",  v35);
        if (v36 != buf) {
          free(v36);
        }
      }

      sub_100DF38A0(a1);
    }

    int v37 = 0;
    if (*(_BYTE *)(a1 + 216)) {
      break;
    }
    int v8 = *(uint64_t **)(a1 + 128);
    int v37 = 0;
    while (1)
    {
      double v9 = (uint64_t *)v8[1];
      double v10 = v8;
      if (v9)
      {
        do
        {
          char v11 = v9;
          double v9 = (uint64_t *)*v9;
        }

        while (v9);
      }

      else
      {
        do
        {
          char v11 = (uint64_t *)v10[2];
          BOOL v12 = *v11 == (void)v10;
          double v10 = v11;
        }

        while (!v12);
      }

      int v13 = (unsigned int *)v8[10];
      BOOL v14 = v13 + 12;
      if (v13[12]) {
        break;
      }
      uint64_t v15 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 224LL))(a1);
      int v16 = *(_DWORD *)(a1 + 408);
      BOOL v17 = sub_10060238C(v15 + 184, v14);
      if (v17)
      {
        uint64_t v18 = sub_1006025CC(v15 + 184, v14);
        BOOL v19 = sub_100C0D05C(v18, v16 > 1, *(float *)(v15 + 128), a2);
      }

      else
      {
        BOOL v19 = 0;
      }

      if (!sub_100C0DB30((uint64_t)v13) && !v19 && (v17 & sub_100C0CCC8((uint64_t)v13)) == 1)
      {
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101884558);
        }
        uint64_t v20 = (os_log_s *)qword_101934A78;
        if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
        {
          (*(void (**)(_BYTE *__return_ptr, unsigned int *))(*(void *)v13 + 16LL))(buf, v13);
          int v21 = buf;
          if (v43 < 0) {
            int v21 = *(_BYTE **)buf;
          }
          *(_DWORD *)uint64_t v38 = 136315138;
          *(void *)&v38[4] = v21;
          _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEBUG,  "WIFITILE: cleanUpDownloadList, tileid, %s, available on disc, no need to download",  v38,  0xCu);
          if (v43 < 0) {
            operator delete(*(void **)buf);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934A70 != -1) {
            dispatch_once(&qword_101934A70, &stru_101884558);
          }
          uint64_t v22 = qword_101934A78;
          (*(void (**)(_BYTE *__return_ptr, unsigned int *))(*(void *)v13 + 16LL))(v38, v13);
          int v23 = v38;
          if (v39 < 0) {
            int v23 = *(_BYTE **)v38;
          }
          int v40 = 136315138;
          int v41 = v23;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v22,  2LL,  "WIFITILE: cleanUpDownloadList, tileid, %s, available on disc, no need to download",  (const char *)&v40);
          uint64_t v25 = v24;
          if (v39 < 0) {
            operator delete(*(void **)v38);
          }
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::cleanUpDownloadList(CFAbsoluteTime)",  "%s\n",  v25);
          if (v25 != buf) {
            free(v25);
          }
        }

        sub_1000087E8((uint64_t **)(a1 + 128), v8);
        sub_1006035CC((uint64_t)(v8 + 4));
        operator delete(v8);
        ++v37;
      }

      if (!*(_BYTE *)(a1 + 216))
      {
        int v8 = v11;
      }

      goto LABEL_46;
    }

    sub_1012715FC();
    __break(1u);
LABEL_53:
    dispatch_once(&qword_101934A70, &stru_101884558);
  }

void sub_100DF1154(uint64_t a1, unsigned int a2, double a3)
{
  LODWORD(vsub_1002D62D8(v1 + 6) = (*(uint64_t (**)(void))(**(void **)(a1 + 448) + 32LL))(*(void *)(a1 + 448));
  int v7 = *(_DWORD *)(a1 + 408);
  p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
  double v9 = &OBJC_METACLASS___CLPrivacyManager.vtable;
  if (((*(uint64_t (**)(void))(**(void **)(a1 + 448) + 16LL))(*(void *)(a1 + 448)) & 1) == 0)
  {
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101884578);
    }
    uint64_t v15 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "WIFITILE: checkDownloadSchedule, wifi off - no tile downloads",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101884578);
      }
      *(_WORD *)__int16 v127 = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "WIFITILE: checkDownloadSchedule, wifi off - no tile downloads",  v127,  2);
      BOOL v17 = (char *)v16;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::checkDownloadSchedule(DownloadPriority, CFAbsoluteTime)",  "%s\n",  v16);
      goto LABEL_213;
    }

    goto LABEL_75;
  }

  if (((*(uint64_t (**)(void))(**(void **)(a1 + 448) + 48LL))(*(void *)(a1 + 448)) & 1) == 0)
  {
    if (qword_101934860 != -1) {
LABEL_196:
    }
      dispatch_once(&qword_101934860, &stru_101884578);
    uint64_t v18 = (os_log_s *)v9[269];
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEBUG,  "WIFITILE: checkDownloadSchedule, location services disabled - no tile downloads",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      BOOL v19 = v9[269];
      *(_WORD *)__int16 v127 = 0;
      LODWORD(v11_Block_object_dispose(va, 8) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v19,  2LL,  "WIFITILE: checkDownloadSchedule, location services disabled - no tile downloads",  v127,  v118);
      BOOL v17 = (char *)v20;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::checkDownloadSchedule(DownloadPriority, CFAbsoluteTime)",  "%s\n",  v20);
LABEL_213:
      if (v17 != buf) {
        free(v17);
      }
    }

void sub_100DF2D28( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, void *__p, uint64_t a38, int a39, __int16 a40, char a41, char a42)
{
  if (a42 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DF2D70(uint64_t a1, uint64_t a2, int *a3, unsigned __int8 *a4)
{
  double v7 = (*(double (**)(void))(**(void **)(a1 + 448) + 56LL))(*(void *)(a1 + 448));
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101884558);
  }
  int v8 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    int v9 = *a3;
    *(_DWORD *)std::stringbuf::string_type buf = 67109120;
    int v16 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "onCompanionNotification, notification, %d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101884558);
    }
    int v11 = *a3;
    v14[0] = 67109120;
    v14[1] = v11;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "onCompanionNotification, notification, %d",  v14);
    int v13 = (uint8_t *)v12;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::onCompanionNotification(int, const CLCompanionNotifier_Type::Notification &, const CLComp anionNotifier_Type::NotificationData &)",  "%s\n",  v12);
    if (v13 != buf) {
      free(v13);
    }
  }

  if (*a3 == 5)
  {
    int v10 = *a4;
    *(_BYTE *)(a1 + 4sub_10046D318(v1 + 12) = v10;
    if (v10) {
      (*(void (**)(void))(**(void **)(a1 + 496) + 32LL))(*(void *)(a1 + 496));
    }
    sub_100DF1154(a1, 1u, v7);
  }

void sub_100DF2F84(uint64_t a1)
{
  double v2 = (*(double (**)(void))(**(void **)(a1 + 448) + 56LL))(*(void *)(a1 + 448));
  if (!*(_BYTE *)(a1 + 216))
  {
    sub_100F7D598(*(void *)(a1 + 480));
    sub_100DEF940(a1, v2);
  }

  (*(void (**)(uint64_t, double))(*(void *)a1 + 232LL))(a1, v2);
  sub_100DEF388((void *)(a1 + 128), a1 + 424, (uint64_t)v3);
  uint64_t v4 = (void **)v3;
  sub_1000129D4(&v4);
  sub_100DF3038(a1);
  sub_100DF1154(a1, 0, v2);
}

void sub_100DF3038(uint64_t a1)
{
  uint64_t v2 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 224LL))(a1);
  double v3 = (*(double (**)(void))(**(void **)(a1 + 448) + 56LL))(*(void *)(a1 + 448));
  int v37 = *(_DWORD *)(a1 + 408);
  uint64_t v4 = (void *)sub_1005B46E8(v2 + 184);
  uint64_t v5 = sub_100056FA8(v2 + 184);
  if (v4 != (void *)v5)
  {
    float v6 = (void *)v5;
    char v34 = 0;
    uint64_t v7 = a1;
    uint64_t v8 = a1 + 128;
    uint64_t v35 = v7;
    unint64_t v36 = (void *)(v7 + 136);
    uint64_t v33 = v7 + 456;
    do
    {
      int v9 = (std::string *)v4[10];
      BOOL v10 = sub_100C0CD30((uint64_t)v9, v37 > 1, v3, *(float *)(v2 + 128));
      BOOL v11 = sub_100C0D05C((uint64_t)v9, v37 > 1, *(float *)(v2 + 128), v3);
      BOOL v12 = sub_100603554(v8, (uint64_t)&v9[2]);
      if (sub_100C0CCC8((uint64_t)v9))
      {
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101884558);
        }
        int v13 = (os_log_s *)qword_101934A78;
        if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
        {
          (*(void (**)(void ***__return_ptr, std::string *))(v9->__r_.__value_.__r.__words[0] + 16))( &v45,  v9);
          BOOL v14 = (void **)&v45;
          if (SHIBYTE(v49) < 0) {
            BOOL v14 = v45;
          }
          LODWORD(buf) = 67109634;
          DWORD1(buf) = v10;
          WORD4(buf) = 1024;
          *(_DWORD *)((char *)&buf + 1sub_100222B94(v13, (uint64_t)"clearLocationInformationCell", 0) = v11;
          HIWORD(buf) = 2080;
          int v42 = v14;
          _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "WIFITILE: refreshTilesDataIfNeeded, isTileDataExpired, %d, isShouldBeDownloaded, %d, tile, %s",  (uint8_t *)&buf,  0x18u);
          if (SHIBYTE(v49) < 0) {
            operator delete(v45);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(&buf, 0x65CuLL);
          if (qword_101934A70 != -1) {
            dispatch_once(&qword_101934A70, &stru_101884558);
          }
          uint64_t v23 = qword_101934A78;
          (*(void (**)(void **__return_ptr, std::string *))(v9->__r_.__value_.__r.__words[0] + 16))(__p, v9);
          BOOL v24 = __p;
          if (v40 < 0) {
            BOOL v24 = (void **)__p[0];
          }
          LODWORD(v45) = 67109634;
          HIDWORD(v45) = v10;
          __int16 v46 = 1024;
          BOOL v47 = v11;
          __int16 v48 = 2080;
          int v49 = v24;
          _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v23,  2LL,  "WIFITILE: refreshTilesDataIfNeeded, isTileDataExpired, %d, isShouldBeDownloaded, %d, tile, %s",  &v45,  24,  v32);
          uint64_t v26 = v25;
          if (v40 < 0) {
            operator delete(__p[0]);
          }
          sub_10029211C("Generic", 1LL, 0, 2LL, "void CLWifiTilesManager::refreshTilesDataIfNeeded()", "%s\n", v26);
        }

        if (v36 == v12 && v10)
        {
          sub_100DD9668(*(_DWORD *)(v2 + 4), v33, &v45);
          CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
          LOWORD(buf) = 0;
          BYTE2(buf) = 0;
          *((void *)&buf + 1) = 0xBFF0000000000000LL;
          CFAbsoluteTime v43 = Current;
          __int16 v44 = 1;
          LODWORD(v42) = 0;
          sub_100C0D048((uint64_t)v45, (uint64_t)v9);
          BOOL v17 = v45;
          int v45 = 0LL;
          uint64_t v38 = (uint64_t)v17;
          sub_100DF6F20(v35, &v38, v9 + 2, &buf);
          uint64_t v18 = v38;
          uint64_t v38 = 0LL;
          if (v18) {
            (*(void (**)(uint64_t))(*(void *)v18 + 8LL))(v18);
          }
          BOOL v19 = v45;
          int v45 = 0LL;
          if (v19) {
            (*((void (**)(void **))*v19 + 1))(v19);
          }
          char v34 = 1;
        }
      }

      uint64_t v20 = (void *)v4[1];
      if (v20)
      {
        do
        {
          int v21 = v20;
          uint64_t v20 = (void *)*v20;
        }

        while (v20);
      }

      else
      {
        do
        {
          int v21 = (void *)v4[2];
          BOOL v22 = *v21 == (void)v4;
          uint64_t v4 = v21;
        }

        while (!v22);
      }

      uint64_t v4 = v21;
    }

    while (v21 != v6);
    if ((v34 & 1) != 0)
    {
      int v27 = (*(uint64_t (**)(void))(**(void **)(v35 + 448) + 80LL))(*(void *)(v35 + 448));
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101884538);
      }
      int v28 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
      {
        LODWORD(buf) = 67240192;
        DWORD1(buf) = v27;
        _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEFAULT,  "@TileSched, wifi, set, %{public}d",  (uint8_t *)&buf,  8u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101884538);
        }
        LODWORD(v45) = 67240192;
        HIDWORD(v45) = v27;
        LODWORD(v31) = 8;
        _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "@TileSched, wifi, set, %{public}d",  &v45,  v31);
        BOOL v30 = (__int128 *)v29;
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CLWifiTilesManager::refreshTilesDataIfNeeded()", "%s\n", v29);
        if (v30 != &buf) {
          free(v30);
        }
      }
    }
  }

void sub_100DF35C8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  if (a19) {
    (*(void (**)(uint64_t))(*(void *)a19 + 8LL))(a19);
  }
  uint64_t v21 = *(void *)(v19 - 144);
  *(void *)(v19 - 144) = 0LL;
  if (v21) {
    (*(void (**)(uint64_t))(*(void *)v21 + 8LL))(v21);
  }
  _Unwind_Resume(exception_object);
}

id *sub_100DF3610(uint64_t a1)
{
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101884558);
  }
  uint64_t v2 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)__int128 buf = 136446210;
    int v16 = "clearLocationInformationWifi";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "WIFITILE: %{public}s", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101884558);
    }
    int v13 = 136446210;
    BOOL v14 = "clearLocationInformationWifi";
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "WIFITILE: %{public}s",  &v13,  12);
    BOOL v11 = (uint8_t *)v10;
    sub_10029211C("Generic", 1LL, 0, 2LL, "virtual void CLWifiTilesManager::clearLocationInformation()", "%s\n", v10);
    if (v11 != buf) {
      free(v11);
    }
  }

  sub_100DF38A0(a1);
  *(_DWORD *)(a1 + 232) = 0xFFFF;
  *(void *)(a1 + 244) = 0LL;
  *(void *)(a1 + 23sub_1002D62D8(v1 + 6) = 0LL;
  *(_OWORD *)(a1 + 252) = xmmword_1012E0070;
  __asm { FMOV            V0.2D, #-1.0 }

  *(_OWORD *)(a1 + 26_Block_object_dispose(va, 8) = _Q0;
  *(_OWORD *)(a1 + 284) = _Q0;
  *(_OWORD *)(a1 + 30sub_100222B94(v12, (uint64_t)"clearLocationInformationWifi", 0) = _Q0;
  *(_DWORD *)(a1 + 31sub_1002D62D8(v1 + 6) = 0;
  *(void *)(a1 + 32_Block_object_dispose(va, 8) = 0LL;
  *(void *)(a1 + 33sub_1002D62D8(v1 + 6) = 0LL;
  *(void *)(a1 + 32sub_100222B94(v12, (uint64_t)"clearLocationInformationWifi", 0) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 344) = 0;
  *(void *)(a1 + 34_Block_object_dispose(va, 8) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 35sub_1002D62D8(v1 + 6) = 0x7FFFFFFF;
  *(void *)(a1 + 36_Block_object_dispose(va, 8) = 0LL;
  *(void *)(a1 + 37sub_1002D62D8(v1 + 6) = 0LL;
  *(void *)(a1 + 36sub_100222B94(v12, (uint64_t)"clearLocationInformationWifi", 0) = 0LL;
  *(_BYTE *)(a1 + 384) = 0;
  *(void *)(a1 + 392) = 0LL;
  *(void *)(a1 + 40sub_100222B94(v12, (uint64_t)"clearLocationInformationWifi", 0) = 0LL;
  sub_100BD8374(a1 + 456);
  (*(void (**)(void))(**(void **)(a1 + 448) + 40LL))(*(void *)(a1 + 448));
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 224LL))(a1);
  (*(void (**)(uint64_t, uint64_t, void))(*(void *)a1 + 208LL))(a1, 1LL, *(unsigned int *)(v8 + 4));
  return sub_1001BA1BC(v12);
}

void sub_100DF387C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100DF38A0(uint64_t a1)
{
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101884558);
  }
  uint64_t v2 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v3 = *(void *)(a1 + 144);
    *(_DWORD *)__int128 buf = 134217984;
    uint64_t v17 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "WIFITILE: cancelAllDownloads, planned, %lu",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101884558);
    }
    uint64_t v11 = *(void *)(a1 + 144);
    int v14 = 134217984;
    uint64_t v15 = v11;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "WIFITILE: cancelAllDownloads, planned, %lu",  &v14);
    int v13 = (uint8_t *)v12;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLWifiTilesManager::cancelAllDownloads()", "%s\n", v12);
    if (v13 != buf) {
      free(v13);
    }
  }

  uint64_t v4 = *(void *)(a1 + 208);
  if (v4)
  {
    (*(void (**)(uint64_t))(*(void *)v4 + 24LL))(v4);
    *(_BYTE *)(a1 + 192) = 0;
  }

  uint64_t v5 = *(void *)(a1 + 176);
  if (v5)
  {
    (*(void (**)(uint64_t))(*(void *)v5 + 24LL))(v5);
    *(_BYTE *)(a1 + 16sub_100222B94(v12, (uint64_t)"clearLocationInformationWifi", 0) = 0;
  }

  float v6 = *(void **)(a1 + 128);
  uint64_t v7 = (void *)(a1 + 136);
  if (v6 != (void *)(a1 + 136))
  {
    do
    {
      sub_100C100B4(v6[10]);
      uint64_t v8 = (void *)v6[1];
      if (v8)
      {
        do
        {
          int v9 = v8;
          uint64_t v8 = (void *)*v8;
        }

        while (v8);
      }

      else
      {
        do
        {
          int v9 = (void *)v6[2];
          BOOL v10 = *v9 == (void)v6;
          float v6 = v9;
        }

        while (!v10);
      }

      float v6 = v9;
    }

    while (v9 != v7);
  }

  sub_100603BE4(a1 + 128, *(void **)(a1 + 136));
  *(void *)(a1 + 13sub_1002D62D8(v1 + 6) = 0LL;
  *(void *)(a1 + 144) = 0LL;
  *(void *)(a1 + 12_Block_object_dispose(va, 8) = v7;
}

id *sub_100DF3AEC(uint64_t a1)
{
  return sub_100DF3610(a1 - 112);
}

void sub_100DF3AF4(uint64_t a1, uint64_t a2, int *a3, uint64_t a4)
{
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101884558);
  }
  uint64_t v7 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    int v8 = *a3;
    *(_DWORD *)__int128 buf = 134218240;
    uint64_t v31 = a1;
    __int16 v32 = 1024;
    int v33 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "WIFITILE: onClientNotification, %p, notification, %d",  buf,  0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101884558);
    }
    int v15 = *a3;
    int v26 = 134218240;
    uint64_t v27 = a1;
    __int16 v28 = 1024;
    int v29 = v15;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "WIFITILE: onClientNotification, %p, notification, %d",  &v26,  18);
    uint64_t v17 = (uint8_t *)v16;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::onClientNotification(int, const CLClientManager_Type::Notification &, const CLClientManag er_Type::NotificationData &)",  "%s\n",  v16);
    if (v17 != buf) {
      free(v17);
    }
  }

  int v9 = *a3;
  if (*a3 == 6)
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101884538);
    }
    uint64_t v11 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "WIFITILE: #CacheDelete kNotificationSoftwareUpdateStorageRecovery",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101884538);
      }
      LOWORD(v2sub_1002D62D8(v1 + 6) = 0;
      LODWORD(v25) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "WIFITILE: #CacheDelete kNotificationSoftwareUpdateStorageRecovery",  &v26,  v25);
      uint64_t v21 = (uint8_t *)v20;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::onClientNotification(int, const CLClientManager_Type::Notification &, const CLClientMan ager_Type::NotificationData &)",  "%s\n",  v20);
      if (v21 != buf) {
        free(v21);
      }
    }

    (*(void (**)(uint64_t))(*(void *)a1 + 248LL))(a1);
  }

  else if (v9 == 4)
  {
    *(_BYTE *)(a1 + 413) = *(_DWORD *)(a4 + 188) == 1;
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101884538);
    }
    BOOL v12 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      int v13 = *(unsigned __int8 *)(a1 + 413);
      *(_DWORD *)__int128 buf = 67240192;
      LODWORD(v31) = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "WIFITILE: kNotificationLocationServicesStatus, areLocationServicesEnabled, %{public}d",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101884538);
      }
      int v22 = *(unsigned __int8 *)(a1 + 413);
      int v26 = 67240192;
      LODWORD(v27) = v22;
      LODWORD(v25) = 8;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "WIFITILE: kNotificationLocationServicesStatus, areLocationServicesEnabled, %{public}d",  &v26,  v25);
      BOOL v24 = (uint8_t *)v23;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::onClientNotification(int, const CLClientManager_Type::Notification &, const CLClientMan ager_Type::NotificationData &)",  "%s\n",  v23);
      if (v24 != buf) {
        free(v24);
      }
    }

    if (*(_BYTE *)(a1 + 413))
    {
      uint64_t v14 = 1LL;
    }

    else
    {
      (*(void (**)(uint64_t))(*(void *)a1 + 248LL))(a1);
      uint64_t v14 = *(unsigned __int8 *)(a1 + 413);
    }

    (*(void (**)(void, uint64_t))(**(void **)(a1 + 496) + 16LL))(*(void *)(a1 + 496), v14);
  }

  else if (!v9)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101884558);
    }
    BOOL v10 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "WIFITILE: kNotificationReset", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101884558);
      }
      LOWORD(v2sub_1002D62D8(v1 + 6) = 0;
      LODWORD(v25) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "WIFITILE: kNotificationReset",  &v26,  v25);
      uint64_t v19 = (uint8_t *)v18;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::onClientNotification(int, const CLClientManager_Type::Notification &, const CLClientMan ager_Type::NotificationData &)",  "%s\n",  v18);
      if (v19 != buf) {
        free(v19);
      }
    }

    (*(void (**)(uint64_t))(*(void *)a1 + 248LL))(a1);
    (*(void (**)(void, uint64_t))(**(void **)(a1 + 496) + 16LL))(*(void *)(a1 + 496), 2LL);
    (*(void (**)(void))(**(void **)(a1 + 448) + 88LL))(*(void *)(a1 + 448));
  }

void sub_100DF4118(uint64_t a1, uint64_t a2, double a3)
{
  if (qword_101934A70 != -1) {
    goto LABEL_58;
  }
  while (1)
  {
    float v6 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "WIFITILE: deleteAgedDownloadItems, start",  buf,  2u);
    }

    uint64_t v7 = sub_1002921D0(115, 2);
    if ((_DWORD)v7)
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101884558);
      }
      LOWORD(v59) = 0;
      LODWORD(v49) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "WIFITILE: deleteAgedDownloadItems, start",  &v59);
      int v45 = (uint8_t *)v44;
      uint64_t v7 = sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::deleteAgedDownloadItems(std::map<TileId, std::unique_ptr<CLTileFile>> &, CFAbsoluteTime)",  "%s\n",  v44);
      if (v45 != buf) {
        free(v45);
      }
    }

    int v16 = *(uint64_t **)a2;
    if (*(void *)a2 == a2 + 8) {
      break;
    }
    int v17 = 0;
    *(void *)&__int128 v15 = 134349571LL;
    __int128 v53 = v15;
    *(void *)&__int128 v15 = 134284033LL;
    __int128 v52 = v15;
    while (1)
    {
      uint64_t v18 = v16[10];
      __int128 v59 = *((_OWORD *)v16 + 2);
      uint64_t v60 = v16[6];
      if (*((char *)v16 + 79) < 0)
      {
        uint64_t v7 = (uint64_t)sub_1010DD48C(&v61, (void *)v16[7], v16[8]);
      }

      else
      {
        __int128 v61 = *(_OWORD *)(v16 + 7);
        uint64_t v62 = v16[9];
      }

      if (*(_DWORD *)(v18 + 48)) {
        break;
      }
      uint64_t v19 = (uint64_t *)v16[1];
      uint64_t v20 = v16;
      if (v19)
      {
        do
        {
          uint64_t v21 = v19;
          uint64_t v19 = (uint64_t *)*v19;
        }

        while (v19);
      }

      else
      {
        do
        {
          uint64_t v21 = (uint64_t *)v20[2];
          BOOL v22 = *v21 == (void)v20;
          uint64_t v20 = v21;
        }

        while (!v22);
      }

      double v23 = *(double *)(v18 + 136);
      double v24 = *(double *)(*(void *)(a1 + 480) + 16LL);
      uint64_t v7 = sub_100C0DB30(v18);
      double v25 = vabdd_f64(a3, v23);
      if (v25 < v24) {
        char v26 = 1;
      }
      else {
        char v26 = v7;
      }
      if ((v26 & 1) == 0)
      {
        sub_100F7C670(*(void *)(a1 + 480), v18 + 48);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101884538);
        }
        uint64_t v27 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
        {
          (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)v18 + 16LL))(__p, v18);
          __int16 v28 = __p;
          if (__p[23] < 0) {
            __int16 v28 = *(_BYTE **)__p;
          }
          *(_DWORD *)__int128 buf = v53;
          double v64 = v25;
          __int16 v65 = 2050;
          double v66 = v24;
          __int16 v67 = 2081;
          double v68 = v28;
          _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEBUG,  "WifiTile, deleteAgedDownloadItems, delete, age, %{public}.1lf, %{public}.1lf, tile, %{private}s",  buf,  0x20u);
          if ((__p[23] & 0x80000000) != 0) {
            operator delete(*(void **)__p);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101884538);
          }
          uint64_t v33 = qword_101934858;
          (*(void (**)(void **__return_ptr, uint64_t))(*(void *)v18 + 16LL))(v55, v18);
          char v34 = v55;
          if (v56 < 0) {
            char v34 = (void **)v55[0];
          }
          *(_DWORD *)std::string __p = v53;
          *(double *)&__p[4] = v25;
          *(_WORD *)&_BYTE __p[12] = 2050;
          *(double *)&_BYTE __p[14] = v24;
          *(_WORD *)&__p[22] = 2081;
          uint64_t v58 = (uint64_t)v34;
          LODWORD(v49) = 32;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v33,  2LL,  "WifiTile, deleteAgedDownloadItems, delete, age, %{public}.1lf, %{public}.1lf, tile, %{private}s",  __p);
          unint64_t v36 = v35;
          if (SHIBYTE(v56) < 0) {
            operator delete(v55[0]);
          }
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::deleteAgedDownloadItems(std::map<TileId, std::unique_ptr<CLTileFile>> &, CFAbsoluteTime)",  "%s\n",  v36);
        }

        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101884538);
        }
        int v29 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
        {
          double v30 = sub_1008ADB4C((uint64_t)&v59);
          double v31 = sub_1008ADB70((uint64_t)&v59);
          uint64_t v32 = *(void *)(a2 + 16) - 1LL;
          *(_DWORD *)__int128 buf = v52;
          double v64 = v30;
          __int16 v65 = 2049;
          double v66 = v31;
          __int16 v67 = 2050;
          double v68 = (_BYTE *)v32;
          _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEFAULT,  "@TileReq, wifi, rmlist, llsw, %{private}.2lf, %{private}.2lf, aged, size, %{public}ld",  buf,  0x20u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101884538);
          }
          uint64_t v37 = qword_101934858;
          double v38 = sub_1008ADB4C((uint64_t)&v59);
          double v39 = sub_1008ADB70((uint64_t)&v59);
          uint64_t v40 = *(void *)(a2 + 16) - 1LL;
          *(_DWORD *)std::string __p = v52;
          *(double *)&__p[4] = v38;
          *(_WORD *)&_BYTE __p[12] = 2049;
          *(double *)&_BYTE __p[14] = v39;
          *(_WORD *)&__p[22] = 2050;
          uint64_t v58 = v40;
          LODWORD(v49) = 32;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v37,  0LL,  "@TileReq, wifi, rmlist, llsw, %{private}.2lf, %{private}.2lf, aged, size, %{public}ld",  __p);
          int v42 = (uint8_t *)v41;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::deleteAgedDownloadItems(std::map<TileId, std::unique_ptr<CLTileFile>> &, CFAbsoluteTime)",  "%s\n",  v41);
          if (v42 != buf) {
            free(v42);
          }
        }

        sub_1000087E8((uint64_t **)a2, v16);
        sub_1006035CC((uint64_t)(v16 + 4));
        operator delete(v16);
        ++v17;
      }

      if (SHIBYTE(v62) < 0) {
        operator delete((void *)v61);
      }
      int v16 = v21;
    }

    sub_1012718F8( v7,  v8,  v9,  v10,  v11,  v12,  v13,  v14,  v48,  v49,  v50,  v51,  v52,  *((uint64_t *)&v52 + 1),  v53,  *((uint64_t *)&v53 + 1),  v54,  (uint64_t)v55[0],  (uint64_t)v55[1],  v56,  *(uint64_t *)__p,  *(uint64_t *)&__p[8],  *(uint64_t *)&__p[16],  v58);
    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/Tiles/CLWifiTilesManager.mm",  426,  "deleteAgedDownloadItems");
    __break(1u);
LABEL_58:
    dispatch_once(&qword_101934A70, &stru_101884558);
  }

  int v17 = 0;
LABEL_51:
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101884558);
  }
  CFAbsoluteTime v43 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)__int128 buf = 67109120;
    LODWORD(v64) = v17;
    _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_DEBUG,  "WIFITILE: deleteAgedDownloadItems, deleted, %u, done",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101884558);
    }
    LODWORD(v59) = 67109120;
    DWORD1(v59) = v17;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "WIFITILE: deleteAgedDownloadItems, deleted, %u, done",  &v59);
    BOOL v47 = (uint8_t *)v46;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::deleteAgedDownloadItems(std::map<TileId, std::unique_ptr<CLTileFile>> &, CFAbsoluteTime)",  "%s\n",  v46);
    if (v47 != buf) {
      free(v47);
    }
  }

void sub_100DF4914( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, void *__p, uint64_t a29, int a30, __int16 a31, char a32, char a33)
{
  if (a33 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DF4954(uint64_t a1, double a2)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 224LL))(a1);
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101884558);
  }
  uint64_t v5 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    else {
      uint64_t v6 = *(void *)(v4 + 8);
    }
    *(_DWORD *)__int128 buf = 136315394;
    *(void *)double v64 = v6;
    *(_WORD *)&v64[8] = 2048;
    uint64_t v65 = sub_100019240(v4 + 184);
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "WIFITILE: deleteAgedTiles, start, name, %s, size, %lu",  buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101884558);
    }
    uint64_t v34 = qword_101934A78;
    else {
      unint64_t v35 = *(void *)(v4 + 8);
    }
    unsigned int v56 = 136315394;
    unint64_t v57 = v35;
    __int16 v58 = 2048;
    uint64_t v59 = sub_100019240(v4 + 184);
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v34,  2LL,  "WIFITILE: deleteAgedTiles, start, name, %s, size, %lu",  (const char *)&v56,  22);
    uint64_t v37 = (uint8_t *)v36;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::deleteTilesExceedingLimits(CFAbsoluteTime)",  "%s\n",  v36);
    if (v37 != buf) {
      free(v37);
    }
  }

  sub_100F7E394(*(void *)(a1 + 480), (uint64_t)&v49, a2);
  uint64_t v48 = v4;
  uint64_t v7 = (double *)v49;
  uint64_t v8 = v50;
  if (v49 != v50)
  {
    uint64_t v9 = (uint64_t **)(v4 + 184);
    do
    {
      sub_100924340(v7, (uint64_t)&v56);
      uint64_t v10 = sub_1006025CC((uint64_t)v9, &v56);
      if (v10)
      {
        if (!sub_100C0CCC8(v10))
        {
          if (qword_101934860 != -1) {
            dispatch_once(&qword_101934860, &stru_101884578);
          }
          uint64_t v11 = (os_log_s *)qword_101934868;
          if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)__int128 buf = 67174913;
            *(_DWORD *)double v64 = v57;
            *(_WORD *)&v64[4] = 1025;
            *(_DWORD *)&v64[6] = HIDWORD(v57);
            _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_ERROR,  "Deleted wifi #tile isFileExistsOnServer is false. x, %{private}d, y, %{private}d, #CloneMe",  buf,  0xEu);
          }

          if (sub_1002921D0(115, 0))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934860 != -1) {
              dispatch_once(&qword_101934860, &stru_101884578);
            }
            int v51 = 67174913;
            *(_DWORD *)__int128 v52 = v57;
            *(_WORD *)&v52[4] = 1025;
            *(_DWORD *)&v52[6] = HIDWORD(v57);
            LODWORD(v4sub_1002D62D8(v1 + 6) = 14;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  16LL,  "Deleted wifi #tile isFileExistsOnServer is false. x, %{private}d, y, %{private}d, #CloneMe",  &v51,  v46);
            double v24 = (uint8_t *)v23;
            sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLWifiTilesManager::deleteTilesExceedingLimits(CFAbsoluteTime)",  "%s\n",  v23);
            if (v24 != buf) {
              free(v24);
            }
          }
        }

        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101884538);
        }
        uint64_t v12 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
        {
          double v13 = sub_1008ADB4C((uint64_t)&v56);
          double v14 = sub_1008ADB70((uint64_t)&v56);
          uint64_t v15 = sub_100019240((uint64_t)v9);
          *(_DWORD *)__int128 buf = 134284033;
          *(double *)double v64 = v13;
          *(_WORD *)&v64[8] = 2049;
          uint64_t v65 = *(void *)&v14;
          __int16 v66 = 2050;
          uint64_t v67 = v15 - 1;
          _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "@TileList, wifi, delete, llsw, %{private}.2lf, %{private}.2lf, limits, size, %{public}lu",  buf,  0x20u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101884538);
          }
          uint64_t v17 = qword_101934858;
          double v18 = sub_1008ADB4C((uint64_t)&v56);
          double v19 = sub_1008ADB70((uint64_t)&v56);
          uint64_t v20 = sub_100019240((uint64_t)v9);
          int v51 = 134284033;
          *(double *)__int128 v52 = v18;
          *(_WORD *)&v52[8] = 2049;
          double v53 = v19;
          __int16 v54 = 2050;
          uint64_t v55 = v20 - 1;
          LODWORD(v4sub_1002D62D8(v1 + 6) = 32;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v17,  0LL,  "@TileList, wifi, delete, llsw, %{private}.2lf, %{private}.2lf, limits, size, %{public}lu",  &v51,  v46);
          BOOL v22 = (uint8_t *)v21;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::deleteTilesExceedingLimits(CFAbsoluteTime)",  "%s\n",  v21);
          if (v22 != buf) {
            free(v22);
          }
        }

        sub_100602D1C(v9, &v56);
      }

      else if (*(_BYTE *)(a1 + 217))
      {
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_101884578);
        }
        int v16 = (os_log_s *)qword_101934868;
        if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)__int128 buf = 67174913;
          *(_DWORD *)double v64 = v57;
          *(_WORD *)&v64[4] = 1025;
          *(_DWORD *)&v64[6] = HIDWORD(v57);
          _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_ERROR,  "Missing wifi #tile, x, %{private}d, y, %{private}d, #CloneMe",  buf,  0xEu);
        }

        if (sub_1002921D0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934860 != -1) {
            dispatch_once(&qword_101934860, &stru_101884578);
          }
          int v51 = 67174913;
          *(_DWORD *)__int128 v52 = v57;
          *(_WORD *)&v52[4] = 1025;
          *(_DWORD *)&v52[6] = HIDWORD(v57);
          LODWORD(v4sub_1002D62D8(v1 + 6) = 14;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  16LL,  "Missing wifi #tile, x, %{private}d, y, %{private}d, #CloneMe",  &v51,  v46);
          char v26 = (uint8_t *)v25;
          sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLWifiTilesManager::deleteTilesExceedingLimits(CFAbsoluteTime)",  "%s\n",  v25);
          if (v26 != buf) {
            free(v26);
          }
        }
      }

      if (v62 < 0) {
        operator delete(__p);
      }
      v7 += 18;
    }

    while (v7 != v8);
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101884558);
  }
  uint64_t v27 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    int v29 = v49;
    __int16 v28 = v50;
    uint64_t v30 = sub_100019240(v48 + 184);
    uint64_t v31 = v48 + 8;
    uint64_t v32 = *(void *)(v48 + 8);
    int v33 = *(char *)(v48 + 31);
    *(_DWORD *)__int128 buf = 134218498;
    if (v33 < 0) {
      uint64_t v31 = v32;
    }
    *(void *)double v64 = 0x8E38E38E38E38E39LL * (((char *)v28 - v29) >> 4);
    *(_WORD *)&v64[8] = 2048;
    uint64_t v65 = v30;
    __int16 v66 = 2080;
    uint64_t v67 = v31;
    _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEBUG,  "WIFITILE: deleteAgedTiles, end, numOfDeletedTiles, %lu, remain, %lu, name, %s",  buf,  0x20u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101884558);
    }
    uint64_t v38 = qword_101934A78;
    uint64_t v40 = v49;
    double v39 = v50;
    uint64_t v41 = sub_100019240(v48 + 184);
    int v42 = *(void **)(v48 + 8);
    int v43 = *(char *)(v48 + 31);
    unsigned int v56 = 134218498;
    if (v43 >= 0) {
      int v42 = (void *)(v48 + 8);
    }
    unint64_t v57 = 0x8E38E38E38E38E39LL * (((char *)v39 - v40) >> 4);
    __int16 v58 = 2048;
    uint64_t v59 = v41;
    __int16 v60 = 2080;
    std::string __p = v42;
    LODWORD(v4sub_1002D62D8(v1 + 6) = 32;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v38,  2LL,  "WIFITILE: deleteAgedTiles, end, numOfDeletedTiles, %lu, remain, %lu, name, %s",  &v56,  v46,  v47);
    int v45 = (uint8_t *)v44;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::deleteTilesExceedingLimits(CFAbsoluteTime)",  "%s\n",  v44);
    if (v45 != buf) {
      free(v45);
    }
  }

  if (v49)
  {
    uint64_t v50 = (double *)v49;
    operator delete(v49);
  }

void sub_100DF5288( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, void *a28, uint64_t a29, int a30, __int16 a31, char a32, char a33)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100DF52E8(uint64_t a1, uint64_t a2)
{
  uint64_t v10 = a2 + 48;
  if (*(_DWORD *)(a2 + 48))
  {
    sub_101271A40();
    __break(1u);
LABEL_25:
    dispatch_once(&qword_101934A70, &stru_101884558);
    goto LABEL_16;
  }

  uint64_t v2 = a2;
  double v12 = (*(double (**)(void))(**(void **)(a1 + 448) + 56LL))(*(void *)(a1 + 448));
  double v13 = *(double *)(a1 + 308);
  double v14 = *(double *)(a1 + 252);
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 224LL))(a1);
  double v15 = (*(double (**)(uint64_t))(*(void *)v2 + 56LL))(v2) / 20.0;
  double v16 = fmin(fmax(v15, (*(double (**)(uint64_t))(*(void *)v2 + 64LL))(v2) / 20.0), 0.01);
  double v17 = *(double *)(a1 + 236);
  double v8 = v17 - sub_1008ADB4C(v10);
  double v18 = *(double *)(a1 + 244);
  double v9 = v18 - sub_1008ADB70(v10);
  BOOL v5 = v8 >= -v16 && v8 <= v16 + (*(double (**)(uint64_t))(*(void *)v2 + 56LL))(v2);
  double v19 = v12 - v13;
  BOOL v6 = v9 >= -v16 && v9 <= v16 + (*(double (**)(uint64_t))(*(void *)v2 + 64LL))(v2);
  BOOL v7 = v19 < *(double *)(v4 + 136) && v14 > 0.0;
  else {
    uint64_t v3 = 0LL;
  }
  if (qword_101934A70 != -1) {
    goto LABEL_25;
  }
LABEL_16:
  uint64_t v20 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    int v21 = *(unsigned __int8 *)(v4 + 177);
    (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)v2 + 16LL))(__p, v2);
    BOOL v22 = v38 >= 0 ? __p : *(_BYTE **)__p;
    *(_DWORD *)__int128 buf = 134219778;
    double v51 = v8;
    __int16 v52 = 2048;
    double v53 = v9;
    __int16 v54 = 1024;
    BOOL v55 = v5;
    __int16 v56 = 1024;
    BOOL v57 = v6;
    __int16 v58 = 1024;
    int v59 = v3;
    __int16 v60 = 1024;
    int v61 = v21;
    __int16 v62 = 1024;
    BOOL v63 = v7;
    __int16 v64 = 2080;
    uint64_t v65 = v22;
    _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEBUG,  "WIFITILE: isCurrentTile, degreesFromCornerLat, %.8lf, degreesFromCornerLon, %.8lf, inside, %d, %d, isCurrentTile, %d, %d, isCurrentLocationKnown, %d, %s",  buf,  0x3Eu);
    if (SHIBYTE(v38) < 0) {
      operator delete(*(void **)__p);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101884558);
    }
    uint64_t v24 = qword_101934A78;
    int v25 = *(unsigned __int8 *)(v4 + 177);
    (*(void (**)(void **__return_ptr, uint64_t))(*(void *)v2 + 16LL))(&v31, v2);
    if (v34 >= 0) {
      char v26 = &v31;
    }
    else {
      char v26 = v31;
    }
    *(_DWORD *)std::string __p = 134219778;
    *(double *)&__p[4] = v8;
    __int16 v36 = 2048;
    double v37 = v9;
    __int16 v38 = 1024;
    BOOL v39 = v5;
    __int16 v40 = 1024;
    BOOL v41 = v6;
    __int16 v42 = 1024;
    int v43 = v3;
    __int16 v44 = 1024;
    int v45 = v25;
    __int16 v46 = 1024;
    BOOL v47 = v7;
    __int16 v48 = 2080;
    uint64_t v49 = v26;
    LODWORD(v29) = 62;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v24,  2LL,  "WIFITILE: isCurrentTile, degreesFromCornerLat, %.8lf, degreesFromCornerLon, %.8lf, inside, %d, %d, isCurrentTile, %d, %d, isCurrentLocationKnown, %d, %s",  COERCE_DOUBLE(__p),  v29,  v30,  (_DWORD)v31,  v32,  v33);
    __int16 v28 = v27;
    if (v34 < 0) {
      operator delete(v31);
    }
    sub_10029211C("Generic", 1LL, 0, 2LL, "virtual BOOL CLWifiTilesManager::isCurrentTile(CLTileFile *)", "%s\n", v28);
  }

  return v3;
}

uint64_t sub_100DF5718(uint64_t a1, uint64_t a2)
{
  return sub_100DF52E8(a1 - 112, a2);
}

void sub_100DF5720(uint64_t a1, double a2)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 224LL))(a1);
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101884558);
  }
  BOOL v5 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v6 = v4 + 8;
    *(_DWORD *)__int128 buf = 136315138;
    uint64_t v18 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "WIFITILE: dispatch, deleteAgedTiles, for, %s",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101884558);
    }
    uint64_t v10 = *(void *)(v4 + 8);
    uint64_t v9 = v4 + 8;
    uint64_t v8 = v10;
    int v15 = 136315138;
    uint64_t v16 = v8;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "WIFITILE: dispatch, deleteAgedTiles, for, %s",  (const char *)&v15);
    double v12 = (uint8_t *)v11;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLWifiTilesManager::deleteAgedTiles(CFAbsoluteTime)",  "%s\n",  v11);
    if (v12 != buf) {
      free(v12);
    }
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101884558);
  }
  BOOL v7 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "WIFITILE: deleteAgedTiles, fTilesToDownload",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101884558);
    }
    LOWORD(v15) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "WIFITILE: deleteAgedTiles, fTilesToDownload",  &v15,  2);
    double v14 = (uint8_t *)v13;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLWifiTilesManager::deleteAgedTiles(CFAbsoluteTime)",  "%s\n",  v13);
    if (v14 != buf) {
      free(v14);
    }
  }

  sub_100DF4118(a1, a1 + 128, a2);
  sub_100DF4954(a1, a2);
}

void sub_100DF5A4C(uint64_t a1, double a2)
{
}

void sub_100DF5A54(uint64_t a1, int a2, int a3)
{
  uint64_t v52 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 224LL))(a1);
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101884558);
  }
  uint64_t v6 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v7 = v52 + 8;
    *(_DWORD *)__int128 buf = 67109378;
    *(_DWORD *)&uint8_t buf[4] = a3;
    *(_WORD *)&uint8_t buf[8] = 2080;
    *(void *)&buf[10] = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "WIFITILE: removeAllTiles, cleaning map, %d, %s",  buf,  0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101884558);
    }
    uint64_t v40 = v52 + 8;
    *(_DWORD *)std::string __p = 67109378;
    *(_DWORD *)&__p[4] = a3;
    *(_WORD *)&__p[8] = 2080;
    *(void *)&__p[10] = v40;
    LODWORD(v5sub_100222B94(v12, (uint64_t)"clearLocationInformationWifi", 0) = 18;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "WIFITILE: removeAllTiles, cleaning map, %d, %s",  __p,  v50);
    __int16 v42 = (char *)v41;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLWifiTilesManager::removeAllTiles(BOOL, CLTilesManager_Type::TileType)",  "%s\n",  v41);
    if (v42 != buf) {
      free(v42);
    }
  }

  uint64_t v8 = v52 + 184;
  uint64_t v9 = (void *)sub_1005B46E8(v52 + 184);
  if (v9 != (void *)sub_100056FA8(v52 + 184))
  {
    do
    {
      if (a2)
      {
        uint64_t v10 = v9[10] + 48LL;
        sub_100F7C670(*(void *)(a1 + 480), v10);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101884538);
        }
        uint64_t v11 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
        {
          double v12 = sub_1008ADB4C(v10);
          double v13 = sub_1008ADB70(v10);
          uint64_t v14 = sub_100019240(v8);
          *(_DWORD *)__int128 buf = 134284033;
          *(double *)&uint8_t buf[4] = v12;
          *(_WORD *)&_BYTE buf[12] = 2049;
          *(double *)&_BYTE buf[14] = v13;
          __int16 v59 = 2050;
          uint64_t v60 = v14;
          _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "@TileList, wifi, delete, llsw, %{private}.2lf, %{private}.2lf, all, size, %{public}lu",  buf,  0x20u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101884538);
          }
          uint64_t v18 = qword_101934858;
          double v19 = sub_1008ADB4C(v10);
          double v20 = sub_1008ADB70(v10);
          uint64_t v21 = sub_100019240(v8);
          *(_DWORD *)std::string __p = 134284033;
          *(double *)&__p[4] = v19;
          *(_WORD *)&_BYTE __p[12] = 2049;
          *(double *)&_BYTE __p[14] = v20;
          *(_WORD *)&__p[22] = 2050;
          uint64_t v55 = v21;
          LODWORD(v5sub_100222B94(v12, (uint64_t)"clearLocationInformationWifi", 0) = 32;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v18,  0LL,  "@TileList, wifi, delete, llsw, %{private}.2lf, %{private}.2lf, all, size, %{public}lu",  __p,  v50);
          double v23 = (char *)v22;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLWifiTilesManager::removeAllTiles(BOOL, CLTilesManager_Type::TileType)",  "%s\n",  v22);
          if (v23 != buf) {
            free(v23);
          }
        }
      }

      int v15 = (void *)v9[1];
      if (v15)
      {
        do
        {
          uint64_t v16 = v15;
          int v15 = (void *)*v15;
        }

        while (v15);
      }

      else
      {
        do
        {
          uint64_t v16 = (void *)v9[2];
          BOOL v17 = *v16 == (void)v9;
          uint64_t v9 = v16;
        }

        while (!v17);
      }

      uint64_t v9 = v16;
    }

    while (v16 != (void *)sub_100056FA8(v8));
  }

  sub_100603210(v8);
  sub_100F7EEE4(*(void **)(a1 + 480));
  if ((a2 & 1) != 0)
  {
    sub_100DF6214((const char *)(a1 + 424), (uint64_t *)buf);
    uint64_t v24 = *(void *)buf;
    for (uint64_t i = *(void *)&buf[8]; v24 != i; v24 += 24LL)
    {
      else {
        size_t v26 = *(void *)(a1 + 432);
      }
      sub_1000392EC((uint64_t)&v53, v26 + 1);
      if ((v53.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v27 = &v53;
      }
      else {
        uint64_t v27 = (std::string *)v53.__r_.__value_.__r.__words[0];
      }
      if (v26)
      {
        else {
          __int16 v28 = *(const void **)(a1 + 424);
        }
        memmove(v27, v28, v26);
      }

      *(_WORD *)((char *)&v27->__r_.__value_.__l.__data_ + v2sub_1002D62D8(v1 + 6) = 47;
      int v29 = *(char *)(v24 + 23);
      if (v29 >= 0) {
        int v30 = (const std::string::value_type *)v24;
      }
      else {
        int v30 = *(const std::string::value_type **)v24;
      }
      if (v29 >= 0) {
        std::string::size_type v31 = *(unsigned __int8 *)(v24 + 23);
      }
      else {
        std::string::size_type v31 = *(void *)(v24 + 8);
      }
      int v32 = std::string::append(&v53, v30, v31);
      __int128 v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
      *(void *)&__p[16] = v32->__r_.__value_.__l.__cap_;
      *(_OWORD *)std::string __p = v33;
      v32->__r_.__value_.__l.__size_ = 0LL;
      v32->__r_.__value_.__l.__cap_ = 0LL;
      v32->__r_.__value_.__r.__words[0] = 0LL;
      if (__p[23] >= 0) {
        char v34 = __p;
      }
      else {
        char v34 = *(const char **)__p;
      }
      sub_100296964(v34);
      if ((__p[23] & 0x80000000) != 0) {
        operator delete(*(void **)__p);
      }
    }

    sub_100F7DCB0(*(void *)(a1 + 480));
    *(void *)std::string __p = buf;
    sub_1000129D4((void ***)__p);
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101884558);
  }
  unint64_t v35 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    else {
      uint64_t v36 = *(void *)(v52 + 8);
    }
    uint64_t v37 = sub_100019240(v8);
    uint64_t v38 = sub_100603208(v8);
    uint64_t v39 = *(void *)(a1 + 144);
    *(_DWORD *)__int128 buf = 136315906;
    *(void *)&uint8_t buf[4] = v36;
    *(_WORD *)&_BYTE buf[12] = 2048;
    *(void *)&_BYTE buf[14] = v37;
    __int16 v59 = 2048;
    uint64_t v60 = v38;
    __int16 v61 = 2048;
    uint64_t v62 = v39;
    _os_log_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_DEBUG,  "WIFITILE: removeAllTiles, end, name, %s, size, %lu, unprot size, %lu, downloadSize, %lu",  buf,  0x2Au);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101884558);
    }
    uint64_t v43 = qword_101934A78;
    else {
      uint64_t v44 = *(void *)(v52 + 8);
    }
    uint64_t v45 = sub_100019240(v8);
    uint64_t v46 = sub_100603208(v8);
    uint64_t v47 = *(void *)(a1 + 144);
    *(_DWORD *)std::string __p = 136315906;
    *(void *)&__p[4] = v44;
    *(_WORD *)&_BYTE __p[12] = 2048;
    *(void *)&_BYTE __p[14] = v45;
    *(_WORD *)&__p[22] = 2048;
    uint64_t v55 = v46;
    __int16 v56 = 2048;
    uint64_t v57 = v47;
    LODWORD(v5sub_100222B94(v12, (uint64_t)"clearLocationInformationWifi", 0) = 42;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v43,  2LL,  "WIFITILE: removeAllTiles, end, name, %s, size, %lu, unprot size, %lu, downloadSize, %lu",  __p,  v50,  v51,  v52);
    uint64_t v49 = (char *)v48;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLWifiTilesManager::removeAllTiles(BOOL, CLTilesManager_Type::TileType)",  "%s\n",  v48);
    if (v49 != buf) {
      free(v49);
    }
  }

void sub_100DF61C0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, __int16 a18, char a19, char a20, uint64_t a21, char *__p, uint64_t a23, int a24, __int16 a25, char a26, char a27, uint64_t a28, uint64_t a29, uint64_t a30, char a31)
{
  std::string __p = &a31;
  sub_1000129D4((void ***)&__p);
  _Unwind_Resume(a1);
}

void sub_100DF6214(const char *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2 = (uint64_t *)a1;
  *a2 = 0LL;
  a2[1] = 0LL;
  a2[2] = 0LL;
  if (a1[23] < 0) {
    a1 = *(const char **)a1;
  }
  uint64_t v4 = opendir(a1);
  if (v4)
  {
    while (1)
    {
      BOOL v5 = readdir(v4);
      if (!v5) {
        break;
      }
      d_name = v5->d_name;
      if (strcmp(".", v5->d_name) && strcmp("..", d_name))
      {
        unint64_t v7 = a2[1];
        if (v7 >= a2[2])
        {
          uint64_t v8 = sub_100C37F2C(a2, d_name);
        }

        else
        {
          sub_1010DDBC0((void *)a2[1], d_name);
          uint64_t v8 = v7 + 24;
          a2[1] = v7 + 24;
        }

        a2[1] = v8;
      }
    }

    closedir(v4);
  }

  else
  {
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101884578);
    }
    uint64_t v9 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
    {
      else {
        uint64_t v10 = (uint64_t *)*v2;
      }
      *(_DWORD *)__int128 buf = 136380675;
      BOOL v17 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "#warning, failed to read directory, %{private}s",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101884578);
      }
      else {
        uint64_t v11 = (uint64_t *)*v2;
      }
      int v14 = 136380675;
      int v15 = v11;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "#warning, failed to read directory, %{private}s",  &v14,  12);
      double v13 = (uint8_t *)v12;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static std::vector<std::string> CLWifiTilesManager::listFilesInDirectory(const std::string &)",  "%s\n",  v12);
      if (v13 != buf) {
        free(v13);
      }
    }
  }

void sub_100DF6490(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
}

void sub_100DF64BC(uint64_t a1, int a2, int a3)
{
}

uint64_t sub_100DF64C4(uint64_t a1)
{
  uint64_t v2 = operator new(0x218uLL);
  uint64_t result = sub_100DF0130((uint64_t)v2, *(void **)(a1 + 32));
  qword_1019A20C0 = (uint64_t)v2;
  return result;
}

void sub_100DF64FC(_Unwind_Exception *a1)
{
}

uint64_t sub_100DF6510(uint64_t *a1, double a2)
{
  return 1LL;
}

void sub_100DF6570(id a1, unint64_t a2, unint64_t a3)
{
  double v5 = sub_101171C7C(a3 - a2);
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101884598);
  }
  uint64_t v6 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_INFO))
  {
    v7[0] = 68290306;
    v7[1] = 0;
    __int16 v8 = 2082;
    uint64_t v9 = "";
    __int16 v10 = 2082;
    uint64_t v11 = "elapsed";
    __int16 v12 = 2050;
    unint64_t v13 = a2;
    __int16 v14 = 2050;
    unint64_t v15 = a3;
    __int16 v16 = 2050;
    double v17 = v5;
    __int16 v18 = 2050;
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:CLWifiTilesManager::lockAllOnDiskWifiTiles, event:%{public, location:escape_only}s,  begin_mach:%{public}llu, end_mach:%{public}llu, elapsed_s:%{public}.09f, now_s:%{public}.09f}",  (uint8_t *)v7,  0x44u);
  }

uint64_t sub_100DF66A0(uint64_t a1, uint64_t a2, __int128 *a3)
{
  if ((__int128 *)a2 != a3)
  {
    sub_100DFF4E0((uint64_t)&v9, a3, *(__int128 **)(a1 + 8), a2);
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)(a1 + 8);
    if (v7 != v5)
    {
      do
      {
        v7 -= 24LL;
      }

      while (v7 != v6);
    }

    *(void *)(a1 + _Block_object_dispose(va, 8) = v6;
  }

  return a2;
}

void sub_100DF6724(uint64_t *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  if (!*(_BYTE *)(a1[60] + 53))
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101884538);
    }
    uint64_t v6 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_FAULT))
    {
      LOWORD(buf.__r_.__value_.__l.__data_) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "The WifiAccessPointLocationService schema is incorrect.",  (uint8_t *)&buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101884538);
      }
      LOWORD(vsub_100210578(v1 + 43) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934858,  17LL,  "The WifiAccessPointLocationService schema is incorrect.",  &v43,  2);
      char v34 = (std::stringbuf::string_type *)v33;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "std::map<TileId, CLTileFile *> CLWifiTilesManager::discoverWifiTilesAvailable(cl::chrono::CFAbsoluteTimeClock::time_point)",  "%s\n",  v33);
      if (v34 != &buf) {
        free(v34);
      }
    }
  }

  *(void *)(a2 + 1sub_1002D62D8(v1 + 6) = 0LL;
  *(void *)(a2 + _Block_object_dispose(va, 8) = 0LL;
  *(void *)a2 = a2 + 8;
  sub_100F7A104(a1[60], (uint64_t *)&v37);
  uint64_t v7 = (double *)v37;
  __int16 v8 = v38;
  if (v37 != v38)
  {
    do
    {
      char v9 = (*(uint64_t (**)(uint64_t *, double *, double))(*a1 + 256))(a1, v7, a3);
      uint64_t v36 = v10;
      sub_100924340(v7, (uint64_t)&v43);
      if (v9)
      {
        sub_100E000FC((uint64_t **)a2, (uint64_t)&v43, (uint64_t)&v43, &v36);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101884538);
        }
        uint64_t v11 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
        {
          double v12 = sub_1008ADB4C((uint64_t)&v43);
          double v13 = sub_1008ADB70((uint64_t)&v43);
          uint64_t v14 = (*(uint64_t (**)(uint64_t *))(*a1 + 224))(a1);
          uint64_t v15 = sub_100019240(v14 + 184);
          LODWORD(buf.__r_.__value_.__l.__data_) = 134284033;
          *(double *)((char *)buf.__r_.__value_.__r.__words + 4) = v12;
          WORD2(buf.__r_.__value_.__r.__words[1]) = 2049;
          *(double *)((char *)&buf.__r_.__value_.__r.__words[1] + sub_1002D62D8(v1 + 6) = v13;
          HIWORD(buf.__r_.__value_.__r.__words[2]) = 2050;
          uint64_t v50 = v15;
          _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "@TileList, wifi, add, llsw, %{private}.2lf, %{private}.2lf, database, size, %{public}lu",  (uint8_t *)&buf,  0x20u);
        }

        if (!sub_1002921D0(115, 2)) {
          goto LABEL_25;
        }
        bzero(&buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101884538);
        }
        uint64_t v16 = qword_101934858;
        double v17 = sub_1008ADB4C((uint64_t)&v43);
        double v18 = sub_1008ADB70((uint64_t)&v43);
        uint64_t v19 = (*(uint64_t (**)(uint64_t *))(*a1 + 224))(a1);
        uint64_t v20 = sub_100019240(v19 + 184);
        LODWORD(v39.__r_.__value_.__l.__data_) = 134284033;
        *(double *)((char *)v39.__r_.__value_.__r.__words + 4) = v17;
        WORD2(v39.__r_.__value_.__r.__words[1]) = 2049;
        *(double *)((char *)&v39.__r_.__value_.__r.__words[1] + sub_1002D62D8(v1 + 6) = v18;
        HIWORD(v39.__r_.__value_.__r.__words[2]) = 2050;
        uint64_t v40 = v20;
        LODWORD(v35) = 32;
        _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v16,  0LL,  "@TileList, wifi, add, llsw, %{private}.2lf, %{private}.2lf, database, size, %{public}lu",  &v39,  v35);
        BOOL v22 = (std::stringbuf::string_type *)v21;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "std::map<TileId, CLTileFile *> CLWifiTilesManager::discoverWifiTilesAvailable(cl::chrono::CFAbsoluteTimeClock::time_point)",  "%s\n",  v21);
      }

      else
      {
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_101884578);
        }
        double v23 = (os_log_s *)qword_101934868;
        if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_ERROR))
        {
          sub_1008AD840(&v43, &buf);
          p_std::stringbuf::string_type buf = &buf;
          if ((buf.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
          }
          LODWORD(v39.__r_.__value_.__l.__data_) = 136380675;
          *(std::string::size_type *)((char *)v39.__r_.__value_.__r.__words + 4) = (std::string::size_type)p_buf;
          _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_ERROR,  "Failed to create tile file object, %{private}s",  (uint8_t *)&v39,  0xCu);
        }

        if (!sub_1002921D0(115, 0)) {
          goto LABEL_25;
        }
        bzero(&buf, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_101884578);
        }
        uint64_t v25 = qword_101934868;
        sub_1008AD840(&v43, &v39);
        size_t v26 = &v39;
        if ((v39.__r_.__value_.__s.__size_ & 0x80u) != 0) {
          size_t v26 = (std::stringbuf::string_type *)v39.__r_.__value_.__r.__words[0];
        }
        int v41 = 136380675;
        __int16 v42 = v26;
        LODWORD(v35) = 12;
        _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v25,  16LL,  "Failed to create tile file object, %{private}s",  &v41,  v35);
        BOOL v22 = v27;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "std::map<TileId, CLTileFile *> CLWifiTilesManager::discoverWifiTilesAvailable(cl::chrono::CFAbsoluteTimeClock::time_point)",  "%s\n",  (const char *)v22);
      }

      if (v22 != &buf) {
        free(v22);
      }
LABEL_25:
      if (v48 < 0) {
        operator delete(__p);
      }
      v7 += 18;
    }

    while (v7 != v8);
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101884558);
  }
  __int16 v28 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    std::string::size_type v29 = *(void *)(a2 + 16);
    LODWORD(buf.__r_.__value_.__l.__data_) = 134218240;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = 0x8E38E38E38E38E39LL
                                                                           * (((char *)v38 - (_BYTE *)v37) >> 4);
    WORD2(buf.__r_.__value_.__r.__words[1]) = 2048;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + sub_1002D62D8(v1 + 6) = v29;
    _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEBUG,  "WIFITILE: db to map, %lu, %lu",  (uint8_t *)&buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101884558);
    }
    uint64_t v30 = *(void *)(a2 + 16);
    unsigned int v43 = 134218240;
    unint64_t v44 = 0x8E38E38E38E38E39LL * (((char *)v38 - (_BYTE *)v37) >> 4);
    __int16 v45 = 2048;
    uint64_t v46 = v30;
    LODWORD(v35) = 22;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "WIFITILE: db to map, %lu, %lu",  &v43,  v35);
    int v32 = (std::stringbuf::string_type *)v31;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "std::map<TileId, CLTileFile *> CLWifiTilesManager::discoverWifiTilesAvailable(cl::chrono::CFAbsoluteTimeClock::time_point)",  "%s\n",  v31);
    if (v32 != &buf) {
      free(v32);
    }
  }

  if (v37)
  {
    uint64_t v38 = (double *)v37;
    operator delete(v37);
  }

void sub_100DF6EAC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, void *a28, uint64_t a29, int a30, __int16 a31, char a32, char a33)
{
  if (__p) {
    operator delete(__p);
  }
  sub_100603B94(v33, *(char **)(v33 + 8));
  _Unwind_Resume(a1);
}

uint64_t sub_100DF6F20(uint64_t a1, uint64_t *a2, std::string *a3, __int128 *a4)
{
  std::string v34 = *a3;
  if ((char)a3[1].__r_.__value_.__s.__size_ < 0)
  {
    sub_1010DD48C(&v35, a3[1].__r_.__value_.__l.__data_, a3[1].__r_.__value_.__l.__size_);
  }

  else
  {
    __int128 v35 = *(_OWORD *)&a3[1].__r_.__value_.__l.__data_;
    std::string::size_type cap = a3[1].__r_.__value_.__l.__cap_;
  }

  sub_100C30314(*a2, &v34);
  uint64_t v7 = *a2;
  __int128 v8 = *a4;
  __int128 v9 = a4[1];
  *(_WORD *)(v7 + 144) = *((_WORD *)a4 + 16);
  *(_OWORD *)(v7 + 1sub_10046D318(v1 + 12) = v8;
  *(_OWORD *)(v7 + 12_Block_object_dispose(va, 8) = v9;
  sub_100C0F25C(*a2, (uint64_t)&qword_10199EAF0);
  uint64_t v10 = (uint64_t **)(a1 + 128);
  if ((void *)(a1 + 136) != sub_100603554(a1 + 128, (uint64_t)&v34))
  {
    sub_101271BB4( qword_101934A70 == -1,  v11,  v12,  v13,  v14,  v15,  v16,  v17,  v30,  v31,  v32,  v33,  (uint64_t)v34.__r_.__value_.__l.__data_,  v34.__r_.__value_.__l.__size_,  v34.__r_.__value_.__l.__cap_,  v35,  *((uint64_t *)&v35 + 1),  cap,  *(uint64_t *)buf,  *(uint64_t *)&buf[8],  *(uint64_t *)&buf[16],  v38,  *(uint64_t *)v39,  *(uint64_t *)&v39[8]);
    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/Tiles/CLWifiTilesManager.mm",  1529,  "addToDownloadList");
    __break(1u);
    goto LABEL_19;
  }

  if (qword_101934A70 != -1) {
LABEL_19:
  }
    dispatch_once(&qword_101934A70, &stru_101884558);
  double v18 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    (*(void (**)(void **__return_ptr))(*(void *)*a2 + 16LL))(__p);
    uint64_t v19 = v41 >= 0 ? __p : (void **)__p[0];
    uint64_t v20 = *(void *)(a1 + 144);
    *(_DWORD *)std::stringbuf::string_type buf = 136315394;
    *(void *)&uint8_t buf[4] = v19;
    *(_WORD *)&_BYTE buf[12] = 2048;
    *(void *)&_BYTE buf[14] = v20;
    _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEBUG,  "WIFITILE: addToDownloadList, added, %s, fTilesToDownload.size, %lu",  buf,  0x16u);
    if (v41 < 0) {
      operator delete(__p[0]);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101884558);
    }
    uint64_t v25 = qword_101934A78;
    (*(void (**)(_BYTE *__return_ptr))(*(void *)*a2 + 16LL))(buf);
    if (buf[23] >= 0) {
      size_t v26 = buf;
    }
    else {
      size_t v26 = *(_BYTE **)buf;
    }
    uint64_t v27 = *(void *)(a1 + 144);
    *(_DWORD *)std::stringbuf::string_type v39 = 136315394;
    *(void *)&v39[4] = v26;
    *(_WORD *)&v39[12] = 2048;
    *(void *)&_BYTE v39[14] = v27;
    LODWORD(v31) = 22;
    _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v25,  2LL,  "WIFITILE: addToDownloadList, added, %s, fTilesToDownload.size, %lu",  v39,  v31);
    std::string::size_type v29 = v28;
    if ((buf[23] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWifiTilesManager::addToDownloadList(std::unique_ptr<CLTileFile>, const TileId &, const CLTileFileDownloadDetails &)",  "%s\n",  v29);
  }

  __p[0] = &v34;
  uint64_t v21 = sub_100603C2C(v10, (uint64_t)&v34, (uint64_t)&unk_1012CF090, (_OWORD **)__p);
  uint64_t v22 = *a2;
  *a2 = 0LL;
  uint64_t v23 = v21[10];
  v21[10] = v22;
  if (v23) {
    (*(void (**)(uint64_t))(*(void *)v23 + 8LL))(v23);
  }
  if (SHIBYTE(cap) < 0) {
    operator delete((void *)v35);
  }
  return 1LL;
}

void sub_100DF728C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100DF72C0(uint64_t a1, __n128 a2)
{
  uint64_t v2 = *(void **)(a1 + 128);
  uint64_t v3 = (void *)(a1 + 136);
  if (v2 == (void *)(a1 + 136)) {
    return 0LL;
  }
  LODWORD(v4) = 0;
  a2.n128_u64[0] = 136315906LL;
  __n128 v17 = a2;
  do
  {
    uint64_t v5 = sub_10096B584(v2[10]);
    BOOL v6 = sub_100C0DB30(v2[10]);
    uint64_t v4 = (v4 + v6);
    if (v6)
    {
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101884558);
      }
      uint64_t v7 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        (*(void (**)(_BYTE *__return_ptr))(*(void *)v2[10] + 16LL))(__p);
        __int128 v8 = __p;
        if (v24 < 0) {
          __int128 v8 = *(_BYTE **)__p;
        }
        *(_DWORD *)std::stringbuf::string_type buf = v17.n128_u32[0];
        __int16 v28 = v8;
        __int16 v29 = 1024;
        int v30 = 1;
        __int16 v31 = 1024;
        int v32 = v4;
        __int16 v33 = 2048;
        uint64_t v34 = v5;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "WIFITILE: getNumOfActiveDownloads, tile, %s, is being downloaded, %d, total, %d, download, %p",  buf,  0x22u);
        if (SHIBYTE(v24) < 0) {
          operator delete(*(void **)__p);
        }
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101884558);
        }
        uint64_t v12 = qword_101934A78;
        (*(void (**)(void **__return_ptr))(*(void *)v2[10] + 16LL))(v18);
        uint64_t v13 = v18;
        if (v19 < 0) {
          uint64_t v13 = (void **)v18[0];
        }
        *(_DWORD *)std::string __p = v17.n128_u32[0];
        *(void *)&__p[4] = v13;
        __int16 v21 = 1024;
        int v22 = 1;
        __int16 v23 = 1024;
        int v24 = v4;
        __int16 v25 = 2048;
        uint64_t v26 = v5;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v12,  2LL,  "WIFITILE: getNumOfActiveDownloads, tile, %s, is being downloaded, %d, total, %d, download, %p",  __p,  34,  v17.n128_u32[0],  (const void *)v17.n128_u64[1]);
        uint64_t v15 = v14;
        if (v19 < 0) {
          operator delete(v18[0]);
        }
        sub_10029211C("Generic", 1LL, 0, 2LL, "unsigned int CLWifiTilesManager::getNumOfActiveDownloads()", "%s\n", v15);
      }
    }

    __int128 v9 = (void *)v2[1];
    if (v9)
    {
      do
      {
        uint64_t v10 = v9;
        __int128 v9 = (void *)*v9;
      }

      while (v9);
    }

    else
    {
      do
      {
        uint64_t v10 = (void *)v2[2];
        BOOL v11 = *v10 == (void)v2;
        uint64_t v2 = v10;
      }

      while (!v11);
    }

    uint64_t v2 = v10;
  }

  while (v10 != v3);
  return v4;
}

uint64_t sub_100DF75B0(uint64_t a1, _BYTE *a2)
{
  int v4 = *(_DWORD *)(a1 + 408);
  if (v4 <= 0)
  {
    int v5 = *(unsigned __int8 *)(a1 + 412);
    BOOL v6 = *(_BYTE *)(a1 + 412) != 0;
    goto LABEL_5;
  }

  if (v4 == 1)
  {
    int v5 = *(unsigned __int8 *)(a1 + 412);
    BOOL v6 = 1;
LABEL_5:
    BOOL v7 = v5 != 0;
    goto LABEL_7;
  }

  BOOL v6 = 1;
  BOOL v7 = 1;
LABEL_7:
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 224LL))(a1);
  if ((*(unsigned int (**)(uint64_t, _BYTE *))(*(void *)a1 + 240LL))(a1, a2))
  {
    char v9 = !v6;
    if (a2[112]) {
      char v10 = !v6;
    }
    else {
      char v10 = 1;
    }
    if ((v10 & 1) == 0)
    {
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101884558);
      }
      BOOL v11 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        (*(void (**)(void **__return_ptr, _BYTE *))(*(void *)a2 + 16LL))(__p, a2);
        uint64_t v12 = v45 >= 0 ? __p : (void **)__p[0];
        *(_DWORD *)std::stringbuf::string_type buf = 136315138;
        *(void *)&uint8_t buf[4] = v12;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "WIFITILE: checkDownloadSchedule, rule, isCurrent, isAllowCellularIfCurrent,  IsOkToDownloadRealtime, %s",  buf,  0xCu);
        if (v45 < 0) {
          operator delete(__p[0]);
        }
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(__p, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101884558);
        }
        uint64_t v13 = qword_101934A78;
        (*(void (**)(_BYTE *__return_ptr, _BYTE *))(*(void *)a2 + 16LL))(buf, a2);
        if (v41 >= 0) {
          uint64_t v14 = buf;
        }
        else {
          uint64_t v14 = *(_BYTE **)buf;
        }
        int v42 = 136315138;
        unsigned int v43 = v14;
        _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v13,  2LL,  "WIFITILE: checkDownloadSchedule, rule, isCurrent, isAllowCellularIfCurrent,  IsOkToDownloadRealtime, %s",  (const char *)&v42);
        uint64_t v16 = v15;
        if (v41 < 0) {
          operator delete(*(void **)buf);
        }
LABEL_101:
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "int CLWifiTilesManager::getDownloadConnectionType(CLTileFile *)",  "%s\n",  v16);
        return !*(_BYTE *)(a1 + 160);
      }

      return !*(_BYTE *)(a1 + 160);
    }

    if (!*(_BYTE *)(v8 + 177)) {
      char v9 = 1;
    }
    if ((v9 & 1) == 0)
    {
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101884558);
      }
      __int16 v23 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        (*(void (**)(void **__return_ptr, _BYTE *))(*(void *)a2 + 16LL))(__p, a2);
        int v24 = v45 >= 0 ? __p : (void **)__p[0];
        *(_DWORD *)std::stringbuf::string_type buf = 136315138;
        *(void *)&uint8_t buf[4] = v24;
        _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEBUG,  "WIFITILE: checkDownloadSchedule, rule, isCurrent, fDownloadCurrentTileOverCell, IsOkToDownloadRealtime, %s",  buf,  0xCu);
        if (v45 < 0) {
          operator delete(__p[0]);
        }
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(__p, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101884558);
        }
        uint64_t v34 = qword_101934A78;
        (*(void (**)(_BYTE *__return_ptr, _BYTE *))(*(void *)a2 + 16LL))(buf, a2);
        if (v41 >= 0) {
          __int128 v35 = buf;
        }
        else {
          __int128 v35 = *(_BYTE **)buf;
        }
        int v42 = 136315138;
        unsigned int v43 = v35;
        _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v34,  2LL,  "WIFITILE: checkDownloadSchedule, rule, isCurrent, fDownloadCurrentTileOverCell, IsOkToDownloadRealtime, %s",  (const char *)&v42);
        uint64_t v16 = v36;
        if (v41 < 0) {
          operator delete(*(void **)buf);
        }
        goto LABEL_101;
      }

      return !*(_BYTE *)(a1 + 160);
    }

    if (v7)
    {
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101884558);
      }
      int v32 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        (*(void (**)(void **__return_ptr, _BYTE *))(*(void *)a2 + 16LL))(__p, a2);
        __int16 v33 = v45 >= 0 ? __p : (void **)__p[0];
        *(_DWORD *)std::stringbuf::string_type buf = 136315138;
        *(void *)&uint8_t buf[4] = v33;
        _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEBUG,  "WIFITILE: checkDownloadSchedule, rule, isCurrent, IsOkToDownloadLarge, %s",  buf,  0xCu);
        if (v45 < 0) {
          operator delete(__p[0]);
        }
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_91;
      }
      bzero(__p, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101884558);
      }
      uint64_t v37 = qword_101934A78;
      (*(void (**)(_BYTE *__return_ptr, _BYTE *))(*(void *)a2 + 16LL))(buf, a2);
      if (v41 >= 0) {
        uint64_t v38 = buf;
      }
      else {
        uint64_t v38 = *(_BYTE **)buf;
      }
      int v42 = 136315138;
      unsigned int v43 = v38;
      _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v37,  2LL,  "WIFITILE: checkDownloadSchedule, rule, isCurrent, IsOkToDownloadLarge, %s",  (const char *)&v42);
      __int16 v31 = v39;
      if (v41 < 0) {
        operator delete(*(void **)buf);
      }
LABEL_110:
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "int CLWifiTilesManager::getDownloadConnectionType(CLTileFile *)",  "%s\n",  v31);
      goto LABEL_91;
    }

    return 0LL;
  }

  char v17 = !v6;
  if (!a2[113]) {
    char v17 = 1;
  }
  if ((v17 & 1) == 0)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101884558);
    }
    double v18 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      (*(void (**)(void **__return_ptr, _BYTE *))(*(void *)a2 + 16LL))(__p, a2);
      char v19 = v45 >= 0 ? __p : (void **)__p[0];
      *(_DWORD *)std::stringbuf::string_type buf = 136315138;
      *(void *)&uint8_t buf[4] = v19;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEBUG,  "WIFITILE: checkDownloadSchedule, rule, isAllowCellularIfNotCurrent, IsOkToDownloadRealtime, %s",  buf,  0xCu);
      if (v45 < 0) {
        operator delete(__p[0]);
      }
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101884558);
      }
      uint64_t v20 = qword_101934A78;
      (*(void (**)(_BYTE *__return_ptr, _BYTE *))(*(void *)a2 + 16LL))(buf, a2);
      if (v41 >= 0) {
        __int16 v21 = buf;
      }
      else {
        __int16 v21 = *(_BYTE **)buf;
      }
      int v42 = 136315138;
      unsigned int v43 = v21;
      _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v20,  2LL,  "WIFITILE: checkDownloadSchedule, rule, isAllowCellularIfNotCurrent, IsOkToDownloadRealtime, %s",  (const char *)&v42);
      uint64_t v16 = v22;
      if (v41 < 0) {
        operator delete(*(void **)buf);
      }
      goto LABEL_101;
    }

    return !*(_BYTE *)(a1 + 160);
  }

  if (!v7) {
    return 0LL;
  }
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101884558);
  }
  uint64_t v26 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    (*(void (**)(void **__return_ptr, _BYTE *))(*(void *)a2 + 16LL))(__p, a2);
    uint64_t v27 = v45 >= 0 ? __p : (void **)__p[0];
    *(_DWORD *)std::stringbuf::string_type buf = 136315138;
    *(void *)&uint8_t buf[4] = v27;
    _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEBUG,  "WIFITILE: checkDownloadSchedule, rule, IsOkToDownloadLarge, %s",  buf,  0xCu);
    if (v45 < 0) {
      operator delete(__p[0]);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101884558);
    }
    uint64_t v28 = qword_101934A78;
    (*(void (**)(_BYTE *__return_ptr, _BYTE *))(*(void *)a2 + 16LL))(buf, a2);
    if (v41 >= 0) {
      __int16 v29 = buf;
    }
    else {
      __int16 v29 = *(_BYTE **)buf;
    }
    int v42 = 136315138;
    unsigned int v43 = v29;
    _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v28,  2LL,  "WIFITILE: checkDownloadSchedule, rule, IsOkToDownloadLarge, %s",  (const char *)&v42);
    __int16 v31 = v30;
    if (v41 < 0) {
      operator delete(*(void **)buf);
    }
    goto LABEL_110;
  }

void *sub_100DF7F60(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a1 + 128);
  uint64_t v3 = (void *)(a1 + 136);
  if (v2 != (void *)(a1 + 136))
  {
    while (sub_10096B584(v2[10]) != a2)
    {
      int v5 = (void *)v2[1];
      if (v5)
      {
        do
        {
          BOOL v6 = v5;
          int v5 = (void *)*v5;
        }

        while (v5);
      }

      else
      {
        do
        {
          BOOL v6 = (void *)v2[2];
          BOOL v7 = *v6 == (void)v2;
          uint64_t v2 = v6;
        }

        while (!v7);
      }

      uint64_t v2 = v6;
      if (v6 == v3) {
        return v3;
      }
    }
  }

  return v2;
}

id *sub_100DF7FE4(uint64_t a1, uint64_t a2, int a3)
{
  char v9 = sub_100DF7F60(a1, a2);
  if ((void *)(a1 + 136) == v9)
  {
    HIDWORD(v5_Block_object_dispose(va, 8) = 0;
  }

  else
  {
    char v10 = (_DWORD *)v9[10];
    HIDWORD(v5_Block_object_dispose(va, 8) = 0;
    if (v10)
    {
      uint64_t v11 = *(void *)(sub_10096B584((uint64_t)v10) + 96);
      double v12 = (*(double (**)(void))(**(void **)(a1 + 448) + 56LL))(*(void *)(a1 + 448));
      double v13 = v12;
      uint64_t v14 = a1 + 456;
      if ((a3 & 1) != 0 || v11 == -1100) {
        id v15 = sub_100BD8374(v14);
      }
      else {
        sub_100BD83A0(v14, v12);
      }
      if (v10[12])
      {
        sub_1012718F8( (uint64_t)v15,  v16,  v17,  v18,  v19,  v20,  v21,  v22,  v55,  v56,  v57,  v58,  v59,  v60,  *(uint64_t *)v61,  *(uint64_t *)&v61[8],  *(uint64_t *)&v61[16],  v62,  *((uint64_t *)&v62 + 1),  v63,  *(uint64_t *)__p,  *(uint64_t *)&__p[8],  *(uint64_t *)&__p[16],  *(uint64_t *)v65);
        abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/Tiles/CLWifiTilesManager.mm",  1016,  "tileDownloadCompleted");
        __break(1u);
      }

      else
      {
        uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 224LL))(a1);
        if (a3)
        {
          if ((_os_feature_enabled_impl("CoreLocation", "TilesService") & 1) != 0) {
            int v5 = 1;
          }
          else {
            int v5 = (*(uint64_t (**)(_DWORD *, char *))(*(void *)v10 + 40LL))(v10, (char *)&v58 + 4);
          }
        }

        else
        {
          int v5 = 0;
        }

        p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
        if (qword_101934A70 == -1) {
          goto LABEL_24;
        }
      }

      dispatch_once(&qword_101934A70, &stru_101884558);
LABEL_24:
      uint64_t v26 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        int v27 = v5;
        (*(void (**)(_BYTE *__return_ptr, _DWORD *))(*(void *)v10 + 16LL))(__p, v10);
        int v28 = __p[23];
        __int16 v29 = *(_BYTE **)__p;
        uint64_t v30 = *(void *)(sub_10096B584((uint64_t)v10) + 96);
        int v31 = *(_DWORD *)(a1 + 408);
        int v32 = __p;
        if (v28 < 0) {
          int v32 = v29;
        }
        int v33 = *(unsigned __int8 *)(a1 + 216);
        *(_DWORD *)std::stringbuf::string_type buf = 136316674;
        *(void *)&uint8_t buf[4] = v32;
        __int16 v67 = 1024;
        int v5 = v27;
        *(_DWORD *)double v68 = v27;
        *(_WORD *)&v68[4] = 1024;
        *(_DWORD *)&v68[6] = v30;
        *(_WORD *)double v69 = 1024;
        *(_DWORD *)&v69[2] = v11 == -1100;
        *(_WORD *)int v70 = 1024;
        *(_DWORD *)&v70[2] = v31;
        __int16 v71 = 1024;
        int v72 = v33;
        __int16 v73 = 1024;
        int v74 = HIDWORD(v58);
        _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEBUG,  "WIFITILE: tileDownloadCompleted, tile, %s, download done, success, %d, NSURLErrorCode, %d, tileDoesNotExist, % d, reachability, %d, locked, %d, fileSize, %d",  buf,  0x30u);
        if ((__p[23] & 0x80000000) != 0) {
          operator delete(*(void **)__p);
        }
        p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        uint64_t v40 = qword_101934A78;
        (*(void (**)(_BYTE *__return_ptr, _DWORD *))(*(void *)v10 + 16LL))(v61, v10);
        int v41 = v61[23];
        int v42 = *(_BYTE **)v61;
        uint64_t v43 = *(void *)(sub_10096B584((uint64_t)v10) + 96);
        int v44 = *(_DWORD *)(a1 + 408);
        char v45 = v61;
        if (v41 < 0) {
          char v45 = v42;
        }
        int v46 = *(unsigned __int8 *)(a1 + 216);
        *(_DWORD *)std::string __p = 136316674;
        *(void *)&__p[4] = v45;
        *(_WORD *)&_BYTE __p[12] = 1024;
        *(_DWORD *)&_BYTE __p[14] = v5;
        *(_WORD *)&_BYTE __p[18] = 1024;
        *(_DWORD *)&__p[20] = v43;
        *(_WORD *)uint64_t v65 = 1024;
        *(_DWORD *)&v65[2] = v11 == -1100;
        *(_WORD *)&v65[6] = 1024;
        *(_DWORD *)&v65[8] = v44;
        *(_WORD *)&_BYTE v65[12] = 1024;
        *(_DWORD *)&v65[14] = v46;
        *(_WORD *)&v65[18] = 1024;
        *(_DWORD *)&v65[20] = HIDWORD(v58);
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v40,  2LL,  "WIFITILE: tileDownloadCompleted, tile, %s, download done, success, %d, NSURLErrorCode, %d, tileDoesNotExist, % d, reachability, %d, locked, %d, fileSize, %d",  __p,  48,  v57,  v58,  v59,  v60,  *(_DWORD *)v61);
        char v48 = v47;
        if ((v61[23] & 0x80000000) != 0) {
          operator delete(*(void **)v61);
        }
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::tileDownloadCompleted(CLFileDownload *, BOOL, void *)",  "%s\n",  v48);
        if (v48 != buf) {
          free(v48);
        }
      }

      *(_OWORD *)std::string __p = *((_OWORD *)v10 + 3);
      *(void *)&__p[16] = *((void *)v10 + 8);
      if (*((char *)v10 + 95) < 0)
      {
        sub_1010DD48C(v65, *((void **)v10 + 9), *((void *)v10 + 10));
      }

      else
      {
        *(_OWORD *)uint64_t v65 = *(_OWORD *)(v10 + 18);
        *(void *)&v65[16] = *((void *)v10 + 11);
      }

      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101884538);
      }
      uint64_t v34 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
      {
        double v35 = sub_1008ADB4C((uint64_t)__p);
        double v36 = sub_1008ADB70((uint64_t)__p);
        uint64_t v37 = *(void *)(sub_10096B584((uint64_t)v10) + 96);
        *(_DWORD *)std::stringbuf::string_type buf = 134284289;
        *(double *)&uint8_t buf[4] = v35;
        __int16 v67 = 2049;
        *(double *)double v68 = v36;
        *(_WORD *)&v68[8] = 1026;
        *(_DWORD *)double v69 = v5;
        *(_WORD *)&v69[4] = 1026;
        *(_DWORD *)int v70 = v37;
        _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEFAULT,  "@TileReq, wifi, downloaded, llsw, %{private}.2lf, %{private}.2lf, success, %{public}d, NSURLErrorCode, %{public}d",  buf,  0x22u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101884538);
        }
        uint64_t v49 = qword_101934858;
        double v50 = sub_1008ADB4C((uint64_t)__p);
        double v51 = sub_1008ADB70((uint64_t)__p);
        uint64_t v52 = *(void *)(sub_10096B584((uint64_t)v10) + 96);
        *(_DWORD *)__int16 v61 = 134284289;
        *(double *)&v61[4] = v50;
        *(_WORD *)&v61[12] = 2049;
        *(double *)&v61[14] = v51;
        *(_WORD *)&v61[22] = 1026;
        LODWORD(v62) = v5;
        WORD2(v62) = 1026;
        *(_DWORD *)((char *)&v62 + sub_1002D62D8(v1 + 6) = v52;
        LODWORD(v5sub_1002D62D8(v1 + 6) = 34;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v49,  0LL,  "@TileReq, wifi, downloaded, llsw, %{private}.2lf, %{private}.2lf, success, %{public}d, NSURLErrorCode, %{public}d",  v61,  v56);
        __int16 v54 = (char *)v53;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::tileDownloadCompleted(CLFileDownload *, BOOL, void *)",  "%s\n",  v53);
        if (v54 != buf) {
          free(v54);
        }
      }

      if (v5)
      {
        int v38 = HIDWORD(v58);
        (*(void (**)(uint64_t))(*(void *)(v3 + 232) + 16LL))(v3 + 232);
        *(_DWORD *)(v3 + 276) += v38;
        (*(void (**)(uint64_t))(*(void *)(v3 + 232) + 24LL))(v3 + 232);
        (*(void (**)(uint64_t))(*(void *)(v3 + 232) + 16LL))(v3 + 232);
        ++*(_DWORD *)(v3 + 284);
        (*(void (**)(uint64_t))(*(void *)(v3 + 232) + 24LL))(v3 + 232);
        sub_1010DDBC0(buf, "tileDownloadCompleted");
        sub_100987188(v3 + 232, (uint64_t *)buf, *(_DWORD *)(a1 + 408));
        if ((v68[9] & 0x80000000) != 0) {
          operator delete(*(void **)buf);
        }
      }

      sub_100DF88D0(a1, a2, v5, v13);
      if ((v65[23] & 0x80000000) != 0) {
        operator delete(*(void **)v65);
      }
      return sub_1001BA1BC((id *)&v59);
    }
  }

  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101884538);
  }
  __int16 v23 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 134349056;
    *(void *)&uint8_t buf[4] = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_ERROR,  "WifiTile, where did this download request come from?, download, %{public}p, #CloneMe",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101884538);
    }
    *(_DWORD *)std::string __p = 134349056;
    *(void *)&__p[4] = a2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  16LL,  "WifiTile, where did this download request come from?, download, %{public}p, #CloneMe",  __p,  12);
    __int16 v25 = (char *)v24;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLWifiTilesManager::tileDownloadCompleted(CLFileDownload *, BOOL, void *)",  "%s\n",  v24);
    if (v25 != buf) {
      free(v25);
    }
  }

  return sub_1001BA1BC((id *)&v59);
}

void sub_100DF8818( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, __int16 a18, char a19, char a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, int a26, __int16 a27, char a28, char a29, void *__p, uint64_t a31, int a32, __int16 a33, char a34, char a35, void *a36, uint64_t a37, int a38, __int16 a39, char a40, char a41)
{
  if (a35 < 0) {
    operator delete(__p);
  }
  sub_1001BA1BC(&a13);
  _Unwind_Resume(a1);
}

void sub_100DF88D0(uint64_t a1, uint64_t a2, int a3, double a4)
{
  char v10 = sub_100DF7F60(a1, a2);
  if ((uint64_t *)(a1 + 136) == v10)
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101884538);
    }
    uint64_t v14 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134349056;
      *(void *)&uint8_t buf[4] = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_ERROR,  "WifiTile, tileDecompressionCompleted, no tile for download, %{public}p, #CloneMe",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101884538);
      }
      *(_DWORD *)std::string __p = 134349056;
      *(void *)&__p[4] = a2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  16LL,  "WifiTile, tileDecompressionCompleted, no tile for download, %{public}p, #CloneMe",  __p,  12);
      uint64_t v16 = (char *)v15;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLWifiTilesManager::tileDecompressionCompleted(CLFileDownload *, BOOL, void *, CFAbsoluteTime)",  "%s\n",  v15);
      if (v16 != buf) {
        free(v16);
      }
    }
  }

  else
  {
    uint64_t v11 = v10;
    LODWORD(vsub_10046D318(v1 + 12) = a1 + 128;
    uint64_t v13 = v10[10];
    if (v13)
    {
      if (*(_DWORD *)(v13 + 48))
      {
        sub_101271E84();
      }

      else
      {
        uint64_t v106 = (char *)(a1 + 128);
        uint64_t v107 = (uint64_t)(v10 + 4);
        uint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 224LL))(a1);
        HIDWORD(v105) = *(_DWORD *)(a1 + 408);
        if (*(void *)(a1 + 176) == a2)
        {
          unsigned int v109 = 0;
          uint64_t v110 = a1 + 152;
LABEL_23:
          uint64_t v5 = *(void *)(sub_10096B584(v13) + 96);
          p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
          if (qword_101934A70 != -1) {
            dispatch_once(&qword_101934A70, &stru_101884558);
          }
          uint64_t v19 = (os_log_s *)qword_101934A78;
          if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
          {
            (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)v13 + 16LL))(__p, v13);
            uint64_t v20 = v12;
            int v21 = SHIBYTE(v131);
            uint64_t v22 = *(_BYTE **)__p;
            uint64_t v23 = *(void *)(sub_10096B584(v13) + 96);
            int v24 = __p;
            int v25 = *(_DWORD *)(a1 + 408);
            if (v21 < 0) {
              int v24 = v22;
            }
            *(_DWORD *)std::stringbuf::string_type buf = 136316162;
            *(void *)&uint8_t buf[4] = v24;
            __int16 v141 = 1024;
            *(_DWORD *)double v142 = a3;
            *(_WORD *)&v142[4] = 1024;
            *(_DWORD *)&_BYTE v142[6] = v23;
            *(_WORD *)uint64_t v143 = 1024;
            *(_DWORD *)&v143[2] = v5 == -1100;
            *(_WORD *)&_BYTE v143[6] = 1024;
            *(_DWORD *)&v143[8] = v25;
            _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEBUG,  "WIFITILE: tileDecompressionCompleted, tile, %s, decompress done, tileDownloadWasSuccessful, %d, NSURLError Code, %d, tileDoesNotExist, %d, reachability, %d",  buf,  0x24u);
            if (SHIBYTE(v131) < 0) {
              operator delete(*(void **)__p);
            }
            uint64_t v12 = v20;
            p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
          }

          if (!sub_1002921D0(115, 2)) {
            goto LABEL_32;
          }
          bzero(buf, 0x65CuLL);
          if (qword_101934A70 == -1)
          {
LABEL_107:
            uint64_t v61 = qword_101934A78;
            (*(void (**)(void **__return_ptr, uint64_t))(*(void *)v13 + 16LL))(v113, v13);
            int v104 = v12;
            int v62 = SHIBYTE(v114);
            uint64_t v63 = (void **)v113[0];
            uint64_t v64 = *(void *)(sub_10096B584(v13) + 96);
            uint64_t v65 = v113;
            int v66 = *(_DWORD *)(a1 + 408);
            if (v62 < 0) {
              uint64_t v65 = v63;
            }
            *(_DWORD *)std::string __p = 136316162;
            *(void *)&__p[4] = v65;
            __int16 v128 = 1024;
            int v129 = a3;
            __int16 v130 = 1024;
            int v131 = v64;
            __int16 v132 = 1024;
            *(_DWORD *)__int16 v133 = v5 == -1100;
            *(_WORD *)&v133[4] = 1024;
            *(_DWORD *)&v133[6] = v66;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v61,  2LL,  "WIFITILE: tileDecompressionCompleted, tile, %s, decompress done, tileDownloadWasSuccessful, %d, NSURLError Code, %d, tileDoesNotExist, %d, reachability, %d",  __p,  36,  v104,  LODWORD(v105),  (_DWORD)v106);
            double v68 = v67;
            if (SHIBYTE(v114) < 0) {
              operator delete(v113[0]);
            }
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::tileDecompressionCompleted(CLFileDownload *, BOOL, void *, CFAbsoluteTime)",  "%s\n",  v68);
            uint64_t v12 = v103;
            if (v68 != buf) {
              free(v68);
            }
LABEL_32:
            char v117 = sub_100C102DC(v13, a3, v5 == -1100, a4);
            (*(void (**)(uint64_t))(*(void *)a2 + 24LL))(a2);
            *(_BYTE *)(v110 + _Block_object_dispose(va, 8) = 0;
            uint64_t v26 = (os_log_s *)qword_101934A78;
            if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
            {
              (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)v13 + 16LL))(__p, v13);
              int v27 = v131 >= 0 ? __p : *(_BYTE **)__p;
              int v28 = *(_DWORD *)(a1 + 408);
              int v29 = *(unsigned __int8 *)(a1 + 216);
              double v30 = a4 - *(double *)(v110 + 16);
              uint64_t v31 = *(void *)v110;
              int v32 = *(unsigned __int8 *)(a1 + 160);
              int v33 = *(unsigned __int8 *)(a1 + 192);
              *(_DWORD *)std::stringbuf::string_type buf = 136316674;
              *(void *)&uint8_t buf[4] = v27;
              __int16 v141 = 1024;
              *(_DWORD *)double v142 = v28;
              *(_WORD *)&v142[4] = 1024;
              *(_DWORD *)&_BYTE v142[6] = v29;
              *(_WORD *)uint64_t v143 = 2048;
              *(double *)&v143[2] = v30;
              *(_WORD *)&v143[10] = 2080;
              uint64_t v144 = v31;
              __int16 v145 = 1024;
              int v146 = v32;
              __int16 v147 = 1024;
              int v148 = v33;
              _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEBUG,  "WIFITILE: tileDecompressionCompleted, tile, %s, reachability, %d, isLocked, %d, downloadDuration, %.1lf, downloadState, %s, progress, s, %d, l, %d",  buf,  0x38u);
              if (SHIBYTE(v131) < 0) {
                operator delete(*(void **)__p);
              }
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              uint64_t v69 = qword_101934A78;
              (*(void (**)(void **__return_ptr, uint64_t))(*(void *)v13 + 16LL))(v113, v13);
              if (v114 >= 0) {
                int v70 = v113;
              }
              else {
                int v70 = (void **)v113[0];
              }
              int v71 = *(_DWORD *)(a1 + 408);
              int v72 = *(unsigned __int8 *)(a1 + 216);
              double v73 = a4 - *(double *)(v110 + 16);
              uint64_t v74 = *(void *)v110;
              int v75 = *(unsigned __int8 *)(a1 + 160);
              int v76 = *(unsigned __int8 *)(a1 + 192);
              *(_DWORD *)std::string __p = 136316674;
              *(void *)&__p[4] = v70;
              __int16 v128 = 1024;
              int v129 = v71;
              __int16 v130 = 1024;
              int v131 = v72;
              __int16 v132 = 2048;
              *(double *)__int16 v133 = v73;
              *(_WORD *)&v133[8] = 2080;
              uint64_t v134 = v74;
              __int16 v135 = 1024;
              int v136 = v75;
              __int16 v137 = 1024;
              int v138 = v76;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v69,  2LL,  "WIFITILE: tileDecompressionCompleted, tile, %s, reachability, %d, isLocked, %d, downloadDuration, %.1lf, downloadState, %s, progress, s, %d, l, %d",  __p,  56,  v103,  v105,  v106,  v107,  v108);
              uint64_t v78 = v77;
              if (SHIBYTE(v114) < 0) {
                operator delete(v113[0]);
              }
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::tileDecompressionCompleted(CLFileDownload *, BOOL, void *, CFAbsoluteTime)",  "%s\n",  v78);
              if (v78 != buf) {
                free(v78);
              }
            }

            sub_100DF9CF0(a1, v117, (_DWORD *)v13, v12);
            if (sub_100E575B0())
            {
              sub_1002A5370(buf);
              uint64_t v34 = (char *)(v13 + 8);
              sub_1002ACA84((uint64_t)buf, "gotTile", v34);
              sub_1002AB3FC((uint64_t)buf, "success", &v117);
              sub_1002AB3FC((uint64_t)buf, "protection", (_BYTE *)(a1 + 216));
              sub_100E57614((uint64_t)buf, (uint64_t)"locationd");
              sub_1002A5590(buf);
            }

            if (v117)
            {
              uint64_t v35 = v11[10];
              v11[10] = 0LL;
              *(_OWORD *)__int16 v113 = *(_OWORD *)(v35 + 48);
              uint64_t v114 = *(void *)(v35 + 64);
              if (*(char *)(v35 + 95) < 0)
              {
                sub_1010DD48C(&v115, *(void **)(v35 + 72), *(void *)(v35 + 80));
              }

              else
              {
                __int128 v115 = *(_OWORD *)(v35 + 72);
                uint64_t v116 = *(void *)(v35 + 88);
              }

              sub_1000087E8((uint64_t **)v106, v11);
              sub_1006035CC(v107);
              operator delete(v11);
              double v36 = (uint64_t **)(v12 + 184);
              if (sub_10060238C(v12 + 184, (unsigned int *)v113))
              {
                uint64_t v37 = sub_1006025CC(v12 + 184, (unsigned int *)v113);
                uint64_t v38 = v12;
                std::stringbuf::string_type v39 = (os_log_s *)qword_101934A78;
                if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
                {
                  (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)v37 + 16LL))(buf, v37);
                  uint64_t v40 = v142[9] >= 0 ? buf : *(_BYTE **)buf;
                  *(_DWORD *)std::string __p = 136315138;
                  *(void *)&__p[4] = v40;
                  _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_DEBUG,  "WIFITILE: tileDecompressionCompleted, replacing from, %s",  __p,  0xCu);
                  if ((v142[9] & 0x80000000) != 0) {
                    operator delete(*(void **)buf);
                  }
                }

                if (sub_1002921D0(115, 2))
                {
                  bzero(buf, 0x65CuLL);
                  uint64_t v81 = qword_101934A78;
                  (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)v37 + 16LL))(__p, v37);
                  if (v131 >= 0) {
                    uint64_t v82 = __p;
                  }
                  else {
                    uint64_t v82 = *(_BYTE **)__p;
                  }
                  *(_DWORD *)uint64_t v118 = 136315138;
                  *(void *)&v118[4] = v82;
                  _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v81,  2LL,  "WIFITILE: tileDecompressionCompleted, replacing from, %s",  v118);
                  double v84 = v83;
                  if (SHIBYTE(v131) < 0) {
                    operator delete(*(void **)__p);
                  }
                  sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::tileDecompressionCompleted(CLFileDownload *, BOOL, void *, CFAbsoluteTime)",  "%s\n",  v84);
                  if (v84 != buf) {
                    free(v84);
                  }
                }

                int v41 = (os_log_s *)qword_101934A78;
                if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
                {
                  (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)v35 + 16LL))(buf, v35);
                  int v42 = v142[9] >= 0 ? buf : *(_BYTE **)buf;
                  *(_DWORD *)std::string __p = 136315138;
                  *(void *)&__p[4] = v42;
                  _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_DEBUG,  "WIFITILE: tileDecompressionCompleted, replacing to, %s",  __p,  0xCu);
                  if ((v142[9] & 0x80000000) != 0) {
                    operator delete(*(void **)buf);
                  }
                }

                uint64_t v12 = v38;
                if (sub_1002921D0(115, 2))
                {
                  bzero(buf, 0x65CuLL);
                  uint64_t v85 = qword_101934A78;
                  (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)v35 + 16LL))(__p, v35);
                  if (v131 >= 0) {
                    id v86 = __p;
                  }
                  else {
                    id v86 = *(_BYTE **)__p;
                  }
                  *(_DWORD *)uint64_t v118 = 136315138;
                  *(void *)&v118[4] = v86;
                  _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v85,  2LL,  "WIFITILE: tileDecompressionCompleted, replacing to, %s",  v118);
                  std::string v88 = v87;
                  if (SHIBYTE(v131) < 0) {
                    operator delete(*(void **)__p);
                  }
                  sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::tileDecompressionCompleted(CLFileDownload *, BOOL, void *, CFAbsoluteTime)",  "%s\n",  v88);
                  if (v88 != buf) {
                    free(v88);
                  }
                  uint64_t v12 = v38;
                }

                sub_100F7C670(*(void *)(a1 + 480), v37 + 48);
                sub_100602D1C(v36, (unsigned int *)v113);
              }

              sub_100C0FCEC(v35, &v112);
              sub_100DFA11C(*(void *)(a1 + 480), &v112, (uint64_t)__p, a4);
              if (v139 && sub_100924384((uint64_t *)__p))
              {
                uint64_t v111 = v35;
                sub_100DFA1F8(a1, &v111, (unsigned int *)__p, a4);
                uint64_t v43 = v111;
                uint64_t v111 = 0LL;
                if (v43) {
                  (*(void (**)(uint64_t))(*(void *)v43 + 8LL))(v43);
                }
                if ((v112.__r_.__value_.__s.__size_ & 0x80u) == 0) {
                  int v44 = &v112;
                }
                else {
                  int v44 = (std::string *)v112.__r_.__value_.__r.__words[0];
                }
                sub_100292D50((const char *)v44);
                uint64_t v45 = sub_1006025CC((uint64_t)v36, (unsigned int *)v113);
                uint64_t v46 = v12;
                uint64_t v47 = (os_log_s *)qword_101934A78;
                if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
                {
                  char v48 = p_vtable;
                  (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)v45 + 16LL))(buf, v45);
                  int v49 = v142[9];
                  double v50 = *(_BYTE **)buf;
                  uint64_t v51 = sub_100019240((uint64_t)v36);
                  uint64_t v52 = buf;
                  if (v49 < 0) {
                    uint64_t v52 = v50;
                  }
                  *(_DWORD *)uint64_t v118 = 136315394;
                  *(void *)&v118[4] = v52;
                  __int16 v119 = 2048;
                  double v120 = *(double *)&v51;
                  _os_log_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_DEBUG,  "WIFITILE: tileDecompressionCompleted, added, tileid, %s, tilesMap.size, %lu",  v118,  0x16u);
                  if ((v142[9] & 0x80000000) != 0) {
                    operator delete(*(void **)buf);
                  }
                  p_vtable = v48;
                }

                uint64_t v12 = v46;
                if (sub_1002921D0(115, 2))
                {
                  bzero(buf, 0x65CuLL);
                  uint64_t v89 = qword_101934A78;
                  (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)v45 + 16LL))(v118, v45);
                  int v90 = SHIBYTE(v121);
                  int v91 = *(_BYTE **)v118;
                  uint64_t v92 = sub_100019240((uint64_t)v36);
                  uint64_t v93 = v118;
                  if (v90 < 0) {
                    uint64_t v93 = v91;
                  }
                  int v123 = 136315394;
                  unsigned int v124 = v93;
                  __int16 v125 = 2048;
                  uint64_t v126 = v92;
                  LODWORD(v102) = 22;
                  _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v89,  2LL,  "WIFITILE: tileDecompressionCompleted, added, tileid, %s, tilesMap.size, %lu",  (const char *)&v123,  v102);
                  __int16 v95 = v94;
                  if (SHIBYTE(v121) < 0) {
                    operator delete(*(void **)v118);
                  }
                  sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::tileDecompressionCompleted(CLFileDownload *, BOOL, void *, CFAbsoluteTime)",  "%s\n",  v95);
                  if (v95 != buf) {
                    free(v95);
                  }
                  uint64_t v12 = v46;
                }

                uint64_t v53 = *(void *)(a1 + 496);
                double v54 = sub_1008ADB4C((uint64_t)v113);
                double v55 = sub_1008ADB70((uint64_t)v113);
                (*(void (**)(uint64_t, const char *, double, double))(*(void *)v53 + 40LL))( v53,  "Download",  v54,  v55);
                if (qword_101934850 != -1) {
                  dispatch_once(&qword_101934850, &stru_101884538);
                }
                uint64_t v56 = (os_log_s *)qword_101934858;
                if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
                {
                  double v57 = sub_1008ADB4C((uint64_t)v113);
                  double v58 = sub_1008ADB70((uint64_t)v113);
                  uint64_t v59 = sub_100019240((uint64_t)v36);
                  *(_DWORD *)std::stringbuf::string_type buf = 134284033;
                  *(double *)&uint8_t buf[4] = v57;
                  __int16 v141 = 2049;
                  *(double *)double v142 = v58;
                  *(_WORD *)&v142[8] = 2050;
                  *(void *)uint64_t v143 = v59;
                  _os_log_impl( (void *)&_mh_execute_header,  v56,  OS_LOG_TYPE_DEFAULT,  "@TileList, wifi, add, llsw, %{private}.2lf, %{private}.2lf, download, size, %{public}lu",  buf,  0x20u);
                }

                if (sub_1002921D0(115, 2))
                {
                  bzero(buf, 0x65CuLL);
                  if (qword_101934850 != -1) {
                    dispatch_once(&qword_101934850, &stru_101884538);
                  }
                  uint64_t v96 = qword_101934858;
                  double v97 = sub_1008ADB4C((uint64_t)v113);
                  double v98 = sub_1008ADB70((uint64_t)v113);
                  uint64_t v99 = sub_100019240((uint64_t)v36);
                  *(_DWORD *)uint64_t v118 = 134284033;
                  *(double *)&v118[4] = v97;
                  __int16 v119 = 2049;
                  double v120 = v98;
                  __int16 v121 = 2050;
                  uint64_t v122 = v99;
                  LODWORD(v102) = 32;
                  _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v96,  0LL,  "@TileList, wifi, add, llsw, %{private}.2lf, %{private}.2lf, download, size, %{public}lu",  v118,  v102);
                  int v101 = (char *)v100;
                  sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::tileDecompressionCompleted(CLFileDownload *, BOOL, void *, CFAbsoluteTime)",  "%s\n",  v100);
                  if (v101 != buf) {
                    free(v101);
                  }
                }

                uint64_t v35 = 0LL;
              }

              else
              {
                if ((v112.__r_.__value_.__s.__size_ & 0x80u) == 0) {
                  uint64_t v60 = &v112;
                }
                else {
                  uint64_t v60 = (std::string *)v112.__r_.__value_.__r.__words[0];
                }
                sub_100C148A0((const char *)v60);
              }

              ++*(_DWORD *)(v12 + 288);
              if (HIDWORD(v105) == 1) {
                ++*(_DWORD *)(v12 + 292);
              }
              (*(void (**)(uint64_t, double))(*(void *)a1 + 232LL))(a1, a4);
              sub_100DF1154(a1, v109, a4);
              if (SHIBYTE(v116) < 0) {
                operator delete((void *)v115);
              }
              if (v35) {
                (*(void (**)(uint64_t))(*(void *)v35 + 8LL))(v35);
              }
            }

            else
            {
              sub_100DF1154(a1, v109, a4);
            }

            return;
          }

void sub_100DF9BCC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20, __int16 a21, char a22, char a23, void *a24, uint64_t a25, uint64_t a26, void *a27, uint64_t a28, int a29, __int16 a30, char a31, char a32)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  if (a32 < 0) {
    operator delete(a27);
  }
  _Unwind_Resume(a1);
}

void sub_100DF9CF0(uint64_t a1, char a2, _DWORD *a3, uint64_t a4)
{
  uint64_t v7 = (uint64_t)(a3 + 12);
  int v6 = a3[12];
  memset(&v27, 0, sizeof(v27));
  memset(__p, 0, sizeof(__p));
  *(_OWORD *)int v25 = 0u;
  v23[0] = a2;
  int v24 = v6;
  std::string::operator=((std::string *)v25, (const std::string *)(a4 + 56));
  sub_1008AE164(v7, &buf);
  if (SHIBYTE(__p[3]) < 0) {
    operator delete(__p[1]);
  }
  *(std::string *)&__p[1] = buf;
  sub_100C0FCEC((uint64_t)a3, &buf);
  std::string v27 = buf;
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101884558);
  }
  uint64_t v8 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    (*(void (**)(_BYTE *__return_ptr, _DWORD *))(*(void *)a3 + 16LL))(v28, a3);
    char v9 = v32 >= 0 ? v28 : *(_BYTE **)v28;
    char v10 = SHIBYTE(__p[0]) >= 0 ? v25 : (void **)v25[0];
    uint64_t v11 = SHIBYTE(__p[3]) >= 0 ? &__p[1] : (void **)__p[1];
    uint64_t v12 = (v27.__r_.__value_.__s.__size_ & 0x80u) == 0 ? &v27 : (std::string *)v27.__r_.__value_.__r.__words[0];
    LODWORD(buf.__r_.__value_.__l.__data_) = 136316418;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v9;
    WORD2(buf.__r_.__value_.__r.__words[1]) = 1024;
    *(_DWORD *)((char *)&buf.__r_.__value_.__r.__words[1] + sub_1002D62D8(v1 + 6) = v23[0];
    WORD1(buf.__r_.__value_.__r.__words[2]) = 1024;
    HIDWORD(buf.__r_.__value_.__r.__words[2]) = v24;
    __int16 v40 = 2080;
    int v41 = v10;
    __int16 v42 = 2080;
    uint64_t v43 = v11;
    __int16 v44 = 2080;
    uint64_t v45 = v12;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "WIFITILE: kNotificationTileWasDownloaded, tileid, %s, tileHeaderParsed, %d, tileType, %d, serverUrl, %s, serverFil ename, %s, absoluteLocalFilename, %s",  (uint8_t *)&buf,  0x36u);
    if (SHIBYTE(v32) < 0) {
      operator delete(*(void **)v28);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101884558);
    }
    uint64_t v13 = qword_101934A78;
    (*(void (**)(void **__return_ptr, _DWORD *))(*(void *)a3 + 16LL))(v21, a3);
    if (SHIBYTE(v22) >= 0) {
      uint64_t v14 = v21;
    }
    else {
      uint64_t v14 = (void **)v21[0];
    }
    if (SHIBYTE(__p[0]) >= 0) {
      id v15 = v25;
    }
    else {
      id v15 = (void **)v25[0];
    }
    if (SHIBYTE(__p[3]) >= 0) {
      uint64_t v16 = &__p[1];
    }
    else {
      uint64_t v16 = (void **)__p[1];
    }
    if ((v27.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v17 = &v27;
    }
    else {
      uint64_t v17 = (std::string *)v27.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)int v28 = 136316418;
    *(void *)&v28[4] = v14;
    __int16 v29 = 1024;
    int v30 = v23[0];
    __int16 v31 = 1024;
    int v32 = v24;
    __int16 v33 = 2080;
    uint64_t v34 = v15;
    __int16 v35 = 2080;
    double v36 = v16;
    __int16 v37 = 2080;
    uint64_t v38 = v17;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v13,  2LL,  "WIFITILE: kNotificationTileWasDownloaded, tileid, %s, tileHeaderParsed, %d, tileType, %d, serverUrl, %s, serverFil ename, %s, absoluteLocalFilename, %s",  v28,  54,  v20,  (const char *)v21[0],  (const char *)v21[1],  v22);
    uint64_t v19 = v18;
    if (SHIBYTE(v22) < 0) {
      operator delete(v21[0]);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::sendNotificationTileWasDownloaded(BOOL, const CLTileFile &, const CLTilesSet &)",  "%s\n",  (const char *)v19);
    if (v19 != &buf) {
      free(v19);
    }
  }

  LODWORD(buf.__r_.__value_.__l.__data_) = 0;
  (*(void (**)(uint64_t, std::string *, _BYTE *, void, uint64_t, void))(*(void *)a1 + 152LL))( a1,  &buf,  v23,  0LL,  0xFFFFFFFFLL,  0LL);
  if (SHIBYTE(__p[3]) < 0) {
    operator delete(__p[1]);
  }
  if (SHIBYTE(__p[0]) < 0) {
    operator delete(v25[0]);
  }
}

void sub_100DFA0F0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_100DFA11C@<X0>(uint64_t a1@<X0>, const std::string *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  return sub_100F7BF04(a1, a2, a3, a4);
}

BOOL sub_100DFA1F8(uint64_t a1, uint64_t *a2, unsigned int *a3, double a4)
{
  if (*(_DWORD *)(*a2 + 48))
  {
    sub_1012720F0();
    __break(1u);
LABEL_20:
    dispatch_once(&qword_101934860, &stru_101884578);
    goto LABEL_9;
  }

  uint64_t v9 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 224LL))(a1);
  sub_100C121BC(*a2, 0, a3, a4);
  uint64_t v10 = *a2;
  __int128 v21 = *(_OWORD *)(*a2 + 48);
  uint64_t v22 = *(void *)(v10 + 64);
  if (*(char *)(v10 + 95) < 0)
  {
    sub_1010DD48C(&v23, *(void **)(v10 + 72), *(void *)(v10 + 80));
  }

  else
  {
    __int128 v23 = *(_OWORD *)(v10 + 72);
    uint64_t v24 = *(void *)(v10 + 88);
  }

  BOOL v4 = sub_1008AD1E0((unsigned int *)&v21);
  if (v4)
  {
    uint64_t v11 = sub_100603294((uint64_t **)(v9 + 184), (unsigned int *)&v21);
    uint64_t v12 = *a2;
    *a2 = 0LL;
    uint64_t v13 = *v11;
    uint64_t *v11 = v12;
    if (v13) {
      (*(void (**)(uint64_t))(*(void *)v13 + 8LL))(v13);
    }
    goto LABEL_16;
  }

  p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
  if (qword_101934860 != -1) {
    goto LABEL_20;
  }
LABEL_9:
  uint64_t v14 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_FAULT))
  {
    sub_1008AD840((unsigned int *)&v21, __p);
    id v15 = (__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0
        ? __p
        : (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
    LODWORD(buf.__r_.__value_.__l.__data_) = 136380675;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v15;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "Invalid tile ID in updateTileFileObject: %{private}s, #CloneMe",  (uint8_t *)&buf,  0xCu);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(__p, 0x65CuLL);
    uint64_t v17 = qword_101934868;
    sub_1008AD840((unsigned int *)&v21, &buf);
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_std::stringbuf::string_type buf = &buf;
    }
    else {
      p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    int v26 = 136380675;
    std::string v27 = p_buf;
    _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v17,  17LL,  "Invalid tile ID in updateTileFileObject: %{private}s, #CloneMe",  &v26,  12,  v21,  v22,  v23,  v24);
    int v20 = v19;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLWifiTilesManager::updateTileFileObject(std::unique_ptr<CLTileFile>, const CLWifiTileHeaderEntry &, CFAbsoluteTime)",  "%s\n",  (const char *)v20);
    if (v20 != __p) {
      free(v20);
    }
  }

void sub_100DFA4E4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

id *sub_100DFA514(uint64_t a1)
{
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101884558);
  }
  uint64_t v2 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    int v3 = *(unsigned __int8 *)(a1 + 56);
    *(_DWORD *)std::stringbuf::string_type buf = 67109120;
    int v10 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "WIFITILE: _tileDownloadCompleted, success, %d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101884558);
    }
    int v5 = *(unsigned __int8 *)(a1 + 56);
    v8[0] = 67109120;
    v8[1] = v5;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "WIFITILE: _tileDownloadCompleted, success, %d",  v8);
    uint64_t v7 = (uint8_t *)v6;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLWifiTilesManager::_tileDownloadCompleted(CLFileDownload *, BOOL, void *)_block_invoke",  "%s\n",  v6);
    if (v7 != buf) {
      free(v7);
    }
  }

  return sub_100DF7FE4(*(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned __int8 *)(a1 + 56));
}

void sub_100DFA6D4(uint64_t a1, uint64_t a2, _BYTE *a3, double a4)
{
  *(_OWORD *)std::stringbuf::string_type buf = *(_OWORD *)(a2 + 48);
  *(void *)&uint8_t buf[16] = *(void *)(a2 + 64);
  if (*(char *)(a2 + 95) < 0)
  {
    sub_1010DD48C(&buf[24], *(void **)(a2 + 72), *(void *)(a2 + 80));
  }

  else
  {
    *(_OWORD *)&_BYTE buf[24] = *(_OWORD *)(a2 + 72);
    int v32 = *(const char **)(a2 + 88);
  }

  sub_100E0023C((uint64_t)v24, (uint64_t)buf, 1LL);
  if (SHIBYTE(v32) < 0) {
    operator delete(*(void **)&buf[24]);
  }
  sub_100F79220(*(void *)(a1 + 480), v24, (unint64_t)*(double *)&qword_101991110, &v22, a4);
  if (v23 - v22 != 56)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101884558);
    }
    uint64_t v14 = (os_log_s *)qword_101934A78;
    p_vtable = (void **)"assert";
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289795;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&_BYTE buf[18] = 2050;
      *(void *)&buf[20] = 0x6DB6DB6DB6DB6DB7LL * ((v23 - v22) >> 3);
      *(_WORD *)&_BYTE buf[28] = 2082;
      *(void *)&buf[30] = "assert";
      *(_WORD *)&_BYTE buf[38] = 2081;
      int v32 = "results.size() == 1";
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Expecting exactly one result from updateAccessTimestampsIfNecessary, size:%{public} lu, event:%{public, location:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x30u);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101884558);
      }
    }

    id v15 = (os_log_s *)qword_101934A78;
    if (os_signpost_enabled((os_log_t)qword_101934A78))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289795;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&_BYTE buf[18] = 2050;
      *(void *)&buf[20] = 0x6DB6DB6DB6DB6DB7LL * ((v23 - v22) >> 3);
      *(_WORD *)&_BYTE buf[28] = 2082;
      *(void *)&buf[30] = "assert";
      *(_WORD *)&_BYTE buf[38] = 2081;
      int v32 = "results.size() == 1";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v15,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Expecting exactly one result from updateAccessTimestampsIfNecessary",  "{msg%{public}.0s:Expecting exactly one result from updateAccessTimestampsIfNecessary, size:%{public} lu, event:%{public, location:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x30u);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101884558);
      }
    }

    uint64_t v9 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289795;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&_BYTE buf[18] = 2050;
      *(void *)&buf[20] = 0x6DB6DB6DB6DB6DB7LL * ((v23 - v22) >> 3);
      *(_WORD *)&_BYTE buf[28] = 2082;
      *(void *)&buf[30] = "assert";
      *(_WORD *)&_BYTE buf[38] = 2081;
      int v32 = "results.size() == 1";
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Expecting exactly one result from updateAccessTimestampsIfNecessary, size:%{public} lu, event:%{public, location:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x30u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/Tiles/CLWifiTilesManager.mm",  2035,  "touchMTime");
    __break(1u);
LABEL_24:
    dispatch_once(&qword_101934850, &stru_101884538);
    goto LABEL_9;
  }

  int v8 = *(unsigned __int8 *)(v22 + 48);
  *a3 = v8;
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = (os_log_s *)(a2 + 48);
  p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
  if (qword_101934850 != -1) {
    goto LABEL_24;
  }
LABEL_9:
  uint64_t v11 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_INFO))
  {
    double v12 = sub_1008ADB4C((uint64_t)v9);
    double v13 = sub_1008ADB70((uint64_t)v9);
    *(_DWORD *)std::stringbuf::string_type buf = 134284033;
    *(double *)&uint8_t buf[4] = v12;
    *(_WORD *)&_BYTE buf[12] = 2049;
    *(double *)&_BYTE buf[14] = v13;
    *(_WORD *)&_BYTE buf[22] = 2050;
    *(double *)&_BYTE buf[24] = a4;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "@TileList, wifi, touch, llsw, %{private}.2lf, %{private}.2lf, time, %{public}.1f",  buf,  0x20u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    uint64_t v16 = qword_101934858;
    double v17 = sub_1008ADB4C((uint64_t)v9);
    double v18 = sub_1008ADB70((uint64_t)v9);
    int v25 = 134284033;
    double v26 = v17;
    __int16 v27 = 2049;
    double v28 = v18;
    __int16 v29 = 2050;
    double v30 = a4;
    LODWORD(v21) = 32;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v16,  1LL,  "@TileList, wifi, touch, llsw, %{private}.2lf, %{private}.2lf, time, %{public}.1f",  &v25,  v21);
    int v20 = (char *)v19;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::touchMTime(CFAbsoluteTime, CLTileFile *, BOOL *)",  "%s\n",  v19);
    if (v20 != buf) {
      free(v20);
    }
  }

void sub_100DFAC34( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, char a16, char *a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, char *a23, uint64_t a24, uint64_t a25, void *__p, uint64_t a27, int a28, __int16 a29, char a30, char a31)
{
  a23 = &a13;
  sub_100E002BC((void ***)&a23);
  sub_100603B94((uint64_t)&a16, a17);
  _Unwind_Resume(a1);
}

void sub_100DFAC90(uint64_t a1, uint64_t a2, unsigned int *a3, uint64_t a4)
{
  if (!*(_BYTE *)(a1 + 413))
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101884538);
    }
    int v32 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEBUG,  "WIFITILE: onLocationNotification, ignore leech when LS off",  buf,  2u);
    }

    if (!sub_1002921D0(115, 2)) {
      return;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101884538);
    }
    *(_WORD *)std::string __p = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "WIFITILE: onLocationNotification, ignore leech when LS off",  __p,  2);
    uint64_t v34 = (uint8_t *)v33;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::onLocationNotification(int, const CLLocationProvider_Type::Notification &, const CLLocati onProvider_Type::NotificationData &)",  "%s\n",  v33);
LABEL_66:
    if (v34 != buf) {
      free(v34);
    }
    return;
  }

  if (!*(_BYTE *)(a1 + 217))
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101884538);
    }
    __int16 v35 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      int v36 = *(unsigned __int8 *)(a1 + 216);
      *(_DWORD *)std::stringbuf::string_type buf = 67240192;
      *(_DWORD *)double v68 = v36;
      _os_log_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_DEBUG,  "WIFITILE: onLocationNotification, index is not available until first unlock, fDataProtectionEnabled, %{public}d",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101884538);
      }
      int v47 = *(unsigned __int8 *)(a1 + 216);
      *(_DWORD *)std::string __p = 67240192;
      *(_DWORD *)&__p[4] = v47;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "WIFITILE: onLocationNotification, index is not available until first unlock, fDataProtectionEnabled, %{public}d",  __p,  8);
      int v49 = (uint8_t *)v48;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::onLocationNotification(int, const CLLocationProvider_Type::Notification &, const CLLoca tionProvider_Type::NotificationData &)",  "%s\n",  v48);
      if (v49 != buf) {
        free(v49);
      }
    }

    if (*a3 == 5)
    {
      __int128 v37 = *(_OWORD *)a4;
      *(_OWORD *)(a1 + 24_Block_object_dispose(va, 8) = *(_OWORD *)(a4 + 16);
      *(_OWORD *)(a1 + 232) = v37;
      __int128 v38 = *(_OWORD *)(a4 + 32);
      __int128 v39 = *(_OWORD *)(a4 + 48);
      __int128 v40 = *(_OWORD *)(a4 + 80);
      *(_OWORD *)(a1 + 29sub_1002D62D8(v1 + 6) = *(_OWORD *)(a4 + 64);
      *(_OWORD *)(a1 + 3sub_10046D318(v1 + 12) = v40;
      *(_OWORD *)(a1 + 264) = v38;
      *(_OWORD *)(a1 + 28sub_100222B94(&v59, (uint64_t)"wifiTileDownloaded", 0) = v39;
      __int128 v41 = *(_OWORD *)(a4 + 96);
      __int128 v42 = *(_OWORD *)(a4 + 112);
      __int128 v43 = *(_OWORD *)(a4 + 128);
      *(_OWORD *)(a1 + 372) = *(_OWORD *)(a4 + 140);
      *(_OWORD *)(a1 + 344) = v42;
      *(_OWORD *)(a1 + 36sub_100222B94(&v59, (uint64_t)"wifiTileDownloaded", 0) = v43;
      *(_OWORD *)(a1 + 32_Block_object_dispose(va, 8) = v41;
    }

    return;
  }

  if (*a3 == 5)
  {
    double v7 = (*(double (**)(void))(**(void **)(a1 + 448) + 56LL))(*(void *)(a1 + 448));
    double v8 = *(double *)(a1 + 392);
    double v9 = *(double *)(a1 + 252);
    BOOL v10 = v9 > *(double *)(a4 + 20) && v9 > 100.0;
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101884538);
    }
    uint64_t v11 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v13 = *(void *)(a1 + 392);
      uint64_t v12 = *(void *)(a1 + 400);
      sub_100832C64(a4, (std::stringbuf::string_type *)__p);
      uint64_t v14 = (v64 & 0x80000000LL) == 0 ? __p : *(_BYTE **)__p;
      *(_DWORD *)std::stringbuf::string_type buf = 134349827;
      *(void *)double v68 = v13;
      *(_WORD *)&v68[8] = 1026;
      *(_DWORD *)&_BYTE v68[10] = v10;
      __int16 v69 = 2050;
      uint64_t v70 = v12;
      __int16 v71 = 2081;
      int v72 = v14;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "WIFITILE: onLocationNotification, fLastLocationDownloadCheckTimestamp, %{public}.1lf, isForceLocationCheck, %{pu blic}d, fLastLocationProtectionCheckTimestamp, %{public}.1f, leech location, %{private}s",  buf,  0x26u);
      if (SBYTE3(v64) < 0) {
        operator delete(*(void **)__p);
      }
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101884538);
      }
      uint64_t v50 = qword_101934858;
      uint64_t v52 = *(void *)(a1 + 392);
      uint64_t v51 = *(void *)(a1 + 400);
      sub_100832C64(a4, &v61);
      if ((v61.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v53 = &v61;
      }
      else {
        uint64_t v53 = (std::stringbuf::string_type *)v61.__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)std::string __p = 134349827;
      *(void *)&__p[4] = v52;
      *(_WORD *)&_BYTE __p[12] = 1026;
      *(_DWORD *)&_BYTE __p[14] = v10;
      __int16 v63 = 2050;
      uint64_t v64 = v51;
      __int16 v65 = 2081;
      int v66 = v53;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v50,  2LL,  "WIFITILE: onLocationNotification, fLastLocationDownloadCheckTimestamp, %{public}.1lf, isForceLocationCheck, %{pu blic}d, fLastLocationProtectionCheckTimestamp, %{public}.1f, leech location, %{private}s",  __p,  38);
      double v55 = v54;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::onLocationNotification(int, const CLLocationProvider_Type::Notification &, const CLLoca tionProvider_Type::NotificationData &)",  "%s\n",  v55);
    }

    __int128 v15 = *(_OWORD *)(a4 + 16);
    *(_OWORD *)(a1 + 232) = *(_OWORD *)a4;
    *(_OWORD *)(a1 + 24_Block_object_dispose(va, 8) = v15;
    __int128 v16 = *(_OWORD *)(a4 + 32);
    __int128 v17 = *(_OWORD *)(a4 + 48);
    __int128 v18 = *(_OWORD *)(a4 + 80);
    *(_OWORD *)(a1 + 29sub_1002D62D8(v1 + 6) = *(_OWORD *)(a4 + 64);
    *(_OWORD *)(a1 + 3sub_10046D318(v1 + 12) = v18;
    *(_OWORD *)(a1 + 264) = v16;
    *(_OWORD *)(a1 + 28sub_100222B94(&v59, (uint64_t)"wifiTileDownloaded", 0) = v17;
    __int128 v19 = *(_OWORD *)(a4 + 96);
    __int128 v20 = *(_OWORD *)(a4 + 112);
    __int128 v21 = *(_OWORD *)(a4 + 128);
    *(_OWORD *)(a1 + 372) = *(_OWORD *)(a4 + 140);
    *(_OWORD *)(a1 + 344) = v20;
    *(_OWORD *)(a1 + 36sub_100222B94(&v59, (uint64_t)"wifiTileDownloaded", 0) = v21;
    *(_OWORD *)(a1 + 32_Block_object_dispose(va, 8) = v19;
    int v22 = v7 - v8 >= 600.0 || v10;
    if (v22 == 1)
    {
      double v23 = *(double *)(a1 + 252);
      if (v23 >= 0.0 && v23 <= 5000.0)
      {
        sub_100DFB494(a1, a1 + 232, v7);
        sub_100DF1154(a1, 0, v7);
        sub_100DFB580(a1, a1 + 232);
        *(double *)(a1 + 392) = v7;
      }
    }

    if (*(_BYTE *)(a1 + 216))
    {
      int v24 = v7 - *(double *)(a1 + 400) >= 330.0 || v10;
      if (v24 == 1)
      {
        __int128 v25 = *(_OWORD *)(a4 + 16);
        *(_OWORD *)(a1 + 232) = *(_OWORD *)a4;
        *(_OWORD *)(a1 + 24_Block_object_dispose(va, 8) = v25;
        __int128 v26 = *(_OWORD *)(a4 + 32);
        __int128 v27 = *(_OWORD *)(a4 + 48);
        __int128 v28 = *(_OWORD *)(a4 + 80);
        *(_OWORD *)(a1 + 29sub_1002D62D8(v1 + 6) = *(_OWORD *)(a4 + 64);
        *(_OWORD *)(a1 + 3sub_10046D318(v1 + 12) = v28;
        *(_OWORD *)(a1 + 264) = v26;
        *(_OWORD *)(a1 + 28sub_100222B94(&v59, (uint64_t)"wifiTileDownloaded", 0) = v27;
        __int128 v29 = *(_OWORD *)(a4 + 96);
        __int128 v30 = *(_OWORD *)(a4 + 112);
        __int128 v31 = *(_OWORD *)(a4 + 128);
        *(_OWORD *)(a1 + 372) = *(_OWORD *)(a4 + 140);
        *(_OWORD *)(a1 + 344) = v30;
        *(_OWORD *)(a1 + 36sub_100222B94(&v59, (uint64_t)"wifiTileDownloaded", 0) = v31;
        *(_OWORD *)(a1 + 32_Block_object_dispose(va, 8) = v29;
        *(double *)(a1 + 40sub_100222B94(&v59, (uint64_t)"wifiTileDownloaded", 0) = v7;
      }
    }

    return;
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101884558);
  }
  __int16 v44 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    unsigned int v45 = *a3;
    uint64_t v46 = sub_10100D9D8(*a3);
    *(_DWORD *)std::stringbuf::string_type buf = 67109378;
    *(_DWORD *)double v68 = v45;
    *(_WORD *)&v68[4] = 2080;
    *(void *)&v68[6] = v46;
    _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_DEBUG,  "WIFITILE: onLocationNotification, unknown notificaiton, %d, %s",  buf,  0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101884558);
    }
    uint64_t v56 = qword_101934A78;
    unsigned int v57 = *a3;
    double v58 = sub_10100D9D8(*a3);
    *(_DWORD *)std::string __p = 67109378;
    *(_DWORD *)&__p[4] = v57;
    *(_WORD *)&__p[8] = 2080;
    *(void *)&__p[10] = v58;
    LODWORD(v6sub_100222B94(&v59, (uint64_t)"wifiTileDownloaded", 0) = 18;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v56,  2LL,  "WIFITILE: onLocationNotification, unknown notificaiton, %d, %s",  __p,  v60);
    uint64_t v34 = (uint8_t *)v59;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::onLocationNotification(int, const CLLocationProvider_Type::Notification &, const CLLocati onProvider_Type::NotificationData &)",  "%s\n",  v59);
    goto LABEL_66;
  }

void sub_100DFB494(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 224LL))(a1);
  if ((*(_DWORD *)(v6 + 148) & 0x80000000) == 0)
  {
    uint64_t v7 = v6;
    __int16 v11 = 0;
    unint64_t v13 = 0xBFF0000000000000LL;
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    __int16 v16 = 1;
    char v12 = 0;
    int v14 = *(_DWORD *)(v7 + 148);
    LODWORD(v7) = *(_DWORD *)(v7 + 4);
    double v8 = *(double *)(a2 + 4);
    double v9 = *(double *)(a2 + 12);
    sub_1010DDBC0(&__p, "");
    sub_100DEB938(a1, v7, &__p, (uint64_t)&v11, v8, v9, a3);
  }

void sub_100DFB564( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

id *sub_100DFB580(uint64_t a1, uint64_t a2)
{
  if (*(double *)(a2 + 20) <= 0.0)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101884558);
    }
    __int16 v16 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 136315650;
      *(void *)&uint8_t buf[4] = "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/Tiles/CLWifiTilesManager.mm";
      *(_WORD *)&_BYTE buf[12] = 1024;
      *(_DWORD *)&_BYTE buf[14] = 1757;
      __int16 v28 = 2080;
      __int128 v29 = "location.horizontalAccuracy > 0.0";
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_FAULT, "Assert Failed, %s, %d, %s", buf, 0x1Cu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101884558);
      }
      int v21 = 136315650;
      int v22 = "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/Tiles/CLWifiTilesManager.mm";
      __int16 v23 = 1024;
      int v24 = 1757;
      __int16 v25 = 2080;
      __int128 v26 = "location.horizontalAccuracy > 0.0";
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assert Failed, %s, %d, %s",  (const char *)&v21,  28,  *(const char **)v20);
      __int128 v18 = (char *)v17;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLWifiTilesManager::updateTileLocationRelevancy(const CLDaemonLocation &)",  "%s\n",  v17);
      if (v18 != buf) {
        free(v18);
      }
    }

    sub_1002920DC();
  }

  sub_100222B94(&v21, (uint64_t)"CLWifiTilesManager::updateTileLocationRelevancy", 0);
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 224LL))(a1);
  if (*(_BYTE *)v4)
  {
    (*(void (**)(void))(**(void **)(a1 + 448) + 56LL))(*(void *)(a1 + 448));
    if (*(double *)(a2 + 20) >= 0.0 && vabdd_f64(v5, *(double *)(a2 + 76)) <= 3600.0)
    {
      sub_100F7C8AC(*(void *)(a1 + 480), a2, (uint64_t)*(double *)&qword_101991110, (char **)buf, v5);
      if (*(void *)buf)
      {
        *(void *)&uint8_t buf[8] = *(void *)buf;
        operator delete(*(void **)buf);
      }
    }

    else
    {
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101884558);
      }
      uint64_t v6 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "WIFITILE: location not relevant", buf, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101884558);
        }
        *(_WORD *)__int128 v20 = 0;
        LODWORD(v19) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "WIFITILE: location not relevant",  v20,  v19);
        double v8 = (char *)v7;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::updateTileLocationRelevancy(const CLDaemonLocation &)",  "%s\n",  v7);
LABEL_25:
        if (v8 != buf) {
          free(v8);
        }
      }
    }
  }

  else
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101884558);
    }
    double v9 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v10 = v4 + 8;
      *(_DWORD *)std::stringbuf::string_type buf = 136315138;
      *(void *)&uint8_t buf[4] = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "WIFITILE: tiles, %s, not active", buf, 0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101884558);
      }
      uint64_t v13 = *(void *)(v4 + 8);
      uint64_t v12 = v4 + 8;
      uint64_t v11 = v13;
      *(_DWORD *)__int128 v20 = 136315138;
      *(void *)&v20[4] = v11;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "WIFITILE: tiles, %s, not active",  v20);
      double v8 = (char *)v14;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::updateTileLocationRelevancy(const CLDaemonLocation &)",  "%s\n",  v14);
      goto LABEL_25;
    }
  }

  return sub_1001BA1BC((id *)&v21);
}

void sub_100DFBAC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
}

void sub_100DFBAF4(uint64_t a1, uint64_t a2, _DWORD *a3, int *a4)
{
  if (*a3 == 6)
  {
    double v8 = v7;
    *(_DWORD *)(a1 + 40_Block_object_dispose(va, 8) = a4[1];
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101884538);
    }
    double v9 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      int v10 = *a4;
      int v11 = a4[1];
      *(_DWORD *)std::stringbuf::string_type buf = 67109376;
      int v20 = v10;
      __int16 v21 = 1024;
      int v22 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "WIFITILE: onStatusNotification, kNotificationReachability, from, %d, to, %d",  buf,  0xEu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101884538);
      }
      int v12 = *a4;
      int v13 = a4[1];
      v16[0] = 67109376;
      v16[1] = v12;
      __int16 v17 = 1024;
      int v18 = v13;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "WIFITILE: onStatusNotification, kNotificationReachability, from, %d, to, %d",  v16,  14);
      __int128 v15 = (uint8_t *)v14;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDaemonStat us_Type::NotificationData &)",  "%s\n",  v14);
      if (v15 != buf) {
        free(v15);
      }
    }

    if (a4[1] >= 1) {
      sub_100DF1154(a1, 0, v8);
    }
  }

void sub_100DFBD10(uint64_t a1, uint64_t a2)
{
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101884538);
  }
  uint64_t v4 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 134349056;
    uint64_t v11 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "@TileSched, wifi, called, %{public}ld",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101884538);
    }
    int v8 = 134349056;
    uint64_t v9 = a2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "@TileSched, wifi, called, %{public}ld",  &v8,  12);
    double v7 = (uint8_t *)v6;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLWifiTilesManager::onScheduledTileDownloadsCallback(CLTileDownloadReachabilityRequirement)",  "%s\n",  v6);
    if (v7 != buf) {
      free(v7);
    }
  }

  if (a2 != 1)
  {
    double v5 = (*(double (**)(void))(**(void **)(a1 + 448) + 56LL))(*(void *)(a1 + 448));
    sub_100DF1154(a1, 1u, v5);
  }

void sub_100DFBEE0(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_100DFBEE8(uint64_t a1)
{
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101884558);
  }
  uint64_t v2 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "WIFITILE: CLWifiTilesManager::shutdown", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101884558);
    }
    v7[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "WIFITILE: CLWifiTilesManager::shutdown",  v7,  2);
    uint64_t v6 = (uint8_t *)v5;
    sub_10029211C("Generic", 1LL, 0, 2LL, "virtual void CLWifiTilesManager::shutdown()", "%s\n", v5);
    if (v6 != buf) {
      free(v6);
    }
  }

  sub_100DF38A0(a1);
  uint64_t v3 = *(void *)(a1 + 208);
  *(void *)(a1 + 20_Block_object_dispose(va, 8) = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  uint64_t result = *(void *)(a1 + 176);
  *(void *)(a1 + 17sub_1002D62D8(v1 + 6) = 0LL;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_100DFC0B0(uint64_t a1)
{
  uint64_t result = sub_100E79F88((void *)(a1 + 512), 0);
  if (!result)
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101884538);
    }
    uint64_t v2 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 67174657;
      int v10 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_ERROR,  "WifiTile, invalid tileType, %{private}d, #CloneMe",  buf,  8u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101884538);
      }
      v8[0] = 67174657;
      v8[1] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  16LL,  "WifiTile, invalid tileType, %{private}d, #CloneMe",  v8,  8);
      double v7 = (uint8_t *)v6;
      sub_10029211C("Generic", 1LL, 0, 0LL, "virtual CLTilesSet &CLWifiTilesManager::getTilesSet()", "%s\n", v6);
      if (v7 != buf) {
        free(v7);
      }
    }

    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101884558);
    }
    uint64_t v3 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289539;
      int v10 = 0;
      __int16 v11 = 2082;
      int v12 = "";
      __int16 v13 = 2082;
      int v14 = "assert";
      __int16 v15 = 2081;
      __int16 v16 = "false";
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Assertion failed, event:%{public, location:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101884558);
      }
    }

    uint64_t v4 = (os_log_s *)qword_101934A78;
    if (os_signpost_enabled((os_log_t)qword_101934A78))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289539;
      int v10 = 0;
      __int16 v11 = 2082;
      int v12 = "";
      __int16 v13 = 2082;
      int v14 = "assert";
      __int16 v15 = 2081;
      __int16 v16 = "false";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v4,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Assertion failed",  "{msg%{public}.0s:Assertion failed, event:%{public, location:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101884558);
      }
    }

    double v5 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289539;
      int v10 = 0;
      __int16 v11 = 2082;
      int v12 = "";
      __int16 v13 = 2082;
      int v14 = "assert";
      __int16 v15 = 2081;
      __int16 v16 = "false";
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Assertion failed, event:%{public, location:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/Tiles/CLWifiTilesManager.mm",  1731,  "getTilesSet");
  }

  return result;
}

uint64_t sub_100DFC460(uint64_t a1)
{
  return sub_100DFC0B0(a1 - 112);
}

void sub_100DFC468(void *a1, uint64_t a2, double a3)
{
  if (*((_BYTE *)a1 + 216))
  {
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101884578);
    }
    uint64_t v4 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_INFO))
    {
      LOWORD(buf[0].__r_.__value_.__l.__data_) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_INFO,  "#tiles, data protection enabled, ending side load.",  (uint8_t *)buf,  2u);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_7;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101884578);
    }
    LOWORD(__p.__r_.__value_.__l.__data_) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  1LL,  "#tiles, data protection enabled, ending side load.",  &__p,  2);
    __int16 v23 = (std::string *)v24;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::addAnyRawWifiTilesToDatabaseThenDeleteRecursive(CFAbsoluteTime, std::vector<std::string>)",  "%s\n",  v24);
LABEL_51:
    if (v23 != buf) {
      free(v23);
    }
LABEL_7:
    *((_BYTE *)a1 + 504) = 0;
    return;
  }

  uint64_t v6 = *(void *)(a2 + 8);
  if (v6 == *(void *)a2)
  {
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101884578);
    }
    __int16 v21 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_INFO))
    {
      LOWORD(buf[0].__r_.__value_.__l.__data_) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_INFO,  "#tiles, finished side-loading raw wifi tiles from disk",  (uint8_t *)buf,  2u);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_7;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101884578);
    }
    LOWORD(__p.__r_.__value_.__l.__data_) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  1LL,  "#tiles, finished side-loading raw wifi tiles from disk",  &__p,  2);
    __int16 v23 = (std::string *)v22;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::addAnyRawWifiTilesToDatabaseThenDeleteRecursive(CFAbsoluteTime, std::vector<std::string>)",  "%s\n",  v22);
    goto LABEL_51;
  }

  if (sub_100DFCA94(v6 - 24))
  {
    else {
      size_t v8 = a1[54];
    }
    uint64_t v9 = buf;
    sub_1000392EC((uint64_t)buf, v8 + 1);
    if ((buf[0].__r_.__value_.__s.__size_ & 0x80u) != 0) {
      uint64_t v9 = (std::string *)buf[0].__r_.__value_.__r.__words[0];
    }
    if (v8)
    {
      else {
        int v10 = (const void *)a1[53];
      }
      memmove(v9, v10, v8);
    }

    *(_WORD *)((char *)&v9->__r_.__value_.__l.__data_ + v_Block_object_dispose(va, 8) = 47;
    int v11 = *(char *)(v6 - 1);
    if (v11 >= 0) {
      int v12 = (const std::string::value_type *)(v6 - 24);
    }
    else {
      int v12 = *(const std::string::value_type **)(v6 - 24);
    }
    if (v11 >= 0) {
      std::string::size_type v13 = *(unsigned __int8 *)(v6 - 1);
    }
    else {
      std::string::size_type v13 = *(void *)(v6 - 16);
    }
    int v14 = std::string::append(buf, v12, v13);
    __int128 v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    __p.__r_.__value_.__l.__cap_ = v14->__r_.__value_.__l.__cap_;
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v15;
    v14->__r_.__value_.__l.__size_ = 0LL;
    v14->__r_.__value_.__l.__cap_ = 0LL;
    v14->__r_.__value_.__r.__words[0] = 0LL;
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101884578);
    }
    __int16 v16 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_INFO))
    {
      p_p = &__p;
      if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      LODWORD(buf[0].__r_.__value_.__l.__data_) = 136380675;
      *(std::string::size_type *)((char *)buf[0].__r_.__value_.__r.__words + 4) = (std::string::size_type)p_p;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_INFO,  "#tiles, side loading wifi tile from disk, %{private}s",  (uint8_t *)buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101884578);
      }
      __int16 v25 = &__p;
      if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        __int16 v25 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      int v31 = 136380675;
      int v32 = v25;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  1LL,  "#tiles, side loading wifi tile from disk, %{private}s",  &v31,  12);
      __int128 v27 = (std::string *)v26;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::addAnyRawWifiTilesToDatabaseThenDeleteRecursive(CFAbsoluteTime, std::vector<std::string>)",  "%s\n",  v26);
      if (v27 != buf) {
        free(v27);
      }
    }

    sub_100DFCC58(a1, &__p, a3);
  }

  (*(void (**)(void *, double))(*a1 + 232LL))(a1, a3);
  uint64_t v18 = *(void *)(a2 + 8);
  uint64_t v19 = (void **)(v18 - 24);
  *(void *)(a2 + _Block_object_dispose(va, 8) = v19;
  int v20 = (void *)a1[5];
  v28[0] = _NSConcreteStackBlock;
  v28[1] = 3321888768LL;
  v28[2] = sub_100DFD2F8;
  void v28[3] = &unk_101884438;
  v28[4] = a1;
  memset(v29, 0, sizeof(v29));
  sub_10010DEE0( (char *)v29,  *(__int128 **)a2,  (__int128 *)v19,  0xAAAAAAAAAAAAAAABLL * (((uint64_t)v19 - *(void *)a2) >> 3));
  [v20 async:v28];
  buf[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v29;
  sub_1000129D4((void ***)buf);
}

void sub_100DFCA44( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20, int a21, __int16 a22, char a23, char a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, int a30, __int16 a31, char a32, char a33)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100DFCA94(uint64_t a1)
{
  if (byte_10199EB07 >= 0) {
    size_t v2 = byte_10199EB07;
  }
  else {
    size_t v2 = qword_10199EAF8;
  }
  uint64_t v3 = __p;
  sub_1000392EC((uint64_t)__p, v2 + 10);
  if (v13[7] < 0) {
    uint64_t v3 = (void **)__p[0];
  }
  if (v2)
  {
    if (byte_10199EB07 >= 0) {
      uint64_t v4 = &qword_10199EAF0;
    }
    else {
      uint64_t v4 = (uint64_t *)qword_10199EAF0;
    }
    memmove(v3, v4, v2);
  }

  strcpy((char *)v3 + v2, "([0-9]{8})");
  sub_100BFA368(&v22, (uint64_t)__p, 0);
  if ((v13[7] & 0x80000000) != 0) {
    operator delete(__p[0]);
  }
  uint64_t v14 = 0LL;
  uint64_t v15 = 0LL;
  char v16 = 0;
  uint64_t v17 = 0LL;
  uint64_t v18 = 0LL;
  char v19 = 0;
  char v20 = 0;
  uint64_t v21 = 0LL;
  *(_OWORD *)std::string __p = 0u;
  memset(v13, 0, sizeof(v13));
  uint64_t v5 = *(unsigned __int8 *)(a1 + 23);
  if ((v5 & 0x80u) == 0LL) {
    uint64_t v6 = a1;
  }
  else {
    uint64_t v6 = *(void *)a1;
  }
  if ((v5 & 0x80u) != 0LL) {
    uint64_t v5 = *(void *)(a1 + 8);
  }
  uint64_t v7 = sub_100BFFCB0(v6, v6 + v5, (uint64_t)__p, (uint64_t)&v22, 0);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }

  size_t v8 = v23;
  if (v23)
  {
    p_shared_owners = (unint64_t *)&v23->__shared_owners_;
    do
      unint64_t v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }

  std::locale::~locale(&v22);
  return v7;
}

void sub_100DFCC10( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (__p) {
    operator delete(__p);
  }
  sub_10000AE14(v14 - 64);
  std::locale::~locale((std::locale *)(v14 - 104));
  _Unwind_Resume(a1);
}

void sub_100DFCC58(uint64_t *a1, std::string *a2, double a3)
{
  uint64_t v6 = (const void **)sub_100C1001C();
  sub_10010B8E0((const void **)&a2->__r_.__value_.__l.__data_, v6, (uint64_t)v39);
  if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t v7 = (const char *)a2;
  }
  else {
    uint64_t v7 = (const char *)a2->__r_.__value_.__r.__words[0];
  }
  if (!sub_100C148A8(v7))
  {
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101884578);
    }
    uint64_t v21 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
    {
      if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
        std::locale v22 = a2;
      }
      else {
        std::locale v22 = (std::string *)a2->__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)std::stringbuf::string_type buf = 136380675;
      double v51 = *(double *)&v22;
      _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "#warning, failed to unlock wifi tile, %{private}s",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_45;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101884578);
    }
    if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
      __int16 v23 = a2;
    }
    else {
      __int16 v23 = (std::string *)a2->__r_.__value_.__r.__words[0];
    }
    int v47 = 136380675;
    char v48 = v23;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "#warning, failed to unlock wifi tile, %{private}s",  &v47,  12);
    __int16 v25 = (uint8_t *)v24;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::addWifiTileToDatabaseAndDelete(const std::string &, CFAbsoluteTime)",  "%s\n",  v24);
LABEL_54:
    if (v25 != buf) {
      free(v25);
    }
    goto LABEL_45;
  }

  sub_100C157C0((uint64_t)v39, (uint64_t)v37);
  int v8 = v38;
  double v9 = *(double *)v37;
  double v10 = *(double *)&v37[1];
  if (!v38) {
    double v9 = a3;
  }
  sub_100DFA11C(a1[60], a2, (uint64_t)&v47, v9);
  if (v49 && sub_100924384((uint64_t *)&v47))
  {
    if (v38)
    {
      uint64_t v11 = a1[60];
      sub_100924340((double *)&v47, (uint64_t)buf);
      double v12 = (double)(int)v10;
      if (!v8) {
        double v12 = 0.0;
      }
      sub_100F7CD44(v11, (uint64_t)buf, v12);
      if (v56 < 0) {
        operator delete(__p);
      }
    }

    (*(void (**)(uint64_t *, int *, double))(*a1 + 256))(a1, &v47, a3);
    uint64_t v13 = (*(uint64_t (**)(uint64_t *))(*a1 + 224))(a1);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101884538);
    }
    uint64_t v14 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      double v15 = sub_100924308((uint64_t)&v47);
      double v16 = sub_1007C37E0((uint64_t)&v47);
      uint64_t v17 = (void *)sub_100019240(v13 + 184);
      *(_DWORD *)std::stringbuf::string_type buf = 134284033;
      double v51 = v15;
      __int16 v52 = 2049;
      double v53 = v16;
      __int16 v54 = 2050;
      std::string __p = v17;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "@TileList, wifi, add, llsw, %{private}.2lf, %{private}.2lf, rawfile, size, %{public}lu",  buf,  0x20u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101884538);
      }
      uint64_t v31 = qword_101934858;
      double v32 = sub_100924308((uint64_t)&v47);
      double v33 = sub_1007C37E0((uint64_t)&v47);
      uint64_t v34 = sub_100019240(v13 + 184);
      int v41 = 134284033;
      double v42 = v32;
      __int16 v43 = 2049;
      double v44 = v33;
      __int16 v45 = 2050;
      uint64_t v46 = v34;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v31,  0LL,  "@TileList, wifi, add, llsw, %{private}.2lf, %{private}.2lf, rawfile, size, %{public}lu",  &v41,  32);
      int v36 = (uint8_t *)v35;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::addWifiTileToDatabaseAndDelete(const std::string &, CFAbsoluteTime)",  "%s\n",  v35);
      if (v36 != buf) {
        free(v36);
      }
    }

    uint64_t v18 = a1[62];
    double v19 = sub_100924308((uint64_t)&v47);
    double v20 = sub_1007C37E0((uint64_t)&v47);
    (*(void (**)(uint64_t, const char *, double, double))(*(void *)v18 + 40LL))(v18, "RawFile", v19, v20);
    sub_100DFD3F0((const void **)&a2->__r_.__value_.__l.__data_);
    goto LABEL_45;
  }

  if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
    __int128 v26 = (const char *)a2;
  }
  else {
    __int128 v26 = (const char *)a2->__r_.__value_.__r.__words[0];
  }
  sub_100C148A0(v26);
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_101884578);
  }
  __int128 v27 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
  {
    if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
      __int16 v28 = a2;
    }
    else {
      __int16 v28 = (std::string *)a2->__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)std::stringbuf::string_type buf = 136380675;
    double v51 = *(double *)&v28;
    _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEFAULT,  "#warning, failed to save wifi #tile in db, %{private}s",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101884578);
    }
    if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
      __int128 v29 = a2;
    }
    else {
      __int128 v29 = (std::string *)a2->__r_.__value_.__r.__words[0];
    }
    int v41 = 136380675;
    double v42 = *(double *)&v29;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "#warning, failed to save wifi #tile in db, %{private}s",  &v41,  12);
    __int16 v25 = (uint8_t *)v30;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::addWifiTileToDatabaseAndDelete(const std::string &, CFAbsoluteTime)",  "%s\n",  v30);
    goto LABEL_54;
  }

void sub_100DFD298( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, void *a47, uint64_t a48, int a49, __int16 a50,char a51,char a52)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DFD2F8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  double v3 = (*(double (**)(void))(**(void **)(v2 + 448) + 56LL))(*(void *)(v2 + 448));
  memset(v4, 0, sizeof(v4));
  sub_10010DEE0( (char *)v4,  *(__int128 **)(a1 + 40),  *(__int128 **)(a1 + 48),  0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 48) - *(void *)(a1 + 40)) >> 3));
  sub_100DFC468(v2, v4, v3);
  uint64_t v5 = (void **)v4;
  sub_1000129D4(&v5);
}

void sub_100DFD384( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12)
{
  a12 = (void **)&a9;
  sub_1000129D4(&a12);
  _Unwind_Resume(a1);
}

char *sub_100DFD3A0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 4sub_100222B94(&v59, (uint64_t)"wifiTileDownloaded", 0) = 0LL;
  *(void *)(a1 + 4_Block_object_dispose(va, 8) = 0LL;
  uint64_t v2 = a1 + 40;
  *(void *)(v2 + 1sub_1002D62D8(v1 + 6) = 0LL;
  return sub_10010DEE0( (char *)v2,  *(__int128 **)(a2 + 40),  *(__int128 **)(a2 + 48),  0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 48) - *(void *)(a2 + 40)) >> 3));
}

void sub_100DFD3C8(uint64_t a1)
{
  uint64_t v1 = (void **)(a1 + 40);
  sub_1000129D4(&v1);
}

void sub_100DFD3F0(const void **a1)
{
  else {
    size_t v2 = (size_t)a1[1];
  }
  double v3 = __p;
  sub_1000392EC((uint64_t)__p, v2 + 6);
  if (v8 < 0) {
    double v3 = (void **)__p[0];
  }
  if (v2)
  {
    else {
      uint64_t v4 = *a1;
    }
    memmove(v3, v4, v2);
  }

  strcpy((char *)v3 + v2, ".plist");
  else {
    uint64_t v5 = (const char *)*a1;
  }
  sub_100292D50(v5);
  if (v8 >= 0) {
    uint64_t v6 = __p;
  }
  else {
    uint64_t v6 = (void **)__p[0];
  }
  sub_100296964((const char *)v6);
  if (v8 < 0) {
    operator delete(__p[0]);
  }
}

void sub_100DFD4CC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

char *sub_100DFD4E8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = v5;
  uint64_t v5 = 0LL;
  if (result) {
    return (char *)(*(uint64_t (**)(char *))(*(void *)result + 8LL))(result);
  }
  return result;
}

void sub_100DFD560( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    (*(void (**)(uint64_t))(*(void *)a10 + 8LL))(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100DFD584(uint64_t a1, unsigned int *a2, double a3)
{
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 224LL))(a1);
  sub_100DD9668(0, a1 + 456, &v24);
  sub_100C121BC(v24, 0, a2, a3);
  __int128 v20 = *(_OWORD *)(v24 + 48);
  uint64_t v21 = *(void *)(v24 + 64);
  if (*(char *)(v24 + 95) < 0)
  {
    sub_1010DD48C(&v22, *(void **)(v24 + 72), *(void *)(v24 + 80));
  }

  else
  {
    __int128 v22 = *(_OWORD *)(v24 + 72);
    uint64_t v23 = *(void *)(v24 + 88);
  }

  if (sub_1008AD1E0((unsigned int *)&v20))
  {
    uint64_t v7 = (uint64_t **)(v6 + 184);
    char v8 = sub_100603294(v7, (unsigned int *)&v20);
    uint64_t v9 = v24;
    uint64_t v24 = 0LL;
    uint64_t v10 = *v8;
    *char v8 = v9;
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8LL))(v10);
    }
    sub_1006025CC((uint64_t)v7, (unsigned int *)&v20);
    uint64_t v11 = 1LL;
  }

  else
  {
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101884578);
    }
    double v12 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_FAULT))
    {
      sub_1008AD840((unsigned int *)&v20, __p);
      uint64_t v13 = (__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0
          ? __p
          : (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
      LODWORD(buf.__r_.__value_.__l.__data_) = 136380675;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v13;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_FAULT,  "Invalid tile ID in createWifiTileFileObject: %{private}s, #CloneMe",  (uint8_t *)&buf,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(__p, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101884578);
      }
      uint64_t v16 = qword_101934868;
      sub_1008AD840((unsigned int *)&v20, &buf);
      if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        p_std::stringbuf::string_type buf = &buf;
      }
      else {
        p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
      }
      int v26 = 136380675;
      __int128 v27 = p_buf;
      _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v16,  17LL,  "Invalid tile ID in createWifiTileFileObject: %{private}s, #CloneMe",  &v26,  12,  v20,  v21,  v22,  v23);
      double v19 = v18;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual std::tuple<BOOL, CLTileFile *> CLWifiTilesManager::createWifiTileFileObject(const CLWifiTileHeaderEntry &, CFAbsoluteTime)",  "%s\n",  (const char *)v19);
      if (v19 != __p) {
        free(v19);
      }
    }

    uint64_t v11 = 0LL;
  }

  if (SHIBYTE(v23) < 0) {
    operator delete((void *)v22);
  }
  uint64_t v14 = v24;
  uint64_t v24 = 0LL;
  if (v14) {
    (*(void (**)(uint64_t))(*(void *)v14 + 8LL))(v14);
  }
  return v11;
}

void sub_100DFD8A4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20, uint64_t a21)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  if (a21) {
    (*(void (**)(uint64_t))(*(void *)a21 + 8LL))(a21);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100DFD8FC(uint64_t a1, unsigned int *a2, double a3)
{
  return sub_100DFD584(a1 - 112, a2, a3);
}

void sub_100DFD904(id a1)
{
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  std::string::assign( (std::string *)&qword_10199EB20,  -[NSString UTF8String]( -[NSString stringByAppendingPathComponent:]( +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", p_p),  "stringByAppendingPathComponent:",  @"tiles"),  "UTF8String"));
}

void sub_100DFD984( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DFD9A0(id a1)
{
}

void sub_100DFD9B4(uint64_t a1, uint64_t a2)
{
  HIDWORD(v15) = a2;
  if (!*(_BYTE *)(a1 + 108))
  {
    uint64_t v4 = *(void *)(a1 + 88);
    if (!v4) {
      goto LABEL_12;
    }
    uint64_t v5 = a1 + 80;
    uint64_t v6 = a1 + 88;
    do
    {
      int v7 = *(_DWORD *)(v4 + 32);
      BOOL v8 = v7 < (int)a2;
      else {
        uint64_t v9 = (uint64_t *)(v4 + 8);
      }
      if (!v8) {
        uint64_t v6 = v4;
      }
      uint64_t v4 = *v9;
    }

    while (*v9);
    if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= (int)a2)
    {
      while (*(void *)(v6 + 56))
      {
        *(_DWORD *)std::stringbuf::string_type buf = *(_DWORD *)(*(void *)(v6 + 40) + 28LL);
        (*(void (**)(uint64_t, uint64_t, uint8_t *))(*(void *)a1 + 112LL))(a1, a2, buf);
      }

      sub_100233254(v5, (int *)&v15 + 1);
    }

    else
    {
LABEL_12:
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101884518);
      }
      uint64_t v10 = (os_log_s *)qword_1019349D8;
      if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
      {
        uint64_t v11 = (void *)(a1 + 8);
        *(_DWORD *)std::stringbuf::string_type buf = 136446466;
        uint64_t v21 = v11;
        __int16 v22 = 1026;
        int v23 = a2;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
          buf,
          0x12u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_101884518);
        }
        double v12 = (void *)(a1 + 8);
        int v16 = 136446466;
        uint64_t v17 = v12;
        __int16 v18 = 1026;
        int v19 = a2;
        LODWORD(v15) = 18;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
          &v16,
          v15);
        uint64_t v14 = (uint8_t *)v13;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLNotifier<CLWifiTilesManager_Type::Notification, CLWifiTilesManager_Type::NotificationData>::rem oveClient(int) [Notification_T = CLWifiTilesManager_Type::Notification, NotificationData_T = CLWifiTilesManage r_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v13);
        if (v14 != buf) {
          free(v14);
        }
      }
    }
  }

uint64_t sub_100DFDC28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void *))(*(void *)a1 + 96LL))( a1,  a2,  a3,  &unk_1019911D8);
}

BOOL sub_100DFDC3C(uint64_t a1, int a2, int *a3, char *a4)
{
  int v41 = a2;
  if (*(_BYTE *)(a1 + 108)) {
    return 0LL;
  }
  uint64_t v7 = *(void *)(a1 + 88);
  if (v7)
  {
    uint64_t v10 = a1 + 88;
    do
    {
      int v11 = *(_DWORD *)(v7 + 32);
      BOOL v12 = v11 < a2;
      if (v11 >= a2) {
        uint64_t v13 = (uint64_t *)v7;
      }
      else {
        uint64_t v13 = (uint64_t *)(v7 + 8);
      }
      if (!v12) {
        uint64_t v10 = v7;
      }
      uint64_t v7 = *v13;
    }

    while (*v13);
    if (v10 != a1 + 88 && *(_DWORD *)(v10 + 32) <= a2)
    {
      uint64_t v40 = v10;
      int v16 = *a3;
      uint64_t v19 = *(void *)(v10 + 48);
      uint64_t v18 = v10 + 48;
      uint64_t v17 = v19;
      if (!v19) {
        goto LABEL_31;
      }
      uint64_t v20 = v18;
      do
      {
        int v21 = *(_DWORD *)(v17 + 28);
        BOOL v22 = v21 < v16;
        if (v21 >= v16) {
          int v23 = (uint64_t *)v17;
        }
        else {
          int v23 = (uint64_t *)(v17 + 8);
        }
        if (!v22) {
          uint64_t v20 = v17;
        }
        uint64_t v17 = *v23;
      }

      while (*v23);
      if (v20 == v18 || v16 < *(_DWORD *)(v20 + 28)) {
LABEL_31:
      }
        uint64_t v20 = v18;
      uint64_t v24 = *(void *)(a1 + 64);
      if (!v24) {
        goto LABEL_42;
      }
      uint64_t v25 = a1 + 64;
      do
      {
        int v26 = *(_DWORD *)(v24 + 32);
        BOOL v27 = v26 < v16;
        if (v26 >= v16) {
          __int16 v28 = (uint64_t *)v24;
        }
        else {
          __int16 v28 = (uint64_t *)(v24 + 8);
        }
        if (!v27) {
          uint64_t v25 = v24;
        }
        uint64_t v24 = *v28;
      }

      while (*v28);
      if (v25 != a1 + 64 && v16 >= *(_DWORD *)(v25 + 32))
      {
        *(void *)double v42 = v25;
        uint64_t v33 = *(void *)(v25 + 56);
        char v34 = *a4;
        buf[0] = &v41;
        *((_BYTE *)sub_1004EF3D4((uint64_t **)(v25 + 40), &v41, (uint64_t)&unk_1012CF090, buf) + 32) = v34;
        LOBYTE(buf[0]) = 0;
        *(_OWORD *)((char *)buf + 4) = 0u;
        memset((char *)&buf[2] + 4, 0, 32);
        memset((char *)&buf[6] + 4, 0, 28);
        if (v20 == v18
          && (*(unsigned int (**)(uint64_t, int *, _DWORD **))(*(void *)a1 + 128LL))(a1, a3, buf))
        {
          __int16 v35 = sub_100E007BC((uint64_t)buf);
          sub_100DFFA84((_BYTE *)a1, (uint64_t)&v40, (uint64_t)v42, v35);
        }

        if (SHIBYTE(buf[9]) < 0) {
          operator delete(buf[7]);
        }
        if (SHIBYTE(buf[6]) < 0) {
          operator delete(buf[4]);
        }
        if (SHIBYTE(buf[3]) < 0) {
          operator delete(buf[1]);
        }
        if (v33) {
          goto LABEL_44;
        }
      }

      else
      {
LABEL_42:
        *(void *)double v42 = a1 + 64;
        char v29 = byte_1019911D9;
        HIDWORD(v39) = v16;
        buf[0] = (_DWORD *)&v39 + 1;
        *((_BYTE *)sub_10023347C((uint64_t **)(a1 + 56), (int *)&v39 + 1, (uint64_t)&unk_1012CF090, buf) + 8sub_100222B94(&v59, (uint64_t)"wifiTileDownloaded", 0) = v29;
        HIDWORD(v39) = *a3;
        buf[0] = (_DWORD *)&v39 + 1;
        __int128 v30 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v39 + 1, (uint64_t)&unk_1012CF090, buf);
        sub_1000F0D38(v30 + 8);
        char v31 = *a4;
        HIDWORD(v39) = *a3;
        buf[0] = (_DWORD *)&v39 + 1;
        double v32 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v39 + 1, (uint64_t)&unk_1012CF090, buf);
        buf[0] = &v41;
        *((_BYTE *)sub_1004EF3D4(v32 + 5, &v41, (uint64_t)&unk_1012CF090, buf) + 32) = v31;
      }

      (*(void (**)(uint64_t, int *))(*(void *)a1 + 168LL))(a1, a3);
LABEL_44:
      if (v20 == v18)
      {
        LODWORD(buf[0]) = *a3;
        sub_10004A8FC((uint64_t **)(v40 + 40), (int *)buf, buf);
      }

      return 1LL;
    }
  }

  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101884518);
  }
  uint64_t v14 = (os_log_s *)qword_1019349D8;
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
  {
    uint64_t v15 = (_DWORD *)(a1 + 8);
    LODWORD(buf[0]) = 136446466;
    *(_DWORD **)((char *)buf + 4) = v15;
    WORD2(buf[1]) = 1026;
    *(_DWORD *)((char *)&buf[1] + sub_1002D62D8(v1 + 6) = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
      (uint8_t *)buf,
      0x12u);
  }

  BOOL result = sub_1002921D0(115, 0);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101884518);
    }
    int v36 = (void *)(a1 + 8);
    *(_DWORD *)double v42 = 136446466;
    *(void *)&v42[4] = v36;
    __int16 v43 = 1026;
    int v44 = a2;
    LODWORD(v39) = 18;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
      v42,
      v39);
    unsigned __int8 v38 = (char *)v37;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLWifiTilesManager_Type::Notification, CLWifiTilesManager_Type::NotificationData>::registe rForNotification(int, const Notification_T &, const RegistrationInfo_T &) [Notification_T = CLWifiTilesManager_Typ e::Notification, NotificationData_T = CLWifiTilesManager_Type::NotificationData, NotificationInfo_T = char, Regist rationInfo_T = char]",  "%s\n",  v37);
    return 0LL;
  }

  return result;
}

void sub_100DFE0E8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

BOOL sub_100DFE108(uint64_t a1, int a2, int *a3)
{
  uint64_t v5 = *(void *)(a1 + 88);
  if (!v5) {
    goto LABEL_11;
  }
  uint64_t v6 = a1 + 88;
  do
  {
    int v7 = *(_DWORD *)(v5 + 32);
    BOOL v8 = v7 < a2;
    if (v7 >= a2) {
      uint64_t v9 = (uint64_t *)v5;
    }
    else {
      uint64_t v9 = (uint64_t *)(v5 + 8);
    }
    if (!v8) {
      uint64_t v6 = v5;
    }
    uint64_t v5 = *v9;
  }

  while (*v9);
  if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= a2)
  {
    uint64_t v16 = *(void *)(v6 + 48);
    uint64_t v14 = v6 + 48;
    uint64_t v15 = v16;
    if (!v16) {
      goto LABEL_29;
    }
    int v17 = *a3;
    uint64_t v18 = v14;
    do
    {
      int v19 = *(_DWORD *)(v15 + 28);
      BOOL v20 = v19 < v17;
      if (v19 >= v17) {
        int v21 = (uint64_t *)v15;
      }
      else {
        int v21 = (uint64_t *)(v15 + 8);
      }
      if (!v20) {
        uint64_t v18 = v15;
      }
      uint64_t v15 = *v21;
    }

    while (*v21);
    if (v18 == v14 || v17 < *(_DWORD *)(v18 + 28)) {
LABEL_29:
    }
      uint64_t v18 = v14;
    return v18 != v14;
  }

  else
  {
LABEL_11:
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101884518);
    }
    uint64_t v10 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
    {
      int v11 = (void *)(a1 + 8);
      *(_DWORD *)std::stringbuf::string_type buf = 136446466;
      __int128 v30 = v11;
      __int16 v31 = 1026;
      int v32 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
        buf,
        0x12u);
    }

    BOOL v12 = sub_1002921D0(115, 0);
    BOOL result = 0LL;
    if (v12)
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101884518);
      }
      BOOL v22 = (void *)(a1 + 8);
      int v25 = 136446466;
      int v26 = v22;
      __int16 v27 = 1026;
      int v28 = a2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
        &v25,
        18);
      uint64_t v24 = (uint8_t *)v23;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLWifiTilesManager_Type::Notification, CLWifiTilesManager_Type::NotificationData>::clien tRegistered(int, const Notification_T &) [Notification_T = CLWifiTilesManager_Type::Notification, NotificationDa ta_T = CLWifiTilesManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v23);
      if (v24 != buf) {
        free(v24);
      }
      return 0LL;
    }
  }

  return result;
}

BOOL sub_100DFE388(char *a1, int a2, int *a3)
{
  HIDWORD(v34) = a2;
  int v3 = a1[108];
  if (!a1[108])
  {
    uint64_t v6 = *((void *)a1 + 11);
    if (v6)
    {
      BOOL v8 = a1 + 88;
      do
      {
        int v9 = *(_DWORD *)(v6 + 32);
        BOOL v10 = v9 < a2;
        if (v9 >= a2) {
          int v11 = (uint64_t *)v6;
        }
        else {
          int v11 = (uint64_t *)(v6 + 8);
        }
        if (!v10) {
          BOOL v8 = (char *)v6;
        }
        uint64_t v6 = *v11;
      }

      while (*v11);
      if (v8 != a1 + 88 && *((_DWORD *)v8 + 8) <= a2)
      {
        uint64_t v14 = (char *)*((void *)v8 + 6);
        BOOL v12 = v8 + 48;
        uint64_t v13 = v14;
        if (v14)
        {
          int v15 = *a3;
          uint64_t v16 = v12;
          do
          {
            int v17 = *((_DWORD *)v13 + 7);
            BOOL v18 = v17 < v15;
            if (v17 >= v15) {
              int v19 = (char **)v13;
            }
            else {
              int v19 = (char **)(v13 + 8);
            }
            if (!v18) {
              uint64_t v16 = v13;
            }
            uint64_t v13 = *v19;
          }

          while (*v19);
          if (v16 != v12 && v15 >= *((_DWORD *)v16 + 7))
          {
            LODWORD(__p[0]) = *a3;
            sub_1004EF494((uint64_t)(v12 - 8), (int *)__p);
            uint64_t v20 = *((void *)a1 + 8);
            if (!v20) {
              goto LABEL_33;
            }
            int v21 = *a3;
            BOOL v22 = a1 + 64;
            do
            {
              int v23 = *(_DWORD *)(v20 + 32);
              BOOL v24 = v23 < v21;
              if (v23 >= v21) {
                int v25 = (uint64_t *)v20;
              }
              else {
                int v25 = (uint64_t *)(v20 + 8);
              }
              if (!v24) {
                BOOL v22 = (char *)v20;
              }
              uint64_t v20 = *v25;
            }

            while (*v25);
            if (v22 != a1 + 64 && v21 >= *((_DWORD *)v22 + 8))
            {
              sub_1004EF494((uint64_t)(v22 + 40), (int *)&v34 + 1);
              if (!*((void *)v22 + 7)) {
                (*(void (**)(char *, int *))(*(void *)a1 + 176LL))(a1, a3);
              }
            }

            else
            {
LABEL_33:
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101884518);
              }
              int v26 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                __int16 v27 = a1 + 8;
                if (a1[31] < 0) {
                  __int16 v27 = (void *)*v27;
                }
                (*(void (**)(void **__return_ptr, char *, int *))(*(void *)a1 + 160LL))(__p, a1, a3);
                if (v44 >= 0) {
                  int v28 = __p;
                }
                else {
                  int v28 = (void **)__p[0];
                }
                *(_DWORD *)std::stringbuf::string_type buf = 136446466;
                *(void *)&uint8_t buf[4] = v27;
                __int16 v36 = 2082;
                __int128 v37 = v28;
                _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_FAULT,  "%{public}s; notification %{public}s not found",
                  buf,
                  0x16u);
                if (v44 < 0) {
                  operator delete(__p[0]);
                }
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(__p, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_101884518);
                }
                char v29 = a1 + 8;
                if (a1[31] < 0) {
                  char v29 = (void *)*v29;
                }
                uint64_t v30 = qword_1019349D8;
                (*(void (**)(_BYTE *__return_ptr, char *, int *))(*(void *)a1 + 160LL))(buf, a1, a3);
                if (v38 >= 0) {
                  __int16 v31 = buf;
                }
                else {
                  __int16 v31 = *(_BYTE **)buf;
                }
                int v39 = 136446466;
                uint64_t v40 = v29;
                __int16 v41 = 2082;
                double v42 = v31;
                LODWORD(v34) = 22;
                _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v30,  17LL,  "%{public}s; notification %{public}s not found",
                  &v39,
                  v34);
                uint64_t v33 = v32;
                if (v38 < 0) {
                  operator delete(*(void **)buf);
                }
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLWifiTilesManager_Type::Notification, CLWifiTilesManager_Type::NotificationDa ta>::unregisterForNotification(int, const Notification_T &) [Notification_T = CLWifiTilesManager_Type: :Notification, NotificationData_T = CLWifiTilesManager_Type::NotificationData, NotificationInfo_T = ch ar, RegistrationInfo_T = char]",  "%s\n",  v33);
              }
            }
          }
        }
      }
    }
  }

  return v3 == 0;
}

uint64_t sub_100DFE710(uint64_t a1, int *a2, uint64_t a3)
{
  int v10 = *a2;
  BOOL v12 = &v10;
  uint64_t v5 = sub_10023347C((uint64_t **)(a1 + 56), &v10, (uint64_t)&unk_1012CF090, &v12);
  sub_10005F550((uint64_t)(v5 + 8), &v11);
  uint64_t v6 = (std::__shared_weak_count *)*((void *)&v11 + 1);
  if (*((void *)&v11 + 1))
  {
    int v7 = (unint64_t *)(*((void *)&v11 + 1) + 8LL);
    do
      unint64_t v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }

  return 1LL;
}

void sub_100DFE7BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100DFE7D0(uint64_t a1, unsigned int *a2, uint64_t a3, int a4, int a5)
{
  if (!*(_BYTE *)(a1 + 108))
  {
    int v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: notifyClientsWithData (Fallback)",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_IF_NONE_PRESENT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101884518);
    }
    __int128 v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      BOOL v12 = (void *)(a1 + 8);
      uint64_t v13 = (std::__shared_weak_count *)*a2;
      *(_DWORD *)std::stringbuf::string_type buf = 68289794;
      *(_DWORD *)int v66 = 0;
      *(_WORD *)&v66[4] = 2082;
      *(void *)&v66[6] = "";
      *(_WORD *)&v66[14] = 2082;
      *(void *)&v66[16] = "activity";
      __int16 v67 = 2082;
      double v68 = v12;
      __int16 v69 = 2050;
      uint64_t v70 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:notifyClientsWithData, event:%{public, location:escape_only}s, name:%{public, l ocation:escape_only}s, notification:%{public}lld}",  buf,  0x30u);
    }

    int v15 = (__n128 *)(a1 + 64);
    uint64_t v14 = *(__n128 **)(a1 + 64);
    if (!v14) {
      goto LABEL_18;
    }
    signed __int32 v16 = *a2;
    int v17 = (__n128 *)(a1 + 64);
    do
    {
      signed __int32 v18 = v14[2].n128_i32[0];
      BOOL v19 = v18 < v16;
      if (v18 >= v16) {
        uint64_t v20 = (__n128 **)v14;
      }
      else {
        uint64_t v20 = (__n128 **)&v14->n128_u64[1];
      }
      if (!v19) {
        int v17 = v14;
      }
      uint64_t v14 = *v20;
    }

    while (*v20);
    if (v17 == v15 || v16 < (signed __int32)v17[2].n128_u32[0])
    {
LABEL_18:
      *(void *)__int16 v71 = &v71[8];
      memset(&v71[8], 0, 24);
      int v72 = 0LL;
      sub_1002343E4((uint64_t)buf, a2, (uint64_t)v71);
      int v17 = sub_1002342A4((uint64_t **)(a1 + 56), (__n128 *)buf);
      int v21 = v70;
      if (v70)
      {
        p_shared_owners = (unint64_t *)&v70->__shared_owners_;
        do
          unint64_t v23 = __ldaxr(p_shared_owners);
        while (__stlxr(v23 - 1, p_shared_owners));
        if (!v23)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }

      sub_100008390((uint64_t)&v66[4], *(void **)&v66[12]);
      BOOL v24 = v72;
      if (v72)
      {
        int v25 = (unint64_t *)&v72->__shared_owners_;
        do
          unint64_t v26 = __ldaxr(v25);
        while (__stlxr(v26 - 1, v25));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }

      sub_100008390((uint64_t)v71, *(void **)&v71[8]);
    }

    if (a4)
    {
      sub_100DFFB60(a3, buf);
      sub_10005F550((uint64_t)&v17[4], (__int128 *)buf);
      __int16 v27 = *(std::__shared_weak_count **)&v66[4];
      if (*(void *)&v66[4])
      {
        int v28 = (unint64_t *)(*(void *)&v66[4] + 8LL);
        do
          unint64_t v29 = __ldaxr(v28);
        while (__stlxr(v29 - 1, v28));
        if (!v29)
        {
          ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
          std::__shared_weak_count::__release_weak(v27);
        }
      }
    }

    else
    {
      sub_1000F0D38((__n128 *)v17[4].n128_u64);
    }

    if (!v17[3].n128_u64[1]) {
      goto LABEL_83;
    }
    uint64_t v30 = sub_100DFF550(a3);
    if (a5 == -1)
    {
      sub_100DFF6AC((void *)a1, (int *)a2, v30);
    }

    else
    {
      uint64_t v31 = a1 + 88;
      uint64_t v32 = *(void *)(a1 + 88);
      if (!v32) {
        goto LABEL_48;
      }
      uint64_t v33 = a1 + 88;
      do
      {
        int v34 = *(_DWORD *)(v32 + 32);
        BOOL v35 = v34 < a5;
        if (v34 >= a5) {
          __int16 v36 = (uint64_t *)v32;
        }
        else {
          __int16 v36 = (uint64_t *)(v32 + 8);
        }
        if (!v35) {
          uint64_t v33 = v32;
        }
        uint64_t v32 = *v36;
      }

      while (*v36);
      if (v33 == v31 || *(_DWORD *)(v33 + 32) > a5) {
LABEL_48:
      }
        uint64_t v33 = a1 + 88;
      uint64_t v63 = v33;
      unint64_t v37 = v15->n128_u64[0];
      if (!v15->n128_u64[0]) {
        goto LABEL_59;
      }
      int v38 = *a2;
      int v39 = (__n128 *)(a1 + 64);
      do
      {
        int v40 = *(_DWORD *)(v37 + 32);
        BOOL v41 = v40 < v38;
        if (v40 >= v38) {
          double v42 = (unint64_t *)v37;
        }
        else {
          double v42 = (unint64_t *)(v37 + 8);
        }
        if (!v41) {
          int v39 = (__n128 *)v37;
        }
        unint64_t v37 = *v42;
      }

      while (*v42);
      if (v39 == v15 || v38 < (signed __int32)v39[2].n128_u32[0])
      {
LABEL_59:
        int v62 = (__n128 *)(a1 + 64);
LABEL_60:
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_101884518);
        }
        __int16 v43 = (os_log_s *)qword_1019349D8;
        if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
        {
          char v44 = (void *)(a1 + 8);
          (*(void (**)(_BYTE *__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(v71, a1, a2);
          if (v71[23] >= 0) {
            __int16 v45 = v71;
          }
          else {
            __int16 v45 = *(_BYTE **)v71;
          }
          *(_DWORD *)std::stringbuf::string_type buf = 136315650;
          *(void *)int v66 = v44;
          *(_WORD *)&v66[8] = 1024;
          *(_DWORD *)&v66[10] = a5;
          *(_WORD *)&v66[14] = 2080;
          *(void *)&v66[16] = v45;
          _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_DEBUG,  "%s; client %d has deregistered, not notifying %s",
            buf,
            0x1Cu);
          if ((v71[23] & 0x80000000) != 0) {
            operator delete(*(void **)v71);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019349D0 != -1) {
            dispatch_once(&qword_1019349D0, &stru_101884518);
          }
          uint64_t v46 = (void *)(a1 + 8);
          uint64_t v47 = qword_1019349D8;
          (*(void (**)(void **__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(__p, a1, a2);
          if (v61 >= 0) {
            char v48 = __p;
          }
          else {
            char v48 = (void **)__p[0];
          }
          *(_DWORD *)__int16 v71 = 136315650;
          *(void *)&v71[4] = v46;
          *(_WORD *)&v71[12] = 1024;
          *(_DWORD *)&v71[14] = a5;
          *(_WORD *)&v71[18] = 2080;
          *(void *)&v71[20] = v48;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v47,  2LL,  "%s; client %d has deregistered, not notifying %s",
            v71,
            28,
            v59);
          uint64_t v50 = v49;
          if (v61 < 0) {
            operator delete(__p[0]);
          }
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLWifiTilesManager_Type::Notification, CLWifiTilesManager_Type::NotificationData>::n otifyClientsWithData(const Notification_T &, const NotificationData_T &, BOOL, int, BOOL) [Notification_T = CLWifiTilesManager_Type::Notification, NotificationData_T = CLWifiTilesManager_Type::NotificationData, Notif icationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v50);
        }

        goto LABEL_83;
      }

      int v62 = v39;
      if (v33 == v31) {
        goto LABEL_60;
      }
      uint64_t v53 = v39[3].n128_i64[0];
      double v51 = v39 + 3;
      __int16 v52 = (__n128 *)v53;
      if (!v53) {
        goto LABEL_60;
      }
      int v54 = *(_DWORD *)(v33 + 32);
      double v55 = v51;
      do
      {
        int v56 = v52[1].n128_i32[3];
        BOOL v57 = v56 < v54;
        if (v56 >= v54) {
          double v58 = v52;
        }
        else {
          double v58 = (__n128 *)&v52->n128_i8[8];
        }
        if (!v57) {
          double v55 = v52;
        }
        __int16 v52 = (__n128 *)v58->n128_u64[0];
      }

      while (v58->n128_u64[0]);
      sub_100DFFA84((_BYTE *)a1, (uint64_t)&v63, (uint64_t)&v62, v30);
    }

void sub_100DFEDEC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_activity_scope_state_s state, char a18)
{
}

void sub_100DFEE38(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 108))
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101884518);
    }
    size_t v2 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      int v3 = (void *)(a1 + 8);
      *(_DWORD *)std::stringbuf::string_type buf = 136315138;
      unint64_t v37 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "%s; already shutdown; not listing clients",
        buf,
        0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101884518);
      }
      uint64_t v4 = (void *)(a1 + 8);
      int v32 = 136315138;
      uint64_t v33 = v4;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; already shutdown; not listing clients",
        (const char *)&v32);
      uint64_t v6 = (uint8_t *)v5;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLWifiTilesManager_Type::Notification, CLWifiTilesManager_Type::NotificationData>::listC lients() [Notification_T = CLWifiTilesManager_Type::Notification, NotificationData_T = CLWifiTilesManager_Type:: NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v5);
      if (v6 != buf) {
        free(v6);
      }
    }
  }

  else
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101884518);
    }
    int v7 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      unint64_t v8 = (void *)(a1 + 8);
      uint64_t v9 = *(void *)(a1 + 96);
      *(_DWORD *)std::stringbuf::string_type buf = 136315394;
      unint64_t v37 = v8;
      __int16 v38 = 2048;
      v39[0] = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "%s; listing clients, num clients: %zu",
        buf,
        0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101884518);
      }
      __int16 v27 = (void *)(a1 + 8);
      uint64_t v28 = *(void *)(a1 + 96);
      int v32 = 136315394;
      uint64_t v33 = v27;
      __int16 v34 = 2048;
      v35[0] = v28;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; listing clients, num clients: %zu",
        (const char *)&v32,
        22);
      uint64_t v30 = (uint8_t *)v29;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLWifiTilesManager_Type::Notification, CLWifiTilesManager_Type::NotificationData>::listC lients() [Notification_T = CLWifiTilesManager_Type::Notification, NotificationData_T = CLWifiTilesManager_Type:: NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v29);
      if (v30 != buf) {
        free(v30);
      }
    }

    int v10 = *(void **)(a1 + 80);
    if (v10 != (void *)(a1 + 88))
    {
      __int128 v11 = (void *)(a1 + 8);
      do
      {
        BOOL v12 = (void *)v10[5];
        if (v12 != v10 + 6)
        {
          do
          {
            if (qword_1019349D0 != -1) {
              dispatch_once(&qword_1019349D0, &stru_101884518);
            }
            uint64_t v13 = (os_log_s *)qword_1019349D8;
            if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v14 = (void *)(a1 + 8);
              int v15 = *((_DWORD *)v10 + 8);
              int v16 = *((_DWORD *)v12 + 7);
              *(_DWORD *)std::stringbuf::string_type buf = 136315650;
              unint64_t v37 = v14;
              __int16 v38 = 1024;
              LODWORD(v39[0]) = v15;
              WORD2(v39[0]) = 1024;
              *(_DWORD *)((char *)v39 + sub_1002D62D8(v1 + 6) = v16;
              _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "%s; clients, id: %d, notification: %d",
                buf,
                0x18u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101884518);
              }
              uint64_t v20 = (void *)(a1 + 8);
              int v21 = *((_DWORD *)v10 + 8);
              int v22 = *((_DWORD *)v12 + 7);
              int v32 = 136315650;
              uint64_t v33 = v20;
              __int16 v34 = 1024;
              LODWORD(v35[0]) = v21;
              WORD2(v35[0]) = 1024;
              *(_DWORD *)((char *)v35 + sub_1002D62D8(v1 + 6) = v22;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; clients, id: %d, notification: %d",
                (const char *)&v32,
                24,
                v31);
              BOOL v24 = (uint8_t *)v23;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLWifiTilesManager_Type::Notification, CLWifiTilesManager_Type::NotificationData >::listClients() [Notification_T = CLWifiTilesManager_Type::Notification, NotificationData_T = CLWifiTil esManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v23);
              if (v24 != buf) {
                free(v24);
              }
            }

            int v17 = (void *)v12[1];
            if (v17)
            {
              do
              {
                signed __int32 v18 = v17;
                int v17 = (void *)*v17;
              }

              while (v17);
            }

            else
            {
              do
              {
                signed __int32 v18 = (void *)v12[2];
                BOOL v19 = *v18 == (void)v12;
                BOOL v12 = v18;
              }

              while (!v19);
            }

            BOOL v12 = v18;
          }

          while (v18 != v10 + 6);
        }

        int v25 = (void *)v10[1];
        if (v25)
        {
          do
          {
            unint64_t v26 = v25;
            int v25 = (void *)*v25;
          }

          while (v25);
        }

        else
        {
          do
          {
            unint64_t v26 = (void *)v10[2];
            BOOL v19 = *v26 == (void)v10;
            int v10 = v26;
          }

          while (!v19);
        }

        int v10 = v26;
      }

      while (v26 != (void *)(a1 + 88));
    }
  }

uint64_t sub_100DFF3E4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 217);
}

uint64_t sub_100DFF3EC(uint64_t a1)
{
  return a1 + 232;
}

uint64_t sub_100DFF3F4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 105);
}

uint64_t sub_100DFF3FC(uint64_t a1)
{
  return a1 + 120;
}

void sub_100DFF404(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_100DFF430(id a1)
{
  qword_101934858 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

void sub_100DFF45C(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

void sub_100DFF488(id a1)
{
  qword_101934868 = (uint64_t)os_log_create("com.apple.locationd.Position", "WifiPosition");
}

void sub_100DFF4B4(id a1)
{
  qword_101934838 = (uint64_t)os_log_create("com.apple.locationd.Position", "Position");
}

__int128 *sub_100DFF4E0(uint64_t a1, __int128 *a2, __int128 *a3, uint64_t a4)
{
  uint64_t v5 = a2;
  if (a2 != a3)
  {
    do
    {
      __int128 v7 = *v5;
      *(void *)(a4 + 1sub_1002D62D8(v1 + 6) = *((void *)v5 + 2);
      *(_OWORD *)a4 = v7;
      a4 += 24LL;
      *((_BYTE *)v5 + 23) = 0;
      *(_BYTE *)uint64_t v5 = 0;
      uint64_t v5 = (__int128 *)((char *)v5 + 24);
    }

    while (v5 != a3);
    return a3;
  }

  return v5;
}

CLCppContainer *sub_100DFF550(uint64_t a1)
{
  size_t v2 = (char *)operator new(0x50uLL);
  int v3 = v2;
  *(void *)size_t v2 = *(void *)a1;
  if (*(char *)(a1 + 31) < 0)
  {
    sub_1010DD48C(v2 + 8, *(void **)(a1 + 8), *(void *)(a1 + 16));
  }

  else
  {
    *(_OWORD *)(v2 + _Block_object_dispose(va, 8) = *(_OWORD *)(a1 + 8);
    *((void *)v2 + 3) = *(void *)(a1 + 24);
  }

  if (*(char *)(a1 + 55) < 0)
  {
    sub_1010DD48C(v3 + 32, *(void **)(a1 + 32), *(void *)(a1 + 40));
  }

  else
  {
    *((_OWORD *)v3 + 2) = *(_OWORD *)(a1 + 32);
    *((void *)v3 + sub_1002D62D8(v1 + 6) = *(void *)(a1 + 48);
  }

  uint64_t v4 = v3 + 56;
  if (*(char *)(a1 + 79) < 0)
  {
    sub_1010DD48C(v4, *(void **)(a1 + 56), *(void *)(a1 + 64));
  }

  else
  {
    *(_OWORD *)uint64_t v4 = *(_OWORD *)(a1 + 56);
    *((void *)v3 + 9) = *(void *)(a1 + 72);
  }

  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  _DWORD v6[2] = sub_100DFFC78;
  v6[3] = &unk_10181D3D0;
  v6[4] = v3;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:",  v3,  v6,  0LL,  80LL);
}

void sub_100DFF668(_Unwind_Exception *a1)
{
  if (v1[55] < 0) {
    operator delete(*v3);
  }
  if (v1[31] < 0) {
    operator delete(*v2);
  }
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_100DFF6AC(void *a1, int *a2, void *a3)
{
  if (!*((_BYTE *)a1 + 108))
  {
    uint64_t v5 = a1 + 8;
    uint64_t v4 = a1[8];
    if (v4)
    {
      int v8 = *a2;
      uint64_t v9 = a1 + 8;
      do
      {
        int v10 = *(_DWORD *)(v4 + 32);
        BOOL v11 = v10 < v8;
        if (v10 >= v8) {
          BOOL v12 = (uint64_t *)v4;
        }
        else {
          BOOL v12 = (uint64_t *)(v4 + 8);
        }
        if (!v11) {
          uint64_t v9 = (void *)v4;
        }
        uint64_t v4 = *v12;
      }

      while (*v12);
      if (v9 != v5 && v8 >= *((_DWORD *)v9 + 8))
      {
        double v51 = v9;
        id v13 = sub_100DFFCD8(a3);
        (*(void (**)(void *, int *, id, void *))(*a1 + 184LL))(a1, a2, v13, v9 + 10);
        uint64_t v14 = (void *)v9[5];
        if (v14 != v9 + 6)
        {
          int v15 = a1 + 11;
          int v16 = a1 + 1;
          do
          {
            uint64_t v17 = *v15;
            if (!*v15) {
              goto LABEL_25;
            }
            int v18 = *((_DWORD *)v14 + 7);
            BOOL v19 = a1 + 11;
            do
            {
              int v20 = *(_DWORD *)(v17 + 32);
              BOOL v21 = v20 < v18;
              if (v20 >= v18) {
                int v22 = (uint64_t *)v17;
              }
              else {
                int v22 = (uint64_t *)(v17 + 8);
              }
              if (!v21) {
                BOOL v19 = (uint64_t *)v17;
              }
              uint64_t v17 = *v22;
            }

            while (*v22);
            if (v19 != v15 && (int v23 = *((_DWORD *)v19 + 8), v18 >= v23))
            {
              uint64_t v50 = v19;
              sub_100DFFA84(a1, (uint64_t)&v50, (uint64_t)&v51, a3);
              uint64_t v27 = a1[8];
              if (!v27) {
                return;
              }
              int v28 = *a2;
              unint64_t v29 = v5;
              do
              {
                int v30 = *(_DWORD *)(v27 + 32);
                BOOL v31 = v30 < v28;
                if (v30 >= v28) {
                  int v32 = (uint64_t *)v27;
                }
                else {
                  int v32 = (uint64_t *)(v27 + 8);
                }
                if (!v31) {
                  unint64_t v29 = (void *)v27;
                }
                uint64_t v27 = *v32;
              }

              while (*v32);
              if (v29 == v5 || v28 < *((_DWORD *)v29 + 8)) {
                return;
              }
              double v51 = v29;
              uint64_t v34 = v29[6];
              uint64_t v14 = v29 + 6;
              uint64_t v33 = v34;
              if (v34)
              {
                BOOL v35 = v14;
                uint64_t v36 = v33;
                do
                {
                  int v37 = *(_DWORD *)(v36 + 28);
                  BOOL v38 = v37 < v23;
                  if (v37 >= v23) {
                    int v39 = (uint64_t *)v36;
                  }
                  else {
                    int v39 = (uint64_t *)(v36 + 8);
                  }
                  if (!v38) {
                    BOOL v35 = (void *)v36;
                  }
                  uint64_t v36 = *v39;
                }

                while (*v39);
                if (v35 == v14 || v23 < *((_DWORD *)v35 + 7))
                {
                  do
                  {
                    int v40 = *(_DWORD *)(v33 + 28);
                    BOOL v41 = v23 < v40;
                    if (v23 >= v40) {
                      double v42 = (uint64_t *)(v33 + 8);
                    }
                    else {
                      double v42 = (uint64_t *)v33;
                    }
                    if (v41) {
                      uint64_t v14 = (void *)v33;
                    }
                    uint64_t v33 = *v42;
                  }

                  while (*v42);
                }

                else
                {
                  __int16 v43 = (void *)v35[1];
                  if (v43)
                  {
                    do
                    {
                      uint64_t v14 = v43;
                      __int16 v43 = (void *)*v43;
                    }

                    while (v43);
                  }

                  else
                  {
                    do
                    {
                      uint64_t v14 = (void *)v35[2];
                      BOOL v44 = *v14 == (void)v35;
                      BOOL v35 = v14;
                    }

                    while (!v44);
                  }
                }
              }
            }

            else
            {
LABEL_25:
              uint64_t v50 = a1 + 11;
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101884518);
              }
              BOOL v24 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                int v25 = a1 + 1;
                int v26 = *((_DWORD *)v14 + 7);
                *(_DWORD *)std::stringbuf::string_type buf = 136446466;
                BOOL v57 = v25;
                __int16 v58 = 1026;
                int v59 = v26;
                _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_FAULT,  "%{public}s; unknown client %{public}d",
                  buf,
                  0x12u);
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(buf, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_101884518);
                }
                __int16 v45 = a1 + 1;
                int v46 = *((_DWORD *)v14 + 7);
                int v52 = 136446466;
                uint64_t v53 = v45;
                __int16 v54 = 1026;
                int v55 = v46;
                LODWORD(v49) = 18;
                _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; unknown client %{public}d",
                  &v52,
                  v49);
                char v48 = (uint8_t *)v47;
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLNotifier<CLWifiTilesManager_Type::Notification, CLWifiTilesManager_Type::NotificationData>::inv okeClientsWithData(const Notification_T &, CLCppContainer *) [Notification_T = CLWifiTilesManager_Type ::Notification, NotificationData_T = CLWifiTilesManager_Type::NotificationData, NotificationInfo_T = c har, RegistrationInfo_T = char]",  "%s\n",  v47);
                if (v48 != buf) {
                  free(v48);
                }
              }
            }
          }

          while (v14 != v51 + 6);
        }
      }
    }
  }

_BYTE *sub_100DFFA84(_BYTE *result, uint64_t a2, uint64_t a3, void *a4)
{
  if (!result[108])
  {
    __int128 v7 = result;
    uint64_t v8 = *(unsigned int *)(*(void *)a2 + 32LL);
    LODWORD(v13) = *(_DWORD *)(*(void *)a3 + 32LL);
    id v9 = sub_100DFFCD8(a4);
    uint64_t v10 = *(void *)a3 + 80LL;
    BOOL v11 = (uint64_t **)(*(void *)a3 + 40LL);
    uint64_t v14 = (int *)(*(void *)a2 + 32LL);
    BOOL v12 = sub_1004EF3D4(v11, v14, (uint64_t)&unk_1012CF090, &v14);
    BOOL result = (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t *, id, uint64_t, uint64_t **))(*(void *)v7 + 192LL))( v7,  v8,  &v13,  v9,  v10,  v12 + 4);
    if ((_DWORD)result) {
      return objc_msgSend( *(id *)(*(void *)a2 + 64),  "onNotification:withData:",  *(unsigned int *)(*(void *)a3 + 32),  a4,  v13);
    }
  }

  return result;
}

void *sub_100DFFB60@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = operator new(0x68uLL);
  BOOL result = sub_100DFFBB8(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_100DFFBA4(_Unwind_Exception *a1)
{
}

void *sub_100DFFBB8(void *a1, uint64_t a2)
{
  a1[2] = 0LL;
  *a1 = off_1018846A8;
  a1[1] = 0LL;
  sub_100C377C4((uint64_t)&v4, (uint64_t)(a1 + 3), a2);
  return a1;
}

void sub_100DFFC04(_Unwind_Exception *a1)
{
}

void sub_100DFFC18(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1018846A8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100DFFC2C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1018846A8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_100DFFC50(uint64_t a1)
{
}

void sub_100DFFC78(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1)
  {
    operator delete((void *)v1);
  }

id sub_100DFFCD8(void *a1)
{
  if ((objc_opt_isKindOfClass(a1, v2) & 1) != 0) {
    return sub_100DFFD24(a1);
  }
  else {
    return 0LL;
  }
}

id sub_100DFFD24(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return [a1 cppObjectPtr];
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_1018846E8);
    }
    int v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x800000010135F102LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_1018846E8);
    }
    LODWORD(v_Block_object_dispose(va, 8) = 134218498;
    HIDWORD(v_Block_object_dispose(va, 8) = (_DWORD)v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_1018846E8);
    }
    uint64_t v6 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x800000010135F102LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_1018846E8);
    }
    LODWORD(v_Block_object_dispose(va, 8) = 134218498;
    HIDWORD(v_Block_object_dispose(va, 8) = (_DWORD)v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  __int128 v7 = (uint8_t *)v4;
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLWifiTilesManager_Type::NotificationData, Callb ack = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:228:46)]",  "%s\n",  v4);
  if (v7 != buf) {
    free(v7);
  }
  return 0LL;
}

void sub_100E000D0(id a1)
{
  qword_101934478 = (uint64_t)os_log_create("com.apple.locationd.Support", "Support");
}

uint64_t *sub_100E000FC(uint64_t **a1, uint64_t a2, uint64_t a3, void *a4)
{
  __int128 v7 = (uint64_t **)sub_10060372C((uint64_t)a1, &v10, a2);
  BOOL result = *v7;
  if (!*v7)
  {
    sub_100E00180((uint64_t)a1, a3, a4, (uint64_t)&v9);
    sub_1000085FC(a1, v10, v7, v9);
    return v9;
  }

  return result;
}

_BYTE *sub_100E00180@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 8;
  uint64_t v8 = (char *)operator new(0x58uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + _Block_object_dispose(va, 8) = v7;
  *(_BYTE *)(a4 + 1sub_1002D62D8(v1 + 6) = 0;
  *((_OWORD *)v8 + 2) = *(_OWORD *)a2;
  *((void *)v8 + sub_1002D62D8(v1 + 6) = *(void *)(a2 + 16);
  BOOL result = v8 + 56;
  if (*(char *)(a2 + 47) < 0)
  {
    BOOL result = sub_1010DD48C(result, *(void **)(a2 + 24), *(void *)(a2 + 32));
  }

  else
  {
    *(_OWORD *)BOOL result = *(_OWORD *)(a2 + 24);
    *((void *)v8 + 9) = *(void *)(a2 + 40);
  }

  *((void *)v8 + 1sub_100222B94(&v59, (uint64_t)"wifiTileDownloaded", 0) = *a3;
  *(_BYTE *)(a4 + 1sub_1002D62D8(v1 + 6) = 1;
  return result;
}

void sub_100E00220(_Unwind_Exception *a1)
{
  *uint64_t v1 = 0LL;
  sub_10060386C(v3, v2);
  _Unwind_Resume(a1);
}

uint64_t sub_100E0023C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a1 + _Block_object_dispose(va, 8) = 0LL;
  char v4 = (void *)(a1 + 8);
  *(void *)(a1 + 1sub_1002D62D8(v1 + 6) = 0LL;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 48 * a3;
    do
    {
      sub_100603990((uint64_t **)a1, v4, a2, a2);
      a2 += 48LL;
      v6 -= 48LL;
    }

    while (v6);
  }

  return a1;
}

void sub_100E002A4(_Unwind_Exception *a1)
{
}

void sub_100E002BC(void ***a1)
{
  id v2 = *a1;
  if (*v2)
  {
    sub_100E002FC((uint64_t *)v2);
    operator delete(**a1);
  }

void sub_100E002FC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 56LL)
  {
  }

  a1[1] = v2;
}

void *sub_100E00348(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v7 = (void *)(a1 + 24);
  unint64_t v8 = sub_10004B1A4(a1 + 24, (uint64_t)a2);
  unint64_t v9 = v8;
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    unint64_t v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v3 = v8;
      if (v8 >= v10) {
        unint64_t v3 = v8 % v10;
      }
    }

    else
    {
      unint64_t v3 = (v10 - 1) & v8;
    }

    __int16 v13 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v13)
    {
      for (uint64_t i = *v13; i; uint64_t i = *(void **)i)
      {
        unint64_t v15 = *((void *)i + 1);
        if (v15 == v9)
        {
        }

        else
        {
          if (v12 > 1)
          {
            if (v15 >= v10) {
              v15 %= v10;
            }
          }

          else
          {
            v15 &= v10 - 1;
          }

          if (v15 != v3) {
            break;
          }
        }
      }
    }
  }

  int v16 = (void *)(a1 + 16);
  uint64_t i = operator new(0x28uLL);
  *(void *)uint64_t i = 0LL;
  *((void *)i + 1) = v9;
  *((_OWORD *)i + 1) = *(_OWORD *)a3;
  *((void *)i + 4) = *(void *)(a3 + 16);
  *(void *)a3 = 0LL;
  *(void *)(a3 + _Block_object_dispose(va, 8) = 0LL;
  *(void *)(a3 + 1sub_1002D62D8(v1 + 6) = 0LL;
  float v17 = (float)(unint64_t)(*(void *)(a1 + 24) + 1LL);
  float v18 = *(float *)(a1 + 32);
  if (!v10 || (float)(v18 * (float)v10) < v17)
  {
    BOOL v19 = 1LL;
    if (v10 >= 3) {
      BOOL v19 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v20 = v19 | (2 * v10);
    unint64_t v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21) {
      size_t v22 = v21;
    }
    else {
      size_t v22 = v20;
    }
    sub_100019E10(a1, v22);
    unint64_t v10 = *(void *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10) {
        unint64_t v3 = v9 % v10;
      }
      else {
        unint64_t v3 = v9;
      }
    }

    else
    {
      unint64_t v3 = (v10 - 1) & v9;
    }
  }

  uint64_t v23 = *(void *)a1;
  BOOL v24 = *(void **)(*(void *)a1 + 8 * v3);
  if (v24)
  {
    *(void *)uint64_t i = *v24;
LABEL_38:
    *BOOL v24 = i;
    goto LABEL_39;
  }

  *(void *)uint64_t i = *v16;
  *int v16 = i;
  *(void *)(v23 + 8 * v3) = v16;
  if (*(void *)i)
  {
    unint64_t v25 = *(void *)(*(void *)i + 8LL);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v25 >= v10) {
        v25 %= v10;
      }
    }

    else
    {
      v25 &= v10 - 1;
    }

    BOOL v24 = (void *)(*(void *)a1 + 8 * v25);
    goto LABEL_38;
  }

void sub_100E005AC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
}

uint64_t sub_100E005C8(void **a1, const std::string *a2)
{
  char v4 = (void **)sub_100C11EB0();
  if (*((char *)v4 + 23) < 0)
  {
    sub_1010DD48C(&__dst, *v4, (unint64_t)v4[1]);
  }

  else
  {
    __int128 v5 = *(_OWORD *)v4;
    unint64_t v29 = v4[2];
    __int128 __dst = v5;
  }

  uint64_t v6 = (const void **)sub_100C11EB0();
  uint64_t v7 = (const void **)sub_100C0E58C();
  sub_10010B8E0(v6, v7, (uint64_t)v30);
  uint64_t v8 = 0LL;
  while (2)
  {
    unint64_t v9 = (char *)&__dst + 24 * v8;
    int size = (char)a2->__r_.__value_.__s.__size_;
    BOOL v11 = size < 0;
    unint64_t v12 = (const std::string *)a2->__r_.__value_.__r.__words[0];
    if (size >= 0) {
      unint64_t v12 = a2;
    }
    std::string::size_type v13 = a2->__r_.__value_.__s.__size_;
    if (v11) {
      std::string::size_type v13 = a2->__r_.__value_.__l.__size_;
    }
    int v14 = v9[23];
    unint64_t v15 = *(char **)v9;
    uint64_t v16 = *((void *)v9 + 1);
    if (v14 >= 0) {
      unint64_t v15 = (char *)&__dst + 24 * v8;
    }
    uint64_t v17 = v9[23];
    if (v14 < 0) {
      uint64_t v17 = v16;
    }
    p_int size = (std::string::__short::$654DBF3D633A6121C0B197AC38B89F76 *)&v12[-1].__r_.__value_.__s.__size_;
    BOOL v19 = v15 - 1;
    while (v13 && v17)
    {
      int v20 = p_size[v13].__size_;
      int v21 = v19[v17];
      --v13;
      --v17;
      if (v20 != v21) {
        goto LABEL_22;
      }
    }

    if (!v17)
    {
      std::string::basic_string(&__p, a2, 0LL, 9uLL, (std::allocator<char> *)&v27);
      size_t v22 = sub_100121918(*a1, (unsigned __int8 *)&__p);
      if (v22)
      {
        uint64_t v23 = 1LL;
        goto LABEL_24;
      }
    }

void sub_100E00768( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
}

CLCppContainer *sub_100E007BC(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x50uLL);
  unint64_t v3 = v2;
  *(void *)uint64_t v2 = *(void *)a1;
  if (*(char *)(a1 + 31) < 0)
  {
    sub_1010DD48C(v2 + 8, *(void **)(a1 + 8), *(void *)(a1 + 16));
  }

  else
  {
    *(_OWORD *)(v2 + _Block_object_dispose(va, 8) = *(_OWORD *)(a1 + 8);
    *((void *)v2 + 3) = *(void *)(a1 + 24);
  }

  if (*(char *)(a1 + 55) < 0)
  {
    sub_1010DD48C(v3 + 32, *(void **)(a1 + 32), *(void *)(a1 + 40));
  }

  else
  {
    *((_OWORD *)v3 + 2) = *(_OWORD *)(a1 + 32);
    *((void *)v3 + sub_1002D62D8(v1 + 6) = *(void *)(a1 + 48);
  }

  char v4 = v3 + 56;
  if (*(char *)(a1 + 79) < 0)
  {
    sub_1010DD48C(v4, *(void **)(a1 + 56), *(void *)(a1 + 64));
  }

  else
  {
    *(_OWORD *)char v4 = *(_OWORD *)(a1 + 56);
    *((void *)v3 + 9) = *(void *)(a1 + 72);
  }

  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  _DWORD v6[2] = sub_100E00918;
  v6[3] = &unk_10181D3D0;
  v6[4] = v3;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:",  v3,  v6,  0LL,  80LL);
}

void sub_100E008D4(_Unwind_Exception *a1)
{
  if (v1[55] < 0) {
    operator delete(*v3);
  }
  if (v1[31] < 0) {
    operator delete(*v2);
  }
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_100E00918(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1)
  {
    operator delete((void *)v1);
  }

void sub_100E00978()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936068);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936068))
    {
      qword_101936050 = 0LL;
      *(void *)algn_101936058 = 0LL;
      qword_101936060 = 0LL;
      __cxa_atexit((void (*)(void *))sub_1001BA3E4, &qword_101936050, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936068);
    }
  }

void sub_100E009DC()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936118);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936118))
    {
      std::__shared_mutex_base::__shared_mutex_base(&stru_101936070);
      __cxa_atexit((void (*)(void *))sub_1001BA414, &stru_101936070, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936118);
    }
  }

void sub_100E00A50(_Unwind_Exception *a1)
{
}

uint64_t sub_100E00A68()
{
  return __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10199EAF0, (void *)&_mh_execute_header);
}

void sub_100E00AAC()
{
  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_101884838);
  }
  unsigned __int8 v0 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "creating the BinaryLog instance", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101884838);
    }
    v9[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934988,  2LL,  "creating the BinaryLog instance",  v9,  2);
    __int128 v5 = (uint8_t *)v4;
    sub_10029211C("Generic", 1LL, 0, 2LL, "static void CLBinaryLog::create()", "%s\n", v4);
    if (v5 != buf) {
      free(v5);
    }
  }

  uint64_t v1 = operator new(0x8C8uLL);
  sub_100E00E58((uint64_t)v1);
  qword_1019A20C8 = (uint64_t)v1;
  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_101884838);
  }
  uint64_t v2 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "creating fInstance = new CLBinaryLog()", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101884838);
    }
    v9[0] = 0;
    LODWORD(v_Block_object_dispose(va, 8) = 2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934988,  2LL,  "creating fInstance = new CLBinaryLog()",  v9,  v8);
    uint64_t v7 = (uint8_t *)v6;
    sub_10029211C("Generic", 1LL, 0, 2LL, "static void CLBinaryLog::create()", "%s\n", v6);
    if (v7 != buf) {
      free(v7);
    }
  }

  unsigned __int8 v3 = atomic_load((unsigned __int8 *)&qword_10199EB78);
  if ((v3 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_10199EB78))
    {
      qword_10199EB70 = qword_1019A20C8;
      __cxa_atexit((void (*)(void *))sub_100E00DE8, &qword_10199EB70, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_10199EB78);
    }
  }

void sub_100E00DCC(_Unwind_Exception *a1)
{
}

uint64_t *sub_100E00DE8(uint64_t *a1)
{
  return a1;
}

uint64_t sub_100E00E14()
{
  if (qword_10199EB80 != -1) {
    dispatch_once(&qword_10199EB80, &stru_101884708);
  }
  return qword_1019A20C8;
}

uint64_t sub_100E00E58(uint64_t a1)
{
  uint64_t v2 = sub_100E65440((char *)a1);
  *(void *)uint64_t v2 = &off_101884738;
  *((_DWORD *)v2 + 552) = 0;
  v2[2240] = 0;
  unsigned __int8 v3 = v2 + 112;
  *(_OWORD *)(v2 + 221sub_1002D62D8(v1 + 6) = 0u;
  std::string::assign((std::string *)(v2 + 112), ".bin");
  char v4 = (char *)sub_1002F8DDC();
  sub_10030AC8C(v4, (uint64_t)&v24);
  __int128 v5 = (void **)(a1 + 64);
  *(_OWORD *)__int128 v5 = *(_OWORD *)&v24.__r_.__value_.__l.__data_;
  *(void *)(a1 + 8sub_100222B94(&v59, (uint64_t)"wifiTileDownloaded", 0) = v24.__r_.__value_.__l.__cap_;
  std::string::assign((std::string *)(a1 + 88), "locationdSensors");
  sub_10010B8E0((const void **)(a1 + 64), (const void **)(a1 + 88), (uint64_t)&v24);
  int v6 = *(char *)(a1 + 135);
  if (v6 >= 0) {
    uint64_t v7 = v3;
  }
  else {
    uint64_t v7 = *(const std::string::value_type **)(a1 + 112);
  }
  if (v6 >= 0) {
    std::string::size_type v8 = *(unsigned __int8 *)(a1 + 135);
  }
  else {
    std::string::size_type v8 = *(void *)(a1 + 120);
  }
  unint64_t v9 = std::string::append(&v24, v7, v8);
  std::string::size_type v10 = v9->__r_.__value_.__r.__words[0];
  v25[0] = v9->__r_.__value_.__l.__size_;
  *(void *)((char *)v25 + 7) = *(std::string::size_type *)((char *)&v9->__r_.__value_.__r.__words[1] + 7);
  unsigned __int8 size = v9->__r_.__value_.__s.__size_;
  v9->__r_.__value_.__l.__size_ = 0LL;
  v9->__r_.__value_.__l.__cap_ = 0LL;
  v9->__r_.__value_.__r.__words[0] = 0LL;
  unint64_t v12 = (void **)(a1 + 136);
  uint64_t v13 = v25[0];
  *(void *)(a1 + 13sub_1002D62D8(v1 + 6) = v10;
  *(void *)(a1 + 144) = v13;
  *(void *)(a1 + 151) = *(void *)((char *)v25 + 7);
  *(_BYTE *)(a1 + 159) = size;
  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_101884838);
  }
  int v14 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
  {
    unint64_t v15 = (void *)(a1 + 136);
    LODWORD(v24.__r_.__value_.__l.__data_) = 136446210;
    *(std::string::size_type *)((char *)v24.__r_.__value_.__r.__words + 4) = (std::string::size_type)v15;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "#Notice Logging binary sensor data to %{public}s",  (uint8_t *)&v24,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&v24, 0x65CuLL);
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101884838);
    }
    LODWORD(v25[0]) = 136446210;
    *(void *)((char *)v25 + 4) = v12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &v24,  1628LL,  &_mh_execute_header,  qword_101934988,  0LL,  "#Notice Logging binary sensor data to %{public}s",  v25,  12);
    uint64_t v23 = (std::string *)v22;
    sub_10029211C("Generic", 1LL, 0, 2LL, "CLBinaryLog::CLBinaryLog()", "%s\n", v22);
    if (v23 != &v24) {
      free(v23);
    }
  }

  uint64_t v16 = (const char *)(a1 + 64);
  if (!sub_100292D28(v16))
  {
    uid_t v17 = getuid();
    gid_t v18 = getgid();
    sub_100292C04(v5, v17, v18);
  }

  dispatch_queue_t v19 = dispatch_queue_create("com.apple.locationd.binlog.compression", 0LL);
  *(void *)(a1 + 2232) = v19;
  dispatch_queue_global_t global_queue = dispatch_get_global_queue(-32768LL, 0LL);
  dispatch_set_target_queue(v19, global_queue);
  return a1;
}

void sub_100E0119C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
}

void sub_100E011D8(void *a1)
{
  uint64_t v1 = sub_100E6557C(a1);
  operator delete(v1);
}

void sub_100E011EC(uint64_t a1, char a2)
{
  *(_BYTE *)(a1 + 224sub_100222B94(&v59, (uint64_t)"wifiTileDownloaded", 0) = a2;
  if ((a2 & 1) == 0)
  {
    unsigned __int8 v3 = (const char *)(a1 + 136);
    sub_100296964(v3);
  }

uint64_t sub_100E01214(uint64_t a1)
{
  uint64_t v2 = (void *)(a1 + 48);
  (*(void (**)(uint64_t))(*(void *)(a1 + 48) + 16LL))(a1 + 48);
  unsigned __int8 v3 = (FILE *)v2[271];
  if (v3)
  {
    size_t v4 = *(int *)(a1 + 2208);
    if ((_DWORD)v4) {
      fwrite((const void *)(a1 + 160), 1uLL, v4, v3);
    }
    *(_DWORD *)(a1 + 220_Block_object_dispose(va, 8) = 0;
    sub_100E012A8(a1);
  }

  return (*(uint64_t (**)(void *))(*v2 + 24LL))(v2);
}

void sub_100E01294(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100E012A8(uint64_t a1)
{
  if (!sub_1002E52D8(a1 + 48)) {
    sub_101272264();
  }
  uint64_t result = fclose(*(FILE **)(a1 + 2216));
  *(void *)(a1 + 221sub_1002D62D8(v1 + 6) = 0LL;
  return result;
}

uint64_t sub_100E012E0(uint64_t a1)
{
  unsigned __int8 v3 = (FILE **)(a1 + 48);
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v64 = a1 + 48;
  (*(void (**)(uint64_t))(v2 + 16))(a1 + 48);
  __int16 v65 = 256;
  uint64_t v4 = ftell(v3[271]);
  if (ferror(v3[271]))
  {
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101884838);
    }
    __int128 v5 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_FAULT))
    {
      int v6 = *__error();
      uint64_t v7 = __error();
      std::string::size_type v8 = strerror(*v7);
      *(_DWORD *)std::stringbuf::string_type buf = 67240450;
      *(_DWORD *)&uint8_t buf[4] = v6;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_FAULT,  "Failed to determine if log rotation is needed. errno, %{public}d, %{public}s",  buf,  0x12u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101884838);
      }
      uint64_t v38 = qword_101934988;
      int v39 = *__error();
      int v40 = __error();
      BOOL v41 = strerror(*v40);
      int v66 = 67240450;
      *(_DWORD *)__int16 v67 = v39;
      *(_WORD *)&v67[4] = 2082;
      *(void *)&v67[6] = v41;
      double v42 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v38,  17LL,  "Failed to determine if log rotation is needed. errno, %{public}d, %{public}s",  &v66,  18);
      sub_10029211C("Generic", 1LL, 0, 0LL, "void CLBinaryLog::rotateIfNeeded(const double &)", "%s\n", v42);
      if (v42 != buf) {
        free(v42);
      }
    }

    clearerr(*(FILE **)(a1 + 2216));
  }

  else
  {
    uint64_t v9 = *(unsigned int *)(a1 + 12);
    if ((int)v9 >= 1 && v4 > v9)
    {
      BOOL v11 = sub_100E66410();
      else {
        size_t v12 = *(void *)(a1 + 72);
      }
      uint64_t v13 = &v62;
      sub_1000392EC((uint64_t)&v62, v12 + 4);
      if (v63 < 0) {
        uint64_t v13 = (__int128 *)v62;
      }
      if (v12)
      {
        else {
          int v14 = *(const void **)(a1 + 64);
        }
        memmove(v13, v14, v12);
      }

      strcpy((char *)v13 + v12, "logs");
      sub_100E6601C((const void **)&v62, a1 + 88, a1 + 112, (uint64_t)v11, &v61);
      if ((v61.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        size_t size = v61.__r_.__value_.__s.__size_;
      }
      else {
        size_t size = v61.__r_.__value_.__l.__size_;
      }
      uint64_t v16 = v59;
      sub_1000392EC((uint64_t)v59, size + 4);
      if (v60 < 0) {
        uint64_t v16 = (void **)v59[0];
      }
      if (size)
      {
        if ((v61.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          uid_t v17 = &v61;
        }
        else {
          uid_t v17 = (std::string *)v61.__r_.__value_.__r.__words[0];
        }
        memmove(v16, v17, size);
      }

      strcpy((char *)v16 + size, ".bz2");
      if (v63 >= 0) {
        gid_t v18 = (const char *)&v62;
      }
      else {
        gid_t v18 = (const char *)v62;
      }
      if (!sub_100292D28(v18))
      {
        if (v63 >= 0) {
          size_t v19 = HIBYTE(v63);
        }
        else {
          size_t v19 = *((void *)&v62 + 1);
        }
        int v20 = buf;
        sub_1000392EC((uint64_t)buf, v19 + 1);
        if (v71 < 0) {
          int v20 = *(_BYTE **)buf;
        }
        if (v19)
        {
          if (v63 >= 0) {
            int v21 = &v62;
          }
          else {
            int v21 = (__int128 *)v62;
          }
          memmove(v20, v21, v19);
        }

        *(_WORD *)&v20[v19] = 47;
        if (v71 >= 0) {
          size_t v22 = buf;
        }
        else {
          size_t v22 = *(_BYTE **)buf;
        }
        uid_t v23 = getuid();
        gid_t v24 = getgid();
        sub_100292C04(v22, v23, v24);
        if (SHIBYTE(v71) < 0) {
          operator delete(*(void **)buf);
        }
      }

      sub_100E012A8(a1);
      unint64_t v25 = (const char **)(a1 + 136);
      int v26 = (const char *)(a1 + 136);
      if ((v61.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        char v27 = &v61;
      }
      else {
        char v27 = (std::string *)v61.__r_.__value_.__r.__words[0];
      }
      if (!sub_100292D88(v26, (const char *)v27))
      {
        if (qword_101934980 != -1) {
          dispatch_once(&qword_101934980, &stru_101884838);
        }
        int v28 = (os_log_s *)qword_101934988;
        if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
        {
          unint64_t v29 = (const char *)(a1 + 136);
          int v30 = (char)v61.__r_.__value_.__s.__size_;
          std::string::size_type v31 = v61.__r_.__value_.__r.__words[0];
          int v32 = __error();
          uint64_t v33 = &v61;
          int v34 = *v32;
          if (v30 < 0) {
            uint64_t v33 = (std::string *)v31;
          }
          *(_DWORD *)std::stringbuf::string_type buf = 136315650;
          *(void *)&uint8_t buf[4] = v29;
          *(_WORD *)&_BYTE buf[12] = 2080;
          *(void *)&_BYTE buf[14] = v33;
          __int16 v71 = 1024;
          int v72 = v34;
          _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEFAULT,  "#Warning Failed to move aside log file %s to %s (%d)",  buf,  0x1Cu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934980 != -1) {
            dispatch_once(&qword_101934980, &stru_101884838);
          }
          uint64_t v43 = qword_101934988;
          int v44 = (char)v61.__r_.__value_.__s.__size_;
          std::string::size_type v45 = v61.__r_.__value_.__r.__words[0];
          int v46 = __error();
          uint64_t v47 = &v61;
          int v48 = *v46;
          if (v44 < 0) {
            uint64_t v47 = (std::string *)v45;
          }
          int v66 = 136315650;
          *(void *)__int16 v67 = v25;
          *(_WORD *)&v67[8] = 2080;
          *(void *)&_BYTE v67[10] = v47;
          __int16 v68 = 1024;
          int v69 = v48;
          LODWORD(v5sub_100222B94(&v59, (uint64_t)"wifiTileDownloaded", 0) = 28;
          uint64_t v49 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v43,  0LL,  "#Warning Failed to move aside log file %s to %s (%d)",  (const char *)&v66,  v50,  v51);
          sub_10029211C("Generic", 1LL, 0, 2LL, "void CLBinaryLog::rotateIfNeeded(const double &)", "%s\n", v49);
          if (v49 != buf) {
            free(v49);
          }
        }
      }

      sub_100E01B24(a1);
      *(void *)(a1 + 22sub_100BDC958(v1 + 24) = 0LL;
      int v35 = *(_DWORD *)(a1 + 16);
      uint64_t v36 = *(dispatch_queue_s **)(a1 + 2232);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3321888768LL;
      block[2] = sub_100E01D20;
      block[3] = &unk_101884790;
      void block[4] = a1;
      int v58 = v35;
      else {
        std::string v53 = v61;
      }
      if (SHIBYTE(v60) < 0)
      {
        sub_1010DD48C(&v54, v59[0], (unint64_t)v59[1]);
      }

      else
      {
        __int128 v54 = *(_OWORD *)v59;
        uint64_t v55 = v60;
      }

      if (SHIBYTE(v63) < 0)
      {
        sub_1010DD48C(&__p, (void *)v62, *((unint64_t *)&v62 + 1));
      }

      else
      {
        __int128 __p = v62;
        uint64_t v57 = v63;
      }

      dispatch_async(v36, block);
      if (SHIBYTE(v57) < 0) {
        operator delete((void *)__p);
      }
      if (SHIBYTE(v55) < 0) {
        operator delete((void *)v54);
      }
      if (SHIBYTE(v60) < 0) {
        operator delete(v59[0]);
      }
      if (SHIBYTE(v63) < 0) {
        operator delete((void *)v62);
      }
    }
  }

  return ((uint64_t (*)(FILE **))(*v3)->_bf._base)(v3);
}

void sub_100E01A4C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20, char a21, char a22, void *a23, uint64_t a24, int a25, __int16 a26, char a27, char a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, void *__p, uint64_t a34, int a35, __int16 a36, char a37, char a38, void *a39, uint64_t a40, int a41, __int16 a42, char a43, char a44, void *a45, uint64_t a46, int a47, __int16 a48, char a49, char a50,char a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60,__int16 a61,char a62,char a63)
{
  if (a38 < 0) {
    operator delete(__p);
  }
  if (a44 < 0) {
    operator delete(a39);
  }
  if (a50 < 0) {
    operator delete(a45);
  }
  sub_1011C52D0((uint64_t)&a51);
  _Unwind_Resume(a1);
}

void sub_100E01B14(void *a1, int a2)
{
  if (a2) {
    sub_100006BB8(a1);
  }
  JUMPOUT(0x100E01B0CLL);
}

void sub_100E01B24(uint64_t a1)
{
  if (!sub_1002E52D8(a1 + 48)) {
    sub_1012723D0();
  }
  uint64_t v2 = (const char **)(a1 + 136);
  unsigned __int8 v3 = (const char *)(a1 + 136);
  uint64_t v4 = fopen(v3, "ab");
  *(void *)(a1 + 221sub_1002D62D8(v1 + 6) = v4;
  if (!v4)
  {
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101884838);
    }
    __int128 v5 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
    {
      int v6 = (const char *)(a1 + 136);
      *(_DWORD *)std::stringbuf::string_type buf = 136315138;
      BOOL v11 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#Warning Unable to open %s", buf, 0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101884838);
      }
      int v8 = 136315138;
      uint64_t v9 = v2;
      uint64_t v7 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934988,  0LL,  "#Warning Unable to open %s",  (const char *)&v8);
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLBinaryLog::open()", "%s\n", v7);
    }
  }

void sub_100E01D20(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (!*(_DWORD *)(a1 + 112)) {
    goto LABEL_7;
  }
  unsigned __int8 v3 = (const char *)(a1 + 40);
  uint64_t v4 = (const char *)(a1 + 64);
  if (sub_100294D20(v3, v4))
  {
LABEL_7:
    __int128 v5 = (const char *)(a1 + 40);
    sub_100292D50(v5);
  }

  int v6 = *(_DWORD *)(a1 + 112);
  if (v6 >= 1)
  {
    v17[0] = 0LL;
    v17[1] = v17;
    v17[2] = 0x2020000000LL;
    int v18 = 0;
    if (*(char *)(a1 + 111) < 0)
    {
      int v8 = _NSConcreteStackBlock;
      uint64_t v9 = 3321888768LL;
      std::string::size_type v10 = sub_100E01EB4;
      BOOL v11 = &unk_101884760;
      uint64_t v13 = v2;
      uint64_t v7 = *(void **)(a1 + 88);
      sub_1010DD48C(__p, v7, *(void *)(a1 + 96));
      int v6 = *(_DWORD *)(a1 + 112);
    }

    else
    {
      uint64_t v7 = (void *)(a1 + 88);
      int v8 = _NSConcreteStackBlock;
      uint64_t v9 = 3321888768LL;
      std::string::size_type v10 = sub_100E01EB4;
      BOOL v11 = &unk_101884760;
      uint64_t v13 = v2;
      *(_OWORD *)__int128 __p = *(_OWORD *)(a1 + 88);
      uint64_t v15 = *(void *)(a1 + 104);
    }

    size_t v12 = v17;
    int v16 = v6;
    sub_1007BD82C((uint64_t)v7, (uint64_t)&v8);
    if (SHIBYTE(v15) < 0) {
      operator delete(__p[0]);
    }
    _Block_object_dispose(v17, 8);
  }

void sub_100E01E84( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
}

uint64_t sub_100E01EB4(uint64_t a1, std::string::value_type *a2)
{
  uint64_t v4 = *(void *)(a1 + 40);
  else {
    size_t v5 = *(void *)(a1 + 56);
  }
  int v6 = &v28;
  sub_1000392EC((uint64_t)&v28, v5 + 1);
  if ((v28.__r_.__value_.__s.__size_ & 0x80u) != 0) {
    int v6 = (std::string *)v28.__r_.__value_.__r.__words[0];
  }
  if (v5)
  {
    else {
      uint64_t v7 = *(const void **)(a1 + 48);
    }
    memmove(v6, v7, v5);
  }

  *(_WORD *)((char *)&v6->__r_.__value_.__l.__data_ + v5) = 47;
  int v8 = std::string::append(&v28, a2);
  __int128 v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  int64_t cap = v8->__r_.__value_.__l.__cap_;
  __int128 v29 = v9;
  v8->__r_.__value_.__l.__size_ = 0LL;
  v8->__r_.__value_.__l.__cap_ = 0LL;
  v8->__r_.__value_.__r.__words[0] = 0LL;
  sub_1010DDBC0(&v28, a2);
  else {
    std::string __dst = *(std::string *)(v4 + 88);
  }
  std::string::size_type v10 = std::string::append(&__dst, "_");
  __int128 v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  std::string::size_type v27 = v10->__r_.__value_.__l.__cap_;
  __int128 v26 = v11;
  v10->__r_.__value_.__l.__size_ = 0LL;
  v10->__r_.__value_.__l.__cap_ = 0LL;
  v10->__r_.__value_.__r.__words[0] = 0LL;
  if (sub_100E6641C(v4, &v28.__r_.__value_.__l.__data_, (char *)&v26))
  {
    sub_1010DDBC0(v23, a2);
    else {
      std::string v20 = *(std::string *)(v4 + 112);
    }
    uint64_t v13 = std::string::append(&v20, ".bz2");
    __int128 v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
    std::string::size_type v22 = v13->__r_.__value_.__l.__cap_;
    *(_OWORD *)int v21 = v14;
    v13->__r_.__value_.__l.__size_ = 0LL;
    v13->__r_.__value_.__l.__cap_ = 0LL;
    v13->__r_.__value_.__r.__words[0] = 0LL;
    if ((sub_100E664F0(v4, v23, (char *)v21) & 1) != 0)
    {
      int v12 = 1;
    }

    else
    {
      sub_1010DDBC0(__p, a2);
      int v12 = sub_100E664F0(v4, __p, (char *)(v4 + 112));
      if (v19 < 0) {
        operator delete(__p[0]);
      }
    }

    if (SHIBYTE(v22) < 0) {
      operator delete(v21[0]);
    }
    if (v24 < 0) {
      operator delete(v23[0]);
    }
  }

  else
  {
    int v12 = 0;
  }

  if (SHIBYTE(v27) < 0) {
    operator delete((void *)v26);
  }
  if ((char)v28.__r_.__value_.__s.__size_ < 0)
  {
    operator delete(v28.__r_.__value_.__l.__data_);
    if (!v12) {
      goto LABEL_48;
    }
  }

  else if (!v12)
  {
    goto LABEL_48;
  }

  if (++*(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) > *(_DWORD *)(a1 + 72))
  {
    uint64_t v15 = cap >= 0 ? (const char *)&v29 : (const char *)v29;
    if (!sub_100292D50(v15))
    {
      if (cap >= 0) {
        int v16 = (const char *)&v29;
      }
      else {
        int v16 = (const char *)v29;
      }
      syslog(5, "%s,%s,Failed to delete log: %s", "NOTICE", "CLLog", v16);
    }
  }

void sub_100E021B8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, uint64_t a24, void *a25, uint64_t a26, int a27, __int16 a28, char a29, char a30, void *__p, uint64_t a32, int a33, __int16 a34, char a35, char a36, void *a37, uint64_t a38, int a39, __int16 a40, char a41, char a42)
{
  if (a36 < 0) {
    operator delete(__p);
  }
  if (a42 < 0) {
    operator delete(a37);
  }
  _Unwind_Resume(exception_object);
}

void sub_100E02288()
{
}

void *sub_100E0229C(uint64_t a1, uint64_t a2)
{
  uint64_t result = (void *)(a1 + 48);
  __int128 v3 = *(_OWORD *)(a2 + 48);
  result[2] = *(void *)(a2 + 64);
  *(_OWORD *)uint64_t result = v3;
  return result;
}

void sub_100E022CC(uint64_t a1)
{
}

uint64_t sub_100E022E0(uint64_t a1, uint64_t a2)
{
  size_t v5 = (_BYTE *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v11 = a1 + 48;
  (*(void (**)(uint64_t))(v4 + 16))(a1 + 48);
  __int16 v12 = 256;
  if (v5[2192])
  {
    if (*(void *)(a1 + 2216) || (sub_100E01B24(a1), *(void *)(a1 + 2216)))
    {
      int v6 = *(_DWORD *)(a1 + 2208);
      int v7 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 40LL))(a2);
      int v8 = *(_DWORD *)(a1 + 2208);
      if (v7 + v6 >= 2048)
      {
        fwrite((const void *)(a1 + 160), 1uLL, v8, *(FILE **)(a1 + 2216));
        sub_100E012E0(a1);
        int v8 = 0;
        *(_DWORD *)(a1 + 220_Block_object_dispose((const void *)(v20 - 64), 8) = 0;
      }

      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, int *))(*(void *)a2 + 16LL))( a2,  a1 + v8 + 160,  2048LL,  &v10))
      {
        *(_DWORD *)(a1 + 2208) += v10;
      }
    }
  }

  return (*(uint64_t (**)(_BYTE *))(*(void *)v5 + 24LL))(v5);
}

void sub_100E023DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100E023FC(uint64_t a1)
{
  return sub_1002A7CB0(*(void *)(a1 + 24), "LogFileStorageCountBinary", (_DWORD *)(a1 + 16));
}

uint64_t sub_100E0244C(uint64_t a1)
{
  uint64_t v3 = a1 + 48;
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v24 = a1 + 48;
  (*(void (**)(uint64_t))(v2 + 16))(a1 + 48);
  __int16 v25 = 256;
  uint64_t v4 = sub_100E66410();
  size_t v5 = *(FILE **)(a1 + 2216);
  if (v5)
  {
    size_t v6 = *(unsigned int *)(a1 + 2208);
    if ((int)v6 >= 1)
    {
      *(_DWORD *)(a1 + 220_Block_object_dispose((const void *)(v20 - 64), 8) = 0;
    }

    sub_100E012A8(a1);
  }

  int v7 = (const char *)(a1 + 136);
  int v8 = (const char *)(a1 + 136);
  if (sub_100292D28(v8))
  {
    sub_100E66274(a1, a1 + 88, (uint64_t)v4, &__p);
    __int128 v9 = (const char *)(a1 + 136);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if (!sub_100292D88(v9, (const char *)p_p))
    {
      int size = (char)__p.__r_.__value_.__s.__size_;
      std::string::size_type v12 = __p.__r_.__value_.__r.__words[0];
      uint64_t v13 = __error();
      __int128 v14 = &__p;
      if (size < 0) {
        __int128 v14 = (std::string *)v12;
      }
      syslog(5, "%s,%s,Failed to move file %s to %s (%d)\n", "NOTICE", "CLLog", v7, (const char *)v14, *v13);
    }
  }

  sub_100E01B24(a1);
  *(void *)(a1 + 22sub_100BDC958(v1 + 24) = 0LL;
  else {
    size_t v15 = *(void *)(a1 + 72);
  }
  int v16 = &__p;
  sub_1000392EC((uint64_t)&__p, v15 + 4);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
    int v16 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if (v15)
  {
    else {
      uid_t v17 = *(const void **)(a1 + 64);
    }
    memmove(v16, v17, v15);
  }

  strcpy((char *)v16 + v15, "logs");
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    int v18 = &__p;
  }
  else {
    int v18 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if (sub_100292D28((const char *)v18))
  {
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 3321888768LL;
    _DWORD v21[2] = sub_100E0277C;
    void v21[3] = &unk_1018847C0;
    _DWORD v21[4] = a1;
    if ((char)__p.__r_.__value_.__s.__size_ < 0)
    {
      char v19 = (std::string *)__p.__r_.__value_.__r.__words[0];
      sub_1010DD48C(&v22, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    }

    else
    {
      std::string v22 = __p;
      char v19 = &__p;
    }

    sub_1007BD82C((uint64_t)v19, (uint64_t)v21);
  }

  return (*(uint64_t (**)(uint64_t))(*(void *)v3 + 24LL))(v3);
}