void sub_100366FE4(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100006BB8(a1);
}

__n128 sub_100366FF0(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 56 * ((v4 - v5) >> 3) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0LL;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    sub_1003685B4(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }

  unint64_t v8 = *(void *)(v5 + 8 * (v7 / 0x38)) + 72 * (v7 % 0x38);
  *(_OWORD *)unint64_t v8 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  __int128 v10 = *(_OWORD *)(a2 + 32);
  __int128 v11 = *(_OWORD *)(a2 + 48);
  *(void *)(v8 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(v8 + 32) = v10;
  *(_OWORD *)(v8 + 48) = v11;
  *(__n128 *)(v8 + 16) = result;
  ++a1[5];
  return result;
}

double sub_1003670B4(double *a1)
{
  if (a1[24] + a1[23] <= 0.0) {
    return -1.0;
  }
  else {
    return a1[7];
  }
}

double sub_100367100(float *a1)
{
  return hypotf((float)(a1[7] + a1[4]) - a1[17], (float)(a1[8] + a1[5]) - a1[18]);
}

double sub_100367134@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 320);
  *(void *)a2 = *(void *)(a1 + 56);
  *(void *)(a2 + 8) = v2;
  *(void *)(a2 + 16) = 0x3FB70A3D70A3D70ALL;
  double result = *(double *)(a1 + 336);
  if (result <= -1.0) {
    double result = *(double *)(a1 + 328);
  }
  double v4 = *(double *)(a1 + 344);
  uint64_t v5 = 0x3FB1A9FBE76C8B44LL;
  if (v4 >= 0.069) {
    uint64_t v5 = *(void *)(a1 + 344);
  }
  *(double *)(a2 + 24) = result;
  *(void *)(a2 + 32) = v5;
  if (*(_BYTE *)(a1 + 48) == 1)
  {
    uint64_t v6 = (double *)(a1 + 344);
    if (v4 < 9.8696044) {
      uint64_t v6 = (double *)&unk_1012E6D90;
    }
    double result = *v6;
    *(double *)(a2 + 32) = *v6;
  }

  return result;
}

BOOL sub_1003671B4(uint64_t a1, double *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(a1 + 40);
  if (v5 <= 1)
  {
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_101834650);
    }
    uint64_t v6 = (os_log_s *)qword_101934968;
    if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
    {
      double v7 = *a2;
      *(_DWORD *)buf = 134349056;
      double v104 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "InertialOdometry,Not enough IO samples to extrapolate speed for,mct,%{public}.3f",  buf,  0xCu);
    }

    BOOL result = sub_1002921D0(115, 2);
    if (result)
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934960 != -1) {
        dispatch_once(&qword_101934960, &stru_101834650);
      }
      double v9 = *a2;
      int v93 = 134349056;
      double v94 = v9;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "InertialOdometry,Not enough IO samples to extrapolate speed for,mct,%{public}.3f",  &v93,  12);
      __int128 v11 = (uint8_t *)v10;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL cllcf::LCFusionInertialOdometry::getIOExtrapolateSpeedMeasurementAt(const CFTimeInterval &, GroundSpeedMeas urement &, VerticalVelocityMeasurement &) const",  "%s\n",  v10);
LABEL_100:
      if (v11 != buf) {
        free(v11);
      }
      return 0LL;
    }

    return result;
  }

  double v13 = *a2;
  unint64_t v14 = v5 + *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 8);
  uint64_t v16 = *(void *)(v15 + 8 * ((v14 - 1) / 0x38));
  unint64_t v17 = (v14 - 1) % 0x38;
  double v18 = *(double *)(v16 + 72 * v17 + 8);
  if (*a2 >= v18 && *a2 + -1.5 <= v18)
  {
    unint64_t v28 = v14 - 2;
    uint64_t v29 = *(void *)(v15 + 8 * (v28 / 0x38));
    unint64_t v30 = v28 % 0x38;
    if (*(_BYTE *)(v16 + 72 * v17 + 63)) {
      BOOL v31 = *(_BYTE *)(v29 + 72 * v30 + 63) == 0;
    }
    else {
      BOOL v31 = 1;
    }
    if (v31)
    {
      if (qword_101934960 != -1) {
        dispatch_once(&qword_101934960, &stru_101834650);
      }
      v32 = (os_log_s *)qword_101934968;
      if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
      {
        double v33 = *a2;
        *(_DWORD *)buf = 134349056;
        double v104 = v33;
        _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEBUG,  "InertialOdometry,Invalid IO delta-position to extrapolate speed for,mct,%{public}.3f",  buf,  0xCu);
      }

      BOOL result = sub_1002921D0(115, 2);
      if (result)
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934960 != -1) {
          dispatch_once(&qword_101934960, &stru_101834650);
        }
        double v34 = *a2;
        int v93 = 134349056;
        double v94 = v34;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "InertialOdometry,Invalid IO delta-position to extrapolate speed for,mct,%{public}.3f",  &v93,  12);
        __int128 v11 = (uint8_t *)v35;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL cllcf::LCFusionInertialOdometry::getIOExtrapolateSpeedMeasurementAt(const CFTimeInterval &, GroundSpeedMe asurement &, VerticalVelocityMeasurement &) const",  "%s\n",  v35);
        goto LABEL_100;
      }

      return result;
    }

    uint64_t v36 = v16 + 72 * v17;
    int v39 = *(unsigned __int8 *)(v36 + 61);
    v38 = (_BYTE *)(v36 + 61);
    int v37 = v39;
    if (v39 != *(unsigned __int8 *)(v29 + 72 * v30 + 61))
    {
      if (qword_101934960 != -1) {
        dispatch_once(&qword_101934960, &stru_101834650);
      }
      v66 = (os_log_s *)qword_101934968;
      if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
      {
        double v67 = *a2;
        *(_DWORD *)buf = 134349056;
        double v104 = v67;
        _os_log_impl( (void *)&_mh_execute_header,  v66,  OS_LOG_TYPE_DEBUG,  "InertialOdometry,IO samples with different reference frame to extrapolate speed for,mct,%{public}.3f",  buf,  0xCu);
      }

      BOOL result = sub_1002921D0(115, 2);
      if (result)
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934960 != -1) {
          dispatch_once(&qword_101934960, &stru_101834650);
        }
        double v68 = *a2;
        int v93 = 134349056;
        double v94 = v68;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "InertialOdometry,IO samples with different reference frame to extrapolate speed for,mct,%{public}.3f",  &v93,  12);
        __int128 v11 = (uint8_t *)v69;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL cllcf::LCFusionInertialOdometry::getIOExtrapolateSpeedMeasurementAt(const CFTimeInterval &, GroundSpeedMe asurement &, VerticalVelocityMeasurement &) const",  "%s\n",  v69);
        goto LABEL_100;
      }

      return result;
    }

    uint64_t v40 = v16 + 72 * v17;
    float v42 = *(float *)(v40 + 16);
    v41 = (float *)(v40 + 16);
    float v43 = v42;
    if (v42 != *(float *)(v29 + 72 * v30 + 16) || v43 <= 0.0)
    {
      if (qword_101934960 != -1) {
        dispatch_once(&qword_101934960, &stru_101834650);
      }
      v70 = (os_log_s *)qword_101934968;
      if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
      {
        double v71 = *a2;
        *(_DWORD *)buf = 134349056;
        double v104 = v71;
        _os_log_impl( (void *)&_mh_execute_header,  v70,  OS_LOG_TYPE_DEBUG,  "InertialOdometry,Invalid IO sample intervals to extrapolate speed for,mct,%{public}.3f",  buf,  0xCu);
      }

      BOOL result = sub_1002921D0(115, 2);
      if (result)
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934960 != -1) {
          dispatch_once(&qword_101934960, &stru_101834650);
        }
        double v81 = *a2;
        int v93 = 134349056;
        double v94 = v81;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "InertialOdometry,Invalid IO sample intervals to extrapolate speed for,mct,%{public}.3f",  &v93,  12);
        __int128 v11 = (uint8_t *)v82;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL cllcf::LCFusionInertialOdometry::getIOExtrapolateSpeedMeasurementAt(const CFTimeInterval &, GroundSpeedMe asurement &, VerticalVelocityMeasurement &) const",  "%s\n",  v82);
        goto LABEL_100;
      }

      return result;
    }

    double v44 = *(double *)(v29 + 72 * v30 + 8);
    double v45 = v18 - v44;
    if (v18 - v44 <= 0.0)
    {
      if (qword_101934960 != -1) {
        dispatch_once(&qword_101934960, &stru_101834650);
      }
      v72 = (os_log_s *)qword_101934968;
      if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_ERROR))
      {
        double v73 = *a2;
        *(_DWORD *)buf = 134349056;
        double v104 = v73;
        _os_log_impl( (void *)&_mh_execute_header,  v72,  OS_LOG_TYPE_ERROR,  "InertialOdometry,Invalid IO delta-time to extrapolate speed for,mct,%{public}.3f",  buf,  0xCu);
      }

      BOOL result = sub_1002921D0(115, 0);
      if (result)
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934960 != -1) {
          dispatch_once(&qword_101934960, &stru_101834650);
        }
        double v74 = *a2;
        int v93 = 134349056;
        double v94 = v74;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  16LL,  "InertialOdometry,Invalid IO delta-time to extrapolate speed for,mct,%{public}.3f",  &v93,  12);
        __int128 v11 = (uint8_t *)v75;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL cllcf::LCFusionInertialOdometry::getIOExtrapolateSpeedMeasurementAt(const CFTimeInterval &, GroundSpeedMe asurement &, VerticalVelocityMeasurement &) const",  "%s\n",  v75);
        goto LABEL_100;
      }

      return result;
    }

    double v48 = (v18 - v13) / v45;
    double v49 = (v13 - v44) / v45;
    v50 = (float *)(v29 + 72 * v30);
    v51 = (float *)(v16 + 72 * v17);
    double v52 = v49 * v51[5] + v48 * v50[5];
    double v53 = v49 * v51[6] + v48 * v50[6];
    float v90 = v50[7];
    float v91 = v51[7];
    double v54 = hypot(v52, v53);
    double v92 = v54 / v43;
    BOOL v55 = fabs(v52) < 0.005 || v54 < 0.5;
    if (v55 || fabs(v53) < 0.005)
    {
      if (qword_101934960 != -1) {
        dispatch_once(&qword_101934960, &stru_101834650);
      }
      double v76 = v54 / v43;
      v77 = (os_log_s *)qword_101934968;
      if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
      {
        double v78 = *a2;
        *(_DWORD *)buf = 134349824;
        double v104 = v78;
        __int16 v105 = 2050;
        *(double *)v106 = v54;
        *(_WORD *)&v106[8] = 2050;
        *(double *)&v106[10] = v52;
        *(_WORD *)&v106[18] = 2050;
        *(double *)&v106[20] = v53;
        _os_log_impl( (void *)&_mh_execute_header,  v77,  OS_LOG_TYPE_DEBUG,  "InertialOdometry,PDR,cannot compute course for extrapolated sample mct,%{public}.3f,GDistanceMoved,%{public}.3 f,dPosX,%{public}.3f,dPosY,%{public}.3f",  buf,  0x2Au);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934960 != -1) {
          dispatch_once(&qword_101934960, &stru_101834650);
        }
        double v87 = *a2;
        int v93 = 134349824;
        double v94 = v87;
        __int16 v95 = 2050;
        *(double *)v96 = v54;
        *(_WORD *)&v96[8] = 2050;
        *(double *)&v96[10] = v52;
        *(_WORD *)&v96[18] = 2050;
        *(double *)&v96[20] = v53;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "InertialOdometry,PDR,cannot compute course for extrapolated sample mct,%{public}.3f,GDistanceMoved,%{public}.3 f,dPosX,%{public}.3f,dPosY,%{public}.3f",  &v93,  42);
        v89 = (uint8_t *)v88;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL cllcf::LCFusionInertialOdometry::getIOExtrapolateSpeedMeasurementAt(const CFTimeInterval &, GroundSpeedMe asurement &, VerticalVelocityMeasurement &) const",  "%s\n",  v88);
        if (v89 != buf) {
          free(v89);
        }
        double v76 = v54 / v43;
      }

      *(double *)a3 = *a2;
      *(double *)(a3 + 8) = v76;
      *(void *)(a3 + 16) = 0x3FB70A3D70A3D70ALL;
      double v61 = -1.0;
    }

    else
    {
      double v56 = atan2(v53, v52);
      if (v56 < 0.0) {
        double v56 = v56 + 6.28318531;
      }
      double v57 = 6.28318531 - v56;
      if (6.28318531 - v56 < 0.0 || v57 >= 6.28318531)
      {
        double v58 = fmod(6.28318531 - v56, 6.28318531);
        if (v58 >= 0.0) {
          double v57 = v58;
        }
        else {
          double v57 = v58 + 6.28318531;
        }
      }

      double v59 = (float)(v43 * v43) * 0.09;
      double v60 = v53 / (v54 * v54) * (v53 / (v54 * v54));
      if (v59 * (-v52 / (v54 * v54) * (-v52 / (v54 * v54))) + v60 * v59 >= 0.0) {
        double v61 = v59 * (-v52 / (v54 * v54) * (-v52 / (v54 * v54))) + v60 * v59;
      }
      else {
        double v61 = *(double *)&qword_1012E6D80[v37 == 1];
      }
      if (qword_101934960 != -1) {
        dispatch_once(&qword_101934960, &stru_101834650);
      }
      double v62 = v54 / v43;
      v63 = (os_log_s *)qword_101934968;
      if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
      {
        double v64 = *a2;
        int v65 = *v38;
        *(_DWORD *)buf = 134350848;
        double v104 = v64;
        __int16 v105 = 1026;
        *(_DWORD *)v106 = v65;
        *(_WORD *)&v106[4] = 2050;
        *(double *)&v106[6] = v54;
        *(_WORD *)&v106[14] = 2050;
        *(double *)&v106[16] = v92;
        *(_WORD *)&v106[24] = 2050;
        *(double *)&v106[26] = v57 * 57.2957795;
        __int16 v107 = 2050;
        double v108 = sqrt(v61) * 57.2957795;
        __int16 v109 = 2050;
        double v110 = v52;
        __int16 v111 = 2050;
        double v112 = v53;
        _os_log_impl( (void *)&_mh_execute_header,  v63,  OS_LOG_TYPE_DEBUG,  "InertialOdometry,PDR,estimated course for extrapolated IO sample mct,%{public}.3f,RefF,%{public}d,GDistanceMov ed_m,%{public}.3f,GSpeed_mps,%{public}.3f,Course_deg,%{public}.1f,CourseStdv_deg,%{public}.1f,PosX,%{public}.3 f,dPosY,%{public}.3f",  buf,  0x4Eu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934960 != -1) {
          dispatch_once(&qword_101934960, &stru_101834650);
        }
        double v83 = *a2;
        int v84 = *v38;
        int v93 = 134350848;
        double v94 = v83;
        __int16 v95 = 1026;
        *(_DWORD *)v96 = v84;
        *(_WORD *)&v96[4] = 2050;
        *(double *)&v96[6] = v54;
        *(_WORD *)&v96[14] = 2050;
        *(double *)&v96[16] = v92;
        *(_WORD *)&v96[24] = 2050;
        *(double *)&v96[26] = v57 * 57.2957795;
        __int16 v97 = 2050;
        double v98 = sqrt(v61) * 57.2957795;
        __int16 v99 = 2050;
        double v100 = v52;
        __int16 v101 = 2050;
        double v102 = v53;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "InertialOdometry,PDR,estimated course for extrapolated IO sample mct,%{public}.3f,RefF,%{public}d,GDistanceMov ed_m,%{public}.3f,GSpeed_mps,%{public}.3f,Course_deg,%{public}.1f,CourseStdv_deg,%{public}.1f,PosX,%{public}.3 f,dPosY,%{public}.3f",  &v93,  78);
        v86 = (uint8_t *)v85;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL cllcf::LCFusionInertialOdometry::getIOExtrapolateSpeedMeasurementAt(const CFTimeInterval &, GroundSpeedMe asurement &, VerticalVelocityMeasurement &) const",  "%s\n",  v85);
        if (v86 != buf) {
          free(v86);
        }
        double v62 = v92;
      }

      *(double *)a3 = *a2;
      *(double *)(a3 + 8) = v62;
      *(void *)(a3 + 16) = 0x3FB70A3D70A3D70ALL;
      if (v57 > -1.0) {
        goto LABEL_90;
      }
    }

    double v57 = *(double *)(a1 + 328);
LABEL_90:
    double v79 = 0.069;
    if (v61 >= 0.069) {
      double v79 = v61;
    }
    *(double *)(a3 + 24) = v57;
    *(double *)(a3 + 32) = v79;
    if (*v38 == 1)
    {
      double v80 = 9.8696044;
      if (v61 >= 9.8696044) {
        double v80 = v61;
      }
      *(double *)(a3 + 32) = v80;
    }

    *(double *)a4 = *a2;
    *(double *)(a4 + 8) = (v49 * v91 + v48 * v90) / *v41;
    *(void *)(a4 + 16) = 0x3FB70A3D70A3D70ALL;
    return 1LL;
  }

  if (qword_101934960 != -1) {
    dispatch_once(&qword_101934960, &stru_101834650);
  }
  v20 = (os_log_s *)qword_101934968;
  if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
  {
    double v21 = *a2;
    unint64_t v22 = *(void *)(a1 + 40) + *(void *)(a1 + 32) - 1LL;
    uint64_t v23 = *(void *)(*(void *)(*(void *)(a1 + 8) + 8 * (v22 / 0x38)) + 72 * (v22 % 0x38) + 8);
    *(_DWORD *)buf = 134349312;
    double v104 = v21;
    __int16 v105 = 2050;
    *(void *)v106 = v23;
    _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEBUG,  "InertialOdometry,Out of range extrapolation timestamp to extrapolate speed for,mct,%{public}.3f,last IO sample mct,%{public}.3f",  buf,  0x16u);
  }

  BOOL result = sub_1002921D0(115, 2);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_101834650);
    }
    double v24 = *a2;
    unint64_t v25 = *(void *)(a1 + 40) + *(void *)(a1 + 32) - 1LL;
    uint64_t v26 = *(void *)(*(void *)(*(void *)(a1 + 8) + 8 * (v25 / 0x38)) + 72 * (v25 % 0x38) + 8);
    int v93 = 134349312;
    double v94 = v24;
    __int16 v95 = 2050;
    *(void *)v96 = v26;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "InertialOdometry,Out of range extrapolation timestamp to extrapolate speed for,mct,%{public}.3f,last IO sample mct,%{public}.3f",  &v93,  22);
    __int128 v11 = (uint8_t *)v27;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL cllcf::LCFusionInertialOdometry::getIOExtrapolateSpeedMeasurementAt(const CFTimeInterval &, GroundSpeedMeasur ement &, VerticalVelocityMeasurement &) const",  "%s\n",  v27);
    goto LABEL_100;
  }

  return result;
}

void sub_10036810C(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100006BB8(a1);
}

void sub_100368118(id a1)
{
  qword_101934968 = (uint64_t)os_log_create("com.apple.locationd.Position", "LCFusion");
}

void *sub_100368144(void *result, uint64_t a2)
{
  if (a2)
  {
    uint64_t v2 = (void *)*result;
    unint64_t v3 = a2 - 0x71C71C71C71C71C7LL * ((uint64_t)(result[1] - *(void *)*result) >> 3);
    if ((uint64_t)v3 < 1)
    {
      unint64_t v5 = 55 - v3;
      uint64_t v6 = &v2[-(v5 / 0x38)];
      *BOOL result = v6;
      unint64_t v4 = *v6 + 72 * (56 * (v5 / 0x38) - v5) + 3960;
    }

    else
    {
      *BOOL result = &v2[v3 / 0x38];
      unint64_t v4 = v2[v3 / 0x38] + 72 * (v3 % 0x38);
    }

    result[1] = v4;
  }

  return result;
}

uint64_t sub_1003681F8(void *a1, int a2)
{
  uint64_t v3 = a1[1];
  uint64_t v2 = a1[2];
  if (v2 == v3) {
    uint64_t v4 = 0LL;
  }
  else {
    uint64_t v4 = 56 * ((v2 - v3) >> 3) - 1;
  }
  unint64_t v5 = v4 - (a1[5] + a1[4]);
  if (v5 < 0x38) {
    a2 = 1;
  }
  if (v5 < 0x70) {
    int v7 = a2;
  }
  else {
    int v7 = 0;
  }
  if ((v7 & 1) == 0)
  {
    operator delete(*(void **)(v2 - 8));
    a1[2] -= 8LL;
  }

  return v7 ^ 1u;
}

__n128 sub_10036826C@<Q0>( char **a1@<X1>, char *a2@<X2>, char **a3@<X3>, char *a4@<X4>, void *a5@<X5>, char *a6@<X6>, __n128 *a7@<X8>)
{
  if (a1 == a3)
  {
    v19 = a2;
    double v18 = a4;
    uint64_t v15 = a5;
    uint64_t v16 = a6;
  }

  else
  {
    double v13 = a3 - 1;
    v12 = *a3;
    unint64_t v14 = a4;
    uint64_t v15 = a5;
    uint64_t v16 = a6;
    while (1)
    {
      sub_100368338(v12, v14, v15, v16, &v21);
      uint64_t v16 = (char *)v22.n128_u64[1];
      uint64_t v15 = (void *)v22.n128_u64[0];
      if (v13 == a1) {
        break;
      }
      unint64_t v17 = *v13--;
      v12 = v17;
      unint64_t v14 = v17 + 4032;
    }

    double v18 = *a1 + 4032;
    v19 = a2;
  }

  sub_100368338(v19, v18, v15, v16, &v21);
  __n128 result = v22;
  a7->n128_u64[0] = (unint64_t)a3;
  a7->n128_u64[1] = (unint64_t)a4;
  a7[1] = result;
  return result;
}

void *sub_100368338@<X0>(char *a1@<X1>, char *a2@<X2>, void *a3@<X3>, char *a4@<X4>, void *a5@<X8>)
{
  uint64_t v6 = a3;
  if (a1 == a2)
  {
    double v9 = a1;
  }

  else
  {
    double v9 = a2;
    uint64_t v10 = *a3;
    __int128 v11 = a2;
    while (1)
    {
      int64_t v12 = 0x8E38E38E38E38E39LL * ((uint64_t)&a4[-v10] >> 3);
      v11 -= 72 * v12;
      a4 -= 72 * v12;
      if (v12) {
        __n128 result = memmove(a4, v11, 72 * v12 - 6);
      }
      if (v11 == a1) {
        break;
      }
      uint64_t v14 = *--v6;
      uint64_t v10 = v14;
      a4 = (char *)(v14 + 4032);
    }

    if ((char *)(*v6 + 4032LL) == a4)
    {
      uint64_t v15 = (char *)v6[1];
      ++v6;
      a4 = v15;
    }
  }

  *a5 = v9;
  a5[1] = v6;
  a5[2] = a4;
  return result;
}

double sub_10036842C(void *a1, _BYTE *a2, _BYTE **a3, _BYTE *a4, uint64_t a5)
{
  int v7 = *(void ***)a5;
  unint64_t v8 = *(char **)(a5 + 8);
  if (a1 != a3)
  {
    uint64_t v10 = a1 + 1;
    for (i = (_BYTE *)(*a1 + 4032LL); ; i = v12 + 4032)
    {
      sub_1003684BC(a2, v8, i, v7, &v14);
      unint64_t v8 = (char *)*((void *)&v15 + 1);
      int v7 = (void **)v15;
      *(void *)a5 = v15;
      *(void *)(a5 + 8) = v8;
      if (v10 == a3) {
        break;
      }
      int64_t v12 = (_BYTE *)*v10++;
      a2 = v12;
    }

    a2 = *a3;
  }

  sub_1003684BC(a2, v8, a4, v7, &v14);
  double result = *(double *)&v15;
  *(_OWORD *)a5 = v15;
  return result;
}

void *sub_1003684BC@<X0>( _BYTE *__src@<X1>, char *__dst@<X4>, _BYTE *a3@<X2>, void **a4@<X3>, void *a5@<X8>)
{
  uint64_t v6 = a4;
  int v7 = __src;
  if (__src == a3)
  {
    double v9 = __src;
  }

  else
  {
    double v9 = a3;
    uint64_t v6 = a4 + 1;
    uint64_t v10 = (char *)*a4;
    while (1)
    {
      int64_t v11 = 0x8E38E38E38E38E39LL * ((v10 - __dst + 4032) >> 3);
      unint64_t v12 = (uint64_t)(0x8E38E38E38E38E39LL * ((v9 - v7) >> 3)) >= v11 ? v11 : 0x8E38E38E38E38E39LL * ((v9 - v7) >> 3);
      if (v12) {
        double result = memmove(__dst, v7, 72 * v12 - 6);
      }
      v7 += 72 * v12;
      if (v7 == v9) {
        break;
      }
      uint64_t v14 = (char *)*v6++;
      uint64_t v10 = v14;
      __dst = v14;
    }

    __dst += 72 * v12;
    else {
      --v6;
    }
  }

  *a5 = v9;
  a5[1] = v6;
  a5[2] = __dst;
  return result;
}

void sub_1003685B4(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x38;
  unint64_t v4 = v2 - 56;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    int v7 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    double v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)unint64_t v8 = v10;
      a1[2] += 8LL;
      return;
    }

    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      double v34 = (char *)sub_1000071BC(v5, v33);
      v35 = &v34[8 * (v33 >> 2)];
      int v37 = &v34[8 * v36];
      v38 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        unint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v40 = 8 * (v39 >> 3);
        v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)v41 = v42;
          v41 += 8;
          v40 -= 8LL;
        }

        while (v40);
      }

      goto LABEL_30;
    }

void sub_10036887C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

size_t sub_1003688C8(char *__source)
{
  return strlcpy(byte_1019A0E60, __source, 0x100uLL);
}

uint64_t sub_1003688DC(uint64_t a1, float a2, float a3, float a4, float a5)
{
  if (sub_100368ED4(0, (int *)&unk_101937730, 0LL, 0LL, 0LL, 0LL, 0.0, 0.0, 0.0, 0.0))
  {
    if (qword_101934580 != -1) {
      dispatch_once(&qword_101934580, &stru_101834690);
    }
    uint64_t v10 = (os_log_s *)qword_101934588;
    if (os_log_type_enabled((os_log_t)qword_101934588, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "WMM initialization encountered an error",  buf,  2u);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0xFFFFFFFFLL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934580 != -1) {
      dispatch_once(&qword_101934580, &stru_101834690);
    }
    LOWORD(v22) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934588,  2LL,  "WMM initialization encountered an error",  &v22,  2);
LABEL_19:
    uint64_t v13 = (uint8_t *)v11;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "int declinationCalc(const float, const float, const float, const float, GeomagneticData *)",  "%s\n",  v11);
    if (v13 != buf) {
      free(v13);
    }
    return 0xFFFFFFFFLL;
  }

  dword_101994360 = LODWORD(a2);
  dword_101994364 = LODWORD(a3);
  *(float *)&dword_101994368 = a4 / 1000.0;
  dword_10199436C = LODWORD(a5);
  if (sub_100368ED4( 1,  0LL,  (float *)&dword_101994370,  (float *)&dword_101994374,  (float *)&dword_101994378,  &flt_10199437C,  a4 / 1000.0,  a2,  a3,  a5))
  {
    if (qword_101934580 != -1) {
      dispatch_once(&qword_101934580, &stru_101834690);
    }
    uint64_t v12 = (os_log_s *)qword_101934588;
    if (os_log_type_enabled((os_log_t)qword_101934588, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "WMM evaluation encountered an error", buf, 2u);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0xFFFFFFFFLL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934580 != -1) {
      dispatch_once(&qword_101934580, &stru_101834690);
    }
    LOWORD(v22) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934588,  2LL,  "WMM evaluation encountered an error",  &v22,  2);
    goto LABEL_19;
  }

  dword_101994380 = dword_101994370;
  dword_101994384 = dword_101994374;
  dword_101994388 = dword_101994378;
  *(float *)&dword_10199436C = *(float *)&dword_10199436C + 1.0;
  sub_100368ED4( 1,  0LL,  (float *)&dword_101994370,  (float *)&dword_101994374,  (float *)&dword_101994378,  &flt_10199437C,  *(float *)&dword_101994368,  *(float *)&dword_101994360,  *(float *)&dword_101994364,  *(float *)&dword_10199436C);
  float v14 = *(float *)&dword_101994388;
  float v15 = *(float *)&dword_101994380;
  __float2 v16 = __sincosf_stret(*(float *)&dword_101994380 * 0.017453);
  int v17 = dword_101994384;
  __float2 v18 = __sincosf_stret(*(float *)&dword_101994384 * 0.017453);
  if ((float)(v14 * v18.__cosval) < 100.0)
  {
    float v15 = log(-1.0);
    dword_101994380 = LODWORD(v15);
  }

  if (90.0 - fabsf(*(float *)&dword_101994360) <= 0.001)
  {
    float v15 = log(-1.0);
    dword_101994380 = LODWORD(v15);
    float v20 = v15;
    float v19 = v15;
  }

  else
  {
    float v19 = v14 * (float)(v16.__cosval * v18.__cosval);
    float v20 = v14 * (float)(v16.__sinval * v18.__cosval);
  }

  uint64_t result = 0LL;
  *(float *)a1 = v19 / 1000.0;
  *(float *)(a1 + 4) = v20 / 1000.0;
  *(float *)(a1 + 8) = (float)(v14 * v18.__sinval) / 1000.0;
  *(float *)(a1 + 12) = v14 / 1000.0;
  *(float *)(a1 + 16) = (float)(v14 * v18.__cosval) / 1000.0;
  *(float *)(a1 + 20) = v15;
  *(_DWORD *)(a1 + 24) = v17;
  return result;
}

uint64_t sub_100368ED4( int a1, int *a2, float *a3, float *a4, float *a5, float *a6, float a7, float a8, float a9, float a10)
{
  if (a1 == 1)
  {
    float v16 = a10 - *(float *)&dword_10199548C;
    int v17 = (float *)&unk_101995000;
    float v18 = *(float *)&dword_1019954A0;
    if (*(float *)&dword_1019954A0 < 0.0 && v16 < 0.0)
    {
      if (qword_101934580 != -1) {
        dispatch_once(&qword_101934580, &stru_101834690);
      }
      float v19 = (os_log_s *)qword_101934588;
      if (os_log_type_enabled((os_log_t)qword_101934588, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 134349312;
        double v179 = a10;
        __int16 v180 = 2050;
        double v181 = *(float *)&dword_10199548C;
        _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_INFO,  "supplied date (%{public}f) outside valid range (epoch=%{public}f)",  buf,  0x16u);
      }

      if (!sub_1002921D0(115, 2)) {
        return 1LL;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934580 != -1) {
        dispatch_once(&qword_101934580, &stru_101834690);
      }
      int v174 = 134349312;
      double v175 = a10;
      __int16 v176 = 2050;
      double v177 = *(float *)&dword_10199548C;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934588,  1LL,  "supplied date (%{public}f) outside valid range (epoch=%{public}f)",  &v174,  22);
LABEL_127:
      v159 = (uint8_t *)v20;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "int E0000(int, int *, float, float, float, float, float *, float *, float *, float *)",  "%s\n",  v20);
      if (v159 != buf) {
        free(v159);
      }
      return 1LL;
    }

    __float2 v45 = __sincosf_stret(a9 * 0.017453);
    float sinval = v45.__sinval;
    float cosval = v45.__cosval;
    double v48 = (float *)&unk_101995000;
    BOOL v49 = *(float *)&dword_1019954A8 != a8 || *(float *)&dword_1019954A4 != a7;
    dword_1019950D0 = LODWORD(v45.__sinval);
    dword_101995104 = LODWORD(v45.__cosval);
    uint64_t v50 = (float *)&unk_101995000;
    v51 = (float *)&unk_101995000;
    if (v49)
    {
      __float2 v52 = __sincosf_stret(a8 * 0.017453);
      uint64_t v50 = (float *)&unk_101995000;
      int v17 = (float *)&unk_101995000;
      double v48 = (float *)&unk_101995000;
      float v53 = sqrtf(*(float *)&dword_101995478 - (float)(*(float *)&dword_101995480 * (float)(v52.__sinval * v52.__sinval)));
      *(float *)&dword_1019954B0 = v52.__sinval
                                 / sqrtf( (float)(v52.__sinval * v52.__sinval)
                                   + (float)((float)(v54 * v54) * (float)(v52.__cosval * v52.__cosval)));
      *(float *)&int v55 = sqrt(1.0 - (float)(*(float *)&dword_1019954B0 * *(float *)&dword_1019954B0));
      dword_1019954B4 = v55;
      float v56 = (float)(a7 * a7)
          + (float)(v53 * a7) * 2.0
          + (float)((float)(*(float *)&dword_101995484
      dword_1019954B8 = sqrtf(v56);
      float v57 = sqrtf( (float)((float)(v52.__sinval * v52.__sinval) * *(float *)&dword_10199547C)
            + (float)(*(float *)&dword_101995478 * (float)(v52.__cosval * v52.__cosval)));
      *(float *)&dword_1019954BC = (float)(v57 + a7) / *(float *)&dword_1019954B8;
    }

    uint64_t v58 = dword_10199438C;
    if (*(float *)&dword_1019954AC != a9)
    {
      if (dword_10199438C >= 2)
      {
        int v59 = dword_10199438C + 1;
        uint64_t v67 = dword_10199438C - 1LL;
        double v68 = (float *)&dword_101995108;
        float v69 = v45.__sinval;
        v70 = (float *)&dword_1019950D4;
        do
        {
          float v71 = *(float *)&dword_101995104;
          float v72 = (float)(*(float *)&dword_101995104 * sinval) + (float)(v69 * cosval);
          *v70++ = v72;
          float v69 = *(float *)&dword_1019950D0;
          float cosval = (float)(v71 * cosval) - (float)(*(float *)&dword_1019950D0 * sinval);
          *v68++ = cosval;
          float sinval = v72;
          --v67;
        }

        while (v67);
      }

      else
      {
        int v59 = 2;
      }

      dword_101994394 = v59;
    }

    float v73 = *(float *)&dword_1019954B4;
    if ((int)v58 >= 1)
    {
      v161 = a3;
      v162 = a6;
      uint64_t v74 = 0LL;
      v75 = (float *)&unk_1019948E4;
      double v76 = (float *)&unk_101994910;
      v77 = (float *)&unk_10199439C;
      double v78 = (float *)&unk_1019943C8;
      double v79 = (float *)&unk_101994640;
      double v80 = (float *)&unk_10199466C;
      double v81 = &dword_101994E2C;
      int v82 = -1;
      int v83 = 3;
      float v84 = *(float *)&dword_101995474 / *(float *)&dword_1019954B8;
      float v85 = v84 * v84;
      v86 = &dword_101994B88;
      v173 = (float *)&unk_1019951D4;
      float v87 = *(float *)&dword_1019954B0;
      float v88 = -*(float *)&dword_1019954B4;
      float v89 = *(float *)dword_101995100;
      int v90 = dword_10199519C;
      unint64_t v91 = 1LL;
      float v92 = *(float *)&dword_1019950CC;
      float v93 = 0.0;
      double v94 = flt_101995168;
      __int16 v95 = &dword_10199519C;
      v96 = &dword_1019950CC;
      float v97 = 0.0;
      float v98 = 0.0;
      float v99 = 0.0;
      uint64_t v165 = v58 + 1;
      BOOL v171 = v49;
      while (1)
      {
        uint64_t v100 = 0LL;
        int64_t v101 = 0LL;
        int v169 = v82;
        float v102 = -(float)(v84 * v85);
        float v85 = v84 * v85;
        unint64_t v166 = v91 + 1;
        v103 = &dword_101994E28[v91];
        float v104 = flt_101995134[v91];
        int64_t v105 = v91 - 2;
        v172 = &dword_101994B84[v82];
        v106 = v103 - 1;
        unint64_t v107 = v91 - 1;
        double v108 = (float *)((char *)&unk_1019951D0 + 4 * v91 + 52);
        int v109 = v83;
        uint64_t v110 = 13 * (int)v91 - 13;
        uint64_t v111 = 13 * (int)v91;
        double v112 = &dword_101994B84[13 * v91];
        v113 = (float *)&v112[v91 - 14];
        v114 = v86;
        uint64_t v115 = 13 * (v91 - 1);
        v116 = (float *)&v112[v91];
        uint64_t v170 = v74;
        uint64_t v117 = v74 + 1;
        v167 = v114;
        v118 = (float *)v114;
        int v168 = v109;
        do
        {
          if (v49)
          {
            if (v117 == v101)
            {
              *(float *)&v103[v111] = v73 * *(float *)&v106[v110];
              float *v116 = (float)(v87 * *(float *)&v106[v115]) + (float)(v73 * *v113);
            }

            else
            {
              if (v91 == 1 && !v101)
              {
                *(float *)&dword_101994E2C = v87 * *(float *)dword_101994E28;
                if (v18 == a10)
                {
LABEL_75:
                  float v119 = v85 * *(float *)&v81[v100];
LABEL_76:
                  float v126 = flt_1019948E0[v91];
                  float v124 = v126 * v89;
                  float v125 = v126 * v92;
                  goto LABEL_77;
                }

void sub_100369FD0(id a1)
{
  qword_101934588 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Compass");
}

void sub_10036A104(id a1)
{
  qword_101995520 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLMotionStateSilo");
}

uint64_t sub_10036A1B8(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10036A4E0;
  block[3] = &unk_10181A288;
  block[4] = a1;
  if (qword_101995530 != -1) {
    dispatch_once(&qword_101995530, block);
  }
  return qword_1019A0F60;
}

void sub_10036A4BC(_Unwind_Exception *exception_object)
{
  BOOL v3 = *(void **)(v1 - 120);
  if (v3)
  {
    *(void *)(v1 - 112) = v3;
    operator delete(v3);
  }

  _Unwind_Resume(exception_object);
}

uint64_t sub_10036A4E0(uint64_t a1)
{
  unint64_t v2 = operator new(0x1A8uLL);
  uint64_t result = sub_10036A52C((uint64_t)v2, *(void **)(a1 + 32));
  qword_1019A0F60 = (uint64_t)v2;
  return result;
}

void sub_10036A518(_Unwind_Exception *a1)
{
}

uint64_t sub_10036A52C(uint64_t a1, void *a2)
{
  BOOL v3 = (CLMotionActivity *)sub_10036A854(a1, "CLMotionState", a2);
  *(void *)&v3->type = off_1018346E0;
  Init = (CLMotionActivity *)CLMotionActivity::getInit(v3);
  *(_WORD *)(a1 + 248) = 0;
  *(_BYTE *)(a1 + 250) = 0;
  CLMotionActivity::getInit(Init);
  *(void *)(a1 + 392) = a1 + 392;
  *(void *)(a1 + 400) = a1 + 392;
  *(void *)(a1 + 408) = 0LL;
  *(void *)(a1 + 416) = 0LL;
  uint64_t v5 = sub_1006E27E8();
  sub_100413284(v5, buf);
  char v6 = sub_1002A6F64(*(uint64_t *)buf, "LogMotionStateReplay", (BOOL *)(a1 + 248));
  char v7 = v6;
  unint64_t v8 = v25;
  if (v25)
  {
    p_shared_owners = (unint64_t *)&v25->__shared_owners_;
    do
      unint64_t v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      if ((v7 & 1) != 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
  }

  if ((v6 & 1) == 0) {
LABEL_6:
  }
    *(_BYTE *)(a1 + 248) = 0;
LABEL_7:
  uint64_t v11 = sub_1006E27E8();
  sub_100413284(v11, buf);
  uint64_t v12 = (_BYTE *)(a1 + 249);
  char v13 = sub_1002A6F64(*(uint64_t *)buf, "DisableMotionStateNotify", (BOOL *)(a1 + 249));
  char v14 = v13;
  float v15 = v25;
  if (!v25) {
    goto LABEL_11;
  }
  float v16 = (unint64_t *)&v25->__shared_owners_;
  do
    unint64_t v17 = __ldaxr(v16);
  while (__stlxr(v17 - 1, v16));
  if (v17)
  {
LABEL_11:
    if ((v13 & 1) != 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }

  ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
  std::__shared_weak_count::__release_weak(v15);
  if ((v14 & 1) == 0) {
LABEL_12:
  }
    _BYTE *v12 = 0;
LABEL_13:
  if (qword_1019344F0 != -1) {
    dispatch_once(&qword_1019344F0, &stru_101834870);
  }
  float v18 = (os_log_s *)qword_1019344F8;
  if (os_log_type_enabled((os_log_t)qword_1019344F8, OS_LOG_TYPE_DEBUG))
  {
    int v19 = *v12;
    *(_DWORD *)buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = v19;
    _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEBUG,  "DisableMotionStateNotifyDefaultsWrite,%d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344F0 != -1) {
      dispatch_once(&qword_1019344F0, &stru_101834870);
    }
    int v21 = *v12;
    v23[0] = 67109120;
    v23[1] = v21;
    int v22 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344F8,  2LL,  "DisableMotionStateNotifyDefaultsWrite,%d",  v23);
    sub_10029211C("Generic", 1LL, 0, 2LL, "CLMotionState::CLMotionState(id<CLIntersiloUniverse>)", "%s\n", v22);
  }

  return a1;
}

void sub_10036A810(_Unwind_Exception *a1)
{
}

uint64_t sub_10036A854(uint64_t a1, char *a2, void *a3)
{
  *(void *)a1 = off_1018348A0;
  sub_1010DDBC0((void *)(a1 + 8), a2);
  *(void *)(a1 + 32) = a3;
  *(void *)(a1 + 40) = [a3 silo];
  *(void *)(a1 + 48) = 0LL;
  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + 56) = a1 + 64;
  *(void *)(a1 + 88) = 0LL;
  *(void *)(a1 + 96) = 0LL;
  *(void *)(a1 + 72) = 0LL;
  *(void *)(a1 + 80) = a1 + 88;
  *(_DWORD *)(a1 + 104) = 0;
  *(_BYTE *)(a1 + 108) = 0;
  return a1;
}

void sub_10036A8D4(_Unwind_Exception *exception_object)
{
}

uint64_t sub_10036A8F0(uint64_t a1)
{
  *(void *)a1 = off_1018348A0;
  [*(id *)(a1 + 48) invalidate];

  sub_100231CA4(a1 + 80, *(void **)(a1 + 88));
  sub_100231CF0(a1 + 56, *(void **)(a1 + 64));
  return a1;
}

uint64_t sub_10036A964(void *a1)
{
  *a1 = off_1018346E0;
  sub_1001B4C40(a1 + 49);
  return sub_10036A8F0((uint64_t)a1);
}

void sub_10036A998(void *a1)
{
  *a1 = off_1018346E0;
  sub_1001B4C40(a1 + 49);
  unint64_t v2 = (void *)sub_10036A8F0((uint64_t)a1);
  operator delete(v2);
}

void sub_10036A9D0(uint64_t a1)
{
  *(_BYTE *)(a1 + 108) = 1;
  unint64_t v2 = *(void **)(a1 + 416);
  if (v2)
  {
    [v2 invalidate];

    *(void *)(a1 + 416) = 0LL;
  }

unint64_t sub_10036AA0C()
{
  return ((unint64_t)sub_1004F97F4() >> 22) & 1;
}

unint64_t sub_10036AA24()
{
  return ((unint64_t)sub_1004F97F4() >> 23) & 1;
}

uint64_t sub_10036AA3C()
{
  return 0LL;
}

__n128 sub_10036AA44(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a2 = *(_OWORD *)(a1 + 112);
  __int128 v2 = *(_OWORD *)(a1 + 128);
  __int128 v3 = *(_OWORD *)(a1 + 144);
  __int128 v4 = *(_OWORD *)(a1 + 176);
  *(_OWORD *)(a2 + 48) = *(_OWORD *)(a1 + 160);
  *(_OWORD *)(a2 + 64) = v4;
  *(_OWORD *)(a2 + 16) = v2;
  *(_OWORD *)(a2 + 32) = v3;
  __n128 result = *(__n128 *)(a1 + 192);
  __int128 v6 = *(_OWORD *)(a1 + 208);
  __int128 v7 = *(_OWORD *)(a1 + 224);
  *(void *)(a2 + 128) = *(void *)(a1 + 240);
  *(_OWORD *)(a2 + 96) = v6;
  *(_OWORD *)(a2 + 112) = v7;
  *(__n128 *)(a2 + 80) = result;
  return result;
}

void *sub_10036AA78@<X0>(_DWORD *a1@<X1>, void *a2@<X8>)
{
  return sub_1010DDBC0(a2, __str);
}

void sub_10036AAF0(uint64_t a1)
{
  __int128 v2 = (int *)(a1 + 112);
  __int128 v3 = *(_OWORD *)(a1 + 224);
  v11[6] = *(_OWORD *)(a1 + 208);
  v11[7] = v3;
  uint64_t v12 = *(void *)(a1 + 240);
  __int128 v4 = *(_OWORD *)(a1 + 160);
  v11[2] = *(_OWORD *)(a1 + 144);
  v11[3] = v4;
  __int128 v5 = *(_OWORD *)(a1 + 192);
  v11[4] = *(_OWORD *)(a1 + 176);
  v11[5] = v5;
  __int128 v6 = *(_OWORD *)(a1 + 128);
  v11[0] = *(_OWORD *)(a1 + 112);
  v11[1] = v6;
  CLMotionActivity::init((CLMotionActivity *)(a1 + 112));
  sub_10036AC00(a1);
  CLMotionActivity::init((CLMotionActivity *)(a1 + 256));
  if (!*(_BYTE *)(a1 + 249))
  {
    __int128 v7 = *(_OWORD *)(a1 + 368);
    v14[6] = *(_OWORD *)(a1 + 352);
    v14[7] = v7;
    uint64_t v15 = *(void *)(a1 + 384);
    __int128 v8 = *(_OWORD *)(a1 + 304);
    v14[2] = *(_OWORD *)(a1 + 288);
    v14[3] = v8;
    __int128 v9 = *(_OWORD *)(a1 + 336);
    v14[4] = *(_OWORD *)(a1 + 320);
    v14[5] = v9;
    __int128 v10 = *(_OWORD *)(a1 + 272);
    v14[0] = *(_OWORD *)(a1 + 256);
    v14[1] = v10;
    int v13 = 3;
    (*(void (**)(uint64_t, int *, _OWORD *, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  &v13,  v14,  1LL,  0xFFFFFFFFLL,  0LL);
  }

  sub_100672EB8((int *)v11, v2, (uint64_t)"");
}

uint64_t sub_10036AC00(uint64_t result)
{
  if (!*(_BYTE *)(result + 249))
  {
    uint64_t v1 = result;
    __int128 v2 = *(_OWORD *)(result + 224);
    v7[6] = *(_OWORD *)(result + 208);
    v7[7] = v2;
    uint64_t v8 = *(void *)(result + 240);
    __int128 v3 = *(_OWORD *)(result + 160);
    v7[2] = *(_OWORD *)(result + 144);
    v7[3] = v3;
    __int128 v4 = *(_OWORD *)(result + 192);
    v7[4] = *(_OWORD *)(result + 176);
    v7[5] = v4;
    __int128 v5 = *(_OWORD *)(result + 128);
    v7[0] = *(_OWORD *)(result + 112);
    v7[1] = v5;
    int v6 = 0;
    (*(void (**)(uint64_t, int *, _OWORD *, uint64_t, uint64_t, void))(*(void *)result + 152LL))( result,  &v6,  v7,  1LL,  0xFFFFFFFFLL,  0LL);
    int v6 = 1;
    (*(void (**)(uint64_t, int *, _OWORD *, uint64_t, uint64_t, void))(*(void *)v1 + 152LL))( v1,  &v6,  v7,  1LL,  0xFFFFFFFFLL,  0LL);
    int v6 = 2;
    return (*(uint64_t (**)(uint64_t, int *, _OWORD *, uint64_t, uint64_t, void))(*(void *)v1 + 152LL))( v1,  &v6,  v7,  1LL,  0xFFFFFFFFLL,  0LL);
  }

  return result;
}

uint64_t sub_10036AD00(uint64_t a1, _DWORD *a2)
{
  if (*a2 != 3) {
    return 1LL;
  }
  if (*(_BYTE *)(a1 + 250))
  {
    if (qword_1019344F0 != -1) {
      dispatch_once(&qword_1019344F0, &stru_101834870);
    }
    __int128 v3 = (os_log_s *)qword_1019344F8;
    if (os_log_type_enabled((os_log_t)qword_1019344F8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "DOMINANT ACTIVITY: already monitoring dominant activity",  buf,  2u);
    }

    BOOL v4 = sub_1002921D0(115, 0);
    uint64_t result = 0LL;
    if (v4)
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344F0 != -1) {
        dispatch_once(&qword_1019344F0, &stru_101834870);
      }
      v9[0] = 0;
      int v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344F8,  16LL,  "DOMINANT ACTIVITY: already monitoring dominant activity",  v9,  2);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLMotionState::registerForNotificationInternal(const CLMotionState_Type::Notification &)",  "%s\n",  v6);
      return 0LL;
    }
  }

  else
  {
    if (qword_1019344F0 != -1) {
      dispatch_once(&qword_1019344F0, &stru_101834870);
    }
    __int128 v7 = (os_log_s *)qword_1019344F8;
    if (os_log_type_enabled((os_log_t)qword_1019344F8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "DOMINANT ACTIVITY: start monitoring dominant activity",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344F0 != -1) {
        dispatch_once(&qword_1019344F0, &stru_101834870);
      }
      v9[0] = 0;
      uint64_t v8 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344F8,  2LL,  "DOMINANT ACTIVITY: start monitoring dominant activity",  v9,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLMotionState::registerForNotificationInternal(const CLMotionState_Type::Notification &)",  "%s\n",  v8);
    }

    uint64_t result = 1LL;
    *(_BYTE *)(a1 + 250) = 1;
  }

  return result;
}

uint64_t sub_10036AFE4(uint64_t a1, _DWORD *a2)
{
  if (*a2 != 3) {
    return 1LL;
  }
  if (*(_BYTE *)(a1 + 250))
  {
    if (qword_1019344F0 != -1) {
      dispatch_once(&qword_1019344F0, &stru_101834870);
    }
    __int128 v3 = (os_log_s *)qword_1019344F8;
    if (os_log_type_enabled((os_log_t)qword_1019344F8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "DOMINANT ACTIVITY: stop monitoring dominant activity",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344F0 != -1) {
        dispatch_once(&qword_1019344F0, &stru_101834870);
      }
      v10[0] = 0;
      __int128 v9 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344F8,  2LL,  "DOMINANT ACTIVITY: stop monitoring dominant activity",  v10,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLMotionState::unregisterForNotificationInternal(const CLMotionState_Type::Notification &)",  "%s\n",  v9);
    }

    CLMotionActivity::init((CLMotionActivity *)(a1 + 256));
    *(_BYTE *)(a1 + 250) = 0;
    BOOL v4 = *(void **)(a1 + 416);
    if (v4)
    {
      [v4 invalidate];

      *(void *)(a1 + 416) = 0LL;
    }

    return 1LL;
  }

  if (qword_1019344F0 != -1) {
    dispatch_once(&qword_1019344F0, &stru_101834870);
  }
  int v6 = (os_log_s *)qword_1019344F8;
  if (os_log_type_enabled((os_log_t)qword_1019344F8, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_ERROR,  "DOMINANT ACTIVITY: not monitoring dominant activity yet",  buf,  2u);
  }

  BOOL v7 = sub_1002921D0(115, 0);
  uint64_t result = 0LL;
  if (v7)
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344F0 != -1) {
      dispatch_once(&qword_1019344F0, &stru_101834870);
    }
    v10[0] = 0;
    uint64_t v8 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344F8,  16LL,  "DOMINANT ACTIVITY: not monitoring dominant activity yet",  v10,  2);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLMotionState::unregisterForNotificationInternal(const CLMotionState_Type::Notification &)",  "%s\n",  v8);
    return 0LL;
  }

  return result;
}

uint64_t sub_10036B2E0(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4, uint64_t a5, uint64_t a6)
{
  *(void *)a1 = off_1018349F0;
  *(void *)(a1 + 8) = -[CLNotifierClientAdapter initWithClient:]( objc_alloc(&OBJC_CLASS___CLNotifierClientAdapter),  "initWithClient:",  a1);
  *(void *)(a1 + 24) = a5;
  *(void *)(a1 + 32) = a6;
  else {
    uint64_t v12 = (uint64_t *)*a3;
  }
  id v13 = objc_msgSend( objc_msgSend(a4, "vendor"),  "proxyForService:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v12));
  *(void *)(a1 + 16) = v13;
  id v14 = v13;
  if (a2) {
    [*(id *)(a1 + 16) setDelegateEntityName:a2];
  }
  objc_msgSend(*(id *)(a1 + 16), "registerDelegate:inSilo:", *(void *)(a1 + 8), objc_msgSend(a4, "silo"));
  return a1;
}

void sub_10036B3B4(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = operator new(0x30uLL);
  sub_1010DDBC0(__p, "CLMotionState");
  sub_10036B2E0((uint64_t)v8, 0LL, (uint64_t *)__p, a3, a1, a2);
  *uint64_t v8 = off_1018347D8;
  *a4 = v8;
  if (v10 < 0) {
    operator delete(__p[0]);
  }
}

void sub_10036B450( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete(v15);
  _Unwind_Resume(a1);
}

id sub_10036B47C(uint64_t a1)
{
  return objc_msgSend( -[CLServiceVendor proxyForService:]( +[CLServiceVendor sharedInstance](CLServiceVendor, "sharedInstance"),  "proxyForService:",  @"CLMotionState"),  "syncgetDoSync:",  a1);
}

void sub_10036B4B4(uint64_t a1, uint64_t a2)
{
  HIDWORD(v14) = a2;
  if (!*(_BYTE *)(a1 + 108))
  {
    uint64_t v4 = *(void *)(a1 + 88);
    if (!v4) {
      goto LABEL_12;
    }
    uint64_t v5 = a1 + 80;
    uint64_t v6 = a1 + 88;
    do
    {
      int v7 = *(_DWORD *)(v4 + 32);
      BOOL v8 = v7 < (int)a2;
      else {
        __int128 v9 = (uint64_t *)(v4 + 8);
      }
      if (!v8) {
        uint64_t v6 = v4;
      }
      uint64_t v4 = *v9;
    }

    while (*v9);
    if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= (int)a2)
    {
      while (*(void *)(v6 + 56))
      {
        *(_DWORD *)buf = *(_DWORD *)(*(void *)(v6 + 40) + 28LL);
        (*(void (**)(uint64_t, uint64_t, uint8_t *))(*(void *)a1 + 112LL))(a1, a2, buf);
      }

      sub_100233254(v5, (int *)&v14 + 1);
    }

    else
    {
LABEL_12:
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101834850);
      }
      char v10 = (os_log_s *)qword_1019349D8;
      if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
      {
        uint64_t v11 = (void *)(a1 + 8);
        *(_DWORD *)buf = 136446466;
        float v20 = v11;
        __int16 v21 = 1026;
        int v22 = a2;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
          buf,
          0x12u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_101834850);
        }
        uint64_t v12 = (void *)(a1 + 8);
        int v15 = 136446466;
        float v16 = v12;
        __int16 v17 = 1026;
        int v18 = a2;
        LODWORD(v14) = 18;
        id v13 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
                        &v15,
                        v14);
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLNotifier<CLMotionState_Type::Notification, CLMotionState_Type::NotificationData>::removeClient( int) [Notification_T = CLMotionState_Type::Notification, NotificationData_T = CLMotionState_Type::Notification Data, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v13);
      }
    }
  }

uint64_t sub_10036B728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void *))(*(void *)a1 + 96LL))( a1,  a2,  a3,  &unk_1019377F8);
}

uint64_t sub_10036B73C(uint64_t a1, int a2, int *a3, char *a4)
{
  int v41 = a2;
  if (*(_BYTE *)(a1 + 108)) {
    return 0LL;
  }
  uint64_t v7 = *(void *)(a1 + 88);
  if (v7)
  {
    uint64_t v10 = a1 + 88;
    do
    {
      int v11 = *(_DWORD *)(v7 + 32);
      BOOL v12 = v11 < a2;
      if (v11 >= a2) {
        id v13 = (uint64_t *)v7;
      }
      else {
        id v13 = (uint64_t *)(v7 + 8);
      }
      if (!v12) {
        uint64_t v10 = v7;
      }
      uint64_t v7 = *v13;
    }

    while (*v13);
    if (v10 != a1 + 88 && *(_DWORD *)(v10 + 32) <= a2)
    {
      *(void *)int v42 = v10;
      int v17 = *a3;
      uint64_t v20 = *(void *)(v10 + 48);
      uint64_t v19 = v10 + 48;
      uint64_t v18 = v20;
      if (!v20) {
        goto LABEL_31;
      }
      uint64_t v21 = v19;
      do
      {
        int v22 = *(_DWORD *)(v18 + 28);
        BOOL v23 = v22 < v17;
        if (v22 >= v17) {
          uint64_t v24 = (uint64_t *)v18;
        }
        else {
          uint64_t v24 = (uint64_t *)(v18 + 8);
        }
        if (!v23) {
          uint64_t v21 = v18;
        }
        uint64_t v18 = *v24;
      }

      while (*v24);
      if (v21 == v19 || v17 < *(_DWORD *)(v21 + 28)) {
LABEL_31:
      }
        uint64_t v21 = v19;
      uint64_t v25 = *(void *)(a1 + 64);
      if (!v25) {
        goto LABEL_42;
      }
      uint64_t v26 = a1 + 64;
      do
      {
        int v27 = *(_DWORD *)(v25 + 32);
        BOOL v28 = v27 < v17;
        if (v27 >= v17) {
          int v29 = (uint64_t *)v25;
        }
        else {
          int v29 = (uint64_t *)(v25 + 8);
        }
        if (!v28) {
          uint64_t v26 = v25;
        }
        uint64_t v25 = *v29;
      }

      while (*v29);
      if (v26 != a1 + 64 && v17 >= *(_DWORD *)(v26 + 32))
      {
        uint64_t v40 = v26;
        uint64_t v34 = *(void *)(v26 + 56);
        char v35 = *a4;
        *(void *)&buf[0] = &v41;
        *((_BYTE *)sub_1004EF3D4((uint64_t **)(v26 + 40), &v41, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = v35;
        memset(buf, 0, 160);
        if (v21 == v19
          && (*(unsigned int (**)(uint64_t, int *, _OWORD *))(*(void *)a1 + 128LL))(a1, a3, buf))
        {
          int v36 = sub_10036DF3C(buf);
          sub_10036D564((_BYTE *)a1, (uint64_t)v42, (uint64_t)&v40, v36);
        }

        if (v34) {
          goto LABEL_44;
        }
      }

      else
      {
LABEL_42:
        uint64_t v40 = a1 + 64;
        char v30 = byte_1019377F9;
        HIDWORD(v39) = v17;
        *(void *)&buf[0] = (char *)&v39 + 4;
        *((_BYTE *)sub_10023347C((uint64_t **)(a1 + 56), (int *)&v39 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 80) = v30;
        HIDWORD(v39) = *a3;
        *(void *)&buf[0] = (char *)&v39 + 4;
        __int128 v31 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v39 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        sub_1000F0D38(v31 + 8);
        char v32 = *a4;
        HIDWORD(v39) = *a3;
        *(void *)&buf[0] = (char *)&v39 + 4;
        unint64_t v33 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v39 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        *(void *)&buf[0] = &v41;
        *((_BYTE *)sub_1004EF3D4(v33 + 5, &v41, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = v32;
      }

      (*(void (**)(uint64_t, int *))(*(void *)a1 + 168LL))(a1, a3);
LABEL_44:
      if (v21 == v19)
      {
        LODWORD(buf[0]) = *a3;
        sub_10004A8FC((uint64_t **)(*(void *)v42 + 40LL), (int *)buf, buf);
      }

      return 1LL;
    }
  }

  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101834850);
  }
  uint64_t v14 = (os_log_s *)qword_1019349D8;
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
  {
    int v15 = (void *)(a1 + 8);
    LODWORD(buf[0]) = 136446466;
    *(void *)((char *)buf + 4) = v15;
    WORD6(buf[0]) = 1026;
    *(_DWORD *)((char *)buf + 14) = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
      (uint8_t *)buf,
      0x12u);
  }

  BOOL v16 = sub_1002921D0(115, 0);
  uint64_t result = 0LL;
  if (v16)
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101834850);
    }
    int v37 = (void *)(a1 + 8);
    *(_DWORD *)int v42 = 136446466;
    *(void *)&v42[4] = v37;
    __int16 v43 = 1026;
    int v44 = a2;
    LODWORD(v39) = 18;
    int v38 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
                    v42,
                    v39);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLMotionState_Type::Notification, CLMotionState_Type::NotificationData>::registerForNotifi cation(int, const Notification_T &, const RegistrationInfo_T &) [Notification_T = CLMotionState_Type::Notification , NotificationData_T = CLMotionState_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v38);
    return 0LL;
  }

  return result;
}

BOOL sub_10036BBB4(uint64_t a1, int a2, int *a3)
{
  uint64_t v5 = *(void *)(a1 + 88);
  if (!v5) {
    goto LABEL_11;
  }
  uint64_t v6 = a1 + 88;
  do
  {
    int v7 = *(_DWORD *)(v5 + 32);
    BOOL v8 = v7 < a2;
    if (v7 >= a2) {
      __int128 v9 = (uint64_t *)v5;
    }
    else {
      __int128 v9 = (uint64_t *)(v5 + 8);
    }
    if (!v8) {
      uint64_t v6 = v5;
    }
    uint64_t v5 = *v9;
  }

  while (*v9);
  if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= a2)
  {
    uint64_t v16 = *(void *)(v6 + 48);
    uint64_t v14 = v6 + 48;
    uint64_t v15 = v16;
    if (!v16) {
      goto LABEL_29;
    }
    int v17 = *a3;
    uint64_t v18 = v14;
    do
    {
      int v19 = *(_DWORD *)(v15 + 28);
      BOOL v20 = v19 < v17;
      if (v19 >= v17) {
        uint64_t v21 = (uint64_t *)v15;
      }
      else {
        uint64_t v21 = (uint64_t *)(v15 + 8);
      }
      if (!v20) {
        uint64_t v18 = v15;
      }
      uint64_t v15 = *v21;
    }

    while (*v21);
    if (v18 == v14 || v17 < *(_DWORD *)(v18 + 28)) {
LABEL_29:
    }
      uint64_t v18 = v14;
    return v18 != v14;
  }

  else
  {
LABEL_11:
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101834850);
    }
    uint64_t v10 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
    {
      int v11 = (void *)(a1 + 8);
      *(_DWORD *)buf = 136446466;
      int v29 = v11;
      __int16 v30 = 1026;
      int v31 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
        buf,
        0x12u);
    }

    BOOL v12 = sub_1002921D0(115, 0);
    BOOL result = 0LL;
    if (v12)
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101834850);
      }
      int v22 = (void *)(a1 + 8);
      int v24 = 136446466;
      uint64_t v25 = v22;
      __int16 v26 = 1026;
      int v27 = a2;
      BOOL v23 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
                      &v24,
                      18);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLMotionState_Type::Notification, CLMotionState_Type::NotificationData>::clientRegistere d(int, const Notification_T &) [Notification_T = CLMotionState_Type::Notification, NotificationData_T = CLMotion State_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v23);
      return 0LL;
    }
  }

  return result;
}

BOOL sub_10036BE34(char *a1, int a2, int *a3)
{
  HIDWORD(v33) = a2;
  int v3 = a1[108];
  if (!a1[108])
  {
    uint64_t v6 = *((void *)a1 + 11);
    if (v6)
    {
      BOOL v8 = a1 + 88;
      do
      {
        int v9 = *(_DWORD *)(v6 + 32);
        BOOL v10 = v9 < a2;
        if (v9 >= a2) {
          int v11 = (uint64_t *)v6;
        }
        else {
          int v11 = (uint64_t *)(v6 + 8);
        }
        if (!v10) {
          BOOL v8 = (char *)v6;
        }
        uint64_t v6 = *v11;
      }

      while (*v11);
      if (v8 != a1 + 88 && *((_DWORD *)v8 + 8) <= a2)
      {
        uint64_t v14 = (char *)*((void *)v8 + 6);
        BOOL v12 = v8 + 48;
        id v13 = v14;
        if (v14)
        {
          int v15 = *a3;
          uint64_t v16 = v12;
          do
          {
            int v17 = *((_DWORD *)v13 + 7);
            BOOL v18 = v17 < v15;
            if (v17 >= v15) {
              int v19 = (char **)v13;
            }
            else {
              int v19 = (char **)(v13 + 8);
            }
            if (!v18) {
              uint64_t v16 = v13;
            }
            id v13 = *v19;
          }

          while (*v19);
          if (v16 != v12 && v15 >= *((_DWORD *)v16 + 7))
          {
            LODWORD(__p[0]) = *a3;
            sub_1004EF494((uint64_t)(v12 - 8), (int *)__p);
            uint64_t v20 = *((void *)a1 + 8);
            if (!v20) {
              goto LABEL_33;
            }
            int v21 = *a3;
            int v22 = a1 + 64;
            do
            {
              int v23 = *(_DWORD *)(v20 + 32);
              BOOL v24 = v23 < v21;
              if (v23 >= v21) {
                uint64_t v25 = (uint64_t *)v20;
              }
              else {
                uint64_t v25 = (uint64_t *)(v20 + 8);
              }
              if (!v24) {
                int v22 = (char *)v20;
              }
              uint64_t v20 = *v25;
            }

            while (*v25);
            if (v22 != a1 + 64 && v21 >= *((_DWORD *)v22 + 8))
            {
              sub_1004EF494((uint64_t)(v22 + 40), (int *)&v33 + 1);
              if (!*((void *)v22 + 7)) {
                (*(void (**)(char *, int *))(*(void *)a1 + 176LL))(a1, a3);
              }
            }

            else
            {
LABEL_33:
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101834850);
              }
              __int16 v26 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                int v27 = a1 + 8;
                if (a1[31] < 0) {
                  int v27 = (void *)*v27;
                }
                (*(void (**)(void **__return_ptr, char *, int *))(*(void *)a1 + 160LL))(__p, a1, a3);
                if (v43 >= 0) {
                  BOOL v28 = __p;
                }
                else {
                  BOOL v28 = (void **)__p[0];
                }
                *(_DWORD *)buf = 136446466;
                *(void *)&uint8_t buf[4] = v27;
                __int16 v35 = 2082;
                int v36 = v28;
                _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_FAULT,  "%{public}s; notification %{public}s not found",
                  buf,
                  0x16u);
                if (v43 < 0) {
                  operator delete(__p[0]);
                }
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(__p, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_101834850);
                }
                int v29 = a1 + 8;
                if (a1[31] < 0) {
                  int v29 = (void *)*v29;
                }
                uint64_t v30 = qword_1019349D8;
                (*(void (**)(_BYTE *__return_ptr, char *, int *))(*(void *)a1 + 160LL))(buf, a1, a3);
                if (v37 >= 0) {
                  int v31 = buf;
                }
                else {
                  int v31 = *(_BYTE **)buf;
                }
                int v38 = 136446466;
                uint64_t v39 = v29;
                __int16 v40 = 2082;
                int v41 = v31;
                LODWORD(v33) = 22;
                char v32 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v30,  17LL,  "%{public}s; notification %{public}s not found",
                                &v38,
                                v33);
                if (v37 < 0) {
                  operator delete(*(void **)buf);
                }
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLMotionState_Type::Notification, CLMotionState_Type::NotificationData>::unreg isterForNotification(int, const Notification_T &) [Notification_T = CLMotionState_Type::Notification, NotificationData_T = CLMotionState_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v32);
              }
            }
          }
        }
      }
    }
  }

  return v3 == 0;
}

uint64_t sub_10036C1BC(uint64_t a1, int *a2, _OWORD *a3)
{
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v3 = a1 + 64;
  uint64_t v4 = v5;
  if (!v5) {
    return 0LL;
  }
  int v6 = *a2;
  uint64_t v7 = v3;
  do
  {
    int v8 = *(_DWORD *)(v4 + 32);
    BOOL v9 = v8 < v6;
    if (v8 >= v6) {
      BOOL v10 = (uint64_t *)v4;
    }
    else {
      BOOL v10 = (uint64_t *)(v4 + 8);
    }
    if (!v9) {
      uint64_t v7 = v4;
    }
    uint64_t v4 = *v10;
  }

  while (*v10);
  if (v7 == v3) {
    return 0LL;
  }
  if (v6 < *(_DWORD *)(v7 + 32)) {
    return 0LL;
  }
  int v11 = *(_OWORD **)(v7 + 64);
  if (!v11) {
    return 0LL;
  }
  __int128 v12 = v11[1];
  *a3 = *v11;
  a3[1] = v12;
  __int128 v13 = v11[2];
  __int128 v14 = v11[3];
  __int128 v15 = v11[5];
  a3[4] = v11[4];
  a3[5] = v15;
  a3[2] = v13;
  a3[3] = v14;
  __int128 v16 = v11[6];
  __int128 v17 = v11[7];
  __int128 v18 = v11[9];
  a3[8] = v11[8];
  a3[9] = v18;
  a3[6] = v16;
  a3[7] = v17;
  return 1LL;
}

uint64_t sub_10036C23C(uint64_t a1, int *a2, _OWORD *a3)
{
  int v6 = (char *)operator new(0xB8uLL);
  __int128 v7 = a3[7];
  *(_OWORD *)(v6 + 120) = a3[6];
  *(_OWORD *)(v6 + 136) = v7;
  __int128 v8 = a3[9];
  *(_OWORD *)(v6 + 152) = a3[8];
  *(_OWORD *)(v6 + 168) = v8;
  __int128 v9 = a3[3];
  *(_OWORD *)(v6 + 56) = a3[2];
  *(_OWORD *)(v6 + 72) = v9;
  __int128 v10 = a3[5];
  *(_OWORD *)(v6 + 88) = a3[4];
  *(_OWORD *)(v6 + 104) = v10;
  __int128 v11 = a3[1];
  *(_OWORD *)(v6 + 24) = *a3;
  *((void *)v6 + 2) = 0LL;
  *(void *)int v6 = off_101834980;
  *((void *)v6 + 1) = 0LL;
  *(_OWORD *)(v6 + 40) = v11;
  *(void *)&__int128 v18 = v6 + 24;
  *((void *)&v18 + 1) = v6;
  int v17 = *a2;
  int v19 = &v17;
  __int128 v12 = sub_10023347C((uint64_t **)(a1 + 56), &v17, (uint64_t)&unk_1012CF090, &v19);
  sub_10005F550((uint64_t)(v12 + 8), &v18);
  __int128 v13 = (std::__shared_weak_count *)*((void *)&v18 + 1);
  if (*((void *)&v18 + 1))
  {
    __int128 v14 = (unint64_t *)(*((void *)&v18 + 1) + 8LL);
    do
      unint64_t v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }

  return 1LL;
}

void sub_10036C344(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_10036C358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _OWORD *, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  a2,  v5,  a3,  a4,  0LL);
}

void sub_10036C3D0(uint64_t a1, unsigned int *a2, _OWORD *a3, int a4, int a5)
{
  if (!*(_BYTE *)(a1 + 108))
  {
    __int128 v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: notifyClientsWithData (Fallback)",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_IF_NONE_PRESENT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101834850);
    }
    __int128 v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      __int128 v12 = (void *)(a1 + 8);
      __int128 v13 = (std::__shared_weak_count *)*a2;
      *(_DWORD *)buf = 68289794;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&buf[18] = 2082;
      *(void *)&buf[20] = "activity";
      __int16 v71 = 2082;
      float v72 = v12;
      __int16 v73 = 2050;
      uint64_t v74 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:notifyClientsWithData, event:%{public, location:escape_only}s, name:%{public, l ocation:escape_only}s, notification:%{public}lld}",  buf,  0x30u);
    }

    unint64_t v15 = (__n128 *)(a1 + 64);
    __int128 v14 = *(__n128 **)(a1 + 64);
    if (!v14) {
      goto LABEL_18;
    }
    signed __int32 v16 = *a2;
    int v17 = (__n128 *)(a1 + 64);
    do
    {
      signed __int32 v18 = v14[2].n128_i32[0];
      BOOL v19 = v18 < v16;
      if (v18 >= v16) {
        uint64_t v20 = (__n128 **)v14;
      }
      else {
        uint64_t v20 = (__n128 **)&v14->n128_u64[1];
      }
      if (!v19) {
        int v17 = v14;
      }
      __int128 v14 = *v20;
    }

    while (*v20);
    if (v17 == v15 || v16 < (signed __int32)v17[2].n128_u32[0])
    {
LABEL_18:
      *(void *)v75 = &v75[8];
      memset(&v75[8], 0, 24);
      double v76 = 0LL;
      sub_1002343E4((uint64_t)buf, a2, (uint64_t)v75);
      int v17 = sub_1002342A4((uint64_t **)(a1 + 56), (__n128 *)buf);
      int v21 = v74;
      if (v74)
      {
        p_shared_owners = (unint64_t *)&v74->__shared_owners_;
        do
          unint64_t v23 = __ldaxr(p_shared_owners);
        while (__stlxr(v23 - 1, p_shared_owners));
        if (!v23)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }

      sub_100008390((uint64_t)&buf[8], *(void **)&buf[16]);
      BOOL v24 = v76;
      if (v76)
      {
        uint64_t v25 = (unint64_t *)&v76->__shared_owners_;
        do
          unint64_t v26 = __ldaxr(v25);
        while (__stlxr(v26 - 1, v25));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }

      sub_100008390((uint64_t)v75, *(void **)&v75[8]);
    }

    if (a4)
    {
      int v27 = (char *)operator new(0xB8uLL);
      __int128 v28 = a3[7];
      *(_OWORD *)(v27 + 120) = a3[6];
      *(_OWORD *)(v27 + 136) = v28;
      __int128 v29 = a3[9];
      *(_OWORD *)(v27 + 152) = a3[8];
      *(_OWORD *)(v27 + 168) = v29;
      __int128 v30 = a3[3];
      *(_OWORD *)(v27 + 56) = a3[2];
      *(_OWORD *)(v27 + 72) = v30;
      __int128 v31 = a3[5];
      *(_OWORD *)(v27 + 88) = a3[4];
      *(_OWORD *)(v27 + 104) = v31;
      __int128 v32 = a3[1];
      *(_OWORD *)(v27 + 24) = *a3;
      *((void *)v27 + 2) = 0LL;
      *(void *)int v27 = off_101834980;
      *((void *)v27 + 1) = 0LL;
      *(_OWORD *)(v27 + 40) = v32;
      *(void *)buf = v27 + 24;
      *(void *)&uint8_t buf[8] = v27;
      sub_10005F550((uint64_t)&v17[4], (__int128 *)buf);
      uint64_t v33 = *(std::__shared_weak_count **)&buf[8];
      if (*(void *)&buf[8])
      {
        uint64_t v34 = (unint64_t *)(*(void *)&buf[8] + 8LL);
        do
          unint64_t v35 = __ldaxr(v34);
        while (__stlxr(v35 - 1, v34));
        if (!v35)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
        }
      }
    }

    else
    {
      sub_1000F0D38((__n128 *)v17[4].n128_u64);
    }

    if (!v17[3].n128_u64[1]) {
      goto LABEL_83;
    }
    int v36 = sub_10036D0F0(a3);
    if (a5 == -1)
    {
      sub_10036D190((void *)a1, (int *)a2, v36);
    }

    else
    {
      uint64_t v37 = a1 + 88;
      uint64_t v38 = *(void *)(a1 + 88);
      if (!v38) {
        goto LABEL_48;
      }
      uint64_t v39 = a1 + 88;
      do
      {
        int v40 = *(_DWORD *)(v38 + 32);
        BOOL v41 = v40 < a5;
        if (v40 >= a5) {
          int v42 = (uint64_t *)v38;
        }
        else {
          int v42 = (uint64_t *)(v38 + 8);
        }
        if (!v41) {
          uint64_t v39 = v38;
        }
        uint64_t v38 = *v42;
      }

      while (*v42);
      if (v39 == v37 || *(_DWORD *)(v39 + 32) > a5) {
LABEL_48:
      }
        uint64_t v39 = a1 + 88;
      uint64_t v68 = v39;
      unint64_t v43 = v15->n128_u64[0];
      if (!v15->n128_u64[0]) {
        goto LABEL_59;
      }
      int v44 = *a2;
      __float2 v45 = (__n128 *)(a1 + 64);
      do
      {
        int v46 = *(_DWORD *)(v43 + 32);
        BOOL v47 = v46 < v44;
        if (v46 >= v44) {
          double v48 = (unint64_t *)v43;
        }
        else {
          double v48 = (unint64_t *)(v43 + 8);
        }
        if (!v47) {
          __float2 v45 = (__n128 *)v43;
        }
        unint64_t v43 = *v48;
      }

      while (*v48);
      if (v45 == v15 || v44 < (signed __int32)v45[2].n128_u32[0])
      {
LABEL_59:
        uint64_t v67 = (__n128 *)(a1 + 64);
LABEL_60:
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_101834850);
        }
        BOOL v49 = (os_log_s *)qword_1019349D8;
        if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v50 = (void *)(a1 + 8);
          (*(void (**)(_BYTE *__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(v75, a1, a2);
          if (v75[23] >= 0) {
            v51 = v75;
          }
          else {
            v51 = *(_BYTE **)v75;
          }
          *(_DWORD *)buf = 136315650;
          *(void *)&uint8_t buf[4] = v50;
          *(_WORD *)&_BYTE buf[12] = 1024;
          *(_DWORD *)&buf[14] = a5;
          *(_WORD *)&buf[18] = 2080;
          *(void *)&buf[20] = v51;
          _os_log_impl( (void *)&_mh_execute_header,  v49,  OS_LOG_TYPE_DEBUG,  "%s; client %d has deregistered, not notifying %s",
            buf,
            0x1Cu);
          if ((v75[23] & 0x80000000) != 0) {
            operator delete(*(void **)v75);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019349D0 != -1) {
            dispatch_once(&qword_1019349D0, &stru_101834850);
          }
          __float2 v52 = (void *)(a1 + 8);
          uint64_t v53 = qword_1019349D8;
          (*(void (**)(void **__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(__p, a1, a2);
          if (v66 >= 0) {
            float v54 = __p;
          }
          else {
            float v54 = (void **)__p[0];
          }
          *(_DWORD *)v75 = 136315650;
          *(void *)&v75[4] = v52;
          *(_WORD *)&v75[12] = 1024;
          *(_DWORD *)&v75[14] = a5;
          *(_WORD *)&v75[18] = 2080;
          *(void *)&v75[20] = v54;
          int v55 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v53,  2LL,  "%s; client %d has deregistered, not notifying %s",
                          v75,
                          28,
                          v64);
          if (v66 < 0) {
            operator delete(__p[0]);
          }
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLMotionState_Type::Notification, CLMotionState_Type::NotificationData>::notifyClien tsWithData(const Notification_T &, const NotificationData_T &, BOOL, int, BOOL) [Notification_T = CLMotionSt ate_Type::Notification, NotificationData_T = CLMotionState_Type::NotificationData, NotificationInfo_T = char , RegistrationInfo_T = char]",  "%s\n",  v55);
          if (v55 != buf) {
            free(v55);
          }
        }

        goto LABEL_83;
      }

      uint64_t v67 = v45;
      if (v39 == v37) {
        goto LABEL_60;
      }
      uint64_t v58 = v45[3].n128_i64[0];
      float v56 = v45 + 3;
      float v57 = (__n128 *)v58;
      if (!v58) {
        goto LABEL_60;
      }
      int v59 = *(_DWORD *)(v39 + 32);
      double v60 = v56;
      do
      {
        int v61 = v57[1].n128_i32[3];
        BOOL v62 = v61 < v59;
        if (v61 >= v59) {
          uint64_t v63 = v57;
        }
        else {
          uint64_t v63 = (__n128 *)&v57->n128_i8[8];
        }
        if (!v62) {
          double v60 = v57;
        }
        float v57 = (__n128 *)v63->n128_u64[0];
      }

      while (v63->n128_u64[0]);
      sub_10036D564((_BYTE *)a1, (uint64_t)&v68, (uint64_t)&v67, v36);
    }

void sub_10036CA40( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_activity_scope_state_s state, char a18)
{
}

void sub_10036CA8C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 108))
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101834850);
    }
    __int128 v2 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v3 = (void *)(a1 + 8);
      *(_DWORD *)buf = 136315138;
      uint64_t v34 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "%s; already shutdown; not listing clients",
        buf,
        0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101834850);
      }
      uint64_t v4 = (void *)(a1 + 8);
      int v29 = 136315138;
      __int128 v30 = v4;
      uint64_t v5 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; already shutdown; not listing clients",
                     (const char *)&v29);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLMotionState_Type::Notification, CLMotionState_Type::NotificationData>::listClients() [ Notification_T = CLMotionState_Type::Notification, NotificationData_T = CLMotionState_Type::NotificationData, No tificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v5);
    }
  }

  else
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101834850);
    }
    int v6 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      __int128 v7 = (void *)(a1 + 8);
      uint64_t v8 = *(void *)(a1 + 96);
      *(_DWORD *)buf = 136315394;
      uint64_t v34 = v7;
      __int16 v35 = 2048;
      v36[0] = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "%s; listing clients, num clients: %zu",
        buf,
        0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101834850);
      }
      uint64_t v25 = (void *)(a1 + 8);
      uint64_t v26 = *(void *)(a1 + 96);
      int v29 = 136315394;
      __int128 v30 = v25;
      __int16 v31 = 2048;
      v32[0] = v26;
      int v27 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; listing clients, num clients: %zu",
                      (const char *)&v29,
                      22);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLMotionState_Type::Notification, CLMotionState_Type::NotificationData>::listClients() [ Notification_T = CLMotionState_Type::Notification, NotificationData_T = CLMotionState_Type::NotificationData, No tificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v27);
    }

    __int128 v9 = *(void **)(a1 + 80);
    if (v9 != (void *)(a1 + 88))
    {
      __int128 v10 = (void *)(a1 + 8);
      do
      {
        __int128 v11 = (void *)v9[5];
        if (v11 != v9 + 6)
        {
          do
          {
            if (qword_1019349D0 != -1) {
              dispatch_once(&qword_1019349D0, &stru_101834850);
            }
            __int128 v12 = (os_log_s *)qword_1019349D8;
            if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
            {
              __int128 v13 = (void *)(a1 + 8);
              int v14 = *((_DWORD *)v9 + 8);
              int v15 = *((_DWORD *)v11 + 7);
              *(_DWORD *)buf = 136315650;
              uint64_t v34 = v13;
              __int16 v35 = 1024;
              LODWORD(v36[0]) = v14;
              WORD2(v36[0]) = 1024;
              *(_DWORD *)((char *)v36 + 6) = v15;
              _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "%s; clients, id: %d, notification: %d",
                buf,
                0x18u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101834850);
              }
              BOOL v19 = (void *)(a1 + 8);
              int v20 = *((_DWORD *)v9 + 8);
              int v21 = *((_DWORD *)v11 + 7);
              int v29 = 136315650;
              __int128 v30 = v19;
              __int16 v31 = 1024;
              LODWORD(v32[0]) = v20;
              WORD2(v32[0]) = 1024;
              *(_DWORD *)((char *)v32 + 6) = v21;
              int v22 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; clients, id: %d, notification: %d",
                              (const char *)&v29,
                              24,
                              v28);
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLMotionState_Type::Notification, CLMotionState_Type::NotificationData>::listCli ents() [Notification_T = CLMotionState_Type::Notification, NotificationData_T = CLMotionState_Type::Noti ficationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v22);
            }

            signed __int32 v16 = (void *)v11[1];
            if (v16)
            {
              do
              {
                int v17 = v16;
                signed __int32 v16 = (void *)*v16;
              }

              while (v16);
            }

            else
            {
              do
              {
                int v17 = (void *)v11[2];
                BOOL v18 = *v17 == (void)v11;
                __int128 v11 = v17;
              }

              while (!v18);
            }

            __int128 v11 = v17;
          }

          while (v17 != v9 + 6);
        }

        unint64_t v23 = (void *)v9[1];
        if (v23)
        {
          do
          {
            BOOL v24 = v23;
            unint64_t v23 = (void *)*v23;
          }

          while (v23);
        }

        else
        {
          do
          {
            BOOL v24 = (void *)v9[2];
            BOOL v18 = *v24 == (void)v9;
            __int128 v9 = v24;
          }

          while (!v18);
        }

        __int128 v9 = v24;
      }

      while (v24 != (void *)(a1 + 88));
    }
  }

void sub_10036D038(uint64_t a1)
{
  uint64_t v1 = (void *)sub_10036DEDC(a1);
  operator delete(v1);
}

id sub_10036D04C(uint64_t a1, int a2, void *a3)
{
  id result = sub_10036D690(a3);
  if (result)
  {
    int v6 = a2;
    return (id)(*(uint64_t (**)(void, int *, id, void))(a1 + 24))(0LL, &v6, result, *(void *)(a1 + 32));
  }

  return result;
}

void sub_10036D098(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_10036D0C4(id a1)
{
  qword_1019344F8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Activity");
}

CLCppContainer *sub_10036D0F0(_OWORD *a1)
{
  __int128 v2 = operator new(0xA0uLL);
  __int128 v3 = a1[7];
  v2[6] = a1[6];
  v2[7] = v3;
  __int128 v4 = a1[9];
  v2[8] = a1[8];
  v2[9] = v4;
  __int128 v5 = a1[3];
  v2[2] = a1[2];
  v2[3] = v5;
  __int128 v6 = a1[5];
  v2[4] = a1[4];
  v2[5] = v6;
  __int128 v7 = a1[1];
  *__int128 v2 = *a1;
  v2[1] = v7;
  __int128 v9 = _NSConcreteStackBlock;
  uint64_t v10 = 3221225472LL;
  __int128 v11 = sub_10036D680;
  __int128 v12 = &unk_10181D3D0;
  __int128 v13 = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:");
}

void sub_10036D190(void *a1, int *a2, void *a3)
{
  if (!*((_BYTE *)a1 + 108))
  {
    __int128 v5 = a1 + 8;
    uint64_t v4 = a1[8];
    if (v4)
    {
      int v8 = *a2;
      __int128 v9 = a1 + 8;
      do
      {
        int v10 = *(_DWORD *)(v4 + 32);
        BOOL v11 = v10 < v8;
        if (v10 >= v8) {
          __int128 v12 = (uint64_t *)v4;
        }
        else {
          __int128 v12 = (uint64_t *)(v4 + 8);
        }
        if (!v11) {
          __int128 v9 = (void *)v4;
        }
        uint64_t v4 = *v12;
      }

      while (*v12);
      if (v9 != v5 && v8 >= *((_DWORD *)v9 + 8))
      {
        uint64_t v50 = v9;
        id v13 = sub_10036D690(a3);
        (*(void (**)(void *, int *, id, void *))(*a1 + 184LL))(a1, a2, v13, v9 + 10);
        int v14 = (void *)v9[5];
        if (v14 != v9 + 6)
        {
          int v15 = a1 + 11;
          signed __int32 v16 = a1 + 1;
          do
          {
            uint64_t v17 = *v15;
            if (!*v15) {
              goto LABEL_25;
            }
            int v18 = *((_DWORD *)v14 + 7);
            BOOL v19 = a1 + 11;
            do
            {
              int v20 = *(_DWORD *)(v17 + 32);
              BOOL v21 = v20 < v18;
              if (v20 >= v18) {
                int v22 = (uint64_t *)v17;
              }
              else {
                int v22 = (uint64_t *)(v17 + 8);
              }
              if (!v21) {
                BOOL v19 = (uint64_t *)v17;
              }
              uint64_t v17 = *v22;
            }

            while (*v22);
            if (v19 != v15 && (int v23 = *((_DWORD *)v19 + 8), v18 >= v23))
            {
              BOOL v49 = v19;
              sub_10036D564(a1, (uint64_t)&v49, (uint64_t)&v50, a3);
              uint64_t v27 = a1[8];
              if (!v27) {
                return;
              }
              int v28 = *a2;
              int v29 = v5;
              do
              {
                int v30 = *(_DWORD *)(v27 + 32);
                BOOL v31 = v30 < v28;
                if (v30 >= v28) {
                  __int128 v32 = (uint64_t *)v27;
                }
                else {
                  __int128 v32 = (uint64_t *)(v27 + 8);
                }
                if (!v31) {
                  int v29 = (void *)v27;
                }
                uint64_t v27 = *v32;
              }

              while (*v32);
              if (v29 == v5 || v28 < *((_DWORD *)v29 + 8)) {
                return;
              }
              uint64_t v50 = v29;
              uint64_t v34 = v29[6];
              int v14 = v29 + 6;
              uint64_t v33 = v34;
              if (v34)
              {
                __int16 v35 = v14;
                uint64_t v36 = v33;
                do
                {
                  int v37 = *(_DWORD *)(v36 + 28);
                  BOOL v38 = v37 < v23;
                  if (v37 >= v23) {
                    uint64_t v39 = (uint64_t *)v36;
                  }
                  else {
                    uint64_t v39 = (uint64_t *)(v36 + 8);
                  }
                  if (!v38) {
                    __int16 v35 = (void *)v36;
                  }
                  uint64_t v36 = *v39;
                }

                while (*v39);
                if (v35 == v14 || v23 < *((_DWORD *)v35 + 7))
                {
                  do
                  {
                    int v40 = *(_DWORD *)(v33 + 28);
                    BOOL v41 = v23 < v40;
                    if (v23 >= v40) {
                      int v42 = (uint64_t *)(v33 + 8);
                    }
                    else {
                      int v42 = (uint64_t *)v33;
                    }
                    if (v41) {
                      int v14 = (void *)v33;
                    }
                    uint64_t v33 = *v42;
                  }

                  while (*v42);
                }

                else
                {
                  unint64_t v43 = (void *)v35[1];
                  if (v43)
                  {
                    do
                    {
                      int v14 = v43;
                      unint64_t v43 = (void *)*v43;
                    }

                    while (v43);
                  }

                  else
                  {
                    do
                    {
                      int v14 = (void *)v35[2];
                      BOOL v44 = *v14 == (void)v35;
                      __int16 v35 = v14;
                    }

                    while (!v44);
                  }
                }
              }
            }

            else
            {
LABEL_25:
              BOOL v49 = a1 + 11;
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101834850);
              }
              BOOL v24 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                uint64_t v25 = a1 + 1;
                int v26 = *((_DWORD *)v14 + 7);
                *(_DWORD *)buf = 136446466;
                float v56 = v25;
                __int16 v57 = 1026;
                int v58 = v26;
                _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_FAULT,  "%{public}s; unknown client %{public}d",
                  buf,
                  0x12u);
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(buf, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_101834850);
                }
                __float2 v45 = a1 + 1;
                int v46 = *((_DWORD *)v14 + 7);
                int v51 = 136446466;
                __float2 v52 = v45;
                __int16 v53 = 1026;
                int v54 = v46;
                LODWORD(v48) = 18;
                BOOL v47 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; unknown client %{public}d",
                                &v51,
                                v48);
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLNotifier<CLMotionState_Type::Notification, CLMotionState_Type::NotificationData>::invokeClients WithData(const Notification_T &, CLCppContainer *) [Notification_T = CLMotionState_Type::Notification, NotificationData_T = CLMotionState_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v47);
              }
            }
          }

          while (v14 != v50 + 6);
        }
      }
    }
  }

_BYTE *sub_10036D564(_BYTE *result, uint64_t a2, uint64_t a3, void *a4)
{
  if (!result[108])
  {
    __int128 v7 = result;
    uint64_t v8 = *(unsigned int *)(*(void *)a2 + 32LL);
    LODWORD(v13) = *(_DWORD *)(*(void *)a3 + 32LL);
    id v9 = sub_10036D690(a4);
    uint64_t v10 = *(void *)a3 + 80LL;
    BOOL v11 = (uint64_t **)(*(void *)a3 + 40LL);
    int v14 = (int *)(*(void *)a2 + 32LL);
    __int128 v12 = sub_1004EF3D4(v11, v14, (uint64_t)&unk_1012CF090, &v14);
    id result = (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t *, id, uint64_t, uint64_t **))(*(void *)v7 + 192LL))( v7,  v8,  &v13,  v9,  v10,  v12 + 4);
    if ((_DWORD)result) {
      return objc_msgSend( *(id *)(*(void *)a2 + 64),  "onNotification:withData:",  *(unsigned int *)(*(void *)a3 + 32),  a4,  v13);
    }
  }

  return result;
}

void sub_10036D640(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_101834980;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10036D654(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_101834980;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_10036D680(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1) {
    operator delete(v1);
  }
}

id sub_10036D690(void *a1)
{
  uint64_t v2 = objc_opt_class(&OBJC_CLASS___CLCppEncodableDataContainer);
  if ((objc_opt_isKindOfClass(a1, v2) & 1) != 0) {
    return sub_10036D708(a1);
  }
  uint64_t v4 = objc_opt_class(&OBJC_CLASS___CLCppContainer);
  if ((objc_opt_isKindOfClass(a1, v4) & 1) != 0) {
    return sub_10036DA90(a1);
  }
  else {
    return 0LL;
  }
}

id sub_10036D708(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return sub_10036DE3C((uint64_t)&v8 + 7, a1);
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_1018349C0);
    }
    __int128 v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 134218498;
      id v11 = v2;
      __int16 v12 = 2048;
      uint64_t v13 = 0LL;
      __int16 v14 = 2080;
      unint64_t v15 = 0x80000001012E6ED0LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_1018349C0);
    }
    LODWORD(v9) = 134218498;
    HIDWORD(v9) = (_DWORD)v2;
    LODWORD(v8) = 32;
    uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly becaus e the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v9,  v8,  v9);
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_1018349C0);
    }
    __int128 v6 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)buf = 134218498;
      id v11 = v2;
      __int16 v12 = 2048;
      uint64_t v13 = 0LL;
      __int16 v14 = 2080;
      unint64_t v15 = 0x80000001012E6ED0LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_1018349C0);
    }
    LODWORD(v9) = 134218498;
    HIDWORD(v9) = (_DWORD)v2;
    LODWORD(v8) = 32;
    uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly becaus e the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v9,  v8,  v9);
  }

  __int128 v7 = (uint8_t *)v4;
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLMotionState_Type::NotificationData, Callback = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:241:46)]",  "%s\n",  v4);
  if (v7 != buf) {
    free(v7);
  }
  return 0LL;
}

id sub_10036DA90(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return [a1 cppObjectPtr];
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_1018349C0);
    }
    __int128 v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001012E6ED0LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_1018349C0);
    }
    LODWORD(v8) = 134218498;
    HIDWORD(v8) = (_DWORD)v2;
    uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly becaus e the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_1018349C0);
    }
    __int128 v6 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001012E6ED0LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_1018349C0);
    }
    LODWORD(v8) = 134218498;
    HIDWORD(v8) = (_DWORD)v2;
    uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly becaus e the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  __int128 v7 = (uint8_t *)v4;
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLMotionState_Type::NotificationData, Callback = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:250:46)]",  "%s\n",  v4);
  if (v7 != buf) {
    free(v7);
  }
  return 0LL;
}

id sub_10036DE3C(uint64_t a1, void *a2)
{
  if (![a2 cppObjectPtr]
    && objc_msgSend(objc_msgSend(a2, "compatibilityInfo"), "isEqual:", &off_1018D3230))
  {
    if (objc_msgSend(objc_msgSend(a2, "serialized"), "length") != (id)160) {
      sub_1012363D4();
    }
    objc_msgSend(a2, "setCppObjectPtr:", objc_msgSend(objc_msgSend(a2, "serialized"), "bytes"));
  }

  return [a2 cppObjectPtr];
}

void sub_10036DEB0(id a1)
{
  qword_101934478 = (uint64_t)os_log_create("com.apple.locationd.Support", "Support");
}

uint64_t sub_10036DEDC(uint64_t a1)
{
  *(void *)a1 = off_1018349F0;
  id v2 = (id *)(a1 + 8);
  [*(id *)(a1 + 16) forget:*(void *)(a1 + 8)];

  [*v2 invalidate];
  *id v2 = 0LL;
  *(void *)(a1 + 16) = 0LL;
  return a1;
}

CLCppContainer *sub_10036DF3C(_OWORD *a1)
{
  id v2 = operator new(0xA0uLL);
  __int128 v3 = a1[7];
  v2[6] = a1[6];
  v2[7] = v3;
  __int128 v4 = a1[9];
  v2[8] = a1[8];
  v2[9] = v4;
  __int128 v5 = a1[3];
  v2[2] = a1[2];
  v2[3] = v5;
  __int128 v6 = a1[5];
  v2[4] = a1[4];
  v2[5] = v6;
  __int128 v7 = a1[1];
  *id v2 = *a1;
  v2[1] = v7;
  uint64_t v9 = _NSConcreteStackBlock;
  uint64_t v10 = 3221225472LL;
  __int16 v11 = sub_10036DFDC;
  uint64_t v12 = &unk_10181D3D0;
  __int16 v13 = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:");
}

void sub_10036DFDC(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1) {
    operator delete(v1);
  }
}

uint64_t sub_10036DFEC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_101834A18;
  *(void *)(a1 + 8) = a2;
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  *(CFAbsoluteTime *)(a1 + 16) = Current;
  *(CFAbsoluteTime *)(a1 + 24) = Current;
  *(_DWORD *)(a1 + 32) = 0;
  (*(void (**)(uint64_t))(*(void *)a1 + 16LL))(a1);
  return a1;
}

uint64_t sub_10036E038(uint64_t a1)
{
  *(void *)a1 = &off_101834A18;
  *(void *)(a1 + 8) = 14400LL;
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  *(CFAbsoluteTime *)(a1 + 16) = Current;
  *(CFAbsoluteTime *)(a1 + 24) = Current;
  *(_DWORD *)(a1 + 32) = 0;
  (*(void (**)(uint64_t))(*(void *)a1 + 16LL))(a1);
  return a1;
}

BOOL sub_10036E088(double *a1, double *a2)
{
  double v2 = *a2 - a1[2];
  double v3 = (double)*((unint64_t *)a1 + 1);
  if (v2 >= v3)
  {
    (*(void (**)(double *))(*(void *)a1 + 24LL))(a1);
    ++*((_DWORD *)a1 + 8);
    (*(void (**)(double *))(*(void *)a1 + 16LL))(a1);
    a1[2] = *a2;
  }

  return v2 >= v3;
}

BOOL sub_10036E100(double *a1)
{
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  return sub_10036E088(a1, &Current);
}

double sub_10036E3C8(uint64_t a1, void *a2)
{
  uint64_t v2 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v2;
  if (v2)
  {
    double v3 = (unint64_t *)(v2 + 8);
    do
      unint64_t v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }

  *(void *)(a1 + 120) = 0LL;
  *(_WORD *)(a1 + 128) = 0;
  *(_DWORD *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = 0LL;
  *(void *)(a1 + 200) = 0LL;
  *(void *)(a1 + 24) = 0LL;
  *(void *)(a1 + 32) = 0LL;
  *(void *)(a1 + 16) = 0LL;
  *(_DWORD *)(a1 + 40) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_DWORD *)(a1 + 112) = 0;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_BYTE *)(a1 + 168) = 0;
  *(_DWORD *)(a1 + 179) = 0;
  *(void *)(a1 + 172) = 0LL;
  *(void *)(a1 + 208) = 0LL;
  *(void *)(a1 + 216) = a1 + 216;
  *(void *)(a1 + 224) = a1 + 216;
  *(void *)(a1 + 232) = 0LL;
  *(_DWORD *)(a1 + 240) = 0;
  *(_BYTE *)(a1 + 244) = 0;
  *(_OWORD *)(a1 + 248) = xmmword_1012E6F30;
  *(_OWORD *)(a1 + 264) = unk_1012E6F40;
  *(_OWORD *)(a1 + 280) = xmmword_1012E6F50;
  *(_OWORD *)(a1 + 292) = *(__int128 *)((char *)&xmmword_1012E6F50 + 12);
  *(_OWORD *)(a1 + 312) = 0u;
  *(_OWORD *)(a1 + 328) = 0u;
  *(_OWORD *)(a1 + 344) = 0u;
  *(void *)(a1 + 360) = 0LL;
  return result;
}

void sub_10036E478(uint64_t a1)
{
  uint64_t v2 = *(char **)a1;
  int64x2_t v3 = *(int64x2_t *)(a1 + 8);
  int64x2_t v4 = vshrq_n_s64(vsubq_s64(v3, vdupq_n_s64((unint64_t)v2)), 3uLL);
  unint64_t v5 = 0x6DB6DB6DB6DB6DB7LL * v4.i64[0];
  unint64_t v6 = v5;
  if (0x6DB6DB6DB6DB6DB7LL * v4.i64[1] > v5)
  {
    if ((char *)v3.i64[0] == v2)
    {
      __int16 v11 = 0LL;
      uint64_t v9 = 56 * v5;
    }

    else
    {
      __int128 v7 = (char *)sub_1000AC8F0(a1 + 16, v5);
      uint64_t v2 = *(char **)a1;
      uint64_t v8 = *(char **)(a1 + 8);
      uint64_t v9 = (uint64_t)&v7[56 * v6];
      __int16 v11 = &v7[56 * v10];
      if (v8 != *(char **)a1)
      {
        uint64_t v12 = v9;
        do
        {
          __int128 v13 = *(_OWORD *)(v8 - 56);
          __int128 v14 = *(_OWORD *)(v8 - 40);
          __int128 v15 = *(_OWORD *)(v8 - 24);
          *(_DWORD *)(v12 - 8) = *((_DWORD *)v8 - 2);
          *(_OWORD *)(v12 - 24) = v15;
          *(_OWORD *)(v12 - 40) = v14;
          *(_OWORD *)(v12 - 56) = v13;
          v12 -= 56LL;
          v8 -= 56;
        }

        while (v8 != v2);
        uint64_t v2 = *(char **)a1;
        goto LABEL_9;
      }
    }

    uint64_t v12 = v9;
LABEL_9:
    *(void *)a1 = v12;
    *(void *)(a1 + 8) = v9;
    *(void *)(a1 + 16) = v11;
    if (v2) {
      operator delete(v2);
    }
  }

void sub_10036E584(uint64_t a1, CLMotionActivity *a2)
{
  uint64_t v2 = *(void *)(a1 + 200);
  if (*(void *)(a1 + 192) != v2)
  {
    if (*(double *)&a2[1].type - *(double *)(v2 - 56) >= 840.0)
    {
      if (qword_1019346C0 != -1) {
        dispatch_once(&qword_1019346C0, &stru_101834A68);
      }
      BOOL v24 = (os_log_s *)qword_1019346C8;
      if (os_log_type_enabled((os_log_t)qword_1019346C8, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_INFO,  "Walking bout ended due to exceeding max duration without stepNotifications",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019346C0 != -1) {
          dispatch_once(&qword_1019346C0, &stru_101834A68);
        }
        LOWORD(v26) = 0;
        uint64_t v25 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019346C8,  1LL,  "Walking bout ended due to exceeding max duration without stepNotifications",  &v26,  2);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLPredictedWalkDistanceBoutDetector::handleMotionActivityNotification(const CLMotionActivity &)",  "%s\n",  v25);
      }

      sub_10036E97C(a1);
    }

    else
    {
      if (qword_1019346C0 != -1) {
        dispatch_once(&qword_1019346C0, &stru_101834A68);
      }
      int64x2_t v4 = (os_log_s *)qword_1019346C8;
      if (os_log_type_enabled((os_log_t)qword_1019346C8, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v5 = CLMotionActivity::activityTypeToString(a2->type);
        int type = a2->type;
        unsigned int confidence = a2->confidence;
        uint64_t v8 = CLMotionActivity::activityTypeToString(a2[1].source);
        unsigned int source = a2[1].source;
        unsigned int mountedState = a2[1].mountedState;
        int isMounted = CLMotionActivity::isMounted(a2);
        uint64_t v12 = *(void *)&a2[1].type;
        *(_DWORD *)buf = 136382467;
        uint64_t v43 = v5;
        __int16 v44 = 1025;
        int v45 = type;
        __int16 v46 = 1025;
        unsigned int v47 = confidence;
        __int16 v48 = 2081;
        uint64_t v49 = v8;
        __int16 v50 = 1025;
        unsigned int v51 = source;
        __int16 v52 = 1025;
        unsigned int v53 = mountedState;
        __int16 v54 = 1025;
        int v55 = isMounted;
        __int16 v56 = 2048;
        uint64_t v57 = v12;
        _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "Activity type is %{private}s (%{private}d), conf, %{private}d, raw activity type %{private}s (%{private}d), ra w conf, %{private}d, mounted, %{private}d, startTime, %f",  buf,  0x3Eu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019346C0 != -1) {
          dispatch_once(&qword_1019346C0, &stru_101834A68);
        }
        uint64_t v13 = qword_1019346C8;
        uint64_t v14 = CLMotionActivity::activityTypeToString(a2->type);
        int v15 = a2->type;
        unsigned int v16 = a2->confidence;
        uint64_t v17 = CLMotionActivity::activityTypeToString(a2[1].source);
        unsigned int v18 = a2[1].source;
        unsigned int v19 = a2[1].mountedState;
        int v20 = CLMotionActivity::isMounted(a2);
        uint64_t v21 = *(void *)&a2[1].type;
        int v26 = 136382467;
        uint64_t v27 = v14;
        __int16 v28 = 1025;
        int v29 = v15;
        __int16 v30 = 1025;
        unsigned int v31 = v16;
        __int16 v32 = 2081;
        uint64_t v33 = v17;
        __int16 v34 = 1025;
        unsigned int v35 = v18;
        __int16 v36 = 1025;
        unsigned int v37 = v19;
        __int16 v38 = 1025;
        int v39 = v20;
        __int16 v40 = 2048;
        uint64_t v41 = v21;
        int v22 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v13,  2LL,  "Activity type is %{private}s (%{private}d), conf, %{private}d, raw activity type %{private}s (%{ private}d), raw conf, %{private}d, mounted, %{private}d, startTime, %f",  &v26,  62);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLPredictedWalkDistanceBoutDetector::handleMotionActivityNotification(const CLMotionActivity &)",  "%s\n",  v22);
      }
    }
  }

void sub_10036E97C(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 192);
  uint64_t v4 = *(void *)(a1 + 200);
  uint64_t v2 = (uint64_t *)(a1 + 192);
  if (v3 != v4)
  {
    __int16 v52 = &v52;
    unsigned int v53 = &v52;
    uint64_t v54 = 0LL;
    uint64_t v5 = operator new(8uLL);
    uint64_t v6 = 0x6DB6DB6DB6DB6DB7LL * ((v4 - v3) >> 3);
    *uint64_t v5 = 0LL;
    __int128 v7 = (double *)(v5 + 1);
    *(void *)&__p[8] = v5 + 1;
    *(void *)&__p[16] = v5 + 1;
    *(void *)__p = v5;
    double v8 = 0.0;
    do
    {
      double v8 = v8 + (double)*(int *)(v3 + 24);
      if ((unint64_t)v7 >= *(void *)&__p[16])
      {
        uint64_t v10 = *(double **)__p;
        uint64_t v11 = ((uint64_t)v7 - *(void *)__p) >> 3;
        unint64_t v12 = v11 + 1;
        uint64_t v13 = *(void *)&__p[16] - *(void *)__p;
        else {
          unint64_t v14 = v12;
        }
        if (v14)
        {
          int v15 = (char *)sub_1000071BC((uint64_t)&__p[16], v14);
          uint64_t v10 = *(double **)__p;
          __int128 v7 = *(double **)&__p[8];
        }

        else
        {
          int v15 = 0LL;
        }

        unsigned int v16 = (double *)&v15[8 * v11];
        *unsigned int v16 = v8;
        uint64_t v9 = v16 + 1;
        while (v7 != v10)
        {
          uint64_t v17 = *((void *)v7-- - 1);
          *((void *)v16-- - 1) = v17;
        }

        *(void *)__p = v16;
        *(void *)&__p[8] = v9;
        *(void *)&__p[16] = &v15[8 * v14];
        if (v10) {
          operator delete(v10);
        }
      }

      else
      {
        *__int128 v7 = v8;
        uint64_t v9 = v7 + 1;
      }

      *(void *)&__p[8] = v9;
      v3 += 56LL;
      __int128 v7 = v9;
    }

    while (v3 != v4);
    uint64_t v18 = 0LL;
    unsigned int v19 = 0;
    unsigned int v20 = 0;
    unsigned int v21 = 0;
    uint64_t v22 = *v2;
    int v23 = *(void **)__p;
    double v24 = 0.0;
    do
    {
      unsigned int v25 = v19;
      uint64_t v26 = (int)v19;
      else {
        unsigned int v27 = v6;
      }
      unsigned int v19 = v27 - 1;
      __int16 v28 = (double *)(*v2 + 72 + 56LL * (int)v25);
      uint64_t v29 = v26 + 1;
      while (1)
      {
        uint64_t v30 = v29;
        double v31 = *v28;
        v28 += 7;
        ++v25;
        ++v29;
        if (v31 - *(double *)(v22 + 56 * v18 + 8) > 360.0)
        {
          unsigned int v19 = v25 - 1;
          goto LABEL_29;
        }
      }

      unsigned int v25 = v27;
LABEL_29:
      double v32 = *(double *)(*(void *)__p + 8 * v18);
      if (*(double *)(*(void *)__p + 8LL * (int)v25) - v32 > v24)
      {
        double v24 = *(double *)(*(void *)__p + 8LL * (int)v25) - v32;
        unsigned int v20 = v19;
        unsigned int v21 = v18;
      }

      ++v18;
    }

    while (v18 < (int)v6);
    if (v21 > v20) {
      goto LABEL_37;
    }
    unint64_t v33 = (int)v20;
    unint64_t v34 = (int)v21;
    unsigned int v35 = v52;
    __int16 v36 = (__int128 *)(v22 + 56LL * (int)v21);
    uint64_t v37 = v54 + 1;
    do
    {
      __int16 v38 = operator new(0x48uLL);
      __int128 v39 = *v36;
      __int128 v40 = v36[1];
      __int128 v41 = v36[2];
      v38[8] = *((void *)v36 + 6);
      *((_OWORD *)v38 + 2) = v40;
      *((_OWORD *)v38 + 3) = v41;
      *((_OWORD *)v38 + 1) = v39;
      void *v38 = v35;
      v38[1] = &v52;
      v35[1] = v38;
      ++v34;
      __int16 v36 = (__int128 *)((char *)v36 + 56);
      __int16 v52 = v38;
      uint64_t v54 = v37++;
      unsigned int v35 = v38;
    }

    while (v34 <= v33);
    if (v23)
    {
LABEL_37:
      *(void *)&__p[8] = v23;
      operator delete(v23);
    }

    if (qword_1019346C0 != -1) {
      dispatch_once(&qword_1019346C0, &stru_101834A68);
    }
    int v42 = (os_log_s *)qword_1019346C8;
    if (os_log_type_enabled((os_log_t)qword_1019346C8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v43 = *(void *)(*(void *)(a1 + 192) + 8LL);
      uint64_t v44 = *(void *)(*(void *)(a1 + 200) - 40LL);
      uint64_t v45 = v53[3];
      uint64_t v46 = v52[4];
      *(_DWORD *)__p = 134284289;
      *(void *)&__p[4] = v43;
      *(_WORD *)&__p[12] = 2049;
      *(void *)&__p[14] = v44;
      *(_WORD *)&__p[22] = 2049;
      uint64_t v64 = v45;
      __int16 v65 = 2049;
      uint64_t v66 = v46;
      _os_log_impl( (void *)&_mh_execute_header,  v42,  OS_LOG_TYPE_DEBUG,  "Timestamp comparisons... firstStepCountTime:%{private}f, lastStepCountTime:%{private}f, trimmedBoutStartTime:%{p rivate}f, trimmedBoutEndTime:%{private}f",  __p,  0x2Au);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_1019346C0 != -1) {
        dispatch_once(&qword_1019346C0, &stru_101834A68);
      }
      uint64_t v47 = *(void *)(*(void *)(a1 + 192) + 8LL);
      uint64_t v48 = *(void *)(*(void *)(a1 + 200) - 40LL);
      uint64_t v49 = v53[3];
      uint64_t v50 = v52[4];
      int v55 = 134284289;
      uint64_t v56 = v47;
      __int16 v57 = 2049;
      uint64_t v58 = v48;
      __int16 v59 = 2049;
      uint64_t v60 = v49;
      __int16 v61 = 2049;
      uint64_t v62 = v50;
      unsigned int v51 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_1019346C8,  2LL,  "Timestamp comparisons... firstStepCountTime:%{private}f, lastStepCountTime:%{private}f, trimmedBou tStartTime:%{private}f, trimmedBoutEndTime:%{private}f",  &v55,  42);
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLPredictedWalkDistanceBoutDetector::stopBout()", "%s\n", v51);
      if (v51 != __p) {
        free(v51);
      }
    }

    sub_1003705CC(a1, &v52, 0);
    sub_1001B4C40(&v52);
    uint64_t v3 = *v2;
  }

  *(void *)(a1 + 200) = v3;
  sub_10036E478((uint64_t)v2);
}

void sub_10036EE30( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, void *__p, uint64_t a22)
{
}

__n128 sub_10036EE6C(uint64_t a1, uint64_t a2)
{
  if (qword_1019346C0 != -1) {
    dispatch_once(&qword_1019346C0, &stru_101834A68);
  }
  uint64_t v4 = (os_log_s *)qword_1019346C8;
  if (os_log_type_enabled((os_log_t)qword_1019346C8, OS_LOG_TYPE_DEBUG))
  {
    int v5 = *(_DWORD *)(a2 + 24);
    double v6 = *(double *)(a2 + 88);
    uint64_t v7 = *(void *)(a2 + 32);
    uint64_t v8 = *(void *)(a2 + 8);
    uint64_t v9 = *(void *)(a2 + 16);
    int v10 = *(unsigned __int8 *)(a2 + 166);
    *(_DWORD *)buf = 134284801;
    *(void *)v86 = v8;
    *(_WORD *)&v86[8] = 1025;
    *(_DWORD *)&v86[10] = v5;
    __int16 v87 = 2049;
    double v88 = v6;
    __int16 v89 = 2049;
    uint64_t v90 = v7;
    __int16 v91 = 2049;
    uint64_t v92 = v9;
    __int16 v93 = 1025;
    int v94 = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "Received stepCountEntry, startTime, %{private}f, count, %{private}d, activeTime, %{private}f, distance, %{private} f, firstStepTime, %{private}f, distanceSource, %{private}d",  buf,  0x36u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019346C0 != -1) {
      dispatch_once(&qword_1019346C0, &stru_101834A68);
    }
    int v63 = *(_DWORD *)(a2 + 24);
    uint64_t v64 = *(void *)(a2 + 88);
    uint64_t v65 = *(void *)(a2 + 32);
    uint64_t v66 = *(void *)(a2 + 8);
    uint64_t v67 = *(void *)(a2 + 16);
    int v68 = *(unsigned __int8 *)(a2 + 166);
    *(_DWORD *)int v83 = 134284801;
    *(void *)&v83[4] = v66;
    *(_WORD *)&v83[12] = 1025;
    *(_DWORD *)&v83[14] = v63;
    *(_WORD *)&v83[18] = 2049;
    *(void *)&v83[20] = v64;
    *(_WORD *)&v83[28] = 2049;
    *(void *)&v83[30] = v65;
    *(_WORD *)&v83[38] = 2049;
    *(void *)&v83[40] = v67;
    LOWORD(v84) = 1025;
    *(_DWORD *)((char *)&v84 + 2) = v68;
    float v69 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019346C8,  2LL,  "Received stepCountEntry, startTime, %{private}f, count, %{private}d, activeTime, %{private}f, distan ce, %{private}f, firstStepTime, %{private}f, distanceSource, %{private}d",  v83,  54);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLPredictedWalkDistanceBoutDetector::handleStepCountNotification(const CLStepCountEntry &)",  "%s\n",  v69);
  }

  if (!*(_DWORD *)(a1 + 288))
  {
    int v14 = *(_DWORD *)(a2 + 24);
    int v15 = *(_DWORD *)(a1 + 40);
    if (*(double *)(a2 + 8) < *(double *)(a1 + 24))
    {
      if (qword_1019346C0 != -1) {
        dispatch_once(&qword_1019346C0, &stru_101834A68);
      }
      unsigned int v16 = (os_log_s *)qword_1019346C8;
      if (os_log_type_enabled((os_log_t)qword_1019346C8, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_INFO, "Saw time go backwards", buf, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019346C0 != -1) {
          dispatch_once(&qword_1019346C0, &stru_101834A68);
        }
        *(_WORD *)int v83 = 0;
        LODWORD(v77) = 2;
        v70 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019346C8,  1LL,  "Saw time go backwards",  v83,  *(void *)&v77);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLPredictedWalkDistanceBoutDetector::handleStepCountNotification(const CLStepCountEntry &)",  "%s\n",  v70);
      }
    }

    unsigned int v17 = v14 - v15;
    if (v14 - v15 < 0)
    {
      if (qword_1019346C0 != -1) {
        dispatch_once(&qword_1019346C0, &stru_101834A68);
      }
      int v23 = (os_log_s *)qword_1019346C8;
      if (os_log_type_enabled((os_log_t)qword_1019346C8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "Saw step count go backwards", buf, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019346C0 != -1) {
          dispatch_once(&qword_1019346C0, &stru_101834A68);
        }
        *(_WORD *)int v83 = 0;
        LODWORD(v77) = 2;
        __int16 v71 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019346C8,  0LL,  "Saw step count go backwards",  v83,  *(void *)&v77);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLPredictedWalkDistanceBoutDetector::handleStepCountNotification(const CLStepCountEntry &)",  "%s\n",  v71);
      }

      if (*(void *)(a1 + 192) == *(void *)(a1 + 200)) {
        goto LABEL_122;
      }
      goto LABEL_37;
    }

    uint64_t v18 = *(void *)(a1 + 192);
    uint64_t v19 = *(void *)(a1 + 200);
    unsigned int v20 = (char **)(a1 + 192);
    if (v17 >= 0x29)
    {
      if (v18 != v19)
      {
        if (qword_1019346C0 != -1) {
          dispatch_once(&qword_1019346C0, &stru_101834A68);
        }
        unsigned int v21 = (os_log_s *)qword_1019346C8;
        if (os_log_type_enabled((os_log_t)qword_1019346C8, OS_LOG_TYPE_DEFAULT))
        {
          double v22 = *(double *)(a2 + 8) - *(double *)(a1 + 24);
          *(_DWORD *)buf = 67240448;
          *(_DWORD *)v86 = v14 - v15;
          *(_WORD *)&v86[4] = 2050;
          *(double *)&v86[6] = v22;
          _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "Unexpected large jump in steps, %{public}d new steps, %{public}.1f seconds delay since last entry, stopping bout",  buf,  0x12u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019346C0 != -1) {
            dispatch_once(&qword_1019346C0, &stru_101834A68);
          }
          double v72 = *(double *)(a2 + 8) - *(double *)(a1 + 24);
          *(_DWORD *)int v83 = 67240448;
          *(_DWORD *)&v83[4] = v14 - v15;
          *(_WORD *)&v83[8] = 2050;
          *(double *)&v83[10] = v72;
          LODWORD(v77) = 18;
          __int16 v73 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019346C8,  0LL,  "Unexpected large jump in steps, %{public}d new steps, %{public}.1f seconds delay since last en try, stopping bout",  v83,  *(void *)&v77);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLPredictedWalkDistanceBoutDetector::handleStepCountNotification(const CLStepCountEntry &)",  "%s\n",  v73);
        }

void sub_100370254(double *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  double v5 = *(double *)(a2 + 8);
  double v6 = *(double *)(a2 + 16);
  *(double *)a4 = v5;
  *(double *)(a4 + 8) = v6;
  *(_DWORD *)(a4 + 24) = a3;
  *(double *)(a4 + 32) = *(double *)(a2 + 32) - a1[6];
  *(_BYTE *)(a4 + 40) = *(_BYTE *)(a2 + 166);
  *(void *)(a4 + 44) = *(void *)(a2 + 156);
  if (v5 >= a1[3] + 3.84)
  {
    *(double *)(a4 + 16) = v5;
    if (qword_1019346C0 != -1) {
      dispatch_once(&qword_1019346C0, &stru_101834A68);
    }
    uint64_t v7 = (os_log_s *)qword_1019346C8;
    if (os_log_type_enabled((os_log_t)qword_1019346C8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = *(void *)(a2 + 8);
      *(_DWORD *)buf = 134349056;
      uint64_t v14 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Missing previous epoch before an epoch with steps, starttime, %{public}f",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019346C0 != -1) {
        dispatch_once(&qword_1019346C0, &stru_101834A68);
      }
      uint64_t v9 = *(void *)(a2 + 8);
      int v11 = 134349056;
      uint64_t v12 = v9;
      int v10 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019346C8,  0LL,  "Missing previous epoch before an epoch with steps, starttime, %{public}f",  &v11,  12);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "P6MWDStepEntry CLPredictedWalkDistanceBoutDetector::createP6MWDStepEntry(const CLStepCountEntry &, const int)",  "%s\n",  v10);
    }
  }

  else
  {
    *(double *)(a4 + 16) = v6 + *(double *)(a2 + 88) - a1[13];
  }

void sub_100370464(uint64_t a1, void *a2, _DWORD *a3, double *a4, int a5)
{
  uint64_t v10 = a2[2];
  if (v10 && (double v11 = *(double *)(*a2 + 32LL), vabdd_f64(a4[1], v11) > 0.01))
  {
    sub_1001B4C40(a2);
    *a3 = 1;
    uint64_t v10 = a2[2];
  }

  else
  {
    int v12 = (*a3)++;
    if (v12 < 0) {
      return;
    }
  }

  uint64_t v13 = operator new(0x48uLL);
  v13[8] = *((void *)a4 + 6);
  __int128 v14 = *((_OWORD *)a4 + 2);
  __int128 v15 = *(_OWORD *)a4;
  *((_OWORD *)v13 + 2) = *((_OWORD *)a4 + 1);
  *((_OWORD *)v13 + 3) = v14;
  *((_OWORD *)v13 + 1) = v15;
  uint64_t v16 = *a2;
  *uint64_t v13 = *a2;
  v13[1] = a2;
  *(void *)(v16 + 8) = v13;
  *a2 = v13;
  a2[2] = v10 + 1;
  if (*((double *)v13 + 4) - *(double *)(a2[1] + 24LL) >= 30.0)
  {
    sub_1003705CC(a1, a2, a5);
    for (uint64_t i = a2[2]; i; uint64_t i = a2[2])
    {
      uint64_t v18 = (double *)a2[1];
      double v19 = *v18;
      *(double *)(*(void *)&v19 + 8LL) = v18[1];
      **((double **)v18 + 1) = v19;
      a2[2] = i - 1;
      operator delete(v18);
    }
  }

void sub_1003705CC(uint64_t a1, void *a2, int a3)
{
  int v21 = 0;
  uint64_t v6 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v7 = *(void *)(v5 + 24);
  uint64_t v8 = *(void *)(*a2 + 32LL);
  uint64_t v22 = v7;
  uint64_t v23 = v8;
  int32x2_t v27 = vsub_s32(*(int32x2_t *)(v6 + 60), *(int32x2_t *)(v5 + 60));
  int v30 = a3;
  __int128 v31 = 0u;
  memset(v32, 0, sizeof(v32));
  if ((void *)v5 == a2)
  {
    int v10 = 0;
    int v9 = 0;
    double v13 = 0.0;
    double v12 = 0.0;
    double v11 = 0.0;
  }

  else
  {
    int v9 = 0;
    int v10 = 0;
    double v11 = 0.0;
    double v12 = 0.0;
    double v13 = 0.0;
    do
    {
      int v14 = *(_DWORD *)(v5 + 40);
      v9 += v14;
      double v15 = *(double *)(v5 + 48);
      double v11 = v15 + v11;
      double v12 = v12 + *(double *)(v5 + 32) - *(double *)(v5 + 24);
      int v16 = *(unsigned __int8 *)(v5 + 56);
      if (v16 != 1) {
        double v15 = -0.0;
      }
      double v13 = v13 + v15;
      if (v16 != 1) {
        int v14 = 0;
      }
      v10 += v14;
      uint64_t v5 = *(void *)(v5 + 8);
    }

    while ((void *)v5 != a2);
  }

  int v24 = v9;
  double v25 = v11;
  double v26 = v12;
  int v28 = v10;
  double v29 = v13;
  int v17 = sub_100370920(a1, (uint64_t)&v21);
  if (qword_1019346C0 != -1) {
    dispatch_once(&qword_1019346C0, &stru_101834A68);
  }
  uint64_t v18 = (os_log_s *)qword_1019346C8;
  if (os_log_type_enabled((os_log_t)qword_1019346C8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 67242240;
    int v51 = a3;
    __int16 v52 = 2050;
    uint64_t v53 = v7;
    __int16 v54 = 2050;
    uint64_t v55 = v8;
    __int16 v56 = 1026;
    int v57 = v9;
    __int16 v58 = 2050;
    double v59 = v11;
    __int16 v60 = 2050;
    double v61 = v12;
    __int16 v62 = 1026;
    int v63 = v10;
    __int16 v64 = 2050;
    double v65 = v13;
    __int16 v66 = 1026;
    int v67 = v17;
    _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEBUG,  "type,%{public}d,boutStart,%{public}f,boutEnd,%{public}f,steps,%{public}d,distance,%{public}f,activeTime,%{public}f ,gpsSteps,%{public}d,gpsDistance,%{public}f,report,%{public}d",  buf,  0x4Cu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019346C0 != -1) {
      dispatch_once(&qword_1019346C0, &stru_101834A68);
    }
    v33[0] = 67242240;
    v33[1] = a3;
    __int16 v34 = 2050;
    uint64_t v35 = v7;
    __int16 v36 = 2050;
    uint64_t v37 = v8;
    __int16 v38 = 1026;
    int v39 = v9;
    __int16 v40 = 2050;
    double v41 = v11;
    __int16 v42 = 2050;
    double v43 = v12;
    __int16 v44 = 1026;
    int v45 = v10;
    __int16 v46 = 2050;
    double v47 = v13;
    __int16 v48 = 1026;
    int v49 = v17;
    unsigned int v20 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019346C8,  2LL,  "type,%{public}d,boutStart,%{public}f,boutEnd,%{public}f,steps,%{public}d,distance,%{public}f,activeT ime,%{public}f,gpsSteps,%{public}d,gpsDistance,%{public}f,report,%{public}d",  v33,  76);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLPredictedWalkDistanceBoutDetector::assembleAndReportBout(const std::list<P6MWDStepEntry> &, P6MWDBoutType) const",  "%s\n",  v20);
  }

  if (v17)
  {
    double v19 = *(void (**)(int *, void))(a1 + 312);
    if (v19) {
      v19(&v21, *(void *)(a1 + 320));
    }
  }

uint64_t sub_100370920(uint64_t a1, uint64_t a2)
{
  BOOL v2 = *(double *)(a2 + 40) >= 60.0 || *(_DWORD *)(a2 + 72) == 1;
  uint64_t v3 = v2;
  if (!v2)
  {
    if (qword_1019346C0 != -1) {
      dispatch_once(&qword_1019346C0, &stru_101834A68);
    }
    uint64_t v4 = (os_log_s *)qword_1019346C8;
    if (os_log_type_enabled((os_log_t)qword_1019346C8, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_INFO,  "Discarding bout since it does not meet minimum timeWithSteps requirement",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019346C0 != -1) {
        dispatch_once(&qword_1019346C0, &stru_101834A68);
      }
      v7[0] = 0;
      uint64_t v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019346C8,  1LL,  "Discarding bout since it does not meet minimum timeWithSteps requirement",  v7,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLPredictedWalkDistanceBoutDetector::shouldReportBout(const CLPredictedWalkDistanceBoutEntry &) const",  "%s\n",  v6);
    }
  }

  return v3;
}

void sub_100370AD0(uint64_t a1, __int128 *a2)
{
  if (qword_1019346C0 != -1) {
    dispatch_once(&qword_1019346C0, &stru_101834A68);
  }
  uint64_t v4 = (os_log_s *)qword_1019346C8;
  if (os_log_type_enabled((os_log_t)qword_1019346C8, OS_LOG_TYPE_DEBUG))
  {
    if (*(_BYTE *)(a1 + 244)) {
      uint64_t v5 = "update";
    }
    else {
      uint64_t v5 = "init";
    }
    *(_DWORD *)buf = 136315138;
    uint64_t v18 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "CLPredictedWalkDistanceBoutDetector: Received user info (%s)",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019346C0 != -1) {
      dispatch_once(&qword_1019346C0, &stru_101834A68);
    }
    if (*(_BYTE *)(a1 + 244)) {
      double v11 = "update";
    }
    else {
      double v11 = "init";
    }
    int v15 = 136315138;
    int v16 = v11;
    double v12 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019346C8,  2LL,  "CLPredictedWalkDistanceBoutDetector: Received user info (%s)",  (const char *)&v15);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLPredictedWalkDistanceBoutDetector::handleUserInfoUpdate(const CLBodyMetrics &)",  "%s\n",  v12);
  }

  __int128 v6 = *a2;
  __int128 v7 = a2[1];
  __int128 v8 = a2[2];
  *(_OWORD *)(a1 + 292) = *(__int128 *)((char *)a2 + 44);
  *(_OWORD *)(a1 + 264) = v7;
  *(_OWORD *)(a1 + 280) = v8;
  *(_OWORD *)(a1 + 248) = v6;
  *(_BYTE *)(a1 + 244) = 1;
  if (*(void *)(a1 + 192) != *(void *)(a1 + 200) && *(_DWORD *)(a1 + 288))
  {
    if (qword_1019346C0 != -1) {
      dispatch_once(&qword_1019346C0, &stru_101834A68);
    }
    int v9 = (os_log_s *)qword_1019346C8;
    if (os_log_type_enabled((os_log_t)qword_1019346C8, OS_LOG_TYPE_DEBUG))
    {
      int v10 = **(const char ***)(a1 + 192);
      *(_DWORD *)buf = 134349056;
      uint64_t v18 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "CLPredictedWalkDistanceBoutDetector: Ending walking bout due to wheelchair (%{public}.2f)",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019346C0 != -1) {
        dispatch_once(&qword_1019346C0, &stru_101834A68);
      }
      double v13 = **(const char ***)(a1 + 192);
      int v15 = 134349056;
      int v16 = v13;
      int v14 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019346C8,  2LL,  "CLPredictedWalkDistanceBoutDetector: Ending walking bout due to wheelchair (%{public}.2f)",  &v15,  12);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLPredictedWalkDistanceBoutDetector::handleUserInfoUpdate(const CLBodyMetrics &)",  "%s\n",  v14);
    }

    sub_10036E97C(a1);
  }

void sub_100370E4C(id a1)
{
  qword_1019346C8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "PredictedWalkDistance");
}

uint64_t sub_100370E78()
{
  if (qword_101995538 != -1) {
    dispatch_once(&qword_101995538, &stru_101834A88);
  }
  return qword_1019A0F68;
}

void sub_100370EBC()
{
  uint64_t v0 = *(void *)buf;
  int v1 = sub_100C0598C();
  else {
    BOOL v2 = v1;
  }
  uint64_t v3 = *(std::__shared_weak_count **)&buf[8];
  if (*(void *)&buf[8])
  {
    uint64_t v4 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      unint64_t v5 = __ldaxr(v4);
    while (__stlxr(v5 - 1, v4));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }

  sub_1002F0B04(buf);
  int v6 = sub_1002A6F64(*(uint64_t *)buf, "EnableLocationControllerRecorderDebugLogs", (BOOL *)&v18);
  if ((_BYTE)v18) {
    int v7 = v6;
  }
  else {
    int v7 = 0;
  }
  __int128 v8 = *(std::__shared_weak_count **)&buf[8];
  if (*(void *)&buf[8])
  {
    int v9 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      unint64_t v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }

  double v11 = operator new(0x28uLL);
  sub_1003819E4((uint64_t)v11, v2, v7);
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101834AA8);
  }
  double v12 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v13 = sub_10080E94C();
    int v18 = 1;
    double v14 = sub_10080EB58(v13, &v18);
    *(_DWORD *)buf = 134349568;
    *(double *)&uint8_t buf[4] = v14;
    *(_WORD *)&_BYTE buf[12] = 1026;
    *(_DWORD *)&buf[14] = v2;
    __int16 v25 = 1026;
    int v26 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "#locctl,#rec,created recorder instance,mct,%{public}.3f,enableRecorder,%{public}d,enableDebugLogs,%{public}d",  buf,  0x18u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    uint64_t v15 = qword_101934838;
    double v16 = sub_1003713F0();
    int v18 = 134349568;
    double v19 = v16;
    __int16 v20 = 1026;
    BOOL v21 = v2;
    __int16 v22 = 1026;
    int v23 = v7;
    int v17 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v15,  0LL,  "#locctl,#rec,created recorder instance,mct,%{public}.3f,enableRecorder,%{public}d,enableDebugLogs,%{public}d",  &v18,  24);
    sub_10029211C("Generic", 1LL, 0, 2LL, "static void CLLocationControllerRecorder::create()", "%s\n", v17);
    if (v17 != buf) {
      free(v17);
    }
  }

  qword_1019A0F68 = (uint64_t)v11;
}

void sub_1003711AC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  a12 = 0LL;
  sub_100381E80((int)&a12, v17);
  _Unwind_Resume(a1);
}

void sub_100371200()
{
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101834AA8);
  }
  uint64_t v0 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v1 = sub_10080E94C();
    *(_DWORD *)buf = 1;
    double v2 = sub_10080EB58(v1, buf);
    *(_DWORD *)buf = 134349056;
    double v9 = v2;
    _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_DEFAULT,  "#locctl,#rec,shutdown recorder instance,mct,%{public}.3f",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    uint64_t v3 = qword_101934838;
    int v6 = 134349056;
    double v7 = sub_1003713F0();
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v3,  0LL,  "#locctl,#rec,shutdown recorder instance,mct,%{public}.3f",  &v6,  12);
    unint64_t v5 = (uint8_t *)v4;
    sub_10029211C("Generic", 1LL, 0, 2LL, "static void CLLocationControllerRecorder::shutdownInstance()", "%s\n", v4);
    if (v5 != buf) {
      free(v5);
    }
  }

  if (qword_101995538 != -1) {
    dispatch_once(&qword_101995538, &stru_101834A88);
  }
  if (qword_1019A0F68) {
    sub_10037141C(qword_1019A0F68);
  }
}

double sub_1003713F0()
{
  uint64_t v0 = sub_10080E94C();
  int v2 = 1;
  return sub_10080EB58(v0, &v2);
}

void sub_10037141C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    sub_100D9FC74(v2);
    uint64_t v3 = sub_10080E94C();
    *(_DWORD *)buf = 1;
    *(double *)(a1 + 32) = sub_10080EB58(v3, buf);
    *(_BYTE *)(a1 + 24) = 0;
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    uint64_t v4 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_INFO))
    {
      uint64_t v5 = sub_10080E94C();
      *(_DWORD *)buf = 1;
      double v6 = sub_10080EB58(v5, buf);
      uint64_t v7 = sub_10080E94C();
      double v8 = sub_10080EF30(v7);
      *(_DWORD *)buf = 134349312;
      double v18 = v6;
      __int16 v19 = 2050;
      double v20 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_INFO,  "#locctl,#rec,close record session,mct,%{public}.3f,propagation_us,%{public}.3f",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      uint64_t v9 = qword_101934838;
      double v10 = sub_1003713F0();
      uint64_t v11 = sub_10080E94C();
      int v13 = 134349312;
      double v14 = v10;
      __int16 v15 = 2050;
      double v16 = sub_10080EF30(v11);
      double v12 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v9,  1LL,  "#locctl,#rec,close record session,mct,%{public}.3f,propagation_us,%{public}.3f",  &v13,  22);
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLLocationControllerRecorder::close()", "%s\n", v12);
    }
  }

void sub_100371644(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    if (*(_BYTE *)(a1 + 24))
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      uint64_t v3 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_INFO))
      {
        uint64_t v4 = sub_10080E94C();
        *(_DWORD *)buf = 1;
        double v5 = sub_10080EB58(v4, buf);
        uint64_t v6 = sub_10080E94C();
        double v7 = sub_10080EF30(v6);
        *(_DWORD *)buf = 134349312;
        double v35 = v5;
        __int16 v36 = 2050;
        double v37 = v7;
        _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_INFO,  "#locctl,#rec,#Warning,previous record session is still open,ignoring open,mct,%{public}.3f,propagation_us,%{public}.3f",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101834AA8);
        }
        uint64_t v8 = qword_101934838;
        double v9 = sub_1003713F0();
        uint64_t v10 = sub_10080E94C();
        *(_DWORD *)unint64_t v33 = 134349312;
        *(double *)&v33[4] = v9;
        *(_WORD *)&v33[12] = 2050;
        *(void *)&v33[14] = sub_10080EF30(v10);
        uint64_t v11 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v8,  1LL,  "#locctl,#rec,#Warning,previous record session is still open,ignoring open,mct,%{public}.3f ,propagation_us,%{public}.3f",  v33,  22,  *(_OWORD *)v33,  *(void *)&v33[16]);
LABEL_26:
        int32x2_t v27 = (uint8_t *)v11;
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CLLocationControllerRecorder::open()", "%s\n", v11);
        if (v27 != buf) {
          free(v27);
        }
      }
    }

    else
    {
      sub_100D9C19C(v2);
      *(_BYTE *)(a1 + 24) = 1;
      if (*(double *)(a1 + 32) < 0.0)
      {
        uint64_t v12 = sub_10080E94C();
        *(_DWORD *)buf = 1;
        *(double *)(a1 + 32) = sub_10080EB58(v12, buf);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101834AA8);
        }
        int v13 = (os_log_s *)qword_101934838;
        if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_INFO))
        {
          uint64_t v14 = sub_10080E94C();
          *(_DWORD *)buf = 1;
          double v15 = sub_10080EB58(v14, buf);
          uint64_t v16 = sub_10080E94C();
          double v17 = sub_10080EF30(v16);
          *(_DWORD *)buf = 134349312;
          double v35 = v15;
          __int16 v36 = 2050;
          double v37 = v17;
          _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_INFO,  "#locctl,#rec,open record session for the first time since boot,mct,%{public}.3f,propagation_us,%{public}.3f",  buf,  0x16u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934830 != -1) {
            dispatch_once(&qword_101934830, &stru_101834AA8);
          }
          uint64_t v28 = qword_101934838;
          double v29 = sub_1003713F0();
          uint64_t v30 = sub_10080E94C();
          *(_DWORD *)unint64_t v33 = 134349312;
          *(double *)&v33[4] = v29;
          *(_WORD *)&v33[12] = 2050;
          *(void *)&v33[14] = sub_10080EF30(v30);
          __int128 v31 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v28,  1LL,  "#locctl,#rec,open record session for the first time since boot,mct,%{public}.3f,propagation_us,%{public}.3f",  v33,  22);
          sub_10029211C("Generic", 1LL, 0, 2LL, "void CLLocationControllerRecorder::open()", "%s\n", v31);
        }
      }

      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      double v18 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_INFO))
      {
        uint64_t v19 = sub_10080E94C();
        *(_DWORD *)buf = 1;
        double v20 = sub_10080EB58(v19, buf);
        uint64_t v21 = sub_10080E94C();
        double v22 = sub_10080EF30(v21);
        *(_DWORD *)buf = 134349312;
        double v35 = v20;
        __int16 v36 = 2050;
        double v37 = v22;
        _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_INFO,  "#locctl,#rec,open record session,mct,%{public}.3f,propagation_us,%{public}.3f",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101834AA8);
        }
        uint64_t v23 = qword_101934838;
        double v24 = sub_1003713F0();
        uint64_t v25 = sub_10080E94C();
        double v26 = sub_10080EF30(v25);
        *(_DWORD *)unint64_t v33 = 134349312;
        *(double *)&v33[4] = v24;
        *(_WORD *)&v33[12] = 2050;
        *(double *)&v33[14] = v26;
        LODWORD(v32) = 22;
        uint64_t v11 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v23,  1LL,  "#locctl,#rec,open record session,mct,%{public}.3f,propagation_us,%{public}.3f",  v33,  v32,  *(_OWORD *)v33,  *(void *)&v33[16]);
        goto LABEL_26;
      }
    }
  }

uint64_t sub_100371B44(uint64_t result)
{
  if (*(void *)(result + 16))
  {
    uint64_t v1 = result;
    sub_100EDE11C(v18);
    uint64_t v2 = (__n128 *)sub_10080E94C();
    sub_10080ED44(v2, v17);
    sub_100371E4C((uint64_t)v17, (uint64_t)v18);
    v20 |= 2u;
    uint64_t v3 = v19;
    if (!v19)
    {
      uint64_t v3 = operator new(0x1F0uLL);
      sub_1005E5F30((uint64_t)v3);
      uint64_t v19 = v3;
    }

    v3[123] |= 0x10u;
    uint64_t v4 = (_DWORD *)*((void *)v3 + 37);
    if (!v4)
    {
      uint64_t v4 = operator new(0x20uLL);
      sub_100705F44(v4);
      *((void *)v3 + 37) = v4;
    }

    v4[7] |= 2u;
    double v5 = (void *)*((void *)v4 + 2);
    if (!v5)
    {
      double v5 = operator new(0x38uLL);
      sub_100705F58((uint64_t)v5);
      *((void *)v4 + 2) = v5;
    }

    char v6 = sub_1004F6DCC();
    sub_100F8A3D0((uint64_t)v5, v6);
    int v7 = sub_100371ED0(v1, (uint64_t)v18);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    uint64_t v8 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      unint64_t v9 = v17[0].n128_u64[0];
      uint64_t v10 = sub_10080E94C();
      double v11 = sub_10080EF30(v10);
      *(_DWORD *)buf = 67240704;
      int v27 = v7;
      __int16 v28 = 2050;
      unint64_t v29 = v9;
      __int16 v30 = 2050;
      double v31 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,wrote platform info,success,%{public}d,mct,%{public}.3f,propagation_us,%{public}.3f",  buf,  0x1Cu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      uint64_t v12 = qword_101934838;
      unint64_t v13 = v17[0].n128_u64[0];
      uint64_t v14 = sub_10080E94C();
      double v15 = sub_10080EF30(v14);
      v21[0] = 67240704;
      v21[1] = v7;
      __int16 v22 = 2050;
      unint64_t v23 = v13;
      __int16 v24 = 2050;
      double v25 = v15;
      uint64_t v16 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v12,  2LL,  "#locctl,#rec,wrote platform info,success,%{public}d,mct,%{public}.3f,propagation_us,%{public}.3f",  v21,  28);
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLLocationControllerRecorder::recordRavenPlatformInfo()", "%s\n", v16);
    }

    return sub_100EDE8A8(v18);
  }

  return result;
}

void sub_100371DFC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
}

double sub_100371E4C(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a2 + 52) |= 1u;
  uint64_t v3 = *(char **)(a2 + 32);
  if (!v3)
  {
    uint64_t v3 = (char *)operator new(0x30uLL);
    sub_100EDE120((uint64_t)v3);
    *(void *)(a2 + 32) = v3;
  }

  int v5 = *((_DWORD *)v3 + 11);
  *(int8x16_t *)(v3 + 8) = vextq_s8(*(int8x16_t *)(a1 + 8), *(int8x16_t *)(a1 + 8), 8uLL);
  double result = *(double *)a1;
  *((_DWORD *)v3 + 11) = v5 | 7;
  *((double *)v3 + 3) = result;
  return result;
}

void sub_100371EBC(_Unwind_Exception *a1)
{
}

uint64_t sub_100371ED0(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 16))
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    uint64_t v4 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_ERROR,  "#locctl,#rec,write:protobuf serializer object not initialized",  buf,  2u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    LOWORD(__p.__r_.__value_.__l.__data_) = 0;
    int v5 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  16LL,  "#locctl,#rec,write:protobuf serializer object not initialized",  &__p,  2);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLLocationControllerRecorder::write(const CLP::LogEntry::LogEntry &)",  "%s\n",  v5);
    goto LABEL_30;
  }

  if (!*(_BYTE *)(a1 + 24))
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    char v6 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "#locctl,#rec,write:session not open", buf, 2u);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    LOWORD(__p.__r_.__value_.__l.__data_) = 0;
    int v5 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,write:session not open",  &__p,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLLocationControllerRecorder::write(const CLP::LogEntry::LogEntry &)",  "%s\n",  v5);
LABEL_30:
    return 0LL;
  }

  memset(&__p, 0, sizeof(__p));
  uint64_t v3 = wireless_diagnostics::google::protobuf::MessageLite::SerializeToString(a2, &__p);
  if ((v3 & 1) != 0)
  {
    sub_100DA0298(*(void *)(a1 + 16), &__p);
  }

  else
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    int v7 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,write:could not serialize protobuf message",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      v10[0] = 0;
      unint64_t v9 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,write:could not serialize protobuf message",  v10,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLLocationControllerRecorder::write(const CLP::LogEntry::LogEntry &)",  "%s\n",  v9);
    }
  }

  return v3;
}

void sub_10037230C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100372334(uint64_t result, uint64_t a2)
{
  if (*(void *)(result + 16))
  {
    uint64_t v3 = result;
    sub_100EDE11C(v24);
    unsigned int v23 = 1;
    *(_DWORD *)buf = 21;
    HIDWORD(v21) = 21;
    int v22 = sub_100FE4D78((int *)buf);
    sub_100372734((uint64_t)v24, &v23, (_DWORD *)&v21 + 1, (_DWORD *)&v21 + 1, (uint64_t *)a2);
    v26 |= 2u;
    uint64_t v4 = v25;
    if (!v25)
    {
      uint64_t v4 = operator new(0x1F0uLL);
      sub_1005E5F30((uint64_t)v4);
      double v25 = v4;
    }

    v4[123] |= 0x800u;
    int v5 = (_DWORD *)*((void *)v4 + 44);
    if (!v5)
    {
      int v5 = operator new(0xC0uLL);
      sub_100B1FFB4((uint64_t)v5);
      *((void *)v4 + 44) = v5;
    }

    v5[46] |= 0x10u;
    char v6 = (_DWORD *)*((void *)v5 + 4);
    if (!v6)
    {
      char v6 = operator new(0x20uLL);
      sub_100B1FC68(v6);
      *((void *)v5 + 4) = v6;
    }

    v6[7] |= 1u;
    v6[2] = -1;
    if (!sub_1001D2F54(1u)) {
      __assert_rtn( "set_notification_type",  "CLPLocationController.pb.h",  6520,  "::CLP::LogEntry::PrivateData::SystemNotification_NotificationType_IsValid(value)");
    }
    int v7 = v6[7];
    v6[3] = 1;
    v6[7] = v7 | 6;
    uint64_t v8 = (_DWORD *)*((void *)v6 + 2);
    if (!v8)
    {
      uint64_t v8 = operator new(0x50uLL);
      sub_100B1FC90((uint64_t)v8);
      *((void *)v6 + 2) = v8;
    }

    v8[18] |= 1u;
    unint64_t v9 = (void *)*((void *)v8 + 1);
    if (!v9)
    {
      unint64_t v9 = operator new(0x28uLL);
      sub_1001D23B4((uint64_t)v9);
      *((void *)v8 + 1) = v9;
    }

    sub_1003728AC((uint64_t *)a2, (uint64_t)v9);
    char v10 = *(_BYTE *)(a2 + 24);
    v8[18] |= 2u;
    *((_BYTE *)v8 + 16) = v10;
    int v11 = sub_100371ED0(v3, (uint64_t)v24);
    if (*(_BYTE *)(v3 + 8))
    {
      int v12 = v11;
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      unint64_t v13 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v14 = *(void *)(a2 + 16);
        uint64_t v15 = *(void *)a2;
        int v16 = *(unsigned __int8 *)(a2 + 24);
        *(_DWORD *)buf = 67240960;
        int v35 = v12;
        __int16 v36 = 2050;
        uint64_t v37 = v14;
        __int16 v38 = 2050;
        uint64_t v39 = v15;
        __int16 v40 = 1026;
        int v41 = v16;
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordHeartbeat,success,%{public}d,received timestamp,cfat,%{public}.3f,mct,%{public}.3f,is_valid,%{public}d",  buf,  0x22u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101834AA8);
        }
        uint64_t v17 = *(void *)(a2 + 16);
        uint64_t v18 = *(void *)a2;
        int v19 = *(unsigned __int8 *)(a2 + 24);
        v27[0] = 67240960;
        v27[1] = v12;
        __int16 v28 = 2050;
        uint64_t v29 = v17;
        __int16 v30 = 2050;
        uint64_t v31 = v18;
        __int16 v32 = 1026;
        int v33 = v19;
        LODWORD(v21) = 34;
        int v20 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,recordHeartbeat,success,%{public}d,received timestamp,cfat,%{public}.3f,mct,%{publi c}.3f,is_valid,%{public}d",  v27,  v21);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordHeartbeat(const CLUtils::Timestamp &)",  "%s\n",  v20);
      }
    }

    return sub_100EDE8A8(v24);
  }

  return result;
}

void sub_1003726D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

void sub_100372734(uint64_t a1, unsigned int *a2, _DWORD *a3, _DWORD *a4, uint64_t *a5)
{
  *(_DWORD *)(a1 + 52) |= 2u;
  char v10 = *(_DWORD **)(a1 + 40);
  if (!v10)
  {
    char v10 = operator new(0x1F0uLL);
    sub_1005E5F30((uint64_t)v10);
    *(void *)(a1 + 40) = v10;
  }

  v10[123] |= 0x800u;
  int v11 = (_DWORD *)*((void *)v10 + 44);
  if (!v11)
  {
    int v11 = operator new(0xC0uLL);
    sub_100B1FFB4((uint64_t)v11);
    *((void *)v10 + 44) = v11;
  }

  v11[46] |= 1u;
  int v12 = (void *)*((void *)v11 + 1);
  if (!v12)
  {
    int v12 = operator new(0x28uLL);
    sub_1001D23B4((uint64_t)v12);
    *((void *)v11 + 1) = v12;
  }

  sub_1003728AC(a5, (uint64_t)v12);
  unsigned int v13 = sub_1003812B0(a2);
  if (!sub_1001D2F54(v13)) {
    sub_101236544();
  }
  int v14 = v11[46];
  v11[44] = v13;
  v11[46] = v14 | 6;
  uint64_t v15 = (void *)*((void *)v11 + 2);
  if (!v15)
  {
    uint64_t v15 = operator new(0x18uLL);
    sub_100B1FFA0(v15);
    *((void *)v11 + 2) = v15;
  }

  sub_100381470(a3, v15);
  v11[46] |= 8u;
  int v16 = (void *)*((void *)v11 + 3);
  if (!v16)
  {
    int v16 = operator new(0x18uLL);
    sub_100B1FFA0(v16);
    *((void *)v11 + 3) = v16;
  }

  sub_100381470(a4, v16);
}

void sub_100372880(_Unwind_Exception *a1)
{
}

void sub_1003728AC(uint64_t *a1, uint64_t a2)
{
  if (a2)
  {
    int v2 = *(_DWORD *)(a2 + 36);
    *(int8x16_t *)(a2 + 8) = vextq_s8(*(int8x16_t *)(a1 + 1), *(int8x16_t *)(a1 + 1), 8uLL);
    uint64_t v3 = *a1;
    *(_DWORD *)(a2 + 36) = v2 | 7;
    *(void *)(a2 + 24) = v3;
  }

  else
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    uint64_t v4 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,failed to set private data timestamp",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      v6[0] = 0;
      int v5 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,failed to set private data timestamp",  v6,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLLocationControllerRecorder::setPrivateDataTimeStamp(const CLUtils::Timestamp &, CLP::LogEntry::Pri vateData::TimeStamp *)",  "%s\n",  v5);
    }
  }

uint64_t sub_100372A58(uint64_t result, void *a2)
{
  if (*(void *)(result + 16))
  {
    uint64_t v3 = result;
    sub_100EDE11C(v41);
    uint64_t v4 = (__n128 *)sub_10080E94C();
    sub_10080ED44(v4, v40);
    unsigned int v39 = 1;
    LODWORD(__str.__r_.__value_.__l.__data_) = 21;
    v38[0] = 21;
    v38[1] = sub_100FE4D78((int *)&__str);
    sub_100372734((uint64_t)v41, &v39, v38, v38, (uint64_t *)v40);
    v43 |= 2u;
    int v5 = v42;
    if (!v42)
    {
      int v5 = operator new(0x1F0uLL);
      sub_1005E5F30((uint64_t)v5);
      __int16 v42 = v5;
    }

    v5[123] |= 0x800u;
    char v6 = (_DWORD *)*((void *)v5 + 44);
    if (!v6)
    {
      char v6 = operator new(0xC0uLL);
      sub_100B1FFB4((uint64_t)v6);
      *((void *)v5 + 44) = v6;
    }

    v6[46] |= 0x10u;
    int v7 = (_DWORD *)*((void *)v6 + 4);
    if (!v7)
    {
      int v7 = operator new(0x20uLL);
      sub_100B1FC68(v7);
      *((void *)v6 + 4) = v7;
    }

    v7[7] |= 1u;
    v7[2] = -1;
    if (!sub_1001D2F54(2u)) {
      __assert_rtn( "set_notification_type",  "CLPLocationController.pb.h",  6520,  "::CLP::LogEntry::PrivateData::SystemNotification_NotificationType_IsValid(value)");
    }
    int v8 = v7[7];
    v7[3] = 2;
    v7[7] = v8 | 6;
    unint64_t v9 = (_DWORD *)*((void *)v7 + 2);
    if (!v9)
    {
      unint64_t v9 = operator new(0x50uLL);
      sub_100B1FC90((uint64_t)v9);
      *((void *)v7 + 2) = v9;
    }

    pid_t v10 = getpid();
    uint64_t v36 = v3;
    uint64_t v37 = a2;
    v9[18] |= 4u;
    v9[5] = v10;
    int v12 = a2 + 1;
    int v11 = (void *)*a2;
    if (v11 != v12)
    {
      do
      {
        int v13 = v9[9];
        uint64_t v14 = (int)v9[8];
        if ((int)v14 >= v13)
        {
          if (v13 == v9[10])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v9 + 6),  v13 + 1);
            int v13 = v9[9];
          }

          v9[9] = v13 + 1;
          int v16 = sub_100381AC4();
          uint64_t v17 = *((void *)v9 + 3);
          uint64_t v18 = (int)v9[8];
          _WORD v9[8] = v18 + 1;
          *(void *)(v17 + 8 * v18) = v16;
        }

        else
        {
          uint64_t v15 = *((void *)v9 + 3);
          _WORD v9[8] = v14 + 1;
          int v16 = *(_DWORD **)(v15 + 8 * v14);
        }

        int v19 = *((_DWORD *)v11 + 8);
        int v20 = v16[10] | 1;
        v16[10] = v20;
        v16[8] = v19;
        if (*((char *)v11 + 63) < 0)
        {
          sub_1010DD48C(&__str, (void *)v11[5], v11[6]);
          int v20 = v16[10];
        }

        else
        {
          std::string __str = *(std::string *)(v11 + 5);
        }

        v16[10] = v20 | 2;
        uint64_t v21 = (std::string *)*((void *)v16 + 1);
        if (v21 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
        {
          uint64_t v21 = (std::string *)operator new(0x18uLL);
          v21->__r_.__value_.__r.__words[0] = 0LL;
          v21->__r_.__value_.__l.__size_ = 0LL;
          v21->__r_.__value_.__l.__cap_ = 0LL;
          *((void *)v16 + 1) = v21;
        }

        std::string::operator=(v21, &__str);
        sub_100381B04((uint64_t *)&__str, (uint64_t)(v11 + 8));
        std::string::size_type v22 = __str.__r_.__value_.__r.__words[0];
        if ((std::string::size_type *)__str.__r_.__value_.__l.__data_ != &__str.__r_.__value_.__r.__words[1])
        {
          do
          {
            int v23 = *(_DWORD *)(v22 + 28);
            int v24 = v16[6];
            if (v24 == v16[7])
            {
              sub_10004AAFC((uint64_t)(v16 + 4), v24 + 1);
              int v24 = v16[6];
            }

            uint64_t v25 = *((void *)v16 + 2);
            v16[6] = v24 + 1;
            *(_DWORD *)(v25 + 4LL * v24) = v23;
            int v26 = *(std::string **)(v22 + 8);
            if (v26)
            {
              do
              {
                int v27 = v26;
                int v26 = (std::string *)v26->__r_.__value_.__r.__words[0];
              }

              while (v26);
            }

            else
            {
              do
              {
                int v27 = *(std::string **)(v22 + 16);
                BOOL v28 = v27->__r_.__value_.__r.__words[0] == v22;
                std::string::size_type v22 = (std::string::size_type)v27;
              }

              while (!v28);
            }

            std::string::size_type v22 = (std::string::size_type)v27;
          }

          while (v27 != (std::string *)&__str.__r_.__value_.__r.__words[1]);
        }

        sub_100008390((uint64_t)&__str, (void *)__str.__r_.__value_.__l.__size_);
        uint64_t v29 = (void *)v11[1];
        if (v29)
        {
          do
          {
            __int16 v30 = v29;
            uint64_t v29 = (void *)*v29;
          }

          while (v29);
        }

        else
        {
          do
          {
            __int16 v30 = (void *)v11[2];
            BOOL v28 = *v30 == (void)v11;
            int v11 = v30;
          }

          while (!v28);
        }

        int v11 = v30;
      }

      while (v30 != v12);
    }

    int v31 = sub_100371ED0(v36, (uint64_t)v41);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    __int16 v32 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      std::string::size_type v33 = v37[2];
      LODWORD(__str.__r_.__value_.__l.__data_) = 67240448;
      HIDWORD(__str.__r_.__value_.__r.__words[0]) = v31;
      LOWORD(__str.__r_.__value_.__r.__words[1]) = 2050;
      *(std::string::size_type *)((char *)&__str.__r_.__value_.__r.__words[1] + 2) = v33;
      _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordLocationControllerClientList,success,%{public}d,clientList_size,%{public}zu",  (uint8_t *)&__str,  0x12u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(&__str, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      uint64_t v34 = v37[2];
      v44[0] = 67240448;
      v44[1] = v31;
      __int16 v45 = 2050;
      uint64_t v46 = v34;
      int v35 = (std::string *)_os_log_send_and_compose_impl( 2LL,  0LL,  &__str,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,recordLocationControllerClientList,success,%{public}d,clientList_size,%{public}zu",  v44,  18);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordLocationControllerClientList(const CLLocationControllerRecorder_Types::ClientList &)",  "%s\n",  (const char *)v35);
      if (v35 != &__str) {
        free(v35);
      }
    }

    return sub_100EDE8A8(v41);
  }

  return result;
}

void sub_100372F84( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
}

uint64_t sub_10037301C(uint64_t result, int a2)
{
  if (!*(void *)(result + 16)) {
    return result;
  }
  uint64_t v3 = result;
  sub_100EDE11C(v24);
  uint64_t v4 = (__n128 *)sub_10080E94C();
  sub_10080ED44(v4, v23);
  unsigned int v22 = 1;
  LODWORD(__str.__r_.__value_.__l.__data_) = 21;
  v21[0] = 21;
  v21[1] = sub_100FE4D78((int *)&__str);
  sub_100372734((uint64_t)v24, &v22, v21, v21, (uint64_t *)v23);
  v26 |= 2u;
  int v5 = v25;
  if (!v25)
  {
    int v5 = operator new(0x1F0uLL);
    sub_1005E5F30((uint64_t)v5);
    uint64_t v25 = v5;
  }

  v5[123] |= 0x800u;
  char v6 = (_DWORD *)*((void *)v5 + 44);
  if (!v6)
  {
    char v6 = operator new(0xC0uLL);
    sub_100B1FFB4((uint64_t)v6);
    *((void *)v5 + 44) = v6;
  }

  v6[46] |= 0x10u;
  int v7 = (_DWORD *)*((void *)v6 + 4);
  if (!v7)
  {
    int v7 = operator new(0x20uLL);
    sub_100B1FC68(v7);
    *((void *)v6 + 4) = v7;
  }

  v7[7] |= 1u;
  v7[2] = -1;
  if (!sub_1001D2F54(3u)) {
    __assert_rtn( "set_notification_type",  "CLPLocationController.pb.h",  6520,  "::CLP::LogEntry::PrivateData::SystemNotification_NotificationType_IsValid(value)");
  }
  int v8 = v7[7];
  v7[3] = 3;
  v7[7] = v8 | 6;
  unint64_t v9 = (_DWORD *)*((void *)v7 + 2);
  if (v9)
  {
    if (a2) {
      goto LABEL_11;
    }
LABEL_14:
    if (sub_1000641E0(2u))
    {
      int v10 = 2;
      goto LABEL_16;
    }

void sub_100373498( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *__p, uint64_t a19, int a20, __int16 a21, char a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, char a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, void *a37, uint64_t a38, int a39, __int16 a40, char a41, char a42)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  sub_100EDE8A8(&a30);
  _Unwind_Resume(a1);
}

void sub_100373554(uint64_t a1@<X0>, const char *a2@<X1>, std::string *a3@<X2>, uint64_t a4@<X8>)
{
  BOOL v6 = sub_1002A8560(a1, a2, &__p);
  if (v6) {
    p_p = &__p;
  }
  else {
    p_p = a3;
  }
  if ((char)p_p->__r_.__value_.__s.__size_ < 0)
  {
    int v8 = (void *)p_p->__r_.__value_.__r.__words[0];
    unint64_t v9 = &__p;
    if (!v6) {
      unint64_t v9 = a3;
    }
    sub_1010DD48C((_BYTE *)a4, v8, v9->__r_.__value_.__l.__size_);
  }

  else
  {
    *(_OWORD *)a4 = *(_OWORD *)&p_p->__r_.__value_.__l.__data_;
    *(void *)(a4 + 16) = p_p->__r_.__value_.__l.__cap_;
  }

void sub_1003735EC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100373608(uint64_t a1, unsigned int *a2, int32x4_t *a3, int *a4, int *a5, int *a6, char *a7)
{
  if (!*(void *)(a1 + 16)) {
    return;
  }
  if (*a2 == 4)
  {
    if ((vmaxv_u16((uint16x4_t)vmovn_s32(vceqzq_s32(*a3))) & 1) != 0)
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      int v10 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        if (a3->i32[0]) {
          BOOL v11 = a3->i32[1] == 0;
        }
        else {
          BOOL v11 = 1;
        }
        int v12 = !v11;
        if (*a4) {
          BOOL v13 = a4[1] == 0;
        }
        else {
          BOOL v13 = 1;
        }
        int v14 = !v13;
        LODWORD(buf) = 67109376;
        HIDWORD(buf) = v12;
        __int16 v73 = 1024;
        LODWORD(v74) = v14;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLDaemonStatus_Type,silo entry invalid,from_valid,%d,to_valid,%d",  (uint8_t *)&buf,  0xEu);
      }

      if (!sub_1002921D0(115, 2)) {
        return;
      }
      bzero(&buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      BOOL v15 = !a3->i32[0] || a3->i32[1] == 0;
      BOOL v16 = !v15;
      BOOL v17 = !*a4 || a4[1] == 0;
      BOOL v18 = !v17;
      *(_DWORD *)int v68 = 67109376;
      *(_DWORD *)&v68[4] = v16;
      *(_WORD *)&v68[8] = 1024;
      *(_DWORD *)&v68[10] = v18;
      int v19 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,recordMessage,CLDaemonStatus_Type,silo entry invalid,from_valid,%d,to_valid,%d",  v68,  14);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType &, const CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)",  "%s\n",  v19);
LABEL_54:
      free(v19);
      return;
    }

    sub_100EDE11C(v68);
    uint64_t v28 = (__n128 *)sub_10080E94C();
    sub_10080ED44(v28, v58);
    sub_100372734((uint64_t)v68, a2, a3, a4, (uint64_t *)v58);
    v71 |= 2u;
    uint64_t v29 = v70;
    if (!v70)
    {
      uint64_t v29 = operator new(0x1F0uLL);
      sub_1005E5F30((uint64_t)v29);
      v70 = v29;
    }

    v29[123] |= 0x800u;
    __int16 v30 = (_DWORD *)*((void *)v29 + 44);
    if (!v30)
    {
      __int16 v30 = operator new(0xC0uLL);
      sub_100B1FFB4((uint64_t)v30);
      *((void *)v29 + 44) = v30;
    }

    v30[46] |= 0x20u;
    int v31 = (_DWORD *)*((void *)v30 + 5);
    if (!v31)
    {
      int v31 = operator new(0x20uLL);
      sub_100B1FCC4(v31);
      *((void *)v30 + 5) = v31;
    }

    int v32 = *a5;
    v31[7] |= 1u;
    v31[2] = v32;
    sub_100F8BAF8(a6, a7, (uint64_t)v31);
    int v33 = sub_100371ED0(a1, (uint64_t)v68);
    if (*(_BYTE *)(a1 + 8))
    {
      int v34 = v33;
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      int v35 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        sub_100FE4F50((int *)a2, v59);
        if (SBYTE3(v61) >= 0) {
          uint64_t v36 = v59;
        }
        else {
          uint64_t v36 = *(_BYTE **)v59;
        }
        LODWORD(v51[0]) = a3->i32[0];
        sub_100FE5218((int *)v51, v56);
        if (v57 >= 0) {
          uint64_t v37 = v56;
        }
        else {
          uint64_t v37 = (void **)v56[0];
        }
        int v53 = *a4;
        __int16 v38 = __p;
        sub_100FE5218(&v53, __p);
        if (v55 < 0) {
          __int16 v38 = (void **)__p[0];
        }
        int v39 = *a6;
        uint64_t v40 = sub_10080E94C();
        double v41 = sub_10080EF30(v40);
        LODWORD(buf) = 67110402;
        HIDWORD(buf) = v34;
        __int16 v73 = 2080;
        uint64_t v74 = v36;
        __int16 v75 = 2080;
        double v76 = v37;
        __int16 v77 = 2080;
        double v78 = v38;
        __int16 v79 = 1024;
        int v80 = v39;
        __int16 v81 = 2050;
        double v82 = v41;
        _os_log_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLDaemonStatus_Type,success,%d,message_type,%s,from,%s,to,%s,notification_type,%d,p ropagation_us,%{public}.3f",  (uint8_t *)&buf,  0x36u);
        if (v55 < 0) {
          operator delete(__p[0]);
        }
        if (v57 < 0) {
          operator delete(v56[0]);
        }
        if (SBYTE3(v61) < 0) {
          operator delete(*(void **)v59);
        }
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101834AA8);
        }
        uint64_t v42 = qword_101934838;
        sub_100FE4F50((int *)a2, v56);
        if (v57 >= 0) {
          int v43 = v56;
        }
        else {
          int v43 = (void **)v56[0];
        }
        int v53 = a3->i32[0];
        __int16 v44 = __p;
        sub_100FE5218(&v53, __p);
        if (v55 < 0) {
          __int16 v44 = (void **)__p[0];
        }
        HIDWORD(v50) = *a4;
        sub_100FE5218((int *)&v50 + 1, v51);
        if (v52 >= 0) {
          __int16 v45 = v51;
        }
        else {
          __int16 v45 = (void **)v51[0];
        }
        int v46 = *a6;
        uint64_t v47 = sub_10080E94C();
        double v48 = sub_10080EF30(v47);
        *(_DWORD *)double v59 = 67110402;
        *(_DWORD *)&v59[4] = v34;
        *(_WORD *)&v59[8] = 2080;
        *(void *)&v59[10] = v43;
        __int16 v60 = 2080;
        double v61 = v44;
        __int16 v62 = 2080;
        int v63 = v45;
        __int16 v64 = 1024;
        int v65 = v46;
        __int16 v66 = 2050;
        double v67 = v48;
        LODWORD(v50) = 54;
        int v49 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v42,  2LL,  "#locctl,#rec,recordMessage,CLDaemonStatus_Type,success,%d,message_type,%s,from,%s,to,%s,notifica tion_type,%d,propagation_us,%{public}.3f",  v59,  v50);
        if (v52 < 0) {
          operator delete(v51[0]);
        }
        if (v55 < 0) {
          operator delete(__p[0]);
        }
        if (v57 < 0) {
          operator delete(v56[0]);
        }
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType &, cons t CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, c onst CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)",  "%s\n",  v49);
      }
    }

    sub_100EDE8A8(v68);
  }

  else
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    std::string v20 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      sub_100FE4F50((int *)a2, &buf);
      uint64_t v21 = SBYTE3(v76) >= 0 ? &buf : (void **)buf;
      *(_DWORD *)int v68 = 136315138;
      *(void *)&v68[4] = v21;
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLDaemonStatus_Type,unsupported message type,%s",  v68,  0xCu);
      if (SBYTE3(v76) < 0) {
        operator delete(buf);
      }
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      uint64_t v22 = qword_101934838;
      sub_100FE4F50((int *)a2, v68);
      if (v69 >= 0) {
        int v23 = v68;
      }
      else {
        int v23 = *(uint8_t **)v68;
      }
      *(_DWORD *)double v59 = 136315138;
      *(void *)&v59[4] = v23;
      int v19 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v22,  2LL,  "#locctl,#rec,recordMessage,CLDaemonStatus_Type,unsupported message type,%s",  v59);
      if (v69 < 0) {
        operator delete(*(void **)v68);
      }
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType &, const CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)",  "%s\n",  v19);
    }
  }

void sub_100373E18( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *__p, uint64_t a19, int a20, __int16 a21, char a22, char a23, void *a24, uint64_t a25, int a26, __int16 a27, char a28, char a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, int a36, __int16 a37, char a38, char a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, char a45)
{
}

void sub_100373EF4(uint64_t a1, unsigned int *a2, int32x4_t *a3, int *a4, int *a5, int *a6, uint64_t a7)
{
  if (!*(void *)(a1 + 16)) {
    return;
  }
  if (*a2 == 4)
  {
    if ((vmaxv_u16((uint16x4_t)vmovn_s32(vceqzq_s32(*a3))) & 1) != 0)
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      int v10 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        if (a3->i32[0]) {
          BOOL v11 = a3->i32[1] == 0;
        }
        else {
          BOOL v11 = 1;
        }
        int v12 = !v11;
        if (*a4) {
          BOOL v13 = a4[1] == 0;
        }
        else {
          BOOL v13 = 1;
        }
        int v14 = !v13;
        LODWORD(buf) = 67109376;
        HIDWORD(buf) = v12;
        __int16 v77 = 1024;
        LODWORD(v78) = v14;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLClientManager_Type,silo entry invalid,from_valid,%d,to_valid,%d",  (uint8_t *)&buf,  0xEu);
      }

      if (!sub_1002921D0(115, 2)) {
        return;
      }
      bzero(&buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      BOOL v15 = !a3->i32[0] || a3->i32[1] == 0;
      BOOL v16 = !v15;
      BOOL v17 = !*a4 || a4[1] == 0;
      BOOL v18 = !v17;
      *(_DWORD *)double v72 = 67109376;
      *(_DWORD *)&v72[4] = v16;
      *(_WORD *)&v72[8] = 1024;
      *(_DWORD *)&v72[10] = v18;
      int v19 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,recordMessage,CLClientManager_Type,silo entry invalid,from_valid,%d,to_valid,%d",  v72,  14);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType &, const CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, const CLClientManager_Type::Notification &, const CLClientManager_Type::NotificationData &)",  "%s\n",  v19);
LABEL_54:
      free(v19);
      return;
    }

    sub_100EDE11C(v72);
    uint64_t v28 = (__n128 *)sub_10080E94C();
    sub_10080ED44(v28, v62);
    sub_100372734((uint64_t)v72, a2, a3, a4, (uint64_t *)v62);
    v75 |= 2u;
    uint64_t v29 = v74;
    if (!v74)
    {
      uint64_t v29 = operator new(0x1F0uLL);
      sub_1005E5F30((uint64_t)v29);
      uint64_t v74 = v29;
    }

    v29[123] |= 0x800u;
    __int16 v30 = (_DWORD *)*((void *)v29 + 44);
    if (!v30)
    {
      __int16 v30 = operator new(0xC0uLL);
      sub_100B1FFB4((uint64_t)v30);
      *((void *)v29 + 44) = v30;
    }

    v30[46] |= 0x40u;
    int v31 = (_DWORD *)*((void *)v30 + 6);
    if (!v31)
    {
      int v31 = operator new(0x20uLL);
      sub_100B1FCF4(v31);
      *((void *)v30 + 6) = v31;
    }

    int v32 = *a5;
    v31[7] |= 1u;
    v31[2] = v32;
    unsigned int v33 = sub_100374888(a6);
    if (!sub_1000641E0(v33)) {
      __assert_rtn( "set_notification_type",  "CLPLocationController.pb.h",  6971,  "::CLP::LogEntry::PrivateData::ClientManagerNotification_NotificationType_IsValid(value)");
    }
    int v34 = v31[7];
    v31[3] = v33;
    v31[7] = v34 | 6;
    int v35 = (_DWORD *)*((void *)v31 + 2);
    if (!v35)
    {
      int v35 = operator new(0x18uLL);
      sub_100B1FD08((uint64_t)v35);
      *((void *)v31 + 2) = v35;
    }

    unsigned int v36 = sub_100374A5C((int *)(a7 + 188));
    if (!sub_10006ED58(v36)) {
      __assert_rtn( "set_location_enabled",  "CLPLocationController.pb.h",  6922,  "::CLP::LogEntry::PrivateData::LocationServicesEnabled_IsValid(value)");
    }
    v35[4] |= 1u;
    v35[2] = v36;
    int v37 = sub_100371ED0(a1, (uint64_t)v72);
    if (*(_BYTE *)(a1 + 8))
    {
      int v38 = v37;
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      int v39 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        sub_100FE4F50((int *)a2, v63);
        if (SBYTE3(v65) >= 0) {
          uint64_t v40 = v63;
        }
        else {
          uint64_t v40 = *(_BYTE **)v63;
        }
        LODWORD(v55[0]) = a3->i32[0];
        sub_100FE5218((int *)v55, v60);
        if (v61 >= 0) {
          double v41 = v60;
        }
        else {
          double v41 = (void **)v60[0];
        }
        int v57 = *a4;
        uint64_t v42 = __p;
        sub_100FE5218(&v57, __p);
        if (v59 < 0) {
          uint64_t v42 = (void **)__p[0];
        }
        int v43 = *a6;
        uint64_t v44 = sub_10080E94C();
        double v45 = sub_10080EF30(v44);
        LODWORD(buf) = 67110402;
        HIDWORD(buf) = v38;
        __int16 v77 = 2080;
        double v78 = v40;
        __int16 v79 = 2080;
        int v80 = v41;
        __int16 v81 = 2080;
        double v82 = v42;
        __int16 v83 = 1024;
        int v84 = v43;
        __int16 v85 = 2050;
        double v86 = v45;
        _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLClientManager_Type,success,%d,message_type,%s,from,%s,to,%s,notification_type,%d, propagation_us,%{public}.3f",  (uint8_t *)&buf,  0x36u);
        if (v59 < 0) {
          operator delete(__p[0]);
        }
        if (v61 < 0) {
          operator delete(v60[0]);
        }
        if (SBYTE3(v65) < 0) {
          operator delete(*(void **)v63);
        }
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101834AA8);
        }
        uint64_t v46 = qword_101934838;
        sub_100FE4F50((int *)a2, v60);
        if (v61 >= 0) {
          uint64_t v47 = v60;
        }
        else {
          uint64_t v47 = (void **)v60[0];
        }
        int v57 = a3->i32[0];
        double v48 = __p;
        sub_100FE5218(&v57, __p);
        if (v59 < 0) {
          double v48 = (void **)__p[0];
        }
        HIDWORD(v54) = *a4;
        sub_100FE5218((int *)&v54 + 1, v55);
        if (v56 >= 0) {
          int v49 = v55;
        }
        else {
          int v49 = (void **)v55[0];
        }
        int v50 = *a6;
        uint64_t v51 = sub_10080E94C();
        double v52 = sub_10080EF30(v51);
        *(_DWORD *)int v63 = 67110402;
        *(_DWORD *)&v63[4] = v38;
        *(_WORD *)&v63[8] = 2080;
        *(void *)&v63[10] = v47;
        __int16 v64 = 2080;
        int v65 = v48;
        __int16 v66 = 2080;
        double v67 = v49;
        __int16 v68 = 1024;
        int v69 = v50;
        __int16 v70 = 2050;
        double v71 = v52;
        LODWORD(v54) = 54;
        int v53 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v46,  2LL,  "#locctl,#rec,recordMessage,CLClientManager_Type,success,%d,message_type,%s,from,%s,to,%s,notific ation_type,%d,propagation_us,%{public}.3f",  v63,  v54);
        if (v56 < 0) {
          operator delete(v55[0]);
        }
        if (v59 < 0) {
          operator delete(__p[0]);
        }
        if (v61 < 0) {
          operator delete(v60[0]);
        }
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType &, cons t CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, c onst CLClientManager_Type::Notification &, const CLClientManager_Type::NotificationData &)",  "%s\n",  v53);
      }
    }

    sub_100EDE8A8(v72);
  }

  else
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    std::string v20 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      sub_100FE4F50((int *)a2, &buf);
      uint64_t v21 = SBYTE3(v80) >= 0 ? &buf : (void **)buf;
      *(_DWORD *)double v72 = 136315138;
      *(void *)&v72[4] = v21;
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLClientManager_Type,unsupported message type,%s",  v72,  0xCu);
      if (SBYTE3(v80) < 0) {
        operator delete(buf);
      }
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      uint64_t v22 = qword_101934838;
      sub_100FE4F50((int *)a2, v72);
      if (v73 >= 0) {
        int v23 = v72;
      }
      else {
        int v23 = *(uint8_t **)v72;
      }
      *(_DWORD *)int v63 = 136315138;
      *(void *)&v63[4] = v23;
      int v19 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v22,  2LL,  "#locctl,#rec,recordMessage,CLClientManager_Type,unsupported message type,%s",  v63);
      if (v73 < 0) {
        operator delete(*(void **)v72);
      }
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType &, const CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, const CLClientManager_Type::Notification &, const CLClientManager_Type::NotificationData &)",  "%s\n",  v19);
    }
  }

void sub_10037479C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *__p, uint64_t a19, int a20, __int16 a21, char a22, char a23, void *a24, uint64_t a25, int a26, __int16 a27, char a28, char a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, int a36, __int16 a37, char a38, char a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, char a45)
{
}

uint64_t sub_100374888(int *a1)
{
  if (!*a1) {
    return 1LL;
  }
  if (*a1 == 4) {
    return 2LL;
  }
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101834AA8);
  }
  uint64_t v3 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    int v4 = *a1;
    *(_DWORD *)buf = 67109120;
    int v9 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,convertClientManagerNotificationTypeToProtobuf,unhandled type,%d",  buf,  8u);
  }

  uint64_t result = sub_1002921D0(115, 2);
  if ((_DWORD)result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    int v5 = *a1;
    v7[0] = 67109120;
    v7[1] = v5;
    BOOL v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,convertClientManagerNotificationTypeToProtobuf,unhandled type,%d",  v7);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static CLP::LogEntry::PrivateData::ClientManagerNotification_NotificationType CLLocationControllerRecorder::conver tClientManagerNotificationTypeToProtobuf(const CLClientManager_Type::Notification &)",  "%s\n",  v6);
    return 0LL;
  }

  return result;
}

uint64_t sub_100374A5C(int *a1)
{
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101834AA8);
  }
  uint64_t v3 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    int v4 = *a1;
    *(_DWORD *)buf = 67109120;
    int v9 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,convertLocationServicesEnabledTypeToProtobuf,unhandled type,%d",  buf,  8u);
  }

  uint64_t result = sub_1002921D0(115, 2);
  if ((_DWORD)result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    int v5 = *a1;
    v7[0] = 67109120;
    v7[1] = v5;
    BOOL v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,convertLocationServicesEnabledTypeToProtobuf,unhandled type,%d",  v7);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static CLP::LogEntry::PrivateData::LocationServicesEnabled CLLocationControllerRecorder::convertLocationServicesEn abledTypeToProtobuf(const CLCommonLocationServicesEnabled &)",  "%s\n",  v6);
    return 0LL;
  }

  return result;
}

void sub_100374C24(uint64_t a1, unsigned int *a2, int32x4_t *a3, int *a4, int *a5, int *a6, char *a7)
{
  if (!*(void *)(a1 + 16)) {
    return;
  }
  if (*a2 == 4)
  {
    if ((vmaxv_u16((uint16x4_t)vmovn_s32(vceqzq_s32(*a3))) & 1) != 0)
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      int v10 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        if (a3->i32[0]) {
          BOOL v11 = a3->i32[1] == 0;
        }
        else {
          BOOL v11 = 1;
        }
        int v12 = !v11;
        if (*a4) {
          BOOL v13 = a4[1] == 0;
        }
        else {
          BOOL v13 = 1;
        }
        int v14 = !v13;
        LODWORD(buf) = 67109376;
        HIDWORD(buf) = v12;
        __int16 v83 = 1024;
        LODWORD(v84) = v14;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLWifiService_Type,silo entry invalid,from_valid,%d,to_valid,%d",  (uint8_t *)&buf,  0xEu);
      }

      if (!sub_1002921D0(115, 2)) {
        return;
      }
      bzero(&buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      BOOL v15 = !a3->i32[0] || a3->i32[1] == 0;
      BOOL v16 = !v15;
      BOOL v17 = !*a4 || a4[1] == 0;
      BOOL v18 = !v17;
      *(_DWORD *)double v78 = 67109376;
      *(_DWORD *)&v78[4] = v16;
      *(_WORD *)&v78[8] = 1024;
      *(_DWORD *)&v78[10] = v18;
      int v19 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,recordMessage,CLWifiService_Type,silo entry invalid,from_valid,%d,to_valid,%d",  v78,  14);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType &, const CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, const CLWifiService_Type::Notification &, const CLWifiService_Type::NotificationData &)",  "%s\n",  v19);
LABEL_54:
      free(v19);
      return;
    }

    sub_100EDE11C(v78);
    uint64_t v28 = (__n128 *)sub_10080E94C();
    sub_10080ED44(v28, v68);
    sub_100372734((uint64_t)v78, a2, a3, a4, (uint64_t *)v68);
    v81 |= 2u;
    uint64_t v29 = v80;
    if (!v80)
    {
      uint64_t v29 = operator new(0x1F0uLL);
      sub_1005E5F30((uint64_t)v29);
      int v80 = v29;
    }

    v29[123] |= 0x800u;
    __int16 v30 = (_DWORD *)*((void *)v29 + 44);
    if (!v30)
    {
      __int16 v30 = operator new(0xC0uLL);
      sub_100B1FFB4((uint64_t)v30);
      *((void *)v29 + 44) = v30;
    }

    v30[46] |= 0x80u;
    int v31 = (_DWORD *)*((void *)v30 + 7);
    if (!v31)
    {
      int v31 = operator new(0x20uLL);
      sub_100B1FD1C(v31);
      *((void *)v30 + 7) = v31;
    }

    int v32 = *a5;
    v31[7] |= 1u;
    v31[2] = v32;
    unsigned int v33 = sub_100F886A0(a6);
    if (!sub_1001D3230(v33)) {
      __assert_rtn( "set_notification_type",  "CLPLocationController.pb.h",  7261,  "::CLP::LogEntry::PrivateData::WifiNotificationType_IsValid(value)");
    }
    int v34 = v31[7];
    v31[3] = v33;
    v31[7] = v34 | 6;
    int v35 = (_DWORD *)*((void *)v31 + 2);
    if (!v35)
    {
      int v35 = operator new(0x28uLL);
      sub_100B1FD30((uint64_t)v35);
      *((void *)v31 + 2) = v35;
    }

    unsigned int v36 = *a6;
    switch(*a6)
    {
      case 1:
        char v39 = *a7;
        v35[9] |= 1u;
        *((_BYTE *)v35 + 28) = v39;
        goto LABEL_74;
      case 3:
        unsigned int v40 = sub_100F88878(a7 + 1);
        sub_10037568C((uint64_t)v35, v40);
        double v41 = sub_1003756CC((uint64_t)v35);
        sub_100F88A54((uint64_t)(a7 + 104), (uint64_t)v41);
        unsigned int v36 = *a6;
        goto LABEL_69;
      case 6:
        char v38 = a7[138];
        v35[9] |= 0x40u;
        *((_BYTE *)v35 + 31) = v38;
        goto LABEL_71;
      case 10:
      case 11:
        char v37 = a7[137];
        v35[9] |= 0x20u;
        *((_BYTE *)v35 + 30) = v37;
        goto LABEL_69;
      default:
LABEL_69:
        if (v36 <= 7 && ((1 << v36) & 0xC8) != 0)
        {
LABEL_71:
          v35[9] |= 4u;
          uint64_t v42 = (void *)*((void *)v35 + 1);
          if (!v42)
          {
            uint64_t v42 = operator new(0x20uLL);
            sub_1001D2A04((uint64_t)v42);
            *((void *)v35 + 1) = v42;
          }

          sub_100F88460((uint64_t)(a7 + 8), (uint64_t)v42);
        }

void sub_100375570( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *__p, uint64_t a19, int a20, __int16 a21, char a22, char a23, void *a24, uint64_t a25, int a26, __int16 a27, char a28, char a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, int a36, __int16 a37, char a38, char a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, char a45)
{
}

BOOL sub_10037568C(uint64_t a1, unsigned int a2)
{
  BOOL result = sub_1001D3230(a2);
  if (!result) {
    sub_10123656C();
  }
  *(_DWORD *)(a1 + 36) |= 2u;
  *(_DWORD *)(a1 + 24) = a2;
  return result;
}

void *sub_1003756CC(uint64_t a1)
{
  *(_DWORD *)(a1 + 36) |= 8u;
  uint64_t v1 = *(void **)(a1 + 16);
  if (!v1)
  {
    uint64_t v1 = operator new(0x30uLL);
    sub_1001D2A1C((uint64_t)v1);
    *(void *)(a1 + 16) = v1;
  }

  return v1;
}

void sub_100375714(_Unwind_Exception *a1)
{
}

void sub_100375728(uint64_t a1, unsigned int *a2, int32x4_t *a3, int *a4, int *a5, int *a6, int *a7)
{
  if (!*(void *)(a1 + 16)) {
    return;
  }
  if (*a2 == 4)
  {
    if ((vmaxv_u16((uint16x4_t)vmovn_s32(vceqzq_s32(*a3))) & 1) != 0)
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      int v10 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        if (a3->i32[0]) {
          BOOL v11 = a3->i32[1] == 0;
        }
        else {
          BOOL v11 = 1;
        }
        int v12 = !v11;
        if (*a4) {
          BOOL v13 = a4[1] == 0;
        }
        else {
          BOOL v13 = 1;
        }
        int v14 = !v13;
        LODWORD(buf) = 67109376;
        HIDWORD(buf) = v12;
        __int16 v77 = 1024;
        LODWORD(v78) = v14;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLDataProtectionManager_Type,silo entry invalid,from_valid,%d,to_valid,%d",  (uint8_t *)&buf,  0xEu);
      }

      if (!sub_1002921D0(115, 2)) {
        return;
      }
      bzero(&buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      BOOL v15 = !a3->i32[0] || a3->i32[1] == 0;
      BOOL v16 = !v15;
      BOOL v17 = !*a4 || a4[1] == 0;
      BOOL v18 = !v17;
      *(_DWORD *)__int16 v72 = 67109376;
      *(_DWORD *)&v72[4] = v16;
      *(_WORD *)&v72[8] = 1024;
      *(_DWORD *)&v72[10] = v18;
      int v19 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,recordMessage,CLDataProtectionManager_Type,silo entry invalid,from_valid,%d,to_valid,%d",  v72,  14);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType &, const CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, const CLDataProtectionManager_Type::Notification &, const CLDataProtectionManager_Type::NotificationData &)",  "%s\n",  v19);
LABEL_54:
      free(v19);
      return;
    }

    sub_100EDE11C(v72);
    uint64_t v28 = (__n128 *)sub_10080E94C();
    sub_10080ED44(v28, v62);
    sub_100372734((uint64_t)v72, a2, a3, a4, (uint64_t *)v62);
    v75 |= 2u;
    uint64_t v29 = v74;
    if (!v74)
    {
      uint64_t v29 = operator new(0x1F0uLL);
      sub_1005E5F30((uint64_t)v29);
      __int16 v74 = v29;
    }

    v29[123] |= 0x800u;
    __int16 v30 = (_DWORD *)*((void *)v29 + 44);
    if (!v30)
    {
      __int16 v30 = operator new(0xC0uLL);
      sub_100B1FFB4((uint64_t)v30);
      *((void *)v29 + 44) = v30;
    }

    v30[46] |= 0x100u;
    int v31 = (_DWORD *)*((void *)v30 + 8);
    if (!v31)
    {
      int v31 = operator new(0x20uLL);
      sub_100B1FD4C(v31);
      *((void *)v30 + 8) = v31;
    }

    int v32 = *a5;
    v31[7] |= 1u;
    v31[2] = v32;
    unsigned int v33 = sub_1003760BC(a6);
    if (!sub_10006419C(v33)) {
      __assert_rtn( "set_notification_type",  "CLPLocationController.pb.h",  7379,  "::CLP::LogEntry::PrivateData::DataProtectionManagerNotification_NotificationType_IsValid(value)");
    }
    int v34 = v31[7];
    v31[3] = v33;
    v31[7] = v34 | 6;
    int v35 = (_DWORD *)*((void *)v31 + 2);
    if (!v35)
    {
      int v35 = operator new(0x18uLL);
      sub_100B1FD60((uint64_t)v35);
      *((void *)v31 + 2) = v35;
    }

    unsigned int v36 = sub_10037627C(a7);
    if (!sub_1000641E0(v36)) {
      __assert_rtn( "set_availability",  "CLPLocationController.pb.h",  7330,  "::CLP::LogEntry::PrivateData::DataAvailability_IsValid(value)");
    }
    v35[4] |= 1u;
    v35[2] = v36;
    int v37 = sub_100371ED0(a1, (uint64_t)v72);
    if (*(_BYTE *)(a1 + 8))
    {
      int v38 = v37;
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      char v39 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        sub_100FE4F50((int *)a2, v63);
        if (SBYTE3(v65) >= 0) {
          unsigned int v40 = v63;
        }
        else {
          unsigned int v40 = *(_BYTE **)v63;
        }
        LODWORD(v55[0]) = a3->i32[0];
        sub_100FE5218((int *)v55, v60);
        if (v61 >= 0) {
          double v41 = v60;
        }
        else {
          double v41 = (void **)v60[0];
        }
        int v57 = *a4;
        uint64_t v42 = __p;
        sub_100FE5218(&v57, __p);
        if (v59 < 0) {
          uint64_t v42 = (void **)__p[0];
        }
        int v43 = *a6;
        uint64_t v44 = sub_10080E94C();
        double v45 = sub_10080EF30(v44);
        LODWORD(buf) = 67110402;
        HIDWORD(buf) = v38;
        __int16 v77 = 2080;
        double v78 = v40;
        __int16 v79 = 2080;
        int v80 = v41;
        __int16 v81 = 2080;
        double v82 = v42;
        __int16 v83 = 1024;
        int v84 = v43;
        __int16 v85 = 2050;
        double v86 = v45;
        _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLDataProtectionManager_Type,success,%d,message_type,%s,from,%s,to,%s,notification_ type,%d,propagation_us,%{public}.3f",  (uint8_t *)&buf,  0x36u);
        if (v59 < 0) {
          operator delete(__p[0]);
        }
        if (v61 < 0) {
          operator delete(v60[0]);
        }
        if (SBYTE3(v65) < 0) {
          operator delete(*(void **)v63);
        }
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101834AA8);
        }
        uint64_t v46 = qword_101934838;
        sub_100FE4F50((int *)a2, v60);
        if (v61 >= 0) {
          uint64_t v47 = v60;
        }
        else {
          uint64_t v47 = (void **)v60[0];
        }
        int v57 = a3->i32[0];
        double v48 = __p;
        sub_100FE5218(&v57, __p);
        if (v59 < 0) {
          double v48 = (void **)__p[0];
        }
        HIDWORD(v54) = *a4;
        sub_100FE5218((int *)&v54 + 1, v55);
        if (v56 >= 0) {
          int v49 = v55;
        }
        else {
          int v49 = (void **)v55[0];
        }
        int v50 = *a6;
        uint64_t v51 = sub_10080E94C();
        double v52 = sub_10080EF30(v51);
        *(_DWORD *)int v63 = 67110402;
        *(_DWORD *)&v63[4] = v38;
        *(_WORD *)&v63[8] = 2080;
        *(void *)&v63[10] = v47;
        __int16 v64 = 2080;
        char v65 = v48;
        __int16 v66 = 2080;
        char v67 = v49;
        __int16 v68 = 1024;
        int v69 = v50;
        __int16 v70 = 2050;
        double v71 = v52;
        LODWORD(v54) = 54;
        int v53 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v46,  2LL,  "#locctl,#rec,recordMessage,CLDataProtectionManager_Type,success,%d,message_type,%s,from,%s,to,%s ,notification_type,%d,propagation_us,%{public}.3f",  v63,  v54);
        if (v56 < 0) {
          operator delete(v55[0]);
        }
        if (v59 < 0) {
          operator delete(__p[0]);
        }
        if (v61 < 0) {
          operator delete(v60[0]);
        }
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType &, cons t CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, c onst CLDataProtectionManager_Type::Notification &, const CLDataProtectionManager_Type::NotificationData &)",  "%s\n",  v53);
      }
    }

    sub_100EDE8A8(v72);
  }

  else
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    std::string v20 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      sub_100FE4F50((int *)a2, &buf);
      uint64_t v21 = SBYTE3(v80) >= 0 ? &buf : (void **)buf;
      *(_DWORD *)__int16 v72 = 136315138;
      *(void *)&v72[4] = v21;
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLDataProtectionManager_Type,unsupported message type,%s",  v72,  0xCu);
      if (SBYTE3(v80) < 0) {
        operator delete(buf);
      }
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      uint64_t v22 = qword_101934838;
      sub_100FE4F50((int *)a2, v72);
      if (v73 >= 0) {
        int v23 = v72;
      }
      else {
        int v23 = *(uint8_t **)v72;
      }
      *(_DWORD *)int v63 = 136315138;
      *(void *)&v63[4] = v23;
      int v19 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v22,  2LL,  "#locctl,#rec,recordMessage,CLDataProtectionManager_Type,unsupported message type,%s",  v63);
      if (v73 < 0) {
        operator delete(*(void **)v72);
      }
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType &, const CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, const CLDataProtectionManager_Type::Notification &, const CLDataProtectionManager_Type::NotificationData &)",  "%s\n",  v19);
    }
  }

void sub_100375FD0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *__p, uint64_t a19, int a20, __int16 a21, char a22, char a23, void *a24, uint64_t a25, int a26, __int16 a27, char a28, char a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, int a36, __int16 a37, char a38, char a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, char a45)
{
}

BOOL sub_1003760BC(int *a1)
{
  if (!*a1) {
    return 1LL;
  }
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101834AA8);
  }
  int v2 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    int v3 = *a1;
    *(_DWORD *)buf = 67109120;
    int v9 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,convertDataProtectionManagerNotificationTypeToProtobuf,unhandled type,%d",  buf,  8u);
  }

  BOOL result = sub_1002921D0(115, 2);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    int v5 = *a1;
    v7[0] = 67109120;
    v7[1] = v5;
    BOOL v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,convertDataProtectionManagerNotificationTypeToProtobuf,unhandled type,%d",  v7);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static CLP::LogEntry::PrivateData::DataProtectionManagerNotification_NotificationType CLLocationControllerRecorder ::convertDataProtectionManagerNotificationTypeToProtobuf(const CLDataProtectionManager_Type::Notification &)",  "%s\n",  v6);
    return 0LL;
  }

  return result;
}

uint64_t sub_10037627C(int *a1)
{
  if (!*a1) {
    return 1LL;
  }
  if (*a1 == 1) {
    return 2LL;
  }
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101834AA8);
  }
  int v3 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    int v4 = *a1;
    *(_DWORD *)buf = 67109120;
    int v9 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,convertDataAvailabilityTypeToProtobuf,unhandled type,%d",  buf,  8u);
  }

  uint64_t result = sub_1002921D0(115, 2);
  if ((_DWORD)result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    int v5 = *a1;
    v7[0] = 67109120;
    v7[1] = v5;
    BOOL v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,convertDataAvailabilityTypeToProtobuf,unhandled type,%d",  v7);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static CLP::LogEntry::PrivateData::DataAvailability CLLocationControllerRecorder::convertDataAvailabilityTypeToPro tobuf(const CLDataProtectionManager_Type::DataAvailability &)",  "%s\n",  v6);
    return 0LL;
  }

  return result;
}

void sub_100376450(uint64_t a1, unsigned int *a2, int32x4_t *a3, int *a4, int *a5, int *a6, uint64_t a7)
{
  if (!*(void *)(a1 + 16)) {
    return;
  }
  if (*a2 == 4)
  {
    if ((vmaxv_u16((uint16x4_t)vmovn_s32(vceqzq_s32(*a3))) & 1) != 0)
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      int v10 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        if (a3->i32[0]) {
          BOOL v11 = a3->i32[1] == 0;
        }
        else {
          BOOL v11 = 1;
        }
        int v12 = !v11;
        if (*a4) {
          BOOL v13 = a4[1] == 0;
        }
        else {
          BOOL v13 = 1;
        }
        int v14 = !v13;
        LODWORD(buf) = 67109376;
        HIDWORD(buf) = v12;
        __int16 v77 = 1024;
        LODWORD(v78) = v14;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLBluetoothService_Type,silo entry invalid,from_valid,%d,to_valid,%d",  (uint8_t *)&buf,  0xEu);
      }

      if (!sub_1002921D0(115, 2)) {
        return;
      }
      bzero(&buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      BOOL v15 = !a3->i32[0] || a3->i32[1] == 0;
      BOOL v16 = !v15;
      BOOL v17 = !*a4 || a4[1] == 0;
      BOOL v18 = !v17;
      *(_DWORD *)__int16 v72 = 67109376;
      *(_DWORD *)&v72[4] = v16;
      *(_WORD *)&v72[8] = 1024;
      *(_DWORD *)&v72[10] = v18;
      int v19 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,recordMessage,CLBluetoothService_Type,silo entry invalid,from_valid,%d,to_valid,%d",  v72,  14);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType &, const CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, const CLBluetoothService_Type::Notification &, const CLBluetoothService_Type::NotificationData &)",  "%s\n",  v19);
LABEL_54:
      free(v19);
      return;
    }

    sub_100EDE11C(v72);
    uint64_t v28 = (__n128 *)sub_10080E94C();
    sub_10080ED44(v28, v62);
    sub_100372734((uint64_t)v72, a2, a3, a4, (uint64_t *)v62);
    v75 |= 2u;
    uint64_t v29 = v74;
    if (!v74)
    {
      uint64_t v29 = operator new(0x1F0uLL);
      sub_1005E5F30((uint64_t)v29);
      __int16 v74 = v29;
    }

    v29[123] |= 0x800u;
    __int16 v30 = (_DWORD *)*((void *)v29 + 44);
    if (!v30)
    {
      __int16 v30 = operator new(0xC0uLL);
      sub_100B1FFB4((uint64_t)v30);
      *((void *)v29 + 44) = v30;
    }

    v30[46] |= 0x200u;
    int v31 = (_DWORD *)*((void *)v30 + 9);
    if (!v31)
    {
      int v31 = operator new(0x20uLL);
      sub_100B1FD74(v31);
      *((void *)v30 + 9) = v31;
    }

    int v32 = *a5;
    v31[7] |= 1u;
    v31[2] = v32;
    unsigned int v33 = sub_100F8B580(a6);
    if (!sub_10006ED58(v33)) {
      __assert_rtn( "set_notification_type",  "CLPLocationController.pb.h",  7863,  "::CLP::LogEntry::PrivateData::BluetoothServiceNotification_NotificationType_IsValid(value)");
    }
    int v34 = v31[7];
    v31[3] = v33;
    v31[7] = v34 | 6;
    int v35 = (_DWORD *)*((void *)v31 + 2);
    if (!v35)
    {
      int v35 = operator new(0x20uLL);
      sub_100B1FD88((uint64_t)v35);
      *((void *)v31 + 2) = v35;
    }

    char v36 = *(_BYTE *)(a7 + 113);
    v35[6] |= 1u;
    *((_BYTE *)v35 + 16) = v36;
    int v37 = sub_100371ED0(a1, (uint64_t)v72);
    if (*(_BYTE *)(a1 + 8))
    {
      int v38 = v37;
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      char v39 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        sub_100FE4F50((int *)a2, v63);
        if (SBYTE3(v65) >= 0) {
          unsigned int v40 = v63;
        }
        else {
          unsigned int v40 = *(_BYTE **)v63;
        }
        LODWORD(v55[0]) = a3->i32[0];
        sub_100FE5218((int *)v55, v60);
        if (v61 >= 0) {
          double v41 = v60;
        }
        else {
          double v41 = (void **)v60[0];
        }
        int v57 = *a4;
        uint64_t v42 = __p;
        sub_100FE5218(&v57, __p);
        if (v59 < 0) {
          uint64_t v42 = (void **)__p[0];
        }
        int v43 = *a6;
        uint64_t v44 = sub_10080E94C();
        double v45 = sub_10080EF30(v44);
        LODWORD(buf) = 67110402;
        HIDWORD(buf) = v38;
        __int16 v77 = 2080;
        double v78 = v40;
        __int16 v79 = 2080;
        int v80 = v41;
        __int16 v81 = 2080;
        double v82 = v42;
        __int16 v83 = 1024;
        int v84 = v43;
        __int16 v85 = 2050;
        double v86 = v45;
        _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLBluetoothService_Type,success,%d,message_type,%s,from,%s,to,%s,notification_type, %d,propagation_us,%{public}.3f",  (uint8_t *)&buf,  0x36u);
        if (v59 < 0) {
          operator delete(__p[0]);
        }
        if (v61 < 0) {
          operator delete(v60[0]);
        }
        if (SBYTE3(v65) < 0) {
          operator delete(*(void **)v63);
        }
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101834AA8);
        }
        uint64_t v46 = qword_101934838;
        sub_100FE4F50((int *)a2, v60);
        if (v61 >= 0) {
          uint64_t v47 = v60;
        }
        else {
          uint64_t v47 = (void **)v60[0];
        }
        int v57 = a3->i32[0];
        double v48 = __p;
        sub_100FE5218(&v57, __p);
        if (v59 < 0) {
          double v48 = (void **)__p[0];
        }
        HIDWORD(v54) = *a4;
        sub_100FE5218((int *)&v54 + 1, v55);
        if (v56 >= 0) {
          int v49 = v55;
        }
        else {
          int v49 = (void **)v55[0];
        }
        int v50 = *a6;
        uint64_t v51 = sub_10080E94C();
        double v52 = sub_10080EF30(v51);
        *(_DWORD *)int v63 = 67110402;
        *(_DWORD *)&v63[4] = v38;
        *(_WORD *)&v63[8] = 2080;
        *(void *)&v63[10] = v47;
        __int16 v64 = 2080;
        char v65 = v48;
        __int16 v66 = 2080;
        char v67 = v49;
        __int16 v68 = 1024;
        int v69 = v50;
        __int16 v70 = 2050;
        double v71 = v52;
        LODWORD(v54) = 54;
        int v53 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v46,  2LL,  "#locctl,#rec,recordMessage,CLBluetoothService_Type,success,%d,message_type,%s,from,%s,to,%s,noti fication_type,%d,propagation_us,%{public}.3f",  v63,  v54);
        if (v56 < 0) {
          operator delete(v55[0]);
        }
        if (v59 < 0) {
          operator delete(__p[0]);
        }
        if (v61 < 0) {
          operator delete(v60[0]);
        }
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType &, cons t CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, c onst CLBluetoothService_Type::Notification &, const CLBluetoothService_Type::NotificationData &)",  "%s\n",  v53);
      }
    }

    sub_100EDE8A8(v72);
  }

  else
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    std::string v20 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      sub_100FE4F50((int *)a2, &buf);
      uint64_t v21 = SBYTE3(v80) >= 0 ? &buf : (void **)buf;
      *(_DWORD *)__int16 v72 = 136315138;
      *(void *)&v72[4] = v21;
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLBluetoothService_Type,unsupported message type,%s",  v72,  0xCu);
      if (SBYTE3(v80) < 0) {
        operator delete(buf);
      }
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      uint64_t v22 = qword_101934838;
      sub_100FE4F50((int *)a2, v72);
      if (v73 >= 0) {
        int v23 = v72;
      }
      else {
        int v23 = *(uint8_t **)v72;
      }
      *(_DWORD *)int v63 = 136315138;
      *(void *)&v63[4] = v23;
      int v19 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v22,  2LL,  "#locctl,#rec,recordMessage,CLBluetoothService_Type,unsupported message type,%s",  v63);
      if (v73 < 0) {
        operator delete(*(void **)v72);
      }
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType &, const CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, const CLBluetoothService_Type::Notification &, const CLBluetoothService_Type::NotificationData &)",  "%s\n",  v19);
    }
  }

void sub_100376CC8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *__p, uint64_t a19, int a20, __int16 a21, char a22, char a23, void *a24, uint64_t a25, int a26, __int16 a27, char a28, char a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, int a36, __int16 a37, char a38, char a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, char a45)
{
}

void sub_100376DB4(uint64_t a1, unsigned int *a2, int32x4_t *a3, int *a4, int *a5, int *a6, char *a7)
{
  if (!*(void *)(a1 + 16)) {
    return;
  }
  if (*a2 == 4)
  {
    if ((vmaxv_u16((uint16x4_t)vmovn_s32(vceqzq_s32(*a3))) & 1) != 0)
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      int v10 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        if (a3->i32[0]) {
          BOOL v11 = a3->i32[1] == 0;
        }
        else {
          BOOL v11 = 1;
        }
        int v12 = !v11;
        if (*a4) {
          BOOL v13 = a4[1] == 0;
        }
        else {
          BOOL v13 = 1;
        }
        int v14 = !v13;
        LODWORD(buf) = 67109376;
        HIDWORD(buf) = v12;
        __int16 v81 = 1024;
        LODWORD(v82) = v14;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLCompanionNotifier_Type,silo entry invalid,from_valid,%d,to_valid,%d",  (uint8_t *)&buf,  0xEu);
      }

      if (!sub_1002921D0(115, 2)) {
        return;
      }
      bzero(&buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      BOOL v15 = !a3->i32[0] || a3->i32[1] == 0;
      BOOL v16 = !v15;
      BOOL v17 = !*a4 || a4[1] == 0;
      BOOL v18 = !v17;
      *(_DWORD *)__int16 v76 = 67109376;
      *(_DWORD *)&v76[4] = v16;
      *(_WORD *)&v76[8] = 1024;
      *(_DWORD *)&v76[10] = v18;
      int v19 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,recordMessage,CLCompanionNotifier_Type,silo entry invalid,from_valid,%d,to_valid,%d",  v76,  14);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType &, const CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, const CLCompanionNotifier_Type::Notification &, const CLCompanionNotifier_Type::NotificationData &)",  "%s\n",  v19);
LABEL_54:
      free(v19);
      return;
    }

    sub_100EDE11C(v76);
    uint64_t v28 = (__n128 *)sub_10080E94C();
    sub_10080ED44(v28, v66);
    sub_100372734((uint64_t)v76, a2, a3, a4, (uint64_t *)v66);
    v79 |= 2u;
    uint64_t v29 = v78;
    if (!v78)
    {
      uint64_t v29 = operator new(0x1F0uLL);
      sub_1005E5F30((uint64_t)v29);
      double v78 = v29;
    }

    v29[123] |= 0x800u;
    __int16 v30 = (_DWORD *)*((void *)v29 + 44);
    if (!v30)
    {
      __int16 v30 = operator new(0xC0uLL);
      sub_100B1FFB4((uint64_t)v30);
      *((void *)v29 + 44) = v30;
    }

    v30[46] |= 0x400u;
    int v31 = (_DWORD *)*((void *)v30 + 10);
    if (!v31)
    {
      int v31 = operator new(0x20uLL);
      sub_100B1FDA0(v31);
      *((void *)v30 + 10) = v31;
    }

    int v32 = *a5;
    v31[7] |= 1u;
    v31[2] = v32;
    unsigned int v33 = sub_100F8B750(a6);
    if (!sub_10006419C(v33)) {
      __assert_rtn( "set_notification_type",  "CLPLocationController.pb.h",  7980,  "::CLP::LogEntry::PrivateData::CompanionNotifierNotification_NotificationType_IsValid(value)");
    }
    int v34 = v31[7];
    v31[3] = v33;
    v31[7] = v34 | 6;
    int v35 = (_DWORD *)*((void *)v31 + 2);
    if (!v35)
    {
      int v35 = operator new(0x18uLL);
      sub_100B1FDB4((uint64_t)v35);
      *((void *)v31 + 2) = v35;
    }

    if (*a6 == 5)
    {
      char v36 = *a7;
      v35[4] |= 1u;
      *((_BYTE *)v35 + 8) = v36;
      int v37 = sub_100371ED0(a1, (uint64_t)v76);
      if (!*(_BYTE *)(a1 + 8)) {
        goto LABEL_106;
      }
      int v38 = v37;
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      char v39 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        sub_100FE4F50((int *)a2, v67);
        if (SBYTE3(v69) >= 0) {
          unsigned int v40 = v67;
        }
        else {
          unsigned int v40 = *(_BYTE **)v67;
        }
        LODWORD(v59[0]) = a3->i32[0];
        sub_100FE5218((int *)v59, v64);
        int v57 = v38;
        if (v65 >= 0) {
          double v41 = v64;
        }
        else {
          double v41 = (void **)v64[0];
        }
        int v61 = *a4;
        uint64_t v42 = __p;
        sub_100FE5218(&v61, __p);
        if (v63 < 0) {
          uint64_t v42 = (void **)__p[0];
        }
        int v43 = *a6;
        uint64_t v44 = sub_10080E94C();
        double v45 = sub_10080EF30(v44);
        LODWORD(buf) = 67110402;
        HIDWORD(buf) = v57;
        __int16 v81 = 2080;
        double v82 = v40;
        __int16 v83 = 2080;
        int v84 = v41;
        __int16 v85 = 2080;
        double v86 = v42;
        __int16 v87 = 1024;
        int v88 = v43;
        __int16 v89 = 2050;
        double v90 = v45;
        _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLCompanionNotifier_Type,success,%d,message_type,%s,from,%s,to,%s,notification_type ,%d,propagation_us,%{public}.3f",  (uint8_t *)&buf,  0x36u);
        if (v63 < 0) {
          operator delete(__p[0]);
        }
        if (v65 < 0) {
          operator delete(v64[0]);
        }
        int v38 = v57;
        if (SBYTE3(v69) < 0) {
          operator delete(*(void **)v67);
        }
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_106;
      }
      bzero(&buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      uint64_t v46 = qword_101934838;
      sub_100FE4F50((int *)a2, v64);
      if (v65 >= 0) {
        uint64_t v47 = v64;
      }
      else {
        uint64_t v47 = (void **)v64[0];
      }
      int v61 = a3->i32[0];
      double v48 = __p;
      sub_100FE5218(&v61, __p);
      if (v63 < 0) {
        double v48 = (void **)__p[0];
      }
      int v58 = *a4;
      int v49 = v59;
      sub_100FE5218(&v58, v59);
      if (v60 < 0) {
        int v49 = (void **)v59[0];
      }
      int v50 = *a6;
      uint64_t v51 = sub_10080E94C();
      double v52 = sub_10080EF30(v51);
      *(_DWORD *)char v67 = 67110402;
      *(_DWORD *)&v67[4] = v38;
      *(_WORD *)&v67[8] = 2080;
      *(void *)&v67[10] = v47;
      __int16 v68 = 2080;
      int v69 = v48;
      __int16 v70 = 2080;
      double v71 = v49;
      __int16 v72 = 1024;
      int v73 = v50;
      __int16 v74 = 2050;
      double v75 = v52;
      int v53 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v46,  2LL,  "#locctl,#rec,recordMessage,CLCompanionNotifier_Type,success,%d,message_type,%s,from,%s,to,%s,notif ication_type,%d,propagation_us,%{public}.3f",  v67,  54);
      if (v60 < 0) {
        operator delete(v59[0]);
      }
      if (v63 < 0) {
        operator delete(__p[0]);
      }
      if (v65 < 0) {
        operator delete(v64[0]);
      }
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType &, const CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, const CLCompanionNotifier_Type::Notification &, const CLCompanionNotifier_Type::NotificationData &)",  "%s\n",  v53);
    }

    else
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      uint64_t v54 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        int v55 = *a6;
        LODWORD(buf) = 67109120;
        HIDWORD(buf) = v55;
        _os_log_impl( (void *)&_mh_execute_header,  v54,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLCompanionNotifier_Type,unsupported notification type,%d",  (uint8_t *)&buf,  8u);
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_106;
      }
      bzero(&buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      int v56 = *a6;
      *(_DWORD *)char v67 = 67109120;
      *(_DWORD *)&v67[4] = v56;
      int v53 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,recordMessage,CLCompanionNotifier_Type,unsupported notification type,%d",  v67);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType &, const CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, const CLCompanionNotifier_Type::Notification &, const CLCompanionNotifier_Type::NotificationData &)",  "%s\n",  v53);
    }

    free(v53);
LABEL_106:
    sub_100EDE8A8(v76);
    return;
  }

  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101834AA8);
  }
  std::string v20 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    sub_100FE4F50((int *)a2, &buf);
    uint64_t v21 = SBYTE3(v84) >= 0 ? &buf : (void **)buf;
    *(_DWORD *)__int16 v76 = 136315138;
    *(void *)&v76[4] = v21;
    _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLCompanionNotifier_Type,unsupported message type,%s",  v76,  0xCu);
    if (SBYTE3(v84) < 0) {
      operator delete(buf);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    uint64_t v22 = qword_101934838;
    sub_100FE4F50((int *)a2, v76);
    if (v77 >= 0) {
      int v23 = v76;
    }
    else {
      int v23 = *(uint8_t **)v76;
    }
    *(_DWORD *)char v67 = 136315138;
    *(void *)&v67[4] = v23;
    int v19 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v22,  2LL,  "#locctl,#rec,recordMessage,CLCompanionNotifier_Type,unsupported message type,%s",  v67);
    if (v77 < 0) {
      operator delete(*(void **)v76);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType &, const CL LocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, const CLC ompanionNotifier_Type::Notification &, const CLCompanionNotifier_Type::NotificationData &)",  "%s\n",  v19);
  }

void sub_10037777C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *__p, uint64_t a21, int a22, __int16 a23, char a24, char a25, void *a26, uint64_t a27, int a28, __int16 a29, char a30, char a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, int a38, __int16 a39, char a40, char a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, char a47)
{
}

void sub_10037786C(uint64_t a1, unsigned int *a2, int32x4_t *a3, int *a4, int *a5, int *a6, uint64_t a7)
{
  if (!*(void *)(a1 + 16)) {
    return;
  }
  if (*a2 == 4)
  {
    if ((vmaxv_u16((uint16x4_t)vmovn_s32(vceqzq_s32(*a3))) & 1) != 0)
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      int v10 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        if (a3->i32[0]) {
          BOOL v11 = a3->i32[1] == 0;
        }
        else {
          BOOL v11 = 1;
        }
        int v12 = !v11;
        if (*a4) {
          BOOL v13 = a4[1] == 0;
        }
        else {
          BOOL v13 = 1;
        }
        int v14 = !v13;
        LODWORD(buf) = 67109376;
        HIDWORD(buf) = v12;
        __int16 v81 = 1024;
        LODWORD(v82) = v14;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLMotionStateObserver_Type,silo entry invalid,from_valid,%d,to_valid,%d",  (uint8_t *)&buf,  0xEu);
      }

      if (!sub_1002921D0(115, 2)) {
        return;
      }
      bzero(&buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      BOOL v15 = !a3->i32[0] || a3->i32[1] == 0;
      BOOL v16 = !v15;
      BOOL v17 = !*a4 || a4[1] == 0;
      BOOL v18 = !v17;
      *(_DWORD *)__int16 v76 = 67109376;
      *(_DWORD *)&v76[4] = v16;
      *(_WORD *)&v76[8] = 1024;
      *(_DWORD *)&v76[10] = v18;
      int v19 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,recordMessage,CLMotionStateObserver_Type,silo entry invalid,from_valid,%d,to_valid,%d",  v76,  14);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType &, const CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, const CLMotionStateObserver_Type::Notification &, const CLMotionStateObserver_Type::NotificationData &)",  "%s\n",  v19);
LABEL_54:
      free(v19);
      return;
    }

    sub_100EDE11C(v76);
    uint64_t v28 = (__n128 *)sub_10080E94C();
    sub_10080ED44(v28, v66);
    sub_100372734((uint64_t)v76, a2, a3, a4, (uint64_t *)v66);
    v79 |= 2u;
    uint64_t v29 = v78;
    if (!v78)
    {
      uint64_t v29 = operator new(0x1F0uLL);
      sub_1005E5F30((uint64_t)v29);
      double v78 = v29;
    }

    v29[123] |= 0x800u;
    __int16 v30 = (_DWORD *)*((void *)v29 + 44);
    if (!v30)
    {
      __int16 v30 = operator new(0xC0uLL);
      sub_100B1FFB4((uint64_t)v30);
      *((void *)v29 + 44) = v30;
    }

    v30[46] |= 0x1000u;
    int v31 = (_DWORD *)*((void *)v30 + 12);
    if (!v31)
    {
      int v31 = operator new(0x20uLL);
      sub_100B1FDF4(v31);
      *((void *)v30 + 12) = v31;
    }

    int v32 = *a5;
    v31[7] |= 1u;
    v31[2] = v32;
    unsigned int v33 = sub_100378344(a6);
    if (!sub_10006419C(v33)) {
      __assert_rtn( "set_notification_type",  "CLPLocationController.pb.h",  8254,  "::CLP::LogEntry::PrivateData::MotionStateObserverNotification_NotificationType_IsValid(value)");
    }
    int v34 = v31[7];
    v31[3] = v33;
    v31[7] = v34 | 6;
    int v35 = (_DWORD *)*((void *)v31 + 2);
    if (!v35)
    {
      int v35 = operator new(0x18uLL);
      sub_100B1FE08(v35);
      *((void *)v31 + 2) = v35;
    }

    if (*a6)
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      char v36 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        int v37 = *a6;
        LODWORD(buf) = 67109120;
        HIDWORD(buf) = v37;
        _os_log_impl( (void *)&_mh_execute_header,  v36,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLMotionStateObserver_Type,unsupported notification type,%d",  (uint8_t *)&buf,  8u);
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_95;
      }
      bzero(&buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      int v38 = *a6;
      *(_DWORD *)char v67 = 67109120;
      *(_DWORD *)&v67[4] = v38;
      char v39 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,recordMessage,CLMotionStateObserver_Type,unsupported notification type,%d",  v67);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType &, const CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, const CLMotionStateObserver_Type::Notification &, const CLMotionStateObserver_Type::NotificationData &)",  "%s\n",  v39);
    }

    else
    {
      v35[5] |= 1u;
      unsigned int v40 = (void *)*((void *)v35 + 1);
      if (!v40)
      {
        unsigned int v40 = operator new(0x28uLL);
        sub_1001D26AC((uint64_t)v40);
        *((void *)v35 + 1) = v40;
      }

      sub_100F8A044(a7, (uint64_t)v40);
      int v41 = sub_100371ED0(a1, (uint64_t)v76);
      if (!*(_BYTE *)(a1 + 8)) {
        goto LABEL_95;
      }
      int v42 = v41;
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      int v43 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        sub_100FE4F50((int *)a2, v67);
        if (SBYTE3(v69) >= 0) {
          uint64_t v44 = v67;
        }
        else {
          uint64_t v44 = *(_BYTE **)v67;
        }
        LODWORD(v59[0]) = a3->i32[0];
        sub_100FE5218((int *)v59, v64);
        int v57 = v42;
        if (v65 >= 0) {
          double v45 = v64;
        }
        else {
          double v45 = (void **)v64[0];
        }
        int v61 = *a4;
        uint64_t v46 = __p;
        sub_100FE5218(&v61, __p);
        if (v63 < 0) {
          uint64_t v46 = (void **)__p[0];
        }
        int v47 = *a6;
        uint64_t v48 = sub_10080E94C();
        double v49 = sub_10080EF30(v48);
        LODWORD(buf) = 67110402;
        HIDWORD(buf) = v57;
        __int16 v81 = 2080;
        double v82 = v44;
        __int16 v83 = 2080;
        int v84 = v45;
        __int16 v85 = 2080;
        double v86 = v46;
        __int16 v87 = 1024;
        int v88 = v47;
        __int16 v89 = 2050;
        double v90 = v49;
        _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLMotionStateObserver_Type,success,%d,message_type,%s,from,%s,to,%s,notification_ty pe,%d,propagation_us,%{public}.3f",  (uint8_t *)&buf,  0x36u);
        if (v63 < 0) {
          operator delete(__p[0]);
        }
        if (v65 < 0) {
          operator delete(v64[0]);
        }
        int v42 = v57;
        if (SBYTE3(v69) < 0) {
          operator delete(*(void **)v67);
        }
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_95;
      }
      bzero(&buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      uint64_t v50 = qword_101934838;
      sub_100FE4F50((int *)a2, v64);
      if (v65 >= 0) {
        uint64_t v51 = v64;
      }
      else {
        uint64_t v51 = (void **)v64[0];
      }
      int v61 = a3->i32[0];
      double v52 = __p;
      sub_100FE5218(&v61, __p);
      if (v63 < 0) {
        double v52 = (void **)__p[0];
      }
      int v58 = *a4;
      int v53 = v59;
      sub_100FE5218(&v58, v59);
      if (v60 < 0) {
        int v53 = (void **)v59[0];
      }
      int v54 = *a6;
      uint64_t v55 = sub_10080E94C();
      double v56 = sub_10080EF30(v55);
      *(_DWORD *)char v67 = 67110402;
      *(_DWORD *)&v67[4] = v42;
      *(_WORD *)&v67[8] = 2080;
      *(void *)&v67[10] = v51;
      __int16 v68 = 2080;
      int v69 = v52;
      __int16 v70 = 2080;
      double v71 = v53;
      __int16 v72 = 1024;
      int v73 = v54;
      __int16 v74 = 2050;
      double v75 = v56;
      char v39 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v50,  2LL,  "#locctl,#rec,recordMessage,CLMotionStateObserver_Type,success,%d,message_type,%s,from,%s,to,%s,not ification_type,%d,propagation_us,%{public}.3f",  v67,  54);
      if (v60 < 0) {
        operator delete(v59[0]);
      }
      if (v63 < 0) {
        operator delete(__p[0]);
      }
      if (v65 < 0) {
        operator delete(v64[0]);
      }
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType &, const CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, const CLMotionStateObserver_Type::Notification &, const CLMotionStateObserver_Type::NotificationData &)",  "%s\n",  v39);
    }

    free(v39);
LABEL_95:
    sub_100EDE8A8(v76);
    return;
  }

  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101834AA8);
  }
  std::string v20 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    sub_100FE4F50((int *)a2, &buf);
    uint64_t v21 = SBYTE3(v84) >= 0 ? &buf : (void **)buf;
    *(_DWORD *)__int16 v76 = 136315138;
    *(void *)&v76[4] = v21;
    _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLMotionStateObserver_Type,unsupported message type,%s",  v76,  0xCu);
    if (SBYTE3(v84) < 0) {
      operator delete(buf);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    uint64_t v22 = qword_101934838;
    sub_100FE4F50((int *)a2, v76);
    if (v77 >= 0) {
      int v23 = v76;
    }
    else {
      int v23 = *(uint8_t **)v76;
    }
    *(_DWORD *)char v67 = 136315138;
    *(void *)&v67[4] = v23;
    int v19 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v22,  2LL,  "#locctl,#rec,recordMessage,CLMotionStateObserver_Type,unsupported message type,%s",  v67);
    if (v77 < 0) {
      operator delete(*(void **)v76);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType &, const CL LocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, const CLM otionStateObserver_Type::Notification &, const CLMotionStateObserver_Type::NotificationData &)",  "%s\n",  v19);
  }

void sub_100378250( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *__p, uint64_t a21, int a22, __int16 a23, char a24, char a25, void *a26, uint64_t a27, int a28, __int16 a29, char a30, char a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, int a38, __int16 a39, char a40, char a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, char a47)
{
}

BOOL sub_100378344(int *a1)
{
  if (!*a1) {
    return 1LL;
  }
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101834AA8);
  }
  int v2 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    int v3 = *a1;
    *(_DWORD *)buf = 67109120;
    int v9 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,convertMotionStateObserverNotificationTypeToProtobuf,unhandled type,%d",  buf,  8u);
  }

  BOOL result = sub_1002921D0(115, 2);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    int v5 = *a1;
    v7[0] = 67109120;
    v7[1] = v5;
    BOOL v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,convertMotionStateObserverNotificationTypeToProtobuf,unhandled type,%d",  v7);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static CLP::LogEntry::PrivateData::MotionStateObserverNotification_NotificationType CLLocationControllerRecorder:: convertMotionStateObserverNotificationTypeToProtobuf(const CLMotionStateObserver_Type::Notification &)",  "%s\n",  v6);
    return 0LL;
  }

  return result;
}

void sub_100378504(uint64_t a1, unsigned int *a2, int32x4_t *a3, int *a4, int *a5, int *a6, uint64_t a7)
{
  if (!*(void *)(a1 + 16)) {
    return;
  }
  if (*a2 == 4)
  {
    if ((vmaxv_u16((uint16x4_t)vmovn_s32(vceqzq_s32(*a3))) & 1) != 0)
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      int v10 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        if (a3->i32[0]) {
          BOOL v11 = a3->i32[1] == 0;
        }
        else {
          BOOL v11 = 1;
        }
        int v12 = !v11;
        if (*a4) {
          BOOL v13 = a4[1] == 0;
        }
        else {
          BOOL v13 = 1;
        }
        int v14 = !v13;
        LODWORD(buf) = 67109376;
        HIDWORD(buf) = v12;
        __int16 v84 = 1024;
        LODWORD(v85) = v14;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLMotionStateMediator_Type,silo entry invalid,from_valid,%d,to_valid,%d",  (uint8_t *)&buf,  0xEu);
      }

      if (!sub_1002921D0(115, 2)) {
        return;
      }
      bzero(&buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      BOOL v15 = !a3->i32[0] || a3->i32[1] == 0;
      BOOL v16 = !v15;
      BOOL v17 = !*a4 || a4[1] == 0;
      BOOL v18 = !v17;
      *(_DWORD *)int v79 = 67109376;
      *(_DWORD *)&v79[4] = v16;
      *(_WORD *)&v79[8] = 1024;
      *(_DWORD *)&v79[10] = v18;
      int v19 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,recordMessage,CLMotionStateMediator_Type,silo entry invalid,from_valid,%d,to_valid,%d",  v79,  14);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType &, const CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, const CLMotionStateMediator_Type::Notification &, const CLMotionStateMediator_Type::NotificationData &)",  "%s\n",  v19);
LABEL_54:
      free(v19);
      return;
    }

    sub_100EDE11C(v79);
    uint64_t v28 = (__n128 *)sub_10080E94C();
    sub_10080ED44(v28, v69);
    sub_100372734((uint64_t)v79, a2, a3, a4, (uint64_t *)v69);
    v82 |= 2u;
    uint64_t v29 = v81;
    if (!v81)
    {
      uint64_t v29 = operator new(0x1F0uLL);
      sub_1005E5F30((uint64_t)v29);
      __int16 v81 = v29;
    }

    v29[123] |= 0x800u;
    __int16 v30 = (_DWORD *)*((void *)v29 + 44);
    if (!v30)
    {
      __int16 v30 = operator new(0xC0uLL);
      sub_100B1FFB4((uint64_t)v30);
      *((void *)v29 + 44) = v30;
    }

    v30[46] |= 0x100000u;
    int v31 = (_DWORD *)*((void *)v30 + 20);
    if (!v31)
    {
      int v31 = operator new(0x20uLL);
      sub_100B1FF50(v31);
      *((void *)v30 + 20) = v31;
    }

    int v32 = *a5;
    v31[7] |= 1u;
    v31[2] = v32;
    unsigned int v33 = sub_100378EF8(a6);
    if (!sub_1000641E0(v33)) {
      __assert_rtn( "set_notification_type",  "CLPLocationController.pb.h",  10052,  "::CLP::LogEntry::PrivateData::MotionStateMediatorNotification_NotificationType_IsValid(value)");
    }
    int v34 = v31[7];
    v31[3] = v33;
    v31[7] = v34 | 6;
    int v35 = (void *)*((void *)v31 + 2);
    if (!v35)
    {
      int v35 = operator new(0x20uLL);
      sub_100B1FF64(v35);
      *((void *)v31 + 2) = v35;
    }

    switch(*a6)
    {
      case 0:
        char v36 = sub_1003790C8((uint64_t)v35);
        uint64_t v37 = *(void *)a7;
        v36[8] |= 1u;
        *((void *)v36 + 1) = v37;
        int v38 = sub_1003790C8((uint64_t)v35);
        char v39 = *(_BYTE *)(a7 + 209);
        v38[8] |= 4u;
        *((_BYTE *)v38 + 24) = v39;
        unsigned int v40 = sub_1003790C8((uint64_t)v35);
        int v41 = sub_100379124((uint64_t)v40);
        sub_100F865AC(a7 + 8, (uint64_t)v41, *(_BYTE *)(a7 + 209));
        goto LABEL_67;
      case 1:
      case 3:
      case 4:
      case 5:
        goto LABEL_86;
      case 2:
        int v42 = sub_100379180((uint64_t)v35);
        sub_100F88F60(a7, (uint64_t)v42);
        goto LABEL_67;
      default:
LABEL_67:
        int v43 = sub_100371ED0(a1, (uint64_t)v79);
        if (*(_BYTE *)(a1 + 8))
        {
          int v44 = v43;
          if (qword_101934830 != -1) {
            dispatch_once(&qword_101934830, &stru_101834AA8);
          }
          double v45 = (os_log_s *)qword_101934838;
          if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
          {
            sub_100FE4F50((int *)a2, v70);
            if (SBYTE3(v72) >= 0) {
              uint64_t v46 = v70;
            }
            else {
              uint64_t v46 = *(_BYTE **)v70;
            }
            LODWORD(v62[0]) = a3->i32[0];
            sub_100FE5218((int *)v62, v67);
            int v60 = v44;
            if (v68 >= 0) {
              int v47 = v67;
            }
            else {
              int v47 = (void **)v67[0];
            }
            int v64 = *a4;
            uint64_t v48 = __p;
            sub_100FE5218(&v64, __p);
            if (v66 < 0) {
              uint64_t v48 = (void **)__p[0];
            }
            int v49 = *a6;
            uint64_t v50 = sub_10080E94C();
            double v51 = sub_10080EF30(v50);
            LODWORD(buf) = 67110402;
            HIDWORD(buf) = v60;
            __int16 v84 = 2080;
            __int16 v85 = v46;
            __int16 v86 = 2080;
            __int16 v87 = v47;
            __int16 v88 = 2080;
            __int16 v89 = v48;
            __int16 v90 = 1024;
            int v91 = v49;
            __int16 v92 = 2050;
            double v93 = v51;
            _os_log_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLMotionStateMediator_Type,success,%d,message_type,%s,from,%s,to,%s,notificatio n_type,%d,propagation_us,%{public}.3f",  (uint8_t *)&buf,  0x36u);
            if (v66 < 0) {
              operator delete(__p[0]);
            }
            if (v68 < 0) {
              operator delete(v67[0]);
            }
            int v44 = v60;
            if (SBYTE3(v72) < 0) {
              operator delete(*(void **)v70);
            }
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(&buf, 0x65CuLL);
            if (qword_101934830 != -1) {
              dispatch_once(&qword_101934830, &stru_101834AA8);
            }
            uint64_t v52 = qword_101934838;
            sub_100FE4F50((int *)a2, v67);
            if (v68 >= 0) {
              int v53 = v67;
            }
            else {
              int v53 = (void **)v67[0];
            }
            int v64 = a3->i32[0];
            int v54 = __p;
            sub_100FE5218(&v64, __p);
            if (v66 < 0) {
              int v54 = (void **)__p[0];
            }
            int v61 = *a4;
            sub_100FE5218(&v61, v62);
            if (v63 >= 0) {
              uint64_t v55 = v62;
            }
            else {
              uint64_t v55 = (void **)v62[0];
            }
            int v56 = *a6;
            uint64_t v57 = sub_10080E94C();
            double v58 = sub_10080EF30(v57);
            *(_DWORD *)__int16 v70 = 67110402;
            *(_DWORD *)&v70[4] = v44;
            *(_WORD *)&v70[8] = 2080;
            *(void *)&v70[10] = v53;
            __int16 v71 = 2080;
            __int16 v72 = v54;
            __int16 v73 = 2080;
            __int16 v74 = v55;
            __int16 v75 = 1024;
            int v76 = v56;
            __int16 v77 = 2050;
            double v78 = v58;
            char v59 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v52,  2LL,  "#locctl,#rec,recordMessage,CLMotionStateMediator_Type,success,%d,message_type,%s,from,%s,to, %s,notification_type,%d,propagation_us,%{public}.3f",  v70,  54);
            if (v63 < 0) {
              operator delete(v62[0]);
            }
            if (v66 < 0) {
              operator delete(__p[0]);
            }
            if (v68 < 0) {
              operator delete(v67[0]);
            }
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType &, const CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, const CLMotionStateMediator_Type::Notification &, const CLMotionStateMediator_Type::NotificationData &)",  "%s\n",  v59);
          }
        }

void sub_100378DF4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *__p, uint64_t a21, int a22, __int16 a23, char a24, char a25, void *a26, uint64_t a27, int a28, __int16 a29, char a30, char a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, int a38, __int16 a39, char a40, char a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, char a47)
{
}

uint64_t sub_100378EF8(int *a1)
{
  uint64_t v1 = *a1;
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101834AA8);
  }
  int v4 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    int v5 = *a1;
    *(_DWORD *)buf = 67109120;
    int v10 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,convertMotionStateMediatorNotificationTypeToProtobuf,unhandled type,%d",  buf,  8u);
  }

  uint64_t result = sub_1002921D0(115, 2);
  if ((_DWORD)result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    int v6 = *a1;
    v8[0] = 67109120;
    v8[1] = v6;
    int v7 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,convertMotionStateMediatorNotificationTypeToProtobuf,unhandled type,%d",  v8);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static CLP::LogEntry::PrivateData::MotionStateMediatorNotification_NotificationType CLLocationControllerRecorder:: convertMotionStateMediatorNotificationTypeToProtobuf(const CLMotionStateMediator_Type::Notification &)",  "%s\n",  v7);
    return 0LL;
  }

  return result;
}

void *sub_1003790C8(uint64_t a1)
{
  *(_DWORD *)(a1 + 28) |= 1u;
  uint64_t v1 = *(void **)(a1 + 8);
  if (!v1)
  {
    uint64_t v1 = operator new(0x28uLL);
    sub_1001D273C((uint64_t)v1);
    *(void *)(a1 + 8) = v1;
  }

  return v1;
}

void sub_100379110(_Unwind_Exception *a1)
{
}

void *sub_100379124(uint64_t a1)
{
  *(_DWORD *)(a1 + 32) |= 2u;
  uint64_t v1 = *(void **)(a1 + 16);
  if (!v1)
  {
    uint64_t v1 = operator new(0x60uLL);
    sub_1001D2670((uint64_t)v1);
    *(void *)(a1 + 16) = v1;
  }

  return v1;
}

void sub_10037916C(_Unwind_Exception *a1)
{
}

void *sub_100379180(uint64_t a1)
{
  *(_DWORD *)(a1 + 28) |= 2u;
  uint64_t v1 = *(void **)(a1 + 16);
  if (!v1)
  {
    uint64_t v1 = operator new(0x38uLL);
    sub_1001D2704((uint64_t)v1);
    *(void *)(a1 + 16) = v1;
  }

  return v1;
}

void sub_1003791C8(_Unwind_Exception *a1)
{
}

void sub_1003791DC(uint64_t a1, unsigned int *a2, int32x4_t *a3, int *a4, int *a5, int *a6, uint64_t a7)
{
  if (!*(void *)(a1 + 16)) {
    return;
  }
  if (*a2 == 4)
  {
    if ((vmaxv_u16((uint16x4_t)vmovn_s32(vceqzq_s32(*a3))) & 1) != 0)
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      int v10 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        if (a3->i32[0]) {
          BOOL v11 = a3->i32[1] == 0;
        }
        else {
          BOOL v11 = 1;
        }
        int v12 = !v11;
        if (*a4) {
          BOOL v13 = a4[1] == 0;
        }
        else {
          BOOL v13 = 1;
        }
        int v14 = !v13;
        LODWORD(buf) = 67109376;
        HIDWORD(buf) = v12;
        __int16 v79 = 1024;
        LODWORD(v80) = v14;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLMotionState_Type,silo entry invalid,from_valid,%d,to_valid,%d",  (uint8_t *)&buf,  0xEu);
      }

      if (!sub_1002921D0(115, 2)) {
        return;
      }
      bzero(&buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      BOOL v15 = !a3->i32[0] || a3->i32[1] == 0;
      BOOL v16 = !v15;
      BOOL v17 = !*a4 || a4[1] == 0;
      BOOL v18 = !v17;
      *(_DWORD *)__int16 v74 = 67109376;
      *(_DWORD *)&v74[4] = v16;
      *(_WORD *)&v74[8] = 1024;
      *(_DWORD *)&v74[10] = v18;
      int v19 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,recordMessage,CLMotionState_Type,silo entry invalid,from_valid,%d,to_valid,%d",  v74,  14);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType &, const CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, const CLMotionState_Type::Notification &, const CLMotionState_Type::NotificationData &)",  "%s\n",  v19);
LABEL_54:
      free(v19);
      return;
    }

    sub_100EDE11C(v74);
    uint64_t v28 = (__n128 *)sub_10080E94C();
    sub_10080ED44(v28, v64);
    sub_100372734((uint64_t)v74, a2, a3, a4, (uint64_t *)v64);
    v77 |= 2u;
    uint64_t v29 = v76;
    if (!v76)
    {
      uint64_t v29 = operator new(0x1F0uLL);
      sub_1005E5F30((uint64_t)v29);
      int v76 = v29;
    }

    v29[123] |= 0x800u;
    __int16 v30 = (_DWORD *)*((void *)v29 + 44);
    if (!v30)
    {
      __int16 v30 = operator new(0xC0uLL);
      sub_100B1FFB4((uint64_t)v30);
      *((void *)v29 + 44) = v30;
    }

    v30[46] |= 0x800u;
    int v31 = (_DWORD *)*((void *)v30 + 11);
    if (!v31)
    {
      int v31 = operator new(0x20uLL);
      sub_100B1FDCC(v31);
      *((void *)v30 + 11) = v31;
    }

    int v32 = *a5;
    v31[7] |= 1u;
    v31[2] = v32;
    unsigned int v33 = sub_100F8D0B0(a6);
    if (!sub_1001D2F54(v33)) {
      __assert_rtn( "set_notification_type",  "CLPLocationController.pb.h",  8117,  "::CLP::LogEntry::PrivateData::MotionStateNotification_NotificationType_IsValid(value)");
    }
    int v34 = v31[7];
    v31[3] = v33;
    v31[7] = v34 | 6;
    int v35 = (void *)*((void *)v31 + 2);
    if (!v35)
    {
      int v35 = operator new(0x18uLL);
      sub_100B1FDE0(v35);
      *((void *)v31 + 2) = v35;
    }

    int v36 = *a6;
    if ((*a6 - 3) < 9)
    {
LABEL_65:
      sub_100EDE8A8(v74);
      return;
    }

    if ((v36 - 1) >= 2)
    {
      if (!v36) {
        goto LABEL_65;
      }
    }

    else
    {
      uint64_t v37 = sub_100379B64((uint64_t)v35);
      sub_100F865AC(a7, (uint64_t)v37, 0);
    }

    int v38 = sub_100371ED0(a1, (uint64_t)v74);
    if (*(_BYTE *)(a1 + 8))
    {
      int v39 = v38;
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      unsigned int v40 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        sub_100FE4F50((int *)a2, v65);
        if (SBYTE3(v67) >= 0) {
          int v41 = v65;
        }
        else {
          int v41 = *(_BYTE **)v65;
        }
        LODWORD(v57[0]) = a3->i32[0];
        sub_100FE5218((int *)v57, v62);
        int v55 = v39;
        if (v63 >= 0) {
          int v42 = v62;
        }
        else {
          int v42 = (void **)v62[0];
        }
        int v59 = *a4;
        int v43 = __p;
        sub_100FE5218(&v59, __p);
        if (v61 < 0) {
          int v43 = (void **)__p[0];
        }
        int v44 = *a6;
        uint64_t v45 = sub_10080E94C();
        double v46 = sub_10080EF30(v45);
        LODWORD(buf) = 67110402;
        HIDWORD(buf) = v55;
        __int16 v79 = 2080;
        char v80 = v41;
        __int16 v81 = 2080;
        int v82 = v42;
        __int16 v83 = 2080;
        __int16 v84 = v43;
        __int16 v85 = 1024;
        int v86 = v44;
        __int16 v87 = 2050;
        double v88 = v46;
        _os_log_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLMotionState_Type,success,%d,message_type,%s,from,%s,to,%s,notification_type,%d,pr opagation_us,%{public}.3f",  (uint8_t *)&buf,  0x36u);
        if (v61 < 0) {
          operator delete(__p[0]);
        }
        if (v63 < 0) {
          operator delete(v62[0]);
        }
        int v39 = v55;
        if (SBYTE3(v67) < 0) {
          operator delete(*(void **)v65);
        }
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101834AA8);
        }
        uint64_t v47 = qword_101934838;
        sub_100FE4F50((int *)a2, v62);
        if (v63 >= 0) {
          uint64_t v48 = v62;
        }
        else {
          uint64_t v48 = (void **)v62[0];
        }
        int v59 = a3->i32[0];
        int v49 = __p;
        sub_100FE5218(&v59, __p);
        if (v61 < 0) {
          int v49 = (void **)__p[0];
        }
        int v56 = *a4;
        sub_100FE5218(&v56, v57);
        if (v58 >= 0) {
          uint64_t v50 = v57;
        }
        else {
          uint64_t v50 = (void **)v57[0];
        }
        int v51 = *a6;
        uint64_t v52 = sub_10080E94C();
        double v53 = sub_10080EF30(v52);
        *(_DWORD *)char v65 = 67110402;
        *(_DWORD *)&v65[4] = v39;
        *(_WORD *)&v65[8] = 2080;
        *(void *)&v65[10] = v48;
        __int16 v66 = 2080;
        char v67 = v49;
        __int16 v68 = 2080;
        int v69 = v50;
        __int16 v70 = 1024;
        int v71 = v51;
        __int16 v72 = 2050;
        double v73 = v53;
        int v54 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v47,  2LL,  "#locctl,#rec,recordMessage,CLMotionState_Type,success,%d,message_type,%s,from,%s,to,%s,notificat ion_type,%d,propagation_us,%{public}.3f",  v65,  54);
        if (v58 < 0) {
          operator delete(v57[0]);
        }
        if (v61 < 0) {
          operator delete(__p[0]);
        }
        if (v63 < 0) {
          operator delete(v62[0]);
        }
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType &, cons t CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, c onst CLMotionState_Type::Notification &, const CLMotionState_Type::NotificationData &)",  "%s\n",  v54);
      }
    }

    goto LABEL_65;
  }

  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101834AA8);
  }
  std::string v20 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    sub_100FE4F50((int *)a2, &buf);
    uint64_t v21 = SBYTE3(v82) >= 0 ? &buf : (void **)buf;
    *(_DWORD *)__int16 v74 = 136315138;
    *(void *)&v74[4] = v21;
    _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLMotionState_Type,unsupported message type,%s",  v74,  0xCu);
    if (SBYTE3(v82) < 0) {
      operator delete(buf);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    uint64_t v22 = qword_101934838;
    sub_100FE4F50((int *)a2, v74);
    if (v75 >= 0) {
      int v23 = v74;
    }
    else {
      int v23 = *(uint8_t **)v74;
    }
    *(_DWORD *)char v65 = 136315138;
    *(void *)&v65[4] = v23;
    int v19 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v22,  2LL,  "#locctl,#rec,recordMessage,CLMotionState_Type,unsupported message type,%s",  v65);
    if (v75 < 0) {
      operator delete(*(void **)v74);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType &, const CL LocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, const CLM otionState_Type::Notification &, const CLMotionState_Type::NotificationData &)",  "%s\n",  v19);
  }

void sub_100379A78( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *__p, uint64_t a21, int a22, __int16 a23, char a24, char a25, void *a26, uint64_t a27, int a28, __int16 a29, char a30, char a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, int a38, __int16 a39, char a40, char a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, char a47)
{
}

void *sub_100379B64(uint64_t a1)
{
  *(_DWORD *)(a1 + 20) |= 1u;
  uint64_t v1 = *(void **)(a1 + 8);
  if (!v1)
  {
    uint64_t v1 = operator new(0x60uLL);
    sub_1001D2670((uint64_t)v1);
    *(void *)(a1 + 8) = v1;
  }

  return v1;
}

void sub_100379BAC(_Unwind_Exception *a1)
{
}

void sub_100379BC0(uint64_t a1, unsigned int *a2, int32x4_t *a3, int *a4, int *a5, int *a6, int *a7)
{
  if (!*(void *)(a1 + 16)) {
    return;
  }
  if (*a2 == 4)
  {
    if ((vmaxv_u16((uint16x4_t)vmovn_s32(vceqzq_s32(*a3))) & 1) != 0)
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      int v10 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        if (a3->i32[0]) {
          BOOL v11 = a3->i32[1] == 0;
        }
        else {
          BOOL v11 = 1;
        }
        int v12 = !v11;
        if (*a4) {
          BOOL v13 = a4[1] == 0;
        }
        else {
          BOOL v13 = 1;
        }
        int v14 = !v13;
        LODWORD(buf) = 67109376;
        HIDWORD(buf) = v12;
        __int16 v83 = 1024;
        LODWORD(v84) = v14;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLSignalEnvironmentProvider_Type,silo entry invalid,from_valid,%d,to_valid,%d",  (uint8_t *)&buf,  0xEu);
      }

      if (!sub_1002921D0(115, 2)) {
        return;
      }
      bzero(&buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      BOOL v15 = !a3->i32[0] || a3->i32[1] == 0;
      BOOL v16 = !v15;
      BOOL v17 = !*a4 || a4[1] == 0;
      BOOL v18 = !v17;
      *(_DWORD *)double v78 = 67109376;
      *(_DWORD *)&v78[4] = v16;
      *(_WORD *)&v78[8] = 1024;
      *(_DWORD *)&v78[10] = v18;
      int v19 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,recordMessage,CLSignalEnvironmentProvider_Type,silo entry invalid,from_valid,%d,to_valid,%d",  v78,  14);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType &, const CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, const CLSignalEnvironmentProvider_Type::Notification &, const CLSignalEnvironmentProvider_Type::NotificationData &)",  "%s\n",  v19);
LABEL_54:
      free(v19);
      return;
    }

    sub_100EDE11C(v78);
    uint64_t v28 = (__n128 *)sub_10080E94C();
    sub_10080ED44(v28, v68);
    sub_100372734((uint64_t)v78, a2, a3, a4, (uint64_t *)v68);
    v81 |= 2u;
    uint64_t v29 = v80;
    if (!v80)
    {
      uint64_t v29 = operator new(0x1F0uLL);
      sub_1005E5F30((uint64_t)v29);
      char v80 = v29;
    }

    v29[123] |= 0x800u;
    __int16 v30 = (_DWORD *)*((void *)v29 + 44);
    if (!v30)
    {
      __int16 v30 = operator new(0xC0uLL);
      sub_100B1FFB4((uint64_t)v30);
      *((void *)v29 + 44) = v30;
    }

    v30[46] |= 0x2000u;
    int v31 = (_DWORD *)*((void *)v30 + 13);
    if (!v31)
    {
      int v31 = operator new(0x20uLL);
      sub_100B1FE1C(v31);
      *((void *)v30 + 13) = v31;
    }

    int v32 = *a5;
    v31[7] |= 1u;
    v31[2] = v32;
    unsigned int v33 = sub_100F8CD28(a6);
    if (!sub_10006419C(v33)) {
      __assert_rtn( "set_notification_type",  "CLPLocationController.pb.h",  8391,  "::CLP::LogEntry::PrivateData::SignalEnvironmentNotification_NotificationType_IsValid(value)");
    }
    int v34 = v31[7];
    v31[3] = v33;
    v31[7] = v34 | 6;
    int v35 = (_DWORD *)*((void *)v31 + 2);
    if (!v35)
    {
      int v35 = operator new(0x18uLL);
      sub_100B1FE30(v35);
      *((void *)v31 + 2) = v35;
    }

    v35[5] |= 1u;
    int v36 = (_DWORD *)*((void *)v35 + 1);
    if (!v36)
    {
      int v36 = operator new(0x18uLL);
      sub_1001D28E4((uint64_t)v36);
      *((void *)v35 + 1) = v36;
    }

    int v37 = sub_100F83074(a7);
    if (sub_1001D7604(v37))
    {
      v36[5] |= 1u;
      v36[2] = v37;
      v35[5] |= 1u;
      int v38 = (_DWORD *)*((void *)v35 + 1);
      if (!v38)
      {
        int v38 = operator new(0x18uLL);
        sub_1001D28E4((uint64_t)v38);
        *((void *)v35 + 1) = v38;
      }

      unsigned int v39 = sub_100F8CEE8(a7 + 1);
      if (sub_10006ED58(v39))
      {
        v38[5] |= 2u;
        v38[3] = v39;
        int v40 = sub_100371ED0(a1, (uint64_t)v78);
        if (*(_BYTE *)(a1 + 8))
        {
          int v41 = v40;
          if (qword_101934830 != -1) {
            dispatch_once(&qword_101934830, &stru_101834AA8);
          }
          int v42 = (os_log_s *)qword_101934838;
          if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
          {
            sub_100FE4F50((int *)a2, v69);
            if (SBYTE3(v71) >= 0) {
              int v43 = v69;
            }
            else {
              int v43 = *(_BYTE **)v69;
            }
            LODWORD(v61[0]) = a3->i32[0];
            sub_100FE5218((int *)v61, v66);
            if (v67 >= 0) {
              int v44 = v66;
            }
            else {
              int v44 = (void **)v66[0];
            }
            int v63 = *a4;
            uint64_t v45 = __p;
            sub_100FE5218(&v63, __p);
            if (v65 < 0) {
              uint64_t v45 = (void **)__p[0];
            }
            int v46 = *a6;
            uint64_t v47 = sub_10080E94C();
            double v48 = sub_10080EF30(v47);
            LODWORD(buf) = 67110402;
            HIDWORD(buf) = v41;
            __int16 v83 = 2080;
            __int16 v84 = v43;
            __int16 v85 = 2080;
            int v86 = v44;
            __int16 v87 = 2080;
            double v88 = v45;
            __int16 v89 = 1024;
            int v90 = v46;
            __int16 v91 = 2050;
            double v92 = v48;
            _os_log_impl( (void *)&_mh_execute_header,  v42,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLSignalEnvironmentProvider_Type,success,%d,message_type,%s,from,%s,to,%s,notif ication_type,%d,propagation_us,%{public}.3f",  (uint8_t *)&buf,  0x36u);
            if (v65 < 0) {
              operator delete(__p[0]);
            }
            if (v67 < 0) {
              operator delete(v66[0]);
            }
            if (SBYTE3(v71) < 0) {
              operator delete(*(void **)v69);
            }
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(&buf, 0x65CuLL);
            if (qword_101934830 != -1) {
              dispatch_once(&qword_101934830, &stru_101834AA8);
            }
            uint64_t v52 = qword_101934838;
            sub_100FE4F50((int *)a2, v66);
            if (v67 >= 0) {
              double v53 = v66;
            }
            else {
              double v53 = (void **)v66[0];
            }
            int v63 = a3->i32[0];
            int v54 = __p;
            sub_100FE5218(&v63, __p);
            if (v65 < 0) {
              int v54 = (void **)__p[0];
            }
            HIDWORD(v60) = *a4;
            sub_100FE5218((int *)&v60 + 1, v61);
            if (v62 >= 0) {
              int v55 = v61;
            }
            else {
              int v55 = (void **)v61[0];
            }
            int v56 = *a6;
            uint64_t v57 = sub_10080E94C();
            double v58 = sub_10080EF30(v57);
            *(_DWORD *)int v69 = 67110402;
            *(_DWORD *)&v69[4] = v41;
            *(_WORD *)&v69[8] = 2080;
            *(void *)&v69[10] = v53;
            __int16 v70 = 2080;
            int v71 = v54;
            __int16 v72 = 2080;
            double v73 = v55;
            __int16 v74 = 1024;
            int v75 = v56;
            __int16 v76 = 2050;
            double v77 = v58;
            LODWORD(v60) = 54;
            int v59 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v52,  2LL,  "#locctl,#rec,recordMessage,CLSignalEnvironmentProvider_Type,success,%d,message_type,%s,from, %s,to,%s,notification_type,%d,propagation_us,%{public}.3f",  v69,  v60);
            if (v62 < 0) {
              operator delete(v61[0]);
            }
            if (v65 < 0) {
              operator delete(__p[0]);
            }
            if (v67 < 0) {
              operator delete(v66[0]);
            }
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType &, const CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, const CLSignalEnvironmentProvider_Type::Notification &, const CLSignalEnvironmentProvider_Type::Not ificationData &)",  "%s\n",  v59);
          }
        }

        sub_100EDE8A8(v78);
        return;
      }

      int v49 = "::CLP::LogEntry::PrivateData::SignalEnvironmentFidelityLevel_IsValid(value)";
      int v50 = 22085;
      int v51 = "set_fidelity_level";
    }

    else
    {
      int v49 = "::CLP::LogEntry::PrivateData::SignalEnvironment_SignalEnvironmentType_IsValid(value)";
      int v50 = 22062;
      int v51 = "set_type";
    }

    __assert_rtn(v51, "CLPPrivateDataShared.pb.h", v50, v49);
  }

  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101834AA8);
  }
  std::string v20 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    sub_100FE4F50((int *)a2, &buf);
    uint64_t v21 = SBYTE3(v86) >= 0 ? &buf : (void **)buf;
    *(_DWORD *)double v78 = 136315138;
    *(void *)&v78[4] = v21;
    _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLSignalEnvironmentProvider_Type,unsupported message type,%s",  v78,  0xCu);
    if (SBYTE3(v86) < 0) {
      operator delete(buf);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    uint64_t v22 = qword_101934838;
    sub_100FE4F50((int *)a2, v78);
    if (v79 >= 0) {
      int v23 = v78;
    }
    else {
      int v23 = *(uint8_t **)v78;
    }
    *(_DWORD *)int v69 = 136315138;
    *(void *)&v69[4] = v23;
    int v19 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v22,  2LL,  "#locctl,#rec,recordMessage,CLSignalEnvironmentProvider_Type,unsupported message type,%s",  v69);
    if (v79 < 0) {
      operator delete(*(void **)v78);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType &, const CL LocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, const CLS ignalEnvironmentProvider_Type::Notification &, const CLSignalEnvironmentProvider_Type::NotificationData &)",  "%s\n",  v19);
  }

void sub_10037A4F4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *__p, uint64_t a19, int a20, __int16 a21, char a22, char a23, void *a24, uint64_t a25, int a26, __int16 a27, char a28, char a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, int a36, __int16 a37, char a38, char a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, char a45)
{
}

void sub_10037A5E8(uint64_t a1, unsigned int *a2, int32x4_t *a3, int *a4, int *a5, int *a6)
{
  if (!*(void *)(a1 + 16)) {
    return;
  }
  if (*a2 == 4)
  {
    if ((vmaxv_u16((uint16x4_t)vmovn_s32(vceqzq_s32(*a3))) & 1) != 0)
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      int v9 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        if (a3->i32[0]) {
          BOOL v10 = a3->i32[1] == 0;
        }
        else {
          BOOL v10 = 1;
        }
        int v11 = !v10;
        if (*a4) {
          BOOL v12 = a4[1] == 0;
        }
        else {
          BOOL v12 = 1;
        }
        int v13 = !v12;
        *(_DWORD *)buf = 67109376;
        *(_DWORD *)&uint8_t buf[4] = v11;
        __int16 v74 = 1024;
        LODWORD(v75) = v13;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLTelephonyService_Type,silo entry invalid,from_valid,%d,to_valid,%d",  buf,  0xEu);
      }

      if (!sub_1002921D0(115, 2)) {
        return;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      BOOL v14 = !a3->i32[0] || a3->i32[1] == 0;
      BOOL v15 = !v14;
      BOOL v16 = !*a4 || a4[1] == 0;
      BOOL v17 = !v16;
      *(_DWORD *)uint64_t v60 = 67109376;
      *(_DWORD *)&v60[4] = v15;
      *(_WORD *)&v60[8] = 1024;
      *(_DWORD *)&v60[10] = v17;
      BOOL v18 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,recordMessage,CLTelephonyService_Type,silo entry invalid,from_valid,%d,to_valid,%d",  v60,  14);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType &, const CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, const CLTelephonyService_Type::Notification &)",  "%s\n",  v18);
LABEL_54:
      free(v18);
      return;
    }

    sub_100EDE11C(&v69);
    int v26 = (__n128 *)sub_10080E94C();
    sub_10080ED44(v26, v59);
    sub_100372734((uint64_t)&v69, a2, a3, a4, (uint64_t *)v59);
    v72 |= 2u;
    int v27 = v71;
    if (!v71)
    {
      int v27 = operator new(0x1F0uLL);
      sub_1005E5F30((uint64_t)v27);
      int v71 = v27;
    }

    v27[123] |= 0x800u;
    uint64_t v28 = (_DWORD *)*((void *)v27 + 44);
    if (!v28)
    {
      uint64_t v28 = operator new(0xC0uLL);
      sub_100B1FFB4((uint64_t)v28);
      *((void *)v27 + 44) = v28;
    }

    v28[46] |= 0x4000u;
    uint64_t v29 = (_DWORD *)*((void *)v28 + 14);
    if (!v29)
    {
      uint64_t v29 = operator new(0x18uLL);
      sub_100B1FE44(v29);
      *((void *)v28 + 14) = v29;
    }

    int v30 = *a5;
    v29[5] |= 1u;
    v29[2] = v30;
    unsigned int v31 = sub_10037AF90(a6);
    if (!sub_1000641E0(v31)) {
      __assert_rtn( "set_notification_type",  "CLPLocationController.pb.h",  8482,  "::CLP::LogEntry::PrivateData::TelephonyServiceNotification_NotificationType_IsValid(value)");
    }
    v29[5] |= 2u;
    v29[3] = v31;
    int v32 = sub_100371ED0(a1, (uint64_t)&v69);
    if (*(_BYTE *)(a1 + 8))
    {
      int v33 = v32;
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      int v34 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        sub_100FE4F50((int *)a2, v60);
        if (SBYTE3(v62) >= 0) {
          int v35 = v60;
        }
        else {
          int v35 = *(_BYTE **)v60;
        }
        LODWORD(v51.__r_.__value_.__l.__data_) = a3->i32[0];
        sub_100FE5218((int *)&v51, v57);
        if (v58 >= 0) {
          int v36 = v57;
        }
        else {
          int v36 = (void **)v57[0];
        }
        int v54 = *a4;
        sub_100FE5218(&v54, v55);
        if (v56 >= 0) {
          int v37 = v55;
        }
        else {
          int v37 = (void **)v55[0];
        }
        int v38 = (const __CFString *)sub_100320878(a6);
        p_p = &__p;
        sub_1002A6C50(v38, &__p);
        if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        uint64_t v40 = sub_10080E94C();
        double v41 = sub_10080EF30(v40);
        *(_DWORD *)buf = 67110402;
        *(_DWORD *)&uint8_t buf[4] = v33;
        __int16 v74 = 2080;
        int v75 = v35;
        __int16 v76 = 2080;
        double v77 = v36;
        __int16 v78 = 2080;
        char v79 = v37;
        __int16 v80 = 2080;
        int v81 = p_p;
        __int16 v82 = 2050;
        double v83 = v41;
        _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLTelephonyService_Type,success,%d,message_type,%s,from,%s,to,%s,notification_type, %s,propagation_us,%{public}.3f",  buf,  0x3Au);
        if (v56 < 0) {
          operator delete(v55[0]);
        }
        if (v58 < 0) {
          operator delete(v57[0]);
        }
        if (SBYTE3(v62) < 0) {
          operator delete(*(void **)v60);
        }
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101834AA8);
        }
        uint64_t v42 = qword_101934838;
        sub_100FE4F50((int *)a2, v57);
        if (v58 >= 0) {
          int v43 = v57;
        }
        else {
          int v43 = (void **)v57[0];
        }
        int v54 = a3->i32[0];
        int v44 = v55;
        sub_100FE5218(&v54, v55);
        if (v56 < 0) {
          int v44 = (void **)v55[0];
        }
        int v52 = *a4;
        uint64_t v45 = &__p;
        sub_100FE5218(&v52, &__p);
        if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
          uint64_t v45 = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        int v46 = (const __CFString *)sub_100320878(a6);
        uint64_t v47 = &v51;
        sub_1002A6C50(v46, &v51);
        if ((v51.__r_.__value_.__s.__size_ & 0x80u) != 0) {
          uint64_t v47 = (std::string *)v51.__r_.__value_.__r.__words[0];
        }
        uint64_t v48 = sub_10080E94C();
        double v49 = sub_10080EF30(v48);
        *(_DWORD *)uint64_t v60 = 67110402;
        *(_DWORD *)&v60[4] = v33;
        *(_WORD *)&v60[8] = 2080;
        *(void *)&v60[10] = v43;
        __int16 v61 = 2080;
        char v62 = v44;
        __int16 v63 = 2080;
        int v64 = v45;
        __int16 v65 = 2080;
        __int16 v66 = v47;
        __int16 v67 = 2050;
        double v68 = v49;
        int v50 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v42,  2LL,  "#locctl,#rec,recordMessage,CLTelephonyService_Type,success,%d,message_type,%s,from,%s,to,%s,noti fication_type,%s,propagation_us,%{public}.3f",  v60,  58);
        if (v56 < 0) {
          operator delete(v55[0]);
        }
        if (v58 < 0) {
          operator delete(v57[0]);
        }
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType &, cons t CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, c onst CLTelephonyService_Type::Notification &)",  "%s\n",  v50);
      }
    }

    sub_100EDE8A8(&v69);
  }

  else
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    int v19 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      sub_100FE4F50((int *)a2, buf);
      std::string v20 = SBYTE3(v77) >= 0 ? buf : *(uint8_t **)buf;
      *(_DWORD *)uint64_t v60 = 136315138;
      *(void *)&v60[4] = v20;
      _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLTelephonyService_Type,unsupported message type,%s",  v60,  0xCu);
      if (SBYTE3(v77) < 0) {
        operator delete(*(void **)buf);
      }
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      uint64_t v21 = qword_101934838;
      sub_100FE4F50((int *)a2, v60);
      if (SBYTE3(v62) >= 0) {
        uint64_t v22 = v60;
      }
      else {
        uint64_t v22 = *(_BYTE **)v60;
      }
      int v69 = 136315138;
      __int16 v70 = v22;
      BOOL v18 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v21,  2LL,  "#locctl,#rec,recordMessage,CLTelephonyService_Type,unsupported message type,%s",  (const char *)&v69);
      if (SBYTE3(v62) < 0) {
        operator delete(*(void **)v60);
      }
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType &, const CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, const CLTelephonyService_Type::Notification &)",  "%s\n",  v18);
    }
  }

void sub_10037AE84( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, uint64_t a24, void *__p, uint64_t a26, int a27, __int16 a28, char a29, char a30, void *a31, uint64_t a32, int a33, __int16 a34, char a35, char a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, int a43, __int16 a44, char a45, char a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,char a52)
{
}

uint64_t sub_10037AF90(int *a1)
{
  int v2 = (const void *)sub_100320878(a1);
  if (CFEqual(v2, kCTRegistrationStatusChangedNotification)) {
    return 1LL;
  }
  int v4 = (const void *)sub_100320878(a1);
  if (CFEqual(v4, kCTCallStatusChangeNotification)) {
    return 2LL;
  }
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101834AA8);
  }
  int v5 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 67109120;
    int v10 = sub_100320924((unsigned int *)a1);
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,convertTelephonyServiceNotificationTypeToProtobuf,unhandled type,%d",  buf,  8u);
  }

  uint64_t result = sub_1002921D0(115, 2);
  if ((_DWORD)result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    uint64_t v6 = qword_101934838;
    v8[0] = 67109120;
    v8[1] = sub_100320924((unsigned int *)a1);
    int v7 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v6,  2LL,  "#locctl,#rec,convertTelephonyServiceNotificationTypeToProtobuf,unhandled type,%d",  v8);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static CLP::LogEntry::PrivateData::TelephonyServiceNotification_NotificationType CLLocationControllerRecorder::con vertTelephonyServiceNotificationTypeToProtobuf(const CLTelephonyService_Type::Notification &)",  "%s\n",  v7);
    return 0LL;
  }

  return result;
}

void sub_10037B194(uint64_t a1, unsigned int *a2, int32x4_t *a3, int *a4, int *a5, int *a6, uint64_t a7)
{
  if (!*(void *)(a1 + 16)) {
    return;
  }
  if (*a2 == 4)
  {
    if ((vmaxv_u16((uint16x4_t)vmovn_s32(vceqzq_s32(*a3))) & 1) != 0)
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      int v10 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        if (a3->i32[0]) {
          BOOL v11 = a3->i32[1] == 0;
        }
        else {
          BOOL v11 = 1;
        }
        int v12 = !v11;
        if (*a4) {
          BOOL v13 = a4[1] == 0;
        }
        else {
          BOOL v13 = 1;
        }
        int v14 = !v13;
        LODWORD(buf) = 67109376;
        HIDWORD(buf) = v12;
        __int16 v77 = 1024;
        LODWORD(v78) = v14;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLAppMonitor_Type,silo entry invalid,from_valid,%d,to_valid,%d",  (uint8_t *)&buf,  0xEu);
      }

      if (!sub_1002921D0(115, 2)) {
        return;
      }
      bzero(&buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      BOOL v15 = !a3->i32[0] || a3->i32[1] == 0;
      BOOL v16 = !v15;
      BOOL v17 = !*a4 || a4[1] == 0;
      BOOL v18 = !v17;
      *(_DWORD *)int v72 = 67109376;
      *(_DWORD *)&v72[4] = v16;
      *(_WORD *)&v72[8] = 1024;
      *(_DWORD *)&v72[10] = v18;
      int v19 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,recordMessage,CLAppMonitor_Type,silo entry invalid,from_valid,%d,to_valid,%d",  v72,  14);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType &, const CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, const CLAppMonitor_Type::Notification &, const CLAppMonitor_Type::NotificationData &)",  "%s\n",  v19);
LABEL_54:
      free(v19);
      return;
    }

    sub_100EDE11C(v72);
    uint64_t v28 = (__n128 *)sub_10080E94C();
    sub_10080ED44(v28, v62);
    sub_100372734((uint64_t)v72, a2, a3, a4, (uint64_t *)v62);
    v75 |= 2u;
    uint64_t v29 = v74;
    if (!v74)
    {
      uint64_t v29 = operator new(0x1F0uLL);
      sub_1005E5F30((uint64_t)v29);
      __int16 v74 = v29;
    }

    v29[123] |= 0x800u;
    int v30 = (_DWORD *)*((void *)v29 + 44);
    if (!v30)
    {
      int v30 = operator new(0xC0uLL);
      sub_100B1FFB4((uint64_t)v30);
      *((void *)v29 + 44) = v30;
    }

    v30[46] |= 0x8000u;
    unsigned int v31 = (_DWORD *)*((void *)v30 + 15);
    if (!v31)
    {
      unsigned int v31 = operator new(0x20uLL);
      sub_100B1FE58(v31);
      *((void *)v30 + 15) = v31;
    }

    int v32 = *a5;
    v31[7] |= 1u;
    v31[2] = v32;
    unsigned int v33 = sub_10037BB1C(a6);
    if (!sub_1000641A8(v33)) {
      __assert_rtn( "set_notification_type",  "CLPLocationController.pb.h",  8605,  "::CLP::LogEntry::PrivateData::AppMonitorNotification_NotificationType_IsValid(value)");
    }
    int v34 = v31[7];
    v31[3] = v33;
    v31[7] = v34 | 6;
    int v35 = (_DWORD *)*((void *)v31 + 2);
    if (!v35)
    {
      int v35 = operator new(0x18uLL);
      sub_100B1FE6C(v35);
      *((void *)v31 + 2) = v35;
    }

    v35[5] |= 1u;
    int v36 = (std::string *)*((void *)v35 + 1);
    if (v36 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      int v36 = (std::string *)operator new(0x18uLL);
      v36->__r_.__value_.__r.__words[0] = 0LL;
      v36->__r_.__value_.__l.__size_ = 0LL;
      v36->__r_.__value_.__l.__cap_ = 0LL;
      *((void *)v35 + 1) = v36;
    }

    std::string::operator=(v36, (const std::string *)(a7 + 8));
    int v37 = sub_100371ED0(a1, (uint64_t)v72);
    if (*(_BYTE *)(a1 + 8))
    {
      int v38 = v37;
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      unsigned int v39 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        sub_100FE4F50((int *)a2, v63);
        if (SBYTE3(v65) >= 0) {
          uint64_t v40 = v63;
        }
        else {
          uint64_t v40 = *(_BYTE **)v63;
        }
        LODWORD(v55[0]) = a3->i32[0];
        sub_100FE5218((int *)v55, v60);
        if (v61 >= 0) {
          double v41 = v60;
        }
        else {
          double v41 = (void **)v60[0];
        }
        int v57 = *a4;
        uint64_t v42 = __p;
        sub_100FE5218(&v57, __p);
        if (v59 < 0) {
          uint64_t v42 = (void **)__p[0];
        }
        int v43 = *a6;
        uint64_t v44 = sub_10080E94C();
        double v45 = sub_10080EF30(v44);
        LODWORD(buf) = 67110402;
        HIDWORD(buf) = v38;
        __int16 v77 = 2080;
        __int16 v78 = v40;
        __int16 v79 = 2080;
        __int16 v80 = v41;
        __int16 v81 = 2080;
        __int16 v82 = v42;
        __int16 v83 = 1024;
        int v84 = v43;
        __int16 v85 = 2050;
        double v86 = v45;
        _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLAppMonitor_Type,success,%d,message_type,%s,from,%s,to,%s,notification_type,%d,pro pagation_us,%{public}.3f",  (uint8_t *)&buf,  0x36u);
        if (v59 < 0) {
          operator delete(__p[0]);
        }
        if (v61 < 0) {
          operator delete(v60[0]);
        }
        if (SBYTE3(v65) < 0) {
          operator delete(*(void **)v63);
        }
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101834AA8);
        }
        uint64_t v46 = qword_101934838;
        sub_100FE4F50((int *)a2, v60);
        if (v61 >= 0) {
          uint64_t v47 = v60;
        }
        else {
          uint64_t v47 = (void **)v60[0];
        }
        int v57 = a3->i32[0];
        uint64_t v48 = __p;
        sub_100FE5218(&v57, __p);
        if (v59 < 0) {
          uint64_t v48 = (void **)__p[0];
        }
        HIDWORD(v54) = *a4;
        sub_100FE5218((int *)&v54 + 1, v55);
        if (v56 >= 0) {
          double v49 = v55;
        }
        else {
          double v49 = (void **)v55[0];
        }
        int v50 = *a6;
        uint64_t v51 = sub_10080E94C();
        double v52 = sub_10080EF30(v51);
        *(_DWORD *)__int16 v63 = 67110402;
        *(_DWORD *)&v63[4] = v38;
        *(_WORD *)&v63[8] = 2080;
        *(void *)&v63[10] = v47;
        __int16 v64 = 2080;
        __int16 v65 = v48;
        __int16 v66 = 2080;
        __int16 v67 = v49;
        __int16 v68 = 1024;
        int v69 = v50;
        __int16 v70 = 2050;
        double v71 = v52;
        LODWORD(v54) = 54;
        double v53 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v46,  2LL,  "#locctl,#rec,recordMessage,CLAppMonitor_Type,success,%d,message_type,%s,from,%s,to,%s,notificati on_type,%d,propagation_us,%{public}.3f",  v63,  v54);
        if (v56 < 0) {
          operator delete(v55[0]);
        }
        if (v59 < 0) {
          operator delete(__p[0]);
        }
        if (v61 < 0) {
          operator delete(v60[0]);
        }
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType &, cons t CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, c onst CLAppMonitor_Type::Notification &, const CLAppMonitor_Type::NotificationData &)",  "%s\n",  v53);
      }
    }

    sub_100EDE8A8(v72);
  }

  else
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    std::string v20 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      sub_100FE4F50((int *)a2, &buf);
      uint64_t v21 = SBYTE3(v80) >= 0 ? &buf : (void **)buf;
      *(_DWORD *)int v72 = 136315138;
      *(void *)&v72[4] = v21;
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLAppMonitor_Type,unsupported message type,%s",  v72,  0xCu);
      if (SBYTE3(v80) < 0) {
        operator delete(buf);
      }
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      uint64_t v22 = qword_101934838;
      sub_100FE4F50((int *)a2, v72);
      if (v73 >= 0) {
        int v23 = v72;
      }
      else {
        int v23 = *(uint8_t **)v72;
      }
      *(_DWORD *)__int16 v63 = 136315138;
      *(void *)&v63[4] = v23;
      int v19 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v22,  2LL,  "#locctl,#rec,recordMessage,CLAppMonitor_Type,unsupported message type,%s",  v63);
      if (v73 < 0) {
        operator delete(*(void **)v72);
      }
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType &, const CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, const CLAppMonitor_Type::Notification &, const CLAppMonitor_Type::NotificationData &)",  "%s\n",  v19);
    }
  }

void sub_10037BA30( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *__p, uint64_t a19, int a20, __int16 a21, char a22, char a23, void *a24, uint64_t a25, int a26, __int16 a27, char a28, char a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, int a36, __int16 a37, char a38, char a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, char a45)
{
}

uint64_t sub_10037BB1C(int *a1)
{
  uint64_t v2 = *a1;
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101834AA8);
  }
  int v3 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    int v4 = *a1;
    *(_DWORD *)buf = 67109120;
    int v10 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,convertAppMonitorNotificationTypeToProtobuf,unhandled type,%d",  buf,  8u);
  }

  uint64_t result = sub_1002921D0(115, 2);
  if ((_DWORD)result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    int v6 = *a1;
    v8[0] = 67109120;
    v8[1] = v6;
    int v7 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,convertAppMonitorNotificationTypeToProtobuf,unhandled type,%d",  v8);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static CLP::LogEntry::PrivateData::AppMonitorNotification_NotificationType CLLocationControllerRecorder::convertAp pMonitorNotificationTypeToProtobuf(const CLAppMonitor_Type::Notification &)",  "%s\n",  v7);
    return 0LL;
  }

  return result;
}

void sub_10037BCF4(uint64_t a1, unsigned int *a2, int32x4_t *a3, int *a4, int *a5, int *a6)
{
  if (!*(void *)(a1 + 16)) {
    return;
  }
  if (*a2 == 4)
  {
    if ((vmaxv_u16((uint16x4_t)vmovn_s32(vceqzq_s32(*a3))) & 1) != 0)
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      int v9 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        if (a3->i32[0]) {
          BOOL v10 = a3->i32[1] == 0;
        }
        else {
          BOOL v10 = 1;
        }
        int v11 = !v10;
        if (*a4) {
          BOOL v12 = a4[1] == 0;
        }
        else {
          BOOL v12 = 1;
        }
        int v13 = !v12;
        LODWORD(buf) = 67109376;
        HIDWORD(buf) = v11;
        __int16 v73 = 1024;
        LODWORD(v74) = v13;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLLocationProvider_Type,silo entry invalid,from_valid,%d,to_valid,%d",  (uint8_t *)&buf,  0xEu);
      }

      if (!sub_1002921D0(115, 2)) {
        return;
      }
      bzero(&buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      BOOL v14 = !a3->i32[0] || a3->i32[1] == 0;
      BOOL v15 = !v14;
      BOOL v16 = !*a4 || a4[1] == 0;
      BOOL v17 = !v16;
      *(_DWORD *)char v59 = 67109376;
      *(_DWORD *)&v59[4] = v15;
      *(_WORD *)&v59[8] = 1024;
      *(_DWORD *)&v59[10] = v17;
      BOOL v18 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,recordMessage,CLLocationProvider_Type,silo entry invalid,from_valid,%d,to_valid,%d",  v59,  14);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType &, const CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, const CLLocationProvider_Type::Notification &)",  "%s\n",  v18);
LABEL_54:
      free(v18);
      return;
    }

    sub_100EDE11C(&v68);
    int v26 = (__n128 *)sub_10080E94C();
    sub_10080ED44(v26, v58);
    sub_100372734((uint64_t)&v68, a2, a3, a4, (uint64_t *)v58);
    v71 |= 2u;
    int v27 = v70;
    if (!v70)
    {
      int v27 = operator new(0x1F0uLL);
      sub_1005E5F30((uint64_t)v27);
      __int16 v70 = v27;
    }

    v27[123] |= 0x800u;
    uint64_t v28 = (_DWORD *)*((void *)v27 + 44);
    if (!v28)
    {
      uint64_t v28 = operator new(0xC0uLL);
      sub_100B1FFB4((uint64_t)v28);
      *((void *)v27 + 44) = v28;
    }

    v28[46] |= 0x10000u;
    uint64_t v29 = (_DWORD *)*((void *)v28 + 16);
    if (!v29)
    {
      uint64_t v29 = operator new(0x28uLL);
      sub_100B1FE88((uint64_t)v29);
      *((void *)v28 + 16) = v29;
    }

    int v30 = *a5;
    v29[9] |= 1u;
    v29[2] = v30;
    unsigned int v31 = sub_100F8B3B0(a6);
    if (!sub_100B2BA60(v31)) {
      __assert_rtn( "set_notification_type",  "CLPLocationController.pb.h",  9437,  "::CLP::LogEntry::PrivateData::LocationProviderNotification_NotificationType_IsValid(value)");
    }
    v29[9] |= 2u;
    v29[3] = v31;
    int v32 = sub_100371ED0(a1, (uint64_t)&v68);
    if (*(_BYTE *)(a1 + 8))
    {
      int v33 = v32;
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      int v34 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        sub_100FE4F50((int *)a2, v59);
        if (SBYTE3(v61) >= 0) {
          int v35 = v59;
        }
        else {
          int v35 = *(_BYTE **)v59;
        }
        double v49 = v35;
        LODWORD(v51[0]) = a3->i32[0];
        sub_100FE5218((int *)v51, v56);
        if (v57 >= 0) {
          int v36 = v56;
        }
        else {
          int v36 = (void **)v56[0];
        }
        int v53 = *a4;
        int v37 = __p;
        sub_100FE5218(&v53, __p);
        if (v55 < 0) {
          int v37 = (void **)__p[0];
        }
        int v38 = sub_10100D9D8(*a6);
        uint64_t v39 = sub_10080E94C();
        double v40 = sub_10080EF30(v39);
        LODWORD(buf) = 67110402;
        HIDWORD(buf) = v33;
        __int16 v73 = 2080;
        __int16 v74 = v49;
        __int16 v75 = 2080;
        __int16 v76 = v36;
        __int16 v77 = 2080;
        __int16 v78 = v37;
        __int16 v79 = 2080;
        __int16 v80 = v38;
        __int16 v81 = 2050;
        double v82 = v40;
        _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLLocationProvider_Type,success,%d,message_type,%s,from,%s,to,%s,notification_type, %s,propagation_us,%{public}.3f",  (uint8_t *)&buf,  0x3Au);
        if (v55 < 0) {
          operator delete(__p[0]);
        }
        if (v57 < 0) {
          operator delete(v56[0]);
        }
        if (SBYTE3(v61) < 0) {
          operator delete(*(void **)v59);
        }
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101834AA8);
        }
        uint64_t v41 = qword_101934838;
        sub_100FE4F50((int *)a2, v56);
        if (v57 >= 0) {
          uint64_t v42 = v56;
        }
        else {
          uint64_t v42 = (void **)v56[0];
        }
        int v53 = a3->i32[0];
        int v43 = __p;
        sub_100FE5218(&v53, __p);
        if (v55 < 0) {
          int v43 = (void **)__p[0];
        }
        int v50 = *a4;
        sub_100FE5218(&v50, v51);
        if (v52 >= 0) {
          uint64_t v44 = v51;
        }
        else {
          uint64_t v44 = (void **)v51[0];
        }
        double v45 = sub_10100D9D8(*a6);
        uint64_t v46 = sub_10080E94C();
        double v47 = sub_10080EF30(v46);
        *(_DWORD *)char v59 = 67110402;
        *(_DWORD *)&v59[4] = v33;
        *(_WORD *)&v59[8] = 2080;
        *(void *)&v59[10] = v42;
        __int16 v60 = 2080;
        char v61 = v43;
        __int16 v62 = 2080;
        __int16 v63 = v44;
        __int16 v64 = 2080;
        __int16 v65 = v45;
        __int16 v66 = 2050;
        double v67 = v47;
        uint64_t v48 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v41,  2LL,  "#locctl,#rec,recordMessage,CLLocationProvider_Type,success,%d,message_type,%s,from,%s,to,%s,noti fication_type,%s,propagation_us,%{public}.3f",  v59,  58);
        if (v52 < 0) {
          operator delete(v51[0]);
        }
        if (v55 < 0) {
          operator delete(__p[0]);
        }
        if (v57 < 0) {
          operator delete(v56[0]);
        }
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType &, cons t CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, c onst CLLocationProvider_Type::Notification &)",  "%s\n",  v48);
      }
    }

    sub_100EDE8A8(&v68);
  }

  else
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    int v19 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      sub_100FE4F50((int *)a2, &buf);
      std::string v20 = SBYTE3(v76) >= 0 ? &buf : (void **)buf;
      *(_DWORD *)char v59 = 136315138;
      *(void *)&v59[4] = v20;
      _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLLocationProvider_Type,unsupported message type,%s",  v59,  0xCu);
      if (SBYTE3(v76) < 0) {
        operator delete(buf);
      }
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      uint64_t v21 = qword_101934838;
      sub_100FE4F50((int *)a2, v59);
      if (SBYTE3(v61) >= 0) {
        uint64_t v22 = v59;
      }
      else {
        uint64_t v22 = *(_BYTE **)v59;
      }
      int v68 = 136315138;
      int v69 = v22;
      BOOL v18 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v21,  2LL,  "#locctl,#rec,recordMessage,CLLocationProvider_Type,unsupported message type,%s",  (const char *)&v68);
      if (SBYTE3(v61) < 0) {
        operator delete(*(void **)v59);
      }
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType &, const CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, const CLLocationProvider_Type::Notification &)",  "%s\n",  v18);
    }
  }

void sub_10037C538( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *__p, uint64_t a21, int a22, __int16 a23, char a24, char a25, void *a26, uint64_t a27, int a28, __int16 a29, char a30, char a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, int a38, __int16 a39, char a40, char a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, char a47)
{
}

void sub_10037C614(uint64_t a1, unsigned int *a2, int32x4_t *a3, int *a4, int *a5, int *a6, uint64_t a7)
{
  if (!*(void *)(a1 + 16)) {
    return;
  }
  if (*a2 == 4)
  {
    if ((vmaxv_u16((uint16x4_t)vmovn_s32(vceqzq_s32(*a3))) & 1) != 0)
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      BOOL v10 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        if (a3->i32[0]) {
          BOOL v11 = a3->i32[1] == 0;
        }
        else {
          BOOL v11 = 1;
        }
        int v12 = !v11;
        if (*a4) {
          BOOL v13 = a4[1] == 0;
        }
        else {
          BOOL v13 = 1;
        }
        int v14 = !v13;
        *(_DWORD *)buf = 67109376;
        *(_DWORD *)&uint8_t buf[4] = v12;
        *(_WORD *)&uint8_t buf[8] = 1024;
        *(_DWORD *)&buf[10] = v14;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLLocationProvider_Type,silo entry invalid,from_valid,%d,to_valid,%d",  buf,  0xEu);
      }

      if (!sub_1002921D0(115, 2)) {
        return;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      BOOL v15 = !a3->i32[0] || a3->i32[1] == 0;
      BOOL v16 = !v15;
      BOOL v17 = !*a4 || a4[1] == 0;
      BOOL v18 = !v17;
      *(_DWORD *)v106 = 67109376;
      *(_DWORD *)&v106[4] = v16;
      *(_WORD *)&v106[8] = 1024;
      *(_DWORD *)&v106[10] = v18;
      int v19 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,recordMessage,CLLocationProvider_Type,silo entry invalid,from_valid,%d,to_valid,%d",  v106,  14);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType &, const CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, const CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::NotificationData &)",  "%s\n",  v19);
      if (v19 == buf) {
        return;
      }
LABEL_54:
      free(v19);
      return;
    }

    sub_100EDE11C(&v111);
    uint64_t v28 = (__n128 *)sub_10080E94C();
    sub_10080ED44(v28, v105);
    sub_100372734((uint64_t)&v111, a2, a3, a4, (uint64_t *)v105);
    v114 |= 2u;
    uint64_t v29 = v113;
    if (!v113)
    {
      uint64_t v29 = operator new(0x1F0uLL);
      sub_1005E5F30((uint64_t)v29);
      v113 = v29;
    }

    v29[123] |= 0x800u;
    int v30 = (_DWORD *)*((void *)v29 + 44);
    if (!v30)
    {
      int v30 = operator new(0xC0uLL);
      sub_100B1FFB4((uint64_t)v30);
      *((void *)v29 + 44) = v30;
    }

    v30[46] |= 0x10000u;
    unsigned int v31 = (_DWORD *)*((void *)v30 + 16);
    if (!v31)
    {
      unsigned int v31 = operator new(0x28uLL);
      sub_100B1FE88((uint64_t)v31);
      *((void *)v30 + 16) = v31;
    }

    int v32 = *a5;
    v31[9] |= 1u;
    v31[2] = v32;
    unsigned int v33 = sub_100F8B3B0(a6);
    if (!sub_100B2BA60(v33)) {
      __assert_rtn( "set_notification_type",  "CLPLocationController.pb.h",  9437,  "::CLP::LogEntry::PrivateData::LocationProviderNotification_NotificationType_IsValid(value)");
    }
    int v34 = v31[9];
    v31[3] = v33;
    v31[9] = v34 | 6;
    int v35 = (_DWORD *)*((void *)v31 + 2);
    if (!v35)
    {
      int v35 = operator new(0x78uLL);
      sub_100B1FEA4((uint64_t)v35);
      *((void *)v31 + 2) = v35;
    }

    int v36 = *a6;
    if (*a6 > 35)
    {
      switch(v36)
      {
        case '$':
          double v40 = sub_10037D470((uint64_t)v35);
          sub_100F8C534(a7 + 1328, (uint64_t)v40);
          goto LABEL_88;
        case ')':
          int v72 = sub_10037D4CC((uint64_t)v35);
          sub_100F8C4A4(a7 + 1448, (uint64_t)v72);
          goto LABEL_88;
        case '*':
          int v38 = sub_10037D528((uint64_t)v35);
          char v39 = *(_BYTE *)(a7 + 1480);
          v38[4] |= 1u;
          *((_BYTE *)v38 + 8) = v39;
          goto LABEL_88;
      }
    }

    else
    {
      switch(v36)
      {
        case 9:
LABEL_88:
          int v73 = sub_100371ED0(a1, (uint64_t)&v111);
          if (*(_BYTE *)(a1 + 8))
          {
            int v74 = v73;
            if (qword_101934830 != -1) {
              dispatch_once(&qword_101934830, &stru_101834AA8);
            }
            __int16 v75 = (os_log_s *)qword_101934838;
            if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
            {
              sub_100FE4F50((int *)a2, v106);
              if (v106[23] >= 0) {
                __int16 v76 = v106;
              }
              else {
                __int16 v76 = *(_BYTE **)v106;
              }
              LODWORD(v98[0]) = a3->i32[0];
              sub_100FE5218((int *)v98, v103);
              if (v104 >= 0) {
                __int16 v77 = v103;
              }
              else {
                __int16 v77 = (void **)v103[0];
              }
              int v100 = *a4;
              __int16 v78 = __p;
              sub_100FE5218(&v100, __p);
              if (v102 < 0) {
                __int16 v78 = (void **)__p[0];
              }
              __int16 v79 = sub_10100D9D8(*a6);
              uint64_t v80 = sub_10080E94C();
              double v81 = sub_10080EF30(v80);
              *(_DWORD *)buf = 67110402;
              *(_DWORD *)&uint8_t buf[4] = v74;
              *(_WORD *)&uint8_t buf[8] = 2080;
              *(void *)&buf[10] = v76;
              *(_WORD *)&_BYTE buf[18] = 2080;
              *(void *)&buf[20] = v77;
              *(_WORD *)&_BYTE buf[28] = 2080;
              *(void *)&buf[30] = v78;
              __int16 v116 = 2080;
              uint64_t v117 = v79;
              __int16 v118 = 2050;
              double v119 = v81;
              _os_log_impl( (void *)&_mh_execute_header,  v75,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLLocationProvider_Type,success,%d,message_type,%s,from,%s,to,%s,notification _type,%s,propagation_us,%{public}.3f",  buf,  0x3Au);
              if (v102 < 0) {
                operator delete(__p[0]);
              }
              if (v104 < 0) {
                operator delete(v103[0]);
              }
              if ((v106[23] & 0x80000000) != 0) {
                operator delete(*(void **)v106);
              }
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_101934830 != -1) {
                dispatch_once(&qword_101934830, &stru_101834AA8);
              }
              uint64_t v82 = qword_101934838;
              sub_100FE4F50((int *)a2, v103);
              if (v104 >= 0) {
                __int16 v83 = v103;
              }
              else {
                __int16 v83 = (void **)v103[0];
              }
              int v100 = a3->i32[0];
              int v84 = __p;
              sub_100FE5218(&v100, __p);
              if (v102 < 0) {
                int v84 = (void **)__p[0];
              }
              int v97 = *a4;
              sub_100FE5218(&v97, v98);
              if (v99 >= 0) {
                __int16 v85 = v98;
              }
              else {
                __int16 v85 = (void **)v98[0];
              }
              double v86 = sub_10100D9D8(*a6);
              uint64_t v87 = sub_10080E94C();
              double v88 = sub_10080EF30(v87);
              *(_DWORD *)v106 = 67110402;
              *(_DWORD *)&v106[4] = v74;
              *(_WORD *)&v106[8] = 2080;
              *(void *)&v106[10] = v83;
              *(_WORD *)&v106[18] = 2080;
              *(void *)&v106[20] = v84;
              *(_WORD *)&v106[28] = 2080;
              *(void *)&v106[30] = v85;
              __int16 v107 = 2080;
              double v108 = v86;
              __int16 v109 = 2050;
              double v110 = v88;
              LODWORD(v95) = 58;
              __int16 v89 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v82,  2LL,  "#locctl,#rec,recordMessage,CLLocationProvider_Type,success,%d,message_type,%s,from,%s,to,% s,notification_type,%s,propagation_us,%{public}.3f",  v106,  v95);
              if (v99 < 0) {
                operator delete(v98[0]);
              }
              if (v102 < 0) {
                operator delete(__p[0]);
              }
              if (v104 < 0) {
                operator delete(v103[0]);
              }
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType & , const CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, co nst int &, const CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::NotificationData &)",  "%s\n",  v89);
              if (v89 != buf) {
                free(v89);
              }
            }
          }

          sub_100EDE8A8(&v111);
          return;
        case 11:
          uint64_t v70 = *(void *)(a7 + 816);
          int v71 = sub_10037D3D4((uint64_t)v35);
          sub_100F84894(v70, (uint64_t)v71);
          goto LABEL_88;
        case 18:
          unsigned int v37 = sub_100F852DC((unsigned int *)(a7 + 840));
          sub_10037D430((uint64_t)v35, v37);
          goto LABEL_88;
      }
    }

    uint64_t v41 = sub_10037D584((uint64_t)v35);
    sub_100F82504(a7, (uint64_t)v41);
    uint64_t v42 = sub_10037D5E0((uint64_t)v35);
    sub_100F83250(a7 + 160, (uint64_t)v42);
    if (*(void *)(a7 + 800))
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      int v43 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        LODWORD(v103[0]) = a3->i32[0];
        sub_100FE5218((int *)v103, v106);
        uint64_t v44 = v106[23] >= 0 ? v106 : *(_BYTE **)v106;
        v96 = v44;
        double v45 = sub_10100D9D8(*a6);
        uint64_t v46 = sub_100CBED60(*(int **)(a7 + 800));
        *(_DWORD *)buf = 136315650;
        *(void *)&uint8_t buf[4] = v96;
        *(_WORD *)&_BYTE buf[12] = 2080;
        *(void *)&buf[14] = v45;
        *(_WORD *)&buf[22] = 2048;
        *(void *)&buf[24] = v46;
        _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,received #batchedlocations,from,%s,notification,%s,size,%zu",  buf,  0x20u);
        if ((v106[23] & 0x80000000) != 0) {
          operator delete(*(void **)v106);
        }
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101834AA8);
        }
        uint64_t v90 = qword_101934838;
        LODWORD(__p[0]) = a3->i32[0];
        __int16 v91 = v103;
        sub_100FE5218((int *)__p, v103);
        if (v104 < 0) {
          __int16 v91 = (void **)v103[0];
        }
        double v92 = sub_10100D9D8(*a6);
        uint64_t v93 = sub_100CBED60(*(int **)(a7 + 800));
        *(_DWORD *)v106 = 136315650;
        *(void *)&v106[4] = v91;
        *(_WORD *)&v106[12] = 2080;
        *(void *)&v106[14] = v92;
        *(_WORD *)&v106[22] = 2048;
        *(void *)&v106[24] = v93;
        int v94 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v90,  2LL,  "#locctl,#rec,received #batchedlocations,from,%s,notification,%s,size,%zu",  v106,  32,  (size_t)v96);
        if (v104 < 0) {
          operator delete(v103[0]);
        }
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType &, cons t CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, c onst CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::NotificationData &)",  "%s\n",  v94);
        if (v94 != buf) {
          free(v94);
        }
      }

      double v47 = *(int **)(a7 + 800);
      uint64_t v48 = (int *)sub_10037D63C((uint64_t)v35);
      sub_100F8B200(v47, v48);
    }

    int v49 = v35[28];
    *((_BYTE *)v35 + 48) = *(_BYTE *)(a7 + 824);
    uint64_t v50 = *(void *)(a7 + 832);
    v35[28] = v49 | 0x30;
    *((void *)v35 + 5) = v50;
    uint64_t v51 = sub_10037D698((uint64_t)v35);
    uint64_t v52 = *(void *)(a7 + 856);
    v51[11] |= 1u;
    *((void *)v51 + 1) = v52;
    int v53 = sub_10037D698((uint64_t)v35);
    uint64_t v54 = *(void *)(a7 + 848);
    v53[11] |= 2u;
    *((void *)v53 + 2) = v54;
    char v55 = sub_10037D698((uint64_t)v35);
    uint64_t v56 = *(void *)(a7 + 864);
    v55[11] |= 4u;
    *((void *)v55 + 3) = v56;
    char v57 = sub_10037D698((uint64_t)v35);
    uint64_t v58 = *(void *)(a7 + 872);
    v57[11] |= 8u;
    *((void *)v57 + 4) = v58;
    char v59 = sub_10037D6F4((uint64_t)v35);
    uint64_t v60 = *(void *)(a7 + 888);
    *((_DWORD *)v59 + 7) |= 1u;
    v59[1] = v60;
    char v61 = sub_10037D6F4((uint64_t)v35);
    uint64_t v62 = *(void *)(a7 + 880);
    *((_DWORD *)v61 + 7) |= 2u;
    v61[2] = v62;
    unsigned int v63 = sub_100F854A4((unsigned int *)(a7 + 928));
    sub_10037D750((uint64_t)v35, v63);
    __int16 v64 = sub_10037D790((uint64_t)v35);
    uint64_t v65 = *(void *)(a7 + 944);
    v64[9] |= 1u;
    *((void *)v64 + 1) = v65;
    __int16 v66 = sub_10037D790((uint64_t)v35);
    uint64_t v67 = *(void *)(a7 + 936);
    v66[9] |= 2u;
    *((void *)v66 + 2) = v67;
    int v68 = sub_10037D790((uint64_t)v35);
    uint64_t v69 = *(void *)(a7 + 952);
    v68[9] |= 4u;
    *((void *)v68 + 3) = v69;
    goto LABEL_88;
  }

  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101834AA8);
  }
  std::string v20 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    sub_100FE4F50((int *)a2, buf);
    uint64_t v21 = buf[23] >= 0 ? buf : *(_BYTE **)buf;
    *(_DWORD *)v106 = 136315138;
    *(void *)&v106[4] = v21;
    _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLLocationProvider_Type,unsupported message type,%s",  v106,  0xCu);
    if ((buf[23] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    uint64_t v22 = qword_101934838;
    sub_100FE4F50((int *)a2, v106);
    if (v106[23] >= 0) {
      int v23 = v106;
    }
    else {
      int v23 = *(_BYTE **)v106;
    }
    int v111 = 136315138;
    double v112 = v23;
    int v19 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v22,  2LL,  "#locctl,#rec,recordMessage,CLLocationProvider_Type,unsupported message type,%s",  (const char *)&v111);
    if ((v106[23] & 0x80000000) != 0) {
      operator delete(*(void **)v106);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::MessageType &, const CL LocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, const CLL ocationProvider_Type::Notification &, const CLLocationProvider_Type::NotificationData &)",  "%s\n",  v19);
    if (v19 != buf) {
      goto LABEL_54;
    }
  }

void sub_10037D2D4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20, uint64_t a21, int a22, __int16 a23, char a24, char a25, void *__p, uint64_t a27, int a28, __int16 a29, char a30, char a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, int a38, __int16 a39, char a40, char a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, char a47)
{
}

void *sub_10037D3D4(uint64_t a1)
{
  *(_DWORD *)(a1 + 112) |= 8u;
  uint64_t v1 = *(void **)(a1 + 32);
  if (!v1)
  {
    uint64_t v1 = operator new(0x18uLL);
    sub_1001D2574((uint64_t)v1);
    *(void *)(a1 + 32) = v1;
  }

  return v1;
}

void sub_10037D41C(_Unwind_Exception *a1)
{
}

BOOL sub_10037D430(uint64_t a1, unsigned int a2)
{
  BOOL result = sub_1000641E0(a2);
  if (!result) {
    sub_101236594();
  }
  *(_DWORD *)(a1 + 112) |= 0x40u;
  *(_DWORD *)(a1 + 52) = a2;
  return result;
}

void *sub_10037D470(uint64_t a1)
{
  *(_DWORD *)(a1 + 112) |= 0x800u;
  uint64_t v1 = *(void **)(a1 + 80);
  if (!v1)
  {
    uint64_t v1 = operator new(0x28uLL);
    sub_1001D2A5C((uint64_t)v1);
    *(void *)(a1 + 80) = v1;
  }

  return v1;
}

void sub_10037D4B8(_Unwind_Exception *a1)
{
}

void *sub_10037D4CC(uint64_t a1)
{
  *(_DWORD *)(a1 + 112) |= 0x1000u;
  uint64_t v1 = *(void **)(a1 + 88);
  if (!v1)
  {
    uint64_t v1 = operator new(0x20uLL);
    sub_1001D2630((uint64_t)v1);
    *(void *)(a1 + 88) = v1;
  }

  return v1;
}

void sub_10037D514(_Unwind_Exception *a1)
{
}

void *sub_10037D528(uint64_t a1)
{
  *(_DWORD *)(a1 + 112) |= 0x2000u;
  uint64_t v1 = *(void **)(a1 + 96);
  if (!v1)
  {
    uint64_t v1 = operator new(0x18uLL);
    sub_1001D2658((uint64_t)v1);
    *(void *)(a1 + 96) = v1;
  }

  return v1;
}

void sub_10037D570(_Unwind_Exception *a1)
{
}

void *sub_10037D584(uint64_t a1)
{
  *(_DWORD *)(a1 + 112) |= 1u;
  uint64_t v1 = *(void **)(a1 + 8);
  if (!v1)
  {
    uint64_t v1 = operator new(0xA0uLL);
    sub_1001D2438((uint64_t)v1);
    *(void *)(a1 + 8) = v1;
  }

  return v1;
}

void sub_10037D5CC(_Unwind_Exception *a1)
{
}

void *sub_10037D5E0(uint64_t a1)
{
  *(_DWORD *)(a1 + 112) |= 2u;
  uint64_t v1 = *(void **)(a1 + 16);
  if (!v1)
  {
    uint64_t v1 = operator new(0x178uLL);
    sub_1001D24CC((uint64_t)v1);
    *(void *)(a1 + 16) = v1;
  }

  return v1;
}

void sub_10037D628(_Unwind_Exception *a1)
{
}

void *sub_10037D63C(uint64_t a1)
{
  *(_DWORD *)(a1 + 112) |= 4u;
  uint64_t v1 = *(void **)(a1 + 24);
  if (!v1)
  {
    uint64_t v1 = operator new(0x40uLL);
    sub_1001D260C((uint64_t)v1);
    *(void *)(a1 + 24) = v1;
  }

  return v1;
}

void sub_10037D684(_Unwind_Exception *a1)
{
}

void *sub_10037D698(uint64_t a1)
{
  *(_DWORD *)(a1 + 112) |= 0x80u;
  uint64_t v1 = *(void **)(a1 + 56);
  if (!v1)
  {
    uint64_t v1 = operator new(0x30uLL);
    sub_1001D2590((uint64_t)v1);
    *(void *)(a1 + 56) = v1;
  }

  return v1;
}

void sub_10037D6E0(_Unwind_Exception *a1)
{
}

void *sub_10037D6F4(uint64_t a1)
{
  *(_DWORD *)(a1 + 112) |= 0x100u;
  uint64_t v1 = *(void **)(a1 + 64);
  if (!v1)
  {
    uint64_t v1 = operator new(0x20uLL);
    sub_1001D25B0(v1);
    *(void *)(a1 + 64) = v1;
  }

  return v1;
}

void sub_10037D73C(_Unwind_Exception *a1)
{
}

BOOL sub_10037D750(uint64_t a1, unsigned int a2)
{
  BOOL result = sub_1000641E0(a2);
  if (!result) {
    sub_1012365BC();
  }
  *(_DWORD *)(a1 + 112) |= 0x200u;
  *(_DWORD *)(a1 + 104) = a2;
  return result;
}

void *sub_10037D790(uint64_t a1)
{
  *(_DWORD *)(a1 + 112) |= 0x400u;
  uint64_t v1 = *(void **)(a1 + 72);
  if (!v1)
  {
    uint64_t v1 = operator new(0x28uLL);
    sub_1001D25C4((uint64_t)v1);
    *(void *)(a1 + 72) = v1;
  }

  return v1;
}

void sub_10037D7D8(_Unwind_Exception *a1)
{
}

void sub_10037D7EC(uint64_t a1, unsigned int *a2, int32x4_t *a3, int *a4, int *a5, int *a6)
{
  if (!*(void *)(a1 + 16)) {
    return;
  }
  if ((*a2 & 0xFFFFFFFE) == 2)
  {
    if ((vmaxv_u16((uint16x4_t)vmovn_s32(vceqzq_s32(*a3))) & 1) != 0)
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      int v9 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        if (a3->i32[0]) {
          BOOL v10 = a3->i32[1] == 0;
        }
        else {
          BOOL v10 = 1;
        }
        int v11 = !v10;
        if (*a4) {
          BOOL v12 = a4[1] == 0;
        }
        else {
          BOOL v12 = 1;
        }
        int v13 = !v12;
        LODWORD(buf) = 67109376;
        HIDWORD(buf) = v11;
        __int16 v73 = 1024;
        LODWORD(v74) = v13;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordRegistration,CLLocationProvider_Type,silo entry invalid,from_valid,%d,to_valid,%d",  (uint8_t *)&buf,  0xEu);
      }

      if (!sub_1002921D0(115, 2)) {
        return;
      }
      bzero(&buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      BOOL v14 = !a3->i32[0] || a3->i32[1] == 0;
      BOOL v15 = !v14;
      BOOL v16 = !*a4 || a4[1] == 0;
      BOOL v17 = !v16;
      *(_DWORD *)char v59 = 67109376;
      *(_DWORD *)&v59[4] = v15;
      *(_WORD *)&v59[8] = 1024;
      *(_DWORD *)&v59[10] = v17;
      BOOL v18 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,recordRegistration,CLLocationProvider_Type,silo entry invalid,from_valid,%d,to_valid,%d",  v59,  14);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordRegistration(const CLLocationControllerRecorder_Types::MessageType &, c onst CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, const CLLocationProvider_Type::Notification &)",  "%s\n",  v18);
LABEL_54:
      free(v18);
      return;
    }

    sub_100EDE11C(&v68);
    int v26 = (__n128 *)sub_10080E94C();
    sub_10080ED44(v26, v58);
    sub_100372734((uint64_t)&v68, a2, a3, a4, (uint64_t *)v58);
    v71 |= 2u;
    int v27 = v70;
    if (!v70)
    {
      int v27 = operator new(0x1F0uLL);
      sub_1005E5F30((uint64_t)v27);
      uint64_t v70 = v27;
    }

    v27[123] |= 0x800u;
    uint64_t v28 = (_DWORD *)*((void *)v27 + 44);
    if (!v28)
    {
      uint64_t v28 = operator new(0xC0uLL);
      sub_100B1FFB4((uint64_t)v28);
      *((void *)v27 + 44) = v28;
    }

    v28[46] |= 0x10000u;
    uint64_t v29 = (_DWORD *)*((void *)v28 + 16);
    if (!v29)
    {
      uint64_t v29 = operator new(0x28uLL);
      sub_100B1FE88((uint64_t)v29);
      *((void *)v28 + 16) = v29;
    }

    int v30 = *a5;
    v29[9] |= 1u;
    v29[2] = v30;
    unsigned int v31 = sub_100F8B3B0(a6);
    if (!sub_100B2BA60(v31)) {
      __assert_rtn( "set_notification_type",  "CLPLocationController.pb.h",  9437,  "::CLP::LogEntry::PrivateData::LocationProviderNotification_NotificationType_IsValid(value)");
    }
    v29[9] |= 2u;
    v29[3] = v31;
    int v32 = sub_100371ED0(a1, (uint64_t)&v68);
    if (*(_BYTE *)(a1 + 8))
    {
      int v33 = v32;
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      int v34 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        sub_100FE4F50((int *)a2, v59);
        if (SBYTE3(v61) >= 0) {
          int v35 = v59;
        }
        else {
          int v35 = *(_BYTE **)v59;
        }
        int v49 = v35;
        LODWORD(v51[0]) = a3->i32[0];
        sub_100FE5218((int *)v51, v56);
        if (v57 >= 0) {
          int v36 = v56;
        }
        else {
          int v36 = (void **)v56[0];
        }
        int v53 = *a4;
        unsigned int v37 = __p;
        sub_100FE5218(&v53, __p);
        if (v55 < 0) {
          unsigned int v37 = (void **)__p[0];
        }
        int v38 = sub_10100D9D8(*a6);
        uint64_t v39 = sub_10080E94C();
        double v40 = sub_10080EF30(v39);
        LODWORD(buf) = 67110402;
        HIDWORD(buf) = v33;
        __int16 v73 = 2080;
        int v74 = v49;
        __int16 v75 = 2080;
        __int16 v76 = v36;
        __int16 v77 = 2080;
        __int16 v78 = v37;
        __int16 v79 = 2080;
        uint64_t v80 = v38;
        __int16 v81 = 2050;
        double v82 = v40;
        _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordRegistration,CLLocationProvider_Type,success,%d,message_type,%s,from,%s,to,%s,notification_ type,%s,propagation_us,%{public}.3f",  (uint8_t *)&buf,  0x3Au);
        if (v55 < 0) {
          operator delete(__p[0]);
        }
        if (v57 < 0) {
          operator delete(v56[0]);
        }
        if (SBYTE3(v61) < 0) {
          operator delete(*(void **)v59);
        }
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101834AA8);
        }
        uint64_t v41 = qword_101934838;
        sub_100FE4F50((int *)a2, v56);
        if (v57 >= 0) {
          uint64_t v42 = v56;
        }
        else {
          uint64_t v42 = (void **)v56[0];
        }
        int v53 = a3->i32[0];
        int v43 = __p;
        sub_100FE5218(&v53, __p);
        if (v55 < 0) {
          int v43 = (void **)__p[0];
        }
        int v50 = *a4;
        sub_100FE5218(&v50, v51);
        if (v52 >= 0) {
          uint64_t v44 = v51;
        }
        else {
          uint64_t v44 = (void **)v51[0];
        }
        double v45 = sub_10100D9D8(*a6);
        uint64_t v46 = sub_10080E94C();
        double v47 = sub_10080EF30(v46);
        *(_DWORD *)char v59 = 67110402;
        *(_DWORD *)&v59[4] = v33;
        *(_WORD *)&v59[8] = 2080;
        *(void *)&v59[10] = v42;
        __int16 v60 = 2080;
        char v61 = v43;
        __int16 v62 = 2080;
        unsigned int v63 = v44;
        __int16 v64 = 2080;
        uint64_t v65 = v45;
        __int16 v66 = 2050;
        double v67 = v47;
        uint64_t v48 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v41,  2LL,  "#locctl,#rec,recordRegistration,CLLocationProvider_Type,success,%d,message_type,%s,from,%s,to,%s ,notification_type,%s,propagation_us,%{public}.3f",  v59,  58);
        if (v52 < 0) {
          operator delete(v51[0]);
        }
        if (v55 < 0) {
          operator delete(__p[0]);
        }
        if (v57 < 0) {
          operator delete(v56[0]);
        }
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordRegistration(const CLLocationControllerRecorder_Types::MessageType &, const CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, const CLLocationProvider_Type::Notification &)",  "%s\n",  v48);
      }
    }

    sub_100EDE8A8(&v68);
  }

  else
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    int v19 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      sub_100FE4F50((int *)a2, &buf);
      std::string v20 = SBYTE3(v76) >= 0 ? &buf : (void **)buf;
      *(_DWORD *)char v59 = 136315138;
      *(void *)&v59[4] = v20;
      _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordRegistration,CLLocationProvider_Type,unsupported message type,%s",  v59,  0xCu);
      if (SBYTE3(v76) < 0) {
        operator delete(buf);
      }
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      uint64_t v21 = qword_101934838;
      sub_100FE4F50((int *)a2, v59);
      if (SBYTE3(v61) >= 0) {
        uint64_t v22 = v59;
      }
      else {
        uint64_t v22 = *(_BYTE **)v59;
      }
      int v68 = 136315138;
      uint64_t v69 = v22;
      BOOL v18 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v21,  2LL,  "#locctl,#rec,recordRegistration,CLLocationProvider_Type,unsupported message type,%s",  (const char *)&v68);
      if (SBYTE3(v61) < 0) {
        operator delete(*(void **)v59);
      }
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordRegistration(const CLLocationControllerRecorder_Types::MessageType &, c onst CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, const CLLocationProvider_Type::Notification &)",  "%s\n",  v18);
    }
  }

void sub_10037E034( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *__p, uint64_t a21, int a22, __int16 a23, char a24, char a25, void *a26, uint64_t a27, int a28, __int16 a29, char a30, char a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, int a38, __int16 a39, char a40, char a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, char a47)
{
}

void sub_10037E110(uint64_t a1, unsigned int *a2, int32x4_t *a3, int *a4, int *a5, int *a6, uint64_t a7)
{
  if (!*(void *)(a1 + 16)) {
    return;
  }
  if ((*a2 & 0xFFFFFFFE) == 2)
  {
    if ((vmaxv_u16((uint16x4_t)vmovn_s32(vceqzq_s32(*a3))) & 1) != 0)
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      BOOL v10 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        if (a3->i32[0]) {
          BOOL v11 = a3->i32[1] == 0;
        }
        else {
          BOOL v11 = 1;
        }
        int v12 = !v11;
        if (*a4) {
          BOOL v13 = a4[1] == 0;
        }
        else {
          BOOL v13 = 1;
        }
        int v14 = !v13;
        LODWORD(buf) = 67109376;
        HIDWORD(buf) = v12;
        __int16 v83 = 1024;
        LODWORD(v84) = v14;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordRegistration,CLLocationProvider_Type,silo entry invalid,from_valid,%d,to_valid,%d",  (uint8_t *)&buf,  0xEu);
      }

      if (!sub_1002921D0(115, 2)) {
        return;
      }
      bzero(&buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      BOOL v15 = !a3->i32[0] || a3->i32[1] == 0;
      BOOL v16 = !v15;
      BOOL v17 = !*a4 || a4[1] == 0;
      BOOL v18 = !v17;
      *(_DWORD *)uint64_t v69 = 67109376;
      *(_DWORD *)&v69[4] = v16;
      *(_WORD *)&v69[8] = 1024;
      *(_DWORD *)&v69[10] = v18;
      int v19 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,recordRegistration,CLLocationProvider_Type,silo entry invalid,from_valid,%d,to_valid,%d",  v69,  14);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordRegistration(const CLLocationControllerRecorder_Types::MessageType &, c onst CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, const CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::RegInfo &)",  "%s\n",  v19);
LABEL_54:
      free(v19);
      return;
    }

    sub_100EDE11C(&v78);
    uint64_t v28 = (__n128 *)sub_10080E94C();
    sub_10080ED44(v28, v68);
    sub_100372734((uint64_t)&v78, a2, a3, a4, (uint64_t *)v68);
    v81 |= 2u;
    uint64_t v29 = v80;
    if (!v80)
    {
      uint64_t v29 = operator new(0x1F0uLL);
      sub_1005E5F30((uint64_t)v29);
      uint64_t v80 = v29;
    }

    v29[123] |= 0x800u;
    int v30 = (_DWORD *)*((void *)v29 + 44);
    if (!v30)
    {
      int v30 = operator new(0xC0uLL);
      sub_100B1FFB4((uint64_t)v30);
      *((void *)v29 + 44) = v30;
    }

    v30[46] |= 0x10000u;
    unsigned int v31 = (_DWORD *)*((void *)v30 + 16);
    if (!v31)
    {
      unsigned int v31 = operator new(0x28uLL);
      sub_100B1FE88((uint64_t)v31);
      *((void *)v30 + 16) = v31;
    }

    int v32 = *a5;
    v31[9] |= 1u;
    v31[2] = v32;
    unsigned int v33 = sub_100F8B3B0(a6);
    if (!sub_100B2BA60(v33)) {
      __assert_rtn( "set_notification_type",  "CLPLocationController.pb.h",  9437,  "::CLP::LogEntry::PrivateData::LocationProviderNotification_NotificationType_IsValid(value)");
    }
    int v34 = v31[9];
    v31[3] = v33;
    v31[9] = v34 | 0xA;
    int v35 = (char *)*((void *)v31 + 3);
    if (!v35)
    {
      int v35 = (char *)operator new(0x40uLL);
      sub_100B1FED4((uint64_t)v35);
      *((void *)v31 + 3) = v35;
    }

    int v36 = *((_DWORD *)v35 + 15);
    *(_OWORD *)(v35 + 8) = *(_OWORD *)a7;
    *(_WORD *)(v35 + 33) = *(_WORD *)(a7 + 16);
    *((_DWORD *)v35 + 15) = v36 | 0x33;
    unsigned int v37 = sub_10037EB0C((int *)(a7 + 20));
    if (sub_10006ED58(v37))
    {
      *((_DWORD *)v35 + 15) |= 0x100u;
      *((_DWORD *)v35 + 12) = v37;
      unsigned int v38 = sub_10037ECF0((int *)(a7 + 24));
      if (sub_1000641E0(v38))
      {
        *((_DWORD *)v35 + 15) |= 0x200u;
        *((_DWORD *)v35 + 13) = v38;
        int v39 = sub_100371ED0(a1, (uint64_t)&v78);
        if (*(_BYTE *)(a1 + 8))
        {
          int v40 = v39;
          if (qword_101934830 != -1) {
            dispatch_once(&qword_101934830, &stru_101834AA8);
          }
          uint64_t v41 = (os_log_s *)qword_101934838;
          if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
          {
            sub_100FE4F50((int *)a2, v69);
            if (SBYTE3(v71) >= 0) {
              uint64_t v42 = v69;
            }
            else {
              uint64_t v42 = *(_BYTE **)v69;
            }
            char v59 = v42;
            LODWORD(v61[0]) = a3->i32[0];
            sub_100FE5218((int *)v61, v66);
            if (v67 >= 0) {
              int v43 = v66;
            }
            else {
              int v43 = (void **)v66[0];
            }
            int v63 = *a4;
            uint64_t v44 = __p;
            sub_100FE5218(&v63, __p);
            if (v65 < 0) {
              uint64_t v44 = (void **)__p[0];
            }
            double v45 = sub_10100D9D8(*a6);
            uint64_t v46 = sub_10080E94C();
            double v47 = sub_10080EF30(v46);
            LODWORD(buf) = 67110402;
            HIDWORD(buf) = v40;
            __int16 v83 = 2080;
            int v84 = v59;
            __int16 v85 = 2080;
            double v86 = v43;
            __int16 v87 = 2080;
            double v88 = v44;
            __int16 v89 = 2080;
            uint64_t v90 = v45;
            __int16 v91 = 2050;
            double v92 = v47;
            _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordRegistration,CLLocationProvider_Type,success,%d,message_type,%s,from,%s,to,%s,notificat ion_type,%s,propagation_us,%{public}.3f",  (uint8_t *)&buf,  0x3Au);
            if (v65 < 0) {
              operator delete(__p[0]);
            }
            if (v67 < 0) {
              operator delete(v66[0]);
            }
            if (SBYTE3(v71) < 0) {
              operator delete(*(void **)v69);
            }
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(&buf, 0x65CuLL);
            if (qword_101934830 != -1) {
              dispatch_once(&qword_101934830, &stru_101834AA8);
            }
            uint64_t v51 = qword_101934838;
            sub_100FE4F50((int *)a2, v66);
            if (v67 >= 0) {
              char v52 = v66;
            }
            else {
              char v52 = (void **)v66[0];
            }
            int v63 = a3->i32[0];
            int v53 = __p;
            sub_100FE5218(&v63, __p);
            if (v65 < 0) {
              int v53 = (void **)__p[0];
            }
            int v60 = *a4;
            sub_100FE5218(&v60, v61);
            if (v62 >= 0) {
              uint64_t v54 = v61;
            }
            else {
              uint64_t v54 = (void **)v61[0];
            }
            char v55 = sub_10100D9D8(*a6);
            uint64_t v56 = sub_10080E94C();
            double v57 = sub_10080EF30(v56);
            *(_DWORD *)uint64_t v69 = 67110402;
            *(_DWORD *)&v69[4] = v40;
            *(_WORD *)&v69[8] = 2080;
            *(void *)&v69[10] = v52;
            __int16 v70 = 2080;
            int v71 = v53;
            __int16 v72 = 2080;
            __int16 v73 = v54;
            __int16 v74 = 2080;
            __int16 v75 = v55;
            __int16 v76 = 2050;
            double v77 = v57;
            uint64_t v58 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v51,  2LL,  "#locctl,#rec,recordRegistration,CLLocationProvider_Type,success,%d,message_type,%s,from,%s,t o,%s,notification_type,%s,propagation_us,%{public}.3f",  v69,  58);
            if (v62 < 0) {
              operator delete(v61[0]);
            }
            if (v65 < 0) {
              operator delete(__p[0]);
            }
            if (v67 < 0) {
              operator delete(v66[0]);
            }
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordRegistration(const CLLocationControllerRecorder_Types::MessageTyp e &, const CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, c onst int &, const CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::RegInfo &)",  "%s\n",  v58);
          }
        }

        sub_100EDE8A8(&v78);
        return;
      }

      uint64_t v48 = "::CLP::LogEntry::PrivateData::PipelineOperatingMode_IsValid(value)";
      int v49 = 9388;
      int v50 = "set_pipeline_operating_mode";
    }

    else
    {
      uint64_t v48 = "::CLP::LogEntry::PrivateData::OperatingMode_IsValid(value)";
      int v49 = 9365;
      int v50 = "set_operating_mode";
    }

    __assert_rtn(v50, "CLPLocationController.pb.h", v49, v48);
  }

  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101834AA8);
  }
  std::string v20 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    sub_100FE4F50((int *)a2, &buf);
    uint64_t v21 = SBYTE3(v86) >= 0 ? &buf : (void **)buf;
    *(_DWORD *)uint64_t v69 = 136315138;
    *(void *)&v69[4] = v21;
    _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordRegistration,CLLocationProvider_Type,unsupported message type,%s",  v69,  0xCu);
    if (SBYTE3(v86) < 0) {
      operator delete(buf);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    uint64_t v22 = qword_101934838;
    sub_100FE4F50((int *)a2, v69);
    if (SBYTE3(v71) >= 0) {
      int v23 = v69;
    }
    else {
      int v23 = *(_BYTE **)v69;
    }
    int v78 = 136315138;
    __int16 v79 = v23;
    int v19 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v22,  2LL,  "#locctl,#rec,recordRegistration,CLLocationProvider_Type,unsupported message type,%s",  (const char *)&v78);
    if (SBYTE3(v71) < 0) {
      operator delete(*(void **)v69);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordRegistration(const CLLocationControllerRecorder_Types::MessageType &, con st CLLocationControllerRecorder_Types::Silo &, const CLLocationControllerRecorder_Types::Silo &, const int &, cons t CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::RegInfo &)",  "%s\n",  v19);
  }

void sub_10037EA20( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *__p, uint64_t a21, int a22, __int16 a23, char a24, char a25, void *a26, uint64_t a27, int a28, __int16 a29, char a30, char a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, int a38, __int16 a39, char a40, char a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, char a47)
{
}

uint64_t sub_10037EB0C(int *a1)
{
  int v1 = *a1;
  if (!*a1) {
    return 1LL;
  }
  if (v1 == 11) {
    return 3LL;
  }
  if (v1 == 10) {
    return 2LL;
  }
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101834AA8);
  }
  int v4 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    int v5 = *a1;
    *(_DWORD *)buf = 67109120;
    int v10 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,convertOperatingModeTypeToProtobuf,unhandled type,%d",  buf,  8u);
  }

  uint64_t result = sub_1002921D0(115, 2);
  if ((_DWORD)result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    int v6 = *a1;
    v8[0] = 67109120;
    v8[1] = v6;
    int v7 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,convertOperatingModeTypeToProtobuf,unhandled type,%d",  v8);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static CLP::LogEntry::PrivateData::OperatingMode CLLocationControllerRecorder::convertOperatingModeTypeToProtobuf( const CLLocationProvider_Type::OperatingMode &)",  "%s\n",  v7);
    return 0LL;
  }

  return result;
}

uint64_t sub_10037ECF0(int *a1)
{
  if (!*a1) {
    return 1LL;
  }
  if (*a1 == 1) {
    return 2LL;
  }
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101834AA8);
  }
  int v3 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    int v4 = *a1;
    *(_DWORD *)buf = 67109120;
    int v9 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,convertPipelineOperatingModeTypeToProtobuf,unhandled type,%d",  buf,  8u);
  }

  uint64_t result = sub_1002921D0(115, 2);
  if ((_DWORD)result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    int v5 = *a1;
    v7[0] = 67109120;
    v7[1] = v5;
    int v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,convertPipelineOperatingModeTypeToProtobuf,unhandled type,%d",  v7);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static CLP::LogEntry::PrivateData::PipelineOperatingMode CLLocationControllerRecorder::convertPipelineOperatingMod eTypeToProtobuf(const CLLocationProvider_Type::PipelineOperatingMode &)",  "%s\n",  v6);
    return 0LL;
  }

  return result;
}

void sub_10037EEC4(uint64_t a1, int32x4_t *a2, int *a3, uint64_t a4)
{
  if (*(void *)(a1 + 16))
  {
    if ((vmaxv_u16((uint16x4_t)vmovn_s32(vceqzq_s32(*a2))) & 1) != 0)
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      int v6 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        if (a2->i32[0]) {
          BOOL v7 = a2->i32[1] == 0;
        }
        else {
          BOOL v7 = 1;
        }
        int v8 = !v7;
        if (*a3) {
          BOOL v9 = a3[1] == 0;
        }
        else {
          BOOL v9 = 1;
        }
        int v10 = !v9;
        *(_DWORD *)buf = 67109376;
        int v65 = v8;
        __int16 v66 = 1024;
        LODWORD(v67) = v10;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLOutdoor_Type,silo entry invalid,from_valid,%d,to_valid,%d",  buf,  0xEu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101834AA8);
        }
        if (a2->i32[0]) {
          BOOL v11 = a2->i32[1] == 0;
        }
        else {
          BOOL v11 = 1;
        }
        int v12 = !v11;
        if (*a3) {
          BOOL v13 = a3[1] == 0;
        }
        else {
          BOOL v13 = 1;
        }
        int v14 = !v13;
        LODWORD(v59) = 67109376;
        HIDWORD(v59) = v12;
        __int16 v60 = 1024;
        int v61 = v14;
        BOOL v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,recordMessage,CLOutdoor_Type,silo entry invalid,from_valid,%d,to_valid,%d",  &v59,  14);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::Silo &, const CLLoc ationControllerRecorder_Types::Silo &, const CLOutdoor_Type::OutdoorUpdate &)",  "%s\n",  v15);
      }
    }

    else
    {
      sub_100EDE11C(&v59);
      BOOL v18 = (__n128 *)sub_10080E94C();
      sub_10080ED44(v18, v49);
      int v48 = 4;
      sub_100372734((uint64_t)&v59, (unsigned int *)&v48, a2, a3, (uint64_t *)v49);
      v63 |= 2u;
      int v19 = v62;
      if (!v62)
      {
        int v19 = operator new(0x1F0uLL);
        sub_1005E5F30((uint64_t)v19);
        char v62 = v19;
      }

      v19[123] |= 0x800u;
      std::string v20 = (_DWORD *)*((void *)v19 + 44);
      if (!v20)
      {
        std::string v20 = operator new(0xC0uLL);
        sub_100B1FFB4((uint64_t)v20);
        *((void *)v19 + 44) = v20;
      }

      v20[46] |= 0x20000u;
      uint64_t v21 = (_DWORD *)*((void *)v20 + 17);
      if (!v21)
      {
        uint64_t v21 = operator new(0x20uLL);
        sub_100B1FF00(v21);
        *((void *)v20 + 17) = v21;
      }

      v21[7] |= 1u;
      _DWORD v21[2] = -1;
      if (!sub_10006419C(1u)) {
        __assert_rtn( "set_notification_type",  "CLPLocationController.pb.h",  9616,  "::CLP::LogEntry::PrivateData::OutdoorServiceNotification_NotificationType_IsValid(value)");
      }
      int v22 = v21[7];
      v21[3] = 1;
      v21[7] = v22 | 6;
      int v23 = (_DWORD *)*((void *)v21 + 2);
      if (!v23)
      {
        int v23 = operator new(0x18uLL);
        sub_100B1FF14(v23);
        *((void *)v21 + 2) = v23;
      }

      v23[5] |= 1u;
      int v24 = (void *)*((void *)v23 + 1);
      if (!v24)
      {
        int v24 = operator new(0x40uLL);
        sub_1001D2B28((uint64_t)v24);
        *((void *)v23 + 1) = v24;
      }

      sub_100F8D5F8(a4, (uint64_t)v24);
      int v25 = sub_100371ED0(a1, (uint64_t)&v59);
      if (*(_BYTE *)(a1 + 8))
      {
        int v26 = v25;
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101834AA8);
        }
        int v27 = (os_log_s *)qword_101934838;
        if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v28 = &v50;
          sub_100FE4F50(&v48, &v50);
          if (SBYTE3(v54) < 0) {
            uint64_t v28 = v50;
          }
          LODWORD(v41[0]) = a2->i32[0];
          uint64_t v29 = v46;
          sub_100FE5218((int *)v41, v46);
          if (v47 < 0) {
            uint64_t v29 = (void **)v46[0];
          }
          int v43 = *a3;
          int v30 = __p;
          sub_100FE5218(&v43, __p);
          if (v45 < 0) {
            int v30 = (void **)__p[0];
          }
          uint64_t v31 = sub_10080E94C();
          double v32 = sub_10080EF30(v31);
          *(_DWORD *)buf = 67110146;
          int v65 = v26;
          __int16 v66 = 2080;
          char v67 = v28;
          __int16 v68 = 2080;
          uint64_t v69 = v29;
          __int16 v70 = 2080;
          int v71 = v30;
          __int16 v72 = 2050;
          double v73 = v32;
          _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,CLOutdoor_Type,success,%d,message_type,%s,from,%s,to,%s,propagation_us,%{public}.3f",  buf,  0x30u);
          if (v45 < 0) {
            operator delete(__p[0]);
          }
          if (v47 < 0) {
            operator delete(v46[0]);
          }
          if (SBYTE3(v54) < 0) {
            operator delete(v50);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934830 != -1) {
            dispatch_once(&qword_101934830, &stru_101834AA8);
          }
          uint64_t v33 = qword_101934838;
          int v34 = v46;
          sub_100FE4F50(&v48, v46);
          if (v47 < 0) {
            int v34 = (void **)v46[0];
          }
          int v43 = a2->i32[0];
          int v35 = __p;
          sub_100FE5218(&v43, __p);
          if (v45 < 0) {
            int v35 = (void **)__p[0];
          }
          int v40 = *a3;
          int v36 = v41;
          sub_100FE5218(&v40, v41);
          if (v42 < 0) {
            int v36 = (void **)v41[0];
          }
          uint64_t v37 = sub_10080E94C();
          double v38 = sub_10080EF30(v37);
          LODWORD(v50) = 67110146;
          HIDWORD(v50) = v26;
          __int16 v51 = 2080;
          char v52 = v34;
          __int16 v53 = 2080;
          uint64_t v54 = v35;
          __int16 v55 = 2080;
          uint64_t v56 = v36;
          __int16 v57 = 2050;
          double v58 = v38;
          int v39 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v33,  2LL,  "#locctl,#rec,recordMessage,CLOutdoor_Type,success,%d,message_type,%s,from,%s,to,%s,propagation _us,%{public}.3f",  &v50,  48);
          if (v42 < 0) {
            operator delete(v41[0]);
          }
          if (v45 < 0) {
            operator delete(__p[0]);
          }
          if (v47 < 0) {
            operator delete(v46[0]);
          }
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::Silo &, const CLL ocationControllerRecorder_Types::Silo &, const CLOutdoor_Type::OutdoorUpdate &)",  "%s\n",  v39);
        }
      }

      sub_100EDE8A8(&v59);
    }
  }

void sub_10037F56C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *__p, uint64_t a20, int a21, __int16 a22, char a23, char a24, void *a25, uint64_t a26, int a27, __int16 a28, char a29, char a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, int a38, __int16 a39, char a40, char a41, uint64_t a42, uint64_t a43, uint64_t a44, char a45)
{
}

void sub_10037F658(uint64_t a1, int32x4_t *a2, int *a3, void *a4, int a5)
{
  if (!*(void *)(a1 + 16)) {
    return;
  }
  if ((vmaxv_u16((uint16x4_t)vmovn_s32(vceqzq_s32(*a2))) & 1) != 0)
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    BOOL v7 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      if (a2->i32[0]) {
        BOOL v8 = a2->i32[1] == 0;
      }
      else {
        BOOL v8 = 1;
      }
      int v9 = !v8;
      if (*a3) {
        BOOL v10 = a3[1] == 0;
      }
      else {
        BOOL v10 = 1;
      }
      int v11 = !v10;
      *(_DWORD *)buf = 67109376;
      int v70 = v9;
      __int16 v71 = 1024;
      LODWORD(v72) = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,RoutineVisit,silo entry invalid,from_valid,%d,to_valid,%d",  buf,  0xEu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      if (a2->i32[0]) {
        BOOL v12 = a2->i32[1] == 0;
      }
      else {
        BOOL v12 = 1;
      }
      int v13 = !v12;
      if (*a3) {
        BOOL v14 = a3[1] == 0;
      }
      else {
        BOOL v14 = 1;
      }
      int v15 = !v14;
      LODWORD(v64) = 67109376;
      HIDWORD(v64) = v13;
      __int16 v65 = 1024;
      int v66 = v15;
      BOOL v16 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,recordMessage,RoutineVisit,silo entry invalid,from_valid,%d,to_valid,%d",  &v64,  14);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::Silo &, const CLLocat ionControllerRecorder_Types::Silo &, const CLVisit *, const BOOL)",  "%s\n",  v16);
    }

    return;
  }

  sub_100EDE11C(&v64);
  std::string v20 = (__n128 *)sub_10080E94C();
  sub_10080ED44(v20, v52);
  int v51 = 4;
  sub_100372734((uint64_t)&v64, (unsigned int *)&v51, a2, a3, (uint64_t *)v52);
  v68 |= 2u;
  uint64_t v21 = v67;
  if (!v67)
  {
    uint64_t v21 = operator new(0x1F0uLL);
    sub_1005E5F30((uint64_t)v21);
    char v67 = v21;
  }

  v21[123] |= 0x800u;
  int v22 = (_DWORD *)*((void *)v21 + 44);
  if (!v22)
  {
    int v22 = operator new(0xC0uLL);
    sub_100B1FFB4((uint64_t)v22);
    *((void *)v21 + 44) = v22;
  }

  v22[46] |= 0x40000u;
  int v23 = (_DWORD *)*((void *)v22 + 18);
  if (!v23)
  {
    int v23 = operator new(0x20uLL);
    sub_100B1FF28(v23);
    *((void *)v22 + 18) = v23;
  }

  v23[7] |= 1u;
  __n128 v23[2] = -1;
  if (!a5)
  {
    if (sub_1000641E0(1u))
    {
      int v24 = 1;
      goto LABEL_47;
    }

void sub_10037FD38( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *__p, uint64_t a20, int a21, __int16 a22, char a23, char a24, void *a25, uint64_t a26, int a27, __int16 a28, char a29, char a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, int a38, __int16 a39, char a40, char a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, char a47)
{
}

double sub_10037FE24()
{
  uint64_t v0 = sub_10080E94C();
  int v2 = 0;
  return sub_10080EB58(v0, &v2);
}

void sub_10037FE4C(uint64_t a1, int32x4_t *a2, int *a3, int *a4)
{
  if (*(void *)(a1 + 16))
  {
    if ((vmaxv_u16((uint16x4_t)vmovn_s32(vceqzq_s32(*a2))) & 1) != 0)
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      uint64_t v6 = qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        if (a2->i32[0]) {
          BOOL v7 = a2->i32[1] == 0;
        }
        else {
          BOOL v7 = 1;
        }
        int v8 = !v7;
        if (*a3) {
          BOOL v9 = a3[1] == 0;
        }
        else {
          BOOL v9 = 1;
        }
        int v10 = !v9;
        LODWORD(buf) = 67109376;
        HIDWORD(buf) = v8;
        __int16 v71 = 1024;
        LODWORD(v72) = v10;
        _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v6,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,MapRouteHintNotification,silo entry invalid,from_valid,%d,to_valid,%d",  (uint8_t *)&buf,  0xEu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101834AA8);
        }
        if (a2->i32[0]) {
          BOOL v11 = a2->i32[1] == 0;
        }
        else {
          BOOL v11 = 1;
        }
        int v12 = !v11;
        if (*a3) {
          BOOL v13 = a3[1] == 0;
        }
        else {
          BOOL v13 = 1;
        }
        int v14 = !v13;
        LODWORD(v65) = 67109376;
        HIDWORD(v65) = v12;
        __int16 v66 = 1024;
        int v67 = v14;
        uint64_t v15 = _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,recordMessage,MapRouteHintNotification,silo entry invalid,from_valid,%d,to_valid,%d",  &v65,  14);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::Silo &, const CLLoc ationControllerRecorder_Types::Silo &, const CLMapsRouteHintData &)",  "%s\n",  (const char *)v15);
      }
    }

    else
    {
      sub_100EDE11C(&v65);
      uint64_t v18 = sub_10080E94C();
      sub_10080ED44((__n128 *)v18, v53);
      int v52 = 4;
      sub_100372734((uint64_t)&v65, (unsigned int *)&v52, a2, a3, (uint64_t *)v53);
      v69 |= 2u;
      int v19 = v68;
      if (!v68)
      {
        int v19 = operator new(0x1F0uLL);
        sub_1005E5F30((uint64_t)v19);
        int v68 = v19;
      }

      v19[123] |= 0x800u;
      std::string v20 = (_DWORD *)*((void *)v19 + 44);
      if (!v20)
      {
        std::string v20 = operator new(0xC0uLL);
        sub_100B1FFB4((uint64_t)v20);
        *((void *)v19 + 44) = v20;
      }

      v20[46] |= 0x200000u;
      uint64_t v21 = (_DWORD *)*((void *)v20 + 21);
      if (!v21)
      {
        uint64_t v21 = operator new(0x20uLL);
        sub_100B1FF78(v21);
        *((void *)v20 + 21) = v21;
      }

      v21[7] |= 1u;
      _DWORD v21[2] = -1;
      if (!sub_10006419C(1u)) {
        __assert_rtn( "set_notification_type",  "CLPLocationController.pb.h",  10189,  "::CLP::LogEntry::PrivateData::MapRouteHintNotification_NotificationType_IsValid(value)");
      }
      int v22 = v21[7];
      v21[3] = 1;
      v21[7] = v22 | 6;
      int v23 = (_DWORD *)*((void *)v21 + 2);
      if (!v23)
      {
        int v23 = operator new(0x18uLL);
        sub_100B1FF8C(v23);
        *((void *)v21 + 2) = v23;
      }

      v23[5] |= 1u;
      int v24 = (void *)*((void *)v23 + 1);
      if (!v24)
      {
        int v24 = operator new(0x40uLL);
        sub_1001D280C((uint64_t)v24);
        *((void *)v23 + 1) = v24;
      }

      uint64_t v25 = sub_10080E94C();
      LODWORD(v54) = 0;
      uint64_t buf = sub_10080EB58(v25, &v54);
      uint64_t v26 = sub_10080E94C();
      LODWORD(v50[0]) = 1;
      __int16 v54 = COERCE_VOID_(sub_10080EB58(v26, v50));
      sub_100F8566C((uint64_t)a4, (uint64_t)v24, &buf, (double *)&v54);
      int v27 = sub_100371ED0(a1, (uint64_t)&v65);
      if (*(_BYTE *)(a1 + 8))
      {
        int v28 = v27;
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101834AA8);
        }
        int v29 = (os_log_s *)qword_101934838;
        if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
        {
          sub_100FE4F50(&v52, &v54);
          if (SBYTE3(v58) >= 0) {
            int v30 = &v54;
          }
          else {
            int v30 = v54;
          }
          LODWORD(v45[0]) = a2->i32[0];
          sub_100FE5218((int *)v45, v50);
          if (v51 >= 0) {
            uint64_t v31 = v50;
          }
          else {
            uint64_t v31 = (void **)v50[0];
          }
          int v47 = *a3;
          sub_100FE5218(&v47, __p);
          if (v49 >= 0) {
            double v32 = __p;
          }
          else {
            double v32 = (void **)__p[0];
          }
          int v33 = *a4;
          uint64_t v34 = sub_10080E94C();
          double v35 = sub_10080EF30(v34);
          LODWORD(buf) = 67110402;
          HIDWORD(buf) = v28;
          __int16 v71 = 2080;
          __int16 v72 = v30;
          __int16 v73 = 2080;
          __int16 v74 = v31;
          __int16 v75 = 2080;
          __int16 v76 = v32;
          __int16 v77 = 1024;
          int v78 = v33;
          __int16 v79 = 2050;
          double v80 = v35;
          _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,recordMessage,MapRouteHintNotification,success,%d,message_type,%s,from,%s,to,%s,routeType,%d,pr opagation_us,%{public}.3f",  (uint8_t *)&buf,  0x36u);
          if (v49 < 0) {
            operator delete(__p[0]);
          }
          if (v51 < 0) {
            operator delete(v50[0]);
          }
          if (SBYTE3(v58) < 0) {
            operator delete(v54);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(&buf, 0x65CuLL);
          if (qword_101934830 != -1) {
            dispatch_once(&qword_101934830, &stru_101834AA8);
          }
          uint64_t v36 = qword_101934838;
          uint64_t v37 = v50;
          sub_100FE4F50(&v52, v50);
          if (v51 < 0) {
            uint64_t v37 = (void **)v50[0];
          }
          int v47 = a2->i32[0];
          double v38 = __p;
          sub_100FE5218(&v47, __p);
          if (v49 < 0) {
            double v38 = (void **)__p[0];
          }
          int v44 = *a3;
          sub_100FE5218(&v44, v45);
          if (v46 >= 0) {
            int v39 = v45;
          }
          else {
            int v39 = (void **)v45[0];
          }
          int v40 = *a4;
          uint64_t v41 = sub_10080E94C();
          double v42 = sub_10080EF30(v41);
          LODWORD(v54) = 67110402;
          HIDWORD(v54) = v28;
          __int16 v55 = 2080;
          __int16 v56 = v37;
          __int16 v57 = 2080;
          __int16 v58 = v38;
          __int16 v59 = 2080;
          __int16 v60 = v39;
          __int16 v61 = 1024;
          int v62 = v40;
          __int16 v63 = 2050;
          double v64 = v42;
          uint64_t v43 = _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v36,  2LL,  "#locctl,#rec,recordMessage,MapRouteHintNotification,success,%d,message_type,%s,from,%s,to,%s,routeType ,%d,propagation_us,%{public}.3f",  &v54,  54);
          if (v46 < 0) {
            operator delete(v45[0]);
          }
          if (v49 < 0) {
            operator delete(__p[0]);
          }
          if (v51 < 0) {
            operator delete(v50[0]);
          }
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordMessage(const CLLocationControllerRecorder_Types::Silo &, const CLL ocationControllerRecorder_Types::Silo &, const CLMapsRouteHintData &)",  "%s\n",  (const char *)v43);
        }
      }

      sub_100EDE8A8(&v65);
    }
  }

void sub_100380550( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *__p, uint64_t a20, int a21, __int16 a22, char a23, char a24, void *a25, uint64_t a26, int a27, __int16 a28, char a29, char a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, int a38, __int16 a39, char a40, char a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, char a47)
{
}

uint64_t sub_100380644( uint64_t result, uint64_t a2, uint64_t *a3, char a4, char a5, char a6, char a7, int *a8, unsigned int *a9, unsigned int *a10, int a11, int *a12, uint64_t a13)
{
  uint64_t v48 = result;
  if (!*(void *)(result + 16)) {
    return result;
  }
  sub_100EDE11C(v52);
  std::string v20 = (__n128 *)sub_10080E94C();
  sub_10080ED44(v20, v51);
  unsigned int v50 = 1;
  *(_DWORD *)uint64_t buf = 21;
  v49[0] = 21;
  v49[1] = sub_100FE4D78((int *)buf);
  sub_100372734((uint64_t)v52, &v50, v49, v49, (uint64_t *)v51);
  v54 |= 2u;
  uint64_t v21 = v53;
  if (!v53)
  {
    uint64_t v21 = operator new(0x1F0uLL);
    sub_1005E5F30((uint64_t)v21);
    __int16 v53 = v21;
  }

  v21[123] |= 0x800u;
  int v22 = (_DWORD *)*((void *)v21 + 44);
  if (!v22)
  {
    int v22 = operator new(0xC0uLL);
    sub_100B1FFB4((uint64_t)v22);
    *((void *)v21 + 44) = v22;
  }

  v22[46] |= 0x10u;
  int v23 = (_DWORD *)*((void *)v22 + 4);
  if (!v23)
  {
    int v23 = operator new(0x20uLL);
    sub_100B1FC68(v23);
    *((void *)v22 + 4) = v23;
  }

  v23[7] |= 1u;
  __n128 v23[2] = -1;
  if (!sub_1001D2F54(4u)) {
    __assert_rtn( "set_notification_type",  "CLPLocationController.pb.h",  6520,  "::CLP::LogEntry::PrivateData::SystemNotification_NotificationType_IsValid(value)");
  }
  int v24 = v23[7];
  v23[3] = 4;
  v23[7] = v24 | 6;
  uint64_t v25 = (_DWORD *)*((void *)v23 + 2);
  if (!v25)
  {
    uint64_t v25 = operator new(0x50uLL);
    sub_100B1FC90((uint64_t)v25);
    *((void *)v23 + 2) = v25;
  }

  v25[18] |= 0x40u;
  uint64_t v26 = (_DWORD *)*((void *)v25 + 7);
  if (!v26)
  {
    uint64_t v26 = operator new(0x18uLL);
    sub_100B1FC7C(v26);
    *((void *)v25 + 7) = v26;
  }

  v26[5] |= 1u;
  int v27 = (_DWORD *)*((void *)v26 + 1);
  if (!v27)
  {
    int v27 = operator new(0x48uLL);
    sub_100B1FC44((uint64_t)v27);
    *((void *)v26 + 1) = v27;
  }

  v27[16] |= 1u;
  int v28 = (void *)*((void *)v27 + 1);
  if (!v28)
  {
    int v28 = operator new(0xA0uLL);
    sub_1001D2438((uint64_t)v28);
    *((void *)v27 + 1) = v28;
  }

  sub_100F82504(a2, (uint64_t)v28);
  v26[5] |= 1u;
  int v29 = (_DWORD *)*((void *)v26 + 1);
  if (!v29)
  {
    int v29 = operator new(0x48uLL);
    sub_100B1FC44((uint64_t)v29);
    *((void *)v26 + 1) = v29;
  }

  uint64_t v30 = *a3;
  v29[16] |= 2u;
  *((void *)v29 + 2) = v30;
  v26[5] |= 1u;
  v29[16] |= 4u;
  *((_BYTE *)v29 + 24) = a4;
  v26[5] |= 1u;
  v29[16] |= 8u;
  *((_BYTE *)v29 + 25) = a5;
  v26[5] |= 1u;
  v29[16] |= 0x10u;
  *((_BYTE *)v29 + 26) = a6;
  v26[5] |= 1u;
  v29[16] |= 0x20u;
  *((_BYTE *)v29 + 27) = a7;
  v26[5] |= 1u;
  unsigned int v31 = sub_100380D60(a8);
  if (!sub_100B20268(v31))
  {
    uint64_t v43 = "::CLP::LogEntry::PrivateData::DynamicsMode_IsValid(value)";
    int v44 = 6039;
    char v45 = "set_dynamics_mode";
    goto LABEL_45;
  }

  v29[16] |= 0x40u;
  v29[7] = v31;
  v26[5] |= 1u;
  double v32 = (_DWORD *)*((void *)v26 + 1);
  if (!v32)
  {
    double v32 = operator new(0x48uLL);
    sub_100B1FC44((uint64_t)v32);
    *((void *)v26 + 1) = v32;
  }

  int v33 = sub_100F86BF4((unsigned int *)(a13 + 8));
  if (!sub_1001D2F60(v33))
  {
    uint64_t v43 = "::CLP::LogEntry::PrivateData::DominantMotionModeType_IsValid(value)";
    int v44 = 6062;
    char v45 = "set_motion_activity";
    goto LABEL_45;
  }

  v32[16] |= 0x80u;
  v32[8] = v33;
  v26[5] |= 1u;
  uint64_t v34 = (_DWORD *)*((void *)v26 + 1);
  if (!v34)
  {
    uint64_t v34 = operator new(0x48uLL);
    sub_100B1FC44((uint64_t)v34);
    *((void *)v26 + 1) = v34;
  }

  unsigned int v35 = sub_100380F28(a9 + 2);
  if (!sub_1001D2F54(v35))
  {
    uint64_t v43 = "::CLP::LogEntry::PrivateData::IODerivedMotionActivity_IsValid(value)";
    int v44 = 6085;
    char v45 = "set_io_derived_motion_activity";
    goto LABEL_45;
  }

  v34[16] |= 0x100u;
  v34[9] = v35;
  v26[5] |= 1u;
  uint64_t v36 = (_DWORD *)*((void *)v26 + 1);
  if (!v36)
  {
    uint64_t v36 = operator new(0x48uLL);
    sub_100B1FC44((uint64_t)v36);
    *((void *)v26 + 1) = v36;
  }

  uint64_t v37 = *(void *)a9;
  v36[16] |= 0x200u;
  *((void *)v36 + 5) = v37;
  v26[5] |= 1u;
  unsigned int v38 = sub_100F82B00(a10);
  if (!sub_1001D2F3C(v38))
  {
    uint64_t v43 = "::CLP::LogEntry::PrivateData::LocationType_IsValid(value)";
    int v44 = 6130;
    char v45 = "set_original_location_type";
    goto LABEL_45;
  }

  v36[16] |= 0x400u;
  v36[12] = v38;
  v26[5] |= 1u;
  int v39 = (_DWORD *)*((void *)v26 + 1);
  if (!v39)
  {
    int v39 = operator new(0x48uLL);
    sub_100B1FC44((uint64_t)v39);
    *((void *)v26 + 1) = v39;
  }

  v39[16] |= 0x800u;
  v39[13] = a11;
  v26[5] |= 1u;
  unsigned int v40 = sub_1003810E8(a12);
  if (!sub_1000641A8(v40))
  {
    uint64_t v43 = "::CLP::LogEntry::PrivateData::LCFusionState_IsValid(value)";
    int v44 = 6175;
    char v45 = "set_fusion_state";
LABEL_45:
    __assert_rtn(v45, "CLPLocationController.pb.h", v44, v43);
  }

  v39[16] |= 0x1000u;
  v39[14] = v40;
  int v41 = sub_100371ED0(v48, (uint64_t)v52);
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101834AA8);
  }
  double v42 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)uint64_t buf = 67240192;
    int v57 = v41;
    _os_log_impl( (void *)&_mh_execute_header,  v42,  OS_LOG_TYPE_INFO,  "#locctl,#rec,recordLCFusionStatus,success,%{public}d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    v55[0] = 67240192;
    v55[1] = v41;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  1LL,  "#locctl,#rec,recordLCFusionStatus,success,%{public}d",  v55,  8);
    int v47 = (uint8_t *)v46;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationControllerRecorder::recordLCFusionStatus(const CLDaemonLocation &, const double &, const BOOL, cons t BOOL, const BOOL, const BOOL, const cllcf::LCFusionDynamicsMode::DynamicsMode &, const cllcf::IODerivedMotionAct ivityState &, const CLLocationType &, const int, const cllcf::LCFusionState &, const cllcf::TaggedMotionActivity &)",  "%s\n",  v46);
    if (v47 != buf) {
      free(v47);
    }
  }

  return sub_100EDE8A8(v52);
}

void sub_100380CCC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
}

uint64_t sub_100380D60(int *a1)
{
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101834AA8);
  }
  int v3 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    int v4 = *a1;
    *(_DWORD *)uint64_t buf = 67109120;
    int v10 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,convertLCFusionDynamicsModeTypeToProtobuf,unhandled type,%d",  buf,  8u);
  }

  uint64_t result = sub_1002921D0(115, 2);
  if ((_DWORD)result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    int v5 = *a1;
    v8[0] = 67109120;
    v8[1] = v5;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,convertLCFusionDynamicsModeTypeToProtobuf,unhandled type,%d",  v8);
    BOOL v7 = (uint8_t *)v6;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static CLP::LogEntry::PrivateData::DynamicsMode CLLocationControllerRecorder::convertLCFusionDynamicsModeTypeToPro tobuf(const cllcf::LCFusionDynamicsMode::DynamicsMode &)",  "%s\n",  v6);
    if (v7 != buf) {
      free(v7);
    }
    return 0LL;
  }

  return result;
}

uint64_t sub_100380F28(unsigned int *a1)
{
  uint64_t result = *a1;
  if (result >= 5)
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    int v3 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      int v4 = *a1;
      *(_DWORD *)uint64_t buf = 67109120;
      int v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,convertIODerivedMotionActivityTypeToProtobuf,unhandled type,%d",  buf,  8u);
    }

    uint64_t result = sub_1002921D0(115, 2);
    if ((_DWORD)result)
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      int v5 = *a1;
      v8[0] = 67109120;
      v8[1] = v5;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,convertIODerivedMotionActivityTypeToProtobuf,unhandled type,%d",  v8);
      BOOL v7 = (uint8_t *)v6;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static CLP::LogEntry::PrivateData::IODerivedMotionActivity CLLocationControllerRecorder::convertIODerivedMotionA ctivityTypeToProtobuf(const cllcf::IODerivedMotionActivity &)",  "%s\n",  v6);
      if (v7 != buf) {
        free(v7);
      }
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_1003810E8(int *a1)
{
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101834AA8);
  }
  int v3 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    int v4 = *a1;
    *(_DWORD *)uint64_t buf = 67109120;
    int v10 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,convertLCFusionStateTypeToProtobuf,unhandled type,%d",  buf,  8u);
  }

  uint64_t result = sub_1002921D0(115, 2);
  if ((_DWORD)result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    int v5 = *a1;
    v8[0] = 67109120;
    v8[1] = v5;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,convertLCFusionStateTypeToProtobuf,unhandled type,%d",  v8);
    BOOL v7 = (uint8_t *)v6;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static CLP::LogEntry::PrivateData::LCFusionState CLLocationControllerRecorder::convertLCFusionStateTypeToProtobuf( const cllcf::LCFusionState &)",  "%s\n",  v6);
    if (v7 != buf) {
      free(v7);
    }
    return 0LL;
  }

  return result;
}

uint64_t sub_1003812B0(unsigned int *a1)
{
  uint64_t result = *a1;
  if (result >= 5)
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    int v3 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      int v4 = *a1;
      *(_DWORD *)uint64_t buf = 67109120;
      int v9 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,convertMessageTypeToProtobuf,type should never be max,%d",  buf,  8u);
    }

    uint64_t result = sub_1002921D0(115, 2);
    if ((_DWORD)result)
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      int v5 = *a1;
      v7[0] = 67109120;
      v7[1] = v5;
      uint64_t v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,convertMessageTypeToProtobuf,type should never be max,%d",  v7);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static CLP::LogEntry::PrivateData::MessageType CLLocationControllerRecorder::convertMessageTypeToProtobuf(const CLLocationControllerRecorder_Types::MessageType &)",  "%s\n",  v6);
      return 0LL;
    }
  }

  return result;
}

void sub_100381470(_DWORD *a1, _DWORD *a2)
{
  if (a2)
  {
    *(_DWORD *)uint64_t buf = *a1;
    unsigned int v4 = sub_100381664((unsigned int *)buf);
    if (!sub_100B20274(v4)) {
      sub_10123660C();
    }
    a2[5] |= 1u;
    a2[2] = v4;
    *(_DWORD *)uint64_t buf = a1[1];
    unsigned int v5 = sub_100381824((unsigned int *)buf);
    if (!sub_10006ED58(v5)) {
      sub_1012365E4();
    }
    a2[5] |= 2u;
    a2[3] = v5;
  }

  else
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    uint64_t v6 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,failed to set log entry silo",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      v8[0] = 0;
      BOOL v7 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,failed to set log entry silo",  v8,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLLocationControllerRecorder::setLocationControllerLogEntrySilo(const CLLocationControllerRecorder_T ypes::Silo &, CLP::LogEntry::PrivateData::Silo *)",  "%s\n",  v7);
    }
  }

uint64_t sub_100381664(unsigned int *a1)
{
  uint64_t result = *a1;
  if (result >= 0x1B)
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    int v3 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      int v4 = *a1;
      *(_DWORD *)uint64_t buf = 67109120;
      int v9 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,convertServiceTypeToProtobuf,type should never be max,%d",  buf,  8u);
    }

    uint64_t result = sub_1002921D0(115, 2);
    if ((_DWORD)result)
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      int v5 = *a1;
      v7[0] = 67109120;
      v7[1] = v5;
      uint64_t v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,convertServiceTypeToProtobuf,type should never be max,%d",  v7);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static CLP::LogEntry::PrivateData::ServiceType CLLocationControllerRecorder::convertServiceTypeToProtobuf(const CLLocationControllerRecorder_Types::ServiceType &)",  "%s\n",  v6);
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_100381824(unsigned int *a1)
{
  uint64_t result = *a1;
  if (result >= 4)
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101834AA8);
    }
    int v3 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      int v4 = *a1;
      *(_DWORD *)uint64_t buf = 67109120;
      int v9 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "#locctl,#rec,convertSiloTypeToProtobuf,type should never be max,%d",  buf,  8u);
    }

    uint64_t result = sub_1002921D0(115, 2);
    if ((_DWORD)result)
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101834AA8);
      }
      int v5 = *a1;
      v7[0] = 67109120;
      v7[1] = v5;
      uint64_t v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "#locctl,#rec,convertSiloTypeToProtobuf,type should never be max,%d",  v7);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static CLP::LogEntry::PrivateData::Silo_Type CLLocationControllerRecorder::convertSiloTypeToProtobuf(const CLLoc ationControllerRecorder_Types::SiloType &)",  "%s\n",  v6);
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_1003819E4(uint64_t a1, int a2, char a3)
{
  *(void *)a1 = 0LL;
  *(_BYTE *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = 0LL;
  *(_BYTE *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0xBFF0000000000000LL;
  if (a2)
  {
    int v4 = operator new(0x2E8uLL);
    sub_100C05988();
    uint64_t v5 = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v4;
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
    }
  }

  return a1;
}

void sub_100381A48(_Unwind_Exception *a1)
{
  int v3 = v2;
  operator delete(v3);
  uint64_t v5 = *(void *)(v1 + 16);
  *(void *)(v1 + 16) = 0LL;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
  }
  uint64_t v6 = *(void **)v1;
  *(void *)uint64_t v1 = 0LL;
  if (v6) {
    sub_100381E48(v1, v6);
  }
  _Unwind_Resume(a1);
}

void sub_100381A98(id a1)
{
  qword_101934838 = (uint64_t)os_log_create("com.apple.locationd.Position", "Position");
}

void *sub_100381AC4()
{
  uint64_t v0 = operator new(0x30uLL);
  sub_100B1FC20((uint64_t)v0);
  return v0;
}

void sub_100381AF0(_Unwind_Exception *a1)
{
}

uint64_t *sub_100381B04(uint64_t *a1, uint64_t a2)
{
  a1[2] = 0LL;
  a1[1] = 0LL;
  *a1 = (uint64_t)(a1 + 1);
  sub_100381B58(a1, *(int **)a2, (int *)(a2 + 8));
  return a1;
}

void sub_100381B40(_Unwind_Exception *a1)
{
}

uint64_t *sub_100381B58(uint64_t *result, int *a2, int *a3)
{
  if (a2 != a3)
  {
    int v4 = a2;
    uint64_t v5 = (uint64_t **)result;
    uint64_t v6 = result + 1;
    do
    {
      uint64_t result = sub_100381BDC(v5, v6, v4 + 7, v4 + 7);
      BOOL v7 = (int *)*((void *)v4 + 1);
      if (v7)
      {
        do
        {
          int v8 = v7;
          BOOL v7 = *(int **)v7;
        }

        while (v7);
      }

      else
      {
        do
        {
          int v8 = (int *)*((void *)v4 + 2);
          BOOL v9 = *(void *)v8 == (void)v4;
          int v4 = v8;
        }

        while (!v9);
      }

      int v4 = v8;
    }

    while (v8 != a3);
  }

  return result;
}

uint64_t *sub_100381BDC(uint64_t **a1, uint64_t *a2, int *a3, _DWORD *a4)
{
  uint64_t v6 = sub_100381C60(a1, a2, &v11, &v10, a3);
  BOOL v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    int v8 = (uint64_t **)v6;
    BOOL v7 = (uint64_t *)operator new(0x20uLL);
    *((_DWORD *)v7 + 7) = *a4;
    sub_1000085FC(a1, (uint64_t)v11, v8, v7);
  }

  return v7;
}

uint64_t *sub_100381C60(void *a1, uint64_t *a2, uint64_t **a3, uint64_t *a4, int *a5)
{
  uint64_t v5 = a1 + 1;
  if (a1 + 1 == a2 || (int v6 = *a5, v7 = *((_DWORD *)a2 + 7), *a5 < v7))
  {
    int v8 = (uint64_t *)*a2;
    if ((uint64_t *)*a1 == a2)
    {
      uint64_t v10 = a2;
LABEL_17:
      if (v8)
      {
        *a3 = v10;
        return v10 + 1;
      }

      else
      {
        *a3 = a2;
        return a2;
      }
    }

    if (v8)
    {
      BOOL v9 = (uint64_t *)*a2;
      do
      {
        uint64_t v10 = v9;
        BOOL v9 = (uint64_t *)v9[1];
      }

      while (v9);
    }

    else
    {
      BOOL v13 = a2;
      do
      {
        uint64_t v10 = (uint64_t *)v13[2];
        BOOL v14 = *v10 == (void)v13;
        BOOL v13 = v10;
      }

      while (v14);
    }

    int v15 = *a5;
    if (*((_DWORD *)v10 + 7) < *a5) {
      goto LABEL_17;
    }
    uint64_t v16 = *v5;
    if (*v5)
    {
      do
      {
        while (1)
        {
          BOOL v17 = (uint64_t *)v16;
          int v18 = *(_DWORD *)(v16 + 28);
          if (v15 >= v18) {
            break;
          }
          uint64_t v16 = *v17;
          uint64_t v5 = v17;
          if (!*v17) {
            goto LABEL_29;
          }
        }

        if (v18 >= v15) {
          break;
        }
        uint64_t v5 = v17 + 1;
        uint64_t v16 = v17[1];
      }

      while (v16);
    }

    else
    {
      BOOL v17 = a1 + 1;
    }

void *sub_100381E08()
{
  uint64_t v0 = operator new(0x58uLL);
  sub_1001D2B50((uint64_t)v0);
  return v0;
}

void sub_100381E34(_Unwind_Exception *a1)
{
}

void sub_100381E48(int a1, void *__p)
{
  if (__p)
  {
    int v3 = (void *)__p[5];
    if (v3)
    {
      __p[6] = v3;
      operator delete(v3);
    }

    operator delete(__p);
  }

void sub_100381E80(int a1, void *a2)
{
  if (a2)
  {
    uint64_t v3 = a2[2];
    a2[2] = 0LL;
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
    }
    int v4 = (void *)*a2;
    *a2 = 0LL;
    if (v4) {
      sub_100381E48((int)a2, v4);
    }
    operator delete(a2);
  }

void sub_100381ED4()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936138);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936138))
    {
      uint64_t v2 = 0x7FFFFFFF00000000LL;
      v1[2] = xmmword_1012E6FA0;
      v1[3] = unk_1012E6FB0;
      v1[4] = xmmword_1012E6FC0;
      v1[0] = xmmword_1012E6F80;
      v1[1] = unk_1012E6F90;
      sub_1001BB3C4((uint64_t)&unk_101936120, (int *)v1, 11LL);
      __cxa_atexit((void (*)(void *))sub_1001BA444, &unk_101936120, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936138);
    }
  }

void sub_100381FA8(_Unwind_Exception *a1)
{
}

uint64_t sub_100381FC0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  *(void *)a1 = off_101834AD8;
  sub_1002E4C3C(a1 + 8, "CLFileUpdate", 1LL, 1LL);
  *(void *)(a1 + 24) = a2;
  *(void *)(a1 + 32) = a3;
  *(void *)(a1 + 40) = a4;
  *(void *)(a1 + 48) = 0LL;
  id v8 = objc_msgSend(objc_msgSend(a2, "silo"), "newTimer");
  *(_OWORD *)(a1 + 128) = 0u;
  *(void *)(a1 + 56) = v8;
  *(_DWORD *)(a1 + 64) = 0;
  __asm { FMOV            V1.2D, #-1.0 }

  *(_OWORD *)(a1 + 72) = _Q1;
  *(_OWORD *)(a1 + 88) = _Q1;
  *(_OWORD *)(a1 + 104) = _Q1;
  *(_BYTE *)(a1 + 120) = 0;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_WORD *)(a1 + 240) = 0;
  [*(id *)(a1 + 24) silo];
  id v14 = [*(id *)(a1 + 24) silo];
  int v15 = operator new(0x70uLL);
  sub_1002B5C60((uint64_t)v15, (uint64_t)v14, (uint64_t)sub_1003823E8, a1);
  uint64_t v16 = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = v15;
  if (v16) {
    (*(void (**)(uint64_t))(*(void *)v16 + 8LL))(v16);
  }
  v27[0] = _NSConcreteStackBlock;
  v27[1] = 3221225472LL;
  _DWORD v27[2] = sub_1003825B8;
  v27[3] = &unk_10181D3D0;
  v27[4] = a1;
  [*(id *)(a1 + 56) setHandler:v27];
  sub_1003CC884((uint64_t)sub_100382BD0, a1, *(void **)(a1 + 24), buf);
  uint64_t v17 = *(void *)buf;
  *(void *)uint64_t buf = 0LL;
  uint64_t v18 = *(void *)(a1 + 224);
  *(void *)(a1 + 224) = v17;
  if (v18)
  {
    (*(void (**)(uint64_t))(*(void *)v18 + 8LL))(v18);
    uint64_t v19 = *(void *)buf;
    *(void *)uint64_t buf = 0LL;
    if (v19) {
      (*(void (**)(uint64_t))(*(void *)v19 + 8LL))(v19);
    }
  }

  sub_1003A09BC((uint64_t)sub_100382DA8, a1, *(void **)(a1 + 24), buf);
  uint64_t v20 = *(void *)buf;
  *(void *)uint64_t buf = 0LL;
  uint64_t v21 = *(void *)(a1 + 232);
  *(void *)(a1 + 232) = v20;
  if (v21)
  {
    (*(void (**)(uint64_t))(*(void *)v21 + 8LL))(v21);
    uint64_t v22 = *(void *)buf;
    *(void *)uint64_t buf = 0LL;
    if (v22) {
      (*(void (**)(uint64_t))(*(void *)v22 + 8LL))(v22);
    }
  }

  [*(id *)(*(void *)(a1 + 232) + 16) register:*(void *)(*(void *)(a1 + 232) + 8) forNotification:5 registrationInfo:0];
  if (qword_101934A30 != -1) {
    dispatch_once(&qword_101934A30, &stru_101834B40);
  }
  int v23 = (os_log_s *)qword_101934A38;
  if (os_log_type_enabled((os_log_t)qword_101934A38, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEBUG,  "CLFU,registered for kNotificationCompanionConnectionUpdate",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A30 != -1) {
      dispatch_once(&qword_101934A30, &stru_101834B40);
    }
    __int16 v26 = 0;
    uint64_t v25 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A38,  2LL,  "CLFU,registered for kNotificationCompanionConnectionUpdate",  &v26,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLFileUpdate::CLFileUpdate(id<CLIntersiloUniverse>, OnUpdated, void *)",  "%s\n",  v25);
  }

  return a1;
}

void sub_100382318(_Unwind_Exception *a1)
{
  uint64_t v5 = *(void *)(v1 + 232);
  *(void *)(v1 + 232) = 0LL;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
  }
  uint64_t v6 = *(void *)(v1 + 224);
  *(void *)(v1 + 224) = 0LL;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
  }
  uint64_t v7 = *(void *)(v1 + 48);
  *(void *)(v1 + 48) = 0LL;
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
  }
  sub_1002E4CB0(v2);
  _Unwind_Resume(a1);
}

void sub_1003823E8(uint64_t a1, int a2, uint64_t a3)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101834B20);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v9 = 1;
    uint64_t v6 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLFileUpdate::onDownloaded",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v6, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101834B20);
    }
    uint64_t v7 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v11 = 0;
      __int16 v12 = 2082;
      BOOL v13 = "";
      __int16 v14 = 2082;
      int v15 = "activity";
      __int16 v16 = 2050;
      uint64_t v17 = a3;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLFileUpdate::onDownloaded, event:%{public, location:escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v9 = 0;
  }

  sub_100384720(a3, v5, a2);
  if (v9) {
    os_activity_scope_leave(&state);
  }
}

void sub_100382598( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003825B8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  (*(void (**)(uint64_t))(*(void *)(v1 + 8) + 16LL))(v1 + 8);
  sub_1004F2598();
  if (sub_1001B9A1C() && *(_BYTE *)(v1 + 240) && *(_BYTE *)(v1 + 241)
    || objc_msgSend( objc_msgSend( objc_msgSend(*(id *)(v1 + 24), "vendor"),  "proxyForService:",  @"CLDaemonStatus"),  "syncgetReachability"))
  {
    uint64_t v2 = (void *)(v1 + 152);
    uint64_t v3 = (void *)(v1 + 152);
    int v4 = (void *)(v1 + 200);
    uint64_t v5 = (void *)(v1 + 200);
    if ((*(unsigned int (**)(void, void *, void *, uint64_t))(**(void **)(v1 + 48) + 16LL))( *(void *)(v1 + 48),  v3,  v5,  v1 + 72))
    {
      if (qword_101934A30 != -1) {
        dispatch_once(&qword_101934A30, &stru_101834B40);
      }
      uint64_t v6 = (os_log_s *)qword_101934A38;
      if (os_log_type_enabled((os_log_t)qword_101934A38, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v7 = (void *)(v1 + 152);
        id v8 = (void *)(v1 + 200);
        *(_DWORD *)uint64_t buf = 136446466;
        __int16 v26 = v7;
        __int16 v27 = 2082;
        int v28 = v8;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "CLFU,downloading from %{public}s to %{public}s",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A30 != -1) {
          dispatch_once(&qword_101934A30, &stru_101834B40);
        }
        int v21 = 136446466;
        uint64_t v22 = v2;
        __int16 v23 = 2082;
        int v24 = v4;
        uint64_t v17 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A38,  0LL,  "CLFU,downloading from %{public}s to %{public}s",  &v21,  22);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLFileUpdate::CLFileUpdate(id<CLIntersiloUniverse>, OnUpdated, void *)_block_invoke",  "%s\n",  v17);
      }

      *(_BYTE *)(v1 + 120) = 1;
      char v9 = 0;
      *(CFAbsoluteTime *)(v1 + 104) = CFAbsoluteTimeGetCurrent();
      uint64_t v10 = 1LL;
    }

    else
    {
      if (qword_101934A30 != -1) {
        dispatch_once(&qword_101934A30, &stru_101834B40);
      }
      int v11 = (os_log_s *)qword_101934A38;
      if (os_log_type_enabled((os_log_t)qword_101934A38, OS_LOG_TYPE_DEFAULT))
      {
        __int16 v12 = (void *)(v1 + 152);
        BOOL v13 = (void *)(v1 + 200);
        *(_DWORD *)uint64_t buf = 136446466;
        __int16 v26 = v12;
        __int16 v27 = 2082;
        int v28 = v13;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "#Warning,CLFU,could not download from %{public}s to %{public}s",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A30 != -1) {
          dispatch_once(&qword_101934A30, &stru_101834B40);
        }
        int v21 = 136446466;
        uint64_t v22 = v2;
        __int16 v23 = 2082;
        int v24 = v4;
        uint64_t v18 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A38,  0LL,  "#Warning,CLFU,could not download from %{public}s to %{public}s",  &v21,  22);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLFileUpdate::CLFileUpdate(id<CLIntersiloUniverse>, OnUpdated, void *)_block_invoke",  "%s\n",  v18);
      }

      char v9 = 0;
      uint64_t v10 = 3LL;
    }
  }

  else
  {
    if (qword_101934A30 != -1) {
      dispatch_once(&qword_101934A30, &stru_101834B40);
    }
    __int16 v14 = (os_log_s *)qword_101934A38;
    if (os_log_type_enabled((os_log_t)qword_101934A38, OS_LOG_TYPE_DEFAULT))
    {
      int v15 = (void *)(v1 + 152);
      *(_DWORD *)uint64_t buf = 136446210;
      __int16 v26 = v15;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "CLFU,data reachability is not available - not downloading %{public}s",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A30 != -1) {
        dispatch_once(&qword_101934A30, &stru_101834B40);
      }
      uint64_t v19 = (void *)(v1 + 152);
      int v21 = 136446210;
      uint64_t v22 = v19;
      uint64_t v20 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A38,  0LL,  "CLFU,data reachability is not available - not downloading %{public}s",  &v21,  12);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLFileUpdate::CLFileUpdate(id<CLIntersiloUniverse>, OnUpdated, void *)_block_invoke",  "%s\n",  v20);
    }

    uint64_t v10 = 0LL;
    char v9 = 1;
  }

  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v1 + 8) + 24LL))(v1 + 8);
  if ((v9 & 1) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, void))(v1 + 32))(v1, v10, *(void *)(v1 + 40));
  }
  return result;
}

void sub_100382B94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

void sub_100382BD0(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101834B20);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    id v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLFileUpdate::onStatusNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101834B20);
    }
    char v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLFileUpdate::onStatusNotification, event:%{public, location:escape_only}s, this :%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_10038426C(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100382D88( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100382DA8(uint64_t a1, int *a2, _BYTE *a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101834B20);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    id v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLFileUpdate::onCompanionNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101834B20);
    }
    char v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLFileUpdate::onCompanionNotification, event:%{public, location:escape_only}s, th is:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100383068(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100382F60( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100382F84(uint64_t a1)
{
  *(void *)a1 = off_101834AD8;
  sub_10038637C(a1);

  uint64_t v2 = *(void *)(a1 + 232);
  *(void *)(a1 + 232) = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  uint64_t v3 = *(void *)(a1 + 224);
  *(void *)(a1 + 224) = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  uint64_t v4 = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = 0LL;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  sub_1002E4CB0(a1 + 8);
  return a1;
}

void sub_100383054(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100382F84(a1);
  operator delete(v1);
}

uint64_t sub_100383068(uint64_t a1, uint64_t a2, int *a3, _BYTE *a4)
{
  uint64_t v7 = a1 + 8;
  (*(void (**)(uint64_t))(*(void *)(a1 + 8) + 16LL))(a1 + 8);
  if (qword_101934A30 != -1) {
    dispatch_once(&qword_101934A30, &stru_101834B40);
  }
  id v8 = (os_log_s *)qword_101934A38;
  if (os_log_type_enabled((os_log_t)qword_101934A38, OS_LOG_TYPE_DEBUG))
  {
    int v9 = *a3;
    *(_DWORD *)uint64_t buf = 67109120;
    int v24 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "CLFU,onCompanionNotification, notification, %d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A30 != -1) {
      dispatch_once(&qword_101934A30, &stru_101834B40);
    }
    int v14 = *a3;
    int v19 = 67109120;
    int v20 = v14;
    int v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A38,  2LL,  "CLFU,onCompanionNotification, notification, %d",  &v19);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFileUpdate::onCompanionNotification(int, const CLCompanionNotifier_Type::Notification &, const CLCompanionN otifier_Type::NotificationData &)",  "%s\n",  v15);
  }

  if (*a3 == 5)
  {
    sub_1004F2598();
    if (sub_1001B9A1C())
    {
      *(_BYTE *)(a1 + 241) = *a4;
      if (qword_101934A30 != -1) {
        dispatch_once(&qword_101934A30, &stru_101834B40);
      }
      uint64_t v10 = (os_log_s *)qword_101934A38;
      if (os_log_type_enabled((os_log_t)qword_101934A38, OS_LOG_TYPE_DEBUG))
      {
        int v11 = *(unsigned __int8 *)(a1 + 241);
        __int16 v12 = (void *)(a1 + 176);
        *(_DWORD *)uint64_t buf = 67240450;
        int v24 = v11;
        __int16 v25 = 2082;
        __int16 v26 = v12;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "CLFU,fCompanionIsNearby,%{public}d,fDownloadDst,%{public}s",  buf,  0x12u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A30 != -1) {
          dispatch_once(&qword_101934A30, &stru_101834B40);
        }
        int v16 = *(unsigned __int8 *)(a1 + 241);
        uint64_t v17 = (void *)(a1 + 176);
        int v19 = 67240450;
        int v20 = v16;
        __int16 v21 = 2082;
        uint64_t v22 = v17;
        __int16 v18 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A38,  2LL,  "CLFU,fCompanionIsNearby,%{public}d,fDownloadDst,%{public}s",  &v19,  18);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFileUpdate::onCompanionNotification(int, const CLCompanionNotifier_Type::Notification &, const CLCompan ionNotifier_Type::NotificationData &)",  "%s\n",  v18);
      }

      if (*(_BYTE *)(a1 + 241)) {
        sub_10038343C(a1);
      }
    }
  }

  return (*(uint64_t (**)(uint64_t))(*(void *)v7 + 24LL))(v7);
}

void sub_100383410(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

uint64_t sub_10038343C(uint64_t a1)
{
  uint64_t v3 = (char *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)&v53[1] = a1 + 8;
  (*(void (**)(uint64_t))(v2 + 16))(a1 + 8);
  __int16 v54 = 256;
  if (v3[167] < 0)
  {
    if (*(void *)(a1 + 160))
    {
LABEL_3:
      if (!sub_100384304(a1)) {
        return (*(uint64_t (**)(char *))(*(void *)v3 + 24LL))(v3);
      }
      uint64_t v4 = v3 + 144;
      if (objc_msgSend( objc_msgSend( objc_msgSend(*(id *)(a1 + 24), "vendor"),  "proxyForService:",  @"CLDaemonStatus"),  "syncgetReachability") == 2)
      {
        if (qword_101934A30 != -1) {
          dispatch_once(&qword_101934A30, &stru_101834B40);
        }
        uint64_t v5 = (os_log_s *)qword_101934A38;
        if (os_log_type_enabled((os_log_t)qword_101934A38, OS_LOG_TYPE_DEFAULT))
        {
          sub_1004F2598();
          int v6 = sub_1001B9A1C();
          uint64_t v7 = "(WiFi)";
          if (v6) {
            uint64_t v7 = "(WiFi or companion nearby)";
          }
          id v8 = v3 + 144;
          double v9 = *(double *)(a1 + 88);
          *(_DWORD *)uint64_t buf = 136446722;
          __int16 v66 = v7;
          __int16 v67 = 2082;
          double v68 = *(double *)&v8;
          __int16 v69 = 2050;
          double v70 = v9;
          _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "CLFU,we are now on large reachability %{public}s, scheduling a download for %{public}s (period %{public}.3f)",  buf,  0x20u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934A30 != -1) {
            dispatch_once(&qword_101934A30, &stru_101834B40);
          }
          uint64_t v39 = qword_101934A38;
          sub_1004F2598();
          int v40 = sub_1001B9A1C();
          int v41 = "(WiFi)";
          if (v40) {
            int v41 = "(WiFi or companion nearby)";
          }
          double v42 = v3 + 144;
          double v43 = *(double *)(a1 + 88);
          int v55 = 136446722;
          __int16 v56 = v41;
          __int16 v57 = 2082;
          double v58 = *(double *)&v42;
          __int16 v59 = 2050;
          double v60 = v43;
          int v44 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v39,  0LL,  "CLFU,we are now on large reachability %{public}s, scheduling a download for %{public}s (period %{public}.3f)",  &v55,  32);
          sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFileUpdate::scheduleDownload()", "%s\n", v44);
        }

        uint64_t v10 = (double *)(a1 + 88);
      }

      else
      {
        if (qword_101934A30 != -1) {
          dispatch_once(&qword_101934A30, &stru_101834B40);
        }
        int v13 = (os_log_s *)qword_101934A38;
        if (os_log_type_enabled((os_log_t)qword_101934A38, OS_LOG_TYPE_DEFAULT))
        {
          int v14 = v3 + 144;
          double v15 = *(double *)(a1 + 80);
          *(_DWORD *)uint64_t buf = 136446466;
          __int16 v66 = v14;
          __int16 v67 = 2050;
          double v68 = v15;
          _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "CLFU,we are now on short reachability (Cell), scheduling a download for %{public}s (period %{public}.3f)",  buf,  0x16u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934A30 != -1) {
            dispatch_once(&qword_101934A30, &stru_101834B40);
          }
          uint64_t v36 = v3 + 144;
          double v37 = *(double *)(a1 + 80);
          int v55 = 136446466;
          __int16 v56 = v36;
          __int16 v57 = 2050;
          double v58 = v37;
          unsigned int v38 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A38,  0LL,  "CLFU,we are now on short reachability (Cell), scheduling a download for %{public}s (period %{public}.3f)",  &v55,  22);
          sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFileUpdate::scheduleDownload()", "%s\n", v38);
        }

        uint64_t v10 = (double *)(a1 + 80);
      }

      double v16 = *v10;
      v53[0] = -1.0;
      double Current = CFAbsoluteTimeGetCurrent();
      double v18 = -1.0;
      if (v16 <= 0.0) {
        goto LABEL_73;
      }
      if (sub_100384668(a1, v53))
      {
        double v19 = v53[0];
        if (v53[0] >= Current - v16)
        {
          if (qword_101934A30 != -1) {
            dispatch_once(&qword_101934A30, &stru_101834B40);
          }
          double v18 = v16 + v19;
          __int16 v26 = (os_log_s *)qword_101934A38;
          if (os_log_type_enabled((os_log_t)qword_101934A38, OS_LOG_TYPE_DEFAULT))
          {
            __int16 v27 = v3 + 144;
            *(_DWORD *)uint64_t buf = 136447234;
            __int16 v66 = v27;
            __int16 v67 = 2050;
            double v68 = v16;
            __int16 v69 = 2050;
            double v70 = v53[0];
            __int16 v71 = 2050;
            double v72 = v18;
            __int16 v73 = 2050;
            double v74 = v18 - Current;
            _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEFAULT,  "CLFU,last %{public}s downloaded less than %{public}.3f seconds ago (%{public}.3f), scheduling download for %{public}.3f (%{public}.3f away)",  buf,  0x34u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934A30 != -1) {
              dispatch_once(&qword_101934A30, &stru_101834B40);
            }
            unsigned int v50 = v3 + 144;
            int v55 = 136447234;
            __int16 v56 = v50;
            __int16 v57 = 2050;
            double v58 = v16;
            __int16 v59 = 2050;
            double v60 = v53[0];
            __int16 v61 = 2050;
            double v62 = v18;
            __int16 v63 = 2050;
            double v64 = v18 - Current;
            LODWORD(v52) = 52;
            char v51 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A38,  0LL,  "CLFU,last %{public}s downloaded less than %{public}.3f seconds ago (%{public}.3f), schedulin g download for %{public}.3f (%{public}.3f away)",  &v55,  v52);
            sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFileUpdate::scheduleDownload()", "%s\n", v51);
          }

          goto LABEL_63;
        }

        if (qword_101934A30 != -1) {
          dispatch_once(&qword_101934A30, &stru_101834B40);
        }
        int v20 = (os_log_s *)qword_101934A38;
        if (os_log_type_enabled((os_log_t)qword_101934A38, OS_LOG_TYPE_DEFAULT))
        {
          __int16 v21 = v3 + 144;
          *(_DWORD *)uint64_t buf = 136446722;
          __int16 v66 = v21;
          __int16 v67 = 2050;
          double v68 = v16;
          __int16 v69 = 2050;
          double v70 = v53[0];
          _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "CLFU,last %{public}s downloaded over %{public}.3f seconds ago (%{public}.3f), starting a download now",  buf,  0x20u);
        }

        if (!sub_1002921D0(115, 2))
        {
LABEL_55:
          double v18 = Current;
LABEL_63:
          double v28 = *(double *)(a1 + 96);
          if (v28 >= 0.0 && v28 < v18)
          {
            if (qword_101934A30 != -1) {
              dispatch_once(&qword_101934A30, &stru_101834B40);
            }
            int v29 = (os_log_s *)qword_101934A38;
            if (os_log_type_enabled((os_log_t)qword_101934A38, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v30 = v3 + 144;
              double v31 = *(double *)(a1 + 96);
              *(_DWORD *)uint64_t buf = 136446722;
              __int16 v66 = v30;
              __int16 v67 = 2050;
              double v68 = v31;
              __int16 v69 = 2050;
              double v70 = v28 - v31;
              _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEFAULT,  "CLFU,scheduled download %{public}s is after %{public}.3f deadline (%{public}.3f after) - overriding",  buf,  0x20u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_101934A30 != -1) {
                dispatch_once(&qword_101934A30, &stru_101834B40);
              }
              int v47 = v3 + 144;
              double v48 = *(double *)(a1 + 96);
              int v55 = 136446722;
              __int16 v56 = v47;
              __int16 v57 = 2050;
              double v58 = v48;
              __int16 v59 = 2050;
              double v60 = v28 - v48;
              LODWORD(v52) = 32;
              char v49 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A38,  0LL,  "CLFU,scheduled download %{public}s is after %{public}.3f deadline (%{public}.3f after) - overriding",  &v55,  v52);
              sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFileUpdate::scheduleDownload()", "%s\n", v49);
            }

            double v18 = v28;
          }

void sub_100384218(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

uint64_t sub_10038426C(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  uint64_t v7 = a1 + 8;
  (*(void (**)(uint64_t))(*(void *)(a1 + 8) + 16LL))(a1 + 8);
  if (*a3 == 6 && *(_DWORD *)(a4 + 4) != 0) {
    sub_10038343C(a1);
  }
  return (*(uint64_t (**)(uint64_t))(*(void *)v7 + 24LL))(v7);
}

void sub_1003842EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

BOOL sub_100384304(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 120)) {
    return 1LL;
  }
  if (vabdd_f64(CFAbsoluteTimeGetCurrent(), *(double *)(a1 + 104)) > *(double *)(a1 + 72))
  {
    if (qword_101934A30 != -1) {
      dispatch_once(&qword_101934A30, &stru_101834B40);
    }
    uint64_t v7 = (os_log_s *)qword_101934A38;
    if (os_log_type_enabled((os_log_t)qword_101934A38, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = (void *)(a1 + 152);
      *(_DWORD *)uint64_t buf = 136446210;
      int v14 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "CLFU,current download of %{public}s has timed out, canceling",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A30 != -1) {
        dispatch_once(&qword_101934A30, &stru_101834B40);
      }
      double v9 = (void *)(a1 + 152);
      int v11 = 136446210;
      __int16 v12 = v9;
      uint64_t v10 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A38,  0LL,  "CLFU,current download of %{public}s has timed out, canceling",  &v11,  12);
      sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLFileUpdate::checkForDownloadTimeout()", "%s\n", v10);
    }

    (*(void (**)(void))(**(void **)(a1 + 48) + 24LL))(*(void *)(a1 + 48));
    *(_BYTE *)(a1 + 120) = 0;
    return 1LL;
  }

  if (qword_101934A30 != -1) {
    dispatch_once(&qword_101934A30, &stru_101834B40);
  }
  uint64_t v2 = (os_log_s *)qword_101934A38;
  if (os_log_type_enabled((os_log_t)qword_101934A38, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v3 = (void *)(a1 + 152);
    *(_DWORD *)uint64_t buf = 136446210;
    int v14 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "CLFU,download of %{public}s not yet timed out. Blocking current download request",  buf,  0xCu);
  }

  BOOL result = sub_1002921D0(115, 2);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A30 != -1) {
      dispatch_once(&qword_101934A30, &stru_101834B40);
    }
    uint64_t v5 = (void *)(a1 + 152);
    int v11 = 136446210;
    __int16 v12 = v5;
    int v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A38,  2LL,  "CLFU,download of %{public}s not yet timed out. Blocking current download request",  &v11,  12);
    sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLFileUpdate::checkForDownloadTimeout()", "%s\n", v6);
    return 0LL;
  }

  return result;
}

uint64_t sub_100384668(uint64_t a1, void *a2)
{
  uint64_t v5 = a1 + 8;
  uint64_t v4 = *(void *)(a1 + 8);
  *(void *)&v10[1] = a1 + 8;
  (*(void (**)(uint64_t))(v4 + 16))(a1 + 8);
  __int16 v11 = 256;
  if (sub_1003855E0(a1, v10))
  {
    uint64_t v6 = sub_1002F8DDC();
    uint64_t v7 = (const char *)(a1 + 128);
    uint64_t v8 = sub_1002A82BC(v6, v7, a2);
  }

  else
  {
    uint64_t v8 = 0LL;
  }

  (*(void (**)(uint64_t))(*(void *)v5 + 24LL))(v5);
  return v8;
}

void sub_10038470C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100384720(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6 = (_BYTE *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 8);
  *(void *)&v61[1] = a1 + 8;
  (*(void (**)(uint64_t))(v5 + 16))(a1 + 8);
  __int16 v62 = 256;
  v6[112] = 0;
  if (a3)
  {
    uint64_t v7 = (const char **)(a1 + 200);
    uint64_t v8 = (const char *)(a1 + 200);
    double v9 = (const char **)(a1 + 176);
    uint64_t v10 = (const char *)(a1 + 176);
    if (rename(v8, v10))
    {
      int v11 = *__error();
      if (qword_101934A30 != -1) {
        dispatch_once(&qword_101934A30, &stru_101834B40);
      }
      __int16 v12 = (os_log_s *)qword_101934A38;
      if (os_log_type_enabled((os_log_t)qword_101934A38, OS_LOG_TYPE_ERROR))
      {
        int v13 = (const char *)(a1 + 200);
        int v14 = (const char *)(a1 + 176);
        *(_DWORD *)uint64_t buf = 136446722;
        *(void *)__int16 v66 = v13;
        *(_WORD *)&v66[8] = 2082;
        *(void *)&v66[10] = v14;
        *(_WORD *)&v66[18] = 1026;
        *(_DWORD *)&v66[20] = v11;
        _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_ERROR,  "CLFU,could not rename %{public}s to %{public}s,%{public}d",  buf,  0x1Cu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A30 != -1) {
          dispatch_once(&qword_101934A30, &stru_101834B40);
        }
        int v63 = 136446722;
        *(void *)double v64 = v7;
        *(_WORD *)&v64[8] = 2082;
        *(void *)&v64[10] = v9;
        *(_WORD *)&v64[18] = 1026;
        *(_DWORD *)&v64[20] = v11;
        char v46 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A38,  16LL,  "CLFU,could not rename %{public}s to %{public}s,%{public}d",  &v63,  28);
        sub_10029211C("Generic", 1LL, 0, 0LL, "void CLFileUpdate::onDownloaded(CLFileDownload *, BOOL)", "%s\n", v46);
      }

      uint64_t v15 = 3LL;
    }

    else
    {
      if (qword_101934A30 != -1) {
        dispatch_once(&qword_101934A30, &stru_101834B40);
      }
      uint64_t v30 = (os_log_s *)qword_101934A38;
      if (os_log_type_enabled((os_log_t)qword_101934A38, OS_LOG_TYPE_DEFAULT))
      {
        double v31 = (const char *)(a1 + 176);
        *(_DWORD *)uint64_t buf = 136446210;
        *(void *)__int16 v66 = v31;
        _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEFAULT,  "CLFU,download completed to %{public}s",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A30 != -1) {
          dispatch_once(&qword_101934A30, &stru_101834B40);
        }
        unsigned int v50 = (const char *)(a1 + 176);
        int v63 = 136446210;
        *(void *)double v64 = v50;
        char v51 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A38,  0LL,  "CLFU,download completed to %{public}s",  &v63,  12);
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFileUpdate::onDownloaded(CLFileDownload *, BOOL)", "%s\n", v51);
      }

      if (sub_1003855E0(a1, v61))
      {
        if (qword_101934A30 != -1) {
          dispatch_once(&qword_101934A30, &stru_101834B40);
        }
        double v32 = (os_log_s *)qword_101934A38;
        if (os_log_type_enabled((os_log_t)qword_101934A38, OS_LOG_TYPE_DEBUG))
        {
          int v33 = (const char *)(a1 + 200);
          uint64_t v34 = (const char *)(a1 + 176);
          *(_DWORD *)uint64_t buf = 136446722;
          *(void *)__int16 v66 = v33;
          *(_WORD *)&v66[8] = 2082;
          *(void *)&v66[10] = v34;
          *(_WORD *)&v66[18] = 2050;
          *(double *)&v66[20] = v61[0];
          _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEBUG,  "CLFU,newly downloaded %{public}s file is now %{public}s (time %{public}.3f)",  buf,  0x20u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934A30 != -1) {
            dispatch_once(&qword_101934A30, &stru_101834B40);
          }
          int v63 = 136446722;
          *(void *)double v64 = v7;
          *(_WORD *)&v64[8] = 2082;
          *(void *)&v64[10] = v9;
          *(_WORD *)&v64[18] = 2050;
          *(double *)&v64[20] = v61[0];
          LODWORD(v60) = 32;
          __int16 v54 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A38,  2LL,  "CLFU,newly downloaded %{public}s file is now %{public}s (time %{public}.3f)",  &v63,  v60);
          sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFileUpdate::onDownloaded(CLFileDownload *, BOOL)", "%s\n", v54);
        }

        uint64_t v35 = sub_1002F8DDC();
        uint64_t v36 = (const char *)(a1 + 128);
        sub_1002AC7B8(v35, v36, v61);
        uint64_t v37 = sub_1002F8DDC();
        (*(void (**)(uint64_t))(*(void *)v37 + 944LL))(v37);
      }

      else
      {
        if (qword_101934A30 != -1) {
          dispatch_once(&qword_101934A30, &stru_101834B40);
        }
        int v40 = (os_log_s *)qword_101934A38;
        if (os_log_type_enabled((os_log_t)qword_101934A38, OS_LOG_TYPE_DEFAULT))
        {
          int v41 = (const char *)(a1 + 176);
          *(_DWORD *)uint64_t buf = 136446210;
          *(void *)__int16 v66 = v41;
          _os_log_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_DEFAULT,  "#Warning,CLFU, could not get modified time for %{public}s",  buf,  0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934A30 != -1) {
            dispatch_once(&qword_101934A30, &stru_101834B40);
          }
          int v63 = 136446210;
          *(void *)double v64 = v9;
          LODWORD(v60) = 12;
          int v55 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A38,  0LL,  "#Warning,CLFU, could not get modified time for %{public}s",  &v63,  v60);
          sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFileUpdate::onDownloaded(CLFileDownload *, BOOL)", "%s\n", v55);
        }
      }

      *(void *)(a1 + 96) = 0xBFF0000000000000LL;
      uint64_t v15 = 2LL;
    }

    *(void *)(a1 + 112) = 0xBFF0000000000000LL;
    *(_DWORD *)(a1 + 64) = 0;
    sub_10038343C(a1);
  }

  else
  {
    if (qword_101934A30 != -1) {
      dispatch_once(&qword_101934A30, &stru_101834B40);
    }
    double v16 = (os_log_s *)qword_101934A38;
    if (os_log_type_enabled((os_log_t)qword_101934A38, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v17 = (void *)(a1 + 152);
      double v18 = (void *)(a1 + 200);
      *(_DWORD *)uint64_t buf = 136446466;
      *(void *)__int16 v66 = v17;
      *(_WORD *)&v66[8] = 2082;
      *(void *)&v66[10] = v18;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "#Warning,CLFU, could not download from %{public}s to %{public}s",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A30 != -1) {
        dispatch_once(&qword_101934A30, &stru_101834B40);
      }
      double v43 = (void *)(a1 + 152);
      int v44 = (void *)(a1 + 200);
      int v63 = 136446466;
      *(void *)double v64 = v43;
      *(_WORD *)&v64[8] = 2082;
      *(void *)&v64[10] = v44;
      char v45 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A38,  0LL,  "#Warning,CLFU, could not download from %{public}s to %{public}s",  &v63,  22);
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFileUpdate::onDownloaded(CLFileDownload *, BOOL)", "%s\n", v45);
    }

    unsigned int v19 = objc_msgSend( objc_msgSend( objc_msgSend(*(id *)(a1 + 24), "vendor"),  "proxyForService:",  @"CLDaemonStatus"),  "syncgetReachability");
    if (v19)
    {
      double Current = CFAbsoluteTimeGetCurrent();
      double v21 = sub_1002974D8(*(_DWORD *)(a1 + 64), 10, 4);
      if (v19 == 2)
      {
        double v22 = *(double *)(a1 + 88);
        if (v22 > 0.0 && v21 > v22)
        {
          if (qword_101934A30 != -1) {
            dispatch_once(&qword_101934A30, &stru_101834B40);
          }
          __int16 v23 = (os_log_s *)qword_101934A38;
          if (os_log_type_enabled((os_log_t)qword_101934A38, OS_LOG_TYPE_DEFAULT))
          {
            int v24 = *(_DWORD *)(a1 + 64);
            uint64_t v25 = *(void *)(a1 + 88);
            __int16 v26 = (void *)(a1 + 152);
            *(_DWORD *)uint64_t buf = 134349826;
            *(double *)__int16 v66 = v21;
            *(_WORD *)&v66[8] = 1026;
            *(_DWORD *)&v66[10] = v24;
            *(_WORD *)&v66[14] = 2050;
            *(void *)&v66[16] = v25;
            *(_WORD *)&v66[24] = 2082;
            *(void *)&v66[26] = v26;
            _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEFAULT,  "CLFU,delay %{public}.3f for retry count %{public}d exceeds current update period of %{public}.3f, setting delay to half the current update period for %{public}s",  buf,  0x26u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934A30 != -1) {
              dispatch_once(&qword_101934A30, &stru_101834B40);
            }
            int v56 = *(_DWORD *)(a1 + 64);
            uint64_t v57 = *(void *)(a1 + 88);
            double v58 = (void *)(a1 + 152);
            int v63 = 134349826;
            *(double *)double v64 = v21;
            *(_WORD *)&v64[8] = 1026;
            *(_DWORD *)&v64[10] = v56;
            *(_WORD *)&v64[14] = 2050;
            *(void *)&v64[16] = v57;
            *(_WORD *)&v64[24] = 2082;
            *(void *)&v64[26] = v58;
            LODWORD(v60) = 38;
            __int16 v59 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A38,  0LL,  "CLFU,delay %{public}.3f for retry count %{public}d exceeds current update period of %{public }.3f, setting delay to half the current update period for %{public}s",  &v63,  v60);
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFileUpdate::onDownloaded(CLFileDownload *, BOOL)",  "%s\n",  v59);
          }

          double v21 = *(double *)(a1 + 88) * 0.5;
        }
      }

      *(double *)(a1 + 112) = Current + v21;
      if (qword_101934A30 != -1) {
        dispatch_once(&qword_101934A30, &stru_101834B40);
      }
      __int16 v27 = (os_log_s *)qword_101934A38;
      if (os_log_type_enabled((os_log_t)qword_101934A38, OS_LOG_TYPE_DEFAULT))
      {
        int v28 = *(_DWORD *)(a1 + 64);
        int v29 = (void *)(a1 + 152);
        *(_DWORD *)uint64_t buf = 67240706;
        *(_DWORD *)__int16 v66 = v28;
        *(_WORD *)&v66[4] = 2082;
        *(void *)&v66[6] = v29;
        *(_WORD *)&v66[14] = 2050;
        *(double *)&v66[16] = v21;
        _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEFAULT,  "CLFU,retry count %{public}d, will re-download for %{public}s after delay of %{public}.3f",  buf,  0x1Cu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A30 != -1) {
          dispatch_once(&qword_101934A30, &stru_101834B40);
        }
        int v47 = *(_DWORD *)(a1 + 64);
        double v48 = (void *)(a1 + 152);
        int v63 = 67240706;
        *(_DWORD *)double v64 = v47;
        *(_WORD *)&v64[4] = 2082;
        *(void *)&v64[6] = v48;
        *(_WORD *)&v64[14] = 2050;
        *(double *)&v64[16] = v21;
        LODWORD(v60) = 28;
        char v49 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A38,  0LL,  "CLFU,retry count %{public}d, will re-download for %{public}s after delay of %{public}.3f",  &v63,  v60);
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFileUpdate::onDownloaded(CLFileDownload *, BOOL)", "%s\n", v49);
      }

      ++*(_DWORD *)(a1 + 64);
      [*(id *)(a1 + 56) setNextFireTime:*(double *)(a1 + 112)];
    }

    else
    {
      if (qword_101934A30 != -1) {
        dispatch_once(&qword_101934A30, &stru_101834B40);
      }
      unsigned int v38 = (os_log_s *)qword_101934A38;
      if (os_log_type_enabled((os_log_t)qword_101934A38, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v39 = (void *)(a1 + 152);
        *(_DWORD *)uint64_t buf = 136446210;
        *(void *)__int16 v66 = v39;
        _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_DEFAULT,  "CLFU,data reachability is not available - not retrying %{public}s",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A30 != -1) {
          dispatch_once(&qword_101934A30, &stru_101834B40);
        }
        uint64_t v52 = (void *)(a1 + 152);
        int v63 = 136446210;
        *(void *)double v64 = v52;
        LODWORD(v60) = 12;
        __int16 v53 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A38,  0LL,  "CLFU,data reachability is not available - not retrying %{public}s",  &v63,  v60);
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFileUpdate::onDownloaded(CLFileDownload *, BOOL)", "%s\n", v53);
      }
    }

    uint64_t v15 = 3LL;
  }

  (*(void (**)(_BYTE *))(*(void *)v6 + 24LL))(v6);
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(a1 + 32))(a1, v15, *(void *)(a1 + 40));
}

void sub_100385580(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

BOOL sub_1003855E0(uint64_t a1, double *a2)
{
  uint64_t v5 = (char *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v15 = a1 + 8;
  (*(void (**)(uint64_t))(v4 + 16))(a1 + 8);
  __int16 v16 = 256;
  uint64_t v6 = (const char **)(v5 + 168);
  uint64_t v7 = v5 + 168;
  if (v5[191] < 0) {
    uint64_t v7 = *v6;
  }
  int v8 = stat(v7, &v14);
  if (v8)
  {
    int v9 = *__error();
    if (qword_101934A30 != -1) {
      dispatch_once(&qword_101934A30, &stru_101834B40);
    }
    uint64_t v10 = (os_log_s *)qword_101934A38;
    if (os_log_type_enabled((os_log_t)qword_101934A38, OS_LOG_TYPE_ERROR))
    {
      int v11 = v5 + 168;
      *(_DWORD *)uint64_t buf = 136446466;
      double v22 = v11;
      __int16 v23 = 1026;
      int v24 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_ERROR,  "CLFU,destination stat failed,%{public}s,%{public}d",  buf,  0x12u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A30 != -1) {
        dispatch_once(&qword_101934A30, &stru_101834B40);
      }
      int v17 = 136446466;
      double v18 = v6;
      __int16 v19 = 1026;
      int v20 = v9;
      __int16 v12 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A38,  16LL,  "CLFU,destination stat failed,%{public}s,%{public}d",  &v17,  18);
      sub_10029211C("Generic", 1LL, 0, 0LL, "BOOL CLFileUpdate::getFileModifiedTime(CFAbsoluteTime &)", "%s\n", v12);
    }
  }

  else
  {
    *a2 = sub_100295150(&v14.st_mtimespec.tv_sec);
  }

  (*(void (**)(char *))(*(void *)v5 + 24LL))(v5);
  return v8 == 0;
}

void sub_100385848( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, char a30)
{
}

BOOL sub_100385874( uint64_t a1, const std::string::value_type *a2, const std::string::value_type *a3, double *a4)
{
  int v8 = (unsigned __int8 *)(a1 + 8);
  (*(void (**)(uint64_t))(*(void *)(a1 + 8) + 16LL))(a1 + 8);
  int v9 = v8[112];
  if (v8[112])
  {
    if (qword_101934A30 != -1) {
      dispatch_once(&qword_101934A30, &stru_101834B40);
    }
    uint64_t v10 = (os_log_s *)qword_101934A38;
    if (os_log_type_enabled((os_log_t)qword_101934A38, OS_LOG_TYPE_INFO))
    {
      int v11 = (void *)(a1 + 152);
      *(_DWORD *)uint64_t buf = 136446210;
      *(void *)&uint8_t buf[4] = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_INFO,  "#Warning,CLFU,%{public}s downloading in progress, cannot change update settings",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A30 != -1) {
        dispatch_once(&qword_101934A30, &stru_101834B40);
      }
      __int16 v12 = (void *)(a1 + 152);
      int v37 = 136446210;
      unsigned int v38 = v12;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A38,  1LL,  "#Warning,CLFU,%{public}s downloading in progress, cannot change update settings",  &v37,  12);
      stat v14 = (uint8_t *)v13;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLFileUpdate::setUpdateSource(const char *, const char *, const CFTimeInterval &)",  "%s\n",  v13);
LABEL_14:
      if (v14 != buf) {
        free(v14);
      }
    }
  }

  else
  {
    uint64_t v15 = (uint64_t *)(a1 + 152);
    std::string::assign((std::string *)(a1 + 152), a2);
    __int16 v16 = (_BYTE **)(a1 + 176);
    std::string::assign((std::string *)(a1 + 176), a3);
    double v17 = *a4;
    if (*a4 <= 0.0)
    {
      if (qword_101934A30 != -1) {
        dispatch_once(&qword_101934A30, &stru_101834B40);
      }
      double v18 = (os_log_s *)qword_101934A38;
      if (os_log_type_enabled((os_log_t)qword_101934A38, OS_LOG_TYPE_ERROR))
      {
        __int16 v19 = (void *)(a1 + 152);
        *(_DWORD *)uint64_t buf = 136446210;
        *(void *)&uint8_t buf[4] = v19;
        _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_ERROR,  "CLFU,%{public}s download timeout must be greater than 0. Forcing to 30 seconds.",  buf,  0xCu);
      }

      BOOL v20 = sub_1002921D0(115, 0);
      double v17 = 30.0;
      if (v20)
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A30 != -1) {
          dispatch_once(&qword_101934A30, &stru_101834B40);
        }
        double v32 = (void *)(a1 + 152);
        int v37 = 136446210;
        unsigned int v38 = v32;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A38,  16LL,  "CLFU,%{public}s download timeout must be greater than 0. Forcing to 30 seconds.",  &v37,  12);
        uint64_t v34 = (uint8_t *)v33;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLFileUpdate::setUpdateSource(const char *, const char *, const CFTimeInterval &)",  "%s\n",  v33);
        if (v34 != buf) {
          free(v34);
        }
        double v17 = 30.0;
      }
    }

    *(double *)(a1 + 72) = v17;
    std::operator+<char>(buf, "FileUpdate.", a1 + 152);
    double v21 = (void **)(a1 + 128);
    *(_OWORD *)double v21 = *(_OWORD *)buf;
    *(void *)(a1 + 144) = v40;
    else {
      size_t v22 = *(void *)(a1 + 184);
    }
    __int16 v23 = buf;
    sub_1000392EC((uint64_t)buf, v22 + 5);
    if (v40 < 0) {
      __int16 v23 = *(uint8_t **)buf;
    }
    if (v22)
    {
      else {
        int v24 = *(const void **)(a1 + 176);
      }
      memmove(v23, v24, v22);
    }

    strcpy((char *)&v23[v22], ".temp");
    uint64_t v25 = (void **)(a1 + 200);
    *(_OWORD *)uint64_t v25 = *(_OWORD *)buf;
    *(void *)(a1 + 216) = v40;
    __int16 v26 = (_BYTE *)(a1 + 176);
    uid_t v27 = getuid();
    gid_t v28 = getgid();
    if (!sub_100292C04(v26, v27, v28))
    {
      if (qword_101934A30 != -1) {
        dispatch_once(&qword_101934A30, &stru_101834B40);
      }
      int v29 = (os_log_s *)qword_101934A38;
      if (os_log_type_enabled((os_log_t)qword_101934A38, OS_LOG_TYPE_FAULT))
      {
        uint64_t v30 = (_BYTE *)(a1 + 176);
        *(_DWORD *)uint64_t buf = 136446210;
        *(void *)&uint8_t buf[4] = v30;
        _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_FAULT,  "CLFU,could not create path %{public}s",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A30 != -1) {
          dispatch_once(&qword_101934A30, &stru_101834B40);
        }
        int v37 = 136446210;
        unsigned int v38 = v16;
        LODWORD(v36) = 12;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A38,  17LL,  "CLFU,could not create path %{public}s",  &v37,  v36);
        stat v14 = (uint8_t *)v35;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLFileUpdate::setUpdateSource(const char *, const char *, const CFTimeInterval &)",  "%s\n",  v35);
        goto LABEL_14;
      }
    }
  }

  (*(void (**)(unsigned __int8 *))(*(void *)v8 + 24LL))(v8);
  return v9 == 0;
}

void sub_100385E88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

uint64_t sub_100385EC0(uint64_t a1, double *a2, double *a3)
{
  uint64_t v6 = (void *)(a1 + 8);
  (*(void (**)(uint64_t))(*(void *)(a1 + 8) + 16LL))(a1 + 8);
  double v7 = *a2;
  v6[9] = *(void *)a2;
  double v8 = *a3;
  v6[10] = *(void *)a3;
  if (v7 > 0.0 && v7 < v8)
  {
    if (qword_101934A30 != -1) {
      dispatch_once(&qword_101934A30, &stru_101834B40);
    }
    uint64_t v10 = (os_log_s *)qword_101934A38;
    if (os_log_type_enabled((os_log_t)qword_101934A38, OS_LOG_TYPE_DEFAULT))
    {
      int v11 = *(void **)(a1 + 80);
      uint64_t v12 = *(void *)(a1 + 88);
      *(_DWORD *)uint64_t buf = 134349312;
      uint64_t v35 = v11;
      __int16 v36 = 2050;
      uint64_t v37 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "#Warning,CLFU,update rate %{public}.3fs is shorter than WiFi update rate %{public}.3fs - overriding WiFi update rate",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A30 != -1) {
        dispatch_once(&qword_101934A30, &stru_101834B40);
      }
      __int16 v23 = *(void **)(a1 + 80);
      uint64_t v24 = *(void *)(a1 + 88);
      int v28 = 134349312;
      int v29 = v23;
      __int16 v30 = 2050;
      uint64_t v31 = v24;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A38,  0LL,  "#Warning,CLFU,update rate %{public}.3fs is shorter than WiFi update rate %{public}.3fs - overriding WiFi update rate",  &v28,  22);
      __int16 v26 = (uint8_t *)v25;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLFileUpdate::setUpdateRate(const CFTimeInterval &, const CFTimeInterval &)",  "%s\n",  v25);
      if (v26 != buf) {
        free(v26);
      }
    }

    *(void *)(a1 + 88) = *(void *)(a1 + 80);
  }

  if (qword_101934A30 != -1) {
    dispatch_once(&qword_101934A30, &stru_101834B40);
  }
  int v13 = (os_log_s *)qword_101934A38;
  if (os_log_type_enabled((os_log_t)qword_101934A38, OS_LOG_TYPE_INFO))
  {
    stat v14 = (void *)(a1 + 176);
    uint64_t v15 = *(void *)(a1 + 80);
    uint64_t v16 = *(void *)(a1 + 88);
    *(_DWORD *)uint64_t buf = 136446722;
    uint64_t v35 = v14;
    __int16 v36 = 2050;
    uint64_t v37 = v15;
    __int16 v38 = 2050;
    uint64_t v39 = v16;
    _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_INFO,  "CLFU,file %{public}s update rate set to %{public}.3fs, %{public}.3fs",  buf,  0x20u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A30 != -1) {
      dispatch_once(&qword_101934A30, &stru_101834B40);
    }
    double v18 = (void *)(a1 + 176);
    uint64_t v19 = *(void *)(a1 + 80);
    uint64_t v20 = *(void *)(a1 + 88);
    int v28 = 136446722;
    int v29 = v18;
    __int16 v30 = 2050;
    uint64_t v31 = v19;
    __int16 v32 = 2050;
    uint64_t v33 = v20;
    LODWORD(v27) = 32;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A38,  1LL,  "CLFU,file %{public}s update rate set to %{public}.3fs, %{public}.3fs",  &v28,  v27);
    size_t v22 = (uint8_t *)v21;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLFileUpdate::setUpdateRate(const CFTimeInterval &, const CFTimeInterval &)",  "%s\n",  v21);
    if (v22 != buf) {
      free(v22);
    }
  }

  [*(id *)(*(void *)(a1 + 224) + 16) register:*(void *)(*(void *)(a1 + 224) + 8) forNotification:6 registrationInfo:0];
  sub_10038343C(a1);
  (*(void (**)(void *))(*v6 + 24LL))(v6);
  return 1LL;
}

void sub_10038629C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

uint64_t sub_1003862CC(double *a1, double *a2)
{
  uint64_t v4 = a1 + 1;
  (*(void (**)(void *))(*((void *)a1 + 1) + 16LL))((void *)a1 + 1);
  if (sub_100384304((uint64_t)a1))
  {
    a1[12] = *a2;
    uint64_t v5 = (void *)*((void *)a1 + 7);
    [v5 nextFireTime];
    if (a1[12] < v6) {
      double v6 = a1[12];
    }
    [v5 setNextFireTime:v6];
  }

  return (*(uint64_t (**)(void *))(*v4 + 24LL))(v4);
}

void sub_100386364(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_10038637C(uint64_t a1)
{
  uint64_t v2 = (void *)(a1 + 8);
  (*(void (**)(uint64_t))(*(void *)(a1 + 8) + 16LL))(a1 + 8);
  [*(id *)(v2[27] + 16) unregister:*(void *)(v2[27] + 8) forNotification:6];
  [*(id *)(*(void *)(a1 + 232) + 16) unregister:*(void *)(*(void *)(a1 + 232) + 8) forNotification:5];
  if (qword_101934A30 != -1) {
    dispatch_once(&qword_101934A30, &stru_101834B40);
  }
  uint64_t v3 = (os_log_s *)qword_101934A38;
  if (os_log_type_enabled((os_log_t)qword_101934A38, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v4 = (void *)(a1 + 152);
    *(_DWORD *)uint64_t buf = 136315138;
    uint64_t v20 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "CLFU,unregistered for kNotificationCompanionConnectionUpdate for %s",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A30 != -1) {
      dispatch_once(&qword_101934A30, &stru_101834B40);
    }
    int v13 = (void *)(a1 + 152);
    int v17 = 136315138;
    double v18 = v13;
    stat v14 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A38,  2LL,  "CLFU,unregistered for kNotificationCompanionConnectionUpdate for %s",  (const char *)&v17);
    sub_10029211C("Generic", 1LL, 0, 2LL, "virtual void CLFileUpdate::cancelUpdate()", "%s\n", v14);
  }

  if (*(_BYTE *)(a1 + 120))
  {
    if (qword_101934A30 != -1) {
      dispatch_once(&qword_101934A30, &stru_101834B40);
    }
    uint64_t v5 = (os_log_s *)qword_101934A38;
    if (os_log_type_enabled((os_log_t)qword_101934A38, OS_LOG_TYPE_DEFAULT))
    {
      double v6 = (void *)(a1 + 152);
      *(_DWORD *)uint64_t buf = 136446210;
      uint64_t v20 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "CLFU,stopping download of %{public}s",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A30 != -1) {
        dispatch_once(&qword_101934A30, &stru_101834B40);
      }
      uint64_t v15 = (void *)(a1 + 152);
      int v17 = 136446210;
      double v18 = v15;
      uint64_t v16 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A38,  0LL,  "CLFU,stopping download of %{public}s",  &v17,  12);
      sub_10029211C("Generic", 1LL, 0, 2LL, "virtual void CLFileUpdate::cancelUpdate()", "%s\n", v16);
    }

    (*(void (**)(void))(**(void **)(a1 + 48) + 24LL))(*(void *)(a1 + 48));
    *(_BYTE *)(a1 + 120) = 0;
  }

  __asm { FMOV            V0.2D, #-1.0 }

  *(_OWORD *)(a1 + 80) = _Q0;
  *(void *)(a1 + 96) = 0xBFF0000000000000LL;
  [*(id *)(a1 + 56) setNextFireDelay:1.79769313e308];
  return (*(uint64_t (**)(void *))(*v2 + 24LL))(v2);
}

void sub_100386738(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

uint64_t sub_10038676C(uint64_t a1, unint64_t *a2)
{
  uint64_t v4 = (double *)(a1 + 8);
  (*(void (**)(uint64_t))(*(void *)(a1 + 8) + 16LL))(a1 + 8);
  v5.n128_u64[0] = *a2;
  return (*(uint64_t (**)(double *, __n128))(*(void *)v4 + 24LL))(v4, v5);
}

uint64_t sub_1003867D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1 + 8;
  (*(void (**)(uint64_t))(*(void *)(a1 + 8) + 16LL))(a1 + 8);
  if (*(char *)(v4 + 167) < 0)
  {
    sub_1010DD48C((_BYTE *)a2, *(void **)(a1 + 152), *(void *)(a1 + 160));
  }

  else
  {
    *(_OWORD *)a2 = *(_OWORD *)(v4 + 144);
    *(void *)(a2 + 16) = *(void *)(v4 + 160);
  }

  return (*(uint64_t (**)(uint64_t))(*(void *)v4 + 24LL))(v4);
}

void sub_10038685C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100386874@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1 + 8;
  (*(void (**)(uint64_t))(*(void *)(a1 + 8) + 16LL))(a1 + 8);
  if (*(char *)(v4 + 191) < 0)
  {
    sub_1010DD48C((_BYTE *)a2, *(void **)(a1 + 176), *(void *)(a1 + 184));
  }

  else
  {
    *(_OWORD *)a2 = *(_OWORD *)(v4 + 168);
    *(void *)(a2 + 16) = *(void *)(v4 + 184);
  }

  return (*(uint64_t (**)(uint64_t))(*(void *)v4 + 24LL))(v4);
}

void sub_100386900(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100386918(uint64_t result, char a2)
{
  *(_BYTE *)(result + 240) = a2;
  return result;
}

void sub_100386920(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_10038694C(id a1)
{
  qword_101934A38 = (uint64_t)os_log_create("com.apple.locationd.Utility", "Network");
}

id sub_100386ACC(void *a1)
{
  uint64_t v2 = objc_opt_class(&OBJC_CLASS___CLCppContainer);
  if ((objc_opt_isKindOfClass(a1, v2) & 1) != 0) {
    return sub_10038ECB0(a1);
  }
  else {
    return 0LL;
  }
}

void sub_100386B18(uint64_t a1, void *a2)
{
  uint64_t v4 = +[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", a2[1]);
  id v5 = +[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary");
  id v31 = v5;
  [v5 setObject:v4 forKeyedSubscript:@"CLMiLoConnectionReturnCode"];
  switch(a2[1])
  {
    case 1LL:
      double v6 = -[NSUUID initWithUUIDBytes:](objc_alloc(&OBJC_CLASS___NSUUID), "initWithUUIDBytes:", a2 + 40);
      if (qword_1019348D0 != -1) {
        dispatch_once(&qword_1019348D0, &stru_101834BC0);
      }
      double v7 = (os_log_s *)qword_1019348D8;
      if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEBUG))
      {
        id v8 = objc_msgSend(objc_msgSend(*(id *)(a1 + 72), "UUIDString"), "UTF8String");
        *(_DWORD *)uint64_t buf = 68289794;
        int v33 = 0;
        __int16 v34 = 2082;
        uint64_t v35 = "";
        __int16 v36 = 2082;
        uint64_t v37 = (uint64_t)v8;
        __int16 v38 = 2082;
        uint64_t v39 = -[NSString UTF8String](-[NSUUID UUIDString](v6, "UUIDString"), "UTF8String");
        __int16 v40 = 2050;
        uint64_t v41 = a1;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:MiLoConnectionSubscription, didCreateService, connectionToken:%{public, location: escape_only}s, serviceIdentifier:%{public, location:escape_only}s, self:%{public}p}",  buf,  0x30u);
      }

      goto LABEL_34;
    case 2LL:
      if (qword_1019348D0 != -1) {
        dispatch_once(&qword_1019348D0, &stru_101834BC0);
      }
      int v9 = (os_log_s *)qword_1019348D8;
      if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEBUG))
      {
        id v10 = objc_msgSend(objc_msgSend(*(id *)(a1 + 72), "UUIDString"), "UTF8String");
        *(_DWORD *)uint64_t buf = 68289282;
        int v33 = 0;
        __int16 v34 = 2082;
        uint64_t v35 = "";
        __int16 v36 = 2082;
        uint64_t v37 = (uint64_t)v10;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:MiLoConnectionSubscription, createServiceFailed, connectionToken:%{public, locati on:escape_only}s}",  buf,  0x1Cu);
      }

      objc_msgSend( v5,  "setObject:forKeyedSubscript:",  +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", a2[39]),  @"CLMiLoConnectionErrorMessage");
      goto LABEL_37;
    case 3LL:
      int v11 = -[NSUUID initWithUUIDBytes:](objc_alloc(&OBJC_CLASS___NSUUID), "initWithUUIDBytes:", a2 + 40);
      uint64_t v12 = off_101871068;
      goto LABEL_36;
    case 4LL:
      objc_msgSend( v5,  "setObject:forKeyedSubscript:",  -[NSUUID initWithUUIDBytes:]([NSUUID alloc], "initWithUUIDBytes:", a2 + 40),  @"CLMiLoConnectionServiceIdentifier");
      goto LABEL_14;
    case 5LL:
      int v13 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
      uint64_t v14 = a2[43];
      if (a2[44] != v14)
      {
        unint64_t v15 = a2[46];
        uint64_t v16 = a2[47];
        int v17 = (void *)(v14 + 8 * (v15 / 0x38));
        double v18 = (void *)(*v17 + 72 * (v15 % 0x38));
        unint64_t v19 = *(void *)(v14 + 8 * ((v16 + v15) / 0x38)) + 72 * ((v16 + v15) % 0x38);
        while (v18 != (void *)v19)
        {
          id v20 = sub_100388668(v18);
          -[NSMutableArray addObject:](v13, "addObject:", v20);

          v18 += 9;
          if ((void *)((char *)v18 - *v17) == (void *)4032)
          {
            double v21 = (void *)v17[1];
            ++v17;
            double v18 = v21;
          }
        }
      }

      [v5 setObject:v13 forKeyedSubscript:@"CLMiLoConnectionServiceDescriptors"];

      goto LABEL_37;
    case 6LL:
    case 0xCLL:
LABEL_14:
      int v11 = +[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", a2[39]);
      uint64_t v12 = off_101871060;
      goto LABEL_36;
    case 7LL:
      id v22 = sub_100388778((uint64_t)(a2 + 2));
      [v5 setObject:v22 forKeyedSubscript:@"CLMiLoConnectionServiceStatus"];

      goto LABEL_37;
    case 8LL:
      objc_msgSend( v5,  "setObject:forKeyedSubscript:",  +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", a2[39]),  @"CLMiLoConnectionErrorMessage");
      double v6 = -[NSUUID initWithUUIDBytes:](objc_alloc(&OBJC_CLASS___NSUUID), "initWithUUIDBytes:", a2 + 40);
      if (-[NSUUID isEqual:](v6, "isEqual:", *(void *)(a1 + 80)))
      {
        if (qword_1019348D0 != -1) {
          dispatch_once(&qword_1019348D0, &stru_101834BC0);
        }
        __int16 v23 = (os_log_s *)qword_1019348D8;
        if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v24 = *(void *)(*(void *)(*(void *)a1 - 8LL) + 8LL) & 0x7FFFFFFFFFFFFFFFLL;
          *(_DWORD *)uint64_t buf = 68289538;
          int v33 = 0;
          __int16 v34 = 2082;
          uint64_t v35 = "";
          __int16 v36 = 2082;
          uint64_t v37 = v24;
          __int16 v38 = 2082;
          uint64_t v39 = -[NSString UTF8String](-[NSUUID UUIDString](v6, "UUIDString"), "UTF8String");
          _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:connect to service failed, clear fConnectedServiceIdentifier, class:%{public, l ocation:escape_only}s, ServiceId:%{public, location:escape_only}s}",  buf,  0x26u);
        }

        *(void *)(a1 + 80) = 0LL;
      }

      goto LABEL_34;
    case 9LL:
      objc_msgSend( v5,  "setObject:forKeyedSubscript:",  +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", a2[39]),  @"CLMiLoConnectionErrorMessage");
      double v6 = -[NSUUID initWithUUIDBytes:](objc_alloc(&OBJC_CLASS___NSUUID), "initWithUUIDBytes:", a2 + 40);
      if (!*(void *)(a1 + 80))
      {
        if (qword_1019348D0 != -1) {
          dispatch_once(&qword_1019348D0, &stru_101834BC0);
        }
        uint64_t v25 = (os_log_s *)qword_1019348D8;
        if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v26 = *(void *)(*(void *)(*(void *)a1 - 8LL) + 8LL) & 0x7FFFFFFFFFFFFFFFLL;
          *(_DWORD *)uint64_t buf = 68289538;
          int v33 = 0;
          __int16 v34 = 2082;
          uint64_t v35 = "";
          __int16 v36 = 2082;
          uint64_t v37 = v26;
          __int16 v38 = 2082;
          uint64_t v39 = -[NSString UTF8String](-[NSUUID UUIDString](v6, "UUIDString"), "UTF8String");
          _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:disconnect to service failed, restore fConnectedServiceIdentifier, class:%{publ ic, location:escape_only}s, ServiceId:%{public, location:escape_only}s}",  buf,  0x26u);
        }

        *(void *)(a1 + 80) = -[NSUUID copy](v6, "copy");
      }

id sub_100387424(void *a1)
{
  uint64_t v2 = objc_opt_class(&OBJC_CLASS___CLCppContainer);
  if ((objc_opt_isKindOfClass(a1, v2) & 1) != 0) {
    return sub_10038F088(a1);
  }
  else {
    return 0LL;
  }
}

void sub_100387470(uint64_t a1, void *a2)
{
  id v5 = +[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary");
  id v4 = sub_100388C94(a2);
  [v5 setObject:v4 forKeyedSubscript:@"CLMiLoConnectionPredictionUpdate"];

  sub_1003892D0(a1, &v5);
}

id sub_1003875E8(void *a1)
{
  uint64_t v2 = objc_opt_class(&OBJC_CLASS___CLCppContainer);
  if ((objc_opt_isKindOfClass(a1, v2) & 1) != 0) {
    return sub_10038F434(a1);
  }
  else {
    return 0LL;
  }
}

void sub_100387634(uint64_t a1, uint64_t *a2)
{
  if (qword_1019348D0 != -1) {
    dispatch_once(&qword_1019348D0, &stru_101834BC0);
  }
  id v4 = (os_log_s *)qword_1019348D8;
  if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_INFO))
  {
    uint64_t v5 = *a2;
    uint64_t v8 = 68289282LL;
    __int16 v9 = 2082;
    id v10 = "";
    __int16 v11 = 1026;
    int v12 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:onMiLoServiceDebugResponse, Event Type:%{public}d}",  (uint8_t *)&v8,  0x18u);
  }

  id v6 = +[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary");
  uint64_t v8 = (uint64_t)v6;
  id v7 = sub_100389378((uint64_t)a2);
  [v6 setObject:v7 forKeyedSubscript:@"CLMiLoConnectionDebugEventResponse"];

  sub_1003894B0(a1, &v8);
}

id sub_100387870(void *a1)
{
  uint64_t v2 = objc_opt_class(&OBJC_CLASS___CLCppEncodableDataContainer);
  if ((objc_opt_isKindOfClass(a1, v2) & 1) != 0) {
    return sub_10038F7E0(a1);
  }
  uint64_t v4 = objc_opt_class(&OBJC_CLASS___CLCppContainer);
  if ((objc_opt_isKindOfClass(a1, v4) & 1) != 0) {
    return sub_10038FB68(a1);
  }
  else {
    return 0LL;
  }
}

void sub_1003878E8(uint64_t a1, void *a2)
{
  id v5 = +[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary");
  id v4 = [[CLMiLoConnectionStatus alloc] initWithConnectionState:*a2];
  [v5 setObject:v4 forKeyedSubscript:@"CLMiLoConnectionStatusEvent"];

  sub_100389558(a1, &v5);
}

id sub_100387A7C(void *a1)
{
  uint64_t v2 = objc_opt_class(&OBJC_CLASS___CLCppContainer);
  if ((objc_opt_isKindOfClass(a1, v2) & 1) != 0) {
    return sub_10038FF88(a1);
  }
  else {
    return 0LL;
  }
}

void sub_100387AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = +[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", *(void *)a2);
  id v4 = +[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary");
  id v17 = v4;
  id v5 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  uint64_t v6 = *(void *)(a2 + 56);
  if (*(void *)(a2 + 64) != v6)
  {
    unint64_t v7 = *(void *)(a2 + 80);
    uint64_t v8 = (void *)(v6 + 8 * (v7 >> 9));
    __int16 v9 = (uint64_t *)(*v8 + 8 * (v7 & 0x1FF));
    uint64_t v10 = *(void *)(v6 + (((*(void *)(a2 + 88) + v7) >> 6) & 0x3FFFFFFFFFFFFF8LL))
        + 8 * ((*(void *)(a2 + 88) + v7) & 0x1FF);
    while (v9 != (uint64_t *)v10)
    {
      id v11 = objc_alloc(&OBJC_CLASS___CLMiLoFingerprintError);
      uint64_t v12 = *v9++;
      id v13 = [v11 initWithFingerprintErrorEnum:v12];
      -[NSMutableArray addObject:](v5, "addObject:", v13);

      if ((uint64_t *)((char *)v9 - *v8) == (uint64_t *)4096)
      {
        uint64_t v14 = (uint64_t *)v8[1];
        ++v8;
        __int16 v9 = v14;
      }
    }
  }

  id v15 = objc_msgSend( [CLMiLoFingerprintMetaInfo alloc],  "initWithNumWiFiAccessPoints:numBLESources:numUWBSources:requestIdentifier:errors:",  +[NSNumber numberWithUnsignedInt:]( NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a2 + 32)),  +[NSNumber numberWithUnsignedInt:]( NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a2 + 36)),  +[NSNumber numberWithUnsignedInt:]( NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a2 + 40)),  -[NSUUID initWithUUIDBytes:]([NSUUID alloc], "initWithUUIDBytes:", a2 + 16),  v5);

  [v4 setObject:v3 forKeyedSubscript:@"CLMiLoConnectionReturnCode"];
  [v4 setObject:v15 forKeyedSubscript:@"CLMiLoConnectionRecordingMetaInfo"];

  sub_100388BEC(a1, &v17);
}

id sub_100387D8C(void *a1)
{
  uint64_t v2 = objc_opt_class(&OBJC_CLASS___CLCppContainer);
  if ((objc_opt_isKindOfClass(a1, v2) & 1) != 0) {
    return sub_100390334(a1);
  }
  else {
    return 0LL;
  }
}

void sub_100387DD8(uint64_t a1, uint64_t *a2)
{
  if (qword_1019348D0 != -1) {
    dispatch_once(&qword_1019348D0, &stru_101834BC0);
  }
  id v4 = (os_log_s *)qword_1019348D8;
  if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_INFO))
  {
    uint64_t v5 = *a2;
    uint64_t v8 = 68289282LL;
    __int16 v9 = 2082;
    uint64_t v10 = "";
    __int16 v11 = 1026;
    int v12 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:onMiLoGenericEventResponse, Event Type:%{public}d}",  (uint8_t *)&v8,  0x18u);
  }

  id v6 = +[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary");
  uint64_t v8 = (uint64_t)v6;
  id v7 = sub_100389600(a2);
  [v6 setObject:v7 forKeyedSubscript:@"CLMiLoConnectionGenericEventResponse"];

  sub_100389784(a1, &v8);
}

uint64_t sub_100387F3C(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v7 = sub_100C6AAF0(a1, a2, a3, a4, a5);
  *(void *)uint64_t v7 = off_101834B70;
  *(void *)(v7 + 48) = 0LL;
  *(_OWORD *)(v7 + 112) = 0u;
  uint64_t v8 = (std::string *)(v7 + 112);
  *(_OWORD *)(v7 + 80) = 0u;
  *(_OWORD *)(v7 + 96) = 0u;
  *(void *)(v7 + 128) = 0LL;
  if (qword_1019348D0 != -1) {
    dispatch_once(&qword_1019348D0, &stru_101834BC0);
  }
  __int16 v9 = (os_log_s *)qword_1019348D8;
  if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Initialize CLMiLoConnectionSubscription",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348D0 != -1) {
      dispatch_once(&qword_1019348D0, &stru_101834BC0);
    }
    v18[0] = 0;
    id v17 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348D8,  0LL,  "Initialize CLMiLoConnectionSubscription",  v18,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLMiLoConnectionSubscription::CLMiLoConnectionSubscription(Delegate *, id<CLIntersiloUniverse>, CLClientManagerAut horizationContext *, CLClientKeyPath *)",  "%s\n",  v17);
  }

  sub_100BA4A20((uint64_t)sub_100388260, a1, a3, buf);
  uint64_t v10 = *(void *)buf;
  *(void *)uint64_t buf = 0LL;
  uint64_t v11 = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = v10;
  if (v11)
  {
    (*(void (**)(uint64_t))(*(void *)v11 + 8LL))(v11);
    uint64_t v12 = *(void *)buf;
    *(void *)uint64_t buf = 0LL;
    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
    }
  }

  id v13 = -[CLMiLoConnectionSubscriptionAdapter initWithMiLoConnectionSubscription:]( objc_alloc(&OBJC_CLASS___CLMiLoConnectionSubscriptionAdapter),  "initWithMiLoConnectionSubscription:",  a1);
  *(void *)(a1 + 56) = v13;
  -[CLMiLoConnectionSubscriptionAdapter setValid:](v13, "setValid:", 1LL);
  id v14 = objc_msgSend(objc_msgSend(a3, "vendor"), "proxyForService:", @"CLMicroLocationNotifier");
  *(void *)(a1 + 64) = v14;
  objc_msgSend(v14, "registerDelegate:inSilo:", *(void *)(a1 + 56), objc_msgSend(a3, "silo"));
  [*(id *)(*(void *)(a1 + 48) + 16) register:*(void *)(*(void *)(a1 + 48) + 8) forNotification:0 registrationInfo:0];
  id v15 = objc_alloc_init(&OBJC_CLASS___NSUUID);
  *(void *)(a1 + 72) = v15;
  [*(id *)(a1 + 64) registerForMiloServiceEventUpdatesForClient:*(void *)(a1 + 56) withToken:v15];
  [*(id *)(a1 + 64) registerForMiloPredictionEventUpdates:*(void *)(a1 + 56)];
  sub_100C6AE30(a1);
  sub_100C6AE40(a1, v8);
  return a1;
}

void sub_100388204(_Unwind_Exception *a1)
{
  uint64_t v5 = *(void *)(v1 + 48);
  *(void *)(v1 + 48) = 0LL;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
  }
  sub_100C6AB50(v1);
  _Unwind_Resume(a1);
}

void sub_100388260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101834BE0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v8 = 1;
    uint64_t v5 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLMiLoConnectionSubscription::onMiLoServiceEventNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v5, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101834BE0);
    }
    id v6 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v10 = 0;
      __int16 v11 = 2082;
      uint64_t v12 = "";
      __int16 v13 = 2082;
      id v14 = "activity";
      __int16 v15 = 2050;
      uint64_t v16 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLMiLoConnectionSubscription::onMiLoServiceEventNotification, event:%{public, locat ion:escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v8 = 0;
  }

  if (v8) {
    os_activity_scope_leave(&state);
  }
}

void sub_1003883F8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100388418(uint64_t a1)
{
  *(void *)a1 = off_101834B70;
  uint64_t v2 = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  if (*(void *)(a1 + 80))
  {
    if (qword_1019348D0 != -1) {
      dispatch_once(&qword_1019348D0, &stru_101834BC0);
    }
    uint64_t v3 = (os_log_s *)qword_1019348D8;
    if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v4 = *(void *)(*(void *)(*(void *)a1 - 8LL) + 8LL);
      id v5 = objc_msgSend(objc_msgSend(*(id *)(a1 + 80), "UUIDString"), "UTF8String");
      v12[0] = 68289538;
      v12[1] = 0;
      __int16 v13 = 2082;
      id v14 = "";
      __int16 v15 = 2082;
      uint64_t v16 = v4 & 0x7FFFFFFFFFFFFFFFLL;
      __int16 v17 = 2082;
      id v18 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:disconnect to a connected service in Dtor of, class:%{public, location:escape_only} s, serviceId:%{public, location:escape_only}s}",  (uint8_t *)v12,  0x26u);
    }

    id v6 = (void *)(a1 + 88);
    uint64_t v7 = *(void **)(a1 + 64);
    char v8 = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v6);
    __int16 v9 = (void *)(a1 + 112);
    objc_msgSend( v7,  "disconnectToServiceForClient:withServiceIdentifier:withConnectionToken:forUser:",  v8,  *(void *)(a1 + 80),  *(void *)(a1 + 72),  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v9));

    *(void *)(a1 + 80) = 0LL;
  }

  [*(id *)(a1 + 64) unregisterForMiloServiceEventUpdatesForClient:*(void *)(a1 + 56) withToken:*(void *)(a1 + 72)];
  [*(id *)(a1 + 64) unregisterForMiloPredictionEventUpdates:*(void *)(a1 + 56)];

  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + 72) = 0LL;
  [*(id *)(a1 + 56) setValid:0];

  *(void *)(a1 + 56) = 0LL;
  uint64_t v10 = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = 0LL;
  if (v10) {
    (*(void (**)(uint64_t))(*(void *)v10 + 8LL))(v10);
  }
  sub_100C6AB50(a1);
  return a1;
}

void sub_100388644(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100006BB8(a1);
}

void sub_100388654(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100388418(a1);
  operator delete(v1);
}

id sub_100388668(void *a1)
{
  uint64_t v2 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  uint64_t v3 = a1[4];
  if (a1[5] != v3)
  {
    unint64_t v4 = a1[7];
    id v5 = (void *)(v3 + 8 * (v4 >> 9));
    id v6 = (uint64_t *)(*v5 + 8 * (v4 & 0x1FF));
    uint64_t v7 = *(void *)(v3 + (((a1[8] + v4) >> 6) & 0x3FFFFFFFFFFFFF8LL)) + 8 * ((a1[8] + v4) & 0x1FF);
    while (v6 != (uint64_t *)v7)
    {
      id v8 = objc_alloc(&OBJC_CLASS___CLMiLoLocationType);
      uint64_t v9 = *v6++;
      id v10 = [v8 initWithLocationTypeEnum:v9];
      -[NSMutableArray addObject:](v2, "addObject:", v10);

      if ((uint64_t *)((char *)v6 - *v5) == (uint64_t *)4096)
      {
        __int16 v11 = (uint64_t *)v5[1];
        ++v5;
        id v6 = v11;
      }
    }
  }

  uint64_t v12 = -[NSUUID initWithUUIDBytes:](objc_alloc(&OBJC_CLASS___NSUUID), "initWithUUIDBytes:", a1);
  id v13 = [[CLMiLoServiceDescriptor alloc] initWithServiceIdentifier:v12 serviceType:a1[2] locationTypes:v2];

  return v13;
}

id sub_100388778(uint64_t a1)
{
  uint64_t v2 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  uint64_t v3 = *(void *)(a1 + 88);
  if (*(void *)(a1 + 96) != v3)
  {
    unint64_t v4 = *(void *)(a1 + 112);
    id v5 = (void *)(v3 + 8 * (v4 >> 9));
    id v6 = (uint64_t *)(*v5 + 8 * (v4 & 0x1FF));
    uint64_t v7 = *(void *)(v3 + (((*(void *)(a1 + 120) + v4) >> 6) & 0x3FFFFFFFFFFFFF8LL))
       + 8 * ((*(void *)(a1 + 120) + v4) & 0x1FF);
    while (v6 != (uint64_t *)v7)
    {
      id v8 = objc_alloc(&OBJC_CLASS___CLMiLoLocationType);
      uint64_t v9 = *v6++;
      id v10 = [v8 initWithLocationTypeEnum:v9];
      -[NSMutableArray addObject:](v2, "addObject:", v10);

      if ((uint64_t *)((char *)v6 - *v5) == (uint64_t *)4096)
      {
        __int16 v11 = (uint64_t *)v5[1];
        ++v5;
        id v6 = v11;
      }
    }
  }

  uint64_t v12 = -[NSUUID initWithUUIDBytes:](objc_alloc(&OBJC_CLASS___NSUUID), "initWithUUIDBytes:", a1 + 56);
  id v13 = [[CLMiLoServiceDescriptor alloc] initWithServiceIdentifier:v12 serviceType:*(void *)(a1 + 72) locationTypes:v2];

  id v14 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  uint64_t v15 = *(void *)(a1 + 16);
  if (*(void *)(a1 + 24) != v15)
  {
    unint64_t v16 = *(void *)(a1 + 40);
    __int16 v17 = (void *)(v15 + 8 * (v16 >> 9));
    id v18 = (uint64_t *)(*v17 + 8 * (v16 & 0x1FF));
    uint64_t v19 = *(void *)(v15 + (((*(void *)(a1 + 48) + v16) >> 6) & 0x3FFFFFFFFFFFFF8LL))
        + 8 * ((*(void *)(a1 + 48) + v16) & 0x1FF);
    while (v18 != (uint64_t *)v19)
    {
      id v20 = objc_alloc(&OBJC_CLASS___CLMiLoServiceSuspendReason);
      uint64_t v21 = *v18++;
      id v22 = [v20 initWithSuspendReasonEnum:v21];
      -[NSMutableArray addObject:](v14, "addObject:", v22);

      if ((uint64_t *)((char *)v18 - *v17) == (uint64_t *)4096)
      {
        __int16 v23 = (uint64_t *)v17[1];
        ++v17;
        id v18 = v23;
      }
    }
  }

  uint64_t v24 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  uint64_t v25 = *(uint64_t **)(a1 + 184);
  uint64_t v26 = *(uint64_t **)(a1 + 192);
  while (v25 != v26)
  {
    id v27 = objc_alloc(&OBJC_CLASS___CLMiLoServiceQualityReason);
    uint64_t v28 = *v25++;
    id v29 = [v27 initWithQualityReasonEnum:v28];
    -[NSMutableArray addObject:](v24, "addObject:", v29);
  }

  id v30 = [[CLMiLoServiceQualityInfo alloc] initWithQuality:*(void *)(a1 + 176) andReasons:v24];

  if (*(_BYTE *)(a1 + 144))
  {
    id v31 = objc_alloc(&OBJC_CLASS___NSUUID);
    if (!*(_BYTE *)(a1 + 144)) {
      goto LABEL_27;
    }
    __int16 v32 = -[NSUUID initWithUUIDBytes:](v31, "initWithUUIDBytes:", a1 + 128);
  }

  else
  {
    __int16 v32 = 0LL;
  }

  char v49 = v30;
  double v48 = v32;
  if (*(_BYTE *)(a1 + 160))
  {
    id v33 = objc_alloc(&OBJC_CLASS___CLMiLoLocationType);
    if (*(_BYTE *)(a1 + 160))
    {
      id v46 = [v33 initWithLocationTypeEnum:*(void *)(a1 + 152)];
      goto LABEL_21;
    }

void sub_100388BEC(uint64_t a1, void *a2)
{
  uint64_t v3 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      unint64_t v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }

void sub_100388C80(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

id sub_100388C94(void *a1)
{
  __int16 v54 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  uint64_t v2 = a1[1];
  char v51 = a1;
  if (a1[2] != v2)
  {
    unint64_t v3 = a1[4];
    unint64_t v4 = (void *)(v2 + 8 * (v3 / 0x49));
    unint64_t v5 = (void *)(*v4 + 56 * (v3 % 0x49));
    unint64_t v52 = *(void *)(v2 + 8 * ((a1[5] + v3) / 0x49)) + 56 * ((a1[5] + v3) % 0x49);
    while (v5 != (void *)v52)
    {
      int v55 = v4;
      uint64_t v6 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
      uint64_t v7 = v5[1];
      if (v5[2] != v7)
      {
        unint64_t v8 = v5[4];
        uint64_t v9 = (void *)(v7 + 8 * (v8 >> 7));
        uint64_t v10 = *v9 + 32 * (v8 & 0x7F);
        uint64_t v11 = *(void *)(v7 + (((v5[5] + v8) >> 4) & 0xFFFFFFFFFFFFFF8LL)) + 32 * ((v5[5] + v8) & 0x7F);
        while (v10 != v11)
        {
          uint64_t v12 = -[NSUUID initWithUUIDBytes:](objc_alloc(&OBJC_CLASS___NSUUID), "initWithUUIDBytes:", v10);
          id v13 = objc_msgSend( [CLMiLoPlace alloc],  "initWithPlaceIdentifier:score:confidence:placeMetadata:",  v12,  +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", *(double *)(v10 + 16)),  *(void *)(v10 + 24),  0);

          -[NSMutableArray addObject:](v6, "addObject:", v13);
          v10 += 32LL;
          if (v10 - *v9 == 4096)
          {
            uint64_t v14 = v9[1];
            ++v9;
            uint64_t v10 = v14;
          }
        }
      }

      id v15 = [[CLMiLoServicePlacePrediction alloc] initWithPlaces:v6 serviceType:v5[6]];

      -[NSMutableArray addObject:](v54, "addObject:", v15);
      v5 += 7;
      unint64_t v4 = v55;
      if ((void *)((char *)v5 - *v55) == (void *)4088)
      {
        unint64_t v4 = v55 + 1;
        unint64_t v5 = (void *)v55[1];
      }
    }
  }

  unint64_t v16 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  uint64_t v17 = a1[13];
  if (a1[14] != v17)
  {
    unint64_t v18 = a1[16];
    uint64_t v19 = (void *)(v17 + 8 * (v18 / 0x66));
    unint64_t v20 = *v19 + 40 * (v18 % 0x66);
    unint64_t v21 = *(void *)(v17 + 8 * ((v51[17] + v18) / 0x66)) + 40 * ((v51[17] + v18) % 0x66);
    while (v20 != v21)
    {
      unint64_t v22 = v20;
      id v23 = objc_msgSend( [CLMiLoPredictionDeviceDistanceIndication alloc],  "initWithDeviceIdentifier:uwbRange:bleRSSI:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v22),  +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", *(double *)(v20 + 24)),  +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", *(double *)(v20 + 32)));
      -[NSMutableArray addObject:](v16, "addObject:", v23);

      v20 += 40LL;
      if (v20 - *v19 == 4080)
      {
        unint64_t v24 = v19[1];
        ++v19;
        unint64_t v20 = v24;
      }
    }
  }

  id v56 = [[CLMiLoPredictionCloseDeviceList alloc] initWithCloseDeviceList:v16];

  uint64_t v25 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  uint64_t v26 = v51[7];
  if (v51[8] != v26)
  {
    unint64_t v27 = v51[10];
    uint64_t v28 = (void *)(v26 + 8 * (v27 >> 7));
    uint64_t v29 = *v28 + 32 * (v27 & 0x7F);
    uint64_t v30 = *(void *)(v26 + (((v51[11] + v27) >> 4) & 0xFFFFFFFFFFFFFF8LL)) + 32 * ((v51[11] + v27) & 0x7F);
    while (v29 != v30)
    {
      id v31 = -[NSUUID initWithUUIDBytes:](objc_alloc(&OBJC_CLASS___NSUUID), "initWithUUIDBytes:", v29);
      id v32 = objc_msgSend( [CLMiLoPlace alloc],  "initWithPlaceIdentifier:score:confidence:placeMetadata:",  v31,  +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", *(double *)(v29 + 16)),  *(void *)(v29 + 24),  0);

      -[NSMutableArray addObject:](v25, "addObject:", v32);
      v29 += 32LL;
      if (v29 - *v28 == 4096)
      {
        uint64_t v33 = v28[1];
        ++v28;
        uint64_t v29 = v33;
      }
    }
  }

  id v53 = [[CLMiLoServicePredictionLocationSimilarityList alloc] initWithPlaces:v25];

  __int16 v34 = objc_alloc(&OBJC_CLASS___NSError);
  unsigned int v50 = -[NSError initWithDomain:code:userInfo:]( v34,  "initWithDomain:code:userInfo:",  kCLErrorDomainPrivate,  v51[18],  0LL);
  uint64_t v35 = -[NSUUID initWithUUIDBytes:](objc_alloc(&OBJC_CLASS___NSUUID), "initWithUUIDBytes:", v51 + 19);
  uint64_t v36 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  unint64_t v37 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  uint64_t v38 = v51[23];
  if (v51[24] != v38)
  {
    unint64_t v39 = v51[26];
    uint64_t v40 = (void *)(v38 + 8 * (v39 >> 9));
    uint64_t v41 = (void *)(*v40 + 8 * (v39 & 0x1FF));
    uint64_t v42 = *(void *)(v38 + (((v51[27] + v39) >> 6) & 0x3FFFFFFFFFFFFF8LL)) + 8 * ((v51[27] + v39) & 0x1FF);
    while (v41 != (void *)v42)
    {
      id v43 = [[CLMiLoPlaceConfidenceReason alloc] initWithConfidenceReasonEnum:*v41];
      -[NSMutableArray addObject:](v36, "addObject:", v43);

      uint64_t v44 = *v41;
      if (*v41 <= 7uLL && ((0xFBu >> v44) & 1) != 0)
      {
        id v45 = [[CLMiLoFingerprintError alloc] initWithFingerprintErrorEnum:qword_1012E75C0[v44]];
        -[NSMutableArray addObject:](v37, "addObject:", v45);
      }

      if ((void *)((char *)++v41 - *v40) == (void *)4096)
      {
        id v46 = (void *)v40[1];
        ++v40;
        uint64_t v41 = v46;
      }
    }
  }

  id v47 = objc_msgSend( [CLMiLoFingerprintMetaInfo alloc],  "initWithNumWiFiAccessPoints:numBLESources:numUWBSources:requestIdentifier:errors:",  +[NSNumber numberWithUnsignedInt:]( NSNumber,  "numberWithUnsignedInt:",  *((unsigned int *)v51 + 56)),  +[NSNumber numberWithUnsignedInt:]( NSNumber,  "numberWithUnsignedInt:",  *((unsigned int *)v51 + 57)),  +[NSNumber numberWithUnsignedInt:]( NSNumber,  "numberWithUnsignedInt:",  *((unsigned int *)v51 + 58)),  v35,  v37);

  id v48 = objc_msgSend( [CLMiLoPrediction alloc],  "initWithPlacePredictions:locationSimilarityList:closeDeviceList:error:requestIdentifier:predictionTime:confide nce:placeConfidenceReasons:localizationFingerprintMetaInfo:",  v54,  v53,  v56,  v50,  v35,  +[NSDate date](NSDate, "date"),  v51[21],  v36,  v47);
  return v48;
}

void sub_1003892D0(uint64_t a1, void *a2)
{
  unint64_t v3 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      unint64_t v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }

void sub_100389364(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

id sub_100389378(uint64_t a1)
{
  uint64_t v2 = -[NSUUID initWithUUIDBytes:](objc_alloc(&OBJC_CLASS___NSUUID), "initWithUUIDBytes:", a1 + 16);
  unint64_t v3 = objc_alloc(&OBJC_CLASS___NSError);
  unint64_t v4 = -[NSError initWithDomain:code:userInfo:]( v3,  "initWithDomain:code:userInfo:",  kCLErrorDomainPrivate,  *(void *)(a1 + 8),  0LL);
  if (*(_BYTE *)(a1 + 104))
  {
    id v5 = objc_alloc(&OBJC_CLASS___CLMiLoExportDatabaseTableResult);
    else {
      uint64_t v6 = *(void *)(a1 + 32);
    }
    uint64_t v7 = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v6);
    else {
      uint64_t v8 = *(void *)(a1 + 56);
    }
    uint64_t v9 = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v8);
    uint64_t v12 = *(void *)(a1 + 80);
    uint64_t v11 = a1 + 80;
    uint64_t v10 = v12;
    else {
      uint64_t v13 = v10;
    }
    id v14 = objc_msgSend( v5,  "initWithExportDir:fileName:sandboxExtensionTok:",  v7,  v9,  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v13));
  }

  else
  {
    id v14 = 0LL;
  }

  id v15 = [[CLMiLoDebugResponse alloc] initWithExportDatabaseTablesResult:v14 requestIdentifier:v2 error:v4];

  return v15;
}

void sub_1003894B0(uint64_t a1, void *a2)
{
  unint64_t v3 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      unint64_t v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }

void sub_100389544(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_100389558(uint64_t a1, void *a2)
{
  unint64_t v3 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      unint64_t v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }

void sub_1003895EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

id sub_100389600(uint64_t *a1)
{
  uint64_t v2 = objc_alloc(&OBJC_CLASS___NSError);
  unint64_t v3 = -[NSError initWithDomain:code:userInfo:](v2, "initWithDomain:code:userInfo:", kCLErrorDomainPrivate, a1[1], 0LL);
  id v4 = objc_alloc(&OBJC_CLASS___CLMiLoGenericEventResponse);
  uint64_t v5 = *a1;
  int v6 = *((char *)a1 + 39);
  uint64_t v9 = a1[2];
  uint64_t v8 = a1 + 2;
  uint64_t v7 = v9;
  if (v6 >= 0) {
    uint64_t v10 = (uint64_t)v8;
  }
  else {
    uint64_t v10 = v7;
  }
  id v11 = objc_msgSend( v4,  "initWithEventType:withDescription:withError:",  v5,  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v10),  v3);
  if (qword_1019348D0 != -1) {
    dispatch_once(&qword_1019348D0, &stru_101834BC0);
  }
  uint64_t v12 = (os_log_s *)qword_1019348D8;
  if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEFAULT))
  {
    v14[0] = 68289538;
    v14[1] = 0;
    __int16 v15 = 2082;
    unint64_t v16 = "";
    __int16 v17 = 2050;
    uint64_t v18 = [v11 eventType];
    __int16 v19 = 2082;
    id v20 = objc_msgSend(objc_msgSend(v11, "genericEventDescription"), "UTF8String");
    _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:created GenericEventResponse with, EventType:%{public}lu, Description:%{public, l ocation:escape_only}s}",  (uint8_t *)v14,  0x26u);
  }

  return v11;
}

void sub_100389784(uint64_t a1, void *a2)
{
  unint64_t v3 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      unint64_t v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }

void sub_100389818(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void *sub_10038982C@<X0>(uint64_t a1@<X8>)
{
  v80[0] = &off_101834C58;
  v80[1] = sub_10038A5A0;
  v80[2] = 0LL;
  int v81 = v80;
  sub_1010DDBC0(v82, "kCLConnectionMessageMiLoServiceEvent");
  sub_10038EC4C((uint64_t)&v83, (uint64_t)v80);
  __int16 v77 = &off_101834D08;
  v78[0] = sub_10038A6F4;
  v78[1] = 0LL;
  __int16 v79 = &v77;
  sub_1010DDBC0(v84, "kCLConnectionMessageMiLoCreateService");
  sub_10038EC4C((uint64_t)&v85, (uint64_t)&v77);
  v75[0] = &off_101834D08;
  v75[1] = sub_10038AAF4;
  v75[2] = 0LL;
  __int16 v76 = v75;
  sub_1010DDBC0(v86, "kCLConnectionMessageMiLoDeleteService");
  sub_10038EC4C((uint64_t)&v87, (uint64_t)v75);
  v73[0] = &off_101834D08;
  v73[1] = sub_10038AD8C;
  v73[2] = 0LL;
  double v74 = v73;
  sub_1010DDBC0(v88, "kCLConnectionMessageMiLoQueryMyServices");
  sub_10038EC4C((uint64_t)&v89, (uint64_t)v73);
  v71[0] = &off_101834D08;
  v71[1] = sub_10038AF70;
  v71[2] = 0LL;
  double v72 = v71;
  sub_1010DDBC0(v90, "kCLConnectionMessageMiLoConnectToService");
  sub_10038EC4C((uint64_t)&v91, (uint64_t)v71);
  v69[0] = &off_101834D08;
  v69[1] = sub_10038B598;
  __n128 v69[2] = 0LL;
  double v70 = v69;
  sub_1010DDBC0(v92, "kCLConnectionMessageMiLoDisconnectToService");
  sub_10038EC4C((uint64_t)&v93, (uint64_t)v69);
  v67[0] = &off_101834D08;
  v67[1] = sub_10038C08C;
  v67[2] = 0LL;
  double v68 = v67;
  sub_1010DDBC0(v94, "kCLConnectionMessageMiLoSingleShotPrediction");
  sub_10038EC4C((uint64_t)&v95, (uint64_t)v67);
  v65[0] = &off_101834D08;
  v65[1] = sub_10038C324;
  v65[2] = 0LL;
  __int16 v66 = v65;
  sub_1010DDBC0(v96, "kCLConnectionMessageRequestObservation");
  sub_10038EC4C((uint64_t)&v97, (uint64_t)v65);
  v63[0] = &off_101834D08;
  v63[1] = sub_10038C5D8;
  v63[2] = 0LL;
  double v64 = v63;
  sub_1010DDBC0(v98, "kCLConnectionMessageLabelSignleObservation");
  sub_10038EC4C((uint64_t)&v99, (uint64_t)v63);
  v61[0] = &off_101834D08;
  v61[1] = sub_10038C8BC;
  v61[2] = 0LL;
  __int16 v62 = v61;
  sub_1010DDBC0(v100, "kCLConnectionMessageLabelObservationsBetweenDates");
  sub_10038EC4C((uint64_t)&v101, (uint64_t)v61);
  v59[0] = &off_101834D08;
  v59[1] = sub_10038CC00;
  __n128 v59[2] = 0LL;
  uint64_t v60 = v59;
  sub_1010DDBC0(v102, "kCLConnectionMessageRemoveLabels");
  sub_10038EC4C((uint64_t)&v103, (uint64_t)v59);
  v57[0] = &off_101834D08;
  v57[1] = sub_10038CED8;
  v57[2] = 0LL;
  double v58 = v57;
  sub_1010DDBC0(v104, "kCLConnectionMessageStartUpdatingMicroLocation");
  sub_10038EC4C((uint64_t)&v105, (uint64_t)v57);
  v55[0] = &off_101834D08;
  v55[1] = sub_10038D1B0;
  v55[2] = 0LL;
  id v56 = v55;
  sub_1010DDBC0(v106, "kCLConnectionMessageStopUpdatingMicroLocation");
  sub_10038EC4C((uint64_t)&v107, (uint64_t)v55);
  v53[0] = &off_101834D08;
  v53[1] = sub_10038D458;
  __n128 v53[2] = 0LL;
  __int16 v54 = v53;
  sub_1010DDBC0(v108, "kCLConnectionMessageMiLoQueryConnectionStatus");
  sub_10038EC4C((uint64_t)&v109, (uint64_t)v53);
  v51[0] = &off_101834D08;
  v51[1] = sub_10038D5EC;
  __n128 v51[2] = 0LL;
  unint64_t v52 = v51;
  sub_1010DDBC0(v110, "kCLConnectionMessageMiLoEnableMiLoAtCurrentLocation");
  sub_10038EC4C((uint64_t)&v111, (uint64_t)v51);
  v49[0] = &off_101834D08;
  v49[1] = sub_10038D860;
  _DWORD v49[2] = 0LL;
  unsigned int v50 = v49;
  sub_1010DDBC0(v112, "kCLConnectionMessageRemoveCustomLOI");
  sub_10038EC4C((uint64_t)&v113, (uint64_t)v49);
  v47[0] = &off_101834D08;
  v47[1] = sub_10038DB14;
  v47[2] = 0LL;
  id v48 = v47;
  sub_1010DDBC0(v114, "kCLConnectionMessageRequestModelLearning");
  sub_10038EC4C((uint64_t)&v115, (uint64_t)v47);
  v45[0] = &off_101834D08;
  v45[1] = sub_10038E028;
  v45[2] = 0LL;
  id v46 = v45;
  sub_1010DDBC0(v116, "kCLConnectionMessageRequestPurgeMiLoData");
  sub_10038EC4C((uint64_t)&v117, (uint64_t)v45);
  v43[0] = &off_101834D08;
  v43[1] = sub_10038E504;
  v43[2] = 0LL;
  uint64_t v44 = v43;
  sub_1010DDBC0(v118, "kCLConnectionMessageRequestMiLoExportDatabaseTables");
  sub_10038EC4C((uint64_t)&v119, (uint64_t)v43);
  sub_100390C40(a1, (unsigned __int8 *)v82, 19LL);
  uint64_t v2 = 133LL;
  do
  {
    unint64_t v3 = (void *)v82[v2 - 1];
    if (&v80[v2] == v3)
    {
      unint64_t v3 = &v80[v2];
      uint64_t v4 = 4LL;
    }

    else
    {
      if (!v3) {
        goto LABEL_7;
      }
      uint64_t v4 = 5LL;
    }

    (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_7:
    if (SHIBYTE((&v79)[v2]) < 0) {
      operator delete((void *)v78[v2]);
    }
    v2 -= 7LL;
  }

  while (v2 * 8);
  unint64_t v5 = v44;
  if (v44 == v43)
  {
    uint64_t v6 = 4LL;
    unint64_t v5 = v43;
LABEL_14:
    (*(void (**)(void))(*v5 + 8 * v6))();
  }

  else if (v44)
  {
    uint64_t v6 = 5LL;
    goto LABEL_14;
  }

  uint64_t v7 = v46;
  if (v46 == v45)
  {
    uint64_t v8 = 4LL;
    uint64_t v7 = v45;
LABEL_19:
    (*(void (**)(void))(*v7 + 8 * v8))();
  }

  else if (v46)
  {
    uint64_t v8 = 5LL;
    goto LABEL_19;
  }

  uint64_t v9 = v48;
  if (v48 == v47)
  {
    uint64_t v10 = 4LL;
    uint64_t v9 = v47;
LABEL_24:
    (*(void (**)(void))(*v9 + 8 * v10))();
  }

  else if (v48)
  {
    uint64_t v10 = 5LL;
    goto LABEL_24;
  }

  id v11 = v50;
  if (v50 == v49)
  {
    uint64_t v12 = 4LL;
    id v11 = v49;
LABEL_29:
    (*(void (**)(void))(*v11 + 8 * v12))();
  }

  else if (v50)
  {
    uint64_t v12 = 5LL;
    goto LABEL_29;
  }

  uint64_t v13 = v52;
  if (v52 == v51)
  {
    uint64_t v14 = 4LL;
    uint64_t v13 = v51;
LABEL_34:
    (*(void (**)(void))(*v13 + 8 * v14))();
  }

  else if (v52)
  {
    uint64_t v14 = 5LL;
    goto LABEL_34;
  }

  __int16 v15 = v54;
  if (v54 == v53)
  {
    uint64_t v16 = 4LL;
    __int16 v15 = v53;
LABEL_39:
    (*(void (**)(void))(*v15 + 8 * v16))();
  }

  else if (v54)
  {
    uint64_t v16 = 5LL;
    goto LABEL_39;
  }

  __int16 v17 = v56;
  if (v56 == v55)
  {
    uint64_t v18 = 4LL;
    __int16 v17 = v55;
LABEL_44:
    (*(void (**)(void))(*v17 + 8 * v18))();
  }

  else if (v56)
  {
    uint64_t v18 = 5LL;
    goto LABEL_44;
  }

  __int16 v19 = v58;
  if (v58 == v57)
  {
    uint64_t v20 = 4LL;
    __int16 v19 = v57;
LABEL_49:
    (*(void (**)(void))(*v19 + 8 * v20))();
  }

  else if (v58)
  {
    uint64_t v20 = 5LL;
    goto LABEL_49;
  }

  unint64_t v21 = v60;
  if (v60 == v59)
  {
    uint64_t v22 = 4LL;
    unint64_t v21 = v59;
LABEL_54:
    (*(void (**)(void))(*v21 + 8 * v22))();
  }

  else if (v60)
  {
    uint64_t v22 = 5LL;
    goto LABEL_54;
  }

  id v23 = v62;
  if (v62 == v61)
  {
    uint64_t v24 = 4LL;
    id v23 = v61;
LABEL_59:
    (*(void (**)(void))(*v23 + 8 * v24))();
  }

  else if (v62)
  {
    uint64_t v24 = 5LL;
    goto LABEL_59;
  }

  uint64_t v25 = v64;
  if (v64 == v63)
  {
    uint64_t v26 = 4LL;
    uint64_t v25 = v63;
LABEL_64:
    (*(void (**)(void))(*v25 + 8 * v26))();
  }

  else if (v64)
  {
    uint64_t v26 = 5LL;
    goto LABEL_64;
  }

  unint64_t v27 = v66;
  if (v66 == v65)
  {
    uint64_t v28 = 4LL;
    unint64_t v27 = v65;
LABEL_69:
    (*(void (**)(void))(*v27 + 8 * v28))();
  }

  else if (v66)
  {
    uint64_t v28 = 5LL;
    goto LABEL_69;
  }

  uint64_t v29 = v68;
  if (v68 == v67)
  {
    uint64_t v30 = 4LL;
    uint64_t v29 = v67;
LABEL_74:
    (*(void (**)(void))(*v29 + 8 * v30))();
  }

  else if (v68)
  {
    uint64_t v30 = 5LL;
    goto LABEL_74;
  }

  id v31 = v70;
  if (v70 == v69)
  {
    uint64_t v32 = 4LL;
    id v31 = v69;
LABEL_79:
    (*(void (**)(void))(*v31 + 8 * v32))();
  }

  else if (v70)
  {
    uint64_t v32 = 5LL;
    goto LABEL_79;
  }

  uint64_t v33 = v72;
  if (v72 == v71)
  {
    uint64_t v34 = 4LL;
    uint64_t v33 = v71;
LABEL_84:
    (*(void (**)(void))(*v33 + 8 * v34))();
  }

  else if (v72)
  {
    uint64_t v34 = 5LL;
    goto LABEL_84;
  }

  uint64_t v35 = v74;
  if (v74 == v73)
  {
    uint64_t v36 = 4LL;
    uint64_t v35 = v73;
LABEL_89:
    (*(void (**)(void))(*v35 + 8 * v36))();
  }

  else if (v74)
  {
    uint64_t v36 = 5LL;
    goto LABEL_89;
  }

  unint64_t v37 = v76;
  if (v76 == v75)
  {
    uint64_t v38 = 4LL;
    unint64_t v37 = v75;
LABEL_94:
    (*(void (**)(void))(*v37 + 8 * v38))();
  }

  else if (v76)
  {
    uint64_t v38 = 5LL;
    goto LABEL_94;
  }

  unint64_t v39 = v79;
  if (v79 == &v77)
  {
    uint64_t v40 = 4LL;
    unint64_t v39 = &v77;
LABEL_99:
    (*v39)[v40]();
  }

  else if (v79)
  {
    uint64_t v40 = 5LL;
    goto LABEL_99;
  }

  BOOL result = v81;
  if (v81 == v80)
  {
    uint64_t v42 = 4LL;
    BOOL result = v80;
    return (void *)(*(uint64_t (**)(void))(*result + 8 * v42))();
  }

  else if (v81)
  {
    uint64_t v42 = 5LL;
    return (void *)(*(uint64_t (**)(void))(*result + 8 * v42))();
  }

  return result;
}

void sub_10038A0D4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t *a12, char a13, uint64_t a14, uint64_t a15, char *a16, char a17, uint64_t a18, uint64_t a19, char *a20, char a21, uint64_t a22, uint64_t a23, char *a24, char a25, uint64_t a26, uint64_t a27, char *a28, char a29, uint64_t a30, uint64_t a31, char *a32, char a33, uint64_t a34, uint64_t a35, char *a36, char a37, uint64_t a38, uint64_t a39, char *a40, char a41, uint64_t a42, uint64_t a43, char *a44, char a45, uint64_t a46, uint64_t a47, char *a48, char a49, uint64_t a50,uint64_t a51,char *a52,char a53,uint64_t a54,uint64_t a55,char *a56,char a57,uint64_t a58,uint64_t a59,char *a60,char a61,uint64_t a62,uint64_t a63)
{
  for (uint64_t i = 1008LL; i != -56; i -= 56LL)
    sub_10026E430((uint64_t)&STACK[0x260] + i);
  double v74 = a12;
  if (a12 == &a9)
  {
    uint64_t v75 = 4LL;
    double v74 = &a9;
  }

  else
  {
    if (!a12) {
      goto LABEL_8;
    }
    uint64_t v75 = 5LL;
  }

  (*(void (**)(void))(*v74 + 8 * v75))();
LABEL_8:
  __int16 v76 = a16;
  if (a16 == &a13)
  {
    uint64_t v77 = 4LL;
    __int16 v76 = &a13;
  }

  else
  {
    if (!a16) {
      goto LABEL_13;
    }
    uint64_t v77 = 5LL;
  }

  (*(void (**)(void))(*(void *)v76 + 8 * v77))();
LABEL_13:
  int v78 = a20;
  if (a20 == &a17)
  {
    uint64_t v79 = 4LL;
    int v78 = &a17;
  }

  else
  {
    if (!a20) {
      goto LABEL_18;
    }
    uint64_t v79 = 5LL;
  }

  (*(void (**)(void))(*(void *)v78 + 8 * v79))();
LABEL_18:
  double v80 = a24;
  if (a24 == &a21)
  {
    uint64_t v81 = 4LL;
    double v80 = &a21;
  }

  else
  {
    if (!a24) {
      goto LABEL_23;
    }
    uint64_t v81 = 5LL;
  }

  (*(void (**)(void))(*(void *)v80 + 8 * v81))();
LABEL_23:
  double v82 = a28;
  if (a28 == &a25)
  {
    uint64_t v83 = 4LL;
    double v82 = &a25;
  }

  else
  {
    if (!a28) {
      goto LABEL_28;
    }
    uint64_t v83 = 5LL;
  }

  (*(void (**)(void))(*(void *)v82 + 8 * v83))();
LABEL_28:
  int v84 = a32;
  if (a32 == &a29)
  {
    uint64_t v85 = 4LL;
    int v84 = &a29;
  }

  else
  {
    if (!a32) {
      goto LABEL_33;
    }
    uint64_t v85 = 5LL;
  }

  (*(void (**)(void))(*(void *)v84 + 8 * v85))();
LABEL_33:
  double v86 = a36;
  if (a36 == &a33)
  {
    uint64_t v87 = 4LL;
    double v86 = &a33;
  }

  else
  {
    if (!a36) {
      goto LABEL_38;
    }
    uint64_t v87 = 5LL;
  }

  (*(void (**)(void))(*(void *)v86 + 8 * v87))();
LABEL_38:
  double v88 = a40;
  if (a40 == &a37)
  {
    uint64_t v89 = 4LL;
    double v88 = &a37;
  }

  else
  {
    if (!a40) {
      goto LABEL_43;
    }
    uint64_t v89 = 5LL;
  }

  (*(void (**)(void))(*(void *)v88 + 8 * v89))();
LABEL_43:
  uint64_t v90 = a44;
  if (a44 == &a41)
  {
    uint64_t v91 = 4LL;
    uint64_t v90 = &a41;
  }

  else
  {
    if (!a44) {
      goto LABEL_48;
    }
    uint64_t v91 = 5LL;
  }

  (*(void (**)(void))(*(void *)v90 + 8 * v91))();
LABEL_48:
  double v92 = a48;
  if (a48 == &a45)
  {
    uint64_t v93 = 4LL;
    double v92 = &a45;
  }

  else
  {
    if (!a48) {
      goto LABEL_53;
    }
    uint64_t v93 = 5LL;
  }

  (*(void (**)(void))(*(void *)v92 + 8 * v93))();
LABEL_53:
  int v94 = a52;
  if (a52 == &a49)
  {
    uint64_t v95 = 4LL;
    int v94 = &a49;
  }

  else
  {
    if (!a52) {
      goto LABEL_58;
    }
    uint64_t v95 = 5LL;
  }

  (*(void (**)(void))(*(void *)v94 + 8 * v95))();
LABEL_58:
  v96 = a56;
  if (a56 == &a53)
  {
    uint64_t v97 = 4LL;
    v96 = &a53;
  }

  else
  {
    if (!a56) {
      goto LABEL_63;
    }
    uint64_t v97 = 5LL;
  }

  (*(void (**)(void))(*(void *)v96 + 8 * v97))();
LABEL_63:
  float v98 = a60;
  if (a60 == &a57)
  {
    uint64_t v99 = 4LL;
    float v98 = &a57;
  }

  else
  {
    if (!a60) {
      goto LABEL_68;
    }
    uint64_t v99 = 5LL;
  }

  (*(void (**)(void))(*(void *)v98 + 8 * v99))();
LABEL_68:
  int v100 = a64;
  if (a64 == &a61)
  {
    uint64_t v101 = 4LL;
    int v100 = &a61;
  }

  else
  {
    if (!a64) {
      goto LABEL_73;
    }
    uint64_t v101 = 5LL;
  }

  (*(void (**)(void))(*(void *)v100 + 8 * v101))();
LABEL_73:
  char v102 = a68;
  if (a68 == &a65)
  {
    uint64_t v103 = 4LL;
    char v102 = &a65;
  }

  else
  {
    if (!a68) {
      goto LABEL_78;
    }
    uint64_t v103 = 5LL;
  }

  (*(void (**)(void))(*(void *)v102 + 8 * v103))();
LABEL_78:
  char v104 = a72;
  if (a72 == &a69)
  {
    uint64_t v105 = 4LL;
    char v104 = &a69;
  }

  else
  {
    if (!a72) {
      goto LABEL_83;
    }
    uint64_t v105 = 5LL;
  }

  (*(void (**)(void))(*(void *)v104 + 8 * v105))();
LABEL_83:
  v106 = (unint64_t *)STACK[0x218];
  if ((unint64_t *)STACK[0x218] == &STACK[0x200])
  {
    uint64_t v107 = 4LL;
    v106 = &STACK[0x200];
  }

  else
  {
    if (!v106) {
      goto LABEL_88;
    }
    uint64_t v107 = 5LL;
  }

  (*(void (**)(void))(*v106 + 8 * v107))();
LABEL_88:
  double v108 = (unint64_t *)STACK[0x238];
  if ((unint64_t *)STACK[0x238] == &STACK[0x220])
  {
    uint64_t v109 = 4LL;
    double v108 = &STACK[0x220];
  }

  else
  {
    if (!v108) {
      goto LABEL_93;
    }
    uint64_t v109 = 5LL;
  }

  (*(void (**)(void))(*v108 + 8 * v109))();
LABEL_93:
  double v110 = (unint64_t *)STACK[0x258];
  if ((unint64_t *)STACK[0x258] == &STACK[0x240])
  {
    uint64_t v111 = 4LL;
    double v110 = &STACK[0x240];
  }

  else
  {
    if (!v110) {
      goto LABEL_98;
    }
    uint64_t v111 = 5LL;
  }

  (*(void (**)(void))(*v110 + 8 * v111))();
LABEL_98:
  _Unwind_Resume(a1);
}

void sub_10038A4F4()
{
}

void sub_10038A500()
{
}

void sub_10038A50C()
{
}

void sub_10038A518()
{
}

void sub_10038A524()
{
}

void sub_10038A530()
{
}

void sub_10038A53C()
{
}

void sub_10038A548()
{
}

void sub_10038A554()
{
}

void sub_10038A560()
{
}

void sub_10038A56C()
{
}

void sub_10038A578()
{
}

void sub_10038A584()
{
}

void sub_10038A590()
{
}

uint64_t sub_10038A5A0(uint64_t a1, int a2)
{
  if (qword_1019348D0 != -1) {
    dispatch_once(&qword_1019348D0, &stru_101834BC0);
  }
  uint64_t v4 = (os_log_s *)qword_1019348D8;
  if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEBUG))
  {
    v6[0] = 68289282;
    v6[1] = 0;
    __int16 v7 = 2082;
    uint64_t v8 = "";
    __int16 v9 = 1026;
    int v10 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:modifying subscription for kCLConnectionMessageMiLoServiceEvent and kCLConnectionMessageMiL oPredictionEventUpdate, subscribe?:%{public}hhd}",  (uint8_t *)v6,  0x18u);
  }

  sub_100C6AC8C(a1);
  sub_100C6AC8C(a1);
  sub_100C6AC8C(a1);
  sub_100C6AC8C(a1);
  return sub_100C6AC8C(a1);
}

uint64_t sub_10038A6F4(uint64_t a1, CLConnectionMessage **a2)
{
  if (qword_1019348D0 != -1) {
    dispatch_once(&qword_1019348D0, &stru_101834BC0);
  }
  uint64_t v4 = (os_log_s *)qword_1019348D8;
  if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v34 = 2082;
    uint64_t v35 = "";
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:kCLConnectionMessageMiLoCreateService received in CLMiLoConnectionSubscription}",  buf,  0x12u);
  }

  if ((sub_10038EA10(a1, (uint64_t *)buf) & 1) != 0)
  {
    objc_opt_class(&OBJC_CLASS___NSNumber);
    uint64_t v6 = v5;
    *(void *)&double v7 = objc_opt_class(&OBJC_CLASS___NSData).n128_u64[0];
    DictionaryOfClasses = (void *)CLConnectionMessage::getDictionaryOfClasses( *a2,  +[NSSet setWithObjects:](&OBJC_CLASS___NSSet, "setWithObjects:", v6, v7, v8, 0LL));
    int v10 = DictionaryOfClasses;
    if (DictionaryOfClasses
      && [DictionaryOfClasses objectForKeyedSubscript:@"CLMiLoConnectionServiceTypeKey"]
      && [v10 objectForKeyedSubscript:@"CLMiLoConnectionLocationTypesKey"])
    {
      id v11 = [v10 objectForKeyedSubscript:@"CLMiLoConnectionServiceTypeKey"];
      uint64_t v12 =  -[NSKeyedUnarchiver initForReadingFromData:error:]( [NSKeyedUnarchiver alloc],  "initForReadingFromData:error:",  [v10 objectForKeyedSubscript:@"CLMiLoConnectionLocationTypesKey"],  0);
      objc_opt_class(&OBJC_CLASS___NSArray);
      uint64_t v14 = v13;
      *(void *)&double v15 = objc_opt_class(&OBJC_CLASS___CLMiLoLocationType).n128_u64[0];
      id v17 = -[NSKeyedUnarchiver decodeObjectOfClasses:forKey:]( v12,  "decodeObjectOfClasses:forKey:",  +[NSSet setWithObjects:](&OBJC_CLASS___NSSet, "setWithObjects:", v14, v15, v16, 0LL),  NSKeyedArchiveRootObjectKey);
      -[NSKeyedUnarchiver finishDecoding](v12, "finishDecoding");
      uint64_t v18 = (void *)(a1 + 88);
      __int16 v19 = *(void **)(a1 + 64);
      uint64_t v20 = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v18);
      id v21 = [v11 integerValue];
      uint64_t v22 = (void *)(a1 + 112);
      objc_msgSend( v19,  "createServiceForClient:withServiceType:locationTypes:connectionToken:forUser:",  v20,  v21,  v17,  *(void *)(a1 + 72),  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v22));
      id v23 = *a2;
      unint64_t v27 = @"CLMiLoConnectionReturnCode";
      uint64_t v28 = &off_1018D3278;
      +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v28,  &v27,  1LL);
      return CLConnectionMessage::sendReply(v23);
    }

    else
    {
      uint64_t v26 = *a2;
      v29[0] = @"CLMiLoConnectionReturnCode";
      v29[1] = @"CLMiLoConnectionErrorMessage";
      v30[0] = &off_1018D3248;
      v30[1] = &off_1018D3260;
      +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v30,  v29,  2LL);
      return CLConnectionMessage::sendReply(v26);
    }
  }

  else
  {
    uint64_t v25 = *a2;
    v32[0] = &off_1018D3248;
    v31[0] = @"CLMiLoConnectionReturnCode";
    v31[1] = @"CLMiLoConnectionErrorMessage";
    v32[1] = +[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", *(void *)buf);
    +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v32,  v31,  2LL);
    return CLConnectionMessage::sendReply(v25);
  }

void sub_10038AA88(_Unwind_Exception *a1)
{
}

uint64_t sub_10038AAF4(uint64_t a1, CLConnectionMessage **a2)
{
  if (qword_1019348D0 != -1) {
    dispatch_once(&qword_1019348D0, &stru_101834BC0);
  }
  uint64_t v4 = (os_log_s *)qword_1019348D8;
  if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v25 = 2082;
    uint64_t v26 = "";
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:kCLConnectionMessageMiLoDeleteService received in CLMiLoConnectionSubscription}",  buf,  0x12u);
  }

  if ((sub_10038EA10(a1, (uint64_t *)buf) & 1) == 0)
  {
    uint64_t v13 = *a2;
    v23[0] = &off_1018D3290;
    v22[0] = @"CLMiLoConnectionReturnCode";
    v22[1] = @"CLMiLoConnectionErrorMessage";
    v23[1] = +[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", *(void *)buf);
    uint64_t v14 = (_UNKNOWN ***)v23;
    double v15 = (const __CFString **)v22;
LABEL_15:
    uint64_t v16 = 2LL;
    goto LABEL_16;
  }

  *(void *)&double v5 = objc_opt_class(&OBJC_CLASS___NSUUID).n128_u64[0];
  DictionaryOfClasses = (void *)CLConnectionMessage::getDictionaryOfClasses( *a2,  +[NSSet setWithObjects:](&OBJC_CLASS___NSSet, "setWithObjects:", v6, v5, 0LL));
  if (!DictionaryOfClasses
    || (uint64_t v8 = DictionaryOfClasses,
        ![DictionaryOfClasses objectForKeyedSubscript:@"CLMiLoConnectionServiceIdentifier"]))
  {
    uint64_t v13 = *a2;
    v20[0] = @"CLMiLoConnectionReturnCode";
    v20[1] = @"CLMiLoConnectionErrorMessage";
    v21[0] = &off_1018D3290;
    v21[1] = &off_1018D3260;
    uint64_t v14 = (_UNKNOWN ***)v21;
    double v15 = (const __CFString **)v20;
    goto LABEL_15;
  }

  id v9 = [v8 objectForKeyedSubscript:@"CLMiLoConnectionServiceIdentifier"];
  int v10 = (void *)(a1 + 88);
  id v11 = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v10);
  uint64_t v12 = (void *)(a1 + 112);
  objc_msgSend( *(id *)(a1 + 64),  "deleteServiceForClient:withServiceIdentifier:withConnectionToken:forUser:",  v11,  v9,  *(void *)(a1 + 72),  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v12));
  uint64_t v13 = *a2;
  uint64_t v18 = @"CLMiLoConnectionReturnCode";
  __int16 v19 = &off_1018D3278;
  uint64_t v14 = &v19;
  double v15 = &v18;
  uint64_t v16 = 1LL;
LABEL_16:
  +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v14,  v15,  v16);
  return CLConnectionMessage::sendReply(v13);
}

uint64_t sub_10038AD8C(uint64_t a1, uint64_t *a2)
{
  if (qword_1019348D0 != -1) {
    dispatch_once(&qword_1019348D0, &stru_101834BC0);
  }
  uint64_t v4 = (os_log_s *)qword_1019348D8;
  if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v18 = 2082;
    __int16 v19 = "";
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:kCLConnectionMessageMiLoQueryMyServices received in CLMiLoConnectionSubscription}",  buf,  0x12u);
  }

  if ((sub_10038EA10(a1, (uint64_t *)buf) & 1) != 0)
  {
    double v5 = (void *)(a1 + 88);
    uint64_t v6 = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v5);
    double v7 = (void *)(a1 + 112);
    objc_msgSend( *(id *)(a1 + 64),  "queryServicesForClient:withConnectionToken:forUser:",  v6,  *(void *)(a1 + 72),  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v7));
    uint64_t v8 = *a2;
    uint64_t v13 = @"CLMiLoConnectionReturnCode";
    uint64_t v14 = &off_1018D3278;
    id v9 = &v14;
    int v10 = &v13;
    uint64_t v11 = 1LL;
  }

  else
  {
    uint64_t v8 = *a2;
    v16[0] = &off_1018D32A8;
    v15[0] = @"CLMiLoConnectionReturnCode";
    v15[1] = @"CLMiLoConnectionErrorMessage";
    v16[1] = +[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", *(void *)buf);
    id v9 = (_UNKNOWN ***)v16;
    int v10 = (const __CFString **)v15;
    uint64_t v11 = 2LL;
  }

  +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v9,  v10,  v11,  v13,  v14);
  return CLConnectionMessage::sendReply(v8);
}

void sub_10038AF70(uint64_t a1, CLConnectionMessage **a2)
{
  if (qword_1019348D0 != -1) {
    dispatch_once(&qword_1019348D0, &stru_101834BC0);
  }
  uint64_t v4 = (os_log_s *)qword_1019348D8;
  if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    int v38 = 0;
    __int16 v39 = 2082;
    uint64_t v40 = "";
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:kCLConnectionMessageMiLoConnectToService received in CLMiLoConnectionSubscription}",  buf,  0x12u);
  }

  if ((sub_10038EA10(a1, &v32) & 1) == 0)
  {
    __int16 v19 = *a2;
    v48[0] = &off_1018D32C0;
    v47[0] = @"CLMiLoConnectionReturnCode";
    v47[1] = @"CLMiLoConnectionErrorMessage";
    v48[1] = +[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v32);
    uint64_t v20 = (_UNKNOWN ***)v48;
    id v21 = (const __CFString **)v47;
    goto LABEL_18;
  }

  *(void *)&double v5 = objc_opt_class(&OBJC_CLASS___NSUUID).n128_u64[0];
  DictionaryOfClasses = (void *)CLConnectionMessage::getDictionaryOfClasses( *a2,  +[NSSet setWithObjects:](&OBJC_CLASS___NSSet, "setWithObjects:", v6, v5, 0LL));
  uint64_t v8 = DictionaryOfClasses;
  if (DictionaryOfClasses
    && [DictionaryOfClasses objectForKeyedSubscript:@"CLMiLoConnectionServiceIdentifier"])
  {
    id v9 = [v8 objectForKeyedSubscript:@"CLMiLoConnectionServiceIdentifier"];
    int v10 = v9;
    if (!*(void *)(a1 + 80))
    {
      *(void *)(a1 + 80) = [v9 copy];
      uint64_t v26 = (void *)(a1 + 88);
      unint64_t v27 = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v26);
      if (qword_1019348D0 != -1) {
        dispatch_once(&qword_1019348D0, &stru_101834BC0);
      }
      uint64_t v28 = (os_log_s *)qword_1019348D8;
      if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v29 = -[NSString UTF8String](v27, "UTF8String");
        id v30 = objc_msgSend(objc_msgSend(v10, "UUIDString"), "UTF8String");
        *(_DWORD *)uint64_t buf = 68289539;
        int v38 = 0;
        __int16 v39 = 2082;
        uint64_t v40 = "";
        __int16 v41 = 2081;
        *(void *)uint64_t v42 = v29;
        *(_WORD *)&v42[8] = 2081;
        *(void *)&v42[10] = v30;
        _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:CLMiLoConnectionSubscription::handleConnectToService, connecting to service, client Id:%{private, location:escape_only}s, serviceIdentifier:%{private, location:escape_only}s}",  buf,  0x26u);
      }

      id v31 = (void *)(a1 + 112);
      objc_msgSend( *(id *)(a1 + 64),  "connectToServiceForClient:withServiceIdentifier:withConnectionToken:forUser:",  v27,  v10,  *(void *)(a1 + 72),  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v31));
      __int16 v19 = *a2;
      uint64_t v33 = @"CLMiLoConnectionReturnCode";
      __int16 v34 = &off_1018D3278;
      uint64_t v20 = &v34;
      id v21 = &v33;
      uint64_t v22 = 1LL;
      goto LABEL_19;
    }

    if (qword_1019348D0 != -1) {
      dispatch_once(&qword_1019348D0, &stru_101834BC0);
    }
    uint64_t v11 = (os_log_s *)qword_1019348D8;
    if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v12 = *(void *)(*(void *)(*(void *)a1 - 8LL) + 8LL) & 0x7FFFFFFFFFFFFFFFLL;
      id v13 = objc_msgSend(objc_msgSend(v10, "UUIDString"), "UTF8String");
      id v14 = objc_msgSend(objc_msgSend(*(id *)(a1 + 80), "UUIDString"), "UTF8String");
      *(_DWORD *)uint64_t buf = 68289794;
      int v38 = 0;
      __int16 v39 = 2082;
      uint64_t v40 = "";
      __int16 v41 = 2082;
      *(void *)uint64_t v42 = v12;
      *(_WORD *)&v42[8] = 2082;
      *(void *)&v42[10] = v13;
      __int16 v43 = 2082;
      id v44 = v14;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_ERROR,  "{msg%{public}.0s:connect to service failed, already has an active connection, class:%{public, locati on:escape_only}s, requestedServiceIdentifierToConnect:%{public, location:escape_only}s, activeConnectionSe rviceIdentifier:%{public, location:escape_only}s}",  buf,  0x30u);
      if (qword_1019348D0 != -1) {
        dispatch_once(&qword_1019348D0, &stru_101834BC0);
      }
    }

    double v15 = (os_log_s *)qword_1019348D8;
    if (os_signpost_enabled((os_log_t)qword_1019348D8))
    {
      uint64_t v16 = *(void *)(*(void *)(*(void *)a1 - 8LL) + 8LL) & 0x7FFFFFFFFFFFFFFFLL;
      id v17 = objc_msgSend(objc_msgSend(v10, "UUIDString"), "UTF8String");
      id v18 = objc_msgSend(objc_msgSend(*(id *)(a1 + 80), "UUIDString"), "UTF8String");
      *(_DWORD *)uint64_t buf = 68289794;
      int v38 = 0;
      __int16 v39 = 2082;
      uint64_t v40 = "";
      __int16 v41 = 2082;
      *(void *)uint64_t v42 = v16;
      *(_WORD *)&v42[8] = 2082;
      *(void *)&v42[10] = v17;
      __int16 v43 = 2082;
      id v44 = v18;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v15,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "connect to service failed, already has an active connection",  "{msg%{public}.0s:connect to service failed, already has an active connection, class:%{public, locati on:escape_only}s, requestedServiceIdentifierToConnect:%{public, location:escape_only}s, activeConnectionSe rviceIdentifier:%{public, location:escape_only}s}",  buf,  0x30u);
    }

    __int16 v19 = *a2;
    v35[0] = @"CLMiLoConnectionReturnCode";
    v35[1] = @"CLMiLoConnectionErrorMessage";
    v36[0] = &off_1018D32C0;
    v36[1] = &off_1018D32D8;
    uint64_t v20 = (_UNKNOWN ***)v36;
    id v21 = (const __CFString **)v35;
LABEL_18:
    uint64_t v22 = 2LL;
LABEL_19:
    +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v20,  v21,  v22);
    CLConnectionMessage::sendReply(v19);
    return;
  }

  id v23 = *a2;
  v45[0] = @"CLMiLoConnectionReturnCode";
  v45[1] = @"CLMiLoConnectionErrorMessage";
  v46[0] = &off_1018D32C0;
  v46[1] = &off_1018D3260;
  +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v46,  v45,  2LL);
  CLConnectionMessage::sendReply(v23);
  if (qword_1019348D0 != -1) {
    dispatch_once(&qword_1019348D0, &stru_101834BC0);
  }
  uint64_t v24 = (os_log_s *)qword_1019348D8;
  if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEFAULT))
  {
    if ([v8 objectForKeyedSubscript:@"CLMiLoConnectionServiceIdentifier"]) {
      __int16 v25 = (const char *)objc_msgSend( objc_msgSend( objc_msgSend(v8, "objectForKeyedSubscript:", @"CLMiLoConnectionServiceIdentifier"),  "UUIDString"),  "UTF8String");
    }
    else {
      __int16 v25 = "";
    }
    *(_DWORD *)uint64_t buf = 68289538;
    int v38 = 0;
    __int16 v39 = 2082;
    uint64_t v40 = "";
    __int16 v41 = 1026;
    *(_DWORD *)uint64_t v42 = v8 != 0LL;
    *(_WORD *)&v42[4] = 2082;
    *(void *)&v42[6] = v25;
    _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:handleConnectToService, mesasge info missing, hasDictionary:%{public}hhd, serviceId entifier:%{public, location:escape_only}s}",  buf,  0x22u);
  }

uint64_t sub_10038B598(uint64_t a1, CLConnectionMessage **a2)
{
  if (qword_1019348D0 != -1) {
    dispatch_once(&qword_1019348D0, &stru_101834BC0);
  }
  uint64_t v4 = (os_log_s *)qword_1019348D8;
  if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    int v61 = 0;
    __int16 v62 = 2082;
    int v63 = "";
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:kCLConnectionMessageMiLoDisconnectToService received in CLMiLoConnectionSubscription}",  buf,  0x12u);
  }

  if ((sub_10038EA10(a1, &v55) & 1) == 0)
  {
    __int16 v19 = *a2;
    v79[0] = &off_1018D32F0;
    v78[0] = @"CLMiLoConnectionReturnCode";
    v78[1] = @"CLMiLoConnectionErrorMessage";
    v79[1] = +[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v55);
    uint64_t v20 = (_UNKNOWN ***)v79;
    id v21 = (const __CFString **)v78;
LABEL_56:
    uint64_t v41 = 2LL;
    goto LABEL_57;
  }

  *(void *)&double v5 = objc_opt_class(&OBJC_CLASS___NSUUID).n128_u64[0];
  DictionaryOfClasses = (void *)CLConnectionMessage::getDictionaryOfClasses( *a2,  +[NSSet setWithObjects:](&OBJC_CLASS___NSSet, "setWithObjects:", v6, v5, 0LL));
  if (!DictionaryOfClasses
    || (uint64_t v8 = DictionaryOfClasses,
        ![DictionaryOfClasses objectForKeyedSubscript:@"CLMiLoConnectionServiceIdentifier"]))
  {
    __int16 v19 = *a2;
    v76[0] = @"CLMiLoConnectionReturnCode";
    v76[1] = @"CLMiLoConnectionErrorMessage";
    v77[0] = &off_1018D32F0;
    v77[1] = &off_1018D3260;
    uint64_t v20 = (_UNKNOWN ***)v77;
    id v21 = (const __CFString **)v76;
    goto LABEL_56;
  }

  id v9 = [v8 objectForKeyedSubscript:@"CLMiLoConnectionServiceIdentifier"];
  objc_opt_class(&OBJC_CLASS___NSUUID);
  if ((objc_opt_isKindOfClass(v9, v10) & 1) == 0)
  {
    if (qword_1019348D0 != -1) {
      dispatch_once(&qword_1019348D0, &stru_101834BC0);
    }
    uint64_t v22 = (os_log_s *)qword_1019348D8;
    if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_ERROR))
    {
      objc_opt_class(v9);
      uint64_t v24 = -[NSString UTF8String](NSStringFromClass(v23), "UTF8String");
      __int16 v25 = (objc_opt_respondsToSelector(*(void *)(a1 + 80), "UUIDString") & 1) != 0
      *(_DWORD *)uint64_t buf = 68289538;
      int v61 = 0;
      __int16 v62 = 2082;
      int v63 = "";
      __int16 v64 = 2082;
      uint64_t v65 = v24;
      __int16 v66 = 2082;
      __int16 v67 = v25;
      _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_ERROR,  "{msg%{public}.0s:disconnect to service failed, requested service identifier to disconnect is not a NSUUID object, class of requested service identifier to disconnect:%{public, location:escape_only}s, connected service identifier:%{public, location:escape_only}s}",  buf,  0x26u);
      if (qword_1019348D0 != -1) {
        dispatch_once(&qword_1019348D0, &stru_101834BC0);
      }
    }

    uint64_t v42 = (os_log_s *)qword_1019348D8;
    if (os_signpost_enabled((os_log_t)qword_1019348D8))
    {
      objc_opt_class(v9);
      id v44 = -[NSString UTF8String](NSStringFromClass(v43), "UTF8String");
      if ((objc_opt_respondsToSelector(*(void *)(a1 + 80), "UUIDString") & 1) != 0) {
        id v45 = (const char *)objc_msgSend(objc_msgSend(*(id *)(a1 + 80), "UUIDString"), "UTF8String");
      }
      else {
        id v45 = "not available";
      }
      *(_DWORD *)uint64_t buf = 68289538;
      int v61 = 0;
      __int16 v62 = 2082;
      int v63 = "";
      __int16 v64 = 2082;
      uint64_t v65 = v44;
      __int16 v66 = 2082;
      __int16 v67 = v45;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v42,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "disconnect to service failed, requested service identifier to disconnect is not a NSUUID object",  "{msg%{public}.0s:disconnect to service failed, requested service identifier to disconnect is not a NSUUID object, class of requested service identifier to disconnect:%{public, location:escape_only}s, connected service identifier:%{public, location:escape_only}s}",  buf,  0x26u);
    }

    __int16 v19 = *a2;
    v74[0] = @"CLMiLoConnectionReturnCode";
    v74[1] = @"CLMiLoConnectionErrorMessage";
    v75[0] = &off_1018D32C0;
    v75[1] = &off_1018D3308;
    uint64_t v20 = (_UNKNOWN ***)v75;
    id v21 = (const __CFString **)v74;
    goto LABEL_56;
  }

  uint64_t v11 = (void *)(a1 + 88);
  uint64_t v12 = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v11);
  if (qword_1019348D0 != -1) {
    dispatch_once(&qword_1019348D0, &stru_101834BC0);
  }
  id v13 = (os_log_s *)qword_1019348D8;
  if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEFAULT))
  {
    id v14 = -[NSString UTF8String](v12, "UTF8String");
    double v15 = (const char *)objc_msgSend(objc_msgSend(v9, "UUIDString"), "UTF8String");
    *(_DWORD *)uint64_t buf = 68289539;
    int v61 = 0;
    __int16 v62 = 2082;
    int v63 = "";
    __int16 v64 = 2081;
    uint64_t v65 = v14;
    __int16 v66 = 2081;
    __int16 v67 = v15;
    _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:CLMiLoConnectionSubscription::handleDisconnectToService, disconnecting, clientId:%{pr ivate, location:escape_only}s, serviceIdentifier:%{private, location:escape_only}s}",  buf,  0x26u);
  }

  uint64_t v16 = *(void *)(a1 + 80);
  if (!v16)
  {
    if (qword_1019348D0 != -1) {
      dispatch_once(&qword_1019348D0, &stru_101834BC0);
    }
    uint64_t v26 = (os_log_s *)qword_1019348D8;
    if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v27 = *(void *)(*(void *)(*(void *)a1 - 8LL) + 8LL) & 0x7FFFFFFFFFFFFFFFLL;
      uint64_t v28 = (const char *)objc_msgSend(objc_msgSend(v9, "UUIDString"), "UTF8String");
      *(_DWORD *)uint64_t buf = 68289538;
      int v61 = 0;
      __int16 v62 = 2082;
      int v63 = "";
      __int16 v64 = 2082;
      uint64_t v65 = (const char *)v27;
      __int16 v66 = 2082;
      __int16 v67 = v28;
      _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_ERROR,  "{msg%{public}.0s:disconnect to service failed, doesn't have an active connection, class:%{public, lo cation:escape_only}s, requested service identifier to disconnect:%{public, location:escape_only}s}",  buf,  0x26u);
      if (qword_1019348D0 != -1) {
        dispatch_once(&qword_1019348D0, &stru_101834BC0);
      }
    }

    uint64_t v29 = (os_log_s *)qword_1019348D8;
    if (os_signpost_enabled((os_log_t)qword_1019348D8))
    {
      uint64_t v30 = *(void *)(*(void *)(*(void *)a1 - 8LL) + 8LL) & 0x7FFFFFFFFFFFFFFFLL;
      id v31 = (const char *)objc_msgSend(objc_msgSend(v9, "UUIDString"), "UTF8String");
      *(_DWORD *)uint64_t buf = 68289538;
      int v61 = 0;
      __int16 v62 = 2082;
      int v63 = "";
      __int16 v64 = 2082;
      uint64_t v65 = (const char *)v30;
      __int16 v66 = 2082;
      __int16 v67 = v31;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v29,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "disconnect to service failed, doesn't have an active connection",  "{msg%{public}.0s:disconnect to service failed, doesn't have an active connection, class:%{public, lo cation:escape_only}s, requested service identifier to disconnect:%{public, location:escape_only}s}",  buf,  0x26u);
    }

    __int16 v19 = *a2;
    v72[0] = @"CLMiLoConnectionReturnCode";
    v72[1] = @"CLMiLoConnectionErrorMessage";
    v73[0] = &off_1018D32C0;
    v73[1] = &off_1018D3320;
    uint64_t v20 = (_UNKNOWN ***)v73;
    id v21 = (const __CFString **)v72;
    goto LABEL_56;
  }

  objc_opt_class(&OBJC_CLASS___NSUUID);
  if ((objc_opt_isKindOfClass(v16, v17) & 1) == 0)
  {
    if (qword_1019348D0 != -1) {
      dispatch_once(&qword_1019348D0, &stru_101834BC0);
    }
    uint64_t v32 = (os_log_s *)qword_1019348D8;
    if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_ERROR))
    {
      objc_opt_class(*(void *)(a1 + 80));
      __int16 v34 = -[NSString UTF8String](NSStringFromClass(v33), "UTF8String");
      uint64_t v35 = (const char *)objc_msgSend(objc_msgSend(v9, "UUIDString"), "UTF8String");
      *(_DWORD *)uint64_t buf = 68289538;
      int v61 = 0;
      __int16 v62 = 2082;
      int v63 = "";
      __int16 v64 = 2082;
      uint64_t v65 = v34;
      __int16 v66 = 2082;
      __int16 v67 = v35;
      _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_ERROR,  "{msg%{public}.0s:disconnect to service, connected service identifier is not a NSUUID object, class of connected service identifier:%{public, location:escape_only}s, requested service identifier to disconnect: %{public, location:escape_only}s}",  buf,  0x26u);
      if (qword_1019348D0 != -1) {
        dispatch_once(&qword_1019348D0, &stru_101834BC0);
      }
    }

    uint64_t v36 = (os_log_s *)qword_1019348D8;
    if (os_signpost_enabled((os_log_t)qword_1019348D8))
    {
      objc_opt_class(*(void *)(a1 + 80));
      int v38 = -[NSString UTF8String](NSStringFromClass(v37), "UTF8String");
      __int16 v39 = (const char *)objc_msgSend(objc_msgSend(v9, "UUIDString"), "UTF8String");
      *(_DWORD *)uint64_t buf = 68289538;
      int v61 = 0;
      __int16 v62 = 2082;
      int v63 = "";
      __int16 v64 = 2082;
      uint64_t v65 = v38;
      __int16 v66 = 2082;
      __int16 v67 = v39;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v36,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "disconnect to service, connected service identifier is not a NSUUID object",  "{msg%{public}.0s:disconnect to service, connected service identifier is not a NSUUID object, class of connected service identifier:%{public, location:escape_only}s, requested service identifier to disconnect: %{public, location:escape_only}s}",  buf,  0x26u);
    }

    *(void *)(a1 + 80) = 0LL;
    uint64_t v40 = (void *)(a1 + 112);
    objc_msgSend( *(id *)(a1 + 64),  "disconnectToServiceForClient:withServiceIdentifier:withConnectionToken:forUser:",  v12,  v9,  *(void *)(a1 + 72),  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v40));
    __int16 v19 = *a2;
    double v70 = @"CLMiLoConnectionReturnCode";
    __int16 v71 = &off_1018D3278;
    uint64_t v20 = &v71;
    id v21 = &v70;
    goto LABEL_46;
  }

  if (([v9 isEqual:*(void *)(a1 + 80)] & 1) == 0)
  {
    if (qword_1019348D0 != -1) {
      dispatch_once(&qword_1019348D0, &stru_101834BC0);
    }
    id v47 = (os_log_s *)qword_1019348D8;
    if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v48 = *(void *)(*(void *)(*(void *)a1 - 8LL) + 8LL) & 0x7FFFFFFFFFFFFFFFLL;
      char v49 = (const char *)objc_msgSend(objc_msgSend(*(id *)(a1 + 80), "UUIDString"), "UTF8String");
      id v50 = objc_msgSend(objc_msgSend(v9, "UUIDString"), "UTF8String");
      *(_DWORD *)uint64_t buf = 68289794;
      int v61 = 0;
      __int16 v62 = 2082;
      int v63 = "";
      __int16 v64 = 2082;
      uint64_t v65 = (const char *)v48;
      __int16 v66 = 2082;
      __int16 v67 = v49;
      __int16 v68 = 2082;
      id v69 = v50;
      _os_log_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_ERROR,  "{msg%{public}.0s:disconnect to service failed, disconnect a not connected service, class:%{public, l ocation:escape_only}s, connected service identifier:%{public, location:escape_only}s, requested service id entifierToDisconnect:%{public, location:escape_only}s}",  buf,  0x30u);
      if (qword_1019348D0 != -1) {
        dispatch_once(&qword_1019348D0, &stru_101834BC0);
      }
    }

    char v51 = (os_log_s *)qword_1019348D8;
    if (os_signpost_enabled((os_log_t)qword_1019348D8))
    {
      uint64_t v52 = *(void *)(*(void *)(*(void *)a1 - 8LL) + 8LL) & 0x7FFFFFFFFFFFFFFFLL;
      id v53 = (const char *)objc_msgSend(objc_msgSend(*(id *)(a1 + 80), "UUIDString"), "UTF8String");
      id v54 = objc_msgSend(objc_msgSend(v9, "UUIDString"), "UTF8String");
      *(_DWORD *)uint64_t buf = 68289794;
      int v61 = 0;
      __int16 v62 = 2082;
      int v63 = "";
      __int16 v64 = 2082;
      uint64_t v65 = (const char *)v52;
      __int16 v66 = 2082;
      __int16 v67 = v53;
      __int16 v68 = 2082;
      id v69 = v54;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v51,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "disconnect to service failed, disconnect a not connected service",  "{msg%{public}.0s:disconnect to service failed, disconnect a not connected service, class:%{public, l ocation:escape_only}s, connected service identifier:%{public, location:escape_only}s, requested service id entifierToDisconnect:%{public, location:escape_only}s}",  buf,  0x30u);
    }

    __int16 v19 = *a2;
    v58[0] = @"CLMiLoConnectionReturnCode";
    v58[1] = @"CLMiLoConnectionErrorMessage";
    v59[0] = &off_1018D32C0;
    v59[1] = &off_1018D3308;
    uint64_t v20 = (_UNKNOWN ***)v59;
    id v21 = (const __CFString **)v58;
    goto LABEL_56;
  }

  *(void *)(a1 + 80) = 0LL;
  id v18 = (void *)(a1 + 112);
  objc_msgSend( *(id *)(a1 + 64),  "disconnectToServiceForClient:withServiceIdentifier:withConnectionToken:forUser:",  v12,  v9,  *(void *)(a1 + 72),  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v18));
  __int16 v19 = *a2;
  id v56 = @"CLMiLoConnectionReturnCode";
  uint64_t v57 = &off_1018D3278;
  uint64_t v20 = &v57;
  id v21 = &v56;
LABEL_46:
  uint64_t v41 = 1LL;
LABEL_57:
  +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v20,  v21,  v41);
  return CLConnectionMessage::sendReply(v19);
}

uint64_t sub_10038C08C(uint64_t a1, CLConnectionMessage **a2)
{
  if (qword_1019348D0 != -1) {
    dispatch_once(&qword_1019348D0, &stru_101834BC0);
  }
  uint64_t v4 = (os_log_s *)qword_1019348D8;
  if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEBUG))
  {
    *(void *)uint64_t buf = 68289026LL;
    __int16 v24 = 2082;
    __int16 v25 = "";
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:kCLConnectionMessageMiLoSingleShotPrediction received in CLMiLoConnectionSubscription}",  buf,  0x12u);
  }

  if ((sub_10038EA10(a1, (uint64_t *)buf) & 1) == 0)
  {
    uint64_t v12 = *a2;
    v22[0] = &off_1018D3338;
    v21[0] = @"CLMiLoConnectionReturnCode";
    v21[1] = @"CLMiLoConnectionErrorMessage";
    v22[1] = +[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", *(void *)buf);
    id v13 = (_UNKNOWN ***)v22;
    id v14 = (const __CFString **)v21;
LABEL_14:
    uint64_t v15 = 2LL;
    goto LABEL_15;
  }

  *(void *)&double v5 = objc_opt_class(&OBJC_CLASS___NSUUID).n128_u64[0];
  DictionaryOfClasses = (void *)CLConnectionMessage::getDictionaryOfClasses( *a2,  +[NSSet setWithObjects:](&OBJC_CLASS___NSSet, "setWithObjects:", v6, v5, 0LL));
  if (!DictionaryOfClasses
    || (uint64_t v8 = DictionaryOfClasses,
        ![DictionaryOfClasses objectForKeyedSubscript:@"CLMiLoConnectionServiceIdentifier"])
    || ![v8 objectForKeyedSubscript:@"CLMiLoConnectionRequestIdentifier"])
  {
    uint64_t v12 = *a2;
    v19[0] = @"CLMiLoConnectionReturnCode";
    v19[1] = @"CLMiLoConnectionErrorMessage";
    v20[0] = &off_1018D3338;
    v20[1] = &off_1018D3308;
    id v13 = (_UNKNOWN ***)v20;
    id v14 = (const __CFString **)v19;
    goto LABEL_14;
  }

  id v9 = [v8 objectForKeyedSubscript:@"CLMiLoConnectionServiceIdentifier"];
  id v10 = [v8 objectForKeyedSubscript:@"CLMiLoConnectionRequestIdentifier"];
  uint64_t v11 = (void *)(a1 + 88);
  objc_msgSend( *(id *)(a1 + 64),  "requestSingleShotMiLoPredictionForClient:withServiceIdentifier:withRequestIdentifier:withConnectionToken:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v11),  v9,  v10,  *(void *)(a1 + 72));
  uint64_t v12 = *a2;
  uint64_t v17 = @"CLMiLoConnectionReturnCode";
  id v18 = &off_1018D3278;
  id v13 = &v18;
  id v14 = &v17;
  uint64_t v15 = 1LL;
LABEL_15:
  +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v13,  v14,  v15);
  return CLConnectionMessage::sendReply(v12);
}

uint64_t sub_10038C324(uint64_t a1, CLConnectionMessage **a2)
{
  if (qword_1019348D0 != -1) {
    dispatch_once(&qword_1019348D0, &stru_101834BC0);
  }
  uint64_t v4 = (os_log_s *)qword_1019348D8;
  if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEBUG))
  {
    *(void *)uint64_t buf = 68289026LL;
    __int16 v25 = 2082;
    uint64_t v26 = "";
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:kCLConnectionMessageRequestObservation received in CLMiLoConnectionSubscription}",  buf,  0x12u);
  }

  if ((sub_10038EA10(a1, (uint64_t *)buf) & 1) == 0)
  {
    id v13 = *a2;
    v23[0] = &off_1018D3338;
    v22[0] = @"CLMiLoConnectionReturnCode";
    v22[1] = @"CLMiLoConnectionErrorMessage";
    v23[1] = +[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", *(void *)buf);
    id v14 = (_UNKNOWN ***)v23;
    uint64_t v15 = (const __CFString **)v22;
LABEL_14:
    uint64_t v16 = 2LL;
    goto LABEL_15;
  }

  *(void *)&double v5 = objc_opt_class(&OBJC_CLASS___NSUUID).n128_u64[0];
  DictionaryOfClasses = (void *)CLConnectionMessage::getDictionaryOfClasses( *a2,  +[NSSet setWithObjects:](&OBJC_CLASS___NSSet, "setWithObjects:", v6, v5, 0LL));
  if (!DictionaryOfClasses
    || (uint64_t v8 = DictionaryOfClasses,
        ![DictionaryOfClasses objectForKeyedSubscript:@"CLMiLoConnectionServiceIdentifier"])
    || ![v8 objectForKeyedSubscript:@"CLMiLoConnectionRequestIdentifier"])
  {
    id v13 = *a2;
    v20[0] = @"CLMiLoConnectionReturnCode";
    v20[1] = @"CLMiLoConnectionErrorMessage";
    v21[0] = &off_1018D3338;
    v21[1] = &off_1018D3308;
    id v14 = (_UNKNOWN ***)v21;
    uint64_t v15 = (const __CFString **)v20;
    goto LABEL_14;
  }

  id v9 = [v8 objectForKeyedSubscript:@"CLMiLoConnectionServiceIdentifier"];
  id v10 = [v8 objectForKeyedSubscript:@"CLMiLoConnectionRequestIdentifier"];
  id v11 = [v8 objectForKeyedSubscript:@"CLMiLoConnectionPlaceLabelIdentifier"];
  uint64_t v12 = (void *)(a1 + 88);
  objc_msgSend( *(id *)(a1 + 64),  "requestObservationForClient:withServiceIdentifier:withRequestIdentifier:withPlaceIdentifier:withConnectionToken:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v12),  v9,  v10,  v11,  *(void *)(a1 + 72));
  id v13 = *a2;
  id v18 = @"CLMiLoConnectionReturnCode";
  __int16 v19 = &off_1018D3278;
  id v14 = &v19;
  uint64_t v15 = &v18;
  uint64_t v16 = 1LL;
LABEL_15:
  +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v14,  v15,  v16);
  return CLConnectionMessage::sendReply(v13);
}

uint64_t sub_10038C5D8(uint64_t a1, CLConnectionMessage **a2)
{
  if (qword_1019348D0 != -1) {
    dispatch_once(&qword_1019348D0, &stru_101834BC0);
  }
  uint64_t v4 = (os_log_s *)qword_1019348D8;
  if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEBUG))
  {
    *(void *)uint64_t buf = 68289026LL;
    __int16 v26 = 2082;
    uint64_t v27 = "";
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:kCLConnectionMessageLabelSignleObservation received in CLMiLoConnectionSubscription}",  buf,  0x12u);
  }

  if ((sub_10038EA10(a1, (uint64_t *)buf) & 1) == 0)
  {
    id v14 = *a2;
    v24[0] = &off_1018D3338;
    v23[0] = @"CLMiLoConnectionReturnCode";
    v23[1] = @"CLMiLoConnectionErrorMessage";
    v24[1] = +[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", *(void *)buf);
    uint64_t v15 = (_UNKNOWN ***)v24;
    uint64_t v16 = (const __CFString **)v23;
LABEL_15:
    uint64_t v17 = 2LL;
    goto LABEL_16;
  }

  *(void *)&double v5 = objc_opt_class(&OBJC_CLASS___NSUUID).n128_u64[0];
  DictionaryOfClasses = (void *)CLConnectionMessage::getDictionaryOfClasses( *a2,  +[NSSet setWithObjects:](&OBJC_CLASS___NSSet, "setWithObjects:", v6, v5, 0LL));
  if (!DictionaryOfClasses
    || (uint64_t v8 = DictionaryOfClasses,
        ![DictionaryOfClasses objectForKeyedSubscript:@"CLMiLoConnectionServiceIdentifier"])
    || ![v8 objectForKeyedSubscript:@"CLMiLoConnectionRequestIdentifier"]
    || ![v8 objectForKeyedSubscript:@"CLMiLoConnectionPlaceLabelIdentifier"])
  {
    id v14 = *a2;
    v21[0] = @"CLMiLoConnectionReturnCode";
    v21[1] = @"CLMiLoConnectionErrorMessage";
    v22[0] = &off_1018D3338;
    v22[1] = &off_1018D3308;
    uint64_t v15 = (_UNKNOWN ***)v22;
    uint64_t v16 = (const __CFString **)v21;
    goto LABEL_15;
  }

  id v9 = [v8 objectForKeyedSubscript:@"CLMiLoConnectionServiceIdentifier"];
  id v10 = [v8 objectForKeyedSubscript:@"CLMiLoConnectionRequestIdentifier"];
  id v11 = [v8 objectForKeyedSubscript:@"CLMiLoConnectionPlaceLabelIdentifier"];
  id v12 = [v8 objectForKeyedSubscript:@"CLMiLoConnectionObservationIdentifier"];
  id v13 = (void *)(a1 + 88);
  objc_msgSend( *(id *)(a1 + 64),  "requestLabelSingleObservationForClient:withServiceIdentifier:withRequestIdentifier:withPlaceIdentifier:withObservati onRequestIdentifier:withConnectionToken:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v13),  v9,  v10,  v11,  v12,  *(void *)(a1 + 72));
  id v14 = *a2;
  __int16 v19 = @"CLMiLoConnectionReturnCode";
  uint64_t v20 = &off_1018D3278;
  uint64_t v15 = &v20;
  uint64_t v16 = &v19;
  uint64_t v17 = 1LL;
LABEL_16:
  +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v15,  v16,  v17);
  return CLConnectionMessage::sendReply(v14);
}

uint64_t sub_10038C8BC(uint64_t a1, CLConnectionMessage **a2)
{
  if (qword_1019348D0 != -1) {
    dispatch_once(&qword_1019348D0, &stru_101834BC0);
  }
  uint64_t v4 = (os_log_s *)qword_1019348D8;
  if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v29 = 2082;
    uint64_t v30 = "";
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:kCLConnectionMessageLabelObservationsBetweenDates received in CLMiLoConnectionSubscription}",  buf,  0x12u);
  }

  if ((sub_10038EA10(a1, (uint64_t *)buf) & 1) == 0)
  {
    uint64_t v17 = *a2;
    v27[0] = &off_1018D3338;
    v26[0] = @"CLMiLoConnectionReturnCode";
    v26[1] = @"CLMiLoConnectionErrorMessage";
    v27[1] = +[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", *(void *)buf);
    id v18 = (_UNKNOWN ***)v27;
    __int16 v19 = (const __CFString **)v26;
LABEL_17:
    uint64_t v20 = 2LL;
    goto LABEL_18;
  }

  objc_opt_class(&OBJC_CLASS___NSUUID);
  uint64_t v6 = v5;
  *(void *)&double v7 = objc_opt_class(&OBJC_CLASS___NSDate).n128_u64[0];
  DictionaryOfClasses = (void *)CLConnectionMessage::getDictionaryOfClasses( *a2,  +[NSSet setWithObjects:](&OBJC_CLASS___NSSet, "setWithObjects:", v6, v7, v8, 0LL));
  if (!DictionaryOfClasses
    || (id v10 = DictionaryOfClasses,
        ![DictionaryOfClasses objectForKeyedSubscript:@"CLMiLoConnectionServiceIdentifier"])
    || ![v10 objectForKeyedSubscript:@"CLMiLoConnectionRequestIdentifier"]
    || ![v10 objectForKeyedSubscript:@"CLMiLoConnectionPlaceLabelIdentifier"]
    || ![v10 objectForKeyedSubscript:@"CLMiLoConnectionObservationStartDate"]
    || ![v10 objectForKeyedSubscript:@"CLMiLoConnectionObservationEndDate"])
  {
    uint64_t v17 = *a2;
    v24[0] = @"CLMiLoConnectionReturnCode";
    v24[1] = @"CLMiLoConnectionErrorMessage";
    v25[0] = &off_1018D3338;
    v25[1] = &off_1018D3308;
    id v18 = (_UNKNOWN ***)v25;
    __int16 v19 = (const __CFString **)v24;
    goto LABEL_17;
  }

  id v11 = [v10 objectForKeyedSubscript:@"CLMiLoConnectionServiceIdentifier"];
  id v12 = [v10 objectForKeyedSubscript:@"CLMiLoConnectionRequestIdentifier"];
  id v13 = [v10 objectForKeyedSubscript:@"CLMiLoConnectionPlaceLabelIdentifier"];
  id v14 = [v10 objectForKeyedSubscript:@"CLMiLoConnectionObservationStartDate"];
  id v15 = [v10 objectForKeyedSubscript:@"CLMiLoConnectionObservationEndDate"];
  uint64_t v16 = (void *)(a1 + 88);
  objc_msgSend( *(id *)(a1 + 64),  "requestLabelObservationsForClient:withServiceIdentifier:withRequestIdentifier:withPlaceIdentifier:betweenStartDate:e ndDate:withConnectionToken:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v16),  v11,  v12,  v13,  v14,  v15,  *(void *)(a1 + 72));
  uint64_t v17 = *a2;
  uint64_t v22 = @"CLMiLoConnectionReturnCode";
  Class v23 = &off_1018D3278;
  id v18 = &v23;
  __int16 v19 = &v22;
  uint64_t v20 = 1LL;
LABEL_18:
  +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v18,  v19,  v20);
  return CLConnectionMessage::sendReply(v17);
}

uint64_t sub_10038CC00(uint64_t a1, CLConnectionMessage **a2)
{
  if (qword_1019348D0 != -1) {
    dispatch_once(&qword_1019348D0, &stru_101834BC0);
  }
  uint64_t v4 = (os_log_s *)qword_1019348D8;
  if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEBUG))
  {
    *(void *)uint64_t buf = 68289026LL;
    __int16 v27 = 2082;
    uint64_t v28 = "";
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:kCLConnectionMessageRemoveLabels received in CLMiLoConnectionSubscription}",  buf,  0x12u);
  }

  if ((sub_10038EA10(a1, (uint64_t *)buf) & 1) == 0)
  {
    id v15 = *a2;
    v25[0] = &off_1018D3338;
    v24[0] = @"CLMiLoConnectionReturnCode";
    v24[1] = @"CLMiLoConnectionErrorMessage";
    v25[1] = +[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", *(void *)buf);
    uint64_t v16 = (_UNKNOWN ***)v25;
    uint64_t v17 = (const __CFString **)v24;
LABEL_15:
    uint64_t v18 = 2LL;
    goto LABEL_16;
  }

  objc_opt_class(&OBJC_CLASS___NSUUID);
  uint64_t v6 = v5;
  *(void *)&double v7 = objc_opt_class(&OBJC_CLASS___NSArray).n128_u64[0];
  DictionaryOfClasses = (void *)CLConnectionMessage::getDictionaryOfClasses( *a2,  +[NSSet setWithObjects:](&OBJC_CLASS___NSSet, "setWithObjects:", v6, v7, v8, 0LL));
  if (!DictionaryOfClasses
    || (id v10 = DictionaryOfClasses,
        ![DictionaryOfClasses objectForKeyedSubscript:@"CLMiLoConnectionServiceIdentifier"])
    || ![v10 objectForKeyedSubscript:@"CLMiLoConnectionRequestIdentifier"]
    || ![v10 objectForKeyedSubscript:@"CLMiLoConnectionLabelArray"])
  {
    id v15 = *a2;
    v22[0] = @"CLMiLoConnectionReturnCode";
    v22[1] = @"CLMiLoConnectionErrorMessage";
    v23[0] = &off_1018D3338;
    v23[1] = &off_1018D3308;
    uint64_t v16 = (_UNKNOWN ***)v23;
    uint64_t v17 = (const __CFString **)v22;
    goto LABEL_15;
  }

  id v11 = [v10 objectForKeyedSubscript:@"CLMiLoConnectionServiceIdentifier"];
  id v12 = [v10 objectForKeyedSubscript:@"CLMiLoConnectionRequestIdentifier"];
  id v13 = [v10 objectForKeyedSubscript:@"CLMiLoConnectionLabelArray"];
  id v14 = (void *)(a1 + 88);
  objc_msgSend( *(id *)(a1 + 64),  "requestRemoveLabelsForClient:withServiceIdentifier:withRequestIdentifier:withLabels:withConnectionToken:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v14),  v11,  v12,  v13,  *(void *)(a1 + 72));
  id v15 = *a2;
  uint64_t v20 = @"CLMiLoConnectionReturnCode";
  id v21 = &off_1018D3278;
  uint64_t v16 = &v21;
  uint64_t v17 = &v20;
  uint64_t v18 = 1LL;
LABEL_16:
  +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v16,  v17,  v18);
  return CLConnectionMessage::sendReply(v15);
}

uint64_t sub_10038CED8(uint64_t a1, CLConnectionMessage **a2)
{
  if (qword_1019348D0 != -1) {
    dispatch_once(&qword_1019348D0, &stru_101834BC0);
  }
  uint64_t v4 = (os_log_s *)qword_1019348D8;
  if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEBUG))
  {
    *(void *)uint64_t buf = 68289026LL;
    __int16 v27 = 2082;
    uint64_t v28 = "";
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:kCLConnectionMessageStartUpdatingMicroLocation received in CLMiLoConnectionSubscription}",  buf,  0x12u);
  }

  if ((sub_10038EA10(a1, (uint64_t *)buf) & 1) == 0)
  {
    id v15 = *a2;
    v25[0] = &off_1018D3338;
    v24[0] = @"CLMiLoConnectionReturnCode";
    v24[1] = @"CLMiLoConnectionErrorMessage";
    v25[1] = +[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", *(void *)buf);
    uint64_t v16 = (_UNKNOWN ***)v25;
    uint64_t v17 = (const __CFString **)v24;
LABEL_15:
    uint64_t v18 = 2LL;
    goto LABEL_16;
  }

  objc_opt_class(&OBJC_CLASS___NSUUID);
  uint64_t v6 = v5;
  *(void *)&double v7 = objc_opt_class(&OBJC_CLASS___CLMiLoUpdateConfiguration).n128_u64[0];
  DictionaryOfClasses = (void *)CLConnectionMessage::getDictionaryOfClasses( *a2,  +[NSSet setWithObjects:](&OBJC_CLASS___NSSet, "setWithObjects:", v6, v7, v8, 0LL));
  if (!DictionaryOfClasses
    || (id v10 = DictionaryOfClasses,
        ![DictionaryOfClasses objectForKeyedSubscript:@"CLMiLoConnectionServiceIdentifier"])
    || ![v10 objectForKeyedSubscript:@"CLMiLoConnectionRequestIdentifier"]
    || ![v10 objectForKeyedSubscript:@"CLMiLoConnectionUpdateConfiguration"])
  {
    id v15 = *a2;
    v22[0] = @"CLMiLoConnectionReturnCode";
    v22[1] = @"CLMiLoConnectionErrorMessage";
    v23[0] = &off_1018D3338;
    v23[1] = &off_1018D3308;
    uint64_t v16 = (_UNKNOWN ***)v23;
    uint64_t v17 = (const __CFString **)v22;
    goto LABEL_15;
  }

  id v11 = [v10 objectForKeyedSubscript:@"CLMiLoConnectionServiceIdentifier"];
  id v12 = [v10 objectForKeyedSubscript:@"CLMiLoConnectionRequestIdentifier"];
  id v13 = [v10 objectForKeyedSubscript:@"CLMiLoConnectionUpdateConfiguration"];
  id v14 = (void *)(a1 + 88);
  objc_msgSend( *(id *)(a1 + 64),  "requestStartUpdatingMicroLocationForClient:withServiceIdentifier:withRequestIdentifier:withConfiguration:withConnectionToken:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v14),  v11,  v12,  v13,  *(void *)(a1 + 72));
  id v15 = *a2;
  uint64_t v20 = @"CLMiLoConnectionReturnCode";
  id v21 = &off_1018D3278;
  uint64_t v16 = &v21;
  uint64_t v17 = &v20;
  uint64_t v18 = 1LL;
LABEL_16:
  +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v16,  v17,  v18);
  return CLConnectionMessage::sendReply(v15);
}

uint64_t sub_10038D1B0(uint64_t a1, CLConnectionMessage **a2)
{
  if (qword_1019348D0 != -1) {
    dispatch_once(&qword_1019348D0, &stru_101834BC0);
  }
  uint64_t v4 = (os_log_s *)qword_1019348D8;
  if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEBUG))
  {
    *(void *)uint64_t buf = 68289026LL;
    __int16 v26 = 2082;
    __int16 v27 = "";
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:kCLConnectionMessageStopUpdatingMicroLocation received in CLMiLoConnectionSubscription}",  buf,  0x12u);
  }

  if ((sub_10038EA10(a1, (uint64_t *)buf) & 1) == 0)
  {
    id v14 = *a2;
    v24[0] = &off_1018D3338;
    v23[0] = @"CLMiLoConnectionReturnCode";
    v23[1] = @"CLMiLoConnectionErrorMessage";
    v24[1] = +[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", *(void *)buf);
    id v15 = (_UNKNOWN ***)v24;
    uint64_t v16 = (const __CFString **)v23;
LABEL_14:
    uint64_t v17 = 2LL;
    goto LABEL_15;
  }

  objc_opt_class(&OBJC_CLASS___NSUUID);
  uint64_t v6 = v5;
  *(void *)&double v7 = objc_opt_class(&OBJC_CLASS___CLMiLoUpdateConfiguration).n128_u64[0];
  DictionaryOfClasses = (void *)CLConnectionMessage::getDictionaryOfClasses( *a2,  +[NSSet setWithObjects:](&OBJC_CLASS___NSSet, "setWithObjects:", v6, v7, v8, 0LL));
  if (!DictionaryOfClasses
    || (id v10 = DictionaryOfClasses,
        ![DictionaryOfClasses objectForKeyedSubscript:@"CLMiLoConnectionServiceIdentifier"])
    || ![v10 objectForKeyedSubscript:@"CLMiLoConnectionRequestIdentifier"])
  {
    id v14 = *a2;
    v21[0] = @"CLMiLoConnectionReturnCode";
    v21[1] = @"CLMiLoConnectionErrorMessage";
    v22[0] = &off_1018D3338;
    v22[1] = &off_1018D3308;
    id v15 = (_UNKNOWN ***)v22;
    uint64_t v16 = (const __CFString **)v21;
    goto LABEL_14;
  }

  id v11 = [v10 objectForKeyedSubscript:@"CLMiLoConnectionServiceIdentifier"];
  id v12 = [v10 objectForKeyedSubscript:@"CLMiLoConnectionRequestIdentifier"];
  id v13 = (void *)(a1 + 88);
  objc_msgSend( *(id *)(a1 + 64),  "requestStopUpdatingMicroLocationForClient:withServiceIdentifier:withRequestIdentifier:withConnectionToken:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v13),  v11,  v12,  *(void *)(a1 + 72));
  id v14 = *a2;
  __int16 v19 = @"CLMiLoConnectionReturnCode";
  uint64_t v20 = &off_1018D3278;
  id v15 = &v20;
  uint64_t v16 = &v19;
  uint64_t v17 = 1LL;
LABEL_15:
  +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v15,  v16,  v17);
  return CLConnectionMessage::sendReply(v14);
}

uint64_t sub_10038D458(uint64_t a1, uint64_t *a2)
{
  if (qword_1019348D0 != -1) {
    dispatch_once(&qword_1019348D0, &stru_101834BC0);
  }
  uint64_t v4 = (os_log_s *)qword_1019348D8;
  if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v15 = 2082;
    uint64_t v16 = "";
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:kCLConnectionMessageMiLoQueryConnectionStatus received in CLMiLoConnectionSubscription}",  buf,  0x12u);
  }

  if ((sub_10038EA10(a1, (uint64_t *)buf) & 1) != 0)
  {
    [*(id *)(a1 + 64) queryMiloConnectionStatus:*(void *)(a1 + 72)];
    uint64_t v5 = *a2;
    id v10 = @"CLMiLoConnectionReturnCode";
    id v11 = &off_1018D3278;
    uint64_t v6 = &v11;
    double v7 = &v10;
    uint64_t v8 = 1LL;
  }

  else
  {
    uint64_t v5 = *a2;
    v13[0] = &off_1018D3350;
    v12[0] = @"CLMiLoConnectionReturnCode";
    v12[1] = @"CLMiLoConnectionErrorMessage";
    v13[1] = +[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", *(void *)buf);
    uint64_t v6 = (_UNKNOWN ***)v13;
    double v7 = (const __CFString **)v12;
    uint64_t v8 = 2LL;
  }

  +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v6,  v7,  v8,  v10,  v11);
  return CLConnectionMessage::sendReply(v5);
}

uint64_t sub_10038D5EC(uint64_t a1, CLConnectionMessage **a2)
{
  if (qword_1019348D0 != -1) {
    dispatch_once(&qword_1019348D0, &stru_101834BC0);
  }
  uint64_t v4 = (os_log_s *)qword_1019348D8;
  if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEBUG))
  {
    *(void *)uint64_t buf = 68289026LL;
    __int16 v21 = 2082;
    uint64_t v22 = "";
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:kCLConnectionMessageMiLoEnableMiLoAtCurrentLocation received in CLMiLoConnectionSubscription}",  buf,  0x12u);
  }

  if ((sub_10038EA10(a1, (uint64_t *)buf) & 1) == 0)
  {
    id v9 = *a2;
    v19[0] = &off_1018D3338;
    v18[0] = @"CLMiLoConnectionReturnCode";
    v18[1] = @"CLMiLoConnectionErrorMessage";
    v19[1] = +[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", *(void *)buf);
    id v10 = (_UNKNOWN ***)v19;
    id v11 = (const __CFString **)v18;
LABEL_12:
    uint64_t v12 = 2LL;
    goto LABEL_13;
  }

  *(void *)&double v5 = objc_opt_class(&OBJC_CLASS___NSUUID).n128_u64[0];
  DictionaryOfClasses = (void *)CLConnectionMessage::getDictionaryOfClasses( *a2,  +[NSSet setWithObjects:](&OBJC_CLASS___NSSet, "setWithObjects:", v6, v5, 0LL));
  if (!DictionaryOfClasses
    || (uint64_t v8 = DictionaryOfClasses,
        ![DictionaryOfClasses objectForKeyedSubscript:@"CLMiLoConnectionServiceIdentifier"])
    || ![v8 objectForKeyedSubscript:@"CLMiLoConnectionRequestIdentifier"])
  {
    id v9 = *a2;
    v16[0] = @"CLMiLoConnectionReturnCode";
    v16[1] = @"CLMiLoConnectionErrorMessage";
    v17[0] = &off_1018D3338;
    v17[1] = &off_1018D3308;
    id v10 = (_UNKNOWN ***)v17;
    id v11 = (const __CFString **)v16;
    goto LABEL_12;
  }

  objc_msgSend( *(id *)(a1 + 64),  "enableMiLoAtCurrentLocationWithServiceIdentifier:withRequestIdentifier:connectionToken:",  objc_msgSend(v8, "objectForKeyedSubscript:", @"CLMiLoConnectionServiceIdentifier"),  objc_msgSend(v8, "objectForKeyedSubscript:", @"CLMiLoConnectionRequestIdentifier"),  *(void *)(a1 + 72));
  id v9 = *a2;
  id v14 = @"CLMiLoConnectionReturnCode";
  __int16 v15 = &off_1018D3278;
  id v10 = &v15;
  id v11 = &v14;
  uint64_t v12 = 1LL;
LABEL_13:
  +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v10,  v11,  v12);
  return CLConnectionMessage::sendReply(v9);
}

uint64_t sub_10038D860(uint64_t a1, CLConnectionMessage **a2)
{
  if (qword_1019348D0 != -1) {
    dispatch_once(&qword_1019348D0, &stru_101834BC0);
  }
  uint64_t v4 = (os_log_s *)qword_1019348D8;
  if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEBUG))
  {
    *(void *)uint64_t buf = 68289026LL;
    __int16 v23 = 2082;
    __int16 v24 = "";
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:kCLConnectionMessageRemoveCustomLOI received in CLMiLoConnectionSubscription}",  buf,  0x12u);
  }

  if ((sub_10038EA10(a1, (uint64_t *)buf) & 1) == 0)
  {
    id v11 = *a2;
    v21[0] = &off_1018D3338;
    v20[0] = @"CLMiLoConnectionReturnCode";
    v20[1] = @"CLMiLoConnectionErrorMessage";
    v21[1] = +[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", *(void *)buf);
    uint64_t v12 = (_UNKNOWN ***)v21;
    id v13 = (const __CFString **)v20;
LABEL_13:
    uint64_t v14 = 2LL;
    goto LABEL_14;
  }

  objc_opt_class(&OBJC_CLASS___NSUUID);
  uint64_t v6 = v5;
  *(void *)&double v7 = objc_opt_class(&OBJC_CLASS___NSString).n128_u64[0];
  DictionaryOfClasses = (void *)CLConnectionMessage::getDictionaryOfClasses( *a2,  +[NSSet setWithObjects:](&OBJC_CLASS___NSSet, "setWithObjects:", v6, v7, v8, 0LL));
  if (!DictionaryOfClasses
    || (id v10 = DictionaryOfClasses,
        ![DictionaryOfClasses objectForKeyedSubscript:@"CLMiLoConnectionServiceIdentifier"])
    || ![v10 objectForKeyedSubscript:@"CLMiLoConnectionRequestIdentifier"]
    || ![v10 objectForKeyedSubscript:@"CLMiLoConnectionLOIIdentifier"])
  {
    id v11 = *a2;
    v18[0] = @"CLMiLoConnectionReturnCode";
    v18[1] = @"CLMiLoConnectionErrorMessage";
    v19[0] = &off_1018D3338;
    v19[1] = &off_1018D3308;
    uint64_t v12 = (_UNKNOWN ***)v19;
    id v13 = (const __CFString **)v18;
    goto LABEL_13;
  }

  objc_msgSend( *(id *)(a1 + 64),  "requestRemoveCustomLoiWithServiceIdentifier:withRequestIdentifier:withLoiIdentifier:withConnectionToken:",  objc_msgSend(v10, "objectForKeyedSubscript:", @"CLMiLoConnectionServiceIdentifier"),  objc_msgSend(v10, "objectForKeyedSubscript:", @"CLMiLoConnectionRequestIdentifier"),  objc_msgSend(v10, "objectForKeyedSubscript:", @"CLMiLoConnectionLOIIdentifier"),  *(void *)(a1 + 72));
  id v11 = *a2;
  uint64_t v16 = @"CLMiLoConnectionReturnCode";
  uint64_t v17 = &off_1018D3278;
  uint64_t v12 = &v17;
  id v13 = &v16;
  uint64_t v14 = 1LL;
LABEL_14:
  +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v12,  v13,  v14);
  return CLConnectionMessage::sendReply(v11);
}

uint64_t sub_10038DB14(uint64_t a1, CLConnectionMessage **a2)
{
  if (qword_1019348D0 != -1) {
    dispatch_once(&qword_1019348D0, &stru_101834BC0);
  }
  uint64_t v4 = (os_log_s *)qword_1019348D8;
  if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v30 = 2082;
    id v31 = "";
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:kCLConnectionMessageRequestModelLearning received in CLMiLoConnectionSubscription}",  buf,  0x12u);
  }

  if ((sub_10038EA10(a1, &v22) & 1) != 0)
  {
    sub_1010DDBC0(buf, "com.apple.locationd.private_info");
    char v5 = sub_100C6AC9C(a1);
    char v6 = v5;
    if (v32 < 0)
    {
      operator delete(*(void **)buf);
      if ((v6 & 1) != 0) {
        goto LABEL_8;
      }
    }

    else if ((v5 & 1) != 0)
    {
LABEL_8:
      *(void *)&double v7 = objc_opt_class(&OBJC_CLASS___NSUUID).n128_u64[0];
      DictionaryOfClasses = (void *)CLConnectionMessage::getDictionaryOfClasses( *a2,  +[NSSet setWithObjects:](&OBJC_CLASS___NSSet, "setWithObjects:", v8, v7, 0LL));
      id v10 = DictionaryOfClasses;
      if (DictionaryOfClasses
        && [DictionaryOfClasses objectForKeyedSubscript:@"CLMiLoConnectionServiceIdentifier"]
        && [v10 objectForKeyedSubscript:@"CLMiLoConnectionRequestIdentifier"])
      {
        id v11 = [v10 objectForKeyedSubscript:@"CLMiLoConnectionServiceIdentifier"];
        id v12 = [v10 objectForKeyedSubscript:@"CLMiLoConnectionRequestIdentifier"];
        id v13 = (void *)(a1 + 88);
        objc_msgSend( *(id *)(a1 + 64),  "requestMicroLocationLearningForClient:withServiceIdentifier:withRequestIdentifier:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v13),  v11,  v12);
        uint64_t v14 = *a2;
        __int16 v23 = @"CLMiLoConnectionReturnCode";
        __int16 v24 = &off_1018D3278;
        +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v24,  &v23,  1LL);
        return CLConnectionMessage::sendReply(v14);
      }

      else
      {
        if (qword_1019348D0 != -1) {
          dispatch_once(&qword_1019348D0, &stru_101834BC0);
        }
        uint64_t v18 = (os_log_s *)qword_1019348D8;
        if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)uint64_t buf = 68289026;
          *(_DWORD *)&uint8_t buf[4] = 0;
          __int16 v30 = 2082;
          id v31 = "";
          _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:invalid data for kCLConnectionMessageRequestModelLearning}",  buf,  0x12u);
        }

        __int16 v19 = *a2;
        v25[0] = @"CLMiLoConnectionReturnCode";
        v25[1] = @"CLMiLoConnectionErrorMessage";
        v26[0] = &off_1018D3338;
        v26[1] = &off_1018D3308;
        +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v26,  v25,  2LL);
        return CLConnectionMessage::sendReply(v19);
      }
    }

    if (qword_1019348D0 != -1) {
      dispatch_once(&qword_1019348D0, &stru_101834BC0);
    }
    uint64_t v20 = (os_log_s *)qword_1019348D8;
    if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v30 = 2082;
      id v31 = "";
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:not qualified for kCLConnectionMessageRequestModelLearning}",  buf,  0x12u);
    }

    __int16 v21 = *a2;
    v27[0] = @"CLMiLoConnectionReturnCode";
    v27[1] = @"CLMiLoConnectionErrorMessage";
    v28[0] = &off_1018D3338;
    v28[1] = +[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", 1LL);
    +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v28,  v27,  2LL);
    return CLConnectionMessage::sendReply(v21);
  }

  else
  {
    if (qword_1019348D0 != -1) {
      dispatch_once(&qword_1019348D0, &stru_101834BC0);
    }
    uint64_t v16 = (os_log_s *)qword_1019348D8;
    if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v30 = 2082;
      id v31 = "";
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:not qualified for MiLo connection}",  buf,  0x12u);
    }

    uint64_t v17 = *a2;
    v34[0] = &off_1018D3338;
    v33[0] = @"CLMiLoConnectionReturnCode";
    v33[1] = @"CLMiLoConnectionErrorMessage";
    v34[1] = +[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v22);
    +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v34,  v33,  2LL);
    return CLConnectionMessage::sendReply(v17);
  }

void sub_10038E004( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, void *__p, uint64_t a22, int a23, __int16 a24, char a25, char a26)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10038E028(uint64_t a1, CLConnectionMessage **a2)
{
  if (qword_1019348D0 != -1) {
    dispatch_once(&qword_1019348D0, &stru_101834BC0);
  }
  uint64_t v4 = (os_log_s *)qword_1019348D8;
  if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v29 = 2082;
    __int16 v30 = "";
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:kCLConnectionMessageRequestPurgeMiLoData received in CLMiLoConnectionSubscription}",  buf,  0x12u);
  }

  if ((sub_10038EA10(a1, &v21) & 1) != 0)
  {
    sub_1010DDBC0(buf, "com.apple.locationd.milo_purge_data");
    char v5 = sub_100C6AC9C(a1);
    char v6 = v5;
    if (v31 < 0)
    {
      operator delete(*(void **)buf);
      if ((v6 & 1) != 0) {
        goto LABEL_8;
      }
    }

    else if ((v5 & 1) != 0)
    {
LABEL_8:
      *(void *)&double v7 = objc_opt_class(&OBJC_CLASS___NSUUID).n128_u64[0];
      DictionaryOfClasses = (void *)CLConnectionMessage::getDictionaryOfClasses( *a2,  +[NSSet setWithObjects:](&OBJC_CLASS___NSSet, "setWithObjects:", v8, v7, 0LL));
      id v10 = DictionaryOfClasses;
      if (DictionaryOfClasses
        && [DictionaryOfClasses objectForKeyedSubscript:@"CLMiLoConnectionRequestIdentifier"])
      {
        id v11 = [v10 objectForKeyedSubscript:@"CLMiLoConnectionRequestIdentifier"];
        id v12 = (void *)(a1 + 88);
        objc_msgSend( *(id *)(a1 + 64),  "requestPurgeAllMiLoDataFromClient:withRequestIdentifier:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v12),  v11);
        id v13 = *a2;
        uint64_t v22 = @"CLMiLoConnectionReturnCode";
        __int16 v23 = &off_1018D3278;
        +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v23,  &v22,  1LL);
        return CLConnectionMessage::sendReply(v13);
      }

      else
      {
        if (qword_1019348D0 != -1) {
          dispatch_once(&qword_1019348D0, &stru_101834BC0);
        }
        __int16 v19 = (os_log_s *)qword_1019348D8;
        if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)uint64_t buf = 68289026;
          *(_DWORD *)&uint8_t buf[4] = 0;
          __int16 v29 = 2082;
          __int16 v30 = "";
          _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:invalid data for kCLConnectionMessageRequestPurgeMiLoData}",  buf,  0x12u);
        }

        uint64_t v20 = *a2;
        v24[0] = @"CLMiLoConnectionReturnCode";
        v24[1] = @"CLMiLoConnectionErrorMessage";
        v25[0] = &off_1018D3338;
        v25[1] = &off_1018D3308;
        +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v25,  v24,  2LL);
        return CLConnectionMessage::sendReply(v20);
      }
    }

    if (qword_1019348D0 != -1) {
      dispatch_once(&qword_1019348D0, &stru_101834BC0);
    }
    uint64_t v17 = (os_log_s *)qword_1019348D8;
    if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v29 = 2082;
      __int16 v30 = "";
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:not qualified for kCLConnectionMessageRequestMiLoExportDatabaseTables}",  buf,  0x12u);
    }

    uint64_t v18 = *a2;
    v26[0] = @"CLMiLoConnectionReturnCode";
    v26[1] = @"CLMiLoConnectionErrorMessage";
    v27[0] = &off_1018D3338;
    v27[1] = +[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", 1LL);
    +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v27,  v26,  2LL);
    return CLConnectionMessage::sendReply(v18);
  }

  else
  {
    if (qword_1019348D0 != -1) {
      dispatch_once(&qword_1019348D0, &stru_101834BC0);
    }
    __int16 v15 = (os_log_s *)qword_1019348D8;
    if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v29 = 2082;
      __int16 v30 = "";
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:not qualified for kCLConnectionMessageRequestPurgeMiLoData}",  buf,  0x12u);
    }

    uint64_t v16 = *a2;
    v33[0] = &off_1018D3338;
    v32[0] = @"CLMiLoConnectionReturnCode";
    v32[1] = @"CLMiLoConnectionErrorMessage";
    v33[1] = +[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v21);
    +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v33,  v32,  2LL);
    return CLConnectionMessage::sendReply(v16);
  }

void sub_10038E4E0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, void *__p, uint64_t a22, int a23, __int16 a24, char a25, char a26)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10038E504(uint64_t a1, CLConnectionMessage **a2)
{
  if (qword_1019348D0 != -1) {
    dispatch_once(&qword_1019348D0, &stru_101834BC0);
  }
  uint64_t v4 = (os_log_s *)qword_1019348D8;
  if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    LOWORD(v28) = 2082;
    *(void *)((char *)&v28 + 2) = "";
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:kCLConnectionMessageRequestMiLoExportDatabaseTables received in CLMiLoConnectionSubscription}",  buf,  0x12u);
  }

  if ((sub_10038EA10(a1, &v20) & 1) != 0)
  {
    sub_1010DDBC0(buf, "com.apple.locationd.microlocation.export-db");
    char v5 = sub_100C6AC9C(a1);
    char v6 = v5;
    if (SHIBYTE(v28) < 0)
    {
      operator delete(*(void **)buf);
      if ((v6 & 1) != 0) {
        goto LABEL_8;
      }
    }

    else if ((v5 & 1) != 0)
    {
LABEL_8:
      *(void *)&double v7 = objc_opt_class(&OBJC_CLASS___NSUUID).n128_u64[0];
      DictionaryOfClasses = (void *)CLConnectionMessage::getDictionaryOfClasses( *a2,  +[NSSet setWithObjects:](&OBJC_CLASS___NSSet, "setWithObjects:", v8, v7, 0LL));
      id v10 = DictionaryOfClasses;
      if (DictionaryOfClasses
        && [DictionaryOfClasses objectForKeyedSubscript:@"CLMiLoConnectionRequestIdentifier"])
      {
        id v11 = [v10 objectForKeyedSubscript:@"CLMiLoConnectionRequestIdentifier"];
        *(void *)uint64_t buf = 0LL;
        __int128 v28 = 0uLL;
        sub_100C6AE30(a1);
        if (v28 >= 0) {
          id v12 = buf;
        }
        else {
          id v12 = *(uint8_t **)buf;
        }
        objc_msgSend( *(id *)(a1 + 64),  "requestExportMiLoDatabaseTablesFromClient:withRequestIdentifier:connectionToken:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v12),  v11,  *(void *)(a1 + 72));
        id v13 = *a2;
        uint64_t v21 = @"CLMiLoConnectionReturnCode";
        uint64_t v22 = &off_1018D3278;
        +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v22,  &v21,  1LL);
        CLConnectionMessage::sendReply(v13);
        if (SHIBYTE(v28) < 0) {
          operator delete(*(void **)buf);
        }
      }

      else
      {
        if (qword_1019348D0 != -1) {
          dispatch_once(&qword_1019348D0, &stru_101834BC0);
        }
        uint64_t v18 = (os_log_s *)qword_1019348D8;
        if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)uint64_t buf = 68289026;
          *(_DWORD *)&uint8_t buf[4] = 0;
          LOWORD(v28) = 2082;
          *(void *)((char *)&v28 + 2) = "";
          _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:invalid data for kCLConnectionMessageRequestMiLoExportDatabaseTables}",  buf,  0x12u);
        }

        __int16 v19 = *a2;
        v23[0] = @"CLMiLoConnectionReturnCode";
        v23[1] = @"CLMiLoConnectionErrorMessage";
        v24[0] = &off_1018D3338;
        v24[1] = &off_1018D3308;
        +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v24,  v23,  2LL);
        CLConnectionMessage::sendReply(v19);
      }

      return;
    }

    if (qword_1019348D0 != -1) {
      dispatch_once(&qword_1019348D0, &stru_101834BC0);
    }
    uint64_t v16 = (os_log_s *)qword_1019348D8;
    if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      LOWORD(v28) = 2082;
      *(void *)((char *)&v28 + 2) = "";
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:not qualified for kCLConnectionMessageRequestMiLoExportDatabaseTables}",  buf,  0x12u);
    }

    uint64_t v17 = *a2;
    v25[0] = @"CLMiLoConnectionReturnCode";
    v25[1] = @"CLMiLoConnectionErrorMessage";
    v26[0] = &off_1018D3338;
    v26[1] = +[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", 1LL);
    +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v26,  v25,  2LL);
    CLConnectionMessage::sendReply(v17);
  }

  else
  {
    if (qword_1019348D0 != -1) {
      dispatch_once(&qword_1019348D0, &stru_101834BC0);
    }
    uint64_t v14 = (os_log_s *)qword_1019348D8;
    if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      LOWORD(v28) = 2082;
      *(void *)((char *)&v28 + 2) = "";
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:not qualified for CLMiLoConnection}",  buf,  0x12u);
    }

    __int16 v15 = *a2;
    v30[0] = &off_1018D3338;
    v29[0] = @"CLMiLoConnectionReturnCode";
    v29[1] = @"CLMiLoConnectionErrorMessage";
    v30[1] = +[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v20);
    +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v30,  v29,  2LL);
    CLConnectionMessage::sendReply(v15);
  }

void sub_10038E9E4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, void *__p, uint64_t a22, int a23, __int16 a24, char a25, char a26)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10038EA10(uint64_t a1, uint64_t *a2)
{
  char v4 = sub_100C6AC9C(a1);
  char v5 = v4;
  if (v13 < 0)
  {
    operator delete(__p);
    if ((v5 & 1) != 0) {
      goto LABEL_3;
    }
LABEL_6:
    if (qword_1019348D0 != -1) {
      dispatch_once(&qword_1019348D0, &stru_101834BC0);
    }
    double v7 = (os_log_s *)qword_1019348D8;
    if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEFAULT))
    {
      std::string __p = (void *)68289026;
      __int16 v11 = 2082;
      id v12 = "";
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:SPI request, client is not entitled for CLMiLoConnection}",  (uint8_t *)&__p,  0x12u);
    }

    uint64_t v8 = 1LL;
    goto LABEL_16;
  }

  if ((v4 & 1) == 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((sub_100BA0ED0() & 1) != 0) {
    return 1LL;
  }
  if (qword_1019348D0 != -1) {
    dispatch_once(&qword_1019348D0, &stru_101834BC0);
  }
  id v9 = (os_log_s *)qword_1019348D8;
  if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEFAULT))
  {
    std::string __p = (void *)68289026;
    __int16 v11 = 2082;
    id v12 = "";
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:SPI request, CLMiLoConnection is not available on this platform}",  (uint8_t *)&__p,  0x12u);
  }

  uint64_t v8 = 2LL;
LABEL_16:
  uint64_t result = 0LL;
  *a2 = v8;
  return result;
}

void sub_10038EBD0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10038EBF4(id a1)
{
  qword_1019348D8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

void sub_10038EC20(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

uint64_t sub_10038EC4C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = (void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(*(void *)*v3 + 24LL))(*v3, a1);
      return a1;
    }

    *(void *)(a1 + 24) = v4;
  }

  else
  {
    unint64_t v3 = (void *)(a1 + 24);
  }

  *unint64_t v3 = 0LL;
  return a1;
}

id sub_10038ECB0(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return [a1 cppObjectPtr];
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101834C00);
    }
    unint64_t v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)uint64_t buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001012E7089LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101834C00);
    }
    LODWORD(v8) = 134218498;
    HIDWORD(v8) = (_DWORD)v2;
    uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly becaus e the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101834C00);
    }
    char v6 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001012E7089LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101834C00);
    }
    LODWORD(v8) = 134218498;
    HIDWORD(v8) = (_DWORD)v2;
    uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly becaus e the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  double v7 = (uint8_t *)v4;
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLMicroLocationNotifier_Type::MiLoServiceEvent, Callback = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:228:46)]",  "%s\n",  v4);
  if (v7 != buf) {
    free(v7);
  }
  return 0LL;
}

void sub_10038F05C(id a1)
{
  qword_101934478 = (uint64_t)os_log_create("com.apple.locationd.Support", "Support");
}

id sub_10038F088(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return [a1 cppObjectPtr];
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101834C00);
    }
    unint64_t v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)uint64_t buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001012E70BCLL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101834C00);
    }
    LODWORD(v8) = 134218498;
    HIDWORD(v8) = (_DWORD)v2;
    uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly becaus e the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101834C00);
    }
    char v6 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001012E70BCLL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101834C00);
    }
    LODWORD(v8) = 134218498;
    HIDWORD(v8) = (_DWORD)v2;
    uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly becaus e the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  double v7 = (uint8_t *)v4;
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLMicroLocationNotifier_Type::MiLoPrediction, Ca llback = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:228:46)]",  "%s\n",  v4);
  if (v7 != buf) {
    free(v7);
  }
  return 0LL;
}

id sub_10038F434(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return [a1 cppObjectPtr];
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101834C00);
    }
    unint64_t v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)uint64_t buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001012E70EDLL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101834C00);
    }
    LODWORD(v8) = 134218498;
    HIDWORD(v8) = (_DWORD)v2;
    uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly becaus e the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101834C00);
    }
    char v6 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001012E70EDLL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101834C00);
    }
    LODWORD(v8) = 134218498;
    HIDWORD(v8) = (_DWORD)v2;
    uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly becaus e the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  double v7 = (uint8_t *)v4;
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLMicroLocationNotifier_Type::MiLoServiceDebugRe sponse, Callback = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:228:46)]",  "%s\n",  v4);
  if (v7 != buf) {
    free(v7);
  }
  return 0LL;
}

id sub_10038F7E0(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return sub_10038FF14((uint64_t)&v8 + 7, a1);
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101834C00);
    }
    unint64_t v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)uint64_t buf = 134218498;
      id v11 = v2;
      __int16 v12 = 2048;
      uint64_t v13 = 0LL;
      __int16 v14 = 2080;
      unint64_t v15 = 0x80000001012E7128LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101834C00);
    }
    LODWORD(v9) = 134218498;
    HIDWORD(v9) = (_DWORD)v2;
    LODWORD(v8) = 32;
    uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly becaus e the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v9,  v8,  v9);
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101834C00);
    }
    char v6 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134218498;
      id v11 = v2;
      __int16 v12 = 2048;
      uint64_t v13 = 0LL;
      __int16 v14 = 2080;
      unint64_t v15 = 0x80000001012E7128LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101834C00);
    }
    LODWORD(v9) = 134218498;
    HIDWORD(v9) = (_DWORD)v2;
    LODWORD(v8) = 32;
    uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly becaus e the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v9,  v8,  v9);
  }

  double v7 = (uint8_t *)v4;
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLMicroLocationNotifier_Type::MiLoConnectionStat usEvent, Callback = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:241:46)]",  "%s\n",  v4);
  if (v7 != buf) {
    free(v7);
  }
  return 0LL;
}

id sub_10038FB68(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return [a1 cppObjectPtr];
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101834C00);
    }
    unint64_t v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)uint64_t buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001012E7128LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101834C00);
    }
    LODWORD(v8) = 134218498;
    HIDWORD(v8) = (_DWORD)v2;
    uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly becaus e the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101834C00);
    }
    char v6 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001012E7128LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101834C00);
    }
    LODWORD(v8) = 134218498;
    HIDWORD(v8) = (_DWORD)v2;
    uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly becaus e the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  double v7 = (uint8_t *)v4;
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLMicroLocationNotifier_Type::MiLoConnectionStat usEvent, Callback = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:250:46)]",  "%s\n",  v4);
  if (v7 != buf) {
    free(v7);
  }
  return 0LL;
}

id sub_10038FF14(uint64_t a1, void *a2)
{
  if (![a2 cppObjectPtr]
    && objc_msgSend(objc_msgSend(a2, "compatibilityInfo"), "isEqual:", &off_1018D3368))
  {
    if (objc_msgSend(objc_msgSend(a2, "serialized"), "length") != (id)8) {
      sub_101236778();
    }
    objc_msgSend(a2, "setCppObjectPtr:", objc_msgSend(objc_msgSend(a2, "serialized"), "bytes"));
  }

  return [a2 cppObjectPtr];
}

id sub_10038FF88(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return [a1 cppObjectPtr];
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101834C00);
    }
    unint64_t v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)uint64_t buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001012E7164LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101834C00);
    }
    LODWORD(v8) = 134218498;
    HIDWORD(v8) = (_DWORD)v2;
    uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly becaus e the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101834C00);
    }
    char v6 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001012E7164LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101834C00);
    }
    LODWORD(v8) = 134218498;
    HIDWORD(v8) = (_DWORD)v2;
    uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly becaus e the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  double v7 = (uint8_t *)v4;
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLMicroLocationNotifier_Type::MiLoRecordingMetaI nfoEvent, Callback = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:228:46)]",  "%s\n",  v4);
  if (v7 != buf) {
    free(v7);
  }
  return 0LL;
}

id sub_100390334(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return [a1 cppObjectPtr];
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101834C00);
    }
    unint64_t v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)uint64_t buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001012E71A1LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101834C00);
    }
    LODWORD(v8) = 134218498;
    HIDWORD(v8) = (_DWORD)v2;
    uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly becaus e the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101834C00);
    }
    char v6 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001012E71A1LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101834C00);
    }
    LODWORD(v8) = 134218498;
    HIDWORD(v8) = (_DWORD)v2;
    uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly becaus e the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  double v7 = (uint8_t *)v4;
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLMicroLocationNotifier_Type::MiLoGenericEventRe sponse, Callback = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:228:46)]",  "%s\n",  v4);
  if (v7 != buf) {
    free(v7);
  }
  return 0LL;
}

void *sub_1003906E0@<X0>(char **a1@<X1>, void *a2@<X2>, void *a3@<X8>)
{
  char v6 = operator new(0x70uLL);
  uint64_t result = sub_100272F18(v6, a1, a2);
  *a3 = v6 + 3;
  a3[1] = v6;
  return result;
}

void sub_10039072C(_Unwind_Exception *a1)
{
}

__n128 sub_100390740(uint64_t a1)
{
  id v2 = (char *)operator new(0x18uLL);
  *(void *)id v2 = &off_101834C58;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_10039077C(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &off_101834C58;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_1003907A0(uint64_t a1, uint64_t a2, __int128 *a3)
{
}

uint64_t sub_1003907A8(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_1003907E4()
{
}

void sub_1003907F0(uint64_t a1, uint64_t a2, __int128 *a3)
{
  __int128 v6 = *a3;
  *(void *)a3 = 0LL;
  *((void *)a3 + 1) = 0LL;
  sub_100390874(a1, a2, (CLConnectionMessage **)&v6);
  unint64_t v3 = (std::__shared_weak_count *)*((void *)&v6 + 1);
  if (*((void *)&v6 + 1))
  {
    uint64_t v4 = (unint64_t *)(*((void *)&v6 + 1) + 8LL);
    do
      unint64_t v5 = __ldaxr(v4);
    while (__stlxr(v5 - 1, v4));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }

void sub_10039085C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1012310A8(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100390874(uint64_t a1, uint64_t a2, CLConnectionMessage **a3)
{
  __int128 v6 = (NSSet *)(*(uint64_t (**)(uint64_t))(*(void *)a2 + 16LL))(a2);
  DictionaryOfClasses = (const __CFDictionary *)CLConnectionMessage::getDictionaryOfClasses(*a3, v6);
  sub_1002A5550((int)v15, DictionaryOfClasses);
  if ((sub_1002A6F64((uint64_t)v15, "kCLConnectionMessageSubscribeKey", &v14) & 1) != 0)
  {
    uint64_t v8 = *(void (**)(void *, BOOL, uint8_t *))a1;
    uint64_t v9 = *(void *)(a1 + 8);
    id v10 = (void *)(a2 + (v9 >> 1));
    if ((v9 & 1) != 0) {
      uint64_t v8 = *(void (**)(void *, BOOL, uint8_t *))(*v10 + v8);
    }
    v8(v10, v14, v15);
  }

  else
  {
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101834CC8);
    }
    __int16 v11 = (os_log_s *)qword_101934978;
    if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      int v17 = 0;
      __int16 v18 = 2082;
      __int16 v19 = "";
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Couldn't get value for kCLConnectionMessageSubscribeKey key}",  buf,  0x12u);
      if (qword_101934970 != -1) {
        dispatch_once(&qword_101934970, &stru_101834CC8);
      }
    }

    uint64_t v12 = (os_log_s *)qword_101934978;
    if (os_signpost_enabled((os_log_t)qword_101934978))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      int v17 = 0;
      __int16 v18 = 2082;
      __int16 v19 = "";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v12,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Couldn't get value for kCLConnectionMessageSubscribeKey key",  "{msg%{public}.0s:Couldn't get value for kCLConnectionMessageSubscribeKey key}",  buf,  0x12u);
    }
  }

  return sub_1002A5590(v15);
}

void sub_100390A58( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
}

void sub_100390A74(id a1)
{
  qword_101934978 = (uint64_t)os_log_create("com.apple.locationd.Core", "Client");
}

__n128 sub_100390AA0(uint64_t a1)
{
  id v2 = (char *)operator new(0x18uLL);
  *(void *)id v2 = &off_101834D08;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_100390ADC(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &off_101834D08;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_100390B00(uint64_t a1, uint64_t a2, uint64_t *a3)
{
}

uint64_t sub_100390B08(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_100390B44()
{
}

void sub_100390B50(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *a3;
  unint64_t v3 = (std::__shared_weak_count *)a3[1];
  unint64_t v15 = v3;
  *a3 = 0LL;
  a3[1] = 0LL;
  unint64_t v5 = *(void (**)(void *, uint64_t *))a1;
  uint64_t v6 = *(void *)(a1 + 8);
  double v7 = (void *)(a2 + (v6 >> 1));
  if ((v6 & 1) != 0) {
    unint64_t v5 = *(void (**)(void *, uint64_t *))(*v7 + v5);
  }
  uint64_t v16 = v4;
  int v17 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      unint64_t v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }

  v5(v7, &v16);
  id v10 = v17;
  if (v17)
  {
    __int16 v11 = (unint64_t *)&v17->__shared_owners_;
    do
      unint64_t v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }

  if (v15)
  {
    __int16 v13 = (unint64_t *)&v15->__shared_owners_;
    do
      unint64_t v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }

void sub_100390C24( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
}

uint64_t sub_100390C40(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  if (a3)
  {
    uint64_t v5 = 56 * a3;
    do
    {
      sub_100390CB8(a1, a2, (__int128 *)a2);
      a2 += 56;
      v5 -= 56LL;
    }

    while (v5);
  }

  return a1;
}

void sub_100390CA4(_Unwind_Exception *a1)
{
}

unsigned __int8 *sub_100390CB8(uint64_t a1, unsigned __int8 *a2, __int128 *a3)
{
  double v7 = (void *)(a1 + 24);
  unint64_t v8 = sub_10004B1A4(a1 + 24, (uint64_t)a2);
  unint64_t v9 = v8;
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    unint64_t v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v3 = v8;
      if (v8 >= v10) {
        unint64_t v3 = v8 % v10;
      }
    }

    else
    {
      unint64_t v3 = (v10 - 1) & v8;
    }

    __int16 v13 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v3);
    if (v13)
    {
      for (uint64_t i = *v13; i; uint64_t i = *(unsigned __int8 **)i)
      {
        unint64_t v15 = *((void *)i + 1);
        if (v15 == v9)
        {
          if ((sub_100022A24(a1 + 32, i + 16, a2) & 1) != 0) {
            return i;
          }
        }

        else
        {
          if (v12 > 1)
          {
            if (v15 >= v10) {
              v15 %= v10;
            }
          }

          else
          {
            v15 &= v10 - 1;
          }

          if (v15 != v3) {
            break;
          }
        }
      }
    }
  }

  sub_100390F38(a1, v9, a3, (uint64_t)v25);
  float v16 = (float)(unint64_t)(*(void *)(a1 + 24) + 1LL);
  float v17 = *(float *)(a1 + 32);
  if (!v10 || (float)(v17 * (float)v10) < v16)
  {
    BOOL v18 = 1LL;
    if (v10 >= 3) {
      BOOL v18 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v19 = v18 | (2 * v10);
    unint64_t v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20) {
      size_t v21 = v20;
    }
    else {
      size_t v21 = v19;
    }
    sub_100019E10(a1, v21);
    unint64_t v10 = *(void *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10) {
        unint64_t v3 = v9 % v10;
      }
      else {
        unint64_t v3 = v9;
      }
    }

    else
    {
      unint64_t v3 = (v10 - 1) & v9;
    }
  }

  uint64_t v22 = *(void **)(*(void *)a1 + 8 * v3);
  if (v22)
  {
    *(void *)v25[0] = *v22;
    *uint64_t v22 = v25[0];
  }

  else
  {
    *(void *)v25[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v25[0];
    *(void *)(*(void *)a1 + 8 * v3) = a1 + 16;
    if (*(void *)v25[0])
    {
      unint64_t v23 = *(void *)(*(void *)v25[0] + 8LL);
      if ((v10 & (v10 - 1)) != 0)
      {
        if (v23 >= v10) {
          v23 %= v10;
        }
      }

      else
      {
        v23 &= v10 - 1;
      }

      *(void *)(*(void *)a1 + 8 * v23) = v25[0];
    }
  }

  uint64_t i = (unsigned __int8 *)v25[0];
  v25[0] = 0LL;
  ++*v7;
  sub_100272D04((uint64_t)v25, 0LL);
  return i;
}

void sub_100390F20(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void *sub_100390F38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  unint64_t v8 = operator new(0x48uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + 16) = 0;
  *unint64_t v8 = 0LL;
  v8[1] = a2;
  __n128 result = sub_100390FAC(v8 + 2, a3);
  *(_BYTE *)(a4 + 16) = 1;
  return result;
}

void sub_100390F94(_Unwind_Exception *a1)
{
}

void *sub_100390FAC(void *__dst, __int128 *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1010DD48C(__dst, *(void **)a2, *((void *)a2 + 1));
  }

  else
  {
    __int128 v4 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)__dst = v4;
  }

  sub_10001A504((uint64_t)(__dst + 3), (uint64_t)a2 + 24);
  return __dst;
}

void sub_100391004(_Unwind_Exception *exception_object)
{
}

void sub_1003910C4(id a1)
{
  qword_101995540 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CMHealthColdStorageWatchServiceSilo");
}

void sub_100391178(id a1)
{
}

void sub_100391780(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
}

id sub_1003917BC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return [a4 onCompanionNotification:a2 data:a3];
}

void sub_1003917CC(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  unint64_t v8 = operator new(0x48uLL);
  unint64_t v9 = v8;
  unint64_t v10 = (std::__shared_weak_count *)a1[1];
  if (*a1) {
    uint64_t v11 = *a1 + 336LL;
  }
  else {
    uint64_t v11 = 0LL;
  }
  uint64_t v35 = v11;
  uint64_t v36 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      unint64_t v13 = __ldxr(p_shared_owners);
    while (__stxr(v13 + 1, p_shared_owners));
  }

  unint64_t v14 = (std::__shared_weak_count *)a2[1];
  if (*a2) {
    uint64_t v15 = *a2 + 360LL;
  }
  else {
    uint64_t v15 = 0LL;
  }
  uint64_t v33 = v15;
  __int16 v34 = v14;
  if (v14)
  {
    float v16 = (unint64_t *)&v14->__shared_owners_;
    do
      unint64_t v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
  }

  BOOL v18 = (std::__shared_weak_count *)a3[1];
  if (*a3) {
    uint64_t v19 = *a3 + 464LL;
  }
  else {
    uint64_t v19 = 0LL;
  }
  uint64_t v31 = v19;
  char v32 = v18;
  if (v18)
  {
    unint64_t v20 = (unint64_t *)&v18->__shared_owners_;
    do
      unint64_t v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
  }

  sub_100C70340(v8, &v35, &v33, &v31);
  *a4 = v9;
  uint64_t v22 = v32;
  if (v32)
  {
    unint64_t v23 = (unint64_t *)&v32->__shared_owners_;
    do
      unint64_t v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
    }
  }

  __int16 v25 = v34;
  if (v34)
  {
    __int16 v26 = (unint64_t *)&v34->__shared_owners_;
    do
      unint64_t v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }

  __int128 v28 = v36;
  if (v36)
  {
    __int16 v29 = (unint64_t *)&v36->__shared_owners_;
    do
      unint64_t v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }

void sub_10039195C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, char a13)
{
}

void sub_100391C3C(void **a1, double a2)
{
  if (a2 >= 0.0)
  {
    unint64_t v8 = a1[2];
    uint64_t v6 = (uint64_t)(a1 + 2);
    uint64_t v7 = v8;
    unint64_t v9 = *(void *)(v6 - 8);
    if (v9 >= (unint64_t)v8)
    {
      unint64_t v11 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v9 - (void)*a1) >> 3);
      unint64_t v12 = v11 + 1;
      if (v11 + 1 > 0xAAAAAAAAAAAAAAALL) {
        sub_100007008();
      }
      unint64_t v13 = 0xAAAAAAAAAAAAAAABLL * ((v7 - (_BYTE *)*a1) >> 3);
      if (2 * v13 > v12) {
        unint64_t v12 = 2 * v13;
      }
      if (v13 >= 0x555555555555555LL) {
        unint64_t v14 = 0xAAAAAAAAAAAAAAALL;
      }
      else {
        unint64_t v14 = v12;
      }
      if (v14) {
        uint64_t v15 = (char *)sub_10000701C(v6, v14);
      }
      else {
        uint64_t v15 = 0LL;
      }
      float v16 = &v15[24 * v11];
      unint64_t v17 = &v15[24 * v14];
      *(double *)float v16 = a2;
      *((void *)v16 + 1) = 0x7FEFFFFFFFFFFFFFLL;
      v16[16] = 0;
      unint64_t v10 = v16 + 24;
      uint64_t v19 = (char *)*a1;
      BOOL v18 = (char *)a1[1];
      if (v18 != *a1)
      {
        do
        {
          __int128 v20 = *(_OWORD *)(v18 - 24);
          *(v16 - 8) = *(v18 - 8);
          *(_OWORD *)(v16 - 24) = v20;
          v16 -= 24;
          v18 -= 24;
        }

        while (v18 != v19);
        BOOL v18 = (char *)*a1;
      }

      *a1 = v16;
      a1[1] = v10;
      a1[2] = v17;
      if (v18) {
        operator delete(v18);
      }
    }

    else
    {
      *(double *)unint64_t v9 = a2;
      *(void *)(v9 + 8) = 0x7FEFFFFFFFFFFFFFLL;
      *(_BYTE *)(v9 + 16) = 0;
      unint64_t v10 = (char *)(v9 + 24);
    }

    a1[1] = v10;
  }

  else
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101834F08);
    }
    unint64_t v3 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134349056;
      double v24 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_FAULT,  "Programmer error, this expiration rule with time %{public}fis not valid.",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101834F08);
      }
      int v21 = 134349056;
      double v22 = a2;
      __int128 v4 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Programmer error, this expiration rule with time %{public}fis not valid.",  &v21,  12);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLActivityAggregator<CLElevationGradeEntry, CLActivityDB::ClassBDataProtectionPolicy>::setExpirationRule(CF TimeInterval) [T = CLElevationGradeEntry, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v4);
    }
  }

uint64_t sub_100391EF0(uint64_t a1)
{
  if (qword_1019344D0 != -1) {
    dispatch_once(&qword_1019344D0, &stru_101834E78);
  }
  id v2 = (os_log_s *)qword_1019344D8;
  if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Aggregating ElevationGrade db records", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_101834E78);
    }
    v5[0] = 0;
    __int128 v4 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  0LL,  "Aggregating ElevationGrade db records",  v5,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[CMHealthColdStorageWatchService setUpAggregationOnTimer]_block_invoke",  "%s\n",  v4);
  }

  return sub_100392094(*(void *)(*(void *)(a1 + 32) + 128LL));
}

uint64_t sub_100392094(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 40)) {
    return (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 24) + 32LL))(*(void *)(a1 + 24), a1);
  }
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101834F08);
  }
  id v2 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    double v3 = sub_101171D38();
    int v4 = *(_DWORD *)(*(void *)(a1 + 24) + 132LL);
    *(_DWORD *)uint64_t buf = 134218240;
    *(double *)uint64_t v33 = v3;
    *(_WORD *)&v33[8] = 1024;
    int v34 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "Aggregating records start %f, count ~%d",  buf,  0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101834F08);
    }
    uint64_t v16 = qword_101934A78;
    double v17 = sub_101171D38();
    int v18 = *(_DWORD *)(*(void *)(a1 + 24) + 132LL);
    int v29 = 134218240;
    *(double *)unint64_t v30 = v17;
    *(_WORD *)&v30[8] = 1024;
    int v31 = v18;
    uint64_t v19 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v16,  2LL,  "Aggregating records start %f, count ~%d",  COERCE_DOUBLE(&v29),  18);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "long CLActivityAggregator<CLElevationGradeEntry, CLActivityDB::ClassBDataProtectionPolicy>::aggregateRecords() [T = CLElevationGradeEntry, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v19);
  }

  uint64_t v5 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 24) + 32LL))(*(void *)(a1 + 24), a1);
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101834F08);
  }
  uint64_t v6 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    double v7 = sub_101171D38();
    int v8 = *(_DWORD *)(*(void *)(a1 + 24) + 132LL);
    *(_DWORD *)uint64_t buf = 134218240;
    *(double *)uint64_t v33 = v7;
    *(_WORD *)&v33[8] = 1024;
    int v34 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "Aggregating records stop %f, count ~%d",  buf,  0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101834F08);
    }
    uint64_t v20 = qword_101934A78;
    double v21 = sub_101171D38();
    int v22 = *(_DWORD *)(*(void *)(a1 + 24) + 132LL);
    int v29 = 134218240;
    *(double *)unint64_t v30 = v21;
    *(_WORD *)&v30[8] = 1024;
    int v31 = v22;
    unint64_t v23 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v20,  2LL,  "Aggregating records stop %f, count ~%d",  COERCE_DOUBLE(&v29),  18);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "long CLActivityAggregator<CLElevationGradeEntry, CLActivityDB::ClassBDataProtectionPolicy>::aggregateRecords() [T = CLElevationGradeEntry, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v23);
  }

  uint64_t v9 = *(void *)(a1 + 24);
  double v10 = (double)*(int *)(v9 + 132);
  if ((double)(int)sub_100394B2C(v9, (double **)a1) * 1.2 < v10)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101834F08);
    }
    unint64_t v11 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v12 = *(void *)(a1 + 24);
      int v13 = *(_DWORD *)(v12 + 132);
      int v14 = sub_100394B2C(v12, (double **)a1);
      *(_DWORD *)uint64_t buf = 67109376;
      *(_DWORD *)uint64_t v33 = v13;
      *(_WORD *)&v33[4] = 1024;
      *(_DWORD *)&v33[6] = v14;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "#Warning Number of records after aggregation is %d and it greatly exceeds the number of records estimated to be needed %d",  buf,  0xEu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101834F08);
      }
      uint64_t v24 = qword_101934A78;
      uint64_t v25 = *(void *)(a1 + 24);
      int v26 = *(_DWORD *)(v25 + 132);
      int v27 = sub_100394B2C(v25, (double **)a1);
      int v29 = 67109376;
      *(_DWORD *)unint64_t v30 = v26;
      *(_WORD *)&v30[4] = 1024;
      *(_DWORD *)&v30[6] = v27;
      __int128 v28 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v24,  0LL,  "#Warning Number of records after aggregation is %d and it greatly exceeds the number of records es timated to be needed %d",  &v29,  14);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "long CLActivityAggregator<CLElevationGradeEntry, CLActivityDB::ClassBDataProtectionPolicy>::aggregateRecords() [ T = CLElevationGradeEntry, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v28);
    }
  }

  return v5;
}

id sub_1003928C0(uint64_t a1, uint64_t a2)
{
  id v2 = *(void **)(a1 + 32);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_100392940;
  v4[3] = &unk_101834DE8;
  __int128 v5 = *(_OWORD *)(a1 + 40);
  return sub_10039FB50(518400.0, a2, 34, v2, 300LL, 0LL, 1LL, 1LL, 0, (uint64_t)v4);
}

id sub_100392940(uint64_t a1, char a2, uint64_t a3)
{
  id v6 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "universe"), "silo");
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  v8[2] = sub_1003929C4;
  v8[3] = &unk_101834DC0;
  char v11 = a2;
  __int128 v9 = *(_OWORD *)(a1 + 32);
  uint64_t v10 = a3;
  return [v6 async:v8];
}

id sub_1003929C4(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 56);
  double v3 = *(_DWORD **)(a1 + 32);
  if (v2)
  {
    [v3 saveCurrentSyncProgress];
    return [*(id *)(a1 + 32) continueSync:*(void *)(a1 + 40)];
  }

  else
  {
    ++v3[42];
    if (qword_1019347B0 != -1) {
      dispatch_once(&qword_1019347B0, &stru_101834E58);
    }
    __int128 v5 = (os_log_s *)qword_1019347B8;
    if (os_log_type_enabled((os_log_t)qword_1019347B8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v6 = *(void *)(a1 + 48);
      *(_DWORD *)uint64_t buf = 138412290;
      uint64_t v12 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_ERROR,  "[WatchService] Transfer to phone failed with error, %@",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019347B0 != -1) {
        dispatch_once(&qword_1019347B0, &stru_101834E58);
      }
      uint64_t v7 = *(void *)(a1 + 48);
      int v9 = 138412290;
      uint64_t v10 = v7;
      int v8 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019347B8,  16LL,  "[WatchService] Transfer to phone failed with error, %@",  &v9,  12);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "-[CMHealthColdStorageWatchService sendCompanionData:activity:]_block_invoke",  "%s\n",  v8);
    }

    return [*(id *)(a1 + 32) setActivityAsDone:*(void *)(a1 + 40)];
  }

void sub_100393440(uint64_t a1, _xpc_activity_s *a2)
{
  if (qword_1019347B0 != -1) {
    dispatch_once(&qword_1019347B0, &stru_101834E58);
  }
  int v4 = (os_log_s *)qword_1019347B8;
  if (os_log_type_enabled((os_log_t)qword_1019347B8, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)uint64_t buf = 134349056;
    xpc_activity_state_t state = xpc_activity_get_state(a2);
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_INFO,  "[WatchService] Sync timer fired (%{public}ld)",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019347B0 != -1) {
      dispatch_once(&qword_1019347B0, &stru_101834E58);
    }
    uint64_t v7 = qword_1019347B8;
    int v13 = 134349056;
    xpc_activity_state_t v14 = xpc_activity_get_state(a2);
    int v8 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v7,  1LL,  "[WatchService] Sync timer fired (%{public}ld)",  &v13,  12);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[CMHealthColdStorageWatchService setupSyncActivity]_block_invoke",  "%s\n",  v8);
  }

  *(void *)(*(void *)(a1 + 32) + 16sub_100272D04(v1, 0LL) = os_transaction_create("CMHealthColdStorageWatchSyncActivity");
  [*(id *)(a1 + 40) onSyncActivity:a2];
  if (xpc_activity_get_state(a2) == 2 && !xpc_activity_set_state(a2, 4LL))
  {
    if (qword_1019347B0 != -1) {
      dispatch_once(&qword_1019347B0, &stru_101834E58);
    }
    __int128 v5 = (os_log_s *)qword_1019347B8;
    if (os_log_type_enabled((os_log_t)qword_1019347B8, OS_LOG_TYPE_FAULT))
    {
      xpc_activity_state_t v6 = xpc_activity_get_state(a2);
      *(_DWORD *)uint64_t buf = 134349056;
      xpc_activity_state_t state = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_FAULT,  "[WatchService] Failed to mark activity as Continue. Current state is %{public}ld",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019347B0 != -1) {
        dispatch_once(&qword_1019347B0, &stru_101834E58);
      }
      uint64_t v9 = qword_1019347B8;
      xpc_activity_state_t v10 = xpc_activity_get_state(a2);
      int v13 = 134349056;
      xpc_activity_state_t v14 = v10;
      LODWORD(v12) = 12;
      char v11 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v9,  17LL,  "[WatchService] Failed to mark activity as Continue. Current state is %{public}ld",  &v13,  v12);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "-[CMHealthColdStorageWatchService setupSyncActivity]_block_invoke",  "%s\n",  v11);
    }
  }

id sub_100393C28(uint64_t a1)
{
  *(_DWORD *)(*(void *)(a1 + 32) + 144LL) = 0;
  *(_DWORD *)(*(void *)(a1 + 32) + 148LL) = 0;
  return [*(id *)(a1 + 32) continueSync:*(void *)(a1 + 40)];
}

uint64_t sub_100394748(uint64_t a1)
{
  return *(void *)(a1 + 32);
}

void sub_1003948F8(id a1)
{
  qword_1019347B8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "HealthColdStorage");
}

void sub_100394924(id a1)
{
  qword_1019344D8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Calorimetry");
}

void sub_100394950(id a1)
{
  qword_1019344B8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Motion");
}

void sub_10039497C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_10000AE14(a2 + 32);
    sub_10000AE14(a2 + 16);
    double v3 = (void *)sub_10000AE14(a2);
    operator delete(v3);
  }

void sub_1003949B8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  *a1 = a2;
  if (v3)
  {
    int v4 = (void *)sub_10000AE14(v3);
    operator delete(v4);
  }

void sub_1003949E4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  *a1 = a2;
  if (v3)
  {
    int v4 = (void *)sub_100AFE488();
    operator delete(v4);
  }

void *sub_100394A10@<X0>(unsigned __int8 *a1@<X1>, void *a2@<X8>)
{
  int v4 = operator new(0x180uLL);
  __n128 result = sub_100394A68(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_100394A54(_Unwind_Exception *a1)
{
}

void *sub_100394A68(void *a1, unsigned __int8 *a2)
{
  a1[1] = 0LL;
  a1[2] = 0LL;
  *a1 = off_101834EC8;
  sub_100AFE484(a1 + 3, *a2);
  return a1;
}

void sub_100394AA4(_Unwind_Exception *a1)
{
}

void sub_100394AB8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_101834EC8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100394ACC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_101834EC8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_100394AF0(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(void *)(a1 + 24) + 16LL))(a1 + 24);
}

void sub_100394B00(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

uint64_t sub_100394B2C(uint64_t a1, double **a2)
{
  uint64_t v3 = *a2;
  int v2 = a2[1];
  double v4 = (*a2)[1];
  double v5 = *(float *)(a1 + 136);
  if (v4 <= v5) {
    double v4 = *(float *)(a1 + 136);
  }
  xpc_activity_state_t v6 = v3 + 3;
  if (v3 + 3 == v2)
  {
    uint64_t v7 = 0LL;
  }

  else
  {
    LODWORD(v7) = 0;
    double v8 = *v3;
    do
    {
      double v9 = *v6;
      double v10 = v6[1];
      v6 += 3;
      uint64_t v7 = (v7 + (int)((v9 - v8) / v4));
      if (v10 <= v5) {
        double v4 = *(float *)(a1 + 136);
      }
      else {
        double v4 = v10;
      }
      double v8 = v9;
    }

    while (v6 != v2);
  }

  if (v4 != 1.79769313e308)
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101834E98);
    }
    char v11 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "#Warning No expiration rule was added so the number of records will be unbounded.",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101834E98);
      }
      v14[0] = 0;
      int v13 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  0LL,  "#Warning No expiration rule was added so the number of records will be unbounded.",  v14,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "int CLActivityRecorderDb<CLElevationGradeEntry, CLActivityDB::ClassBDataProtectionPolicy>::estimateRecordsNeeded (const CLAggregationRules &) [T = CLElevationGradeEntry, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v13);
    }
  }

  return v7;
}

void sub_100394DCC(id a1)
{
  qword_101995560 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLGyroCalibrationDatabaseSilo");
}

void sub_100394FAC(id a1)
{
  if (sub_1006FE6A0()) {
    byte_101995570 = 1;
  }
}

void *sub_1003952E0(uint64_t a1, void *a2)
{
  __n128 result = (void *)sub_10039530C(a1, "CLGyroCalibrationDatabase", a2);
  *__n128 result = off_101834F78;
  return result;
}

uint64_t sub_10039530C(uint64_t a1, char *a2, void *a3)
{
  *(void *)a1 = off_101835180;
  sub_1010DDBC0((void *)(a1 + 8), a2);
  *(void *)(a1 + 32) = a3;
  *(void *)(a1 + 40) = [a3 silo];
  *(void *)(a1 + 48) = 0LL;
  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + 56) = a1 + 64;
  *(void *)(a1 + 88) = 0LL;
  *(void *)(a1 + 96) = 0LL;
  *(void *)(a1 + 72) = 0LL;
  *(void *)(a1 + 80) = a1 + 88;
  *(_DWORD *)(a1 + 104) = 0;
  *(_BYTE *)(a1 + 108) = 0;
  return a1;
}

void sub_10039538C(_Unwind_Exception *exception_object)
{
}

uint64_t sub_1003953AC(uint64_t a1)
{
  *(void *)a1 = off_101835180;
  [*(id *)(a1 + 48) invalidate];

  sub_100231CA4(a1 + 80, *(void **)(a1 + 88));
  sub_100231CF0(a1 + 56, *(void **)(a1 + 64));
  return a1;
}

void *sub_100395428@<X0>(_DWORD *a1@<X1>, void *a2@<X8>)
{
  return sub_1010DDBC0(a2, __str);
}

uint64_t sub_1003954A0(uint64_t result)
{
  *(_BYTE *)(result + 108) = 1;
  return result;
}

uint64_t sub_1003954B0()
{
  if (qword_101934590 != -1) {
    dispatch_once(&qword_101934590, &stru_101835150);
  }
  unsigned __int8 v0 = (os_log_s *)off_101934598;
  if (os_log_type_enabled((os_log_t)off_101934598, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_INFO, "Warning: Not implemented.", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934590 != -1) {
      dispatch_once(&qword_101934590, &stru_101835150);
    }
    v3[0] = 0;
    int v2 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  off_101934598,  1LL,  "Warning: Not implemented.",  v3,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLGyroCalibrationDatabase::getGyroStats(CLMotionTypeRotationRate &, CLMotionTypeRotationRate &, CLMot ionTypeRotationRate &, BOOL)",  "%s\n",  v2);
  }

  return 0LL;
}

uint64_t sub_100395638()
{
  if (qword_101934590 != -1) {
    dispatch_once(&qword_101934590, &stru_101835150);
  }
  unsigned __int8 v0 = (os_log_s *)off_101934598;
  if (os_log_type_enabled((os_log_t)off_101934598, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_INFO, "Warning: Not implemented.", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934590 != -1) {
      dispatch_once(&qword_101934590, &stru_101835150);
    }
    v3[0] = 0;
    int v2 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  off_101934598,  1LL,  "Warning: Not implemented.",  v3,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual int CLGyroCalibrationDatabase::getMaxDynamicTemperature()",  "%s\n",  v2);
  }

  return 0x80000000LL;
}

uint64_t sub_1003957C0(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100395834;
  block[3] = &unk_10181A288;
  block[4] = a1;
  if (qword_101995588 != -1) {
    dispatch_once(&qword_101995588, block);
  }
  return byte_101995580;
}

id sub_100395834(uint64_t a1)
{
  id result = objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "vendor"),  "isServiceEnabled:",  @"CLGyroCalibrationDatabase");
  byte_101995580 = (char)result;
  return result;
}

void sub_100395860(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  double v8 = operator new(0x30uLL);
  sub_1010DDBC0(__p, "CLGyroCalibrationDatabase");
  sub_100395928((uint64_t)v8, 0LL, (uint64_t *)__p, a3, a1, a2);
  *double v8 = off_1018350B8;
  *a4 = v8;
  if (v10 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1003958FC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_100395928(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4, uint64_t a5, uint64_t a6)
{
  *(void *)a1 = off_101835260;
  *(void *)(a1 + 8) = -[CLNotifierClientAdapter initWithClient:]( objc_alloc(&OBJC_CLASS___CLNotifierClientAdapter),  "initWithClient:",  a1);
  *(void *)(a1 + 24) = a5;
  *(void *)(a1 + 32) = a6;
  else {
    uint64_t v12 = (uint64_t *)*a3;
  }
  id v13 = objc_msgSend( objc_msgSend(a4, "vendor"),  "proxyForService:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v12));
  *(void *)(a1 + 16) = v13;
  id v14 = v13;
  if (a2) {
    [*(id *)(a1 + 16) setDelegateEntityName:a2];
  }
  objc_msgSend(*(id *)(a1 + 16), "registerDelegate:inSilo:", *(void *)(a1 + 8), objc_msgSend(a4, "silo"));
  return a1;
}

void sub_100395A00(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100395AB8(a1);
  operator delete(v1);
}

id sub_100395A14(uint64_t a1, int a2, void *a3)
{
  id result = sub_1011D3F5C(a3);
  if (result)
  {
    int v6 = a2;
    return (id)(*(uint64_t (**)(void, int *, id, void))(a1 + 24))(0LL, &v6, result, *(void *)(a1 + 32));
  }

  return result;
}

void sub_100395A60(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_100395A8C(id a1)
{
  off_101934598 = os_log_create("com.apple.locationd.Motion", "Gyro");
}

uint64_t sub_100395AB8(uint64_t a1)
{
  *(void *)a1 = off_101835260;
  int v2 = (id *)(a1 + 8);
  [*(id *)(a1 + 16) forget:*(void *)(a1 + 8)];

  [*v2 invalidate];
  *int v2 = 0LL;
  *(void *)(a1 + 16) = 0LL;
  return a1;
}

double sub_100395B20(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v2 = a2[1];
  *(void *)a1 = off_1018352A0;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v2;
  if (v2)
  {
    double v4 = (unint64_t *)(v2 + 8);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }

  *(void *)(a1 + 112) = 0LL;
  *(void *)(a1 + 120) = 0LL;
  double result = 0.0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(void *)(a1 + 88) = 0LL;
  *(void *)(a1 + 128) = 26LL;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 170) = 0u;
  return result;
}

uint64_t sub_100395B7C(uint64_t a1)
{
  *(void *)a1 = off_1018352A0;
  sub_10000AE14(a1 + 144);
  double v4 = (void **)(a1 + 72);
  sub_100396FC0(&v4);
  double v4 = (void **)(a1 + 48);
  sub_100396FC0(&v4);
  uint64_t v2 = *(void **)(a1 + 24);
  if (v2)
  {
    *(void *)(a1 + 32) = v2;
    operator delete(v2);
  }

  sub_10000AE14(a1 + 8);
  return a1;
}

void sub_100395BF0(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100395B7C(a1);
  operator delete(v1);
}

uint64_t sub_100395C04(uint64_t a1)
{
  return 1LL;
}

uint64_t sub_100395C1C(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 184))
  {
    uint64_t v3 = *(void *)(a1 + 48);
    uint64_t v2 = *(void *)(a1 + 56);
    if (v3 != v2)
    {
      uint64_t v29 = 134218496LL;
      do
      {
        *(_OWORD *)uint64_t buf = xmmword_1012E77E0;
        *(_OWORD *)&uint8_t buf[16] = 0u;
        __int128 v38 = 0u;
        __int128 v39 = 0u;
        __int128 v40 = 0u;
        sub_100397090((uint64_t)buf, &v30);
        if (*((void *)&v39 + 1))
        {
          *(void *)&__int128 v40 = *((void *)&v39 + 1);
          operator delete(*((void **)&v39 + 1));
        }

        double v4 = (std::__shared_weak_count *)v39;
        if ((void)v39)
        {
          unint64_t v5 = (unint64_t *)(v39 + 8);
          do
            unint64_t v6 = __ldaxr(v5);
          while (__stlxr(v6 - 1, v5));
          if (!v6)
          {
            ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
            std::__shared_weak_count::__release_weak(v4);
          }
        }

        *(void *)char v32 = &buf[16];
        sub_10004CC28((void ***)v32);
        double v8 = *(__int128 **)(v3 + 16);
        uint64_t v7 = *(__int128 **)(v3 + 24);
        while (v8 != v7)
        {
          double v9 = *(double **)v8;
          double v10 = **(double **)v8;
          uint64_t v11 = v30;
          double v12 = v9[1];
          sub_1000E8F38((char **)(v11 + 16), v8++);
        }

        if (*(void *)(v30 + 16) == *(void *)(v30 + 24))
        {
          if (qword_1019347A0 != -1) {
            dispatch_once(&qword_1019347A0, &stru_1018352D0);
          }
          uint64_t v15 = (os_log_s *)qword_1019347A8;
          if (os_log_type_enabled((os_log_t)qword_1019347A8, OS_LOG_TYPE_DEBUG))
          {
            *(_WORD *)uint64_t buf = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "CLCyclingFTPCache, amalgamated query range is empty",  buf,  2u);
          }

          if (!sub_1002921D0(115, 2)) {
            goto LABEL_35;
          }
          bzero(buf, 0x65CuLL);
          if (qword_1019347A0 != -1) {
            dispatch_once(&qword_1019347A0, &stru_1018352D0);
          }
          *(_WORD *)char v32 = 0;
          LODWORD(v28) = 2;
          uint64_t v16 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019347A8,  2LL,  "CLCyclingFTPCache, amalgamated query range is empty",  v32,  *(void *)&v28);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCyclingFTPCache::amalgamateQueryRangesForSessions()",  "%s\n",  v16);
        }

        else
        {
          unint64_t v13 = *(void *)(a1 + 80);
          if (v13 >= *(void *)(a1 + 88))
          {
            uint64_t v14 = sub_1003971B8((uint64_t *)(a1 + 72), v30);
          }

          else
          {
            sub_1003972C4(a1 + 88, *(void *)(a1 + 80), v30);
            uint64_t v14 = v13 + 80;
            *(void *)(a1 + 80) = v13 + 80;
          }

          *(void *)(a1 + 80) = v14;
          if (qword_1019347A0 != -1) {
            dispatch_once(&qword_1019347A0, &stru_1018352D0);
          }
          double v17 = (os_log_s *)qword_1019347A8;
          if (os_log_type_enabled((os_log_t)qword_1019347A8, OS_LOG_TYPE_DEBUG))
          {
            double v18 = *(double *)v30;
            uint64_t v19 = *(void *)(v30 + 8);
            uint64_t v20 = (uint64_t)(*(void *)(v30 + 24) - *(void *)(v30 + 16)) >> 4;
            *(_DWORD *)uint64_t buf = v29;
            *(double *)&uint8_t buf[4] = v18;
            *(_WORD *)&_BYTE buf[12] = 2048;
            *(void *)&buf[14] = v19;
            *(_WORD *)&buf[22] = 2048;
            *(void *)&buf[24] = v20;
            _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEBUG,  "CLCyclingFTPCache, amalgamated query range added from, %f, to, %f, number_dependents, %lu",  buf,  0x20u);
          }

          if (!sub_1002921D0(115, 2)) {
            goto LABEL_35;
          }
          bzero(buf, 0x65CuLL);
          if (qword_1019347A0 != -1) {
            dispatch_once(&qword_1019347A0, &stru_1018352D0);
          }
          double v24 = *(double *)v30;
          uint64_t v25 = *(void *)(v30 + 8);
          uint64_t v26 = (uint64_t)(*(void *)(v30 + 24) - *(void *)(v30 + 16)) >> 4;
          *(_DWORD *)char v32 = v29;
          *(double *)&v32[4] = v24;
          __int16 v33 = 2048;
          uint64_t v34 = v25;
          __int16 v35 = 2048;
          uint64_t v36 = v26;
          LODWORD(v28) = 32;
          uint64_t v16 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019347A8,  2LL,  "CLCyclingFTPCache, amalgamated query range added from, %f, to, %f, number_dependents, %lu",  COERCE_DOUBLE(v32),  v28,  v29);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCyclingFTPCache::amalgamateQueryRangesForSessions()",  "%s\n",  v16);
        }

        if (v16 != buf) {
          free(v16);
        }
LABEL_35:
        double v21 = v31;
        if (v31)
        {
          p_shared_owners = (unint64_t *)&v31->__shared_owners_;
          do
            unint64_t v23 = __ldaxr(p_shared_owners);
          while (__stlxr(v23 - 1, p_shared_owners));
          if (!v23)
          {
            ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
            std::__shared_weak_count::__release_weak(v21);
          }
        }

        v3 += 80LL;
      }

      while (v3 != v2);
    }

    *(_BYTE *)(a1 + 184) = 1;
  }

  return 1LL;
}

void sub_1003960CC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

BOOL sub_10039610C(uint64_t a1)
{
  int v1 = *(unsigned __int8 *)(a1 + 184);
  if (*(_BYTE *)(a1 + 184))
  {
    if (!*(_BYTE *)(a1 + 185))
    {
      HIDWORD(v28) = *(unsigned __int8 *)(a1 + 184);
      uint64_t v3 = *(double **)(a1 + 72);
      double v4 = *(double **)(a1 + 80);
      if (v3 != v4)
      {
        uint64_t v29 = 134218496LL;
        do
        {
          uint64_t v5 = *(void *)(a1 + 8);
          double v6 = *v3;
          double v7 = v3[1];
          *(void *)&uint8_t buf[8] = 0LL;
          *(void *)&uint8_t buf[16] = 0LL;
          *(void *)uint64_t buf = &buf[8];
          __int128 v38 = xmmword_1012CB960;
          sub_1003975C4((uint64_t)&v32, (uint64_t *)&v38, 2LL);
          sub_1007035A8(v5, (uint64_t)buf, (uint64_t)&v32, &v30, v6, v7);
          sub_100008390((uint64_t)&v32, *(void **)&v33[4]);
          sub_100008390((uint64_t)buf, *(void **)&buf[8]);
          sub_1000F2F30((void *)v3 + 5, (uint64_t *)&v30);
          double v8 = (uint64_t *)*((void *)v3 + 2);
          double v9 = (uint64_t *)*((void *)v3 + 3);
          while (v8 != v9)
          {
            uint64_t v10 = *v8;
            v8 += 2;
            sub_1000F2F30((void *)(v10 + 40), (uint64_t *)&v30);
          }

          if (qword_1019347A0 != -1) {
            dispatch_once(&qword_1019347A0, &stru_1018352D0);
          }
          uint64_t v11 = (os_log_s *)qword_1019347A8;
          if (os_log_type_enabled((os_log_t)qword_1019347A8, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v13 = *v30;
            uint64_t v12 = v30[1];
            double v14 = sub_100700C8C(v30);
            double v15 = sub_100700CA8(v30);
            *(_DWORD *)uint64_t buf = v29;
            *(void *)&uint8_t buf[4] = 0x2E8BA2E8BA2E8BA3LL * ((v12 - v13) >> 3);
            *(_WORD *)&_BYTE buf[12] = 2048;
            *(double *)&buf[14] = v14;
            *(_WORD *)&buf[22] = 2048;
            double v37 = v15;
            _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "CLCyclingFTPCache, queryRangesForRecords found nmbr_sessions, %zu, from, %f, to, %f",  buf,  0x20u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1019347A0 != -1) {
              dispatch_once(&qword_1019347A0, &stru_1018352D0);
            }
            uint64_t v19 = qword_1019347A8;
            uint64_t v21 = *v30;
            uint64_t v20 = v30[1];
            double v22 = sub_100700C8C(v30);
            double v23 = sub_100700CA8(v30);
            int v32 = v29;
            *(void *)__int16 v33 = 0x2E8BA2E8BA2E8BA3LL * ((v20 - v21) >> 3);
            *(_WORD *)&v33[8] = 2048;
            *(double *)&_BYTE v33[10] = v22;
            __int16 v34 = 2048;
            double v35 = v23;
            LODWORD(v28) = 32;
            double v24 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v19,  2LL,  "CLCyclingFTPCache, queryRangesForRecords found nmbr_sessions, %zu, from, %f, to, %f",  (size_t)&v32,  v28,  *(double *)&v29);
            sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLCyclingFTPCache::queryRangesForRecords()", "%s\n", v24);
            if (v24 != buf) {
              free(v24);
            }
          }

          uint64_t v16 = v31;
          if (v31)
          {
            p_shared_owners = (unint64_t *)&v31->__shared_owners_;
            do
              unint64_t v18 = __ldaxr(p_shared_owners);
            while (__stlxr(v18 - 1, p_shared_owners));
            if (!v18)
            {
              ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
              std::__shared_weak_count::__release_weak(v16);
            }
          }

          v3 += 10;
        }

        while (v3 != v4);
      }

      *(_BYTE *)(a1 + 185) = 1;
      int v1 = HIDWORD(v28);
    }
  }

  else
  {
    if (qword_1019347A0 != -1) {
      dispatch_once(&qword_1019347A0, &stru_1018352D0);
    }
    uint64_t v25 = (os_log_s *)qword_1019347A8;
    if (os_log_type_enabled((os_log_t)qword_1019347A8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEBUG,  "CLCyclingFTPCache, attempting to query cache records before preparing the query",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019347A0 != -1) {
        dispatch_once(&qword_1019347A0, &stru_1018352D0);
      }
      LOWORD(v32) = 0;
      uint64_t v26 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019347A8,  2LL,  "CLCyclingFTPCache, attempting to query cache records before preparing the query",  &v32,  2);
      sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLCyclingFTPCache::queryRangesForRecords()", "%s\n", v26);
      if (v26 != buf) {
        free(v26);
      }
    }
  }

  return v1 != 0;
}

void sub_1003965B0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

uint64_t sub_100396600(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a1 + 144);
  if (v3) {
    v3[1] = *v3;
  }
  uint64_t v5 = *(char **)(a1 + 24);
  double v4 = *(char **)(a1 + 32);
  if (v5 != v4)
  {
    while (*(void *)v5 != a2)
    {
      v5 += 8;
      if (v5 == v4)
      {
        uint64_t v5 = *(char **)(a1 + 32);
        break;
      }
    }
  }

  if (v5 != v4)
  {
    int64_t v6 = v4 - (v5 + 8);
    if (v4 != v5 + 8) {
      memmove(v5, v5 + 8, v4 - (v5 + 8));
    }
    *(void *)(a1 + 32) = &v5[v6];
  }

  *(_WORD *)(a1 + 184) = 0;
  uint64_t v8 = *(void *)(a1 + 48);
  for (uint64_t i = *(void *)(a1 + 56); i != v8; sub_100397044(a1 + 64, i))
    i -= 80LL;
  *(void *)(a1 + 56) = v8;
  uint64_t v10 = *(void *)(a1 + 72);
  for (uint64_t j = *(void *)(a1 + 80); j != v10; sub_100397044(a1 + 88, j))
    j -= 80LL;
  *(void *)(a1 + 80) = v10;
  if (qword_1019347A0 != -1) {
    dispatch_once(&qword_1019347A0, &stru_1018352D0);
  }
  uint64_t v11 = (os_log_s *)qword_1019347A8;
  if (os_log_type_enabled((os_log_t)qword_1019347A8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "CLCyclingFTPCache, release()", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019347A0 != -1) {
      dispatch_once(&qword_1019347A0, &stru_1018352D0);
    }
    v15[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019347A8,  2LL,  "CLCyclingFTPCache, release()",  v15,  2);
    double v14 = (uint8_t *)v13;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCyclingFTPCache::release(const CLCyclingFTPCacheIterator *)",  "%s\n",  v13);
    if (v14 != buf) {
      free(v14);
    }
  }

  return 1LL;
}

uint64_t sub_100396854(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 56);
  if (v2)
  {
    *(void *)(a1 + 64) = v2;
    operator delete(v2);
  }

  sub_10000AE14(a1 + 40);
  double v4 = (void **)(a1 + 16);
  sub_10004CC28(&v4);
  return a1;
}

uint64_t sub_1003968A4(uint64_t a1, uint64_t a2)
{
  double v4 = (unsigned __int8 *)(a1 + 96);
  if (a1 + 96 != a2
    || *(double *)(a1 + 120) != *(double *)(a2 + 24)
    || *(double *)(a1 + 112) != *(double *)(a2 + 16)
    || *(void *)(a1 + 128) != *(void *)(a2 + 32))
  {
    sub_100703690(*(void *)(a1 + 8), a2);
    uuid_copy(v4, (const unsigned __int8 *)a2);
    double v7 = *(void **)(a1 + 144);
    int64_t v6 = (void *)(a1 + 144);
    uint64_t v5 = v7;
    *((_OWORD *)v6 - 2) = *(_OWORD *)(a2 + 16);
    *(v6 - 2) = *(void *)(a2 + 32);
    if (v7) {
      v5[1] = *v5;
    }
    sub_1000F2F30(v6, (uint64_t *)(a2 + 48));
  }

  return 1LL;
}

void sub_100396954(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  *(double *)&__int128 v51 = a4;
  *((double *)&v51 + 1) = a5;
  __int128 v52 = 0u;
  __int128 v53 = 0u;
  *(_OWORD *)std::string __p = 0u;
  __int128 v55 = 0u;
  sub_100397090((uint64_t)&v51, &v56);
  if (__p[1])
  {
    *(void **)&__int128 v55 = __p[1];
    operator delete(__p[1]);
  }

  uint64_t v8 = (std::__shared_weak_count *)__p[0];
  if (__p[0])
  {
    double v9 = (unint64_t *)((char *)__p[0] + 8);
    do
      unint64_t v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }

  uint64_t v57 = (void **)&v52;
  sub_10004CC28(&v57);
  uint64_t v11 = (void *)v56;
  uint64_t v12 = *(void **)(v56 + 64);
  unint64_t v13 = *(void *)(v56 + 72);
  if ((unint64_t)v12 >= v13)
  {
    double v15 = (void **)(v56 + 56);
    uint64_t v16 = *(void *)(v56 + 56);
    uint64_t v17 = ((uint64_t)v12 - v16) >> 3;
    uint64_t v18 = v13 - v16;
    uint64_t v19 = v18 >> 2;
    else {
      unint64_t v20 = v19;
    }
    if (v20) {
      uint64_t v21 = (char *)sub_1000071BC(v56 + 72, v20);
    }
    else {
      uint64_t v21 = 0LL;
    }
    double v22 = &v21[8 * v17];
    double v23 = &v21[8 * v20];
    *(void *)double v22 = a2;
    double v14 = v22 + 8;
    uint64_t v25 = (char *)v11[7];
    double v24 = (char *)v11[8];
    if (v24 != v25)
    {
      do
      {
        uint64_t v26 = *((void *)v24 - 1);
        v24 -= 8;
        *((void *)v22 - 1) = v26;
        v22 -= 8;
      }

      while (v24 != v25);
      double v24 = (char *)*v15;
    }

    v11[7] = v22;
    _OWORD v11[8] = v14;
    v11[9] = v23;
    if (v24) {
      operator delete(v24);
    }
  }

  else
  {
    void *v12 = a2;
    double v14 = v12 + 1;
  }

  _OWORD v11[8] = v14;
  uint64_t v27 = a1[6];
  if (a1[7] == v27)
  {
    *(_OWORD *)std::string __p = 0u;
    __int128 v55 = 0u;
    __int128 v52 = 0u;
    __int128 v53 = 0u;
    __int128 v51 = 0u;
    sub_100396CFC((char **)&v52, &v56);
    unint64_t v28 = a1[7];
    if (v28 >= a1[8])
    {
      uint64_t v29 = sub_1003971B8(a1 + 6, (uint64_t)&v51);
    }

    else
    {
      sub_1003972C4((uint64_t)(a1 + 8), a1[7], (uint64_t)&v51);
      uint64_t v29 = v28 + 80;
      a1[7] = v28 + 80;
    }

    a1[7] = v29;
    if (__p[1])
    {
      *(void **)&__int128 v55 = __p[1];
      operator delete(__p[1]);
    }

    uint64_t v30 = (std::__shared_weak_count *)__p[0];
    if (__p[0])
    {
      int v31 = (unint64_t *)((char *)__p[0] + 8);
      do
        unint64_t v32 = __ldaxr(v31);
      while (__stlxr(v32 - 1, v31));
      if (!v32)
      {
        ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
        std::__shared_weak_count::__release_weak(v30);
      }
    }

    uint64_t v57 = (void **)&v52;
    sub_10004CC28(&v57);
  }

  else
  {
    sub_100396CFC((char **)(v27 + 16), &v56);
  }

  *(void *)&__int128 v51 = a1;
  sub_10039786C((uint64_t *)&v56, (uint64_t *)&v51, a3);
  unint64_t v33 = a1[5];
  uint64_t v34 = *a3;
  double v35 = (void *)a1[4];
  if ((unint64_t)v35 >= v33)
  {
    uint64_t v37 = a1[3];
    uint64_t v38 = ((uint64_t)v35 - v37) >> 3;
    uint64_t v39 = v33 - v37;
    uint64_t v40 = v39 >> 2;
    else {
      unint64_t v41 = v40;
    }
    if (v41) {
      uint64_t v42 = (char *)sub_1000071BC((uint64_t)(a1 + 5), v41);
    }
    else {
      uint64_t v42 = 0LL;
    }
    Class v43 = &v42[8 * v38];
    id v44 = &v42[8 * v41];
    *(void *)Class v43 = v34;
    uint64_t v36 = v43 + 8;
    id v46 = (char *)a1[3];
    id v45 = (char *)a1[4];
    if (v45 != v46)
    {
      do
      {
        uint64_t v47 = *((void *)v45 - 1);
        v45 -= 8;
        *((void *)v43 - 1) = v47;
        v43 -= 8;
      }

      while (v45 != v46);
      id v45 = (char *)a1[3];
    }

    a1[3] = v43;
    a1[4] = v36;
    a1[5] = v44;
    if (v45) {
      operator delete(v45);
    }
  }

  else
  {
    void *v35 = v34;
    uint64_t v36 = v35 + 1;
  }

  a1[4] = v36;
  uint64_t v48 = (std::__shared_weak_count *)*((void *)&v56 + 1);
  if (*((void *)&v56 + 1))
  {
    char v49 = (unint64_t *)(*((void *)&v56 + 1) + 8LL);
    do
      unint64_t v50 = __ldaxr(v49);
    while (__stlxr(v50 - 1, v49));
    if (!v50)
    {
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
    }
  }

void sub_100396CA8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v9 + 56) = v10;
  sub_100396854((uint64_t)&a9);
  sub_10000AE14(v11 - 72);
  _Unwind_Resume(a1);
}

char *sub_100396CFC(char **a1, __int128 *a2)
{
  unint64_t v6 = (unint64_t)a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  unint64_t v5 = v6;
  double v7 = *(char **)(v4 - 8);
  if ((unint64_t)v7 >= v6)
  {
    uint64_t v12 = (v7 - *a1) >> 4;
    unint64_t v13 = v12 + 1;
    uint64_t v14 = v5 - (void)*a1;
    if (v14 >> 3 > v13) {
      unint64_t v13 = v14 >> 3;
    }
    else {
      unint64_t v15 = v13;
    }
    uint64_t v32 = v4;
    uint64_t v16 = (char *)sub_100037038(v4, v15);
    uint64_t v18 = &v16[16 * v12];
    __int128 v19 = *a2;
    *(_OWORD *)uint64_t v18 = *a2;
    if (*((void *)&v19 + 1))
    {
      unint64_t v20 = (unint64_t *)(*((void *)&v19 + 1) + 8LL);
      do
        unint64_t v21 = __ldxr(v20);
      while (__stxr(v21 + 1, v20));
    }

    double v23 = *a1;
    double v22 = a1[1];
    if (v22 == *a1)
    {
      int64x2_t v26 = vdupq_n_s64((unint64_t)v22);
      double v24 = &v16[16 * v12];
    }

    else
    {
      double v24 = &v16[16 * v12];
      do
      {
        __int128 v25 = *((_OWORD *)v22 - 1);
        v22 -= 16;
        *((_OWORD *)v24 - 1) = v25;
        v24 -= 16;
        *(void *)double v22 = 0LL;
        *((void *)v22 + 1) = 0LL;
      }

      while (v22 != v23);
      int64x2_t v26 = *(int64x2_t *)a1;
    }

    uint64_t v11 = v18 + 16;
    *a1 = v24;
    a1[1] = v18 + 16;
    int64x2_t v30 = v26;
    uint64_t v27 = a1[2];
    a1[2] = &v16[16 * v17];
    int v31 = v27;
    uint64_t v29 = v26.i64[0];
    sub_1000EC3DC((uint64_t)&v29);
  }

  else
  {
    *(void *)double v7 = *(void *)a2;
    uint64_t v8 = *((void *)a2 + 1);
    *((void *)v7 + 1) = v8;
    if (v8)
    {
      uint64_t v9 = (unint64_t *)(v8 + 8);
      do
        unint64_t v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }

    uint64_t v11 = v7 + 16;
  }

  a1[1] = v11;
  return v11 - 16;
}

uint64_t sub_100396E40(uint64_t a1)
{
  uint64_t v3 = *(void **)(a1 + 72);
  uint64_t v2 = *(void **)(a1 + 80);
  unint64_t v20 = v2;
  int v4 = 1;
  while (v3 != v2)
  {
    unint64_t v5 = (uint64_t *)v3[5];
    uint64_t v6 = *v5;
    uint64_t v7 = v5[1];
    while (v6 != v7)
    {
      uint64_t v8 = *(void **)(v6 + 48);
      if (v8 && *v8 == v8[1]) {
        sub_1003968A4(a1, v6);
      }
      uint64_t v9 = (uint64_t *)v3[2];
      unint64_t v10 = (uint64_t *)v3[3];
      while (v9 != v10)
      {
        uint64_t v11 = *v9;
        uint64_t v12 = (std::__shared_weak_count *)v9[1];
        if (v12)
        {
          p_shared_owners = (unint64_t *)&v12->__shared_owners_;
          do
            unint64_t v14 = __ldxr(p_shared_owners);
          while (__stxr(v14 + 1, p_shared_owners));
        }

        uint64_t v16 = *(void **)(v11 + 56);
        unint64_t v15 = *(void **)(v11 + 64);
        while (v16 != v15)
        {
          v4 &= (*(uint64_t (**)(void, uint64_t))(*(void *)*v16 + 64LL))(*v16, v6);
          ++v16;
        }

        if (v12)
        {
          uint64_t v17 = (unint64_t *)&v12->__shared_owners_;
          do
            unint64_t v18 = __ldaxr(v17);
          while (__stlxr(v18 - 1, v17));
          if (!v18)
          {
            ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
            std::__shared_weak_count::__release_weak(v12);
          }
        }

        v9 += 2;
      }

      v6 += 88LL;
    }

    v3 += 10;
    uint64_t v2 = v20;
  }

  return v4 & 1;
}

void sub_100396F7C(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_101236AC4(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_100396F94(id a1)
{
  qword_1019347A8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "CyclingPower");
}

void sub_100396FC0(void ***a1)
{
  int v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    unint64_t v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 80LL;
        sub_100397044((uint64_t)(v1 + 2), v4);
      }

      while ((void *)v4 != v2);
      unint64_t v5 = **a1;
    }

    v1[1] = v2;
    operator delete(v5);
  }

void sub_100397044(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a2 + 56);
  if (v3)
  {
    *(void *)(a2 + 64) = v3;
    operator delete(v3);
  }

  sub_10000AE14(a2 + 40);
  uint64_t v4 = (void **)(a2 + 16);
  sub_10004CC28(&v4);
}

void sub_100397090(uint64_t a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = (char *)operator new(0x68uLL);
  sub_1003970E8((uint64_t)v4, a1);
  *a2 = v4 + 24;
  a2[1] = v4;
}

void sub_1003970D4(_Unwind_Exception *a1)
{
}

double sub_1003970E8(uint64_t a1, uint64_t a2)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(void *)a1 = off_101835300;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)a2;
  *(void *)(a1 + 40) = 0LL;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 56) = *(void *)(a2 + 32);
  *(void *)(a2 + 32) = 0LL;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a2 + 40) = 0u;
  *(void *)(a1 + 96) = 0LL;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 96) = *(void *)(a2 + 72);
  *(void *)(a2 + 72) = 0LL;
  *(_OWORD *)(a2 + 56) = 0u;
  return result;
}

void sub_100397158(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_101835300;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10039716C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_101835300;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_100397190(uint64_t a1)
{
}

uint64_t sub_1003971B8(uint64_t *a1, uint64_t a2)
{
  unint64_t v3 = 0xCCCCCCCCCCCCCCCDLL * ((a1[1] - *a1) >> 4);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0x333333333333333LL) {
    sub_100007008();
  }
  if (0x999999999999999ALL * ((a1[2] - *a1) >> 4) > v4) {
    unint64_t v4 = 0x999999999999999ALL * ((a1[2] - *a1) >> 4);
  }
  if (0xCCCCCCCCCCCCCCCDLL * ((a1[2] - *a1) >> 4) >= 0x199999999999999LL) {
    unint64_t v6 = 0x333333333333333LL;
  }
  else {
    unint64_t v6 = v4;
  }
  unint64_t v14 = a1 + 2;
  if (v6) {
    uint64_t v7 = (char *)sub_10003E20C((uint64_t)(a1 + 2), v6);
  }
  else {
    uint64_t v7 = 0LL;
  }
  unint64_t v10 = v7;
  uint64_t v11 = &v7[80 * v3];
  unint64_t v13 = &v7[80 * v6];
  sub_1003972C4((uint64_t)(a1 + 2), (uint64_t)v11, a2);
  uint64_t v12 = v11 + 80;
  sub_10039737C(a1, &v10);
  uint64_t v8 = a1[1];
  sub_100397550(&v10);
  return v8;
}

void sub_1003972B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void *sub_1003972C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a2 = *(_OWORD *)a3;
  *(void *)(a2 + 16) = 0LL;
  *(void *)(a2 + 24) = 0LL;
  *(void *)(a2 + 32) = 0LL;
  sub_10027C094( (char *)(a2 + 16),  *(void **)(a3 + 16),  *(void **)(a3 + 24),  (uint64_t)(*(void *)(a3 + 24) - *(void *)(a3 + 16)) >> 4);
  uint64_t v5 = *(void *)(a3 + 48);
  *(void *)(a2 + 40) = *(void *)(a3 + 40);
  *(void *)(a2 + 48) = v5;
  if (v5)
  {
    unint64_t v6 = (unint64_t *)(v5 + 8);
    do
      unint64_t v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }

  *(void *)(a2 + 56) = 0LL;
  *(void *)(a2 + 64) = 0LL;
  uint64_t v8 = (void *)(a2 + 56);
  v8[2] = 0LL;
  return sub_100007590( v8,  *(const void **)(a3 + 56),  *(void *)(a3 + 64),  (uint64_t)(*(void *)(a3 + 64) - *(void *)(a3 + 56)) >> 3);
}

void sub_10039735C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_10039737C(uint64_t *a1, void *a2)
{
  uint64_t result = sub_1003973F0((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_1003973F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&__int128 v13 = a6;
  *((void *)&v13 + 1) = a7;
  __int128 v12 = v13;
  v10[0] = a1;
  v10[1] = &v12;
  v10[2] = &v13;
  if (a3 == a5)
  {
    uint64_t v8 = a6;
  }

  else
  {
    do
    {
      *(_OWORD *)(v7 - 80) = *(_OWORD *)(a3 - 80);
      *(void *)(v7 - 56) = 0LL;
      *(void *)(v7 - 48) = 0LL;
      *(void *)(v7 - 64) = 0LL;
      *(_OWORD *)(v7 - 64) = *(_OWORD *)(a3 - 64);
      *(void *)(v7 - 48) = *(void *)(a3 - 48);
      *(void *)(a3 - 64) = 0LL;
      *(void *)(a3 - 56) = 0LL;
      *(void *)(a3 - 48) = 0LL;
      *(_OWORD *)(v7 - 40) = *(_OWORD *)(a3 - 40);
      *(void *)(a3 - 40) = 0LL;
      *(void *)(a3 - 32) = 0LL;
      *(void *)(v7 - 24) = 0LL;
      *(void *)(v7 - 16) = 0LL;
      *(void *)(v7 - 8) = 0LL;
      *(_OWORD *)(v7 - 24) = *(_OWORD *)(a3 - 24);
      *(void *)(v7 - 8) = *(void *)(a3 - 8);
      *(void *)(a3 - 24) = 0LL;
      *(void *)(a3 - 16) = 0LL;
      *(void *)(a3 - 8) = 0LL;
      uint64_t v7 = *((void *)&v13 + 1) - 80LL;
      *((void *)&v13 + 1) -= 80LL;
      a3 -= 80LL;
    }

    while (a3 != a5);
    uint64_t v8 = v13;
  }

  char v11 = 1;
  sub_1003974CC((uint64_t)v10);
  return v8;
}

uint64_t sub_1003974CC(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24)) {
    sub_100397500((uint64_t *)a1);
  }
  return a1;
}

void sub_100397500(uint64_t *a1)
{
  uint64_t v1 = *(void *)(a1[2] + 8);
  uint64_t v2 = *(void *)(a1[1] + 8);
  if (v1 != v2)
  {
    uint64_t v3 = *a1;
    do
    {
      sub_100397044(v3, v1);
      v1 += 80LL;
    }

    while (v1 != v2);
  }

void **sub_100397550(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void sub_100397580(void *a1)
{
  uint64_t v2 = a1[1];
  for (uint64_t i = a1[2]; i != v2; uint64_t i = a1[2])
  {
    uint64_t v4 = a1[4];
    a1[2] = i - 80;
    sub_100397044(v4, i - 80);
  }

uint64_t sub_1003975C4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  *(void *)(a1 + 8) = 0LL;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)(a1 + 16) = 0LL;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 8 * a3;
    do
    {
      sub_100397640((uint64_t **)a1, v4, a2, a2);
      ++a2;
      v6 -= 8LL;
    }

    while (v6);
  }

  return a1;
}

void sub_100397628(_Unwind_Exception *a1)
{
}

uint64_t *sub_100397640(uint64_t **a1, void *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v6 = (uint64_t **)sub_1003976C4(a1, a2, &v11, &v10, a3);
  uint64_t v7 = *v6;
  if (!*v6)
  {
    uint64_t v8 = v6;
    uint64_t v7 = (uint64_t *)operator new(0x28uLL);
    _DWORD v7[4] = *a4;
    sub_1000085FC(a1, v11, v8, v7);
  }

  return v7;
}

void *sub_1003976C4(void *a1, void *a2, void *a3, void *a4, uint64_t *a5)
{
  uint64_t v5 = a1 + 1;
  if (a1 + 1 == a2 || (uint64_t v6 = *a5, v7 = a2[4], *a5 < v7))
  {
    uint64_t v8 = *a2;
    if ((void *)*a1 == a2)
    {
      uint64_t v10 = a2;
LABEL_17:
      if (v8)
      {
        *a3 = v10;
        return v10 + 1;
      }

      else
      {
        *a3 = a2;
        return a2;
      }
    }

    if (v8)
    {
      uint64_t v9 = (void *)*a2;
      do
      {
        uint64_t v10 = v9;
        uint64_t v9 = (void *)v9[1];
      }

      while (v9);
    }

    else
    {
      __int128 v13 = a2;
      do
      {
        uint64_t v10 = (void *)v13[2];
        BOOL v14 = *v10 == (void)v13;
        __int128 v13 = v10;
      }

      while (v14);
    }

    uint64_t v15 = *a5;
    if (v10[4] < *a5) {
      goto LABEL_17;
    }
    uint64_t v16 = (void *)*v5;
    if (*v5)
    {
      do
      {
        while (1)
        {
          uint64_t v17 = v16;
          uint64_t v18 = v16[4];
          if (v15 >= v18) {
            break;
          }
          uint64_t v16 = (void *)*v17;
          uint64_t v5 = v17;
          if (!*v17) {
            goto LABEL_29;
          }
        }

        if (v18 >= v15) {
          break;
        }
        uint64_t v5 = v17 + 1;
        uint64_t v16 = (void *)v17[1];
      }

      while (v16);
    }

    else
    {
      uint64_t v17 = a1 + 1;
    }

void *sub_10039786C@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X2>, void *a3@<X8>)
{
  uint64_t v6 = operator new(0x58uLL);
  uint64_t result = sub_1003978CC(v6, a1, a2);
  *a3 = v6 + 3;
  a3[1] = v6;
  return result;
}

void sub_1003978B8(_Unwind_Exception *a1)
{
}

void *sub_1003978CC(void *a1, uint64_t *a2, uint64_t *a3)
{
  a1[1] = 0LL;
  a1[2] = 0LL;
  *a1 = off_101835350;
  sub_100AE5114((uint64_t)(a1 + 3), a2, *a3);
  return a1;
}

void sub_100397908(_Unwind_Exception *a1)
{
}

void sub_10039791C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_101835350;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100397930(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_101835350;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_100397954(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

id sub_100397AD8(uint64_t a1)
{
  return [*(id *)(a1 + 32) refresh];
}

id sub_100397AE0(uint64_t a1)
{
  return [*(id *)(a1 + 32) refresh];
}

void sub_100397C00( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100397CD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100397D60( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_100397D74(uint64_t a1, uint64_t a2)
{
  int v3 = 11;
  uint64_t result = (void *)sub_100595C90(a1, &v3, qword_101995590, a2);
  *uint64_t result = off_1018353A0;
  return result;
}

void sub_100397DB8(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100C0CB28(a1);
  operator delete(v1);
}

uint64_t sub_100397DCC()
{
  return dword_101937AA8;
}

double sub_100397DD8()
{
  return 0.5;
}

double sub_100397DE0()
{
  return 0.5;
}

uint64_t sub_100397DE8()
{
  return 4096LL;
}

uint64_t sub_100397DF0()
{
  return 4096LL;
}

uint64_t sub_100397DF8(uint64_t a1, FILE *a2)
{
  if (!a2) {
    sub_101236B18(qword_101934A70 == -1);
  }
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101835468);
  }
  uint64_t v4 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "TransitMac, Traversing transit mac tile", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101835468);
    }
    *(_WORD *)__ptr = 0;
    uint64_t v36 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "TransitMac, Traversing transit mac tile",  __ptr,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLTransitMacTile::traverseTileFile(FILE *, const CLTileFile::TraverseDetails &)",  "%s\n",  v36);
  }

  memset(&v48, 0, sizeof(v48));
  do
  {
    size_t v5 = fread(__ptr, 1uLL, 0x400uLL, a2);
    std::string::append(&v48, __ptr, v5);
  }

  while (v5 && !feof(a2) && !ferror(a2));
  if (ferror(a2))
  {
    uint64_t v6 = 0LL;
    goto LABEL_60;
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101835468);
  }
  uint64_t v7 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    std::string::size_type size = v48.__r_.__value_.__s.__size_;
    if ((v48.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      std::string::size_type size = v48.__r_.__value_.__l.__size_;
    }
    *(_DWORD *)uint64_t buf = 134217984;
    *(void *)__int16 v62 = size;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "TransitMac, Transit mac tile std::string::size_type size = %lu",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101835468);
    }
    std::string::size_type v37 = v48.__r_.__value_.__s.__size_;
    if ((v48.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      std::string::size_type v37 = v48.__r_.__value_.__l.__size_;
    }
    *(_DWORD *)char v49 = 134217984;
    *(void *)&v49[4] = v37;
    uint64_t v38 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "TransitMac, Transit mac tile size = %lu",  v49);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLTransitMacTile::traverseTileFile(FILE *, const CLTileFile::TraverseDetails &)",  "%s\n",  v38);
  }

  if ((v48.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t v9 = &v48;
  }
  else {
    uint64_t v9 = (std::string *)v48.__r_.__value_.__r.__words[0];
  }
  if ((v48.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    std::string::size_type v10 = v48.__r_.__value_.__s.__size_;
  }
  else {
    std::string::size_type v10 = v48.__r_.__value_.__l.__size_;
  }
  uint64_t v11 = +[NSData dataWithBytes:length:](&OBJC_CLASS___NSData, "dataWithBytes:length:", v9, v10);
  __int128 v12 = objc_autoreleasePoolPush();
  id v13 = [[PBDataReader alloc] initWithData:v11];
  BOOL v14 = objc_opt_new(&OBJC_CLASS___TRANSITPbTransitMacTile);
  unsigned __int8 v15 = -[TRANSITPbTransitMacTile readFrom:](v14, "readFrom:", v13);
  if (!v14)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101835468);
    }
    __int128 v19 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_FAULT,  "TransitMac, failed to allocate transit mac tile",  buf,  2u);
    }

    if (!sub_1002921D0(115, 0)) {
      goto LABEL_58;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101835468);
    }
    *(_WORD *)char v49 = 0;
    LODWORD(v46) = 2;
    unint64_t v20 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "TransitMac, failed to allocate transit mac tile",  v49,  v46);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLTransitMacTile::traverseTileFile(FILE *, const CLTileFile::TraverseDetails &)",  "%s\n",  v20);
    goto LABEL_84;
  }

  if ((v15 & 1) == 0)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101835468);
    }
    unint64_t v21 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      std::string::size_type v22 = v48.__r_.__value_.__s.__size_;
      if ((v48.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        std::string::size_type v22 = v48.__r_.__value_.__l.__size_;
      }
      *(_DWORD *)uint64_t buf = 134349056;
      *(void *)__int16 v62 = v22;
      _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_FAULT,  "TransitMac, failed to decode transit mac tile protobuf, encrypted=%{public}lu",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 0)) {
      goto LABEL_58;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101835468);
    }
    std::string::size_type v23 = v48.__r_.__value_.__s.__size_;
    if ((v48.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      std::string::size_type v23 = v48.__r_.__value_.__l.__size_;
    }
    *(_DWORD *)char v49 = 134349056;
    *(void *)&v49[4] = v23;
    LODWORD(v46) = 12;
    unint64_t v20 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "TransitMac, failed to decode transit mac tile protobuf, encrypted=%{public}lu",  v49,  v46);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLTransitMacTile::traverseTileFile(FILE *, const CLTileFile::TraverseDetails &)",  "%s\n",  v20);
    goto LABEL_84;
  }

  if (-[TRANSITPbTransitMacTile hasVersion](v14, "hasVersion")
    && -[TRANSITPbTransitMacTile hasGenerationTimeSecs](v14, "hasGenerationTimeSecs")
    && -[TRANSITPbTransitMacTile macsCount](v14, "macsCount"))
  {
    -[TRANSITPbTransitMacTile generationTimeSecs](v14, "generationTimeSecs");
    double v17 = v16;
    if (-[TRANSITPbTransitMacTile hasExpirationAgeSecs](v14, "hasExpirationAgeSecs")) {
      unsigned int v18 = -[TRANSITPbTransitMacTile expirationAgeSecs](v14, "expirationAgeSecs");
    }
    else {
      unsigned int v18 = 31536000;
    }
    unsigned int v26 = -[TRANSITPbTransitMacTile version](v14, "version");
    unsigned int v27 = -[TRANSITPbTransitMacTile tileX](v14, "tileX");
    unsigned int v28 = -[TRANSITPbTransitMacTile tileY](v14, "tileY");
    double v29 = v17 - kCFAbsoluteTimeIntervalSince1970;
    *(_DWORD *)(a1 + 184) = v26;
    *(_DWORD *)(a1 + 52) = v27;
    *(_DWORD *)(a1 + 56) = v28;
    *(void *)(a1 + 64) = -1LL;
    *(double *)(a1 + 176) = v17 - kCFAbsoluteTimeIntervalSince1970;
    *(_DWORD *)(a1 + 200) = v18;
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101835468);
    }
    int64x2_t v30 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      unsigned int v31 = -[TRANSITPbTransitMacTile version](v14, "version");
      unsigned int v32 = -[TRANSITPbTransitMacTile tileX](v14, "tileX");
      unsigned int v33 = -[TRANSITPbTransitMacTile tileY](v14, "tileY");
      double Current = CFAbsoluteTimeGetCurrent();
      unint64_t v35 = -[TRANSITPbTransitMacTile macsCount](v14, "macsCount");
      *(_DWORD *)uint64_t buf = 67110656;
      *(_DWORD *)__int16 v62 = v31;
      *(_WORD *)&v62[4] = 1024;
      *(_DWORD *)&v62[6] = v32;
      __int16 v63 = 1024;
      unsigned int v64 = v33;
      __int16 v65 = 2048;
      double v66 = v29;
      __int16 v67 = 2048;
      double v68 = Current - v29;
      __int16 v69 = 1024;
      unsigned int v70 = v18;
      __int16 v71 = 2048;
      unint64_t v72 = v35;
      _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEBUG,  "TransitMac, ver,%d, x, %d, y, %d, generated, %.01lf, age, %.01f, ageThresh, %d, numOfMacs, %lu",  buf,  0x38u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101835468);
      }
      uint64_t v39 = qword_101934A78;
      unsigned int v40 = -[TRANSITPbTransitMacTile version](v14, "version");
      unsigned int v41 = -[TRANSITPbTransitMacTile tileX](v14, "tileX");
      unsigned int v42 = -[TRANSITPbTransitMacTile tileY](v14, "tileY");
      double v43 = CFAbsoluteTimeGetCurrent();
      unint64_t v44 = -[TRANSITPbTransitMacTile macsCount](v14, "macsCount");
      *(_DWORD *)char v49 = 67110656;
      *(_DWORD *)&v49[4] = v40;
      *(_WORD *)&v49[8] = 1024;
      *(_DWORD *)&v49[10] = v41;
      __int16 v50 = 1024;
      unsigned int v51 = v42;
      __int16 v52 = 2048;
      double v53 = v29;
      __int16 v54 = 2048;
      double v55 = v43 - v29;
      __int16 v56 = 1024;
      unsigned int v57 = v18;
      __int16 v58 = 2048;
      unint64_t v59 = v44;
      id v45 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v39,  2LL,  "TransitMac, ver,%d, x, %d, y, %d, generated, %.01lf, age, %.01f, ageThresh, %d, numOfMacs, %lu",  v49,  56,  v47,  *(double *)&v48.__r_.__value_.__l.__data_,  *(double *)&v48.__r_.__value_.__l.__size_,  LODWORD(v48.__r_.__value_.__r.__words[2]),  *(void *)v49);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLTransitMacTile::traverseTileFile(FILE *, const CLTileFile::TraverseDetails &)",  "%s\n",  v45);
    }

    uint64_t v6 = 1LL;
    goto LABEL_59;
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101835468);
  }
  double v24 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_FAULT,  "TransitMac, failed to get fields in transit mac tile",  buf,  2u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101835468);
    }
    *(_WORD *)char v49 = 0;
    LODWORD(v46) = 2;
    unint64_t v20 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "TransitMac, failed to get fields in transit mac tile",  v49,  v46);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLTransitMacTile::traverseTileFile(FILE *, const CLTileFile::TraverseDetails &)",  "%s\n",  v20);
LABEL_84:
  }

void sub_100398878( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003988D4(uint64_t a1, id **a2, char **a3)
{
  if (!a3) {
    sub_101236C84(qword_101934A70 == -1);
  }
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101835468);
  }
  uint64_t v6 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "TransitMac, Searching transit mac tile", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101835468);
    }
    LOWORD(__ptr) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "TransitMac, Searching transit mac tile",  &__ptr,  2);
    uint64_t v46 = (uint8_t *)v45;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLTransitMacTile::extractTransitMacAddresses(std::vector<uint64_t> *, std::vector<CLTilesManager_Type::TransitMac> *)",  "%s\n",  v45);
    if (v46 != buf) {
      free(v46);
    }
  }

  a3[1] = *a3;
  sub_1008AE67C((int *)(a1 + 48), a1 + 8, &__p);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  uint64_t v8 = fopen((const char *)p_p, "rb");
  if (v8)
  {
    memset(&v63, 0, sizeof(v63));
    do
    {
      size_t v9 = fread(&__ptr, 1uLL, 0x400uLL, v8);
      std::string::append(&v63, (const std::string::value_type *)&__ptr, v9);
    }

    while (v9 && !feof(v8) && !ferror(v8));
    if (ferror(v8))
    {
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101835468);
      }
      std::string::size_type v10 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v11 = &__p;
        if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
          uint64_t v11 = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        *(_DWORD *)uint64_t buf = 136315138;
        __int16 v71 = v11;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "TransitMac, failed to read tile file, %s",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101835468);
        }
        int v47 = &__p;
        if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
          int v47 = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        int v66 = 136315138;
        __int16 v67 = v47;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "TransitMac, failed to read tile file, %s",  (const char *)&v66);
        char v49 = (uint8_t *)v48;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLTransitMacTile::extractTransitMacAddresses(std::vector<uint64_t> *, std::vector<CLTilesManager_Type::TransitMac> *)",  "%s\n",  v48);
        if (v49 != buf) {
          free(v49);
        }
      }

      fclose(v8);
    }

    else
    {
      fclose(v8);
      if ((v63.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        unsigned __int8 v15 = &v63;
      }
      else {
        unsigned __int8 v15 = (std::string *)v63.__r_.__value_.__r.__words[0];
      }
      if ((v63.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        std::string::size_type size = v63.__r_.__value_.__s.__size_;
      }
      else {
        std::string::size_type size = v63.__r_.__value_.__l.__size_;
      }
      id v17 =  objc_msgSend( [PBDataReader alloc],  "initWithData:",  +[NSData dataWithBytes:length:](NSData, "dataWithBytes:length:", v15, size));
      unsigned int v18 = objc_opt_new(&OBJC_CLASS___TRANSITPbTransitMacTile);
      if (-[TRANSITPbTransitMacTile readFrom:](v18, "readFrom:", v17))
      {
        if (-[TRANSITPbTransitMacTile macsCount](v18, "macsCount"))
        {
          __int128 v61 = 0u;
          __int128 v62 = 0u;
          __int128 v59 = 0u;
          __int128 v60 = 0u;
          __int128 v19 = -[TRANSITPbTransitMacTile macs](v18, "macs");
          id v20 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v19,  "countByEnumeratingWithState:objects:count:",  &v59,  v65,  16LL);
          if (v20)
          {
            uint64_t v21 = *(void *)v60;
            do
            {
              for (uint64_t i = 0LL; i != v20; uint64_t i = (char *)i + 1)
              {
                if (*(void *)v60 != v21) {
                  objc_enumerationMutation(v19);
                }
                std::string::size_type v23 = *(void **)(*((void *)&v59 + 1) + 8LL * (void)i);
                double v24 = *a2;
                __int128 v25 = a2[1];
                id v26 = [v23 mac];
                if (v24 != v25)
                {
                  while (*v24 != v26)
                  {
                    if (++v24 == v25)
                    {
                      double v24 = v25;
                      break;
                    }
                  }
                }

                if (v24 != a2[1])
                {
                  id v27 = [v23 mac];
                  id v28 = v27;
                  int64x2_t v30 = a3[1];
                  unint64_t v29 = (unint64_t)a3[2];
                  if ((unint64_t)v30 >= v29)
                  {
                    unsigned int v32 = *a3;
                    uint64_t v33 = (v30 - *a3) >> 3;
                    unint64_t v34 = v33 + 1;
                    uint64_t v35 = v29 - (void)v32;
                    if (v35 >> 2 > v34) {
                      unint64_t v34 = v35 >> 2;
                    }
                    else {
                      unint64_t v36 = v34;
                    }
                    if (v36)
                    {
                      std::string::size_type v37 = (char *)sub_1000071BC((uint64_t)(a3 + 2), v36);
                      unsigned int v32 = *a3;
                      int64x2_t v30 = a3[1];
                    }

                    else
                    {
                      std::string::size_type v37 = 0LL;
                    }

                    uint64_t v38 = &v37[8 * v33];
                    *(void *)uint64_t v38 = v28;
                    unsigned int v31 = v38 + 8;
                    while (v30 != v32)
                    {
                      uint64_t v39 = *((void *)v30 - 1);
                      v30 -= 8;
                      *((void *)v38 - 1) = v39;
                      v38 -= 8;
                    }

                    *a3 = v38;
                    a3[1] = v31;
                    a3[2] = &v37[8 * v36];
                    if (v32) {
                      operator delete(v32);
                    }
                  }

                  else
                  {
                    *(void *)int64x2_t v30 = v27;
                    unsigned int v31 = v30 + 8;
                  }

                  a3[1] = v31;
                }
              }

              id v20 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v19,  "countByEnumeratingWithState:objects:count:",  &v59,  v65,  16LL);
            }

            while (v20);
          }
        }

        else
        {
          if (qword_101934A70 != -1) {
            dispatch_once(&qword_101934A70, &stru_101835468);
          }
          double v43 = (os_log_s *)qword_101934A78;
          if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
          {
            unint64_t v44 = &__p;
            if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
              unint64_t v44 = (std::string *)__p.__r_.__value_.__r.__words[0];
            }
            *(_DWORD *)uint64_t buf = 136315138;
            __int16 v71 = v44;
            _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEBUG, "TransitMac, empty tile??, %s", buf, 0xCu);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934A70 != -1) {
              dispatch_once(&qword_101934A70, &stru_101835468);
            }
            __int16 v56 = &__p;
            if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
              __int16 v56 = (std::string *)__p.__r_.__value_.__r.__words[0];
            }
            int v66 = 136315138;
            __int16 v67 = v56;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "TransitMac, empty tile??, %s",  (const char *)&v66);
            __int16 v58 = (uint8_t *)v57;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLTransitMacTile::extractTransitMacAddresses(std::vector<uint64_t> *, std::vector<CLTilesManager_Type ::TransitMac> *)",  "%s\n",  v57);
            if (v58 != buf) {
              free(v58);
            }
          }
        }

        uint64_t v14 = 1LL;
        goto LABEL_78;
      }

      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101835468);
      }
      unsigned int v40 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        unsigned int v41 = &__p;
        if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
          unsigned int v41 = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        *(_DWORD *)uint64_t buf = 136315138;
        __int16 v71 = v41;
        _os_log_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_DEBUG,  "TransitMac, failed to parse tile file, %s",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101835468);
        }
        double v53 = &__p;
        if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
          double v53 = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        int v66 = 136315138;
        __int16 v67 = v53;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "TransitMac, failed to parse tile file, %s",  (const char *)&v66);
        double v55 = (uint8_t *)v54;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLTransitMacTile::extractTransitMacAddresses(std::vector<uint64_t> *, std::vector<CLTilesManager_Type::TransitMac> *)",  "%s\n",  v54);
        if (v55 != buf) {
          free(v55);
        }
      }
    }

    uint64_t v14 = 0LL;
LABEL_78:
    goto LABEL_80;
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101835468);
  }
  __int128 v12 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    id v13 = &__p;
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      id v13 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)uint64_t buf = 136315138;
    __int16 v71 = v13;
    _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "TransitMac, failed to open tile file, %s",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101835468);
    }
    __int16 v50 = &__p;
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      __int16 v50 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    int __ptr = 136315138;
    __int16 v69 = v50;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "TransitMac, failed to open tile file, %s",  (const char *)&__ptr);
    __int16 v52 = (uint8_t *)v51;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLTransitMacTile::extractTransitMacAddresses(std::vector<uint64_t> *, std::vector<CLTilesManager_Type::TransitMac> *)",  "%s\n",  v51);
    if (v52 != buf) {
      free(v52);
    }
  }

  uint64_t v14 = 0LL;
LABEL_80:
  return v14;
}

void sub_100399314( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20, int a21, __int16 a22, char a23, char a24, void *a25, uint64_t a26, int a27, __int16 a28, char a29, char a30)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  if (a30 < 0) {
    operator delete(a25);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100399388@<X0>(uint64_t a1@<X0>, std::stringbuf::string_type *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 40);
  v29[19] = v4;
  (*(void (**)(uint64_t))(*(void *)v4 + 16LL))(v4);
  __int16 v30 = 256;
  sub_10000CE18((uint64_t)v26);
  size_t v5 = sub_10000CF44(&v27, (uint64_t)"CLTileFile(", 11LL);
  uint64_t v6 = sub_10000CF44(v5, (uint64_t)"tileId=", 7LL);
  sub_1008AD840((unsigned int *)(a1 + 48), &__p);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t size = __p.__r_.__value_.__s.__size_;
  }
  else {
    uint64_t size = __p.__r_.__value_.__l.__size_;
  }
  size_t v9 = sub_10000CF44(v6, (uint64_t)p_p, size);
  std::string::size_type v10 = sub_10000CF44(v9, (uint64_t)", localFilename=", 16LL);
  int v11 = *(char *)(a1 + 31);
  if (v11 >= 0) {
    uint64_t v12 = a1 + 8;
  }
  else {
    uint64_t v12 = *(void *)(a1 + 8);
  }
  if (v11 >= 0) {
    uint64_t v13 = *(unsigned __int8 *)(a1 + 31);
  }
  else {
    uint64_t v13 = *(void *)(a1 + 16);
  }
  uint64_t v14 = sub_10000CF44(v10, v12, v13);
  unsigned __int8 v15 = sub_10000CF44(v14, (uint64_t)", tempFilename=", 15LL);
  uint64_t v18 = *(void *)(a1 + 208);
  uint64_t v17 = a1 + 208;
  uint64_t v16 = v18;
  int v19 = *(char *)(v17 + 23);
  if (v19 >= 0) {
    uint64_t v20 = v17;
  }
  else {
    uint64_t v20 = v16;
  }
  if (v19 >= 0) {
    uint64_t v21 = *(unsigned __int8 *)(v17 + 23);
  }
  else {
    uint64_t v21 = *(void *)(v17 + 8);
  }
  std::string::size_type v22 = sub_10000CF44(v15, v20, v21);
  sub_10000CF44(v22, (uint64_t)")", 1LL);
  std::stringbuf::str(a2, &v28);
  *(void *)((char *)v26
  uint64_t v27 = v23;
  std::streambuf::~streambuf(&v28);
  std::ios::~ios(v29);
  return (*(uint64_t (**)(uint64_t))(*(void *)v4 + 24LL))(v4);
}

void sub_10039954C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
}

uint64_t sub_10039958C()
{
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101835468);
  }
  unsigned __int8 v0 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_DEBUG,  "This instance has no : TEST_testBinarySearch",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101835468);
    }
    v3[0] = 0;
    uint64_t v2 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "This instance has no : TEST_testBinarySearch",  v3,  2);
    sub_10029211C("Generic", 1LL, 0, 2LL, "virtual BOOL CLTileFile::TEST_testBinarySearch(const char *)", "%s\n", v2);
  }

  return 0LL;
}

void sub_100399714(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

BOOL sub_100399740()
{
  return os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT);
}

BOOL sub_100399754()
{
  return os_log_type_enabled(*(os_log_t *)(v0 + 2680), OS_LOG_TYPE_INFO);
}

BOOL sub_100399764()
{
  return os_signpost_enabled(*(os_log_t *)(v0 + 2680));
}

uint64_t sub_100399770()
{
  uint64_t v0 = operator new(0x10uLL);
  uint64_t result = sub_1002E4C3C(v0, "CLTransitMacTile-Mutex", 1LL, 1LL);
  qword_101995590 = (uint64_t)v0;
  return result;
}

void sub_1003997B0(_Unwind_Exception *a1)
{
}

void sub_100399CD8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
}

id sub_100399CF8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _onScanTimer];
}

void sub_100399EA4(uint64_t a1, unsigned int *a2, __int16 *a3, void *a4)
{
  uint64_t v6 = *a2;
  __int16 v7 = *a3;
  sub_1000C6980(v8, (uint64_t)(a3 + 4));
  uint64_t v12 = *((void *)a3 + 13);
  memset(v13, 0, 24);
  sub_1002DE3C8( v13,  *((void *)a3 + 14),  *((void *)a3 + 15),  0x2E8BA2E8BA2E8BA3LL * ((uint64_t)(*((void *)a3 + 15) - *((void *)a3 + 14)) >> 3));
  v13[3] = *((void *)a3 + 17);
  [a4 onWifiServiceNotification:v6 data:&v7];
  uint64_t v14 = (void **)v13;
  sub_100023498(&v14);
  if (v11)
  {
    if (v10 < 0) {
      operator delete(__p);
    }
  }

void sub_100399F68( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, char a25)
{
}

id sub_100399F9C(uint64_t a1, unsigned int *a2, _OWORD *a3, void *a4)
{
  uint64_t v4 = *a2;
  __int128 v5 = a3[7];
  v11[6] = a3[6];
  v11[7] = v5;
  __int128 v6 = a3[9];
  _OWORD v11[8] = a3[8];
  v11[9] = v6;
  __int128 v7 = a3[3];
  v11[2] = a3[2];
  v11[3] = v7;
  __int128 v8 = a3[5];
  v11[4] = a3[4];
  v11[5] = v8;
  __int128 v9 = a3[1];
  v11[0] = *a3;
  v11[1] = v9;
  return [a4 onMotionStateNotification:v4 data:v11];
}

id sub_10039A01C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(void **)(v1 + 24);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_10039A074;
  v4[3] = &unk_10181A288;
  void v4[4] = v1;
  return [v2 async:v4];
}

id sub_10039A074(uint64_t a1)
{
  return _[*(id *)(a1 + 32) handleVehicularStateChanged];
}

void sub_10039A8B8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, void *a33, uint64_t a34, int a35, __int16 a36, char a37, char a38, uint64_t a39, uint64_t a40, char a41)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  sub_1002DDC84((uint64_t)&a41);
  _Unwind_Resume(a1);
}

id sub_10039A914(uint64_t a1)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3321888768LL;
  v4[2] = sub_10039E80C;
  v4[3] = &unk_101835540;
  void v4[4] = *(void *)a1;
  char v5 = *(_BYTE *)(a1 + 8);
  if (*(char *)(a1 + 39) < 0)
  {
    sub_1010DD48C(&v6, *(void **)(a1 + 16), *(void *)(a1 + 24));
  }

  else
  {
    __int128 v6 = *(_OWORD *)(a1 + 16);
    uint64_t v7 = *(void *)(a1 + 32);
  }

  __int128 v9 = *(_OWORD *)(a1 + 56);
  __int128 v10 = *(_OWORD *)(a1 + 72);
  v11[0] = *(_OWORD *)(a1 + 88);
  *(_OWORD *)((char *)v11 + 12) = *(_OWORD *)(a1 + 100);
  __int128 v8 = *(_OWORD *)(a1 + 40);
  if (*(char *)(a1 + 143) < 0)
  {
    sub_1010DD48C(&__p, *(void **)(a1 + 120), *(void *)(a1 + 128));
  }

  else
  {
    __int128 __p = *(_OWORD *)(a1 + 120);
    uint64_t v13 = *(void *)(a1 + 136);
  }

  id v2 = [v4 copy];
  if (SHIBYTE(v13) < 0) {
    operator delete((void *)__p);
  }
  if (SHIBYTE(v7) < 0) {
    operator delete((void *)v6);
  }
  return v2;
}

void sub_10039AA34( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

_BYTE *sub_10039C284(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(*(void *)(a1 + 32) + 36LL) = a2 == 2;
  uint64_t result = *(_BYTE **)(a1 + 32);
  if (result[32]) {
    return [result updateStatusBarLabel];
  }
  return result;
}

id *sub_10039CCEC(id *result, int a2)
{
  if (!a2) {
    return result;
  }
  id v2 = result;
  char v3 = *((_BYTE *)result + 136);
  if ((v3 & 1) != 0)
  {
    uint64_t result = (id *)[result[4] submitFalseDetectionMetricsWithType:1];
    char v3 = *((_BYTE *)v2 + 136);
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_5;
      }
LABEL_10:
      uint64_t result = (id *)[v2[4] submitFalseDetectionMetricsWithType:4];
      char v3 = *((_BYTE *)v2 + 136);
      if ((v3 & 8) == 0)
      {
LABEL_6:
        if ((v3 & 0x10) == 0) {
          return result;
        }
        return (id *)[v2[4] submitFalseDetectionMetricsWithType:16];
      }

      goto LABEL_11;
    }
  }

  else if (((_BYTE)result[17] & 2) == 0)
  {
    goto LABEL_4;
  }

  uint64_t result = (id *)[v2[4] submitFalseDetectionMetricsWithType:2];
  char v3 = *((_BYTE *)v2 + 136);
  if ((v3 & 4) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v3 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_11:
  uint64_t result = (id *)[v2[4] submitFalseDetectionMetricsWithType:8];
  if (((_BYTE)v2[17] & 0x10) != 0) {
    return (id *)[v2[4] submitFalseDetectionMetricsWithType:16];
  }
  return result;
}

id sub_10039D71C(uint64_t a1, void *a2)
{
  v6[0] = +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%f",  *(void *)(*(void *)(a1 + 32) + 144LL),  @"accelLatency");
  v5[1] = @"gpsLatency";
  v6[1] = +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%f",  *(void *)(*(void *)(a1 + 32) + 152LL));
  v5[2] = @"basebandLatency";
  _DWORD v6[2] = +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%f",  *(void *)(*(void *)(a1 + 32) + 160LL));
  v5[3] = @"wifiLatency";
  v6[3] = +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%f",  *(void *)(*(void *)(a1 + 32) + 168LL));
  v5[4] = @"btLatency";
  v6[4] = +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%f",  *(void *)(*(void *)(a1 + 32) + 176LL));
  v5[5] = @"exitFromNoHints";
  v6[5] = +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%f",  *(void *)(*(void *)(a1 + 32) + 192LL));
  v5[6] = @"exitFromLastBTHint";
  v6[6] = +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%f",  *(void *)(*(void *)(a1 + 32) + 200LL));
  v5[7] = @"BTHintFromLastMotionHintDuration";
  v6[7] = +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%f",  *(void *)(*(void *)(a1 + 32) + 208LL));
  _WORD v5[8] = @"motionExitsWithBTCount";
  _WORD v6[8] = +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%d",  *(unsigned int *)(*(void *)(a1 + 32) + 128LL));
  v5[9] = @"sequentialVehicularIndex";
  v6[9] = +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%d",  *(unsigned int *)(*(void *)(a1 + 32) + 136LL));
  _OWORD v5[10] = @"vehicularDuration";
  v6[10] = +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%f",  *(void *)(*(void *)(a1 + 32) + 184LL));
  return objc_msgSend( a2,  "writeData:",  +[NSJSONSerialization dataWithJSONObject:options:error:]( NSJSONSerialization,  "dataWithJSONObject:options:error:",  +[NSDictionary dictionaryWithObjects:forKeys:count:]( NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v6,  v5,  11),  0,  0));
}

void sub_10039E690(id a1)
{
  qword_1019344F8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Activity");
}

uint64_t sub_10039E6BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (qword_101995598 != -1) {
    dispatch_once(&qword_101995598, &stru_101835520);
  }
  off_101937AB0 = (uint64_t (*)())dlsym((void *)qword_1019955A0, "OSAWriteLogForSubmission");
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))off_101937AB0)(a1, a2, a3, a4, a5);
}

void sub_10039E754(id a1)
{
  qword_1019955A0 = (uint64_t)dlopen( "/System/Library/PrivateFrameworks/CrashReporterSupport.framework/CrashReporterSupport",  2);
}

CLCppContainer *sub_10039E77C(_OWORD *a1)
{
  id v2 = operator new(0x10uLL);
  *id v2 = *a1;
  uint64_t v4 = _NSConcreteStackBlock;
  uint64_t v5 = 3221225472LL;
  __int128 v6 = sub_10039E7FC;
  uint64_t v7 = &unk_10181D3D0;
  __int128 v8 = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:");
}

void sub_10039E7FC(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1) {
    operator delete(v1);
  }
}

_BYTE *sub_10039E80C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *(void *)(a1 + 32);
  *(_BYTE *)(a2 + 8) = *(_BYTE *)(a1 + 40);
  uint64_t v4 = (_BYTE *)(a2 + 16);
  if (*(char *)(a1 + 71) < 0)
  {
    sub_1010DD48C(v4, *(void **)(a1 + 48), *(void *)(a1 + 56));
  }

  else
  {
    *(_OWORD *)uint64_t v4 = *(_OWORD *)(a1 + 48);
    *(void *)(a2 + 32) = *(void *)(a1 + 64);
  }

  *(_OWORD *)(a2 + 56) = *(_OWORD *)(a1 + 88);
  *(_OWORD *)(a2 + sub_1011C52D0(v16 - 72) = *(_OWORD *)(a1 + 104);
  *(_OWORD *)(a2 + 88) = *(_OWORD *)(a1 + 120);
  *(_OWORD *)(a2 + 100) = *(_OWORD *)(a1 + 132);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 72);
  uint64_t result = (_BYTE *)(a2 + 120);
  *(_OWORD *)uint64_t result = *(_OWORD *)(a1 + 152);
  *(void *)(a2 + 136) = *(void *)(a1 + 168);
  return result;
}

void sub_10039E8C8(_Unwind_Exception *exception_object)
{
}

_BYTE *sub_10039E8E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  if (*(char *)(a2 + 71) < 0)
  {
    sub_1010DD48C((_BYTE *)(a1 + 48), *(void **)(a2 + 48), *(void *)(a2 + 56));
  }

  else
  {
    __int128 v5 = *(_OWORD *)(a2 + 48);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = v5;
  }

  *(_OWORD *)(a1 + sub_1011C52D0(v16 - 72) = *(_OWORD *)(a2 + 72);
  __int128 v6 = *(_OWORD *)(a2 + 88);
  __int128 v7 = *(_OWORD *)(a2 + 104);
  __int128 v8 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 132) = *(_OWORD *)(a2 + 132);
  *(_OWORD *)(a1 + 120) = v8;
  *(_OWORD *)(a1 + 104) = v7;
  *(_OWORD *)(a1 + 88) = v6;
  uint64_t result = (_BYTE *)(a1 + 152);
  __int128 v10 = *(_OWORD *)(a2 + 152);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(_OWORD *)uint64_t result = v10;
  return result;
}

void sub_10039E9A0(_Unwind_Exception *exception_object)
{
}

void sub_10039E9BC(uint64_t a1)
{
}

void sub_10039EA00()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1019361B8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1019361B8))
    {
      qword_1019361A0 = 0LL;
      qword_1019361A8 = 0LL;
      qword_1019361B0 = 0LL;
      uint64_t v1 = operator new(6uLL);
      qword_1019361A8 = (uint64_t)(v1 + 3);
      qword_1019361B0 = (uint64_t)(v1 + 3);
      *(_DWORD *)uint64_t v1 = 151521030;
      v1[2] = 3082;
      qword_1019361A0 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1001CDCD0, &qword_1019361A0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1019361B8);
    }
  }

void sub_10039EA9C(_Unwind_Exception *a1)
{
}

void sub_10039EAB4()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1019361D8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1019361D8))
    {
      qword_1019361C0 = 0LL;
      qword_1019361C8 = 0LL;
      qword_1019361D0 = 0LL;
      uint64_t v1 = operator new(2uLL);
      qword_1019361C0 = (uint64_t)v1;
      *uint64_t v1 = 256;
      qword_1019361C8 = (uint64_t)(v1 + 1);
      qword_1019361D0 = (uint64_t)(v1 + 1);
      __cxa_atexit((void (*)(void *))sub_1001CDD00, &qword_1019361C0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1019361D8);
    }
  }

void sub_10039EB40(_Unwind_Exception *a1)
{
}

void sub_10039EBFC(id a1)
{
  qword_1019955E8 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLCompanionNotifierSilo");
}

void sub_10039EC70(CLCompanionNotifierAdapter *self, SEL a2)
{
  if (!-[CLNotifierServiceAdapter notifier](self, "notifier"))
  {
    uint64_t v3 = sub_101236DF0();
    sub_10039ECB0(v3);
  }

uint64_t sub_10039ECB0(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10039EE10;
  block[3] = &unk_10181A288;
  block[4] = a1;
  if (qword_1019955F8 != -1) {
    dispatch_once(&qword_1019955F8, block);
  }
  return qword_1019A0F80;
}

void sub_10039ED24(CLCompanionNotifierAdapter *self, SEL a2)
{
  id v2 = -[CLNotifierServiceAdapter notifier](self, "notifier");
  (*((void (**)(CLNotifierBase *))v2->var0 + 2))(v2);
}

uint64_t sub_10039EE10(uint64_t a1)
{
  if (sub_1001B9A1C())
  {
    id v2 = operator new(0xC0uLL);
    uint64_t result = sub_100C6B760(v2, *(void *)(a1 + 32));
  }

  else
  {
    id v2 = operator new(0x128uLL);
    uint64_t result = sub_100B05818(v2, *(void *)(a1 + 32));
  }

  qword_1019A0F80 = (uint64_t)v2;
  return result;
}

void sub_10039EE6C(_Unwind_Exception *a1)
{
}

uint64_t sub_10039EE84(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_10039F17C(a1, "CLCompanionNotifier", a2);
  *(void *)uint64_t v3 = off_1018355A0;
  *(_WORD *)(v3 + 109) = 0;
  *(_BYTE *)(v3 + 111) = 0;
  *(void *)(v3 + 112) = 0x7FEFFFFFFFFFFFFFLL;
  uint64_t v4 = (void *)(v3 + 112);
  id v5 = [*(id *)(v3 + 40) newTimer];
  *(_OWORD *)(a1 + 128) = 0u;
  uint64_t v6 = a1 + 128;
  *(void *)(a1 + 120) = v5;
  *(_OWORD *)(a1 + 144) = 0u;
  uint64_t v7 = sub_1006E27E8();
  sub_100413284(v7, &v22);
  sub_1002A82BC(v22, "CompanionStateSyncInterval", v4);
  __int128 v8 = v23;
  if (v23)
  {
    p_shared_owners = (unint64_t *)&v23->__shared_owners_;
    do
      unint64_t v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }

  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472LL;
  void v21[2] = sub_10039F218;
  v21[3] = &unk_10181D3D0;
  v21[4] = a1;
  [*(id *)(a1 + 120) setHandler:v21];
  sub_100ACD980((uint64_t)sub_10039F228, a1, *(void **)(a1 + 32), &v22);
  uint64_t v11 = v22;
  uint64_t v22 = 0LL;
  uint64_t v12 = *(void *)(a1 + 136);
  *(void *)(a1 + 136) = v11;
  if (v12)
  {
    (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
    uint64_t v13 = v22;
    uint64_t v22 = 0LL;
    if (v13) {
      (*(void (**)(uint64_t))(*(void *)v13 + 8LL))(v13);
    }
  }

  [*(id *)(*(void *)(a1 + 136) + 16) register:*(void *)(*(void *)(a1 + 136) + 8) forNotification:1 registrationInfo:0];
  *(_BYTE *)(a1 + 109) = objc_msgSend( objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "vendor"),  "proxyForService:",  @"CLDataProtectionManager"),  "syncgetDeviceUnlockedSinceFirstBoot");
  sub_10060B0A4((uint64_t)sub_10039F428, a1, *(void **)(a1 + 32), &v22);
  uint64_t v14 = v22;
  uint64_t v22 = 0LL;
  uint64_t v15 = *(void *)(a1 + 144);
  *(void *)(a1 + 144) = v14;
  if (v15)
  {
    (*(void (**)(uint64_t))(*(void *)v15 + 8LL))(v15);
    uint64_t v16 = v22;
    uint64_t v22 = 0LL;
    if (v16) {
      (*(void (**)(uint64_t))(*(void *)v16 + 8LL))(v16);
    }
  }

  [*(id *)(*(void *)(a1 + 144) + 16) register:*(void *)(*(void *)(a1 + 144) + 8) forNotification:0 registrationInfo:0];
  sub_100DAA9F8((uint64_t)sub_10039F600, a1, *(void **)(a1 + 32), &v22);
  uint64_t v17 = v22;
  uint64_t v22 = 0LL;
  uint64_t v18 = *(void *)v6;
  *(void *)uint64_t v6 = v17;
  if (v18)
  {
    (*(void (**)(uint64_t))(*(void *)v18 + 8LL))(v18);
    uint64_t v19 = v22;
    uint64_t v22 = 0LL;
    if (v19) {
      (*(void (**)(uint64_t))(*(void *)v19 + 8LL))(v19);
    }
  }

  [*(id *)(*(void *)v6 + 16) register:*(void *)(*(void *)v6 + 8) forNotification:1 registrationInfo:0];
  qword_1019A0F88 = 0LL;
  return a1;
}

void sub_10039F0E8(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void *)(v1 + 144);
  *(void *)(v1 + 144) = 0LL;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  uint64_t v5 = *(void *)(v1 + 136);
  *(void *)(v1 + 136) = 0LL;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
  }
  uint64_t v6 = *v2;
  *id v2 = 0LL;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
  }
  sub_10039F7E0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10039F17C(uint64_t a1, char *a2, void *a3)
{
  *(void *)a1 = off_101835788;
  sub_1010DDBC0((void *)(a1 + 8), a2);
  *(void *)(a1 + 32) = a3;
  *(void *)(a1 + 40) = [a3 silo];
  *(void *)(a1 + 48) = 0LL;
  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + 56) = a1 + 64;
  *(void *)(a1 + 88) = 0LL;
  *(void *)(a1 + 96) = 0LL;
  *(void *)(a1 + sub_1011C52D0(v16 - 72) = 0LL;
  *(void *)(a1 + 80) = a1 + 88;
  *(_DWORD *)(a1 + 104) = 0;
  *(_BYTE *)(a1 + 108) = 0;
  return a1;
}

void sub_10039F1FC(_Unwind_Exception *exception_object)
{
}

uint64_t sub_10039F218(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 32) + 216LL))(*(void *)(a1 + 32));
}

void sub_10039F228(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101835718);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v7 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLCompanionNotifier::onDataProtectionNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v7, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101835718);
    }
    __int128 v8 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLCompanionNotifier::onDataProtectionNotification, event:%{public, location:escape_ only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  if (*a2 == 1)
  {
    *(_BYTE *)(a4 + 109) = *(_BYTE *)(a3 + 4);
    if (qword_1019A0F88) {
      id v9 = [(id)qword_1019A0F88 isConnected];
    }
    else {
      id v9 = 0LL;
    }
    sub_1003A00C0(a4, (uint64_t)v9);
  }

  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_10039F408( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10039F428(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101835718);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    __int128 v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLCompanionNotifier::onFitnessTrackingNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101835718);
    }
    id v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLCompanionNotifier::onFitnessTrackingNotification, event:%{public, location:escape _only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_1003A0648(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_10039F5E0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10039F600(uint64_t a1, uint64_t a2, uint64_t a3, id *a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101835718);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v10 = 1;
    uint64_t v7 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLCompanionNotifier::onMotionStateObserverNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v7, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101835718);
    }
    __int128 v8 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v12 = 0;
      __int16 v13 = 2082;
      __int16 v14 = "";
      __int16 v15 = 2082;
      __int16 v16 = "activity";
      __int16 v17 = 2050;
      __int16 v18 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLCompanionNotifier::onMotionStateObserverNotification, event:%{public, location:es cape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v10 = 0;
  }

  (*((void (**)(id *, uint64_t, uint64_t))*a4 + 29))(a4, a2, a3);
  if (v10) {
    os_activity_scope_leave(&state);
  }
}

void sub_10039F7C0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10039F7E0(uint64_t a1)
{
  *(void *)a1 = off_101835788;
  [*(id *)(a1 + 48) invalidate];

  sub_100231CA4(a1 + 80, *(void **)(a1 + 88));
  sub_100231CF0(a1 + 56, *(void **)(a1 + 64));
  return a1;
}

id sub_10039F854()
{
  id result = (id)qword_1019A0F88;
  if (qword_1019A0F88) {
    return [(id)qword_1019A0F88 isConnected];
  }
  return result;
}

uint64_t sub_10039F868(void *a1)
{
  *a1 = off_1018355A0;
  if (qword_1019A0F88) {

  }
  uint64_t v2 = a1[18];
  a1[18] = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  uint64_t v3 = a1[17];
  a1[17] = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  uint64_t v4 = a1[16];
  a1[16] = 0LL;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  return sub_10039F7E0((uint64_t)a1);
}

uint64_t sub_10039F8F8(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 111)) {
    return 0LL;
  }
  if (qword_1019A0F88)
  {
    if ([(id)qword_1019A0F88 pairedDevice])
    {
      __int128 v8 = 0u;
      __int128 v9 = 0u;
      __int128 v6 = 0u;
      __int128 v7 = 0u;
      id v2 = [&off_1018D6C28 countByEnumeratingWithState:&v6 objects:v10 count:16];
      if (v2)
      {
        id v3 = v2;
        uint64_t v4 = *(void *)v7;
LABEL_7:
        uint64_t v5 = 0LL;
        while (1)
        {
          if (*(void *)v7 != v4) {
            objc_enumerationMutation(&off_1018D6C28);
          }
          if (objc_msgSend( objc_msgSend(objc_msgSend((id)qword_1019A0F88, "pairedDevice"), "modelIdentifier"),  "hasPrefix:",  *(void *)(*((void *)&v6 + 1) + 8 * v5))) {
            return 0LL;
          }
          if (v3 == (id)++v5)
          {
            id v3 = [&off_1018D6C28 countByEnumeratingWithState:&v6 objects:v10 count:16];
            uint64_t result = 1LL;
            if (v3) {
              goto LABEL_7;
            }
            return result;
          }
        }
      }
    }
  }

  return 1LL;
}

uint64_t sub_10039FA2C()
{
  uint64_t result = qword_1019A0F88;
  if (qword_1019A0F88)
  {
    uint64_t result = (uint64_t)[(id)qword_1019A0F88 pairedDevice];
    if (result)
    {
      __int128 v6 = 0u;
      __int128 v7 = 0u;
      __int128 v4 = 0u;
      __int128 v5 = 0u;
      uint64_t result = (uint64_t)[&off_1018D6C40 countByEnumeratingWithState:&v4 objects:v8 count:16];
      if (result)
      {
        id v1 = (id)result;
        uint64_t v2 = *(void *)v5;
        while (2)
        {
          for (uint64_t i = 0LL; i != v1; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v5 != v2) {
              objc_enumerationMutation(&off_1018D6C40);
            }
            if (objc_msgSend( objc_msgSend(objc_msgSend((id)qword_1019A0F88, "pairedDevice"), "modelIdentifier"),  "hasPrefix:",  *(void *)(*((void *)&v4 + 1) + 8 * (void)i))) {
              return 1LL;
            }
          }

          id v1 = [&off_1018D6C40 countByEnumeratingWithState:&v4 objects:v8 count:16];
          uint64_t result = 0LL;
          if (v1) {
            continue;
          }
          break;
        }
      }
    }
  }

  return result;
}

id sub_10039FB50( double a1, uint64_t a2, int a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, uint64_t a10)
{
  if (qword_1019346D0 != -1) {
    dispatch_once(&qword_1019346D0, &stru_101835738);
  }
  __int16 v18 = (os_log_s *)qword_1019346D8;
  if (os_log_type_enabled((os_log_t)qword_1019346D8, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)uint64_t buf = 67110912;
    int v32 = a3;
    __int16 v33 = 2048;
    id v34 = [a4 length];
    __int16 v35 = 2048;
    uint64_t v36 = a5;
    __int16 v37 = 1024;
    int v38 = a6;
    __int16 v39 = 1024;
    int v40 = a7;
    __int16 v41 = 1024;
    int v42 = a8;
    __int16 v43 = 2048;
    double v44 = a1;
    __int16 v45 = 1024;
    int v46 = a9;
    _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_INFO,  "Sending message,type,%d,size,%lu,priority,%ld,fireAndForget,%d,encrypt,%d,bypassConnectionCheck,%d,timeout,%f,nonWaking,%d",  buf,  0x3Eu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019346D0 != -1) {
      dispatch_once(&qword_1019346D0, &stru_101835738);
    }
    uint64_t v20 = qword_1019346D8;
    LODWORD(v24) = 67110912;
    HIDWORD(v24) = a3;
    *(_WORD *)__int128 v25 = 2048;
    *(void *)&void v25[2] = [a4 length];
    *(_WORD *)&v25[10] = 2048;
    LOWORD(v26) = WORD1(a6);
    WORD1(v26) = 1024;
    HIDWORD(v26) = a7;
    LOWORD(v27) = 1024;
    HIWORD(v27) = a8;
    double v28 = a1;
    __int16 v29 = 1024;
    int v30 = a9;
    LODWORD(v23) = 62;
    uint64_t v21 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v20,  1LL,  "Sending message,type,%d,size,%lu,priority,%ld,fireAndForget,%d,encrypt,%d,bypassConnectionCheck,%d,t imeout,%f,nonWaking,%d",  &v24,  v23,  v24,  *(_DWORD *)v25,  *(_DWORD *)&v25[8],  HIDWORD(a5),  v26,  v27);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCompanionNotifier::sendCompanionMessage(CLCompanionNotifier_Type::Type, NSData *, IDSMessagePriority, BOOL, BOOL, BOOL, CFTimeInterval, BOOL, CLCompanionTransportCompletionHandler) const",  "%s\n",  v21);
  }

  id result = (id)qword_1019A0F88;
  if (qword_1019A0F88)
  {
    LOBYTE(v22) = a9;
    return [(id)qword_1019A0F88 sendMessage:a4 type:(unsigned __int16)a3 priority:a5 fireAndForget:a6 encrypt:a7 bypassConnectionCheck:a8 timeout:a1 nonWaking:v22 completionHandler:a10];
  }

  else if (a10)
  {
    return (id)(*(uint64_t (**)(uint64_t, void, void))(a10 + 16))(a10, 0LL, 0LL);
  }

  return result;
}

void *sub_10039FE14@<X0>(_DWORD *a1@<X1>, void *a2@<X8>)
{
  return sub_1010DDBC0(a2, __str);
}

uint64_t sub_10039FE8C(_DWORD *a1)
{
  int v1 = *a1 - 2;
  else {
    return dword_1012E7A90[v1];
  }
}

uint64_t sub_10039FEB4()
{
  return 1LL;
}

uint64_t sub_10039FEBC()
{
  return 1LL;
}

void sub_10039FEC4(uint64_t a1, int a2)
{
  double v3 = 1.79769313e308;
  if (a2) {
    double v3 = 10.0;
  }
  *(double *)(a1 + 112) = v3;
  [*(id *)(a1 + 120) setNextFireDelay:v3 interval:v3];
  if (qword_1019346D0 != -1) {
    dispatch_once(&qword_1019346D0, &stru_101835738);
  }
  __int128 v4 = (os_log_s *)qword_1019346D8;
  if (os_log_type_enabled((os_log_t)qword_1019346D8, OS_LOG_TYPE_DEBUG))
  {
    double v5 = *(double *)(a1 + 112);
    if (v5 == 1.79769313e308) {
      double v5 = 0.0;
    }
    *(_DWORD *)uint64_t buf = 134217984;
    double v12 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "timer interval,%f", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019346D0 != -1) {
      dispatch_once(&qword_1019346D0, &stru_101835738);
    }
    double v6 = *(double *)(a1 + 112);
    if (v6 == 1.79769313e308) {
      double v6 = 0.0;
    }
    int v9 = 134217984;
    double v10 = v6;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019346D8,  2LL,  "timer interval,%f",  COERCE_DOUBLE(&v9));
    __int128 v8 = (uint8_t *)v7;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLCompanionNotifier::setStateSyncTimer(BOOL)", "%s\n", v7);
    if (v8 != buf) {
      free(v8);
    }
  }

void sub_1003A00C0(uint64_t a1, uint64_t a2)
{
  double v3 = (void *)qword_1019A0F88;
  if (qword_1019A0F88)
  {
    if ((_DWORD)a2 && (id v5 = [(id)qword_1019A0F88 pairedDevice], v3 = (void *)qword_1019A0F88, v5))
    {
      double v6 = (const char *)objc_msgSend( objc_msgSend(objc_msgSend((id)qword_1019A0F88, "pairedDevice"), "modelIdentifier"),  "UTF8String");
      double v3 = (void *)qword_1019A0F88;
    }

    else
    {
      double v6 = "Unknown";
    }

    char v7 = *(_BYTE *)(a1 + 111);
    if ([v3 pairedDevice])
    {
      id v8 = [(id)qword_1019A0F88 pairedDevice];
      if (v8)
      {
        [v8 operatingSystemVersion];
        int v9 = *(_DWORD *)buf;
      }

      else
      {
        int v9 = 0;
        memset(buf, 0, 24);
      }
    }

    else
    {
      int v9 = 0;
    }

    uint8_t v10 = v7 ^ 1;
    if ([(id)qword_1019A0F88 pairedDevice])
    {
      id v11 = [(id)qword_1019A0F88 pairedDevice];
      if (v11)
      {
        [v11 operatingSystemVersion];
        int v12 = *(_DWORD *)v44;
      }

      else
      {
        int v12 = 0;
        uint64_t v43 = 0LL;
        *(void *)double v44 = 0LL;
        *(void *)&v44[8] = 0LL;
      }
    }

    else
    {
      int v12 = 0;
    }

    if ([(id)qword_1019A0F88 pairedDevice])
    {
      id v13 = [(id)qword_1019A0F88 pairedDevice];
      if (v13)
      {
        [v13 operatingSystemVersion];
        int v14 = v42;
      }

      else
      {
        int v14 = 0;
        int v40 = 0LL;
        __int16 v41 = 0LL;
      }
    }

    else
    {
      int v14 = 0;
    }

    uint8_t v15 = sub_10039F8F8(a1);
    LODWORD(v43) = 5;
    __int128 v57 = 0u;
    __int128 v58 = 0u;
    __int128 v55 = 0u;
    __int128 v56 = 0u;
    __int128 v53 = 0u;
    __int128 v54 = 0u;
    __int128 v51 = 0u;
    __int128 v52 = 0u;
    __int128 v50 = 0u;
    memset(buf, 0, sizeof(buf));
    buf[0] = a2;
    (*(void (**)(uint64_t, uint64_t *, uint8_t *, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  &v43,  buf,  1LL,  0xFFFFFFFFLL,  0LL);
    LODWORD(v43) = 6;
    *(_WORD *)&buf[2] = 0;
    memset(&buf[16], 0, 32);
    __int128 v57 = 0u;
    __int128 v58 = 0u;
    __int128 v55 = 0u;
    __int128 v56 = 0u;
    __int128 v53 = 0u;
    __int128 v54 = 0u;
    __int128 v51 = 0u;
    __int128 v52 = 0u;
    __int128 v50 = 0u;
    buf[0] = a2;
    buf[1] = v10;
    *(_DWORD *)&uint8_t buf[4] = v9;
    *(_DWORD *)&uint8_t buf[8] = v12;
    *(_DWORD *)&_BYTE buf[12] = v14;
    uint8_t buf[16] = v15;
    (*(void (**)(uint64_t, uint64_t *, uint8_t *, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  &v43,  buf,  1LL,  0xFFFFFFFFLL,  0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 208LL))(a1, a2);
    char v16 = objc_msgSend(objc_msgSend((id)qword_1019A0F88, "pairedDevice"), "deviceType") == (id)6;
    __int16 v17 = (dispatch_queue_t *)sub_100B354EC();
    sub_100B36D68(v17, a2, v16);
    char v18 = sub_10039FA2C();
    if (sub_100F5A080())
    {
      uint64_t v19 = sub_100F5A080();
      sub_100F5A6C4(v19, a2, (uint64_t)v6, v18);
    }

    if (sub_10081C7A0())
    {
      uint64_t v20 = sub_10081C7A0();
      sub_10081CC44(v20, a2, v18);
    }

    uint64_t v21 = objc_autoreleasePoolPush();
    uint64_t v22 = objc_alloc_init(&OBJC_CLASS___ALActivityLog);
    -[ALActivityLog setTimestamp:](v22, "setTimestamp:", CFAbsoluteTimeGetCurrent());
    -[ALActivityLog setIdsStatus:](v22, "setIdsStatus:", objc_alloc_init(&OBJC_CLASS___ALCLIDSStatus));
    if ((objc_msgSend( *(id *)(a1 + 152),  "isEqualToString:",  objc_msgSend(objc_msgSend((id)qword_1019A0F88, "pairedDevice"), "uniqueIDOverride")) & 1) == 0)
    {

      *(void *)(a1 + 152) = 0LL;
      *(void *)(a1 + 152) =  objc_msgSend( objc_msgSend(objc_msgSend((id)qword_1019A0F88, "pairedDevice"), "uniqueIDOverride"),  "copy");
      -[ALCLIDSStatus setPairedModelId:]( -[ALActivityLog idsStatus](v22, "idsStatus"),  "setPairedModelId:",  objc_msgSend(objc_msgSend((id)qword_1019A0F88, "pairedDevice"), "modelIdentifier"));
    }

    -[ALCLIDSStatus setConnectionStatus:](-[ALActivityLog idsStatus](v22, "idsStatus"), "setConnectionStatus:", a2);
    objc_msgSend( -[CLServiceVendor proxyForService:]( +[CLServiceVendor sharedInstance](CLServiceVendor, "sharedInstance"),  "proxyForService:",  @"CLActivityLogger"),  "logData:",  v22);
    __n128 v23 = objc_opt_class(&OBJC_CLASS___IDSService);
    if (v24)
    {
      __int128 v25 = (void *)IDSCopyLocalDeviceUniqueID(v23);
      if (qword_1019346D0 != -1) {
        dispatch_once(&qword_1019346D0, &stru_101835738);
      }
      double v26 = (os_log_s *)qword_1019346D8;
      if (os_log_type_enabled((os_log_t)qword_1019346D8, OS_LOG_TYPE_DEFAULT))
      {
        [(id)qword_1019A0F88 pairedDeviceLastSeenTimestamp];
        uint64_t v28 = v27;
        id v29 = objc_msgSend( objc_msgSend(objc_msgSend((id)qword_1019A0F88, "pairedDevice"), "uniqueIDOverride"),  "UTF8String");
        id v30 = [v25 UTF8String];
        *(_DWORD *)uint64_t buf = 67110146;
        *(_DWORD *)&uint8_t buf[4] = a2;
        *(_WORD *)&uint8_t buf[8] = 2048;
        *(void *)&buf[10] = v28;
        *(_WORD *)&_BYTE buf[18] = 2080;
        *(void *)&buf[20] = v6;
        *(_WORD *)&_BYTE buf[28] = 2080;
        *(void *)&buf[30] = v29;
        *(_WORD *)&_BYTE buf[38] = 2080;
        *(void *)&buf[40] = v30;
        _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEFAULT,  "IDS connection update,status,%d,prevDisconnection,%f,modelID,%s,uniqueIDOverride,%s,localDeviceID,%s",  buf,  0x30u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019346D0 != -1) {
          dispatch_once(&qword_1019346D0, &stru_101835738);
        }
        uint64_t v31 = qword_1019346D8;
        [(id)qword_1019A0F88 pairedDeviceLastSeenTimestamp];
        uint64_t v33 = v32;
        id v34 = objc_msgSend( objc_msgSend(objc_msgSend((id)qword_1019A0F88, "pairedDevice"), "uniqueIDOverride"),  "UTF8String");
        id v35 = [v25 UTF8String];
        LODWORD(v43) = 67110146;
        HIDWORD(v43) = a2;
        *(_WORD *)double v44 = 2048;
        *(void *)&_DWORD v44[2] = v33;
        *(_WORD *)&v44[10] = 2080;
        *(void *)&v44[12] = v6;
        __int16 v45 = 2080;
        id v46 = v34;
        __int16 v47 = 2080;
        id v48 = v35;
        LODWORD(v38) = 48;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v31,  0LL,  "IDS connection update,status,%d,prevDisconnection,%f,modelID,%s,uniqueIDOverride,%s,localDeviceID,%s",  &v43,  v38,  v39,  v40,  v41);
        __int16 v37 = (uint8_t *)v36;
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CLCompanionNotifier::connectionUpdate(BOOL)", "%s\n", v36);
        if (v37 != buf) {
          free(v37);
        }
      }
    }

    objc_autoreleasePoolPop(v21);
  }

void sub_1003A0648(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  if (!*a3)
  {
    *(_BYTE *)(a1 + 110) = *(_BYTE *)(a4 + 3);
    *(_BYTE *)(a1 + 111) = *(_BYTE *)(a4 + 2);
  }

  if (qword_1019A0F88) {
    id v5 = [(id)qword_1019A0F88 isConnected];
  }
  else {
    id v5 = 0LL;
  }
  sub_1003A00C0(a1, (uint64_t)v5);
}

void *sub_1003A08B0(uint64_t a1, uint64_t *a2, void *a3, uint64_t a4, uint64_t a5)
{
  id result = (void *)sub_1003A08E8(a1, 0LL, a2, a3, a4, a5);
  *id result = off_1018356D0;
  return result;
}

uint64_t sub_1003A08E8(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4, uint64_t a5, uint64_t a6)
{
  *(void *)a1 = off_1018358D8;
  *(void *)(a1 + 8) = -[CLNotifierClientAdapter initWithClient:]( objc_alloc(&OBJC_CLASS___CLNotifierClientAdapter),  "initWithClient:",  a1);
  *(void *)(a1 + 24) = a5;
  *(void *)(a1 + 32) = a6;
  else {
    int v12 = (uint64_t *)*a3;
  }
  id v13 = objc_msgSend( objc_msgSend(a4, "vendor"),  "proxyForService:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v12));
  *(void *)(a1 + 16) = v13;
  id v14 = v13;
  if (a2) {
    [*(id *)(a1 + 16) setDelegateEntityName:a2];
  }
  objc_msgSend(*(id *)(a1 + 16), "registerDelegate:inSilo:", *(void *)(a1 + 8), objc_msgSend(a4, "silo"));
  return a1;
}

void sub_1003A09BC(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  id v8 = operator new(0x30uLL);
  sub_1010DDBC0(__p, "CLCompanionNotifier");
  sub_1003A08E8((uint64_t)v8, 0LL, (uint64_t *)__p, a3, a1, a2);
  *id v8 = off_1018356D0;
  *a4 = v8;
  if (v10 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1003A0A58( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete(v15);
  _Unwind_Resume(a1);
}

void sub_1003A0A84(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, void *a5@<X8>)
{
  char v10 = operator new(0x30uLL);
  sub_1010DDBC0(__p, "CLCompanionNotifier");
  sub_1003A08E8((uint64_t)v10, a1, (uint64_t *)__p, a4, a2, a3);
  *char v10 = off_1018356D0;
  *a5 = v10;
  if (v12 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1003A0B24( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete(v15);
  _Unwind_Resume(a1);
}

void sub_1003A0B50(uint64_t a1, uint64_t a2)
{
  HIDWORD(v14) = a2;
  if (!*(_BYTE *)(a1 + 108))
  {
    uint64_t v4 = *(void *)(a1 + 88);
    if (!v4) {
      goto LABEL_12;
    }
    uint64_t v5 = a1 + 80;
    uint64_t v6 = a1 + 88;
    do
    {
      int v7 = *(_DWORD *)(v4 + 32);
      BOOL v8 = v7 < (int)a2;
      else {
        int v9 = (uint64_t *)(v4 + 8);
      }
      if (!v8) {
        uint64_t v6 = v4;
      }
      uint64_t v4 = *v9;
    }

    while (*v9);
    if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= (int)a2)
    {
      while (*(void *)(v6 + 56))
      {
        *(_DWORD *)uint64_t buf = *(_DWORD *)(*(void *)(v6 + 40) + 28LL);
        (*(void (**)(uint64_t, uint64_t, uint8_t *))(*(void *)a1 + 112LL))(a1, a2, buf);
      }

      sub_100233254(v5, (int *)&v14 + 1);
    }

    else
    {
LABEL_12:
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101835718);
      }
      char v10 = (os_log_s *)qword_1019349D8;
      if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
      {
        id v11 = (void *)(a1 + 8);
        *(_DWORD *)uint64_t buf = 136446466;
        uint64_t v20 = v11;
        __int16 v21 = 1026;
        int v22 = a2;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
          buf,
          0x12u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_101835718);
        }
        char v12 = (void *)(a1 + 8);
        int v15 = 136446466;
        char v16 = v12;
        __int16 v17 = 1026;
        int v18 = a2;
        LODWORD(v14) = 18;
        id v13 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
                        &v15,
                        v14);
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLNotifier<CLCompanionNotifier_Type::Notification, CLCompanionNotifier_Type::NotificationData, ch ar, CLCompanionNotifier_Type::RegistrationInfo>::removeClient(int) [Notification_T = CLCompanionNotifier_Type: :Notification, NotificationData_T = CLCompanionNotifier_Type::NotificationData, NotificationInfo_T = char, Reg istrationInfo_T = CLCompanionNotifier_Type::RegistrationInfo]",  "%s\n",  v13);
      }
    }
  }

uint64_t sub_1003A0DC4(uint64_t a1, uint64_t a2, int a3, void *a4)
{
  id v7 = sub_1003A3660(a4);
  if (v7)
  {
    int v10 = a3;
    return (*(uint64_t (**)(uint64_t, uint64_t, int *, id))(*(void *)a1 + 96LL))(a1, a2, &v10, v7);
  }

  else
  {
    int v9 = a3;
    return (*(uint64_t (**)(uint64_t, uint64_t, int *))(*(void *)a1 + 88LL))(a1, a2, &v9);
  }

uint64_t sub_1003A0E44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void *))(*(void *)a1 + 96LL))( a1,  a2,  a3,  &unk_101937B78);
}

uint64_t sub_1003A0E58(uint64_t a1, int a2, int *a3, uint64_t **a4)
{
  int v40 = a2;
  if (*(_BYTE *)(a1 + 108)) {
    return 0LL;
  }
  uint64_t v7 = *(void *)(a1 + 88);
  if (v7)
  {
    uint64_t v10 = a1 + 88;
    do
    {
      int v11 = *(_DWORD *)(v7 + 32);
      BOOL v12 = v11 < a2;
      if (v11 >= a2) {
        id v13 = (uint64_t *)v7;
      }
      else {
        id v13 = (uint64_t *)(v7 + 8);
      }
      if (!v12) {
        uint64_t v10 = v7;
      }
      uint64_t v7 = *v13;
    }

    while (*v13);
    if (v10 != a1 + 88 && *(_DWORD *)(v10 + 32) <= a2)
    {
      *(void *)__int16 v41 = v10;
      int v17 = *a3;
      uint64_t v20 = *(void *)(v10 + 48);
      uint64_t v19 = v10 + 48;
      uint64_t v18 = v20;
      if (!v20) {
        goto LABEL_31;
      }
      uint64_t v21 = v19;
      do
      {
        int v22 = *(_DWORD *)(v18 + 28);
        BOOL v23 = v22 < v17;
        if (v22 >= v17) {
          uint64_t v24 = (uint64_t *)v18;
        }
        else {
          uint64_t v24 = (uint64_t *)(v18 + 8);
        }
        if (!v23) {
          uint64_t v21 = v18;
        }
        uint64_t v18 = *v24;
      }

      while (*v24);
      if (v21 == v19 || v17 < *(_DWORD *)(v21 + 28)) {
LABEL_31:
      }
        uint64_t v21 = v19;
      uint64_t v25 = *(void *)(a1 + 64);
      if (!v25) {
        goto LABEL_42;
      }
      uint64_t v26 = a1 + 64;
      do
      {
        int v27 = *(_DWORD *)(v25 + 32);
        BOOL v28 = v27 < v17;
        if (v27 >= v17) {
          id v29 = (uint64_t *)v25;
        }
        else {
          id v29 = (uint64_t *)(v25 + 8);
        }
        if (!v28) {
          uint64_t v26 = v25;
        }
        uint64_t v25 = *v29;
      }

      while (*v29);
      if (v26 != a1 + 64 && v17 >= *(_DWORD *)(v26 + 32))
      {
        uint64_t v39 = v26;
        uint64_t v33 = *(void *)(v26 + 56);
        *(void *)&buf[0] = &v40;
        sub_10000C858((uint64_t **)(v26 + 40), &v40, (uint64_t)&unk_1012CF090, (_DWORD **)buf)[5] = *a4;
        memset(buf, 0, 192);
        if (v21 == v19
          && (*(unsigned int (**)(uint64_t, int *, _OWORD *))(*(void *)a1 + 128LL))(a1, a3, buf))
        {
          id v34 = sub_1003A3E80(buf);
          sub_1003A2BD8((_BYTE *)a1, (uint64_t)v41, (uint64_t)&v39, v34);
        }

        if (v33) {
          goto LABEL_44;
        }
      }

      else
      {
LABEL_42:
        uint64_t v39 = a1 + 64;
        char v30 = byte_101937B80;
        HIDWORD(v38) = v17;
        *(void *)&buf[0] = (char *)&v38 + 4;
        *((_BYTE *)sub_10023347C((uint64_t **)(a1 + 56), (int *)&v38 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 80) = v30;
        HIDWORD(v38) = *a3;
        *(void *)&buf[0] = (char *)&v38 + 4;
        uint64_t v31 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v38 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        sub_1000F0D38(v31 + 8);
        HIDWORD(v38) = *a3;
        *(void *)&buf[0] = (char *)&v38 + 4;
        uint64_t v32 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v38 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        *(void *)&buf[0] = &v40;
        sub_10000C858(v32 + 5, &v40, (uint64_t)&unk_1012CF090, (_DWORD **)buf)[5] = *a4;
      }

      (*(void (**)(uint64_t, int *))(*(void *)a1 + 168LL))(a1, a3);
LABEL_44:
      if (v21 == v19)
      {
        LODWORD(buf[0]) = *a3;
        sub_10004A8FC((uint64_t **)(*(void *)v41 + 40LL), (int *)buf, buf);
      }

      return 1LL;
    }
  }

  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101835718);
  }
  uint64_t v14 = (os_log_s *)qword_1019349D8;
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
  {
    int v15 = (void *)(a1 + 8);
    LODWORD(buf[0]) = 136446466;
    *(void *)((char *)buf + 4) = v15;
    WORD6(buf[0]) = 1026;
    *(_DWORD *)((char *)buf + 14) = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
      (uint8_t *)buf,
      0x12u);
  }

  BOOL v16 = sub_1002921D0(115, 0);
  uint64_t result = 0LL;
  if (v16)
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101835718);
    }
    id v35 = (void *)(a1 + 8);
    *(_DWORD *)__int16 v41 = 136446466;
    *(void *)&v41[4] = v35;
    __int16 v42 = 1026;
    int v43 = a2;
    LODWORD(v38) = 18;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
      v41,
      v38);
    __int16 v37 = (char *)v36;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLCompanionNotifier_Type::Notification, CLCompanionNotifier_Type::NotificationData, char, CLCompanionNotifier_Type::RegistrationInfo>::registerForNotification(int, const Notification_T &, const Registrati onInfo_T &) [Notification_T = CLCompanionNotifier_Type::Notification, NotificationData_T = CLCompanionNotifier_Typ e::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = CLCompanionNotifier_Type::RegistrationInfo]",  "%s\n",  v36);
    return 0LL;
  }

  return result;
}

BOOL sub_1003A12D4(uint64_t a1, int a2, int *a3)
{
  uint64_t v5 = *(void *)(a1 + 88);
  if (!v5) {
    goto LABEL_11;
  }
  uint64_t v6 = a1 + 88;
  do
  {
    int v7 = *(_DWORD *)(v5 + 32);
    BOOL v8 = v7 < a2;
    if (v7 >= a2) {
      int v9 = (uint64_t *)v5;
    }
    else {
      int v9 = (uint64_t *)(v5 + 8);
    }
    if (!v8) {
      uint64_t v6 = v5;
    }
    uint64_t v5 = *v9;
  }

  while (*v9);
  if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= a2)
  {
    uint64_t v16 = *(void *)(v6 + 48);
    uint64_t v14 = v6 + 48;
    uint64_t v15 = v16;
    if (!v16) {
      goto LABEL_29;
    }
    int v17 = *a3;
    uint64_t v18 = v14;
    do
    {
      int v19 = *(_DWORD *)(v15 + 28);
      BOOL v20 = v19 < v17;
      if (v19 >= v17) {
        uint64_t v21 = (uint64_t *)v15;
      }
      else {
        uint64_t v21 = (uint64_t *)(v15 + 8);
      }
      if (!v20) {
        uint64_t v18 = v15;
      }
      uint64_t v15 = *v21;
    }

    while (*v21);
    if (v18 == v14 || v17 < *(_DWORD *)(v18 + 28)) {
LABEL_29:
    }
      uint64_t v18 = v14;
    return v18 != v14;
  }

  else
  {
LABEL_11:
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101835718);
    }
    uint64_t v10 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
    {
      int v11 = (void *)(a1 + 8);
      *(_DWORD *)uint64_t buf = 136446466;
      id v29 = v11;
      __int16 v30 = 1026;
      int v31 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
        buf,
        0x12u);
    }

    BOOL v12 = sub_1002921D0(115, 0);
    BOOL result = 0LL;
    if (v12)
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101835718);
      }
      int v22 = (void *)(a1 + 8);
      int v24 = 136446466;
      uint64_t v25 = v22;
      __int16 v26 = 1026;
      int v27 = a2;
      BOOL v23 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
                      &v24,
                      18);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLCompanionNotifier_Type::Notification, CLCompanionNotifier_Type::NotificationData, char , CLCompanionNotifier_Type::RegistrationInfo>::clientRegistered(int, const Notification_T &) [Notification_T = C LCompanionNotifier_Type::Notification, NotificationData_T = CLCompanionNotifier_Type::NotificationData, Notifica tionInfo_T = char, RegistrationInfo_T = CLCompanionNotifier_Type::RegistrationInfo]",  "%s\n",  v23);
      return 0LL;
    }
  }

  return result;
}

BOOL sub_1003A1554(char *a1, int a2, int *a3)
{
  HIDWORD(v34) = a2;
  int v3 = a1[108];
  if (!a1[108])
  {
    uint64_t v6 = *((void *)a1 + 11);
    if (v6)
    {
      BOOL v8 = a1 + 88;
      do
      {
        int v9 = *(_DWORD *)(v6 + 32);
        BOOL v10 = v9 < a2;
        if (v9 >= a2) {
          int v11 = (uint64_t *)v6;
        }
        else {
          int v11 = (uint64_t *)(v6 + 8);
        }
        if (!v10) {
          BOOL v8 = (char *)v6;
        }
        uint64_t v6 = *v11;
      }

      while (*v11);
      if (v8 != a1 + 88 && *((_DWORD *)v8 + 8) <= a2)
      {
        uint64_t v14 = (char *)*((void *)v8 + 6);
        BOOL v12 = v8 + 48;
        id v13 = v14;
        if (v14)
        {
          int v15 = *a3;
          uint64_t v16 = v12;
          do
          {
            int v17 = *((_DWORD *)v13 + 7);
            BOOL v18 = v17 < v15;
            if (v17 >= v15) {
              int v19 = (char **)v13;
            }
            else {
              int v19 = (char **)(v13 + 8);
            }
            if (!v18) {
              uint64_t v16 = v13;
            }
            id v13 = *v19;
          }

          while (*v19);
          if (v16 != v12 && v15 >= *((_DWORD *)v16 + 7))
          {
            LODWORD(__p[0]) = *a3;
            sub_1004EF494((uint64_t)(v12 - 8), (int *)__p);
            uint64_t v20 = *((void *)a1 + 8);
            if (!v20) {
              goto LABEL_33;
            }
            int v21 = *a3;
            int v22 = a1 + 64;
            do
            {
              int v23 = *(_DWORD *)(v20 + 32);
              BOOL v24 = v23 < v21;
              if (v23 >= v21) {
                uint64_t v25 = (uint64_t *)v20;
              }
              else {
                uint64_t v25 = (uint64_t *)(v20 + 8);
              }
              if (!v24) {
                int v22 = (char *)v20;
              }
              uint64_t v20 = *v25;
            }

            while (*v25);
            if (v22 != a1 + 64 && v21 >= *((_DWORD *)v22 + 8))
            {
              sub_1002475A8((uint64_t)(v22 + 40), (int *)&v34 + 1);
              if (!*((void *)v22 + 7)) {
                (*(void (**)(char *, int *))(*(void *)a1 + 176LL))(a1, a3);
              }
            }

            else
            {
LABEL_33:
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101835718);
              }
              __int16 v26 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                int v27 = a1 + 8;
                if (a1[31] < 0) {
                  int v27 = (void *)*v27;
                }
                (*(void (**)(void **__return_ptr, char *, int *))(*(void *)a1 + 160LL))(__p, a1, a3);
                if (v44 >= 0) {
                  BOOL v28 = __p;
                }
                else {
                  BOOL v28 = (void **)__p[0];
                }
                *(_DWORD *)uint64_t buf = 136446466;
                *(void *)&uint8_t buf[4] = v27;
                __int16 v36 = 2082;
                __int16 v37 = v28;
                _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_FAULT,  "%{public}s; notification %{public}s not found",
                  buf,
                  0x16u);
                if (v44 < 0) {
                  operator delete(__p[0]);
                }
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(__p, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_101835718);
                }
                id v29 = a1 + 8;
                if (a1[31] < 0) {
                  id v29 = (void *)*v29;
                }
                uint64_t v30 = qword_1019349D8;
                (*(void (**)(_BYTE *__return_ptr, char *, int *))(*(void *)a1 + 160LL))(buf, a1, a3);
                if (v38 >= 0) {
                  int v31 = buf;
                }
                else {
                  int v31 = *(_BYTE **)buf;
                }
                int v39 = 136446466;
                int v40 = v29;
                __int16 v41 = 2082;
                __int16 v42 = v31;
                LODWORD(v34) = 22;
                _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v30,  17LL,  "%{public}s; notification %{public}s not found",
                  &v39,
                  v34);
                uint64_t v33 = v32;
                if (v38 < 0) {
                  operator delete(*(void **)buf);
                }
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLCompanionNotifier_Type::Notification, CLCompanionNotifier_Type::Notification Data, char, CLCompanionNotifier_Type::RegistrationInfo>::unregisterForNotification(int, const Notifica tion_T &) [Notification_T = CLCompanionNotifier_Type::Notification, NotificationData_T = CLCompanionNo tifier_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = CLCompanionNotifier_Typ e::RegistrationInfo]",  "%s\n",  v33);
              }
            }
          }
        }
      }
    }
  }

  return v3 == 0;
}

uint64_t sub_1003A18DC(uint64_t a1, int *a2, _OWORD *a3)
{
  uint64_t v6 = (char *)operator new(0xD8uLL);
  __int128 v7 = a3[9];
  *(_OWORD *)(v6 + 152) = a3[8];
  *(_OWORD *)(v6 + 168) = v7;
  __int128 v8 = a3[11];
  *(_OWORD *)(v6 + 184) = a3[10];
  *(_OWORD *)(v6 + 200) = v8;
  __int128 v9 = a3[5];
  *(_OWORD *)(v6 + 88) = a3[4];
  *(_OWORD *)(v6 + 104) = v9;
  __int128 v10 = a3[7];
  *(_OWORD *)(v6 + 120) = a3[6];
  *(_OWORD *)(v6 + 136) = v10;
  __int128 v11 = a3[1];
  *(_OWORD *)(v6 + 24) = *a3;
  *(_OWORD *)(v6 + 40) = v11;
  __int128 v12 = a3[3];
  *(_OWORD *)(v6 + 56) = a3[2];
  *((void *)v6 + 2) = 0LL;
  *(void *)uint64_t v6 = off_101835868;
  *((void *)v6 + 1) = 0LL;
  *(_OWORD *)(v6 + sub_1011C52D0(v16 - 72) = v12;
  *(void *)&__int128 v19 = v6 + 24;
  *((void *)&v19 + 1) = v6;
  int v18 = *a2;
  uint64_t v20 = &v18;
  id v13 = sub_10023347C((uint64_t **)(a1 + 56), &v18, (uint64_t)&unk_1012CF090, &v20);
  sub_10005F550((uint64_t)(v13 + 8), &v19);
  uint64_t v14 = (std::__shared_weak_count *)*((void *)&v19 + 1);
  if (*((void *)&v19 + 1))
  {
    int v15 = (unint64_t *)(*((void *)&v19 + 1) + 8LL);
    do
      unint64_t v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }

  return 1LL;
}

void sub_1003A19F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1003A1A04(uint64_t a1, unsigned int *a2, _OWORD *a3, int a4, int a5)
{
  if (!*(_BYTE *)(a1 + 108))
  {
    __int128 v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: notifyClientsWithData (Fallback)",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_IF_NONE_PRESENT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101835718);
    }
    __int128 v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      __int128 v12 = (void *)(a1 + 8);
      id v13 = (std::__shared_weak_count *)*a2;
      *(_DWORD *)uint64_t buf = 68289794;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&_BYTE buf[18] = 2082;
      *(void *)&buf[20] = "activity";
      __int16 v72 = 2082;
      __int16 v73 = v12;
      __int16 v74 = 2050;
      uint64_t v75 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:notifyClientsWithData, event:%{public, location:escape_only}s, name:%{public, l ocation:escape_only}s, notification:%{public}lld}",  buf,  0x30u);
    }

    int v15 = (__n128 *)(a1 + 64);
    uint64_t v14 = *(__n128 **)(a1 + 64);
    if (!v14) {
      goto LABEL_18;
    }
    signed __int32 v16 = *a2;
    int v17 = (__n128 *)(a1 + 64);
    do
    {
      signed __int32 v18 = v14[2].n128_i32[0];
      BOOL v19 = v18 < v16;
      if (v18 >= v16) {
        uint64_t v20 = (__n128 **)v14;
      }
      else {
        uint64_t v20 = (__n128 **)&v14->n128_u64[1];
      }
      if (!v19) {
        int v17 = v14;
      }
      uint64_t v14 = *v20;
    }

    while (*v20);
    if (v17 == v15 || v16 < (signed __int32)v17[2].n128_u32[0])
    {
LABEL_18:
      *(void *)__int16 v76 = &v76[8];
      memset(&v76[8], 0, 24);
      uint64_t v77 = 0LL;
      sub_1003A2CB4((uint64_t)buf, a2, (uint64_t)v76);
      int v17 = sub_1002342A4((uint64_t **)(a1 + 56), (__n128 *)buf);
      int v21 = v75;
      if (v75)
      {
        p_shared_owners = (unint64_t *)&v75->__shared_owners_;
        do
          unint64_t v23 = __ldaxr(p_shared_owners);
        while (__stlxr(v23 - 1, p_shared_owners));
        if (!v23)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }

      sub_100008390((uint64_t)&buf[8], *(void **)&buf[16]);
      BOOL v24 = v77;
      if (v77)
      {
        uint64_t v25 = (unint64_t *)&v77->__shared_owners_;
        do
          unint64_t v26 = __ldaxr(v25);
        while (__stlxr(v26 - 1, v25));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }

      sub_100008390((uint64_t)v76, *(void **)&v76[8]);
    }

    if (a4)
    {
      int v27 = (char *)operator new(0xD8uLL);
      __int128 v28 = a3[9];
      *(_OWORD *)(v27 + 152) = a3[8];
      *(_OWORD *)(v27 + 168) = v28;
      __int128 v29 = a3[11];
      *(_OWORD *)(v27 + 184) = a3[10];
      *(_OWORD *)(v27 + 200) = v29;
      __int128 v30 = a3[5];
      *(_OWORD *)(v27 + 88) = a3[4];
      *(_OWORD *)(v27 + 104) = v30;
      __int128 v31 = a3[7];
      *(_OWORD *)(v27 + 120) = a3[6];
      *(_OWORD *)(v27 + 136) = v31;
      __int128 v32 = a3[1];
      *(_OWORD *)(v27 + 24) = *a3;
      *(_OWORD *)(v27 + 40) = v32;
      __int128 v33 = a3[3];
      *(_OWORD *)(v27 + 56) = a3[2];
      *((void *)v27 + 2) = 0LL;
      *(void *)int v27 = off_101835868;
      *((void *)v27 + 1) = 0LL;
      *(_OWORD *)(v27 + sub_1011C52D0(v16 - 72) = v33;
      *(void *)uint64_t buf = v27 + 24;
      *(void *)&uint8_t buf[8] = v27;
      sub_10005F550((uint64_t)&v17[4], (__int128 *)buf);
      uint64_t v34 = *(std::__shared_weak_count **)&buf[8];
      if (*(void *)&buf[8])
      {
        id v35 = (unint64_t *)(*(void *)&buf[8] + 8LL);
        do
          unint64_t v36 = __ldaxr(v35);
        while (__stlxr(v36 - 1, v35));
        if (!v36)
        {
          ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
          std::__shared_weak_count::__release_weak(v34);
        }
      }
    }

    else
    {
      sub_1000F0D38((__n128 *)v17[4].n128_u64);
    }

    if (!v17[3].n128_u64[1]) {
      goto LABEL_83;
    }
    __int16 v37 = sub_1003A275C(a3);
    if (a5 == -1)
    {
      sub_1003A2804((void *)a1, (int *)a2, v37);
    }

    else
    {
      uint64_t v38 = a1 + 88;
      uint64_t v39 = *(void *)(a1 + 88);
      if (!v39) {
        goto LABEL_48;
      }
      uint64_t v40 = a1 + 88;
      do
      {
        int v41 = *(_DWORD *)(v39 + 32);
        BOOL v42 = v41 < a5;
        if (v41 >= a5) {
          int v43 = (uint64_t *)v39;
        }
        else {
          int v43 = (uint64_t *)(v39 + 8);
        }
        if (!v42) {
          uint64_t v40 = v39;
        }
        uint64_t v39 = *v43;
      }

      while (*v43);
      if (v40 == v38 || *(_DWORD *)(v40 + 32) > a5) {
LABEL_48:
      }
        uint64_t v40 = a1 + 88;
      uint64_t v69 = v40;
      unint64_t v44 = v15->n128_u64[0];
      if (!v15->n128_u64[0]) {
        goto LABEL_59;
      }
      int v45 = *a2;
      id v46 = (__n128 *)(a1 + 64);
      do
      {
        int v47 = *(_DWORD *)(v44 + 32);
        BOOL v48 = v47 < v45;
        if (v47 >= v45) {
          char v49 = (unint64_t *)v44;
        }
        else {
          char v49 = (unint64_t *)(v44 + 8);
        }
        if (!v48) {
          id v46 = (__n128 *)v44;
        }
        unint64_t v44 = *v49;
      }

      while (*v49);
      if (v46 == v15 || v45 < (signed __int32)v46[2].n128_u32[0])
      {
LABEL_59:
        double v68 = (__n128 *)(a1 + 64);
LABEL_60:
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_101835718);
        }
        __int128 v50 = (os_log_s *)qword_1019349D8;
        if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
        {
          __int128 v51 = (void *)(a1 + 8);
          (*(void (**)(_BYTE *__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(v76, a1, a2);
          if (v76[23] >= 0) {
            __int128 v52 = v76;
          }
          else {
            __int128 v52 = *(_BYTE **)v76;
          }
          *(_DWORD *)uint64_t buf = 136315650;
          *(void *)&uint8_t buf[4] = v51;
          *(_WORD *)&_BYTE buf[12] = 1024;
          *(_DWORD *)&buf[14] = a5;
          *(_WORD *)&_BYTE buf[18] = 2080;
          *(void *)&buf[20] = v52;
          _os_log_impl( (void *)&_mh_execute_header,  v50,  OS_LOG_TYPE_DEBUG,  "%s; client %d has deregistered, not notifying %s",
            buf,
            0x1Cu);
          if ((v76[23] & 0x80000000) != 0) {
            operator delete(*(void **)v76);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019349D0 != -1) {
            dispatch_once(&qword_1019349D0, &stru_101835718);
          }
          __int128 v53 = (void *)(a1 + 8);
          uint64_t v54 = qword_1019349D8;
          (*(void (**)(void **__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(__p, a1, a2);
          if (v67 >= 0) {
            __int128 v55 = __p;
          }
          else {
            __int128 v55 = (void **)__p[0];
          }
          *(_DWORD *)__int16 v76 = 136315650;
          *(void *)&v76[4] = v53;
          *(_WORD *)&v76[12] = 1024;
          *(_DWORD *)&v76[14] = a5;
          *(_WORD *)&v76[18] = 2080;
          *(void *)&v76[20] = v55;
          __int128 v56 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v54,  2LL,  "%s; client %d has deregistered, not notifying %s",
                          v76,
                          28,
                          v65);
          if (v67 < 0) {
            operator delete(__p[0]);
          }
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLCompanionNotifier_Type::Notification, CLCompanionNotifier_Type::NotificationData, char, CLCompanionNotifier_Type::RegistrationInfo>::notifyClientsWithData(const Notification_T &, const Notif icationData_T &, BOOL, int, BOOL) [Notification_T = CLCompanionNotifier_Type::Notification, NotificationData _T = CLCompanionNotifier_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = CLCompanion Notifier_Type::RegistrationInfo]",  "%s\n",  v56);
          if (v56 != buf) {
            free(v56);
          }
        }

        goto LABEL_83;
      }

      double v68 = v46;
      if (v40 == v38) {
        goto LABEL_60;
      }
      uint64_t v59 = v46[3].n128_i64[0];
      __int128 v57 = v46 + 3;
      __int128 v58 = (__n128 *)v59;
      if (!v59) {
        goto LABEL_60;
      }
      int v60 = *(_DWORD *)(v40 + 32);
      __int128 v61 = v57;
      do
      {
        int v62 = v58[2].n128_i32[0];
        BOOL v63 = v62 < v60;
        if (v62 >= v60) {
          unsigned int v64 = v58;
        }
        else {
          unsigned int v64 = (__n128 *)&v58->n128_i8[8];
        }
        if (!v63) {
          __int128 v61 = v58;
        }
        __int128 v58 = (__n128 *)v64->n128_u64[0];
      }

      while (v64->n128_u64[0]);
      sub_1003A2BD8((_BYTE *)a1, (uint64_t)&v69, (uint64_t)&v68, v37);
    }

void sub_1003A2080( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_activity_scope_state_s state, char a18)
{
}

void sub_1003A20CC(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 108))
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101835718);
    }
    uint64_t v2 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      int v3 = (void *)(a1 + 8);
      *(_DWORD *)uint64_t buf = 136315138;
      uint64_t v34 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "%s; already shutdown; not listing clients",
        buf,
        0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101835718);
      }
      uint64_t v4 = (void *)(a1 + 8);
      int v29 = 136315138;
      __int128 v30 = v4;
      uint64_t v5 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; already shutdown; not listing clients",
                     (const char *)&v29);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLCompanionNotifier_Type::Notification, CLCompanionNotifier_Type::NotificationData, char , CLCompanionNotifier_Type::RegistrationInfo>::listClients() [Notification_T = CLCompanionNotifier_Type::Notific ation, NotificationData_T = CLCompanionNotifier_Type::NotificationData, NotificationInfo_T = char, RegistrationI nfo_T = CLCompanionNotifier_Type::RegistrationInfo]",  "%s\n",  v5);
    }
  }

  else
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101835718);
    }
    uint64_t v6 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      __int128 v7 = (void *)(a1 + 8);
      uint64_t v8 = *(void *)(a1 + 96);
      *(_DWORD *)uint64_t buf = 136315394;
      uint64_t v34 = v7;
      __int16 v35 = 2048;
      v36[0] = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "%s; listing clients, num clients: %zu",
        buf,
        0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101835718);
      }
      uint64_t v25 = (void *)(a1 + 8);
      uint64_t v26 = *(void *)(a1 + 96);
      int v29 = 136315394;
      __int128 v30 = v25;
      __int16 v31 = 2048;
      v32[0] = v26;
      int v27 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; listing clients, num clients: %zu",
                      (const char *)&v29,
                      22);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLCompanionNotifier_Type::Notification, CLCompanionNotifier_Type::NotificationData, char , CLCompanionNotifier_Type::RegistrationInfo>::listClients() [Notification_T = CLCompanionNotifier_Type::Notific ation, NotificationData_T = CLCompanionNotifier_Type::NotificationData, NotificationInfo_T = char, RegistrationI nfo_T = CLCompanionNotifier_Type::RegistrationInfo]",  "%s\n",  v27);
    }

    __int128 v9 = *(void **)(a1 + 80);
    if (v9 != (void *)(a1 + 88))
    {
      __int128 v10 = (void *)(a1 + 8);
      do
      {
        __int128 v11 = (void *)v9[5];
        if (v11 != v9 + 6)
        {
          do
          {
            if (qword_1019349D0 != -1) {
              dispatch_once(&qword_1019349D0, &stru_101835718);
            }
            __int128 v12 = (os_log_s *)qword_1019349D8;
            if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
            {
              id v13 = (void *)(a1 + 8);
              int v14 = *((_DWORD *)v9 + 8);
              int v15 = *((_DWORD *)v11 + 7);
              *(_DWORD *)uint64_t buf = 136315650;
              uint64_t v34 = v13;
              __int16 v35 = 1024;
              LODWORD(v36[0]) = v14;
              WORD2(v36[0]) = 1024;
              *(_DWORD *)((char *)v36 + 6) = v15;
              _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "%s; clients, id: %d, notification: %d",
                buf,
                0x18u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101835718);
              }
              BOOL v19 = (void *)(a1 + 8);
              int v20 = *((_DWORD *)v9 + 8);
              int v21 = *((_DWORD *)v11 + 7);
              int v29 = 136315650;
              __int128 v30 = v19;
              __int16 v31 = 1024;
              LODWORD(v32[0]) = v20;
              WORD2(v32[0]) = 1024;
              *(_DWORD *)((char *)v32 + 6) = v21;
              int v22 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; clients, id: %d, notification: %d",
                              (const char *)&v29,
                              24,
                              v28);
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLCompanionNotifier_Type::Notification, CLCompanionNotifier_Type::NotificationDa ta, char, CLCompanionNotifier_Type::RegistrationInfo>::listClients() [Notification_T = CLCompanionNotifi er_Type::Notification, NotificationData_T = CLCompanionNotifier_Type::NotificationData, NotificationInfo _T = char, RegistrationInfo_T = CLCompanionNotifier_Type::RegistrationInfo]",  "%s\n",  v22);
            }

            signed __int32 v16 = (void *)v11[1];
            if (v16)
            {
              do
              {
                int v17 = v16;
                signed __int32 v16 = (void *)*v16;
              }

              while (v16);
            }

            else
            {
              do
              {
                int v17 = (void *)v11[2];
                BOOL v18 = *v17 == (void)v11;
                __int128 v11 = v17;
              }

              while (!v18);
            }

            __int128 v11 = v17;
          }

          while (v17 != v9 + 6);
        }

        unint64_t v23 = (void *)v9[1];
        if (v23)
        {
          do
          {
            BOOL v24 = v23;
            unint64_t v23 = (void *)*v23;
          }

          while (v23);
        }

        else
        {
          do
          {
            BOOL v24 = (void *)v9[2];
            BOOL v18 = *v24 == (void)v9;
            __int128 v9 = v24;
          }

          while (!v18);
        }

        __int128 v9 = v24;
      }

      while (v24 != (void *)(a1 + 88));
    }
  }

void sub_1003A2678(uint64_t a1)
{
  int v1 = (void *)sub_1003A3600(a1);
  operator delete(v1);
}

void sub_1003A268C(uint64_t a1, int a2, void *a3)
{
  if (v5)
  {
    int v6 = a2;
    (*(void (**)(void, int *, uint64_t, void))(a1 + 24))(0LL, &v6, v5, *(void *)(a1 + 32));
  }

void sub_1003A26D8(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_1003A2704(id a1)
{
  qword_1019346D8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Transport");
}

void sub_1003A2730(id a1)
{
  qword_1019344B8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Motion");
}

CLCppContainer *sub_1003A275C(_OWORD *a1)
{
  uint64_t v2 = operator new(0xC0uLL);
  __int128 v3 = a1[9];
  v2[8] = a1[8];
  v2[9] = v3;
  __int128 v4 = a1[11];
  v2[10] = a1[10];
  v2[11] = v4;
  __int128 v5 = a1[5];
  v2[4] = a1[4];
  v2[5] = v5;
  __int128 v6 = a1[7];
  v2[6] = a1[6];
  v2[7] = v6;
  __int128 v7 = a1[1];
  *uint64_t v2 = *a1;
  v2[1] = v7;
  __int128 v8 = a1[3];
  v2[2] = a1[2];
  v2[3] = v8;
  __int128 v10 = _NSConcreteStackBlock;
  uint64_t v11 = 3221225472LL;
  __int128 v12 = sub_1003A2DA4;
  id v13 = &unk_10181D3D0;
  int v14 = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:");
}

void sub_1003A2804(void *a1, int *a2, void *a3)
{
  if (!*((_BYTE *)a1 + 108))
  {
    __int128 v5 = a1 + 8;
    uint64_t v4 = a1[8];
    if (v4)
    {
      int v8 = *a2;
      __int128 v9 = a1 + 8;
      do
      {
        int v10 = *(_DWORD *)(v4 + 32);
        BOOL v11 = v10 < v8;
        if (v10 >= v8) {
          __int128 v12 = (uint64_t *)v4;
        }
        else {
          __int128 v12 = (uint64_t *)(v4 + 8);
        }
        if (!v11) {
          __int128 v9 = (void *)v4;
        }
        uint64_t v4 = *v12;
      }

      while (*v12);
      if (v9 != v5 && v8 >= *((_DWORD *)v9 + 8))
      {
        __int128 v50 = v9;
        sub_1003A2DB4(a3);
        (*(void (**)(void *, int *, uint64_t, void *))(*a1 + 184LL))(a1, a2, v13, v9 + 10);
        int v14 = (void *)v9[5];
        if (v14 != v9 + 6)
        {
          int v15 = a1 + 11;
          signed __int32 v16 = a1 + 1;
          do
          {
            uint64_t v17 = *v15;
            if (!*v15) {
              goto LABEL_25;
            }
            int v18 = *((_DWORD *)v14 + 8);
            BOOL v19 = a1 + 11;
            do
            {
              int v20 = *(_DWORD *)(v17 + 32);
              BOOL v21 = v20 < v18;
              if (v20 >= v18) {
                int v22 = (uint64_t *)v17;
              }
              else {
                int v22 = (uint64_t *)(v17 + 8);
              }
              if (!v21) {
                BOOL v19 = (uint64_t *)v17;
              }
              uint64_t v17 = *v22;
            }

            while (*v22);
            if (v19 != v15 && (int v23 = *((_DWORD *)v19 + 8), v18 >= v23))
            {
              char v49 = v19;
              sub_1003A2BD8(a1, (uint64_t)&v49, (uint64_t)&v50, a3);
              uint64_t v27 = a1[8];
              if (!v27) {
                return;
              }
              int v28 = *a2;
              int v29 = v5;
              do
              {
                int v30 = *(_DWORD *)(v27 + 32);
                BOOL v31 = v30 < v28;
                if (v30 >= v28) {
                  __int128 v32 = (uint64_t *)v27;
                }
                else {
                  __int128 v32 = (uint64_t *)(v27 + 8);
                }
                if (!v31) {
                  int v29 = (void *)v27;
                }
                uint64_t v27 = *v32;
              }

              while (*v32);
              if (v29 == v5 || v28 < *((_DWORD *)v29 + 8)) {
                return;
              }
              __int128 v50 = v29;
              uint64_t v34 = v29[6];
              int v14 = v29 + 6;
              uint64_t v33 = v34;
              if (v34)
              {
                __int16 v35 = v14;
                uint64_t v36 = v33;
                do
                {
                  int v37 = *(_DWORD *)(v36 + 32);
                  BOOL v38 = v37 < v23;
                  if (v37 >= v23) {
                    uint64_t v39 = (uint64_t *)v36;
                  }
                  else {
                    uint64_t v39 = (uint64_t *)(v36 + 8);
                  }
                  if (!v38) {
                    __int16 v35 = (void *)v36;
                  }
                  uint64_t v36 = *v39;
                }

                while (*v39);
                if (v35 == v14 || v23 < *((_DWORD *)v35 + 8))
                {
                  do
                  {
                    int v40 = *(_DWORD *)(v33 + 32);
                    BOOL v41 = v23 < v40;
                    if (v23 >= v40) {
                      BOOL v42 = (uint64_t *)(v33 + 8);
                    }
                    else {
                      BOOL v42 = (uint64_t *)v33;
                    }
                    if (v41) {
                      int v14 = (void *)v33;
                    }
                    uint64_t v33 = *v42;
                  }

                  while (*v42);
                }

                else
                {
                  int v43 = (void *)v35[1];
                  if (v43)
                  {
                    do
                    {
                      int v14 = v43;
                      int v43 = (void *)*v43;
                    }

                    while (v43);
                  }

                  else
                  {
                    do
                    {
                      int v14 = (void *)v35[2];
                      BOOL v44 = *v14 == (void)v35;
                      __int16 v35 = v14;
                    }

                    while (!v44);
                  }
                }
              }
            }

            else
            {
LABEL_25:
              char v49 = a1 + 11;
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101835718);
              }
              BOOL v24 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                uint64_t v25 = a1 + 1;
                int v26 = *((_DWORD *)v14 + 8);
                *(_DWORD *)uint64_t buf = 136446466;
                __int128 v56 = v25;
                __int16 v57 = 1026;
                int v58 = v26;
                _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_FAULT,  "%{public}s; unknown client %{public}d",
                  buf,
                  0x12u);
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(buf, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_101835718);
                }
                int v45 = a1 + 1;
                int v46 = *((_DWORD *)v14 + 8);
                int v51 = 136446466;
                __int128 v52 = v45;
                __int16 v53 = 1026;
                int v54 = v46;
                LODWORD(v48) = 18;
                int v47 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; unknown client %{public}d",
                                &v51,
                                v48);
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLNotifier<CLCompanionNotifier_Type::Notification, CLCompanionNotifier_Type::NotificationData, ch ar, CLCompanionNotifier_Type::RegistrationInfo>::invokeClientsWithData(const Notification_T &, CLCppCo ntainer *) [Notification_T = CLCompanionNotifier_Type::Notification, NotificationData_T = CLCompanionN otifier_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = CLCompanionNotifier_Ty pe::RegistrationInfo]",  "%s\n",  v47);
              }
            }
          }

          while (v14 != v50 + 6);
        }
      }
    }
  }

_BYTE *sub_1003A2BD8(_BYTE *result, uint64_t a2, uint64_t a3, void *a4)
{
  if (!result[108])
  {
    __int128 v7 = result;
    uint64_t v8 = *(unsigned int *)(*(void *)a2 + 32LL);
    LODWORD(v14) = *(_DWORD *)(*(void *)a3 + 32LL);
    sub_1003A2DB4(a4);
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)a3 + 80LL;
    __int128 v12 = (uint64_t **)(*(void *)a3 + 40LL);
    int v15 = (int *)(*(void *)a2 + 32LL);
    uint64_t v13 = sub_10000C858(v12, v15, (uint64_t)&unk_1012CF090, &v15);
    BOOL result = (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t **))(*(void *)v7 + 192LL))( v7,  v8,  &v14,  v10,  v11,  v13 + 5);
    if ((_DWORD)result) {
      return objc_msgSend( *(id *)(*(void *)a2 + 64),  "onNotification:withData:",  *(unsigned int *)(*(void *)a3 + 32),  a4,  v14);
    }
  }

  return result;
}

uint64_t sub_1003A2CB4(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  *(_DWORD *)a1 = *a2;
  sub_1003A2D10((uint64_t *)(a1 + 8), a3);
  uint64_t v5 = *(void *)(a3 + 32);
  *(void *)(a1 + 32) = *(void *)(a3 + 24);
  *(void *)(a1 + 40) = v5;
  if (v5)
  {
    __int128 v6 = (unint64_t *)(v5 + 8);
    do
      unint64_t v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }

  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a3 + 40);
  return a1;
}

uint64_t *sub_1003A2D10(uint64_t *a1, uint64_t a2)
{
  a1[2] = 0LL;
  a1[1] = 0LL;
  *a1 = (uint64_t)(a1 + 1);
  sub_1000EBD24(a1, *(int **)a2, (int *)(a2 + 8));
  return a1;
}

void sub_1003A2D4C(_Unwind_Exception *a1)
{
}

void sub_1003A2D64(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_101835868;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1003A2D78(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_101835868;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_1003A2DA4(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1) {
    operator delete(v1);
  }
}

void sub_1003A2DB4(void *a1)
{
  uint64_t v2 = objc_opt_class(&OBJC_CLASS___CLCppEncodableDataContainer);
  if ((objc_opt_isKindOfClass(a1, v2) & 1) != 0)
  {
    sub_1003A2E2C(a1);
  }

  else
  {
    uint64_t v3 = objc_opt_class(&OBJC_CLASS___CLCppContainer);
    if ((objc_opt_isKindOfClass(a1, v3) & 1) != 0) {
      sub_1003A31B4(a1);
    }
  }

void sub_1003A2E2C(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2)
  {
    sub_1003A3560((uint64_t)&v7 + 7, a1);
    return;
  }

  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_1018358A8);
    }
    uint64_t v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)uint64_t buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001012E7A5ELL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934470 != -1) {
        dispatch_once(&qword_101934470, &stru_1018358A8);
      }
      LODWORD(v8) = 134218498;
      HIDWORD(v8) = (_DWORD)v2;
      LODWORD(v7) = 32;
      uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly beca use the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  v7,  v8);
LABEL_21:
      __int128 v6 = (uint8_t *)v4;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLCompanionNotifier_Type::NotificationData, Callback = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:241:46)]",  "%s\n",  v4);
      if (v6 != buf) {
        free(v6);
      }
    }
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_1018358A8);
    }
    uint64_t v5 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001012E7A5ELL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934470 != -1) {
        dispatch_once(&qword_101934470, &stru_1018358A8);
      }
      LODWORD(v8) = 134218498;
      HIDWORD(v8) = (_DWORD)v2;
      LODWORD(v7) = 32;
      uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly beca use the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  v7,  v8);
      goto LABEL_21;
    }
  }

id sub_1003A31B4(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return [a1 cppObjectPtr];
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_1018358A8);
    }
    uint64_t v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)uint64_t buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001012E7A5ELL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_1018358A8);
    }
    LODWORD(v8) = 134218498;
    HIDWORD(v8) = (_DWORD)v2;
    uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly becaus e the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_1018358A8);
    }
    __int128 v6 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001012E7A5ELL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_1018358A8);
    }
    LODWORD(v8) = 134218498;
    HIDWORD(v8) = (_DWORD)v2;
    uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly becaus e the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  uint64_t v7 = (uint8_t *)v4;
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLCompanionNotifier_Type::NotificationData, Call back = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:250:46)]",  "%s\n",  v4);
  if (v7 != buf) {
    free(v7);
  }
  return 0LL;
}

void sub_1003A3560(uint64_t a1, void *a2)
{
  if ([a2 cppObjectPtr]
    || !objc_msgSend(objc_msgSend(a2, "compatibilityInfo"), "isEqual:", &off_1018D33B0))
  {
    goto LABEL_5;
  }

  if (objc_msgSend(objc_msgSend(a2, "serialized"), "length") == (id)192)
  {
    objc_msgSend(a2, "setCppObjectPtr:", objc_msgSend(objc_msgSend(a2, "serialized"), "bytes"));
LABEL_5:
    [a2 cppObjectPtr];
    return;
  }

  uint64_t v3 = (void *)sub_1012370D8();
  sub_1003A35D4(v3);
}

void sub_1003A35D4(id a1)
{
  qword_101934478 = (uint64_t)os_log_create("com.apple.locationd.Support", "Support");
}

uint64_t sub_1003A3600(uint64_t a1)
{
  *(void *)a1 = off_1018358D8;
  id v2 = (id *)(a1 + 8);
  [*(id *)(a1 + 16) forget:*(void *)(a1 + 8)];

  [*v2 invalidate];
  *id v2 = 0LL;
  *(void *)(a1 + 16) = 0LL;
  return a1;
}

id sub_1003A3660(void *a1)
{
  uint64_t v2 = objc_opt_class(&OBJC_CLASS___CLCppEncodableDataContainer);
  if ((objc_opt_isKindOfClass(a1, v2) & 1) != 0) {
    return sub_1003A36D8(a1);
  }
  uint64_t v4 = objc_opt_class(&OBJC_CLASS___CLCppContainer);
  if ((objc_opt_isKindOfClass(a1, v4) & 1) != 0) {
    return sub_1003A3A60(a1);
  }
  else {
    return 0LL;
  }
}

id sub_1003A36D8(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return sub_1003A3E0C((uint64_t)&v8 + 7, a1);
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_1018358A8);
    }
    uint64_t v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)uint64_t buf = 134218498;
      id v11 = v2;
      __int16 v12 = 2048;
      uint64_t v13 = 0LL;
      __int16 v14 = 2080;
      unint64_t v15 = 0x8000000101349688LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_1018358A8);
    }
    LODWORD(v9) = 134218498;
    HIDWORD(v9) = (_DWORD)v2;
    LODWORD(v8) = 32;
    uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly becaus e the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v9,  v8,  v9);
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_1018358A8);
    }
    __int128 v6 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134218498;
      id v11 = v2;
      __int16 v12 = 2048;
      uint64_t v13 = 0LL;
      __int16 v14 = 2080;
      unint64_t v15 = 0x8000000101349688LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_1018358A8);
    }
    LODWORD(v9) = 134218498;
    HIDWORD(v9) = (_DWORD)v2;
    LODWORD(v8) = 32;
    uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly becaus e the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v9,  v8,  v9);
  }

  uint64_t v7 = (uint8_t *)v4;
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLCompanionNotifier_Type::RegistrationInfo, Call back = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:241:46)]",  "%s\n",  v4);
  if (v7 != buf) {
    free(v7);
  }
  return 0LL;
}

id sub_1003A3A60(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return [a1 cppObjectPtr];
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_1018358A8);
    }
    uint64_t v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)uint64_t buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x8000000101349688LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_1018358A8);
    }
    LODWORD(v8) = 134218498;
    HIDWORD(v8) = (_DWORD)v2;
    uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly becaus e the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_1018358A8);
    }
    __int128 v6 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x8000000101349688LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_1018358A8);
    }
    LODWORD(v8) = 134218498;
    HIDWORD(v8) = (_DWORD)v2;
    uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly becaus e the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  uint64_t v7 = (uint8_t *)v4;
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLCompanionNotifier_Type::RegistrationInfo, Call back = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:250:46)]",  "%s\n",  v4);
  if (v7 != buf) {
    free(v7);
  }
  return 0LL;
}

id sub_1003A3E0C(uint64_t a1, void *a2)
{
  if ([a2 cppObjectPtr]
    || !objc_msgSend(objc_msgSend(a2, "compatibilityInfo"), "isEqual:", &off_1018D33B0))
  {
    return [a2 cppObjectPtr];
  }

  if (objc_msgSend(objc_msgSend(a2, "serialized"), "length") == (id)8)
  {
    objc_msgSend(a2, "setCppObjectPtr:", objc_msgSend(objc_msgSend(a2, "serialized"), "bytes"));
    return [a2 cppObjectPtr];
  }

  uint64_t v4 = sub_1012370D8();
  return (id)sub_1003A3E80(v4);
}

CLCppContainer *sub_1003A3E80(_OWORD *a1)
{
  id v2 = operator new(0xC0uLL);
  __int128 v3 = a1[9];
  v2[8] = a1[8];
  v2[9] = v3;
  __int128 v4 = a1[11];
  v2[10] = a1[10];
  v2[11] = v4;
  __int128 v5 = a1[5];
  v2[4] = a1[4];
  v2[5] = v5;
  __int128 v6 = a1[7];
  v2[6] = a1[6];
  v2[7] = v6;
  __int128 v7 = a1[1];
  *id v2 = *a1;
  v2[1] = v7;
  __int128 v8 = a1[3];
  v2[2] = a1[2];
  v2[3] = v8;
  id v10 = _NSConcreteStackBlock;
  uint64_t v11 = 3221225472LL;
  uint64_t v12 = sub_1003A3F28;
  __int16 v13 = &unk_10181D3D0;
  unint64_t v14 = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:");
}

void sub_1003A3F28(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1) {
    operator delete(v1);
  }
}

uint64_t sub_1003A3F38()
{
  dword_1019955C0 = 800;
  __cxa_atexit((void (*)(void *))sub_100355650, qword_1019955A8, (void *)&_mh_execute_header);
  sub_1010DDBC0(qword_1019955C8, "DmFp");
  dword_1019955E0 = 200;
  return __cxa_atexit((void (*)(void *))sub_100355650, qword_1019955C8, (void *)&_mh_execute_header);
}

double sub_1003A3FC4(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a1 - 8;
  }
  else {
    uint64_t v2 = 0LL;
  }
  return sub_1003A51DC(v2, a2);
}

BOOL sub_1003A3FD4(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a1 - 8;
  }
  else {
    uint64_t v2 = 0LL;
  }
  return sub_1003A4EE8(v2, a2);
}

double sub_1003A3FE4(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a1 - 8;
  }
  else {
    uint64_t v2 = 0LL;
  }
  return sub_1003A4F3C(v2, a2);
}

BOOL sub_1003A3FF4(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a1 - 8;
  }
  else {
    uint64_t v2 = 0LL;
  }
  if (*(_BYTE *)(a2 + 27)) {
    unsigned int v3 = 2;
  }
  else {
    unsigned int v3 = 3;
  }
  return *(_BYTE *)(a2 + 29) != 0;
}

double sub_1003A4050(uint64_t a1, double *a2)
{
  uint64_t v2 = a1 - 8;
  if (!a1) {
    uint64_t v2 = 0LL;
  }
  *(_DWORD *)(v2 + 160) = 0;
  double result = *a2;
  *(double *)(v2 + 168) = *a2;
  return result;
}

double sub_1003A406C(uint64_t a1)
{
  *(void *)(a1 + 8) = &unk_1018358F0;
  *(void *)(a1 + 16) = 5LL;
  *(_WORD *)(a1 + 24) = 512;
  *(void *)a1 = off_101835978;
  *(void *)&double result = 0x500000000LL;
  *(void *)(a1 + 32) = 0x500000000LL;
  *(_DWORD *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = 0x7FEFFFFFFFFFFFFFLL;
  return result;
}

uint64_t sub_1003A40AC(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v4 = atomic_load((unsigned __int8 *)&qword_101995618);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_101995618))
  {
    *(_OWORD *)uint64_t buf = xmmword_1012E7AC0;
    sub_1002C72A8(qword_101995600, buf, 4uLL);
    __cxa_atexit((void (*)(void *))sub_1002C7328, qword_101995600, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_101995618);
  }

  __int16 v21 = 0;
  *(_OWORD *)int v20 = xmmword_1012E1E90;
  memset(&v20[2], 0, 135);
  __int128 v22 = xmmword_1012E1E90;
  uint64_t v23 = 0LL;
  int v24 = 0;
  v26[0] = 0LL;
  uint64_t v25 = 0LL;
  *(void *)((char *)v26 + 5) = 0LL;
  *(void *)((char *)&v26[1] + 6) = 0LL;
  char v27 = 0;
  memset(&v26[3], 0, 24);
  __int128 v28 = xmmword_1012E1E90;
  uint64_t v29 = 0LL;
  int v30 = 0;
  double v31 = -1.79769313e308;
  int v42 = 0;
  __int128 v32 = 0u;
  __int128 v33 = 0u;
  __int128 v34 = 0u;
  __int128 v35 = 0u;
  __int128 v36 = 0u;
  int v37 = 0;
  __int128 v38 = 0u;
  __int128 v39 = 0u;
  __int128 v40 = 0u;
  memset(v41, 0, sizeof(v41));
  uint64_t v43 = 0LL;
  uint64_t v44 = 0LL;
  unint64_t v45 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v46 = 0LL;
  int v47 = 0;
  uint64_t v53 = 0LL;
  __int16 v54 = 0;
  int v59 = 0;
  int v52 = 0;
  __int128 v51 = 0u;
  __int128 v50 = 0u;
  __int128 v49 = 0u;
  __int128 v48 = 0u;
  __int128 v56 = 0u;
  __int128 v55 = 0u;
  char v57 = 0;
  memset(v58, 0, sizeof(v58));
  unint64_t v60 = 0xFFEFFFFFFFFFFFFFLL;
  __int128 v79 = 0u;
  __int128 v78 = 0u;
  __int128 v77 = 0u;
  __int128 v76 = 0u;
  __int128 v75 = 0u;
  __int128 v74 = 0u;
  __int128 v73 = 0u;
  __int128 v72 = 0u;
  __int128 v71 = 0u;
  __int128 v70 = 0u;
  __int128 v69 = 0u;
  __int128 v68 = 0u;
  __int128 v67 = 0u;
  __int128 v66 = 0u;
  __int128 v65 = 0u;
  __int128 v64 = 0u;
  __int128 v63 = 0u;
  __int128 v62 = 0u;
  __int128 v61 = 0u;
  uint64_t v80 = 0LL;
  unint64_t v81 = 0xFFEFFFFFFFFFFFFFLL;
  __int128 v82 = 0u;
  __int128 v83 = 0u;
  __int128 v84 = 0u;
  __int128 v85 = 0u;
  unint64_t v86 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v87 = 0LL;
  int v88 = 0;
  uint64_t v89 = 0LL;
  char v90 = 0;
  unint64_t v91 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v93 = 0LL;
  uint64_t v92 = 0LL;
  uint64_t v94 = 0x80000000800000LL;
  uint64_t v96 = 0LL;
  uint64_t v95 = 0LL;
  __int128 v97 = xmmword_1012E1EA0;
  uint64_t v98 = 0x80000000800000LL;
  __int128 v99 = 0u;
  __int128 v100 = 0u;
  uint64_t v101 = 0LL;
  unint64_t v102 = 0xFFEFFFFFFFFFFFFFLL;
  __int128 v103 = 0u;
  __int128 v104 = 0u;
  __int128 v105 = 0u;
  __int128 v106 = 0u;
  __int128 v107 = 0u;
  __int128 v108 = 0u;
  int v109 = 0;
  unint64_t v110 = 0xFFEFFFFFFFFFFFFFLL;
  __int16 v111 = 0;
  int v112 = 0;
  *(void *)&__int128 v113 = 0xFFEFFFFFFFFFFFFFLL;
  *((void *)&v113 + 1) = 7LL;
  double v114 = -1.79769313e308;
  char v115 = 0;
  uint64_t v117 = 0LL;
  uint64_t v116 = 0LL;
  uint64_t v118 = 0LL;
  sub_100CDB578((double *)a2, qword_101995600, (uint64_t)v20);
  *(void *)&__int128 v15 = 0LL;
  *((void *)&v15 + 1) = 7LL;
  __int16 v16 = 0;
  if (*(double *)&v113 == -1.79769313e308)
  {
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018359E8);
    }
    __int128 v7 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = *(void *)(a2 + 296);
      *(_DWORD *)uint64_t buf = 134217984;
      *(void *)&uint8_t buf[4] = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Cycling active state model failure to get cycling result, %f",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_1018359E8);
      }
      uint64_t v13 = *(void *)(a2 + 296);
      *(_DWORD *)uint64_t v17 = 134217984;
      *(void *)&v17[4] = v13;
      unint64_t v14 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Cycling active state model failure to get cycling result, %f",  COERCE_DOUBLE(v17));
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual CLWorkoutPredictor_Type::WorkoutActiveStateEvent CLOutdoorCyclingActiveStateModel::update(const CLWorkou tPredictorInputs &)",  "%s\n",  v14);
    }
  }

  else
  {
    char v5 = 0;
    __int128 v15 = v113;
    BOOL v6 = v114 != -1.79769313e308;
    LOBYTE(v16) = v6;
    if (v31 != -1.79769313e308 && v114 != -1.79769313e308)
    {
      char v5 = 0;
      if (*(float *)&v117 > 0.5 && *(double *)&v34 >= 0.44704 && DWORD2(v15) == 5)
      {
        DWORD2(v15) = 6;
        char v5 = 1;
      }
    }

    HIBYTE(v16) = v5;
  }

  if (!*(_WORD *)(a1 + 34)) {
    goto LABEL_21;
  }
  unint64_t v9 = *(unsigned __int16 *)(a1 + 34) + (unint64_t)*(unsigned __int16 *)(a1 + 32) - 1;
  unint64_t v10 = *(unsigned int *)(a1 + 36);
  if (v9 < v10) {
    unint64_t v10 = 0LL;
  }
  if (*(double *)&v15 > *(double *)(a1 + 32 + 24 * (v9 - v10) + 8)) {
LABEL_21:
  }
    sub_1002E5BC0((unsigned __int16 *)(a1 + 32), &v15);
  sub_1003A4678(a1, (uint64_t)v20, (void *)a2, (uint64_t)v17);
  uint64_t v11 = (__int128 *)(a2 + 296);
  *(void *)uint64_t buf = *(void *)v11;
  *(_OWORD *)&uint8_t buf[8] = *(_OWORD *)v17;
  *(void *)&buf[23] = *(void *)&v17[15];
  uint64_t v19 = a2;
  sub_100CCCC8C(a1 + 8, 1, (uint64_t)buf);
  return *(void *)(a1 + 160);
}

void sub_1003A4658(_Unwind_Exception *a1)
{
}

uint64_t sub_1003A4678@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  unsigned __int8 v4 = a3;
  uint64_t v5 = a2;
  *(void *)a4 = 0LL;
  *(void *)(a4 + 8) = 0LL;
  *(void *)(a4 + 15) = 0LL;
  if (*(_WORD *)(a1 + 34))
  {
    uint64_t v6 = 0LL;
    int v48 = 0;
    int v7 = 0;
    int v8 = 0;
    unsigned int v9 = 0;
    int v10 = 0;
    unint64_t v11 = 0LL;
    int v12 = 0;
    uint64_t v46 = a1;
    uint64_t v13 = (unsigned __int16 *)(a1 + 32);
    do
    {
      unsigned int v14 = *(_DWORD *)(sub_1003A4A00(v13, v11) + 8);
      int v15 = *(unsigned __int8 *)(sub_1003A4A00(v13, v11) + 16);
      a1 = sub_1003A4A00(v13, v11);
      v12 += *(unsigned __int8 *)(a1 + 17);
      BOOL v17 = v14 >= 2 && v14 != 14 && v14 - 9 >= 2;
      int v18 = !v17;
      if (!v17) {
        ++v8;
      }
      *(_DWORD *)a4 = v12;
      *(_DWORD *)(a4 + 4) = v8;
      if (!v14) {
        int v18 = 0;
      }
      BOOL v20 = v14 == 7 && v15 != 0;
      int v21 = (v14 & 0xFFFFFFFD) == 4 || v20;
      v7 += v21;
      int v22 = v48;
      if (!v15) {
        int v22 = v48 + 1;
      }
      *(_DWORD *)(a4 + 8) = v7;
      *(_DWORD *)(a4 + 12) = v22;
      int v48 = v22;
      unint64_t v23 = *(unsigned __int16 *)(v46 + 34);
      if (v6 + v23 <= 2 && v14 == 11) {
        *(_BYTE *)(a4 + 16) = 1;
      }
      v9 += v18;
      v10 += v15;
      ++v11;
      --v6;
    }

    while (v11 < v23);
    if (v10)
    {
      BOOL v24 = 1;
      unsigned __int8 v4 = a3;
      uint64_t v5 = a2;
      goto LABEL_41;
    }

    unsigned __int8 v4 = a3;
    uint64_t v5 = a2;
  }

  else
  {
    unsigned int v9 = 0;
  }

  BOOL v24 = *(double *)(v5 + 288) != -1.79769313e308 && *(double *)(v5 + 328) > 2.2352
     || *(double *)(v5 + 1344) != -1.79769313e308 && *(float *)(v5 + 1376) < 3.0;
LABEL_41:
  *(_BYTE *)(a4 + 22) = v24;
  BOOL v25 = *(double *)(v5 + 168) != -1.79769313e308;
  if (v9 >= 3) {
    BOOL v25 = 0;
  }
  *(_BYTE *)(a4 + 17) = v25;
  uint64_t v26 = sub_1003A4BFC(a1, v5, v4);
  int v28 = v27;
  uint64_t result = sub_100BE0E80(v4, v5);
  unsigned int v30 = result;
  double v31 = *(double *)(v5 + 288);
  if (v31 == -1.79769313e308)
  {
    double v31 = -1.79769313e308;
  }

  else
  {
    uint64_t result = 0LL;
    double v32 = *(double *)(v5 + 328);
    if (SHIDWORD(v26) >= 4 && v32 < 0.44704)
    {
      uint64_t result = sub_10006419C(v30);
      double v32 = *(double *)(v5 + 328);
      double v31 = *(double *)(v5 + 288);
    }

    *(_BYTE *)(a4 + 18) = result;
    BOOL v34 = v32 >= 0.44704 && v28 > 3;
    *(_BYTE *)(a4 + 19) = v34;
  }

  if (*(double *)(v5 + 1344) != -1.79769313e308 && *(double *)(v5 + 1328) != -1.79769313e308 && v31 != -1.79769313e308)
  {
    uint64_t result = 0LL;
    unsigned int v37 = *(_DWORD *)(v5 + 1336);
    BOOL v39 = v37 - 9 > 1 && v37 != 14 && v37 > 1;
    float v40 = *(float *)(v5 + 1364);
    if (!v39 && v40 <= 0.1)
    {
      uint64_t result = 0LL;
      if (*(double *)(v5 + 328) == 0.0 && (int)v26 >= 3)
      {
        uint64_t result = sub_10006419C(v30);
        unsigned int v37 = *(_DWORD *)(v5 + 1336);
        float v40 = *(float *)(v5 + 1364);
      }
    }

    *(_BYTE *)(a4 + 20) = result;
    BOOL v41 = (v37 & 0xFFFFFFFD) == 4 || v40 > 0.5 && v37 == 7;
    BOOL v43 = 0;
    if (v41 && v40 > 0.1) {
      BOOL v43 = *(double *)(v5 + 328) > 2.2352;
    }
    *(_BYTE *)(a4 + 21) = v43;
  }

  return result;
}

uint64_t sub_1003A49EC(uint64_t result)
{
  *(_DWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 160) = 0;
  *(void *)(result + 168) = 0x7FEFFFFFFFFFFFFFLL;
  return result;
}

uint64_t sub_1003A4A00(unsigned __int16 *a1, unint64_t a2)
{
  if (*((unsigned int *)a1 + 1) <= a2)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101835A08);
    }
    int v7 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      int v8 = *((_DWORD *)a1 + 1);
      *(_DWORD *)uint64_t buf = 134218240;
      unint64_t v16 = a2;
      __int16 v17 = 1024;
      int v18 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "Assertion failed: i < fCapacity, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/CMQueue.h, line 2 33,i,%zu,capacity,%u.",  buf,  0x12u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101835A08);
      }
      int v9 = *((_DWORD *)a1 + 1);
      int v11 = 134218240;
      unint64_t v12 = a2;
      __int16 v13 = 1024;
      int v14 = v9;
      int v10 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assertion failed: i < fCapacity, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/CMQ ueue.h, line 233,i,%zu,capacity,%u.",  (size_t)&v11,  18);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "const T &CMQueue<CLOutdoorCyclingActiveStateModel::CycleStateResultForPauseResume>::operator[](const size_t) con st [T = CLOutdoorCyclingActiveStateModel::CycleStateResultForPauseResume]",  "%s\n",  v10);
    }
  }

  unint64_t v4 = *a1 + a2;
  unint64_t v5 = *((unsigned int *)a1 + 1);
  if (v4 < v5) {
    unint64_t v5 = 0LL;
  }
  return (uint64_t)&a1[12 * (v4 - v5) + 4];
}

uint64_t sub_1003A4BFC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v10 = 0LL;
  int v11 = 0;
  if (*(double *)(a2 + 288) != -1.79769313e308)
  {
    double Current = CFAbsoluteTimeGetCurrent();
    unint64_t v5 = (void *)(*(uint64_t (**)(void))(*(void *)*a3 + 16LL))(*a3);
    uint64_t v6 = (double *)operator new(0x20uLL);
    *(void *)uint64_t v6 = &off_101835A38;
    v6[1] = Current + -5.0;
    _DWORD v6[2] = Current;
    *((void *)v6 + 3) = &v10;
    __int16 v13 = v6;
    sub_1003A4D34(v5, (uint64_t)v12);
    int v7 = v13;
    if (v13 == (double *)v12)
    {
      uint64_t v8 = 4LL;
      int v7 = (double *)v12;
      goto LABEL_6;
    }

    if (v13)
    {
      uint64_t v8 = 5LL;
LABEL_6:
      (*(void (**)(void))(*(void *)v7 + 8 * v8))();
    }
  }

  return v10;
}

void sub_1003A4CFC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, char *a15)
{
  __int16 v17 = a15;
  if (a15 == v15)
  {
    uint64_t v18 = 4LL;
    __int16 v17 = &a12;
  }

  else
  {
    if (!a15) {
      goto LABEL_6;
    }
    uint64_t v18 = 5LL;
  }

  (*(void (**)(void))(*(void *)v17 + 8 * v18))();
LABEL_6:
  _Unwind_Resume(exception_object);
}

void *sub_1003A4D34(void *result, uint64_t a2)
{
  uint64_t v2 = result[7];
  if (!v2) {
    return result;
  }
  unint64_t v3 = result[6];
  uint64_t v4 = v3 + v2;
  uint64_t v5 = ((v3 + v2) * (unsigned __int128)0x8618618618618619LL) >> 64;
  unint64_t v6 = (v5 + ((unint64_t)(v4 - v5) >> 1)) >> 4;
  uint64_t v7 = result[3];
  if (result[4] == v7)
  {
    unint64_t v10 = 0LL;
    uint64_t v15 = v7 + 8 * v6;
    uint64_t v16 = 0LL;
    uint64_t v17 = v15;
    uint64_t v18 = 0LL;
    int v9 = (void *)(v7 + 8 * (v3 / 0x15));
  }

  else
  {
    uint64_t v8 = *(void *)(v7 + 8 * v6);
    uint64_t v15 = v7 + 8 * v6;
    uint64_t v16 = v8 + 192 * (v4 - 21 * v6);
    uint64_t v17 = v15;
    uint64_t v18 = v16;
    int v9 = (void *)(v7 + 8 * (v3 / 0x15));
    unint64_t v10 = *v9 + 192 * (v3 % 0x15);
  }

  v14[0] = v9;
  v14[1] = v10;
  _DWORD v14[2] = v9;
  v14[3] = v10;
  sub_10001A504((uint64_t)v19, a2);
  sub_1003A54F4((uint64_t)&v15, (uint64_t)v14, (uint64_t)v19, (uint64_t)v21);
  int v11 = v22;
  if (v22 == v21)
  {
    uint64_t v12 = 4LL;
    int v11 = v21;
    goto LABEL_9;
  }

  if (v22)
  {
    uint64_t v12 = 5LL;
LABEL_9:
    (*(void (**)(void))(*v11 + 8 * v12))();
  }

  uint64_t result = v20;
  if (v20 == v19)
  {
    uint64_t v13 = 4LL;
    uint64_t result = v19;
  }

  else
  {
    if (!v20) {
      return result;
    }
    uint64_t v13 = 5LL;
  }

  return (void *)(*(uint64_t (**)(void))(*result + 8 * v13))();
}

void sub_1003A4EA4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, char *a21)
{
  int v22 = a21;
  if (a21 == &a18)
  {
    uint64_t v23 = 4LL;
    int v22 = &a18;
  }

  else
  {
    if (!a21) {
      goto LABEL_6;
    }
    uint64_t v23 = 5LL;
  }

  (*(void (**)(void))(*(void *)v22 + 8 * v23))();
LABEL_6:
  _Unwind_Resume(exception_object);
}

BOOL sub_1003A4EE8(uint64_t a1, uint64_t a2)
{
  return *(unsigned __int16 *)(a1 + 34) >= 3u
      && (*(int *)(a2 + 12) > 2 || *(_BYTE *)(a2 + 28) || *(_BYTE *)(a2 + 26))
      && *(int *)(a2 + 20) >= 1
      && !*(_BYTE *)(a2 + 24)
      && *(_BYTE *)(a2 + 25) == 0;
}

double sub_1003A4F3C(uint64_t a1, uint64_t a2)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018359E8);
  }
  uint64_t v4 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = *(unsigned __int8 *)(a2 + 28);
    int v6 = *(unsigned __int8 *)(a2 + 26);
    int v7 = *(_DWORD *)(a2 + 8);
    int v8 = *(_DWORD *)(a2 + 12);
    sub_100BE1028(*(void **)(a2 + 32), (std::string *)&__p);
    int v9 = (v26 & 0x8000) == 0 ? &__p : (void **)__p;
    *(_DWORD *)uint64_t buf = 67110146;
    int v30 = v8;
    __int16 v31 = 1024;
    int v32 = v5;
    __int16 v33 = 1024;
    int v34 = v6;
    __int16 v35 = 1024;
    int v36 = v7;
    __int16 v37 = 2080;
    __int128 v38 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "CLOutdoorCyclingActiveStateModel,pausing,nominalPauseStates,%d,fastPauseWithTier1Prob,%d,pauseHistGPSOverride,%d,c ountTier1Override,%d,%s",  buf,  0x24u);
    if (SBYTE1(v26) < 0) {
      operator delete(__p);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018359E8);
    }
    uint64_t v11 = qword_101934688;
    int v12 = *(unsigned __int8 *)(a2 + 28);
    int v13 = *(unsigned __int8 *)(a2 + 26);
    int v14 = *(_DWORD *)(a2 + 8);
    int v15 = *(_DWORD *)(a2 + 12);
    sub_100BE1028(*(void **)(a2 + 32), &v19);
    if ((v19.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v16 = &v19;
    }
    else {
      uint64_t v16 = (std::string *)v19.__r_.__value_.__r.__words[0];
    }
    LODWORD(__p) = 67110146;
    HIDWORD(__p) = v15;
    __int16 v21 = 1024;
    int v22 = v12;
    __int16 v23 = 1024;
    int v24 = v13;
    __int16 v25 = 1024;
    int v26 = v14;
    __int16 v27 = 2080;
    int v28 = v16;
    uint64_t v17 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v11,  0LL,  "CLOutdoorCyclingActiveStateModel,pausing,nominalPauseStates,%d,fastPauseWithTier1Prob,%d,pauseHistGP SOverride,%d,countTier1Override,%d,%s",  &__p,  36,  v18,  LODWORD(v19.__r_.__value_.__l.__data_),  (const char *)v19.__r_.__value_.__l.__size_);
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLOutdoorCyclingActiveStateModel::doPause(const ETick *)", "%s\n", v17);
  }

  *(_DWORD *)(a1 + 160) = 1;
  double result = *(double *)a2;
  *(void *)(a1 + 168) = *(void *)a2;
  *(_DWORD *)(a1 + 32) = 0;
  return result;
}

double sub_1003A51DC(uint64_t a1, uint64_t a2)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018359E8);
  }
  uint64_t v4 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = *(_DWORD *)(a2 + 16);
    int v6 = *(unsigned __int8 *)(a2 + 29);
    int v7 = *(unsigned __int8 *)(a2 + 27);
    int v8 = *(_DWORD *)(a2 + 8);
    sub_100BE1028(*(void **)(a2 + 32), (std::string *)&__p);
    int v9 = (v26 & 0x8000) == 0 ? &__p : (void **)__p;
    *(_DWORD *)uint64_t buf = 67110146;
    int v30 = v5;
    __int16 v31 = 1024;
    int v32 = v6;
    __int16 v33 = 1024;
    int v34 = v7;
    __int16 v35 = 1024;
    int v36 = v8;
    __int16 v37 = 2080;
    __int128 v38 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "CLOutdoorCyclingActiveStateModel,resuming,nominalResumeStates,%d,fastResumeWithTier1Prob,%d,resumeHistGPSOverride, %d,countTier1Override,%d,%s",  buf,  0x24u);
    if (SBYTE1(v26) < 0) {
      operator delete(__p);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018359E8);
    }
    uint64_t v11 = qword_101934688;
    int v12 = *(_DWORD *)(a2 + 16);
    int v13 = *(unsigned __int8 *)(a2 + 29);
    int v14 = *(unsigned __int8 *)(a2 + 27);
    int v15 = *(_DWORD *)(a2 + 8);
    sub_100BE1028(*(void **)(a2 + 32), &v19);
    if ((v19.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v16 = &v19;
    }
    else {
      uint64_t v16 = (std::string *)v19.__r_.__value_.__r.__words[0];
    }
    LODWORD(__p) = 67110146;
    HIDWORD(__p) = v12;
    __int16 v21 = 1024;
    int v22 = v13;
    __int16 v23 = 1024;
    int v24 = v14;
    __int16 v25 = 1024;
    int v26 = v15;
    __int16 v27 = 2080;
    int v28 = v16;
    uint64_t v17 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v11,  0LL,  "CLOutdoorCyclingActiveStateModel,resuming,nominalResumeStates,%d,fastResumeWithTier1Prob,%d,resumeHi stGPSOverride,%d,countTier1Override,%d,%s",  &__p,  36,  v18,  LODWORD(v19.__r_.__value_.__l.__data_),  (const char *)v19.__r_.__value_.__l.__size_);
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLOutdoorCyclingActiveStateModel::doResume(const ETick *)", "%s\n", v17);
  }

  *(_DWORD *)(a1 + 160) = 2;
  double result = *(double *)a2;
  *(void *)(a1 + 168) = *(void *)a2;
  *(_DWORD *)(a1 + 32) = 0;
  return result;
}

uint64_t sub_1003A5484()
{
  return 257LL;
}

void *sub_1003A548C(void *result)
{
  *double result = off_101835978;
  return result;
}

void sub_1003A549C(id a1)
{
  qword_101934688 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Workout");
}

void sub_1003A54C8(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

uint64_t sub_1003A54F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 24);
  if (v6 != *(void *)(a2 + 24))
  {
    int v9 = *(void **)(a1 + 16);
    do
    {
      if (v6 == *v9) {
        uint64_t v6 = *(v9 - 1) + 4032LL;
      }
      uint64_t v10 = *(void *)(a3 + 24);
      if (!v10) {
        sub_100008BDC();
      }
      (*(void (**)(uint64_t, uint64_t))(*(void *)v10 + 48LL))(v10, v6 - 192);
      int v9 = *(void **)(a1 + 16);
      uint64_t v11 = *(void *)(a1 + 24);
      if (v11 == *v9)
      {
        *(void *)(a1 + 16) = v9 - 1;
        uint64_t v11 = *--v9 + 4032LL;
      }

      uint64_t v6 = v11 - 192;
      *(void *)(a1 + 24) = v6;
    }

    while (v6 != *(void *)(a2 + 24));
  }

  return sub_1003A55A8(a4, a3);
}

uint64_t sub_1003A55A8(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = (void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(*(void *)*v3 + 24LL))(*v3, a1);
      return a1;
    }

    *(void *)(a1 + 24) = v4;
  }

  else
  {
    unint64_t v3 = (void *)(a1 + 24);
  }

  *unint64_t v3 = 0LL;
  return a1;
}

__n128 sub_1003A5614(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x20uLL);
  *(void *)uint64_t v2 = &off_101835A38;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((void *)v2 + 3) = *(void *)(a1 + 24);
  return result;
}

__n128 sub_1003A5654(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &off_101835A38;
  __n128 result = *(__n128 *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_1003A567C(uint64_t result, double *a2)
{
  double v2 = *a2;
  if (*a2 >= *(double *)(result + 8))
  {
    double v3 = *(double *)(result + 16);
    double v4 = a2[5];
    if (v2 <= v3 && v4 == 0.0) {
      ++**(_DWORD **)(result + 24);
    }
    if (v2 <= v3)
    {
      if (v4 >= 0.0 && v4 < 0.44704) {
        ++*(_DWORD *)(*(void *)(result + 24) + 4LL);
      }
      if (a2[5] >= 0.44704) {
        ++*(_DWORD *)(*(void *)(result + 24) + 8LL);
      }
    }
  }

  return result;
}

uint64_t sub_1003A5708(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_1003A5744()
{
}

void sub_1003A5750()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  159,  "handleSqlErrorCode_SQLITE_ERROR");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003A5970()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  159,  "handleSqlErrorCode_SQLITE_INTERNAL");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003A5B90()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  159,  "handleSqlErrorCode_SQLITE_PERM");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003A5DB0()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  159,  "handleSqlErrorCode_SQLITE_ABORT");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003A5FD0()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  159,  "handleSqlErrorCode_SQLITE_BUSY");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003A61F0()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  159,  "handleSqlErrorCode_SQLITE_LOCKED");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003A6410()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  159,  "handleSqlErrorCode_SQLITE_NOMEM");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003A6630()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  159,  "handleSqlErrorCode_SQLITE_READONLY");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003A6850()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  159,  "handleSqlErrorCode_SQLITE_INTERRUPT");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003A6A70()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  159,  "handleSqlErrorCode_SQLITE_IOERR");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003A6C90()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  159,  "handleSqlErrorCode_SQLITE_CORRUPT");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003A6EB0()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  159,  "handleSqlErrorCode_SQLITE_NOTFOUND");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003A70D0()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  159,  "handleSqlErrorCode_SQLITE_FULL");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003A72F0()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  159,  "handleSqlErrorCode_SQLITE_CANTOPEN");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003A7510()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  159,  "handleSqlErrorCode_SQLITE_PROTOCOL");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003A7730()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  159,  "handleSqlErrorCode_SQLITE_EMPTY");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003A7950()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  159,  "handleSqlErrorCode_SQLITE_SCHEMA");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003A7B70()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  159,  "handleSqlErrorCode_SQLITE_TOOBIG");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003A7D90()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  159,  "handleSqlErrorCode_SQLITE_CONSTRAINT");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003A7FB0()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  159,  "handleSqlErrorCode_SQLITE_MISMATCH");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003A81D0()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  159,  "handleSqlErrorCode_SQLITE_MISUSE");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003A83F0()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  159,  "handleSqlErrorCode_SQLITE_NOLFS");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003A8610()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  159,  "handleSqlErrorCode_SQLITE_AUTH");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003A8830()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  159,  "handleSqlErrorCode_SQLITE_FORMAT");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003A8A50()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  159,  "handleSqlErrorCode_SQLITE_RANGE");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003A8C70()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  159,  "handleSqlErrorCode_SQLITE_NOTADB");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003A8E90()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  159,  "handleSqlErrorCode_SQLITE_NOTICE");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003A90B0()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  159,  "handleSqlErrorCode_SQLITE_WARNING");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003A92D0()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  159,  "handleSqlErrorCode_SQLITE_ROW");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003A94F0()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  159,  "handleSqlErrorCode_SQLITE_DONE");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003A9710()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_ERROR_MISSING_COLLSEQ");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003A9930()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_ERROR_RETRY");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003A9B50()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_ERROR_SNAPSHOT");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003A9D70()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_IOERR_READ");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003A9F90()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_IOERR_SHORT_READ");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003AA1B0()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_IOERR_WRITE");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003AA3D0()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_IOERR_FSYNC");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003AA5F0()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_IOERR_DIR_FSYNC");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003AA810()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_IOERR_TRUNCATE");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003AAA30()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_IOERR_FSTAT");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003AAC50()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_IOERR_UNLOCK");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003AAE70()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_IOERR_RDLOCK");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003AB090()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_IOERR_DELETE");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003AB2B0()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_IOERR_BLOCKED");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003AB4D0()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_IOERR_NOMEM");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003AB6F0()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_IOERR_ACCESS");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003AB910()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_IOERR_CHECKRESERVEDLOCK");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003ABB30()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_IOERR_LOCK");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003ABD50()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_IOERR_CLOSE");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003ABF70()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_IOERR_DIR_CLOSE");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003AC190()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_IOERR_SHMOPEN");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003AC3B0()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_IOERR_SHMSIZE");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003AC5D0()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_IOERR_SHMLOCK");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003AC7F0()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_IOERR_SHMMAP");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003ACA10()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_IOERR_SEEK");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003ACC30()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_IOERR_DELETE_NOENT");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003ACE50()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_IOERR_MMAP");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003AD070()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_IOERR_GETTEMPPATH");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003AD290()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_IOERR_CONVPATH");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003AD4B0()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_IOERR_VNODE");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003AD6D0()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_IOERR_AUTH");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003AD8F0()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_IOERR_BEGIN_ATOMIC");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003ADB10()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_IOERR_COMMIT_ATOMIC");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003ADD30()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_IOERR_ROLLBACK_ATOMIC");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003ADF50()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_LOCKED_SHAREDCACHE");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003AE170()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_LOCKED_VTAB");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003AE390()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_BUSY_RECOVERY");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003AE5B0()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_BUSY_SNAPSHOT");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003AE7D0()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_CANTOPEN_NOTEMPDIR");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003AE9F0()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_CANTOPEN_ISDIR");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003AEC10()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_CANTOPEN_FULLPATH");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003AEE30()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_CANTOPEN_CONVPATH");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003AF050()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_CANTOPEN_DIRTYWAL");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003AF270()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_CORRUPT_VTAB");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003AF490()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_CORRUPT_SEQUENCE");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003AF6B0()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_READONLY_RECOVERY");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003AF8D0()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_READONLY_CANTLOCK");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003AFAF0()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_READONLY_ROLLBACK");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003AFD10()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_READONLY_DBMOVED");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003AFF30()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_READONLY_CANTINIT");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003B0150()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_READONLY_DIRECTORY");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003B0370()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_ABORT_ROLLBACK");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003B0590()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_CONSTRAINT_CHECK");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003B07B0()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_CONSTRAINT_COMMITHOOK");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003B09D0()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_CONSTRAINT_FOREIGNKEY");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003B0BF0()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_CONSTRAINT_FUNCTION");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003B0E10()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_CONSTRAINT_NOTNULL");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003B1030()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_CONSTRAINT_PRIMARYKEY");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003B1250()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_CONSTRAINT_TRIGGER");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003B1470()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_CONSTRAINT_UNIQUE");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003B1690()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_CONSTRAINT_VTAB");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003B18B0()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_CONSTRAINT_ROWID");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003B1AD0()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_NOTICE_RECOVER_WAL");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003B1CF0()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_NOTICE_RECOVER_ROLLBACK");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003B1F10()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_WARNING_AUTOINDEX");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003B2130()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_AUTH_USER");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003B2350()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  160,  "handleSqlErrorCode_SQLITE_OK_LOAD_PERMANENTLY");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003B2570()
{
  if (qword_101934A20 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unsigned __int8 v0 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v1 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v1,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to trace sqlite statement creating failures",  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    double v2 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v4 = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2082;
      int v8 = "assert";
      __int16 v9 = 2081;
      uint64_t v10 = "0";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to trace sqlite statement creating failures, event:%{public, loca tion:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteErrorHandlers.h",  161,  "handleSqlErrorCode_UNDEFINED");
LABEL_11:
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }

void sub_1003B2794(uint64_t a1, sqlite3_stmt *a2, int a3)
{
  int v6 = sqlite3_stmt_status(a2, 1, a3);
  int v7 = sqlite3_stmt_status(a2, 2, a3);
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101835C70);
  }
  int v8 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    __int16 v9 = sqlite3_sql(a2);
    uint64_t v10 = (void *)(a1 + 96);
    *(_DWORD *)uint64_t buf = 136315906;
    int v24 = v9;
    __int16 v25 = 1024;
    int v26 = v6;
    __int16 v27 = 1024;
    int v28 = v7;
    __int16 v29 = 2080;
    int v30 = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "Query: %s, full table scans: %d, sorts: %d, File: %s",  buf,  0x22u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101835C70);
    }
    uint64_t v11 = qword_101934A78;
    int v12 = sqlite3_sql(a2);
    int v13 = (void *)(a1 + 96);
    int v15 = 136315906;
    uint64_t v16 = v12;
    __int16 v17 = 1024;
    int v18 = v6;
    __int16 v19 = 1024;
    int v20 = v7;
    __int16 v21 = 2080;
    int v22 = v13;
    int v14 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v11,  2LL,  "Query: %s, full table scans: %d, sorts: %d, File: %s",  (const char *)&v15,  34);
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLSqliteDatabase::logStmtStatus(sqlite3_stmt *, BOOL)", "%s\n", v14);
  }

void sub_1003B29E4(uint64_t a1)
{
  *(_DWORD *)(a1 + 120) = 0;
  memset(&__p, 0, sizeof(__p));
  if (qword_101934A20 != -1) {
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }
  double v2 = (os_log_s *)off_101934A28;
  if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
  {
    double v3 = (void *)(a1 + 64);
    int v4 = *(_DWORD *)(a1 + 48);
    int v5 = *(_DWORD *)(a1 + 52);
    *(_DWORD *)uint64_t buf = 68289794;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    *(_WORD *)&_BYTE buf[18] = 2082;
    *(void *)&buf[20] = v3;
    __int16 v57 = 1026;
    *(_DWORD *)int v58 = v4;
    *(_WORD *)&v58[4] = 1026;
    *(_DWORD *)&v58[6] = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:open, path:%{public, location:escape_only}s, protection:%{public}d, persistence:%{public}d}",  buf,  0x28u);
  }

  else {
    uint64_t v6 = *(unsigned __int8 *)(a1 + 87);
  }
  int v7 = (uint64_t *)(a1 + 48);
  int v8 = (__int128 *)(a1 + 64);
  __int16 v9 = (void **)(a1 + 96);
  if (!v6)
  {
    if (*(char *)(a1 + 119) < 0)
    {
      if (*(void *)(a1 + 104))
      {
LABEL_15:
        uint64_t v12 = sub_100AF647C();
        uint64_t v42 = *v7;
        __int16 v43 = *(_WORD *)(a1 + 56);
        uint64_t v11 = (void **)&v44;
        if (*(char *)(a1 + 87) < 0)
        {
          sub_1010DD48C(&v44, *(void **)(a1 + 64), *(void *)(a1 + 72));
        }

        else
        {
          __int128 v44 = *v8;
          uint64_t v45 = *(void *)(a1 + 80);
        }

        uint64_t v46 = *(void *)(a1 + 88);
        int v13 = sub_100AF7D9C(v12, &v42, (std::string *)(a1 + 96), (uint64_t)&v53);
        int v52 = v13;
        if (SHIBYTE(v45) < 0) {
          goto LABEL_52;
        }
        goto LABEL_19;
      }
    }

    else if (*(_BYTE *)(a1 + 119))
    {
      goto LABEL_15;
    }

    uint64_t v19 = sub_100AF647C();
    uint64_t v37 = *v7;
    __int16 v38 = *(_WORD *)(a1 + 56);
    uint64_t v11 = (void **)&v39;
    if (*(char *)(a1 + 87) < 0)
    {
      sub_1010DD48C(&v39, *(void **)(a1 + 64), *(void *)(a1 + 72));
    }

    else
    {
      __int128 v39 = *v8;
      uint64_t v40 = *(void *)(a1 + 80);
    }

    uint64_t v41 = *(void *)(a1 + 88);
    int v13 = sub_100AF7CA4(v19, (uint64_t)&v37, (uint64_t)&v53);
    int v52 = v13;
    if (SHIBYTE(v40) < 0) {
      goto LABEL_52;
    }
LABEL_19:
    if (v13) {
      goto LABEL_20;
    }
    goto LABEL_53;
  }

  std::string::operator=((std::string *)(a1 + 96), (const std::string *)(a1 + 64));
  uint64_t v10 = sub_100AF647C();
  uint64_t v47 = *v7;
  __int16 v48 = *(_WORD *)(a1 + 56);
  uint64_t v11 = (void **)&v49;
  if (*(char *)(a1 + 87) < 0)
  {
    sub_1010DD48C(&v49, *(void **)(a1 + 64), *(void *)(a1 + 72));
  }

  else
  {
    __int128 v49 = *v8;
    uint64_t v50 = *(void *)(a1 + 80);
  }

  uint64_t v51 = *(void *)(a1 + 88);
  int v13 = sub_100AF7D9C(v10, &v47, (std::string *)(a1 + 64), (uint64_t)&v53);
  int v52 = v13;
  if ((SHIBYTE(v50) & 0x80000000) == 0) {
    goto LABEL_19;
  }
LABEL_52:
  operator delete(*v11);
  if (v13)
  {
LABEL_20:
    if (*(char *)(a1 + 119) < 0)
    {
      if (!*(void *)(a1 + 104))
      {
LABEL_24:
        sub_1003B50F0((gid_t *)(a1 + 48), (std::string *)buf);
        *(_OWORD *)__int16 v9 = *(_OWORD *)buf;
        *(void *)(a1 + 112) = *(void *)&buf[16];
      }
    }

    else if (!*(_BYTE *)(a1 + 119))
    {
      goto LABEL_24;
    }

    if (v13 == 23)
    {
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
      int v14 = (os_log_s *)off_101934A28;
      if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t buf = 68289794;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        *(_WORD *)&_BYTE buf[18] = 2082;
        *(void *)&buf[20] = v9;
        __int16 v57 = 1040;
        *(_DWORD *)int v58 = 4;
        *(_WORD *)&v58[4] = 2098;
        *(void *)&v58[6] = &v52;
        _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#warning Could not open database, path:%{public, location:escape_only}s, rc:% {public, location:SqliteResult}.*P}",  buf,  0x2Cu);
      }
    }

    else
    {
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
      int v15 = (os_log_s *)off_101934A28;
      if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
      {
        uint64_t v16 = (void *)(a1 + 96);
        *(_DWORD *)uint64_t buf = 68289794;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        *(_WORD *)&_BYTE buf[18] = 2082;
        *(void *)&buf[20] = v16;
        __int16 v57 = 1040;
        *(_DWORD *)int v58 = 4;
        *(_WORD *)&v58[4] = 2098;
        *(void *)&v58[6] = &v52;
        _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Could not open database, path:%{public, location:escape_only}s, rc:%{public, location:SqliteResult}.*P}",  buf,  0x2Cu);
        if (qword_101934A20 != -1) {
          dispatch_once(&qword_101934A20, &stru_101835C50);
        }
      }

      __int16 v17 = (os_log_s *)off_101934A28;
      if (os_signpost_enabled((os_log_t)off_101934A28))
      {
        int v18 = (void *)(a1 + 96);
        *(_DWORD *)uint64_t buf = 68289794;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        *(_WORD *)&_BYTE buf[18] = 2082;
        *(void *)&buf[20] = v18;
        __int16 v57 = 1040;
        *(_DWORD *)int v58 = 4;
        *(_WORD *)&v58[4] = 2098;
        *(void *)&v58[6] = &v52;
        _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v17,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Could not open database",  "{msg%{public}.0s:Could not open database, path:%{public, location:escape_only}s, rc:%{public, location:SqliteResult}.*P}",  buf,  0x2Cu);
      }

      sub_1003B7D6C(*(sqlite3 **)(a1 + 8), (char *)(a1 + 96), *(unsigned __int8 *)(a1 + 56), v52);
    }

    *(void *)(a1 + 8) = 0LL;
    goto LABEL_112;
  }

void sub_1003B3484( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, int a25, __int16 a26, char a27, char a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, int a34, __int16 a35, char a36, char a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, void *__p, uint64_t a44, int a45, __int16 a46, char a47, char a48)
{
  if (a48 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1003B350C(uint64_t a1, uint64_t *a2)
{
  *(void *)a1 = off_101835AD8;
  *(void *)(a1 + 8) = 0LL;
  *(void *)(a1 + 24) = a1 + 24;
  *(void *)(a1 + 32) = a1 + 24;
  *(void *)(a1 + 40) = 0LL;
  uint64_t v4 = *a2;
  *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 4);
  *(void *)(a1 + 48) = v4;
  if (*((char *)a2 + 39) < 0)
  {
    sub_1010DD48C((_BYTE *)(a1 + 64), (void *)a2[2], a2[3]);
  }

  else
  {
    __int128 v5 = *((_OWORD *)a2 + 1);
    *(void *)(a1 + 80) = a2[4];
    *(_OWORD *)(a1 + 64) = v5;
  }

  *(void *)(a1 + 88) = a2[5];
  *(void *)(a1 + 96) = 0LL;
  *(void *)(a1 + 104) = 0LL;
  *(void *)(a1 + 112) = 0LL;
  *(void *)(a1 + 128) = 0LL;
  sub_1003B29E4(a1);
  return a1;
}

void sub_1003B35B8(_Unwind_Exception *a1)
{
}

int *sub_1003B35F8(int *a1)
{
  *(void *)a1 = off_101835AD8;
  DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterRemoveEveryObserver(DarwinNotifyCenter, a1);
  LocalCenter = CFNotificationCenterGetLocalCenter();
  CFNotificationCenterRemoveEveryObserver(LocalCenter, a1);
  for (uint64_t i = *((void *)a1 + 4); (int *)i != a1 + 6; uint64_t i = v5)
  {
    uint64_t v5 = *(void *)(i + 8);
    sub_1003B36EC((uint64_t)a1, *(sqlite3_stmt **)(i + 16));
  }

  if (*((void *)a1 + 1))
  {
    if (a1[30] >= 1)
    {
      do
      {
        sub_1002E4AFC(*((void *)a1 + 2));
        int v6 = a1[30];
        BOOL v7 = __OFSUB__(v6--, 1);
        a1[30] = v6;
      }

      while (!((v6 < 0) ^ v7 | (v6 == 0)));
    }

    uint64_t v8 = sub_100AF647C();
    sub_100AF845C(v8, *((sqlite3 **)a1 + 1));
    *((void *)a1 + 1) = 0LL;
  }

  if (*((void *)a1 + 2)) {
    *((void *)a1 + 2) = 0LL;
  }

  sub_1001B4C40((void *)a1 + 3);
  return a1;
}

uint64_t sub_1003B36EC(uint64_t a1, sqlite3_stmt *a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  (*(void (**)(uint64_t))(*(void *)v4 + 16LL))(v4);
  uint64_t v5 = *(uint64_t **)(a1 + 32);
  if (v5 == (uint64_t *)(a1 + 24))
  {
LABEL_4:
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    BOOL v7 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289282;
      int v12 = 0;
      __int16 v13 = 2082;
      int v14 = "";
      __int16 v15 = 2050;
      uint64_t v16 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Could not find prepared statement, statement:%{public}p}",  buf,  0x1Cu);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v8 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)uint64_t buf = 68289282;
      int v12 = 0;
      __int16 v13 = 2082;
      int v14 = "";
      __int16 v15 = 2050;
      uint64_t v16 = a2;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v8,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Could not find prepared statement",  "{msg%{public}.0s:Could not find prepared statement, statement:%{public}p}",  buf,  0x1Cu);
    }
  }

  else
  {
    while (1)
    {
      uint64_t v6 = v5[1];
      if ((sqlite3_stmt *)v5[2] == a2) {
        break;
      }
      uint64_t v5 = (uint64_t *)v5[1];
      if (v6 == a1 + 24) {
        goto LABEL_4;
      }
    }

    uint64_t v9 = *v5;
    *(void *)(v9 + 8) = v6;
    *(void *)v5[1] = v9;
    --*(void *)(a1 + 40);
    operator delete(v5);
    sub_1003B5CCC(*(sqlite3 **)(a1 + 8), a2);
  }

  return (*(uint64_t (**)(uint64_t))(*(void *)v4 + 24LL))(v4);
}

void sub_1003B3908(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_1003B3934(int *a1)
{
  uint64_t v1 = sub_1003B35F8(a1);
  operator delete(v1);
}

uint64_t sub_1003B3948(uint64_t a1, char *a2, const char **a3, const std::string::value_type **a4, char a5)
{
  uint64_t v121 = *(void *)(a1 + 16);
  (*(void (**)(uint64_t))(*(void *)v121 + 16LL))(v121);
  __int16 v123 = 256;
  if (a3 && *a3)
  {
    sub_10000CE18((uint64_t)buf);
    uint64_t v8 = sub_10000CF44(&v140[6], (uint64_t)"PRAGMA table_info(", 18LL);
    size_t v9 = strlen(a2);
    uint64_t v10 = sub_10000CF44(v8, (uint64_t)a2, v9);
    __str[0] = 41;
    sub_10000CF44(v10, (uint64_t)__str, 1LL);
    std::stringbuf::str((std::stringbuf::string_type *)__str, (const std::stringbuf *)&v140[14]);
    if (__str[23] >= 0) {
      uint64_t v11 = __str;
    }
    else {
      uint64_t v11 = *(char **)__str;
    }
    int v12 = sub_1003B5AC8(a1, v11);
    char v104 = a5;
    __int128 v105 = a4;
    if ((__str[23] & 0x80000000) != 0) {
      operator delete(*(void **)__str);
    }
    uint64_t v113 = 0LL;
    char v13 = 1;
    int v112 = a3;
    while (sqlite3_step(v12) == 100)
    {
      int v14 = &a3[6 * v113];
      __int16 v15 = *v14;
      if (!*v14) {
        goto LABEL_34;
      }
      uint64_t v16 = sqlite3_column_text(v12, 1);
      uint64_t v17 = 0LL;
      int v18 = dword_101835BE0;
      do
      {
        int v19 = *v18;
        v18 += 4;
        if (v19 == LODWORD(a3[6 * v113 + 1])) {
          break;
        }
        ++v17;
      }

      while (v17 != 5);
      uint64_t v20 = *(const char **)&dword_101835BE0[4 * v17 + 2];
      uint64_t v21 = sqlite3_column_text(v12, 2);
      if (strcmp(v20, (const char *)v21) || BYTE4(a3[6 * v113 + 1]) != sqlite3_column_int(v12, 5) > 0)
      {
LABEL_17:
        if (qword_101934A20 != -1) {
          dispatch_once(&qword_101934A20, &stru_101835C50);
        }
        uint64_t v22 = (os_log_s *)off_101934A28;
        char v13 = 0;
        if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v23 = 0LL;
          int v24 = a3;
          __int16 v25 = *v14;
          int v26 = (int)v24[6 * v113 + 1];
          __int16 v27 = dword_101835BE0;
          do
          {
            int v28 = *v27;
            v27 += 4;
            if (v28 == v26) {
              break;
            }
            ++v23;
          }

          while (v23 != 5);
          uint64_t v29 = *(void *)&dword_101835BE0[4 * v23 + 2];
          int v30 = BYTE4(v112[6 * v113 + 1]);
          __int16 v31 = sqlite3_column_text(v12, 1);
          uint64_t v32 = sqlite3_column_text(v12, 2);
          int v33 = sqlite3_column_int(v12, 5);
          *(void *)std::string __str = 68291075LL;
          *(_WORD *)&__str[8] = 2082;
          *(void *)&__str[10] = "";
          *(_WORD *)&__str[18] = 2081;
          *(void *)&__str[20] = a2;
          __int16 v125 = 1026;
          *(_DWORD *)float v126 = v113;
          *(_WORD *)&v126[4] = 2082;
          *(void *)&v126[6] = v25;
          *(_WORD *)&v126[14] = 2082;
          *(void *)&v126[16] = v29;
          *(_WORD *)&v126[24] = 1026;
          *(_DWORD *)&v126[26] = v30;
          *(_WORD *)float v127 = 2082;
          *(void *)&v127[2] = v31;
          *(_WORD *)float v128 = 2082;
          *(void *)&v128[2] = v32;
          LOWORD(v129) = 1026;
          *(_DWORD *)((char *)&v129 + 2) = v33 > 0;
          _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#warning Existing table's column does not match expected, table:%{private, loca tion:escape_only}s, index:%{public}d, expected name:%{public, location:escape_only}s, expected typ e:%{public, location:escape_only}s, expected primary key:%{public}hhd, actual name:%{public, locat ion:escape_only}s, actual type:%{public, location:escape_only}s, actual primary key:%{public}hhd}",  __str,  0x56u);
          char v13 = 0;
          a3 = v112;
        }
      }

      ++v113;
    }

void sub_1003B473C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, void *a25, uint64_t a26, int a27, __int16 a28, char a29, char a30, void *__p, uint64_t a32, int a33, __int16 a34, char a35, char a36, void *a37, uint64_t a38, uint64_t a39, char a40, uint64_t a41, uint64_t a42, void *a43, uint64_t a44, int a45, __int16 a46, char a47, char a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62)
{
  if (a36 < 0) {
    operator delete(__p);
  }
  if (a48 < 0) {
    operator delete(a43);
  }
  if (a37) {
    operator delete(a37);
  }
  sub_1011F8850((uint64_t)&a62);
  sub_1011C52D0((uint64_t)&a40);
  _Unwind_Resume(a1);
}

void sub_1003B4838(uint64_t a1)
{
  __int128 v42 = "id";
  int v43 = 1;
  __int16 v44 = 1;
  char v45 = 0;
  char v46 = 0;
  uint64_t v47 = "uuid";
  int v48 = 3;
  __int16 v49 = 0;
  char v50 = 0;
  char v51 = 0;
  uint64_t v52 = 0LL;
  int v53 = 5;
  __int16 v54 = 0;
  char v55 = 0;
  char v56 = 0;
  v41[0] = "uuid";
  v41[1] = 0LL;
  sub_1003B59A0(a1, "DatabaseIdentifier", &v42, v41, 0);
  memset(&v31, 0, sizeof(v31));
  double v2 = sub_1003B5AC8(a1, "SELECT * FROM DatabaseIdentifier;");
  double v3 = v2;
  if (v2)
  {
    if (sqlite3_step(v2) == 100)
    {
      uint64_t v4 = sqlite3_column_text(v3, 1);
      std::string::assign(&v31, (const std::string::value_type *)v4);
      uint64_t v5 = objc_alloc(&OBJC_CLASS___NSString);
      if ((v31.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v6 = &v31;
      }
      else {
        uint64_t v6 = (std::string *)v31.__r_.__value_.__r.__words[0];
      }
      *(void *)(a1 + 128) = -[NSString initWithUTF8String:](v5, "initWithUTF8String:", v6);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
      BOOL v7 = (os_log_s *)off_101934A28;
      if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEFAULT))
      {
        if (*(char *)(a1 + 119) < 0)
        {
          sub_1010DD48C(__p, *(void **)(a1 + 96), *(void *)(a1 + 104));
        }

        else
        {
          *(_OWORD *)std::string __p = *(_OWORD *)(a1 + 96);
          *(void *)&__p[16] = *(void *)(a1 + 112);
        }

        size_t v9 = __p;
        if (__p[23] < 0) {
          size_t v9 = *(_BYTE **)__p;
        }
        uint64_t v10 = &v31;
        if ((v31.__r_.__value_.__s.__size_ & 0x80u) != 0) {
          uint64_t v10 = (std::string *)v31.__r_.__value_.__r.__words[0];
        }
        *(_DWORD *)uint64_t buf = 68289539;
        *(_DWORD *)&uint8_t buf[4] = 0;
        __int16 v36 = 2082;
        *(void *)uint64_t v37 = "";
        *(_WORD *)&v37[8] = 2082;
        *(void *)&v37[10] = v9;
        *(_WORD *)&v37[18] = 2081;
        *(void *)&v37[20] = v10;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:initUUID, path:%{public, location:escape_only}s, uuid:%{private, location:escape_only}s}",  buf,  0x26u);
        if ((__p[23] & 0x80000000) != 0) {
          operator delete(*(void **)__p);
        }
      }
    }

    sub_1003B5CCC(*(sqlite3 **)(a1 + 8), v3);
    if (!*(void *)(a1 + 128))
    {
      uint64_t v11 = +[NSUUID UUID](&OBJC_CLASS___NSUUID, "UUID");
      std::string::assign(&v31, -[NSString UTF8String](-[NSUUID UUIDString](v11, "UUIDString"), "UTF8String"));
      sub_10000CE18((uint64_t)buf);
      int v12 = sub_10000CF44(&v37[6], (uint64_t)"INSERT INTO DatabaseIdentifier (uuid) VALUES (", 47LL);
      if ((v31.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        char v13 = &v31;
      }
      else {
        char v13 = (std::string *)v31.__r_.__value_.__r.__words[0];
      }
      size_t v14 = strlen((const char *)v13);
      __int16 v15 = sub_10000CF44(v12, (uint64_t)v13, v14);
      sub_10000CF44(v15, (uint64_t)");", 3LL);
      std::stringbuf::str((std::stringbuf::string_type *)__p, (const std::stringbuf *)&v37[14]);
      if (__p[23] >= 0) {
        uint64_t v16 = __p;
      }
      else {
        uint64_t v16 = *(char **)__p;
      }
      uint64_t v17 = sub_1003B5AC8(a1, v16);
      int v18 = v17;
      if ((__p[23] & 0x80000000) != 0)
      {
        operator delete(*(void **)__p);
        if (v18)
        {
LABEL_31:
          if (sqlite3_step(v18) == 101)
          {
            *(void *)(a1 + 128) = -[NSUUID UUIDString](v11, "UUIDString");
            if (qword_101934A20 != -1) {
              dispatch_once(&qword_101934A20, &stru_101835C50);
            }
            int v19 = (os_log_s *)off_101934A28;
            if (!os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEFAULT)) {
              goto LABEL_59;
            }
            if (*(char *)(a1 + 119) < 0)
            {
              sub_1010DD48C(v29, *(void **)(a1 + 96), *(void *)(a1 + 104));
            }

            else
            {
              *(_OWORD *)uint64_t v29 = *(_OWORD *)(a1 + 96);
              uint64_t v30 = *(void *)(a1 + 112);
            }

            int v26 = v29;
            if (v30 < 0) {
              int v26 = (void **)v29[0];
            }
            __int16 v27 = &v31;
            if ((v31.__r_.__value_.__s.__size_ & 0x80u) != 0) {
              __int16 v27 = (std::string *)v31.__r_.__value_.__r.__words[0];
            }
            *(void *)std::string __p = 68289539LL;
            *(_WORD *)&__p[8] = 2082;
            *(void *)&__p[10] = "";
            *(_WORD *)&__p[18] = 2082;
            *(void *)&__p[20] = v26;
            __int16 v33 = 2081;
            int v34 = v27;
            uint64_t v23 = "{msg%{public}.0s:UUID initialized, path:%{public, location:escape_only}s, uuid:%{priva"
                  "te, location:escape_only}s}";
            int v24 = v19;
            uint32_t v25 = 38;
          }

          else
          {
            if (qword_101934A20 != -1) {
              dispatch_once(&qword_101934A20, &stru_101835C50);
            }
            uint64_t v21 = (os_log_s *)off_101934A28;
            if (!os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEFAULT)) {
              goto LABEL_59;
            }
            if (*(char *)(a1 + 119) < 0)
            {
              sub_1010DD48C(v29, *(void **)(a1 + 96), *(void *)(a1 + 104));
            }

            else
            {
              *(_OWORD *)uint64_t v29 = *(_OWORD *)(a1 + 96);
              uint64_t v30 = *(void *)(a1 + 112);
            }

            uint64_t v22 = v29;
            if (v30 < 0) {
              uint64_t v22 = (void **)v29[0];
            }
            *(void *)std::string __p = 68289282LL;
            *(_WORD *)&__p[8] = 2082;
            *(void *)&__p[10] = "";
            *(_WORD *)&__p[18] = 2082;
            *(void *)&__p[20] = v22;
            uint64_t v23 = "{msg%{public}.0s:Failed to initialize DB UUID, path:%{public, location:escape_only}s}";
            int v24 = v21;
            uint32_t v25 = 28;
          }

          _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, v23, __p, v25);
          if (SHIBYTE(v30) < 0) {
            operator delete(v29[0]);
          }
LABEL_59:
          sub_1003B5CCC(*(sqlite3 **)(a1 + 8), v18);
LABEL_60:
          *(void *)&v37[6] = v28;
          if (v39 < 0) {
            operator delete(v38);
          }
          std::streambuf::~streambuf(&v37[14]);
          std::ios::~ios(&v40);
          goto LABEL_63;
        }
      }

      else if (v17)
      {
        goto LABEL_31;
      }

      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
      uint64_t v20 = (os_log_s *)off_101934A28;
      if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEFAULT))
      {
        *(void *)std::string __p = 68289026LL;
        *(_WORD *)&__p[8] = 2082;
        *(void *)&__p[10] = "";
        _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#warning Failed to create UUID insert statement}",  __p,  0x12u);
      }

      goto LABEL_60;
    }
  }

  else
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    uint64_t v8 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v36 = 2082;
      *(void *)uint64_t v37 = "";
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#warning Failed to create UUID select statement}",  buf,  0x12u);
    }
  }

void sub_1003B4EE0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

BOOL sub_1003B4F44(uint64_t a1, int a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v14 = v4;
  (*(void (**)(uint64_t))(*(void *)v4 + 16LL))(v4);
  __int16 v15 = 256;
  sub_1010DDBC0(&v13, "pragma foreign_keys = ");
  if (a2) {
    uint64_t v5 = "1";
  }
  else {
    uint64_t v5 = "0";
  }
  sub_1010DDBC0(__p, v5);
  if ((v12 & 0x80u) == 0) {
    uint64_t v6 = __p;
  }
  else {
    uint64_t v6 = (void **)__p[0];
  }
  if ((v12 & 0x80u) == 0) {
    std::string::size_type v7 = v12;
  }
  else {
    std::string::size_type v7 = (std::string::size_type)__p[1];
  }
  std::string::append(&v13, (const std::string::value_type *)v6, v7);
  if ((v13.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t v8 = &v13;
  }
  else {
    uint64_t v8 = (std::string *)v13.__r_.__value_.__r.__words[0];
  }
  int v9 = sqlite3_exec(*(sqlite3 **)(a1 + 8), (const char *)v8, 0LL, 0LL, 0LL);
  (*(void (**)(uint64_t))(*(void *)v4 + 24LL))(v4);
  return v9 == 0;
}

void sub_1003B5050( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21, char a22)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  sub_1011C52D0((uint64_t)&a22);
  _Unwind_Resume(a1);
}

uint64_t sub_1003B5098(uint64_t a1, uint64_t a2)
{
  for (uint64_t i = *(void *)(a2 + 32); i != a2 + 24; uint64_t i = *(void *)(i + 8))
    sub_1003B2794(a2, *(sqlite3_stmt **)(i + 16), 0);
  return sub_1002E4AFC(*(void *)(a2 + 16));
}

void sub_1003B50F0(gid_t *a1@<X0>, std::string *a2@<X8>)
{
  __p[0] = 0LL;
  __p[1] = 0LL;
  uint64_t v42 = 0LL;
  memset(&v40, 0, sizeof(v40));
  memset(&v39, 0, sizeof(v39));
  uint64_t v4 = (int)*a1;
  if (v4 >= 4)
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    uint64_t v5 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      gid_t v6 = *a1;
      buf.st_dev = 68289282;
      *(_DWORD *)&buf.st_mode = 0;
      LOWORD(buf.st_ino) = 2082;
      *(__darwin_ino64_t *)((char *)&buf.st_ino + 2) = (__darwin_ino64_t)"";
      HIWORD(buf.st_uid) = 1026;
      buf.st_gid = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:unknown protection type, protection:%{public}d}",  (uint8_t *)&buf,  0x18u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    std::string::size_type v7 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      gid_t v8 = *a1;
      buf.st_dev = 68289282;
      *(_DWORD *)&buf.st_mode = 0;
      LOWORD(buf.st_ino) = 2082;
      *(__darwin_ino64_t *)((char *)&buf.st_ino + 2) = (__darwin_ino64_t)"";
      HIWORD(buf.st_uid) = 1026;
      buf.st_gid = v8;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v7,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "unknown protection type",  "{msg%{public}.0s:unknown protection type, protection:%{public}d}",  (uint8_t *)&buf,  0x18u);
    }
  }

  else
  {
    std::string::assign(&v40, *((const std::string::value_type **)&off_101835CB0 + v4));
  }

  if (*((_BYTE *)a1 + 8))
  {
    sub_10030A238((std::string *)&buf);
  }

  else
  {
    int v9 = (char *)sub_1002F8DDC();
    sub_10030AC8C(v9, (uint64_t)&buf);
  }

  if (SHIBYTE(v42) < 0) {
    operator delete(__p[0]);
  }
  *(_OWORD *)std::string __p = *(_OWORD *)&buf.st_dev;
  uint64_t v42 = *(void *)&buf.st_uid;
  if (a1[1] == 7)
  {
    sub_100309AD8(2, (std::string *)&buf);
    if (SHIBYTE(v42) < 0) {
      operator delete(__p[0]);
    }
    *(_OWORD *)std::string __p = *(_OWORD *)&buf.st_dev;
    uint64_t v42 = *(void *)&buf.st_uid;
  }

  if (v42 >= 0) {
    uint64_t v10 = __p;
  }
  else {
    uint64_t v10 = (void **)__p[0];
  }
  uid_t v11 = getuid();
  gid_t v12 = getgid();
  if (!sub_100292C04(v10, v11, v12))
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    std::string v13 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      uint64_t v14 = __p;
      if (v42 < 0) {
        uint64_t v14 = (void **)__p[0];
      }
      buf.st_dev = 68289282;
      *(_DWORD *)&buf.st_mode = 0;
      LOWORD(buf.st_ino) = 2082;
      *(__darwin_ino64_t *)((char *)&buf.st_ino + 2) = (__darwin_ino64_t)"";
      HIWORD(buf.st_uid) = 2082;
      *(void *)&buf.st_gid = v14;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:could not create path, path:%{public, location:escape_only}s}",  (uint8_t *)&buf,  0x1Cu);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    __int16 v15 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      uint64_t v16 = __p;
      if (v42 < 0) {
        uint64_t v16 = (void **)__p[0];
      }
      buf.st_dev = 68289282;
      *(_DWORD *)&buf.st_mode = 0;
      LOWORD(buf.st_ino) = 2082;
      *(__darwin_ino64_t *)((char *)&buf.st_ino + 2) = (__darwin_ino64_t)"";
      HIWORD(buf.st_uid) = 2082;
      *(void *)&buf.st_gid = v16;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v15,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "could not create path",  "{msg%{public}.0s:could not create path, path:%{public, location:escape_only}s}",  (uint8_t *)&buf,  0x1Cu);
    }
  }

  uint64_t v17 = "file::memory:?cache=shared";
  int v18 = &v39;
  switch(a1[1])
  {
    case 0u:
      goto LABEL_67;
    case 1u:
      if (*((_BYTE *)a1 + 8))
      {
        std::string::assign(&v39, "factory");
        sub_10010B8E0((const void **)__p, (const void **)&v39.__r_.__value_.__l.__data_, (uint64_t)&buf);
        sub_1010DDBC0(&v35, ".db");
        if ((v37 & 0x80u) == 0) {
          int v19 = (const std::string::value_type *)&v35;
        }
        else {
          int v19 = (const std::string::value_type *)v35;
        }
        if ((v37 & 0x80u) == 0) {
          std::string::size_type v20 = v37;
        }
        else {
          std::string::size_type v20 = v36;
        }
        uint64_t v21 = std::string::append((std::string *)&buf, v19, v20);
        __int128 v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
        v38.__r_.__value_.__l.__cap_ = v21->__r_.__value_.__l.__cap_;
        *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
        v21->__r_.__value_.__l.__size_ = 0LL;
        v21->__r_.__value_.__l.__cap_ = 0LL;
        v21->__r_.__value_.__r.__words[0] = 0LL;
        if (SHIBYTE(buf.st_gid) < 0) {
          operator delete(*(void **)&buf.st_dev);
        }
        if ((v38.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          uint64_t v23 = &v38;
        }
        else {
          uint64_t v23 = (std::string *)v38.__r_.__value_.__r.__words[0];
        }
      }

      else
      {
        std::string::assign(&v39, "cache");
      }

      if (*((_BYTE *)a1 + 8) || *a1) {
        break;
      }
      uint64_t v17 = "_unencrypted";
      int v18 = &v40;
      goto LABEL_67;
    case 2u:
      uint64_t v17 = "consolidated";
      goto LABEL_66;
    case 3u:
      uint64_t v17 = "lockCache";
      goto LABEL_66;
    case 4u:
      uint64_t v17 = "gyroCal";
      goto LABEL_66;
    case 5u:
      uint64_t v17 = "timezone";
      goto LABEL_66;
    case 6u:
      uint64_t v17 = "sensorRecorder";
      goto LABEL_66;
    case 7u:
      uint64_t v17 = "cold";
LABEL_66:
      int v18 = &v39;
LABEL_67:
      std::string::assign(v18, v17);
      break;
    default:
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
      int v24 = (os_log_s *)off_101934A28;
      if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
      {
        gid_t v25 = a1[1];
        buf.st_dev = 68289282;
        *(_DWORD *)&buf.st_mode = 0;
        LOWORD(buf.st_ino) = 2082;
        *(__darwin_ino64_t *)((char *)&buf.st_ino + 2) = (__darwin_ino64_t)"";
        HIWORD(buf.st_uid) = 1026;
        buf.st_gid = v25;
        _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:unknown persistence type, persistence:%{public}d}",  (uint8_t *)&buf,  0x18u);
        if (qword_101934A20 != -1) {
          dispatch_once(&qword_101934A20, &stru_101835C50);
        }
      }

      int v26 = (os_log_s *)off_101934A28;
      if (os_signpost_enabled((os_log_t)off_101934A28))
      {
        gid_t v27 = a1[1];
        buf.st_dev = 68289282;
        *(_DWORD *)&buf.st_mode = 0;
        LOWORD(buf.st_ino) = 2082;
        *(__darwin_ino64_t *)((char *)&buf.st_ino + 2) = (__darwin_ino64_t)"";
        HIWORD(buf.st_uid) = 1026;
        buf.st_gid = v27;
        _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v26,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "unknown persistence type",  "{msg%{public}.0s:unknown persistence type, persistence:%{public}d}",  (uint8_t *)&buf,  0x18u);
      }

      break;
  }

  if (a1[1])
  {
    sub_10010B8E0((const void **)__p, (const void **)&v39.__r_.__value_.__l.__data_, (uint64_t)&v38);
    if ((v40.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v28 = &v40;
    }
    else {
      uint64_t v28 = (std::string *)v40.__r_.__value_.__r.__words[0];
    }
    if ((v40.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      std::string::size_type size = v40.__r_.__value_.__s.__size_;
    }
    else {
      std::string::size_type size = v40.__r_.__value_.__l.__size_;
    }
    uint64_t v30 = std::string::append(&v38, (const std::string::value_type *)v28, size);
    __int128 v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
    *(void *)&buf.st_uid = v30->__r_.__value_.__l.__cap_;
    *(_OWORD *)&buf.st_dev = v31;
    v30->__r_.__value_.__l.__size_ = 0LL;
    v30->__r_.__value_.__l.__cap_ = 0LL;
    v30->__r_.__value_.__r.__words[0] = 0LL;
    sub_1010DDBC0(&v35, ".db");
    if ((v37 & 0x80u) == 0) {
      uint64_t v32 = (const std::string::value_type *)&v35;
    }
    else {
      uint64_t v32 = (const std::string::value_type *)v35;
    }
    if ((v37 & 0x80u) == 0) {
      std::string::size_type v33 = v37;
    }
    else {
      std::string::size_type v33 = v36;
    }
    int v34 = std::string::append((std::string *)&buf, v32, v33);
    *a2 = *v34;
    v34->__r_.__value_.__l.__size_ = 0LL;
    v34->__r_.__value_.__l.__cap_ = 0LL;
    v34->__r_.__value_.__r.__words[0] = 0LL;
    if (SHIBYTE(buf.st_gid) < 0) {
      operator delete(*(void **)&buf.st_dev);
    }
  }

  else
  {
    *a2 = v39;
  }

  if (SHIBYTE(v42) < 0) {
    operator delete(__p[0]);
  }
}

void sub_1003B58A0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20, char a21, uint64_t a22, void *a23, uint64_t a24, int a25, __int16 a26, char a27, char a28, void *a29, uint64_t a30, int a31, __int16 a32, char a33, char a34, void *a35, uint64_t a36, int a37, __int16 a38, char a39, char a40, uint64_t a41, void *a42, uint64_t a43, int a44, __int16 a45, char a46, char a47)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a47 < 0) {
    operator delete(a42);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a34 < 0) {
    operator delete(a29);
  }
  if (a40 < 0) {
    operator delete(a35);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003B5988(uint64_t a1, int a2)
{
}

uint64_t sub_1003B59A0(uint64_t a1, char *a2, const char **a3, const std::string::value_type **a4, int a5)
{
  if (qword_101934A20 != -1) {
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }
  uint64_t v10 = (os_log_s *)off_101934A28;
  if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEFAULT))
  {
    v12[0] = 68289539;
    v12[1] = 0;
    __int16 v13 = 2082;
    uint64_t v14 = "";
    __int16 v15 = 2081;
    uint64_t v16 = a2;
    __int16 v17 = 1026;
    int v18 = a5;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:createTableIfNecessary, table:%{private, location:escape_only}s, specificToSerialNu mber:%{public}hhd}",  (uint8_t *)v12,  0x22u);
  }

  return sub_1003B9E30(a1, a2, a3, a4, a5);
}

sqlite3_stmt *sub_1003B5AC8(uint64_t a1, char *a2)
{
  if (((*(uint64_t (**)(void))(**(void **)(a1 + 16) + 40LL))(*(void *)(a1 + 16)) & 1) == 0)
  {
    sub_10123724C();
LABEL_15:
    dispatch_once(&qword_101934A20, &stru_101835C50);
    goto LABEL_4;
  }

  if (!*(void *)(a1 + 8)) {
    return 0LL;
  }
  p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
  if (qword_101934A20 != -1) {
    goto LABEL_15;
  }
LABEL_4:
  uint64_t v5 = (os_log_s *)off_101934A28;
  if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
  {
    gid_t v6 = (void *)(a1 + 96);
    int v10 = 68289539;
    int v11 = 0;
    __int16 v12 = 2082;
    __int16 v13 = "";
    __int16 v14 = 2081;
    __int16 v15 = a2;
    __int16 v16 = 2082;
    __int16 v17 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:Preparing statement for database, query:%{private, location:escape_only}s, path:% {public, location:escape_only}s}",  (uint8_t *)&v10,  0x26u);
  }

  std::string::size_type v7 = sub_1003C08D4(*(sqlite3_stmt **)(a1 + 8), a2);
  gid_t v8 = (os_log_s *)off_101934A28;
  if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
  {
    int v10 = 68289282;
    int v11 = 0;
    __int16 v12 = 2082;
    __int16 v13 = "";
    __int16 v14 = 2050;
    __int16 v15 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:Prepared statement, statement:%{public}p}",  (uint8_t *)&v10,  0x1Cu);
  }

  return v7;
}

char *sub_1003B5CA0@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  if (result[119] < 0) {
    return (char *)sub_1010DD48C((_BYTE *)a2, *((void **)result + 12), *((void *)result + 13));
  }
  *(_OWORD *)a2 = *((_OWORD *)result + 6);
  *(void *)(a2 + 16) = *((void *)result + 14);
  return result;
}

void sub_1003B5CCC(sqlite3 *a1, sqlite3_stmt *pStmt)
{
  int v5 = sqlite3_finalize(pStmt);
  if (v5)
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    double v3 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEFAULT))
    {
      if (a1) {
        uint64_t v4 = sqlite3_errmsg(a1);
      }
      else {
        uint64_t v4 = "no database";
      }
      *(_DWORD *)stat buf = 68289795;
      int v7 = 0;
      __int16 v8 = 2082;
      int v9 = "";
      __int16 v10 = 1040;
      int v11 = 4;
      __int16 v12 = 2098;
      __int16 v13 = &v5;
      __int16 v14 = 2081;
      __int16 v15 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#warning Finalized statement previously failed, rc:%{public, location:SqliteResult} .*P, errmsg:%{private, location:escape_only}s}",  buf,  0x2Cu);
    }
  }

BOOL sub_1003B5DF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v23 = v4;
  (*(void (**)(uint64_t))(*(void *)v4 + 16LL))(v4);
  __int16 v24 = 256;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v21 = v5;
  (*(void (**)(uint64_t))(*(void *)v5 + 16LL))(v5);
  __int16 v22 = 256;
  if (*(char *)(a2 + 119) < 0)
  {
    sub_1010DD48C(__dst, *(void **)(a2 + 96), *(void *)(a2 + 104));
  }

  else
  {
    *(_OWORD *)__dst = *(_OWORD *)(a2 + 96);
    uint64_t v20 = *(void *)(a2 + 112);
  }

  std::operator+<char>(&v25, "ATTACH '", __dst);
  gid_t v6 = std::string::append(&v25, "' AS OTHER;");
  __int128 v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  int64_t cap = v6->__r_.__value_.__l.__cap_;
  *(_OWORD *)std::string __p = v7;
  v6->__r_.__value_.__l.__size_ = 0LL;
  v6->__r_.__value_.__l.__cap_ = 0LL;
  v6->__r_.__value_.__r.__words[0] = 0LL;
  if (cap >= 0) {
    __int16 v8 = (char *)__p;
  }
  else {
    __int16 v8 = (char *)__p[0];
  }
  int v9 = sub_1003B5AC8(a1, v8);
  __int16 v10 = v9;
  if (v9)
  {
    int v11 = sqlite3_step(v9);
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    __int16 v12 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEFAULT))
    {
      v25.__r_.__value_.__r.__words[0] = 68289282LL;
      LOWORD(v25.__r_.__value_.__r.__words[1]) = 2082;
      *(std::string::size_type *)((char *)&v25.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
      WORD1(v25.__r_.__value_.__r.__words[2]) = 1026;
      HIDWORD(v25.__r_.__value_.__r.__words[2]) = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:attachToDatabaseAsOther, ret:%{public}d}",  (uint8_t *)&v25,  0x18u);
    }

    sub_1003B5CCC(*(sqlite3 **)(a1 + 8), v10);
    BOOL v13 = v11 == 101;
  }

  else
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    __int16 v14 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_ERROR))
    {
      v25.__r_.__value_.__r.__words[0] = 68289026LL;
      LOWORD(v25.__r_.__value_.__r.__words[1]) = 2082;
      *(std::string::size_type *)((char *)&v25.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_ERROR,  "{msg%{public}.0s:Failed to create ATTACH statement}",  (uint8_t *)&v25,  0x12u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    __int16 v15 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      v25.__r_.__value_.__r.__words[0] = 68289026LL;
      LOWORD(v25.__r_.__value_.__r.__words[1]) = 2082;
      *(std::string::size_type *)((char *)&v25.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v15,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Failed to create ATTACH statement",  "{msg%{public}.0s:Failed to create ATTACH statement}",  (uint8_t *)&v25,  0x12u);
    }

    BOOL v13 = 0LL;
  }

  if (SHIBYTE(cap) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v20) < 0) {
    operator delete(__dst[0]);
  }
  (*(void (**)(uint64_t))(*(void *)v5 + 24LL))(v5);
  (*(void (**)(uint64_t))(*(void *)v4 + 24LL))(v4);
  return v13;
}

void sub_1003B614C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20, char a21, uint64_t a22, char a23, uint64_t a24, uint64_t a25, char a26)
{
}

BOOL sub_1003B61CC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v14 = v2;
  (*(void (**)(uint64_t))(*(void *)v2 + 16LL))(v2);
  __int16 v15 = 256;
  sub_1010DDBC0(__p, "DETACH DATABASE 'OTHER';");
  if (v13 >= 0) {
    double v3 = (char *)__p;
  }
  else {
    double v3 = (char *)__p[0];
  }
  uint64_t v4 = sub_1003B5AC8(a1, v3);
  uint64_t v5 = v4;
  if (v4)
  {
    int v6 = sqlite3_step(v4);
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    __int128 v7 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)stat buf = 68289282;
      int v17 = 0;
      __int16 v18 = 2082;
      int v19 = "";
      __int16 v20 = 1026;
      int v21 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:detachFromOther, ret:%{public}d}",  buf,  0x18u);
    }

    sub_1003B5CCC(*(sqlite3 **)(a1 + 8), v5);
    BOOL v8 = v6 == 101;
  }

  else
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    int v9 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)stat buf = 68289026;
      int v17 = 0;
      __int16 v18 = 2082;
      int v19 = "";
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_ERROR,  "{msg%{public}.0s:Failed to create DETACH statement}",  buf,  0x12u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    __int16 v10 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)stat buf = 68289026;
      int v17 = 0;
      __int16 v18 = 2082;
      int v19 = "";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v10,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Failed to create DETACH statement",  "{msg%{public}.0s:Failed to create DETACH statement}",  buf,  0x12u);
    }

    BOOL v8 = 0LL;
  }

  if (v13 < 0) {
    operator delete(__p[0]);
  }
  (*(void (**)(uint64_t))(*(void *)v2 + 24LL))(v2);
  return v8;
}

void sub_1003B6478( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a2) {
    sub_100006BB8(exception_object);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1003B64B8(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4, char *a5, double a6)
{
  uint64_t v120 = *(void *)(a1 + 16);
  (*(void (**)(uint64_t))(*(void *)v120 + 16LL))(v120);
  __int16 v122 = 256;
  uint64_t v117 = *(void *)(a2 + 16);
  (*(void (**)(uint64_t))(*(void *)v117 + 16LL))(v117);
  __int16 v119 = 256;
  uint64_t v115 = a1;
  uint64_t v116 = a2;
  BOOL v10 = sub_1003B5DF8(a1, a2);
  v114[0] = v10;
  if (!v10) {
    goto LABEL_155;
  }
  uint64_t v11 = a4[1];
  uint64_t v12 = *a3;
  if (*a4 == v11)
  {
    uint64_t v13 = a3[1];
  }

  else
  {
    uint64_t v13 = a3[1];
    if (v11 - *a4 != v13 - v12)
    {
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
      uint64_t v14 = (os_log_s *)off_101934A28;
      if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
      {
        unint64_t v15 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a4[1] - *a4) >> 3);
        unint64_t v16 = 0xAAAAAAAAAAAAAAABLL * ((a3[1] - *a3) >> 3);
        *(_DWORD *)stat buf = 134349312;
        *(void *)&uint8_t buf[4] = v15;
        *(_WORD *)&_BYTE buf[12] = 2050;
        *(void *)&buf[14] = v16;
        _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "Invalid input parameters, number of columnList (%{public}zu) and tableNames (%{public}zu) differ.",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A20 != -1) {
          dispatch_once(&qword_101934A20, &stru_101835C50);
        }
        unint64_t v17 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a4[1] - *a4) >> 3);
        unint64_t v18 = 0xAAAAAAAAAAAAAAABLL * ((a3[1] - *a3) >> 3);
        LODWORD(__p[0]) = 134349312;
        *(void **)((char *)__p + 4) = (void *)v17;
        WORD2(__p[1]) = 2050;
        *(void **)((char *)&__p[1] + 6) = (void *)v18;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  off_101934A28,  17LL,  "Invalid input parameters, number of columnList (%{public}zu) and tableNames (%{public}zu) differ.",  __p,  22);
        __int16 v20 = (char *)v19;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLSqliteDatabase::copyTablesFromOtherDatabase(CLSqliteDatabase &, const std::vector<std::string> &, const std::vector<std::string> &, const char *, CFAbsoluteTime)",  "%s\n",  v19);
        if (v20 != buf) {
          free(v20);
        }
      }

      goto LABEL_155;
    }
  }

  if (v12 == v13)
  {
LABEL_155:
    sub_100036DAC((uint64_t)v114);
    BOOL v102 = 1LL;
LABEL_156:
    if ((_BYTE)v119) {
      pthread_mutex_unlock(v118);
    }
    else {
      (*(void (**)(uint64_t))(*(void *)v117 + 24LL))(v117);
    }
    goto LABEL_159;
  }

  uint64_t v104 = v13;
  uint64_t v21 = 0LL;
  unint64_t v22 = 0LL;
  LOBYTE(v23) = 1;
  do
  {
    __int16 v24 = (const char *)(v12 + v21);
    std::string v25 = (const char *)(v12 + v21);
    BOOL v26 = sub_1003BC438(a1, v25);
    gid_t v27 = (const char *)(v12 + v21);
    if (v24[23] < 0) {
      gid_t v27 = *(const char **)v24;
    }
    BOOL v28 = sub_1003BC438(a2, v27);
    if (v26 && v28)
    {
      memset(__p, 0, 24);
      if (a5)
      {
        if (*a4 == a4[1])
        {
          std::operator+<char>(&v111, "INSERT INTO ", v12 + v21);
          __int128 v75 = std::string::append(&v111, " SELECT * FROM OTHER.");
          __int128 v76 = *(_OWORD *)&v75->__r_.__value_.__l.__data_;
          v125.__r_.__value_.__l.__cap_ = v75->__r_.__value_.__l.__cap_;
          *(_OWORD *)&v125.__r_.__value_.__l.__data_ = v76;
          v75->__r_.__value_.__l.__size_ = 0LL;
          v75->__r_.__value_.__l.__cap_ = 0LL;
          v75->__r_.__value_.__r.__words[0] = 0LL;
          int v77 = v24[23];
          if (v77 >= 0) {
            __int128 v78 = (const std::string::value_type *)(v12 + v21);
          }
          else {
            __int128 v78 = *(const std::string::value_type **)(v12 + v21);
          }
          if (v77 >= 0) {
            std::string::size_type v79 = *((unsigned __int8 *)v24 + 23);
          }
          else {
            std::string::size_type v79 = *(void *)(v12 + v21 + 8);
          }
          BOOL v80 = std::string::append(&v125, v78, v79);
          __int128 v81 = *(_OWORD *)&v80->__r_.__value_.__l.__data_;
          v112.__r_.__value_.__l.__cap_ = v80->__r_.__value_.__l.__cap_;
          *(_OWORD *)&v112.__r_.__value_.__l.__data_ = v81;
          v80->__r_.__value_.__l.__size_ = 0LL;
          v80->__r_.__value_.__l.__cap_ = 0LL;
          v80->__r_.__value_.__r.__words[0] = 0LL;
          __int128 v82 = std::string::append(&v112, " WHERE ");
          __int128 v83 = *(_OWORD *)&v82->__r_.__value_.__l.__data_;
          v113.__r_.__value_.__l.__cap_ = v82->__r_.__value_.__l.__cap_;
          *(_OWORD *)&v113.__r_.__value_.__l.__data_ = v83;
          v82->__r_.__value_.__l.__size_ = 0LL;
          v82->__r_.__value_.__l.__cap_ = 0LL;
          v82->__r_.__value_.__r.__words[0] = 0LL;
          sub_1010DDBC0(&v110, a5);
          if ((v110.__r_.__value_.__s.__size_ & 0x80u) == 0) {
            __int128 v84 = &v110;
          }
          else {
            __int128 v84 = (std::string *)v110.__r_.__value_.__r.__words[0];
          }
          if ((v110.__r_.__value_.__s.__size_ & 0x80u) == 0) {
            std::string::size_type size = v110.__r_.__value_.__s.__size_;
          }
          else {
            std::string::size_type size = v110.__r_.__value_.__l.__size_;
          }
          uint64_t v86 = std::string::append(&v113, (const std::string::value_type *)v84, size);
          __int128 v87 = *(_OWORD *)&v86->__r_.__value_.__l.__data_;
          *(void *)&uint8_t buf[16] = v86->__r_.__value_.__l.__cap_;
          *(_OWORD *)stat buf = v87;
          v86->__r_.__value_.__l.__size_ = 0LL;
          v86->__r_.__value_.__l.__cap_ = 0LL;
          v86->__r_.__value_.__r.__words[0] = 0LL;
          uint64_t v88 = std::string::append((std::string *)buf, " > ?;");
          uint64_t v89 = (void *)v88->__r_.__value_.__r.__words[0];
          v123.__r_.__value_.__r.__words[0] = v88->__r_.__value_.__l.__size_;
          *(std::string::size_type *)((char *)v123.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v88->__r_.__value_.__r.__words[1] + 7);
          unsigned __int8 v90 = v88->__r_.__value_.__s.__size_;
          v88->__r_.__value_.__l.__size_ = 0LL;
          v88->__r_.__value_.__l.__cap_ = 0LL;
          v88->__r_.__value_.__r.__words[0] = 0LL;
          if (SHIBYTE(__p[2]) < 0) {
            operator delete(__p[0]);
          }
          __p[0] = v89;
          __p[1] = v123.__r_.__value_.__l.__data_;
          *(void **)((char *)&__p[1] + 7) = *(void **)((char *)v123.__r_.__value_.__r.__words + 7);
          HIBYTE(__p[2]) = v90;
          if ((buf[23] & 0x80000000) != 0) {
            operator delete(*(void **)buf);
          }
          int v61 = (void *)v111.__r_.__value_.__r.__words[0];
        }

        else
        {
          std::operator+<char>(&v108, "INSERT INTO ", v12 + v21);
          uint64_t v29 = std::string::append(&v108, " (");
          __int128 v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
          v109.__r_.__value_.__l.__cap_ = v29->__r_.__value_.__l.__cap_;
          *(_OWORD *)&v109.__r_.__value_.__l.__data_ = v30;
          v29->__r_.__value_.__l.__size_ = 0LL;
          v29->__r_.__value_.__l.__cap_ = 0LL;
          v29->__r_.__value_.__r.__words[0] = 0LL;
          uint64_t v31 = *a4 + v21;
          int v32 = *(char *)(v31 + 23);
          if (v32 >= 0) {
            std::string::size_type v33 = (const std::string::value_type *)(*a4 + v21);
          }
          else {
            std::string::size_type v33 = *(const std::string::value_type **)v31;
          }
          if (v32 >= 0) {
            std::string::size_type v34 = *(unsigned __int8 *)(v31 + 23);
          }
          else {
            std::string::size_type v34 = *(void *)(v31 + 8);
          }
          __int16 v35 = std::string::append(&v109, v33, v34);
          __int128 v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
          v123.__r_.__value_.__l.__cap_ = v35->__r_.__value_.__l.__cap_;
          *(_OWORD *)&v123.__r_.__value_.__l.__data_ = v36;
          v35->__r_.__value_.__l.__size_ = 0LL;
          v35->__r_.__value_.__l.__cap_ = 0LL;
          v35->__r_.__value_.__r.__words[0] = 0LL;
          unsigned __int8 v37 = std::string::append(&v123, ") SELECT ");
          __int128 v38 = *(_OWORD *)&v37->__r_.__value_.__l.__data_;
          v110.__r_.__value_.__l.__cap_ = v37->__r_.__value_.__l.__cap_;
          *(_OWORD *)&v110.__r_.__value_.__l.__data_ = v38;
          v37->__r_.__value_.__l.__size_ = 0LL;
          v37->__r_.__value_.__l.__cap_ = 0LL;
          v37->__r_.__value_.__r.__words[0] = 0LL;
          uint64_t v39 = *a4 + v21;
          int v40 = *(char *)(v39 + 23);
          if (v40 >= 0) {
            __int128 v41 = (const std::string::value_type *)(*a4 + v21);
          }
          else {
            __int128 v41 = *(const std::string::value_type **)v39;
          }
          if (v40 >= 0) {
            std::string::size_type v42 = *(unsigned __int8 *)(v39 + 23);
          }
          else {
            std::string::size_type v42 = *(void *)(v39 + 8);
          }
          int v43 = std::string::append(&v110, v41, v42);
          __int128 v44 = *(_OWORD *)&v43->__r_.__value_.__l.__data_;
          v111.__r_.__value_.__l.__cap_ = v43->__r_.__value_.__l.__cap_;
          *(_OWORD *)&v111.__r_.__value_.__l.__data_ = v44;
          v43->__r_.__value_.__l.__size_ = 0LL;
          v43->__r_.__value_.__l.__cap_ = 0LL;
          v43->__r_.__value_.__r.__words[0] = 0LL;
          char v45 = std::string::append(&v111, " FROM OTHER.");
          __int128 v46 = *(_OWORD *)&v45->__r_.__value_.__l.__data_;
          v125.__r_.__value_.__l.__cap_ = v45->__r_.__value_.__l.__cap_;
          *(_OWORD *)&v125.__r_.__value_.__l.__data_ = v46;
          v45->__r_.__value_.__l.__size_ = 0LL;
          v45->__r_.__value_.__l.__cap_ = 0LL;
          v45->__r_.__value_.__r.__words[0] = 0LL;
          int v47 = v24[23];
          if (v47 >= 0) {
            int v48 = (const std::string::value_type *)(v12 + v21);
          }
          else {
            int v48 = *(const std::string::value_type **)(v12 + v21);
          }
          if (v47 >= 0) {
            std::string::size_type v49 = *((unsigned __int8 *)v24 + 23);
          }
          else {
            std::string::size_type v49 = *(void *)(v12 + v21 + 8);
          }
          char v50 = std::string::append(&v125, v48, v49);
          __int128 v51 = *(_OWORD *)&v50->__r_.__value_.__l.__data_;
          v112.__r_.__value_.__l.__cap_ = v50->__r_.__value_.__l.__cap_;
          *(_OWORD *)&v112.__r_.__value_.__l.__data_ = v51;
          v50->__r_.__value_.__l.__size_ = 0LL;
          v50->__r_.__value_.__l.__cap_ = 0LL;
          v50->__r_.__value_.__r.__words[0] = 0LL;
          uint64_t v52 = std::string::append(&v112, " WHERE ");
          __int128 v53 = *(_OWORD *)&v52->__r_.__value_.__l.__data_;
          v113.__r_.__value_.__l.__cap_ = v52->__r_.__value_.__l.__cap_;
          *(_OWORD *)&v113.__r_.__value_.__l.__data_ = v53;
          v52->__r_.__value_.__l.__size_ = 0LL;
          v52->__r_.__value_.__l.__cap_ = 0LL;
          v52->__r_.__value_.__r.__words[0] = 0LL;
          sub_1010DDBC0(v106, a5);
          if ((v107 & 0x80u) == 0) {
            __int16 v54 = v106;
          }
          else {
            __int16 v54 = (void **)v106[0];
          }
          if ((v107 & 0x80u) == 0) {
            std::string::size_type v55 = v107;
          }
          else {
            std::string::size_type v55 = (std::string::size_type)v106[1];
          }
          char v56 = std::string::append(&v113, (const std::string::value_type *)v54, v55);
          __int128 v57 = *(_OWORD *)&v56->__r_.__value_.__l.__data_;
          *(void *)&uint8_t buf[16] = v56->__r_.__value_.__l.__cap_;
          *(_OWORD *)stat buf = v57;
          v56->__r_.__value_.__l.__size_ = 0LL;
          v56->__r_.__value_.__l.__cap_ = 0LL;
          v56->__r_.__value_.__r.__words[0] = 0LL;
          int v58 = std::string::append((std::string *)buf, " > ?;");
          int v59 = (void *)v58->__r_.__value_.__r.__words[0];
          v124[0] = v58->__r_.__value_.__l.__size_;
          *(void *)((char *)v124 + 7) = *(std::string::size_type *)((char *)&v58->__r_.__value_.__r.__words[1] + 7);
          unsigned __int8 v60 = v58->__r_.__value_.__s.__size_;
          v58->__r_.__value_.__l.__size_ = 0LL;
          v58->__r_.__value_.__l.__cap_ = 0LL;
          v58->__r_.__value_.__r.__words[0] = 0LL;
          if (SHIBYTE(__p[2]) < 0) {
            operator delete(__p[0]);
          }
          __p[0] = v59;
          __p[1] = (void *)v124[0];
          *(void **)((char *)&__p[1] + 7) = *(void **)((char *)v124 + 7);
          HIBYTE(__p[2]) = v60;
          if ((buf[23] & 0x80000000) != 0) {
            operator delete(*(void **)buf);
          }
          int v61 = (void *)v108.__r_.__value_.__r.__words[0];
        }
      }

      else
      {
        std::operator+<char>(&v112, "INSERT INTO ", v12 + v21);
        char v65 = std::string::append(&v112, " SELECT * FROM OTHER.");
        __int128 v66 = *(_OWORD *)&v65->__r_.__value_.__l.__data_;
        v113.__r_.__value_.__l.__cap_ = v65->__r_.__value_.__l.__cap_;
        *(_OWORD *)&v113.__r_.__value_.__l.__data_ = v66;
        v65->__r_.__value_.__l.__size_ = 0LL;
        v65->__r_.__value_.__l.__cap_ = 0LL;
        v65->__r_.__value_.__r.__words[0] = 0LL;
        int v67 = v24[23];
        if (v67 >= 0) {
          uint64_t v68 = (const std::string::value_type *)(v12 + v21);
        }
        else {
          uint64_t v68 = *(const std::string::value_type **)(v12 + v21);
        }
        if (v67 >= 0) {
          std::string::size_type v69 = *((unsigned __int8 *)v24 + 23);
        }
        else {
          std::string::size_type v69 = *(void *)(v12 + v21 + 8);
        }
        int v70 = std::string::append(&v113, v68, v69);
        __int128 v71 = *(_OWORD *)&v70->__r_.__value_.__l.__data_;
        *(void *)&uint8_t buf[16] = v70->__r_.__value_.__l.__cap_;
        *(_OWORD *)stat buf = v71;
        v70->__r_.__value_.__l.__size_ = 0LL;
        v70->__r_.__value_.__l.__cap_ = 0LL;
        v70->__r_.__value_.__r.__words[0] = 0LL;
        char v72 = std::string::append((std::string *)buf, ";");
        char v73 = (void *)v72->__r_.__value_.__r.__words[0];
        v125.__r_.__value_.__r.__words[0] = v72->__r_.__value_.__l.__size_;
        *(std::string::size_type *)((char *)v125.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v72->__r_.__value_.__r.__words[1] + 7);
        unsigned __int8 v74 = v72->__r_.__value_.__s.__size_;
        v72->__r_.__value_.__l.__size_ = 0LL;
        v72->__r_.__value_.__l.__cap_ = 0LL;
        v72->__r_.__value_.__r.__words[0] = 0LL;
        if (SHIBYTE(__p[2]) < 0) {
          operator delete(__p[0]);
        }
        __p[0] = v73;
        __p[1] = v125.__r_.__value_.__l.__data_;
        *(void **)((char *)&__p[1] + 7) = *(void **)((char *)v125.__r_.__value_.__r.__words + 7);
        HIBYTE(__p[2]) = v74;
        if ((buf[23] & 0x80000000) != 0) {
          operator delete(*(void **)buf);
        }
        int v61 = (void *)v112.__r_.__value_.__r.__words[0];
      }

      operator delete(v61);
LABEL_124:
      if (SHIBYTE(__p[2]) >= 0) {
        unint64_t v91 = (char *)__p;
      }
      else {
        unint64_t v91 = (char *)__p[0];
      }
      uint64_t v92 = sub_1003B5AC8(a1, v91);
      uint64_t v93 = v92;
      if (v92)
      {
        if (a5) {
          sub_1003B7480(v92, 1, a6);
        }
        int v94 = sqlite3_step(v93);
        int v95 = v94;
        if ((_BYTE)v23) {
          BOOL v96 = v94 == 101;
        }
        else {
          BOOL v96 = 0;
        }
        int v23 = v96;
        if (qword_101934A20 != -1) {
          dispatch_once(&qword_101934A20, &stru_101835C50);
        }
        __int128 v97 = (os_log_s *)off_101934A28;
        if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEFAULT))
        {
          if (v24[23] < 0) {
            __int16 v24 = *(const char **)v24;
          }
          *(_DWORD *)stat buf = 68289538;
          *(_DWORD *)&uint8_t buf[4] = 0;
          *(_WORD *)&uint8_t buf[8] = 2082;
          *(void *)&buf[10] = "";
          *(_WORD *)&_BYTE buf[18] = 2082;
          *(void *)&buf[20] = v24;
          __int16 v128 = 1026;
          BOOL v129 = v95;
          _os_log_impl( (void *)&_mh_execute_header,  v97,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:copyTablesFromOtherDatabase, insert, tableName:%{public, location:escape_only}s , ret:%{public}d}",  buf,  0x22u);
        }

        sub_1003B5CCC(*(sqlite3 **)(a1 + 8), v93);
      }

      else
      {
        if (qword_101934A20 != -1) {
          dispatch_once(&qword_101934A20, &stru_101835C50);
        }
        uint64_t v98 = (os_log_s *)off_101934A28;
        if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)stat buf = 68289026;
          *(_DWORD *)&uint8_t buf[4] = 0;
          *(_WORD *)&uint8_t buf[8] = 2082;
          *(void *)&buf[10] = "";
          _os_log_impl( (void *)&_mh_execute_header,  v98,  OS_LOG_TYPE_ERROR,  "{msg%{public}.0s:Failed to create INSERT statement}",  buf,  0x12u);
          if (qword_101934A20 != -1) {
            dispatch_once(&qword_101934A20, &stru_101835C50);
          }
        }

        int v99 = (os_log_s *)off_101934A28;
        if (os_signpost_enabled((os_log_t)off_101934A28))
        {
          *(_DWORD *)stat buf = 68289026;
          *(_DWORD *)&uint8_t buf[4] = 0;
          *(_WORD *)&uint8_t buf[8] = 2082;
          *(void *)&buf[10] = "";
          _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v99,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Failed to create INSERT statement",  "{msg%{public}.0s:Failed to create INSERT statement}",  buf,  0x12u);
        }

        int v23 = 0;
      }

      if (SHIBYTE(__p[2]) < 0) {
        operator delete(__p[0]);
      }
      goto LABEL_153;
    }

    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    char v62 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_ERROR))
    {
      char v63 = (const char *)(v12 + v21);
      if (v24[23] < 0) {
        char v63 = *(const char **)v24;
      }
      *(_DWORD *)stat buf = 68289794;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&_BYTE buf[18] = 2082;
      *(void *)&buf[20] = v63;
      __int16 v128 = 1026;
      BOOL v129 = v26;
      __int16 v130 = 1026;
      BOOL v131 = v28;
      _os_log_impl( (void *)&_mh_execute_header,  v62,  OS_LOG_TYPE_ERROR,  "{msg%{public}.0s:table is missing, TableName:%{public, location:escape_only}s, ExistsInThisDB:%{ public}hhd, ExistsInOtherDB:%{public}hhd}",  buf,  0x28u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    int v64 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      if (v24[23] < 0) {
        __int16 v24 = *(const char **)v24;
      }
      *(_DWORD *)stat buf = 68289794;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&_BYTE buf[18] = 2082;
      *(void *)&buf[20] = v24;
      __int16 v128 = 1026;
      BOOL v129 = v26;
      __int16 v130 = 1026;
      BOOL v131 = v28;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v64,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "table is missing",  "{msg%{public}.0s:table is missing, TableName:%{public, location:escape_only}s, ExistsInThisDB:%{ public}hhd, ExistsInOtherDB:%{public}hhd}",  buf,  0x28u);
      int v23 = 0;
    }

    else
    {
      int v23 = 0;
    }

void sub_1003B7238( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, void *a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, void *a29, uint64_t a30, uint64_t a31, uint64_t a32, void *a33, uint64_t a34, uint64_t a35, uint64_t a36, void *a37, uint64_t a38, uint64_t a39, uint64_t a40, void *a41, uint64_t a42, uint64_t a43, uint64_t a44, void *__p, uint64_t a46, uint64_t a47, char a48, uint64_t a49, uint64_t a50,char a51,uint64_t a52,uint64_t a53,char a54)
{
}

BOOL sub_1003B7480(sqlite3_stmt *a1, int a2, double a3)
{
  int v6 = sqlite3_bind_double(a1, a2, a3);
  int v11 = v6;
  if (v6)
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    __int128 v7 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)stat buf = 68290307;
      int v13 = 0;
      __int16 v14 = 2082;
      unint64_t v15 = "";
      __int16 v16 = 2049;
      double v17 = a3;
      __int16 v18 = 1026;
      int v19 = a2;
      __int16 v20 = 1040;
      int v21 = 4;
      __int16 v22 = 2098;
      int v23 = &v11;
      __int16 v24 = 2081;
      std::string v25 = sqlite3_sql(a1);
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Could not bind, value:%{private}f, index:%{public}d, rc:%{public, locat ion:SqliteResult}.*P, query:%{private, location:escape_only}s}",  buf,  0x3Cu);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    BOOL v8 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      int v9 = sqlite3_sql(a1);
      *(_DWORD *)stat buf = 68290307;
      int v13 = 0;
      __int16 v14 = 2082;
      unint64_t v15 = "";
      __int16 v16 = 2049;
      double v17 = a3;
      __int16 v18 = 1026;
      int v19 = a2;
      __int16 v20 = 1040;
      int v21 = 4;
      __int16 v22 = 2098;
      int v23 = &v11;
      __int16 v24 = 2081;
      std::string v25 = v9;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v8,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Could not bind",  "{msg%{public}.0s:Could not bind, value:%{private}f, index:%{public}d, rc:%{public, locat ion:SqliteResult}.*P, query:%{private, location:escape_only}s}",  buf,  0x3Cu);
    }
  }

  return v6 == 0;
}

uint64_t sub_1003B76B4(uint64_t a1)
{
  return *(void *)(a1 + 128);
}

void sub_1003B76BC(uint64_t a1, uint64_t a2, int a3, sqlite3_stmt *a4)
{
  int v15 = a3;
  if (a3 <= 0x1Au && ((1 << a3) & 0x4004C00) != 0)
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    int v6 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      int v7 = *__error();
      BOOL v8 = a4 ? sqlite3_sql(a4) : 0LL;
      *(_DWORD *)stat buf = 68290307;
      int v17 = 0;
      __int16 v18 = 2082;
      int v19 = "";
      __int16 v20 = 2082;
      uint64_t v21 = a2;
      __int16 v22 = 1026;
      int v23 = v7;
      __int16 v24 = 1040;
      int v25 = 4;
      __int16 v26 = 2098;
      gid_t v27 = &v15;
      __int16 v28 = 2081;
      uint64_t v29 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:displaySqlResult, function:%{public, location:escape_only}s, errno:%{public}d, rc:%{public, location:SqliteResult}.*P, query:%{private, location:escape_only}s}",  buf,  0x3Cu);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v12 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      int v13 = *__error();
      if (a4) {
        __int16 v14 = sqlite3_sql(a4);
      }
      else {
        __int16 v14 = 0LL;
      }
      *(_DWORD *)stat buf = 68290307;
      int v17 = 0;
      __int16 v18 = 2082;
      int v19 = "";
      __int16 v20 = 2082;
      uint64_t v21 = a2;
      __int16 v22 = 1026;
      int v23 = v13;
      __int16 v24 = 1040;
      int v25 = 4;
      __int16 v26 = 2098;
      gid_t v27 = &v15;
      __int16 v28 = 2081;
      uint64_t v29 = v14;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v12,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "displaySqlResult",  "{msg%{public}.0s:displaySqlResult, function:%{public, location:escape_only}s, errno:%{public}d, rc:%{public, location:SqliteResult}.*P, query:%{private, location:escape_only}s}",  buf,  0x3Cu);
    }
  }

  else
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    int v9 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEFAULT))
    {
      int v10 = *__error();
      if (a4) {
        int v11 = sqlite3_sql(a4);
      }
      else {
        int v11 = 0LL;
      }
      *(_DWORD *)stat buf = 68290307;
      int v17 = 0;
      __int16 v18 = 2082;
      int v19 = "";
      __int16 v20 = 2082;
      uint64_t v21 = a2;
      __int16 v22 = 1026;
      int v23 = v10;
      __int16 v24 = 1040;
      int v25 = 4;
      __int16 v26 = 2098;
      gid_t v27 = &v15;
      __int16 v28 = 2081;
      uint64_t v29 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#warning displaySqlResult, function:%{public, location:escape_only}s, errno:%{p ublic}d, rc:%{public, location:SqliteResult}.*P, query:%{private, location:escape_only}s}",  buf,  0x3Cu);
    }
  }

BOOL sub_1003B79FC(uint64_t a1, char *a2)
{
  uint64_t size = v13.__r_.__value_.__s.__size_;
  int v3 = (char)v13.__r_.__value_.__s.__size_;
  uint64_t v4 = (void *)v13.__r_.__value_.__r.__words[0];
  if ((v13.__r_.__value_.__s.__size_ & 0x80u) == 0)
  {
    uint64_t v5 = &v13;
  }

  else
  {
    uint64_t size = v13.__r_.__value_.__l.__size_;
    uint64_t v5 = (std::stringbuf::string_type *)v13.__r_.__value_.__r.__words[0];
  }

  int v6 = (char *)v5 + size;
  if (size >= 13)
  {
    int v7 = v5;
    do
    {
      BOOL v8 = memchr(v7, 65, size - 12);
      if (!v8) {
        break;
      }
      int v9 = (char *)v8;
      int v7 = (std::stringbuf::string_type *)((char *)v8 + 1);
      uint64_t size = v6 - (v9 + 1);
    }

    while (size > 12);
  }

  int v9 = v6;
LABEL_13:
  if (v3 < 0) {
    operator delete(v4);
  }
  return v9 != v6 && v9 - (char *)v5 != -1;
}

uint64_t sub_1003B7AEC@<X0>( uint64_t a1@<X0>, char *a2@<X1>, char *a3@<X2>, std::stringbuf::string_type *a4@<X8>)
{
  uint64_t v8 = *(void *)(a1 + 16);
  v26[19] = v8;
  (*(void (**)(uint64_t))(*(void *)v8 + 16LL))(v8);
  __int16 v27 = 256;
  sub_10000CE18((uint64_t)v23);
  a4->__r_.__value_.__r.__words[0] = 0LL;
  a4->__r_.__value_.__l.__size_ = 0LL;
  a4->__r_.__value_.__l.__cap_ = 0LL;
  int v9 = sub_10000CF44(&v24, (uint64_t)"SELECT sql FROM ", 16LL);
  int v10 = sub_10000CF44(v9, (uint64_t)"sqlite_master", 13LL);
  int v11 = sub_10000CF44(v10, (uint64_t)" WHERE ", 7LL);
  uint64_t v12 = sub_10000CF44(v11, (uint64_t)"Type", 4LL);
  std::stringbuf::string_type v13 = sub_10000CF44(v12, (uint64_t)"=? AND ", 7LL);
  __int16 v14 = sub_10000CF44(v13, (uint64_t)"Name", 4LL);
  sub_10000CF44(v14, (uint64_t)"=?", 2LL);
  std::stringbuf::str(&v22, &v25);
  if ((v22.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    int v15 = &v22;
  }
  else {
    int v15 = (std::stringbuf::string_type *)v22.__r_.__value_.__r.__words[0];
  }
  __int16 v16 = sub_1003B5AC8(a1, (char *)v15);
  int v17 = v16;
  if ((char)v22.__r_.__value_.__s.__size_ < 0)
  {
    operator delete(v22.__r_.__value_.__l.__data_);
    if (!v17) {
      goto LABEL_16;
    }
  }

  else if (!v16)
  {
    goto LABEL_16;
  }

  if (sub_1003BC1F0(v17, 1, a2) && sub_1003BC1F0(v17, 2, a3) && sqlite3_step(v17) == 100)
  {
    __int16 v18 = sqlite3_column_text(v17, 0);
    if (v18) {
      int v19 = (char *)v18;
    }
    else {
      int v19 = "";
    }
    sub_1010DDBC0(&v22, v19);
    *a4 = v22;
  }

  sub_1003B5CCC(*(sqlite3 **)(a1 + 8), v17);
LABEL_16:
  *(void *)((char *)v23
  uint64_t v24 = v20;
  std::streambuf::~streambuf(&v25);
  std::ios::~ios(v26);
  return (*(uint64_t (**)(uint64_t))(*(void *)v8 + 24LL))(v8);
}

void sub_1003B7D10( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
}

void sub_1003B7D6C(sqlite3 *a1, char *a2, int a3, int a4)
{
  int v17 = a4;
  if (a4 == 26 || a4 == 11)
  {
    if (!a3)
    {
      if (qword_101934A20 != -1) {
        goto LABEL_44;
      }
      while (1)
      {
        int v10 = (os_log_s *)off_101934A28;
        if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
        {
          int v11 = a2[23] >= 0 ? a2 : *(const char **)a2;
          *(_DWORD *)stat buf = 68289794;
          int v19 = 0;
          __int16 v20 = 2082;
          uint64_t v21 = "";
          __int16 v22 = 2082;
          int v23 = v11;
          __int16 v24 = 1040;
          LODWORD(v25[0]) = 4;
          WORD2(v25[0]) = 2098;
          *(void *)((char *)v25 + 6) = &v17;
          _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:database error; deleting and exiting, path:%{public, location:escape_only}s, "
            "rc:%{public, location:SqliteResult}.*P}",
            buf,
            0x2Cu);
          if (qword_101934A20 != -1) {
            dispatch_once(&qword_101934A20, &stru_101835C50);
          }
        }

        uint64_t v12 = (os_log_s *)off_101934A28;
        if (os_signpost_enabled((os_log_t)off_101934A28))
        {
          if (a2[23] >= 0) {
            std::stringbuf::string_type v13 = a2;
          }
          else {
            std::stringbuf::string_type v13 = *(char **)a2;
          }
          *(_DWORD *)stat buf = 68289794;
          int v19 = 0;
          __int16 v20 = 2082;
          uint64_t v21 = "";
          __int16 v22 = 2082;
          int v23 = v13;
          __int16 v24 = 1040;
          LODWORD(v25[0]) = 4;
          WORD2(v25[0]) = 2098;
          *(void *)((char *)v25 + 6) = &v17;
          _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v12,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "database error; deleting and exiting",
            "{msg%{public}.0s:database error; deleting and exiting, path:%{public, location:escape_only}s, "
            "rc:%{public, location:SqliteResult}.*P}",
            buf,
            0x2Cu);
        }

        sub_1003B82DC(a1, (uint64_t)a2);
        if (qword_101934A20 != -1) {
          dispatch_once(&qword_101934A20, &stru_101835C50);
        }
        __int16 v14 = (os_log_s *)off_101934A28;
        if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
        {
          *(_DWORD *)stat buf = 68289539;
          int v19 = 0;
          __int16 v20 = 2082;
          uint64_t v21 = "";
          __int16 v22 = 2082;
          int v23 = "assert";
          __int16 v24 = 2081;
          v25[0] = "0";
          _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Killing locationd to resolve corrupted database, event:%{public, location:escap e_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
          if (qword_101934A20 != -1) {
            dispatch_once(&qword_101934A20, &stru_101835C50);
          }
        }

        int v15 = (os_log_s *)off_101934A28;
        if (os_signpost_enabled((os_log_t)off_101934A28))
        {
          *(_DWORD *)stat buf = 68289539;
          int v19 = 0;
          __int16 v20 = 2082;
          uint64_t v21 = "";
          __int16 v22 = 2082;
          int v23 = "assert";
          __int16 v24 = 2081;
          v25[0] = "0";
          _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v15,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Killing locationd to resolve corrupted database",  "{msg%{public}.0s:Killing locationd to resolve corrupted database, event:%{public, location:escap e_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
          if (qword_101934A20 != -1) {
            dispatch_once(&qword_101934A20, &stru_101835C50);
          }
        }

        a2 = (char *)off_101934A28;
        if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)stat buf = 68289539;
          int v19 = 0;
          __int16 v20 = 2082;
          uint64_t v21 = "";
          __int16 v22 = 2082;
          int v23 = "assert";
          __int16 v24 = 2081;
          v25[0] = "0";
          _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)a2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Killing locationd to resolve corrupted database, event:%{public, location:escap e_only}s, condition:%{private, location:escape_only}s}",  buf,  0x26u);
        }

        abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteDatabase.mm",  603,  "handleSqlError");
LABEL_44:
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    int v6 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      int v7 = a2[23] >= 0 ? a2 : *(const char **)a2;
      *(_DWORD *)stat buf = 68289794;
      int v19 = 0;
      __int16 v20 = 2082;
      uint64_t v21 = "";
      __int16 v22 = 2082;
      int v23 = v7;
      __int16 v24 = 1040;
      LODWORD(v25[0]) = 4;
      WORD2(v25[0]) = 2098;
      *(void *)((char *)v25 + 6) = &v17;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:handleSqlError on read-only db, path:%{public, location:escape_only}s, rc:%{pub lic, location:SqliteResult}.*P}",  buf,  0x2Cu);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v8 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      if (a2[23] >= 0) {
        int v9 = a2;
      }
      else {
        int v9 = *(char **)a2;
      }
      *(_DWORD *)stat buf = 68289794;
      int v19 = 0;
      __int16 v20 = 2082;
      uint64_t v21 = "";
      __int16 v22 = 2082;
      int v23 = v9;
      __int16 v24 = 1040;
      LODWORD(v25[0]) = 4;
      WORD2(v25[0]) = 2098;
      *(void *)((char *)v25 + 6) = &v17;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v8,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "handleSqlError on read-only db",  "{msg%{public}.0s:handleSqlError on read-only db, path:%{public, location:escape_only}s, rc:%{pub lic, location:SqliteResult}.*P}",  buf,  0x2Cu);
    }
  }

void sub_1003B82DC(sqlite3 *a1, uint64_t a2)
{
  if (a1 && &_CPSqliteDatabaseDelete)
  {
    if ((CPSqliteDatabaseDelete(a1) & 1) != 0) {
      return;
    }
  }

  else if (!a1)
  {
    goto LABEL_13;
  }

  if (qword_101934A20 != -1) {
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }
  uint64_t v4 = (os_log_s *)off_101934A28;
  if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
  {
    *(_DWORD *)stat buf = 68289026;
    int v70 = 0;
    __int16 v71 = 2082;
    char v72 = "";
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Could not delete the database with CPSqliteDatabaseDelete()}",  buf,  0x12u);
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
  }

  uint64_t v5 = (os_log_s *)off_101934A28;
  if (!os_signpost_enabled((os_log_t)off_101934A28)) {
    goto LABEL_15;
  }
  *(_DWORD *)stat buf = 68289026;
  int v70 = 0;
  __int16 v71 = 2082;
  char v72 = "";
  _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v5,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Could not delete the database with CPSqliteDatabaseDelete()",  "{msg%{public}.0s:Could not delete the database with CPSqliteDatabaseDelete()}",  buf,  0x12u);
LABEL_13:
  if (qword_101934A20 != -1) {
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }
LABEL_15:
  int v6 = (os_log_s *)off_101934A28;
  if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
  {
    int v7 = *(char *)(a2 + 23) >= 0 ? (void **)a2 : *(void ***)a2;
    *(_DWORD *)stat buf = 68289282;
    int v70 = 0;
    __int16 v71 = 2082;
    char v72 = "";
    __int16 v73 = 2082;
    unsigned __int8 v74 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Falling back to file deletion, path:%{public, location:escape_only}s}",  buf,  0x1Cu);
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
  }

  uint64_t v8 = (os_log_s *)off_101934A28;
  if (os_signpost_enabled((os_log_t)off_101934A28))
  {
    else {
      int v9 = *(void ***)a2;
    }
    *(_DWORD *)stat buf = 68289282;
    int v70 = 0;
    __int16 v71 = 2082;
    char v72 = "";
    __int16 v73 = 2082;
    unsigned __int8 v74 = v9;
    _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v8,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Falling back to file deletion",  "{msg%{public}.0s:Falling back to file deletion, path:%{public, location:escape_only}s}",  buf,  0x1Cu);
  }

  sqlite3_close(a1);
  else {
    int v10 = *(const char **)a2;
  }
  if (remove(v10))
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    int v11 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      uint64_t v12 = *(char *)(a2 + 23) >= 0 ? (void **)a2 : *(void ***)a2;
      int v13 = *__error();
      __int16 v14 = __error();
      int v15 = strerror(*v14);
      *(_DWORD *)stat buf = 68289794;
      int v70 = 0;
      __int16 v71 = 2082;
      char v72 = "";
      __int16 v73 = 2082;
      unsigned __int8 v74 = v12;
      __int16 v75 = 1026;
      int v76 = v13;
      __int16 v77 = 2082;
      __int128 v78 = v15;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:could not remove file, path:%{public, location:escape_only}s, errno:%{public}d, error:%{public, location:escape_only}s}",  buf,  0x2Cu);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v16 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      else {
        int v17 = *(void ***)a2;
      }
      int v18 = *__error();
      int v19 = __error();
      __int16 v20 = strerror(*v19);
      *(_DWORD *)stat buf = 68289794;
      int v70 = 0;
      __int16 v71 = 2082;
      char v72 = "";
      __int16 v73 = 2082;
      unsigned __int8 v74 = v17;
      __int16 v75 = 1026;
      int v76 = v18;
      __int16 v77 = 2082;
      __int128 v78 = v20;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v16,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "could not remove file",  "{msg%{public}.0s:could not remove file, path:%{public, location:escape_only}s, errno:%{public}d, error:%{public, location:escape_only}s}",  buf,  0x2Cu);
    }
  }

  else {
    size_t v21 = *(void *)(a2 + 8);
  }
  __int16 v22 = v67;
  sub_1000392EC((uint64_t)v67, v21 + 8);
  if (v68 < 0) {
    __int16 v22 = (void **)v67[0];
  }
  if (v21)
  {
    else {
      int v23 = *(const void **)a2;
    }
    memmove(v22, v23, v21);
  }

  strcpy((char *)v22 + v21, "-journal");
  if (v68 >= 0) {
    __int16 v24 = v67;
  }
  else {
    __int16 v24 = (void **)v67[0];
  }
  if (remove((const char *)v24))
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    std::stringbuf v25 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      __int16 v26 = v68 >= 0 ? v67 : (void **)v67[0];
      int v27 = *__error();
      __int16 v28 = __error();
      uint64_t v29 = strerror(*v28);
      *(_DWORD *)stat buf = 68289794;
      int v70 = 0;
      __int16 v71 = 2082;
      char v72 = "";
      __int16 v73 = 2082;
      unsigned __int8 v74 = v26;
      __int16 v75 = 1026;
      int v76 = v27;
      __int16 v77 = 2082;
      __int128 v78 = v29;
      _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:could not remove file, path:%{public, location:escape_only}s, errno:%{public}d, error:%{public, location:escape_only}s}",  buf,  0x2Cu);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    __int128 v30 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      if (v68 >= 0) {
        uint64_t v31 = v67;
      }
      else {
        uint64_t v31 = (void **)v67[0];
      }
      int v32 = *__error();
      std::string::size_type v33 = __error();
      std::string::size_type v34 = strerror(*v33);
      *(_DWORD *)stat buf = 68289794;
      int v70 = 0;
      __int16 v71 = 2082;
      char v72 = "";
      __int16 v73 = 2082;
      unsigned __int8 v74 = v31;
      __int16 v75 = 1026;
      int v76 = v32;
      __int16 v77 = 2082;
      __int128 v78 = v34;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v30,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "could not remove file",  "{msg%{public}.0s:could not remove file, path:%{public, location:escape_only}s, errno:%{public}d, error:%{public, location:escape_only}s}",  buf,  0x2Cu);
    }
  }

  else {
    size_t v35 = *(void *)(a2 + 8);
  }
  __int128 v36 = v65;
  sub_1000392EC((uint64_t)v65, v35 + 4);
  if (v66 < 0) {
    __int128 v36 = (void **)v65[0];
  }
  if (v35)
  {
    else {
      unsigned __int8 v37 = *(const void **)a2;
    }
    memmove(v36, v37, v35);
  }

  strcpy((char *)v36 + v35, "-wal");
  if (v66 >= 0) {
    __int128 v38 = v65;
  }
  else {
    __int128 v38 = (void **)v65[0];
  }
  if (remove((const char *)v38))
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    uint64_t v39 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      int v40 = v66 >= 0 ? v65 : (void **)v65[0];
      int v41 = *__error();
      std::string::size_type v42 = __error();
      int v43 = strerror(*v42);
      *(_DWORD *)stat buf = 68289794;
      int v70 = 0;
      __int16 v71 = 2082;
      char v72 = "";
      __int16 v73 = 2082;
      unsigned __int8 v74 = v40;
      __int16 v75 = 1026;
      int v76 = v41;
      __int16 v77 = 2082;
      __int128 v78 = v43;
      _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:could not remove file, path:%{public, location:escape_only}s, errno:%{public}d, error:%{public, location:escape_only}s}",  buf,  0x2Cu);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    __int128 v44 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      if (v66 >= 0) {
        char v45 = v65;
      }
      else {
        char v45 = (void **)v65[0];
      }
      int v46 = *__error();
      int v47 = __error();
      int v48 = strerror(*v47);
      *(_DWORD *)stat buf = 68289794;
      int v70 = 0;
      __int16 v71 = 2082;
      char v72 = "";
      __int16 v73 = 2082;
      unsigned __int8 v74 = v45;
      __int16 v75 = 1026;
      int v76 = v46;
      __int16 v77 = 2082;
      __int128 v78 = v48;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v44,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "could not remove file",  "{msg%{public}.0s:could not remove file, path:%{public, location:escape_only}s, errno:%{public}d, error:%{public, location:escape_only}s}",  buf,  0x2Cu);
    }
  }

  else {
    size_t v49 = *(void *)(a2 + 8);
  }
  char v50 = __p;
  sub_1000392EC((uint64_t)__p, v49 + 4);
  if (v64 < 0) {
    char v50 = (void **)__p[0];
  }
  if (v49)
  {
    else {
      __int128 v51 = *(const void **)a2;
    }
    memmove(v50, v51, v49);
  }

  strcpy((char *)v50 + v49, "-shm");
  if (v64 >= 0) {
    uint64_t v52 = __p;
  }
  else {
    uint64_t v52 = (void **)__p[0];
  }
  if (remove((const char *)v52))
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    __int128 v53 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      __int16 v54 = v64 >= 0 ? __p : (void **)__p[0];
      int v55 = *__error();
      char v56 = __error();
      __int128 v57 = strerror(*v56);
      *(_DWORD *)stat buf = 68289794;
      int v70 = 0;
      __int16 v71 = 2082;
      char v72 = "";
      __int16 v73 = 2082;
      unsigned __int8 v74 = v54;
      __int16 v75 = 1026;
      int v76 = v55;
      __int16 v77 = 2082;
      __int128 v78 = v57;
      _os_log_impl( (void *)&_mh_execute_header,  v53,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:could not remove file, path:%{public, location:escape_only}s, errno:%{public}d, error:%{public, location:escape_only}s}",  buf,  0x2Cu);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    int v58 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      if (v64 >= 0) {
        int v59 = __p;
      }
      else {
        int v59 = (void **)__p[0];
      }
      int v60 = *__error();
      int v61 = __error();
      char v62 = strerror(*v61);
      *(_DWORD *)stat buf = 68289794;
      int v70 = 0;
      __int16 v71 = 2082;
      char v72 = "";
      __int16 v73 = 2082;
      unsigned __int8 v74 = v59;
      __int16 v75 = 1026;
      int v76 = v60;
      __int16 v77 = 2082;
      __int128 v78 = v62;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v58,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "could not remove file",  "{msg%{public}.0s:could not remove file, path:%{public, location:escape_only}s, errno:%{public}d, error:%{public, location:escape_only}s}",  buf,  0x2Cu);
    }
  }

  if (v64 < 0) {
    operator delete(__p[0]);
  }
  if (v66 < 0) {
    operator delete(v65[0]);
  }
  if (v68 < 0) {
    operator delete(v67[0]);
  }
}

void sub_1003B8DFC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20, char a21, void *a22, uint64_t a23, int a24, __int16 a25, char a26, char a27)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

sqlite3 *sub_1003B8E64(uint64_t a1)
{
  __n128 result = *(sqlite3 **)(a1 + 8);
  if (result)
  {
    __n128 result = (sqlite3 *)sqlite3_extended_errcode(result);
    if ((_DWORD)result)
    {
      if ((int)result > 538)
      {
        if ((int)result > 2569)
        {
          if ((int)result <= 5129)
          {
            if ((int)result <= 3593)
            {
              if ((int)result <= 2825)
              {
                if ((_DWORD)result == 2570) {
                  sub_1003AB090();
                }
                if ((_DWORD)result == 2579) {
                  sub_1003B18B0();
                }
              }

              else
              {
                switch((_DWORD)result)
                {
                  case 0xB0A:
                    sub_1003AB2B0();
                  case 0xC0A:
                    sub_1003AB4D0();
                  case 0xD0A:
                    sub_1003AB6F0();
                }
              }
            }

            else if ((int)result > 4361)
            {
              switch((_DWORD)result)
              {
                case 0x110A:
                  sub_1003ABF70();
                case 0x120A:
                  sub_1003AC190();
                case 0x130A:
                  sub_1003AC3B0();
              }
            }

            else
            {
              switch((_DWORD)result)
              {
                case 0xE0A:
                  sub_1003AB910();
                case 0xF0A:
                  sub_1003ABB30();
                case 0x100A:
                  sub_1003ABD50();
              }
            }
          }

          else if ((int)result > 6665)
          {
            if ((int)result > 7433)
            {
              switch((_DWORD)result)
              {
                case 0x1D0A:
                  sub_1003AD8F0();
                case 0x1E0A:
                  sub_1003ADB10();
                case 0x1F0A:
                  sub_1003ADD30();
              }
            }

            else
            {
              switch((_DWORD)result)
              {
                case 0x1A0A:
                  sub_1003AD290();
                case 0x1B0A:
                  sub_1003AD4B0();
                case 0x1C0A:
                  sub_1003AD6D0();
              }
            }
          }

          else if ((int)result > 5897)
          {
            switch((_DWORD)result)
            {
              case 0x170A:
                sub_1003ACC30();
              case 0x180A:
                sub_1003ACE50();
              case 0x190A:
                sub_1003AD070();
            }
          }

          else
          {
            switch((_DWORD)result)
            {
              case 0x140A:
                sub_1003AC5D0();
              case 0x150A:
                sub_1003AC7F0();
              case 0x160A:
                sub_1003ACA10();
            }
          }
        }

        else if ((int)result <= 1289)
        {
          if ((int)result <= 786)
          {
            if ((int)result <= 775)
            {
              if ((_DWORD)result == 539) {
                sub_1003B1CF0();
              }
              if ((_DWORD)result == 769) {
                sub_1003A9B50();
              }
            }

            else
            {
              switch((_DWORD)result)
              {
                case 0x308:
                  sub_1003AFAF0();
                case 0x30A:
                  sub_1003AA1B0();
                case 0x30E:
                  sub_1003AEC10();
              }
            }
          }

          else if ((int)result > 1037)
          {
            switch((_DWORD)result)
            {
              case 0x40E:
                sub_1003AEE30();
              case 0x413:
                sub_1003B0BF0();
              case 0x508:
                sub_1003AFF30();
            }
          }

          else
          {
            switch((_DWORD)result)
            {
              case 0x313:
                sub_1003B09D0();
              case 0x408:
                sub_1003AFD10();
              case 0x40A:
                sub_1003AA3D0();
            }
          }
        }

        else if ((int)result > 1801)
        {
          if ((int)result > 2066)
          {
            switch((_DWORD)result)
            {
              case 0x813:
                sub_1003B1470();
              case 0x90A:
                sub_1003AAE70();
              case 0x913:
                sub_1003B1690();
            }
          }

          else
          {
            switch((_DWORD)result)
            {
              case 0x70A:
                sub_1003AAA30();
              case 0x713:
                sub_1003B1250();
              case 0x80A:
                sub_1003AAC50();
            }
          }
        }

        else if ((int)result > 1543)
        {
          switch((_DWORD)result)
          {
            case 0x608:
              sub_1003B0150();
            case 0x60A:
              sub_1003AA810();
            case 0x613:
              sub_1003B1030();
          }
        }

        else
        {
          switch((_DWORD)result)
          {
            case 0x50A:
              sub_1003AA5F0();
            case 0x50E:
              sub_1003AF050();
            case 0x513:
              sub_1003B0E10();
          }
        }
      }

      else if ((int)result > 100)
      {
        switch((int)result)
        {
          case 256:
            sub_1003B2350();
          case 257:
            sub_1003A9710();
          case 258:
          case 259:
          case 260:
          case 263:
          case 265:
          case 268:
          case 269:
          case 271:
          case 272:
          case 273:
          case 274:
          case 276:
          case 277:
          case 278:
          case 280:
          case 281:
          case 282:
            break;
          case 261:
            sub_1003AE390();
          case 262:
            sub_1003ADF50();
          case 264:
            sub_1003AF6B0();
          case 266:
            sub_1003A9D70();
          case 267:
            sub_1003AF270();
          case 270:
            sub_1003AE7D0();
          case 275:
            sub_1003B0590();
          case 279:
            sub_1003B2130();
          case 283:
            sub_1003B1AD0();
          case 284:
            sub_1003B1F10();
          default:
            switch((int)result)
            {
              case 513:
                sub_1003A9930();
              case 514:
              case 515:
              case 519:
              case 521:
              case 524:
              case 525:
              case 527:
              case 528:
              case 529:
              case 530:
                goto LABEL_169;
              case 516:
                sub_1003B0370();
              case 517:
                sub_1003AE5B0();
              case 518:
                sub_1003AE170();
              case 520:
                sub_1003AF8D0();
              case 522:
                sub_1003A9F90();
              case 523:
                sub_1003AF490();
              case 526:
                sub_1003AE9F0();
              case 531:
                sub_1003B07B0();
              default:
                if ((_DWORD)result == 101) {
                  sub_1003A94F0();
                }
                return result;
            }
        }
      }

      else
      {
        switch((int)result)
        {
          case 1:
            sub_1003A5750();
          case 2:
            sub_1003A5970();
          case 3:
            sub_1003A5B90();
          case 4:
            sub_1003A5DB0();
          case 5:
            sub_1003A5FD0();
          case 6:
            sub_1003A61F0();
          case 7:
            sub_1003A6410();
          case 8:
            sub_1003A6630();
          case 9:
            sub_1003A6850();
          case 10:
            sub_1003A6A70();
          case 11:
            sub_1003A6C90();
          case 12:
            sub_1003A6EB0();
          case 13:
            sub_1003A70D0();
          case 14:
            sub_1003A72F0();
          case 15:
            sub_1003A7510();
          case 16:
            sub_1003A7730();
          case 17:
            sub_1003A7950();
          case 18:
            sub_1003A7B70();
          case 19:
            sub_1003A7D90();
          case 20:
            sub_1003A7FB0();
          case 21:
            sub_1003A81D0();
          case 22:
            sub_1003A83F0();
          case 23:
            sub_1003A8610();
          case 24:
            sub_1003A8830();
          case 25:
            sub_1003A8A50();
          case 26:
            sub_1003A8C70();
          case 27:
            sub_1003A8E90();
          case 28:
            sub_1003A90B0();
          default:
            if ((_DWORD)result == 100) {
              sub_1003A92D0();
            }
            return result;
        }
      }

LABEL_169:
      sub_1003B2570();
    }
  }

  return result;
}

  *(_BYTE *)(a2 + 1) = 1;
  if (qword_1019345D0 != -1) {
    dispatch_once(&qword_1019345D0, &stru_101879FD0);
  }
  int v55 = (os_log_s *)qword_1019345D8;
  if (os_log_type_enabled((os_log_t)qword_1019345D8, OS_LOG_TYPE_DEBUG))
  {
    char v56 = *(void *)(a1 + 8);
    *(_DWORD *)stat buf = 136315394;
    v192 = "alertCanceledBecauseOfReferee";
    v193 = 2048;
    v194 = v56;
    _os_log_impl( (void *)&_mh_execute_header,  v55,  OS_LOG_TYPE_DEBUG,  "CLFallImpactMetrics: Setting %s for impact at %f",  buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019345D0 != -1) {
      dispatch_once(&qword_1019345D0, &stru_101879FD0);
    }
    float v147 = *(void *)(a1 + 8);
    v187 = 136315394;
    v188 = "alertCanceledBecauseOfReferee";
    v189 = 2048;
    v190 = v147;
    LODWORD(v186) = 22;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345D8,  2LL,  "CLFallImpactMetrics: Setting %s for impact at %f",  (const char *)&v187,  v186);
    float v149 = (uint8_t *)v148;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFallImpactMetrics::processImpactCancelReason(ImpactContext &, ImpactCandidateEvent &, AlertCandidateEvent & , SOSCandidateEvent &) const",  "%s\n",  v148);
    if (v149 != buf) {
      free(v149);
    }
  }

  a4[15] = 1;
  int v10 = *(void *)(a1 + 24);
  if ((v10 & 0x1000000000LL) == 0)
  {
LABEL_25:
    if ((v10 & 0x2000000000LL) == 0) {
      goto LABEL_26;
    }
    goto LABEL_181;
  }

    __break(1u);
  }

  int v58 = *(_BYTE *)(a2 + 324);
  v6 |= 0x2000uLL;
  *uint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_BYTE *)(a1 + 324) = v58;
  uint64_t v4 = *v3;
  int v7 = *(void *)(a2 + 364);
  if ((v7 & 0x400) == 0)
  {
LABEL_64:
    if ((v4 & 0x2000000000LL) == 0) {
      goto LABEL_65;
    }
    goto LABEL_171;
  }

  PB::TextFormatter::format(this, "numUshaCPEpochThreshold", *(_DWORD *)(a1 + 204));
  int v7 = *v5;
  int v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x40000000000LL) == 0)
  {
LABEL_68:
    if ((v7 & 0x80000000000LL) == 0) {
      goto LABEL_69;
    }
    goto LABEL_171;
  }

  __n128 result = PB::Writer::write(this, *(_BYTE *)(v3 + 324), 0x195u);
  uint64_t v5 = *v4;
  int v6 = v4[1];
  if ((v6 & 0x400) == 0)
  {
LABEL_64:
    if ((v5 & 0x2000000000LL) == 0) {
      goto LABEL_65;
    }
    goto LABEL_171;
  }

uint64_t sub_1003B92D4(uint64_t result, const char *a2)
{
  if (*(_BYTE *)(result + 57))
  {
    uint64_t v3 = result;
    sub_1003B9314(result, a2);
    return sub_1003B9660(v3, a2);
  }

  return result;
}

uint64_t sub_1003B9314(uint64_t a1, const char *a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  v23[19] = v4;
  (*(void (**)(uint64_t))(*(void *)v4 + 16LL))(v4);
  __int16 v24 = 256;
  sub_10000CE18((uint64_t)v20);
  size_t v5 = strlen(a2);
  int v6 = sub_10000CF44(&v21, (uint64_t)a2, v5);
  sub_10000CF44(v6, (uint64_t)"IncrementRowCount", 17LL);
  std::stringbuf::str(&__str, &v22);
  if ((__str.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_str = &__str;
  }
  else {
    p_str = (std::stringbuf::string_type *)__str.__r_.__value_.__r.__words[0];
  }
  sub_1003BB3BC(a1, (char *)p_str);
  memset(&__str, 0, sizeof(__str));
  std::string::operator=(&v22.__str_, &__str);
  sub_10023BE94((uint64_t)&v22);
  size_t v8 = strlen(a2);
  int v9 = sub_10000CF44(&v21, (uint64_t)a2, v8);
  sub_10000CF44(v9, (uint64_t)"DecrementRowCount", 17LL);
  std::stringbuf::str(&__str, &v22);
  if ((__str.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    int v10 = &__str;
  }
  else {
    int v10 = (std::stringbuf::string_type *)__str.__r_.__value_.__r.__words[0];
  }
  sub_1003BB3BC(a1, (char *)v10);
  memset(&__str, 0, sizeof(__str));
  std::string::operator=(&v22.__str_, &__str);
  sub_10023BE94((uint64_t)&v22);
  size_t v11 = strlen(a2);
  uint64_t v12 = sub_10000CF44(&v21, (uint64_t)a2, v11);
  sub_10000CF44(v12, (uint64_t)"Counts", 6LL);
  std::stringbuf::str(&__p, &v22);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
  }
  sub_1003B7AEC(a1, "table", (char *)p_p, &__str);
  if ((char)__str.__r_.__value_.__s.__size_ < 0)
  {
    BOOL v14 = __str.__r_.__value_.__l.__size_ == 0;
    operator delete(__str.__r_.__value_.__l.__data_);
  }

  else
  {
    BOOL v14 = __str.__r_.__value_.__s.__size_ == 0;
  }

  if ((char)__p.__r_.__value_.__s.__size_ < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if (v14) {
      goto LABEL_30;
    }
  }

  else if (v14)
  {
    goto LABEL_30;
  }

  std::stringbuf::str(&__str, &v22);
  if ((__str.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    int v15 = &__str;
  }
  else {
    int v15 = (std::stringbuf::string_type *)__str.__r_.__value_.__r.__words[0];
  }
  sub_1003BB6F8(a1, (char *)v15);
LABEL_30:
  *(void *)((char *)v20
  uint64_t v21 = v16;
  std::streambuf::~streambuf(&v22);
  std::ios::~ios(v23);
  return (*(uint64_t (**)(uint64_t))(*(void *)v4 + 24LL))(v4);
}

void sub_1003B95EC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20, char a21)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a21);
  sub_1011C52D0(v21 - 88);
  _Unwind_Resume(a1);
}

uint64_t sub_1003B9660(uint64_t a1, const char *a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  v37[19] = v4;
  (*(void (**)(uint64_t))(*(void *)v4 + 16LL))(v4);
  __int16 v38 = 256;
  int v40 = "Count";
  int v41 = 1;
  __int16 v42 = 0;
  char v43 = 0;
  char v44 = 0;
  uint64_t v45 = 0LL;
  int v46 = 5;
  __int16 v47 = 0;
  char v48 = 0;
  char v49 = 0;
  sub_10000CE18((uint64_t)v34);
  size_t v5 = strlen(a2);
  int v6 = sub_10000CF44(&v35, (uint64_t)a2, v5);
  sub_10000CF44(v6, (uint64_t)"Counts", 6LL);
  std::stringbuf::str((std::stringbuf::string_type *)__str, &v36);
  if (__str[23] >= 0) {
    int v7 = __str;
  }
  else {
    int v7 = *(const char **)__str;
  }
  sub_1003BBD60(a1, v7, &v40);
  if ((__str[23] & 0x80000000) != 0) {
    operator delete(*(void **)__str);
  }
  memset(__str, 0, 24);
  std::string::operator=(&v36.__str_, (const std::string *)__str);
  sub_10023BE94((uint64_t)&v36);
  if ((__str[23] & 0x80000000) != 0) {
    operator delete(*(void **)__str);
  }
  size_t v8 = sub_10000CF44(&v35, (uint64_t)"SELECT COUNT(*) FROM ", 21LL);
  size_t v9 = strlen(a2);
  sub_10000CF44(v8, (uint64_t)a2, v9);
  std::stringbuf::str((std::stringbuf::string_type *)__str, &v36);
  if (__str[23] >= 0) {
    int v10 = __str;
  }
  else {
    int v10 = *(char **)__str;
  }
  size_t v11 = sub_1003B5AC8(a1, v10);
  uint64_t v12 = v11;
  if ((__str[23] & 0x80000000) == 0)
  {
    if (v11) {
      goto LABEL_13;
    }
LABEL_16:
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    BOOL v14 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(void *)std::stringbuf::string_type __str = 68289283LL;
      *(_WORD *)&__str[8] = 2082;
      *(void *)&__str[10] = "";
      *(_WORD *)&__str[18] = 2081;
      *(void *)&__str[20] = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Couldn't create select count statement, table:%{private, location:escape_only}s}",  __str,  0x1Cu);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    int v15 = (os_log_s *)off_101934A28;
    if (!os_signpost_enabled((os_log_t)off_101934A28)) {
      goto LABEL_31;
    }
    *(void *)std::stringbuf::string_type __str = 68289283LL;
    *(_WORD *)&__str[8] = 2082;
    *(void *)&__str[10] = "";
    *(_WORD *)&__str[18] = 2081;
    *(void *)&__str[20] = a2;
    uint64_t v16 = "Couldn't create select count statement";
    int v17 = "{msg%{public}.0s:Couldn't create select count statement, table:%{private, location:escape_only}s}";
    goto LABEL_30;
  }

  operator delete(*(void **)__str);
  if (!v12) {
    goto LABEL_16;
  }
LABEL_13:
  if (sqlite3_step(v12) == 100)
  {
    uint64_t v13 = sqlite3_column_int(v12, 0);
    goto LABEL_32;
  }

  if (qword_101934A20 != -1) {
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }
  int v18 = (os_log_s *)off_101934A28;
  if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
  {
    *(void *)std::stringbuf::string_type __str = 68289283LL;
    *(_WORD *)&__str[8] = 2082;
    *(void *)&__str[10] = "";
    *(_WORD *)&__str[18] = 2081;
    *(void *)&__str[20] = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Couldn't get row count for, table:%{private, location:escape_only}s}",  __str,  0x1Cu);
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
  }

  int v15 = (os_log_s *)off_101934A28;
  if (os_signpost_enabled((os_log_t)off_101934A28))
  {
    *(void *)std::stringbuf::string_type __str = 68289283LL;
    *(_WORD *)&__str[8] = 2082;
    *(void *)&__str[10] = "";
    *(_WORD *)&__str[18] = 2081;
    *(void *)&__str[20] = a2;
    uint64_t v16 = "Couldn't get row count for";
    int v17 = "{msg%{public}.0s:Couldn't get row count for, table:%{private, location:escape_only}s}";
LABEL_30:
    _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v15,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  v16,  v17,  __str,  0x1Cu);
  }

void sub_1003B9DB0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, char a44)
{
}

uint64_t sub_1003B9E30(uint64_t a1, char *a2, const char **a3, const std::string::value_type **a4, int a5)
{
  if (!a2)
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    int v18 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)stat buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)int v60 = 2082;
      *(void *)&v60[2] = "";
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Must provide a table name}",  buf,  0x12u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    int v19 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)stat buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)int v60 = 2082;
      *(void *)&v60[2] = "";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v19,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Must provide a table name",  "{msg%{public}.0s:Must provide a table name}",  buf,  0x12u);
    }

    return 0LL;
  }

  if (*(_BYTE *)(a1 + 56)) {
    return 0LL;
  }
  uint64_t v57 = *(void *)(a1 + 16);
  uint64_t v47 = v57;
  (*(void (**)(void))(*(void *)v57 + 16LL))();
  __int16 v58 = 256;
  __s1 = 0LL;
  size_t __n = 0LL;
  uint64_t v56 = 0LL;
  std::stringbuf::string_type __p = 0LL;
  uint64_t v52 = 0LL;
  uint64_t v53 = 0LL;
  BOOL v10 = sub_1003BE7C0(a1, a2, (uint64_t)&__s1, (uint64_t)&__p);
  BOOL v11 = sub_1003BC438(a1, a2);
  BOOL v12 = v11;
  if (!v11 && v10)
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    uint64_t v21 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)stat buf = 68289283;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)int v60 = 2082;
      *(void *)&v60[2] = "";
      __int16 v61 = 2081;
      char v62 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Table does not exist but its metadata does, table:%{private, location:escape_only}s}",  buf,  0x1Cu);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    std::stringbuf v22 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)stat buf = 68289283;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)int v60 = 2082;
      *(void *)&v60[2] = "";
      __int16 v61 = 2081;
      char v62 = a2;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v22,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Table does not exist but its metadata does",  "{msg%{public}.0s:Table does not exist but its metadata does, table:%{private, location:escape_only}s}",  buf,  0x1Cu);
    }

    sub_1003BF894(a1, a2);
    goto LABEL_37;
  }

  if (!a5) {
    goto LABEL_39;
  }
  if (!v10)
  {
    if (!v11) {
      goto LABEL_38;
    }
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    std::stringbuf v36 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)stat buf = 68289283;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)int v60 = 2082;
      *(void *)&v60[2] = "";
      __int16 v61 = 2081;
      char v62 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v36,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:Table was created by an unknown device (table info missing). Deleting, table:%{priv ate, location:escape_only}s}",  buf,  0x1Cu);
    }

    sub_1003BB6F8(a1, a2);
LABEL_37:
    BOOL v12 = 0;
LABEL_38:
    BOOL v10 = 0;
    goto LABEL_39;
  }

  sub_1004F2598();
  sub_1004F6004((uint64_t)&v48);
  uint64_t v13 = v50;
  if ((v50 & 0x80u) == 0) {
    size_t v14 = v50;
  }
  else {
    size_t v14 = v49;
  }
  uint64_t v15 = HIBYTE(v53);
  if (v53 < 0) {
    uint64_t v15 = v52;
  }
  if (v14 != v15) {
    goto LABEL_98;
  }
  if (v53 >= 0) {
    p_p = (unsigned __int8 *)&__p;
  }
  else {
    p_p = (unsigned __int8 *)__p;
  }
  if ((v50 & 0x80) != 0)
  {
    if (!memcmp(v48, p_p, v49)) {
      goto LABEL_107;
    }
LABEL_98:
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    char v43 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v44 = (char *)&v48;
      if ((v50 & 0x80u) != 0) {
        uint64_t v44 = (char *)v48;
      }
      uint64_t v45 = &__p;
      if (v53 < 0) {
        uint64_t v45 = __p;
      }
      *(_DWORD *)stat buf = 68289795;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)int v60 = 2082;
      *(void *)&v60[2] = "";
      __int16 v61 = 2081;
      char v62 = a2;
      __int16 v63 = 2081;
      char v64 = v44;
      __int16 v65 = 2081;
      char v66 = v45;
      _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#warning Table was created by a different device (serial numbers do not match). Deleting , table:%{private, location:escape_only}s, expected:%{private, location:escape_only}s, actual:%{priv ate, location:escape_only}s}",  buf,  0x30u);
    }

    sub_1003BB6F8(a1, a2);
    BOOL v12 = 0;
    BOOL v10 = 0;
    goto LABEL_112;
  }

  if (v50)
  {
    int v17 = &v48;
    while (*(unsigned __int8 *)v17 == *p_p)
    {
      int v17 = (void **)((char *)v17 + 1);
      ++p_p;
      if (!--v13) {
        goto LABEL_107;
      }
    }

    goto LABEL_98;
  }

void sub_1003BA6E0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20, char a21, char a22, void *a23, uint64_t a24, int a25, __int16 a26, char a27, char a28, char a29)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  sub_1011C52D0((uint64_t)&a29);
  _Unwind_Resume(a1);
}

uint64_t sub_1003BA74C(uint64_t a1, const char *a2, const std::string::value_type **a3)
{
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v64 = v6;
  (*(void (**)(uint64_t))(*(void *)v6 + 16LL))(v6);
  __int16 v65 = 256;
  if (!a3) {
    return (*(uint64_t (**)(uint64_t))(*(void *)v6 + 24LL))(v6);
  }
  memset(&v63, 0, sizeof(v63));
  sub_10000CE18((uint64_t)v59);
  size_t v7 = strlen(a2);
  size_t v8 = sub_10000CF44(&v60, (uint64_t)a2, v7);
  sub_10000CF44(v8, (uint64_t)"Index", 5LL);
  sub_1003BAFA4(a3, &v56);
  std::string v63 = v56;
  sub_10000CE18((uint64_t)&v56);
  size_t v9 = sub_10000CF44(&v56.__r_.__value_.__l.__cap_, (uint64_t)"CREATE INDEX ", 13LL);
  std::stringbuf::str((std::stringbuf::string_type *)v66, &v61);
  if (v66[23] >= 0) {
    BOOL v10 = v66;
  }
  else {
    BOOL v10 = *(_BYTE **)v66;
  }
  if (v66[23] >= 0) {
    uint64_t v11 = v66[23];
  }
  else {
    uint64_t v11 = *(void *)&v66[8];
  }
  sub_10000CF44(v9, (uint64_t)v10, v11);
  if ((v66[23] & 0x80000000) != 0) {
    operator delete(*(void **)v66);
  }
  BOOL v12 = sub_10000CF44(&v56.__r_.__value_.__l.__cap_, (uint64_t)" ON ", 4LL);
  size_t v13 = strlen(a2);
  size_t v14 = sub_10000CF44(v12, (uint64_t)a2, v13);
  uint64_t v15 = sub_10000CF44(v14, (uint64_t)" (", 2LL);
  if ((v63.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t v16 = &v63;
  }
  else {
    uint64_t v16 = (std::string *)v63.__r_.__value_.__r.__words[0];
  }
  if ((v63.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t size = v63.__r_.__value_.__s.__size_;
  }
  else {
    uint64_t size = v63.__r_.__value_.__l.__size_;
  }
  int v18 = sub_10000CF44(v15, (uint64_t)v16, size);
  sub_10000CF44(v18, (uint64_t)")", 1LL);
  std::stringbuf::str((std::stringbuf::string_type *)v66, &v61);
  if (v66[23] >= 0) {
    int v19 = v66;
  }
  else {
    int v19 = *(char **)v66;
  }
  sub_1003B7AEC(a1, "index", v19, &__p);
  if ((v66[23] & 0x80000000) != 0) {
    operator delete(*(void **)v66);
  }
  std::string::size_type v20 = __p.__r_.__value_.__s.__size_;
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
    std::string::size_type v20 = __p.__r_.__value_.__l.__size_;
  }
  if (v20)
  {
    std::stringbuf::str((std::stringbuf::string_type *)v66, &v57);
    int v21 = v66[23];
    std::stringbuf v22 = *(void **)v66;
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      std::string::size_type v23 = __p.__r_.__value_.__s.__size_;
    }
    else {
      std::string::size_type v23 = __p.__r_.__value_.__l.__size_;
    }
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    if (v66[23] >= 0) {
      size_t v25 = v66[23];
    }
    else {
      size_t v25 = *(void *)&v66[8];
    }
    if (v66[23] >= 0) {
      __int16 v26 = v66;
    }
    else {
      __int16 v26 = *(_BYTE **)v66;
    }
    if (v25 >= v23) {
      size_t v27 = v23;
    }
    else {
      size_t v27 = v25;
    }
    BOOL v28 = memcmp(p_p, v26, v27) == 0;
    BOOL v29 = v25 == v23 && v28;
    if (v21 < 0) {
      operator delete(v22);
    }
    if (v29)
    {
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
      int v30 = (os_log_s *)off_101934A28;
      if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
      {
        std::stringbuf::str(&v54, &v61);
        int v31 = (v54.__r_.__value_.__s.__size_ & 0x80u) == 0
            ? &v54
            : (std::stringbuf::string_type *)v54.__r_.__value_.__r.__words[0];
        *(void *)char v66 = 68289283LL;
        *(_WORD *)&v66[8] = 2082;
        *(void *)&v66[10] = "";
        *(_WORD *)&v66[18] = 2081;
        *(void *)&v66[20] = v31;
        _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:Index already exists; not re-creating, index:%{private, location:escape_only}s}",
          v66,
          0x1Cu);
      }

      goto LABEL_95;
    }

    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    BOOL v35 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
    {
      std::stringbuf::str(&v54, &v61);
      int v36 = (char)v54.__r_.__value_.__s.__size_;
      std::string::size_type v37 = v54.__r_.__value_.__r.__words[0];
      int v38 = (char)__p.__r_.__value_.__s.__size_;
      std::string::size_type v39 = __p.__r_.__value_.__r.__words[0];
      std::stringbuf::str(&v53, &v57);
      int v40 = &__p;
      if (v38 < 0) {
        int v40 = (std::stringbuf::string_type *)v39;
      }
      int v41 = &v54;
      if (v36 < 0) {
        int v41 = (std::stringbuf::string_type *)v37;
      }
      *(_DWORD *)char v66 = 68289795;
      __int16 v42 = &v53;
      if ((v53.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        __int16 v42 = (std::stringbuf::string_type *)v53.__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)&v66[4] = 0;
      *(_WORD *)&v66[8] = 2082;
      *(void *)&v66[10] = "";
      *(_WORD *)&v66[18] = 2081;
      *(void *)&v66[20] = v41;
      __int16 v67 = 2081;
      char v68 = v40;
      __int16 v69 = 2081;
      int v70 = v42;
      _os_log_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:Index already exists but is different; dropping, index:%{private, location:escape_o"
        "nly}s, actual:%{private, location:escape_only}s, expected:%{private, location:escape_only}s}",
        v66,
        0x30u);
    }

    std::stringbuf::str((std::stringbuf::string_type *)v66, &v61);
    if (v66[23] >= 0) {
      char v43 = v66;
    }
    else {
      char v43 = *(const char **)v66;
    }
    sub_1003BB03C(a1, v43);
    if ((v66[23] & 0x80000000) != 0)
    {
      BOOL v34 = *(void **)v66;
      goto LABEL_81;
    }
  }

  else
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    int v32 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
    {
      std::stringbuf::str(&v54, &v61);
      std::string::size_type v33 = (v54.__r_.__value_.__s.__size_ & 0x80u) == 0
          ? &v54
          : (std::stringbuf::string_type *)v54.__r_.__value_.__r.__words[0];
      *(void *)char v66 = 68289283LL;
      *(_WORD *)&v66[8] = 2082;
      *(void *)&v66[10] = "";
      *(_WORD *)&v66[18] = 2081;
      *(void *)&v66[20] = v33;
      _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:Index does not exist; creating, index:%{private, location:escape_only}s}",
        v66,
        0x1Cu);
      if ((char)v54.__r_.__value_.__s.__size_ < 0)
      {
        BOOL v34 = (void *)v54.__r_.__value_.__r.__words[0];
LABEL_81:
        operator delete(v34);
      }
    }
  }

  std::stringbuf::str((std::stringbuf::string_type *)v66, &v57);
  if (v66[23] >= 0) {
    uint64_t v44 = v66;
  }
  else {
    uint64_t v44 = *(char **)v66;
  }
  uint64_t v45 = sub_1003B5AC8(a1, v44);
  int v46 = v45;
  if ((v66[23] & 0x80000000) != 0)
  {
    operator delete(*(void **)v66);
    if (v46) {
      goto LABEL_87;
    }
LABEL_89:
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    uint64_t v47 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEFAULT))
    {
      char v48 = &v63;
      if ((v63.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        char v48 = (std::string *)v63.__r_.__value_.__r.__words[0];
      }
      *(void *)char v66 = 68289539LL;
      *(_WORD *)&v66[8] = 2082;
      *(void *)&v66[10] = "";
      *(_WORD *)&v66[18] = 2081;
      *(void *)&v66[20] = a2;
      __int16 v67 = 2082;
      char v68 = v48;
      _os_log_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#warning Couldn't create index statement, table:%{private, location:escape_only}s, columns:%{public, location:escape_only}s}",  v66,  0x26u);
    }

    goto LABEL_95;
  }

  if (!v45) {
    goto LABEL_89;
  }
LABEL_87:
  sub_1003BB2BC(a1, v46);
  sub_1003B5CCC(*(sqlite3 **)(a1 + 8), v46);
LABEL_95:
  *(std::string::size_type *)((char *)v56.__r_.__value_.__r.__words
                                        - 24LL)) = v50;
  v56.__r_.__value_.__l.__cap_ = v51;
  std::streambuf::~streambuf(&v57);
  std::ios::~ios(&v58);
  v59[0] = v49;
  *(void *)((char *)v59 + *(void *)(v49 - 24)) = v50;
  std::string::size_type v60 = v51;
  std::streambuf::~streambuf(&v61);
  std::ios::~ios(&v62);
  return (*(uint64_t (**)(uint64_t))(*(void *)v6 + 24LL))(v6);
}

void sub_1003BAEC8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20, int a21, __int16 a22, char a23, char a24, char a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,char a60)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  sub_1011F8850((uint64_t)&a25);
  sub_1011F8850((uint64_t)&a60);
  sub_1011C52D0(v60 - 184);
  _Unwind_Resume(a1);
}

std::string *sub_1003BAFA4@<X0>(const std::string::value_type **a1@<X0>, std::string *a2@<X8>)
{
  __n128 result = (std::string *)sub_1010DDBC0(a2, "");
  if (a1)
  {
    size_t v5 = *a1;
    if (*a1)
    {
      uint64_t v6 = 0LL;
      do
      {
        if (v6)
        {
          std::string::append(a2, ", ");
          size_t v5 = a1[v6];
        }

        __n128 result = std::string::append(a2, v5);
        size_t v7 = &a1[v6++];
        size_t v5 = v7[1];
      }

      while (v5);
    }
  }

  return result;
}

void sub_1003BB020(_Unwind_Exception *exception_object)
{
}

uint64_t sub_1003BB03C(uint64_t a1, const char *a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  v16[19] = v4;
  (*(void (**)(uint64_t))(*(void *)v4 + 16LL))(v4);
  __int16 v17 = 256;
  sub_10000CE18((uint64_t)v13);
  size_t v5 = sub_10000CF44(&v14, (uint64_t)"DROP INDEX ", 11LL);
  size_t v6 = strlen(a2);
  sub_10000CF44(v5, (uint64_t)a2, v6);
  std::stringbuf::str((std::stringbuf::string_type *)v18, &v15);
  if (v18[23] >= 0) {
    size_t v7 = v18;
  }
  else {
    size_t v7 = *(char **)v18;
  }
  size_t v8 = sub_1003B5AC8(a1, v7);
  size_t v9 = v8;
  if ((v18[23] & 0x80000000) != 0)
  {
    operator delete(*(void **)v18);
    if (v9) {
      goto LABEL_6;
    }
  }

  else if (v8)
  {
LABEL_6:
    sub_1003BB2BC(a1, v9);
    sub_1003B5CCC(*(sqlite3 **)(a1 + 8), v9);
    goto LABEL_12;
  }

  if (qword_101934A20 != -1) {
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }
  BOOL v10 = (os_log_s *)off_101934A28;
  if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEFAULT))
  {
    *(void *)int v18 = 68289283LL;
    *(_WORD *)&_WORD v18[8] = 2082;
    *(void *)&v18[10] = "";
    *(_WORD *)&v18[18] = 2081;
    *(void *)&v18[20] = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#warning Couldn't create drop index statement, index:%{private, location:escape_only}s}",  v18,  0x1Cu);
  }

void sub_1003BB268(_Unwind_Exception *exception_object, int a2)
{
  if (a2) {
    sub_100006BB8(exception_object);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1003BB2BC(uint64_t a1, sqlite3_stmt *a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  (*(void (**)(uint64_t))(*(void *)v4 + 16LL))(v4);
  uint64_t v5 = sqlite3_step(a2);
  int v6 = v5;
  BOOL v7 = (_DWORD)v5 == 101;
  if ((_DWORD)v5 != 101)
  {
    sub_1003B76BC(v5, (uint64_t)"sqlite3_step()", v5, a2);
    sub_1003B7D6C(*(sqlite3 **)(a1 + 8), (char *)(a1 + 96), *(unsigned __int8 *)(a1 + 56), v6);
  }

  uint64_t v8 = sqlite3_reset(a2);
  int v9 = v8;
  if ((_DWORD)v8)
  {
    sub_1003B76BC(v8, (uint64_t)"sqlite3_reset()", v8, a2);
    sub_1003B7D6C(*(sqlite3 **)(a1 + 8), (char *)(a1 + 96), *(unsigned __int8 *)(a1 + 56), v9);
    BOOL v7 = 0LL;
  }

  (*(void (**)(uint64_t))(*(void *)v4 + 24LL))(v4);
  return v7;
}

void sub_1003BB3A8(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_1003BB3BC(uint64_t a1, char *a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  v21[19] = v4;
  (*(void (**)(uint64_t))(*(void *)v4 + 16LL))(v4);
  __int16 v22 = 256;
  sub_10000CE18((uint64_t)v18);
  uint64_t v5 = sub_10000CF44(&v19, (uint64_t)"DROP TRIGGER ", 13LL);
  size_t v6 = strlen(a2);
  sub_10000CF44(v5, (uint64_t)a2, v6);
  sub_1003B7AEC(a1, "trigger", a2, (std::stringbuf::string_type *)v23);
  if ((v23[23] & 0x80000000) != 0)
  {
    uint64_t v10 = *(void *)&v23[8];
    operator delete(*(void **)v23);
    if (v10)
    {
LABEL_3:
      std::stringbuf::str((std::stringbuf::string_type *)v23, &v20);
      if (v23[23] >= 0) {
        BOOL v7 = v23;
      }
      else {
        BOOL v7 = *(char **)v23;
      }
      uint64_t v8 = sub_1003B5AC8(a1, v7);
      int v9 = v8;
      if ((v23[23] & 0x80000000) != 0)
      {
        operator delete(*(void **)v23);
        if (v9) {
          goto LABEL_8;
        }
      }

      else if (v8)
      {
LABEL_8:
        sub_1003BB2BC(a1, v9);
        sub_1003B5CCC(*(sqlite3 **)(a1 + 8), v9);
        goto LABEL_20;
      }

      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
      std::stringbuf v15 = (os_log_s *)off_101934A28;
      if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEFAULT))
      {
        *(void *)std::string::size_type v23 = 68289282LL;
        *(_WORD *)&v23[8] = 2082;
        *(void *)&v23[10] = "";
        *(_WORD *)&v23[18] = 2082;
        *(void *)&v23[20] = a2;
        BOOL v12 = "{msg%{public}.0s:#warning Couldn't create drop trigger statement, trigger:%{public, location:escape_only}s}";
        size_t v13 = v15;
        os_log_type_t v14 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_19;
      }

      goto LABEL_20;
    }
  }

  else if (v23[23])
  {
    goto LABEL_3;
  }

  if (qword_101934A20 != -1) {
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }
  uint64_t v11 = (os_log_s *)off_101934A28;
  if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
  {
    *(void *)std::string::size_type v23 = 68289282LL;
    *(_WORD *)&v23[8] = 2082;
    *(void *)&v23[10] = "";
    *(_WORD *)&v23[18] = 2082;
    *(void *)&v23[20] = a2;
    BOOL v12 = "{msg%{public}.0s:Trigger does not exist, trigger:%{public, location:escape_only}s}";
    size_t v13 = v11;
    os_log_type_t v14 = OS_LOG_TYPE_DEBUG;
LABEL_19:
    _os_log_impl((void *)&_mh_execute_header, v13, v14, v12, v23, 0x1Cu);
  }

void sub_1003BB6A0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_1003BB6F8(uint64_t a1, char *a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  (*(void (**)(uint64_t))(*(void *)v4 + 16LL))(v4);
  if (qword_101934A20 != -1) {
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }
  uint64_t v5 = (os_log_s *)off_101934A28;
  if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)stat buf = 68289283;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v11 = 2082;
    BOOL v12 = "";
    __int16 v13 = 2081;
    os_log_type_t v14 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:Dropping table, table:%{private, location:escape_only}s}",  buf,  0x1Cu);
  }

  sub_1003BF894(a1, a2);
  sub_1010DDBC0(buf, "DROP TABLE IF EXISTS ");
  std::string::append((std::string *)buf, a2);
  if (SBYTE3(v14) >= 0) {
    size_t v6 = (char *)buf;
  }
  else {
    size_t v6 = *(char **)buf;
  }
  BOOL v7 = sub_1003B5AC8(a1, v6);
  sub_1003BB2BC(a1, v7);
  sub_1003B5CCC(*(sqlite3 **)(a1 + 8), v7);
  else {
    uint64_t v8 = *(void *)(a1 + 88);
  }
  sub_1003C1EC0(a1, v8);
  if (SBYTE3(v14) < 0) {
    operator delete(*(void **)buf);
  }
  return (*(uint64_t (**)(uint64_t))(*(void *)v4 + 24LL))(v4);
}

void sub_1003BB8A0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a2) {
    sub_100006BB8(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003BB8E4(uint64_t a1, const char *a2, uint64_t a3, int a4)
{
  uint64_t v7 = *(void *)(a1 + 16);
  v38[19] = v7;
  (*(void (**)(uint64_t))(*(void *)v7 + 16LL))(v7);
  __int16 v39 = 256;
  sub_10000CE18((uint64_t)v35);
  if (a4) {
    uint64_t v8 = "Increment";
  }
  else {
    uint64_t v8 = "Decrement";
  }
  if (a4) {
    uint64_t v9 = "INSERT";
  }
  else {
    uint64_t v9 = "DELETE";
  }
  if (a4) {
    uint64_t v10 = "+";
  }
  else {
    uint64_t v10 = "-";
  }
  sub_10000CF44(&v36, (uint64_t)"CREATE TRIGGER IF NOT EXISTS ", 29LL);
  size_t v11 = strlen(a2);
  BOOL v12 = sub_10000CF44(&v36, (uint64_t)a2, v11);
  __int16 v13 = sub_10000CF44(v12, (uint64_t)v8, 9LL);
  sub_10000CF44(v13, (uint64_t)"RowCount", 8LL);
  os_log_type_t v14 = sub_10000CF44(&v36, (uint64_t)" AFTER ", 7LL);
  std::stringbuf v15 = sub_10000CF44(v14, (uint64_t)v9, 6LL);
  uint64_t v16 = sub_10000CF44(v15, (uint64_t)" ON ", 4LL);
  size_t v17 = strlen(a2);
  int v18 = sub_10000CF44(v16, (uint64_t)a2, v17);
  sub_10000CF44(v18, (uint64_t)" FOR EACH ROW BEGIN", 19LL);
  uint64_t v19 = sub_10000CF44(&v36, (uint64_t)" UPDATE ", 8LL);
  size_t v20 = strlen(a2);
  int v21 = sub_10000CF44(v19, (uint64_t)a2, v20);
  __int16 v22 = sub_10000CF44(v21, (uint64_t)"Counts", 6LL);
  std::string::size_type v23 = sub_10000CF44(v22, (uint64_t)" SET ", 5LL);
  uint64_t v24 = sub_10000CF44(v23, (uint64_t)"Count", 5LL);
  size_t v25 = sub_10000CF44(v24, (uint64_t)"=", 1LL);
  __int16 v26 = sub_10000CF44(v25, (uint64_t)"Count", 5LL);
  size_t v27 = sub_10000CF44(v26, (uint64_t)v10, 1LL);
  sub_10000CF44(v27, (uint64_t)"1 WHERE rowid=1; END", 20LL);
  std::stringbuf::str((std::stringbuf::string_type *)v40, &v37);
  if (v40[23] >= 0) {
    BOOL v28 = v40;
  }
  else {
    BOOL v28 = *(char **)v40;
  }
  BOOL v29 = sub_1003B5AC8(a1, v28);
  int v30 = v29;
  if ((v40[23] & 0x80000000) != 0)
  {
    operator delete(*(void **)v40);
    if (v30) {
      goto LABEL_15;
    }
  }

  else if (v29)
  {
LABEL_15:
    sub_1003BB2BC(a1, v30);
    sub_1003B5CCC(*(sqlite3 **)(a1 + 8), v30);
    goto LABEL_24;
  }

  if (qword_101934A20 != -1) {
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }
  int v31 = (os_log_s *)off_101934A28;
  if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
  {
    *(void *)int v40 = 68289283LL;
    *(_WORD *)&v40[8] = 2082;
    *(void *)&v40[10] = "";
    *(_WORD *)&v40[18] = 2081;
    *(void *)&v40[20] = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Couldn't create add count trigger statement, table:%{private, location:escape_only}s}",  v40,  0x1Cu);
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
  }

  int v32 = (os_log_s *)off_101934A28;
  if (os_signpost_enabled((os_log_t)off_101934A28))
  {
    *(void *)int v40 = 68289283LL;
    *(_WORD *)&v40[8] = 2082;
    *(void *)&v40[10] = "";
    *(_WORD *)&v40[18] = 2081;
    *(void *)&v40[20] = a2;
    _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v32,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Couldn't create add count trigger statement",  "{msg%{public}.0s:Couldn't create add count trigger statement, table:%{private, location:escape_only}s}",  v40,  0x1Cu);
  }

void sub_1003BBD0C(_Unwind_Exception *exception_object, int a2)
{
  if (a2) {
    sub_100006BB8(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003BBD60(uint64_t a1, const char *a2, const char **a3)
{
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v28 = v6;
  (*(void (**)(uint64_t))(*(void *)v6 + 16LL))(v6);
  __int16 v29 = 256;
  if (qword_101934A20 != -1) {
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }
  uint64_t v7 = (os_log_s *)off_101934A28;
  if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)stat buf = 68289283;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v35 = 2082;
    *(void *)uint64_t v36 = "";
    *(_WORD *)&v36[8] = 2081;
    *(void *)&v36[10] = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:Creating table, table:%{private, location:escape_only}s}",  buf,  0x1Cu);
  }

  if (a3 && *a3)
  {
    unsigned int v8 = 0;
    uint64_t v9 = (uint64_t *)(a3 + 6);
    do
    {
      v8 += *((unsigned __int8 *)v9 - 36);
      uint64_t v10 = *v9;
      v9 += 6;
    }

    while (v10);
    sub_10000CE18((uint64_t)buf);
    size_t v11 = sub_10000CF44(&v36[6], (uint64_t)"CREATE TABLE ", 13LL);
    size_t v12 = strlen(a2);
    __int16 v13 = sub_10000CF44(v11, (uint64_t)a2, v12);
    sub_10000CF44(v13, (uint64_t)" (", 2LL);
    sub_1003BE030(a3, 1, v8 < 2, (uint64_t)&__p);
    if (SBYTE3(v33) >= 0) {
      p_p = &__p;
    }
    else {
      p_p = __p;
    }
    if (SBYTE3(v33) >= 0) {
      uint64_t v15 = BYTE3(v33);
    }
    else {
      uint64_t v15 = *(void *)v31;
    }
    sub_10000CF44(&v36[6], (uint64_t)p_p, v15);
    if (SBYTE3(v33) < 0) {
      operator delete(__p);
    }
    if (v8 >= 2)
    {
      uint64_t v16 = (const char *)&__p;
      sub_1003BD69C((uint64_t)a3, (std::stringbuf::string_type *)&__p);
      if (SBYTE3(v33) < 0) {
        uint64_t v16 = (const char *)__p;
      }
      size_t v17 = strlen(v16);
      sub_10000CF44(&v36[6], (uint64_t)v16, v17);
      if (SBYTE3(v33) < 0) {
        operator delete(__p);
      }
    }

    sub_1003BE334(a1, (uint64_t)a3, (std::stringbuf::string_type *)&__p);
    if (SBYTE3(v33) >= 0) {
      int v18 = &__p;
    }
    else {
      int v18 = __p;
    }
    if (SBYTE3(v33) >= 0) {
      uint64_t v19 = BYTE3(v33);
    }
    else {
      uint64_t v19 = *(void *)v31;
    }
    sub_10000CF44(&v36[6], (uint64_t)v18, v19);
    if (SBYTE3(v33) < 0) {
      operator delete(__p);
    }
    sub_10000CF44(&v36[6], (uint64_t)")", 1LL);
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    size_t v20 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
    {
      std::stringbuf::str(&v27, (const std::stringbuf *)&v36[14]);
      int v21 = (v27.__r_.__value_.__s.__size_ & 0x80u) == 0
          ? &v27
          : (std::stringbuf::string_type *)v27.__r_.__value_.__r.__words[0];
      std::stringbuf::string_type __p = (void *)68289282;
      *(_WORD *)int v31 = 2082;
      *(void *)&void v31[2] = "";
      __int16 v32 = 2082;
      uint64_t v33 = v21;
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:Schema statement created, schema:%{public, location:escape_only}s}",  (uint8_t *)&__p,  0x1Cu);
    }

    std::stringbuf::str((std::stringbuf::string_type *)&__p, (const std::stringbuf *)&v36[14]);
    if (SBYTE3(v33) >= 0) {
      __int16 v22 = (char *)&__p;
    }
    else {
      __int16 v22 = (char *)__p;
    }
    std::string::size_type v23 = sub_1003B5AC8(a1, v22);
    uint64_t v24 = v23;
    if (SBYTE3(v33) < 0)
    {
      operator delete(__p);
      if (!v24)
      {
LABEL_46:
        *(void *)&v36[6] = v25;
        if (v38 < 0) {
          operator delete(v37);
        }
        std::streambuf::~streambuf(&v36[14]);
        std::ios::~ios(&v39);
        return (*(uint64_t (**)(uint64_t))(*(void *)v6 + 24LL))(v6);
      }
    }

    else if (!v23)
    {
      goto LABEL_46;
    }

    sqlite3_step(v24);
    sub_1003B5CCC(*(sqlite3 **)(a1 + 8), v24);
    goto LABEL_46;
  }

  return (*(uint64_t (**)(uint64_t))(*(void *)v6 + 24LL))(v6);
}

void sub_1003BC180( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20, uint64_t a21, char a22)
{
}

BOOL sub_1003BC1F0(sqlite3_stmt *a1, int a2, char *__s)
{
  int v6 = strlen(__s);
  int v7 = sqlite3_bind_text(a1, a2, __s, v6, 0LL);
  int v12 = v7;
  if (v7)
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    unsigned int v8 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)stat buf = 68290307;
      int v14 = 0;
      __int16 v15 = 2082;
      uint64_t v16 = "";
      __int16 v17 = 2081;
      int v18 = __s;
      __int16 v19 = 1026;
      int v20 = a2;
      __int16 v21 = 1040;
      int v22 = 4;
      __int16 v23 = 2098;
      uint64_t v24 = &v12;
      __int16 v25 = 2081;
      __int16 v26 = sqlite3_sql(a1);
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Could not bind, value:%{private, location:escape_only}s, index:%{public}d, rc :%{public, location:SqliteResult}.*P, query:%{private, location:escape_only}s}",  buf,  0x3Cu);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v9 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      uint64_t v10 = sqlite3_sql(a1);
      *(_DWORD *)stat buf = 68290307;
      int v14 = 0;
      __int16 v15 = 2082;
      uint64_t v16 = "";
      __int16 v17 = 2081;
      int v18 = __s;
      __int16 v19 = 1026;
      int v20 = a2;
      __int16 v21 = 1040;
      int v22 = 4;
      __int16 v23 = 2098;
      uint64_t v24 = &v12;
      __int16 v25 = 2081;
      __int16 v26 = v10;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v9,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Could not bind",  "{msg%{public}.0s:Could not bind, value:%{private, location:escape_only}s, index:%{public}d, rc :%{public, location:SqliteResult}.*P, query:%{private, location:escape_only}s}",  buf,  0x3Cu);
    }
  }

  return v7 == 0;
}

BOOL sub_1003BC438(uint64_t a1, const char *a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  v19[19] = v4;
  (*(void (**)(uint64_t))(*(void *)v4 + 16LL))(v4);
  __int16 v20 = 256;
  sub_10000CE18((uint64_t)v16);
  uint64_t v5 = sub_10000CF44(&v17, (uint64_t)"SELECT name FROM ", 17LL);
  int v6 = sub_10000CF44(v5, (uint64_t)"sqlite_master", 13LL);
  int v7 = sub_10000CF44(v6, (uint64_t)" WHERE name='", 13LL);
  size_t v8 = strlen(a2);
  uint64_t v9 = sub_10000CF44(v7, (uint64_t)a2, v8);
  sub_10000CF44(v9, (uint64_t)"';", 2LL);
  std::stringbuf::str(&v15, &v18);
  if ((v15.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t v10 = &v15;
  }
  else {
    uint64_t v10 = (std::stringbuf::string_type *)v15.__r_.__value_.__r.__words[0];
  }
  size_t v11 = sub_1003B5AC8(a1, (char *)v10);
  int v12 = sqlite3_step(v11);
  sub_1003B5CCC(*(sqlite3 **)(a1 + 8), v11);
  *(void *)((char *)v16
  uint64_t v17 = v13;
  std::streambuf::~streambuf(&v18);
  std::ios::~ios(v19);
  (*(void (**)(uint64_t))(*(void *)v4 + 24LL))(v4);
  return v12 == 100;
}

void sub_1003BC5D0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a16);
  sub_1011C52D0(v16 - 72);
  _Unwind_Resume(a1);
}

uint64_t sub_1003BC614(uint64_t a1, const char *a2, const char **a3)
{
  uint64_t v6 = *(void *)(a1 + 16);
  (*(void (**)(uint64_t))(*(void *)v6 + 16LL))(v6);
  if (sub_1003BC438(a1, a2))
  {
    uint64_t v7 = sub_1003BC790(a1, a2, *a3, (uint64_t)a3);
  }

  else
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    size_t v8 = (os_log_s *)off_101934A28;
    uint64_t v7 = 0LL;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)stat buf = 68289282;
      int v11 = 0;
      __int16 v12 = 2082;
      uint64_t v13 = "";
      __int16 v14 = 2082;
      std::stringbuf::string_type v15 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:Table doesn't exist in database, table:%{public, location:escape_only}s}",  buf,  0x1Cu);
      uint64_t v7 = 0LL;
    }
  }

  (*(void (**)(uint64_t))(*(void *)v6 + 24LL))(v6);
  return v7;
}

void sub_1003BC76C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  if (a2) {
    sub_100006BB8(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003BC790(uint64_t a1, const char *a2, const char *a3, uint64_t a4)
{
  *(void *)a4 = "";
  *(_DWORD *)(a4 + 8) = 5;
  *(_WORD *)(a4 + 12) = 0;
  *(_BYTE *)(a4 + 16) = 0;
  *(_BYTE *)(a4 + 40) = 0;
  if (qword_101934A20 != -1) {
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }
  size_t v8 = (os_log_s *)off_101934A28;
  if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)stat buf = 68289539;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v38 = 2082;
    *(void *)uint64_t v39 = "";
    *(_WORD *)&v39[8] = 2081;
    *(void *)&v39[10] = a2;
    *(_WORD *)&v39[18] = 2082;
    *(void *)&v39[20] = a3;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:getColumnInfo, table:%{private, location:escape_only}s, name:%{public, location:escape_only}s}",  buf,  0x26u);
  }

  sub_10000CE18((uint64_t)buf);
  uint64_t v9 = sub_10000CF44(&v39[6], (uint64_t)"PRAGMA table_info(", 18LL);
  size_t v10 = strlen(a2);
  int v11 = sub_10000CF44(v9, (uint64_t)a2, v10);
  LOBYTE(v30) = 41;
  sub_10000CF44(v11, (uint64_t)&v30, 1LL);
  std::stringbuf::str((std::stringbuf::string_type *)&v30, (const std::stringbuf *)&v39[14]);
  if (v34.__r_.__value_.__s.__data_[3] >= 0) {
    __int16 v12 = (char *)&v30;
  }
  else {
    __int16 v12 = (char *)v30;
  }
  sub_1003C0D54(a1, v12, &v29);
  uint64_t v13 = v29;
  if (v34.__r_.__value_.__s.__data_[3] < 0) {
    operator delete((void *)v30);
  }
  int v14 = 0;
  char v15 = 0;
  while (1)
  {
    uint64_t v16 = (sqlite3_stmt *)sub_100019240(v13);
    if (sqlite3_step(v16) != 100) {
      break;
    }
    uint64_t v17 = (sqlite3_stmt *)sub_100019240(v13);
    std::stringbuf v18 = sqlite3_column_text(v17, 1);
    if (!strcmp(a3, (const char *)v18))
    {
      __int16 v19 = (sqlite3_stmt *)sub_100019240(v13);
      __int16 v20 = sqlite3_column_text(v19, 2);
      __int16 v21 = (sqlite3_stmt *)sub_100019240(v13);
      int v22 = sqlite3_column_int(v21, 5);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
      __int16 v23 = (os_log_s *)off_101934A28;
      if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v30 = 68290050LL;
        __int16 v31 = 2082;
        __int16 v32 = "";
        __int16 v33 = 1026;
        LODWORD(v34.__r_.__value_.__l.__data_) = v14;
        WORD2(v34.__r_.__value_.__r.__words[0]) = 2082;
        *(std::string::size_type *)((char *)v34.__r_.__value_.__r.__words + 6) = (std::string::size_type)v18;
        HIWORD(v34.__r_.__value_.__r.__words[1]) = 2082;
        v34.__r_.__value_.__l.__cap_ = (std::string::size_type)v20;
        __int16 v35 = 1026;
        BOOL v36 = v22 != 0;
        _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:getColumnInfo, index:%{public}u, name:%{public, location:escape_only}s, typ e:%{public, location:escape_only}s, isPrimaryKey:%{public}hhd}",  (uint8_t *)&v30,  0x32u);
      }

      ++v14;
      int v24 = sub_1003C33C4((const char *)v20);
      *(void *)a4 = a3;
      *(_DWORD *)(a4 + 8) = v24;
      *(_BYTE *)(a4 + 12) = v22 != 0;
      *(_BYTE *)(a4 + 13) = 0;
      *(_BYTE *)(a4 + 16) = 0;
      char v15 = 1;
      *(_BYTE *)(a4 + 40) = 0;
    }
  }

  __int16 v25 = (sqlite3_stmt *)sub_100019240(v13);
  sqlite3_reset(v25);
  if (qword_101934A20 != -1) {
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }
  __int16 v26 = (os_log_s *)off_101934A28;
  if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v30 = 68289795LL;
    __int16 v31 = 2082;
    __int16 v32 = "";
    __int16 v33 = 2081;
    v34.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
    LOWORD(v34.__r_.__value_.__r.__words[1]) = 2082;
    *(std::string::size_type *)((char *)&v34.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)a3;
    WORD1(v34.__r_.__value_.__r.__words[2]) = 1026;
    HIDWORD(v34.__r_.__value_.__r.__words[2]) = v15 & 1;
    _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:getColumnInfo, table:%{private, location:escape_only}s, name:%{public, location:e scape_only}s, isFound:%{public}hhd}",  (uint8_t *)&v30,  0x2Cu);
  }

  if (v13) {
    (*(void (**)(uint64_t))(*(void *)v13 + 8LL))(v13);
  }
  *(void *)&v39[6] = v27;
  if (v41 < 0) {
    operator delete(__p);
  }
  std::streambuf::~streambuf(&v39[14]);
  std::ios::~ios(&v42);
  return v15 & 1;
}

void sub_1003BCBDC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, char a24)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a24);
  _Unwind_Resume(a1);
}

uint64_t sub_1003BCC40(int a1)
{
  uint64_t v1 = 0LL;
  uint64_t v2 = dword_101835BE0;
  do
  {
    int v3 = *v2;
    v2 += 4;
    if (v3 == a1) {
      break;
    }
    ++v1;
  }

  while (v1 != 5);
  return *(void *)&dword_101835BE0[4 * v1 + 2];
}

uint64_t sub_1003BCC74(uint64_t a1, const char *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a1 + 16);
  v88[19] = v5;
  (*(void (**)(uint64_t))(*(void *)v5 + 16LL))(v5);
  __int16 v89 = 256;
  if (qword_101934A20 != -1) {
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }
  uint64_t v6 = (os_log_s *)off_101934A28;
  if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)stat buf = 68289283;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v92 = 2082;
    *(void *)uint64_t v93 = "";
    *(_WORD *)&v93[8] = 2081;
    *(void *)&v93[10] = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:Re-recreating table to fix primary key, table:%{private, location:escape_only}s}",  buf,  0x1Cu);
  }

  if (a3 && *(void *)a3)
  {
    sub_10000CE18((uint64_t)buf);
    size_t v7 = strlen(a2);
    size_t v8 = sub_10000CF44(&v93[6], (uint64_t)a2, v7);
    sub_10000CF44(v8, (uint64_t)"_tmp", 4LL);
    __s = (char *)a2;
    uint64_t v81 = v5;
    sub_10000CE18((uint64_t)v85);
    uint64_t v9 = sub_10000CF44(&v86, (uint64_t)"CREATE TEMPORARY TABLE ", 23LL);
    std::stringbuf::str(&__str, (const std::stringbuf *)&v93[14]);
    if ((__str.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_str = &__str;
    }
    else {
      p_str = (std::stringbuf::string_type *)__str.__r_.__value_.__r.__words[0];
    }
    if ((__str.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t size = __str.__r_.__value_.__s.__size_;
    }
    else {
      uint64_t size = __str.__r_.__value_.__l.__size_;
    }
    __int16 v12 = sub_10000CF44(v9, (uint64_t)p_str, size);
    uint64_t v13 = sub_10000CF44(v12, (uint64_t)" (", 2LL);
    size_t v14 = strlen(*(const char **)a3);
    char v15 = sub_10000CF44(v13, *(void *)a3, v14);
    char v90 = 32;
    uint64_t v16 = sub_10000CF44(v15, (uint64_t)&v90, 1LL);
    uint64_t v17 = 0LL;
    std::stringbuf v18 = dword_101835BE0;
    do
    {
      int v19 = *v18;
      v18 += 4;
      if (v19 == *(_DWORD *)(a3 + 8)) {
        break;
      }
      ++v17;
    }

    while (v17 != 5);
    __int16 v20 = *(const char **)&dword_101835BE0[4 * v17 + 2];
    size_t v21 = strlen(v20);
    sub_10000CF44(v16, (uint64_t)v20, v21);
    uint64_t v22 = a3 + 48;
    if (*(void *)(a3 + 48))
    {
      uint64_t v23 = 1LL;
      int v24 = (const char **)(a3 + 48);
      do
      {
        __int16 v25 = sub_10000CF44(&v86, (uint64_t)", ", 2LL);
        __int16 v26 = *v24;
        size_t v27 = strlen(v26);
        uint64_t v28 = sub_10000CF44(v25, (uint64_t)v26, v27);
        __str.__r_.__value_.__s.__data_[0] = 32;
        uint64_t v29 = sub_10000CF44(v28, (uint64_t)&__str, 1LL);
        uint64_t v30 = 0LL;
        __int16 v31 = dword_101835BE0;
        do
        {
          int v32 = *v31;
          v31 += 4;
          if (v32 == *(_DWORD *)(a3 + 48 * v23 + 8)) {
            break;
          }
          ++v30;
        }

        while (v30 != 5);
        __int16 v33 = *(const char **)&dword_101835BE0[4 * v30 + 2];
        size_t v34 = strlen(v33);
        sub_10000CF44(v29, (uint64_t)v33, v34);
        ++v23;
        int v24 = (const char **)(a3 + 48 * v23);
      }

      while (*v24);
    }

    sub_1003BD69C(a3, &__str);
    if ((__str.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      __int16 v35 = &__str;
    }
    else {
      __int16 v35 = (std::stringbuf::string_type *)__str.__r_.__value_.__r.__words[0];
    }
    if ((__str.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v36 = __str.__r_.__value_.__s.__size_;
    }
    else {
      uint64_t v36 = __str.__r_.__value_.__l.__size_;
    }
    std::stringbuf v37 = sub_10000CF44(&v86, (uint64_t)v35, v36);
    char v90 = 41;
    sub_10000CF44(v37, (uint64_t)&v90, 1LL);
    std::stringbuf::str(&__str, &v87);
    if ((__str.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      __int16 v38 = &__str;
    }
    else {
      __int16 v38 = (std::stringbuf::string_type *)__str.__r_.__value_.__r.__words[0];
    }
    uint64_t v39 = sub_1003B5AC8(a1, (char *)v38);
    sub_1003BB2BC(a1, v39);
    sub_1003B5CCC(*(sqlite3 **)(a1 + 8), v39);
    memset(&__str, 0, sizeof(__str));
    std::string::operator=(&v87.__str_, &__str);
    sub_10023BE94((uint64_t)&v87);
    int v40 = sub_10000CF44(&v86, (uint64_t)"INSERT INTO ", 12LL);
    std::stringbuf::str(&__str, (const std::stringbuf *)&v93[14]);
    if ((__str.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      char v41 = &__str;
    }
    else {
      char v41 = (std::stringbuf::string_type *)__str.__r_.__value_.__r.__words[0];
    }
    if ((__str.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v42 = __str.__r_.__value_.__s.__size_;
    }
    else {
      uint64_t v42 = __str.__r_.__value_.__l.__size_;
    }
    char v43 = sub_10000CF44(v40, (uint64_t)v41, v42);
    uint64_t v44 = sub_10000CF44(v43, (uint64_t)" SELECT ", 8LL);
    size_t v45 = strlen(*(const char **)a3);
    sub_10000CF44(v44, *(void *)a3, v45);
    if (*(void *)v22)
    {
      uint64_t v46 = a3 + 48;
      do
      {
        uint64_t v47 = sub_10000CF44(&v86, (uint64_t)", ", 2LL);
        size_t v48 = strlen(*(const char **)v46);
        sub_10000CF44(v47, *(void *)v46, v48);
        uint64_t v49 = *(void *)(v46 + 48);
        v46 += 48LL;
      }

      while (v49);
    }

    std::string::size_type v50 = sub_10000CF44(&v86, (uint64_t)" FROM ", 6LL);
    size_t v51 = strlen(__s);
    sub_10000CF44(v50, (uint64_t)__s, v51);
    std::stringbuf::str(&__str, &v87);
    if ((__str.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v52 = &__str;
    }
    else {
      uint64_t v52 = (std::stringbuf::string_type *)__str.__r_.__value_.__r.__words[0];
    }
    std::stringbuf::string_type v53 = sub_1003B5AC8(a1, (char *)v52);
    sub_1003BB2BC(a1, v53);
    sub_1003B5CCC(*(sqlite3 **)(a1 + 8), v53);
    memset(&__str, 0, sizeof(__str));
    std::string::operator=(&v87.__str_, &__str);
    sub_10023BE94((uint64_t)&v87);
    std::stringbuf::string_type v54 = sub_10000CF44(&v86, (uint64_t)"DROP TABLE ", 11LL);
    size_t v55 = strlen(__s);
    sub_10000CF44(v54, (uint64_t)__s, v55);
    std::stringbuf::str(&__str, &v87);
    if ((__str.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      std::string v56 = &__str;
    }
    else {
      std::string v56 = (std::stringbuf::string_type *)__str.__r_.__value_.__r.__words[0];
    }
    std::stringbuf v57 = sub_1003B5AC8(a1, (char *)v56);
    sub_1003BB2BC(a1, v57);
    sub_1003B5CCC(*(sqlite3 **)(a1 + 8), v57);
    sub_1003BBD60(a1, __s, (const char **)a3);
    memset(&__str, 0, sizeof(__str));
    std::string::operator=(&v87.__str_, &__str);
    sub_10023BE94((uint64_t)&v87);
    uint64_t v58 = sub_10000CF44(&v86, (uint64_t)"INSERT INTO ", 12LL);
    size_t v59 = strlen(__s);
    uint64_t v60 = sub_10000CF44(v58, (uint64_t)__s, v59);
    std::stringbuf v61 = sub_10000CF44(v60, (uint64_t)" SELECT ", 8LL);
    size_t v62 = strlen(*(const char **)a3);
    sub_10000CF44(v61, *(void *)a3, v62);
    if (*(void *)v22)
    {
      do
      {
        std::string v63 = sub_10000CF44(&v86, (uint64_t)", ", 2LL);
        size_t v64 = strlen(*(const char **)v22);
        sub_10000CF44(v63, *(void *)v22, v64);
        uint64_t v65 = *(void *)(v22 + 48);
        v22 += 48LL;
      }

      while (v65);
    }

    char v66 = sub_10000CF44(&v86, (uint64_t)" FROM ", 6LL);
    std::stringbuf::str(&__str, (const std::stringbuf *)&v93[14]);
    if ((__str.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      __int16 v67 = &__str;
    }
    else {
      __int16 v67 = (std::stringbuf::string_type *)__str.__r_.__value_.__r.__words[0];
    }
    if ((__str.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v68 = __str.__r_.__value_.__s.__size_;
    }
    else {
      uint64_t v68 = __str.__r_.__value_.__l.__size_;
    }
    sub_10000CF44(v66, (uint64_t)v67, v68);
    std::stringbuf::str(&__str, &v87);
    if ((__str.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      __int16 v69 = &__str;
    }
    else {
      __int16 v69 = (std::stringbuf::string_type *)__str.__r_.__value_.__r.__words[0];
    }
    int v70 = sub_1003B5AC8(a1, (char *)v69);
    sub_1003BB2BC(a1, v70);
    sub_1003B5CCC(*(sqlite3 **)(a1 + 8), v70);
    memset(&__str, 0, sizeof(__str));
    std::string::operator=(&v87.__str_, &__str);
    sub_10023BE94((uint64_t)&v87);
    __int16 v71 = sub_10000CF44(&v86, (uint64_t)"DROP TABLE ", 11LL);
    std::stringbuf::str(&__str, (const std::stringbuf *)&v93[14]);
    if ((__str.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      char v72 = &__str;
    }
    else {
      char v72 = (std::stringbuf::string_type *)__str.__r_.__value_.__r.__words[0];
    }
    if ((__str.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v73 = __str.__r_.__value_.__s.__size_;
    }
    else {
      uint64_t v73 = __str.__r_.__value_.__l.__size_;
    }
    sub_10000CF44(v71, (uint64_t)v72, v73);
    std::stringbuf::str(&__str, &v87);
    if ((__str.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      unsigned __int8 v74 = &__str;
    }
    else {
      unsigned __int8 v74 = (std::stringbuf::string_type *)__str.__r_.__value_.__r.__words[0];
    }
    __int16 v75 = sub_1003B5AC8(a1, (char *)v74);
    sub_1003BB2BC(a1, v75);
    sub_1003B5CCC(*(sqlite3 **)(a1 + 8), v75);
    *(void *)((char *)v85
    uint64_t v86 = v78;
    std::streambuf::~streambuf(&v87);
    std::ios::~ios(v88);
    *(void *)stat buf = v76;
    *(void *)&buf[*(void *)(v76 - 24)] = v77;
    *(void *)&v93[6] = v78;
    if (v95 < 0) {
      operator delete(v94);
    }
    std::streambuf::~streambuf(&v93[14]);
    std::ios::~ios(&v96);
    uint64_t v79 = 1LL;
    uint64_t v5 = v81;
  }

  else
  {
    uint64_t v79 = 0LL;
  }

  (*(void (**)(uint64_t))(*(void *)v5 + 24LL))(v5);
  return v79;
}

void sub_1003BD5D4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a19);
  sub_1011F8850((uint64_t)&a58);
  sub_1011C52D0((uint64_t)&a54);
  _Unwind_Resume(a1);
}

uint64_t sub_1003BD69C@<X0>(uint64_t result@<X0>, std::stringbuf::string_type *a2@<X8>)
{
  uint64_t v2 = result;
  if (!*(_BYTE *)(result + 12))
  {
    int v6 = 1;
    uint64_t v5 = result;
    while (*(void *)v5)
    {
      int v7 = *(unsigned __int8 *)(v5 + 60);
      ++v6;
      v5 += 48LL;
      if (v7)
      {
        unsigned int v4 = v6;
        goto LABEL_7;
      }
    }

    goto LABEL_15;
  }

  unsigned int v4 = 1;
  uint64_t v5 = result;
LABEL_7:
  if (!*(void *)v5)
  {
LABEL_15:
    a2->__r_.__value_.__r.__words[0] = 0LL;
    a2->__r_.__value_.__l.__size_ = 0LL;
    a2->__r_.__value_.__l.__cap_ = 0LL;
    return result;
  }

  sub_10000CE18((uint64_t)v16);
  size_t v8 = sub_10000CF44(&v17, (uint64_t)", PRIMARY KEY (", 15LL);
  uint64_t v9 = *(const char **)v5;
  size_t v10 = strlen(v9);
  sub_10000CF44(v8, (uint64_t)v9, v10);
  uint64_t v11 = v2 + 48LL * v4;
  if (*(void *)v11)
  {
    do
    {
      if (*(_BYTE *)(v11 + 12))
      {
        __int16 v12 = sub_10000CF44(&v17, (uint64_t)", ", 2LL);
        size_t v13 = strlen(*(const char **)v11);
        sub_10000CF44(v12, *(void *)v11, v13);
      }

      uint64_t v14 = *(void *)(v11 + 48);
      v11 += 48LL;
    }

    while (v14);
  }

  char v20 = 41;
  sub_10000CF44(&v17, (uint64_t)&v20, 1LL);
  std::stringbuf::str(a2, &v18);
  *(void *)((char *)v16
  uint64_t v17 = v15;
  std::streambuf::~streambuf(&v18);
  return std::ios::~ios(&v19);
}

void sub_1003BD84C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

BOOL sub_1003BD864(uint64_t a1, const char *a2)
{
  uint64_t v5 = *(sqlite3 **)(a1 + 16);
  ppDb[1] = v5;
  (*(void (**)(sqlite3 *))(*(void *)v5 + 16LL))(v5);
  __int16 v14 = 256;
  if (!a2)
  {
    sub_1012373C0();
    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteDatabase.mm",  1171,  "backupToFile");
    __break(1u);
LABEL_21:
    dispatch_once(&qword_101934A20, &stru_101835C50);
LABEL_4:
    int v6 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)stat buf = 68289283;
      int v16 = 0;
      __int16 v17 = 2082;
      std::stringbuf v18 = "";
      __int16 v19 = 2081;
      v20[0] = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Unable to open, path:%{private, location:escape_only}s}",  buf,  0x1Cu);
    }

    int v7 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)stat buf = 68289283;
      int v16 = 0;
      __int16 v17 = 2082;
      std::stringbuf v18 = "";
      __int16 v19 = 2081;
      v20[0] = a2;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v7,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Unable to open",  "{msg%{public}.0s:Unable to open, path:%{private, location:escape_only}s}",  buf,  0x1Cu);
    }

    int v8 = 1;
    goto LABEL_19;
  }

  ppDb[0] = 0LL;
  if (sqlite3_open(a2, ppDb))
  {
    p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
    if (qword_101934A20 == -1) {
      goto LABEL_4;
    }
    goto LABEL_21;
  }

  int v12 = sqlite3_file_control(ppDb[0], 0LL, 102, *(void **)(a1 + 8));
  if (v12)
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    uint64_t v9 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)stat buf = 68289538;
      int v16 = 0;
      __int16 v17 = 2082;
      std::stringbuf v18 = "";
      __int16 v19 = 1040;
      LODWORD(v20[0]) = 4;
      WORD2(v20[0]) = 2098;
      *(void *)((char *)v20 + 6) = &v12;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Did not successfully finish backup, rc:%{public, location:SqliteResult}.*P}",  buf,  0x22u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    size_t v10 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)stat buf = 68289538;
      int v16 = 0;
      __int16 v17 = 2082;
      std::stringbuf v18 = "";
      __int16 v19 = 1040;
      LODWORD(v20[0]) = 4;
      WORD2(v20[0]) = 2098;
      *(void *)((char *)v20 + 6) = &v12;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v10,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Did not successfully finish backup",  "{msg%{public}.0s:Did not successfully finish backup, rc:%{public, location:SqliteResult}.*P}",  buf,  0x22u);
    }
  }

  sqlite3_close(ppDb[0]);
  int v8 = v12;
LABEL_19:
  (*(void (**)(sqlite3 *))(*(void *)v5 + 24LL))(v5);
  return v8 == 0;
}

void sub_1003BDBFC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  if (a2) {
    sub_100006BB8(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003BDC2C( uint64_t a1, const char *a2, const char *a3, const char *a4, sqlite3_int64 a5, int a6, uint64_t a7)
{
  __int16 v14 = *(sqlite3_blob **)(a1 + 16);
  ppBlob[1] = v14;
  (*(void (**)(sqlite3_blob *))(*(void *)v14 + 16LL))(v14);
  __int16 v25 = 256;
  if (qword_101934A20 != -1) {
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }
  uint64_t v15 = (os_log_s *)off_101934A28;
  if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)stat buf = 68289795;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v27 = 2082;
    uint64_t v28 = "";
    __int16 v29 = 2081;
    *(void *)uint64_t v30 = a3;
    *(_WORD *)&v30[8] = 2081;
    *(void *)&_BYTE v30[10] = a4;
    __int16 v31 = 2049;
    sqlite3_int64 v32 = a5;
    _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:Opening a blob for read, tableName:%{private, location:escape_only}s, colname:%{p rivate, location:escape_only}s, row:%{private}llu}",  buf,  0x30u);
  }

  ppBlob[0] = 0LL;
  int v16 = sqlite3_blob_open(*(sqlite3 **)(a1 + 8), a2, a3, a4, a5, a6 ^ 1, ppBlob);
  unsigned int v23 = v16;
  if (v16)
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    __int16 v17 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)stat buf = 68289538;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v27 = 2082;
      uint64_t v28 = "";
      __int16 v29 = 1040;
      *(_DWORD *)uint64_t v30 = 4;
      *(_WORD *)&v30[4] = 2098;
      *(void *)&v30[6] = &v23;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:failed to open blob, rc:%{public, location:SqliteResult}.*P}",  buf,  0x22u);
      int v16 = v23;
    }

    sub_1003B7D6C(*(sqlite3 **)(a1 + 8), (char *)(a1 + 96), *(unsigned __int8 *)(a1 + 56), v16);
    sqlite3_blob_close(ppBlob[0]);
    uint64_t v18 = v23;
  }

  else
  {
    *(sqlite3_blob **)stat buf = ppBlob[0];
    uint64_t v19 = *(void *)(a7 + 24);
    if (!v19) {
      sub_100008BDC();
    }
    (*(void (**)(uint64_t, uint8_t *))(*(void *)v19 + 48LL))(v19, buf);
    uint64_t v18 = sqlite3_blob_close(ppBlob[0]);
    if ((_DWORD)v18)
    {
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
      char v20 = (os_log_s *)off_101934A28;
      if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)stat buf = 68289282;
        *(_DWORD *)&uint8_t buf[4] = 0;
        __int16 v27 = 2082;
        uint64_t v28 = "";
        __int16 v29 = 1026;
        *(_DWORD *)uint64_t v30 = v18;
        _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_ERROR,  "{msg%{public}.0s:error when closing blob, code:%{public}d}",  buf,  0x18u);
        if (qword_101934A20 != -1) {
          dispatch_once(&qword_101934A20, &stru_101835C50);
        }
      }

      size_t v21 = (os_log_s *)off_101934A28;
      if (os_signpost_enabled((os_log_t)off_101934A28))
      {
        *(_DWORD *)stat buf = 68289282;
        *(_DWORD *)&uint8_t buf[4] = 0;
        __int16 v27 = 2082;
        uint64_t v28 = "";
        __int16 v29 = 1026;
        *(_DWORD *)uint64_t v30 = v18;
        _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v21,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "error when closing blob",  "{msg%{public}.0s:error when closing blob, code:%{public}d}",  buf,  0x18u);
      }

      sub_1003B7D6C(*(sqlite3 **)(a1 + 8), (char *)(a1 + 96), *(unsigned __int8 *)(a1 + 56), v18);
    }
  }

  (*(void (**)(sqlite3_blob *))(*(void *)v14 + 24LL))(v14);
  return v18;
}

void sub_1003BE008(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

void sub_1003BE030(const char **a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v7 = *a1;
  if (*a1)
  {
    uint64_t v8 = 0LL;
    int v9 = 0;
    int v10 = a3 ^ 1;
    uint64_t v11 = a1;
    do
    {
      if (v8)
      {
        std::string::append((std::string *)a4, ", ");
        int v7 = *v11;
      }

      else {
        size_t v12 = *(void *)(a4 + 8);
      }
      size_t v13 = strlen(v7);
      sub_1000392EC((uint64_t)&v27, v12 + v13);
      if ((v27.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        __int16 v14 = &v27;
      }
      else {
        __int16 v14 = (std::string *)v27.__r_.__value_.__r.__words[0];
      }
      if (v12)
      {
        else {
          uint64_t v15 = *(const void **)a4;
        }
        memmove(v14, v15, v12);
      }

      int v16 = (char *)v14 + v12;
      if (v13) {
        memmove(v16, v7, v13);
      }
      v16[v13] = 0;
      *(std::string *)a4 = v27;
      if (a2)
      {
        else {
          size_t v17 = *(void *)(a4 + 8);
        }
        sub_1000392EC((uint64_t)&v27, v17 + 1);
        if ((v27.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          uint64_t v18 = &v27;
        }
        else {
          uint64_t v18 = (std::string *)v27.__r_.__value_.__r.__words[0];
        }
        if (v17)
        {
          else {
            uint64_t v19 = *(const void **)a4;
          }
          memmove(v18, v19, v17);
        }

        uint64_t v20 = 0LL;
        *(_WORD *)((char *)&v18->__r_.__value_.__l.__data_ + v17) = 32;
        size_t v21 = dword_101835BE0;
        do
        {
          int v22 = *v21;
          v21 += 4;
          if (v22 == LODWORD(a1[6 * v8 + 1])) {
            break;
          }
          ++v20;
        }

        while (v20 != 5);
        unsigned int v23 = std::string::append(&v27, *(const std::string::value_type **)&dword_101835BE0[4 * v20 + 2]);
        std::string::size_type v24 = v23->__r_.__value_.__r.__words[0];
        v28[0] = v23->__r_.__value_.__l.__size_;
        *(void *)((char *)v28 + 7) = *(std::string::size_type *)((char *)&v23->__r_.__value_.__r.__words[1] + 7);
        unsigned __int8 size = v23->__r_.__value_.__s.__size_;
        v23->__r_.__value_.__l.__size_ = 0LL;
        v23->__r_.__value_.__l.__cap_ = 0LL;
        v23->__r_.__value_.__r.__words[0] = 0LL;
        *(void *)a4 = v24;
        *(void *)(a4 + 8) = v28[0];
        *(void *)(a4 + 15) = *(void *)((char *)v28 + 7);
        *(_BYTE *)(a4 + 23) = size;
      }

      if (((v10 | v9) & 1) == 0)
      {
        if (BYTE4(a1[6 * v8 + 1]))
        {
          std::string::append((std::string *)a4, " PRIMARY KEY");
          if (BYTE5(a1[6 * v8 + 1])) {
            std::string::append((std::string *)a4, " AUTOINCREMENT");
          }
          int v9 = 1;
        }

        else
        {
          int v9 = 0;
        }
      }

      ++v8;
      uint64_t v11 = &a1[6 * v8];
      int v7 = *v11;
    }

    while (*v11);
  }

void sub_1003BE2F8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003BE334@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, std::stringbuf::string_type *a3@<X8>)
{
  if (a2)
  {
    __int16 v31 = a3;
    if (*(void *)a2)
    {
      do
      {
        if (*(_BYTE *)(a2 + 40))
        {
          if (!sub_1003C3468(a1, a2))
          {
            if (qword_101934A20 != -1) {
              dispatch_once(&qword_101934A20, &stru_101835C50);
            }
            a3 = v31;
            std::string v27 = (os_log_s *)off_101934A28;
            if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
            {
              *(void *)stat buf = 68289026LL;
              *(_WORD *)std::stringbuf v37 = 2082;
              *(void *)&v37[2] = "";
              _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Foreign key reference and index check failed}",  buf,  0x12u);
              if (qword_101934A20 != -1) {
                dispatch_once(&qword_101934A20, &stru_101835C50);
              }
            }

            uint64_t v28 = (os_log_s *)off_101934A28;
            if (os_signpost_enabled((os_log_t)off_101934A28))
            {
              *(void *)stat buf = 68289026LL;
              *(_WORD *)std::stringbuf v37 = 2082;
              *(void *)&v37[2] = "";
              _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v28,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Foreign key reference and index check failed",  "{msg%{public}.0s:Foreign key reference and index check failed}",  buf,  0x12u);
            }

            goto LABEL_34;
          }

          int v7 = *(const char **)(a2 + 16);
          int v6 = *(const char **)(a2 + 24);
          uint64_t v8 = *(int *)(a2 + 32);
          uint64_t v9 = *(int *)(a2 + 36);
          int v10 = sub_10000CF44(&v33, (uint64_t)", FOREIGN KEY(", 14LL);
          size_t v11 = strlen(*(const char **)a2);
          size_t v12 = sub_10000CF44(v10, *(void *)a2, v11);
          size_t v13 = sub_10000CF44(v12, (uint64_t)") REFERENCES ", 13LL);
          size_t v14 = strlen(v7);
          uint64_t v15 = sub_10000CF44(v13, (uint64_t)v7, v14);
          int v16 = sub_10000CF44(v15, (uint64_t)"(", 1LL);
          size_t v17 = strlen(v6);
          uint64_t v18 = sub_10000CF44(v16, (uint64_t)v6, v17);
          sub_10000CF44(v18, (uint64_t)")", 1LL);
          uint64_t v19 = sub_10000CF44(&v33, (uint64_t)" ON DELETE ", 11LL);
          sub_1010DDBC0(buf, (&off_101835CD0)[v8]);
          if ((v38 & 0x80u) == 0) {
            uint64_t v20 = buf;
          }
          else {
            uint64_t v20 = *(uint8_t **)buf;
          }
          if ((v38 & 0x80u) == 0) {
            uint64_t v21 = v38;
          }
          else {
            uint64_t v21 = *(void *)v37;
          }
          sub_10000CF44(v19, (uint64_t)v20, v21);
          int v22 = sub_10000CF44(&v33, (uint64_t)" ON UPDATE ", 11LL);
          sub_1010DDBC0(buf, (&off_101835CD0)[v9]);
          if ((v38 & 0x80u) == 0) {
            unsigned int v23 = buf;
          }
          else {
            unsigned int v23 = *(uint8_t **)buf;
          }
          if ((v38 & 0x80u) == 0) {
            uint64_t v24 = v38;
          }
          else {
            uint64_t v24 = *(void *)v37;
          }
          sub_10000CF44(v22, (uint64_t)v23, v24);
        }

        uint64_t v25 = *(void *)(a2 + 48);
        a2 += 48LL;
      }

      while (v25);
    }

    std::stringbuf::str(v31, &v34);
  }

  else
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    __int16 v26 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
    {
      *(void *)stat buf = 68289026LL;
      *(_WORD *)std::stringbuf v37 = 2082;
      *(void *)&v37[2] = "";
      _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:getForeignKeyDefinitionString: NULL column definition}",  buf,  0x12u);
    }

void sub_1003BE778(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

BOOL sub_1003BE7C0(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v19 = v8;
  (*(void (**)(uint64_t))(*(void *)v8 + 16LL))(v8);
  __int16 v20 = 256;
  uint64_t v9 = sub_1003BEA60(a1, (uint64_t)off_101835AE8, "TableInfo", "TableName");
  sub_1003BC1F0(v9, 1, a2);
  int v10 = sqlite3_step(v9);
  int v18 = v10;
  if (v10 == 100)
  {
    size_t v11 = (char *)sqlite3_column_text(v9, 0);
    sub_1010DDBC0(buf, v11);
    *(_OWORD *)a3 = *(_OWORD *)buf;
    *(void *)(a3 + 16) = *(void *)&buf[16];
    size_t v12 = (char *)sqlite3_column_text(v9, 1);
    sub_1010DDBC0(buf, v12);
    *(_OWORD *)a4 = *(_OWORD *)buf;
    *(void *)(a4 + 16) = *(void *)&buf[16];
  }

  sub_1003B5CCC(*(sqlite3 **)(a1 + 8), v9);
  if (qword_101934A20 != -1) {
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }
  size_t v13 = (os_log_s *)off_101934A28;
  if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
  {
    size_t v14 = (void *)(a1 + 96);
    else {
      uint64_t v15 = *(void **)a3;
    }
    else {
      int v16 = *(void **)a4;
    }
    *(_DWORD *)stat buf = 68290563;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    *(_WORD *)&_BYTE buf[18] = 2081;
    *(void *)&buf[20] = a2;
    __int16 v22 = 2082;
    unsigned int v23 = v14;
    __int16 v24 = 1040;
    int v25 = 4;
    __int16 v26 = 2098;
    std::string v27 = &v18;
    __int16 v28 = 2082;
    uint64_t v29 = v15;
    __int16 v30 = 2081;
    __int16 v31 = v16;
    _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:version and serial number, table:%{private, location:escape_only}s, path:%{public , location:escape_only}s, rc:%{public, location:SqliteResult}.*P, version:%{public, location:escape_only}s , serial number:%{private, location:escape_only}s}",  buf,  0x4Au);
  }

  (*(void (**)(uint64_t))(*(void *)v8 + 24LL))(v8);
  return v10 == 100;
}

void sub_1003BEA2C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  if (a2) {
    sub_100006BB8(exception_object);
  }
  _Unwind_Resume(exception_object);
}

sqlite3_stmt *sub_1003BEA60(uint64_t a1, uint64_t a2, const char *a3, const char *a4)
{
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v30 = v8;
  (*(void (**)(uint64_t))(*(void *)v8 + 16LL))(v8);
  __int16 v31 = 256;
  if (a3 && a4 && *(void *)a2)
  {
    sub_10000CE18((uint64_t)buf);
    uint64_t v9 = sub_10000CF44(&v34[6], (uint64_t)"SELECT ", 7LL);
    size_t v10 = strlen(*(const char **)a2);
    sub_10000CF44(v9, *(void *)a2, v10);
    if (*(void *)(a2 + 8))
    {
      size_t v11 = (void *)(a2 + 16);
      do
      {
        size_t v12 = sub_10000CF44(&v34[6], (uint64_t)", ", 2LL);
        size_t v13 = strlen((const char *)*(v11 - 1));
        sub_10000CF44(v12, *(v11 - 1), v13);
      }

      while (*v11++);
    }

    uint64_t v15 = sub_10000CF44(&v34[6], (uint64_t)" FROM ", 6LL);
    size_t v16 = strlen(a3);
    size_t v17 = sub_10000CF44(v15, (uint64_t)a3, v16);
    int v18 = sub_10000CF44(v17, (uint64_t)" WHERE ", 7LL);
    size_t v19 = strlen(a4);
    __int16 v20 = sub_10000CF44(v18, (uint64_t)a4, v19);
    sub_10000CF44(v20, (uint64_t)"=?", 2LL);
    std::stringbuf::str(&__p, (const std::stringbuf *)&v34[14]);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    __int16 v22 = sub_1003B5AC8(a1, (char *)p_p);
    *(void *)&v34[6] = v23;
    if (v38 < 0) {
      operator delete(v37);
    }
    std::streambuf::~streambuf(&v34[14]);
    std::ios::~ios(&v39);
  }

  else
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    __int16 v24 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      int v25 = *(const char **)a2;
      *(_DWORD *)stat buf = 68289795;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v33 = 2082;
      *(void *)std::stringbuf v34 = "";
      *(_WORD *)&v34[8] = 2081;
      *(void *)&v34[10] = a3;
      *(_WORD *)&v34[18] = 2082;
      *(void *)&v34[20] = v25;
      __int16 v35 = 2082;
      uint64_t v36 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Invalid parameters, table:%{private, location:escape_only}s, columnNames[0]:%{p ublic, location:escape_only}s, key:%{public, location:escape_only}s}",  buf,  0x30u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    __int16 v26 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      std::string v27 = *(const char **)a2;
      *(_DWORD *)stat buf = 68289795;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v33 = 2082;
      *(void *)std::stringbuf v34 = "";
      *(_WORD *)&v34[8] = 2081;
      *(void *)&v34[10] = a3;
      *(_WORD *)&v34[18] = 2082;
      *(void *)&v34[20] = v27;
      __int16 v35 = 2082;
      uint64_t v36 = a4;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v26,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Invalid parameters",  "{msg%{public}.0s:Invalid parameters, table:%{private, location:escape_only}s, columnNames[0]:%{p ublic, location:escape_only}s, key:%{public, location:escape_only}s}",  buf,  0x30u);
    }

    __int16 v22 = 0LL;
  }

  (*(void (**)(uint64_t))(*(void *)v8 + 24LL))(v8);
  return v22;
}

void sub_1003BEE1C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, char a18)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a18);
  sub_1011C52D0((uint64_t)&a15);
  _Unwind_Resume(a1);
}

uint64_t sub_1003BEE74(uint64_t a1, char *a2, uint64_t a3)
{
  v9[0] = 0LL;
  v9[1] = 0LL;
  uint64_t v10 = 0LL;
  __p[0] = 0LL;
  __p[1] = 0LL;
  uint64_t v8 = 0LL;
  if (sub_1003BE7C0(a1, a2, (uint64_t)v9, (uint64_t)__p))
  {
    if (v10 >= 0) {
      unsigned int v4 = (char *)v9;
    }
    else {
      unsigned int v4 = (char *)v9[0];
    }
    uint64_t v5 = sub_1003BEF30(v4, a3) >> 31;
  }

  else
  {
    uint64_t v5 = 1LL;
  }

  if (SHIBYTE(v8) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v10) < 0) {
    operator delete(v9[0]);
  }
  return v5;
}

void sub_1003BEF04( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003BEF30(char *__s, uint64_t a2)
{
  while (!*(_DWORD *)((char *)&v15[1] + (unint64_t)*(v14[0] - 3))
       || !*(_DWORD *)((char *)&v11[1] + *(void *)(__p.__r_.__value_.__r.__words[0] - 24)))
  {
    LODWORD(v9.__r_.__value_.__l.__data_) = 0;
    std::istream::operator>>(v14, &v9);
    std::istream::get(v14);
    int v8 = 0;
    std::istream::operator>>(&__p, &v8);
    std::istream::get(&__p);
    if (v8 < SLODWORD(v9.__r_.__value_.__l.__data_)) {
      unsigned int v3 = 1;
    }
    else {
      unsigned int v3 = a2;
    }
    if (SLODWORD(v9.__r_.__value_.__l.__data_) < v8) {
      a2 = 0xFFFFFFFFLL;
    }
    else {
      a2 = v3;
    }
    if (v8 != LODWORD(v9.__r_.__value_.__l.__data_)) {
      goto LABEL_16;
    }
  }

  a2 = 0LL;
LABEL_16:
  *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words
                                        - 24LL)) = (std::string::size_type)v6;
  __p.__r_.__value_.__l.__cap_ = (std::string::size_type)v5;
  if (v12 < 0) {
    operator delete((void *)v11[8]);
  }
  std::streambuf::~streambuf(v11);
  std::ios::~ios(&v13);
  v14[0] = v4;
  *(void (__cdecl ***)(std::basic_stringstream<char> *__hidden))((char *)v14 + (void)*(v4 - 3)) = v6;
  _DWORD v14[2] = v5;
  if (v16 < 0) {
    operator delete((void *)v15[8]);
  }
  std::streambuf::~streambuf(v15);
  std::ios::~ios(&v17);
  return a2;
}

void sub_1003BF100( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20, char a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,char a54)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a54);
  _Unwind_Resume(a1);
}

uint64_t sub_1003BF158(uint64_t a1, char *a2)
{
  uint64_t v6 = *(void *)(a1 + 16);
  (*(void (**)(uint64_t))(*(void *)v6 + 16LL))(v6);
  unsigned int v4 = sub_1003B5AC8(a1, a2);
  sub_1003C0B5C(a1, (uint64_t)v4);
  sub_100B14CF0(&v7, a1, (uint64_t)v4);
  (*(void (**)(uint64_t))(*(void *)v6 + 24LL))(v6);
  return v7;
}

void sub_1003BF1EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_1003BF200(uint64_t a1, char *a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v14 = v4;
  (*(void (**)(uint64_t))(*(void *)v4 + 16LL))(v4);
  __int16 v15 = 256;
  sub_1004F2598();
  sub_1004F5DC4((uint64_t)v12);
  sub_1004F2598();
  sub_1004F6004((uint64_t)__p);
  uint64_t v5 = sub_1003BF430(a1, "TableInfo", (const char **)off_101835B00, 1);
  sub_1003BC1F0(v5, 1, a2);
  if (v13 >= 0) {
    uint64_t v6 = (char *)v12;
  }
  else {
    uint64_t v6 = (char *)v12[0];
  }
  sub_1003BC1F0(v5, 2, v6);
  if (v11 >= 0) {
    uint64_t v7 = (char *)__p;
  }
  else {
    uint64_t v7 = (char *)__p[0];
  }
  sub_1003BC1F0(v5, 3, v7);
  sub_1003BB2BC(a1, v5);
  sub_1003B5CCC(*(sqlite3 **)(a1 + 8), v5);
  if (qword_101934A20 != -1) {
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }
  int v8 = (os_log_s *)off_101934A28;
  if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)stat buf = 68289283;
    int v17 = 0;
    __int16 v18 = 2082;
    size_t v19 = "";
    __int16 v20 = 2081;
    uint64_t v21 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:Created row in TableInfo, table:%{private, location:escape_only}s}",  buf,  0x1Cu);
  }

  if (v11 < 0) {
    operator delete(__p[0]);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
  return (*(uint64_t (**)(uint64_t))(*(void *)v4 + 24LL))(v4);
}

void sub_1003BF3DC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21, char a22)
{
  if (a2) {
    sub_100006BB8(exception_object);
  }
  _Unwind_Resume(exception_object);
}

sqlite3_stmt *sub_1003BF430(uint64_t a1, const char *a2, const char **a3, int a4)
{
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v29 = v8;
  (*(void (**)(uint64_t))(*(void *)v8 + 16LL))(v8);
  __int16 v30 = 256;
  if (a2 && *a3)
  {
    sub_10000CE18((uint64_t)buf);
    sub_10000CF44(&v33[6], (uint64_t)"INSERT ", 7LL);
    if (a4) {
      sub_10000CF44(&v33[6], (uint64_t)"OR REPLACE ", 11LL);
    }
    std::string v9 = sub_10000CF44(&v33[6], (uint64_t)"INTO ", 5LL);
    size_t v10 = strlen(a2);
    char v11 = sub_10000CF44(v9, (uint64_t)a2, v10);
    char v12 = sub_10000CF44(v11, (uint64_t)" (", 2LL);
    size_t v13 = strlen(*a3);
    sub_10000CF44(v12, (uint64_t)*a3, v13);
    if (a3[1])
    {
      uint64_t v14 = 0LL;
      do
      {
        __int16 v15 = sub_10000CF44(&v33[6], (uint64_t)", ", 2LL);
        size_t v16 = strlen(a3[v14 + 1]);
        sub_10000CF44(v15, (uint64_t)a3[v14 + 1], v16);
      }

      while (a3[v14++ + 2]);
      int v18 = v14 + 1;
    }

    else
    {
      int v18 = 1;
    }

    sub_10000CF44(&v33[6], (uint64_t)") VALUES (?", 11LL);
    if (v18 >= 2)
    {
      int v24 = v18 + 1;
      do
      {
        sub_10000CF44(&v33[6], (uint64_t)", ?", 3LL);
        --v24;
      }

      while (v24 > 2);
    }

    __p.__r_.__value_.__s.__data_[0] = 41;
    sub_10000CF44(&v33[6], (uint64_t)&__p, 1LL);
    std::stringbuf::str(&__p, (const std::stringbuf *)&v33[14]);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    uint64_t v23 = sub_1003B5AC8(a1, (char *)p_p);
    *(void *)&v33[6] = v26;
    if (v35 < 0) {
      operator delete(v34);
    }
    std::streambuf::~streambuf(&v33[14]);
    std::ios::~ios(&v36);
  }

  else
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    size_t v19 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      __int16 v20 = *a3;
      *(_DWORD *)stat buf = 68289539;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v32 = 2082;
      *(void *)__int16 v33 = "";
      *(_WORD *)&v33[8] = 2081;
      *(void *)&_BYTE v33[10] = a2;
      *(_WORD *)&_BYTE v33[18] = 2082;
      *(void *)&v33[20] = v20;
      _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Invalid parameters, table:%{private, location:escape_only}s, columnNames[0]:%{p ublic, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    uint64_t v21 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      __int16 v22 = *a3;
      *(_DWORD *)stat buf = 68289539;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v32 = 2082;
      *(void *)__int16 v33 = "";
      *(_WORD *)&v33[8] = 2081;
      *(void *)&_BYTE v33[10] = a2;
      *(_WORD *)&_BYTE v33[18] = 2082;
      *(void *)&v33[20] = v22;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v21,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Invalid parameters",  "{msg%{public}.0s:Invalid parameters, table:%{private, location:escape_only}s, columnNames[0]:%{p ublic, location:escape_only}s}",  buf,  0x26u);
    }

    uint64_t v23 = 0LL;
  }

  (*(void (**)(uint64_t))(*(void *)v8 + 24LL))(v8);
  return v23;
}

void sub_1003BF838( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, char a18)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a18);
  sub_1011C52D0((uint64_t)&a15);
  _Unwind_Resume(a1);
}

uint64_t sub_1003BF894(uint64_t a1, char *a2)
{
  uint64_t v6 = *(void *)(a1 + 16);
  (*(void (**)(uint64_t))(*(void *)v6 + 16LL))(v6);
  uint64_t v4 = sub_1003BF94C(a1, "TableInfo", "TableName");
  sub_1003BC1F0(v4, 1, a2);
  sub_1003BB2BC(a1, v4);
  sub_1003B5CCC(*(sqlite3 **)(a1 + 8), v4);
  return (*(uint64_t (**)(uint64_t))(*(void *)v6 + 24LL))(v6);
}

void sub_1003BF938(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

sqlite3_stmt *sub_1003BF94C(uint64_t a1, const char *a2, const char *a3)
{
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v20 = v6;
  (*(void (**)(uint64_t))(*(void *)v6 + 16LL))(v6);
  __int16 v21 = 256;
  if (a2 && a3)
  {
    sub_10000CE18((uint64_t)buf);
    uint64_t v7 = sub_10000CF44(&v24[6], (uint64_t)"DELETE FROM ", 12LL);
    size_t v8 = strlen(a2);
    std::string v9 = sub_10000CF44(v7, (uint64_t)a2, v8);
    size_t v10 = sub_10000CF44(v9, (uint64_t)" WHERE ", 7LL);
    size_t v11 = strlen(a3);
    char v12 = sub_10000CF44(v10, (uint64_t)a3, v11);
    sub_10000CF44(v12, (uint64_t)"=?", 2LL);
    std::stringbuf::str(&__p, (const std::stringbuf *)&v24[14]);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    uint64_t v14 = sub_1003B5AC8(a1, (char *)p_p);
    *(void *)&v24[6] = v15;
    if (v26 < 0) {
      operator delete(v25);
    }
    std::streambuf::~streambuf(&v24[14]);
    std::ios::~ios(&v27);
  }

  else
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    size_t v16 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)stat buf = 68289539;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v23 = 2082;
      *(void *)int v24 = "";
      *(_WORD *)&v24[8] = 2081;
      *(void *)&v24[10] = a2;
      *(_WORD *)&v24[18] = 2082;
      *(void *)&v24[20] = a3;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Invalid parameters, table:%{private, location:escape_only}s, key:%{public, loca tion:escape_only}s}",  buf,  0x26u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    int v17 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      *(_DWORD *)stat buf = 68289539;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v23 = 2082;
      *(void *)int v24 = "";
      *(_WORD *)&v24[8] = 2081;
      *(void *)&v24[10] = a2;
      *(_WORD *)&v24[18] = 2082;
      *(void *)&v24[20] = a3;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v17,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Invalid parameters",  "{msg%{public}.0s:Invalid parameters, table:%{private, location:escape_only}s, key:%{public, loca tion:escape_only}s}",  buf,  0x26u);
    }

    uint64_t v14 = 0LL;
  }

  (*(void (**)(uint64_t))(*(void *)v6 + 24LL))(v6);
  return v14;
}

void sub_1003BFC54( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, char a18)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a18);
  sub_1011C52D0((uint64_t)&a15);
  _Unwind_Resume(a1);
}

uint64_t sub_1003BFCA4(uint64_t a1, char *a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v10 = v4;
  (*(void (**)(uint64_t))(*(void *)v4 + 16LL))(v4);
  __int16 v11 = 256;
  uint64_t v5 = sub_1003BFDC8(a1, "TableInfo", (const char **)&off_101835B20, "TableName");
  sub_1004F2598();
  sub_1004F5DC4((uint64_t)__p);
  if (v9 >= 0) {
    uint64_t v6 = (char *)__p;
  }
  else {
    uint64_t v6 = (char *)__p[0];
  }
  sub_1003BC1F0(v5, 1, v6);
  sub_1003BC1F0(v5, 2, a2);
  sub_1003BB2BC(a1, v5);
  sub_1003B5CCC(*(sqlite3 **)(a1 + 8), v5);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return (*(uint64_t (**)(uint64_t))(*(void *)v4 + 24LL))(v4);
}

void sub_1003BFD98( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
}

sqlite3_stmt *sub_1003BFDC8(uint64_t a1, const char *a2, const char **a3, const char *a4)
{
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v32 = v8;
  (*(void (**)(uint64_t))(*(void *)v8 + 16LL))(v8);
  __int16 v33 = 256;
  if (a2 && a4 && *a3)
  {
    sub_10000CE18((uint64_t)buf);
    char v9 = sub_10000CF44(&v36[6], (uint64_t)"UPDATE ", 7LL);
    size_t v10 = strlen(a2);
    __int16 v11 = sub_10000CF44(v9, (uint64_t)a2, v10);
    char v12 = sub_10000CF44(v11, (uint64_t)" SET ", 5LL);
    size_t v13 = strlen(*a3);
    uint64_t v14 = sub_10000CF44(v12, (uint64_t)*a3, v13);
    sub_10000CF44(v14, (uint64_t)"=?", 2LL);
    if (a3[1])
    {
      uint64_t v15 = a3 + 2;
      do
      {
        size_t v16 = sub_10000CF44(&v36[6], (uint64_t)", ", 2LL);
        size_t v17 = strlen((const char *)*(v15 - 1));
        int v18 = sub_10000CF44(v16, *(v15 - 1), v17);
        sub_10000CF44(v18, (uint64_t)"=?", 2LL);
      }

      while (*v15++);
    }

    uint64_t v20 = sub_10000CF44(&v36[6], (uint64_t)"WHERE ", 6LL);
    size_t v21 = strlen(a4);
    __int16 v22 = sub_10000CF44(v20, (uint64_t)a4, v21);
    sub_10000CF44(v22, (uint64_t)"=?", 2LL);
    std::stringbuf::str(&__p, (const std::stringbuf *)&v36[14]);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    int v24 = sub_1003B5AC8(a1, (char *)p_p);
    *(void *)&v36[6] = v25;
    if (v40 < 0) {
      operator delete(v39);
    }
    std::streambuf::~streambuf(&v36[14]);
    std::ios::~ios(&v41);
  }

  else
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    char v26 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      uint64_t v27 = *a3;
      *(_DWORD *)stat buf = 68289795;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v35 = 2082;
      *(void *)uint64_t v36 = "";
      *(_WORD *)&v36[8] = 2081;
      *(void *)&v36[10] = a2;
      *(_WORD *)&v36[18] = 2082;
      *(void *)&v36[20] = v27;
      __int16 v37 = 2082;
      char v38 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Invalid parameters, table:%{private, location:escape_only}s, columnNames[0]:%{p ublic, location:escape_only}s, key:%{public, location:escape_only}s}",  buf,  0x30u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    __int16 v28 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      uint64_t v29 = *a3;
      *(_DWORD *)stat buf = 68289795;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v35 = 2082;
      *(void *)uint64_t v36 = "";
      *(_WORD *)&v36[8] = 2081;
      *(void *)&v36[10] = a2;
      *(_WORD *)&v36[18] = 2082;
      *(void *)&v36[20] = v29;
      __int16 v37 = 2082;
      char v38 = a4;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v28,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Invalid parameters",  "{msg%{public}.0s:Invalid parameters, table:%{private, location:escape_only}s, columnNames[0]:%{p ublic, location:escape_only}s, key:%{public, location:escape_only}s}",  buf,  0x30u);
    }

    int v24 = 0LL;
  }

  (*(void (**)(uint64_t))(*(void *)v8 + 24LL))(v8);
  return v24;
}

void sub_1003C01A8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, char a18)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a18);
  sub_1011C52D0((uint64_t)&a15);
  _Unwind_Resume(a1);
}

uint64_t sub_1003C0204(uint64_t a1, char **a2)
{
  uint64_t v12 = *(void *)(a1 + 16);
  (*(void (**)(uint64_t))(*(void *)v12 + 16LL))(v12);
  sub_1003C0454(a1);
  if (*a2)
  {
    unsigned int v4 = 1;
    uint64_t v5 = a2;
    do
    {
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
      uint64_t v6 = (os_log_s *)off_101934A28;
      if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v7 = *v5;
        *(_DWORD *)stat buf = 68289283;
        *(_DWORD *)&uint8_t buf[4] = 0;
        __int16 v14 = 2082;
        uint64_t v15 = "";
        __int16 v16 = 2081;
        size_t v17 = v7;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:Dropping table, table:%{private, location:escape_only}s}",  buf,  0x1Cu);
      }

      sub_1003BF894(a1, *v5);
      sub_1010DDBC0(buf, "DROP TABLE IF EXISTS ");
      std::string::append((std::string *)buf, *v5);
      if (SBYTE3(v17) >= 0) {
        uint64_t v8 = (char *)buf;
      }
      else {
        uint64_t v8 = *(char **)buf;
      }
      char v9 = sub_1003B5AC8(a1, v8);
      sub_1003BB2BC(a1, v9);
      sub_1003B5CCC(*(sqlite3 **)(a1 + 8), v9);
      if (SBYTE3(v17) < 0) {
        operator delete(*(void **)buf);
      }
      uint64_t v5 = &a2[v4++];
    }

    while (*v5);
  }

  sub_1003C05BC(a1);
  else {
    uint64_t v10 = *(void *)(a1 + 88);
  }
  sub_1003C1EC0(a1, v10);
  return (*(uint64_t (**)(uint64_t))(*(void *)v12 + 24LL))(v12);
}

void sub_1003C040C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20, char a21, char a22)
{
  if (a2) {
    sub_100006BB8(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003C0454(uint64_t a1)
{
  uint64_t v2 = sqlite3_exec(*(sqlite3 **)(a1 + 8), "BEGIN TRANSACTION", 0LL, 0LL, 0LL);
  unsigned int v7 = v2;
  if (qword_101934A20 != -1) {
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }
  unsigned int v3 = (os_log_s *)off_101934A28;
  if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
  {
    unsigned int v4 = (void *)(a1 + 96);
    int v5 = *(_DWORD *)(a1 + 120);
    *(_DWORD *)stat buf = 68290050;
    int v9 = 0;
    __int16 v10 = 2082;
    __int16 v11 = "";
    __int16 v12 = 2082;
    size_t v13 = v4;
    __int16 v14 = 1026;
    int v15 = v5;
    __int16 v16 = 1040;
    int v17 = 4;
    __int16 v18 = 2098;
    size_t v19 = &v7;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:beginTransaction, path:%{public, location:escape_only}s, count:%{public}d, rc :%{public, location:SqliteResult}.*P}",  buf,  0x32u);
    uint64_t v2 = v7;
  }

  ++*(_DWORD *)(a1 + 120);
  return v2;
}

uint64_t sub_1003C05BC(uint64_t a1)
{
  unsigned int v8 = sqlite3_exec(*(sqlite3 **)(a1 + 8), "END TRANSACTION", 0LL, 0LL, 0LL);
  --*(_DWORD *)(a1 + 120);
  if (qword_101934A20 != -1) {
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }
  uint64_t v2 = (os_log_s *)off_101934A28;
  if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
  {
    unsigned int v3 = (const char *)(a1 + 96);
    int v4 = *(_DWORD *)(a1 + 120);
    *(_DWORD *)stat buf = 68290050;
    *(_DWORD *)__int16 v16 = 0;
    *(_WORD *)&v16[4] = 2082;
    *(void *)&v16[6] = "";
    __int16 v17 = 2082;
    __int16 v18 = v3;
    __int16 v19 = 1026;
    int v20 = v4;
    __int16 v21 = 1040;
    int v22 = 4;
    __int16 v23 = 2098;
    int v24 = &v8;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:endTransaction, path:%{public, location:escape_only}s, count:%{public}d, rc:% {public, location:SqliteResult}.*P}",  buf,  0x32u);
  }

  if (*(_DWORD *)(a1 + 120))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101835C70);
    }
    uint64_t v6 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)stat buf = 136315650;
      *(void *)__int16 v16 = "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteDatabase.mm";
      *(_WORD *)&v16[8] = 1024;
      *(_DWORD *)&v16[10] = 1700;
      __int16 v17 = 2080;
      __int16 v18 = "fTransactionCount == 0";
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_FAULT, "Assert Failed, %s, %d, %s", buf, 0x1Cu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101835C70);
      }
      int v9 = 136315650;
      __int16 v10 = "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteDatabase.mm";
      __int16 v11 = 1024;
      int v12 = 1700;
      __int16 v13 = 2080;
      __int16 v14 = "fTransactionCount == 0";
      unsigned int v7 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assert Failed, %s, %d, %s",  (const char *)&v9,  28);
      sub_10029211C("Generic", 1LL, 0, 0LL, "int CLSqliteDatabase::endTransaction()", "%s\n", v7);
    }

    sub_1002920DC();
  }

  sub_1002E4AFC(*(void *)(a1 + 16));
  return v8;
}

sqlite3_stmt *sub_1003C08D4(sqlite3_stmt *result, char *__s)
{
  if (result)
  {
    unsigned int v3 = result;
    int v4 = strlen(__s);
    int v11 = sqlite3_prepare_v2(v3, __s, v4, &ppStmt, (const char **)&pzTail);
    if (v11)
    {
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
      int v5 = (os_log_s *)off_101934A28;
      if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
      {
        uint64_t v6 = sqlite3_errmsg(v3);
        *(_DWORD *)stat buf = 68290051;
        *(_DWORD *)&uint8_t buf[4] = 0;
        __int16 v15 = 2082;
        __int16 v16 = "";
        __int16 v17 = 2081;
        __int16 v18 = __s;
        __int16 v19 = 1040;
        int v20 = 4;
        __int16 v21 = 2098;
        int v22 = &v11;
        __int16 v23 = 2081;
        int v24 = v6;
        _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Could not prepare statement, query:%{private, location:escape_only}s, rc:%{pu blic, location:SqliteResult}.*P, errmsg:%{private, location:escape_only}s}",  buf,  0x36u);
        if (qword_101934A20 != -1) {
          dispatch_once(&qword_101934A20, &stru_101835C50);
        }
      }

      unsigned int v7 = (os_log_s *)off_101934A28;
      if (os_signpost_enabled((os_log_t)off_101934A28))
      {
        unsigned int v8 = sqlite3_errmsg(v3);
        *(_DWORD *)stat buf = 68290051;
        *(_DWORD *)&uint8_t buf[4] = 0;
        __int16 v15 = 2082;
        __int16 v16 = "";
        __int16 v17 = 2081;
        __int16 v18 = __s;
        __int16 v19 = 1040;
        int v20 = 4;
        __int16 v21 = 2098;
        int v22 = &v11;
        __int16 v23 = 2081;
        int v24 = v8;
        _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v7,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Could not prepare statement",  "{msg%{public}.0s:Could not prepare statement, query:%{private, location:escape_only}s, rc:%{pu blic, location:SqliteResult}.*P, errmsg:%{private, location:escape_only}s}",  buf,  0x36u);
      }

      int v9 = sqlite3_db_filename(v3, 0LL);
      if (v9) {
        __int16 v10 = (char *)v9;
      }
      else {
        __int16 v10 = "";
      }
      sub_1010DDBC0(buf, v10);
      sub_1003B7D6C(v3, (char *)buf, 0, v11);
      if (SBYTE3(v18) < 0) {
        operator delete(*(void **)buf);
      }
      return 0LL;
    }

    else
    {
      return ppStmt;
    }
  }

  return result;
}

void sub_1003C0B38( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003C0B5C(uint64_t a1, uint64_t a2)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)(a1 + 16) + 40LL))(*(void *)(a1 + 16));
  if ((result & 1) != 0)
  {
    if (a2)
    {
      uint64_t result = (uint64_t)operator new(0x18uLL);
      uint64_t v6 = *(void *)(a1 + 24);
      int v5 = (uint64_t *)(a1 + 24);
      *(void *)(result + 8) = v5;
      *(void *)(result + 16) = a2;
      *(void *)uint64_t result = v6;
      *(void *)(v6 + 8) = result;
      *int v5 = result;
      ++v5[2];
    }
  }

  else
  {
    uint64_t v7 = sub_101237528();
    return sub_1003C0BC0(v7);
  }

  return result;
}

uint64_t sub_1003C0BC0(uint64_t a1, const char *a2, const char **a3, int a4)
{
  uint64_t v10 = *(void *)(a1 + 16);
  (*(void (**)(uint64_t))(*(void *)v10 + 16LL))(v10);
  unsigned int v8 = sub_1003BF430(a1, a2, a3, a4);
  sub_1003C0B5C(a1, (uint64_t)v8);
  sub_100B14CF0(&v11, a1, (uint64_t)v8);
  (*(void (**)(uint64_t))(*(void *)v10 + 24LL))(v10);
  return v11;
}

void sub_1003C0C6C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_1003C0C80@<X0>( uint64_t a1@<X0>, const char *a2@<X1>, const char **a3@<X2>, int a4@<W3>, void *a5@<X8>)
{
  uint64_t v13 = *(void *)(a1 + 16);
  (*(void (**)(uint64_t))(*(void *)v13 + 16LL))(v13);
  uint64_t v10 = sub_1003BF430(a1, a2, a3, a4);
  uint64_t v11 = operator new(0x18uLL);
  sub_100B10094(v11, a1, (uint64_t)v10);
  *a5 = v11;
  return (*(uint64_t (**)(uint64_t))(*(void *)v13 + 24LL))(v13);
}

void sub_1003C0D2C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
}

uint64_t sub_1003C0D54@<X0>(uint64_t a1@<X0>, char *a2@<X1>, void *a3@<X8>)
{
  uint64_t v9 = *(void *)(a1 + 16);
  (*(void (**)(uint64_t))(*(void *)v9 + 16LL))(v9);
  uint64_t v6 = sub_1003B5AC8(a1, a2);
  uint64_t v7 = operator new(0x18uLL);
  sub_100B10094(v7, a1, (uint64_t)v6);
  *a3 = v7;
  return (*(uint64_t (**)(uint64_t))(*(void *)v9 + 24LL))(v9);
}

void sub_1003C0DF0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
}

uint64_t sub_1003C0E18(uint64_t a1)
{
  unsigned int v6 = sqlite3_exec(*(sqlite3 **)(a1 + 8), "ROLLBACK TRANSACTION", 0LL, 0LL, 0LL);
  --*(_DWORD *)(a1 + 120);
  if (qword_101934A20 != -1) {
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }
  uint64_t v2 = (os_log_s *)off_101934A28;
  if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
  {
    unsigned int v3 = (void *)(a1 + 96);
    int v4 = *(_DWORD *)(a1 + 120);
    *(_DWORD *)stat buf = 68290050;
    int v8 = 0;
    __int16 v9 = 2082;
    uint64_t v10 = "";
    __int16 v11 = 2082;
    int v12 = v3;
    __int16 v13 = 1026;
    int v14 = v4;
    __int16 v15 = 1040;
    int v16 = 4;
    __int16 v17 = 2098;
    __int16 v18 = &v6;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:rollbackTransaction, path:%{public, location:escape_only}s, count:%{public}d, r c:%{public, location:SqliteResult}.*P}",  buf,  0x32u);
  }

  if (*(_DWORD *)(a1 + 120)) {
    sub_1012376A4();
  }
  sub_1002E4AFC(*(void *)(a1 + 16));
  return v6;
}

uint64_t sub_1003C0F7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (!v2)
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    sub_1010DDBC0(&v5, "No valid connection to CLSqliteDatabase database.");
    std::runtime_error::runtime_error(exception, &v5);
    exception->__vftable = (std::runtime_error_vtbl *)&off_1018191C8;
  }

  return sub_100A10C78(a2, v2, *(void *)(a1 + 16));
}

void sub_1003C1010( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }

  else if (!v16)
  {
    goto LABEL_6;
  }

  __cxa_free_exception(v15);
  goto LABEL_6;
}

BOOL sub_1003C1048(uint64_t a1)
{
  return *(void *)(a1 + 8) != 0LL;
}

void sub_1003C1058(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1003C1060(uint64_t a1, uint64_t a2, sqlite3_stmt *a3)
{
  return sub_1003B36EC(a1, a3);
}

sqlite3_int64 sub_1003C1068(uint64_t a1)
{
  uint64_t v4 = *(void *)(a1 + 16);
  (*(void (**)(uint64_t))(*(void *)v4 + 16LL))(v4);
  sqlite3_int64 insert_rowid = sqlite3_last_insert_rowid(*(sqlite3 **)(a1 + 8));
  (*(void (**)(uint64_t))(*(void *)v4 + 24LL))(v4);
  return insert_rowid;
}

void sub_1003C10D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_1003C10E4(uint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v3 = *(void *)(a1 + 16);
  (*(void (**)(uint64_t))(*(void *)v3 + 16LL))(v3);
  LODWORD(v1) = sqlite3_changes(*(sqlite3 **)(v1 + 8));
  (*(void (**)(uint64_t))(*(void *)v3 + 24LL))(v3);
  return (int)v1;
}

void sub_1003C114C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

BOOL sub_1003C1160(uint64_t a1)
{
  if (!*(void *)(a1 + 8)) {
    return 0LL;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  (*(void (**)(uint64_t))(*(void *)v4 + 16LL))(v4);
  BOOL v2 = sub_1003C11EC(*(sqlite3_stmt **)(a1 + 8));
  (*(void (**)(uint64_t))(*(void *)v4 + 24LL))(v4);
  return v2;
}

void sub_1003C11D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

BOOL sub_1003C11EC(sqlite3_stmt *a1)
{
  uint64_t v29 = 0LL;
  __int16 v30 = &v29;
  uint64_t v31 = 0x2020000000LL;
  BOOL v2 = sub_1003C165C(a1, "pragma page_count;", &v33);
  sqlite3_int64 v3 = v33;
  if (!v2) {
    sqlite3_int64 v3 = -1LL;
  }
  sqlite3_int64 v32 = v3;
  uint64_t v25 = 0LL;
  char v26 = &v25;
  uint64_t v27 = 0x2020000000LL;
  BOOL v4 = sub_1003C165C(a1, "pragma freelist_count;", &v33);
  sqlite3_int64 v5 = v33;
  if (!v4) {
    sqlite3_int64 v5 = -1LL;
  }
  sqlite3_int64 v28 = v5;
  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_101835C90);
  }
  unsigned int v6 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = (const char *)v30[3];
    uint64_t v8 = v26[3];
    __int16 v9 = sqlite3_db_filename(a1, "main");
    uint64_t buf = 68289794LL;
    *(_WORD *)uint64_t v36 = 2082;
    *(void *)&void v36[2] = "";
    __int16 v37 = 2050;
    char v38 = v7;
    __int16 v39 = 2050;
    *(void *)char v40 = v8;
    *(_WORD *)&v40[8] = 2082;
    *(void *)&v40[10] = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:start vacuum, page_count:%{public}lld, freelist_count:%{public}lld, path:%{pu blic, location:escape_only}s}",  (uint8_t *)&buf,  0x30u);
  }

  uint64_t v22 = 0LL;
  __int16 v23 = &v22;
  uint64_t v24 = 0x2020000000LL;
  if (sub_1003C16C8(a1))
  {
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 3221225472LL;
    void v21[2] = sub_1003C1740;
    v21[3] = &unk_101835B38;
    v21[4] = &v29;
    void v21[5] = &v25;
    v21[6] = a1;
    uint64_t buf = mach_absolute_time();
    *(void *)uint64_t v36 = v21;
    BOOL v10 = sub_1003C18AC(a1, 0LL);
  }

  else
  {
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 3221225472LL;
    void v20[2] = sub_1003C1B54;
    v20[3] = &unk_101835B60;
    v20[4] = &v22;
    v20[5] = &v29;
    v20[6] = &v25;
    v20[7] = a1;
    uint64_t buf = mach_absolute_time();
    *(void *)uint64_t v36 = v20;
    int v11 = sqlite3_exec(a1, "VACUUM", 0LL, 0LL, 0LL);
    *((_DWORD *)v23 + 6) = v11;
    BOOL v10 = v11 == 0;
  }

  sub_1011F6BE4(&buf);
  int v19 = sqlite3_wal_checkpoint_v2(a1, 0LL, 3, 0LL, 0LL);
  if (qword_101934A20 != -1) {
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }
  int v12 = (os_log_s *)off_101934A28;
  if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEFAULT))
  {
    __int16 v13 = sqlite3_db_filename(a1, "main");
    uint64_t buf = 68289794LL;
    *(_WORD *)uint64_t v36 = 2082;
    *(void *)&void v36[2] = "";
    __int16 v37 = 2082;
    char v38 = v13;
    __int16 v39 = 1040;
    *(_DWORD *)char v40 = 4;
    *(_WORD *)&v40[4] = 2098;
    *(void *)&v40[6] = &v19;
    _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:wal_checkpoint, path:%{public, location:escape_only}s, rc:%{public, location:SqliteResult}.*P}",  (uint8_t *)&buf,  0x2Cu);
  }

  BOOL v14 = sub_1003C165C(a1, "pragma page_count;", &v33);
  sqlite3_int64 v15 = v33;
  if (!v14) {
    sqlite3_int64 v15 = -1LL;
  }
  v30[3] = v15;
  BOOL v16 = sub_1003C165C(a1, "pragma freelist_count;", &v33);
  sqlite3_int64 v17 = v33;
  if (!v16) {
    sqlite3_int64 v17 = -1LL;
  }
  v26[3] = v17;
  _Block_object_dispose(&v22, 8);
  _Block_object_dispose(&v25, 8);
  _Block_object_dispose(&v29, 8);
  sub_1001BA1BC(v34);
  return v10;
}

void sub_1003C15E0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26, uint64_t a27, uint64_t a28, uint64_t a29, char a30)
{
}

BOOL sub_1003C165C(sqlite3_stmt *a1, char *a2, sqlite3_int64 *a3)
{
  sqlite3_int64 v5 = sub_1003C08D4(a1, a2);
  if (!v5) {
    return 0LL;
  }
  unsigned int v6 = v5;
  int v7 = sqlite3_step(v5);
  BOOL v8 = v7 == 100;
  if (v7 == 100) {
    *a3 = sqlite3_column_int64(v6, 0);
  }
  sub_1003B5CCC(a1, v6);
  return v8;
}

BOOL sub_1003C16C8(sqlite3_stmt *a1)
{
  BOOL v2 = sub_1003C08D4(a1, "pragma auto_vacuum;");
  if (!v2) {
    return 0LL;
  }
  sqlite3_int64 v3 = v2;
  BOOL v4 = sqlite3_step(v2) == 100 && sqlite3_column_int(v3, 0) == 2;
  sub_1003B5CCC(a1, v3);
  return v4;
}

void sub_1003C1740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v6 = sub_101171C7C(a3 - a2);
  if (qword_101934A20 != -1) {
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }
  int v7 = (os_log_s *)off_101934A28;
  if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL);
    uint64_t v9 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL);
    BOOL v10 = sqlite3_db_filename(*(sqlite3 **)(a1 + 48), "main");
    v11[0] = 68290818;
    v11[1] = 0;
    __int16 v12 = 2082;
    __int16 v13 = "";
    __int16 v14 = 2082;
    sqlite3_int64 v15 = "elapsed";
    __int16 v16 = 2050;
    uint64_t v17 = a2;
    __int16 v18 = 2050;
    uint64_t v19 = a3;
    __int16 v20 = 2050;
    double v21 = v6;
    __int16 v22 = 2050;
    uint64_t v23 = v8;
    __int16 v24 = 2050;
    uint64_t v25 = v9;
    __int16 v26 = 2082;
    uint64_t v27 = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:incremental_vacuum, event:%{public, location:escape_only}s, begin_mach:%{public}l lu, end_mach:%{public}llu, elapsed_s:%{public}.09f, page_count:%{public}lld, freelist_count:%{ public}lld, path:%{public, location:escape_only}s}",  (uint8_t *)v11,  0x58u);
  }

BOOL sub_1003C18AC(sqlite3 *a1, uint64_t a2)
{
  BOOL v4 = sub_10000CF44(&v15, (uint64_t)"pragma incremental_vacuum(", 26LL);
  sqlite3_int64 v5 = (void *)std::ostream::operator<<(v4, a2);
  sub_10000CF44(v5, (uint64_t)");", 2LL);
  std::stringbuf::str(&v13, &v16);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472LL;
  _DWORD v11[2] = sub_1003C1D70;
  v11[3] = &unk_101835B80;
  v11[4] = a2;
  v11[5] = a1;
  v12[0] = mach_absolute_time();
  v12[1] = (uint64_t)v11;
  std::stringbuf::str(&v18, &v16);
  if ((v18.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    double v6 = &v18;
  }
  else {
    double v6 = (std::stringbuf::string_type *)v18.__r_.__value_.__r.__words[0];
  }
  int v7 = sqlite3_exec(a1, (const char *)v6, 0LL, 0LL, 0LL);
  if (qword_101934A20 != -1) {
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }
  uint64_t v8 = (os_log_s *)off_101934A28;
  if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEFAULT))
  {
    v18.__r_.__value_.__r.__words[0] = 68289282LL;
    LOWORD(v18.__r_.__value_.__r.__words[1]) = 2082;
    *(std::string::size_type *)((char *)&v18.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
    WORD1(v18.__r_.__value_.__r.__words[2]) = 1026;
    HIDWORD(v18.__r_.__value_.__r.__words[2]) = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:incrementalVacuum, result:%{public}d}",  (uint8_t *)&v18,  0x18u);
  }

  sub_1011F6BE4(v12);
  *(void *)((char *)v14
  uint64_t v15 = v9;
  std::streambuf::~streambuf(&v16);
  std::ios::~ios(&v17);
  return v7 == 0;
}

void sub_1003C1AF4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20, char a21, char a22, char a23)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a23);
  _Unwind_Resume(a1);
}

void sub_1003C1B54(void *a1, uint64_t a2, uint64_t a3)
{
  double v6 = sub_101171C7C(a3 - a2);
  if (qword_101934A20 != -1) {
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }
  int v7 = (os_log_s *)off_101934A28;
  if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1[4] + 8LL) + 24LL;
    uint64_t v9 = *(void *)(*(void *)(a1[5] + 8LL) + 24LL);
    BOOL v10 = (sqlite3 *)a1[7];
    uint64_t v11 = *(void *)(*(void *)(a1[6] + 8LL) + 24LL);
    v12[0] = 68291330;
    v12[1] = 0;
    __int16 v13 = 2082;
    __int16 v14 = "";
    __int16 v15 = 2082;
    std::stringbuf v16 = "elapsed";
    __int16 v17 = 2050;
    uint64_t v18 = a2;
    __int16 v19 = 2050;
    uint64_t v20 = a3;
    __int16 v21 = 2050;
    double v22 = v6;
    __int16 v23 = 1040;
    int v24 = 4;
    __int16 v25 = 2098;
    uint64_t v26 = v8;
    __int16 v27 = 2050;
    uint64_t v28 = v9;
    __int16 v29 = 2050;
    uint64_t v30 = v11;
    __int16 v31 = 2082;
    sqlite3_int64 v32 = sqlite3_db_filename(v10, "main");
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:vacuum, event:%{public, location:escape_only}s, begin_mach:%{public}llu, end_ma ch:%{public}llu, elapsed_s:%{public}.09f, rc:%{public, location:SqliteResult}.*P, page_count:%{p ublic}lld, freelist_count:%{public}lld, path:%{public, location:escape_only}s}",  (uint8_t *)v12,  0x68u);
  }

BOOL sub_1003C1CE4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(a1 + 16);
  (*(void (**)(uint64_t))(*(void *)v6 + 16LL))(v6);
  BOOL v4 = sub_1003C18AC(*(sqlite3 **)(a1 + 8), a2);
  (*(void (**)(uint64_t))(*(void *)v6 + 24LL))(v6);
  return v4;
}

void sub_1003C1D5C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_1003C1D70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v6 = sub_101171C7C(a3 - a2);
  if (qword_101934A20 != -1) {
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }
  int v7 = (os_log_s *)off_101934A28;
  if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    uint64_t v9 = sqlite3_db_filename(*(sqlite3 **)(a1 + 40), "main");
    v10[0] = 68290562;
    v10[1] = 0;
    __int16 v11 = 2082;
    __int16 v12 = "";
    __int16 v13 = 2082;
    __int16 v14 = "elapsed";
    __int16 v15 = 2050;
    uint64_t v16 = a2;
    __int16 v17 = 2050;
    uint64_t v18 = a3;
    __int16 v19 = 2050;
    double v20 = v6;
    __int16 v21 = 2050;
    uint64_t v22 = v8;
    __int16 v23 = 2082;
    int v24 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:incrementalVacuum, event:%{public, location:escape_only}s, begin_mach:%{public}ll u, end_mach:%{public}llu, elapsed_s:%{public}.09f, pages:%{public}lld, path:%{public, location:escape_only}s}",  (uint8_t *)v10,  0x4Eu);
  }

uint64_t sub_1003C1EC0(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void **)(a1 + 16);
  void v28[2] = v4;
  (*(void (**)(void *))(*(void *)v4 + 16LL))(v4);
  __int16 v29 = 256;
  if (*(_BYTE *)(a1 + 56))
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    sqlite3_int64 v5 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      double v6 = (void *)(a1 + 96);
      *(_DWORD *)uint64_t buf = 68289282;
      int v31 = 0;
      __int16 v32 = 2082;
      sqlite3_int64 v33 = "";
      __int16 v34 = 2082;
      __int16 v35 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Attempt to reduceFreePages on readonly database, path:%{public, location:escape_only}s}",  buf,  0x1Cu);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    int v7 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      uint64_t v8 = (void *)(a1 + 96);
      *(_DWORD *)uint64_t buf = 68289282;
      int v31 = 0;
      __int16 v32 = 2082;
      sqlite3_int64 v33 = "";
      __int16 v34 = 2082;
      __int16 v35 = v8;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v7,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Attempt to reduceFreePages on readonly database",  "{msg%{public}.0s:Attempt to reduceFreePages on readonly database, path:%{public, location:escape_only}s}",  buf,  0x1Cu);
    }

    uint64_t v9 = 2LL;
    goto LABEL_65;
  }

  uint64_t v10 = sub_100AF647C();
  if ((sub_100AF7C84(v10) & 1) != 0)
  {
    sub_100222B94(v28, (uint64_t)"IncrementalVacuum", 0);
    v27[0] = mach_absolute_time();
    v27[1] = (uint64_t)&stru_101835BC0;
    if (sub_1003C165C(*(sqlite3_stmt **)(a1 + 8), "pragma page_count;", &v26)) {
      uint64_t v11 = v26;
    }
    else {
      uint64_t v11 = -1LL;
    }
    if (sub_1003C165C(*(sqlite3_stmt **)(a1 + 8), "pragma freelist_count;", &v26)) {
      uint64_t v12 = v26;
    }
    else {
      uint64_t v12 = -1LL;
    }
    uint64_t v13 = v11 - v12;
    if (v11) {
      double v14 = (double)v13 / (double)v11;
    }
    else {
      double v14 = 1.0;
    }
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    __int16 v17 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v18 = (void *)(a1 + 96);
      *(_DWORD *)uint64_t buf = 68290306;
      int v31 = 0;
      __int16 v32 = 2082;
      sqlite3_int64 v33 = "";
      __int16 v34 = 2082;
      __int16 v35 = v18;
      __int16 v36 = 2050;
      uint64_t v37 = v11;
      __int16 v38 = 2050;
      uint64_t v39 = v12;
      __int16 v40 = 2050;
      double v41 = v14;
      __int16 v42 = 2050;
      uint64_t v43 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:reduceFreePages, path:%{public, location:escape_only}s, page_count:%{public}lld , freelist_count:%{public}lld, loadFactor:%{public}f, incrementalVacuumPageLimit:%{public}lld}",  buf,  0x44u);
    }

    if (!v12) {
      goto LABEL_42;
    }
    if (v11 < 0 || v12 < 0)
    {
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
      __int16 v19 = (os_log_s *)off_101934A28;
      if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
      {
        double v20 = (void *)(a1 + 96);
        *(_DWORD *)uint64_t buf = 68289282;
        int v31 = 0;
        __int16 v32 = 2082;
        sqlite3_int64 v33 = "";
        __int16 v34 = 2082;
        __int16 v35 = v20;
        _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Cannot reduceFreePages, path:%{public, location:escape_only}s}",  buf,  0x1Cu);
        if (qword_101934A20 != -1) {
          dispatch_once(&qword_101934A20, &stru_101835C50);
        }
      }

      __int16 v21 = (os_log_s *)off_101934A28;
      if (os_signpost_enabled((os_log_t)off_101934A28))
      {
        uint64_t v22 = (void *)(a1 + 96);
        *(_DWORD *)uint64_t buf = 68289282;
        int v31 = 0;
        __int16 v32 = 2082;
        sqlite3_int64 v33 = "";
        __int16 v34 = 2082;
        __int16 v35 = v22;
        _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v21,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Cannot reduceFreePages",  "{msg%{public}.0s:Cannot reduceFreePages, path:%{public, location:escape_only}s}",  buf,  0x1Cu);
      }

      uint64_t v9 = 4LL;
      goto LABEL_64;
    }

    if (v14 <= 0.85 || (unint64_t)v12 >= 0x200)
    {
      if (v14 >= 0.4) {
        uint64_t v23 = (uint64_t)((double)v12 * 0.8);
      }
      else {
        uint64_t v23 = v12 - v13;
      }
      if (v23 >= a2) {
        uint64_t v24 = a2;
      }
      else {
        uint64_t v24 = v23;
      }
      if (sub_1003C1CE4(a1, v24)) {
        uint64_t v9 = v23 > a2;
      }
      else {
        uint64_t v9 = 4LL;
      }
    }

    else
    {
LABEL_42:
      uint64_t v9 = 0LL;
    }

void sub_1003C2484(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  va_copy(va2, va1);
  id v6 = va_arg(va2, id);
  uint64_t v8 = va_arg(va2, void);
  sub_1011F6BE4((uint64_t *)va);
  sub_1001BA1BC((id *)va1);
  sub_1011C52D0((uint64_t)va2);
  _Unwind_Resume(a1);
}

void sub_1003C24D8(id a1, unint64_t a2, unint64_t a3)
{
  double v5 = sub_101171C7C(a3 - a2);
  if (qword_101934A20 != -1) {
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }
  id v6 = (os_log_s *)off_101934A28;
  if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEFAULT))
  {
    v7[0] = 68290050;
    v7[1] = 0;
    __int16 v8 = 2082;
    uint64_t v9 = "";
    __int16 v10 = 2082;
    uint64_t v11 = "elapsed";
    __int16 v12 = 2050;
    unint64_t v13 = a2;
    __int16 v14 = 2050;
    unint64_t v15 = a3;
    __int16 v16 = 2050;
    double v17 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:reduceFreePages, event:%{public, location:escape_only}s, begin_mach:%{public}llu, end_mach:%{public}llu, elapsed_s:%{public}.09f}",  (uint8_t *)v7,  0x3Au);
  }

BOOL sub_1003C25FC(sqlite3 *a1, _DWORD *a2, int a3)
{
  if (a3) {
    id v6 = "pragma auto_vacuum = 2;";
  }
  else {
    id v6 = "pragma auto_vacuum = 0;";
  }
  int v7 = sqlite3_exec(a1, v6, 0LL, 0LL, 0LL);
  int v18 = v7;
  if (qword_101934A20 != -1) {
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }
  __int16 v8 = (os_log_s *)off_101934A28;
  if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289794;
    int v20 = 0;
    __int16 v21 = 2082;
    uint64_t v22 = "";
    __int16 v23 = 1026;
    int v24 = a3;
    __int16 v25 = 1040;
    int v26 = 4;
    __int16 v27 = 2098;
    uint64_t v28 = &v18;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:setIncrementalVacuumEnabled, enabled:%{public}hhd, rc:%{public, location:SqliteResult}.*P}",  buf,  0x28u);
    int v7 = v18;
  }

  BOOL v9 = v7 == 0;
  if (a3) {
    int v10 = 2;
  }
  else {
    int v10 = 0;
  }
  uint64_t v11 = sub_1003C08D4(a1, "pragma auto_vacuum;");
  if (v11)
  {
    __int16 v12 = v11;
    if (sqlite3_step(v11) == 100)
    {
      int v13 = sqlite3_column_int(v12, 0);
      sub_1003B5CCC(a1, v12);
      if (v13 == v10) {
        return v9;
      }
      goto LABEL_17;
    }

    sub_1003B5CCC(a1, v12);
  }

  BOOL v9 = 0LL;
  int v13 = -1;
LABEL_17:
  uint64_t v14 = 0LL;
  while (dword_1012E7CF4[v14] != *a2 || dword_1012E7CF4[v14 + 1] != a2[1])
  {
    v14 += 2LL;
    if (v14 == 6)
    {
      int v15 = 1;
      goto LABEL_23;
    }
  }

  int v15 = 0;
LABEL_23:
  if (qword_101934A20 != -1) {
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }
  __int16 v16 = (os_log_s *)off_101934A28;
  if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289794;
    int v20 = 0;
    __int16 v21 = 2082;
    uint64_t v22 = "";
    __int16 v23 = 1026;
    int v24 = v13;
    __int16 v25 = 1026;
    int v26 = v10;
    __int16 v27 = 1026;
    LODWORD(v2_Block_object_dispose((const void *)(v30 - 184), 8) = v15;
    _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:Actual auto-vacuum state does not match desired state, actual:%{public}d, expected :%{public}d, vacuumNow:%{public}hhd}",  buf,  0x24u);
  }

  if (v15) {
    sub_1003C11EC(a1);
  }
  return v9;
}

BOOL sub_1003C28BC(sqlite3_stmt *a1, int a2, int a3)
{
  int v6 = sqlite3_bind_int(a1, a2, a3);
  int v11 = v6;
  if (v6)
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    int v7 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68290307;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 1025;
      int v17 = a3;
      __int16 v18 = 1026;
      int v19 = a2;
      __int16 v20 = 1040;
      int v21 = 4;
      __int16 v22 = 2098;
      __int16 v23 = &v11;
      __int16 v24 = 2081;
      __int16 v25 = sqlite3_sql(a1);
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Could not bind, value:%{private}d, index:%{public}d, rc:%{public, location: SqliteResult}.*P, query:%{private, location:escape_only}s}",  buf,  0x38u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    __int16 v8 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      BOOL v9 = sqlite3_sql(a1);
      *(_DWORD *)uint64_t buf = 68290307;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 1025;
      int v17 = a3;
      __int16 v18 = 1026;
      int v19 = a2;
      __int16 v20 = 1040;
      int v21 = 4;
      __int16 v22 = 2098;
      __int16 v23 = &v11;
      __int16 v24 = 2081;
      __int16 v25 = v9;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v8,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Could not bind",  "{msg%{public}.0s:Could not bind, value:%{private}d, index:%{public}d, rc:%{public, location: SqliteResult}.*P, query:%{private, location:escape_only}s}",  buf,  0x38u);
    }
  }

  return v6 == 0;
}

BOOL sub_1003C2AF0(sqlite3_stmt *a1, int a2, int a3)
{
  int v6 = sqlite3_bind_int(a1, a2, a3);
  int v11 = v6;
  if (v6)
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    int v7 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68290307;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 1025;
      int v17 = a3;
      __int16 v18 = 1026;
      int v19 = a2;
      __int16 v20 = 1040;
      int v21 = 4;
      __int16 v22 = 2098;
      __int16 v23 = &v11;
      __int16 v24 = 2081;
      __int16 v25 = sqlite3_sql(a1);
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Could not bind, value:%{private}u, index:%{public}d, rc:%{public, location: SqliteResult}.*P, query:%{private, location:escape_only}s}",  buf,  0x38u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    __int16 v8 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      BOOL v9 = sqlite3_sql(a1);
      *(_DWORD *)uint64_t buf = 68290307;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 1025;
      int v17 = a3;
      __int16 v18 = 1026;
      int v19 = a2;
      __int16 v20 = 1040;
      int v21 = 4;
      __int16 v22 = 2098;
      __int16 v23 = &v11;
      __int16 v24 = 2081;
      __int16 v25 = v9;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v8,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Could not bind",  "{msg%{public}.0s:Could not bind, value:%{private}u, index:%{public}d, rc:%{public, location: SqliteResult}.*P, query:%{private, location:escape_only}s}",  buf,  0x38u);
    }
  }

  return v6 == 0;
}

BOOL sub_1003C2D24(sqlite3_stmt *a1, int a2, sqlite3_int64 a3)
{
  int v6 = sqlite3_bind_int64(a1, a2, a3);
  int v11 = v6;
  if (v6)
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    int v7 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68290307;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 2049;
      sqlite3_int64 v17 = a3;
      __int16 v18 = 1026;
      int v19 = a2;
      __int16 v20 = 1040;
      int v21 = 4;
      __int16 v22 = 2098;
      __int16 v23 = &v11;
      __int16 v24 = 2081;
      __int16 v25 = sqlite3_sql(a1);
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Could not bind, value:%{private}lld, index:%{public}d, rc:%{public, locatio n:SqliteResult}.*P, query:%{private, location:escape_only}s}",  buf,  0x3Cu);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    __int16 v8 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      BOOL v9 = sqlite3_sql(a1);
      *(_DWORD *)uint64_t buf = 68290307;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 2049;
      sqlite3_int64 v17 = a3;
      __int16 v18 = 1026;
      int v19 = a2;
      __int16 v20 = 1040;
      int v21 = 4;
      __int16 v22 = 2098;
      __int16 v23 = &v11;
      __int16 v24 = 2081;
      __int16 v25 = v9;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v8,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Could not bind",  "{msg%{public}.0s:Could not bind, value:%{private}lld, index:%{public}d, rc:%{public, locatio n:SqliteResult}.*P, query:%{private, location:escape_only}s}",  buf,  0x3Cu);
    }
  }

  return v6 == 0;
}

BOOL sub_1003C2F58(sqlite3_stmt *a1, int a2, void *a3)
{
  int v6 = sqlite3_bind_blob( a1,  a2,  [a3 bytes],  (int)objc_msgSend(a3, "length"),  (void (__cdecl *)(void *))0xFFFFFFFFFFFFFFFFLL);
  int v11 = v6;
  if (v6)
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    int v7 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68290307;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 2113;
      sqlite3_int64 v17 = a3;
      __int16 v18 = 1026;
      int v19 = a2;
      __int16 v20 = 1040;
      int v21 = 4;
      __int16 v22 = 2098;
      __int16 v23 = &v11;
      __int16 v24 = 2081;
      __int16 v25 = sqlite3_sql(a1);
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Could not bind, value:%{private, location:escape_only}@, index:%{public}d, rc :%{public, location:SqliteResult}.*P, query:%{private, location:escape_only}s}",  buf,  0x3Cu);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    __int16 v8 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      BOOL v9 = sqlite3_sql(a1);
      *(_DWORD *)uint64_t buf = 68290307;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 2113;
      sqlite3_int64 v17 = a3;
      __int16 v18 = 1026;
      int v19 = a2;
      __int16 v20 = 1040;
      int v21 = 4;
      __int16 v22 = 2098;
      __int16 v23 = &v11;
      __int16 v24 = 2081;
      __int16 v25 = v9;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v8,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Could not bind",  "{msg%{public}.0s:Could not bind, value:%{private, location:escape_only}@, index:%{public}d, rc :%{public, location:SqliteResult}.*P, query:%{private, location:escape_only}s}",  buf,  0x3Cu);
    }
  }

  return v6 == 0;
}

BOOL sub_1003C31B4(sqlite3_stmt *a1, int a2, int a3)
{
  int v5 = sqlite3_bind_zeroblob(a1, a2, a3);
  int v10 = v5;
  if (v5)
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    int v6 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68290051;
      int v12 = 0;
      __int16 v13 = 2082;
      __int16 v14 = "";
      __int16 v15 = 1026;
      int v16 = a2;
      __int16 v17 = 1040;
      int v18 = 4;
      __int16 v19 = 2098;
      __int16 v20 = &v10;
      __int16 v21 = 2081;
      __int16 v22 = sqlite3_sql(a1);
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Could not bind, index:%{public}d, rc:%{public, location:SqliteResult}.*P, que ry:%{private, location:escape_only}s}",  buf,  0x32u);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
    }

    int v7 = (os_log_s *)off_101934A28;
    if (os_signpost_enabled((os_log_t)off_101934A28))
    {
      __int16 v8 = sqlite3_sql(a1);
      *(_DWORD *)uint64_t buf = 68290051;
      int v12 = 0;
      __int16 v13 = 2082;
      __int16 v14 = "";
      __int16 v15 = 1026;
      int v16 = a2;
      __int16 v17 = 1040;
      int v18 = 4;
      __int16 v19 = 2098;
      __int16 v20 = &v10;
      __int16 v21 = 2081;
      __int16 v22 = v8;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v7,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Could not bind",  "{msg%{public}.0s:Could not bind, index:%{public}d, rc:%{public, location:SqliteResult}.*P, que ry:%{private, location:escape_only}s}",  buf,  0x32u);
    }
  }

  return v5 == 0;
}

uint64_t sub_1003C33C4(const char *a1)
{
  if (!strcmp(a1, "INTEGER")) {
    return 1LL;
  }
  if (!strcmp(a1, "FLOAT")) {
    return 2LL;
  }
  if (!strcmp(a1, "BLOB")) {
    return 4LL;
  }
  uint64_t v2 = 5LL;
  if (strcmp(a1, "NULL"))
  {
    if (!strcmp(a1, "TEXT")) {
      return 3LL;
    }
    else {
      return 5LL;
    }
  }

  return v2;
}

uint64_t sub_1003C3468(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  v35[19] = v4;
  (*(void (**)(uint64_t))(*(void *)v4 + 16LL))(v4);
  __int16 v36 = 256;
  if (!*(void *)a2) {
    goto LABEL_35;
  }
  uint64_t v5 = 0LL;
  if (!*(_BYTE *)(a2 + 40)) {
    goto LABEL_47;
  }
  int v6 = *(const char **)(a2 + 24);
  if (!v6) {
    goto LABEL_47;
  }
  int v7 = *(const char **)(a2 + 16);
  if (!v7)
  {
LABEL_35:
    uint64_t v5 = 0LL;
    goto LABEL_47;
  }

  sub_10000CE18((uint64_t)v32);
  __int16 v8 = sub_10000CF44(&v33, (uint64_t)"PRAGMA table_info(", 18LL);
  size_t v9 = strlen(v7);
  int v10 = sub_10000CF44(v8, (uint64_t)v7, v9);
  sub_10000CF44(v10, (uint64_t)")", 1LL);
  std::stringbuf::str((std::stringbuf::string_type *)__str, &v34);
  if (__str[23] >= 0) {
    int v11 = __str;
  }
  else {
    int v11 = *(char **)__str;
  }
  int v12 = sub_1003B5AC8(a1, v11);
  if ((__str[23] & 0x80000000) != 0) {
    operator delete(*(void **)__str);
  }
  while (1)
  {
    int v13 = sqlite3_step(v12);
    if (v13 != 100) {
      break;
    }
    __int16 v14 = sqlite3_column_text(v12, 1);
    if (!strcmp(v6, (const char *)v14))
    {
      uint64_t v15 = 0LL;
      int v16 = dword_101835BE0;
      do
      {
        int v17 = *v16;
        v16 += 4;
        if (v17 == *(_DWORD *)(a2 + 8)) {
          break;
        }
        ++v15;
      }

      while (v15 != 5);
      int v18 = *(const char **)&dword_101835BE0[4 * v15 + 2];
      __int16 v19 = sqlite3_column_text(v12, 2);
      if (!strcmp(v18, (const char *)v19))
      {
        if (qword_101934A20 != -1) {
          dispatch_once(&qword_101934A20, &stru_101835C50);
        }
        __int16 v20 = (os_log_s *)off_101934A28;
        if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
        {
          *(void *)std::stringbuf::string_type __str = 68289538LL;
          *(_WORD *)&__str[8] = 2082;
          *(void *)&__str[10] = "";
          *(_WORD *)&__str[18] = 2082;
          *(void *)&__str[20] = v7;
          *(_WORD *)&_BYTE __str[28] = 2082;
          __int16 v38 = v6;
          _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:Foreign key references are valid, FK_Table:%{public, location:escape_only}s,  FK_Col:%{public, location:escape_only}s}",  __str,  0x26u);
        }

        break;
      }
    }
  }

  sub_1003B5CCC(*(sqlite3 **)(a1 + 8), v12);
  memset(__str, 0, 24);
  std::string::operator=(&v34.__str_, (const std::string *)__str);
  sub_10023BE94((uint64_t)&v34);
  if ((__str[23] & 0x80000000) != 0) {
    operator delete(*(void **)__str);
  }
  __int16 v21 = sub_10000CF44(&v33, (uint64_t)"SELECT indexInfo.name FROM pragma_index_list('", 46LL);
  size_t v22 = strlen(v7);
  __int16 v23 = sub_10000CF44(v21, (uint64_t)v7, v22);
  sub_10000CF44(v23, (uint64_t)"') AS indexList, pragma_index_info(indexList.name) AS indexInfo", 63LL);
  std::stringbuf::str((std::stringbuf::string_type *)__str, &v34);
  if (__str[23] >= 0) {
    __int16 v24 = __str;
  }
  else {
    __int16 v24 = *(char **)__str;
  }
  __int16 v25 = sub_1003B5AC8(a1, v24);
  if ((__str[23] & 0x80000000) != 0) {
    operator delete(*(void **)__str);
  }
  if (v13 == 100)
  {
    while (sqlite3_step(v25) == 100)
    {
      int v26 = sqlite3_column_text(v25, 0);
      if (!strcmp(v6, (const char *)v26))
      {
        if (qword_101934A20 != -1) {
          dispatch_once(&qword_101934A20, &stru_101835C50);
        }
        __int16 v27 = (os_log_s *)off_101934A28;
        if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
        {
          *(void *)std::stringbuf::string_type __str = 68289538LL;
          *(_WORD *)&__str[8] = 2082;
          *(void *)&__str[10] = "";
          *(_WORD *)&__str[18] = 2082;
          *(void *)&__str[20] = v7;
          *(_WORD *)&_BYTE __str[28] = 2082;
          __int16 v38 = v6;
          _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:Index exist, FK_Table:%{public, location:escape_only}s, FK_Col:%{public, lo cation:escape_only}s}",  __str,  0x26u);
        }

        unsigned int v28 = 1;
        goto LABEL_37;
      }
    }
  }

  unsigned int v28 = 0;
LABEL_37:
  sub_1003B5CCC(*(sqlite3 **)(a1 + 8), v25);
  if (qword_101934A20 != -1) {
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }
  __int16 v29 = (os_log_s *)off_101934A28;
  if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
  {
    *(void *)std::stringbuf::string_type __str = 68289538LL;
    *(_WORD *)&__str[8] = 2082;
    *(void *)&__str[10] = "";
    *(_WORD *)&__str[18] = 1026;
    *(_DWORD *)&__str[20] = v13 == 100;
    *(_WORD *)&__str[24] = 1026;
    *(_DWORD *)&__str[26] = v28;
    _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:ForeignKey reference, isReferenceValid:%{public}hhd, isIndexed:%{public}hhd}",  __str,  0x1Eu);
  }

  *(void *)((char *)v32
  if (v13 == 100) {
    uint64_t v5 = v28;
  }
  else {
    uint64_t v5 = 0LL;
  }
  uint64_t v33 = v30;
  std::streambuf::~streambuf(&v34);
  std::ios::~ios(v35);
LABEL_47:
  (*(void (**)(uint64_t))(*(void *)v4 + 24LL))(v4);
  return v5;
}

void sub_1003C3990(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_1003C39F8(uint64_t a1)
{
  return sub_1002E4AF0(*(void *)(a1 + 16));
}

uint64_t sub_1003C3A00(uint64_t a1)
{
  return sub_1002E4AFC(*(void *)(a1 + 16));
}

void sub_1003C3A08(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0LL;
  a2->__r_.__value_.__l.__size_ = 0LL;
  a2->__r_.__value_.__l.__cap_ = 0LL;
  if (*(void *)(a1 + 8))
  {
    if (((*(uint64_t (**)(void))(**(void **)(a1 + 16) + 40LL))(*(void *)(a1 + 16)) & 1) != 0)
    {
      uint64_t v4 = sqlite3_errmsg(*(sqlite3 **)(a1 + 8));
      std::string::assign(a2, v4);
    }

    else
    {
      sub_101237820();
      abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteDatabase.mm",  2373,  "getCurrentErrorMessage");
      __break(1u);
    }
  }

  else
  {
    std::string::assign(a2, "No database");
  }

void sub_1003C3AAC(_Unwind_Exception *exception_object)
{
}

uint64_t sub_1003C3AC8(uint64_t a1, const char *a2, uint64_t *a3, char **a4)
{
  a4[1] = *a4;
  if (qword_101934A20 != -1) {
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }
  __int16 v8 = (os_log_s *)off_101934A28;
  if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)uint64_t buf = 68289283;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v57 = 2082;
    *(void *)uint64_t v58 = "";
    *(_WORD *)&v58[8] = 2081;
    *(void *)&v58[10] = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:getColumnInfo, table:%{private, location:escape_only}s}",  buf,  0x1Cu);
  }

  sub_10000CE18((uint64_t)buf);
  size_t v9 = sub_10000CF44(&v58[6], (uint64_t)"PRAGMA table_info(", 18LL);
  size_t v10 = strlen(a2);
  int v11 = sub_10000CF44(v9, (uint64_t)a2, v10);
  v51[0] = 41;
  sub_10000CF44(v11, (uint64_t)v51, 1LL);
  std::stringbuf::str((std::stringbuf::string_type *)v51, (const std::stringbuf *)&v58[14]);
  if (v51[23] >= 0) {
    int v12 = v51;
  }
  else {
    int v12 = *(char **)v51;
  }
  sub_1003C0D54(a1, v12, &__s);
  int v13 = __s;
  if ((v51[23] & 0x80000000) != 0) {
    operator delete(*(void **)v51);
  }
  while (1)
  {
    __int16 v14 = (sqlite3_stmt *)sub_100019240((uint64_t)v13);
    if (sqlite3_step(v14) != 100) {
      break;
    }
    uint64_t v15 = (sqlite3_stmt *)sub_100019240((uint64_t)v13);
    __s = (char *)sqlite3_column_text(v15, 1);
    int v16 = (sqlite3_stmt *)sub_100019240((uint64_t)v13);
    int v17 = sqlite3_column_text(v16, 2);
    int v18 = (sqlite3_stmt *)sub_100019240((uint64_t)v13);
    int v19 = sqlite3_column_int(v18, 5);
    BOOL v20 = v19 != 0;
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    __int16 v21 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
    {
      *(void *)size_t v51 = 68289794LL;
      *(_WORD *)&v51[8] = 2082;
      *(void *)&v51[10] = "";
      *(_WORD *)&v51[18] = 2082;
      *(void *)&v51[20] = __s;
      __int16 v52 = 2082;
      std::stringbuf::string_type v53 = v17;
      __int16 v54 = 1026;
      BOOL v55 = v19 != 0;
      _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:getColumnInfo, name:%{public, location:escape_only}s, type:%{public, location:e scape_only}s, isPrimaryKey:%{public}hhd}",  v51,  0x2Cu);
    }

    unint64_t v22 = a3[1];
    if (v22 >= a3[2])
    {
      uint64_t v23 = sub_1003C48B0(a3, &__s);
    }

    else
    {
      sub_1010DDBC0((void *)a3[1], __s);
      uint64_t v23 = v22 + 24;
      a3[1] = v22 + 24;
    }

    a3[1] = v23;
    int v24 = sub_1003C33C4((const char *)v17);
    int v25 = v24;
    unint64_t v26 = (unint64_t)a4[1];
    unint64_t v27 = (unint64_t)a4[2];
    if (v26 >= v27)
    {
      unint64_t v29 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v26 - (void)*a4) >> 4);
      unint64_t v30 = v29 + 1;
      if (v29 + 1 > 0x555555555555555LL) {
        sub_100007008();
      }
      unint64_t v31 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v27 - (void)*a4) >> 4);
      if (2 * v31 > v30) {
        unint64_t v30 = 2 * v31;
      }
      if (v31 >= 0x2AAAAAAAAAAAAAALL) {
        unint64_t v32 = 0x555555555555555LL;
      }
      else {
        unint64_t v32 = v30;
      }
      uint64_t v33 = (char *)sub_1000BB1F4((uint64_t)(a4 + 2), v32);
      __int16 v35 = &v33[48 * v29];
      *(void *)__int16 v35 = 0LL;
      *((_DWORD *)v35 + 2) = v25;
      v35[12] = v20;
      v35[13] = 0;
      v35[16] = 0;
      v35[40] = 0;
      uint64_t v37 = *a4;
      __int16 v36 = a4[1];
      __int16 v38 = v35;
      if (v36 != *a4)
      {
        do
        {
          __int128 v39 = *((_OWORD *)v36 - 3);
          __int128 v40 = *((_OWORD *)v36 - 1);
          *((_OWORD *)v38 - 2) = *((_OWORD *)v36 - 2);
          *((_OWORD *)v38 - 1) = v40;
          *((_OWORD *)v38 - 3) = v39;
          v38 -= 48;
          v36 -= 48;
        }

        while (v36 != v37);
        __int16 v36 = *a4;
      }

      unsigned int v28 = v35 + 48;
      *a4 = v38;
      a4[1] = v35 + 48;
      a4[2] = &v33[48 * v34];
      if (v36) {
        operator delete(v36);
      }
    }

    else
    {
      *(void *)unint64_t v26 = 0LL;
      *(_DWORD *)(v26 + _Block_object_dispose((const void *)(v30 - 184), 8) = v24;
      *(_BYTE *)(v26 + 12) = v20;
      *(_BYTE *)(v26 + 13) = 0;
      *(_BYTE *)(v26 + 16) = 0;
      unsigned int v28 = (char *)(v26 + 48);
      *(_BYTE *)(v26 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0;
    }

    a4[1] = v28;
  }

  uint64_t v41 = *a3;
  uint64_t v42 = a3[1] - *a3;
  if (v42)
  {
    unint64_t v43 = v42 / 24;
    uint64_t v44 = (uint64_t *)*a4;
    unint64_t v45 = 0xAAAAAAAAAAAAAAABLL * ((a4[1] - *a4) >> 4);
    if (v43 <= 1) {
      unint64_t v43 = 1LL;
    }
    do
    {
      if (!v45) {
        sub_100092C20();
      }
      uint64_t v46 = v41;
      *uint64_t v44 = v46;
      v44 += 6;
      --v45;
      v41 += 24LL;
      --v43;
    }

    while (v43);
  }

  uint64_t v47 = (sqlite3_stmt *)sub_100019240((uint64_t)v13);
  sqlite3_reset(v47);
  if (v13) {
    (*(void (**)(char *))(*(void *)v13 + 8LL))(v13);
  }
  *(void *)&v58[6] = v48;
  if (v60 < 0) {
    operator delete(__p);
  }
  std::streambuf::~streambuf(&v58[14]);
  return std::ios::~ios(&v61);
}

void sub_1003C3FE4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20, uint64_t a21, uint64_t a22, uint64_t a23, char a24)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a24);
  _Unwind_Resume(a1);
}

uint64_t sub_1003C4060(uint64_t a1, const char *a2, uint64_t *a3)
{
  if (qword_101934A20 != -1) {
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }
  uint64_t v4 = (os_log_s *)off_101934A28;
  if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)uint64_t buf = 68289283;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v42 = 2082;
    *(void *)unint64_t v43 = "";
    *(_WORD *)&v43[8] = 2081;
    *(void *)&v43[10] = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:getTableIndexColumns, table:%{private, location:escape_only}s}",  buf,  0x1Cu);
  }

  sub_10000CE18((uint64_t)buf);
  uint64_t v5 = sub_10000CF44(&v43[6], (uint64_t)"PRAGMA index_list(", 18LL);
  size_t v6 = strlen(a2);
  int v7 = sub_10000CF44(v5, (uint64_t)a2, v6);
  LOBYTE(v35) = 41;
  sub_10000CF44(v7, (uint64_t)&v35, 1LL);
  std::stringbuf::str((std::stringbuf::string_type *)&v35, (const std::stringbuf *)&v43[14]);
  if (v37[13] >= 0) {
    __int16 v8 = (char *)&v35;
  }
  else {
    __int16 v8 = (char *)v35;
  }
  sub_1003C0D54(a1, v8, &v33);
  uint64_t v9 = v33.__r_.__value_.__r.__words[0];
  if ((v37[13] & 0x80000000) != 0) {
    operator delete((void *)v35);
  }
  int v10 = 0;
  while (1)
  {
    int v12 = (sqlite3_stmt *)sub_100019240(v9);
    if (sqlite3_step(v12) != 100) {
      break;
    }
    if (v10)
    {
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101835C50);
      }
      int v13 = (os_log_s *)off_101934A28;
      if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v35 = 68289282LL;
        __int16 v36 = 2082;
        *(void *)uint64_t v37 = "";
        *(_WORD *)&v37[8] = 2082;
        *(void *)&_BYTE v37[10] = a2;
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#warning Table seems to contain more than 1 index, table:%{public, location:escape_only}s}",  (uint8_t *)&v35,  0x1Cu);
      }
    }

    __int16 v14 = (sqlite3_stmt *)sub_100019240(v9);
    uint64_t v15 = sqlite3_column_text(v14, 1);
    sub_10000CE18((uint64_t)&v35);
    int v16 = sub_10000CF44(&v37[6], (uint64_t)"PRAGMA index_info(", 18LL);
    size_t v17 = strlen((const char *)v15);
    int v18 = sub_10000CF44(v16, (uint64_t)v15, v17);
    v33.__r_.__value_.__s.__data_[0] = 41;
    sub_10000CF44(v18, (uint64_t)&v33, 1LL);
    std::stringbuf::str(&v33, (const std::stringbuf *)&v37[14]);
    if ((v33.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      int v19 = &v33;
    }
    else {
      int v19 = (std::stringbuf::string_type *)v33.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(a1, (char *)v19, &v34);
    uint64_t v20 = v34;
    while (1)
    {
      int v25 = (sqlite3_stmt *)sub_100019240(v20);
      if (sqlite3_step(v25) != 100) {
        break;
      }
      __int16 v21 = (sqlite3_stmt *)sub_100019240(v20);
      unint64_t v22 = (char *)sqlite3_column_text(v21, 2);
      v33.__r_.__value_.__r.__words[0] = (std::string::size_type)v22;
      unint64_t v23 = a3[1];
      if (v23 >= a3[2])
      {
        uint64_t v24 = sub_1003C48B0(a3, &v33.__r_.__value_.__l.__data_);
      }

      else
      {
        sub_1010DDBC0((void *)a3[1], v22);
        uint64_t v24 = v23 + 24;
        a3[1] = v23 + 24;
      }

      a3[1] = v24;
    }

    unint64_t v26 = (sqlite3_stmt *)sub_100019240(v20);
    sqlite3_reset(v26);
    if (v20) {
      (*(void (**)(uint64_t))(*(void *)v20 + 8LL))(v20);
    }
    uint64_t v35 = (uint64_t)v11;
    *(uint64_t *)((char *)&v35 + *(v11 - 3)) = v30;
    *(void *)&v37[6] = v31;
    if (v39 < 0) {
      operator delete(__p);
    }
    ++v10;
    std::streambuf::~streambuf(&v37[14]);
    std::ios::~ios(&v40);
  }

  unint64_t v27 = (sqlite3_stmt *)sub_100019240(v9);
  sqlite3_reset(v27);
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8LL))(v9);
  }
  *(void *)uint64_t buf = v11;
  *(void *)&buf[*(v11 - 3)] = v30;
  *(void *)&v43[6] = v31;
  if (v45 < 0) {
    operator delete(v44);
  }
  std::streambuf::~streambuf(&v43[14]);
  return std::ios::~ios(&v46);
}

void sub_1003C44F8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20, char a21, char a22, uint64_t a23, void *__p, uint64_t a25, int a26, __int16 a27, char a28, char a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  if (a29 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a63);
  _Unwind_Resume(a1);
}

uint64_t sub_1003C45B4(const char *a1, int a2, int a3)
{
  if (a3) {
    uint64_t v5 = "pragma quick_check;";
  }
  else {
    uint64_t v5 = "pragma integrity_check;";
  }
  sub_1010DDBC0(__p, v5);
  else {
    int v6 = ((a2 - 1) << 20) + 1179650;
  }
  if (a1[23] >= 0) {
    int v7 = a1;
  }
  else {
    int v7 = *(const char **)a1;
  }
  int v18 = sqlite3_open_v2(v7, &ppDb, v6, 0LL);
  if (v18)
  {
    __int16 v8 = 0LL;
    goto LABEL_23;
  }

  if (v20 >= 0) {
    uint64_t v9 = __p;
  }
  else {
    uint64_t v9 = (void **)__p[0];
  }
  int v10 = strlen((const char *)v9);
  int v18 = sqlite3_prepare_v2(ppDb, (const char *)v9, v10, &ppStmt, &v17);
  if (v18 || (int v18 = sqlite3_step(ppStmt), v18 != 100))
  {
    __int16 v8 = 0LL;
  }

  else
  {
    int v11 = sqlite3_column_text(ppStmt, 0);
    __int16 v8 = v11;
    if (v11)
    {
      BOOL v12 = strcmp((const char *)v11, "ok") == 0;
      goto LABEL_21;
    }
  }

  BOOL v12 = 0;
LABEL_21:
  sqlite3_finalize(ppStmt);
  if (v12)
  {
    uint64_t v13 = 1LL;
    goto LABEL_30;
  }

void sub_1003C4804( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003C482C(id a1)
{
  off_101934A28 = os_log_create("com.apple.locationd.Utility", "Database");
}

void sub_1003C4858(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

void sub_1003C4884(id a1)
{
  qword_101934988 = (uint64_t)os_log_create("com.apple.locationd.Core", "Core");
}

uint64_t sub_1003C48B0(uint64_t *a1, char **a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_100007008();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x555555555555555LL) {
    unint64_t v9 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v5;
  }
  size_t v17 = a1 + 2;
  if (v9) {
    int v10 = (char *)sub_10000701C(v7, v9);
  }
  else {
    int v10 = 0LL;
  }
  uint64_t v13 = v10;
  __int16 v14 = &v10[24 * v4];
  uint64_t v15 = v14;
  int v16 = &v10[24 * v9];
  sub_1010DDBC0(v14, *a2);
  uint64_t v15 = v14 + 24;
  sub_100013F10(a1, &v13);
  uint64_t v11 = a1[1];
  sub_100014098((uint64_t)&v13);
  return v11;
}

void sub_1003C49A0(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

BOOL sub_1003C49B4()
{
  return os_signpost_enabled(*(os_log_t *)(v0 + 2600));
}

void sub_1003C5C74(id a1, void *a2)
{
}

uint64_t sub_1003C5C7C(id *a1)
{
  v4[0] = [a1[14] airplaneMode];
  int v3 = 8;
  return (*((uint64_t (**)(id *, int *, unsigned __int8 *, uint64_t, uint64_t, void))*a1 + 19))( a1,  &v3,  v4,  1LL,  0xFFFFFFFFLL,  0LL);
}

void sub_1003C5D90(id a1)
{
  qword_101995620 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLDaemonStatusSilo");
}

uint64_t sub_1003C5E44(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1003C674C;
  block[3] = &unk_10181A288;
  block[4] = a1;
  if (qword_101995630 != -1) {
    dispatch_once(&qword_101995630, block);
  }
  return qword_1019A0F90;
}

uint64_t sub_1003C618C(uint64_t a1)
{
  if (qword_101934A40 != -1) {
    dispatch_once(&qword_101934A40, &stru_101835F08);
  }
  uint64_t v2 = (os_log_s *)qword_101934A48;
  if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "Notifying clients that CLClientManager has completed its migration steps.",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A40 != -1) {
      dispatch_once(&qword_101934A40, &stru_101835F08);
    }
    v5[0] = 0;
    unint64_t v4 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A48,  0LL,  "Notifying clients that CLClientManager has completed its migration steps.",  v5,  2);
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLDaemonStatus::migrationPerformed()", "%s\n", v4);
  }

  *(_DWORD *)uint64_t buf = 9;
  return (*(uint64_t (**)(uint64_t, uint8_t *, void, uint64_t))(*(void *)a1 + 144LL))( a1,  buf,  0LL,  0xFFFFFFFFLL);
}

uint64_t sub_1003C638C(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  if (qword_101934A40 != -1) {
    dispatch_once(&qword_101934A40, &stru_101835F08);
  }
  unint64_t v8 = (os_log_s *)qword_101934A48;
  if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_INFO))
  {
    unint64_t v9 = "remove";
    uint64_t v14 = 68289794LL;
    int v16 = "";
    __int16 v15 = 2082;
    if (a2) {
      unint64_t v9 = "add";
    }
    __int16 v17 = 2050;
    uint64_t v18 = a3;
    __int16 v19 = 2082;
    uint64_t v20 = a4;
    __int16 v21 = 2082;
    unint64_t v22 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Updating keep-alive client registration, client:%{public}lu, debugMessage:%{publi c, location:escape_only}s, registrationType:%{public, location:escape_only}s}",  (uint8_t *)&v14,  0x30u);
  }

  if (a2)
  {
    if (!*(_BYTE *)(a1 + 248))
    {
      uint64_t v14 = a3;
      sub_1003CF0F0((uint64_t **)(a1 + 216), &v14, &v14);
LABEL_14:
      uint64_t v10 = 1LL;
      goto LABEL_16;
    }
  }

  else if (*(void *)(a1 + 232))
  {
    uint64_t v14 = a3;
    sub_1003CF1A8(a1 + 216, &v14);
    if (*(_BYTE *)(a1 + 248) && !*(void *)(a1 + 232)) {
      IOAllowPowerChange(*(_DWORD *)(a1 + 124), *(void *)(a1 + 272));
    }
    goto LABEL_14;
  }

  uint64_t v10 = 0LL;
LABEL_16:
  uint64_t v11 = *(void **)(a1 + 240);
  if (*(void *)(a1 + 232))
  {
    if (!v11)
    {
      BOOL v12 = -[CLOSTransaction initWithDescription:]( objc_alloc(&OBJC_CLASS___CLOSTransaction),  "initWithDescription:",  "CLDaemonStatus.keepalive");
LABEL_21:
      *(void *)(a1 + 24sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v12;
    }
  }

  else if (v11)
  {

    BOOL v12 = 0LL;
    goto LABEL_21;
  }

  return v10;
}

uint64_t sub_1003C6568(uint64_t a1)
{
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101835F48);
  }
  uint64_t v2 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "MetricHeartbeat, notify", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101835F48);
    }
    v5[0] = 0;
    unint64_t v4 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "MetricHeartbeat, notify",  v5,  2);
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLDaemonStatus::notifyMetricHeartbeat()", "%s\n", v4);
  }

  *(_DWORD *)uint64_t buf = 16;
  return (*(uint64_t (**)(uint64_t, uint8_t *, void, uint64_t))(*(void *)a1 + 144LL))( a1,  buf,  0LL,  0xFFFFFFFFLL);
}

uint64_t sub_1003C674C(uint64_t a1)
{
  uint64_t v2 = operator new(0x140uLL);
  uint64_t result = sub_1003C6798((uint64_t)v2, *(void **)(a1 + 32));
  qword_1019A0F90 = (uint64_t)v2;
  return result;
}

void sub_1003C6784(_Unwind_Exception *a1)
{
}

uint64_t sub_1003C6798(uint64_t a1, void *a2)
{
  *(void *)sub_1003C7650(a1, "CLDaemonStatus", a2) = off_101835D68;
  id v3 = -[CLDaemonStatusStateTracker initInSilo:withIdentifier:]( objc_alloc(&OBJC_CLASS___CLDaemonStatusStateTracker),  "initInSilo:withIdentifier:",  *(void *)(a1 + 40),  a1);
  *(_OWORD *)(a1 + sub_1011C52D0(v9 - 120) = 0u;
  *(void *)(a1 + 112) = v3;
  *(void *)(a1 + 192) = 0LL;
  *(_DWORD *)(a1 + 20sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0;
  *(void *)(a1 + 2sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 0LL;
  *(void *)(a1 + 20_Block_object_dispose((const void *)(v30 - 184), 8) = 0LL;
  *(void *)(a1 + 216) = a1 + 224;
  *(void *)(a1 + 232) = 0LL;
  *(void *)(a1 + 24sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0LL;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 16_Block_object_dispose((const void *)(v30 - 184), 8) = 0u;
  *(_BYTE *)(a1 + 184) = 0;
  *(_BYTE *)(a1 + 24_Block_object_dispose((const void *)(v30 - 184), 8) = 0;
  *(void *)(a1 + 296) = 0LL;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 2sub_1011C52D0(v16 - 72) = 0u;
  *(void *)(a1 + 304) = 0LL;
  *(_BYTE *)(a1 + 312) = 0;
  [v3 setThermalLevel:0xFFFFFFFFLL];
  [*(id *)(a1 + 112) setThermalPressure:0xFFFFFFFFLL];
  io_connect_t v4 = IORegisterForSystemPower( (void *)a1,  (IONotificationPortRef *)(a1 + 128),  (IOServiceInterestCallback)sub_1003C76EC,  (io_object_t *)(a1 + 120));
  *(_DWORD *)(a1 + 1sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v4;
  if (v4)
  {
    RunLoopSource = IONotificationPortCreate(kIOMainPortDefault);
    *(void *)(a1 + 144) = RunLoopSource;
    if (RunLoopSource) {
      RunLoopSource = IONotificationPortGetRunLoopSource(RunLoopSource);
    }
    *(void *)(a1 + 152) = RunLoopSource;
    CFRunLoopSourceRef v6 = IONotificationPortGetRunLoopSource(*(IONotificationPortRef *)(a1 + 128));
    *(void *)(a1 + 136) = v6;
    if (v6)
    {
      uint64_t v7 = (__CFRunLoop *)sub_10029228C();
      CFRunLoopAddSource(v7, *(CFRunLoopSourceRef *)(a1 + 136), kCFRunLoopDefaultMode);
    }
  }

  sockaddr address = (sockaddr)xmmword_1012E7E80;
  unint64_t v8 = SCNetworkReachabilityCreateWithAddress(kCFAllocatorDefault, &address);
  *(void *)(a1 + 16sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v8;
  if (!v8)
  {
    if (qword_101934A40 != -1) {
      dispatch_once(&qword_101934A40, &stru_101835F08);
    }
    __int16 v29 = (os_log_s *)qword_101934A48;
    if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_FAULT,  "could not create network reachability",  buf,  2u);
    }

    if (!sub_1002921D0(115, 0)) {
      return a1;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934A40 != -1) {
      dispatch_once(&qword_101934A40, &stru_101835F08);
    }
    LOWORD(context.version) = 0;
    uint64_t v30 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A48,  17LL,  "could not create network reachability",  &context,  2);
    sub_10029211C("Generic", 1LL, 0, 0LL, "CLDaemonStatus::CLDaemonStatus(id<CLIntersiloUniverse>)", "%s\n", v30);
LABEL_80:
    if (v30 != buf) {
      free(v30);
    }
    return a1;
  }

  context.version = 0LL;
  context.info = (void *)a1;
  memset(&context.retain, 0, 24);
  if (!SCNetworkReachabilitySetCallback(v8, (SCNetworkReachabilityCallBack)sub_1003C7904, &context))
  {
    if (qword_101934A40 != -1) {
      dispatch_once(&qword_101934A40, &stru_101835F08);
    }
    __int16 v31 = (os_log_s *)qword_101934A48;
    if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_FAULT,  "could not set client callback for network reachability",  buf,  2u);
    }

    if (!sub_1002921D0(115, 0)) {
      return a1;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934A40 != -1) {
      dispatch_once(&qword_101934A40, &stru_101835F08);
    }
    LOWORD(v39.version) = 0;
    uint64_t v30 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A48,  17LL,  "could not set client callback for network reachability",  &v39,  2);
    sub_10029211C("Generic", 1LL, 0, 0LL, "CLDaemonStatus::CLDaemonStatus(id<CLIntersiloUniverse>)", "%s\n", v30);
    goto LABEL_80;
  }

  unint64_t v9 = *(const __SCNetworkReachability **)(a1 + 160);
  uint64_t v10 = (__CFRunLoop *)sub_10029228C();
  if (SCNetworkReachabilityScheduleWithRunLoop(v9, v10, kCFRunLoopCommonModes))
  {
    if (SCNetworkReachabilityGetFlags(*(SCNetworkReachabilityRef *)(a1 + 160), &flags))
    {
      if ((flags & 0x40000) != 0) {
        int v11 = 1;
      }
      else {
        int v11 = 2;
      }
      sub_1003C7B10(a1, v11 & ((int)(flags << 30) >> 31));
      *(void *)uint64_t buf = 0LL;
      *(_WORD *)&uint8_t buf[8] = 0;
      *(_DWORD *)&uint8_t buf[4] = [*(id *)(a1 + 112) reachability];
      *(_WORD *)&uint8_t buf[8] = 0;
      LODWORD(v39.version) = 6;
      (*(void (**)(uint64_t, SCDynamicStoreContext *, _BYTE *, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  &v39,  buf,  1LL,  0xFFFFFFFFLL,  0LL);
    }

    v39.version = 0LL;
    v39.info = (void *)a1;
    memset(&v39.retain, 0, 24);
    BOOL v12 = SCDynamicStoreCreate( kCFAllocatorDefault,  @"com.apple.locationd",  (SCDynamicStoreCallBack)sub_1003C7B70,  &v39);
    *(void *)(a1 + 16_Block_object_dispose((const void *)(v30 - 184), 8) = v12;
    *(void *)(a1 + 176) = SCDynamicStoreCreateRunLoopSource(kCFAllocatorDefault, v12, 0LL);
    sub_1003C7D7C((SCDynamicStoreRef *)a1);
    uint64_t v13 = CFArrayCreate(kCFAllocatorDefault, (const void **)&off_101835E38, 1LL, &kCFTypeArrayCallBacks);
    SCDynamicStoreSetNotificationKeys(*(SCDynamicStoreRef *)(a1 + 168), v13, 0LL);
    uint64_t v14 = (__CFRunLoop *)sub_10029228C();
    CFRunLoopAddSource(v14, *(CFRunLoopSourceRef *)(a1 + 176), kCFRunLoopDefaultMode);
    CFRelease(v13);
    if (notify_register_check("com.apple.springboard.hasBlankedScreen", (int *)(a1 + 288)))
    {
      if (qword_101934A40 != -1) {
        dispatch_once(&qword_101934A40, &stru_101835F08);
      }
      __int16 v15 = (os_log_s *)qword_101934A48;
      if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)uint64_t buf = 136315138;
        *(void *)&uint8_t buf[4] = "com.apple.springboard.hasBlankedScreen";
        _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_FAULT,  "Could not register for notification %s",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A40 != -1) {
          dispatch_once(&qword_101934A40, &stru_101835F08);
        }
        int v42 = 136315138;
        unint64_t v43 = "com.apple.springboard.hasBlankedScreen";
        uint64_t v34 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A48,  17LL,  "Could not register for notification %s",  (const char *)&v42);
        sub_10029211C("Generic", 1LL, 0, 0LL, "CLDaemonStatus::CLDaemonStatus(id<CLIntersiloUniverse>)", "%s\n", v34);
        if (v34 != buf) {
          free(v34);
        }
      }
    }

    if (notify_register_check("com.apple.springboard.lockstate", (int *)(a1 + 292)))
    {
      if (qword_101934A40 != -1) {
        dispatch_once(&qword_101934A40, &stru_101835F08);
      }
      int v16 = (os_log_s *)qword_101934A48;
      if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)uint64_t buf = 136315138;
        *(void *)&uint8_t buf[4] = "com.apple.springboard.lockstate";
        _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_FAULT,  "Could not register for notification %s",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A40 != -1) {
          dispatch_once(&qword_101934A40, &stru_101835F08);
        }
        int v42 = 136315138;
        unint64_t v43 = "com.apple.springboard.lockstate";
        uint64_t v35 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A48,  17LL,  "Could not register for notification %s",  (const char *)&v42);
        sub_10029211C("Generic", 1LL, 0, 0LL, "CLDaemonStatus::CLDaemonStatus(id<CLIntersiloUniverse>)", "%s\n", v35);
        if (v35 != buf) {
          free(v35);
        }
      }
    }

    if (notify_register_check("com.apple.system.lowpowermode", (int *)(a1 + 296)))
    {
      if (qword_101934A40 != -1) {
        dispatch_once(&qword_101934A40, &stru_101835F08);
      }
      __int16 v17 = (os_log_s *)qword_101934A48;
      if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)uint64_t buf = 136315138;
        *(void *)&uint8_t buf[4] = "com.apple.system.lowpowermode";
        _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_FAULT,  "Could not register for notification %s",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A40 != -1) {
          dispatch_once(&qword_101934A40, &stru_101835F08);
        }
        int v42 = 136315138;
        unint64_t v43 = "com.apple.system.lowpowermode";
        __int16 v36 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A48,  17LL,  "Could not register for notification %s",  (const char *)&v42);
        sub_10029211C("Generic", 1LL, 0, 0LL, "CLDaemonStatus::CLDaemonStatus(id<CLIntersiloUniverse>)", "%s\n", v36);
        if (v36 != buf) {
          free(v36);
        }
      }
    }

    if (notify_register_check("com.apple.system.thermalpressurelevel", (int *)(a1 + 300)))
    {
      if (qword_101934A40 != -1) {
        dispatch_once(&qword_101934A40, &stru_101835F08);
      }
      uint64_t v18 = (os_log_s *)qword_101934A48;
      if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)uint64_t buf = 136446210;
        *(void *)&uint8_t buf[4] = "com.apple.system.thermalpressurelevel";
        _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_ERROR,  "Could not register for notification %{public}s",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A40 != -1) {
          dispatch_once(&qword_101934A40, &stru_101835F08);
        }
        int v42 = 136446210;
        unint64_t v43 = "com.apple.system.thermalpressurelevel";
        uint64_t v37 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A48,  16LL,  "Could not register for notification %{public}s",  &v42,  12);
        sub_10029211C("Generic", 1LL, 0, 0LL, "CLDaemonStatus::CLDaemonStatus(id<CLIntersiloUniverse>)", "%s\n", v37);
        if (v37 != buf) {
          free(v37);
        }
      }
    }

    DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
    CFNotificationCenterAddObserver( DarwinNotifyCenter,  (const void *)a1,  (CFNotificationCallback)sub_1003C8148,  @"com.apple.springboard.hasBlankedScreen",  0LL,  CFNotificationSuspensionBehaviorDeliverImmediately);
    uint64_t v20 = CFNotificationCenterGetDarwinNotifyCenter();
    CFNotificationCenterAddObserver( v20,  (const void *)a1,  (CFNotificationCallback)sub_1003C8368,  @"com.apple.springboard.lockstate",  0LL,  CFNotificationSuspensionBehaviorDeliverImmediately);
    __int16 v21 = CFNotificationCenterGetDarwinNotifyCenter();
    CFNotificationCenterAddObserver( v21,  (const void *)a1,  (CFNotificationCallback)sub_1003C8588,  @"com.apple.system.lowpowermode",  0LL,  CFNotificationSuspensionBehaviorDeliverImmediately);
    unint64_t v22 = CFStringCreateWithCStringNoCopy(0LL, kOSThermalNotificationName, 0x8000100u, kCFAllocatorNull);
    __int16 v23 = CFNotificationCenterGetDarwinNotifyCenter();
    CFNotificationCenterAddObserver( v23,  (const void *)a1,  (CFNotificationCallback)sub_1003C87A8,  v22,  0LL,  CFNotificationSuspensionBehaviorDeliverImmediately);
    uint64_t v24 = CFNotificationCenterGetDarwinNotifyCenter();
    CFNotificationCenterAddObserver( v24,  (const void *)a1,  (CFNotificationCallback)sub_1003C89C8,  @"com.apple.system.thermalpressurelevel",  0LL,  CFNotificationSuspensionBehaviorDeliverImmediately);
    CFNotificationCenterGetDarwinNotifyCenter();
    sub_1003C8BE8((int *)a1);
    CFNotificationCenterGetDarwinNotifyCenter();
    sub_1003C8EF8((int *)a1);
    CFNotificationCenterGetDarwinNotifyCenter();
    sub_1003C9208(a1);
    CFNotificationCenterGetDarwinNotifyCenter();
    sub_1003C93F0((id *)a1);
    CFNotificationCenterGetDarwinNotifyCenter();
    sub_1003C9468(a1);
    CFRelease(v22);
    __int16 v25 = objc_alloc_init(&OBJC_CLASS___NSAutoreleasePool);
    *(void *)(a1 + 20_Block_object_dispose((const void *)(v30 - 184), 8) = objc_alloc_init(&OBJC_CLASS___RadiosPreferences);
    [*(id *)(a1 + 208) setDelegate:objc_alloc_init(CLDaemonStatusInternal)];
    objc_msgSend(*(id *)(a1 + 112), "setAirplaneMode:", objc_msgSend(*(id *)(a1 + 208), "airplaneMode"));
    -[NSAutoreleasePool drain](v25, "drain");
    sub_1003C9648((void *)a1);
    sub_1003C9B08(a1, v26, 2);
    sub_1003C9B78((_BYTE *)a1);
    xpc_object_t v27 = xpc_dictionary_create(0LL, 0LL, 0LL);
    xpc_dictionary_set_int64(v27, XPC_ACTIVITY_INTERVAL, 14400LL);
    xpc_dictionary_set_int64(v27, XPC_ACTIVITY_GRACE_PERIOD, 1800LL);
    xpc_dictionary_set_string(v27, XPC_ACTIVITY_PRIORITY, XPC_ACTIVITY_PRIORITY_MAINTENANCE);
    xpc_dictionary_set_BOOL(v27, XPC_ACTIVITY_ALLOW_BATTERY, 1);
    id v28 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "vendor"), "proxyForService:", @"CLDaemonStatus");
    handler[0] = _NSConcreteStackBlock;
    handler[1] = 3221225472LL;
    handler[2] = sub_1003C9D84;
    handler[3] = &unk_101831AF8;
    handler[4] = v28;
    xpc_activity_register("com.apple.locationd.MetricHeartbeat", v27, handler);
    xpc_release(v27);
    return a1;
  }

  if (qword_101934A40 != -1) {
    dispatch_once(&qword_101934A40, &stru_101835F08);
  }
  unint64_t v32 = (os_log_s *)qword_101934A48;
  if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_FAULT))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_FAULT,  "could not schedule network reachability on run loop",  buf,  2u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A40 != -1) {
      dispatch_once(&qword_101934A40, &stru_101835F08);
    }
    LOWORD(v39.version) = 0;
    uint64_t v30 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A48,  17LL,  "could not schedule network reachability on run loop",  &v39,  2);
    sub_10029211C("Generic", 1LL, 0, 0LL, "CLDaemonStatus::CLDaemonStatus(id<CLIntersiloUniverse>)", "%s\n", v30);
    goto LABEL_80;
  }

  return a1;
}

void sub_1003C75E0(_Unwind_Exception *a1)
{
}

uint64_t sub_1003C7650(uint64_t a1, char *a2, void *a3)
{
  *(void *)a1 = off_101835F78;
  sub_1010DDBC0((void *)(a1 + 8), a2);
  *(void *)(a1 + 32) = a3;
  *(void *)(a1 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = [a3 silo];
  *(void *)(a1 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = 0LL;
  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + 56) = a1 + 64;
  *(void *)(a1 + sub_1011C52D0(v16 - 88) = 0LL;
  *(void *)(a1 + 96) = 0LL;
  *(void *)(a1 + sub_1011C52D0(v16 - 72) = 0LL;
  *(void *)(a1 + 8sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = a1 + 88;
  *(_DWORD *)(a1 + 104) = 0;
  *(_BYTE *)(a1 + 10_Block_object_dispose((const void *)(v30 - 184), 8) = 0;
  return a1;
}

void sub_1003C76D0(_Unwind_Exception *exception_object)
{
}

void sub_1003C76EC(uint64_t a1, int a2, int a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101835EE8);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v15 = 1;
    unint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLDaemonStatus::onPowerNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101835EE8);
    }
    unint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v17 = 0;
      __int16 v18 = 2082;
      __int16 v19 = "";
      __int16 v20 = 2082;
      __int16 v21 = "activity";
      __int16 v22 = 2050;
      uint64_t v23 = a1;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLDaemonStatus::onPowerNotification, event:%{public, location:escape_only}s, this :%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v15 = 0;
  }

  id v10 = [*(id *)(a1 + 32) silo];
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472LL;
  _DWORD v11[2] = sub_1003CE658;
  v11[3] = &unk_101830558;
  int v12 = a2;
  int v13 = a3;
  v11[4] = a1;
  v11[5] = a4;
  [v10 sync:v11];
  if (v15) {
    os_activity_scope_leave(&state);
  }
}

void sub_1003C78E4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, os_activity_scope_state_s state, char a17)
{
  if (a17) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003C7904(uint64_t a1, int a2, uint64_t a3)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101835EE8);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v12 = 1;
    CFRunLoopSourceRef v6 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLDaemonStatus::onNetworkReachabilityNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v6, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101835EE8);
    }
    uint64_t v7 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v14 = 0;
      __int16 v15 = 2082;
      int v16 = "";
      __int16 v17 = 2082;
      __int16 v18 = "activity";
      __int16 v19 = 2050;
      uint64_t v20 = a3;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLDaemonStatus::onNetworkReachabilityNotification, event:%{public, location:escape_ only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v12 = 0;
  }

  id v8 = [*(id *)(a3 + 32) silo];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  v9[2] = sub_1003CE694;
  v9[3] = &unk_101835F28;
  v9[4] = a3;
  v9[5] = a1;
  int v10 = a2;
  [v8 sync:v9];
  if (v12) {
    os_activity_scope_leave(&state);
  }
}

void sub_1003C7AF0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, os_activity_scope_state_s state, char a17)
{
  if (a17) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

id sub_1003C7B10(uint64_t a1, uint64_t a2)
{
  id result = [*(id *)(a1 + 112) reachability];
  if ((_DWORD)result != (_DWORD)a2)
  {
    [*(id *)(a1 + 112) setReachability:a2];
    return _objc_msgSend( objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "vendor"),  "proxyForService:",  @"CLNetworkLocationProvider"),  "setCurrentReachability:",  a2);
  }

  return result;
}

void sub_1003C7B70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101835EE8);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    CFRunLoopSourceRef v6 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLDaemonStatus::onDynamicStore",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v6, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101835EE8);
    }
    uint64_t v7 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      __int16 v15 = "";
      __int16 v16 = 2082;
      __int16 v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a3;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLDaemonStatus::onDynamicStore, event:%{public, location:escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  id v8 = [*(id *)(a3 + 32) silo];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  v9[2] = sub_1003CE6A4;
  v9[3] = &unk_101830558;
  v9[4] = a3;
  v9[5] = a1;
  void v9[6] = a2;
  [v8 sync:v9];
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1003C7D5C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, os_activity_scope_state_s state, char a17)
{
  if (a17) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003C7D7C(SCDynamicStoreRef *a1)
{
  uint64_t v2 = (const __CFDictionary *)SCDynamicStoreCopyValue(a1[21], @"com.apple.MobileInternetSharing");
  if (v2)
  {
    id v3 = v2;
    Value = (const __CFDictionary *)CFDictionaryGetValue(v2, @"Hosts");
    if (Value)
    {
      unint64_t v5 = (const __CFDictionary *)CFDictionaryGetValue(Value, @"Type");
      if (v5)
      {
        CFRunLoopSourceRef v6 = (const __CFNumber *)CFDictionaryGetValue(v5, @"AirPort");
        if (v6)
        {
          valuePtr[0] = 0;
          if (CFNumberGetValue(v6, kCFNumberIntType, valuePtr))
          {
            LODWORD(v12[0]) = 12;
            (*((void (**)(SCDynamicStoreRef *, void *, uint8_t *, uint64_t, uint64_t, void))*a1 + 19))( a1,  v12,  valuePtr,  1LL,  0xFFFFFFFFLL,  0LL);
          }

void sub_1003C8148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101835EE8);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v15 = 1;
    int v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLDaemonStatus::onDisplayNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101835EE8);
    }
    char v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v17 = 0;
      __int16 v18 = 2082;
      uint64_t v19 = "";
      __int16 v20 = 2082;
      __int16 v21 = "activity";
      __int16 v22 = 2050;
      uint64_t v23 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLDaemonStatus::onDisplayNotification, event:%{public, location:escape_only}s, th is:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v15 = 0;
  }

  id v12 = [*(id *)(a2 + 32) silo];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  void v13[2] = sub_1003CE6AC;
  v13[3] = &unk_10182D1B8;
  void v13[4] = a2;
  v13[5] = a1;
  v13[6] = a3;
  v13[7] = a4;
  v13[8] = a5;
  [v12 sync:v13];
  if (v15) {
    os_activity_scope_leave(&state);
  }
}

void sub_1003C8348( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, os_activity_scope_state_s state, char a19)
{
  if (a19) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003C8368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101835EE8);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v15 = 1;
    int v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLDaemonStatus::onLockNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101835EE8);
    }
    char v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v17 = 0;
      __int16 v18 = 2082;
      uint64_t v19 = "";
      __int16 v20 = 2082;
      __int16 v21 = "activity";
      __int16 v22 = 2050;
      uint64_t v23 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLDaemonStatus::onLockNotification, event:%{public, location:escape_only}s, this :%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v15 = 0;
  }

  id v12 = [*(id *)(a2 + 32) silo];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  void v13[2] = sub_1003CE6B4;
  v13[3] = &unk_10182D1B8;
  void v13[4] = a2;
  v13[5] = a1;
  v13[6] = a3;
  v13[7] = a4;
  v13[8] = a5;
  [v12 sync:v13];
  if (v15) {
    os_activity_scope_leave(&state);
  }
}

void sub_1003C8568( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, os_activity_scope_state_s state, char a19)
{
  if (a19) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003C8588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101835EE8);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v15 = 1;
    int v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLDaemonStatus::onBatterySaverModeNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101835EE8);
    }
    char v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v17 = 0;
      __int16 v18 = 2082;
      uint64_t v19 = "";
      __int16 v20 = 2082;
      __int16 v21 = "activity";
      __int16 v22 = 2050;
      uint64_t v23 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLDaemonStatus::onBatterySaverModeNotification, event:%{public, location:escape_onl y}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v15 = 0;
  }

  id v12 = [*(id *)(a2 + 32) silo];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  void v13[2] = sub_1003CE6BC;
  v13[3] = &unk_10182D1B8;
  void v13[4] = a2;
  v13[5] = a1;
  v13[6] = a3;
  v13[7] = a4;
  v13[8] = a5;
  [v12 sync:v13];
  if (v15) {
    os_activity_scope_leave(&state);
  }
}

void sub_1003C8788( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, os_activity_scope_state_s state, char a19)
{
  if (a19) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003C87A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101835EE8);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v15 = 1;
    int v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLDaemonStatus::onThermalNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101835EE8);
    }
    char v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v17 = 0;
      __int16 v18 = 2082;
      uint64_t v19 = "";
      __int16 v20 = 2082;
      __int16 v21 = "activity";
      __int16 v22 = 2050;
      uint64_t v23 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLDaemonStatus::onThermalNotification, event:%{public, location:escape_only}s, th is:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v15 = 0;
  }

  id v12 = [*(id *)(a2 + 32) silo];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  void v13[2] = sub_1003CE6C4;
  v13[3] = &unk_10182D1B8;
  void v13[4] = a2;
  v13[5] = a1;
  v13[6] = a3;
  v13[7] = a4;
  v13[8] = a5;
  [v12 sync:v13];
  if (v15) {
    os_activity_scope_leave(&state);
  }
}

void sub_1003C89A8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, os_activity_scope_state_s state, char a19)
{
  if (a19) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003C89C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101835EE8);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v15 = 1;
    int v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLDaemonStatus::onThermalPressureNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101835EE8);
    }
    char v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v17 = 0;
      __int16 v18 = 2082;
      uint64_t v19 = "";
      __int16 v20 = 2082;
      __int16 v21 = "activity";
      __int16 v22 = 2050;
      uint64_t v23 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLDaemonStatus::onThermalPressureNotification, event:%{public, location:escape_only }s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v15 = 0;
  }

  id v12 = [*(id *)(a2 + 32) silo];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  void v13[2] = sub_1003CE6CC;
  v13[3] = &unk_10182D1B8;
  void v13[4] = a2;
  v13[5] = a1;
  v13[6] = a3;
  v13[7] = a4;
  v13[8] = a5;
  [v12 sync:v13];
  if (v15) {
    os_activity_scope_leave(&state);
  }
}

void sub_1003C8BC8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, os_activity_scope_state_s state, char a19)
{
  if (a19) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003C8BE8(int *a1)
{
  if (notify_get_state(a1[72], &state64))
  {
    if (qword_101934A40 != -1) {
      dispatch_once(&qword_101934A40, &stru_101835F08);
    }
    uint64_t v2 = (os_log_s *)qword_101934A48;
    if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_FAULT,  "Could not get state for com.apple.springboard.hasBlankedScreen",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A40 != -1) {
        dispatch_once(&qword_101934A40, &stru_101835F08);
      }
      *(_WORD *)unint64_t v5 = 0;
      id v3 = (uint8_t *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A48,  17LL,  "Could not get state for com.apple.springboard.hasBlankedScreen",  v5,  2);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLDaemonStatus::onDisplayNotification(CFNotificationCenterRef, CFStringRef, const void *, CFDictionaryRef)",  "%s\n");
LABEL_19:
      if (v3 != buf) {
        free(v3);
      }
    }
  }

  else
  {
    v5[0] = state64 == 0;
    *(_DWORD *)uint64_t buf = 10;
    (*(void (**)(int *, uint8_t *, unsigned __int8 *, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  buf,  v5,  1LL,  0xFFFFFFFFLL,  0LL);
    if (qword_101934A40 != -1) {
      dispatch_once(&qword_101934A40, &stru_101835F08);
    }
    io_connect_t v4 = (os_log_s *)qword_101934A48;
    if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 67109120;
      int v9 = v5[0];
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "display is %d", buf, 8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A40 != -1) {
        dispatch_once(&qword_101934A40, &stru_101835F08);
      }
      v7[0] = 67109120;
      v7[1] = v5[0];
      id v3 = (uint8_t *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A48,  2LL,  "display is %d",  v7);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLDaemonStatus::onDisplayNotification(CFNotificationCenterRef, CFStringRef, const void *, CFDictionaryRef)",  "%s\n");
      goto LABEL_19;
    }
  }

void sub_1003C8EF8(int *a1)
{
  if (notify_get_state(a1[73], &state64))
  {
    if (qword_101934A40 != -1) {
      dispatch_once(&qword_101934A40, &stru_101835F08);
    }
    uint64_t v2 = (os_log_s *)qword_101934A48;
    if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_FAULT,  "Could not get state for com.apple.springboard.lockstate",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A40 != -1) {
        dispatch_once(&qword_101934A40, &stru_101835F08);
      }
      *(_WORD *)unint64_t v5 = 0;
      id v3 = (uint8_t *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A48,  17LL,  "Could not get state for com.apple.springboard.lockstate",  v5,  2);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLDaemonStatus::onLockNotification(CFNotificationCenterRef, CFStringRef, const void *, CFDictionaryRef)",  "%s\n");
LABEL_19:
      if (v3 != buf) {
        free(v3);
      }
    }
  }

  else
  {
    v5[0] = state64 != 0;
    *(_DWORD *)uint64_t buf = 11;
    (*(void (**)(int *, uint8_t *, unsigned __int8 *, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  buf,  v5,  1LL,  0xFFFFFFFFLL,  0LL);
    if (qword_101934A40 != -1) {
      dispatch_once(&qword_101934A40, &stru_101835F08);
    }
    io_connect_t v4 = (os_log_s *)qword_101934A48;
    if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 67109120;
      int v9 = v5[0];
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "lock screen is %d", buf, 8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A40 != -1) {
        dispatch_once(&qword_101934A40, &stru_101835F08);
      }
      v7[0] = 67109120;
      v7[1] = v5[0];
      id v3 = (uint8_t *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A48,  2LL,  "lock screen is %d",  v7);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLDaemonStatus::onLockNotification(CFNotificationCenterRef, CFStringRef, const void *, CFDictionaryRef)",  "%s\n");
      goto LABEL_19;
    }
  }

void sub_1003C9208(uint64_t a1)
{
  uint64_t state64 = 0LL;
  if (notify_get_state(*(_DWORD *)(a1 + 296), &state64))
  {
    if (qword_101934A40 != -1) {
      dispatch_once(&qword_101934A40, &stru_101835F08);
    }
    uint64_t v2 = (os_log_s *)qword_101934A48;
    if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_FAULT,  "Could not get state for com.apple.system.lowpowermode",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A40 != -1) {
        dispatch_once(&qword_101934A40, &stru_101835F08);
      }
      LOWORD(v4) = 0;
      id v3 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A48,  17LL,  "Could not get state for com.apple.system.lowpowermode",  &v4,  2);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLDaemonStatus::onBatterySaverModeNotification(CFNotificationCenterRef, CFStringRef, const void *, CFDictionaryRef)",  "%s\n",  v3);
    }
  }

  else
  {
    [*(id *)(a1 + 112) setBatterySaverModeEnabled:state64 != 0];
    buf[0] = [*(id *)(a1 + 112) batterySaverModeEnabled];
    int v4 = 15;
    (*(void (**)(uint64_t, int *, uint8_t *, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  &v4,  buf,  1LL,  0xFFFFFFFFLL,  0LL);
  }

id sub_1003C93F0(id *a1)
{
  v4[0] = OSThermalNotificationCurrentLevel();
  id result = [a1[14] thermalLevel];
  if ((_DWORD)result != v4[0])
  {
    int v3 = 13;
    (*((void (**)(id *, int *, _DWORD *, uint64_t, uint64_t, void))*a1 + 19))( a1,  &v3,  v4,  1LL,  0xFFFFFFFFLL,  0LL);
    return [a1[14] setThermalLevel:v4[0]];
  }

  return result;
}

void sub_1003C9468(uint64_t a1)
{
  uint64_t state64 = 0LL;
  if (notify_get_state(*(_DWORD *)(a1 + 300), &state64))
  {
    if (qword_101934A40 != -1) {
      dispatch_once(&qword_101934A40, &stru_101835F08);
    }
    uint64_t v2 = (os_log_s *)qword_101934A48;
    if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_ERROR,  "Could not get state for thermal pressure",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A40 != -1) {
        dispatch_once(&qword_101934A40, &stru_101835F08);
      }
      LOWORD(v4) = 0;
      int v3 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A48,  16LL,  "Could not get state for thermal pressure",  &v4,  2);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLDaemonStatus::onThermalPressureNotification(CFNotificationCenterRef, CFStringRef, const void *, CFDictionaryRef)",  "%s\n",  v3);
    }
  }

  else
  {
    [*(id *)(a1 + 112) setThermalPressure:state64];
    *(_DWORD *)uint64_t buf = [*(id *)(a1 + 112) thermalPressure];
    int v4 = 18;
    (*(void (**)(uint64_t, int *, uint8_t *, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  &v4,  buf,  1LL,  0xFFFFFFFFLL,  0LL);
  }

void sub_1003C9648(void *a1)
{
  if (qword_101934A40 != -1) {
    dispatch_once(&qword_101934A40, &stru_101835F08);
  }
  uint64_t v2 = (os_log_s *)qword_101934A48;
  if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "registering for restricted mode notification",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A40 != -1) {
      dispatch_once(&qword_101934A40, &stru_101835F08);
    }
    LOWORD(context.version) = 0;
    int v10 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A48,  2LL,  "registering for restricted mode notification",  &context,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLDaemonStatus::registerForRestrictedPowerModeNotifications()",  "%s\n",  v10);
  }

  int v3 = SCPreferencesCreate( kCFAllocatorDefault,  @"com.apple.registerForAirplaneModeNotifications",  @"com.apple.radios.plist");
  a1[38] = v3;
  if (v3)
  {
    context.version = 0LL;
    memset(&context.retain, 0, 24);
    context.info = a1;
    if (SCPreferencesSetCallback(v3, (SCPreferencesCallBack)sub_1003CC678, &context))
    {
      int v4 = (const __SCPreferences *)a1[38];
      unint64_t v5 = (__CFRunLoop *)sub_10029228C();
      if (!SCPreferencesScheduleWithRunLoop(v4, v5, kCFRunLoopDefaultMode))
      {
        if (qword_101934A40 != -1) {
          dispatch_once(&qword_101934A40, &stru_101835F08);
        }
        CFRunLoopSourceRef v6 = (os_log_s *)qword_101934A48;
        if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_FAULT))
        {
          *(_WORD *)uint64_t buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Failed to schedule SCPreferences notification",  buf,  2u);
        }

        if (sub_1002921D0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934A40 != -1) {
            dispatch_once(&qword_101934A40, &stru_101835F08);
          }
          LOWORD(v13[0]) = 0;
          LODWORD(v12) = 2;
          uint64_t v7 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A48,  17LL,  "Failed to schedule SCPreferences notification",  v13,  v12,  v13[0]);
LABEL_38:
          char v11 = (uint8_t *)v7;
          sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLDaemonStatus::registerForRestrictedPowerModeNotifications()",  "%s\n",  v7);
          if (v11 != buf) {
            free(v11);
          }
        }
      }
    }

    else
    {
      if (qword_101934A40 != -1) {
        dispatch_once(&qword_101934A40, &stru_101835F08);
      }
      int v9 = (os_log_s *)qword_101934A48;
      if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_FAULT,  "Failed to set SCPreferences callback",  buf,  2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A40 != -1) {
          dispatch_once(&qword_101934A40, &stru_101835F08);
        }
        LOWORD(v13[0]) = 0;
        LODWORD(v12) = 2;
        uint64_t v7 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A48,  17LL,  "Failed to set SCPreferences callback",  v13,  v12,  v13[0]);
        goto LABEL_38;
      }
    }
  }

  else
  {
    if (qword_101934A40 != -1) {
      dispatch_once(&qword_101934A40, &stru_101835F08);
    }
    id v8 = (os_log_s *)qword_101934A48;
    if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_FAULT, "Failed to create SCPreferences", buf, 2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A40 != -1) {
        dispatch_once(&qword_101934A40, &stru_101835F08);
      }
      LOWORD(context.version) = 0;
      LODWORD(v12) = 2;
      uint64_t v7 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A48,  17LL,  "Failed to create SCPreferences",  &context,  v12,  v13[0]);
      goto LABEL_38;
    }
  }

uint64_t sub_1003C9B08(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 2) != 0)
  {
    int v3 = (id *)result;
    [*(id *)(result + 112) setRestrictedMode:sub_1003CC60C(result)];
    v5[0] = [v3[14] restrictedMode];
    int v4 = 14;
    return (*((uint64_t (**)(id *, int *, unsigned __int8 *, uint64_t, uint64_t, void))*v3 + 19))( v3,  &v4,  v5,  1LL,  0xFFFFFFFFLL,  0LL);
  }

  return result;
}

uint64_t sub_1003C9B78(_BYTE *a1)
{
  BOOL v10 = 0;
  uint64_t v2 = sub_1002F8DDC();
  else {
    BOOL v3 = 0;
  }
  if (v3)
  {
    if (qword_101934A40 != -1) {
      dispatch_once(&qword_101934A40, &stru_101835F08);
    }
    int v4 = (os_log_s *)qword_101934A48;
    if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_ERROR,  "locationd was started after an unclean shutdown",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A40 != -1) {
        dispatch_once(&qword_101934A40, &stru_101835F08);
      }
      v9[0] = 0;
      id v8 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A48,  16LL,  "locationd was started after an unclean shutdown",  v9,  2);
      sub_10029211C("Generic", 1LL, 0, 0LL, "void CLDaemonStatus::isStartFromUncleanShutdown()", "%s\n", v8);
    }

    a1[312] = 1;
    *(_DWORD *)uint64_t buf = 17;
    (*(void (**)(_BYTE *, uint8_t *, uint64_t, uint64_t))(*(void *)a1 + 144LL))(a1, buf, 1LL, 0xFFFFFFFFLL);
  }

  uint64_t v5 = sub_1002F8DDC();
  buf[0] = 0;
  sub_1002AB3FC(v5, off_101937B88, buf);
  uint64_t v6 = sub_1002F8DDC();
  return (*(uint64_t (**)(uint64_t))(*(void *)v6 + 944LL))(v6);
}

id sub_1003C9D84(uint64_t a1, xpc_activity_t activity)
{
  id result = (id)xpc_activity_get_state(activity);
  if (result == (id)2)
  {
    if (!xpc_activity_set_state(activity, 5LL))
    {
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101835F48);
      }
      uint64_t v5 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)uint64_t buf = 134349056;
        xpc_activity_state_t state = xpc_activity_get_state(activity);
        _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_FAULT,  "failed to set MetricHeartbeat activity as DONE.  current state is %{public}ld",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101835F48);
        }
        uint64_t v6 = qword_101934858;
        int v8 = 134349056;
        xpc_activity_state_t v9 = xpc_activity_get_state(activity);
        uint64_t v7 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v6,  17LL,  "failed to set MetricHeartbeat activity as DONE.  current state is %{public}ld",  &v8,  12);
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "CLDaemonStatus::CLDaemonStatus(id<CLIntersiloUniverse>)_block_invoke",  "%s\n",  v7);
      }
    }

    return [*(id *)(a1 + 32) triggerMetricHeartbeatNotification];
  }

  return result;
}

uint64_t sub_1003C9F6C(uint64_t a1)
{
  *(void *)a1 = off_101835F78;
  [*(id *)(a1 + 48) invalidate];

  sub_100231CA4(a1 + 80, *(void **)(a1 + 88));
  sub_100231CF0(a1 + 56, *(void **)(a1 + 64));
  return a1;
}

uint64_t sub_1003C9FE0(uint64_t a1)
{
  *(void *)a1 = off_101835D68;
  [*(id *)(a1 + 264) invalidate];

  *(void *)(a1 + 264) = 0LL;
  *(void *)(a1 + 24sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0LL;

  *(void *)(a1 + 256) = 0LL;
  if (*(void *)(a1 + 152))
  {
    uint64_t v2 = (__CFRunLoop *)sub_10029228C();
    CFRunLoopRemoveSource(v2, *(CFRunLoopSourceRef *)(a1 + 152), kCFRunLoopDefaultMode);
    CFRunLoopSourceInvalidate(*(CFRunLoopSourceRef *)(a1 + 152));
    CFRelease(*(CFTypeRef *)(a1 + 152));
  }

  BOOL v3 = *(IONotificationPort **)(a1 + 144);
  if (v3) {
    IONotificationPortDestroy(v3);
  }
  if (*(void *)(a1 + 136))
  {
    int v4 = (__CFRunLoop *)sub_10029228C();
    CFRunLoopRemoveSource(v4, *(CFRunLoopSourceRef *)(a1 + 136), kCFRunLoopDefaultMode);
    CFRunLoopSourceInvalidate(*(CFRunLoopSourceRef *)(a1 + 136));
    CFRelease(*(CFTypeRef *)(a1 + 136));
  }

  if (*(_DWORD *)(a1 + 120)) {
    IODeregisterForSystemPower((io_object_t *)(a1 + 120));
  }
  uint64_t v5 = *(IONotificationPort **)(a1 + 128);
  if (v5)
  {
    IONotificationPortDestroy(v5);
    *(void *)(a1 + 12_Block_object_dispose((const void *)(v30 - 184), 8) = 0LL;
  }

  io_connect_t v6 = *(_DWORD *)(a1 + 124);
  if (v6) {
    IOServiceClose(v6);
  }
  uint64_t v7 = *(const __SCNetworkReachability **)(a1 + 160);
  if (v7)
  {
    int v8 = (__CFRunLoop *)sub_10029228C();
    if (SCNetworkReachabilityUnscheduleFromRunLoop(v7, v8, kCFRunLoopCommonModes))
    {
      CFRelease(*(CFTypeRef *)(a1 + 160));
      *(void *)(a1 + 16sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0LL;
    }
  }

  if (*(void *)(a1 + 176))
  {
    xpc_activity_state_t v9 = (__CFRunLoop *)sub_10029228C();
    CFRunLoopRemoveSource(v9, *(CFRunLoopSourceRef *)(a1 + 176), kCFRunLoopDefaultMode);
    CFRunLoopSourceInvalidate(*(CFRunLoopSourceRef *)(a1 + 176));
    CFRelease(*(CFTypeRef *)(a1 + 176));
  }

  BOOL v10 = *(const void **)(a1 + 168);
  if (v10) {
    CFRelease(v10);
  }
  char v11 = *(void **)(a1 + 208);
  if (v11)
  {
    id v12 = [v11 delegate];
    [*(id *)(a1 + 208) setDelegate:0];
  }

  sub_1003CA198(a1);
  DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterRemoveEveryObserver(DarwinNotifyCenter, (const void *)a1);
  sub_1003CA37C(a1);

  *(void *)(a1 + 112) = 0LL;
  sub_100008390(a1 + 216, *(void **)(a1 + 224));
  return sub_1003C9F6C(a1);
}

void sub_1003CA198(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 184))
  {
    if (qword_101934A40 != -1) {
      dispatch_once(&qword_101934A40, &stru_101835F08);
    }
    uint64_t v2 = (os_log_s *)qword_101934A48;
    if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "unregistering for battery status changed",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A40 != -1) {
        dispatch_once(&qword_101934A40, &stru_101835F08);
      }
      v9[0] = 0;
      int v8 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A48,  2LL,  "unregistering for battery status changed",  v9,  2);
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLDaemonStatus::unregisterForBatteryStatusChanges()", "%s\n", v8);
    }

    io_object_t v3 = *(_DWORD *)(a1 + 200);
    if (v3)
    {
      IOObjectRelease(v3);
      *(_DWORD *)(a1 + 20sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0;
    }

    int v4 = *(IONotificationPort **)(a1 + 192);
    if (v4)
    {
      CFRunLoopSourceRef RunLoopSource = IONotificationPortGetRunLoopSource(v4);
      if (RunLoopSource)
      {
        io_connect_t v6 = RunLoopSource;
        uint64_t v7 = (__CFRunLoop *)sub_10029228C();
        CFRunLoopRemoveSource(v7, v6, kCFRunLoopDefaultMode);
      }

      IONotificationPortDestroy(*(IONotificationPortRef *)(a1 + 192));
      *(void *)(a1 + 192) = 0LL;
    }

    *(_BYTE *)(a1 + 184) = 0;
  }

void sub_1003CA37C(uint64_t a1)
{
  uint64_t v1 = *(const __SCPreferences **)(a1 + 304);
  if (v1)
  {
    io_object_t v3 = (__CFRunLoop *)sub_10029228C();
    SCPreferencesUnscheduleFromRunLoop(v1, v3, kCFRunLoopDefaultMode);
    CFRelease(*(CFTypeRef *)(a1 + 304));
    *(void *)(a1 + 304) = 0LL;
  }

void sub_1003CA3CC(uint64_t a1)
{
  uint64_t v1 = (void *)sub_1003C9FE0(a1);
  operator delete(v1);
}

void *sub_1003CA3E0@<X0>(_DWORD *a1@<X1>, void *a2@<X8>)
{
  return sub_1010DDBC0(a2, __str);
}

uint64_t sub_1003CA458(_BYTE *a1, int *a2)
{
  int v2 = *a2;
  if (*a2 > 18)
  {
    if (v2 == 20)
    {
      io_object_t v3 = *(void (**)(void))(*(void *)a1 + 144LL);
      goto LABEL_11;
    }

    if (v2 == 19)
    {
      io_object_t v3 = *(void (**)(void))(*(void *)a1 + 144LL);
      goto LABEL_11;
    }
  }

  else if (v2 == 7)
  {
    sub_1003CA504((uint64_t)a1);
  }

  else if (v2 == 17 && a1[312])
  {
    io_object_t v3 = *(void (**)(void))(*(void *)a1 + 144LL);
LABEL_11:
    v3();
  }

  return 1LL;
}

void sub_1003CA504(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 184))
  {
    if (sub_1004F2740())
    {
      if (qword_101934A40 != -1) {
        dispatch_once(&qword_101934A40, &stru_101835F08);
      }
      int v2 = (os_log_s *)qword_101934A48;
      if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "registering for battery status changed",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A40 != -1) {
          dispatch_once(&qword_101934A40, &stru_101835F08);
        }
        v12[0] = 0;
        char v11 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A48,  2LL,  "registering for battery status changed",  v12,  2);
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CLDaemonStatus::registerForBatteryStatusChanges()", "%s\n", v11);
      }

      *(_DWORD *)uint64_t buf = 0;
      io_object_t v3 = IONotificationPortCreate(kIOMainPortDefault);
      *(void *)(a1 + 192) = v3;
      if (v3)
      {
        CFRunLoopSourceRef RunLoopSource = IONotificationPortGetRunLoopSource(v3);
        if (RunLoopSource)
        {
          uint64_t v5 = RunLoopSource;
          io_connect_t v6 = (__CFRunLoop *)sub_10029228C();
          CFRunLoopAddSource(v6, v5, kCFRunLoopDefaultMode);
          uint64_t v7 = *(IONotificationPort **)(a1 + 192);
          int v8 = IOServiceMatching("IOPMPowerSource");
          if (!IOServiceAddMatchingNotification( v7,  "IOServiceFirstMatch",  v8,  (IOServiceMatchingCallback)sub_1003CC404,  (void *)a1,  (io_iterator_t *)buf)) {
            sub_1003CC154(a1, *(io_iterator_t *)buf);
          }
          IOObjectRelease(*(io_object_t *)buf);
        }

        else
        {
          IONotificationPortDestroy(*(IONotificationPortRef *)(a1 + 192));
          *(void *)(a1 + 192) = 0LL;
        }
      }

      *(_BYTE *)(a1 + 184) = 1;
    }

    else
    {
      if (qword_101934A40 != -1) {
        dispatch_once(&qword_101934A40, &stru_101835F08);
      }
      xpc_activity_state_t v9 = (os_log_s *)qword_101934A48;
      if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_INFO,  "Attempting to register for battery status changes on a battery-less device, no-op",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A40 != -1) {
          dispatch_once(&qword_101934A40, &stru_101835F08);
        }
        v12[0] = 0;
        BOOL v10 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A48,  1LL,  "Attempting to register for battery status changes on a battery-less device, no-op",  v12,  2);
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CLDaemonStatus::registerForBatteryStatusChanges()", "%s\n", v10);
      }
    }
  }

uint64_t sub_1003CA86C(uint64_t a1, _DWORD *a2)
{
  if (*a2 == 20)
  {
    int v2 = *(void (**)(void))(*(void *)a1 + 144LL);
    goto LABEL_5;
  }

  if (*a2 == 19)
  {
    int v2 = *(void (**)(void))(*(void *)a1 + 144LL);
LABEL_5:
    v2();
  }

  return 1LL;
}

void sub_1003CA8D8(uint64_t a1, uint64_t a2, unsigned int a3, intptr_t a4)
{
  if (qword_101934A40 != -1) {
    dispatch_once(&qword_101934A40, &stru_101835F08);
  }
  uint64_t v7 = (os_log_s *)qword_101934A48;
  if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 232);
    *(_DWORD *)uint64_t buf = 68289538;
    int v34 = 0;
    __int16 v35 = 2082;
    __int16 v36 = "";
    __int16 v37 = 2050;
    uint64_t v38 = a3;
    __int16 v39 = 2050;
    uint64_t v40 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:received IOKit notification, sleepNotification:%{public, location:IOMessage}lld, ke epAliveClientCount:%{public}lu}",  buf,  0x26u);
  }

  HIDWORD(v9) = a3;
  LODWORD(v9) = a3 + 536870288;
  switch((v9 >> 4))
  {
    case 0u:
      if (qword_101934A40 != -1) {
        dispatch_once(&qword_101934A40, &stru_101835F08);
      }
      BOOL v10 = (os_log_s *)qword_101934A48;
      if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "system can sleep request", buf, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A40 != -1) {
          dispatch_once(&qword_101934A40, &stru_101835F08);
        }
        v32[0] = 0;
        char v11 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A48,  2LL,  "system can sleep request",  v32,  2);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLDaemonStatus::onPowerNotification(io_service_t, natural_t, void *)",  "%s\n",  v11);
      }

      goto LABEL_35;
    case 1u:
      if (qword_101934A40 != -1) {
        dispatch_once(&qword_101934A40, &stru_101835F08);
      }
      id v12 = (os_log_s *)qword_101934A48;
      if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "system entering sleep", buf, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A40 != -1) {
          dispatch_once(&qword_101934A40, &stru_101835F08);
        }
        v32[0] = 0;
        uint64_t v23 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A48,  2LL,  "system entering sleep",  v32,  2);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLDaemonStatus::onPowerNotification(io_service_t, natural_t, void *)",  "%s\n",  v23);
      }

      *(_DWORD *)uint64_t buf = 2;
      (*(void (**)(uint64_t, uint8_t *, void, uint64_t))(*(void *)a1 + 144LL))(a1, buf, 0LL, 0xFFFFFFFFLL);
      *(_BYTE *)(a1 + 24_Block_object_dispose((const void *)(v30 - 184), 8) = 1;
      if (*(void *)(a1 + 264))
      {
        if (qword_101934A40 != -1) {
          dispatch_once(&qword_101934A40, &stru_101835F08);
        }
        int v13 = (os_log_s *)qword_101934A48;
        if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)uint64_t buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "Sleep transaction grace timer still pending on will sleep",  buf,  2u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934A40 != -1) {
            dispatch_once(&qword_101934A40, &stru_101835F08);
          }
          v32[0] = 0;
          LODWORD(v3sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 2;
          uint64_t v26 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A48,  2LL,  "Sleep transaction grace timer still pending on will sleep",  v32,  v30);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLDaemonStatus::onPowerNotification(io_service_t, natural_t, void *)",  "%s\n",  v26);
        }

        [*(id *)(a1 + 264) invalidate];

        *(void *)(a1 + 264) = 0LL;
      }

      __int16 v14 = -[CLOSTransaction initWithDescription:]( objc_alloc(&OBJC_CLASS___CLOSTransaction),  "initWithDescription:",  "CLDaemonStatus.sleeping");
      if (*(void *)(a1 + 256))
      {
        if (qword_101934A40 != -1) {
          dispatch_once(&qword_101934A40, &stru_101835F08);
        }
        char v15 = (os_log_s *)qword_101934A48;
        if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)uint64_t buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "Already holding sleep state transaction on will sleep",  buf,  2u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934A40 != -1) {
            dispatch_once(&qword_101934A40, &stru_101835F08);
          }
          v32[0] = 0;
          LODWORD(v3sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 2;
          xpc_object_t v27 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A48,  2LL,  "Already holding sleep state transaction on will sleep",  v32,  v30);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLDaemonStatus::onPowerNotification(io_service_t, natural_t, void *)",  "%s\n",  v27);
        }
      }

      *(void *)(a1 + 256) = v14;
      *(void *)(a1 + 2sub_1011C52D0(v16 - 72) = a4;
      if (!*(void *)(a1 + 232)) {
LABEL_35:
      }
        IOAllowPowerChange(*(_DWORD *)(a1 + 124), a4);
      return;
    case 2u:
      goto LABEL_53;
    case 9u:
      if (qword_101934A40 != -1) {
        dispatch_once(&qword_101934A40, &stru_101835F08);
      }
      __int16 v16 = (os_log_s *)qword_101934A48;
      if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEBUG, "system has powered on", buf, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A40 != -1) {
          dispatch_once(&qword_101934A40, &stru_101835F08);
        }
        v32[0] = 0;
        uint64_t v24 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A48,  2LL,  "system has powered on",  v32,  2);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLDaemonStatus::onPowerNotification(io_service_t, natural_t, void *)",  "%s\n",  v24);
      }

      if (!*(void *)(a1 + 256))
      {
        if (qword_101934A40 != -1) {
          dispatch_once(&qword_101934A40, &stru_101835F08);
        }
        int v17 = (os_log_s *)qword_101934A48;
        if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)uint64_t buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "#warning No sleep state tranaction on has powered on",  buf,  2u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934A40 != -1) {
            dispatch_once(&qword_101934A40, &stru_101835F08);
          }
          v32[0] = 0;
          LODWORD(v3sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 2;
          id v28 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A48,  0LL,  "#warning No sleep state tranaction on has powered on",  v32,  v30);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLDaemonStatus::onPowerNotification(io_service_t, natural_t, void *)",  "%s\n",  v28);
        }
      }

      id v18 = [*(id *)(a1 + 40) newTimer];
      *(void *)(a1 + 264) = v18;
      v31[0] = _NSConcreteStackBlock;
      v31[1] = 3221225472LL;
      void v31[2] = sub_1003CB5F8;
      v31[3] = &unk_10181D3D0;
      v31[4] = a1;
      [v18 setHandler:v31];
      [*(id *)(a1 + 264) setNextFireDelay:5.0];
      return;
    case 0xBu:
      *(CFAbsoluteTime *)(a1 + 28sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = CFAbsoluteTimeGetCurrent();
      if (qword_101934A40 != -1) {
        dispatch_once(&qword_101934A40, &stru_101835F08);
      }
      uint64_t v19 = (os_log_s *)qword_101934A48;
      if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEBUG, "system will power on", buf, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A40 != -1) {
          dispatch_once(&qword_101934A40, &stru_101835F08);
        }
        v32[0] = 0;
        __int16 v25 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A48,  2LL,  "system will power on",  v32,  2);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLDaemonStatus::onPowerNotification(io_service_t, natural_t, void *)",  "%s\n",  v25);
      }

void sub_1003CB5F8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);

  *(void *)(v1 + 256) = 0LL;
}

void sub_1003CB620(uint64_t a1, uint64_t a2, int a3)
{
  double v5 = CFAbsoluteTimeGetCurrent() - *(double *)(a1 + 280);
  unsigned int v6 = [*(id *)(a1 + 112) reachability];
  unsigned int v7 = v6;
  int v8 = a3 << 30;
  if ((a3 & 0x40000) != 0) {
    int v9 = 1;
  }
  else {
    int v9 = 2;
  }
  uint64_t v10 = v9 & (v8 >> 31);
  v14[0] = v6;
  v14[1] = v9 & (v8 >> 31);
  int v11 = *(unsigned __int8 *)(a1 + 248);
  char v15 = *(_BYTE *)(a1 + 248);
  BOOL v12 = v5 >= 0.0;
  if (v5 >= 3.0) {
    BOOL v12 = 0;
  }
  BOOL v16 = v12;
  sub_1003C7B10(a1, v10);
  if (qword_101934A40 != -1) {
    dispatch_once(&qword_101934A40, &stru_101835F08);
  }
  int v13 = (os_log_s *)qword_101934A48;
  if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68290050;
    __int16 v19 = 2082;
    int v18 = 0;
    __int16 v20 = "";
    __int16 v21 = 1026;
    int v22 = v11;
    __int16 v23 = 2050;
    uint64_t v24 = v10;
    __int16 v25 = 1026;
    int v26 = a3;
    __int16 v27 = 2050;
    double v28 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:reachability information, aboutToSleep:%{public}hhd, reachability:%{public, locat ion:CLDaemonStatus_Type::Reachability}lld, reachabilityFlags:%{public}d, timeSinceWake_s:%{public}.09f}",  buf,  0x32u);
  }

  if (v7 != (_DWORD)v10)
  {
    *(_DWORD *)uint64_t buf = 6;
    (*(void (**)(uint64_t, uint8_t *, _DWORD *, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  buf,  v14,  1LL,  0xFFFFFFFFLL,  0LL);
  }

uint64_t sub_1003CB7CC(int a1)
{
  BOOL v2 = sub_1004FC57C();
  if (a1 == 4 && v2) {
    return 1LL;
  }
  LODWORD(result) = sub_1004FC5C4();
  if (a1 == 3) {
    return result;
  }
  else {
    return 0LL;
  }
}

void sub_1003CB80C(void *a1, io_registry_entry_t entry)
{
  uint64_t v43 = 0LL;
  *((void *)&v42 + 1) = 0LL;
  int v4 = (id)IORegistryEntryCreateCFProperty(entry, @"CurrentCapacity", kCFAllocatorDefault, 0);
  double v5 = (id)IORegistryEntryCreateCFProperty(entry, @"MaxCapacity", kCFAllocatorDefault, 0);
  if (v4) {
    BOOL v6 = v5 == 0LL;
  }
  else {
    BOOL v6 = 1;
  }
  if (v6)
  {
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101835EC8);
    }
    unsigned int v7 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "cannot find current or maximum capacity",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101835EC8);
      }
      __int16 v41 = 0;
      int v8 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934988,  17LL,  "cannot find current or maximum capacity",  &v41,  2);
      goto LABEL_32;
    }
  }

  else
  {
    unsigned int v9 = [v5 intValue];
    int v10 = [v4 intValue];
    int v11 = v10;
    if (v9) {
      int v12 = v9;
    }
    else {
      int v12 = 100;
    }
    double v13 = fmin((float)v10 * 100.0 / (float)v12, 100.0);
    if (v13 >= 0.0) {
      double v14 = v13;
    }
    else {
      double v14 = 0.0;
    }
    *(double *)&__int128 v42 = v14;
    char v15 = (id)IORegistryEntryCreateCFProperty( entry,  @"ExternalConnected",  kCFAllocatorDefault,  0);
    if (v15)
    {
      unsigned int v16 = [v15 BOOLValue];
      BYTE9(v42) = v16;
      HIDWORD(v42) = 0;
      int v17 = (id)IORegistryEntryCreateCFProperty(entry, @"AdapterDetails", kCFAllocatorDefault, 0);
      int v18 = (__CFString *)[v17 objectForKeyedSubscript:@"Description"];
      if (v18)
      {
        __int16 v19 = v18;
        if ((-[__CFString hasPrefix:](v18, "hasPrefix:", @"batt") & 1) != 0)
        {
          int v20 = 1;
        }

        else if ((-[__CFString hasPrefix:](v19, "hasPrefix:", @"usb") & 1) != 0)
        {
          int v20 = 2;
        }

        else if ((-[__CFString hasPrefix:](v19, "hasPrefix:", @"external") & 1) != 0)
        {
          int v20 = 3;
        }

        else
        {
          if (!-[__CFString hasSuffix:](v19, "hasSuffix:", @"arcas"))
          {
            HIDWORD(v3_Block_object_dispose((const void *)(v30 - 184), 8) = 0;
            goto LABEL_42;
          }

          int v20 = 4;
        }

        HIDWORD(v3_Block_object_dispose((const void *)(v30 - 184), 8) = v20;
        HIDWORD(v42) = v20;
      }

      else
      {
        HIDWORD(v3_Block_object_dispose((const void *)(v30 - 184), 8) = 0;
        __int16 v19 = @"none";
      }

uint64_t sub_1003CC154(uint64_t a1, io_iterator_t iterator)
{
  uint64_t result = IOIteratorNext(iterator);
  if ((_DWORD)result)
  {
    io_registry_entry_t v5 = result;
    do
    {
      if (!IOServiceAddInterestNotification( *(IONotificationPortRef *)(a1 + 192),  v5,  "IOGeneralInterest",  (IOServiceInterestCallback)sub_1003CC1EC,  (void *)a1,  (io_object_t *)(a1 + 200))) {
        sub_1003CB80C((void *)a1, v5);
      }
      IOObjectRelease(v5);
      uint64_t result = IOIteratorNext(iterator);
      io_registry_entry_t v5 = result;
    }

    while ((_DWORD)result);
  }

  return result;
}

void sub_1003CC1EC(uint64_t a1, int a2, int a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101835EE8);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v15 = 1;
    int v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLDaemonStatus::onBatteryStatusChanged",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101835EE8);
    }
    unsigned int v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v17 = 0;
      __int16 v18 = 2082;
      __int16 v19 = "";
      __int16 v20 = 2082;
      __int16 v21 = "activity";
      __int16 v22 = 2050;
      uint64_t v23 = a1;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLDaemonStatus::onBatteryStatusChanged, event:%{public, location:escape_only}s, t his:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v15 = 0;
  }

  id v10 = [*(id *)(a1 + 32) silo];
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472LL;
  _DWORD v11[2] = sub_1003CE700;
  v11[3] = &unk_101830558;
  int v12 = a2;
  int v13 = a3;
  v11[4] = a1;
  v11[5] = a4;
  [v10 sync:v11];
  if (v15) {
    os_activity_scope_leave(&state);
  }
}

void sub_1003CC3E4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, os_activity_scope_state_s state, char a17)
{
  if (a17) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003CC404(uint64_t a1, int a2)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101835EE8);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v10 = 1;
    int v4 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLDaemonStatus::onMatchedBatteries",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v4, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101835EE8);
    }
    io_registry_entry_t v5 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v12 = 0;
      __int16 v13 = 2082;
      double v14 = "";
      __int16 v15 = 2082;
      unsigned int v16 = "activity";
      __int16 v17 = 2050;
      uint64_t v18 = a1;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLDaemonStatus::onMatchedBatteries, event:%{public, location:escape_only}s, this :%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v10 = 0;
  }

  id v6 = [*(id *)(a1 + 32) silo];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  _DWORD v7[2] = sub_1003CE724;
  v7[3] = &unk_10182B540;
  _DWORD v7[4] = a1;
  int v8 = a2;
  [v6 sync:v7];
  if (v10) {
    os_activity_scope_leave(&state);
  }
}

void sub_1003CC5EC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, os_activity_scope_state_s state, char a17)
{
  if (a17) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

const __SCPreferences *sub_1003CC60C(uint64_t a1)
{
  uint64_t result = *(const __SCPreferences **)(a1 + 304);
  if (result)
  {
    SCPreferencesSynchronize(result);
    uint64_t result = (const __SCPreferences *)SCPreferencesGetValue(*(SCPreferencesRef *)(a1 + 304), @"LowPowerMode");
    if (result)
    {
      io_object_t v3 = result;
      CFTypeID v4 = CFGetTypeID(result);
      if (v4 == CFBooleanGetTypeID()) {
        return (const __SCPreferences *)(CFBooleanGetValue(v3) != 0);
      }
      else {
        return 0LL;
      }
    }
  }

  return result;
}

void sub_1003CC678(uint64_t a1, int a2, uint64_t a3)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101835EE8);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v12 = 1;
    id v6 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLDaemonStatus::onRestrictedPowerMode",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v6, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101835EE8);
    }
    unsigned int v7 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v14 = 0;
      __int16 v15 = 2082;
      unsigned int v16 = "";
      __int16 v17 = 2082;
      uint64_t v18 = "activity";
      __int16 v19 = 2050;
      uint64_t v20 = a3;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLDaemonStatus::onRestrictedPowerMode, event:%{public, location:escape_only}s, th is:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v12 = 0;
  }

  id v8 = [*(id *)(a3 + 32) silo];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  v9[2] = sub_1003CE734;
  v9[3] = &unk_101835F28;
  v9[4] = a3;
  v9[5] = a1;
  int v10 = a2;
  [v8 sync:v9];
  if (v12) {
    os_activity_scope_leave(&state);
  }
}

void sub_1003CC864( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, os_activity_scope_state_s state, char a17)
{
  if (a17) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003CC884(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  id v8 = operator new(0x30uLL);
  sub_1010DDBC0(__p, "CLDaemonStatus");
  sub_1003CCA18((uint64_t)v8, 0LL, (uint64_t *)__p, a3, a1, a2);
  *id v8 = off_101835E50;
  *a4 = v8;
  if (v10 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1003CC920( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete(v15);
  _Unwind_Resume(a1);
}

void sub_1003CC94C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, void *a5@<X8>)
{
  char v10 = operator new(0x30uLL);
  sub_1010DDBC0(__p, "CLDaemonStatus");
  sub_1003CCA18((uint64_t)v10, a1, (uint64_t *)__p, a4, a2, a3);
  *char v10 = off_101835E50;
  *a5 = v10;
  if (v12 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1003CC9EC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_1003CCA18(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4, uint64_t a5, uint64_t a6)
{
  *(void *)a1 = &off_1018360C8;
  *(void *)(a1 + _Block_object_dispose((const void *)(v30 - 184), 8) = -[CLNotifierClientAdapter initWithClient:]( objc_alloc(&OBJC_CLASS___CLNotifierClientAdapter),  "initWithClient:",  a1);
  *(void *)(a1 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = a5;
  *(void *)(a1 + 32) = a6;
  else {
    char v12 = (uint64_t *)*a3;
  }
  id v13 = objc_msgSend( objc_msgSend(a4, "vendor"),  "proxyForService:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v12));
  *(void *)(a1 + 16) = v13;
  id v14 = v13;
  if (a2) {
    [*(id *)(a1 + 16) setDelegateEntityName:a2];
  }
  objc_msgSend(*(id *)(a1 + 16), "registerDelegate:inSilo:", *(void *)(a1 + 8), objc_msgSend(a4, "silo"));
  return a1;
}

void sub_1003CCAEC(uint64_t a1, uint64_t a2)
{
  HIDWORD(v14) = a2;
  if (!*(_BYTE *)(a1 + 108))
  {
    uint64_t v4 = *(void *)(a1 + 88);
    if (!v4) {
      goto LABEL_12;
    }
    uint64_t v5 = a1 + 80;
    uint64_t v6 = a1 + 88;
    do
    {
      int v7 = *(_DWORD *)(v4 + 32);
      BOOL v8 = v7 < (int)a2;
      else {
        unsigned int v9 = (uint64_t *)(v4 + 8);
      }
      if (!v8) {
        uint64_t v6 = v4;
      }
      uint64_t v4 = *v9;
    }

    while (*v9);
    if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= (int)a2)
    {
      while (*(void *)(v6 + 56))
      {
        *(_DWORD *)uint64_t buf = *(_DWORD *)(*(void *)(v6 + 40) + 28LL);
        (*(void (**)(uint64_t, uint64_t, uint8_t *))(*(void *)a1 + 112LL))(a1, a2, buf);
      }

      sub_100233254(v5, (int *)&v14 + 1);
    }

    else
    {
LABEL_12:
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101835EE8);
      }
      char v10 = (os_log_s *)qword_1019349D8;
      if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
      {
        int v11 = (void *)(a1 + 8);
        *(_DWORD *)uint64_t buf = 136446466;
        uint64_t v20 = v11;
        __int16 v21 = 1026;
        int v22 = a2;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
          buf,
          0x12u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_101835EE8);
        }
        char v12 = (void *)(a1 + 8);
        int v15 = 136446466;
        unsigned int v16 = v12;
        __int16 v17 = 1026;
        int v18 = a2;
        LODWORD(v14) = 18;
        id v13 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
                        &v15,
                        v14);
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLNotifier<CLDaemonStatus_Type::Notification, CLDaemonStatus_Type::NotificationData, char, char>: :removeClient(int) [Notification_T = CLDaemonStatus_Type::Notification, NotificationData_T = CLDaemonStatus_Ty pe::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v13);
      }
    }
  }

uint64_t sub_1003CCD60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void *))(*(void *)a1 + 96LL))( a1,  a2,  a3,  &unk_101937CB0);
}

uint64_t sub_1003CCD74(uint64_t a1, int a2, int *a3, char *a4)
{
  int v41 = a2;
  if (*(_BYTE *)(a1 + 108)) {
    return 0LL;
  }
  uint64_t v7 = *(void *)(a1 + 88);
  if (v7)
  {
    uint64_t v10 = a1 + 88;
    do
    {
      int v11 = *(_DWORD *)(v7 + 32);
      BOOL v12 = v11 < a2;
      if (v11 >= a2) {
        id v13 = (uint64_t *)v7;
      }
      else {
        id v13 = (uint64_t *)(v7 + 8);
      }
      if (!v12) {
        uint64_t v10 = v7;
      }
      uint64_t v7 = *v13;
    }

    while (*v13);
    if (v10 != a1 + 88 && *(_DWORD *)(v10 + 32) <= a2)
    {
      *(void *)__int128 v42 = v10;
      int v17 = *a3;
      uint64_t v20 = *(void *)(v10 + 48);
      uint64_t v19 = v10 + 48;
      uint64_t v18 = v20;
      if (!v20) {
        goto LABEL_31;
      }
      uint64_t v21 = v19;
      do
      {
        int v22 = *(_DWORD *)(v18 + 28);
        BOOL v23 = v22 < v17;
        if (v22 >= v17) {
          unsigned int v24 = (uint64_t *)v18;
        }
        else {
          unsigned int v24 = (uint64_t *)(v18 + 8);
        }
        if (!v23) {
          uint64_t v21 = v18;
        }
        uint64_t v18 = *v24;
      }

      while (*v24);
      if (v21 == v19 || v17 < *(_DWORD *)(v21 + 28)) {
LABEL_31:
      }
        uint64_t v21 = v19;
      uint64_t v25 = *(void *)(a1 + 64);
      if (!v25) {
        goto LABEL_42;
      }
      uint64_t v26 = a1 + 64;
      do
      {
        int v27 = *(_DWORD *)(v25 + 32);
        BOOL v28 = v27 < v17;
        if (v27 >= v17) {
          __int16 v29 = (uint64_t *)v25;
        }
        else {
          __int16 v29 = (uint64_t *)(v25 + 8);
        }
        if (!v28) {
          uint64_t v26 = v25;
        }
        uint64_t v25 = *v29;
      }

      while (*v29);
      if (v26 != a1 + 64 && v17 >= *(_DWORD *)(v26 + 32))
      {
        uint64_t v40 = v26;
        uint64_t v34 = *(void *)(v26 + 56);
        char v35 = *a4;
        *(void *)uint64_t buf = &v41;
        *((_BYTE *)sub_1004EF3D4((uint64_t **)(v26 + 40), &v41, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = v35;
        buf[0] = 0;
        if (v21 == v19
          && (*(unsigned int (**)(uint64_t, int *, _BYTE *))(*(void *)a1 + 128LL))(a1, a3, buf))
        {
          __int16 v36 = sub_1003CF280((uint64_t)buf);
          sub_1003CEBA0((_BYTE *)a1, (uint64_t)v42, (uint64_t)&v40, v36);
        }

        if (v34) {
          goto LABEL_44;
        }
      }

      else
      {
LABEL_42:
        uint64_t v40 = a1 + 64;
        char v30 = byte_101937CB1;
        HIDWORD(v39) = v17;
        *(void *)uint64_t buf = (char *)&v39 + 4;
        *((_BYTE *)sub_10023347C((uint64_t **)(a1 + 56), (int *)&v39 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 8sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v30;
        HIDWORD(v39) = *a3;
        *(void *)uint64_t buf = (char *)&v39 + 4;
        int v31 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v39 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        sub_1000F0D38(v31 + 8);
        char v32 = *a4;
        HIDWORD(v39) = *a3;
        *(void *)uint64_t buf = (char *)&v39 + 4;
        std::stringbuf::string_type v33 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v39 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        *(void *)uint64_t buf = &v41;
        *((_BYTE *)sub_1004EF3D4(v33 + 5, &v41, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = v32;
      }

      (*(void (**)(uint64_t, int *))(*(void *)a1 + 168LL))(a1, a3);
LABEL_44:
      if (v21 == v19)
      {
        *(_DWORD *)uint64_t buf = *a3;
        sub_10004A8FC((uint64_t **)(*(void *)v42 + 40LL), (int *)buf, buf);
      }

      return 1LL;
    }
  }

  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101835EE8);
  }
  uint64_t v14 = (os_log_s *)qword_1019349D8;
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
  {
    int v15 = (void *)(a1 + 8);
    *(_DWORD *)uint64_t buf = 136446466;
    *(void *)&uint8_t buf[4] = v15;
    __int16 v46 = 1026;
    int v47 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
      buf,
      0x12u);
  }

  BOOL v16 = sub_1002921D0(115, 0);
  uint64_t result = 0LL;
  if (v16)
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101835EE8);
    }
    __int16 v37 = (void *)(a1 + 8);
    *(_DWORD *)__int128 v42 = 136446466;
    *(void *)&v42[4] = v37;
    __int16 v43 = 1026;
    int v44 = a2;
    LODWORD(v39) = 18;
    uint64_t v38 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
                    v42,
                    v39);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLDaemonStatus_Type::Notification, CLDaemonStatus_Type::NotificationData, char, char>::reg isterForNotification(int, const Notification_T &, const RegistrationInfo_T &) [Notification_T = CLDaemonStatus_Typ e::Notification, NotificationData_T = CLDaemonStatus_Type::NotificationData, NotificationInfo_T = char, Registrati onInfo_T = char]",  "%s\n",  v38);
    if (v38 != buf) {
      free(v38);
    }
    return 0LL;
  }

  return result;
}

BOOL sub_1003CD1D0(uint64_t a1, int a2, int *a3)
{
  uint64_t v5 = *(void *)(a1 + 88);
  if (!v5) {
    goto LABEL_11;
  }
  uint64_t v6 = a1 + 88;
  do
  {
    int v7 = *(_DWORD *)(v5 + 32);
    BOOL v8 = v7 < a2;
    if (v7 >= a2) {
      unsigned int v9 = (uint64_t *)v5;
    }
    else {
      unsigned int v9 = (uint64_t *)(v5 + 8);
    }
    if (!v8) {
      uint64_t v6 = v5;
    }
    uint64_t v5 = *v9;
  }

  while (*v9);
  if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= a2)
  {
    uint64_t v16 = *(void *)(v6 + 48);
    uint64_t v14 = v6 + 48;
    uint64_t v15 = v16;
    if (!v16) {
      goto LABEL_29;
    }
    int v17 = *a3;
    uint64_t v18 = v14;
    do
    {
      int v19 = *(_DWORD *)(v15 + 28);
      BOOL v20 = v19 < v17;
      if (v19 >= v17) {
        uint64_t v21 = (uint64_t *)v15;
      }
      else {
        uint64_t v21 = (uint64_t *)(v15 + 8);
      }
      if (!v20) {
        uint64_t v18 = v15;
      }
      uint64_t v15 = *v21;
    }

    while (*v21);
    if (v18 == v14 || v17 < *(_DWORD *)(v18 + 28)) {
LABEL_29:
    }
      uint64_t v18 = v14;
    return v18 != v14;
  }

  else
  {
LABEL_11:
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101835EE8);
    }
    uint64_t v10 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
    {
      int v11 = (void *)(a1 + 8);
      *(_DWORD *)uint64_t buf = 136446466;
      __int16 v29 = v11;
      __int16 v30 = 1026;
      int v31 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
        buf,
        0x12u);
    }

    BOOL v12 = sub_1002921D0(115, 0);
    BOOL result = 0LL;
    if (v12)
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101835EE8);
      }
      int v22 = (void *)(a1 + 8);
      int v24 = 136446466;
      uint64_t v25 = v22;
      __int16 v26 = 1026;
      int v27 = a2;
      BOOL v23 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
                      &v24,
                      18);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLDaemonStatus_Type::Notification, CLDaemonStatus_Type::NotificationData, char, char>::c lientRegistered(int, const Notification_T &) [Notification_T = CLDaemonStatus_Type::Notification, NotificationDa ta_T = CLDaemonStatus_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v23);
      return 0LL;
    }
  }

  return result;
}

BOOL sub_1003CD450(char *a1, int a2, int *a3)
{
  HIDWORD(v33) = a2;
  int v3 = a1[108];
  if (!a1[108])
  {
    uint64_t v6 = *((void *)a1 + 11);
    if (v6)
    {
      BOOL v8 = a1 + 88;
      do
      {
        int v9 = *(_DWORD *)(v6 + 32);
        BOOL v10 = v9 < a2;
        if (v9 >= a2) {
          int v11 = (uint64_t *)v6;
        }
        else {
          int v11 = (uint64_t *)(v6 + 8);
        }
        if (!v10) {
          BOOL v8 = (char *)v6;
        }
        uint64_t v6 = *v11;
      }

      while (*v11);
      if (v8 != a1 + 88 && *((_DWORD *)v8 + 8) <= a2)
      {
        uint64_t v14 = (char *)*((void *)v8 + 6);
        BOOL v12 = v8 + 48;
        id v13 = v14;
        if (v14)
        {
          int v15 = *a3;
          uint64_t v16 = v12;
          do
          {
            int v17 = *((_DWORD *)v13 + 7);
            BOOL v18 = v17 < v15;
            if (v17 >= v15) {
              int v19 = (char **)v13;
            }
            else {
              int v19 = (char **)(v13 + 8);
            }
            if (!v18) {
              uint64_t v16 = v13;
            }
            id v13 = *v19;
          }

          while (*v19);
          if (v16 != v12 && v15 >= *((_DWORD *)v16 + 7))
          {
            LODWORD(__p[0]) = *a3;
            sub_1004EF494((uint64_t)(v12 - 8), (int *)__p);
            uint64_t v20 = *((void *)a1 + 8);
            if (!v20) {
              goto LABEL_33;
            }
            int v21 = *a3;
            int v22 = a1 + 64;
            do
            {
              int v23 = *(_DWORD *)(v20 + 32);
              BOOL v24 = v23 < v21;
              if (v23 >= v21) {
                uint64_t v25 = (uint64_t *)v20;
              }
              else {
                uint64_t v25 = (uint64_t *)(v20 + 8);
              }
              if (!v24) {
                int v22 = (char *)v20;
              }
              uint64_t v20 = *v25;
            }

            while (*v25);
            if (v22 != a1 + 64 && v21 >= *((_DWORD *)v22 + 8))
            {
              sub_1004EF494((uint64_t)(v22 + 40), (int *)&v33 + 1);
              if (!*((void *)v22 + 7)) {
                (*(void (**)(char *, int *))(*(void *)a1 + 176LL))(a1, a3);
              }
            }

            else
            {
LABEL_33:
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101835EE8);
              }
              __int16 v26 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                int v27 = a1 + 8;
                if (a1[31] < 0) {
                  int v27 = (void *)*v27;
                }
                (*(void (**)(void **__return_ptr, char *, int *))(*(void *)a1 + 160LL))(__p, a1, a3);
                if (v43 >= 0) {
                  BOOL v28 = __p;
                }
                else {
                  BOOL v28 = (void **)__p[0];
                }
                *(_DWORD *)uint64_t buf = 136446466;
                *(void *)&uint8_t buf[4] = v27;
                __int16 v35 = 2082;
                __int16 v36 = v28;
                _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_FAULT,  "%{public}s; notification %{public}s not found",
                  buf,
                  0x16u);
                if (v43 < 0) {
                  operator delete(__p[0]);
                }
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(__p, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_101835EE8);
                }
                __int16 v29 = a1 + 8;
                if (a1[31] < 0) {
                  __int16 v29 = (void *)*v29;
                }
                uint64_t v30 = qword_1019349D8;
                (*(void (**)(_BYTE *__return_ptr, char *, int *))(*(void *)a1 + 160LL))(buf, a1, a3);
                if (v37 >= 0) {
                  int v31 = buf;
                }
                else {
                  int v31 = *(_BYTE **)buf;
                }
                int v38 = 136446466;
                uint64_t v39 = v29;
                __int16 v40 = 2082;
                int v41 = v31;
                LODWORD(v33) = 22;
                char v32 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v30,  17LL,  "%{public}s; notification %{public}s not found",
                                &v38,
                                v33);
                if (v37 < 0) {
                  operator delete(*(void **)buf);
                }
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLDaemonStatus_Type::Notification, CLDaemonStatus_Type::NotificationData, char , char>::unregisterForNotification(int, const Notification_T &) [Notification_T = CLDaemonStatus_Type: :Notification, NotificationData_T = CLDaemonStatus_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v32);
              }
            }
          }
        }
      }
    }
  }

  return v3 == 0;
}

uint64_t sub_1003CD7D8(uint64_t a1, int *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v3 = a1 + 64;
  uint64_t v4 = v5;
  if (!v5) {
    return 0LL;
  }
  int v6 = *a2;
  uint64_t v7 = v3;
  do
  {
    int v8 = *(_DWORD *)(v4 + 32);
    BOOL v9 = v8 < v6;
    if (v8 >= v6) {
      BOOL v10 = (uint64_t *)v4;
    }
    else {
      BOOL v10 = (uint64_t *)(v4 + 8);
    }
    if (!v9) {
      uint64_t v7 = v4;
    }
    uint64_t v4 = *v10;
  }

  while (*v10);
  if (v7 == v3) {
    return 0LL;
  }
  if (v6 < *(_DWORD *)(v7 + 32)) {
    return 0LL;
  }
  int v11 = *(__int128 **)(v7 + 64);
  if (!v11) {
    return 0LL;
  }
  __int128 v12 = *v11;
  *(void *)(a3 + 16) = *((void *)v11 + 2);
  *(_OWORD *)a3 = v12;
  return 1LL;
}

uint64_t sub_1003CD840(uint64_t a1, int *a2, uint64_t a3)
{
  int v6 = (char *)operator new(0x30uLL);
  *((void *)v6 + 2) = 0LL;
  *(void *)int v6 = off_101836058;
  *((void *)v6 + 1) = 0LL;
  *(_OWORD *)(v6 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = *(_OWORD *)a3;
  *((void *)v6 + 5) = *(void *)(a3 + 16);
  *(void *)&__int128 v13 = v6 + 24;
  *((void *)&v13 + 1) = v6;
  int v12 = *a2;
  uint64_t v14 = &v12;
  uint64_t v7 = sub_10023347C((uint64_t **)(a1 + 56), &v12, (uint64_t)&unk_1012CF090, &v14);
  sub_10005F550((uint64_t)(v7 + 8), &v13);
  int v8 = (std::__shared_weak_count *)*((void *)&v13 + 1);
  if (*((void *)&v13 + 1))
  {
    BOOL v9 = (unint64_t *)(*((void *)&v13 + 1) + 8LL);
    do
      unint64_t v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }

  return 1LL;
}

void sub_1003CD91C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_1003CD930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[0] = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, _BYTE *, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  a2,  v5,  a3,  a4,  0LL);
}

void sub_1003CD968(uint64_t a1, int *a2, uint64_t a3, int a4, int a5)
{
  if (!*(_BYTE *)(a1 + 108))
  {
    unint64_t v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: notifyClientsWithData (Fallback)",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_IF_NONE_PRESENT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101835EE8);
    }
    int v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      int v12 = (void *)(a1 + 8);
      __int128 v13 = (std::__shared_weak_count *)*a2;
      *(_DWORD *)uint64_t buf = 68289794;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&_BYTE buf[18] = 2082;
      *(void *)&buf[20] = "activity";
      __int16 v66 = 2082;
      __int16 v67 = v12;
      __int16 v68 = 2050;
      __int16 v69 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:notifyClientsWithData, event:%{public, location:escape_only}s, name:%{public, l ocation:escape_only}s, notification:%{public}lld}",  buf,  0x30u);
    }

    int v15 = (__n128 *)(a1 + 64);
    uint64_t v14 = *(__n128 **)(a1 + 64);
    if (!v14) {
      goto LABEL_18;
    }
    signed __int32 v16 = *a2;
    int v17 = (__n128 *)(a1 + 64);
    do
    {
      signed __int32 v18 = v14[2].n128_i32[0];
      BOOL v19 = v18 < v16;
      if (v18 >= v16) {
        uint64_t v20 = (__n128 **)v14;
      }
      else {
        uint64_t v20 = (__n128 **)&v14->n128_u64[1];
      }
      if (!v19) {
        int v17 = v14;
      }
      uint64_t v14 = *v20;
    }

    while (*v20);
    if (v17 == v15 || v16 < (signed __int32)v17[2].n128_u32[0])
    {
LABEL_18:
      *(void *)int v70 = &v70[8];
      memset(&v70[8], 0, 24);
      __int16 v71 = 0LL;
      sub_1002343E4((uint64_t)buf, a2, (uint64_t)v70);
      int v17 = sub_1002342A4((uint64_t **)(a1 + 56), (__n128 *)buf);
      int v21 = v69;
      if (v69)
      {
        p_shared_owners = (unint64_t *)&v69->__shared_owners_;
        do
          unint64_t v23 = __ldaxr(p_shared_owners);
        while (__stlxr(v23 - 1, p_shared_owners));
        if (!v23)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }

      sub_100008390((uint64_t)&buf[8], *(void **)&buf[16]);
      BOOL v24 = v71;
      if (v71)
      {
        uint64_t v25 = (unint64_t *)&v71->__shared_owners_;
        do
          unint64_t v26 = __ldaxr(v25);
        while (__stlxr(v26 - 1, v25));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }

      sub_100008390((uint64_t)v70, *(void **)&v70[8]);
    }

    if (a4)
    {
      int v27 = (char *)operator new(0x30uLL);
      *((void *)v27 + 1) = 0LL;
      *((void *)v27 + 2) = 0LL;
      *(void *)int v27 = off_101836058;
      *(_OWORD *)(v27 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = *(_OWORD *)a3;
      *((void *)v27 + 5) = *(void *)(a3 + 16);
      *(void *)uint64_t buf = v27 + 24;
      *(void *)&uint8_t buf[8] = v27;
      sub_10005F550((uint64_t)&v17[4], (__int128 *)buf);
      BOOL v28 = *(std::__shared_weak_count **)&buf[8];
      if (*(void *)&buf[8])
      {
        __int16 v29 = (unint64_t *)(*(void *)&buf[8] + 8LL);
        do
          unint64_t v30 = __ldaxr(v29);
        while (__stlxr(v30 - 1, v29));
        if (!v30)
        {
          ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
          std::__shared_weak_count::__release_weak(v28);
        }
      }
    }

    else
    {
      sub_1000F0D38((__n128 *)v17[4].n128_u64);
    }

    if (!v17[3].n128_u64[1]) {
      goto LABEL_83;
    }
    int v31 = sub_1003CE744(a3);
    if (a5 == -1)
    {
      sub_1003CE7CC((void *)a1, a2, v31);
    }

    else
    {
      uint64_t v32 = a1 + 88;
      uint64_t v33 = *(void *)(a1 + 88);
      if (!v33) {
        goto LABEL_48;
      }
      uint64_t v34 = a1 + 88;
      do
      {
        int v35 = *(_DWORD *)(v33 + 32);
        BOOL v36 = v35 < a5;
        if (v35 >= a5) {
          char v37 = (uint64_t *)v33;
        }
        else {
          char v37 = (uint64_t *)(v33 + 8);
        }
        if (!v36) {
          uint64_t v34 = v33;
        }
        uint64_t v33 = *v37;
      }

      while (*v37);
      if (v34 == v32 || *(_DWORD *)(v34 + 32) > a5) {
LABEL_48:
      }
        uint64_t v34 = a1 + 88;
      uint64_t v63 = v34;
      unint64_t v38 = v15->n128_u64[0];
      if (!v15->n128_u64[0]) {
        goto LABEL_59;
      }
      int v39 = *a2;
      __int16 v40 = (__n128 *)(a1 + 64);
      do
      {
        int v41 = *(_DWORD *)(v38 + 32);
        BOOL v42 = v41 < v39;
        if (v41 >= v39) {
          char v43 = (unint64_t *)v38;
        }
        else {
          char v43 = (unint64_t *)(v38 + 8);
        }
        if (!v42) {
          __int16 v40 = (__n128 *)v38;
        }
        unint64_t v38 = *v43;
      }

      while (*v43);
      if (v40 == v15 || v39 < (signed __int32)v40[2].n128_u32[0])
      {
LABEL_59:
        size_t v62 = (__n128 *)(a1 + 64);
LABEL_60:
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_101835EE8);
        }
        int v44 = (os_log_s *)qword_1019349D8;
        if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
        {
          char v45 = (void *)(a1 + 8);
          (*(void (**)(_BYTE *__return_ptr, uint64_t, int *))(*(void *)a1 + 160LL))(v70, a1, a2);
          if (v70[23] >= 0) {
            __int16 v46 = v70;
          }
          else {
            __int16 v46 = *(_BYTE **)v70;
          }
          *(_DWORD *)uint64_t buf = 136315650;
          *(void *)&uint8_t buf[4] = v45;
          *(_WORD *)&_BYTE buf[12] = 1024;
          *(_DWORD *)&buf[14] = a5;
          *(_WORD *)&_BYTE buf[18] = 2080;
          *(void *)&buf[20] = v46;
          _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_DEBUG,  "%s; client %d has deregistered, not notifying %s",
            buf,
            0x1Cu);
          if ((v70[23] & 0x80000000) != 0) {
            operator delete(*(void **)v70);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019349D0 != -1) {
            dispatch_once(&qword_1019349D0, &stru_101835EE8);
          }
          int v47 = (void *)(a1 + 8);
          uint64_t v48 = qword_1019349D8;
          (*(void (**)(void **__return_ptr, uint64_t, int *))(*(void *)a1 + 160LL))(__p, a1, a2);
          if (v61 >= 0) {
            __int16 v49 = __p;
          }
          else {
            __int16 v49 = (void **)__p[0];
          }
          *(_DWORD *)int v70 = 136315650;
          *(void *)&v70[4] = v47;
          *(_WORD *)&v70[12] = 1024;
          *(_DWORD *)&v70[14] = a5;
          *(_WORD *)&_BYTE v70[18] = 2080;
          *(void *)&v70[20] = v49;
          unsigned int v50 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v48,  2LL,  "%s; client %d has deregistered, not notifying %s",
                          v70,
                          28,
                          v59);
          if (v61 < 0) {
            operator delete(__p[0]);
          }
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLDaemonStatus_Type::Notification, CLDaemonStatus_Type::NotificationData, char, char >::notifyClientsWithData(const Notification_T &, const NotificationData_T &, BOOL, int, BOOL) [Notification_ T = CLDaemonStatus_Type::Notification, NotificationData_T = CLDaemonStatus_Type::NotificationData, Notificat ionInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v50);
          if (v50 != buf) {
            free(v50);
          }
        }

        goto LABEL_83;
      }

      size_t v62 = v40;
      if (v34 == v32) {
        goto LABEL_60;
      }
      uint64_t v53 = v40[3].n128_i64[0];
      __int16 v51 = v40 + 3;
      int v52 = (__n128 *)v53;
      if (!v53) {
        goto LABEL_60;
      }
      int v54 = *(_DWORD *)(v34 + 32);
      BOOL v55 = v51;
      do
      {
        int v56 = v52[1].n128_i32[3];
        BOOL v57 = v56 < v54;
        if (v56 >= v54) {
          uint64_t v58 = v52;
        }
        else {
          uint64_t v58 = (__n128 *)&v52->n128_i8[8];
        }
        if (!v57) {
          BOOL v55 = v52;
        }
        int v52 = (__n128 *)v58->n128_u64[0];
      }

      while (v58->n128_u64[0]);
      sub_1003CEBA0((_BYTE *)a1, (uint64_t)&v63, (uint64_t)&v62, v31);
    }

void sub_1003CDFA8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_activity_scope_state_s state, char a18)
{
}

void sub_1003CDFF4(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 108))
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101835EE8);
    }
    BOOL v2 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v3 = (void *)(a1 + 8);
      *(_DWORD *)uint64_t buf = 136315138;
      uint64_t v34 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "%s; already shutdown; not listing clients",
        buf,
        0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101835EE8);
      }
      uint64_t v4 = (void *)(a1 + 8);
      int v29 = 136315138;
      unint64_t v30 = v4;
      uint64_t v5 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; already shutdown; not listing clients",
                     (const char *)&v29);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLDaemonStatus_Type::Notification, CLDaemonStatus_Type::NotificationData, char, char>::l istClients() [Notification_T = CLDaemonStatus_Type::Notification, NotificationData_T = CLDaemonStatus_Type::Noti ficationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v5);
    }
  }

  else
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101835EE8);
    }
    int v6 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v7 = (void *)(a1 + 8);
      uint64_t v8 = *(void *)(a1 + 96);
      *(_DWORD *)uint64_t buf = 136315394;
      uint64_t v34 = v7;
      __int16 v35 = 2048;
      v36[0] = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "%s; listing clients, num clients: %zu",
        buf,
        0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101835EE8);
      }
      uint64_t v25 = (void *)(a1 + 8);
      uint64_t v26 = *(void *)(a1 + 96);
      int v29 = 136315394;
      unint64_t v30 = v25;
      __int16 v31 = 2048;
      v32[0] = v26;
      int v27 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; listing clients, num clients: %zu",
                      (const char *)&v29,
                      22);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLDaemonStatus_Type::Notification, CLDaemonStatus_Type::NotificationData, char, char>::l istClients() [Notification_T = CLDaemonStatus_Type::Notification, NotificationData_T = CLDaemonStatus_Type::Noti ficationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v27);
    }

    BOOL v9 = *(void **)(a1 + 80);
    if (v9 != (void *)(a1 + 88))
    {
      unint64_t v10 = (void *)(a1 + 8);
      do
      {
        int v11 = (void *)v9[5];
        if (v11 != v9 + 6)
        {
          do
          {
            if (qword_1019349D0 != -1) {
              dispatch_once(&qword_1019349D0, &stru_101835EE8);
            }
            int v12 = (os_log_s *)qword_1019349D8;
            if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
            {
              __int128 v13 = (void *)(a1 + 8);
              int v14 = *((_DWORD *)v9 + 8);
              int v15 = *((_DWORD *)v11 + 7);
              *(_DWORD *)uint64_t buf = 136315650;
              uint64_t v34 = v13;
              __int16 v35 = 1024;
              LODWORD(v36[0]) = v14;
              WORD2(v36[0]) = 1024;
              *(_DWORD *)((char *)v36 + 6) = v15;
              _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "%s; clients, id: %d, notification: %d",
                buf,
                0x18u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101835EE8);
              }
              BOOL v19 = (void *)(a1 + 8);
              int v20 = *((_DWORD *)v9 + 8);
              int v21 = *((_DWORD *)v11 + 7);
              int v29 = 136315650;
              unint64_t v30 = v19;
              __int16 v31 = 1024;
              LODWORD(v32[0]) = v20;
              WORD2(v32[0]) = 1024;
              *(_DWORD *)((char *)v32 + 6) = v21;
              int v22 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; clients, id: %d, notification: %d",
                              (const char *)&v29,
                              24,
                              v28);
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLDaemonStatus_Type::Notification, CLDaemonStatus_Type::NotificationData, char, char>::listClients() [Notification_T = CLDaemonStatus_Type::Notification, NotificationData_T = CLDaemonS tatus_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v22);
            }

            signed __int32 v16 = (void *)v11[1];
            if (v16)
            {
              do
              {
                int v17 = v16;
                signed __int32 v16 = (void *)*v16;
              }

              while (v16);
            }

            else
            {
              do
              {
                int v17 = (void *)v11[2];
                BOOL v18 = *v17 == (void)v11;
                int v11 = v17;
              }

              while (!v18);
            }

            int v11 = v17;
          }

          while (v17 != v9 + 6);
        }

        unint64_t v23 = (void *)v9[1];
        if (v23)
        {
          do
          {
            BOOL v24 = v23;
            unint64_t v23 = (void *)*v23;
          }

          while (v23);
        }

        else
        {
          do
          {
            BOOL v24 = (void *)v9[2];
            BOOL v18 = *v24 == (void)v9;
            BOOL v9 = v24;
          }

          while (!v18);
        }

        BOOL v9 = v24;
      }

      while (v24 != (void *)(a1 + 88));
    }
  }

void sub_1003CE5A0(uint64_t a1)
{
  uint64_t v1 = (void *)sub_1003CF220(a1);
  operator delete(v1);
}

id sub_1003CE5B4(uint64_t a1, int a2, void *a3)
{
  id result = sub_1003CECCC(a3);
  if (result)
  {
    int v6 = a2;
    return (id)(*(uint64_t (**)(void, int *, id, void))(a1 + 24))(0LL, &v6, result, *(void *)(a1 + 32));
  }

  return result;
}

void sub_1003CE600(id a1)
{
  qword_101934988 = (uint64_t)os_log_create("com.apple.locationd.Core", "Core");
}

void sub_1003CE62C(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_1003CE658(uint64_t a1, uint64_t a2)
{
}

void sub_1003CE668(id a1)
{
  qword_101934A48 = (uint64_t)os_log_create("com.apple.locationd.Utility", "Utility");
}

void sub_1003CE694(uint64_t a1, uint64_t a2)
{
}

void sub_1003CE6A4(uint64_t a1)
{
}

void sub_1003CE6AC(uint64_t a1)
{
}

void sub_1003CE6B4(uint64_t a1)
{
}

void sub_1003CE6BC(uint64_t a1)
{
}

id sub_1003CE6C4(uint64_t a1)
{
  return sub_1003C93F0(*(id **)(a1 + 32));
}

void sub_1003CE6CC(uint64_t a1)
{
}

void sub_1003CE6D4(id a1)
{
  qword_101934858 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

void sub_1003CE700(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 52) == -536723200) {
    sub_1003CB80C(*(void **)(a1 + 32), *(_DWORD *)(a1 + 48));
  }
}

uint64_t sub_1003CE724(uint64_t a1)
{
  return sub_1003CC154(*(void *)(a1 + 32), *(_DWORD *)(a1 + 40));
}

uint64_t sub_1003CE734(uint64_t a1, uint64_t a2)
{
  return sub_1003C9B08(*(void *)(a1 + 32), a2, *(_DWORD *)(a1 + 48));
}

CLCppContainer *sub_1003CE744(uint64_t a1)
{
  BOOL v2 = operator new(0x18uLL);
  *(_OWORD *)BOOL v2 = *(_OWORD *)a1;
  v2[2] = *(void *)(a1 + 16);
  uint64_t v4 = _NSConcreteStackBlock;
  uint64_t v5 = 3221225472LL;
  int v6 = sub_1003CECBC;
  uint64_t v7 = &unk_10181D3D0;
  uint64_t v8 = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:");
}

void sub_1003CE7CC(void *a1, int *a2, void *a3)
{
  if (!*((_BYTE *)a1 + 108))
  {
    uint64_t v5 = a1 + 8;
    uint64_t v4 = a1[8];
    if (v4)
    {
      int v8 = *a2;
      BOOL v9 = a1 + 8;
      do
      {
        int v10 = *(_DWORD *)(v4 + 32);
        BOOL v11 = v10 < v8;
        if (v10 >= v8) {
          int v12 = (uint64_t *)v4;
        }
        else {
          int v12 = (uint64_t *)(v4 + 8);
        }
        if (!v11) {
          BOOL v9 = (void *)v4;
        }
        uint64_t v4 = *v12;
      }

      while (*v12);
      if (v9 != v5 && v8 >= *((_DWORD *)v9 + 8))
      {
        unsigned int v50 = v9;
        id v13 = sub_1003CECCC(a3);
        (*(void (**)(void *, int *, id, void *))(*a1 + 184LL))(a1, a2, v13, v9 + 10);
        int v14 = (void *)v9[5];
        if (v14 != v9 + 6)
        {
          int v15 = a1 + 11;
          signed __int32 v16 = a1 + 1;
          do
          {
            uint64_t v17 = *v15;
            if (!*v15) {
              goto LABEL_25;
            }
            int v18 = *((_DWORD *)v14 + 7);
            BOOL v19 = a1 + 11;
            do
            {
              int v20 = *(_DWORD *)(v17 + 32);
              BOOL v21 = v20 < v18;
              if (v20 >= v18) {
                int v22 = (uint64_t *)v17;
              }
              else {
                int v22 = (uint64_t *)(v17 + 8);
              }
              if (!v21) {
                BOOL v19 = (uint64_t *)v17;
              }
              uint64_t v17 = *v22;
            }

            while (*v22);
            if (v19 != v15 && (int v23 = *((_DWORD *)v19 + 8), v18 >= v23))
            {
              __int16 v49 = v19;
              sub_1003CEBA0(a1, (uint64_t)&v49, (uint64_t)&v50, a3);
              uint64_t v27 = a1[8];
              if (!v27) {
                return;
              }
              int v28 = *a2;
              int v29 = v5;
              do
              {
                int v30 = *(_DWORD *)(v27 + 32);
                BOOL v31 = v30 < v28;
                if (v30 >= v28) {
                  uint64_t v32 = (uint64_t *)v27;
                }
                else {
                  uint64_t v32 = (uint64_t *)(v27 + 8);
                }
                if (!v31) {
                  int v29 = (void *)v27;
                }
                uint64_t v27 = *v32;
              }

              while (*v32);
              if (v29 == v5 || v28 < *((_DWORD *)v29 + 8)) {
                return;
              }
              unsigned int v50 = v29;
              uint64_t v34 = v29[6];
              int v14 = v29 + 6;
              uint64_t v33 = v34;
              if (v34)
              {
                __int16 v35 = v14;
                uint64_t v36 = v33;
                do
                {
                  int v37 = *(_DWORD *)(v36 + 28);
                  BOOL v38 = v37 < v23;
                  if (v37 >= v23) {
                    int v39 = (uint64_t *)v36;
                  }
                  else {
                    int v39 = (uint64_t *)(v36 + 8);
                  }
                  if (!v38) {
                    __int16 v35 = (void *)v36;
                  }
                  uint64_t v36 = *v39;
                }

                while (*v39);
                if (v35 == v14 || v23 < *((_DWORD *)v35 + 7))
                {
                  do
                  {
                    int v40 = *(_DWORD *)(v33 + 28);
                    BOOL v41 = v23 < v40;
                    if (v23 >= v40) {
                      BOOL v42 = (uint64_t *)(v33 + 8);
                    }
                    else {
                      BOOL v42 = (uint64_t *)v33;
                    }
                    if (v41) {
                      int v14 = (void *)v33;
                    }
                    uint64_t v33 = *v42;
                  }

                  while (*v42);
                }

                else
                {
                  char v43 = (void *)v35[1];
                  if (v43)
                  {
                    do
                    {
                      int v14 = v43;
                      char v43 = (void *)*v43;
                    }

                    while (v43);
                  }

                  else
                  {
                    do
                    {
                      int v14 = (void *)v35[2];
                      BOOL v44 = *v14 == (void)v35;
                      __int16 v35 = v14;
                    }

                    while (!v44);
                  }
                }
              }
            }

            else
            {
LABEL_25:
              __int16 v49 = a1 + 11;
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101835EE8);
              }
              BOOL v24 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                uint64_t v25 = a1 + 1;
                int v26 = *((_DWORD *)v14 + 7);
                *(_DWORD *)uint64_t buf = 136446466;
                int v56 = v25;
                __int16 v57 = 1026;
                int v58 = v26;
                _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_FAULT,  "%{public}s; unknown client %{public}d",
                  buf,
                  0x12u);
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(buf, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_101835EE8);
                }
                char v45 = a1 + 1;
                int v46 = *((_DWORD *)v14 + 7);
                int v51 = 136446466;
                int v52 = v45;
                __int16 v53 = 1026;
                int v54 = v46;
                LODWORD(v4_Block_object_dispose((const void *)(v30 - 184), 8) = 18;
                int v47 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; unknown client %{public}d",
                                &v51,
                                v48);
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLNotifier<CLDaemonStatus_Type::Notification, CLDaemonStatus_Type::NotificationData, char, char>: :invokeClientsWithData(const Notification_T &, CLCppContainer *) [Notification_T = CLDaemonStatus_Type ::Notification, NotificationData_T = CLDaemonStatus_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v47);
              }
            }
          }

          while (v14 != v50 + 6);
        }
      }
    }
  }

_BYTE *sub_1003CEBA0(_BYTE *result, uint64_t a2, uint64_t a3, void *a4)
{
  if (!result[108])
  {
    uint64_t v7 = result;
    uint64_t v8 = *(unsigned int *)(*(void *)a2 + 32LL);
    LODWORD(v13) = *(_DWORD *)(*(void *)a3 + 32LL);
    id v9 = sub_1003CECCC(a4);
    uint64_t v10 = *(void *)a3 + 80LL;
    BOOL v11 = (uint64_t **)(*(void *)a3 + 40LL);
    int v14 = (int *)(*(void *)a2 + 32LL);
    int v12 = sub_1004EF3D4(v11, v14, (uint64_t)&unk_1012CF090, &v14);
    id result = (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t *, id, uint64_t, uint64_t **))(*(void *)v7 + 192LL))( v7,  v8,  &v13,  v9,  v10,  v12 + 4);
    if ((_DWORD)result) {
      return objc_msgSend( *(id *)(*(void *)a2 + 64),  "onNotification:withData:",  *(unsigned int *)(*(void *)a3 + 32),  a4,  v13);
    }
  }

  return result;
}

void sub_1003CEC7C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_101836058;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1003CEC90(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_101836058;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_1003CECBC(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1) {
    operator delete(v1);
  }
}

id sub_1003CECCC(void *a1)
{
  uint64_t v2 = objc_opt_class(&OBJC_CLASS___CLCppContainer);
  if ((objc_opt_isKindOfClass(a1, v2) & 1) != 0) {
    return sub_1003CED18(a1);
  }
  else {
    return 0LL;
  }
}

id sub_1003CED18(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return [a1 cppObjectPtr];
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101836098);
    }
    uint64_t v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)uint64_t buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001012E7E4CLL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101836098);
    }
    LODWORD(v_Block_object_dispose((const void *)(v30 - 184), 8) = 134218498;
    HIDWORD(v_Block_object_dispose((const void *)(v30 - 184), 8) = (_DWORD)v2;
    uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly becaus e the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101836098);
    }
    int v6 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001012E7E4CLL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101836098);
    }
    LODWORD(v_Block_object_dispose((const void *)(v30 - 184), 8) = 134218498;
    HIDWORD(v_Block_object_dispose((const void *)(v30 - 184), 8) = (_DWORD)v2;
    uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly becaus e the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  uint64_t v7 = (uint8_t *)v4;
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLDaemonStatus_Type::NotificationData, Callback = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:228:46)]",  "%s\n",  v4);
  if (v7 != buf) {
    free(v7);
  }
  return 0LL;
}

void sub_1003CF0C4(id a1)
{
  qword_101934478 = (uint64_t)os_log_create("com.apple.locationd.Support", "Support");
}

uint64_t *sub_1003CF0F0(uint64_t **a1, uint64_t *a2, uint64_t *a3)
{
  int v6 = a1 + 1;
  uint64_t v5 = a1[1];
  if (v5)
  {
    uint64_t v7 = *a2;
    while (1)
    {
      while (1)
      {
        uint64_t v8 = (uint64_t **)v5;
        uint64_t v9 = v5[4];
        if (v7 >= v9) {
          break;
        }
        uint64_t v5 = *v8;
        int v6 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }

      if (v9 >= v7) {
        break;
      }
      uint64_t v5 = v8[1];
      if (!v5)
      {
        int v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }

  else
  {
    uint64_t v8 = a1 + 1;
LABEL_10:
    id v10 = (uint64_t *)operator new(0x28uLL);
    v10[4] = *a3;
    sub_1000085FC(a1, (uint64_t)v8, v6, v10);
    return v10;
  }

  return (uint64_t *)v8;
}

uint64_t sub_1003CF1A8(uint64_t a1, uint64_t *a2)
{
  id v2 = *(void **)(a1 + 8);
  if (!v2) {
    return 0LL;
  }
  uint64_t v3 = *a2;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  do
  {
    uint64_t v5 = v2[4];
    BOOL v6 = v5 < v3;
    if (v5 >= v3) {
      uint64_t v7 = v2;
    }
    else {
      uint64_t v7 = v2 + 1;
    }
    if (!v6) {
      uint64_t v4 = v2;
    }
    id v2 = (void *)*v7;
  }

  while (*v7);
  sub_1000087E8((uint64_t **)a1, v4);
  operator delete(v4);
  return 1LL;
}

uint64_t sub_1003CF220(uint64_t a1)
{
  *(void *)a1 = &off_1018360C8;
  id v2 = (id *)(a1 + 8);
  [*(id *)(a1 + 16) forget:*(void *)(a1 + 8)];

  [*v2 invalidate];
  *id v2 = 0LL;
  *(void *)(a1 + 16) = 0LL;
  return a1;
}

CLCppContainer *sub_1003CF280(uint64_t a1)
{
  id v2 = operator new(0x18uLL);
  *(_OWORD *)id v2 = *(_OWORD *)a1;
  v2[2] = *(void *)(a1 + 16);
  uint64_t v4 = _NSConcreteStackBlock;
  uint64_t v5 = 3221225472LL;
  BOOL v6 = sub_1003CF308;
  uint64_t v7 = &unk_10181D3D0;
  uint64_t v8 = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:");
}

void sub_1003CF308(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1) {
    operator delete(v1);
  }
}

double sub_1003CF318(_OWORD *a1)
{
  double result = 0.0;
  *(_OWORD *)((char *)a1 + 2_Block_object_dispose((const void *)(v30 - 184), 8) = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

void sub_1003CF328(_DWORD *a1, unsigned int a2, int a3, int a4)
{
  if (a4 + a3 <= a2)
  {
    ++a1[10];
    if (a2)
    {
      a1[4] += a2;
      if (a4 | a3)
      {
        ++a1[7];
        a1[1] += a4 + a3;
        if (a3)
        {
          ++a1[8];
          a1[2] += a3;
        }

        if (a4)
        {
          ++a1[9];
          a1[3] += a4;
        }
      }
    }

    else
    {
      ++a1[6];
    }
  }

  else
  {
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_1018360E0);
    }
    uint64_t v7 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 67240704;
      unsigned int v16 = a2;
      __int16 v17 = 1026;
      int v18 = a3;
      __int16 v19 = 1026;
      int v20 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "Invalid ap lookup/found counts: apLookupCount: %{public}u, foundInCacheCount: %{public}u, foundInTilesCount: %{public}u",  buf,  0x14u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_1018360E0);
      }
      v10[0] = 67240704;
      v10[1] = a2;
      __int16 v11 = 1026;
      int v12 = a3;
      __int16 v13 = 1026;
      int v14 = a4;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  17LL,  "Invalid ap lookup/found counts: apLookupCount: %{public}u, foundInCacheCount: %{public}u, foundInTilesCount: %{public}u",  v10,  20);
      uint64_t v9 = (uint8_t *)v8;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLWifiApLocationLookupMetrics::scanBufferApLocationLookup(unsigned int, unsigned int, unsigned int)",  "%s\n",  v8);
      if (v9 != buf) {
        free(v9);
      }
    }
  }

_DWORD *sub_1003CF598(_DWORD *result, int a2)
{
  result[5] += a2;
  return result;
}

uint64_t sub_1003CF5B4(unsigned int *a1)
{
  uint64_t result = sub_1003CF97C(a1, v19);
  if ((result & 1) == 0)
  {
    unsigned int v5 = a1[10];
    double v6 = 0.0;
    double v7 = 0.0;
    if (v5)
    {
      LODWORD(v3) = *a1;
      double v3 = (double)*(unint64_t *)&v3;
      double v4 = (double)v5;
      double v7 = v3 / (double)v5;
    }

    unsigned int v8 = a1[4];
    unsigned int v9 = a1[1];
    if (v8)
    {
      double v3 = (double)v9;
      double v4 = (double)v8;
      double v6 = (double)v9 / (double)v8;
    }

    double v10 = 0.0;
    double v11 = 0.0;
    double v12 = 0.0;
    if (v9)
    {
      LODWORD(v3) = a1[2];
      LODWORD(v4) = a1[3];
      double v11 = (double)*(unint64_t *)&v3 / (double)v9;
      double v3 = (double)*(unint64_t *)&v4;
      double v12 = (double)*(unint64_t *)&v4 / (double)v9;
    }

    if (v8)
    {
      LODWORD(v3) = a1[5];
      double v3 = (double)*(unint64_t *)&v3;
      double v4 = (double)v8;
      double v10 = v3 / (double)v8;
    }

    if (v5)
    {
      LODWORD(v3) = a1[6];
      double v4 = (double)v5;
      double v13 = (double)*(unint64_t *)&v3 / (double)v5;
      unsigned int v14 = a1[7];
      double v3 = (double)v14;
      double v15 = (double)v14 / v4;
      if (v14)
      {
LABEL_12:
        LODWORD(v3) = a1[8];
        LODWORD(v4) = a1[9];
        double v16 = (double)*(unint64_t *)&v3 / (double)v14;
        double v17 = (double)*(unint64_t *)&v4 / (double)v14;
LABEL_15:
        double v18 = v17;
        v20[0] = @"alsRequestResponseCount";
        v21[0] = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", *a1);
        v20[1] = @"alsRequestResponseScanBufferFractionUpperBound";
        v21[1] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v7);
        void v20[2] = @"apLocationFoundCount";
        void v21[2] = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", a1[1]);
        v20[3] = @"apLocationFoundFraction";
        v21[3] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v6);
        v20[4] = @"apLocationFoundInAlsCacheCount";
        v21[4] = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", a1[2]);
        v20[5] = @"apLocationFoundInAlsCacheFraction";
        void v21[5] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v11);
        v20[6] = @"apLocationFoundInTilesCount";
        v21[6] = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", a1[3]);
        v20[7] = @"apLocationFoundInTilesFraction";
        void v21[7] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v12);
        void v20[8] = @"apLocationLookupCount";
        v21[8] = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", a1[4]);
        v20[9] = @"apLocationsInAlsRequestResponseCount";
        v21[9] = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", a1[5]);
        v20[10] = @"apLocationsInAlsRequestResponseFractionUpperBound";
        v21[10] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v10);
        v20[11] = @"emptyScanBufferLookupCount";
        v21[11] = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", a1[6]);
        v20[12] = @"emptyScanBufferLookupFraction";
        v21[12] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v13);
        v20[13] = @"scanBufferFoundApLocationCount";
        v21[13] = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", a1[7]);
        v20[14] = @"scanBufferFoundApLocationFraction";
        v21[14] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v15);
        v20[15] = @"scanBufferFoundApLocationInAlsCacheCount";
        v21[15] = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", a1[8]);
        v20[16] = @"scanBufferFoundApLocationInAlsCacheFraction";
        v21[16] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v16);
        v20[17] = @"scanBufferFoundApLocationInTilesCount";
        v21[17] = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", a1[9]);
        v20[18] = @"scanBufferFoundApLocationInTilesFraction";
        v21[18] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v18);
        void v20[19] = @"scanBufferLookupCount";
        v21[19] = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", a1[10]);
        uint64_t result = AnalyticsSendEvent( @"com.apple.locationd.WifiScanApLocationLookups",  +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v21,  v20,  20LL));
        *(_OWORD *)(a1 + 7) = 0u;
        *(_OWORD *)a1 = 0u;
        *((_OWORD *)a1 + 1) = 0u;
        return result;
      }
    }

    else
    {
      unsigned int v14 = a1[7];
      double v13 = 0.0;
      double v15 = 0.0;
      if (v14) {
        goto LABEL_12;
      }
    }

    double v16 = 0.0;
    double v17 = 0.0;
    goto LABEL_15;
  }

  return result;
}

BOOL sub_1003CF97C(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2
      && a1[1] == a2[1]
      && a1[2] == a2[2]
      && a1[3] == a2[3]
      && a1[4] == a2[4]
      && a1[5] == a2[5]
      && a1[6] == a2[6]
      && a1[7] == a2[7]
      && a1[8] == a2[8]
      && a1[9] == a2[9]
      && a1[10] == a2[10];
}

void sub_1003CFA38(id a1)
{
  qword_101934868 = (uint64_t)os_log_create("com.apple.locationd.Position", "WifiPosition");
}

void sub_1003CFEE4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

const char *sub_1003D0400(unsigned int a1)
{
  if (a1 > 3) {
    return "Invalid";
  }
  else {
    return (&off_101836160)[a1];
  }
}

uint64_t sub_1003D0424(const void *a1)
{
  if (CFEqual(a1, kCTCellMonitorRadioAccessTechnologyGSM)) {
    return 0LL;
  }
  if (CFEqual(a1, kCTCellMonitorRadioAccessTechnologyLTE)) {
    return 6LL;
  }
  if (CFEqual(a1, kCTCellMonitorRadioAccessTechnologyUMTS)) {
    return 7LL;
  }
  if (CFEqual(a1, kCTCellMonitorRadioAccessTechnologyUTRAN)) {
    return 2LL;
  }
  if (CFEqual(a1, kCTCellMonitorRadioAccessTechnologyCDMA1x)) {
    return 3LL;
  }
  if (CFEqual(a1, kCTCellMonitorRadioAccessTechnologyCDMAEVDO)) {
    return 4LL;
  }
  if (CFEqual(a1, kCTCellMonitorRadioAccessTechnologyCDMAHybrid)) {
    return 5LL;
  }
  if (CFEqual(a1, kCTCellMonitorRadioAccessTechnologyUTRAN2)) {
    return 9LL;
  }
  if (CFEqual(a1, kCTCellMonitorRadioAccessTechnologyNR)) {
    return 10LL;
  }
  return 11LL;
}

uint64_t sub_1003D055C(const void *a1)
{
  if (CFEqual(a1, kCTCellMonitorCellTypeServing)) {
    return 0LL;
  }
  if (CFEqual(a1, kCTCellMonitorCellTypeNeighbor)) {
    return 1LL;
  }
  if (CFEqual(a1, kCTCellMonitorCellTypeDetected)) {
    return 2LL;
  }
  return 3LL;
}

BOOL sub_1003D05D4(CFDictionaryRef *a1, uint64_t a2)
{
  *(void *)(a2 + sub_1011C52D0(v16 - 72) = 0LL;
  *(void *)(a2 + 8sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0LL;
  *(void *)(a2 + 1sub_1011C52D0(v16 - 72) = 0LL;
  *(void *)(a2 + 164) = 0LL;
  *(_DWORD *)(a2 + 18sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0;
  *(void *)(a2 + 196) = 0LL;
  *(void *)(a2 + 212) = 0LL;
  *(void *)(a2 + 204) = 0LL;
  *(_BYTE *)(a2 + 22sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0;
  *(_DWORD *)(a2 + 6_Block_object_dispose((const void *)(v30 - 184), 8) = 0xFFFF;
  *(_OWORD *)(a2 + sub_1011C52D0(v16 - 88) = xmmword_1012E0070;
  __asm { FMOV            V1.2D, #-1.0 }

  *(_OWORD *)(a2 + 104) = _Q1;
  *(_OWORD *)(a2 + sub_1011C52D0(v9 - 120) = _Q1;
  *(_OWORD *)(a2 + 136) = _Q1;
  *(_DWORD *)(a2 + 152) = 0;
  *(void *)(a2 + 156) = 0xBFF0000000000000LL;
  *(void *)(a2 + 184) = 0xBFF0000000000000LL;
  *(_DWORD *)(a2 + 192) = 0x7FFFFFFF;
  *(void *)(a2 + 2sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 0x30000000BLL;
  *(void *)&__int128 v8 = -1LL;
  *((void *)&v8 + 1) = -1LL;
  *(void *)(a2 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = -1LL;
  *(_DWORD *)a2 = -1;
  *(_DWORD *)(a2 + 232) = -1;
  *(_DWORD *)(a2 + 56) = -1;
  *(_OWORD *)(a2 + 32) = v8;
  *(_DWORD *)(a2 + 376) = 0;
  *(void *)(a2 + 36sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0LL;
  *(void *)(a2 + 36_Block_object_dispose((const void *)(v30 - 184), 8) = 0LL;
  *(void *)(a2 + 40sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0LL;
  *(void *)(a2 + 40_Block_object_dispose((const void *)(v30 - 184), 8) = 0LL;
  *(void *)(a2 + 392) = 0LL;
  *(_BYTE *)(a2 + 416) = 0;
  *(_DWORD *)(a2 + 264) = 0xFFFF;
  *(void *)(a2 + 26_Block_object_dispose((const void *)(v30 - 184), 8) = 0LL;
  *(void *)(a2 + 276) = 0LL;
  *(_OWORD *)(a2 + 284) = xmmword_1012E0070;
  *(_OWORD *)(a2 + 30sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = _Q1;
  *(_OWORD *)(a2 + 316) = _Q1;
  *(_OWORD *)(a2 + 332) = _Q1;
  *(_DWORD *)(a2 + 34_Block_object_dispose((const void *)(v30 - 184), 8) = 0;
  *(void *)(a2 + 352) = 0xBFF0000000000000LL;
  *(void *)(a2 + 38sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0xBFF0000000000000LL;
  *(_DWORD *)(a2 + 3sub_1011C52D0(v16 - 88) = 0x7FFFFFFF;
  if (qword_101995638 != -1) {
    dispatch_once(&qword_101995638, &stru_101836100);
  }
  if (byte_101995640) {
    sub_1002B024C((uint64_t)v53, "cdmaCellFromCellMonitorDict");
  }
  if ((sub_1002A8874((uint64_t)v53, kCTCellMonitorCellRadioAccessTechnology, &cf) & 1) == 0)
  {
    *(_DWORD *)(a2 + 2sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 11;
LABEL_23:
    BOOL v10 = 1LL;
    goto LABEL_24;
  }

  if (!cf)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101836120);
    }
    unsigned int v14 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      LOWORD(buf[0].__r_.__value_.__l.__data_) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "Unsupported kCTCellMonitorCellRadioAccessTechnology, no cfstring",  (uint8_t *)buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101836120);
      }
      LOWORD(v59.__r_.__value_.__l.__data_) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Unsupported kCTCellMonitorCellRadioAccessTechnology, no cfstring",  &v59,  2);
      int v40 = (std::string *)v39;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLCellMonitor::cdmaCellFromCellMonitorDict(const CFDictionaryRef &, CLTelephonyService_Type::CdmaCell &)",  "%s\n",  v39);
      if (v40 != buf) {
        free(v40);
      }
    }

    goto LABEL_23;
  }

  *(_DWORD *)(a2 + 2sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = sub_1003D0424(cf);
  memset(&v59, 0, sizeof(v59));
  sub_1002AA05C((const __CFString *)cf, &v59);
  unsigned int v9 = *(_DWORD *)(a2 + 224) - 3;
  BOOL v10 = v9 < 3;
  if (v9 >= 3)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101836120);
    }
    double v11 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      double v12 = &v59;
      if ((v59.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        double v12 = (std::string *)v59.__r_.__value_.__r.__words[0];
      }
      int v13 = *(_DWORD *)(a2 + 224);
      LODWORD(buf[0].__r_.__value_.__l.__data_) = 136446466;
      *(std::string::size_type *)((char *)buf[0].__r_.__value_.__r.__words + 4) = (std::string::size_type)v12;
      WORD2(buf[0].__r_.__value_.__r.__words[1]) = 1026;
      *(_DWORD *)((char *)&buf[0].__r_.__value_.__r.__words[1] + 6) = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_FAULT,  "Unsupported kCTCellMonitorCellRadioAccessTechnology, it's not CDMA! %{public}s %{public}d",  (uint8_t *)buf,  0x12u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101836120);
      }
      char v43 = &v59;
      if ((v59.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        char v43 = (std::string *)v59.__r_.__value_.__r.__words[0];
      }
      int v44 = *(_DWORD *)(a2 + 224);
      int v54 = 136446466;
      BOOL v55 = v43;
      __int16 v56 = 1026;
      int v57 = v44;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Unsupported kCTCellMonitorCellRadioAccessTechnology, it's not CDMA! %{public}s %{public}d",  &v54,  18);
      int v46 = (std::string *)v45;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLCellMonitor::cdmaCellFromCellMonitorDict(const CFDictionaryRef &, CLTelephonyService_Type::CdmaCell &)",  "%s\n",  v45);
      if (v46 != buf) {
        free(v46);
      }
    }
  }

void sub_1003D1344( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

uint64_t sub_1003D13B8@<X0>(unsigned int *a1@<X0>, void *a2@<X8>)
{
  double v4 = sub_10000CF44(&v42, (uint64_t)"[", 1LL);
  unsigned int v5 = sub_10000CF44(v4, (uint64_t)" MCC=", 5LL);
  if (*((void *)a1 + 2) == *((void *)a1 + 1)) {
    double v6 = a1;
  }
  else {
    double v6 = (unsigned int *)*((void *)a1 + 1);
  }
  double v7 = (void *)std::ostream::operator<<(v5, *v6);
  __int128 v8 = sub_10000CF44(v7, (uint64_t)" Derived=", 9LL);
  uint64_t v9 = (void *)std::ostream::operator<<(v8, (uint64_t)(*((void *)a1 + 2) - *((void *)a1 + 1)) >> 2);
  BOOL v10 = sub_10000CF44(v9, (uint64_t)" AND SID=", 9LL);
  double v11 = (void *)std::ostream::operator<<(v10, a1[8]);
  double v12 = sub_10000CF44(v11, (uint64_t)" AND NID=", 9LL);
  int v13 = (void *)std::ostream::operator<<(v12, a1[9]);
  unsigned int v14 = sub_10000CF44(v13, (uint64_t)" AND BSID=", 10LL);
  double v15 = (void *)std::ostream::operator<<(v14, a1[11]);
  double v16 = sub_10000CF44(v15, (uint64_t)" AND ZONEID=", 12LL);
  double v17 = (void *)std::ostream::operator<<(v16, a1[10]);
  double v18 = sub_10000CF44(v17, (uint64_t)" AND PNOFFSET=", 14LL);
  CFAbsoluteTime v19 = (void *)std::ostream::operator<<(v18, a1[14]);
  double v20 = sub_10000CF44(v19, (uint64_t)" AND RSCP=", 10LL);
  double v21 = (void *)std::ostream::operator<<(v20, a1[15]);
  int v22 = sub_10000CF44(v21, (uint64_t)" AND ECN0=", 10LL);
  int v23 = (void *)std::ostream::operator<<(v22, a1[16]);
  int v24 = sub_10000CF44(v23, (uint64_t)" AND BANDCLASS=", 15LL);
  uint64_t v25 = (void *)std::ostream::operator<<(v24, a1[12]);
  int v26 = sub_10000CF44(v25, (uint64_t)" AND CHANNEL=", 13LL);
  uint64_t v27 = (void *)std::ostream::operator<<(v26, a1[13]);
  int v28 = sub_10000CF44(v27, (uint64_t)" AND SectorID='", 15LL);
  uint64_t v31 = *((void *)a1 + 30);
  uint64_t v30 = (uint64_t)(a1 + 60);
  uint64_t v29 = v31;
  int v32 = *(char *)(v30 + 23);
  if (v32 >= 0) {
    uint64_t v33 = v30;
  }
  else {
    uint64_t v33 = v29;
  }
  if (v32 >= 0) {
    uint64_t v34 = *(unsigned __int8 *)(v30 + 23);
  }
  else {
    uint64_t v34 = *(void *)(v30 + 8);
  }
  uint64_t v35 = sub_10000CF44(v28, v33, v34);
  uint64_t v36 = sub_10000CF44(v35, (uint64_t)"'", 1LL);
  sub_10000CF44(v36, (uint64_t)" ]", 2LL);
  std::stringbuf::str(&__p, &v43);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
  }
  sub_1010DDBC0(a2, (char *)p_p);
  *(void *)((char *)v41
  uint64_t v42 = v38;
  std::streambuf::~streambuf(&v43);
  return std::ios::~ios(&v44);
}

void sub_1003D1610( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a15);
  _Unwind_Resume(a1);
}

BOOL sub_1003D1640(CFDictionaryRef *a1, _DWORD *a2)
{
  *(void *)&__int128 v3 = -1LL;
  *((void *)&v3 + 1) = -1LL;
  *((_OWORD *)a2 + 1) = v3;
  *(_OWORD *)a2 = v3;
  if (qword_101995638 != -1) {
    dispatch_once(&qword_101995638, &stru_101836100);
  }
  if (byte_101995640) {
    sub_1002B024C((uint64_t)v13, "gsmCellFromCellMonitorDict");
  }
  sub_1002A7D20((uint64_t)v13, kCTCellMonitorMCC, a2);
  sub_1002A7D20((uint64_t)v13, kCTCellMonitorMNC, a2 + 1);
  sub_1002A7D20((uint64_t)v13, kCTCellMonitorLAC, a2 + 2);
  sub_1002A7D20((uint64_t)v13, kCTCellMonitorCellId, a2 + 3);
  sub_1002A7D20((uint64_t)v13, kCTCellMonitorUARFCN, a2 + 4);
  sub_1002A7D20((uint64_t)v13, kCTCellMonitorARFCN, a2 + 4);
  sub_1002A7D20((uint64_t)v13, kCTCellMonitorPSC, a2 + 5);
  sub_1002A7D20((uint64_t)v13, kCTCellMonitorSCN, a2 + 5);
  sub_1002A7D20((uint64_t)v13, kCTCellMonitorRSCP, a2 + 6);
  sub_1002A7D20((uint64_t)v13, kCTCellMonitorECN0, a2 + 7);
  BOOL v4 = 0LL;
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101836120);
  }
  unsigned int v5 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    sub_1003D1A48(a2, __p);
    double v6 = v22 >= 0 ? __p : (void **)__p[0];
    *(_DWORD *)uint64_t buf = 67109378;
    *(_DWORD *)&uint8_t buf[4] = v4;
    __int16 v15 = 2080;
    double v16 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: got cell from dict, result, %d, %s",  buf,  0x12u);
    if (v22 < 0) {
      operator delete(__p[0]);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101836120);
    }
    uint64_t v8 = qword_101934A78;
    sub_1003D1A48(a2, buf);
    if (v17 >= 0) {
      uint64_t v9 = buf;
    }
    else {
      uint64_t v9 = *(uint8_t **)buf;
    }
    v18[0] = 67109378;
    v18[1] = v4;
    __int16 v19 = 2080;
    double v20 = v9;
    LODWORD(v12) = 18;
    _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v8,  2LL,  "CELL_LOC: got cell from dict, result, %d, %s",  v18,  v12);
    double v11 = v10;
    if (v17 < 0) {
      operator delete(*(void **)buf);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCellMonitor::gsmCellFromCellMonitorDict(const CFDictionaryRef &, CLTelephonyService_Type::Cell &)",  "%s\n",  v11);
  }

  sub_1002A5590(v13);
  return v4;
}

void sub_1003D1A20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_1003D1A48@<X0>(unsigned int *a1@<X0>, void *a2@<X8>)
{
  BOOL v4 = sub_10000CF44(&v26, (uint64_t)"[", 1LL);
  unsigned int v5 = sub_10000CF44(v4, (uint64_t)" MCC=", 5LL);
  double v6 = (void *)std::ostream::operator<<(v5, *a1);
  double v7 = sub_10000CF44(v6, (uint64_t)" AND MNC=", 9LL);
  uint64_t v8 = (void *)std::ostream::operator<<(v7, a1[1]);
  uint64_t v9 = sub_10000CF44(v8, (uint64_t)" AND LAC=", 9LL);
  BOOL v10 = (void *)std::ostream::operator<<(v9, a1[2]);
  double v11 = sub_10000CF44(v10, (uint64_t)" AND CI=", 8LL);
  double v12 = (void *)std::ostream::operator<<(v11, a1[3]);
  int v13 = sub_10000CF44(v12, (uint64_t)" AND UARFCN=", 12LL);
  unsigned int v14 = (void *)std::ostream::operator<<(v13, a1[4]);
  __int16 v15 = sub_10000CF44(v14, (uint64_t)" AND PSC=", 9LL);
  double v16 = (void *)std::ostream::operator<<(v15, a1[5]);
  char v17 = sub_10000CF44(v16, (uint64_t)" AND RSCP=", 10LL);
  double v18 = (void *)std::ostream::operator<<(v17, a1[6]);
  __int16 v19 = sub_10000CF44(v18, (uint64_t)" AND ECN0=", 10LL);
  double v20 = (void *)std::ostream::operator<<(v19, a1[7]);
  sub_10000CF44(v20, (uint64_t)" ]", 2LL);
  std::stringbuf::str(&__p, &v27);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
  }
  sub_1010DDBC0(a2, (char *)p_p);
  *(void *)((char *)v25
  uint64_t v26 = v22;
  std::streambuf::~streambuf(&v27);
  return std::ios::~ios(&v28);
}

void sub_1003D1C04( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a15);
  _Unwind_Resume(a1);
}

BOOL sub_1003D1C34(CFDictionaryRef *a1, uint64_t a2)
{
  if (qword_101995638 != -1) {
    dispatch_once(&qword_101995638, &stru_101836100);
  }
  if (byte_101995640) {
    sub_1002B024C((uint64_t)v19, "lteCellFromCellMonitorDict");
  }
  *(_OWORD *)&__p[4] = 0uLL;
  *(void *)(a2 + _Block_object_dispose((const void *)(v30 - 184), 8) = -1LL;
  *(void *)(a2 + 16) = -1LL;
  *(_DWORD *)(a2 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = -1;
  *(void *)a2 = -1LL;
  *(_OWORD *)(a2 + 2_Block_object_dispose((const void *)(v30 - 184), 8) = *(_OWORD *)__p;
  int v3 = *(_DWORD *)&__p[16];
  *(void *)(a2 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = -1LL;
  *(void *)(a2 + 56) = -1LL;
  *(_DWORD *)(a2 + memset(v19, 0, 44) = v3;
  *(_DWORD *)(a2 + 64) = -1;
  *(_OWORD *)(a2 + 6_Block_object_dispose((const void *)(v30 - 184), 8) = xmmword_1012E6420;
  sub_1002A7D20((uint64_t)v19, kCTCellMonitorMCC, (_DWORD *)a2);
  sub_1002A7D20((uint64_t)v19, kCTCellMonitorMNC, (_DWORD *)(a2 + 4));
  sub_1002A7D20((uint64_t)v19, kCTCellMonitorTAC, (_DWORD *)(a2 + 8));
  sub_1002A7D20((uint64_t)v19, kCTCellMonitorCellId, (_DWORD *)(a2 + 12));
  sub_1002A7D20((uint64_t)v19, kCTCellMonitorUARFCN, (_DWORD *)(a2 + 16));
  sub_1002A8874((uint64_t)v19, kCTCellMonitorCellType, &cf1);
  if (CFEqual(cf1, kCTCellMonitorCellTypeServing)) {
    sub_1002A7D20((uint64_t)v19, kCTCellMonitorPID, (_DWORD *)(a2 + 20));
  }
  if (CFEqual(cf1, kCTCellMonitorCellTypeNeighbor)) {
    sub_1002A7D20((uint64_t)v19, kCTCellMonitorPCI, (_DWORD *)(a2 + 20));
  }
  sub_1002A7D20((uint64_t)v19, kCTCellMonitorRSRP, (_DWORD *)(a2 + 48));
  sub_1002A7D20((uint64_t)v19, kCTCellMonitorRSRQ, (_DWORD *)(a2 + 52));
  sub_1002A7D20((uint64_t)v19, kCTCellMonitorBandInfo, (_DWORD *)(a2 + 24));
  sub_1002A7D20((uint64_t)v19, kCTCellMonitorDeploymentType, (_DWORD *)(a2 + 56));
  sub_1002A7D20((uint64_t)v19, kCTCellMonitorBandwidth, (_DWORD *)(a2 + 60));
  sub_1002A7D20((uint64_t)v19, kCTCellMonitorNeighborType, (_DWORD *)(a2 + 80));
  sub_1002A7D20((uint64_t)v19, kCTCellMonitorPMax, (_DWORD *)(a2 + 64));
  sub_1002A7D20((uint64_t)v19, kCTCellMonitorThroughput, (_DWORD *)(a2 + 68));
  sub_1002A7D20((uint64_t)v19, kCTCellMonitorCsgId, (_DWORD *)(a2 + 76));
  sub_1002A7D20((uint64_t)v19, kCTCellMonitorCSGIndication, (_DWORD *)(a2 + 72));
  if (sub_1002A7D20((uint64_t)v19, kCTCellMonitorSectorLat, (_DWORD *)&v17 + 1))
  {
    if (sub_1002A7D20((uint64_t)v19, kCTCellMonitorSectorLong, &v17))
    {
      int v4 = v17;
      if (v17)
      {
        *(double *)(a2 + 32) = (double)SHIDWORD(v17) * 0.0000694444444;
        *(double *)(a2 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = (double)v4 * 0.0000694444444;
      }
    }
  }

  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101836140);
  }
  unsigned int v5 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    sub_1003D2324((unsigned int *)a2, __p);
    double v6 = v25 >= 0 ? __p : *(_BYTE **)__p;
    *(_DWORD *)uint64_t buf = 136315138;
    *(void *)&uint8_t buf[4] = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "lteCell populated from CT: %s", buf, 0xCu);
    if (v25 < 0) {
      operator delete(*(void **)__p);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101836140);
    }
    uint64_t v11 = qword_101934858;
    sub_1003D2324((unsigned int *)a2, buf);
    if (v21 >= 0) {
      double v12 = buf;
    }
    else {
      double v12 = *(_BYTE **)buf;
    }
    int v22 = 136315138;
    int v23 = v12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v11,  2LL,  "lteCell populated from CT: %s",  (const char *)&v22);
    unsigned int v14 = v13;
    if (v21 < 0) {
      operator delete(*(void **)buf);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCellMonitor::lteCellFromCellMonitorDict(const CFDictionaryRef &, CLTelephonyService_Type::LteCell &)",  "%s\n",  v14);
    if (v14 != __p) {
      free(v14);
    }
  }

  BOOL v8 = *(int *)a2 > 0 && *(int *)(a2 + 4) >= 0;
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101836140);
  }
  uint64_t v9 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::stringbuf::string_type __p = 67109120;
    *(_DWORD *)&__p[4] = v8;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "lteCell is valid from CT: %d", __p, 8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101836140);
    }
    *(_DWORD *)uint64_t buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = v8;
    _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "lteCell is valid from CT: %d",  buf);
    double v16 = (char *)v15;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCellMonitor::lteCellFromCellMonitorDict(const CFDictionaryRef &, CLTelephonyService_Type::LteCell &)",  "%s\n",  v15);
    if (v16 != __p) {
      free(v16);
    }
  }

  sub_1002A5590(v19);
  return v8;
}

void sub_1003D22F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
}

uint64_t sub_1003D2324@<X0>(unsigned int *a1@<X0>, void *a2@<X8>)
{
  int v4 = sub_10000CF44(&v32, (uint64_t)"[", 1LL);
  unsigned int v5 = sub_10000CF44(v4, (uint64_t)" MCC=", 5LL);
  double v6 = (void *)std::ostream::operator<<(v5, *a1);
  double v7 = sub_10000CF44(v6, (uint64_t)" AND MNC=", 9LL);
  BOOL v8 = (void *)std::ostream::operator<<(v7, a1[1]);
  uint64_t v9 = sub_10000CF44(v8, (uint64_t)" AND TAC=", 9LL);
  BOOL v10 = (void *)std::ostream::operator<<(v9, a1[2]);
  uint64_t v11 = sub_10000CF44(v10, (uint64_t)" AND CI=", 8LL);
  double v12 = (void *)std::ostream::operator<<(v11, a1[3]);
  int v13 = sub_10000CF44(v12, (uint64_t)" AND UARFCN=", 12LL);
  unsigned int v14 = (void *)std::ostream::operator<<(v13, a1[4]);
  __int16 v15 = sub_10000CF44(v14, (uint64_t)" AND PID=", 9LL);
  double v16 = (void *)std::ostream::operator<<(v15, a1[5]);
  uint64_t v17 = sub_10000CF44(v16, (uint64_t)" AND RSCP=", 10LL);
  double v18 = (void *)std::ostream::operator<<(v17, a1[12]);
  __int16 v19 = sub_10000CF44(v18, (uint64_t)" AND ECN0=", 10LL);
  double v20 = (void *)std::ostream::operator<<(v19, a1[13]);
  char v21 = sub_10000CF44(v20, (uint64_t)" AND BANDINFO=", 14LL);
  int v22 = (void *)std::ostream::operator<<(v21, a1[6]);
  int v23 = sub_10000CF44(v22, (uint64_t)" AND DEPLOYMENTTYPE=", 20LL);
  int v24 = (void *)std::ostream::operator<<(v23, a1[14]);
  char v25 = sub_10000CF44(v24, (uint64_t)" AND BANDWIDTH=", 15LL);
  uint64_t v26 = (void *)std::ostream::operator<<(v25, a1[15]);
  sub_10000CF44(v26, (uint64_t)" ]", 2LL);
  std::stringbuf::str(&__p, &v33);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
  }
  sub_1010DDBC0(a2, (char *)p_p);
  *(void *)((char *)v31
  uint64_t v32 = v28;
  std::streambuf::~streambuf(&v33);
  return std::ios::~ios(&v34);
}

void sub_1003D2528( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a15);
  _Unwind_Resume(a1);
}

BOOL sub_1003D2558(CFDictionaryRef *a1, uint64_t a2)
{
  if (qword_101995638 != -1) {
    dispatch_once(&qword_101995638, &stru_101836100);
  }
  if (byte_101995640) {
    sub_1002B024C((uint64_t)v18, "nrCellFromCellMonitorDict");
  }
  *(_OWORD *)&__p[4] = 0uLL;
  *(void *)(a2 + 64) = -1LL;
  *(void *)(a2 + sub_1011C52D0(v16 - 72) = -1LL;
  *(_DWORD *)(a2 + _Block_object_dispose((const void *)(v30 - 184), 8) = -1;
  *(void *)(a2 + 16) = -1LL;
  *(void *)(a2 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = -1LL;
  *(_DWORD *)(a2 + 32) = -1;
  *(void *)a2 = -1LL;
  *(_OWORD *)(a2 + 36) = *(_OWORD *)__p;
  *(_DWORD *)(a2 + 52) = *(_DWORD *)&__p[16];
  *(void *)(a2 + 56) = -1LL;
  *(void *)(a2 + 8sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0xFFFFFFFF00000000LL;
  *(_DWORD *)(a2 + sub_1011C52D0(v16 - 88) = -1;
  sub_1002A7D20((uint64_t)v18, kCTCellMonitorMCC, (_DWORD *)a2);
  sub_1002A7D20((uint64_t)v18, kCTCellMonitorMNC, (_DWORD *)(a2 + 4));
  sub_1002A7D20((uint64_t)v18, kCTCellMonitorTAC, (_DWORD *)(a2 + 8));
  sub_1002A7A7C((uint64_t)v18, kCTCellMonitorCellId, (void *)(a2 + 16));
  sub_1002A7D20((uint64_t)v18, kCTCellMonitorNRARFCN, (_DWORD *)(a2 + 24));
  sub_1002A8874((uint64_t)v18, kCTCellMonitorCellType, &cf1);
  if (CFEqual(cf1, kCTCellMonitorCellTypeServing)) {
    sub_1002A7D20((uint64_t)v18, kCTCellMonitorPID, (_DWORD *)(a2 + 28));
  }
  if (CFEqual(cf1, kCTCellMonitorCellTypeNeighbor)) {
    sub_1002A7D20((uint64_t)v18, kCTCellMonitorPCI, (_DWORD *)(a2 + 28));
  }
  sub_1002A7D20((uint64_t)v18, kCTCellMonitorRSRP, (_DWORD *)(a2 + 56));
  sub_1002A7D20((uint64_t)v18, kCTCellMonitorRSRQ, (_DWORD *)(a2 + 60));
  sub_1002A7D20((uint64_t)v18, kCTCellMonitorBandInfo, (_DWORD *)(a2 + 32));
  sub_1002A7D20((uint64_t)v18, kCTCellMonitorSCS, (_DWORD *)(a2 + 64));
  sub_1002A7D20((uint64_t)v18, kCTCellMonitorGSCN, (_DWORD *)(a2 + 68));
  sub_1002A7D20((uint64_t)v18, kCTCellMonitorBandwidth, (_DWORD *)(a2 + 72));
  sub_1002A7D20((uint64_t)v18, kCTCellMonitorNeighborType, (_DWORD *)(a2 + 84));
  sub_1002A7D20((uint64_t)v18, kCTCellMonitorPMax, (_DWORD *)(a2 + 76));
  sub_1002A7D20((uint64_t)v18, kCTCellMonitorThroughput, (_DWORD *)(a2 + 80));
  sub_1002A7D20((uint64_t)v18, kCTCellMonitorBWPSupport, (_DWORD *)(a2 + 88));
  if (sub_1002A7D20((uint64_t)v18, kCTCellMonitorSectorLat, (_DWORD *)&v16 + 1))
  {
    if (sub_1002A7D20((uint64_t)v18, kCTCellMonitorSectorLong, &v16))
    {
      int v3 = v16;
      if (v16)
      {
        *(double *)(a2 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = (double)SHIDWORD(v16) * 0.0000694444444;
        *(double *)(a2 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = (double)v3 * 0.0000694444444;
      }
    }
  }

  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101836140);
  }
  int v4 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    sub_1003D2C58((unsigned int *)a2, __p);
    unsigned int v5 = v24 >= 0 ? __p : *(_BYTE **)__p;
    *(_DWORD *)uint64_t buf = 136315138;
    *(void *)&uint8_t buf[4] = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "nrCell populated from CT: %s", buf, 0xCu);
    if (v24 < 0) {
      operator delete(*(void **)__p);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101836140);
    }
    uint64_t v10 = qword_101934858;
    sub_1003D2C58((unsigned int *)a2, buf);
    if (v20 >= 0) {
      uint64_t v11 = buf;
    }
    else {
      uint64_t v11 = *(_BYTE **)buf;
    }
    int v21 = 136315138;
    int v22 = v11;
    _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v10,  2LL,  "nrCell populated from CT: %s",  (const char *)&v21);
    int v13 = v12;
    if (v20 < 0) {
      operator delete(*(void **)buf);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCellMonitor::nrCellFromCellMonitorDict(const CFDictionaryRef &, CLTelephonyService_Type::NrCell &)",  "%s\n",  v13);
    if (v13 != __p) {
      free(v13);
    }
  }

  BOOL v7 = *(int *)a2 > 0 && *(int *)(a2 + 4) >= 0;
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101836140);
  }
  BOOL v8 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::stringbuf::string_type __p = 67109120;
    *(_DWORD *)&__p[4] = v7;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "nrCell is valid from CT: %d", __p, 8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101836140);
    }
    *(_DWORD *)uint64_t buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = v7;
    _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "nrCell is valid from CT: %d",  buf);
    __int16 v15 = (char *)v14;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCellMonitor::nrCellFromCellMonitorDict(const CFDictionaryRef &, CLTelephonyService_Type::NrCell &)",  "%s\n",  v14);
    if (v15 != __p) {
      free(v15);
    }
  }

  sub_1002A5590(v18);
  return v7;
}

void sub_1003D2C24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
}

uint64_t sub_1003D2C58@<X0>(unsigned int *a1@<X0>, void *a2@<X8>)
{
  int v4 = sub_10000CF44(&v34, (uint64_t)"[", 1LL);
  unsigned int v5 = sub_10000CF44(v4, (uint64_t)" MCC=", 5LL);
  double v6 = (void *)std::ostream::operator<<(v5, *a1);
  BOOL v7 = sub_10000CF44(v6, (uint64_t)" AND MNC=", 9LL);
  BOOL v8 = (void *)std::ostream::operator<<(v7, a1[1]);
  uint64_t v9 = sub_10000CF44(v8, (uint64_t)" AND TAC=", 9LL);
  uint64_t v10 = (void *)std::ostream::operator<<(v9, a1[2]);
  uint64_t v11 = sub_10000CF44(v10, (uint64_t)" AND CI=", 8LL);
  double v12 = (void *)std::ostream::operator<<(v11, *((void *)a1 + 2));
  int v13 = sub_10000CF44(v12, (uint64_t)" AND NRARFCN=", 13LL);
  unsigned int v14 = (void *)std::ostream::operator<<(v13, a1[6]);
  __int16 v15 = sub_10000CF44(v14, (uint64_t)" AND PID=", 9LL);
  uint64_t v16 = (void *)std::ostream::operator<<(v15, a1[7]);
  uint64_t v17 = sub_10000CF44(v16, (uint64_t)" AND RSCP=", 10LL);
  double v18 = (void *)std::ostream::operator<<(v17, a1[14]);
  __int16 v19 = sub_10000CF44(v18, (uint64_t)" AND ECN0=", 10LL);
  char v20 = (void *)std::ostream::operator<<(v19, a1[15]);
  int v21 = sub_10000CF44(v20, (uint64_t)" AND BANDINFO=", 14LL);
  int v22 = (void *)std::ostream::operator<<(v21, a1[8]);
  int v23 = sub_10000CF44(v22, (uint64_t)" AND SCS=", 9LL);
  char v24 = (void *)std::ostream::operator<<(v23, a1[16]);
  char v25 = sub_10000CF44(v24, (uint64_t)" AND GSCN=", 10LL);
  uint64_t v26 = (void *)std::ostream::operator<<(v25, a1[17]);
  std::stringbuf v27 = sub_10000CF44(v26, (uint64_t)" AND BANDWIDTH=", 15LL);
  uint64_t v28 = (void *)std::ostream::operator<<(v27, a1[18]);
  sub_10000CF44(v28, (uint64_t)" ]", 2LL);
  std::stringbuf::str(&__p, &v35);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
  }
  sub_1010DDBC0(a2, (char *)p_p);
  *(void *)((char *)v33
  uint64_t v34 = v30;
  std::streambuf::~streambuf(&v35);
  return std::ios::~ios(&v36);
}

void sub_1003D2E74( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a15);
  _Unwind_Resume(a1);
}

BOOL sub_1003D2EA4(CFDictionaryRef *a1, _DWORD *a2)
{
  *(void *)&__int128 v3 = -1LL;
  *((void *)&v3 + 1) = -1LL;
  *((_OWORD *)a2 + 1) = v3;
  *(_OWORD *)a2 = v3;
  if (qword_101995638 != -1) {
    dispatch_once(&qword_101995638, &stru_101836100);
  }
  if (byte_101995640) {
    sub_1002B024C((uint64_t)v13, "scdmaCellFromCellMonitorDict");
  }
  sub_1002A7D20((uint64_t)v13, kCTCellMonitorMCC, a2);
  sub_1002A7D20((uint64_t)v13, kCTCellMonitorMNC, a2 + 1);
  sub_1002A7D20((uint64_t)v13, kCTCellMonitorLAC, a2 + 2);
  sub_1002A7D20((uint64_t)v13, kCTCellMonitorCellId, a2 + 3);
  sub_1002A7D20((uint64_t)v13, kCTCellMonitorUARFCN, a2 + 4);
  sub_1002A7D20((uint64_t)v13, kCTCellMonitorARFCN, a2 + 4);
  sub_1002A7D20((uint64_t)v13, kCTCellMonitorPSC, a2 + 5);
  sub_1002A7D20((uint64_t)v13, kCTCellMonitorSCN, a2 + 5);
  sub_1002A7D20((uint64_t)v13, kCTCellMonitorRSCP, a2 + 6);
  sub_1002A7D20((uint64_t)v13, kCTCellMonitorECN0, a2 + 7);
  BOOL v4 = 0LL;
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101836120);
  }
  unsigned int v5 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    sub_1003D1A48(a2, __p);
    double v6 = v22 >= 0 ? __p : (void **)__p[0];
    *(_DWORD *)uint64_t buf = 67109378;
    *(_DWORD *)&uint8_t buf[4] = v4;
    __int16 v15 = 2080;
    uint64_t v16 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: got cell from dict, result, %d, %s",  buf,  0x12u);
    if (v22 < 0) {
      operator delete(__p[0]);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101836120);
    }
    uint64_t v8 = qword_101934A78;
    sub_1003D1A48(a2, buf);
    if (v17 >= 0) {
      uint64_t v9 = buf;
    }
    else {
      uint64_t v9 = *(uint8_t **)buf;
    }
    v18[0] = 67109378;
    v18[1] = v4;
    __int16 v19 = 2080;
    char v20 = v9;
    LODWORD(v12) = 18;
    _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v8,  2LL,  "CELL_LOC: got cell from dict, result, %d, %s",  v18,  v12);
    uint64_t v11 = v10;
    if (v17 < 0) {
      operator delete(*(void **)buf);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCellMonitor::scdmaCellFromCellMonitorDict(const CFDictionaryRef &, CLTelephonyService_Type::ScdmaCell &)",  "%s\n",  v11);
  }

  sub_1002A5590(v13);
  return v4;
}

void sub_1003D3284(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

const char *sub_1003D32AC(unsigned int a1)
{
  if (a1 > 0xB) {
    return "Invalid";
  }
  else {
    return (&off_101836180)[a1];
  }
}

void sub_1003D32D0(id a1)
{
  char v1 = sub_1002A6F64(v6, "printCellMonitorCSV", &v8);
  if (v8) {
    char v2 = v1;
  }
  else {
    char v2 = 0;
  }
  byte_101995640 = v2;
  __int128 v3 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      unint64_t v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }

void sub_1003D335C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_1003D3370(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

void sub_1003D339C(id a1)
{
  qword_101934858 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

double sub_1003D33C8(uint64_t a1)
{
  *(void *)(a1 + 32) = 0LL;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

double sub_1003D33D8(int *a1)
{
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_1018361E0);
  }
  char v2 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    int v3 = *a1;
    int v4 = a1[1];
    int v5 = a1[2];
    int v6 = a1[3];
    int v7 = a1[4];
    int v8 = a1[5];
    int v9 = a1[6];
    double v10 = (double)a1[7] * 0.0009765625;
    int v11 = a1[8];
    double v12 = (double)a1[9] * 0.0009765625;
    *(_DWORD *)uint64_t buf = 67242496;
    int v47 = v3;
    __int16 v48 = 1026;
    int v49 = v4;
    __int16 v50 = 1026;
    int v51 = v5;
    __int16 v52 = 1026;
    int v53 = v6;
    __int16 v54 = 1026;
    int v55 = v7;
    __int16 v56 = 1026;
    int v57 = v8;
    __int16 v58 = 1026;
    int v59 = v9;
    __int16 v60 = 2050;
    double v61 = v10;
    __int16 v62 = 1026;
    int v63 = v11;
    __int16 v64 = 2050;
    double v65 = v12;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "UclpMetric, celltileusage, attempts, %{public}d, als, %{public}d, tiles, %{public}d, unknown, %{public}d, alsreq, %{public}d, alscells, %{public}d, nCurrent, %{public}d, kbCurrent, %{public}.1f, nNeighbor, %{public}d, kbNeighbor, %{public}.01f",  buf,  0x46u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018361E0);
    }
    int v14 = *a1;
    int v15 = a1[1];
    int v16 = a1[2];
    int v17 = a1[3];
    int v18 = a1[4];
    int v19 = a1[5];
    int v20 = a1[6];
    double v21 = (double)a1[7] * 0.0009765625;
    int v22 = a1[8];
    double v23 = (double)a1[9] * 0.0009765625;
    v27[0] = 67242496;
    v27[1] = v14;
    __int16 v28 = 1026;
    int v29 = v15;
    __int16 v30 = 1026;
    int v31 = v16;
    __int16 v32 = 1026;
    int v33 = v17;
    __int16 v34 = 1026;
    int v35 = v18;
    __int16 v36 = 1026;
    int v37 = v19;
    __int16 v38 = 1026;
    int v39 = v20;
    __int16 v40 = 2050;
    double v41 = v21;
    __int16 v42 = 1026;
    int v43 = v22;
    __int16 v44 = 2050;
    double v45 = v23;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "UclpMetric, celltileusage, attempts, %{public}d, als, %{public}d, tiles, %{public}d, unknown, %{public}d, alsreq, %{public}d, alscells, %{public}d, nCurrent, %{public}d, kbCurrent, %{public}.1f, nNeighbor, %{public}d, kbNeighbor, %{public}.01f",  v27,  70);
    char v25 = (uint8_t *)v24;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLCellLocationMetrics::sendMetrics()", "%s\n", v24);
    if (v25 != buf) {
      free(v25);
    }
  }

  v26[0] = _NSConcreteStackBlock;
  v26[1] = 3221225472LL;
  void v26[2] = sub_1003D36BC;
  v26[3] = &unk_101820718;
  v26[4] = a1;
  *(void *)&double result = AnalyticsSendEventLazy(@"com.apple.clx.cellloc.celltileusage", v26).n128_u64[0];
  return result;
}

NSDictionary *sub_1003D36BC(uint64_t a1)
{
  char v1 = *(unsigned int **)(a1 + 32);
  v36[0] = @"attempts";
  unsigned int v2 = *v1;
  int v3 = 1;
  if ((int)*v1 >= 101)
  {
    unsigned int v4 = *v1;
    do
    {
      unsigned int v2 = v4 / 0xA;
      v3 *= 10;
      BOOL v5 = v4 > 0x3F1;
      v4 /= 0xAu;
    }

    while (v5);
  }

  v37[0] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v3 * v2);
  v36[1] = @"als";
  signed int v6 = v1[1];
  int v7 = 1;
  if (v6 >= 101)
  {
    unsigned int v8 = v1[1];
    do
    {
      signed int v6 = v8 / 0xA;
      v7 *= 10;
      BOOL v5 = v8 > 0x3F1;
      v8 /= 0xAu;
    }

    while (v5);
  }

  v37[1] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", (v7 * v6));
  void v36[2] = @"tiles";
  signed int v9 = v1[2];
  int v10 = 1;
  if (v9 >= 101)
  {
    unsigned int v11 = v1[2];
    do
    {
      signed int v9 = v11 / 0xA;
      v10 *= 10;
      BOOL v5 = v11 > 0x3F1;
      v11 /= 0xAu;
    }

    while (v5);
  }

  v37[2] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", (v10 * v9));
  v36[3] = @"unknown";
  signed int v12 = v1[3];
  int v13 = 1;
  if (v12 >= 101)
  {
    unsigned int v14 = v1[3];
    do
    {
      signed int v12 = v14 / 0xA;
      v13 *= 10;
      BOOL v5 = v14 > 0x3F1;
      v14 /= 0xAu;
    }

    while (v5);
  }

  v37[3] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", (v13 * v12));
  v36[4] = @"alsrequests";
  signed int v15 = v1[4];
  int v16 = 1;
  if (v15 >= 101)
  {
    unsigned int v17 = v1[4];
    do
    {
      signed int v15 = v17 / 0xA;
      v16 *= 10;
      BOOL v5 = v17 > 0x3F1;
      v17 /= 0xAu;
    }

    while (v5);
  }

  v37[4] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", (v16 * v15));
  v36[5] = @"alsreturned";
  signed int v18 = v1[5];
  int v19 = 1;
  if (v18 >= 101)
  {
    unsigned int v20 = v1[5];
    do
    {
      signed int v18 = v20 / 0xA;
      v19 *= 10;
      BOOL v5 = v20 > 0x3F1;
      v20 /= 0xAu;
    }

    while (v5);
  }

  v37[5] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", (v19 * v18));
  v36[6] = @"numdownloadcurrent";
  signed int v21 = v1[6];
  int v22 = 1;
  if (v21 >= 101)
  {
    unsigned int v23 = v1[6];
    do
    {
      signed int v21 = v23 / 0xA;
      v22 *= 10;
      BOOL v5 = v23 > 0x3F1;
      v23 /= 0xAu;
    }

    while (v5);
  }

  v37[6] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", (v22 * v21));
  v36[7] = @"kbcurrent";
  int v24 = v1[7];
  unsigned int v25 = v24 / 1024;
  if (v24 <= 103423)
  {
    int v26 = 1;
  }

  else
  {
    int v26 = 1;
    unsigned int v27 = v25;
    do
    {
      unsigned int v25 = v27 / 0xA;
      v26 *= 10;
      BOOL v5 = v27 > 0x3F1;
      v27 /= 0xAu;
    }

    while (v5);
  }

  v37[7] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v26 * v25);
  v36[8] = @"numdownloadneighbor";
  signed int v28 = v1[8];
  int v29 = 1;
  if (v28 >= 101)
  {
    unsigned int v30 = v1[8];
    do
    {
      signed int v28 = v30 / 0xA;
      v29 *= 10;
      BOOL v5 = v30 > 0x3F1;
      v30 /= 0xAu;
    }

    while (v5);
  }

  v37[8] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", (v29 * v28));
  v36[9] = @"kbneighbor";
  int v31 = v1[9];
  unsigned int v32 = v31 / 1024;
  if (v31 <= 103423)
  {
    int v33 = 1;
  }

  else
  {
    int v33 = 1;
    unsigned int v34 = v32;
    do
    {
      unsigned int v32 = v34 / 0xA;
      v33 *= 10;
      BOOL v5 = v34 > 0x3F1;
      v34 /= 0xAu;
    }

    while (v5);
  }

  v37[9] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v33 * v32);
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v37,  v36,  10LL);
}

void sub_1003D3AB0(int *a1, int a2, int a3, int a4)
{
  int v5 = a1[1] + a2;
  ++*a1;
  a1[1] = v5;
  int v6 = a1[3] + a4;
  a1[2] += a3;
  a1[3] = v6;
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_1018361E0);
  }
  int v7 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    int v8 = *a1;
    int v9 = a1[1];
    int v10 = a1[2];
    int v11 = a1[3];
    *(_DWORD *)uint64_t buf = 67240960;
    int v26 = v8;
    __int16 v27 = 1026;
    int v28 = v9;
    __int16 v29 = 1026;
    int v30 = v10;
    __int16 v31 = 1026;
    int v32 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "@Celltileusage, attempt, %{public}d, als, %{public}d, tiles, %{public}d, unknown, %{public}d",  buf,  0x1Au);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018361E0);
    }
    int v12 = *a1;
    int v13 = a1[1];
    int v14 = a1[2];
    int v15 = a1[3];
    v18[0] = 67240960;
    v18[1] = v12;
    __int16 v19 = 1026;
    int v20 = v13;
    __int16 v21 = 1026;
    int v22 = v14;
    __int16 v23 = 1026;
    int v24 = v15;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "@Celltileusage, attempt, %{public}d, als, %{public}d, tiles, %{public}d, unknown, %{public}d",  v18,  26);
    unsigned int v17 = (uint8_t *)v16;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellLocationMetrics::locationAttempt(int, int, int, CFAbsoluteTime)",  "%s\n",  v16);
    if (v17 != buf) {
      free(v17);
    }
  }

void sub_1003D3CC0(uint64_t a1, int a2)
{
  int v3 = *(_DWORD *)(a1 + 20) + a2;
  ++*(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 2sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v3;
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_1018361E0);
  }
  unsigned int v4 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    int v5 = *(_DWORD *)(a1 + 16);
    int v6 = *(_DWORD *)(a1 + 20);
    *(_DWORD *)uint64_t buf = 67240448;
    int v15 = v5;
    __int16 v16 = 1026;
    int v17 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "@Celltileusage, als, %{public}d, cells, %{public}d",  buf,  0xEu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018361E0);
    }
    int v7 = *(_DWORD *)(a1 + 16);
    int v8 = *(_DWORD *)(a1 + 20);
    v11[0] = 67240448;
    v11[1] = v7;
    __int16 v12 = 1026;
    int v13 = v8;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "@Celltileusage, als, %{public}d, cells, %{public}d",  v11,  14);
    int v10 = (uint8_t *)v9;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLCellLocationMetrics::alsReply(int, CFAbsoluteTime)", "%s\n", v9);
    if (v10 != buf) {
      free(v10);
    }
  }

void sub_1003D3E98(_DWORD *a1, int a2, int a3)
{
  if (a2)
  {
    ++a1[6];
    int v6 = a1 + 7;
  }

  else
  {
    ++a1[8];
    int v6 = a1 + 9;
  }

  *v6 += a3;
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_1018361E0);
  }
  int v7 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_INFO))
  {
    int v8 = a1[6];
    int v9 = a1[8];
    double v10 = (double)(int)a1[7] * 0.0009765625;
    double v11 = (double)(int)a1[9] * 0.0009765625;
    *(_DWORD *)uint64_t buf = 67241472;
    int v30 = a2;
    __int16 v31 = 1026;
    int v32 = a3;
    __int16 v33 = 1026;
    int v34 = v8;
    __int16 v35 = 2050;
    double v36 = v10;
    __int16 v37 = 1026;
    int v38 = v9;
    __int16 v39 = 2050;
    double v40 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_INFO,  "@Celltileusage, download, isCurrent, %{public}d, size, %{public}d, nCurrent, %{public}d, kbCurrent, %{public}.1f, nNeighbor, %{public}d, kbNeighbor, %{public}.01f",  buf,  0x2Eu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018361E0);
    }
    int v12 = a1[6];
    int v13 = a1[8];
    double v14 = (double)(int)a1[7] * 0.0009765625;
    double v15 = (double)(int)a1[9] * 0.0009765625;
    v18[0] = 67241472;
    v18[1] = a2;
    __int16 v19 = 1026;
    int v20 = a3;
    __int16 v21 = 1026;
    int v22 = v12;
    __int16 v23 = 2050;
    double v24 = v14;
    __int16 v25 = 1026;
    int v26 = v13;
    __int16 v27 = 2050;
    double v28 = v15;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  1LL,  "@Celltileusage, download, isCurrent, %{public}d, size, %{public}d, nCurrent, %{public}d, kbCurrent, %{public}.1f, nNeighbor, %{public}d, kbNeighbor, %{public}.01f",  v18,  46);
    int v17 = (uint8_t *)v16;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellLocationMetrics::tileDownloaded(BOOL, int, CFAbsoluteTime)",  "%s\n",  v16);
    if (v17 != buf) {
      free(v17);
    }
  }

void sub_1003D4124(id a1)
{
  qword_101934858 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

void sub_1003D4150(uint64_t a1@<X8>)
{
  *(void *)a1 = 0x100000003LL;
  *(_WORD *)(a1 + _Block_object_dispose((const void *)(v30 - 184), 8) = 0;
  unsigned int v2 = (_BYTE *)(a1 + 16);
  if (SHIBYTE(v5) < 0)
  {
    sub_1010DD48C(v2, __p[0], (unint64_t)__p[1]);
    int v3 = SHIBYTE(v5);
    *(void *)(a1 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0LL;
    if (v3 < 0) {
      operator delete(__p[0]);
    }
  }

  else
  {
    *(_OWORD *)unsigned int v2 = *(_OWORD *)__p;
    *(void *)(a1 + 32) = v5;
    *(void *)(a1 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0LL;
  }

void sub_1003D41D4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003D41F0(uint64_t a1)
{
  if (v5 < 0) {
    operator delete(__p);
  }
  return a1;
}

void sub_1003D4244( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003D4260(uint64_t a1, uint64_t a2)
{
  return sub_1003D426C(a1, a2, (const char **)&off_101836200);
}

uint64_t sub_1003D426C(uint64_t a1, uint64_t a2, const char **a3)
{
  uint64_t v5 = sub_1003B35F4(a1, a2);
  if (sub_1003C1048(v5))
  {
    sub_1003B59A0(a1, "Status", a3, 0LL, 0);
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101836290);
    }
    int v6 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_FAULT, "Fence: No access to state DB", buf, 2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101836290);
      }
      v10[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  17LL,  "Fence: No access to state DB",  v10,  2);
      int v9 = (uint8_t *)v8;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "CLFenceMonitorDatabase::CLFenceMonitorDatabase(const CLSqliteDatabase::SqliteProperties &, const CLSqliteDatabas e::ColumnInfo *)",  "%s\n",  v8);
      if (v9 != buf) {
        free(v9);
      }
    }
  }

  return a1;
}

void sub_1003D4430(_Unwind_Exception *a1)
{
}

void sub_1003D444C(uint64_t a1)
{
  if (sub_1003C1048(a1))
  {
    sub_10000CE18((uint64_t)buf);
    unsigned int v2 = sub_10000CF44(&v14, (uint64_t)"DELETE FROM ", 12LL);
    sub_10000CF44(v2, (uint64_t)"Status", 6LL);
    std::stringbuf::str(&v11, &v15);
    if ((v11.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      int v3 = &v11;
    }
    else {
      int v3 = (std::stringbuf::string_type *)v11.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(a1, (char *)v3, &v12);
    uint64_t v4 = v12;
    uint64_t v12 = 0LL;
    uint64_t v5 = (sqlite3_stmt *)sub_100019240(v4);
    sub_1003BB2BC(a1, v5);
    else {
      uint64_t v6 = *(void *)(a1 + 88);
    }
    sub_1003C1EC0(a1, v6);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
    }
    uint64_t v14 = v7;
    std::streambuf::~streambuf(&v15);
    std::ios::~ios(&v16);
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101836290);
    }
    int v8 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_FAULT, "Fence: state No access to DB", buf, 2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101836290);
      }
      LOWORD(v11.__r_.__value_.__l.__data_) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  17LL,  "Fence: state No access to DB",  &v11,  2);
      double v10 = (uint8_t *)v9;
      sub_10029211C("Generic", 1LL, 0, 0LL, "void CLFenceMonitorDatabase::clearLocationData()", "%s\n", v9);
      if (v10 != buf) {
        free(v10);
      }
    }
  }

void sub_1003D46F8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, char a18)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a18);
  _Unwind_Resume(a1);
}

uint64_t sub_1003D474C(uint64_t a1, uint64_t a2, unsigned int a3)
{
  if (!sub_1003C1048(a1))
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101836290);
    }
    int v9 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_FAULT, "Fence: state No access to DB", buf, 2u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101836290);
    }
    *(_WORD *)std::stringbuf::string_type __p = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  17LL,  "Fence: state No access to DB",  __p,  2);
    int v8 = (char *)v31;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLFenceMonitorDatabase::storeFenceState(const CLFenceManager_Type::Fence &, CLFenceManager_Type::FenceStatus)",  "%s\n",  v31);
    goto LABEL_55;
  }

  if (a3 >= 2)
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101836290);
    }
    uint64_t v6 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_FAULT, "Fence: state Invalid for DB", buf, 2u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101836290);
    }
    *(_WORD *)std::stringbuf::string_type __p = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  17LL,  "Fence: state Invalid for DB",  __p,  2);
    int v8 = (char *)v7;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLFenceMonitorDatabase::storeFenceState(const CLFenceManager_Type::Fence &, CLFenceManager_Type::FenceStatus)",  "%s\n",  v7);
LABEL_55:
    if (v8 != buf) {
      free(v8);
    }
    return 0LL;
  }

  sqlite3_int64 v11 = sub_100924068(a2);
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101836290);
  }
  uint64_t v12 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    sub_100923668(a2, (std::stringbuf::string_type *)__p);
    int v13 = v47[9] >= 0 ? __p : *(_BYTE **)__p;
    *(_DWORD *)uint64_t buf = 134284035;
    *(void *)&uint8_t buf[4] = v11;
    __int16 v53 = 1025;
    *(_DWORD *)__int16 v54 = a3;
    *(_WORD *)&v54[4] = 2081;
    *(void *)&v54[6] = v13;
    _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "Fence: state store, %{private}lld, %{private}d, %{private}s",  buf,  0x1Cu);
    if ((v47[9] & 0x80000000) != 0) {
      operator delete(*(void **)__p);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101836290);
    }
    uint64_t v32 = qword_101934878;
    sub_100923668(a2, &v51);
    if ((v51.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      __int16 v33 = &v51;
    }
    else {
      __int16 v33 = (std::stringbuf::string_type *)v51.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)std::stringbuf::string_type __p = 134284035;
    *(void *)&__p[4] = v11;
    __int16 v46 = 1025;
    *(_DWORD *)int v47 = a3;
    *(_WORD *)&v47[4] = 2081;
    *(void *)&_BYTE v47[6] = v33;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v32,  2LL,  "Fence: state store, %{private}lld, %{private}d, %{private}s",  __p,  28);
    __int16 v35 = v34;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLFenceMonitorDatabase::storeFenceState(const CLFenceManager_Type::Fence &, CLFenceManager_Type::FenceStatus)",  "%s\n",  v35);
    if (v35 != buf) {
      free(v35);
    }
  }

  sub_10000CE18((uint64_t)__p);
  uint64_t v14 = sub_10000CF44(&v47[2], (uint64_t)"INSERT OR REPLACE INTO ", 23LL);
  std::stringbuf v15 = sub_10000CF44(v14, (uint64_t)"Status", 6LL);
  uint64_t v16 = sub_10000CF44(v15, (uint64_t)" (", 2LL);
  int v17 = sub_10000CF44(v16, (uint64_t)"Key", 3LL);
  signed int v18 = sub_10000CF44(v17, (uint64_t)", ", 2LL);
  __int16 v19 = sub_10000CF44(v18, (uint64_t)"State", 5LL);
  sub_10000CF44(v19, (uint64_t)") VALUES (?, ?)", 15LL);
  std::stringbuf::str((std::stringbuf::string_type *)buf, (const std::stringbuf *)&v47[10]);
  if (v54[9] >= 0) {
    int v20 = buf;
  }
  else {
    int v20 = *(char **)buf;
  }
  sub_1003C0D54(a1, v20, &v51);
  uint64_t v21 = v51.__r_.__value_.__r.__words[0];
  v51.__r_.__value_.__r.__words[0] = 0LL;
  if ((v54[9] & 0x80000000) != 0) {
    operator delete(*(void **)buf);
  }
  int v22 = (sqlite3_stmt *)sub_100019240(v21);
  if (sub_1003C2D24(v22, 1, v11) && (__int16 v23 = (sqlite3_stmt *)sub_100019240(v21), sub_1003C28BC(v23, 2, a3)))
  {
    double v24 = (sqlite3_stmt *)sub_100019240(v21);
    sub_1003BB2BC(a1, v24);
    uint64_t v10 = 1LL;
    if (!v21) {
      goto LABEL_48;
    }
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101836290);
    }
    __int16 v25 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
    {
      else {
        uint64_t v26 = *(void *)a2;
      }
      else {
        uint64_t v27 = *(void *)(a2 + 24);
      }
      *(_DWORD *)uint64_t buf = 136446467;
      *(void *)&uint8_t buf[4] = v26;
      __int16 v53 = 2081;
      *(void *)__int16 v54 = v27;
      _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEFAULT,  "#Warning Fence: state couldn't bind statement (bundle ID %{public}s, name %{private}s)",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101836290);
      }
      else {
        std::string::size_type v36 = *(void *)a2;
      }
      int v37 = *(char *)(a2 + 47);
      std::string::size_type v40 = *(void *)(a2 + 24);
      std::string::size_type v39 = a2 + 24;
      std::string::size_type v38 = v40;
      if (v37 >= 0) {
        std::string::size_type v41 = v39;
      }
      else {
        std::string::size_type v41 = v38;
      }
      LODWORD(v51.__r_.__value_.__l.__data_) = 136446467;
      *(std::string::size_type *)((char *)v51.__r_.__value_.__r.__words + 4) = v36;
      WORD2(v51.__r_.__value_.__r.__words[1]) = 2081;
      *(std::string::size_type *)((char *)&v51.__r_.__value_.__r.__words[1] + 6) = v41;
      LODWORD(vmemset(v19, 0, 44) = 22;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "#Warning Fence: state couldn't bind statement (bundle ID %{public}s, name %{private}s)",  &v51,  v44);
      int v43 = (char *)v42;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLFenceMonitorDatabase::storeFenceState(const CLFenceManager_Type::Fence &, CLFenceManager_Type::FenceStatus)",  "%s\n",  v42);
      if (v43 != buf) {
        free(v43);
      }
    }

    double v28 = (sqlite3_stmt *)sub_100019240(v21);
    sqlite3_reset(v28);
    uint64_t v10 = 0LL;
    if (!v21) {
      goto LABEL_48;
    }
  }

  (*(void (**)(uint64_t))(*(void *)v21 + 8LL))(v21);
LABEL_48:
  *(void *)&void v47[2] = v29;
  if (v49 < 0) {
    operator delete(v48);
  }
  std::streambuf::~streambuf(&v47[10]);
  std::ios::~ios(&v50);
  return v10;
}

void sub_1003D4F54( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,void *__p,uint64_t a52,int a53,__int16 a54,char a55,char a56)
{
  if (v56) {
    (*(void (**)(uint64_t))(*(void *)v56 + 8LL))(v56);
  }
  sub_1011F8850((uint64_t)&a11);
  _Unwind_Resume(a1);
}

BOOL sub_1003D4FAC(uint64_t a1, uint64_t a2)
{
  if (sub_1003C1048(a1))
  {
    sqlite3_int64 v4 = sub_100924068(a2);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101836290);
    }
    uint64_t v5 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      sub_100923668(a2, __p);
      uint64_t v6 = (__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0
         ? __p
         : (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
      LODWORD(buf.__r_.__value_.__l.__data_) = 134283779;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v4;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2081;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v6;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "Fence: state remove, %{private}lld, %{private}s",  (uint8_t *)&buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101836290);
      }
      uint64_t v26 = qword_101934878;
      sub_100923668(a2, &buf);
      if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        p_std::stringbuf::string_type buf = &buf;
      }
      else {
        p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)__int16 v42 = 134283779;
      *(void *)&v42[4] = v4;
      __int16 v43 = 2081;
      uint64_t v44 = p_buf;
      _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v26,  2LL,  "Fence: state remove, %{private}lld, %{private}s",  v42,  22);
      uint64_t v29 = v28;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLFenceMonitorDatabase::removeFenceState(const CLFenceManager_Type::Fence &)",  "%s\n",  (const char *)v29);
      if (v29 != __p) {
        free(v29);
      }
    }

    sub_10000CE18((uint64_t)&buf);
    uint64_t v7 = sub_10000CF44(&buf.__r_.__value_.__l.__cap_, (uint64_t)"DELETE FROM ", 12LL);
    int v8 = sub_10000CF44(v7, (uint64_t)"Status", 6LL);
    int v9 = sub_10000CF44(v8, (uint64_t)" WHERE ", 7LL);
    uint64_t v10 = sub_10000CF44(v9, (uint64_t)"Key", 3LL);
    sub_10000CF44(v10, (uint64_t)"=?", 2LL);
    std::stringbuf::str(__p, &v40);
    if ((__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0) {
      sqlite3_int64 v11 = __p;
    }
    else {
      sqlite3_int64 v11 = (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(a1, (char *)v11, v42);
    uint64_t v12 = *(void *)v42;
    *(void *)__int16 v42 = 0LL;
    int v13 = (sqlite3_stmt *)sub_100019240(v12);
    BOOL v14 = sub_1003C2D24(v13, 1, v4);
    if (v14)
    {
      std::stringbuf v15 = (sqlite3_stmt *)sub_100019240(v12);
      sub_1003BB2BC(a1, v15);
      else {
        uint64_t v16 = *(void *)(a1 + 88);
      }
      sub_1003C1EC0(a1, v16);
    }

    else
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101836290);
      }
      signed int v18 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
      {
        else {
          std::string::size_type v19 = *(void *)a2;
        }
        else {
          std::string::size_type v20 = *(void *)(a2 + 24);
        }
        LODWORD(__p[0].__r_.__value_.__l.__data_) = 136446467;
        *(std::string::size_type *)((char *)__p[0].__r_.__value_.__r.__words + 4) = v19;
        WORD2(__p[0].__r_.__value_.__r.__words[1]) = 2081;
        *(std::string::size_type *)((char *)&__p[0].__r_.__value_.__r.__words[1] + 6) = v20;
        _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "#Warning Fence: state couldn't bind statement for deleting (bundle ID %{public}s, name %{private}s)",  (uint8_t *)__p,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(__p, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101836290);
        }
        else {
          uint64_t v30 = *(void *)a2;
        }
        int v31 = *(char *)(a2 + 47);
        int v34 = *(std::stringbuf::string_type **)(a2 + 24);
        uint64_t v33 = a2 + 24;
        uint64_t v32 = v34;
        if (v31 >= 0) {
          __int16 v35 = (std::stringbuf::string_type *)v33;
        }
        else {
          __int16 v35 = v32;
        }
        *(_DWORD *)__int16 v42 = 136446467;
        *(void *)&v42[4] = v30;
        __int16 v43 = 2081;
        uint64_t v44 = v35;
        LODWORD(v3_Block_object_dispose((const void *)(v30 - 184), 8) = 22;
        _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "#Warning Fence: state couldn't bind statement for deleting (bundle ID %{public}s, name %{private}s)",  v42,  v38);
        int v37 = (std::stringbuf::string_type *)v36;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLFenceMonitorDatabase::removeFenceState(const CLFenceManager_Type::Fence &)",  "%s\n",  v36);
        if (v37 != __p) {
          free(v37);
        }
      }

      uint64_t v21 = (sqlite3_stmt *)sub_100019240(v12);
      sqlite3_reset(v21);
    }

    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
    }
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words
    buf.__r_.__value_.__l.__cap_ = v22;
    std::streambuf::~streambuf(&v40);
    std::ios::~ios(&v41);
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101836290);
    }
    int v17 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_FAULT))
    {
      LOWORD(__p[0].__r_.__value_.__l.__data_) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_FAULT,  "Fence: state No access to DB",  (uint8_t *)__p,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(__p, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101836290);
      }
      LOWORD(buf.__r_.__value_.__l.__data_) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934878,  17LL,  "Fence: state No access to DB",  &buf,  2);
      __int16 v25 = (std::stringbuf::string_type *)v24;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLFenceMonitorDatabase::removeFenceState(const CLFenceManager_Type::Fence &)",  "%s\n",  v24);
      if (v25 != __p) {
        free(v25);
      }
    }

    return 0LL;
  }

  return v14;
}

void sub_1003D5640( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,void *__p,uint64_t a52,int a53,__int16 a54,char a55,char a56)
{
  if (v56) {
    (*(void (**)(uint64_t))(*(void *)v56 + 8LL))(v56);
  }
  sub_1011F8850((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t sub_1003D5698@<X0>(uint64_t *a1@<X1>, std::stringbuf::string_type *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  if (*a1 != v5)
  {
    char v6 = 0;
    do
    {
      unint64_t v7 = sub_100924068(v4);
      if ((v6 & 1) != 0) {
        sub_10000CF44(&v11, (uint64_t)", ", 2LL);
      }
      std::ostream::operator<<(&v11, v7);
      v4 += 248LL;
      char v6 = 1;
    }

    while (v4 != v5);
  }

  std::stringbuf::str(a2, &v12);
  *(void *)((char *)v10
  uint64_t v11 = v8;
  std::streambuf::~streambuf(&v12);
  return std::ios::~ios(&v13);
}

void sub_1003D57B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

BOOL sub_1003D57C8(uint64_t a1, uint64_t *a2)
{
  BOOL v4 = sub_1003C1048(a1);
  if (v4)
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101836290);
    }
    uint64_t v5 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      unint64_t v6 = 0xEF7BDEF7BDEF7BDFLL * ((a2[1] - *a2) >> 3);
      LODWORD(buf[0].__r_.__value_.__l.__data_) = 134349056;
      *(std::string::size_type *)((char *)buf[0].__r_.__value_.__r.__words + 4) = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "Fence: state scrub, remaining, %{public}lu",  (uint8_t *)buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101836290);
      }
      unint64_t v27 = 0xEF7BDEF7BDEF7BDFLL * ((a2[1] - *a2) >> 3);
      LODWORD(__p[0]) = 134349056;
      *(void **)((char *)__p + 4) = (void *)v27;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: state scrub, remaining, %{public}lu",  __p,  12);
      uint64_t v29 = (std::stringbuf::string_type *)v28;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLFenceMonitorDatabase::scrubFenceStates(const std::vector<CLFenceManager_Type::Fence> &)",  "%s\n",  v28);
      if (v29 != buf) {
        free(v29);
      }
    }

    sub_1003D5698(a2, buf);
    v38.__r_.__value_.__s.__size_ = 12;
    strcpy((char *)&v38, "DELETE FROM ");
    unint64_t v7 = std::string::append(&v38, "Status");
    __int128 v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
    v39.__r_.__value_.__l.__cap_ = v7->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v39.__r_.__value_.__l.__data_ = v8;
    v7->__r_.__value_.__l.__size_ = 0LL;
    v7->__r_.__value_.__l.__cap_ = 0LL;
    v7->__r_.__value_.__r.__words[0] = 0LL;
    char v37 = 7;
    strcpy(__s, " WHERE ");
    int v9 = std::string::append(&v39, __s, 7uLL);
    __int128 v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
    v40.__r_.__value_.__l.__cap_ = v9->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v40.__r_.__value_.__l.__data_ = v10;
    v9->__r_.__value_.__l.__size_ = 0LL;
    v9->__r_.__value_.__l.__cap_ = 0LL;
    v9->__r_.__value_.__r.__words[0] = 0LL;
    uint64_t v11 = std::string::append(&v40, "Key");
    __int128 v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
    v41.__r_.__value_.__l.__cap_ = v11->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v41.__r_.__value_.__l.__data_ = v12;
    v11->__r_.__value_.__l.__size_ = 0LL;
    v11->__r_.__value_.__l.__cap_ = 0LL;
    v11->__r_.__value_.__r.__words[0] = 0LL;
    char v35 = 9;
    strcpy((char *)v34, " NOT IN (");
    uint64_t v13 = std::string::append(&v41, (const std::string::value_type *)v34, 9uLL);
    __int128 v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
    v42.__r_.__value_.__l.__cap_ = v13->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v42.__r_.__value_.__l.__data_ = v14;
    v13->__r_.__value_.__l.__size_ = 0LL;
    v13->__r_.__value_.__l.__cap_ = 0LL;
    v13->__r_.__value_.__r.__words[0] = 0LL;
    if ((buf[0].__r_.__value_.__s.__size_ & 0x80u) == 0) {
      std::stringbuf v15 = buf;
    }
    else {
      std::stringbuf v15 = (std::stringbuf::string_type *)buf[0].__r_.__value_.__r.__words[0];
    }
    if ((buf[0].__r_.__value_.__s.__size_ & 0x80u) == 0) {
      std::string::size_type size = buf[0].__r_.__value_.__s.__size_;
    }
    else {
      std::string::size_type size = buf[0].__r_.__value_.__l.__size_;
    }
    int v17 = std::string::append(&v42, (const std::string::value_type *)v15, size);
    __int128 v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
    v43.__r_.__value_.__l.__cap_ = v17->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v18;
    v17->__r_.__value_.__l.__size_ = 0LL;
    v17->__r_.__value_.__l.__cap_ = 0LL;
    v17->__r_.__value_.__r.__words[0] = 0LL;
    char v33 = 1;
    strcpy(v32, ")");
    std::string::size_type v19 = std::string::append(&v43, v32, 1uLL);
    __int128 v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
    int64_t cap = v19->__r_.__value_.__l.__cap_;
    *(_OWORD *)std::stringbuf::string_type __p = v20;
    v19->__r_.__value_.__l.__size_ = 0LL;
    v19->__r_.__value_.__l.__cap_ = 0LL;
    v19->__r_.__value_.__r.__words[0] = 0LL;
    if (v33 < 0) {
      operator delete(*(void **)v32);
    }
    if (v35 < 0) {
      operator delete(v34[0]);
    }
    if (v37 < 0) {
      operator delete(*(void **)__s);
    }
    if (cap >= 0) {
      uint64_t v21 = (char *)__p;
    }
    else {
      uint64_t v21 = (char *)__p[0];
    }
    sub_1003C0D54(a1, v21, &v43);
    std::string::size_type v22 = v43.__r_.__value_.__r.__words[0];
    __int16 v23 = (sqlite3_stmt *)sub_100019240((uint64_t)v43.__r_.__value_.__l.__data_);
    sub_1003BB2BC(a1, v23);
    else {
      uint64_t v24 = *(void *)(a1 + 88);
    }
    sub_1003C1EC0(a1, v24);
    if (v22) {
      (*(void (**)(std::string::size_type))(*(void *)v22 + 8LL))(v22);
    }
    if (SHIBYTE(cap) < 0) {
      operator delete(__p[0]);
    }
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101836290);
    }
    __int16 v25 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_FAULT))
    {
      LOWORD(buf[0].__r_.__value_.__l.__data_) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_FAULT,  "Fence: state can't scrub DB",  (uint8_t *)buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101836290);
      }
      LOWORD(__p[0]) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  17LL,  "Fence: state can't scrub DB",  __p,  2);
      int v31 = (std::stringbuf::string_type *)v30;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLFenceMonitorDatabase::scrubFenceStates(const std::vector<CLFenceManager_Type::Fence> &)",  "%s\n",  v30);
      if (v31 != buf) {
        free(v31);
      }
    }
  }

  return v4;
}

void sub_1003D5D98( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, void *a23, uint64_t a24, uint64_t a25, uint64_t a26, void *a27, uint64_t a28, uint64_t a29, uint64_t a30, void *a31, uint64_t a32, uint64_t a33, uint64_t a34, void *a35, uint64_t a36, uint64_t a37, uint64_t a38, void *a39, uint64_t a40, uint64_t a41, uint64_t a42, void *__p, uint64_t a44, int a45, __int16 a46, char a47, char a48, uint64_t a49, void *a50,uint64_t a51,int a52,__int16 a53,char a54,char a55)
{
  if (a48 < 0) {
    operator delete(__p);
  }
  if (a55 < 0) {
    operator delete(a50);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1003D5EA4(uint64_t a1, uint64_t a2)
{
  if (sub_1003C1048(a1))
  {
    sqlite3_int64 v4 = sub_100924068(a2);
    v77.__r_.__value_.__s.__size_ = 7;
    strcpy((char *)&v77, "SELECT ");
    uint64_t v5 = std::string::append(&v77, "State");
    __int128 v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
    v78.__r_.__value_.__l.__cap_ = v5->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v78.__r_.__value_.__l.__data_ = v6;
    v5->__r_.__value_.__l.__size_ = 0LL;
    v5->__r_.__value_.__l.__cap_ = 0LL;
    v5->__r_.__value_.__r.__words[0] = 0LL;
    char v76 = 6;
    strcpy(__s, " FROM ");
    unint64_t v7 = std::string::append(&v78, __s, 6uLL);
    __int128 v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
    v79.__r_.__value_.__l.__cap_ = v7->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v79.__r_.__value_.__l.__data_ = v8;
    v7->__r_.__value_.__l.__size_ = 0LL;
    v7->__r_.__value_.__l.__cap_ = 0LL;
    v7->__r_.__value_.__r.__words[0] = 0LL;
    int v9 = std::string::append(&v79, "Status");
    __int128 v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
    v80.__r_.__value_.__l.__cap_ = v9->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v80.__r_.__value_.__l.__data_ = v10;
    v9->__r_.__value_.__l.__size_ = 0LL;
    v9->__r_.__value_.__l.__cap_ = 0LL;
    v9->__r_.__value_.__r.__words[0] = 0LL;
    char v74 = 7;
    strcpy(v73, " WHERE ");
    uint64_t v11 = std::string::append(&v80, v73, 7uLL);
    __int128 v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
    *(void *)&v83[16] = v11->__r_.__value_.__l.__cap_;
    *(_OWORD *)__int128 v83 = v12;
    v11->__r_.__value_.__l.__size_ = 0LL;
    v11->__r_.__value_.__l.__cap_ = 0LL;
    v11->__r_.__value_.__r.__words[0] = 0LL;
    uint64_t v13 = std::string::append((std::string *)v83, "Key");
    __int128 v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
    *(void *)&v84[16] = v13->__r_.__value_.__l.__cap_;
    *(_OWORD *)__int128 v84 = v14;
    v13->__r_.__value_.__l.__size_ = 0LL;
    v13->__r_.__value_.__l.__cap_ = 0LL;
    v13->__r_.__value_.__r.__words[0] = 0LL;
    char v72 = 2;
    strcpy(v71, "=?");
    std::stringbuf v15 = std::string::append((std::string *)v84, v71, 2uLL);
    __int128 v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
    int64_t cap = v15->__r_.__value_.__l.__cap_;
    *(_OWORD *)std::stringbuf::string_type __p = v16;
    v15->__r_.__value_.__l.__size_ = 0LL;
    v15->__r_.__value_.__l.__cap_ = 0LL;
    v15->__r_.__value_.__r.__words[0] = 0LL;
    if (v72 < 0) {
      operator delete(*(void **)v71);
    }
    if ((v84[23] & 0x80000000) != 0) {
      operator delete(*(void **)v84);
    }
    if ((v83[23] & 0x80000000) != 0) {
      operator delete(*(void **)v83);
    }
    if (v74 < 0) {
      operator delete(*(void **)v73);
    }
    if (v76 < 0) {
      operator delete(*(void **)__s);
    }
    if (cap >= 0) {
      int v17 = (char *)__p;
    }
    else {
      int v17 = (char *)__p[0];
    }
    sub_1003C0D54(a1, v17, v84);
    uint64_t v18 = *(void *)v84;
    std::string::size_type v19 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)v84);
    if (sub_1003C2D24(v19, 1, v4))
    {
      __int128 v20 = (sqlite3_stmt *)sub_100019240(v18);
      int v21 = sqlite3_step(v20);
      if (v21 == 101)
      {
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101836290);
        }
        uint64_t v44 = (os_log_s *)qword_101934878;
        if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
        {
          else {
            uint64_t v45 = *(void *)(a2 + 48);
          }
          else {
            uint64_t v46 = *(void *)a2;
          }
          else {
            uint64_t v47 = *(void *)(a2 + 24);
          }
          *(_DWORD *)__int128 v84 = 136446723;
          *(void *)&v84[4] = v45;
          *(_WORD *)&v84[12] = 2082;
          *(void *)&v84[14] = v46;
          *(_WORD *)&v84[22] = 2081;
          *(void *)&v84[24] = v47;
          _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_DEBUG,  "Fence: state doesn't exist [%{public}s]/%{public}s/%{private}s",  v84,  0x20u);
        }

        if (!sub_1002921D0(115, 2)) {
          goto LABEL_116;
        }
        bzero(v84, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101836290);
        }
        else {
          uint64_t v48 = *(void *)(a2 + 48);
        }
        else {
          uint64_t v49 = *(void *)a2;
        }
        int v50 = *(char *)(a2 + 47);
        uint64_t v53 = *(void *)(a2 + 24);
        uint64_t v52 = a2 + 24;
        uint64_t v51 = v53;
        if (v50 >= 0) {
          uint64_t v54 = v52;
        }
        else {
          uint64_t v54 = v51;
        }
        *(_DWORD *)__int128 v83 = 136446723;
        *(void *)&v83[4] = v48;
        *(_WORD *)&v83[12] = 2082;
        *(void *)&v83[14] = v49;
        *(_WORD *)&v83[22] = 2081;
        *(void *)&v83[24] = v54;
        _os_log_send_and_compose_impl( 2LL,  0LL,  v84,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: state doesn't exist [%{public}s]/%{public}s/%{private}s",  v83,  32);
        std::string v43 = (char *)v55;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLFenceManager_Type::FenceStatus CLFenceMonitorDatabase::getFenceState(const CLFenceManager_Type::Fence &)",  "%s\n",  v55);
      }

      else
      {
        if (v21 == 100)
        {
          std::string::size_type v22 = (sqlite3_stmt *)sub_100019240(v18);
          uint64_t v23 = sqlite3_column_int(v22, 0);
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101836290);
          }
          uint64_t v24 = (os_log_s *)qword_101934878;
          if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
          {
            sub_100923668(a2, (std::stringbuf::string_type *)v83);
            __int16 v25 = v83[23] >= 0 ? v83 : *(_BYTE **)v83;
            *(_DWORD *)__int128 v84 = 134284035;
            *(void *)&v84[4] = v4;
            *(_WORD *)&v84[12] = 1025;
            *(_DWORD *)&v84[14] = v23;
            *(_WORD *)&v84[18] = 2081;
            *(void *)&v84[20] = v25;
            _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEBUG,  "Fence: state get, %{private}lld, %{private}d, %{private}s",  v84,  0x1Cu);
            if ((v83[23] & 0x80000000) != 0) {
              operator delete(*(void **)v83);
            }
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(v84, 0x65CuLL);
            if (qword_101934870 != -1) {
              dispatch_once(&qword_101934870, &stru_101836290);
            }
            uint64_t v26 = qword_101934878;
            sub_100923668(a2, &v80);
            if ((v80.__r_.__value_.__s.__size_ & 0x80u) == 0) {
              unint64_t v27 = &v80;
            }
            else {
              unint64_t v27 = (std::string *)v80.__r_.__value_.__r.__words[0];
            }
            *(_DWORD *)__int128 v83 = 134284035;
            *(void *)&v83[4] = v4;
            *(_WORD *)&v83[12] = 1025;
            *(_DWORD *)&v83[14] = v23;
            *(_WORD *)&v83[18] = 2081;
            *(void *)&v83[20] = v27;
            _os_log_send_and_compose_impl( 2LL,  0LL,  v84,  1628LL,  &_mh_execute_header,  v26,  2LL,  "Fence: state get, %{private}lld, %{private}d, %{private}s",  v83,  28);
            uint64_t v29 = v28;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLFenceManager_Type::FenceStatus CLFenceMonitorDatabase::getFenceState(const CLFenceManager_Type::Fence &)",  "%s\n",  v29);
            if (v29 != v84) {
              free(v29);
            }
          }

          goto LABEL_117;
        }

        sub_1003B5988(a1, v21);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101836290);
        }
        uint64_t v56 = (os_log_s *)qword_101934878;
        if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_FAULT))
        {
          else {
            uint64_t v57 = *(void *)(a2 + 48);
          }
          else {
            uint64_t v58 = *(void *)a2;
          }
          else {
            uint64_t v59 = *(void *)(a2 + 24);
          }
          *(_DWORD *)__int128 v84 = 136446723;
          *(void *)&v84[4] = v57;
          *(_WORD *)&v84[12] = 2082;
          *(void *)&v84[14] = v58;
          *(_WORD *)&v84[22] = 2081;
          *(void *)&v84[24] = v59;
          _os_log_impl( (void *)&_mh_execute_header,  v56,  OS_LOG_TYPE_FAULT,  "Fence: state error in retrieving for [%{public}s/%{public}s/%{private}s",  v84,  0x20u);
        }

        if (!sub_1002921D0(115, 0))
        {
LABEL_116:
          uint64_t v23 = 0xFFFFFFFFLL;
LABEL_117:
          if (v18) {
            (*(void (**)(uint64_t))(*(void *)v18 + 8LL))(v18);
          }
          if (SHIBYTE(cap) < 0) {
            operator delete(__p[0]);
          }
          return v23;
        }

        bzero(v84, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101836290);
        }
        else {
          uint64_t v63 = *(void *)(a2 + 48);
        }
        else {
          uint64_t v64 = *(void *)a2;
        }
        int v65 = *(char *)(a2 + 47);
        uint64_t v68 = *(void *)(a2 + 24);
        uint64_t v67 = a2 + 24;
        uint64_t v66 = v68;
        if (v65 >= 0) {
          uint64_t v69 = v67;
        }
        else {
          uint64_t v69 = v66;
        }
        *(_DWORD *)__int128 v83 = 136446723;
        *(void *)&v83[4] = v63;
        *(_WORD *)&v83[12] = 2082;
        *(void *)&v83[14] = v64;
        *(_WORD *)&v83[22] = 2081;
        *(void *)&v83[24] = v69;
        _os_log_send_and_compose_impl( 2LL,  0LL,  v84,  1628LL,  &_mh_execute_header,  qword_101934878,  17LL,  "Fence: state error in retrieving for [%{public}s/%{public}s/%{private}s",  v83,  32);
        std::string v43 = (char *)v70;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "CLFenceManager_Type::FenceStatus CLFenceMonitorDatabase::getFenceState(const CLFenceManager_Type::Fence &)",  "%s\n",  v70);
      }
    }

    else
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101836290);
      }
      int v31 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_FAULT))
      {
        else {
          uint64_t v32 = *(void *)(a2 + 48);
        }
        else {
          uint64_t v33 = *(void *)a2;
        }
        else {
          uint64_t v34 = *(void *)(a2 + 24);
        }
        *(_DWORD *)__int128 v84 = 136446723;
        *(void *)&v84[4] = v32;
        *(_WORD *)&v84[12] = 2082;
        *(void *)&v84[14] = v33;
        *(_WORD *)&v84[22] = 2081;
        *(void *)&v84[24] = v34;
        _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_FAULT,  "Fence: state couldn't bind state [%{public}s]/%{public}s/%{private}s",  v84,  0x20u);
      }

      if (!sub_1002921D0(115, 0)) {
        goto LABEL_116;
      }
      bzero(v84, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101836290);
      }
      else {
        uint64_t v35 = *(void *)(a2 + 48);
      }
      else {
        uint64_t v36 = *(void *)a2;
      }
      int v37 = *(char *)(a2 + 47);
      uint64_t v40 = *(void *)(a2 + 24);
      uint64_t v39 = a2 + 24;
      uint64_t v38 = v40;
      if (v37 >= 0) {
        uint64_t v41 = v39;
      }
      else {
        uint64_t v41 = v38;
      }
      *(_DWORD *)__int128 v83 = 136446723;
      *(void *)&v83[4] = v35;
      *(_WORD *)&v83[12] = 2082;
      *(void *)&v83[14] = v36;
      *(_WORD *)&v83[22] = 2081;
      *(void *)&v83[24] = v41;
      _os_log_send_and_compose_impl( 2LL,  0LL,  v84,  1628LL,  &_mh_execute_header,  qword_101934878,  17LL,  "Fence: state couldn't bind state [%{public}s]/%{public}s/%{private}s",  v83,  32);
      std::string v43 = (char *)v42;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "CLFenceManager_Type::FenceStatus CLFenceMonitorDatabase::getFenceState(const CLFenceManager_Type::Fence &)",  "%s\n",  v42);
    }

    if (v43 != v84) {
      free(v43);
    }
    goto LABEL_116;
  }

  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101836290);
  }
  uint64_t v30 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_FAULT))
  {
    *(_WORD *)__int128 v84 = 0;
    _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_FAULT, "Fence: state No access to DB", v84, 2u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(v84, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101836290);
    }
    *(_WORD *)__int128 v83 = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  v84,  1628LL,  &_mh_execute_header,  qword_101934878,  17LL,  "Fence: state No access to DB",  v83,  2);
    __int16 v62 = (char *)v61;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "CLFenceManager_Type::FenceStatus CLFenceMonitorDatabase::getFenceState(const CLFenceManager_Type::Fence &)",  "%s\n",  v61);
    if (v62 != v84) {
      free(v62);
    }
  }

  return 0xFFFFFFFFLL;
}

void sub_1003D6A70( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, void *a23, uint64_t a24, uint64_t a25, uint64_t a26, void *a27, uint64_t a28, uint64_t a29, uint64_t a30, void *a31, uint64_t a32, uint64_t a33, uint64_t a34, void *__p, uint64_t a36, int a37, __int16 a38, char a39, char a40)
{
  if (v40) {
    (*(void (**)(uint64_t))(*(void *)v40 + 8LL))(v40);
  }
  if (a40 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_1003D6B88(id a1)
{
  qword_101934878 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeoFencing");
}

uint64_t sub_1003D6BB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v61 = 0LL;
  uint64_t v62 = 0LL;
  uint64_t v63 = 0LL;
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t *, double, double))(*(void *)a2 + 24LL))( a2,  &v61,  *(double *)(a1 + 8),  *(double *)(a1 + 16));
  if (qword_1019346C0 != -1) {
    dispatch_once(&qword_1019346C0, &stru_1018362D0);
  }
  __int128 v6 = (os_log_s *)qword_1019346C8;
  if (os_log_type_enabled((os_log_t)qword_1019346C8, OS_LOG_TYPE_INFO))
  {
    uint64_t v7 = *(void *)(a1 + 8);
    double v8 = *(double *)(a1 + 16);
    int v9 = *(_DWORD *)(a1 + 24);
    *(_DWORD *)std::stringbuf::string_type buf = 134284289;
    uint64_t v72 = v7;
    __int16 v73 = 2049;
    double v74 = v8;
    __int16 v75 = 1025;
    *(_DWORD *)char v76 = v9;
    *(_WORD *)&v76[4] = 2049;
    *(void *)&v76[6] = 0xAAAAAAAAAAAAAAABLL * ((v62 - v61) >> 5);
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "Looking for metrics during bout,startTime,%{private}f,endTime,%{private}f,steps,%{private}u,metrics,%{private}lu",  buf,  0x26u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019346C0 != -1) {
      dispatch_once(&qword_1019346C0, &stru_1018362D0);
    }
    uint64_t v49 = *(void *)(a1 + 8);
    double v50 = *(double *)(a1 + 16);
    int v51 = *(_DWORD *)(a1 + 24);
    int v64 = 134284289;
    uint64_t v65 = v49;
    __int16 v66 = 2049;
    double v67 = v50;
    __int16 v68 = 1025;
    *(_DWORD *)uint64_t v69 = v51;
    *(_WORD *)&v69[4] = 2049;
    *(void *)&v69[6] = 0xAAAAAAAAAAAAAAABLL * ((v62 - v61) >> 5);
    uint64_t v52 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019346C8,  1LL,  "Looking for metrics during bout,startTime,%{private}f,endTime,%{private}f,steps,%{private}u,metrics,%{private}lu",  &v64,  38);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CMError CLPredictedWalkDistanceUtils::calculateWalkingSpeedStridecals(const CLPredictedWalkDistanceBoutEntry &, CL Mobility::GaitMetricsDelegate *, WalkingStrideCalReportingDelegate *)",  "%s\n",  v52);
  }

  uint64_t v13 = v61;
  uint64_t v12 = v62;
  if (v62 != v61)
  {
    double v55 = *(double *)&a3;
    unsigned int v57 = v5;
    int v14 = 0;
    LODWORD(v1sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(_DWORD *)(a1 + 24);
    double v15 = 0.0;
    uint64_t v59 = 134218240LL;
    *(void *)&__int128 v11 = 134219520LL;
    __int128 v58 = v11;
    double v16 = (double)v10 / *(double *)(a1 + 40);
    double v17 = 0.0;
    do
    {
      if (qword_1019346C0 != -1) {
        dispatch_once(&qword_1019346C0, &stru_1018362D0);
      }
      uint64_t v18 = (os_log_s *)qword_1019346C8;
      if (os_log_type_enabled((os_log_t)qword_1019346C8, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v19 = *(void *)(v13 + 8);
        double v20 = *(float *)(v13 + 24);
        *(_DWORD *)std::stringbuf::string_type buf = v59;
        uint64_t v72 = v19;
        __int16 v73 = 2048;
        double v74 = v20;
        _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEBUG,  "startTime,%.3f,walkingSpeed,%.3f",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019346C0 != -1) {
          dispatch_once(&qword_1019346C0, &stru_1018362D0);
        }
        uint64_t v30 = *(void *)(v13 + 8);
        double v31 = *(float *)(v13 + 24);
        int v64 = v59;
        uint64_t v65 = v30;
        __int16 v66 = 2048;
        double v67 = v31;
        LODWORD(v54) = 22;
        uint64_t v32 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019346C8,  2LL,  "startTime,%.3f,walkingSpeed,%.3f",  COERCE_DOUBLE(&v64),  v54);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "CMError CLPredictedWalkDistanceUtils::calculateWalkingSpeedStridecals(const CLPredictedWalkDistanceBoutEntry & , CLMobility::GaitMetricsDelegate *, WalkingStrideCalReportingDelegate *)",  "%s\n",  v32);
      }

      float v21 = *(float *)(v13 + 24);
      float v22 = *(float *)(v13 + 48);
      if (qword_1019346C0 != -1) {
        dispatch_once(&qword_1019346C0, &stru_1018362D0);
      }
      uint64_t v23 = (os_log_s *)qword_1019346C8;
      if (os_log_type_enabled((os_log_t)qword_1019346C8, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v24 = *(void *)(v13 + 8);
        double v25 = *(float *)(v13 + 24);
        double v26 = *(float *)(v13 + 32);
        int v27 = *(_DWORD *)(a1 + 24);
        int v28 = *(_DWORD *)(a1 + 48);
        double v29 = *(float *)(v13 + 48);
        *(_DWORD *)std::stringbuf::string_type buf = v58;
        uint64_t v72 = v24;
        __int16 v73 = 2048;
        double v74 = v25;
        __int16 v75 = 2048;
        *(double *)char v76 = v26;
        *(_WORD *)&v76[8] = 1024;
        *(_DWORD *)&v76[10] = v27;
        *(_WORD *)&v76[14] = 2048;
        *(double *)&v76[16] = v16;
        *(_WORD *)&v76[24] = 1024;
        *(_DWORD *)&v76[26] = v28;
        *(_WORD *)std::string v77 = 2048;
        *(double *)&void v77[2] = v29;
        _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEBUG,  "startTime,%.3f,walkingSpeed,%.4f,stepLength,%.4f,segmentSteps,%d,segmentCadence,%.4f,segmentEpochCadenceSD,%d,cycleTime,%.3f",  buf,  0x40u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019346C0 != -1) {
          dispatch_once(&qword_1019346C0, &stru_1018362D0);
        }
        uint64_t v33 = *(void *)(v13 + 8);
        double v34 = *(float *)(v13 + 24);
        double v35 = *(float *)(v13 + 32);
        int v36 = *(_DWORD *)(a1 + 24);
        int v37 = *(_DWORD *)(a1 + 48);
        double v38 = *(float *)(v13 + 48);
        int v64 = v58;
        uint64_t v65 = v33;
        __int16 v66 = 2048;
        double v67 = v34;
        __int16 v68 = 2048;
        *(double *)uint64_t v69 = v35;
        *(_WORD *)&v69[8] = 1024;
        *(_DWORD *)&v69[10] = v36;
        *(_WORD *)&v69[14] = 2048;
        *(double *)&v69[16] = v16;
        *(_WORD *)&v69[24] = 1024;
        *(_DWORD *)&v69[26] = v37;
        *(_WORD *)int v70 = 2048;
        *(double *)&v70[2] = v38;
        LODWORD(v54) = 64;
        uint64_t v39 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019346C8,  2LL,  "startTime,%.3f,walkingSpeed,%.4f,stepLength,%.4f,segmentSteps,%d,segmentCadence,%.4f,segmentEpoc hCadenceSD,%d,cycleTime,%.3f",  COERCE_DOUBLE(&v64),  v54,  v55,  v56,  *(double *)&v58,  DWORD2(v58),  *(double *)&v59);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "CMError CLPredictedWalkDistanceUtils::calculateWalkingSpeedStridecals(const CLPredictedWalkDistanceBoutEntry & , CLMobility::GaitMetricsDelegate *, WalkingStrideCalReportingDelegate *)",  "%s\n",  v39);
      }

      double v15 = v15 + v21;
      double v17 = v17 + v22;
      v13 += 96LL;
      ++v14;
    }

    while (v13 != v12);
    double v40 = v17 / (double)v14;
    double v41 = (double)v14 / (*(double *)(a1 + 40) / v40);
    uint64_t v5 = v57;
    if (v41 <= 0.6) {
      goto LABEL_37;
    }
    double v42 = 2.0 / v40;
    if (vabdd_f64(2.0 / v40, v16) / ((v16 + 2.0 / v40) * 0.5) >= 0.1) {
      goto LABEL_37;
    }
    uint64_t v44 = *(void *)(a1 + 8);
    double v43 = *(double *)(a1 + 16);
    v60[0] = v44;
    *(double *)&v60[1] = v43;
    *(double *)&v60[2] = v16;
    *(double *)&v60[3] = 2.0 / v40;
    double v45 = v15 / (double)v14;
    *(double *)&v60[4] = v45;
    *(double *)&v60[5] = v41;
    if (qword_1019346C0 != -1) {
      dispatch_once(&qword_1019346C0, &stru_1018362D0);
    }
    double v46 = v55;
    uint64_t v47 = (os_log_s *)qword_1019346C8;
    if (os_log_type_enabled((os_log_t)qword_1019346C8, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134350336;
      uint64_t v72 = v44;
      __int16 v73 = 2050;
      double v74 = v43;
      __int16 v75 = 2050;
      *(double *)char v76 = v16;
      *(_WORD *)&v76[8] = 2050;
      *(double *)&v76[10] = v42;
      *(_WORD *)&v76[18] = 2050;
      *(double *)&v76[20] = v45;
      *(_WORD *)&v76[28] = 2050;
      *(double *)std::string v77 = v41;
      _os_log_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_INFO,  "Writing walkingSpeedCal,startTime,%{public}.3f,endTime,%{public}.3f,cadenceWatch,%{public}.3f,cadenceGaitCycle,% {public}.3f,meanWalkingSpeed,%{public}.3f,gaitCycleYield,%{public}.3f",  buf,  0x3Eu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019346C0 != -1) {
        dispatch_once(&qword_1019346C0, &stru_1018362D0);
      }
      int v64 = 134350336;
      uint64_t v65 = v44;
      __int16 v66 = 2050;
      double v67 = v43;
      __int16 v68 = 2050;
      *(double *)uint64_t v69 = v16;
      *(_WORD *)&v69[8] = 2050;
      *(double *)&v69[10] = v42;
      *(_WORD *)&_BYTE v69[18] = 2050;
      *(double *)&v69[20] = v45;
      *(_WORD *)&v69[28] = 2050;
      *(double *)int v70 = v41;
      LODWORD(v54) = 62;
      uint64_t v53 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019346C8,  1LL,  "Writing walkingSpeedCal,startTime,%{public}.3f,endTime,%{public}.3f,cadenceWatch,%{public}.3f,cade nceGaitCycle,%{public}.3f,meanWalkingSpeed,%{public}.3f,gaitCycleYield,%{public}.3f",  &v64,  *(void *)&v54);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CMError CLPredictedWalkDistanceUtils::calculateWalkingSpeedStridecals(const CLPredictedWalkDistanceBoutEntry &, CLMobility::GaitMetricsDelegate *, WalkingStrideCalReportingDelegate *)",  "%s\n",  v53);
      uint64_t v5 = v57;
      double v46 = v55;
      if (v55 == 0.0) {
        goto LABEL_37;
      }
    }

    else if (v55 == 0.0)
    {
LABEL_37:
      uint64_t v13 = v61;
      goto LABEL_38;
    }

    (*(void (**)(double, void *))(**(void **)&v46 + 16LL))(COERCE_DOUBLE(*(void *)&v46), v60);
    goto LABEL_37;
  }

void sub_1003D7430( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, void *__p, uint64_t a25)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003D7464(id a1)
{
  qword_1019346C8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "PredictedWalkDistance");
}

BOOL sub_1003D7490(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v63 = 0LL;
  int v64 = 0LL;
  uint64_t v65 = 0LL;
  sub_1003D7938(*(double *)(a2 + 56), a1, a3, (uint64_t)&v63);
  uint64_t v53 = (double *)v63;
  int v51 = v64;
  if (v63 != v64)
  {
    double v5 = *(double *)(a2 + 56) + 120.0;
    double v6 = *(double *)(a2 + 64) - *(double *)(a2 + 72);
    do
    {
      std::stringbuf::string_type __p = 0LL;
      uint64_t v61 = 0LL;
      uint64_t v62 = 0LL;
      unsigned int v57 = 0LL;
      __int128 v58 = 0LL;
      uint64_t v59 = 0LL;
      uint64_t v8 = *a3;
      uint64_t v7 = a3[1];
      while (v8 != v7)
      {
        double v9 = *(double *)(v8 + 8);
        if (v9 > *v53 && v9 < v5)
        {
          double v11 = v9 - *v53;
          uint64_t v12 = v61;
          if (v61 >= v62)
          {
            sqlite3_int64 v4 = (double *)__p;
            uint64_t v14 = ((char *)v61 - (_BYTE *)__p) >> 3;
            unint64_t v15 = v14 + 1;
            uint64_t v16 = (char *)v62 - (_BYTE *)__p;
            else {
              unint64_t v17 = v15;
            }
            if (v17)
            {
              uint64_t v18 = (char *)sub_1000071BC((uint64_t)&v62, v17);
              sqlite3_int64 v4 = (double *)__p;
              uint64_t v12 = v61;
            }

            else
            {
              uint64_t v18 = 0LL;
            }

            uint64_t v19 = (double *)&v18[8 * v14];
            double *v19 = v11;
            uint64_t v13 = v19 + 1;
            while (v12 != v4)
            {
              uint64_t v20 = *((void *)v12-- - 1);
              *((void *)v19-- - 1) = v20;
            }

            std::stringbuf::string_type __p = v19;
            uint64_t v61 = v13;
            uint64_t v62 = (double *)&v18[8 * v17];
            if (v4) {
              operator delete(v4);
            }
          }

          else
          {
            *uint64_t v61 = v11;
            uint64_t v13 = v12 + 1;
          }

          uint64_t v61 = v13;
          float v21 = (double *)v58;
          if (v58 >= v59)
          {
            sqlite3_int64 v4 = (double *)v57;
            uint64_t v23 = (v58 - (_BYTE *)v57) >> 3;
            unint64_t v24 = v23 + 1;
            uint64_t v25 = v59 - (_BYTE *)v57;
            if ((v59 - (_BYTE *)v57) >> 2 > v24) {
              unint64_t v24 = v25 >> 2;
            }
            else {
              unint64_t v26 = v24;
            }
            if (v26)
            {
              int v27 = (char *)sub_1000071BC((uint64_t)&v59, v26);
              sqlite3_int64 v4 = (double *)v57;
              float v21 = (double *)v58;
            }

            else
            {
              int v27 = 0LL;
            }

            int v28 = &v27[8 * v23];
            *(void *)int v28 = *(void *)(v8 + 16);
            float v22 = v28 + 8;
            while (v21 != v4)
            {
              uint64_t v29 = *((void *)v21-- - 1);
              *((void *)v28 - 1) = v29;
              v28 -= 8;
            }

            unsigned int v57 = v28;
            __int128 v58 = v22;
            uint64_t v59 = &v27[8 * v26];
            if (v4) {
              operator delete(v4);
            }
          }

          else
          {
            *(void *)__int128 v58 = *(void *)(v8 + 16);
            float v22 = (char *)(v21 + 1);
          }

          __int128 v58 = v22;
        }

        v8 += 32LL;
      }

      uint64_t v30 = (float *)qword_101995648;
      uint64_t v31 = qword_101995650;
      while (v30 != (float *)v31)
      {
        float v32 = *v30;
        double v54 = 0LL;
        double v55 = 0LL;
        int v56 = 0LL;
        uint64_t v33 = (double *)__p;
        double v34 = v61;
        if (__p != v61)
        {
          double v35 = 0LL;
          do
          {
            double v36 = *(double *)(a2 + 72) + v6 * exp(*v33 * (float)-v32);
            if (v35 >= v56)
            {
              sqlite3_int64 v4 = (double *)v54;
              uint64_t v38 = ((char *)v35 - (_BYTE *)v54) >> 3;
              unint64_t v39 = v38 + 1;
              uint64_t v40 = (char *)v56 - (_BYTE *)v54;
              else {
                unint64_t v41 = v39;
              }
              if (v41)
              {
                double v42 = (char *)sub_1000071BC((uint64_t)&v56, v41);
                sqlite3_int64 v4 = (double *)v54;
                double v35 = v55;
              }

              else
              {
                double v42 = 0LL;
              }

              double v43 = (double *)&v42[8 * v38];
              *double v43 = v36;
              int v37 = v43 + 1;
              while (v35 != v4)
              {
                uint64_t v44 = *((void *)v35-- - 1);
                *((void *)v43-- - 1) = v44;
              }

              double v54 = v43;
              double v55 = v37;
              int v56 = (double *)&v42[8 * v41];
              if (v4) {
                operator delete(v4);
              }
            }

            else
            {
              double *v35 = v36;
              int v37 = v35 + 1;
            }

            double v55 = v37;
            ++v33;
            double v35 = v37;
          }

          while (v33 != v34);
        }

        double v46 = sub_1003D7A74((uint64_t)v4, (uint64_t *)&v57, &v54);
        if (v46 != -1.0)
        {
          double v47 = *(double *)(a2 + 88);
          if (v47 == -1.0 || v46 < v47)
          {
            *(double *)(a2 + 8sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v32;
            *(double *)(a2 + sub_1011C52D0(v16 - 88) = v46;
            *(double *)(a2 + 104) = *v53;
            *(double *)(a2 + 96) = sub_1003D7AF0(v45, (uint64_t *)&v57, &v54);
          }
        }

        sqlite3_int64 v4 = (double *)v54;
        if (v54)
        {
          double v55 = (double *)v54;
          operator delete(v54);
        }

        ++v30;
      }

      if (v57)
      {
        __int128 v58 = (char *)v57;
        operator delete(v57);
      }

      sqlite3_int64 v4 = (double *)__p;
      if (__p)
      {
        uint64_t v61 = (double *)__p;
        operator delete(__p);
      }

      ++v53;
    }

    while (v53 != v51);
  }

  double v49 = *(double *)(a2 + 80);
  if (v49 == 0.0) {
    *(_DWORD *)a2 = 17;
  }
  if (v63)
  {
    int v64 = (double *)v63;
    operator delete(v63);
  }

  return v49 != 0.0;
}

void sub_1003D78C8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, void *a20, uint64_t a21, uint64_t a22, void *__p, uint64_t a24)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003D7938(double a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4 = *a3;
  uint64_t v5 = a3[1];
  if (*a3 != v5)
  {
    double v7 = a1 + -10.0;
    double v8 = a1 + 25.0;
    uint64_t v9 = a4 + 16;
    do
    {
      while (1)
      {
        double v10 = *(double *)(v4 + 8);
        if (v10 > v7 && v10 < v8) {
          break;
        }
        v4 += 32LL;
        if (v10 > v8 || v4 == v5) {
          return;
        }
      }

      uint64_t v14 = *(double **)(a4 + 8);
      unint64_t v13 = *(void *)(a4 + 16);
      if ((unint64_t)v14 >= v13)
      {
        uint64_t v16 = *(double **)a4;
        uint64_t v17 = ((uint64_t)v14 - *(void *)a4) >> 3;
        unint64_t v18 = v17 + 1;
        uint64_t v19 = v13 - (void)v16;
        if (v19 >> 2 > v18) {
          unint64_t v18 = v19 >> 2;
        }
        else {
          unint64_t v20 = v18;
        }
        if (v20)
        {
          float v21 = (char *)sub_1000071BC(v9, v20);
          uint64_t v16 = *(double **)a4;
          uint64_t v14 = *(double **)(a4 + 8);
          double v10 = *(double *)(v4 + 8);
        }

        else
        {
          float v21 = 0LL;
        }

        float v22 = (double *)&v21[8 * v17];
        *float v22 = v10;
        unint64_t v15 = v22 + 1;
        while (v14 != v16)
        {
          uint64_t v23 = *((void *)v14-- - 1);
          *((void *)v22-- - 1) = v23;
        }

        *(void *)a4 = v22;
        *(void *)(a4 + _Block_object_dispose((const void *)(v30 - 184), 8) = v15;
        *(void *)(a4 + 16) = &v21[8 * v20];
        if (v16) {
          operator delete(v16);
        }
      }

      else
      {
        *uint64_t v14 = v10;
        unint64_t v15 = v14 + 1;
      }

      *(void *)(a4 + _Block_object_dispose((const void *)(v30 - 184), 8) = v15;
      v4 += 32LL;
    }

    while (v4 != v5);
  }

double sub_1003D7A74(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  double result = -1.0;
  if (*a2 != v4)
  {
    uint64_t v6 = (v4 - v3) >> 3;
    if (v6 == (uint64_t)(a3[1] - *a3) >> 3)
    {
      uint64_t v7 = 0LL;
      double v8 = (double)(unint64_t)v6;
      double v9 = 0.0;
      do
      {
        if (v6 == v7) {
          sub_100092C20();
        }
        double v9 = v9
        ++v7;
      }

      while ((double)(int)v7 < v8);
      return v9 / v8;
    }
  }

  return result;
}

double sub_1003D7AF0(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  double result = -1.0;
  if (*a2 != v4)
  {
    uint64_t v6 = (v4 - v3) >> 3;
    if (v6 == (uint64_t)(a3[1] - *a3) >> 3)
    {
      unint64_t v7 = 0LL;
      double v8 = 0.0;
      double v9 = 0.0;
      double v10 = 0.0;
      double v11 = 0.0;
      do
      {
        if (v6 == v7) {
          sub_100092C20();
        }
        double v12 = *(double *)(v3 + 8 * v7);
        double v13 = v12 - *(double *)(*a3 + 8 * v7);
        double v14 = v13 - v11;
        double v11 = v11 + (v13 - v11) / (double)++v7;
        double v10 = v10 + v14 * (v13 - v11);
        double v15 = v12 - v9;
        double v9 = v9 + (v12 - v9) / (double)v7;
        double v8 = v8 + v15 * (v12 - v9);
      }

      while ((double)(int)v7 < (double)(unint64_t)v6);
      unint64_t v16 = v7 - 1;
      if (v7 != 1)
      {
        double v17 = v8 / (double)v16;
        if (v17 != 0.0) {
          return 1.0 - v10 / (double)v16 / v17;
        }
      }
    }
  }

  return result;
}

uint64_t sub_1003D7BC0()
{
  qword_101995648 = 0LL;
  qword_101995650 = 0LL;
  qword_101995658 = 0LL;
  qword_101995648 = (uint64_t)operator new(0x190uLL);
  uint64_t v0 = qword_101995648 + 400;
  qword_101995658 = qword_101995648 + 400;
  memcpy((void *)qword_101995648, &unk_1012E7ED0, 0x190uLL);
  qword_101995650 = v0;
  return __cxa_atexit((void (*)(void *))sub_1001B4198, &qword_101995648, (void *)&_mh_execute_header);
}

void sub_1003D7C24(uint64_t a1@<X8>)
{
  *(void *)a1 = &_mh_execute_header;
  *(_WORD *)(a1 + _Block_object_dispose((const void *)(v30 - 184), 8) = 0;
  unsigned int v2 = (_BYTE *)(a1 + 16);
  if (SHIBYTE(v5) < 0)
  {
    sub_1010DD48C(v2, __p[0], (unint64_t)__p[1]);
    int v3 = SHIBYTE(v5);
    *(void *)(a1 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0LL;
    if (v3 < 0) {
      operator delete(__p[0]);
    }
  }

  else
  {
    *(_OWORD *)unsigned int v2 = *(_OWORD *)__p;
    *(void *)(a1 + 32) = v5;
    *(void *)(a1 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0LL;
  }

void sub_1003D7CA8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003D7CC4(uint64_t a1)
{
  if (v5 < 0) {
    operator delete(__p);
  }
  return a1;
}

void sub_1003D7D18( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003D7D34(uint64_t a1, uint64_t a2, const char **a3)
{
  uint64_t v5 = sub_1003B35F4(a1, a2);
  if (sub_1003C1048(v5))
  {
    sub_1003B59A0(a1, off_101937CB8, a3, 0LL, 0);
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_1018363B0);
    }
    uint64_t v6 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 136315138;
      double v13 = "CLFenceCentroidDatabase";
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_FAULT, "%s, No access to DB", buf, 0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_1018363B0);
      }
      int v10 = 136315138;
      double v11 = "CLFenceCentroidDatabase";
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  17LL,  "%s, No access to DB",  (const char *)&v10);
      double v9 = (uint8_t *)v8;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "CLFenceCentroidDatabase::CLFenceCentroidDatabase(const CLSqliteDatabase::SqliteProperties &, const CLSqliteDatab ase::ColumnInfo *)",  "%s\n",  v8);
      if (v9 != buf) {
        free(v9);
      }
    }
  }

  return a1;
}

void sub_1003D7F20(_Unwind_Exception *a1)
{
}

BOOL sub_1003D7F38(uint64_t a1, int a2, double a3, double a4)
{
  if (sub_1003C1048(a1))
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_1018363B0);
    }
    double v8 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 136315907;
      *(void *)&uint8_t buf[4] = "storeFenceCentroid";
      __int16 v44 = 1025;
      int v45 = a2;
      __int16 v46 = 2049;
      double v47 = a3;
      __int16 v48 = 2049;
      double v49 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "%s, foreignKey, %{private}d, coordinate, <%{private}f, %{private}f>",  buf,  0x26u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_1018363B0);
      }
      *(_DWORD *)int v37 = 136315907;
      *(void *)&v37[4] = "storeFenceCentroid";
      __int16 v38 = 1025;
      *(_DWORD *)unint64_t v39 = a2;
      *(_WORD *)&v39[4] = 2049;
      *(double *)&v39[6] = a3;
      *(_WORD *)&v39[14] = 2049;
      *(double *)&v39[16] = a4;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "%s, foreignKey, %{private}d, coordinate, <%{private}f, %{private}f>",  v37,  38);
      uint64_t v31 = (char *)v30;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLFenceCentroidDatabase::storeFenceCentroid(const CLClientLocationCoordinate, const int)",  "%s\n",  v30);
      if (v31 != buf) {
        free(v31);
      }
    }

    sub_10000CE18((uint64_t)v37);
    double v9 = sub_10000CF44(&v39[2], (uint64_t)"INSERT OR REPLACE INTO ", 23LL);
    size_t v10 = strlen(off_101937CB8);
    double v11 = sub_10000CF44(v9, (uint64_t)off_101937CB8, v10);
    double v12 = sub_10000CF44(v11, (uint64_t)" (", 2LL);
    double v13 = sub_10000CF44(v12, (uint64_t)"ForeignKey", 10LL);
    double v14 = sub_10000CF44(v13, (uint64_t)", ", 2LL);
    double v15 = sub_10000CF44(v14, (uint64_t)"Latitude", 8LL);
    unint64_t v16 = sub_10000CF44(v15, (uint64_t)", ", 2LL);
    double v17 = sub_10000CF44(v16, (uint64_t)"Longitude", 9LL);
    sub_10000CF44(v17, (uint64_t)") VALUES (?, ?, ?)", 18LL);
    std::stringbuf::str((std::stringbuf::string_type *)buf, (const std::stringbuf *)&v39[10]);
    if ((SBYTE3(v47) & 0x80u) == 0) {
      unint64_t v18 = buf;
    }
    else {
      unint64_t v18 = *(char **)buf;
    }
    sub_1003C0D54(a1, v18, v36);
    uint64_t v19 = *(void *)v36;
    *(void *)double v36 = 0LL;
    if (SBYTE3(v47) < 0) {
      operator delete(*(void **)buf);
    }
    unint64_t v20 = (sqlite3_stmt *)sub_100019240(v19);
    if (sub_1003C28BC(v20, 1, a2))
    {
      float v21 = (sqlite3_stmt *)sub_100019240(v19);
      sub_1003B7480(v21, 2, a3);
    }

    float v22 = (sqlite3_stmt *)sub_100019240(v19);
    BOOL v23 = sub_1003B7480(v22, 3, a4);
    if (v23)
    {
      unint64_t v24 = (sqlite3_stmt *)sub_100019240(v19);
      sub_1003BB2BC(a1, v24);
    }

    else
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_1018363B0);
      }
      unint64_t v26 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 136315138;
        *(void *)&uint8_t buf[4] = "storeFenceCentroid";
        _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEFAULT,  "#Warning Fence: %s couldn't bind statement",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_1018363B0);
        }
        *(_DWORD *)double v36 = 136315138;
        *(void *)&v36[4] = "storeFenceCentroid";
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "#Warning Fence: %s couldn't bind statement",  v36);
        double v35 = (char *)v34;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLFenceCentroidDatabase::storeFenceCentroid(const CLClientLocationCoordinate, const int)",  "%s\n",  v34);
        if (v35 != buf) {
          free(v35);
        }
      }

      int v27 = (sqlite3_stmt *)sub_100019240(v19);
      sqlite3_reset(v27);
    }

    if (v19) {
      (*(void (**)(uint64_t))(*(void *)v19 + 8LL))(v19);
    }
    *(void *)&v39[2] = v28;
    if (v41 < 0) {
      operator delete(__p);
    }
    std::streambuf::~streambuf(&v39[10]);
    std::ios::~ios(&v42);
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_1018363B0);
    }
    uint64_t v25 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 136315138;
      *(void *)&uint8_t buf[4] = "storeFenceCentroid";
      _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_FAULT, "%s, No access to DB", buf, 0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_1018363B0);
      }
      *(_DWORD *)int v37 = 136315138;
      *(void *)&v37[4] = "storeFenceCentroid";
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  17LL,  "%s, No access to DB",  v37);
      uint64_t v33 = (char *)v32;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLFenceCentroidDatabase::storeFenceCentroid(const CLClientLocationCoordinate, const int)",  "%s\n",  v32);
      if (v33 != buf) {
        free(v33);
      }
    }

    return 0LL;
  }

  return v23;
}

void sub_1003D85DC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, void *__p, uint64_t a50,int a51,__int16 a52,char a53,char a54)
{
  if (v54) {
    (*(void (**)(uint64_t))(*(void *)v54 + 8LL))(v54);
  }
  sub_1011F8850((uint64_t)&a13);
  _Unwind_Resume(a1);
}

BOOL sub_1003D8634(uint64_t a1, int a2)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_1018363B0);
  }
  uint64_t v4 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    LODWORD(buf[0].__r_.__value_.__l.__data_) = 67174657;
    HIDWORD(buf[0].__r_.__value_.__r.__words[0]) = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "Fence: Removing vertices, key, %{private}d",  (uint8_t *)buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_1018363B0);
    }
    *(_DWORD *)float v32 = 67174657;
    *(_DWORD *)&v32[4] = a2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: Removing vertices, key, %{private}d",  v32,  8);
    BOOL v23 = (std::stringbuf::string_type *)v22;
    sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLFenceCentroidDatabase::removeFenceCentroid(const int)", "%s\n", v22);
    if (v23 != buf) {
      free(v23);
    }
  }

  if (sub_1003C1048(a1))
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_1018363B0);
    }
    uint64_t v5 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      LODWORD(buf[0].__r_.__value_.__l.__data_) = 136315395;
      *(std::string::size_type *)((char *)buf[0].__r_.__value_.__r.__words + 4) = (std::string::size_type)"removeFenceCentroid";
      WORD2(buf[0].__r_.__value_.__r.__words[1]) = 1025;
      *(_DWORD *)((char *)&buf[0].__r_.__value_.__r.__words[1] + 6) = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "%s, foreignKey, %{private}d",  (uint8_t *)buf,  0x12u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_1018363B0);
      }
      *(_DWORD *)float v32 = 136315395;
      *(void *)&v32[4] = "removeFenceCentroid";
      __int16 v33 = 1025;
      *(_DWORD *)double v34 = a2;
      LODWORD(v3sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 18;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "%s, foreignKey, %{private}d",  v32,  v30);
      uint64_t v25 = (std::stringbuf::string_type *)v24;
      sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLFenceCentroidDatabase::removeFenceCentroid(const int)", "%s\n", v24);
      if (v25 != buf) {
        free(v25);
      }
    }

    sub_10000CE18((uint64_t)v32);
    uint64_t v6 = sub_10000CF44(&v34[2], (uint64_t)"DELETE FROM ", 12LL);
    size_t v7 = strlen(off_101937CB8);
    double v8 = sub_10000CF44(v6, (uint64_t)off_101937CB8, v7);
    double v9 = sub_10000CF44(v8, (uint64_t)" WHERE ", 7LL);
    size_t v10 = sub_10000CF44(v9, (uint64_t)"ForeignKey", 10LL);
    sub_10000CF44(v10, (uint64_t)"=?", 2LL);
    std::stringbuf::str(buf, &v35);
    if ((buf[0].__r_.__value_.__s.__size_ & 0x80u) == 0) {
      double v11 = buf;
    }
    else {
      double v11 = (std::stringbuf::string_type *)buf[0].__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(a1, (char *)v11, v31);
    uint64_t v12 = v31[0];
    v31[0] = 0LL;
    double v13 = (sqlite3_stmt *)sub_100019240(v12);
    BOOL v14 = sub_1003C28BC(v13, 1, a2);
    if (v14)
    {
      double v15 = (sqlite3_stmt *)sub_100019240(v12);
      sub_1003BB2BC(a1, v15);
      else {
        uint64_t v16 = *(void *)(a1 + 88);
      }
      sub_1003C1EC0(a1, v16);
    }

    else
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_1018363B0);
      }
      unint64_t v18 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
      {
        LODWORD(buf[0].__r_.__value_.__l.__data_) = 67174657;
        HIDWORD(buf[0].__r_.__value_.__r.__words[0]) = a2;
        _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "#Warning Fence: Couldn't bind statement for deleting vertices (key %{private}d",  (uint8_t *)buf,  8u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_1018363B0);
        }
        LODWORD(v31[0]) = 67174657;
        HIDWORD(v31[0]) = a2;
        LODWORD(v3sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 8;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "#Warning Fence: Couldn't bind statement for deleting vertices (key %{private}d",  v31,  v30);
        uint64_t v29 = (std::stringbuf::string_type *)v28;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLFenceCentroidDatabase::removeFenceCentroid(const int)",  "%s\n",  v28);
        if (v29 != buf) {
          free(v29);
        }
      }

      uint64_t v19 = (sqlite3_stmt *)sub_100019240(v12);
      sqlite3_reset(v19);
    }

    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
    }
    *(void *)&id v34[2] = v20;
    std::streambuf::~streambuf(&v35);
    std::ios::~ios(&v36);
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_1018363B0);
    }
    double v17 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_FAULT))
    {
      LODWORD(buf[0].__r_.__value_.__l.__data_) = 136315138;
      *(std::string::size_type *)((char *)buf[0].__r_.__value_.__r.__words + 4) = (std::string::size_type)"removeFenceCentroid";
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_FAULT, "%s, No access to DB", (uint8_t *)buf, 0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_1018363B0);
      }
      *(_DWORD *)float v32 = 136315138;
      *(void *)&v32[4] = "removeFenceCentroid";
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  17LL,  "%s, No access to DB",  v32);
      int v27 = (std::stringbuf::string_type *)v26;
      sub_10029211C("Generic", 1LL, 0, 0LL, "BOOL CLFenceCentroidDatabase::removeFenceCentroid(const int)", "%s\n", v26);
      if (v27 != buf) {
        free(v27);
      }
    }

    return 0LL;
  }

  return v14;
}

void sub_1003D8D7C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, void *__p, uint64_t a50,int a51,__int16 a52,char a53,char a54)
{
  if (v54) {
    (*(void (**)(uint64_t))(*(void *)v54 + 8LL))(v54);
  }
  sub_1011F8850((uint64_t)&a13);
  _Unwind_Resume(a1);
}

void sub_1003D8DD4(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_1018363B0);
  }
  uint64_t v6 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 136315395;
    *(void *)&uint8_t buf[4] = "getFenceCentroid";
    __int16 v54 = 1025;
    int v55 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "%s, Attempting to fetch centroid for key %{private}d",  buf,  0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_1018363B0);
    }
    *(_DWORD *)__int16 v48 = 136315395;
    *(void *)&v48[4] = "getFenceCentroid";
    __int16 v49 = 1025;
    *(_DWORD *)double v50 = a2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "%s, Attempting to fetch centroid for key %{private}d",  v48,  18);
    uint64_t v36 = (char *)v35;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLDaemonLocation CLFenceCentroidDatabase::getFenceCentroid(const int)",  "%s\n",  v35);
    if (v36 != buf) {
      free(v36);
    }
  }

  double v7 = 0.0;
  double v8 = 0.0;
  if (sub_1003C1048(a1))
  {
    sub_10000CE18((uint64_t)v48);
    double v9 = sub_10000CF44(&v50[2], (uint64_t)"SELECT ", 7LL);
    size_t v10 = sub_10000CF44(v9, (uint64_t)"Latitude", 8LL);
    double v11 = sub_10000CF44(v10, (uint64_t)", ", 2LL);
    uint64_t v12 = sub_10000CF44(v11, (uint64_t)"Longitude", 9LL);
    double v13 = sub_10000CF44(v12, (uint64_t)" FROM ", 6LL);
    size_t v14 = strlen(off_101937CB8);
    double v15 = sub_10000CF44(v13, (uint64_t)off_101937CB8, v14);
    uint64_t v16 = sub_10000CF44(v15, (uint64_t)" WHERE ", 7LL);
    double v17 = sub_10000CF44(v16, (uint64_t)"ForeignKey", 10LL);
    sub_10000CF44(v17, (uint64_t)"=?", 2LL);
    std::stringbuf::str((std::stringbuf::string_type *)buf, &v51);
    if ((SBYTE3(v57) & 0x80u) == 0) {
      unint64_t v18 = buf;
    }
    else {
      unint64_t v18 = *(char **)buf;
    }
    sub_1003C0D54(a1, v18, v41);
    uint64_t v19 = *(void *)v41;
    *(void *)char v41 = 0LL;
    if (SBYTE3(v57) < 0) {
      operator delete(*(void **)buf);
    }
    uint64_t v20 = (sqlite3_stmt *)sub_100019240(v19);
    if (sub_1003C28BC(v20, 1, a2))
    {
      float v21 = (sqlite3_stmt *)sub_100019240(v19);
      int v22 = sqlite3_step(v21);
      if (v22 == 101)
      {
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_1018363B0);
        }
        uint64_t v31 = (os_log_s *)qword_101934878;
        if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)std::stringbuf::string_type buf = 136315395;
          *(void *)&uint8_t buf[4] = "getFenceCentroid";
          __int16 v54 = 1025;
          int v55 = a2;
          _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEBUG, "%s, doesn't exist %{private}d", buf, 0x12u);
        }

        if (!sub_1002921D0(115, 2)) {
          goto LABEL_50;
        }
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_1018363B0);
        }
        *(_DWORD *)char v41 = 136315395;
        *(void *)&v41[4] = "getFenceCentroid";
        __int16 v42 = 1025;
        int v43 = a2;
        LODWORD(v4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 18;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "%s, doesn't exist %{private}d",  v41,  v40);
        int v27 = (char *)v32;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLDaemonLocation CLFenceCentroidDatabase::getFenceCentroid(const int)",  "%s\n",  v32);
      }

      else if (v22 == 100)
      {
        BOOL v23 = (sqlite3_stmt *)sub_100019240(v19);
        double v7 = sqlite3_column_double(v23, 0);
        unint64_t v24 = (sqlite3_stmt *)sub_100019240(v19);
        double v8 = sqlite3_column_double(v24, 1);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_1018363B0);
        }
        uint64_t v25 = (os_log_s *)qword_101934878;
        if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)std::stringbuf::string_type buf = 136315907;
          *(void *)&uint8_t buf[4] = "getFenceCentroid";
          __int16 v54 = 1025;
          int v55 = a2;
          __int16 v56 = 2049;
          double v57 = v7;
          __int16 v58 = 2049;
          double v59 = v8;
          _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEBUG,  "%s, %{private}d,< %{private}f, %{private}f >",  buf,  0x26u);
        }

        if (!sub_1002921D0(115, 2)) {
          goto LABEL_50;
        }
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_1018363B0);
        }
        *(_DWORD *)char v41 = 136315907;
        *(void *)&v41[4] = "getFenceCentroid";
        __int16 v42 = 1025;
        int v43 = a2;
        __int16 v44 = 2049;
        double v45 = v7;
        __int16 v46 = 2049;
        double v47 = v8;
        LODWORD(v4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 38;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "%s, %{private}d,< %{private}f, %{private}f >",  v41,  v40);
        int v27 = (char *)v26;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLDaemonLocation CLFenceCentroidDatabase::getFenceCentroid(const int)",  "%s\n",  v26);
      }

      else
      {
        sub_1003B5988(a1, v22);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_1018363B0);
        }
        __int16 v33 = (os_log_s *)qword_101934878;
        if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_FAULT))
        {
          *(_DWORD *)std::stringbuf::string_type buf = 136315395;
          *(void *)&uint8_t buf[4] = "getFenceCentroid";
          __int16 v54 = 1025;
          int v55 = a2;
          _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_FAULT,  "%s, error in retrieving for %{private}d",  buf,  0x12u);
        }

        if (!sub_1002921D0(115, 0)) {
          goto LABEL_50;
        }
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_1018363B0);
        }
        *(_DWORD *)char v41 = 136315395;
        *(void *)&v41[4] = "getFenceCentroid";
        __int16 v42 = 1025;
        int v43 = a2;
        LODWORD(v4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 18;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  17LL,  "%s, error in retrieving for %{private}d",  v41,  v40);
        int v27 = (char *)v39;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "CLDaemonLocation CLFenceCentroidDatabase::getFenceCentroid(const int)",  "%s\n",  v39);
      }
    }

    else
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_1018363B0);
      }
      uint64_t v29 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 136315395;
        *(void *)&uint8_t buf[4] = "getFenceCentroid";
        __int16 v54 = 1025;
        int v55 = a2;
        _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_FAULT,  "%s couldn't bind to centroid db %{private}d",  buf,  0x12u);
      }

      if (!sub_1002921D0(115, 0)) {
        goto LABEL_50;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_1018363B0);
      }
      *(_DWORD *)char v41 = 136315395;
      *(void *)&v41[4] = "getFenceCentroid";
      __int16 v42 = 1025;
      int v43 = a2;
      LODWORD(v4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 18;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  17LL,  "%s couldn't bind to centroid db %{private}d",  v41,  v40);
      int v27 = (char *)v30;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "CLDaemonLocation CLFenceCentroidDatabase::getFenceCentroid(const int)",  "%s\n",  v30);
    }

    if (v27 != buf) {
      free(v27);
    }
LABEL_50:
    *(double *)(a3 + 4) = v7;
    *(double *)(a3 + 12) = v8;
    *(_OWORD *)(a3 + 10sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(__int128 *)((char *)&xmmword_101339690 + 4);
    *(_OWORD *)(a3 + 116) = *(__int128 *)((char *)&xmmword_1013396A0 + 4);
    *(_OWORD *)(a3 + 132) = *(__int128 *)((char *)&xmmword_1013396B0 + 4);
    *(_OWORD *)(a3 + 36) = *(__int128 *)((char *)&xmmword_101339650 + 4);
    *(_OWORD *)(a3 + 52) = *(__int128 *)((char *)&xmmword_101339660 + 4);
    *(_OWORD *)(a3 + 6_Block_object_dispose((const void *)(v30 - 184), 8) = *(__int128 *)((char *)&xmmword_101339670 + 4);
    *(_DWORD *)a3 = 0xFFFF;
    *(void *)(a3 + 14_Block_object_dispose((const void *)(v30 - 184), 8) = 0LL;
    *(_OWORD *)(a3 + 84) = *(__int128 *)((char *)&xmmword_101339680 + 4);
    *(_OWORD *)(a3 + 2sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(__int128 *)((char *)&xmmword_101339640 + 4);
    if (v19) {
      (*(void (**)(uint64_t))(*(void *)v19 + 8LL))(v19);
    }
    *(void *)&v50[2] = v34;
    std::streambuf::~streambuf(&v51);
    std::ios::~ios(&v52);
    return;
  }

  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_1018363B0);
  }
  uint64_t v28 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_FAULT))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 136315138;
    *(void *)&uint8_t buf[4] = "getFenceCentroid";
    _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_FAULT, "%s, No access to DB", buf, 0xCu);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_1018363B0);
    }
    *(_DWORD *)__int16 v48 = 136315138;
    *(void *)&v48[4] = "getFenceCentroid";
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  17LL,  "%s, No access to DB",  v48);
    __int16 v38 = (char *)v37;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "CLDaemonLocation CLFenceCentroidDatabase::getFenceCentroid(const int)",  "%s\n",  v37);
    if (v38 != buf) {
      free(v38);
    }
  }

  *(void *)(a3 + 4) = 0LL;
  *(void *)(a3 + 12) = 0LL;
  *(_OWORD *)(a3 + 10sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(__int128 *)((char *)&xmmword_101339690 + 4);
  *(_OWORD *)(a3 + 116) = *(__int128 *)((char *)&xmmword_1013396A0 + 4);
  *(_OWORD *)(a3 + 132) = *(__int128 *)((char *)&xmmword_1013396B0 + 4);
  *(_OWORD *)(a3 + 36) = *(__int128 *)((char *)&xmmword_101339650 + 4);
  *(_OWORD *)(a3 + 52) = *(__int128 *)((char *)&xmmword_101339660 + 4);
  *(_OWORD *)(a3 + 6_Block_object_dispose((const void *)(v30 - 184), 8) = *(__int128 *)((char *)&xmmword_101339670 + 4);
  *(_DWORD *)a3 = 0xFFFF;
  *(void *)(a3 + 14_Block_object_dispose((const void *)(v30 - 184), 8) = 0LL;
  *(_OWORD *)(a3 + 84) = *(__int128 *)((char *)&xmmword_101339680 + 4);
  *(_OWORD *)(a3 + 2sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(__int128 *)((char *)&xmmword_101339640 + 4);
}

void sub_1003D9970( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, char a35)
{
  if (v35) {
    (*(void (**)(uint64_t))(*(void *)v35 + 8LL))(v35);
  }
  sub_1011F8850((uint64_t)&a35);
  _Unwind_Resume(a1);
}

void sub_1003D99D8(id a1)
{
  qword_101934878 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeoFencing");
}

uint64_t sub_1003D9A04( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10, uint64_t a11, uint64_t a12)
{
  *(void *)a1 = 0x403E000000000000LL;
  *(void *)(a1 + _Block_object_dispose((const void *)(v30 - 184), 8) = a2;
  *(void *)(a1 + 16) = a3;
  *(void *)(a1 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = a4;
  *(void *)(a1 + 32) = a5;
  *(void *)(a1 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = a6;
  *(void *)(a1 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = a7;
  *(void *)(a1 + 56) = a8;
  *(_OWORD *)(a1 + 64) = a9;
  *(_OWORD *)(a1 + 8sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = a10;
  double v13 = (_OWORD *)(a1 + 1352);
  *(void *)(a1 + 96) = a11;
  *(void *)(a1 + 104) = a12;
  bzero((void *)(a1 + 112), 0x4D8uLL);
  *double v13 = xmmword_1012E80F8;
  *(_OWORD *)(a1 + 136_Block_object_dispose((const void *)(v30 - 184), 8) = unk_1012E8108;
  *(_OWORD *)(a1 + 1384) = xmmword_1012E8118;
  *(_OWORD *)(a1 + 1396) = *(__int128 *)((char *)&xmmword_1012E8118 + 12);
  *(void *)(a1 + 1416) = 0LL;
  uint64_t v14 = sub_1006E27E8();
  sub_100413284(v14, &v99);
  int v15 = sub_1002A81F8(v99, "NatalimetryUserInfoAge", (float *)&v101);
  int v16 = v15;
  double v17 = v100;
  if (v100)
  {
    p_shared_owners = (unint64_t *)&v100->__shared_owners_;
    do
      unint64_t v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
      if (!v16) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
  }

  if (v15)
  {
LABEL_6:
    int v20 = v101;
    *(_BYTE *)(a1 + 140_Block_object_dispose((const void *)(v30 - 184), 8) = 1;
    *(_DWORD *)(a1 + 13sub_1011C52D0(v16 - 72) = v20;
  }

void sub_1003DA0B0(_Unwind_Exception *a1)
{
}

uint64_t sub_1003DA0F4(uint64_t result)
{
  int v1 = result;
  if (result >= 4)
  {
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_1018363D0);
    }
    unsigned int v2 = (os_log_s *)qword_1019344D8;
    if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 67174657;
      int v8 = v1;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_ERROR,  "Unsupported CLHKBiologicalSex value: %{private}d",  buf,  8u);
    }

    BOOL v3 = sub_1002921D0(115, 0);
    double result = 0LL;
    if (v3)
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344D0 != -1) {
        dispatch_once(&qword_1019344D0, &stru_1018363D0);
      }
      v6[0] = 67174657;
      v6[1] = v1;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  16LL,  "Unsupported CLHKBiologicalSex value: %{private}d",  v6,  8);
      uint64_t v5 = (uint8_t *)v4;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "static CLHKBiologicalSex CLNatalieModelInput::intToBiologicalSex(int)",  "%s\n",  v4);
      if (v5 != buf) {
        free(v5);
      }
      return 0LL;
    }
  }

  return result;
}

void sub_1003DA2B8(uint64_t a1)
{
  double v2 = *(float *)(a1 + 36);
  double v3 = *(float *)(a1 + 20);
  double v4 = (float)(*(float *)(a1 + 12) / (float)(*(float *)(a1 + 8) * *(float *)(a1 + 8)));
  float v5 = (v2 * 1.921 + 56.363 + v3 * -0.381 + v4 * -0.754 + (double)(1 - *(_DWORD *)a1) * 10.987) / 3.5;
  double v6 = v3 * -0.039 + 14.889 + v4 * -0.151 + (double)*(int *)a1 * -3.1391 + v2 * 0.429;
  float v7 = v6;
  if (v5 >= v7) {
    float v8 = v5;
  }
  else {
    float v8 = v6;
  }
  if (*(_BYTE *)(a1 + 48)) {
    float v9 = v8 * 0.65;
  }
  else {
    float v9 = v8;
  }
  if (qword_1019344D0 != -1) {
    dispatch_once(&qword_1019344D0, &stru_1018363D0);
  }
  size_t v10 = (os_log_s *)qword_1019344D8;
  if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_DEFAULT))
  {
    int v11 = *(unsigned __int8 *)(a1 + 48);
    *(_DWORD *)std::stringbuf::string_type buf = 134219008;
    double v27 = v5;
    __int16 v28 = 2048;
    double v29 = v7;
    __int16 v30 = 2048;
    uint64_t v31 = 0x401C000000000000LL;
    __int16 v32 = 1024;
    int v33 = v11;
    __int16 v34 = 2048;
    double v35 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Derived Vo2max, %.1f, Revised Vo2max, %.1f, Minimum Vo2max, %.1f, Beta Blocker Use, %d, Beta Blocker Vo2max, %.1f",  buf,  0x30u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_1018363D0);
    }
    int v12 = *(unsigned __int8 *)(a1 + 48);
    int v16 = 134219008;
    double v17 = v5;
    __int16 v18 = 2048;
    double v19 = v7;
    __int16 v20 = 2048;
    uint64_t v21 = 0x401C000000000000LL;
    __int16 v22 = 1024;
    int v23 = v12;
    __int16 v24 = 2048;
    double v25 = v9;
    LODWORD(v15) = 48;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  0LL,  "Derived Vo2max, %.1f, Revised Vo2max, %.1f, Minimum Vo2max, %.1f, Beta Blocker Use, %d, Beta Blocker Vo2max, %.1f",  COERCE_DOUBLE(&v16),  v15);
    uint64_t v14 = (uint8_t *)v13;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static float CLNatalieModelInput::computeDerivedVo2max(const CLBodyMetrics)",  "%s\n",  v13);
    if (v14 != buf) {
      free(v14);
    }
  }

uint64_t sub_1003DA5C8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10, uint64_t a11, uint64_t a12)
{
  return sub_1003D9A04(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

uint64_t sub_1003DA5EC(void **a1, double a2)
{
  return (*(uint64_t (**)(void *, double))(*a1[12] + 40LL))(a1[12], a2);
}

uint64_t sub_1003DA6FC(uint64_t a1)
{
  return sub_1003DA904(*(void **)(a1 + 24));
}

uint64_t sub_1003DA724(void *a1)
{
  if (qword_1019344D0 != -1) {
    dispatch_once(&qword_1019344D0, &stru_1018363D0);
  }
  double v2 = (os_log_s *)qword_1019344D8;
  if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = a1[1];
    *(_DWORD *)std::stringbuf::string_type buf = 136315138;
    uint64_t v11 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Disabling the %s buffer", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_1018363D0);
    }
    uint64_t v5 = a1[1];
    int v8 = 136315138;
    uint64_t v9 = v5;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  0LL,  "Disabling the %s buffer",  (const char *)&v8);
    float v7 = (uint8_t *)v6;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNatalieInput<CLOdometerEntry>::disableSource() [Data_T = CLOdometerEntry]",  "%s\n",  v6);
    if (v7 != buf) {
      free(v7);
    }
  }

  (*(void (**)(void *))(*a1 + 88LL))(a1);
  uint64_t result = (*(uint64_t (**)(void *))(*a1 + 72LL))(a1);
  if (!*((_BYTE *)a1 + 121))
  {
    *((_BYTE *)a1 + 8sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0;
    a1[11] = 0LL;
  }

  return result;
}

uint64_t sub_1003DA904(void *a1)
{
  if (qword_1019344D0 != -1) {
    dispatch_once(&qword_1019344D0, &stru_1018363D0);
  }
  double v2 = (os_log_s *)qword_1019344D8;
  if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = a1[1];
    *(_DWORD *)std::stringbuf::string_type buf = 136315138;
    uint64_t v11 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Disabling the %s buffer", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_1018363D0);
    }
    uint64_t v5 = a1[1];
    int v8 = 136315138;
    uint64_t v9 = v5;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  0LL,  "Disabling the %s buffer",  (const char *)&v8);
    float v7 = (uint8_t *)v6;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLNatalieInput<CLElevationChangeEntry>::disableSource()", "%s\n", v6);
    if (v7 != buf) {
      free(v7);
    }
  }

  (*(void (**)(void *))(*a1 + 88LL))(a1);
  uint64_t result = (*(uint64_t (**)(void *))(*a1 + 72LL))(a1);
  if (!*((_BYTE *)a1 + 121))
  {
    *((_BYTE *)a1 + 8sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0;
    a1[11] = 0LL;
  }

  return result;
}

uint64_t sub_1003DAAE4(uint64_t a1)
{
  return sub_1003DACCC(*(void **)(a1 + 24));
}

uint64_t sub_1003DAB0C(void *a1)
{
  if (qword_1019344D0 != -1) {
    dispatch_once(&qword_1019344D0, &stru_1018363D0);
  }
  double v2 = (os_log_s *)qword_1019344D8;
  if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = a1[1];
    *(_DWORD *)std::stringbuf::string_type buf = 136315138;
    uint64_t v11 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "Enabling the spectators for %s buffer",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_1018363D0);
    }
    uint64_t v5 = a1[1];
    int v8 = 136315138;
    uint64_t v9 = v5;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  0LL,  "Enabling the spectators for %s buffer",  (const char *)&v8);
    float v7 = (uint8_t *)v6;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNatalieInput<CLOdometerEntry>::enableSource() [Data_T = CLOdometerEntry]",  "%s\n",  v6);
    if (v7 != buf) {
      free(v7);
    }
  }

  return (*(uint64_t (**)(void *))(*a1 + 80LL))(a1);
}

uint64_t sub_1003DACCC(void *a1)
{
  if (qword_1019344D0 != -1) {
    dispatch_once(&qword_1019344D0, &stru_1018363D0);
  }
  double v2 = (os_log_s *)qword_1019344D8;
  if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = a1[1];
    *(_DWORD *)std::stringbuf::string_type buf = 136315138;
    uint64_t v11 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "Enabling the spectators for %s buffer",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_1018363D0);
    }
    uint64_t v5 = a1[1];
    int v8 = 136315138;
    uint64_t v9 = v5;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  0LL,  "Enabling the spectators for %s buffer",  (const char *)&v8);
    float v7 = (uint8_t *)v6;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLNatalieInput<CLElevationChangeEntry>::enableSource()", "%s\n", v6);
    if (v7 != buf) {
      free(v7);
    }
  }

  return (*(uint64_t (**)(void *))(*a1 + 80LL))(a1);
}

float sub_1003DAE8C(float *a1, double a2)
{
  float result = -1.0;
  if (a1[344] + -10.0 > a2)
  {
    float v4 = a1[346];
    if (vabdd_f64(a2, v4) < 0.001) {
      return (float)((float)(a1[345] * 2.6232) / v4) + 3.9865;
    }
  }

  return result;
}

void sub_1003DAEEC(uint64_t a1)
{
  __int128 v2 = *(_OWORD *)(a1 + 16);
  v10[0] = *(_OWORD *)a1;
  v10[1] = v2;
  v11[0] = *(_OWORD *)(a1 + 32);
  *(_OWORD *)((char *)v11 + 12) = *(_OWORD *)(a1 + 44);
  sub_1003DA2B8((uint64_t)v10);
  float v3 = *(float *)(a1 + 28) * 15.3;
  float v5 = v4 * 3.5;
  if (qword_1019344D0 != -1) {
    dispatch_once(&qword_1019344D0, &stru_1018363D0);
  }
  double v6 = (os_log_s *)qword_1019344D8;
  float v7 = v3 / v5;
  if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 134217984;
    double v15 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Estimated HRmin, %.1f ", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_1018363D0);
    }
    int v12 = 134217984;
    double v13 = v7;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  0LL,  "Estimated HRmin, %.1f ",  COERCE_DOUBLE(&v12));
    uint64_t v9 = (uint8_t *)v8;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static float CLNatalieModelInput::estimateHRmin(const CLBodyMetrics &)",  "%s\n",  v8);
    if (v9 != buf) {
      free(v9);
    }
  }

uint64_t sub_1003DB0E8(uint64_t a1, double a2)
{
  __int128 v106 = 0u;
  unsigned __int128 v107 = 0u;
  __int128 v104 = 0u;
  __int128 v105 = 0u;
  *(double *)(a1 + sub_1011C52D0(v9 - 120) = a2;
  *(double *)(a1 + 12_Block_object_dispose((const void *)(v30 - 184), 8) = a2;
  *(double *)(a1 + 112) = a2;
  if (((*(uint64_t (**)(void, __int128 *, __int128 *, __n128))(**(void **)(a1 + 48) + 16LL))( *(void *)(a1 + 48),  &v106,  &v104,  (__n128)*(unint64_t *)&a2) & 1) != 0)
  {
    uint64_t v4 = *((void *)&v107 + 1);
    unsigned __int128 v7 = v107;
    uint64_t v6 = v7 >> 64;
    float v5 = (void *)v7;
    if (*((void *)&v107 + 1) == *(void *)v107) {
      uint64_t v6 = *(void *)(v107 - 8) + 3944LL;
    }
    __int128 v8 = *(_OWORD *)(v6 - 232);
    __int128 v9 = *(_OWORD *)(v6 - 200);
    *(_OWORD *)(a1 + 16sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(_OWORD *)(v6 - 216);
    *(_OWORD *)(a1 + 176) = v9;
    *(_OWORD *)(a1 + 1memset(v19, 0, 44) = v8;
    __int128 v10 = *(_OWORD *)(v6 - 184);
    __int128 v11 = *(_OWORD *)(v6 - 168);
    __int128 v12 = *(_OWORD *)(v6 - 136);
    *(_OWORD *)(a1 + 2sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = *(_OWORD *)(v6 - 152);
    *(_OWORD *)(a1 + 24sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v12;
    *(_OWORD *)(a1 + 192) = v10;
    *(_OWORD *)(a1 + 20_Block_object_dispose((const void *)(v30 - 184), 8) = v11;
    __int128 v13 = *(_OWORD *)(v6 - 120);
    __int128 v14 = *(_OWORD *)(v6 - 104);
    __int128 v15 = *(_OWORD *)(v6 - 72);
    *(_OWORD *)(a1 + 2sub_1011C52D0(v16 - 88) = *(_OWORD *)(v6 - 88);
    *(_OWORD *)(a1 + 304) = v15;
    *(_OWORD *)(a1 + 256) = v13;
    *(_OWORD *)(a1 + 2sub_10000AE14(v1 - 72) = v14;
    __int128 v16 = *(_OWORD *)(v6 - 56);
    __int128 v17 = *(_OWORD *)(v6 - 40);
    __int128 v18 = *(_OWORD *)(v6 - 24);
    *(void *)(a1 + 36_Block_object_dispose((const void *)(v30 - 184), 8) = *(void *)(v6 - 8);
    *(_OWORD *)(a1 + 336) = v17;
    *(_OWORD *)(a1 + 352) = v18;
    *(_OWORD *)(a1 + 32sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v16;
    if (v4 == *v5)
    {
      uint64_t v21 = *--v5;
      double v19 = *(double *)(v21 + 3712);
      *(void *)&unsigned __int128 v107 = v5;
      uint64_t v4 = *v5 + 3944LL;
    }

    else
    {
      double v19 = *(double *)(v4 - 232);
    }

    *(double *)(a1 + sub_1011C52D0(v9 - 120) = v19;
    *(double *)(a1 + 12_Block_object_dispose((const void *)(v30 - 184), 8) = v19;
    uint64_t v22 = v4 - 232;
    *((void *)&v107 + 1) = v22;
    if (v22 == *((void *)&v105 + 1))
    {
      double v20 = v19;
    }

    else
    {
      if (v22 == *v5) {
        uint64_t v22 = *(v5 - 1) + 3944LL;
      }
      double v20 = *(double *)(v22 - 232);
      *(double *)(a1 + sub_1011C52D0(v9 - 120) = v20;
    }
  }

  else
  {
    double v20 = *(double *)(a1 + 120);
    double v19 = *(double *)(a1 + 128);
  }

  if (v19 - v20 < 0.1)
  {
    double v23 = -2.56;
LABEL_22:
    double v20 = v19 + v23;
    *(double *)(a1 + sub_1011C52D0(v9 - 120) = v20;
    goto LABEL_23;
  }

  if (v19 - v20 > 10.24)
  {
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_1018363D0);
    }
    __int16 v24 = (os_log_s *)qword_1019344D8;
    if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_DEBUG))
    {
      double v25 = *(double *)(a1 + 120);
      uint64_t v26 = *(void *)(a1 + 128);
      *(_DWORD *)std::stringbuf::string_type buf = 134218240;
      double v119 = v25;
      __int16 v120 = 2048;
      uint64_t v121 = v26;
      _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEBUG,  "ModelInput, Larger than expected gap between begin and end ts.  Setting end ts to some sane default. (%f, %f)",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344D0 != -1) {
        dispatch_once(&qword_1019344D0, &stru_1018363D0);
      }
      double v96 = *(double *)(a1 + 120);
      uint64_t v97 = *(void *)(a1 + 128);
      int v108 = 134218240;
      double v109 = v96;
      __int16 v110 = 2048;
      uint64_t v111 = v97;
      LODWORD(v99) = 22;
      int v98 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  2LL,  "ModelInput, Larger than expected gap between begin and end ts.  Setting end ts to some sane default. (%f, %f)",  COERCE_DOUBLE(&v108),  v99);
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLNatalieModelInput::setTime(CFAbsoluteTime)", "%s\n", v98);
    }

    double v19 = *(double *)(a1 + 128);
    double v23 = -10.24;
    goto LABEL_22;
  }

void *sub_1003DBB58@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1010DDBC0(a2, __str);
}

void sub_1003DBC28(uint64_t a1, __int128 *a2)
{
  __int128 v3 = *a2;
  __int128 v4 = a2[1];
  __int128 v5 = a2[2];
  *(_OWORD *)(a1 + 1396) = *(__int128 *)((char *)a2 + 44);
  *(_OWORD *)(a1 + 136_Block_object_dispose((const void *)(v30 - 184), 8) = v4;
  *(_OWORD *)(a1 + 1384) = v5;
  *(_OWORD *)(a1 + 1352) = v3;
  if (qword_1019344D0 != -1) {
    dispatch_once(&qword_1019344D0, &stru_1018363D0);
  }
  uint64_t v6 = (os_log_s *)qword_1019344D8;
  if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_DEBUG))
  {
    double v7 = *((float *)a2 + 2);
    double v8 = *((float *)a2 + 3);
    double v9 = *((float *)a2 + 4);
    double v10 = *((float *)a2 + 5);
    double v11 = *((float *)a2 + 6);
    double v12 = *((float *)a2 + 7);
    double v13 = *((float *)a2 + 8);
    double v14 = *((float *)a2 + 9);
    int v15 = *((_DWORD *)a2 + 10);
    double v16 = *((float *)a2 + 11);
    int v17 = *((unsigned __int8 *)a2 + 48);
    int v18 = *(_DWORD *)a2;
    int v19 = *((_DWORD *)a2 + 1);
    int v20 = *((unsigned __int8 *)a2 + 56);
    int v21 = *((unsigned __int8 *)a2 + 57);
    int v22 = *((unsigned __int8 *)a2 + 58);
    double v23 = *((float *)a2 + 13);
    *(_DWORD *)std::stringbuf::string_type buf = 67113216;
    int v58 = v18;
    __int16 v59 = 2048;
    double v60 = v7;
    __int16 v61 = 2048;
    double v62 = v8;
    __int16 v63 = 2048;
    double v64 = v9;
    __int16 v65 = 2048;
    double v66 = v10;
    __int16 v67 = 2048;
    double v68 = v11;
    __int16 v69 = 2048;
    double v70 = v12;
    __int16 v71 = 2048;
    double v72 = v13;
    __int16 v73 = 2048;
    double v74 = v14;
    __int16 v75 = 1024;
    int v76 = v15;
    __int16 v77 = 2048;
    double v78 = v16;
    __int16 v79 = 1024;
    int v80 = v17;
    __int16 v81 = 1024;
    int v82 = v19;
    __int16 v83 = 1024;
    int v84 = v20;
    __int16 v85 = 1024;
    int v86 = v21;
    __int16 v87 = 1024;
    int v88 = v22;
    __int16 v89 = 2048;
    double v90 = v23;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "ModelInput,gender,%d,height,%f,weight,%f,vo2max,%f,age,%f,hrmin,%f,hrmax,%f,hronset,%f,pal,%f,condition,%d,runVo2m ax,%f,betaBlockerUse,%d,biologicalSex,%d,isAgeSet,%d,isHeightSet,%d,isWeightSet,%d,adaptiveEMThresh,%f",  buf,  0x90u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_1018363D0);
    }
    double v24 = *((float *)a2 + 2);
    double v25 = *((float *)a2 + 3);
    double v26 = *((float *)a2 + 4);
    double v27 = *((float *)a2 + 5);
    double v28 = *((float *)a2 + 6);
    double v29 = *((float *)a2 + 7);
    double v30 = *((float *)a2 + 8);
    double v31 = *((float *)a2 + 9);
    int v32 = *((_DWORD *)a2 + 10);
    double v33 = *((float *)a2 + 11);
    __int16 v34 = *((unsigned __int8 *)a2 + 48);
    int v35 = *(_DWORD *)a2;
    int v36 = *((_DWORD *)a2 + 1);
    int v37 = *((unsigned __int8 *)a2 + 56);
    int v38 = *((unsigned __int8 *)a2 + 57);
    int v39 = *((unsigned __int8 *)a2 + 58);
    double v40 = *((float *)a2 + 13);
    LODWORD(vmemset(v19, 0, 44) = 67113216;
    HIDWORD(vmemset(v19, 0, 44) = v35;
    *(_WORD *)uint64_t v45 = 2048;
    *(double *)&void v45[2] = v24;
    *(_WORD *)&v45[10] = 2048;
    *(double *)&v45[12] = v25;
    *(_WORD *)&v45[20] = 2048;
    *(double *)&v45[22] = v26;
    *(_WORD *)&v45[30] = 2048;
    *(_WORD *)uint64_t v46 = 2048;
    *(double *)&void v46[2] = v28;
    *(_WORD *)&v46[10] = 2048;
    LODWORD(v47) = HIDWORD(v29);
    WORD2(v47) = 2048;
    HIWORD(v47) = LOWORD(v30);
    LOWORD(v4_Block_object_dispose((const void *)(v30 - 184), 8) = 1024;
    HIWORD(v4_Block_object_dispose((const void *)(v30 - 184), 8) = v32;
    LOWORD(v49) = 1024;
    HIWORD(v49) = v34;
    *(_DWORD *)uint64_t v50 = v36;
    *(_WORD *)&v50[4] = 1024;
    *(_DWORD *)&v50[6] = v37;
    __int16 v51 = 1024;
    int v52 = v38;
    __int16 v53 = 1024;
    int v54 = v39;
    __int16 v55 = 2048;
    double v56 = v40;
    LODWORD(v43) = 144;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  2LL,  "ModelInput,gender,%d,height,%f,weight,%f,vo2max,%f,age,%f,hrmin,%f,hrmax,%f,hronset,%f,pal,%f,condition,%d,runVo2m ax,%f,betaBlockerUse,%d,biologicalSex,%d,isAgeSet,%d,isHeightSet,%d,isWeightSet,%d,adaptiveEMThresh,%f",  &v44,  v43,  v44,  *(double *)v45,  *(double *)&v45[8],  *(double *)&v45[16],  *(double *)&v45[24],  v27,  *(double *)v46,  *(_DWORD *)&v46[8],  v47,  *(void *)&v30 >> 16,  LODWORD(v31),  v48,  LODWORD(v33),  v49,  *(double *)v50);
    int v42 = (uint8_t *)v41;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNatalieModelInput::updateBodyMetrics(const CLBodyMetrics &)",  "%s\n",  v41);
    if (v42 != buf) {
      free(v42);
    }
  }

uint64_t sub_1003DBFB4(uint64_t a1)
{
  LODWORD(result) = (*(uint64_t (**)(void, double *, double))(**(void **)(a1 + 8) + 24LL))( *(void *)(a1 + 8),  v2,  *(double *)(a1 + 112));
  if (v2[1] == 0.0) {
    return 0LL;
  }
  else {
    return result;
  }
}

void sub_1003DBFF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  if (v3 != 19)
  {
    if (v3 == 1) {
      goto LABEL_6;
    }
    if (v3) {
      return;
    }
  }

  if (*(void *)(a2 + 224) == 1LL)
  {
    *(void *)a1 = 0x4050400000000000LL;
    sub_1003DC0A0(*(double **)(a1 + 8), 65.0, 65.0);
    sub_1003DC2B8(*(double **)(a1 + 40), 150.0, 150.0);
    return;
  }

void sub_1003DC0A0(double *a1, double a2, double a3)
{
  if (qword_1019344D0 != -1) {
    dispatch_once(&qword_1019344D0, &stru_1018363D0);
  }
  uint64_t v6 = (os_log_s *)qword_1019344D8;
  if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = *((void *)a1 + 12);
    uint64_t v8 = *((void *)a1 + 1);
    uint64_t v9 = *((void *)a1 + 2);
    *(_DWORD *)std::stringbuf::string_type buf = 136316162;
    uint64_t v27 = v8;
    __int16 v28 = 2048;
    uint64_t v29 = v7;
    __int16 v30 = 2048;
    double v31 = a2;
    __int16 v32 = 2048;
    uint64_t v33 = v9;
    __int16 v34 = 2048;
    double v35 = a3;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "#Warning Input, %s, changing behavior timeout(before), %.3f, timeout(after), %.3f, threshold(before), %.3f, thresh old(after), %.3f",  buf,  0x34u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_1018363D0);
    }
    uint64_t v10 = *((void *)a1 + 12);
    uint64_t v11 = *((void *)a1 + 1);
    uint64_t v12 = *((void *)a1 + 2);
    int v16 = 136316162;
    uint64_t v17 = v11;
    __int16 v18 = 2048;
    uint64_t v19 = v10;
    __int16 v20 = 2048;
    double v21 = a2;
    __int16 v22 = 2048;
    uint64_t v23 = v12;
    __int16 v24 = 2048;
    double v25 = a3;
    LODWORD(v15) = 52;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  0LL,  "#Warning Input, %s, changing behavior timeout(before), %.3f, timeout(after), %.3f, threshold(before), %.3f, thresh old(after), %.3f",  (const char *)&v16,  v15);
    double v14 = (uint8_t *)v13;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNatalieInput<CLCatherineData>::modifyTimeouts(CFTimeInterval, CFTimeInterval) [Data_T = CLCatherineData]",  "%s\n",  v13);
    if (v14 != buf) {
      free(v14);
    }
  }

  a1[12] = a2;
  a1[2] = a3;
}

void sub_1003DC2B8(double *a1, double a2, double a3)
{
  if (qword_1019344D0 != -1) {
    dispatch_once(&qword_1019344D0, &stru_1018363D0);
  }
  uint64_t v6 = (os_log_s *)qword_1019344D8;
  if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = *((void *)a1 + 12);
    uint64_t v8 = *((void *)a1 + 1);
    uint64_t v9 = *((void *)a1 + 2);
    *(_DWORD *)std::stringbuf::string_type buf = 136316162;
    uint64_t v27 = v8;
    __int16 v28 = 2048;
    uint64_t v29 = v7;
    __int16 v30 = 2048;
    double v31 = a2;
    __int16 v32 = 2048;
    uint64_t v33 = v9;
    __int16 v34 = 2048;
    double v35 = a3;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "#Warning Input, %s, changing behavior timeout(before), %.3f, timeout(after), %.3f, threshold(before), %.3f, thresh old(after), %.3f",  buf,  0x34u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_1018363D0);
    }
    uint64_t v10 = *((void *)a1 + 12);
    uint64_t v11 = *((void *)a1 + 1);
    uint64_t v12 = *((void *)a1 + 2);
    int v16 = 136316162;
    uint64_t v17 = v11;
    __int16 v18 = 2048;
    uint64_t v19 = v10;
    __int16 v20 = 2048;
    double v21 = a2;
    __int16 v22 = 2048;
    uint64_t v23 = v12;
    __int16 v24 = 2048;
    double v25 = a3;
    LODWORD(v15) = 52;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  0LL,  "#Warning Input, %s, changing behavior timeout(before), %.3f, timeout(after), %.3f, threshold(before), %.3f, thresh old(after), %.3f",  (const char *)&v16,  v15);
    double v14 = (uint8_t *)v13;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNatalieInput<CLStepCountEntry>::modifyTimeouts(CFTimeInterval, CFTimeInterval) [Data_T = CLStepCountEntry]",  "%s\n",  v13);
    if (v14 != buf) {
      free(v14);
    }
  }

  a1[12] = a2;
  a1[2] = a3;
}

void sub_1003DC4D0(id a1)
{
  qword_1019344D8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Calorimetry");
}

void sub_1003DCC18(id a1)
{
  qword_101934818 = (uint64_t)os_log_create("com.apple.locationd.Position", "GpsAccessory");
}

uint64_t sub_1003DCC58()
{
  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_101995660, (void *)&_mh_execute_header);
}

void sub_1003DCFDC(id a1)
{
  qword_101995678 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLBackgroundInertialOdometryServiceSilo");
}

void sub_1003DD3A0(_Unwind_Exception *a1)
{
}

id sub_1003DD3BC(uint64_t a1, void *a2)
{
  return _[a2 onBackgroundBatchData:a1 + 8];
}

uint64_t sub_1003DDFF0(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(a1 + 32)) {
    return 0LL;
  }
  else {
    return a2;
  }
}

void sub_1003DE3E0(id a1)
{
  qword_101934798 = (uint64_t)os_log_create("com.apple.locationd.Motion", "InertialOdometry");
}

void *sub_1003DE40C(void *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  *a1 = off_1018A2210;
  id v9 = a5;
  *a1 = off_101836480;
  a1[1] = v9;
  a1[2] = a3;
  a1[3] = a4;
  id v10 = a2;
  a1[5] = 0LL;
  a1[4] = v10;
  a1[6] = 0LL;
  v14[0] = 0LL;
  v14[1] = v14;
  _DWORD v14[2] = 0x2020000000LL;
  char v15 = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 3221225472LL;
  aBlock[2] = sub_1003DE540;
  aBlock[3] = &unk_10182EFC8;
  aBlock[4] = v14;
  a1[5] = _Block_copy(aBlock);
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  void v12[2] = sub_1003DE554;
  v12[3] = &unk_10182EFF0;
  v12[4] = v14;
  a1[6] = _Block_copy(v12);
  _Block_object_dispose(v14, 8);
  return a1;
}

void sub_1003DE518(_Unwind_Exception *a1)
{
}

uint64_t sub_1003DE540(uint64_t result)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 32) + 8LL) + 24LL) = 1;
  return result;
}

BOOL sub_1003DE554(uint64_t a1)
{
  return *(_BYTE *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) == 0;
}

void sub_1003DE570(uint64_t a1)
{
  uint64_t v1 = (void *)sub_1003DE884(a1);
  operator delete(v1);
}

id sub_1003DE584(void *a1, int a2, void *__src, unint64_t a4)
{
  if (a4 >= 0xE0) {
    size_t v8 = 224LL;
  }
  else {
    size_t v8 = a4;
  }
  memcpy(__dst, __src, v8);
  if (a4 >= 0xE1)
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_1018364E8);
    }
    id v9 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 136315906;
      unint64_t v43 = 0x800000010133F860LL & 0x7FFFFFFFFFFFFFFFLL;
      __int16 v44 = 2048;
      uint64_t v45 = 224LL;
      __int16 v46 = 2048;
      unint64_t v47 = a4;
      __int16 v48 = 1024;
      int v49 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "SIZE MISMATCH: %s=%lu vs sz=%zu notification=%d",  buf,  0x26u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_1018364E8);
      }
      int v34 = 136315906;
      unint64_t v35 = 0x800000010133F860LL & 0x7FFFFFFFFFFFFFFFLL;
      __int16 v36 = 2048;
      uint64_t v37 = 224LL;
      __int16 v38 = 2048;
      unint64_t v39 = a4;
      __int16 v40 = 1024;
      int v41 = a2;
      char v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  2LL,  "SIZE MISMATCH: %s=%lu vs sz=%zu notification=%d",  (const char *)&v34,  38,  v16,  LODWORD(v17[0]));
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLMotionNotifier::SiloDispatcher<CLMotionCoprocessorInterface::NotificationData>::dispatchData(int, const void *, size_t) [T = CLMotionCoprocessorInterface::NotificationData]",  "%s\n",  v15);
    }
  }

  uint64_t v11 = a1[2];
  uint64_t v10 = a1[3];
  uint64_t v12 = a1[6];
  double v13 = (void *)a1[4];
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472LL;
  void v17[2] = sub_1003DE8DC;
  v17[3] = &unk_1018364C8;
  v17[4] = v12;
  v17[5] = v11;
  __int128 v28 = __dst[10];
  __int128 v29 = __dst[11];
  __int128 v30 = __dst[12];
  __int128 v31 = __dst[13];
  __int128 v24 = __dst[6];
  __int128 v25 = __dst[7];
  __int128 v26 = __dst[8];
  __int128 v27 = __dst[9];
  __int128 v20 = __dst[2];
  __int128 v21 = __dst[3];
  __int128 v22 = __dst[4];
  __int128 v23 = __dst[5];
  __int128 v18 = __dst[0];
  __int128 v19 = __dst[1];
  uint64_t v32 = v10;
  return [v13 async:v17];
}

uint64_t sub_1003DE884(uint64_t a1)
{
  *(void *)a1 = off_101836480;
  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
  _Block_release(*(const void **)(a1 + 40));
  _Block_release(*(const void **)(a1 + 48));

  return sub_1011C07F8(a1);
}

uint64_t sub_1003DE8DC(uint64_t a1)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
  if ((_DWORD)result) {
    return (*(uint64_t (**)(uint64_t, void))(a1 + 40))(a1 + 48, *(void *)(a1 + 272));
  }
  return result;
}

void sub_1003DE920(id a1)
{
  qword_1019344B8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Motion");
}

void sub_1003DE94C(void **a1, void *a2)
{
  __int128 v2 = *a1;
  *a1 = a2;
  if (v2)
  {
    uint64_t v3 = v2[2];
    v2[2] = 0LL;
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
    }
    operator delete(v2);
  }

uint64_t sub_1003DE998()
{
  if (qword_1019A0F98) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0F98 + 8LL))(qword_1019A0F98);
  }
  if (qword_1019A0FA0) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0FA0 + 8LL))(qword_1019A0FA0);
  }
  if (qword_1019A0FA8) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0FA8 + 8LL))(qword_1019A0FA8);
  }
  if (qword_1019A0FB0) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0FB0 + 8LL))(qword_1019A0FB0);
  }
  if (qword_1019A0FB8) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0FB8 + 8LL))(qword_1019A0FB8);
  }
  if (qword_1019A0FC0) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0FC0 + 8LL))(qword_1019A0FC0);
  }
  if (qword_1019A0FC8) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0FC8 + 8LL))(qword_1019A0FC8);
  }
  uint64_t result = qword_1019A0FD0;
  if (qword_1019A0FD0) {
    return (*(uint64_t (**)(uint64_t))(*(void *)qword_1019A0FD0 + 8LL))(qword_1019A0FD0);
  }
  return result;
}

void sub_1003DEA6C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_101995688 & 1) == 0)
  {
    byte_101995688 = 1;
    wireless_diagnostics::google::protobuf::internal::VerifyVersion( (wireless_diagnostics::google::protobuf::internal *)0x1E9808,  2005000,  (int)"/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPRayTracingTilesAvailability.pb.cc",  a4);
    __int128 v4 = operator new(0x18uLL);
    v4[1] = 0LL;
    v4[2] = 0LL;
    *__int128 v4 = &off_101836518;
    qword_1019A0F98 = (uint64_t)v4;
    __int128 v5 = operator new(0x18uLL);
    v5[1] = 0LL;
    v5[2] = 0LL;
    *__int128 v5 = off_101836590;
    qword_1019A0FA0 = (uint64_t)v5;
    uint64_t v6 = operator new(0x18uLL);
    v6[1] = 0LL;
    _DWORD v6[2] = 0LL;
    *uint64_t v6 = off_101836608;
    qword_1019A0FA8 = (uint64_t)v6;
    uint64_t v7 = (char *)operator new(0x38uLL);
    *(void *)uint64_t v7 = &off_101836680;
    *(_OWORD *)(v7 + _Block_object_dispose((const void *)(v30 - 184), 8) = 0u;
    *(_OWORD *)(v7 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 0u;
    *(_OWORD *)(v7 + 36) = 0u;
    qword_1019A0FB0 = (uint64_t)v7;
    size_t v8 = operator new(0x20uLL);
    *size_t v8 = off_1018366F8;
    v8[1] = 0LL;
    v8[2] = 0LL;
    v8[3] = 0LL;
    qword_1019A0FB8 = (uint64_t)v8;
    id v9 = operator new(0x20uLL);
    *id v9 = off_101836770;
    v9[1] = 0LL;
    v9[2] = 0LL;
    v9[3] = 0LL;
    qword_1019A0FC0 = (uint64_t)v9;
    uint64_t v10 = operator new(0x30uLL);
    *(void *)((char *)v10 + 36) = 0LL;
    *uint64_t v10 = &off_1018367E8;
    v10[1] = 0LL;
    _OWORD v10[2] = 0LL;
    void v10[3] = 0LL;
    qword_1019A0FC8 = (uint64_t)v10;
    uint64_t v11 = operator new(0x38uLL);
    void v11[6] = 0LL;
    qword_1019A0FD0 = (uint64_t)v11;
    v11[3] = 0LL;
    v11[4] = 0LL;
    *((_DWORD *)v11 + 1sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0;
    v4[1] = v11;
    *((void *)v7 + 1) = v5;
    v9[1] = v8;
    v9[2] = v8;
    v10[1] = v9;
    *uint64_t v11 = off_101836860;
    v11[1] = v6;
    _OWORD v11[2] = v7;
    wireless_diagnostics::google::protobuf::internal::OnShutdown( (wireless_diagnostics::google::protobuf::internal *)sub_1003DE998,  v12);
  }

void *sub_1003DEC40(void *result)
{
  result[1] = 0LL;
  result[2] = 0LL;
  *uint64_t result = &off_101836518;
  return result;
}

void sub_1003DEC54(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v8,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPRayTracingTilesAvailability.pb.cc",  219LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v8,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v7, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }

  if ((*(_BYTE *)(a2 + 20) & 1) != 0)
  {
    *(_DWORD *)(a1 + 20) |= 1u;
    __int128 v5 = *(char **)(a1 + 8);
    if (!v5)
    {
      __int128 v5 = (char *)operator new(0x38uLL);
      *(void *)__int128 v5 = off_101836860;
      *((void *)v5 + 6) = 0LL;
      *(_OWORD *)(v5 + _Block_object_dispose((const void *)(v30 - 184), 8) = 0u;
      *(_OWORD *)(v5 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 0u;
      *((_DWORD *)v5 + 1sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0;
      *(void *)(a1 + _Block_object_dispose((const void *)(v30 - 184), 8) = v5;
    }

    uint64_t v6 = *(void *)(a2 + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1019A0F98 + 8);
    }
    sub_1003DF148((uint64_t)v5, v6);
  }

void sub_1003DED20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1003DED38(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_101836518;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0F98 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1003DED8C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

uint64_t sub_1003DEDA0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0F98;
  if (!qword_1019A0F98)
  {
    sub_1003DEA6C(0LL, a2, a3, a4);
    return qword_1019A0F98;
  }

  return result;
}

void *sub_1003DEDCC()
{
  uint64_t result = operator new(0x18uLL);
  result[1] = 0LL;
  result[2] = 0LL;
  *uint64_t result = &off_101836518;
  return result;
}

uint64_t sub_1003DEDF4(uint64_t result)
{
  uint64_t v1 = result;
  if ((*(_BYTE *)(result + 20) & 1) != 0)
  {
    uint64_t result = *(void *)(result + 8);
    if (result) {
      uint64_t result = sub_1003DEE28(result);
    }
  }

  *(_DWORD *)(v1 + 2sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0;
  return result;
}

uint64_t sub_1003DEE28(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(_BYTE *)(result + 52);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(result + 52) & 1) != 0)
    {
      uint64_t v3 = *(void *)(result + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 20)) {
          *(void *)(v3 + _Block_object_dispose((const void *)(v30 - 184), 8) = 0LL;
        }
        *(_DWORD *)(v3 + 2sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0;
        int v2 = *(_DWORD *)(result + 52);
      }
    }

    if ((v2 & 2) != 0)
    {
      uint64_t result = *(void *)(result + 16);
      if (result) {
        uint64_t result = sub_1003DFC5C(result);
      }
    }
  }

  if (*(int *)(v1 + 32) >= 1)
  {
    uint64_t v4 = 0LL;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(v1 + 24) + 8 * v4);
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 32LL))(v5);
      ++v4;
    }

    while (v4 < *(int *)(v1 + 32));
  }

  *(_DWORD *)(v1 + 32) = 0;
  *(_DWORD *)(v1 + 52) = 0;
  return result;
}

uint64_t sub_1003DEEB8( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + _Block_object_dispose((const void *)(v30 - 184), 8) = (_DWORD)TagFallback;
      }

      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
        *((_DWORD *)this + _Block_object_dispose((const void *)(v30 - 184), 8) = (_DWORD)TagFallback;
        *((void *)this + 1) = v5 + 1;
      }

      if ((_DWORD)TagFallback != 10) {
        break;
      }
      *(_DWORD *)(a1 + 20) |= 1u;
      char v7 = *(char **)(a1 + 8);
      if (!v7)
      {
        char v7 = (char *)operator new(0x38uLL);
        *(void *)char v7 = off_101836860;
        *((void *)v7 + 6) = 0LL;
        *(_OWORD *)(v7 + _Block_object_dispose((const void *)(v30 - 184), 8) = 0u;
        *(_OWORD *)(v7 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 0u;
        *((_DWORD *)v7 + 1sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0;
        *(void *)(a1 + _Block_object_dispose((const void *)(v30 - 184), 8) = v7;
      }

      size_t v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v17)) {
          return 0LL;
        }
      }

      else
      {
        unsigned int v17 = *v8;
        *((void *)this + 1) = v8 + 1;
      }

      int v9 = *((_DWORD *)this + 14);
      int v10 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v9 + 1;
      if (v9 >= v10) {
        return 0LL;
      }
      int v11 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v17);
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v11);
      int v13 = *((_DWORD *)this + 14);
      BOOL v14 = __OFSUB__(v13, 1);
      int v15 = v13 - 1;
      if (v15 < 0 == v14) {
        *((_DWORD *)this + 14) = v15;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + _Block_object_dispose((const void *)(v30 - 184), 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
  }

  return 1LL;
}

uint64_t sub_1003DF064( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if ((*(_BYTE *)(result + 20) & 1) != 0)
  {
    uint64_t v5 = *(void *)(result + 8);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_1019A0F98 + 8);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v5,  a2,  a4);
  }

  return result;
}

uint64_t sub_1003DF090(uint64_t a1, unint64_t a2)
{
  if ((*(_BYTE *)(a1 + 20) & 1) != 0)
  {
    uint64_t v4 = *(void *)(a1 + 8);
    if (!v4) {
      uint64_t v4 = *(void *)(qword_1019A0F98 + 8);
    }
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003E1D50(v4, a2);
    int v7 = (int)v5;
    else {
      int v8 = 1;
    }
    uint64_t result = (v7 + v8 + 1);
  }

  else
  {
    uint64_t result = 0LL;
  }

  *(_DWORD *)(a1 + 16) = result;
  return result;
}

void sub_1003DF0FC(uint64_t a1, void *lpsrc)
{
}

void sub_1003DF148(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v19,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPRayTracingTilesAvailability.pb.cc",  1894LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v19,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v18, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
  }

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24),  *(_DWORD *)(a2 + 32) + *(_DWORD *)(a1 + 32));
  if (*(int *)(a2 + 32) >= 1)
  {
    uint64_t v5 = 0LL;
    do
    {
      uint64_t v6 = *(void *)(*(void *)(a2 + 24) + 8 * v5);
      int v7 = *(_DWORD *)(a1 + 36);
      uint64_t v8 = *(int *)(a1 + 32);
      if ((int)v8 >= v7)
      {
        if (v7 == *(_DWORD *)(a1 + 40))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24),  v7 + 1);
          int v7 = *(_DWORD *)(a1 + 36);
        }

        *(_DWORD *)(a1 + 36) = v7 + 1;
        int v10 = operator new(0x30uLL);
        v10[9] = 0;
        v10[10] = 0;
        *(void *)int v10 = &off_1018367E8;
        *((void *)v10 + 1) = 0LL;
        *((void *)v10 + 2) = 0LL;
        *((void *)v10 + 3) = 0LL;
        uint64_t v11 = *(void *)(a1 + 24);
        uint64_t v12 = *(int *)(a1 + 32);
        *(_DWORD *)(a1 + 32) = v12 + 1;
        *(void *)(v11 + 8 * v12) = v10;
      }

      else
      {
        uint64_t v9 = *(void *)(a1 + 24);
        *(_DWORD *)(a1 + 32) = v8 + 1;
        int v10 = *(_DWORD **)(v9 + 8 * v8);
      }

      sub_1003E0EF8((uint64_t)v10, v6);
      ++v5;
    }

    while (v5 < *(int *)(a2 + 32));
  }

  LOBYTE(v13) = *(_BYTE *)(a2 + 52);
  if ((_BYTE)v13)
  {
    if ((*(_BYTE *)(a2 + 52) & 1) != 0)
    {
      *(_DWORD *)(a1 + 52) |= 1u;
      BOOL v14 = *(void **)(a1 + 8);
      if (!v14)
      {
        BOOL v14 = operator new(0x18uLL);
        v14[1] = 0LL;
        _DWORD v14[2] = 0LL;
        *BOOL v14 = off_101836608;
        *(void *)(a1 + _Block_object_dispose((const void *)(v30 - 184), 8) = v14;
      }

      uint64_t v15 = *(void *)(a2 + 8);
      if (!v15) {
        uint64_t v15 = *(void *)(qword_1019A0FD0 + 8);
      }
      sub_1003DF5F4(v14, v15);
      int v13 = *(_DWORD *)(a2 + 52);
    }

    if ((v13 & 2) != 0)
    {
      *(_DWORD *)(a1 + 52) |= 2u;
      uint64_t v16 = *(char **)(a1 + 16);
      if (!v16)
      {
        uint64_t v16 = (char *)operator new(0x38uLL);
        *(void *)uint64_t v16 = &off_101836680;
        *(_OWORD *)(v16 + _Block_object_dispose((const void *)(v30 - 184), 8) = 0u;
        *(_OWORD *)(v16 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 0u;
        *(_OWORD *)(v16 + 36) = 0u;
        *(void *)(a1 + 16) = v16;
      }

      uint64_t v17 = *(void *)(a2 + 16);
      if (!v17) {
        uint64_t v17 = *(void *)(qword_1019A0FD0 + 16);
      }
      sub_1003DFA04((uint64_t)v16, v17);
    }
  }

void sub_1003DF334(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_1003DF34C()
{
  return 1LL;
}

void *sub_1003DF354@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.RayTracingTilesAvailability.LogEntry");
}

double sub_1003DF364(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v7,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPRayTracingTilesAvailability.pb.cc",  384LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v7,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v6, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }

  if ((*(_BYTE *)(a2 + 20) & 1) != 0)
  {
    double result = *(double *)(a2 + 8);
    *(_DWORD *)(a1 + 20) |= 1u;
    *(double *)(a1 + _Block_object_dispose((const void *)(v30 - 184), 8) = result;
  }

  return result;
}

void sub_1003DF3EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1003DF404(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101836590;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1003DF414(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101836590;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

void *sub_1003DF434()
{
  double result = operator new(0x18uLL);
  result[1] = 0LL;
  result[2] = 0LL;
  *double result = off_101836590;
  return result;
}

uint64_t sub_1003DF45C(uint64_t result)
{
  if (*(_BYTE *)(result + 20)) {
    *(void *)(result + _Block_object_dispose((const void *)(v30 - 184), 8) = 0LL;
  }
  *(_DWORD *)(result + 2sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0;
  return result;
}

uint64_t sub_1003DF470( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + _Block_object_dispose((const void *)(v30 - 184), 8) = (_DWORD)TagFallback;
      }

      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
        *((_DWORD *)this + _Block_object_dispose((const void *)(v30 - 184), 8) = (_DWORD)TagFallback;
        *((void *)this + 1) = v5 + 1;
      }

      if ((_DWORD)TagFallback != 9) {
        break;
      }
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v8) & 1) == 0) {
        return 0LL;
      }
      *(void *)(a1 + _Block_object_dispose((const void *)(v30 - 184), 8) = v8;
      *(_DWORD *)(a1 + 20) |= 1u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + _Block_object_dispose((const void *)(v30 - 184), 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
  }

  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) != 0);
  return 0LL;
}

uint64_t sub_1003DF55C( uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  if ((*(_BYTE *)(result + 20) & 1) != 0) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  a2,  *(double *)(result + 8),  a3);
  }
  return result;
}

uint64_t sub_1003DF574(uint64_t a1)
{
  uint64_t v1 = ((int)(*(_DWORD *)(a1 + 20) << 31) >> 31) & 9;
  *(_DWORD *)(a1 + 16) = v1;
  return v1;
}

double sub_1003DF590(uint64_t a1, void *lpsrc)
{
  return sub_1003DF364(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003DF5DC()
{
  return 1LL;
}

void *sub_1003DF5E4@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.RayTracingTilesAvailability.AvailabilityFileTimestamp");
}

void sub_1003DF5F4(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPRayTracingTilesAvailability.pb.cc",  582LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 20);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 20) & 1) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v6;
      int v5 = *(_DWORD *)(a2 + 20);
    }

    if ((v5 & 2) != 0)
    {
      int v7 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v7;
    }
  }

void sub_1003DF69C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1003DF6B4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101836608;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1003DF6C4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101836608;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

void *sub_1003DF6E4()
{
  uint64_t result = operator new(0x18uLL);
  result[1] = 0LL;
  result[2] = 0LL;
  *uint64_t result = off_101836608;
  return result;
}

uint64_t sub_1003DF70C(uint64_t result)
{
  if (*(_BYTE *)(result + 20)) {
    *(void *)(result + _Block_object_dispose((const void *)(v30 - 184), 8) = 0LL;
  }
  *(_DWORD *)(result + 2sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0;
  return result;
}

uint64_t sub_1003DF720( unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  int v6 = a1 + 3;
  while (1)
  {
    while (1)
    {
      int v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + _Block_object_dispose((const void *)(v30 - 184), 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback) {
          return 1LL;
        }
      }

      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
        *((_DWORD *)this + _Block_object_dispose((const void *)(v30 - 184), 8) = (_DWORD)TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!(_DWORD)TagFallback) {
          return 1LL;
        }
      }

      int v9 = TagFallback & 7;
      uint64_t v12 = (char *)*((void *)this + 1);
      unint64_t v10 = *((void *)this + 2);
      if ((unint64_t)v12 >= v10 || *v12 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!(_DWORD)result) {
          return result;
        }
        int v13 = (_BYTE *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
      }

      else
      {
        *int v5 = *v12;
        int v13 = v12 + 1;
        *((void *)this + 1) = v13;
      }

      a1[5] |= 1u;
      if ((unint64_t)v13 < v10 && *v13 == 16)
      {
        uint64_t v11 = v13 + 1;
        *((void *)this + 1) = v11;
LABEL_24:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result) {
            return result;
          }
          BOOL v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }

        else
        {
          *int v6 = *v11;
          BOOL v14 = (unsigned __int8 *)(v11 + 1);
          *((void *)this + 1) = v14;
        }

        a1[5] |= 2u;
        if (v14 == (unsigned __int8 *)v10
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + _Block_object_dispose((const void *)(v30 - 184), 8) = 0;
          uint64_t result = 1LL;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }

    if (TagFallback >> 3 == 2)
    {
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        uint64_t v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_24;
      }
    }

    else
    {
      int v9 = TagFallback & 7;
    }

uint64_t sub_1003DF8BC( uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(_DWORD *)(result + 8),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }

  if ((v6 & 2) != 0) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(_DWORD *)(v5 + 12),  a2,  a4);
  }
  return result;
}

uint64_t sub_1003DF914(uint64_t a1, unsigned int a2)
{
  char v3 = *(_BYTE *)(a1 + 20);
  if (v3)
  {
    if ((*(_BYTE *)(a1 + 20) & 1) != 0)
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v5 >= 0x80)
      {
        if ((*(_DWORD *)(a1 + 20) & 2) == 0) {
          goto LABEL_14;
        }
      }

      else
      {
        uint64_t v4 = 2LL;
        if ((v3 & 2) == 0) {
          goto LABEL_14;
        }
      }
    }

    else
    {
      uint64_t v4 = 0LL;
      if ((*(_BYTE *)(a1 + 20) & 2) == 0) {
        goto LABEL_14;
      }
    }

    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    else {
      int v7 = 2;
    }
    uint64_t v4 = (v7 + v4);
  }

  else
  {
    uint64_t v4 = 0LL;
  }

void sub_1003DF9A0(_DWORD *a1, void *lpsrc)
{
}

uint64_t sub_1003DF9EC()
{
  return 1LL;
}

void *sub_1003DF9F4@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.RayTracingTilesAvailability.AvailabilityFileCommonHeader");
}

void sub_1003DFA04(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v16,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPRayTracingTilesAvailability.pb.cc",  978LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v16,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v15, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 48);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 48) & 1) != 0)
    {
      *(_DWORD *)(a1 + 48) |= 1u;
      int v7 = *(void **)(a1 + 8);
      if (!v7)
      {
        int v7 = operator new(0x18uLL);
        v7[1] = 0LL;
        _DWORD v7[2] = 0LL;
        *int v7 = off_101836590;
        *(void *)(a1 + _Block_object_dispose((const void *)(v30 - 184), 8) = v7;
      }

      uint64_t v8 = *(void *)(a2 + 8);
      if (!v8) {
        uint64_t v8 = *(void *)(qword_1019A0FB0 + 8);
      }
      sub_1003DF364((uint64_t)v7, v8);
      int v5 = *(_DWORD *)(a2 + 48);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_20;
      }
    }

    else if ((*(_BYTE *)(a2 + 48) & 2) == 0)
    {
      goto LABEL_6;
    }

    int v9 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 48) |= 2u;
    *(_DWORD *)(a1 + 16) = v9;
    int v5 = *(_DWORD *)(a2 + 48);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_21;
    }

void sub_1003DFBA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1003DFBC0(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_101836680;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0FB0 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1003DFC14(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

double sub_1003DFC28()
{
  uint64_t v0 = (char *)operator new(0x38uLL);
  *(void *)uint64_t v0 = &off_101836680;
  double result = 0.0;
  *(_OWORD *)(v0 + _Block_object_dispose((const void *)(v30 - 184), 8) = 0u;
  *(_OWORD *)(v0 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 0u;
  *(_OWORD *)(v0 + 36) = 0u;
  return result;
}

uint64_t sub_1003DFC5C(uint64_t result)
{
  if (*(_BYTE *)(result + 48))
  {
    if ((*(_BYTE *)(result + 48) & 1) != 0)
    {
      uint64_t v1 = *(void *)(result + 8);
      if (v1)
      {
        if (*(_BYTE *)(v1 + 20)) {
          *(void *)(v1 + _Block_object_dispose((const void *)(v30 - 184), 8) = 0LL;
        }
        *(_DWORD *)(v1 + 2sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0;
      }
    }

    *(void *)(result + 16) = 0LL;
    *(void *)(result + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 0LL;
    *(_DWORD *)(result + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0;
    *(void *)(result + 32) = 0LL;
  }

  *(_DWORD *)(result + 4_Block_object_dispose((const void *)(v30 - 184), 8) = 0;
  return result;
}

uint64_t sub_1003DFC94( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 16);
  int v6 = (unsigned int *)(a1 + 20);
  int v7 = (unsigned int *)(a1 + 24);
  uint64_t v8 = (unsigned int *)(a1 + 28);
  int v9 = (unsigned int *)(a1 + 32);
  int v10 = (unsigned int *)(a1 + 36);
  int v11 = (unsigned int *)(a1 + 40);
  while (2)
  {
    int v12 = (char *)*((void *)this + 1);
    if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + _Block_object_dispose((const void *)(v30 - 184), 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v12;
      *((_DWORD *)this + _Block_object_dispose((const void *)(v30 - 184), 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v12 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v14 = TagFallback & 7;
        if (v14 != 2) {
          goto LABEL_28;
        }
        unint64_t v47 = v11;
        char v15 = v10;
        uint64_t v16 = v9;
        uint64_t v17 = v8;
        char v18 = v7;
        __int128 v19 = v6;
        *(_DWORD *)(a1 + 48) |= 1u;
        __int128 v20 = *(void **)(a1 + 8);
        if (!v20)
        {
          __int128 v20 = operator new(0x18uLL);
          v20[1] = 0LL;
          void v20[2] = 0LL;
          void *v20 = off_101836590;
          *(void *)(a1 + _Block_object_dispose((const void *)(v30 - 184), 8) = v20;
        }

        __int128 v21 = v5;
        __int128 v22 = (char *)*((void *)this + 1);
        if ((unint64_t)v22 >= *((void *)this + 2) || *v22 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v48)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v48 = *v22;
          *((void *)this + 1) = v22 + 1;
        }

        int v31 = *((_DWORD *)this + 14);
        int v32 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v31 + 1;
        if (v31 >= v32) {
          return 0LL;
        }
        int v33 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v48);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v33);
        int v35 = *((_DWORD *)this + 14);
        BOOL v36 = __OFSUB__(v35, 1);
        int v37 = v35 - 1;
        if (v37 < 0 == v36) {
          *((_DWORD *)this + 14) = v37;
        }
        __int16 v38 = (_BYTE *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        int v5 = v21;
        int v6 = v19;
        int v7 = v18;
        uint64_t v8 = v17;
        int v9 = v16;
        int v10 = v15;
        int v11 = v47;
        __int128 v24 = v38 + 1;
        *((void *)this + 1) = v24;
        goto LABEL_41;
      case 2u:
        int v14 = TagFallback & 7;
        __int128 v24 = (char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
LABEL_41:
        if ((unint64_t)v24 >= v23 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result) {
            return result;
          }
          unint64_t v39 = (_BYTE *)*((void *)this + 1);
          unint64_t v23 = *((void *)this + 2);
        }

        else
        {
          *int v5 = *v24;
          unint64_t v39 = v24 + 1;
          *((void *)this + 1) = v39;
        }

        *(_DWORD *)(a1 + 48) |= 2u;
        __int128 v25 = v39 + 1;
        *((void *)this + 1) = v25;
LABEL_49:
        if ((unint64_t)v25 >= v23 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result) {
            return result;
          }
          int v41 = (_BYTE *)*((void *)this + 1);
          unint64_t v23 = *((void *)this + 2);
        }

        else
        {
          *int v6 = *v25;
          int v41 = v25 + 1;
          *((void *)this + 1) = v41;
        }

        *(_DWORD *)(a1 + 48) |= 4u;
        __int128 v26 = v41 + 1;
        *((void *)this + 1) = v26;
LABEL_57:
        if ((unint64_t)v26 >= v23 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result) {
            return result;
          }
          int v42 = (_BYTE *)*((void *)this + 1);
          unint64_t v23 = *((void *)this + 2);
        }

        else
        {
          *int v7 = *v26;
          int v42 = v26 + 1;
          *((void *)this + 1) = v42;
        }

        *(_DWORD *)(a1 + 48) |= 8u;
        __int128 v27 = v42 + 1;
        *((void *)this + 1) = v27;
LABEL_65:
        if ((unint64_t)v27 >= v23 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result) {
            return result;
          }
          unint64_t v43 = (_BYTE *)*((void *)this + 1);
          unint64_t v23 = *((void *)this + 2);
        }

        else
        {
          *uint64_t v8 = *v27;
          unint64_t v43 = v27 + 1;
          *((void *)this + 1) = v43;
        }

        *(_DWORD *)(a1 + 48) |= 0x10u;
        __int128 v28 = v43 + 1;
        *((void *)this + 1) = v28;
LABEL_73:
        if ((unint64_t)v28 >= v23 || *v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!(_DWORD)result) {
            return result;
          }
          __int16 v44 = (_BYTE *)*((void *)this + 1);
          unint64_t v23 = *((void *)this + 2);
        }

        else
        {
          *int v9 = *v28;
          __int16 v44 = v28 + 1;
          *((void *)this + 1) = v44;
        }

        *(_DWORD *)(a1 + 48) |= 0x20u;
        __int128 v29 = v44 + 1;
        *((void *)this + 1) = v29;
LABEL_81:
        if ((unint64_t)v29 >= v23 || *v29 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!(_DWORD)result) {
            return result;
          }
          uint64_t v45 = (_BYTE *)*((void *)this + 1);
          unint64_t v23 = *((void *)this + 2);
        }

        else
        {
          *int v10 = *v29;
          uint64_t v45 = v29 + 1;
          *((void *)this + 1) = v45;
        }

        *(_DWORD *)(a1 + 48) |= 0x40u;
        __int128 v30 = v45 + 1;
        *((void *)this + 1) = v30;
LABEL_89:
        if ((unint64_t)v30 >= v23 || *v30 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
          if (!(_DWORD)result) {
            return result;
          }
          __int16 v46 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v23 = *((void *)this + 2);
        }

        else
        {
          *int v11 = *v30;
          __int16 v46 = (unsigned __int8 *)(v30 + 1);
          *((void *)this + 1) = v46;
        }

        *(_DWORD *)(a1 + 48) |= 0x80u;
        *((_DWORD *)this + _Block_object_dispose((const void *)(v30 - 184), 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        break;
      case 3u:
        int v14 = TagFallback & 7;
        __int128 v25 = (char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        goto LABEL_49;
      case 4u:
        int v14 = TagFallback & 7;
        __int128 v26 = (char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        goto LABEL_57;
      case 5u:
        int v14 = TagFallback & 7;
        __int128 v27 = (char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        goto LABEL_65;
      case 6u:
        int v14 = TagFallback & 7;
        __int128 v28 = (char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        goto LABEL_73;
      case 7u:
        int v14 = TagFallback & 7;
        __int128 v29 = (char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        goto LABEL_81;
      case 8u:
        int v14 = TagFallback & 7;
        __int128 v30 = (char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        goto LABEL_89;
      default:
        int v14 = TagFallback & 7;
LABEL_28:
        if (v14 == 4) {
          return 1LL;
        }
        return 0LL;
    }

    return result;
  }

uint64_t sub_1003E01E0( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = (int *)result;
  int v6 = *(_DWORD *)(result + 48);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0FB0 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = v5[12];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v5[4],  a2,  a4);
  int v6 = v5[12];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }

uint64_t sub_1003E02F4(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 48);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0LL;
    goto LABEL_44;
  }

  if ((*(_BYTE *)(a1 + 48) & 1) == 0)
  {
    uint64_t v4 = 0LL;
    if ((*(_BYTE *)(a1 + 48) & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_9;
  }

  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_1019A0FB0 + 8);
  }
  int v6 = ((int)(*(_DWORD *)(v5 + 20) << 31) >> 31) & 9;
  *(_DWORD *)(v5 + 16) = v6;
  uint64_t v4 = v6 | 2u;
  int v3 = *(_DWORD *)(a1 + 48);
  if ((v3 & 2) != 0)
  {
LABEL_9:
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 48);
    }

    else
    {
      int v8 = 2;
    }

    uint64_t v4 = (v8 + v4);
  }

void sub_1003E0494(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1003E04E0()
{
  return 1LL;
}

void *sub_1003E04E8@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.RayTracingTilesAvailability.RayTracingTilesAvailabilityHeader");
}

double sub_1003E04F8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v8,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPRayTracingTilesAvailability.pb.cc",  1200LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v8,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v7, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 28);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 28) & 1) != 0)
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 28) |= 1u;
      *(double *)(a1 + _Block_object_dispose((const void *)(v30 - 184), 8) = result;
      int v6 = *(_DWORD *)(a2 + 28);
    }

    if ((v6 & 2) != 0)
    {
      double result = *(double *)(a2 + 16);
      *(_DWORD *)(a1 + 28) |= 2u;
      *(double *)(a1 + 16) = result;
    }
  }

  return result;
}

void sub_1003E05A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1003E05B8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018366F8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1003E05C8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018366F8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

void *sub_1003E05E8()
{
  double result = operator new(0x20uLL);
  *double result = off_1018366F8;
  result[1] = 0LL;
  result[2] = 0LL;
  result[3] = 0LL;
  return result;
}

uint64_t sub_1003E0610(uint64_t result)
{
  if (*(_BYTE *)(result + 28))
  {
    *(void *)(result + _Block_object_dispose((const void *)(v30 - 184), 8) = 0LL;
    *(void *)(result + 16) = 0LL;
  }

  *(_DWORD *)(result + 2_Block_object_dispose((const void *)(v30 - 184), 8) = 0;
  return result;
}

uint64_t sub_1003E0624( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + _Block_object_dispose((const void *)(v30 - 184), 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
          *((_DWORD *)this + _Block_object_dispose((const void *)(v30 - 184), 8) = (_DWORD)TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_21;
        }
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v10) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + _Block_object_dispose((const void *)(v30 - 184), 8) = v10;
        *(_DWORD *)(a1 + 28) |= 1u;
        int v8 = (_BYTE *)*((void *)this + 1);
        if ((unint64_t)v8 < *((void *)this + 2) && *v8 == 17)
        {
          *((void *)this + 1) = v8 + 1;
          goto LABEL_15;
        }
      }

      if (TagFallback >> 3 != 2)
      {
        int v7 = TagFallback & 7;
        goto LABEL_21;
      }

      int v7 = TagFallback & 7;
      if (v7 == 1) {
        break;
      }
LABEL_21:
      if (v7 == 4) {
        return 1LL;
      }
    }

uint64_t sub_1003E0780( uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 28);
  if ((v5 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  a2,  *(double *)(result + 8),  a3);
    int v5 = *(_DWORD *)(v4 + 28);
  }

  if ((v5 & 2) != 0) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  a2,  *(double *)(v4 + 16),  a3);
  }
  return result;
}

uint64_t sub_1003E07D8(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 28);
  if (*(_BYTE *)(a1 + 28))
  {
    unsigned int v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }

  *(_DWORD *)(a1 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v1;
  return v1;
}

double sub_1003E0804(uint64_t a1, void *lpsrc)
{
  return sub_1003E04F8(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003E0850()
{
  return 1LL;
}

void *sub_1003E0858@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.RayTracingTilesAvailability.LatLonGeodetic");
}

double sub_1003E0868(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v12,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPRayTracingTilesAvailability.pb.cc",  1418LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v12,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 28);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 28) & 1) != 0)
    {
      *(_DWORD *)(a1 + 28) |= 1u;
      int v7 = *(void **)(a1 + 8);
      if (!v7)
      {
        int v7 = operator new(0x20uLL);
        *int v7 = off_1018366F8;
        v7[1] = 0LL;
        _DWORD v7[2] = 0LL;
        v7[3] = 0LL;
        *(void *)(a1 + _Block_object_dispose((const void *)(v30 - 184), 8) = v7;
      }

      uint64_t v8 = *(void *)(a2 + 8);
      if (!v8) {
        uint64_t v8 = *(void *)(qword_1019A0FC0 + 8);
      }
      double result = sub_1003E04F8((uint64_t)v7, v8);
      int v6 = *(_DWORD *)(a2 + 28);
    }

    if ((v6 & 2) != 0)
    {
      *(_DWORD *)(a1 + 28) |= 2u;
      int v9 = *(void **)(a1 + 16);
      if (!v9)
      {
        int v9 = operator new(0x20uLL);
        *int v9 = off_1018366F8;
        v9[1] = 0LL;
        v9[2] = 0LL;
        v9[3] = 0LL;
        *(void *)(a1 + 16) = v9;
      }

      uint64_t v10 = *(void *)(a2 + 16);
      if (!v10) {
        uint64_t v10 = *(void *)(qword_1019A0FC0 + 16);
      }
      return sub_1003E04F8((uint64_t)v9, v10);
    }
  }

  return result;
}

void sub_1003E0978(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void *sub_1003E0990(void *result)
{
  if ((void *)qword_1019A0FC0 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    double result = (void *)v1[2];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_1003E09EC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101836770;
  sub_1003E0990(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1003E0A1C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101836770;
  sub_1003E0990(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v2);
}

void *sub_1003E0A50()
{
  double result = operator new(0x20uLL);
  *double result = off_101836770;
  result[1] = 0LL;
  result[2] = 0LL;
  result[3] = 0LL;
  return result;
}

uint64_t sub_1003E0A78(uint64_t result)
{
  LOBYTE(v1) = *(_BYTE *)(result + 28);
  if ((_BYTE)v1)
  {
    if ((*(_BYTE *)(result + 28) & 1) != 0)
    {
      uint64_t v2 = *(void *)(result + 8);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 28))
        {
          *(void *)(v2 + _Block_object_dispose((const void *)(v30 - 184), 8) = 0LL;
          *(void *)(v2 + 16) = 0LL;
        }

        *(_DWORD *)(v2 + 2_Block_object_dispose((const void *)(v30 - 184), 8) = 0;
        int v1 = *(_DWORD *)(result + 28);
      }
    }

    if ((v1 & 2) != 0)
    {
      uint64_t v3 = *(void *)(result + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 28))
        {
          *(void *)(v3 + _Block_object_dispose((const void *)(v30 - 184), 8) = 0LL;
          *(void *)(v3 + 16) = 0LL;
        }

        *(_DWORD *)(v3 + 2_Block_object_dispose((const void *)(v30 - 184), 8) = 0;
      }
    }
  }

  *(_DWORD *)(result + 2_Block_object_dispose((const void *)(v30 - 184), 8) = 0;
  return result;
}

uint64_t sub_1003E0AC4( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + _Block_object_dispose((const void *)(v30 - 184), 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
          *((_DWORD *)this + _Block_object_dispose((const void *)(v30 - 184), 8) = (_DWORD)TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_17;
        }
        *(_DWORD *)(a1 + 28) |= 1u;
        uint64_t v8 = *(void **)(a1 + 8);
        if (!v8)
        {
          uint64_t v8 = operator new(0x20uLL);
          *uint64_t v8 = off_1018366F8;
          v8[1] = 0LL;
          v8[2] = 0LL;
          v8[3] = 0LL;
          *(void *)(a1 + _Block_object_dispose((const void *)(v30 - 184), 8) = v8;
        }

        int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v27)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v27 = *v9;
          *((void *)this + 1) = v9 + 1;
        }

        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0LL;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        uint64_t v17 = (_BYTE *)*((void *)this + 1);
        if ((unint64_t)v17 < *((void *)this + 2) && *v17 == 18)
        {
          *((void *)this + 1) = v17 + 1;
          goto LABEL_29;
        }
      }

      int v7 = TagFallback & 7;
      if (v7 != 2) {
        goto LABEL_17;
      }
LABEL_29:
      *(_DWORD *)(a1 + 28) |= 2u;
      int v18 = *(void **)(a1 + 16);
      if (!v18)
      {
        int v18 = operator new(0x20uLL);
        *int v18 = off_1018366F8;
        v18[1] = 0LL;
        _DWORD v18[2] = 0LL;
        v18[3] = 0LL;
        *(void *)(a1 + 16) = v18;
      }

      __int128 v19 = (char *)*((void *)this + 1);
      if ((unint64_t)v19 >= *((void *)this + 2) || *v19 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v28)) {
          return 0LL;
        }
      }

      else
      {
        unsigned int v28 = *v19;
        *((void *)this + 1) = v19 + 1;
      }

      int v20 = *((_DWORD *)this + 14);
      int v21 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v20 + 1;
      if (v20 >= v21) {
        return 0LL;
      }
      int v22 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v28);
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v22);
      int v24 = *((_DWORD *)this + 14);
      BOOL v15 = __OFSUB__(v24, 1);
      int v25 = v24 - 1;
      if (v25 < 0 == v15) {
        *((_DWORD *)this + 14) = v25;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + _Block_object_dispose((const void *)(v30 - 184), 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }

    int v7 = TagFallback & 7;
LABEL_17:
    if (v7 == 4) {
      return 1LL;
    }
  }

uint64_t sub_1003E0D68( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      return result;
    }
    goto LABEL_7;
  }

  uint64_t v7 = *(void *)(result + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_1019A0FC0 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
  if ((*(_DWORD *)(v5 + 28) & 2) != 0)
  {
LABEL_7:
    uint64_t v8 = *(void *)(v5 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1019A0FC0 + 16);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v8,  a2,  a4);
  }

  return result;
}

uint64_t sub_1003E0DE4(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 28))
  {
    uint64_t v1 = 0LL;
    goto LABEL_20;
  }

  if ((*(_BYTE *)(a1 + 28) & 1) == 0)
  {
    uint64_t v1 = 0LL;
    if ((*(_BYTE *)(a1 + 28) & 2) == 0) {
      goto LABEL_20;
    }
    goto LABEL_13;
  }

  uint64_t v2 = *(void *)(a1 + 8);
  if (!v2) {
    uint64_t v2 = *(void *)(qword_1019A0FC0 + 8);
  }
  int v3 = *(unsigned __int8 *)(v2 + 28);
  if (*(_BYTE *)(v2 + 28))
  {
    if ((v3 & 2) != 0) {
      int v3 = ((v3 << 31 >> 31) & 9) + 9;
    }
    else {
      int v3 = (v3 << 31 >> 31) & 9;
    }
  }

  *(_DWORD *)(v2 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v3;
  uint64_t v1 = (v3 + 2);
  if ((*(_DWORD *)(a1 + 28) & 2) != 0)
  {
LABEL_13:
    uint64_t v4 = *(void *)(a1 + 16);
    if (!v4) {
      uint64_t v4 = *(void *)(qword_1019A0FC0 + 16);
    }
    int v5 = *(unsigned __int8 *)(v4 + 28);
    if (*(_BYTE *)(v4 + 28))
    {
      if ((v5 & 2) != 0) {
        int v5 = ((v5 << 31 >> 31) & 9) + 9;
      }
      else {
        int v5 = (v5 << 31 >> 31) & 9;
      }
    }

    *(_DWORD *)(v4 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v5;
    uint64_t v1 = (v1 + v5 + 2);
  }

double sub_1003E0E94(uint64_t a1, void *lpsrc)
{
  return sub_1003E0868(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003E0EE0()
{
  return 1LL;
}

void *sub_1003E0EE8@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.RayTracingTilesAvailability.BoundingBox");
}

double sub_1003E0EF8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v10,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPRayTracingTilesAvailability.pb.cc",  1647LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v10,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }

  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    sub_10008D024(a1 + 16, *(_DWORD *)(a1 + 24) + v6);
    memcpy((void *)(*(void *)(a1 + 16) + 8LL * *(int *)(a1 + 24)), *(const void **)(a2 + 16), 8LL * *(int *)(a2 + 24));
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
  }

  if ((*(_BYTE *)(a2 + 40) & 1) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v7 = *(void **)(a1 + 8);
    if (!v7)
    {
      uint64_t v7 = operator new(0x20uLL);
      *uint64_t v7 = off_101836770;
      v7[1] = 0LL;
      _DWORD v7[2] = 0LL;
      v7[3] = 0LL;
      *(void *)(a1 + _Block_object_dispose((const void *)(v30 - 184), 8) = v7;
    }

    uint64_t v8 = *(void *)(a2 + 8);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1019A0FC8 + 8);
    }
    return sub_1003E0868((uint64_t)v7, v8);
  }

  return result;
}

void sub_1003E0FF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1003E1010(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1018367E8;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0FC8 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  int v3 = (void *)*((void *)this + 2);
  if (v3) {
    operator delete[](v3);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1003E1070(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

_DWORD *sub_1003E1084()
{
  double result = operator new(0x30uLL);
  result[9] = 0;
  result[10] = 0;
  *(void *)double result = &off_1018367E8;
  *((void *)result + 1) = 0LL;
  *((void *)result + 2) = 0LL;
  *((void *)result + 3) = 0LL;
  return result;
}

uint64_t sub_1003E10B0(uint64_t result)
{
  uint64_t v1 = result;
  if ((*(_BYTE *)(result + 40) & 1) != 0)
  {
    double result = *(void *)(result + 8);
    if (result) {
      double result = sub_1003E0A78(result);
    }
  }

  *(_DWORD *)(v1 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 0;
  *(_DWORD *)(v1 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0;
  return result;
}

uint64_t sub_1003E10E8( uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unsigned int a3)
{
  uint64_t v5 = a1 + 16;
  while (1)
  {
    while (1)
    {
      int v6 = (char *)*((void *)this + 1);
      if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + _Block_object_dispose((const void *)(v30 - 184), 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback) {
          return 1LL;
        }
      }

      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
        *((_DWORD *)this + _Block_object_dispose((const void *)(v30 - 184), 8) = (_DWORD)TagFallback;
        *((void *)this + 1) = v6 + 1;
        if (!(_DWORD)TagFallback) {
          return 1LL;
        }
      }

      int v8 = TagFallback & 7;
      if (v8 != 2) {
        goto LABEL_19;
      }
      *(_DWORD *)(a1 + 40) |= 1u;
      int v11 = *(void **)(a1 + 8);
      if (!v11)
      {
        int v11 = operator new(0x20uLL);
        *int v11 = off_101836770;
        v11[1] = 0LL;
        _OWORD v11[2] = 0LL;
        v11[3] = 0LL;
        *(void *)(a1 + _Block_object_dispose((const void *)(v30 - 184), 8) = v11;
      }

      int v12 = (char *)*((void *)this + 1);
      if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  (unsigned int *)v28)) {
          return 0LL;
        }
      }

      else
      {
        v28[0] = *v12;
        *((void *)this + 1) = v12 + 1;
      }

      int v14 = *((_DWORD *)this + 14);
      int v15 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v14 + 1;
      if (v14 >= v15) {
        return 0LL;
      }
      int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v28[0]);
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
      int v18 = *((_DWORD *)this + 14);
      BOOL v19 = __OFSUB__(v18, 1);
      int v20 = v18 - 1;
      if (v20 < 0 == v19) {
        *((_DWORD *)this + 14) = v20;
      }
      int v21 = (_BYTE *)*((void *)this + 1);
      unint64_t v10 = *((void *)this + 2);
      if ((unint64_t)v21 < v10 && *v21 == 18)
      {
        char v9 = v21 + 1;
        *((void *)this + 1) = v9;
LABEL_33:
        if ((unint64_t)v9 >= v10 || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v29)) {
            return 0LL;
          }
          unsigned int v22 = v29;
        }

        else
        {
          unsigned int v22 = *v9;
          unsigned int v29 = v22;
          *((void *)this + 1) = v9 + 1;
        }

        int v23 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v22);
        while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
        {
          int v24 = (char *)*((void *)this + 1);
          if ((unint64_t)v24 >= *((void *)this + 2) || *v24 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback( this,  (unint64_t *)v28)) {
              return 0LL;
            }
          }

          else
          {
            *(void *)unsigned int v28 = *v24;
            *((void *)this + 1) = v24 + 1;
          }

          int v25 = *(_DWORD *)(a1 + 24);
          if (v25 == *(_DWORD *)(a1 + 28))
          {
            sub_10008D024(v5, v25 + 1);
            int v25 = *(_DWORD *)(a1 + 24);
          }

          uint64_t v26 = *(void *)v28;
          uint64_t v27 = *(void *)(a1 + 16);
          *(_DWORD *)(a1 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v25 + 1;
          *(void *)(v27 + 8LL * v25) = v26;
        }

        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v23);
LABEL_48:
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + _Block_object_dispose((const void *)(v30 - 184), 8) = 0;
          uint64_t result = 1LL;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }

    if (TagFallback >> 3 == 2)
    {
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        uint64_t result = sub_1003E13C4(1, 0x12u, this, v5);
        if (!(_DWORD)result) {
          return result;
        }
        goto LABEL_48;
      }

      if (v8 == 2)
      {
        char v9 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_33;
      }
    }

    else
    {
      int v8 = TagFallback & 7;
    }

uint64_t sub_1003E13C4( int a1, unsigned int a2, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a4)
{
  uint64_t v7 = (char *)*((void *)this + 1);
  if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, &v22);
    if (!(_DWORD)result) {
      return result;
    }
  }

  else
  {
    unint64_t v22 = *v7;
    *((void *)this + 1) = v7 + 1;
  }

  int v9 = *(_DWORD *)(a4 + 8);
  int v10 = *(_DWORD *)(a4 + 12);
  if (v9 == v10)
  {
    sub_10008D024(a4, v9 + 1);
    int v9 = *(_DWORD *)(a4 + 8);
    int v10 = *(_DWORD *)(a4 + 12);
  }

  unint64_t v11 = v22;
  uint64_t v12 = *(void *)a4;
  int v13 = v9 + 1;
  *(_DWORD *)(a4 + _Block_object_dispose((const void *)(v30 - 184), 8) = v9 + 1;
  *(void *)(v12 + 8LL * v9) = v11;
  if (v10 - (v9 + 1) >= 1)
  {
    int v14 = v10 - v9;
    do
    {
      if (a2 > 0x7F)
      {
        if (a2 >> 14) {
          return 1LL;
        }
        int v18 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        unsigned int v17 = (char *)(v18 + 2);
      }

      else
      {
        int v16 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        unsigned int v17 = (char *)(v16 + 1);
      }

      *((void *)this + 1) = v17;
      if ((unint64_t)v17 >= v15 || *v17 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, &v22);
        if (!(_DWORD)result) {
          return result;
        }
        int v13 = *(_DWORD *)(a4 + 8);
      }

      else
      {
        unint64_t v22 = *v17;
        *((void *)this + 1) = v17 + 1;
      }

      if (v13 >= *(_DWORD *)(a4 + 12))
      {
        wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v24,  3LL,  "/AppleInternal/Library/BuildRoots/9fd3fc02-a7db-11ef-98ff-a6e88e557b55/Applications/Xcode.app/Contents/Develop er/Platforms/AppleTVOS.platform/Developer/SDKs/AppleTVOS18.2.Internal.sdk/usr/local/include/google/protobuf/repeated_field.h",  602LL);
        uint64_t v19 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v24,  "CHECK failed: (size()) < (Capacity()): ");
        wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v23, v19);
        wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v24);
        int v13 = *(_DWORD *)(a4 + 8);
      }

      unint64_t v20 = v22;
      uint64_t v21 = *(void *)a4;
      *(_DWORD *)(a4 + _Block_object_dispose((const void *)(v30 - 184), 8) = v13 + 1;
      *(void *)(v21 + 8LL * v13) = v20;
      --v14;
      ++v13;
    }

    while (v14 > 1);
  }

  return 1LL;
}

void sub_1003E15A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_1003E15B8( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if ((*(_BYTE *)(result + 40) & 1) != 0)
  {
    uint64_t v6 = *(void *)(result + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1019A0FC8 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v6,  a2,  a4);
  }

  if (*(int *)(v5 + 24) >= 1)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2, 0x12u);
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2, *(_DWORD *)(v5 + 32));
    if (*(int *)(v5 + 24) >= 1)
    {
      uint64_t v7 = 0LL;
      do
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64( a2,  *(void *)(*(void *)(v5 + 16) + 8 * v7++));
      while (v7 < *(int *)(v5 + 24));
    }
  }

  return result;
}

uint64_t sub_1003E165C(uint64_t a1, unint64_t a2)
{
  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
  {
    uint64_t v4 = *(void *)(a1 + 8);
    if (!v4) {
      uint64_t v4 = *(void *)(qword_1019A0FC8 + 8);
    }
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003E0DE4(v4);
    int v6 = (int)v5;
    else {
      int v7 = 1;
    }
    int v3 = v6 + v7 + 1;
  }

  else
  {
    int v3 = 0;
  }

  if (*(int *)(a1 + 24) < 1)
  {
    LODWORD(v9) = 0;
  }

  else
  {
    uint64_t v8 = 0LL;
    LODWORD(v9) = 0;
    do
      int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(*(void *)(a1 + 16) + 8 * v8++),  a2)
                                                                           + v9);
    while (v8 < *(int *)(a1 + 24));
    if ((int)v9 > 0)
    {
      else {
        int v10 = 2;
      }
      v3 += v10;
    }
  }

  uint64_t result = (v3 + (_DWORD)v9);
  *(_DWORD *)(a1 + 32) = (_DWORD)v9;
  *(_DWORD *)(a1 + 36) = result;
  return result;
}

double sub_1003E1738(uint64_t a1, void *lpsrc)
{
  return sub_1003E0EF8(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003E1784()
{
  return 1LL;
}

void *sub_1003E178C@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.RayTracingTilesAvailability.RegionSpecificAvailableTiles");
}

void sub_1003E179C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101836860;
  uint64_t v2 = (uint64_t)a1 + 24;
  sub_1003E17DC(a1);
  sub_10008D0EC(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void *sub_1003E17DC(void *result)
{
  if ((void *)qword_1019A0FD0 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    uint64_t result = (void *)v1[2];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_1003E183C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

double sub_1003E1850()
{
  uint64_t v0 = (char *)operator new(0x38uLL);
  *(void *)uint64_t v0 = off_101836860;
  *((void *)v0 + 6) = 0LL;
  double result = 0.0;
  *(_OWORD *)(v0 + _Block_object_dispose((const void *)(v30 - 184), 8) = 0u;
  *(_OWORD *)(v0 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 0u;
  *((_DWORD *)v0 + 1sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0;
  return result;
}

uint64_t sub_1003E1888( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          int v6 = (char *)*((void *)this + 1);
          if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
          {
            TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + _Block_object_dispose((const void *)(v30 - 184), 8) = (_DWORD)TagFallback;
            if (!(_DWORD)TagFallback) {
              return 1LL;
            }
          }

          else
          {
            TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
            *((_DWORD *)this + _Block_object_dispose((const void *)(v30 - 184), 8) = (_DWORD)TagFallback;
            *((void *)this + 1) = v6 + 1;
            if (!(_DWORD)TagFallback) {
              return 1LL;
            }
          }

          unsigned int v8 = TagFallback >> 3;
          int v9 = TagFallback & 7;
          if (v9 != 2) {
            goto LABEL_21;
          }
          *(_DWORD *)(a1 + 52) |= 1u;
          int v10 = *(unsigned int **)(a1 + 8);
          if (!v10)
          {
            int v10 = (unsigned int *)operator new(0x18uLL);
            *((void *)v10 + 1) = 0LL;
            *((void *)v10 + 2) = 0LL;
            *(void *)int v10 = off_101836608;
            *(void *)(a1 + _Block_object_dispose((const void *)(v30 - 184), 8) = v10;
          }

          unint64_t v11 = (char *)*((void *)this + 1);
          if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v44)) {
              return 0LL;
            }
          }

          else
          {
            unsigned int v44 = *v11;
            *((void *)this + 1) = v11 + 1;
          }

          int v12 = *((_DWORD *)this + 14);
          int v13 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v12 + 1;
          if (v12 >= v13) {
            return 0LL;
          }
          int v14 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v44);
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v14);
          int v16 = *((_DWORD *)this + 14);
          BOOL v17 = __OFSUB__(v16, 1);
          int v18 = v16 - 1;
          if (v18 < 0 == v17) {
            *((_DWORD *)this + 14) = v18;
          }
          uint64_t v19 = (_BYTE *)*((void *)this + 1);
          if ((unint64_t)v19 < *((void *)this + 2) && *v19 == 18)
          {
            *((void *)this + 1) = v19 + 1;
            goto LABEL_33;
          }
        }

        if (v8 != 2) {
          break;
        }
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_21;
        }
LABEL_33:
        *(_DWORD *)(a1 + 52) |= 2u;
        unint64_t v20 = *(char **)(a1 + 16);
        if (!v20)
        {
          unint64_t v20 = (char *)operator new(0x38uLL);
          *(void *)unint64_t v20 = &off_101836680;
          *(_OWORD *)(v20 + _Block_object_dispose((const void *)(v30 - 184), 8) = 0u;
          *(_OWORD *)(v20 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 0u;
          *(_OWORD *)(v20 + 36) = 0u;
          *(void *)(a1 + 16) = v20;
        }

        uint64_t v21 = (char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v45)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v45 = *v21;
          *((void *)this + 1) = v21 + 1;
        }

        int v22 = *((_DWORD *)this + 14);
        int v23 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v22 + 1;
        if (v22 >= v23) {
          return 0LL;
        }
        int v24 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v45);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v24);
        int v26 = *((_DWORD *)this + 14);
        BOOL v17 = __OFSUB__(v26, 1);
        int v27 = v26 - 1;
        if (v27 < 0 == v17) {
          *((_DWORD *)this + 14) = v27;
        }
        unsigned int v28 = (_BYTE *)*((void *)this + 1);
      }

      if (v8 != 3) {
        break;
      }
      int v9 = TagFallback & 7;
      if (v9 != 2) {
        goto LABEL_21;
      }
      while (1)
      {
        int v29 = *(_DWORD *)(a1 + 36);
        uint64_t v30 = *(int *)(a1 + 32);
        if ((int)v30 >= v29)
        {
          if (v29 == *(_DWORD *)(a1 + 40))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v29 + 1);
            int v29 = *(_DWORD *)(a1 + 36);
          }

          *(_DWORD *)(a1 + 36) = v29 + 1;
          int v32 = operator new(0x30uLL);
          v32[9] = 0;
          v32[10] = 0;
          *(void *)int v32 = &off_1018367E8;
          *((void *)v32 + 1) = 0LL;
          *((void *)v32 + 2) = 0LL;
          *((void *)v32 + 3) = 0LL;
          uint64_t v33 = *(void *)(a1 + 24);
          uint64_t v34 = *(int *)(a1 + 32);
          *(_DWORD *)(a1 + 32) = v34 + 1;
          *(void *)(v33 + 8 * v34) = v32;
        }

        else
        {
          uint64_t v31 = *(void *)(a1 + 24);
          *(_DWORD *)(a1 + 32) = v30 + 1;
          int v32 = *(_DWORD **)(v31 + 8 * v30);
        }

        int v35 = (char *)*((void *)this + 1);
        if ((unint64_t)v35 >= *((void *)this + 2) || *v35 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v46)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v46 = *v35;
          *((void *)this + 1) = v35 + 1;
        }

        int v36 = *((_DWORD *)this + 14);
        int v37 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v36 + 1;
        if (v36 >= v37) {
          return 0LL;
        }
        int v38 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v46);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v38);
        int v40 = *((_DWORD *)this + 14);
        BOOL v17 = __OFSUB__(v40, 1);
        int v41 = v40 - 1;
        if (v41 < 0 == v17) {
          *((_DWORD *)this + 14) = v41;
        }
        unsigned int v28 = (_BYTE *)*((void *)this + 1);
        int v42 = (_BYTE *)*((void *)this + 2);
        if (v28 >= v42 || *v28 != 26) {
          break;
        }
LABEL_46:
        *((void *)this + 1) = v28 + 1;
      }

      if (v28 == v42 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + _Block_object_dispose((const void *)(v30 - 184), 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }

    int v9 = TagFallback & 7;
LABEL_21:
    if (v9 == 4) {
      return 1LL;
    }
  }

uint64_t sub_1003E1CA4( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 52);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0FD0 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 52);
  }

  if ((v6 & 2) != 0)
  {
    uint64_t v8 = *(void *)(v5 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1019A0FD0 + 16);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v8,  a2,  a4);
  }

  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v9 = 0LL;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(void *)(*(void *)(v5 + 24) + 8 * v9++),  a2,  a4);
    while (v9 < *(int *)(v5 + 32));
  }

  return result;
}

uint64_t sub_1003E1D50(uint64_t a1, unint64_t a2)
{
  if (!*(_BYTE *)(a1 + 52))
  {
    int v3 = 0;
    goto LABEL_18;
  }

  if ((*(_BYTE *)(a1 + 52) & 1) == 0)
  {
    int v3 = 0;
    if ((*(_BYTE *)(a1 + 52) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }

  uint64_t v4 = *(void *)(a1 + 8);
  if (!v4) {
    uint64_t v4 = *(void *)(qword_1019A0FD0 + 8);
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003DF914(v4, a2);
  int v6 = (int)v5;
  else {
    int v7 = 1;
  }
  int v3 = v6 + v7 + 1;
  if ((*(_DWORD *)(a1 + 52) & 2) != 0)
  {
LABEL_12:
    uint64_t v8 = *(void *)(a1 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1019A0FD0 + 16);
    }
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003E02F4(v8, a2);
    int v10 = (int)v9;
    else {
      int v11 = 1;
    }
    v3 += v10 + v11 + 1;
  }

void sub_1003E1E74(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1003E1EC0()
{
  return 1LL;
}

void *sub_1003E1EC8@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.RayTracingTilesAvailability.RayTracingTilesAvailabilityData");
}

void sub_1003E1EDC()
{
  if (sub_100231608())
  {
    uint64_t v0 = operator new(0x68uLL);
    sub_100E61F40((uint64_t)v0, (uint64_t)"CLAccessoryHeartRate", 1, 65280, 101);
    *uint64_t v0 = off_1018369B8;
    qword_1019A0FD8 = (uint64_t)v0;
  }

void sub_1003E1F34(_Unwind_Exception *a1)
{
}

uint64_t sub_1003E1F48()
{
  if (qword_101995690 != -1) {
    dispatch_once(&qword_101995690, &stru_101836988);
  }
  return qword_1019A0FD8;
}

void sub_1003E1F90(void *a1)
{
  uint64_t v1 = sub_100E61F94(a1);
  operator delete(v1);
}

double sub_1003E1FA4(uint64_t a1, int a2, double *a3)
{
  if (a2)
  {
    if (qword_1019345C0 != -1) {
      dispatch_once(&qword_1019345C0, &stru_101836A10);
    }
    uint64_t v4 = (os_log_s *)qword_1019345C8;
    if (os_log_type_enabled((os_log_t)qword_1019345C8, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 67240192;
      LODWORD(v16) = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_FAULT,  "[AccessoryHeartRate] Unrecognized update interval notification %{public}d",  buf,  8u);
    }

    double v5 = 0.0;
    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019345C0 != -1) {
        dispatch_once(&qword_1019345C0, &stru_101836A10);
      }
      int v13 = 67240192;
      LODWORD(v14) = a2;
      int v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345C8,  17LL,  "[AccessoryHeartRate] Unrecognized update interval notification %{public}d",  &v13,  8);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual CFTimeInterval CLAccessoryHeartRate::minimumUpdateIntervalChanged(int, const CFTimeInterval &)",  "%s\n",  v6);
    }
  }

  else
  {
    sub_100E62108(a1);
    double v9 = *a3;
    if (*a3 > 0.0) {
      *(_BYTE *)(a1 + 3sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0;
    }
    if (qword_1019345C0 != -1) {
      dispatch_once(&qword_1019345C0, &stru_101836A10);
    }
    double v5 = fmax(v9, 1.0);
    int v10 = (os_log_s *)qword_1019345C8;
    if (os_log_type_enabled((os_log_t)qword_1019345C8, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134349056;
      double v16 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_INFO,  "[AccessoryHeartRate] Setting update interval to %{public}f",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019345C0 != -1) {
        dispatch_once(&qword_1019345C0, &stru_101836A10);
      }
      int v13 = 134349056;
      double v14 = v5;
      int v12 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345C8,  1LL,  "[AccessoryHeartRate] Setting update interval to %{public}f",  &v13,  12);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual CFTimeInterval CLAccessoryHeartRate::minimumUpdateIntervalChanged(int, const CFTimeInterval &)",  "%s\n",  v12);
    }

    sub_10071A73C(*(void *)(a1 + 32), v5);
  }

  return v5;
}

void sub_1003E22D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t DataValue = IOHIDEventGetDataValue(a4, 65540LL);
  uint64_t IntegerValue = IOHIDEventGetIntegerValue(a4, 65539LL);
  if (!DataValue)
  {
    if (qword_1019345C0 != -1) {
      dispatch_once(&qword_1019345C0, &stru_101836A10);
    }
    int v22 = (os_log_s *)qword_1019345C8;
    if (os_log_type_enabled((os_log_t)qword_1019345C8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_ERROR, "[AccessoryHeartRate] Invalid payload", buf, 2u);
    }

    if (!sub_1002921D0(115, 0)) {
      return;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019345C0 != -1) {
      dispatch_once(&qword_1019345C0, &stru_101836A10);
    }
    LOWORD(v32) = 0;
    int v23 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345C8,  16LL,  "[AccessoryHeartRate] Invalid payload",  &v32,  2);
LABEL_30:
    int v27 = (uint8_t *)v23;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLAccessoryHeartRate::onEventData(void *, void *, IOHIDEventRef)",  "%s\n",  v23);
    if (v27 != buf) {
      free(v27);
    }
    return;
  }

  int v8 = IntegerValue;
  if (IntegerValue == 16)
  {
    unint64_t TimeStamp = IOHIDEventGetTimeStamp(a4);
    double v10 = sub_101171C7C(TimeStamp);
    double v28 = v10;
    int v11 = *(unsigned __int8 *)(DataValue + 13);
    LODWORD(v29) = v11;
    _H9 = *(_WORD *)(DataValue + 14);
    __asm { FCVT            S0, H9 }

    HIDWORD(v29) = _S0;
    uint64_t v18 = *(void *)(DataValue + 5);
    uint64_t v30 = v18;
    int v19 = *(_DWORD *)(DataValue + 1);
    LODWORD(v31) = v19;
    if (qword_1019345C0 != -1) {
      dispatch_once(&qword_1019345C0, &stru_101836A10);
    }
    unint64_t v20 = (os_log_s *)qword_1019345C8;
    if (os_log_type_enabled((os_log_t)qword_1019345C8, OS_LOG_TYPE_DEBUG))
    {
      __asm { FCVT            D1, H9 }

      *(_DWORD *)std::stringbuf::string_type buf = 67241731;
      int v45 = v19;
      __int16 v46 = 1025;
      *(_DWORD *)unint64_t v47 = v11;
      *(_WORD *)&v47[4] = 2050;
      *(void *)&_BYTE v47[6] = _D1;
      __int16 v48 = 2050;
      uint64_t v49 = v18;
      __int16 v50 = 2050;
      double v51 = v10;
      __int16 v52 = 1040;
      int v53 = 16;
      __int16 v54 = 2097;
      uint64_t v55 = DataValue;
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEBUG,  "[AccessoryHeartRate] seq,%{public}d,heartrate,%{private}u,confidence,%{public}10.10f,sensorTime,%{public}llu,tim estamp,%{public}20.20f,payload,{%{private}.*P}",  buf,  0x3Cu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019345C0 != -1) {
        dispatch_once(&qword_1019345C0, &stru_101836A10);
      }
      __asm { FCVT            D0, H9 }

      int v32 = 67241731;
      int v33 = v19;
      __int16 v34 = 1025;
      *(_DWORD *)int v35 = v11;
      *(_WORD *)&v35[4] = 2050;
      *(void *)&v35[6] = _D0;
      __int16 v36 = 2050;
      uint64_t v37 = v18;
      __int16 v38 = 2050;
      double v39 = v10;
      __int16 v40 = 1040;
      int v41 = 16;
      __int16 v42 = 2097;
      uint64_t v43 = DataValue;
      int v26 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345C8,  2LL,  "[AccessoryHeartRate] seq,%{public}d,heartrate,%{private}u,confidence,%{public}10.10f,sensorTime,%{ public}llu,timestamp,%{public}20.20f,payload,{%{private}.*P}",  &v32,  60,  *(void *)&v28,  v29,  v30,  v31);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLAccessoryHeartRate::onEventData(void *, void *, IOHIDEventRef)",  "%s\n",  v26);
    }

    sub_1006DD528(a1, 0LL, (uint64_t)&v28, 32LL);
    return;
  }

  if (qword_1019345C0 != -1) {
    dispatch_once(&qword_1019345C0, &stru_101836A10);
  }
  int v24 = (os_log_s *)qword_1019345C8;
  if (os_log_type_enabled((os_log_t)qword_1019345C8, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 68157955;
    int v45 = v8;
    __int16 v46 = 2097;
    *(void *)unint64_t v47 = DataValue;
    _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_ERROR,  "[AccessoryHeartRate] Invalid payload: %{private}.*P",  buf,  0x12u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019345C0 != -1) {
      dispatch_once(&qword_1019345C0, &stru_101836A10);
    }
    int v32 = 68157955;
    int v33 = v8;
    __int16 v34 = 2097;
    *(void *)int v35 = DataValue;
    int v23 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345C8,  16LL,  "[AccessoryHeartRate] Invalid payload: %{private}.*P",  &v32,  18);
    goto LABEL_30;
  }

void sub_1003E27F0(id a1)
{
  qword_1019345C8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Accessory");
}

uint64_t sub_1003E281C(uint64_t a1)
{
  return sub_1002E4CB0(a1);
}

void sub_1003E35D0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, void *__p, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, int a49, __int16 a50,char a51,char a52)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

id sub_1003E3630(uint64_t a1, int a2, int a3, uint64_t a4)
{
  double v5 = *(void **)(a1 + 160);
  if (v5)
  {
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472LL;
    v8[2] = sub_1003EDAC0;
    v8[3] = &unk_101836BC0;
    int v9 = a2;
    int v10 = a3;
    void v8[4] = a4;
    v8[5] = a1;
    return [v5 async:v8];
  }

  else
  {
    uint64_t v7 = sub_101237DDC();
    return (id)sub_1003E3694(v7);
  }

id sub_1003E3694(uint64_t a1)
{
  p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101836B98);
  }
  int v3 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    id v4 = [*(id *)(a1 + 32) count];
    *(_DWORD *)std::stringbuf::string_type buf = 134349056;
    *(void *)&uint8_t buf[4] = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "AlsCell, cdma, rx, %{public}lu", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101836B98);
    }
    uint64_t v58 = qword_101934858;
    id v59 = [*(id *)(a1 + 32) count];
    unsigned int v90 = 134349056;
    *(void *)uint64_t v91 = v59;
    double v60 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v58,  2LL,  "AlsCell, cdma, rx, %{public}lu",  &v90,  12);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[ALSLocationDelegate requester:didReceiveResponse:forRequest:]_block_invoke",  "%s\n",  v60);
    if (v60 != buf) {
      free(v60);
    }
  }

  id result = [*(id *)(a1 + 32) count];
  if (result)
  {
    uint64_t v6 = 0LL;
    unsigned int v7 = 0;
    __asm { FMOV            V0.2D, #-1.0 }

    __int128 v62 = _Q0;
    do
    {
      id v13 = [*(id *)(a1 + 32) objectAtIndex:v6];
      sub_100313598((uint64_t)&v90);
      else {
        unsigned int v14 = -1;
      }
      unsigned int v94 = v14;
      else {
        unsigned int v15 = -1;
      }
      unsigned int v95 = v15;
      else {
        unsigned int v16 = -1;
      }
      unsigned int v90 = v16;
      else {
        unsigned int v17 = -1;
      }
      unsigned int v97 = v17;
      else {
        unsigned int v18 = -1;
      }
      unsigned int v96 = v18;
      else {
        unsigned int v19 = -1;
      }
      unsigned int v98 = v19;
      else {
        unsigned int v20 = -1;
      }
      unsigned int v99 = v20;
      else {
        unsigned int v21 = -1;
      }
      unsigned int v100 = v21;
      uint64_t v22 = *(void *)&v91[4];
      uint64_t v92 = *(char **)&v91[4];
      if (v90 != -1)
      {
        if (*(void *)&v91[4] >= (unint64_t)v93)
        {
          unint64_t v24 = ((uint64_t)v93 - *(void *)&v91[4]) >> 1;
          if (v24 <= 1) {
            unint64_t v24 = 1LL;
          }
          else {
            unint64_t v25 = v24;
          }
          int v27 = sub_10000956C((uint64_t)&v93, v25);
          double v28 = *(char **)&v91[4];
          uint64_t v29 = v92;
          _DWORD *v27 = v90;
          int v23 = (char *)(v27 + 1);
          uint64_t v30 = v27;
          while (v29 != v28)
          {
            int v31 = *((_DWORD *)v29 - 1);
            v29 -= 4;
            *--uint64_t v30 = v31;
          }

          *(void *)&v91[4] = v30;
          uint64_t v92 = (char *)(v27 + 1);
          uint64_t v93 = &v27[v26];
          if (v28) {
            operator delete(v28);
          }
        }

        else
        {
          **(_DWORD **)&v91[4] = v90;
          int v23 = (char *)(v22 + 4);
        }

        uint64_t v92 = v23;
      }

      sub_1003D13B8(&v90, &v82);
      int v64 = 0xFFFF;
      double v65 = 0.0;
      double v66 = 0.0;
      __int128 v67 = xmmword_1012E0070;
      __int128 v68 = v62;
      __int128 v69 = v62;
      __int128 v70 = v62;
      unsigned int v71 = 0;
      unint64_t v72 = 0xBFF0000000000000LL;
      uint64_t v73 = 0LL;
      uint64_t v74 = 0LL;
      int v75 = 0;
      unint64_t v76 = 0xBFF0000000000000LL;
      int v77 = 0x7FFFFFFF;
      uint64_t v79 = 0LL;
      uint64_t v80 = 0LL;
      uint64_t v78 = 0LL;
      char v81 = 0;
      if ((objc_msgSend(objc_msgSend(v13, "location"), "accuracy") & 0x80000000) != 0)
      {
        int v33 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
        {
          sub_1003E411C((uint64_t)&v90, (std::stringbuf::string_type *)buf);
          __int16 v34 = (std::stringbuf::string_type *)buf;
          if (SBYTE3(v105) < 0) {
            __int16 v34 = *(std::stringbuf::string_type **)buf;
          }
          *(_DWORD *)int v84 = 67240451;
          *(_DWORD *)&v84[4] = v7;
          __int16 v85 = 2081;
          int v86 = v34;
          _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEFAULT,  "AlsCell, cdma, %{public}d, unknown, %{private}s",  v84,  0x12u);
          if (SBYTE3(v105) < 0) {
            operator delete(*(void **)buf);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          uint64_t v55 = qword_101934858;
          sub_1003E411C((uint64_t)&v90, (std::stringbuf::string_type *)v84);
          double v56 = v84;
          if (SBYTE3(v88) < 0) {
            double v56 = *(uint8_t **)v84;
          }
          LODWORD(__p.__r_.__value_.__l.__data_) = 67240451;
          HIDWORD(__p.__r_.__value_.__r.__words[0]) = v7;
          LOWORD(__p.__r_.__value_.__r.__words[1]) = 2081;
          *(std::string::size_type *)((char *)&__p.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)v56;
          LODWORD(v61) = 18;
          uint64_t v57 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v55,  0LL,  "AlsCell, cdma, %{public}d, unknown, %{private}s",  &__p,  v61);
          if (SBYTE3(v88) < 0) {
            operator delete(*(void **)v84);
          }
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[ALSLocationDelegate requester:didReceiveResponse:forRequest:]_block_invoke",  "%s\n",  v57);
          if (v57 != buf) {
            free(v57);
          }
        }

        uint64_t v35 = *(void *)(*(void *)(a1 + 40) + 16LL);
        id v36 = [*(id *)(a1 + 48) type];
        id v37 = [*(id *)(a1 + 48) tag];
        __int16 v38 = *(void (**)(uint64_t, unsigned int *, id, id, void))(v35 + 256);
        if (v38) {
          v38(v35, &v90, v36, v37, *(void *)(v35 + 152));
        }
      }

      else
      {
        else {
          double v32 = (double)(int)objc_msgSend(objc_msgSend(v13, "location"), "accuracy") / 1000000.0;
        }
        *(double *)&__int128 v67 = v32;
        *((void *)&v70 + 1) = *(void *)(a1 + 56);
        double v65 = (double)(uint64_t)objc_msgSend(objc_msgSend(v13, "location"), "latitude") / 100000000.0;
        double v66 = (double)(uint64_t)objc_msgSend(objc_msgSend(v13, "location"), "longitude") / 100000000.0;
        HIDWORD(v7_Block_object_dispose((const void *)(v30 - 184), 8) = 1;
        if (objc_msgSend(objc_msgSend(v13, "location"), "hasAltitude")
          && objc_msgSend(objc_msgSend(v13, "location"), "hasVerticalAccuracy"))
        {
          *((double *)&v67 + 1) = (double)(int)objc_msgSend(objc_msgSend(v13, "location"), "altitude");
          *(double *)&__int128 v68 = (double)(int)objc_msgSend(objc_msgSend(v13, "location"), "verticalAccuracy");
        }

        else {
          unsigned int v39 = 70;
        }
        unsigned int v71 = v39;
        __int16 v40 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
        {
          sub_1003E411C((uint64_t)&v90, (std::stringbuf::string_type *)v84);
          int v41 = SBYTE3(v88);
          __int16 v42 = *(uint8_t **)v84;
          sub_1008330C4((uint64_t)&v64, &__p);
          uint64_t v43 = v84;
          if (v41 < 0) {
            uint64_t v43 = v42;
          }
          p_p = &__p;
          if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
          }
          *(_DWORD *)std::stringbuf::string_type buf = 67240707;
          *(_DWORD *)&uint8_t buf[4] = v7;
          *(_WORD *)&uint8_t buf[8] = 2081;
          *(void *)&buf[10] = v43;
          __int16 v104 = 2081;
          __int128 v105 = p_p;
          _os_log_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_DEBUG,  "AlsCell, cdma, %{public}d, valid, %{private}s, location, %{private}s",  buf,  0x1Cu);
          p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
          if (SBYTE3(v88) < 0) {
            operator delete(*(void **)v84);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          uint64_t v49 = qword_101934858;
          sub_1003E411C((uint64_t)&v90, &__p);
          int size = (char)__p.__r_.__value_.__s.__size_;
          std::string::size_type v51 = __p.__r_.__value_.__r.__words[0];
          sub_1008330C4((uint64_t)&v64, &v63);
          __int16 v52 = &__p;
          if (size < 0) {
            __int16 v52 = (std::stringbuf::string_type *)v51;
          }
          int v53 = &v63;
          if ((v63.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            int v53 = (std::stringbuf::string_type *)v63.__r_.__value_.__r.__words[0];
          }
          *(_DWORD *)int v84 = 67240707;
          *(_DWORD *)&v84[4] = v7;
          __int16 v85 = 2081;
          int v86 = v52;
          __int16 v87 = 2081;
          int v88 = v53;
          LODWORD(v61) = 28;
          __int16 v54 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v49,  2LL,  "AlsCell, cdma, %{public}d, valid, %{private}s, location, %{private}s",  v84,  v61);
          p_vtable = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[ALSLocationDelegate requester:didReceiveResponse:forRequest:]_block_invoke",  "%s\n",  v54);
          if (v54 != buf) {
            free(v54);
          }
        }

        uint64_t v45 = *(void *)(*(void *)(a1 + 40) + 16LL);
        id v46 = [*(id *)(a1 + 48) type];
        id v47 = [*(id *)(a1 + 48) tag];
        __int16 v48 = *(void (**)(uint64_t, unsigned int *, int *, id, id, void))(v45 + 248);
        if (v48) {
          v48(v45, &v90, &v64, v46, v47, *(void *)(v45 + 152));
        }
      }

      if (v83 < 0) {
        operator delete(v82);
      }
      if (v102 < 0) {
        operator delete(v101);
      }
      if (*(void *)&v91[4])
      {
        uint64_t v92 = *(char **)&v91[4];
        operator delete(*(void **)&v91[4]);
      }

      id result = [*(id *)(a1 + 32) count];
      uint64_t v6 = ++v7;
    }

    while ((unint64_t)result > v7);
  }

  return result;
}

void sub_1003E40A0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, void *__p, uint64_t a45, int a46, __int16 a47, char a48, char a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,void *a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58)
{
  if (a49 < 0) {
    operator delete(__p);
  }
  sub_1003E426C((uint64_t)&a58);
  _Unwind_Resume(a1);
}

uint64_t sub_1003E411C@<X0>(uint64_t a1@<X0>, std::stringbuf::string_type *a2@<X8>)
{
  id v4 = *(unsigned int **)(a1 + 8);
  else {
    uint64_t v5 = *v4;
  }
  uint64_t v6 = (void *)std::ostream::operator<<(&v15, v5);
  unsigned int v7 = sub_10000CF44(v6, (uint64_t)".", 1LL);
  int v8 = (void *)std::ostream::operator<<(v7, *(unsigned int *)(a1 + 32));
  int v9 = sub_10000CF44(v8, (uint64_t)".", 1LL);
  int v10 = (void *)std::ostream::operator<<(v9, *(unsigned int *)(a1 + 36));
  int v11 = sub_10000CF44(v10, (uint64_t)".", 1LL);
  std::ostream::operator<<(v11, *(unsigned int *)(a1 + 44));
  std::stringbuf::str(a2, &v16);
  *(void *)((char *)v14
  uint64_t v15 = v12;
  std::streambuf::~streambuf(&v16);
  return std::ios::~ios(&v17);
}

void sub_1003E4230(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_1003E4244(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(result + 256);
  if (v4) {
    return v4(result, a2, a3, a4, *(void *)(result + 152));
  }
  return result;
}

uint64_t sub_1003E4258(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(result + 248);
  if (v5) {
    return v5(result, a2, a3, a4, a5, *(void *)(result + 152));
  }
  return result;
}

uint64_t sub_1003E426C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
  if (v2)
  {
    *(void *)(a1 + 16) = v2;
    operator delete(v2);
  }

  return a1;
}

id sub_1003E42AC(uint64_t a1)
{
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101836B98);
  }
  uint64_t v2 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    id v3 = [*(id *)(a1 + 32) count];
    *(_DWORD *)std::stringbuf::string_type buf = 134349056;
    *(void *)&uint8_t buf[4] = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "AlsCell, lte, rx, %{public}lu", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101836B98);
    }
    uint64_t v44 = qword_101934858;
    id v45 = [*(id *)(a1 + 32) count];
    int v67 = 134349056;
    double v68 = *(double *)&v45;
    id v46 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v44,  2LL,  "AlsCell, lte, rx, %{public}lu",  &v67,  12);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[ALSLocationDelegate requester:didReceiveResponse:forRequest:]_block_invoke",  "%s\n",  v46);
    if (v46 != buf) {
      free(v46);
    }
  }

  id result = [*(id *)(a1 + 32) count];
  if (result)
  {
    unint64_t v5 = 0LL;
    __asm { FMOV            V0.2D, #-1.0 }

    __int128 v49 = _Q0;
    unsigned int v11 = 1;
    do
    {
      id v12 = [*(id *)(a1 + 32) objectAtIndex:v5];
      uint64_t v52 = -1LL;
      uint64_t v53 = -1LL;
      uint64_t v51 = -1LL;
      int v54 = -1;
      uint64_t v55 = 0LL;
      uint64_t v56 = 0LL;
      uint64_t v57 = -1LL;
      uint64_t v58 = -1LL;
      int v59 = -1;
      __int128 v60 = xmmword_1012E6420;
      LODWORD(v51) = [v12 mcc];
      HIDWORD(v51) = [v12 mnc];
      LODWORD(v52) = [v12 tacID];
      HIDWORD(v52) = [v12 cellID];
      else {
        unsigned int v13 = -1;
      }
      LODWORD(v53) = v13;
      else {
        unsigned int v14 = -1;
      }
      HIDWORD(v53) = v14;
      double v68 = 0.0;
      double v69 = 0.0;
      __int128 v70 = xmmword_1012E0070;
      __int128 v71 = v49;
      __int128 v72 = v49;
      __int128 v73 = v49;
      int v67 = 0xFFFF;
      unsigned int v74 = 0;
      unint64_t v75 = 0xBFF0000000000000LL;
      uint64_t v76 = 0LL;
      uint64_t v77 = 0LL;
      int v78 = 0;
      unint64_t v79 = 0xBFF0000000000000LL;
      int v80 = 0x7FFFFFFF;
      uint64_t v82 = 0LL;
      uint64_t v83 = 0LL;
      uint64_t v81 = 0LL;
      char v84 = 0;
      unsigned int v15 = v11 - 1;
      if ((objc_msgSend(objc_msgSend(v12, "location"), "accuracy") & 0x80000000) != 0)
      {
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101836B98);
        }
        unsigned int v20 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
        {
          sub_1003E4C04((unsigned int *)&v51, (std::stringbuf::string_type *)buf);
          unsigned int v21 = (std::stringbuf::string_type *)buf;
          if (SBYTE3(v87) < 0) {
            unsigned int v21 = *(std::stringbuf::string_type **)buf;
          }
          *(_DWORD *)uint64_t v61 = 67240451;
          *(_DWORD *)&v61[4] = v11 - 1;
          __int16 v62 = 2081;
          std::stringbuf::string_type v63 = v21;
          _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "AlsCell, lte, %{public}d, unknown, %{private}s",  v61,  0x12u);
          if (SBYTE3(v87) < 0) {
            operator delete(*(void **)buf);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101836B98);
          }
          uint64_t v41 = qword_101934858;
          sub_1003E4C04((unsigned int *)&v51, (std::stringbuf::string_type *)v61);
          __int16 v42 = v61;
          if (SBYTE3(v65) < 0) {
            __int16 v42 = *(uint8_t **)v61;
          }
          LODWORD(__p.__r_.__value_.__l.__data_) = 67240451;
          HIDWORD(__p.__r_.__value_.__r.__words[0]) = v11 - 1;
          LOWORD(__p.__r_.__value_.__r.__words[1]) = 2081;
          *(std::string::size_type *)((char *)&__p.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)v42;
          LODWORD(v47) = 18;
          uint64_t v43 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v41,  0LL,  "AlsCell, lte, %{public}d, unknown, %{private}s",  &__p,  v47);
          if (SBYTE3(v65) < 0) {
            operator delete(*(void **)v61);
          }
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[ALSLocationDelegate requester:didReceiveResponse:forRequest:]_block_invoke",  "%s\n",  v43);
          if (v43 != buf) {
            free(v43);
          }
        }

        uint64_t v22 = *(void *)(*(void *)(a1 + 40) + 16LL);
        id v23 = [*(id *)(a1 + 48) type];
        id v24 = [*(id *)(a1 + 48) tag];
        unint64_t v25 = *(void (**)(uint64_t, uint64_t *, id, id, void))(v22 + 272);
        if (v25) {
          v25(v22, &v51, v23, v24, *(void *)(v22 + 152));
        }
      }

      else
      {
        BOOL v16 = (int)objc_msgSend(objc_msgSend(v12, "location"), "accuracy") > 999999;
        int v17 = objc_msgSend(objc_msgSend(v12, "location"), "accuracy");
        double v18 = (double)v17;
        if (v16) {
          double v18 = (double)v17 / 1000000.0;
        }
        *(double *)&__int128 v70 = v18;
        *((void *)&v73 + 1) = *(void *)(a1 + 56);
        double v68 = (double)(uint64_t)objc_msgSend(objc_msgSend(v12, "location"), "latitude") / 100000000.0;
        double v69 = (double)(uint64_t)objc_msgSend(objc_msgSend(v12, "location"), "longitude") / 100000000.0;
        HIDWORD(v81) = 1;
        if (objc_msgSend(objc_msgSend(v12, "location"), "hasAltitude")
          && objc_msgSend(objc_msgSend(v12, "location"), "hasVerticalAccuracy"))
        {
          *((double *)&v70 + 1) = (double)(int)objc_msgSend(objc_msgSend(v12, "location"), "altitude");
          *(double *)&__int128 v71 = (double)(int)objc_msgSend(objc_msgSend(v12, "location"), "verticalAccuracy");
        }

        else {
          unsigned int v19 = 70;
        }
        unsigned int v74 = v19;
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101836B98);
        }
        uint64_t v26 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
        {
          sub_1003E4C04((unsigned int *)&v51, (std::stringbuf::string_type *)v61);
          int v27 = SBYTE3(v65);
          double v28 = *(uint8_t **)v61;
          sub_1008330C4((uint64_t)&v67, &__p);
          uint64_t v29 = v61;
          if (v27 < 0) {
            uint64_t v29 = v28;
          }
          p_p = &__p;
          if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
          }
          *(_DWORD *)std::stringbuf::string_type buf = 67240707;
          unsigned int v15 = v11 - 1;
          *(_DWORD *)&uint8_t buf[4] = v11 - 1;
          *(_WORD *)&uint8_t buf[8] = 2081;
          *(void *)&buf[10] = v29;
          __int16 v86 = 2081;
          __int16 v87 = p_p;
          _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEBUG,  "AlsCell, lte, %{public}d, valid, %{private}s, location, %{private}s",  buf,  0x1Cu);
          if (SBYTE3(v65) < 0) {
            operator delete(*(void **)v61);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101836B98);
          }
          uint64_t v48 = qword_101934858;
          sub_1003E4C04((unsigned int *)&v51, &__p);
          unsigned int v35 = v15;
          int size = (char)__p.__r_.__value_.__s.__size_;
          std::string::size_type v37 = __p.__r_.__value_.__r.__words[0];
          sub_1008330C4((uint64_t)&v67, &v50);
          __int16 v38 = &__p;
          if (size < 0) {
            __int16 v38 = (std::stringbuf::string_type *)v37;
          }
          unsigned int v39 = &v50;
          if ((v50.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            unsigned int v39 = (std::stringbuf::string_type *)v50.__r_.__value_.__r.__words[0];
          }
          *(_DWORD *)uint64_t v61 = 67240707;
          *(_DWORD *)&v61[4] = v35;
          __int16 v62 = 2081;
          std::stringbuf::string_type v63 = v38;
          __int16 v64 = 2081;
          double v65 = v39;
          LODWORD(v47) = 28;
          __int16 v40 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v48,  2LL,  "AlsCell, lte, %{public}d, valid, %{private}s, location, %{private}s",  v61,  v47);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[ALSLocationDelegate requester:didReceiveResponse:forRequest:]_block_invoke",  "%s\n",  v40);
          if (v40 != buf) {
            free(v40);
          }
        }

        uint64_t v31 = *(void *)(*(void *)(a1 + 40) + 16LL);
        id v32 = [*(id *)(a1 + 48) type];
        id v33 = [*(id *)(a1 + 48) tag];
        __int16 v34 = *(void (**)(uint64_t, uint64_t *, int *, id, id, void))(v31 + 264);
        if (v34) {
          v34(v31, &v51, &v67, v32, v33, *(void *)(v31 + 152));
        }
      }

      id result = [*(id *)(a1 + 32) count];
      unint64_t v5 = v11++;
    }

    while ((unint64_t)result > v5);
  }

  return result;
}

void sub_1003E4BCC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, int a43, __int16 a44, char a45, char a46, uint64_t a47, void *__p, uint64_t a49, int a50,__int16 a51,char a52,char a53)
{
  if (a53 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003E4C04@<X0>(unsigned int *a1@<X0>, std::stringbuf::string_type *a2@<X8>)
{
  id v4 = (void *)std::ostream::operator<<(&v13, *a1);
  unint64_t v5 = sub_10000CF44(v4, (uint64_t)".", 1LL);
  uint64_t v6 = (void *)std::ostream::operator<<(v5, a1[1]);
  unsigned int v7 = sub_10000CF44(v6, (uint64_t)".", 1LL);
  int v8 = (void *)std::ostream::operator<<(v7, a1[2]);
  int v9 = sub_10000CF44(v8, (uint64_t)".", 1LL);
  std::ostream::operator<<(v9, a1[3]);
  std::stringbuf::str(a2, &v14);
  *(void *)((char *)v12
  uint64_t v13 = v10;
  std::streambuf::~streambuf(&v14);
  return std::ios::~ios(&v15);
}

void sub_1003E4D04(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_1003E4D18(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(result + 272);
  if (v4) {
    return v4(result, a2, a3, a4, *(void *)(result + 152));
  }
  return result;
}

uint64_t sub_1003E4D2C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(result + 264);
  if (v5) {
    return v5(result, a2, a3, a4, a5, *(void *)(result + 152));
  }
  return result;
}

id sub_1003E4D40(uint64_t a1)
{
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101836B98);
  }
  uint64_t v2 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    id v3 = [*(id *)(a1 + 32) count];
    *(_DWORD *)std::stringbuf::string_type buf = 134349056;
    *(void *)&uint8_t buf[4] = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "AlsCell, nr, rx, %{public}lu", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101836B98);
    }
    uint64_t v47 = qword_101934858;
    id v48 = [*(id *)(a1 + 32) count];
    int v72 = 134349056;
    double v73 = *(double *)&v48;
    __int128 v49 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v47,  2LL,  "AlsCell, nr, rx, %{public}lu",  &v72,  12);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[ALSLocationDelegate requester:didReceiveResponse:forRequest:]_block_invoke",  "%s\n",  v49);
    if (v49 != buf) {
      free(v49);
    }
  }

  id result = [*(id *)(a1 + 32) count];
  if (result)
  {
    unint64_t v5 = 0LL;
    __asm { FMOV            V0.2D, #-1.0 }

    __int128 v52 = _Q0;
    unsigned int v11 = 1;
    do
    {
      id v12 = [*(id *)(a1 + 32) objectAtIndex:v5];
      uint64_t v54 = -1LL;
      int v55 = -1;
      uint64_t v56 = -1LL;
      uint64_t v57 = -1LL;
      int v58 = -1;
      uint64_t v59 = 0LL;
      uint64_t v60 = 0LL;
      uint64_t v61 = -1LL;
      uint64_t v62 = -1LL;
      uint64_t v63 = -1LL;
      unint64_t v64 = 0xFFFFFFFF00000000LL;
      int v65 = -1;
      else {
        unsigned int v13 = -1;
      }
      LODWORD(v54) = v13;
      else {
        unsigned int v14 = -1;
      }
      HIDWORD(v54) = v14;
      else {
        unsigned int v15 = -1;
      }
      int v55 = v15;
      else {
        uint64_t v16 = -1LL;
      }
      uint64_t v56 = v16;
      else {
        unsigned int v17 = -1;
      }
      LODWORD(v57) = v17;
      double v73 = 0.0;
      double v74 = 0.0;
      __int128 v75 = xmmword_1012E0070;
      __int128 v76 = v52;
      __int128 v77 = v52;
      __int128 v78 = v52;
      int v72 = 0xFFFF;
      unsigned int v79 = 0;
      unint64_t v80 = 0xBFF0000000000000LL;
      uint64_t v81 = 0LL;
      uint64_t v82 = 0LL;
      int v83 = 0;
      unint64_t v84 = 0xBFF0000000000000LL;
      int v85 = 0x7FFFFFFF;
      uint64_t v87 = 0LL;
      uint64_t v88 = 0LL;
      uint64_t v86 = 0LL;
      char v89 = 0;
      unsigned int v18 = v11 - 1;
      if ((objc_msgSend(objc_msgSend(v12, "location"), "accuracy") & 0x80000000) != 0)
      {
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101836B98);
        }
        id v23 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
        {
          sub_1003E56CC((unsigned int *)&v54, (std::stringbuf::string_type *)buf);
          id v24 = (std::stringbuf::string_type *)buf;
          if (SBYTE3(v92) < 0) {
            id v24 = *(std::stringbuf::string_type **)buf;
          }
          *(_DWORD *)double v66 = 67240451;
          *(_DWORD *)&v66[4] = v11 - 1;
          __int16 v67 = 2081;
          double v68 = v24;
          _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEFAULT,  "AlsCell, nr, %{public}d, unknown, %{private}s",  v66,  0x12u);
          if (SBYTE3(v92) < 0) {
            operator delete(*(void **)buf);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101836B98);
          }
          uint64_t v44 = qword_101934858;
          sub_1003E56CC((unsigned int *)&v54, (std::stringbuf::string_type *)v66);
          id v45 = v66;
          if (SBYTE3(v70) < 0) {
            id v45 = *(uint8_t **)v66;
          }
          LODWORD(__p.__r_.__value_.__l.__data_) = 67240451;
          HIDWORD(__p.__r_.__value_.__r.__words[0]) = v11 - 1;
          LOWORD(__p.__r_.__value_.__r.__words[1]) = 2081;
          *(std::string::size_type *)((char *)&__p.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)v45;
          LODWORD(v5sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 18;
          id v46 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v44,  0LL,  "AlsCell, nr, %{public}d, unknown, %{private}s",  &__p,  v50);
          if (SBYTE3(v70) < 0) {
            operator delete(*(void **)v66);
          }
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[ALSLocationDelegate requester:didReceiveResponse:forRequest:]_block_invoke",  "%s\n",  v46);
          if (v46 != buf) {
            free(v46);
          }
        }

        uint64_t v25 = *(void *)(*(void *)(a1 + 40) + 16LL);
        id v26 = [*(id *)(a1 + 48) type];
        id v27 = [*(id *)(a1 + 48) tag];
        double v28 = *(void (**)(uint64_t, uint64_t *, id, id, void))(v25 + 288);
        if (v28) {
          v28(v25, &v54, v26, v27, *(void *)(v25 + 152));
        }
      }

      else
      {
        BOOL v19 = (int)objc_msgSend(objc_msgSend(v12, "location"), "accuracy") > 999999;
        int v20 = objc_msgSend(objc_msgSend(v12, "location"), "accuracy");
        double v21 = (double)v20;
        if (v19) {
          double v21 = (double)v20 / 1000000.0;
        }
        *(double *)&__int128 v75 = v21;
        *((void *)&v78 + 1) = *(void *)(a1 + 56);
        double v73 = (double)(uint64_t)objc_msgSend(objc_msgSend(v12, "location"), "latitude") / 100000000.0;
        double v74 = (double)(uint64_t)objc_msgSend(objc_msgSend(v12, "location"), "longitude") / 100000000.0;
        HIDWORD(v86) = 1;
        if (objc_msgSend(objc_msgSend(v12, "location"), "hasAltitude")
          && objc_msgSend(objc_msgSend(v12, "location"), "hasVerticalAccuracy"))
        {
          *((double *)&v75 + 1) = (double)(int)objc_msgSend(objc_msgSend(v12, "location"), "altitude");
          *(double *)&__int128 v76 = (double)(int)objc_msgSend(objc_msgSend(v12, "location"), "verticalAccuracy");
        }

        else {
          unsigned int v22 = 70;
        }
        unsigned int v79 = v22;
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101836B98);
        }
        uint64_t v29 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
        {
          sub_1003E56CC((unsigned int *)&v54, (std::stringbuf::string_type *)v66);
          int v30 = SBYTE3(v70);
          uint64_t v31 = *(uint8_t **)v66;
          sub_1008330C4((uint64_t)&v72, &__p);
          id v32 = v66;
          if (v30 < 0) {
            id v32 = v31;
          }
          p_p = &__p;
          if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
          }
          *(_DWORD *)std::stringbuf::string_type buf = 67240707;
          unsigned int v18 = v11 - 1;
          *(_DWORD *)&uint8_t buf[4] = v11 - 1;
          *(_WORD *)&uint8_t buf[8] = 2081;
          *(void *)&buf[10] = v32;
          __int16 v91 = 2081;
          uint64_t v92 = p_p;
          _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEBUG,  "AlsCell, nr, %{public}d, valid, %{private}s, location, %{private}s",  buf,  0x1Cu);
          if (SBYTE3(v70) < 0) {
            operator delete(*(void **)v66);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101836B98);
          }
          uint64_t v51 = qword_101934858;
          sub_1003E56CC((unsigned int *)&v54, &__p);
          unsigned int v38 = v18;
          int size = (char)__p.__r_.__value_.__s.__size_;
          std::string::size_type v40 = __p.__r_.__value_.__r.__words[0];
          sub_1008330C4((uint64_t)&v72, &v53);
          uint64_t v41 = &__p;
          if (size < 0) {
            uint64_t v41 = (std::stringbuf::string_type *)v40;
          }
          __int16 v42 = &v53;
          if ((v53.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            __int16 v42 = (std::stringbuf::string_type *)v53.__r_.__value_.__r.__words[0];
          }
          *(_DWORD *)double v66 = 67240707;
          *(_DWORD *)&v66[4] = v38;
          __int16 v67 = 2081;
          double v68 = v41;
          __int16 v69 = 2081;
          __int128 v70 = v42;
          LODWORD(v5sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 28;
          uint64_t v43 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v51,  2LL,  "AlsCell, nr, %{public}d, valid, %{private}s, location, %{private}s",  v66,  v50);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[ALSLocationDelegate requester:didReceiveResponse:forRequest:]_block_invoke",  "%s\n",  v43);
          if (v43 != buf) {
            free(v43);
          }
        }

        uint64_t v34 = *(void *)(*(void *)(a1 + 40) + 16LL);
        id v35 = [*(id *)(a1 + 48) type];
        id v36 = [*(id *)(a1 + 48) tag];
        std::string::size_type v37 = *(void (**)(uint64_t, uint64_t *, int *, id, id, void))(v34 + 280);
        if (v37) {
          v37(v34, &v54, &v72, v35, v36, *(void *)(v34 + 152));
        }
      }

      id result = [*(id *)(a1 + 32) count];
      unint64_t v5 = v11++;
    }

    while ((unint64_t)result > v5);
  }

  return result;
}

void sub_1003E5694( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, int a41, __int16 a42, char a43, char a44, uint64_t a45, void *__p, uint64_t a47, int a48, __int16 a49, char a50,char a51)
{
  if (a51 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003E56CC@<X0>(unsigned int *a1@<X0>, std::stringbuf::string_type *a2@<X8>)
{
  id v4 = (void *)std::ostream::operator<<(&v13, *a1);
  unint64_t v5 = sub_10000CF44(v4, (uint64_t)".", 1LL);
  uint64_t v6 = (void *)std::ostream::operator<<(v5, a1[1]);
  unsigned int v7 = sub_10000CF44(v6, (uint64_t)".", 1LL);
  int v8 = (void *)std::ostream::operator<<(v7, a1[2]);
  int v9 = sub_10000CF44(v8, (uint64_t)".", 1LL);
  std::ostream::operator<<(v9, *((void *)a1 + 2));
  std::stringbuf::str(a2, &v14);
  *(void *)((char *)v12
  uint64_t v13 = v10;
  std::streambuf::~streambuf(&v14);
  return std::ios::~ios(&v15);
}

void sub_1003E57CC(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_1003E57E0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(result + 288);
  if (v4) {
    return v4(result, a2, a3, a4, *(void *)(result + 152));
  }
  return result;
}

uint64_t sub_1003E57F4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(result + 280);
  if (v5) {
    return v5(result, a2, a3, a4, a5, *(void *)(result + 152));
  }
  return result;
}

void sub_1003E5BA8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a2) {
    sub_100006BB8(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003E6338( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20, uint64_t a21, uint64_t a22, uint64_t a23, int a24, __int16 a25, char a26, char a27)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

id sub_1003E6374(uint64_t a1, int a2, int a3)
{
  id v4 = *(void **)(a1 + 160);
  if (v4)
  {
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472LL;
    _DWORD v7[2] = sub_1003EDB84;
    v7[3] = &unk_101830538;
    _DWORD v7[4] = a1;
    int v8 = a2;
    int v9 = a3;
    return [v4 async:v7];
  }

  else
  {
    uint64_t v6 = sub_101237F44();
    return (id)sub_1003E63D8(v6);
  }

void sub_1003E63D8(uint64_t a1, int a2, int a3)
{
  id v4 = *(void **)(a1 + 160);
  if (v4)
  {
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472LL;
    v8[2] = sub_1003EDBA4;
    v8[3] = &unk_101830538;
    void v8[4] = a1;
    int v9 = a2;
    int v10 = a3;
    [v4 async:v8];
  }

  else
  {
    unint64_t v5 = (ALSLocationDelegate *)sub_1012380AC();
    -[ALSLocationDelegate finished:](v5, v6, v7);
  }

void sub_1003E6648(uint64_t a1, int a2, int a3)
{
  id v4 = *(void **)(a1 + 160);
  if (v4)
  {
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472LL;
    _OWORD v11[2] = sub_1003EDBF0;
    v11[3] = &unk_101830538;
    v11[4] = a1;
    int v12 = a2;
    int v13 = a3;
    [v4 async:v11];
  }

  else
  {
    unint64_t v5 = (ALSLocationDelegate *)sub_101238214();
    -[ALSLocationDelegate processCells:inRange:timeReceived:requestType:tag:](v5, v6, v7, v14, v10, v8, v9);
  }

void *sub_1003E68D8(void *result)
{
  std::string::size_type v1 = result[6];
  if (v1 < result[7] + v1)
  {
    uint64_t v2 = result;
    __asm { FMOV            V0.2D, #-1.0 }

    __int128 v35 = _Q0;
    do
    {
      id v8 = [(id)v2[4] objectAtIndex:v1];
      *(void *)&__int128 v9 = -1LL;
      *((void *)&v9 + 1) = -1LL;
      __int128 v56 = v9;
      __int128 v55 = v9;
      LODWORD(v55) = [v8 mcc];
      DWORD1(v55) = [v8 mnc];
      DWORD2(v55) = [v8 lacID];
      HIDWORD(v55) = [v8 cellID];
      else {
        unsigned int v10 = -1;
      }
      LODWORD(v56) = v10;
      else {
        unsigned int v11 = -1;
      }
      DWORD1(v56) = v11;
      int v37 = 0xFFFF;
      double v38 = 0.0;
      double v39 = 0.0;
      __int128 v40 = xmmword_1012E0070;
      __int128 v41 = v35;
      __int128 v42 = v35;
      __int128 v43 = v35;
      unsigned int v44 = 0;
      unint64_t v45 = 0xBFF0000000000000LL;
      uint64_t v46 = 0LL;
      uint64_t v47 = 0LL;
      int v48 = 0;
      unint64_t v49 = 0xBFF0000000000000LL;
      int v50 = 0x7FFFFFFF;
      uint64_t v52 = 0LL;
      uint64_t v53 = 0LL;
      uint64_t v51 = 0LL;
      char v54 = 0;
      if ((objc_msgSend(objc_msgSend(v8, "location"), "accuracy") & 0x80000000) != 0)
      {
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101836B98);
        }
        uint64_t v16 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
        {
          sub_1003E4C04((unsigned int *)&v55, &__p);
          p_p = &__p;
          if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
          }
          LODWORD(buf.__r_.__value_.__l.__data_) = 134349315;
          *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v1;
          WORD2(buf.__r_.__value_.__r.__words[1]) = 2081;
          *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)p_p;
          _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "AlsCell, gsm, %{public}lu, unknown, %{private}s",  (uint8_t *)&buf,  0x16u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(&__p, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101836B98);
          }
          uint64_t v30 = qword_101934858;
          sub_1003E4C04((unsigned int *)&v55, &buf);
          p_std::stringbuf::string_type buf = &buf;
          if ((buf.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
          }
          LODWORD(v59.__r_.__value_.__l.__data_) = 134349315;
          *(std::string::size_type *)((char *)v59.__r_.__value_.__r.__words + 4) = v1;
          WORD2(v59.__r_.__value_.__r.__words[1]) = 2081;
          *(std::string::size_type *)((char *)&v59.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)p_buf;
          LODWORD(v33) = 22;
          id v32 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &__p,  1628LL,  &_mh_execute_header,  v30,  0LL,  "AlsCell, gsm, %{public}lu, unknown, %{private}s",  &v59,  v33);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[ALSLocationDelegate processCells:inRange:timeReceived:requestType:tag:]_block_invoke",  "%s\n",  (const char *)v32);
          if (v32 != &__p) {
            free(v32);
          }
        }

        id result = *(void **)(v2[5] + 16LL);
        unsigned int v18 = (uint64_t (*)(void *, __int128 *, void, void, void))result[23];
        if (v18) {
          id result = (void *)v18(result, &v55, *((unsigned int *)v2 + 18), *((unsigned int *)v2 + 19), result[19]);
        }
      }

      else
      {
        BOOL v12 = (int)objc_msgSend(objc_msgSend(v8, "location"), "accuracy") > 999999;
        int v13 = objc_msgSend(objc_msgSend(v8, "location"), "accuracy");
        double v14 = (double)v13;
        if (v12) {
          double v14 = (double)v13 / 1000000.0;
        }
        *(double *)&__int128 v40 = v14;
        *((void *)&v43 + 1) = v2[8];
        double v38 = (double)(uint64_t)objc_msgSend(objc_msgSend(v8, "location"), "latitude") / 100000000.0;
        double v39 = (double)(uint64_t)objc_msgSend(objc_msgSend(v8, "location"), "longitude") / 100000000.0;
        HIDWORD(v51) = 1;
        if (objc_msgSend(objc_msgSend(v8, "location"), "hasAltitude")
          && objc_msgSend(objc_msgSend(v8, "location"), "hasVerticalAccuracy"))
        {
          *((double *)&v40 + 1) = (double)(int)objc_msgSend(objc_msgSend(v8, "location"), "altitude");
          *(double *)&__int128 v41 = (double)(int)objc_msgSend(objc_msgSend(v8, "location"), "verticalAccuracy");
        }

        else {
          unsigned int v15 = 70;
        }
        unsigned int v44 = v15;
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101836B98);
        }
        BOOL v19 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
        {
          sub_1003E4C04((unsigned int *)&v55, &buf);
          int size = (char)buf.__r_.__value_.__s.__size_;
          std::string::size_type v21 = buf.__r_.__value_.__r.__words[0];
          sub_1008330C4((uint64_t)&v37, &v59);
          unsigned int v22 = &buf;
          if (size < 0) {
            unsigned int v22 = (std::stringbuf::string_type *)v21;
          }
          id v23 = &v59;
          if ((v59.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            id v23 = (std::stringbuf::string_type *)v59.__r_.__value_.__r.__words[0];
          }
          LODWORD(__p.__r_.__value_.__l.__data_) = 134349571;
          *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + 4) = v1;
          WORD2(__p.__r_.__value_.__r.__words[1]) = 2081;
          *(std::string::size_type *)((char *)&__p.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v22;
          HIWORD(__p.__r_.__value_.__r.__words[2]) = 2081;
          uint64_t v61 = v23;
          _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEBUG,  "AlsCell, gsm, %{public}lu, valid, %{private}s, location, %{private}s",  (uint8_t *)&__p,  0x20u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(&__p, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101836B98);
          }
          uint64_t v25 = qword_101934858;
          sub_1003E4C04((unsigned int *)&v55, &v59);
          uint64_t v34 = v25;
          LODWORD(v25) = (char)v59.__r_.__value_.__s.__size_;
          std::string::size_type v26 = v59.__r_.__value_.__r.__words[0];
          sub_1008330C4((uint64_t)&v37, &v36);
          id v27 = &v59;
          double v28 = &v36;
          if ((v36.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            double v28 = (std::stringbuf::string_type *)v36.__r_.__value_.__r.__words[0];
          }
          LODWORD(buf.__r_.__value_.__l.__data_) = 134349571;
          *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v1;
          WORD2(buf.__r_.__value_.__r.__words[1]) = 2081;
          *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v27;
          HIWORD(buf.__r_.__value_.__r.__words[2]) = 2081;
          int v58 = v28;
          LODWORD(v33) = 32;
          uint64_t v29 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &__p,  1628LL,  &_mh_execute_header,  v34,  2LL,  "AlsCell, gsm, %{public}lu, valid, %{private}s, location, %{private}s",  &buf,  v33);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[ALSLocationDelegate processCells:inRange:timeReceived:requestType:tag:]_block_invoke",  "%s\n",  (const char *)v29);
          if (v29 != &__p) {
            free(v29);
          }
        }

        id result = *(void **)(v2[5] + 16LL);
        id v24 = (uint64_t (*)(void *, __int128 *, int *, void, void, void))result[22];
        if (v24) {
          id result = (void *)v24(result, &v55, &v37, *((unsigned int *)v2 + 18), *((unsigned int *)v2 + 19), result[19]);
        }
      }

      ++v1;
    }

    while (v1 < v2[7] + v2[6]);
  }

  return result;
}

void sub_1003E6FE0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,void *__p,uint64_t a57,int a58,__int16 a59,char a60,char a61)
{
  if (a61 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003E7018(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(result + 184);
  if (v4) {
    return v4(result, a2, a3, a4, *(void *)(result + 152));
  }
  return result;
}

uint64_t sub_1003E702C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(result + 176);
  if (v5) {
    return v5(result, a2, a3, a4, a5, *(void *)(result + 152));
  }
  return result;
}

void *sub_1003E726C(void *result)
{
  std::string::size_type v1 = result[6];
  if (v1 < result[7] + v1)
  {
    uint64_t v2 = result;
    __asm { FMOV            V0.2D, #-1.0 }

    __int128 v35 = _Q0;
    do
    {
      id v8 = [(id)v2[4] objectAtIndex:v1];
      *(void *)&__int128 v9 = -1LL;
      *((void *)&v9 + 1) = -1LL;
      __int128 v56 = v9;
      __int128 v55 = v9;
      LODWORD(v55) = [v8 mcc];
      DWORD1(v55) = [v8 mnc];
      DWORD2(v55) = [v8 lacID];
      HIDWORD(v55) = [v8 cellID];
      else {
        unsigned int v10 = -1;
      }
      LODWORD(v56) = v10;
      else {
        unsigned int v11 = -1;
      }
      DWORD1(v56) = v11;
      int v37 = 0xFFFF;
      double v38 = 0.0;
      double v39 = 0.0;
      __int128 v40 = xmmword_1012E0070;
      __int128 v41 = v35;
      __int128 v42 = v35;
      __int128 v43 = v35;
      unsigned int v44 = 0;
      unint64_t v45 = 0xBFF0000000000000LL;
      uint64_t v46 = 0LL;
      uint64_t v47 = 0LL;
      int v48 = 0;
      unint64_t v49 = 0xBFF0000000000000LL;
      int v50 = 0x7FFFFFFF;
      uint64_t v52 = 0LL;
      uint64_t v53 = 0LL;
      uint64_t v51 = 0LL;
      char v54 = 0;
      if ((objc_msgSend(objc_msgSend(v8, "location"), "accuracy") & 0x80000000) != 0)
      {
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101836B98);
        }
        uint64_t v16 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
        {
          sub_1003E4C04((unsigned int *)&v55, &__p);
          p_p = &__p;
          if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
          }
          LODWORD(buf.__r_.__value_.__l.__data_) = 134349315;
          *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v1;
          WORD2(buf.__r_.__value_.__r.__words[1]) = 2081;
          *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)p_p;
          _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "AlsCell, scdma, %{public}lu, unknown, %{private}s",  (uint8_t *)&buf,  0x16u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(&__p, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101836B98);
          }
          uint64_t v30 = qword_101934858;
          sub_1003E4C04((unsigned int *)&v55, &buf);
          p_std::stringbuf::string_type buf = &buf;
          if ((buf.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
          }
          LODWORD(v59.__r_.__value_.__l.__data_) = 134349315;
          *(std::string::size_type *)((char *)v59.__r_.__value_.__r.__words + 4) = v1;
          WORD2(v59.__r_.__value_.__r.__words[1]) = 2081;
          *(std::string::size_type *)((char *)&v59.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)p_buf;
          LODWORD(v33) = 22;
          id v32 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &__p,  1628LL,  &_mh_execute_header,  v30,  0LL,  "AlsCell, scdma, %{public}lu, unknown, %{private}s",  &v59,  v33);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[ALSLocationDelegate processScdmaCells:inRange:timeReceived:requestType:tag:]_block_invoke",  "%s\n",  (const char *)v32);
          if (v32 != &__p) {
            free(v32);
          }
        }

        id result = *(void **)(v2[5] + 16LL);
        unsigned int v18 = (uint64_t (*)(void *, __int128 *, void, void, void))result[25];
        if (v18) {
          id result = (void *)v18(result, &v55, *((unsigned int *)v2 + 18), *((unsigned int *)v2 + 19), result[19]);
        }
      }

      else
      {
        BOOL v12 = (int)objc_msgSend(objc_msgSend(v8, "location"), "accuracy") > 999999;
        int v13 = objc_msgSend(objc_msgSend(v8, "location"), "accuracy");
        double v14 = (double)v13;
        if (v12) {
          double v14 = (double)v13 / 1000000.0;
        }
        *(double *)&__int128 v40 = v14;
        *((void *)&v43 + 1) = v2[8];
        double v38 = (double)(uint64_t)objc_msgSend(objc_msgSend(v8, "location"), "latitude") / 100000000.0;
        double v39 = (double)(uint64_t)objc_msgSend(objc_msgSend(v8, "location"), "longitude") / 100000000.0;
        HIDWORD(v51) = 1;
        if (objc_msgSend(objc_msgSend(v8, "location"), "hasAltitude")
          && objc_msgSend(objc_msgSend(v8, "location"), "hasVerticalAccuracy"))
        {
          *((double *)&v40 + 1) = (double)(int)objc_msgSend(objc_msgSend(v8, "location"), "altitude");
          *(double *)&__int128 v41 = (double)(int)objc_msgSend(objc_msgSend(v8, "location"), "verticalAccuracy");
        }

        else {
          unsigned int v15 = 70;
        }
        unsigned int v44 = v15;
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101836B98);
        }
        BOOL v19 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
        {
          sub_1003E4C04((unsigned int *)&v55, &buf);
          int size = (char)buf.__r_.__value_.__s.__size_;
          std::string::size_type v21 = buf.__r_.__value_.__r.__words[0];
          sub_1008330C4((uint64_t)&v37, &v59);
          unsigned int v22 = &buf;
          if (size < 0) {
            unsigned int v22 = (std::stringbuf::string_type *)v21;
          }
          id v23 = &v59;
          if ((v59.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            id v23 = (std::stringbuf::string_type *)v59.__r_.__value_.__r.__words[0];
          }
          LODWORD(__p.__r_.__value_.__l.__data_) = 134349571;
          *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + 4) = v1;
          WORD2(__p.__r_.__value_.__r.__words[1]) = 2081;
          *(std::string::size_type *)((char *)&__p.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v22;
          HIWORD(__p.__r_.__value_.__r.__words[2]) = 2081;
          uint64_t v61 = v23;
          _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEBUG,  "AlsCell, scdma, %{public}lu, valid, %{private}s, location, %{private}s",  (uint8_t *)&__p,  0x20u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(&__p, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101836B98);
          }
          uint64_t v25 = qword_101934858;
          sub_1003E4C04((unsigned int *)&v55, &v59);
          uint64_t v34 = v25;
          LODWORD(v25) = (char)v59.__r_.__value_.__s.__size_;
          std::string::size_type v26 = v59.__r_.__value_.__r.__words[0];
          sub_1008330C4((uint64_t)&v37, &v36);
          id v27 = &v59;
          double v28 = &v36;
          if ((v36.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            double v28 = (std::stringbuf::string_type *)v36.__r_.__value_.__r.__words[0];
          }
          LODWORD(buf.__r_.__value_.__l.__data_) = 134349571;
          *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v1;
          WORD2(buf.__r_.__value_.__r.__words[1]) = 2081;
          *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v27;
          HIWORD(buf.__r_.__value_.__r.__words[2]) = 2081;
          int v58 = v28;
          LODWORD(v33) = 32;
          uint64_t v29 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &__p,  1628LL,  &_mh_execute_header,  v34,  2LL,  "AlsCell, scdma, %{public}lu, valid, %{private}s, location, %{private}s",  &buf,  v33);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[ALSLocationDelegate processScdmaCells:inRange:timeReceived:requestType:tag:]_block_invoke",  "%s\n",  (const char *)v29);
          if (v29 != &__p) {
            free(v29);
          }
        }

        id result = *(void **)(v2[5] + 16LL);
        id v24 = (uint64_t (*)(void *, __int128 *, int *, void, void, void))result[24];
        if (v24) {
          id result = (void *)v24(result, &v55, &v37, *((unsigned int *)v2 + 18), *((unsigned int *)v2 + 19), result[19]);
        }
      }

      ++v1;
    }

    while (v1 < v2[7] + v2[6]);
  }

  return result;
}

void sub_1003E7974( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,void *__p,uint64_t a57,int a58,__int16 a59,char a60,char a61)
{
  if (a61 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003E79AC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(result + 200);
  if (v4) {
    return v4(result, a2, a3, a4, *(void *)(result + 152));
  }
  return result;
}

uint64_t sub_1003E79C0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(result + 192);
  if (v5) {
    return v5(result, a2, a3, a4, a5, *(void *)(result + 152));
  }
  return result;
}

LABEL_140:
    sub_1003E8ADC((uint64_t)self->fRequester, (uint64_t)&v133, (uint64_t)&v130, a6, a7, v115);
    if (v130)
    {
      BOOL v131 = (char *)v130;
      operator delete(v130);
    }

    if (v133)
    {
      __int16 v134 = (char *)v133;
      operator delete(v133);
    }
  }

  if (*(_BYTE *)(a1 + 1846)) {
    [*(id *)(a1 + 2040) registerForMobilityBoutMetrics:*(void *)(a1 + 2024)];
  }
  if (*(_BYTE *)(a1 + 1895)) {
    [*(id *)(a1 + 2040) registerForWalkingSteadiness:*(void *)(a1 + 2024)];
  }
  if (*(_BYTE *)(a1 + 1849))
  {
    int v37 = [*(id *)(a1 + 248) silo];
    double v38 = operator new(0x38uLL);
    sub_1008D75E0(v38, v37, (uint64_t)sub_1008C543C, a1, 0LL);
    double v39 = *(void *)(a1 + 448);
    *(void *)(a1 + 44_Block_object_dispose((const void *)(v30 - 184), 8) = v38;
    if (v39) {
      (*(void (**)(uint64_t))(*(void *)v39 + 8LL))(v39);
    }
    __int128 v40 = sub_1008FA854(0);
    sub_1006DCB40(v40, 27, *(void *)(a1 + 448), -1.0);
  }

  if (*(_BYTE *)(a1 + 1907))
  {
    __int128 v41 = [*(id *)(a1 + 248) silo];
    __int128 v42 = operator new(0x38uLL);
    sub_1011FD1D0(v42, v41, (uint64_t)sub_1008C544C, a1, 0LL);
    __int128 v43 = *(void *)(a1 + 456);
    *(void *)(a1 + 456) = v42;
    if (v43) {
      (*(void (**)(uint64_t))(*(void *)v43 + 8LL))(v43);
    }
    unsigned int v44 = sub_1008FA854(0);
    sub_1006DCB40(v44, 39, *(void *)(a1 + 456), -1.0);
  }

  if (*(_BYTE *)(a1 + 1886))
  {
    unint64_t v45 = operator new(0x38uLL);
    sub_1003DE40C(v45, [*(id *)(a1 + 248) silo], (uint64_t)sub_1008C545C, a1, 0);
    *(void *)(a1 + 464) = v45;
    uint64_t v46 = sub_1008FA854(0);
    sub_1006DCB40(v46, 36, *(void *)(a1 + 464), -1.0);
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_10185E910);
    }
    uint64_t v47 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_INFO, "Logging baseband compass coex", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_10185E910);
      }
      LOWORD(v102) = 0;
      LODWORD(v97) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  1LL,  "Logging baseband compass coex",  &v102,  v97);
      __int16 v91 = (uint8_t *)v90;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLMotionLogger::enableAlwaysOnLogging()", "%s\n", v90);
      if (v91 != buf) {
        free(v91);
      }
    }
  }

  int v48 = *(double *)(a1 + 1984);
  if (*(_BYTE *)(a1 + 1949) && v48 <= 0.1)
  {
    int v48 = 0.1;
  }

  else if (v48 <= 0.0)
  {
    goto LABEL_167;
  }

  sub_100BEB1B4(a1, [*(id *)(a1 + 248) silo], v48);
  if (qword_101934790 != -1) {
    dispatch_once(&qword_101934790, &stru_10185E990);
  }
  unint64_t v49 = (os_log_s *)qword_101934798;
  if (os_log_type_enabled((os_log_t)qword_101934798, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 134349056;
    __int128 v106 = v48;
    _os_log_impl( (void *)&_mh_execute_header,  v49,  OS_LOG_TYPE_DEFAULT,  "Logging InertialOdometry at interval, %{public}f",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934790 != -1) {
      dispatch_once(&qword_101934790, &stru_10185E990);
    }
    char v102 = 134349056;
    __int128 v103 = v48;
    LODWORD(v97) = 12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934798,  0LL,  "Logging InertialOdometry at interval, %{public}f",  &v102,  v97);
    std::stringbuf::string_type v59 = (uint8_t *)v58;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLMotionLogger::enableAlwaysOnLogging()", "%s\n", v58);
    if (v59 != buf) {
      free(v59);
    }
  }

      int v72 = (void *)v6[1];
      if (v72)
      {
        do
        {
          double v73 = v72;
          int v72 = (void *)*v72;
        }

        while (v72);
      }

      else
      {
        do
        {
          double v73 = (void *)v6[2];
          double v74 = *v73 == (void)v6;
          SEL v6 = v73;
        }

        while (!v74);
      }

      SEL v6 = v73;
      if (v73 == (void *)(a1 + 136)) {
        goto LABEL_167;
      }
    }

    char v54 = 80;
LABEL_139:
    sub_100C15888(v53, v54);
    goto LABEL_140;
  }

  id result = *(float *)(a2 + 176);
  v5 |= 0x20000000000uLL;
  *uint64_t v2 = v5;
  *(_WORD *)(a1 + 2sub_1011C52D0(v16 - 88) = v6;
  *(float *)(a1 + 176) = result;
  id v4 = *v3;
  id v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x80000000000LL) == 0)
  {
LABEL_67:
    if ((v4 & 0x40000000000LL) == 0) {
      goto LABEL_68;
    }
    goto LABEL_142;
  }

  PB::TextFormatter::format(this, "maxAccelNorm", *(float *)(a1 + 216));
  SEL v6 = *v5;
  id v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x10000000000000LL) == 0)
  {
LABEL_66:
    if ((v6 & 0x20000000000000LL) == 0) {
      goto LABEL_67;
    }
    goto LABEL_142;
  }

  id result = PB::Writer::write(this, *(float *)(v3 + 180), 0x3Du);
  unint64_t v5 = *v4;
  SEL v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x100000000000LL) == 0)
  {
LABEL_66:
    if ((v5 & 0x200000000000LL) == 0) {
      goto LABEL_67;
    }
    goto LABEL_142;
  }

  id result = *(float *)(a2 + 144);
  v5 |= 0x200000000uLL;
  *uint64_t v2 = v5;
  *(_WORD *)(a1 + 3sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v6;
  *(_BYTE *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 1memset(v19, 0, 44) = result;
  LOWORD(v_Block_object_dispose((const void *)(v30 - 184), 8) = *(_WORD *)(a2 + 324);
  id v4 = *v3;
  if ((*v3 & 0x800000000LL) == 0)
  {
LABEL_60:
    if ((v4 & 0x8000000000LL) == 0) {
      goto LABEL_61;
    }
    goto LABEL_142;
  }

  PB::TextFormatter::format(this, "lowSenseWithAudioParBaroNormThreshold", *(float *)(a1 + 196));
  id v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  SEL v6 = *v5;
  if ((*v5 & 0x800000000000LL) == 0)
  {
LABEL_59:
    if ((v6 & 0x1000000000000LL) == 0) {
      goto LABEL_60;
    }
    goto LABEL_142;
  }

  id result = PB::Writer::write(this, *(float *)(v3 + 144), 0xFAu);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  unint64_t v5 = *v4;
  if ((*v4 & 0x800000000LL) == 0)
  {
LABEL_60:
    if ((v5 & 0x8000000000LL) == 0) {
      goto LABEL_61;
    }
    goto LABEL_142;
  }

  uint64_t v29 = *(_BYTE *)(a2 + 334);
  v6 |= 0x800000uLL;
  *uint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_BYTE *)(a1 + 334) = v29;
  id v4 = *v3;
  id v7 = *(void *)(a2 + 364);
  if ((v7 & 0x80) == 0)
  {
LABEL_35:
    if ((v7 & 0x80000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_142;
  }

  PB::TextFormatter::format(this, "kIsEventDetected", *(_BYTE *)(a1 + 338));
  id v7 = *v5;
  SEL v6 = *(void *)(a1 + 364);
  if ((v6 & 0x10000000) == 0)
  {
LABEL_39:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_142;
  }

  id result = PB::Writer::write(this, *(_BYTE *)(v3 + 334), 0x6Fu);
  unint64_t v5 = *v4;
  SEL v6 = v4[1];
  if ((v6 & 0x80) == 0)
  {
LABEL_35:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_142;
  }

  int v72 = *(_DWORD *)(a2 + 72);
  v3 |= 0x1000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(_BYTE *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + sub_10000AE14(v1 - 72) = v72;
  LOWORD(sub_1012279C0(0LL, v4, v5) = *(_WORD *)(a2 + 212);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x100) == 0)
  {
LABEL_62:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_142;
  }

  PB::TextFormatter::format(this, "maxChaos1", *(float *)(a1 + 100));
  SEL v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  unint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x100000) == 0)
  {
LABEL_61:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_142;
  }

  id result = PB::Writer::write(this, *(_BYTE *)(v3 + 174), 0x45Eu);
  unint64_t v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  id v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 0x80) == 0)
  {
LABEL_62:
    if ((v4 & 0x80000000000000LL) == 0) {
      goto LABEL_63;
    }
    goto LABEL_142;
  }

                *(void *)(a1 + 16) = v31;
              }

              else
              {
                id result = PB::Reader::skip(this, v20, v11 & 7, 0);
                if (!(_DWORD)result) {
                  return result;
                }
                id v3 = *((void *)this + 1);
                uint64_t v2 = *((void *)this + 2);
              }

void sub_1003E89EC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, void *a34, uint64_t a35, uint64_t a36, void *a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, void *__p, uint64_t a44, uint64_t a45, void *a46)
{
  if (__p) {
    operator delete(__p);
  }
  if (a46) {
    operator delete(a46);
  }
  _Unwind_Resume(a1);
}

void sub_1003E8ADC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6)
{
  uint64_t v25 = 0LL;
  std::string::size_type v26 = 0LL;
  uint64_t v27 = 0LL;
  sub_1002E2234( &v25,  *(const void **)a2,  *(void *)(a2 + 8),  0xD37A6F4DE9BD37A7LL * ((uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 3));
  unsigned int v22 = 0LL;
  id v23 = 0LL;
  uint64_t v24 = 0LL;
  sub_1002E2234( &v22,  *(const void **)a3,  *(void *)(a3 + 8),  0xD37A6F4DE9BD37A7LL * ((uint64_t)(*(void *)(a3 + 8) - *(void *)a3) >> 3));
  unsigned int v11 = *(void **)(a1 + 160);
  if (v11)
  {
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3321888768LL;
    void v12[2] = sub_1003EDC10;
    v12[3] = &unk_101836C40;
    v12[4] = a1;
    int v13 = 0LL;
    double v14 = 0LL;
    uint64_t v15 = 0LL;
    sub_1002E2234(&v13, v25, (uint64_t)v26, 0xD37A6F4DE9BD37A7LL * ((v26 - (_BYTE *)v25) >> 3));
    std::stringbuf::string_type __p = 0LL;
    unsigned int v17 = 0LL;
    uint64_t v18 = 0LL;
    sub_1002E2234(&__p, v22, (uint64_t)v23, 0xD37A6F4DE9BD37A7LL * ((v23 - (_BYTE *)v22) >> 3));
    int v19 = a4;
    int v20 = a5;
    int v21 = a6;
    [v11 async:v12];
    if (__p)
    {
      unsigned int v17 = __p;
      operator delete(__p);
    }

    if (v13)
    {
      double v14 = v13;
      operator delete(v13);
    }

    if (v22)
    {
      id v23 = v22;
      operator delete(v22);
    }

    if (v25)
    {
      std::string::size_type v26 = v25;
      operator delete(v25);
    }
  }

  else
  {
    sub_10123837C();
    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/Network/CLNetworkLocationRequester.h",  377,  "onWifiLocationSeriesComplete");
    __break(1u);
  }

void sub_1003E8C80( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, void *__p, uint64_t a21)
{
  if (__p) {
    operator delete(__p);
  }
  if (a17) {
    operator delete(a17);
  }
  id v23 = *(void **)(v21 - 96);
  if (v23)
  {
    *(void *)(v21 - sub_1011C52D0(v16 - 88) = v23;
    operator delete(v23);
  }

  uint64_t v24 = *(void **)(v21 - 72);
  if (v24)
  {
    *(void *)(v21 - 64) = v24;
    operator delete(v24);
  }

  _Unwind_Resume(exception_object);
}

uint64_t sub_1003E8CEC(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t *a4)
{
  *(void *)a1 = off_101836C80;
  *(_OWORD *)(a1 + _Block_object_dispose((const void *)(v30 - 184), 8) = 0u;
  *(_OWORD *)(a1 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 0u;
  *(_OWORD *)(a1 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + sub_10000AE14(v1 - 72) = 0u;
  *(_OWORD *)(a1 + sub_1011C52D0(v16 - 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + sub_1011C52D0(v9 - 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = *a2;
  __int128 v6 = a2[1];
  __int128 v7 = a2[2];
  __int128 v8 = a2[3];
  *(_OWORD *)(a1 + 216) = a2[4];
  *(_OWORD *)(a1 + 20sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v8;
  *(_OWORD *)(a1 + 184) = v7;
  *(_OWORD *)(a1 + 16_Block_object_dispose((const void *)(v30 - 184), 8) = v6;
  __int128 v9 = a2[5];
  __int128 v10 = a2[6];
  __int128 v11 = a2[8];
  *(_OWORD *)(a1 + 264) = a2[7];
  *(_OWORD *)(a1 + 28sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v11;
  *(_OWORD *)(a1 + 24_Block_object_dispose((const void *)(v30 - 184), 8) = v10;
  *(_OWORD *)(a1 + 232) = v9;
  *(void *)(a1 + 296) = 0LL;
  *(void *)(a1 + 304) = a3;
  *(void *)a1 = off_101836A90;
  *(void *)(a1 + 312) = 0LL;
  *(_DWORD *)(a1 + 32sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 10;
  BOOL v12 = (std::string *)(a1 + 352);
  *(_DWORD *)(a1 + 3memset(v19, 0, 44) = 0;
  *(void *)(a1 + 32_Block_object_dispose((const void *)(v30 - 184), 8) = 0LL;
  *(void *)(a1 + 336) = 0LL;
  sub_1010DDBC0((void *)(a1 + 352), off_101937D20);
  *(_BYTE *)(a1 + 376) = 0;
  uint64_t v13 = *a4;
  *a4 = 0LL;
  *(void *)(a1 + 384) = v13;
  sub_100786438(a1 + 392);
  *(_DWORD *)(a1 + 4sub_10000AE14(v1 - 72) = 0;
  [*(id *)(a1 + 304) silo];
  *(void *)(a1 + 312) = -[ALSLocationDelegate initWithRequester:]( objc_alloc(&OBJC_CLASS___ALSLocationDelegate),  "initWithRequester:",  a1);
  sub_1002F0B04(buf);
  *(_BYTE *)(a1 + 376) = sub_1002A8560(*(uint64_t *)buf, "AppleLocationServer", v12);
  double v14 = *(std::__shared_weak_count **)&buf[8];
  if (*(void *)&buf[8])
  {
    uint64_t v15 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      unint64_t v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }

  sub_1002F0B04(buf);
  char v17 = sub_1002A7CB0(*(uint64_t *)buf, "AppleLocationServerTimeout", (_DWORD *)(a1 + 320));
  char v18 = v17;
  int v19 = *(std::__shared_weak_count **)&buf[8];
  if (*(void *)&buf[8])
  {
    int v20 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      unint64_t v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
      if ((v18 & 1) != 0) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
  }

  if ((v17 & 1) == 0) {
LABEL_11:
  }
    *(_DWORD *)(a1 + 32sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 10;
LABEL_12:
  sub_1002F0B04(buf);
  char v22 = sub_1002A8804(*(uint64_t *)buf, "AppleLocationServerRequestLog", (CFTypeRef *)(a1 + 328));
  char v23 = v22;
  uint64_t v24 = *(std::__shared_weak_count **)&buf[8];
  if (*(void *)&buf[8])
  {
    uint64_t v25 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      unint64_t v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
      if ((v23 & 1) != 0) {
        goto LABEL_18;
      }
      goto LABEL_17;
    }
  }

  if ((v22 & 1) == 0) {
LABEL_17:
  }
    *(void *)(a1 + 32_Block_object_dispose((const void *)(v30 - 184), 8) = 0LL;
LABEL_18:
  sub_1002F0B04(buf);
  char v27 = sub_1002A8804(*(uint64_t *)buf, "AppleLocationServerResponseLog", (CFTypeRef *)(a1 + 336));
  char v28 = v27;
  uint64_t v29 = *(std::__shared_weak_count **)&buf[8];
  if (!*(void *)&buf[8]) {
    goto LABEL_22;
  }
  uint64_t v30 = (unint64_t *)(*(void *)&buf[8] + 8LL);
  do
    unint64_t v31 = __ldaxr(v30);
  while (__stlxr(v31 - 1, v30));
  if (v31)
  {
LABEL_22:
    if ((v27 & 1) != 0) {
      goto LABEL_24;
    }
    goto LABEL_23;
  }

  ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
  std::__shared_weak_count::__release_weak(v29);
  if ((v28 & 1) == 0) {
LABEL_23:
  }
    *(void *)(a1 + 336) = 0LL;
LABEL_24:
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101836B98);
  }
  id v32 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v33 = v12;
    int v34 = *(unsigned __int8 *)(a1 + 376);
    int v35 = *(_DWORD *)(a1 + 320);
    BOOL v36 = *(void *)(a1 + 328) != 0LL;
    BOOL v37 = *(void *)(a1 + 336) != 0LL;
    *(_DWORD *)std::stringbuf::string_type buf = 136381699;
    *(void *)&uint8_t buf[4] = v33;
    *(_WORD *)&_BYTE buf[12] = 1026;
    *(_DWORD *)&buf[14] = v34;
    __int16 v56 = 1026;
    int v57 = v35;
    __int16 v58 = 1026;
    BOOL v59 = v36;
    __int16 v60 = 1026;
    BOOL v61 = v37;
    _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEFAULT,  "AlsInit, server, %{private}s, override, %{public}d, timeout, %{public}d, log request/response, %{public}d, %{public}d",  buf,  0x24u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101836B98);
    }
    double v39 = v12;
    int v40 = *(unsigned __int8 *)(a1 + 376);
    int v41 = *(_DWORD *)(a1 + 320);
    BOOL v42 = *(void *)(a1 + 328) != 0LL;
    BOOL v43 = *(void *)(a1 + 336) != 0LL;
    int v45 = 136381699;
    uint64_t v46 = v39;
    __int16 v47 = 1026;
    int v48 = v40;
    __int16 v49 = 1026;
    int v50 = v41;
    __int16 v51 = 1026;
    BOOL v52 = v42;
    __int16 v53 = 1026;
    BOOL v54 = v43;
    unsigned int v44 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "AlsInit, server, %{private}s, override, %{public}d, timeout, %{public}d, log request/response, %{pub lic}d, %{public}d",  &v45,  36);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLNetworkLocationRequesterALS::CLNetworkLocationRequesterALS(const Listener &, id<CLIntersiloUniverse>, std::uniqu e_ptr<CLINetworkLocationRequesterALSExternal>)",  "%s\n",  v44);
    if (v44 != buf) {
      free(v44);
    }
  }

  return a1;
}

void sub_1003E91DC(_Unwind_Exception *a1)
{
  uint64_t v5 = *(void *)(v1 + 384);
  *(void *)(v1 + 384) = 0LL;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
  }
  sub_1003E9260(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1003E9260(uint64_t a1)
{
  *(void *)a1 = off_101836C80;
  uint64_t v2 = *(void **)(a1 + 128);
  if (v2)
  {
    *(void *)(a1 + 136) = v2;
    operator delete(v2);
  }

  uint64_t v3 = *(void **)(a1 + 104);
  if (v3)
  {
    *(void *)(a1 + 112) = v3;
    operator delete(v3);
  }

  id v4 = *(void **)(a1 + 80);
  if (v4)
  {
    *(void *)(a1 + sub_1011C52D0(v16 - 88) = v4;
    operator delete(v4);
  }

  __int128 v8 = (void **)(a1 + 56);
  sub_1003EE02C(&v8);
  uint64_t v5 = *(void **)(a1 + 32);
  if (v5)
  {
    *(void *)(a1 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v5;
    operator delete(v5);
  }

  __int128 v6 = *(void **)(a1 + 8);
  if (v6)
  {
    *(void *)(a1 + 16) = v6;
    operator delete(v6);
  }

  return a1;
}

uint64_t sub_1003E92F8(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = v8;
  uint64_t v8 = 0LL;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
  }
  return a1;
}

void sub_1003E9368( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    (*(void (**)(uint64_t))(*(void *)a10 + 8LL))(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003E938C(uint64_t a1)
{
  *(void *)a1 = off_101836A90;

  uint64_t v2 = *(const void **)(a1 + 328);
  if (v2) {
    CFRelease(v2);
  }
  uint64_t v3 = *(const void **)(a1 + 336);
  if (v3) {
    CFRelease(v3);
  }
  sub_1010DDBC0(__p, "final");
  sub_100987188((uint64_t)&qword_101995698, (uint64_t *)__p, *(_DWORD *)(a1 + 472));
  if (v7 < 0) {
    operator delete(__p[0]);
  }
  sub_10078643C(a1 + 392);
  uint64_t v4 = *(void *)(a1 + 384);
  *(void *)(a1 + 384) = 0LL;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  return sub_1003E9260(a1);
}

void sub_1003E9450(uint64_t a1)
{
  uint64_t v1 = (void *)sub_1003E938C(a1);
  operator delete(v1);
}

uint64_t sub_1003E9464(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = sub_100FB8E14();
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101836C20);
  }
  uint64_t v6 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v7 = *(void *)(a2 + 4);
    uint64_t v8 = *(void *)(a2 + 12);
    *(_DWORD *)std::stringbuf::string_type buf = 134218496;
    *(void *)&uint8_t buf[4] = v7;
    *(_WORD *)&_BYTE buf[12] = 2048;
    *(void *)&buf[14] = v8;
    *(_WORD *)&buf[22] = 1024;
    *(_DWORD *)&_BYTE buf[24] = a3;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "query: queryLocation, location, %14.8lf, %14.8lf, timeout, %d",  buf,  0x1Cu);
  }

  int v57 = a3;
  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101836C20);
    }
    uint64_t v38 = *(void *)(a2 + 4);
    uint64_t v39 = *(void *)(a2 + 12);
    int v64 = 134218496;
    *(void *)int v65 = v38;
    *(_WORD *)&v65[8] = 2048;
    *(void *)&v65[10] = v39;
    *(_WORD *)&_BYTE v65[18] = 1024;
    *(_DWORD *)&v65[20] = a3;
    LODWORD(v54) = 28;
    int v40 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "query: queryLocation, location, %14.8lf, %14.8lf, timeout, %d",  COERCE_DOUBLE(&v64),  v54,  v55);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual int CLNetworkLocationRequesterALS::queryLocation(const CLDaemonLocation &, int)",  "%s\n",  v40);
    if (v40 != buf) {
      free(v40);
    }
  }

  -[ALSNearbyRequest setLatitude:](v5, "setLatitude:", (uint64_t)(*(double *)(a2 + 4) * 100000000.0));
  -[ALSNearbyRequest setLongitude:](v5, "setLongitude:", (uint64_t)(*(double *)(a2 + 12) * 100000000.0));
  -[ALSNearbyRequest setNeedCellsTowers:](v5, "setNeedCellsTowers:", 0LL);
  -[ALSNearbyRequest setNumberOfSurroundingWifis:](v5, "setNumberOfSurroundingWifis:", 0xFFFFFFFFLL);
  id v9 = +[GEOCountryConfiguration sharedConfiguration](&OBJC_CLASS___GEOCountryConfiguration, "sharedConfiguration");
  __int128 v62 = 0u;
  __int128 v63 = 0u;
  __int128 v60 = 0u;
  __int128 v61 = 0u;
  id v10 = objc_msgSend( objc_msgSend( v9,  "defaultForKey:defaultValue:",  @"CLAppleLocationServiceNearbyRequestWifiBands",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", qword_1019A0FE8)),  "componentsSeparatedByString:",  @",");
  id v11 = [v10 countByEnumeratingWithState:&v60 objects:v72 count:16];
  if (v11)
  {
    uint64_t v12 = *(void *)v61;
    do
    {
      for (uint64_t i = 0LL; i != v11; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v61 != v12) {
          objc_enumerationMutation(v10);
        }
        double v14 = *(void **)(*((void *)&v60 + 1) + 8LL * (void)i);
        if ([v14 isEqualToString:@"k2dot4GHZ"])
        {
          uint64_t v15 = 1LL;
        }

        else if ([v14 isEqualToString:@"k5GHZ"])
        {
          uint64_t v15 = 2LL;
        }

        else
        {
          uint64_t v15 = 1LL;
        }

        -[ALSNearbyRequest addWifiBands:](v5, "addWifiBands:", v15);
      }

      id v11 = [v10 countByEnumeratingWithState:&v60 objects:v72 count:16];
    }

    while (v11);
  }

  -[ALSNearbyRequest setWifiAltitudeScale:](v5, "setWifiAltitudeScale:", 2LL);
  if (*(_BYTE *)(a1 + 376))
  {
    unint64_t v16 = (void *)(a1 + 352);
    char v17 = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v16);
  }

  else
  {
    id v18 = +[GEOCountryConfiguration sharedConfiguration](&OBJC_CLASS___GEOCountryConfiguration, "sharedConfiguration");
    int v19 = (void *)(a1 + 352);
    char v17 = (NSString *)objc_msgSend( v18,  "defaultForKey:defaultValue:",  @"CLAppleLocationServer",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v19));
  }

  int v20 = v17;
  unint64_t v21 = -[CLALSRequester initWithURL:delegate:queue:]( [CLALSRequester alloc],  "initWithURL:delegate:queue:",  +[NSURL URLWithString:](NSURL, "URLWithString:", v17),  *(void *)(a1 + 312),  objc_msgSend(objc_msgSend(*(id *)(a1 + 304), "silo"), "operationQueue"));
  uint64_t v22 = *(unsigned int *)(a1 + 344);
  *(_DWORD *)(a1 + 3memset(v19, 0, 44) = v22 + 1;
  -[CLALSRequester setTag:](v21, "setTag:", v22);
  -[CLALSRequester setType:](v21, "setType:", 1LL);
  -[CLALSRequester setTimestamp:](v21, "setTimestamp:", CFAbsoluteTimeGetCurrent());
  -[CLALSRequester setTimeoutSeconds:](v21, "setTimeoutSeconds:", (double)*(int *)(a1 + 320));
  sub_1002A5370(v59);
  __int16 v56 = v20;
  sub_1002ACA84((uint64_t)v59, "Connection", "close");
  -[CLALSRequester setHttpRequestHeaders:](v21, "setHttpRequestHeaders:", sub_1002A59CC((uint64_t)v59));
  -[CLALSRequester addRequest:](v21, "addRequest:", v5);
  if (*(void *)(a1 + 328)) {
    -[CLALSRequester setLogRequestToFile:](v21, "setLogRequestToFile:");
  }
  if (*(void *)(a1 + 336)) {
    -[CLALSRequester setLogResponseToFile:](v21, "setLogResponseToFile:");
  }
  if ((v57 & 0x80000000) == 0) {
    -[CLALSRequester setTimeoutSeconds:](v21, "setTimeoutSeconds:", (double)v57);
  }
  int v23 = *(_DWORD *)(a1 + 472);
  (*(void (**)(uint64_t *))(qword_101995698 + 16))(&qword_101995698);
  ++dword_1019956C8;
  (*(void (**)(uint64_t *))(qword_101995698 + 24))(&qword_101995698);
  unsigned int v24 = -[CLALSRequester uploadPayloadSize](v21, "uploadPayloadSize");
  (*(void (**)(uint64_t *))(qword_101995698 + 16))(&qword_101995698);
  dword_1019956C0 += v24;
  (*(void (**)(uint64_t *))(qword_101995698 + 24))(&qword_101995698);
  sub_1010DDBC0(buf, "queryLocation");
  sub_100987188((uint64_t)&qword_101995698, (uint64_t *)buf, v23);
  if ((buf[23] & 0x80000000) != 0) {
    operator delete(*(void **)buf);
  }
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101836C20);
  }
  uint64_t v25 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v26 = *(void *)(a2 + 4);
    uint64_t v27 = *(void *)(a2 + 12);
    id v28 = -[CLALSRequester uploadPayloadSize](v21, "uploadPayloadSize");
    id v29 = sub_1003E9EF0(v5);
    *(_DWORD *)std::stringbuf::string_type buf = 67110658;
    *(_DWORD *)&uint8_t buf[4] = v22;
    *(_WORD *)&uint8_t buf[8] = 2048;
    *(void *)&buf[10] = v26;
    *(_WORD *)&_BYTE buf[18] = 2048;
    *(void *)&buf[20] = v27;
    __int16 v74 = 1024;
    *(_DWORD *)__int128 v75 = v57;
    *(_WORD *)&v75[4] = 2048;
    *(void *)&v75[6] = v28;
    __int16 v76 = 1024;
    int v77 = v23;
    __int16 v78 = 2114;
    id v79 = v29;
    _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEBUG,  "query: queryLocation, tag, %d, location, %14.8lf, %14.8lf, timeout, %d, payload, %lu, reachability, %d, bands, %{public}@",  buf,  0x3Cu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101836C20);
    }
    uint64_t v41 = qword_101934A78;
    uint64_t v42 = *(void *)(a2 + 4);
    uint64_t v43 = *(void *)(a2 + 12);
    id v44 = -[CLALSRequester uploadPayloadSize](v21, "uploadPayloadSize");
    id v45 = sub_1003E9EF0(v5);
    int v64 = 67110658;
    *(_DWORD *)int v65 = v22;
    *(_WORD *)&v65[4] = 2048;
    *(void *)&v65[6] = v42;
    *(_WORD *)&v65[14] = 2048;
    *(void *)&v65[16] = v43;
    __int16 v66 = 1024;
    *(_DWORD *)__int16 v67 = v57;
    *(_WORD *)&v67[4] = 2048;
    *(void *)&v67[6] = v44;
    __int16 v68 = 1024;
    int v69 = v23;
    __int16 v70 = 2114;
    id v71 = v45;
    LODWORD(v54) = 60;
    uint64_t v46 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v41,  2LL,  "query: queryLocation, tag, %d, location, %14.8lf, %14.8lf, timeout, %d, payload, %lu, reachability, %d, bands, %{public}@",  &v64,  *(void *)&v54);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual int CLNetworkLocationRequesterALS::queryLocation(const CLDaemonLocation &, int)",  "%s\n",  v46);
    if (v46 != buf) {
      free(v46);
    }
  }

  -[CLALSRequester setNwActivityDomain:](v21, "setNwActivityDomain:", 24LL);
  -[CLALSRequester setNwActivityLabel:](v21, "setNwActivityLabel:", 2LL);
  -[CLALSRequester start](v21, "start");
  [*(id *)(a1 + 312) addRequesterWithOutstandingRequest:v21];
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101836B98);
  }
  uint64_t v30 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    int v31 = v23;
    uint64_t v32 = *(void *)(a2 + 4);
    uint64_t v33 = *(void *)(a2 + 12);
    int v34 = -[NSString UTF8String](v56, "UTF8String");
    int v35 = *(unsigned __int8 *)(a1 + 376);
    sub_1004F2598();
    int v36 = sub_1001B9A1C();
    *(_DWORD *)std::stringbuf::string_type buf = 67241731;
    *(_DWORD *)&uint8_t buf[4] = v22;
    *(_WORD *)&uint8_t buf[8] = 2049;
    *(void *)&buf[10] = v32;
    *(_WORD *)&_BYTE buf[18] = 2049;
    *(void *)&buf[20] = v33;
    __int16 v74 = 2081;
    *(void *)__int128 v75 = v34;
    *(_WORD *)&v75[8] = 1026;
    *(_DWORD *)&v75[10] = v35;
    __int16 v76 = 1026;
    int v23 = v31;
    int v77 = v31;
    __int16 v78 = 1026;
    LODWORD(v79) = v36;
    _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEFAULT,  "@AlsFlow, request, tag, %{public}d, location, %{private}0.2lf, %{private}0.2lf, server, %{private}s, override, %{p ublic}d, reach, %{public}d, watch, %{public}d",  buf,  0x38u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101836B98);
    }
    uint64_t v47 = qword_101934858;
    uint64_t v48 = *(void *)(a2 + 4);
    uint64_t v49 = *(void *)(a2 + 12);
    int v50 = -[NSString UTF8String](v56, "UTF8String");
    int v51 = *(unsigned __int8 *)(a1 + 376);
    sub_1004F2598();
    int v52 = sub_1001B9A1C();
    int v64 = 67241731;
    *(_DWORD *)int v65 = v22;
    *(_WORD *)&v65[4] = 2049;
    *(void *)&v65[6] = v48;
    *(_WORD *)&v65[14] = 2049;
    *(void *)&v65[16] = v49;
    __int16 v66 = 2081;
    *(void *)__int16 v67 = v50;
    *(_WORD *)&v67[8] = 1026;
    *(_DWORD *)&v67[10] = v51;
    __int16 v68 = 1026;
    int v69 = v23;
    __int16 v70 = 1026;
    LODWORD(v71) = v52;
    LODWORD(v54) = 56;
    __int16 v53 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v47,  0LL,  "@AlsFlow, request, tag, %{public}d, location, %{private}0.2lf, %{private}0.2lf, server, %{private}s, override, %{public}d, reach, %{public}d, watch, %{public}d",  &v64,  *(void *)&v54);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual int CLNetworkLocationRequesterALS::queryLocation(const CLDaemonLocation &, int)",  "%s\n",  v53);
    if (v53 != buf) {
      free(v53);
    }
  }

  AnalyticsSendEventLazy(@"com.apple.locationd.AlsRequest", &stru_101836B50);

  sub_1002A5590(v59);
  return v22;
}

void sub_1003E9E88( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, void *__p, uint64_t a50,int a51,__int16 a52,char a53,char a54)
{
}

id sub_1003E9EF0(void *a1)
{
  id v2 = +[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array");
  if ([a1 wifiBandsCount])
  {
    unint64_t v3 = 0LL;
    do
      objc_msgSend( v2,  "addObject:",  -[NSNumber stringValue]( +[NSNumber numberWithInt:]( NSNumber,  "numberWithInt:",  *((unsigned int *)objc_msgSend(a1, "wifiBands") + v3++)),  "stringValue"));
    while (v3 < (unint64_t)[a1 wifiBandsCount]);
  }

  return objc_msgSend(v2, "componentsJoinedByString:", @", ");
}

NSDictionary *__cdecl sub_1003E9F7C(id a1)
{
  return (NSDictionary *)&off_1018D6738;
}

uint64_t sub_1003E9F88( uint64_t a1, void *a2, void *a3, uint64_t *a4, void *a5, void *a6, void *a7, int *a8, int a9)
{
  id v11 = sub_1003EAB34(a1, a2, a3, a4, a5, a6, a7, a8);
  if (a7[1] != *a7)
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101836B98);
    }
    uint64_t v12 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      unint64_t v13 = -[ALSLocationRequest wirelessAPsCount](v11, "wirelessAPsCount");
      uint64_t v14 = (uint64_t)(a7[1] - *a7) >> 3;
      *(_DWORD *)std::stringbuf::string_type buf = 134349824;
      *(void *)&uint8_t buf[4] = v13;
      *(_WORD *)&_BYTE buf[12] = 2050;
      *(void *)&buf[14] = v14;
      *(_WORD *)&buf[22] = 1026;
      *(_DWORD *)&_BYTE buf[24] = -[ALSLocationRequest numberOfSurroundingWifis](v11, "numberOfSurroundingWifis");
      *(_WORD *)&_BYTE buf[28] = 1026;
      LODWORD(v8sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 1000;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "AlsWifi, tx, %{public}lu, %{public}lu, surronding, %{public}d, max, %{public}d",  buf,  0x22u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101836B98);
      }
      uint64_t v57 = qword_101934858;
      unint64_t v58 = -[ALSLocationRequest wirelessAPsCount](v11, "wirelessAPsCount");
      __int128 v61 = a7;
      uint64_t v59 = *a7;
      uint64_t v60 = v61[1];
      int v72 = 134349824;
      *(void *)double v73 = v58;
      *(_WORD *)&std::string::value_type v73[8] = 2050;
      *(void *)&v73[10] = (v60 - v59) >> 3;
      *(_WORD *)&v73[18] = 1026;
      *(_DWORD *)&v73[20] = -[ALSLocationRequest numberOfSurroundingWifis](v11, "numberOfSurroundingWifis");
      *(_WORD *)&v73[24] = 1026;
      LODWORD(v74) = 1000;
      __int128 v62 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v57,  0LL,  "AlsWifi, tx, %{public}lu, %{public}lu, surronding, %{public}d, max, %{public}d",  &v72,  34);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual int CLNetworkLocationRequesterALS::unifiedQuery(const std::vector<CLTelephonyService_Type::Cell> &, cons t std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, con st std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vector<CLMacAddress> &, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &, int)",  "%s\n",  v62);
      if (v62 != buf) {
        free(v62);
      }
    }
  }

  if (*(_BYTE *)(a1 + 376))
  {
    uint64_t v15 = (void *)(a1 + 352);
    unint64_t v16 = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v15);
  }

  else
  {
    id v17 = +[GEOCountryConfiguration sharedConfiguration](&OBJC_CLASS___GEOCountryConfiguration, "sharedConfiguration");
    id v18 = (void *)(a1 + 352);
    unint64_t v16 = (NSString *)objc_msgSend( v17,  "defaultForKey:defaultValue:",  @"CLAppleLocationServer",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v18));
  }

  int v19 = v16;
  int v20 = -[CLALSRequester initWithURL:delegate:queue:]( [CLALSRequester alloc],  "initWithURL:delegate:queue:",  +[NSURL URLWithString:](NSURL, "URLWithString:", v16),  *(void *)(a1 + 312),  objc_msgSend(objc_msgSend(*(id *)(a1 + 304), "silo"), "operationQueue"));
  int v21 = *(_DWORD *)(a1 + 472);
  unsigned int v22 = *(_DWORD *)(a1 + 344);
  *(_DWORD *)(a1 + 3memset(v19, 0, 44) = v22 + 1;
  unsigned int v69 = v22;
  -[CLALSRequester setTag:](v20, "setTag:");
  -[CLALSRequester setType:](v20, "setType:", 0LL);
  -[CLALSRequester setTimestamp:](v20, "setTimestamp:", CFAbsoluteTimeGetCurrent());
  -[CLALSRequester setTimeoutSeconds:](v20, "setTimeoutSeconds:", (double)*(int *)(a1 + 320));
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101836B98);
  }
  int v23 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    unsigned int v24 = -[NSString UTF8String](v19, "UTF8String");
    int v25 = *(unsigned __int8 *)(a1 + 376);
    sub_1004F2598();
    int v26 = sub_1001B9A1C();
    *(_DWORD *)std::stringbuf::string_type buf = 136381699;
    *(void *)&uint8_t buf[4] = v24;
    *(_WORD *)&_BYTE buf[12] = 1026;
    *(_DWORD *)&buf[14] = v69;
    *(_WORD *)&_BYTE buf[18] = 1026;
    *(_DWORD *)&buf[20] = v25;
    *(_WORD *)&_BYTE buf[24] = 1026;
    *(_DWORD *)&buf[26] = v21;
    LOWORD(v8sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 1026;
    *(_DWORD *)((char *)&v80 + 2) = v26;
    _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEFAULT,  "@AlsFlow, server, %{private}s, tag, %{public}d, override, %{public}d, reach, %{public}d, watch, %{public}d",  buf,  0x24u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101836B98);
    }
    uint64_t v42 = qword_101934858;
    uint64_t v43 = -[NSString UTF8String](v19, "UTF8String");
    int v44 = *(unsigned __int8 *)(a1 + 376);
    sub_1004F2598();
    int v45 = sub_1001B9A1C();
    int v72 = 136381699;
    *(void *)double v73 = v43;
    *(_WORD *)&std::string::value_type v73[8] = 1026;
    *(_DWORD *)&v73[10] = v69;
    *(_WORD *)&v73[14] = 1026;
    *(_DWORD *)&v73[16] = v44;
    *(_WORD *)&v73[20] = 1026;
    *(_DWORD *)&v73[22] = v21;
    LOWORD(v74) = 1026;
    *(_DWORD *)((char *)&v74 + 2) = v45;
    LODWORD(v6_Block_object_dispose((const void *)(v30 - 184), 8) = 36;
    uint64_t v46 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v42,  0LL,  "@AlsFlow, server, %{private}s, tag, %{public}d, override, %{public}d, reach, %{public}d, watch, %{public}d",  &v72,  v68);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual int CLNetworkLocationRequesterALS::unifiedQuery(const std::vector<CLTelephonyService_Type::Cell> &, const std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const s td::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::v ector<CLMacAddress> &, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &, int)",  "%s\n",  v46);
    if (v46 != buf) {
      free(v46);
    }
  }

  sub_1002A5370(v71);
  sub_1002ACA84((uint64_t)v71, "Connection", "close");
  -[CLALSRequester setHttpRequestHeaders:](v20, "setHttpRequestHeaders:", sub_1002A59CC((uint64_t)v71));
  -[CLALSRequester addRequest:](v20, "addRequest:", v11);
  if (*(void *)(a1 + 328)) {
    -[CLALSRequester setLogRequestToFile:](v20, "setLogRequestToFile:");
  }
  if (*(void *)(a1 + 336)) {
    -[CLALSRequester setLogResponseToFile:](v20, "setLogResponseToFile:");
  }
  if ((a9 & 0x80000000) == 0) {
    -[CLALSRequester setTimeoutSeconds:](v20, "setTimeoutSeconds:", (double)a9);
  }
  -[CLALSRequester setNwActivityDomain:](v20, "setNwActivityDomain:", 24LL);
  -[CLALSRequester setNwActivityLabel:](v20, "setNwActivityLabel:", 1LL);
  -[CLALSRequester start](v20, "start");
  [*(id *)(a1 + 312) addRequesterWithOutstandingRequest:v20];
  (*(void (**)(uint64_t *))(qword_101995698 + 16))(&qword_101995698);
  ++dword_1019956C8;
  (*(void (**)(uint64_t *))(qword_101995698 + 24))(&qword_101995698);
  unsigned int v27 = -[CLALSRequester uploadPayloadSize](v20, "uploadPayloadSize");
  (*(void (**)(uint64_t *))(qword_101995698 + 16))(&qword_101995698);
  dword_1019956C0 += v27;
  (*(void (**)(uint64_t *))(qword_101995698 + 24))(&qword_101995698);
  sub_1010DDBC0(buf, "unifiedQuery");
  sub_100987188((uint64_t)&qword_101995698, (uint64_t *)buf, v21);
  if ((buf[23] & 0x80000000) != 0) {
    operator delete(*(void **)buf);
  }
  if (-[ALSLocationRequest wirelessAPsCount](v11, "wirelessAPsCount"))
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101836B98);
    }
    id v28 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      unint64_t v29 = -[ALSLocationRequest wirelessAPsCount](v11, "wirelessAPsCount");
      signed int v30 = -[ALSLocationRequest numberOfSurroundingWifis](v11, "numberOfSurroundingWifis");
      id v31 = sub_1003ED2D8(v11);
      *(_DWORD *)std::stringbuf::string_type buf = 67240962;
      *(_DWORD *)&uint8_t buf[4] = v69;
      *(_WORD *)&uint8_t buf[8] = 2050;
      *(void *)&buf[10] = v29;
      *(_WORD *)&_BYTE buf[18] = 2050;
      *(void *)&buf[20] = v30;
      *(_WORD *)&_BYTE buf[28] = 2114;
      unint64_t v80 = (unint64_t)v31;
      _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEFAULT,  "@AlsFlow, request, tag, %{public}d, wifi, %{public}lu, surrounding, %{public}lu, bands, %{public}@",  buf,  0x26u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101836B98);
      }
      uint64_t v63 = qword_101934858;
      unint64_t v64 = -[ALSLocationRequest wirelessAPsCount](v11, "wirelessAPsCount");
      signed int v65 = -[ALSLocationRequest numberOfSurroundingWifis](v11, "numberOfSurroundingWifis");
      id v66 = sub_1003ED2D8(v11);
      int v72 = 67240962;
      *(_DWORD *)double v73 = v69;
      *(_WORD *)&v73[4] = 2050;
      *(void *)&v73[6] = v64;
      *(_WORD *)&v73[14] = 2050;
      *(void *)&v73[16] = v65;
      *(_WORD *)&v73[24] = 2114;
      unint64_t v74 = (unint64_t)v66;
      LODWORD(v6_Block_object_dispose((const void *)(v30 - 184), 8) = 38;
      __int16 v67 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v63,  0LL,  "@AlsFlow, request, tag, %{public}d, wifi, %{public}lu, surrounding, %{public}lu, bands, %{public}@",  &v72,  v68);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual int CLNetworkLocationRequesterALS::unifiedQuery(const std::vector<CLTelephonyService_Type::Cell> &, cons t std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, con st std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vector<CLMacAddress> &, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &, int)",  "%s\n",  v67);
      if (v67 != buf) {
        free(v67);
      }
    }
  }

  if (-[ALSLocationRequest cellTowersCount](v11, "cellTowersCount")
    || -[ALSLocationRequest lteCellTowersCount](v11, "lteCellTowersCount")
    || -[ALSLocationRequest cdmaCellTowersCount](v11, "cdmaCellTowersCount")
    || -[ALSLocationRequest nr5GCellTowersCount](v11, "nr5GCellTowersCount"))
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101836B98);
    }
    uint64_t v32 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      unint64_t v33 = -[ALSLocationRequest cellTowersCount](v11, "cellTowersCount");
      unint64_t v34 = -[ALSLocationRequest lteCellTowersCount](v11, "lteCellTowersCount");
      unint64_t v35 = -[ALSLocationRequest cdmaCellTowersCount](v11, "cdmaCellTowersCount");
      unint64_t v36 = -[ALSLocationRequest nr5GCellTowersCount](v11, "nr5GCellTowersCount");
      unsigned int v37 = -[ALSLocationRequest numberOfSurroundingCells](v11, "numberOfSurroundingCells");
      unsigned int v38 = -[ALSLocationRequest numberOfSurroundingCdmaCells](v11, "numberOfSurroundingCdmaCells");
      unsigned int v39 = -[ALSLocationRequest numberOfSurroundingLteCells](v11, "numberOfSurroundingLteCells");
      unsigned int v40 = -[ALSLocationRequest numberOfSurroundingNr5GCells](v11, "numberOfSurroundingNr5GCells");
      *(_DWORD *)std::stringbuf::string_type buf = 67241472;
      *(_DWORD *)&uint8_t buf[4] = v69;
      *(_WORD *)&uint8_t buf[8] = 2050;
      *(void *)&buf[10] = v33;
      *(_WORD *)&_BYTE buf[18] = 2050;
      *(void *)&buf[20] = v34;
      *(_WORD *)&_BYTE buf[28] = 2050;
      unint64_t v80 = v35;
      __int16 v81 = 2050;
      unint64_t v82 = v36;
      __int16 v83 = 2050;
      uint64_t v84 = (int)(v38 + v37 + v39 + v40);
      _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEFAULT,  "@AlsFlow, request, tag, %{public}d, cell, gsm, %{public}lu, lte, %{public}lu, cdma, %{public}lu, nr, %{public}lu , surrounding, %{public}lu",  buf,  0x3Au);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101836B98);
      }
      uint64_t v47 = qword_101934858;
      unint64_t v48 = -[ALSLocationRequest cellTowersCount](v11, "cellTowersCount");
      unint64_t v49 = -[ALSLocationRequest lteCellTowersCount](v11, "lteCellTowersCount");
      unint64_t v50 = -[ALSLocationRequest cdmaCellTowersCount](v11, "cdmaCellTowersCount");
      unint64_t v51 = -[ALSLocationRequest nr5GCellTowersCount](v11, "nr5GCellTowersCount");
      unsigned int v52 = -[ALSLocationRequest numberOfSurroundingCells](v11, "numberOfSurroundingCells");
      unsigned int v53 = -[ALSLocationRequest numberOfSurroundingCdmaCells](v11, "numberOfSurroundingCdmaCells");
      unsigned int v54 = -[ALSLocationRequest numberOfSurroundingLteCells](v11, "numberOfSurroundingLteCells");
      unsigned int v55 = -[ALSLocationRequest numberOfSurroundingNr5GCells](v11, "numberOfSurroundingNr5GCells");
      int v72 = 67241472;
      *(_DWORD *)double v73 = v69;
      *(_WORD *)&v73[4] = 2050;
      *(void *)&v73[6] = v48;
      *(_WORD *)&v73[14] = 2050;
      *(void *)&v73[16] = v49;
      *(_WORD *)&v73[24] = 2050;
      unint64_t v74 = v50;
      __int16 v75 = 2050;
      unint64_t v76 = v51;
      __int16 v77 = 2050;
      uint64_t v78 = (int)(v53 + v52 + v54 + v55);
      LODWORD(v6_Block_object_dispose((const void *)(v30 - 184), 8) = 58;
      __int16 v56 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v47,  0LL,  "@AlsFlow, request, tag, %{public}d, cell, gsm, %{public}lu, lte, %{public}lu, cdma, %{public}lu, n r, %{public}lu, surrounding, %{public}lu",  &v72,  v68);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual int CLNetworkLocationRequesterALS::unifiedQuery(const std::vector<CLTelephonyService_Type::Cell> &, cons t std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, con st std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vector<CLMacAddress> &, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &, int)",  "%s\n",  v56);
      if (v56 != buf) {
        free(v56);
      }
    }
  }

  v70[0] = _NSConcreteStackBlock;
  v70[1] = 3221225472LL;
  v70[2] = sub_1003ED364;
  v70[3] = &unk_101820740;
  v70[4] = v11;
  AnalyticsSendEventLazy(@"com.apple.locationd.AlsRequest", v70);

  sub_1002A5590(v71);
  return v69;
}

void sub_1003EAAD0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, void *__p, uint64_t a28, int a29, __int16 a30, char a31, char a32)
{
}

ALSLocationRequest *sub_1003EAB34( uint64_t a1, void *a2, void *a3, uint64_t *a4, void *a5, void *a6, void *a7, int *a8)
{
  float v155 = sub_100FB8CA8();
  float v150 = a4;
  float v153 = a3;
  float v154 = a2;
  float v151 = a6;
  float v152 = a5;
  if (0x84BDA12F684BDA13LL * ((a4[1] - *a4) >> 4)
     + ((uint64_t)(a2[1] - *a2) >> 5)
     + ((uint64_t)(a3[1] - *a3) >> 5)
     + 0x2E8BA2E8BA2E8BA3LL * ((uint64_t)(a5[1] - *a5) >> 3) != 0x5555555555555555LL * ((uint64_t)(a6[1] - *a6) >> 5))
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101836B98);
    }
    unint64_t v13 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      unint64_t v14 = 0x84BDA12F684BDA13LL * ((a4[1] - *a4) >> 4);
      uint64_t v15 = (uint64_t)(a2[1] - *a2) >> 5;
      uint64_t v16 = (uint64_t)(a3[1] - *a3) >> 5;
      uint64_t v17 = 0x2E8BA2E8BA2E8BA3LL * ((uint64_t)(v152[1] - *v152) >> 3);
      unint64_t v18 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a6[1] - *a6) >> 5);
      LODWORD(buf.__r_.__value_.__l.__data_) = 134350336;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v14;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2050;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v15;
      HIWORD(buf.__r_.__value_.__r.__words[2]) = 2050;
      uint64_t v167 = v16;
      __int16 v168 = 2050;
      uint64_t v169 = v17;
      __int16 v170 = 2050;
      unint64_t v171 = v18;
      __int16 v172 = 1026;
      int v173 = 100;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "AlsCell, query, cdma, %{public}lu, gsm, %{public}lu, scdma, %{public}lu, lte, %{public}lu, nr, %{public}lu, max, %{public}d",  (uint8_t *)&buf,  0x3Au);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101836B98);
      }
      unint64_t v140 = 0x84BDA12F684BDA13LL * ((a4[1] - *a4) >> 4);
      uint64_t v141 = (uint64_t)(a2[1] - *a2) >> 5;
      uint64_t v142 = (uint64_t)(a3[1] - *a3) >> 5;
      uint64_t v143 = 0x2E8BA2E8BA2E8BA3LL * ((uint64_t)(v152[1] - *v152) >> 3);
      unint64_t v144 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a6[1] - *a6) >> 5);
      LODWORD(v158.__r_.__value_.__l.__data_) = 134350336;
      *(std::string::size_type *)((char *)v158.__r_.__value_.__r.__words + 4) = v140;
      WORD2(v158.__r_.__value_.__r.__words[1]) = 2050;
      *(std::string::size_type *)((char *)&v158.__r_.__value_.__r.__words[1] + 6) = v141;
      HIWORD(v158.__r_.__value_.__r.__words[2]) = 2050;
      uint64_t v159 = v142;
      __int16 v160 = 2050;
      uint64_t v161 = v143;
      __int16 v162 = 2050;
      unint64_t v163 = v144;
      __int16 v164 = 1026;
      int v165 = 100;
      float v145 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "AlsCell, query, cdma, %{public}lu, gsm, %{public}lu, scdma, %{public}lu, l te, %{public}lu, nr, %{public}lu, max, %{public}d",  &v158,  58);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "ALSLocationRequest *CLNetworkLocationRequesterALS::createUnifiedQueryRequest(const std::vector<CLTelephonyServic e_Type::Cell> &, const std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_T ype::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Ty pe::NrCell> &, const std::vector<CLMacAddress> &, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)",  "%s\n",  (const char *)v145);
      if (v145 != &buf) {
        free(v145);
      }
    }
  }

  if (a4[1] != *a4)
  {
    uint64_t v19 = 0LL;
    unsigned int v20 = 0;
    do
    {
      if (v20 > 0x63)
      {
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101836B98);
        }
        unsigned int v38 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
        {
          sub_1003ED5A4((unsigned int *)(*v150 + 432 * v19), &buf);
          p_std::stringbuf::string_type buf = &buf;
          if ((buf.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
          }
          LODWORD(v158.__r_.__value_.__l.__data_) = 67240451;
          HIDWORD(v158.__r_.__value_.__r.__words[0]) = v20;
          LOWORD(v158.__r_.__value_.__r.__words[1]) = 2081;
          *(std::string::size_type *)((char *)&v158.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)p_buf;
          _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_DEFAULT,  "AlsCell, cdma, dropping, %{public}u, key, %{private}s, #CloneMe",  (uint8_t *)&v158,  0x12u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(&buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101836B98);
          }
          uint64_t v40 = qword_101934858;
          sub_1003ED5A4((unsigned int *)(*v150 + 432 * v19), &v158);
          uint64_t v41 = &v158;
          if ((v158.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            uint64_t v41 = (std::stringbuf::string_type *)v158.__r_.__value_.__r.__words[0];
          }
          *(_DWORD *)v157 = 67240451;
          *(_DWORD *)&v157[4] = v20;
          *(_WORD *)&v157[8] = 2081;
          *(void *)&v157[10] = v41;
          LODWORD(v146) = 18;
          uint64_t v42 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v40,  0LL,  "AlsCell, cdma, dropping, %{public}u, key, %{private}s, #CloneMe",  v157,  v146);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "ALSLocationRequest *CLNetworkLocationRequesterALS::createUnifiedQueryRequest(const std::vector<CLTelephonySe rvice_Type::Cell> &, const std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyS ervice_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelepho nyService_Type::NrCell> &, const std::vector<CLMacAddress> &, const CLNetworkLocationRequest_Type::CLNetwork LocationRequestConfig &)",  "%s\n",  (const char *)v42);
          if (v42 != &buf) {
            free(v42);
          }
        }
      }

      else
      {
        int v21 = objc_alloc_init(&OBJC_CLASS___ALSCdmaCellTower);
        uint64_t v22 = *v150;
        int v23 = (unsigned int *)(*v150 + 432 * v19);
        -[ALSCdmaCellTower setSid:](v21, "setSid:", v23[8]);
        -[ALSCdmaCellTower setNid:](v21, "setNid:", *(unsigned int *)(v22 + 432 * v19 + 36));
        -[ALSCdmaCellTower setBsid:](v21, "setBsid:", *(unsigned int *)(v22 + 432 * v19 + 44));
        -[ALSCdmaCellTower setZoneid:](v21, "setZoneid:", *(unsigned int *)(v22 + 432 * v19 + 40));
        -[ALSCdmaCellTower setBandclass:](v21, "setBandclass:", *(unsigned int *)(v22 + 432 * v19 + 48));
        -[ALSCdmaCellTower setChannel:](v21, "setChannel:", *(unsigned int *)(v22 + 432 * v19 + 52));
        -[ALSCdmaCellTower setPnoffset:](v21, "setPnoffset:", *(unsigned int *)(v22 + 432 * v19 + 56));
        uint64_t v24 = v22 + 432 * v19;
        unsigned int v27 = *(unsigned int **)(v24 + 8);
        int v26 = (void *)(v24 + 8);
        int v25 = v27;
        id v28 = v26 + 1;
        if ((unsigned int *)v26[1] == v27)
        {
          if (qword_101934A30 != -1) {
            dispatch_once(&qword_101934A30, &stru_101836C00);
          }
          unint64_t v29 = (os_log_s *)qword_101934A38;
          if (os_log_type_enabled((os_log_t)qword_101934A38, OS_LOG_TYPE_DEFAULT))
          {
            unsigned int v30 = *v23;
            LODWORD(buf.__r_.__value_.__l.__data_) = 67109120;
            HIDWORD(buf.__r_.__value_.__r.__words[0]) = v30;
            _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEFAULT,  "#Warning query: don't have derivedMcc - using %d",  (uint8_t *)&buf,  8u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(&buf, 0x65CuLL);
            if (qword_101934A30 != -1) {
              dispatch_once(&qword_101934A30, &stru_101836C00);
            }
            unsigned int v50 = *v23;
            LODWORD(v158.__r_.__value_.__l.__data_) = 67109120;
            HIDWORD(v158.__r_.__value_.__r.__words[0]) = v50;
            unint64_t v51 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934A38,  0LL,  "#Warning query: don't have derivedMcc - using %d",  &v158);
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "ALSLocationRequest *CLNetworkLocationRequesterALS::createUnifiedQueryRequest(const std::vector<CLTelephony Service_Type::Cell> &, const std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTeleph onyService_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLT elephonyService_Type::NrCell> &, const std::vector<CLMacAddress> &, const CLNetworkLocationRequest_Type::C LNetworkLocationRequestConfig &)",  "%s\n",  (const char *)v51);
            if (v51 != &buf) {
              free(v51);
            }
          }

          int v25 = v23;
        }

        -[ALSCdmaCellTower setMcc:](v21, "setMcc:", *v25);
        if (*v26 == *v28)
        {
          if (qword_101934A30 != -1) {
            dispatch_once(&qword_101934A30, &stru_101836C00);
          }
          uint64_t v43 = (os_log_s *)qword_101934A38;
          if (os_log_type_enabled((os_log_t)qword_101934A38, OS_LOG_TYPE_DEBUG))
          {
            unsigned int v44 = -[ALSCdmaCellTower mcc](v21, "mcc");
            LODWORD(buf.__r_.__value_.__l.__data_) = 67109120;
            HIDWORD(buf.__r_.__value_.__r.__words[0]) = v44;
            _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_DEBUG,  "query: Adding single derivedMcc %d",  (uint8_t *)&buf,  8u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(&buf, 0x65CuLL);
            if (qword_101934A30 != -1) {
              dispatch_once(&qword_101934A30, &stru_101836C00);
            }
            uint64_t v52 = qword_101934A38;
            unsigned int v53 = -[ALSCdmaCellTower mcc](v21, "mcc");
            LODWORD(v158.__r_.__value_.__l.__data_) = 67109120;
            HIDWORD(v158.__r_.__value_.__r.__words[0]) = v53;
            unsigned int v54 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v52,  2LL,  "query: Adding single derivedMcc %d",  &v158);
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "ALSLocationRequest *CLNetworkLocationRequesterALS::createUnifiedQueryRequest(const std::vector<CLTelephony Service_Type::Cell> &, const std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTeleph onyService_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLT elephonyService_Type::NrCell> &, const std::vector<CLMacAddress> &, const CLNetworkLocationRequest_Type::C LNetworkLocationRequestConfig &)",  "%s\n",  (const char *)v54);
            if (v54 != &buf) {
              free(v54);
            }
          }

          -[ALSLocationRequest addCdmaCellTower:](v155, "addCdmaCellTower:", v21);
        }

        else
        {
          unint64_t v31 = 0LL;
          do
          {
            uint64_t v32 = objc_alloc_init(&OBJC_CLASS___ALSCdmaCellTower);
            -[ALSCdmaCellTower setSid:](v32, "setSid:", -[ALSCdmaCellTower sid](v21, "sid"));
            -[ALSCdmaCellTower setNid:](v32, "setNid:", -[ALSCdmaCellTower nid](v21, "nid"));
            -[ALSCdmaCellTower setBsid:](v32, "setBsid:", -[ALSCdmaCellTower bsid](v21, "bsid"));
            -[ALSCdmaCellTower setZoneid:](v32, "setZoneid:", -[ALSCdmaCellTower zoneid](v21, "zoneid"));
            -[ALSCdmaCellTower setBandclass:](v32, "setBandclass:", -[ALSCdmaCellTower bandclass](v21, "bandclass"));
            -[ALSCdmaCellTower setChannel:](v32, "setChannel:", -[ALSCdmaCellTower channel](v21, "channel"));
            -[ALSCdmaCellTower setPnoffset:](v32, "setPnoffset:", -[ALSCdmaCellTower pnoffset](v21, "pnoffset"));
            -[ALSCdmaCellTower setMcc:](v32, "setMcc:", *(unsigned int *)(*v26 + 4 * v31));
            if (qword_101934A30 != -1) {
              dispatch_once(&qword_101934A30, &stru_101836C00);
            }
            unint64_t v33 = (os_log_s *)qword_101934A38;
            if (os_log_type_enabled((os_log_t)qword_101934A38, OS_LOG_TYPE_DEBUG))
            {
              unsigned int v34 = -[ALSCdmaCellTower mcc](v32, "mcc");
              LODWORD(buf.__r_.__value_.__l.__data_) = 67109120;
              HIDWORD(buf.__r_.__value_.__r.__words[0]) = v34;
              _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEBUG,  "query: Adding multi derivedMcc %d",  (uint8_t *)&buf,  8u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(&buf, 0x65CuLL);
              if (qword_101934A30 != -1) {
                dispatch_once(&qword_101934A30, &stru_101836C00);
              }
              uint64_t v35 = qword_101934A38;
              unsigned int v36 = -[ALSCdmaCellTower mcc](v32, "mcc");
              LODWORD(v158.__r_.__value_.__l.__data_) = 67109120;
              HIDWORD(v158.__r_.__value_.__r.__words[0]) = v36;
              unsigned int v37 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v35,  2LL,  "query: Adding multi derivedMcc %d",  &v158);
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "ALSLocationRequest *CLNetworkLocationRequesterALS::createUnifiedQueryRequest(const std::vector<CLTelepho nyService_Type::Cell> &, const std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTe lephonyService_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vect or<CLTelephonyService_Type::NrCell> &, const std::vector<CLMacAddress> &, const CLNetworkLocationRequest _Type::CLNetworkLocationRequestConfig &)",  "%s\n",  (const char *)v37);
              if (v37 != &buf) {
                free(v37);
              }
            }

            -[ALSLocationRequest addCdmaCellTower:](v155, "addCdmaCellTower:", v32);

            ++v31;
          }

          while (v31 < (uint64_t)(*v28 - *v26) >> 2);
        }

        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101836B98);
        }
        int v45 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
        {
          sub_1003ED5A4((unsigned int *)(*v150 + 432 * v19), &buf);
          uint64_t v46 = &buf;
          if ((buf.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            uint64_t v46 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
          }
          LODWORD(v158.__r_.__value_.__l.__data_) = 67240451;
          HIDWORD(v158.__r_.__value_.__r.__words[0]) = v20;
          LOWORD(v158.__r_.__value_.__r.__words[1]) = 2081;
          *(std::string::size_type *)((char *)&v158.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)v46;
          _os_log_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_DEBUG,  "AlsCell, cdma, query, %{public}d, key, %{private}s",  (uint8_t *)&v158,  0x12u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(&buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101836B98);
          }
          uint64_t v47 = qword_101934858;
          sub_1003ED5A4((unsigned int *)(*v150 + 432 * v19), &v158);
          unint64_t v48 = &v158;
          if ((v158.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            unint64_t v48 = (std::stringbuf::string_type *)v158.__r_.__value_.__r.__words[0];
          }
          *(_DWORD *)v157 = 67240451;
          *(_DWORD *)&v157[4] = v20;
          *(_WORD *)&v157[8] = 2081;
          *(void *)&v157[10] = v48;
          LODWORD(v146) = 18;
          unint64_t v49 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v47,  2LL,  "AlsCell, cdma, query, %{public}d, key, %{private}s",  v157,  v146);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "ALSLocationRequest *CLNetworkLocationRequesterALS::createUnifiedQueryRequest(const std::vector<CLTelephonySe rvice_Type::Cell> &, const std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyS ervice_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelepho nyService_Type::NrCell> &, const std::vector<CLMacAddress> &, const CLNetworkLocationRequest_Type::CLNetwork LocationRequestConfig &)",  "%s\n",  (const char *)v49);
          if (v49 != &buf) {
            free(v49);
          }
        }
      }

      uint64_t v19 = ++v20;
    }

    while (0x84BDA12F684BDA13LL * ((v150[1] - *v150) >> 4) > v20);
  }

  if (v154[1] != *v154)
  {
    unint64_t v55 = 0LL;
    unsigned int v56 = 1;
    do
    {
      if (v56 - 1 > 0x63)
      {
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101836B98);
        }
        uint64_t v60 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
        {
          sub_1003ED958((_DWORD *)(*v154 + 32 * v55), &buf);
          __int128 v61 = (buf.__r_.__value_.__s.__size_ & 0x80u) == 0
              ? &buf
              : (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
          LODWORD(v158.__r_.__value_.__l.__data_) = 67240451;
          HIDWORD(v158.__r_.__value_.__r.__words[0]) = v56 - 1;
          LOWORD(v158.__r_.__value_.__r.__words[1]) = 2081;
          *(std::string::size_type *)((char *)&v158.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)v61;
          _os_log_impl( (void *)&_mh_execute_header,  v60,  OS_LOG_TYPE_DEFAULT,  "AlsCell, gsm, dropping, %{public}u, key, %{private}s, #CloneMe",  (uint8_t *)&v158,  0x12u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(&buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101836B98);
          }
          uint64_t v62 = qword_101934858;
          sub_1003ED958((_DWORD *)(*v154 + 32 * v55), &v158);
          uint64_t v63 = &v158;
          if ((v158.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            uint64_t v63 = (std::stringbuf::string_type *)v158.__r_.__value_.__r.__words[0];
          }
          *(_DWORD *)v157 = 67240451;
          *(_DWORD *)&v157[4] = v56 - 1;
          *(_WORD *)&v157[8] = 2081;
          *(void *)&v157[10] = v63;
          LODWORD(v146) = 18;
          unint64_t v64 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v62,  0LL,  "AlsCell, gsm, dropping, %{public}u, key, %{private}s, #CloneMe",  v157,  v146);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "ALSLocationRequest *CLNetworkLocationRequesterALS::createUnifiedQueryRequest(const std::vector<CLTelephonySe rvice_Type::Cell> &, const std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyS ervice_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelepho nyService_Type::NrCell> &, const std::vector<CLMacAddress> &, const CLNetworkLocationRequest_Type::CLNetwork LocationRequestConfig &)",  "%s\n",  (const char *)v64);
          if (v64 != &buf) {
            free(v64);
          }
        }
      }

      else
      {
        uint64_t v57 = objc_alloc_init(&OBJC_CLASS___ALSCellTower);
        -[ALSCellTower setMcc:](v57, "setMcc:", *(unsigned int *)(*v154 + 32 * v55));
        -[ALSCellTower setMnc:](v57, "setMnc:", *(unsigned int *)(*v154 + 32 * v55 + 4));
        -[ALSCellTower setLacID:](v57, "setLacID:", *(unsigned int *)(*v154 + 32 * v55 + 8));
        -[ALSCellTower setCellID:](v57, "setCellID:", *(unsigned int *)(*v154 + 32 * v55 + 12));
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101836B98);
        }
        unint64_t v58 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
        {
          sub_1003ED958((_DWORD *)(*v154 + 32 * v55), &buf);
          uint64_t v59 = (buf.__r_.__value_.__s.__size_ & 0x80u) == 0
              ? &buf
              : (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
          LODWORD(v158.__r_.__value_.__l.__data_) = 67240451;
          HIDWORD(v158.__r_.__value_.__r.__words[0]) = v56 - 1;
          LOWORD(v158.__r_.__value_.__r.__words[1]) = 2081;
          *(std::string::size_type *)((char *)&v158.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)v59;
          _os_log_impl( (void *)&_mh_execute_header,  v58,  OS_LOG_TYPE_DEBUG,  "AlsCell, gsm, query, %{public}d, key, %{private}s",  (uint8_t *)&v158,  0x12u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(&buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101836B98);
          }
          uint64_t v65 = qword_101934858;
          sub_1003ED958((_DWORD *)(*v154 + 32 * v55), &v158);
          id v66 = &v158;
          if ((v158.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            id v66 = (std::stringbuf::string_type *)v158.__r_.__value_.__r.__words[0];
          }
          *(_DWORD *)v157 = 67240451;
          *(_DWORD *)&v157[4] = v56 - 1;
          *(_WORD *)&v157[8] = 2081;
          *(void *)&v157[10] = v66;
          LODWORD(v146) = 18;
          __int16 v67 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v65,  2LL,  "AlsCell, gsm, query, %{public}d, key, %{private}s",  v157,  v146);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "ALSLocationRequest *CLNetworkLocationRequesterALS::createUnifiedQueryRequest(const std::vector<CLTelephonySe rvice_Type::Cell> &, const std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyS ervice_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelepho nyService_Type::NrCell> &, const std::vector<CLMacAddress> &, const CLNetworkLocationRequest_Type::CLNetwork LocationRequestConfig &)",  "%s\n",  (const char *)v67);
          if (v67 != &buf) {
            free(v67);
          }
        }

        -[ALSLocationRequest addCellTower:](v155, "addCellTower:", v57);
      }

      unint64_t v55 = v56++;
    }

    while (v55 < (uint64_t)(v154[1] - *v154) >> 5);
  }

  if (v153[1] != *v153)
  {
    unint64_t v68 = 0LL;
    unsigned int v69 = 1;
    do
    {
      if (v69 - 1 > 0x63)
      {
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101836B98);
        }
        double v73 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
        {
          sub_1003ED958((_DWORD *)(*v153 + 32 * v68), &buf);
          unint64_t v74 = (buf.__r_.__value_.__s.__size_ & 0x80u) == 0
              ? &buf
              : (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
          LODWORD(v158.__r_.__value_.__l.__data_) = 67240451;
          HIDWORD(v158.__r_.__value_.__r.__words[0]) = v69 - 1;
          LOWORD(v158.__r_.__value_.__r.__words[1]) = 2081;
          *(std::string::size_type *)((char *)&v158.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)v74;
          _os_log_impl( (void *)&_mh_execute_header,  v73,  OS_LOG_TYPE_DEFAULT,  "AlsCell. scdma, dropping, %{public}u, key, %{private}s, #CloneMe",  (uint8_t *)&v158,  0x12u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(&buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101836B98);
          }
          uint64_t v75 = qword_101934858;
          sub_1003ED958((_DWORD *)(*v153 + 32 * v68), &v158);
          unint64_t v76 = &v158;
          if ((v158.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            unint64_t v76 = (std::stringbuf::string_type *)v158.__r_.__value_.__r.__words[0];
          }
          *(_DWORD *)v157 = 67240451;
          *(_DWORD *)&v157[4] = v69 - 1;
          *(_WORD *)&v157[8] = 2081;
          *(void *)&v157[10] = v76;
          LODWORD(v146) = 18;
          __int16 v77 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v75,  0LL,  "AlsCell. scdma, dropping, %{public}u, key, %{private}s, #CloneMe",  v157,  v146);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "ALSLocationRequest *CLNetworkLocationRequesterALS::createUnifiedQueryRequest(const std::vector<CLTelephonySe rvice_Type::Cell> &, const std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyS ervice_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelepho nyService_Type::NrCell> &, const std::vector<CLMacAddress> &, const CLNetworkLocationRequest_Type::CLNetwork LocationRequestConfig &)",  "%s\n",  (const char *)v77);
          if (v77 != &buf) {
            free(v77);
          }
        }
      }

      else
      {
        __int16 v70 = objc_alloc_init(&OBJC_CLASS___ALSScdmaCellTower);
        -[ALSScdmaCellTower setMcc:](v70, "setMcc:", *(unsigned int *)(*v153 + 32 * v68));
        -[ALSScdmaCellTower setMnc:](v70, "setMnc:", *(unsigned int *)(*v153 + 32 * v68 + 4));
        -[ALSScdmaCellTower setLacID:](v70, "setLacID:", *(unsigned int *)(*v153 + 32 * v68 + 8));
        -[ALSScdmaCellTower setCellID:](v70, "setCellID:", *(unsigned int *)(*v153 + 32 * v68 + 12));
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101836B98);
        }
        id v71 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
        {
          sub_1003ED958((_DWORD *)(*v153 + 32 * v68), &buf);
          int v72 = (buf.__r_.__value_.__s.__size_ & 0x80u) == 0
              ? &buf
              : (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
          LODWORD(v158.__r_.__value_.__l.__data_) = 67240451;
          HIDWORD(v158.__r_.__value_.__r.__words[0]) = v69 - 1;
          LOWORD(v158.__r_.__value_.__r.__words[1]) = 2081;
          *(std::string::size_type *)((char *)&v158.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)v72;
          _os_log_impl( (void *)&_mh_execute_header,  v71,  OS_LOG_TYPE_DEBUG,  "AlsCell, scdma, query, %{public}d, key, %{private}s",  (uint8_t *)&v158,  0x12u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(&buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101836B98);
          }
          uint64_t v78 = qword_101934858;
          sub_1003ED958((_DWORD *)(*v153 + 32 * v68), &v158);
          id v79 = &v158;
          if ((v158.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            id v79 = (std::stringbuf::string_type *)v158.__r_.__value_.__r.__words[0];
          }
          *(_DWORD *)v157 = 67240451;
          *(_DWORD *)&v157[4] = v69 - 1;
          *(_WORD *)&v157[8] = 2081;
          *(void *)&v157[10] = v79;
          LODWORD(v146) = 18;
          unint64_t v80 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v78,  2LL,  "AlsCell, scdma, query, %{public}d, key, %{private}s",  v157,  v146);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "ALSLocationRequest *CLNetworkLocationRequesterALS::createUnifiedQueryRequest(const std::vector<CLTelephonySe rvice_Type::Cell> &, const std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyS ervice_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelepho nyService_Type::NrCell> &, const std::vector<CLMacAddress> &, const CLNetworkLocationRequest_Type::CLNetwork LocationRequestConfig &)",  "%s\n",  (const char *)v80);
          if (v80 != &buf) {
            free(v80);
          }
        }

        -[ALSLocationRequest addScdmaCellTower:](v155, "addScdmaCellTower:", v70);
      }

      unint64_t v68 = v69++;
    }

    while (v68 < (uint64_t)(v153[1] - *v153) >> 5);
  }

  if (v152[1] != *v152)
  {
    uint64_t v81 = 0LL;
    unsigned int v82 = 1;
    do
    {
      if (v82 - 1 > 0x63)
      {
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101836B98);
        }
        uint64_t v86 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
        {
          sub_1003D2324((unsigned int *)(*v152 + 88 * v81), &buf);
          uint64_t v87 = (buf.__r_.__value_.__s.__size_ & 0x80u) == 0
              ? &buf
              : (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
          LODWORD(v158.__r_.__value_.__l.__data_) = 67240451;
          HIDWORD(v158.__r_.__value_.__r.__words[0]) = v82 - 1;
          LOWORD(v158.__r_.__value_.__r.__words[1]) = 2081;
          *(std::string::size_type *)((char *)&v158.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)v87;
          _os_log_impl( (void *)&_mh_execute_header,  v86,  OS_LOG_TYPE_DEFAULT,  "AlsCell. lte, dropping, %{public}u, key, %{private}s, #CloneMe",  (uint8_t *)&v158,  0x12u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(&buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101836B98);
          }
          uint64_t v89 = qword_101934858;
          sub_1003D2324((unsigned int *)(*v152 + 88 * v81), &v158);
          unsigned int v90 = &v158;
          if ((v158.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            unsigned int v90 = (std::stringbuf::string_type *)v158.__r_.__value_.__r.__words[0];
          }
          *(_DWORD *)v157 = 67240451;
          *(_DWORD *)&v157[4] = v82 - 1;
          *(_WORD *)&v157[8] = 2081;
          *(void *)&v157[10] = v90;
          LODWORD(v146) = 18;
          __int16 v91 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v89,  0LL,  "AlsCell. lte, dropping, %{public}u, key, %{private}s, #CloneMe",  v157,  v146);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "ALSLocationRequest *CLNetworkLocationRequesterALS::createUnifiedQueryRequest(const std::vector<CLTelephonySe rvice_Type::Cell> &, const std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyS ervice_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelepho nyService_Type::NrCell> &, const std::vector<CLMacAddress> &, const CLNetworkLocationRequest_Type::CLNetwork LocationRequestConfig &)",  "%s\n",  (const char *)v91);
          if (v91 != &buf) {
            free(v91);
          }
        }
      }

      else
      {
        __int16 v83 = objc_alloc_init(&OBJC_CLASS___ALSLteCellTower);
        -[ALSLteCellTower setMcc:](v83, "setMcc:", *(unsigned int *)(*v152 + 88 * v81));
        -[ALSLteCellTower setMnc:](v83, "setMnc:", *(unsigned int *)(*v152 + 88 * v81 + 4));
        -[ALSLteCellTower setTacID:](v83, "setTacID:", *(unsigned int *)(*v152 + 88 * v81 + 8));
        -[ALSLteCellTower setCellID:](v83, "setCellID:", *(unsigned int *)(*v152 + 88 * v81 + 12));
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101836B98);
        }
        uint64_t v84 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
        {
          sub_1003E4C04((unsigned int *)(*v152 + 88 * v81), &buf);
          int v85 = (buf.__r_.__value_.__s.__size_ & 0x80u) == 0
              ? &buf
              : (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
          LODWORD(v158.__r_.__value_.__l.__data_) = 67240451;
          HIDWORD(v158.__r_.__value_.__r.__words[0]) = v82 - 1;
          LOWORD(v158.__r_.__value_.__r.__words[1]) = 2081;
          *(std::string::size_type *)((char *)&v158.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)v85;
          _os_log_impl( (void *)&_mh_execute_header,  v84,  OS_LOG_TYPE_DEBUG,  "AlsCell, lte, query, %{public}d, key, %{private}s",  (uint8_t *)&v158,  0x12u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(&buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101836B98);
          }
          uint64_t v92 = qword_101934858;
          sub_1003E4C04((unsigned int *)(*v152 + 88 * v81), &v158);
          uint64_t v93 = &v158;
          if ((v158.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            uint64_t v93 = (std::stringbuf::string_type *)v158.__r_.__value_.__r.__words[0];
          }
          *(_DWORD *)v157 = 67240451;
          *(_DWORD *)&v157[4] = v82 - 1;
          *(_WORD *)&v157[8] = 2081;
          *(void *)&v157[10] = v93;
          LODWORD(v146) = 18;
          unsigned int v94 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v92,  2LL,  "AlsCell, lte, query, %{public}d, key, %{private}s",  v157,  v146);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "ALSLocationRequest *CLNetworkLocationRequesterALS::createUnifiedQueryRequest(const std::vector<CLTelephonySe rvice_Type::Cell> &, const std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyS ervice_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelepho nyService_Type::NrCell> &, const std::vector<CLMacAddress> &, const CLNetworkLocationRequest_Type::CLNetwork LocationRequestConfig &)",  "%s\n",  (const char *)v94);
          if (v94 != &buf) {
            free(v94);
          }
        }

        -[ALSLocationRequest addLteCellTower:](v155, "addLteCellTower:", v83);
      }

      uint64_t v81 = v82;
      BOOL v88 = 0x2E8BA2E8BA2E8BA3LL * ((uint64_t)(v152[1] - *v152) >> 3) > (unint64_t)v82++;
    }

    while (v88);
  }

  if (v151[1] != *v151)
  {
    uint64_t v95 = 0LL;
    unsigned int v96 = 1;
    do
    {
      if (v96 - 1 > 0x63)
      {
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101836B98);
        }
        unsigned int v100 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
        {
          sub_1003D2C58((unsigned int *)(*v151 + 96 * v95), &buf);
          __int128 v101 = (buf.__r_.__value_.__s.__size_ & 0x80u) == 0
               ? &buf
               : (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
          LODWORD(v158.__r_.__value_.__l.__data_) = 67240451;
          HIDWORD(v158.__r_.__value_.__r.__words[0]) = v96 - 1;
          LOWORD(v158.__r_.__value_.__r.__words[1]) = 2081;
          *(std::string::size_type *)((char *)&v158.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)v101;
          _os_log_impl( (void *)&_mh_execute_header,  v100,  OS_LOG_TYPE_DEFAULT,  "AlsCell. nr, dropping, %{public}u, key, %{private}s, #CloneMe",  (uint8_t *)&v158,  0x12u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(&buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101836B98);
          }
          uint64_t v102 = qword_101934858;
          sub_1003D2C58((unsigned int *)(*v151 + 96 * v95), &v158);
          __int128 v103 = &v158;
          if ((v158.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            __int128 v103 = (std::stringbuf::string_type *)v158.__r_.__value_.__r.__words[0];
          }
          *(_DWORD *)v157 = 67240451;
          *(_DWORD *)&v157[4] = v96 - 1;
          *(_WORD *)&v157[8] = 2081;
          *(void *)&v157[10] = v103;
          LODWORD(v146) = 18;
          __int16 v104 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v102,  0LL,  "AlsCell. nr, dropping, %{public}u, key, %{private}s, #CloneMe",  v157,  v146);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "ALSLocationRequest *CLNetworkLocationRequesterALS::createUnifiedQueryRequest(const std::vector<CLTelephonySe rvice_Type::Cell> &, const std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyS ervice_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelepho nyService_Type::NrCell> &, const std::vector<CLMacAddress> &, const CLNetworkLocationRequest_Type::CLNetwork LocationRequestConfig &)",  "%s\n",  (const char *)v104);
          if (v104 != &buf) {
            free(v104);
          }
        }
      }

      else
      {
        unsigned int v97 = objc_alloc_init(&OBJC_CLASS___ALSNr5GCellTower);
        -[ALSNr5GCellTower setMcc:](v97, "setMcc:", *(unsigned int *)(*v151 + 96 * v95));
        -[ALSNr5GCellTower setMnc:](v97, "setMnc:", *(unsigned int *)(*v151 + 96 * v95 + 4));
        -[ALSNr5GCellTower setTacID:](v97, "setTacID:", *(unsigned int *)(*v151 + 96 * v95 + 8));
        -[ALSNr5GCellTower setCellID:](v97, "setCellID:", *(void *)(*v151 + 96 * v95 + 16));
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101836B98);
        }
        unsigned int v98 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
        {
          sub_1003E56CC((unsigned int *)(*v151 + 96 * v95), &buf);
          unsigned int v99 = (buf.__r_.__value_.__s.__size_ & 0x80u) == 0
              ? &buf
              : (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
          LODWORD(v158.__r_.__value_.__l.__data_) = 67240451;
          HIDWORD(v158.__r_.__value_.__r.__words[0]) = v96 - 1;
          LOWORD(v158.__r_.__value_.__r.__words[1]) = 2081;
          *(std::string::size_type *)((char *)&v158.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)v99;
          _os_log_impl( (void *)&_mh_execute_header,  v98,  OS_LOG_TYPE_DEBUG,  "AlsCell, nr, query, %{public}d, key, %{private}s",  (uint8_t *)&v158,  0x12u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(&buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101836B98);
          }
          uint64_t v105 = qword_101934858;
          sub_1003E56CC((unsigned int *)(*v151 + 96 * v95), &v158);
          __int128 v106 = &v158;
          if ((v158.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            __int128 v106 = (std::stringbuf::string_type *)v158.__r_.__value_.__r.__words[0];
          }
          *(_DWORD *)v157 = 67240451;
          *(_DWORD *)&v157[4] = v96 - 1;
          *(_WORD *)&v157[8] = 2081;
          *(void *)&v157[10] = v106;
          LODWORD(v146) = 18;
          unsigned __int128 v107 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v105,  2LL,  "AlsCell, nr, query, %{public}d, key, %{private}s",  v157,  v146);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "ALSLocationRequest *CLNetworkLocationRequesterALS::createUnifiedQueryRequest(const std::vector<CLTelephonySe rvice_Type::Cell> &, const std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyS ervice_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelepho nyService_Type::NrCell> &, const std::vector<CLMacAddress> &, const CLNetworkLocationRequest_Type::CLNetwork LocationRequestConfig &)",  "%s\n",  (const char *)v107);
          if (v107 != &buf) {
            free(v107);
          }
        }

        -[ALSLocationRequest addNr5GCellTower:](v155, "addNr5GCellTower:", v97);
      }

      uint64_t v95 = v96;
      BOOL v88 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v151[1] - *v151) >> 5) > v96++;
    }

    while (v88);
  }

  sub_1004F2598();
  if ((sub_1004F64FC() & 1) != 0) {
    uint64_t v108 = *(unsigned int *)(a1 + 296);
  }
  else {
    uint64_t v108 = 0LL;
  }
  -[ALSLocationRequest setNumberOfSurroundingCells:](v155, "setNumberOfSurroundingCells:", v108);
  if (a7[1] != *a7)
  {
    unsigned int v109 = 1;
    do
    {
      if (v109 - 1 > 0x3E7)
      {
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101836B98);
        }
        uint64_t v115 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
        {
          sub_1007EC360(&buf);
          __int16 v116 = (buf.__r_.__value_.__s.__size_ & 0x80u) == 0
               ? &buf
               : (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
          LODWORD(v158.__r_.__value_.__l.__data_) = 136380931;
          *(std::string::size_type *)((char *)v158.__r_.__value_.__r.__words + 4) = (std::string::size_type)v116;
          WORD2(v158.__r_.__value_.__r.__words[1]) = 1026;
          *(_DWORD *)((char *)&v158.__r_.__value_.__r.__words[1] + 6) = v109 - 1;
          _os_log_impl( (void *)&_mh_execute_header,  v115,  OS_LOG_TYPE_DEFAULT,  "AlsWifi, dropping, %{private}s, %{public}u, #CloneMe",  (uint8_t *)&v158,  0x12u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(&buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101836B98);
          }
          uint64_t v121 = qword_101934858;
          sub_1007EC360(&v158);
          __int16 v122 = &v158;
          if ((v158.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            __int16 v122 = (std::stringbuf::string_type *)v158.__r_.__value_.__r.__words[0];
          }
          *(_DWORD *)v157 = 136380931;
          *(void *)&v157[4] = v122;
          *(_WORD *)&v157[12] = 1026;
          *(_DWORD *)&v157[14] = v109 - 1;
          LODWORD(v146) = 18;
          uint64_t v123 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v121,  0LL,  "AlsWifi, dropping, %{private}s, %{public}u, #CloneMe",  v157,  v146);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "ALSLocationRequest *CLNetworkLocationRequesterALS::createUnifiedQueryRequest(const std::vector<CLTelephonySe rvice_Type::Cell> &, const std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyS ervice_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelepho nyService_Type::NrCell> &, const std::vector<CLMacAddress> &, const CLNetworkLocationRequest_Type::CLNetwork LocationRequestConfig &)",  "%s\n",  (const char *)v123);
          if (v123 != &buf) {
            free(v123);
          }
        }
      }

      else
      {
        __int16 v110 = objc_alloc_init(&OBJC_CLASS___ALSWirelessAP);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101836B98);
        }
        uint64_t v111 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
        {
          sub_1007EC360(&buf);
          __int16 v112 = (buf.__r_.__value_.__s.__size_ & 0x80u) == 0
               ? &buf
               : (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
          LODWORD(v158.__r_.__value_.__l.__data_) = 136380931;
          *(std::string::size_type *)((char *)v158.__r_.__value_.__r.__words + 4) = (std::string::size_type)v112;
          WORD2(v158.__r_.__value_.__r.__words[1]) = 1026;
          *(_DWORD *)((char *)&v158.__r_.__value_.__r.__words[1] + 6) = v109 - 1;
          _os_log_impl( (void *)&_mh_execute_header,  v111,  OS_LOG_TYPE_DEBUG,  "AlsWifi, query, %{private}s, %{public}d",  (uint8_t *)&v158,  0x12u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(&buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101836B98);
          }
          uint64_t v118 = qword_101934858;
          sub_1007EC360(&v158);
          double v119 = &v158;
          if ((v158.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            double v119 = (std::stringbuf::string_type *)v158.__r_.__value_.__r.__words[0];
          }
          *(_DWORD *)v157 = 136380931;
          *(void *)&v157[4] = v119;
          *(_WORD *)&v157[12] = 1026;
          *(_DWORD *)&v157[14] = v109 - 1;
          LODWORD(v146) = 18;
          __int16 v120 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v118,  2LL,  "AlsWifi, query, %{private}s, %{public}d",  v157,  v146);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "ALSLocationRequest *CLNetworkLocationRequesterALS::createUnifiedQueryRequest(const std::vector<CLTelephonySe rvice_Type::Cell> &, const std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyS ervice_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelepho nyService_Type::NrCell> &, const std::vector<CLMacAddress> &, const CLNetworkLocationRequest_Type::CLNetwork LocationRequestConfig &)",  "%s\n",  (const char *)v120);
          if (v120 != &buf) {
            free(v120);
          }
        }

        sub_1007EC454(&buf);
        if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          uint64_t v113 = &buf;
        }
        else {
          uint64_t v113 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
        }
        CFStringRef v114 = sub_1002A6F04((char *)v113);
        -[ALSWirelessAP setMacID:](v110, "setMacID:", v114);
        CFRelease(v114);
        -[ALSLocationRequest addWirelessAP:](v155, "addWirelessAP:", v110);
      }

      unint64_t v117 = v109++;
    }

    while (v117 < (uint64_t)(a7[1] - *a7) >> 3);
  }

  int v124 = *a8;
  memset(&buf, 0, sizeof(buf));
  if (v124 == 3)
  {
    uint64_t v127 = operator new(4uLL);
    *uint64_t v127 = 1;
    buf.__r_.__value_.__r.__words[0] = (std::string::size_type)v127;
    buf.__r_.__value_.__l.__cap_ = (std::string::size_type)(v127 + 1);
    buf.__r_.__value_.__l.__size_ = (std::string::size_type)(v127 + 1);
    BOOL v129 = sub_10000956C((uint64_t)&buf.__r_.__value_.__l.__cap_, 2uLL);
    std::string::size_type size = buf.__r_.__value_.__l.__size_;
    __int16 v130 = (void *)buf.__r_.__value_.__r.__words[0];
    v129[1] = 2;
    uint64_t v125 = v129 + 1;
    __int16 v132 = v129 + 2;
    while ((void *)size != v130)
    {
      unsigned int v133 = *(_DWORD *)(size - 4);
      size -= 4LL;
      *--uint64_t v125 = v133;
    }

    buf.__r_.__value_.__r.__words[0] = (std::string::size_type)v125;
    buf.__r_.__value_.__l.__size_ = (std::string::size_type)(v129 + 2);
    buf.__r_.__value_.__l.__cap_ = (std::string::size_type)&v129[v128];
    if (v130)
    {
      operator delete(v130);
      uint64_t v125 = (unsigned int *)buf.__r_.__value_.__r.__words[0];
    }

    buf.__r_.__value_.__l.__size_ = (std::string::size_type)v132;
    if (v125 == v132) {
      goto LABEL_301;
    }
  }

  else
  {
    if (v124 == 2)
    {
      uint64_t v125 = (unsigned int *)operator new(4uLL);
      int v126 = 2;
    }

    else
    {
      if (v124 != 1) {
        goto LABEL_302;
      }
      uint64_t v125 = (unsigned int *)operator new(4uLL);
      int v126 = 1;
    }

    *uint64_t v125 = v126;
    __int16 v132 = v125 + 1;
    buf.__r_.__value_.__r.__words[0] = (std::string::size_type)v125;
    buf.__r_.__value_.__l.__cap_ = (std::string::size_type)(v125 + 1);
    buf.__r_.__value_.__l.__size_ = (std::string::size_type)(v125 + 1);
  }

  do
    -[ALSLocationRequest addSurroundingWifiBands:](v155, "addSurroundingWifiBands:", *v125++);
  while (v125 != v132);
  __int16 v132 = (unsigned int *)buf.__r_.__value_.__r.__words[0];
  if (buf.__r_.__value_.__r.__words[0])
  {
LABEL_301:
    buf.__r_.__value_.__l.__size_ = (std::string::size_type)v132;
    operator delete(v132);
  }

LABEL_302:
  -[ALSLocationRequest setWifiAltitudeScale:](v155, "setWifiAltitudeScale:", 2LL);
  sub_1004F2598();
  if ((sub_1004F64FC() & 2) != 0) {
    uint64_t v134 = *(unsigned int *)(a1 + 300);
  }
  else {
    uint64_t v134 = 0LL;
  }
  -[ALSLocationRequest setNumberOfSurroundingWifis:](v155, "setNumberOfSurroundingWifis:", v134);
  if (-[ALSLocationRequest wirelessAPsCount](v155, "wirelessAPsCount")) {
    sub_100787278( (void *)(a1 + 392),  -[ALSLocationRequest wirelessAPsCount](v155, "wirelessAPsCount"),  -[ALSLocationRequest numberOfSurroundingWifis](v155, "numberOfSurroundingWifis"));
  }
  if (-[ALSLocationRequest cellTowersCount](v155, "cellTowersCount")
    || -[ALSLocationRequest lteCellTowersCount](v155, "lteCellTowersCount")
    || -[ALSLocationRequest cdmaCellTowersCount](v155, "cdmaCellTowersCount")
    || -[ALSLocationRequest nr5GCellTowersCount](v155, "nr5GCellTowersCount"))
  {
    *(_OWORD *)&buf.__r_.__value_.__r.__words[1] = 0uLL;
    buf.__r_.__value_.__r.__words[0] = (std::string::size_type)&buf.__r_.__value_.__l.__size_;
    unint64_t v135 = -[ALSLocationRequest cellTowersCount](v155, "cellTowersCount");
    sub_100787390(&v158);
    *(void *)v157 = &v158;
    *((void *)sub_1000C042C( (uint64_t **)&buf,  (const void **)&v158.__r_.__value_.__l.__data_,  (uint64_t)&unk_1012CF090,  (_OWORD **)v157)
    + 7) = v135;
    unint64_t v136 = -[ALSLocationRequest cdmaCellTowersCount](v155, "cdmaCellTowersCount");
    sub_1007873A0(&v158);
    *(void *)v157 = &v158;
    *((void *)sub_1000C042C( (uint64_t **)&buf,  (const void **)&v158.__r_.__value_.__l.__data_,  (uint64_t)&unk_1012CF090,  (_OWORD **)v157)
    + 7) = v136;
    unint64_t v137 = -[ALSLocationRequest lteCellTowersCount](v155, "lteCellTowersCount");
    sub_1007873B0(&v158);
    *(void *)v157 = &v158;
    *((void *)sub_1000C042C( (uint64_t **)&buf,  (const void **)&v158.__r_.__value_.__l.__data_,  (uint64_t)&unk_1012CF090,  (_OWORD **)v157)
    + 7) = v137;
    unint64_t v138 = -[ALSLocationRequest nr5GCellTowersCount](v155, "nr5GCellTowersCount");
    sub_1007873C0(&v158);
    *(void *)v157 = &v158;
    *((void *)sub_1000C042C( (uint64_t **)&buf,  (const void **)&v158.__r_.__value_.__l.__data_,  (uint64_t)&unk_1012CF090,  (_OWORD **)v157)
    + 7) = v138;
    std::stringbuf::string_type v156 = buf;
    if (buf.__r_.__value_.__l.__cap_)
    {
      *(void *)(buf.__r_.__value_.__l.__size_ + 16) = &v156.__r_.__value_.__l.__size_;
      buf.__r_.__value_.__r.__words[0] = (std::string::size_type)&buf.__r_.__value_.__l.__size_;
      *(_OWORD *)&buf.__r_.__value_.__r.__words[1] = 0uLL;
    }

    else
    {
      v156.__r_.__value_.__r.__words[0] = (std::string::size_type)&v156.__r_.__value_.__l.__size_;
    }

    sub_100786E74(a1 + 392, &v156, -[ALSLocationRequest numberOfSurroundingWifis](v155, "numberOfSurroundingWifis"));
    sub_1000229D4((uint64_t)&v156, (char *)v156.__r_.__value_.__l.__size_);
    sub_1000229D4((uint64_t)&buf, (char *)buf.__r_.__value_.__l.__size_);
  }

  return v155;
}

    if (qword_1019345D0 != -1) {
      dispatch_once(&qword_1019345D0, &stru_10184D4F8);
    }
    uint64_t v63 = (os_log_s *)qword_1019345D8;
    if (os_log_type_enabled((os_log_t)qword_1019345D8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v63,  OS_LOG_TYPE_DEBUG,  "CLFitnessTrackingAllDayAWD: Increasing NumImpactCanceledBecauseOfExistingAlert",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019345D0 != -1) {
        dispatch_once(&qword_1019345D0, &stru_10184D4F8);
      }
      LOWORD(v31sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0;
      LODWORD(v309) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345D8,  2LL,  "CLFitnessTrackingAllDayAWD: Increasing NumImpactCanceledBecauseOfExistingAlert",  &v310,  v309);
      v244 = (uint8_t *)v243;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFallNotifier::trackCancelationReason(const uint64_t, const uint32_t, const CMSPUFall_Types::FallCancelReason)",  "%s\n",  v243);
      if (v244 != buf) {
        free(v244);
      }
    }

    unint64_t v64 = sub_1008D9630();
    sub_100737EBC(v64);
    LODWORD(v51) = 1;
    if ((a4 & 0x200) == 0)
    {
LABEL_267:
      if ((a4 & 0x800) == 0)
      {
        if (!(_DWORD)v51)
        {
          if ((a4 & 0x100000) == 0) {
            goto LABEL_270;
          }
          goto LABEL_326;
        }

          *(_DWORD *)(a1 + 1memset(v19, 0, 44) = v25;
          goto LABEL_294;
        case 2u:
          *(void *)(a1 + 216) |= 1uLL;
          unint64_t v29 = *((void *)this + 1);
          unsigned int v30 = *((void *)this + 2);
          unint64_t v31 = *(void *)this;
          if (v29 <= 0xFFFFFFFFFFFFFFF5LL && v29 + 10 <= v30)
          {
            uint64_t v32 = 0;
            unint64_t v33 = 0;
            unsigned int v34 = 0LL;
            do
            {
              uint64_t v35 = v29 + 1;
              *((void *)this + 1) = v29 + 1;
              unsigned int v36 = *(_BYTE *)(v31 + v29);
              v34 |= (unint64_t)(v36 & 0x7F) << v32;
              if ((v36 & 0x80) == 0) {
                goto LABEL_306;
              }
              v32 += 7;
              unint64_t v29 = v35;
              unint64_t v14 = v33++ > 8;
            }

            while (!v14);
LABEL_228:
            unsigned int v34 = 0LL;
            goto LABEL_306;
          }

          float v151 = 0;
          float v152 = 0;
          unsigned int v34 = 0LL;
          if (v30 <= v29) {
            unsigned int v30 = *((void *)this + 1);
          }
          while (2)
          {
            if (v30 == v29)
            {
              unsigned int v34 = 0LL;
              *((_BYTE *)this + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 1;
            }

            else
            {
              float v153 = v29 + 1;
              float v154 = *(_BYTE *)(v31 + v29);
              *((void *)this + 1) = v153;
              v34 |= (unint64_t)(v154 & 0x7F) << v151;
              if (v154 < 0)
              {
                v151 += 7;
                unint64_t v29 = v153;
                unint64_t v14 = v152++ > 8;
                if (v14) {
                  goto LABEL_228;
                }
                continue;
              }

              if (*((_BYTE *)this + 24)) {
                unsigned int v34 = 0LL;
              }
            }

            break;
          }

              *(_DWORD *)(a1 + 116) = v59;
              goto LABEL_282;
            case 0xAu:
              *(void *)(a1 + 164) |= 0x400000uLL;
              uint64_t v62 = *((void *)this + 1);
              uint64_t v63 = *((void *)this + 2);
              unint64_t v64 = *(void *)this;
              if (v62 <= 0xFFFFFFFFFFFFFFF5LL && v62 + 10 <= v63)
              {
                uint64_t v65 = 0;
                id v66 = 0;
                __int16 v67 = 0LL;
                do
                {
                  unint64_t v68 = v62 + 1;
                  *((void *)this + 1) = v62 + 1;
                  unsigned int v69 = *(_BYTE *)(v64 + v62);
                  v67 |= (unint64_t)(v69 & 0x7F) << v65;
                  if ((v69 & 0x80) == 0) {
                    goto LABEL_306;
                  }
                  v65 += 7;
                  uint64_t v62 = v68;
                  unint64_t v14 = v66++ > 8;
                }

                while (!v14);
LABEL_216:
                LODWORD(v67) = 0;
                goto LABEL_306;
              }

              __int16 v172 = 0;
              int v173 = 0;
              __int16 v67 = 0LL;
              if (v63 <= v62) {
                uint64_t v63 = *((void *)this + 1);
              }
              while (2)
              {
                if (v63 == v62)
                {
                  LODWORD(v67) = 0;
                  *((_BYTE *)this + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 1;
                }

                else
                {
                  int v174 = v62 + 1;
                  double v175 = *(_BYTE *)(v64 + v62);
                  *((void *)this + 1) = v174;
                  v67 |= (unint64_t)(v175 & 0x7F) << v172;
                  if (v175 < 0)
                  {
                    v172 += 7;
                    uint64_t v62 = v174;
                    unint64_t v14 = v173++ > 8;
                    if (v14) {
                      goto LABEL_216;
                    }
                    continue;
                  }

                  if (*((_BYTE *)this + 24)) {
                    LODWORD(v67) = 0;
                  }
                }

                break;
              }

          *(_DWORD *)(a1 + 176) = v108;
          goto LABEL_351;
        case 0xCu:
          *(_WORD *)(a1 + 192) |= 0x10u;
          uint64_t v111 = *((void *)this + 1);
          if (v111 > 0xFFFFFFFFFFFFFFFBLL || v111 + 4 > *((void *)this + 2)) {
            goto LABEL_347;
          }
          *(_DWORD *)(a1 + 1sub_10000AE14(v1 - 72) = *(_DWORD *)(*(void *)this + v111);
          goto LABEL_349;
        case 0xDu:
          *(_WORD *)(a1 + 192) |= 2u;
          __int16 v112 = *((void *)this + 1);
          if (v112 > 0xFFFFFFFFFFFFFFFBLL || v112 + 4 > *((void *)this + 2)) {
            goto LABEL_347;
          }
          *(_DWORD *)(a1 + 16sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(_DWORD *)(*(void *)this + v112);
          goto LABEL_349;
        case 0xEu:
          if ((_DWORD)v25 != 2)
          {
            unint64_t v163 = *(char **)(a1 + 112);
            __int16 v162 = *(void *)(a1 + 120);
            if ((unint64_t)v163 >= v162)
            {
              v190 = (char *)*v224;
              v191 = (v163 - (_BYTE *)*v224) >> 2;
              v192 = v191 + 1;
              if ((unint64_t)(v191 + 1) >> 62) {
LABEL_364:
              }
                sub_100007008();
              v193 = v162 - (void)v190;
              if (v193 >> 1 > v192) {
                v192 = v193 >> 1;
              }
              else {
                v194 = v192;
              }
              if (v194)
              {
                v195 = (char *)sub_10000956C(v221, v194);
                v190 = *(char **)(a1 + 104);
                unint64_t v163 = *(char **)(a1 + 112);
              }

              else
              {
                v195 = 0LL;
              }

              v210 = &v195[4 * v191];
              *(_DWORD *)v210 = 0;
              uint64_t v143 = v210 + 4;
              while (v163 != v190)
              {
                v211 = *((_DWORD *)v163 - 1);
                v163 -= 4;
                *((_DWORD *)v210 - 1) = v211;
                v210 -= 4;
              }

              *(void *)(a1 + 104) = v210;
              *(void *)(a1 + 112) = v143;
              *(void *)(a1 + sub_1011C52D0(v9 - 120) = &v195[4 * v194];
              if (v190) {
                operator delete(v190);
              }
            }

            else
            {
              *(_DWORD *)unint64_t v163 = 0;
              uint64_t v143 = v163 + 4;
            }

            *(void *)(a1 + 112) = v143;
            goto LABEL_345;
          }

          if ((PB::Reader::placeMark(this, v226, v25, a4) & 1) != 0) {
            return 0LL;
          }
          uint64_t v113 = *((void *)this + 1);
          CFStringRef v114 = *((void *)this + 2);
          while (v113 < v114 && !*((_BYTE *)this + 24))
          {
            __int16 v116 = *(char **)(a1 + 112);
            uint64_t v115 = *(void *)(a1 + 120);
            if ((unint64_t)v116 >= v115)
            {
              uint64_t v118 = (char *)*v224;
              double v119 = (v116 - (_BYTE *)*v224) >> 2;
              __int16 v120 = v119 + 1;
              uint64_t v121 = v115 - (void)v118;
              if (v121 >> 1 > v120) {
                __int16 v120 = v121 >> 1;
              }
              else {
                __int16 v122 = v120;
              }
              if (v122)
              {
                uint64_t v123 = (char *)sub_10000956C(v221, v122);
                uint64_t v118 = *(char **)(a1 + 104);
                __int16 v116 = *(char **)(a1 + 112);
              }

              else
              {
                uint64_t v123 = 0LL;
              }

              int v124 = &v123[4 * v119];
              *(_DWORD *)int v124 = 0;
              unint64_t v117 = v124 + 4;
              while (v116 != v118)
              {
                uint64_t v125 = *((_DWORD *)v116 - 1);
                v116 -= 4;
                *((_DWORD *)v124 - 1) = v125;
                v124 -= 4;
              }

              *(void *)(a1 + 104) = v124;
              *(void *)(a1 + 112) = v117;
              *(void *)(a1 + sub_1011C52D0(v9 - 120) = &v123[4 * v122];
              if (v118) {
                operator delete(v118);
              }
            }

            else
            {
              *(_DWORD *)__int16 v116 = 0;
              unint64_t v117 = v116 + 4;
            }

            *(void *)(a1 + 112) = v117;
            int v126 = *((void *)this + 1);
            if (v126 > 0xFFFFFFFFFFFFFFFBLL || v126 + 4 > *((void *)this + 2)) {
              goto LABEL_208;
            }
            *(v117 - 1) = *(_DWORD *)(*(void *)this + v126);
            CFStringRef v114 = *((void *)this + 2);
            uint64_t v113 = *((void *)this + 1) + 4LL;
            *((void *)this + 1) = v113;
          }

          goto LABEL_209;
        case 0xFu:
          if ((_DWORD)v25 == 2)
          {
            if ((PB::Reader::placeMark(this, v226, v25, a4) & 1) != 0) {
              return 0LL;
            }
            uint64_t v127 = *((void *)this + 1);
            uint64_t v128 = *((void *)this + 2);
            while (v127 < v128 && !*((_BYTE *)this + 24))
            {
              __int16 v130 = *(char **)(a1 + 136);
              BOOL v129 = *(void *)(a1 + 144);
              if ((unint64_t)v130 >= v129)
              {
                __int16 v132 = (char *)*v225;
                unsigned int v133 = (v130 - (_BYTE *)*v225) >> 2;
                uint64_t v134 = v133 + 1;
                unint64_t v135 = v129 - (void)v132;
                if (v135 >> 1 > v134) {
                  uint64_t v134 = v135 >> 1;
                }
                else {
                  unint64_t v136 = v134;
                }
                if (v136)
                {
                  unint64_t v137 = (char *)sub_10000956C(v222, v136);
                  __int16 v132 = *(char **)(a1 + 128);
                  __int16 v130 = *(char **)(a1 + 136);
                }

                else
                {
                  unint64_t v137 = 0LL;
                }

                unint64_t v138 = &v137[4 * v133];
                *(_DWORD *)unint64_t v138 = 0;
                BOOL v131 = v138 + 4;
                while (v130 != v132)
                {
                  __int16 v139 = *((_DWORD *)v130 - 1);
                  v130 -= 4;
                  *((_DWORD *)v138 - 1) = v139;
                  v138 -= 4;
                }

                *(void *)(a1 + 12_Block_object_dispose((const void *)(v30 - 184), 8) = v138;
                *(void *)(a1 + 136) = v131;
                *(void *)(a1 + 1memset(v19, 0, 44) = &v137[4 * v136];
                if (v132) {
                  operator delete(v132);
                }
              }

              else
              {
                *(_DWORD *)__int16 v130 = 0;
                BOOL v131 = v130 + 4;
              }

              *(void *)(a1 + 136) = v131;
              unint64_t v140 = *((void *)this + 1);
              if (v140 > 0xFFFFFFFFFFFFFFFBLL || v140 + 4 > *((void *)this + 2))
              {
LABEL_208:
                *((_BYTE *)this + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 1;
                break;
              }

              *(v131 - 1) = *(_DWORD *)(*(void *)this + v140);
              uint64_t v128 = *((void *)this + 2);
              uint64_t v127 = *((void *)this + 1) + 4LL;
              *((void *)this + 1) = v127;
            }

void sub_1003ED240( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, char a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, void *a33, uint64_t a34, int a35, __int16 a36, char a37, char a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, void *__p, uint64_t a45, int a46, __int16 a47, char a48, char a49)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

id sub_1003ED2D8(void *a1)
{
  id v2 = +[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array");
  if ([a1 surroundingWifiBandsCount])
  {
    unint64_t v3 = 0LL;
    do
      objc_msgSend( v2,  "addObject:",  -[NSNumber stringValue]( +[NSNumber numberWithInt:]( NSNumber,  "numberWithInt:",  *((unsigned int *)objc_msgSend(a1, "surroundingWifiBands") + v3++)),  "stringValue"));
    while (v3 < (unint64_t)[a1 surroundingWifiBandsCount]);
  }

  return objc_msgSend(v2, "componentsJoinedByString:", @", ");
}

NSDictionary *sub_1003ED364(uint64_t a1)
{
  v3[0] = @"cdmaRequestCount";
  v4[0] = +[NSNumber numberWithInt:]( NSNumber,  "numberWithInt:",  [*(id *)(a1 + 32) cdmaCellTowersCount] != 0);
  v3[1] = @"cdmaTowerCount";
  v4[1] = +[NSNumber numberWithUnsignedInteger:]( NSNumber,  "numberWithUnsignedInteger:",  [*(id *)(a1 + 32) cdmaCellTowersCount]);
  v3[2] = @"cellRequestCount";
  v4[2] = +[NSNumber numberWithInt:]( NSNumber,  "numberWithInt:",  [*(id *)(a1 + 32) cellTowersCount] != 0);
  v3[3] = @"cellTowerCount";
  v4[3] = +[NSNumber numberWithUnsignedInteger:]( NSNumber,  "numberWithUnsignedInteger:",  [*(id *)(a1 + 32) cellTowersCount]);
  void v4[4] = &off_1018D33E0;
  v3[4] = @"locationCount";
  v3[5] = @"lteRequestCount";
  void v4[5] = +[NSNumber numberWithInt:]( NSNumber,  "numberWithInt:",  [*(id *)(a1 + 32) lteCellTowersCount] != 0);
  v3[6] = @"lteTowerCount";
  _DWORD v4[6] = +[NSNumber numberWithUnsignedInteger:]( NSNumber,  "numberWithUnsignedInteger:",  [*(id *)(a1 + 32) lteCellTowersCount]);
  v3[7] = @"nr5gRequestCount";
  v4[7] = +[NSNumber numberWithInt:]( NSNumber,  "numberWithInt:",  [*(id *)(a1 + 32) nr5GCellTowersCount] != 0);
  _WORD v3[8] = @"nr5gTowerCount";
  v4[8] = +[NSNumber numberWithUnsignedInteger:]( NSNumber,  "numberWithUnsignedInteger:",  [*(id *)(a1 + 32) nr5GCellTowersCount]);
  v4[9] = &off_1018D33F8;
  v3[9] = @"totalRequestCount";
  v3[10] = @"wifiAPCount";
  v4[10] = +[NSNumber numberWithUnsignedInteger:]( NSNumber,  "numberWithUnsignedInteger:",  [*(id *)(a1 + 32) wirelessAPsCount]);
  v3[11] = @"wifiRequestCount";
  v4[11] = +[NSNumber numberWithInt:]( NSNumber,  "numberWithInt:",  [*(id *)(a1 + 32) wirelessAPsCount] != 0);
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v4,  v3,  12LL);
}

uint64_t sub_1003ED59C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 4sub_10000AE14(v1 - 72) = a2;
  return result;
}

uint64_t sub_1003ED5A4@<X0>(unsigned int *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_10000CF44(&v60, (uint64_t)"Band Class ", 11LL);
  uint64_t v5 = (void *)std::ostream::operator<<(v4, a1[12]);
  uint64_t v6 = sub_10000CF44(v5, (uint64_t)", ", 2LL);
  uint64_t v7 = sub_10000CF44(v6, (uint64_t)"BSID ", 5LL);
  uint64_t v8 = (void *)std::ostream::operator<<(v7, a1[11]);
  id v9 = sub_10000CF44(v8, (uint64_t)", ", 2LL);
  id v10 = sub_10000CF44(v9, (uint64_t)"RAT ", 4LL);
  id v11 = (void *)std::ostream::operator<<(v10, a1[56]);
  uint64_t v12 = sub_10000CF44(v11, (uint64_t)", ", 2LL);
  unint64_t v13 = sub_10000CF44(v12, (uint64_t)"CellType ", 9LL);
  unint64_t v14 = (void *)std::ostream::operator<<(v13, a1[57]);
  uint64_t v15 = sub_10000CF44(v14, (uint64_t)", ", 2LL);
  uint64_t v16 = sub_10000CF44(v15, (uint64_t)"Channel ", 8LL);
  uint64_t v17 = (void *)std::ostream::operator<<(v16, a1[13]);
  unint64_t v18 = sub_10000CF44(v17, (uint64_t)", ", 2LL);
  uint64_t v19 = sub_10000CF44(v18, (uint64_t)"MCC ", 4LL);
  unsigned int v20 = (void *)std::ostream::operator<<(v19, *a1);
  int v21 = sub_10000CF44(v20, (uint64_t)", ", 2LL);
  uint64_t v22 = sub_10000CF44(v21, (uint64_t)"MNC ", 4LL);
  int v23 = (void *)std::ostream::operator<<(v22, a1[58]);
  uint64_t v24 = sub_10000CF44(v23, (uint64_t)", ", 2LL);
  int v25 = sub_10000CF44(v24, (uint64_t)"NID ", 4LL);
  int v26 = (void *)std::ostream::operator<<(v25, a1[9]);
  unsigned int v27 = sub_10000CF44(v26, (uint64_t)", ", 2LL);
  id v28 = sub_10000CF44(v27, (uint64_t)"PN offset ", 10LL);
  unint64_t v29 = (void *)std::ostream::operator<<(v28, a1[14]);
  unsigned int v30 = sub_10000CF44(v29, (uint64_t)", ", 2LL);
  unint64_t v31 = sub_10000CF44(v30, (uint64_t)"SID ", 4LL);
  uint64_t v32 = (void *)std::ostream::operator<<(v31, a1[8]);
  unint64_t v33 = sub_10000CF44(v32, (uint64_t)", ", 2LL);
  unsigned int v34 = sub_10000CF44(v33, (uint64_t)"Zone ID ", 8LL);
  uint64_t v35 = (void *)std::ostream::operator<<(v34, a1[10]);
  unsigned int v36 = sub_10000CF44(v35, (uint64_t)", ", 2LL);
  unsigned int v37 = sub_10000CF44(v36, (uint64_t)"Sector ID ", 10LL);
  int v38 = *((char *)a1 + 263);
  if (v38 >= 0) {
    uint64_t v39 = (uint64_t)(a1 + 60);
  }
  else {
    uint64_t v39 = *((void *)a1 + 30);
  }
  if (v38 >= 0) {
    uint64_t v40 = *((unsigned __int8 *)a1 + 263);
  }
  else {
    uint64_t v40 = *((void *)a1 + 31);
  }
  uint64_t v41 = sub_10000CF44(v37, v39, v40);
  uint64_t v42 = sub_10000CF44(v41, (uint64_t)", ", 2LL);
  uint64_t v43 = sub_10000CF44(v42, (uint64_t)"ltmOffset ", 10LL);
  unsigned int v44 = (void *)std::ostream::operator<<(v43, a1[105]);
  int v45 = sub_10000CF44(v44, (uint64_t)", ", 2LL);
  uint64_t v46 = sub_10000CF44(v45, (uint64_t)"dayLightSaving ", 15LL);
  uint64_t v47 = (void *)std::ostream::operator<<(v46, a1[106]);
  unint64_t v48 = sub_10000CF44(v47, (uint64_t)", ", 2LL);
  unint64_t v49 = sub_10000CF44(v48, (uint64_t)"derivedMccNum ", 14LL);
  unsigned int v50 = (void *)std::ostream::operator<<(v49, (uint64_t)(*((void *)a1 + 2) - *((void *)a1 + 1)) >> 2);
  unint64_t v51 = sub_10000CF44(v50, (uint64_t)", ", 2LL);
  uint64_t v52 = sub_10000CF44(v51, (uint64_t)"derivedMCC ", 11LL);
  unsigned int v53 = (unsigned int *)*((void *)a1 + 1);
  else {
    uint64_t v54 = *v53;
  }
  std::ostream::operator<<(v52, v54);
  std::stringbuf::str(&__p, &v61);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
  }
  sub_1010DDBC0(a2, (char *)p_p);
  *(void *)((char *)v59
  uint64_t v60 = v56;
  std::streambuf::~streambuf(&v61);
  return std::ios::~ios(&v62);
}

void sub_1003ED928( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a15);
  _Unwind_Resume(a1);
}

void *sub_1003ED958@<X0>(_DWORD *a1@<X0>, void *a2@<X8>)
{
  return sub_1010DDBC0(a2, __str);
}

uint64_t sub_1003ED9D8(uint64_t a1)
{
  return sub_100786480((void *)(a1 + 392));
}

void sub_1003ED9E0(uint64_t a1)
{
}

uint64_t sub_1003ED9E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int))(*(void *)a1 + 24LL))( a1,  a2,  a1 + 32,  a1 + 56,  a1 + 80,  a1 + 104,  a3,  a4,  a5);
}

void sub_1003EDA2C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t v6 = *(void **)(a1 + 160);
  if (v6)
  {
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472LL;
    v8[2] = sub_1003EE0F4;
    v8[3] = &unk_101832DF8;
    void v8[4] = a1;
    void v8[5] = a2;
    void v8[6] = a3;
    int v9 = a4;
    int v10 = a5;
    [v6 async:v8];
  }

  else
  {
    uint64_t v7 = (void *)sub_101238504();
    sub_1003EDA94(v7);
  }

void sub_1003EDA94(id a1)
{
  qword_101934858 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

uint64_t sub_1003EDAC0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  unint64_t v3 = *(void (**)(void, uint64_t, void, void, void))(v2 + 168);
  if (v3) {
    v3(*(void *)(a1 + 40), 1LL, *(unsigned int *)(a1 + 48), *(unsigned int *)(a1 + 52), *(void *)(v2 + 152));
  }
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, void, void, void))(v2 + 168);
  if (v5) {
    return v5(v2, 0LL, *(unsigned int *)(a1 + 48), *(unsigned int *)(a1 + 52), *(void *)(v2 + 152));
  }
  return result;
}

void sub_1003EDB2C(id a1)
{
  qword_101934A48 = (uint64_t)os_log_create("com.apple.locationd.Utility", "Utility");
}

void sub_1003EDB58(id a1)
{
  qword_101934A38 = (uint64_t)os_log_create("com.apple.locationd.Utility", "Network");
}

uint64_t sub_1003EDB84(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  unint64_t v3 = *(uint64_t (**)(uint64_t, void, void, void))(result + 224);
  if (v3) {
    return v3(result, *(unsigned int *)(a1 + 40), *(unsigned int *)(a1 + 44), *(void *)(result + 152));
  }
  return result;
}

uint64_t sub_1003EDBA4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  unint64_t v3 = *(uint64_t (**)(uint64_t, void, void, void))(result + 232);
  if (v3) {
    return v3(result, *(unsigned int *)(a1 + 40), *(unsigned int *)(a1 + 44), *(void *)(result + 152));
  }
  return result;
}

void sub_1003EDBC4(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

uint64_t sub_1003EDBF0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  unint64_t v3 = *(uint64_t (**)(uint64_t, void, void, void))(result + 240);
  if (v3) {
    return v3(result, *(unsigned int *)(a1 + 40), *(unsigned int *)(a1 + 44), *(void *)(result + 152));
  }
  return result;
}

uint64_t sub_1003EDC10(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, void, void, void))(result + 208);
  if (v3) {
    return v3( result,  a1 + 40,  a1 + 64,  *(unsigned int *)(a1 + 88),  *(unsigned int *)(a1 + 92),  *(unsigned int *)(a1 + 96),  *(void *)(result + 152));
  }
  return result;
}

void *sub_1003EDC3C(void *a1, uint64_t a2)
{
  a1[5] = 0LL;
  a1[6] = 0LL;
  a1[7] = 0LL;
  sub_1002E2234( a1 + 5,  *(const void **)(a2 + 40),  *(void *)(a2 + 48),  0xD37A6F4DE9BD37A7LL * ((uint64_t)(*(void *)(a2 + 48) - *(void *)(a2 + 40)) >> 3));
  a1[8] = 0LL;
  a1[9] = 0LL;
  a1[10] = 0LL;
  return sub_1002E2234( a1 + 8,  *(const void **)(a2 + 64),  *(void *)(a2 + 72),  0xD37A6F4DE9BD37A7LL * ((uint64_t)(*(void *)(a2 + 72) - *(void *)(a2 + 64)) >> 3));
}

void sub_1003EDCBC(_Unwind_Exception *exception_object)
{
  uint64_t v4 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v4;
    operator delete(v4);
  }

  _Unwind_Resume(exception_object);
}

void sub_1003EDCD8(void *a1)
{
  uint64_t v2 = (void *)a1[8];
  if (v2)
  {
    a1[9] = v2;
    operator delete(v2);
  }

  unint64_t v3 = (void *)a1[5];
  if (v3)
  {
    a1[6] = v3;
    operator delete(v3);
  }

uint64_t sub_1003EDD1C()
{
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101836C20);
  }
  uint64_t v0 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_FAULT,  "Unimplemented CDMA NetworkLocationRequester",  buf,  2u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101836C20);
    }
    v3[0] = 0;
    uint64_t v2 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Unimplemented CDMA NetworkLocationRequester",  v3,  2);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual int CLNetworkLocationRequester::unifiedQuery(const std::vector<CLTelephonyService_Type::Cell> &, const std ::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std: :vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vect or<CLMacAddress> &, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &, int)",  "%s\n",  v2);
  }

  return 0LL;
}

uint64_t sub_1003EDEA4()
{
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101836C20);
  }
  uint64_t v0 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_FAULT, "nearby data query not supported", buf, 2u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101836C20);
    }
    v3[0] = 0;
    uint64_t v2 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "nearby data query not supported",  v3,  2);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual int CLNetworkLocationRequester::queryLocation(const CLDaemonLocation &, int)",  "%s\n",  v2);
  }

  return 0xFFFFFFFFLL;
}

void sub_1003EE02C(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    uint64_t v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 432LL;
        sub_1003EE0B0((uint64_t)(v1 + 2), v4);
      }

      while ((void *)v4 != v2);
      uint64_t v5 = **a1;
    }

    v1[1] = v2;
    operator delete(v5);
  }

void sub_1003EE0B0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void **)(a2 + 8);
  if (v3)
  {
    *(void *)(a2 + 16) = v3;
    operator delete(v3);
  }

uint64_t sub_1003EE0F4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  unint64_t v3 = *(uint64_t (**)(uint64_t, void, void, void, void, void))(result + 216);
  if (v3) {
    return v3( result,  *(void *)(a1 + 40),  *(void *)(a1 + 48),  *(unsigned int *)(a1 + 56),  *(unsigned int *)(a1 + 60),  *(void *)(result + 152));
  }
  return result;
}

uint64_t sub_1003EE118()
{
  qword_1019A0FE0 = (uint64_t)[@"k2dot4GHZ" UTF8String];
  qword_1019A0FE8 = (uint64_t)[@"k2dot4GHZ" UTF8String];
  sub_100987184(&qword_101995698, "ALS");
  return __cxa_atexit((void (*)(void *))sub_1003E281C, &qword_101995698, (void *)&_mh_execute_header);
}

void sub_1003EE184(double *a1, double a2, double a3, double a4, double a5)
{
  if (a5 >= 0.0) {
    double v5 = a5;
  }
  else {
    double v5 = 0.0;
  }
  if (a1[8] > v5)
  {
    double v7 = a1[2];
    if (v7 < a2) {
      a2 = a1[2];
    }
    if (a2 >= a1[3]) {
      double v8 = a2;
    }
    else {
      double v8 = a1[3];
    }
    double v9 = *a1;
    if (*a1 > a4) {
      a4 = *a1;
    }
    if (a1[1] <= a3) {
      double v10 = a3;
    }
    else {
      double v10 = a1[1];
    }
    exp(-(a4 - v9) / a1[4]);
    exp(-(v10 - v9) / a1[5]);
    double v11 = -(v7 - v8);
    double v12 = a1[6];
    double v13 = a1[9];
    double v14 = v11 / v12;
    if (v13 <= v5)
    {
      exp(-(v5 - v13) / a1[7]);
      exp(v14);
    }

    else
    {
      exp(v11 / v12);
    }
  }

double sub_1003EE290(uint64_t *a1, double a2)
{
  if (*a1 == a1[1])
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101836D40);
    }
    unsigned int v34 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEBUG,  "WifiCalc, zaxis, calculate uncertainty, empty accessPointWithWeights",  buf,  2u);
    }

    double v32 = -1.0;
    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101836D40);
      }
      LOWORD(v56) = 0;
      unint64_t v49 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "WifiCalc, zaxis, calculate uncertainty, empty accessPointWithWeights",  &v56,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static double CLLocationCalculator::calculateWifiVerticalAccuracy(const std::vector<CLWifiAccessPoint> &, double)",  "%s\n",  v49);
    }
  }

  else
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101836D40);
    }
    uint64_t v4 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      int v5 = -1431655765 * ((unint64_t)(a1[1] - *a1) >> 5);
      *(_DWORD *)std::stringbuf::string_type buf = 67174657;
      LODWORD(v65) = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "WifiCalc, zaxis, calculate uncertainty, num accessPointWithWeights, %{private}d",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101836D40);
      }
      int v46 = -1431655765 * ((unint64_t)(a1[1] - *a1) >> 5);
      int v56 = 67174657;
      LODWORD(v57) = v46;
      uint64_t v47 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "WifiCalc, zaxis, calculate uncertainty, num accessPointWithWeights, %{private}d",  &v56,  8);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static double CLLocationCalculator::calculateWifiVerticalAccuracy(const std::vector<CLWifiAccessPoint> &, double)",  "%s\n",  v47);
    }

    std::stringbuf::string_type __p = 0LL;
    uint64_t v54 = 0LL;
    unint64_t v55 = 0LL;
    uint64_t v6 = *a1;
    uint64_t v7 = a1[1];
    if (*a1 == v7) {
      goto LABEL_38;
    }
    double v8 = 0LL;
    do
    {
      if (*(float *)(v6 + 84) > 0.0)
      {
        if (v8 >= v55)
        {
          double v13 = __p;
          unint64_t v14 = 0xAAAAAAAAAAAAAAABLL * ((v8 - (char *)__p) >> 5);
          unint64_t v15 = v14 + 1;
          if (v14 + 1 > 0x2AAAAAAAAAAAAAALL) {
            sub_100007008();
          }
          else {
            unint64_t v16 = v15;
          }
          if (v16)
          {
            uint64_t v17 = (char *)sub_1003F6AEC((uint64_t)&v55, v16);
            double v13 = __p;
            double v8 = v54;
          }

          else
          {
            uint64_t v17 = 0LL;
          }

          unint64_t v18 = &v17[96 * v14];
          __int128 v19 = *(_OWORD *)(v6 + 16);
          *(_OWORD *)unint64_t v18 = *(_OWORD *)v6;
          *((_OWORD *)v18 + 1) = v19;
          __int128 v20 = *(_OWORD *)(v6 + 32);
          __int128 v21 = *(_OWORD *)(v6 + 48);
          __int128 v22 = *(_OWORD *)(v6 + 80);
          *((_OWORD *)v18 + 4) = *(_OWORD *)(v6 + 64);
          *((_OWORD *)v18 + 5) = v22;
          *((_OWORD *)v18 + 2) = v20;
          *((_OWORD *)v18 + 3) = v21;
          if (v8 == (char *)v13)
          {
            id v28 = (double *)&v17[96 * v14];
          }

          else
          {
            int v23 = &v17[96 * v14];
            do
            {
              __int128 v24 = *((_OWORD *)v8 - 5);
              *((_OWORD *)v23 - 6) = *((_OWORD *)v8 - 6);
              *((_OWORD *)v23 - 5) = v24;
              __int128 v25 = *((_OWORD *)v8 - 4);
              __int128 v26 = *((_OWORD *)v8 - 3);
              __int128 v27 = *((_OWORD *)v8 - 2);
              id v28 = (double *)(v23 - 96);
              *(_OWORD *)(v23 - 23) = *(_OWORD *)(v8 - 23);
              *((_OWORD *)v23 - 3) = v26;
              *((_OWORD *)v23 - 2) = v27;
              *((_OWORD *)v23 - 4) = v25;
              v8 -= 96;
              v23 -= 96;
            }

            while (v8 != (char *)v13);
          }

          double v8 = v18 + 96;
          std::stringbuf::string_type __p = v28;
          unint64_t v55 = &v17[96 * v16];
          if (v13) {
            operator delete(v13);
          }
        }

        else
        {
          __int128 v9 = *(_OWORD *)(v6 + 16);
          *(_OWORD *)double v8 = *(_OWORD *)v6;
          *((_OWORD *)v8 + 1) = v9;
          __int128 v10 = *(_OWORD *)(v6 + 32);
          __int128 v11 = *(_OWORD *)(v6 + 48);
          __int128 v12 = *(_OWORD *)(v6 + 80);
          *((_OWORD *)v8 + 4) = *(_OWORD *)(v6 + 64);
          *((_OWORD *)v8 + 5) = v12;
          *((_OWORD *)v8 + 2) = v10;
          *((_OWORD *)v8 + 3) = v11;
          v8 += 96;
        }

        uint64_t v54 = v8;
      }

      v6 += 96LL;
    }

    while (v6 != v7);
    if (__p == (double *)v8)
    {
LABEL_38:
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101836D40);
      }
      unint64_t v33 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEBUG,  "WifiCalc, zaxis, calculate uncertainty, accessPointsWithValidWeights is empty",  buf,  2u);
      }

      double v32 = -1.0;
      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101836D40);
        }
        LOWORD(v56) = 0;
        LODWORD(v52) = 2;
        unint64_t v48 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "WifiCalc, zaxis, calculate uncertainty, accessPointsWithValidWeights is empty",  &v56,  v52);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "static double CLLocationCalculator::calculateWifiVerticalAccuracy(const std::vector<CLWifiAccessPoint> &, double)",  "%s\n",  v48);
      }
    }

    else
    {
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101836D40);
      }
      unint64_t v29 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 67174657;
        LODWORD(v65) = -1431655765 * ((unint64_t)(v54 - (char *)__p) >> 5);
        _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEBUG,  "WifiCalc, zaxis, calculate uncertainty, num accessPointsWithValidWeights, %{private}d",  buf,  8u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101836D40);
        }
        int v56 = 67174657;
        LODWORD(v57) = -1431655765 * ((unint64_t)(v54 - (char *)__p) >> 5);
        LODWORD(v52) = 8;
        unsigned int v50 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "WifiCalc, zaxis, calculate uncertainty, num accessPointsWithValidWeights, %{private}d",  &v56,  v52);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "static double CLLocationCalculator::calculateWifiVerticalAccuracy(const std::vector<CLWifiAccessPoint> &, double)",  "%s\n",  v50);
      }

      unsigned int v30 = __p;
      if (v54 - (char *)__p == 96)
      {
        double v31 = __p[5];
        double v32 = v31 * *((double *)sub_100F4BF20() + 32);
      }

      else
      {
        if (__p == (double *)v54)
        {
          double v38 = 0.0;
          double v37 = 0.0;
          double v36 = 0.0;
        }

        else
        {
          double v36 = 0.0;
          double v37 = 0.0;
          double v38 = 0.0;
          do
          {
            double v39 = *((float *)v30 + 21);
            double v38 = v38 + v39;
            double v37 = v37 + v39 * v39;
            double v36 = v36 + v39 * ((v30[2] - a2) * (v30[2] - a2));
            v30 += 12;
          }

          while (v30 != (double *)v54);
        }

        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101836D40);
        }
        double v40 = v37 / v38;
        double v41 = v38 - v37 / v38;
        uint64_t v42 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)std::stringbuf::string_type buf = 134284289;
          double v65 = v38;
          __int16 v66 = 2049;
          double v67 = v37;
          __int16 v68 = 2049;
          double v69 = v36;
          __int16 v70 = 2049;
          double v71 = v38 - v40;
          _os_log_impl( (void *)&_mh_execute_header,  v42,  OS_LOG_TYPE_DEBUG,  "WifiCalc, zaxis, calculate uncertainty, dSumWeightV, %{private}.2f, dSumWeightVSquare, %{private}.2f, dSumWe ightedDeviation, %{private}.2f, altVarianceDivisor, %{private}.2f",  buf,  0x2Au);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101836D40);
          }
          int v56 = 134284289;
          double v57 = v38;
          __int16 v58 = 2049;
          double v59 = v37;
          __int16 v60 = 2049;
          double v61 = v36;
          __int16 v62 = 2049;
          double v63 = v38 - v40;
          LODWORD(v52) = 42;
          unint64_t v51 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "WifiCalc, zaxis, calculate uncertainty, dSumWeightV, %{private}.2f, dSumWeightVSquare, %{priva te}.2f, dSumWeightedDeviation, %{private}.2f, altVarianceDivisor, %{private}.2f",  &v56,  v52);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "static double CLLocationCalculator::calculateWifiVerticalAccuracy(const std::vector<CLWifiAccessPoint> &, double)",  "%s\n",  v51);
        }

        double v32 = -1.0;
        if (v38 > 0.0 && v41 > 0.0)
        {
          double v43 = *((double *)sub_100F4BF20() + 32);
          unsigned int v44 = (double *)sub_100F4BF20();
          double v45 = sqrt(v36 / v41) * v43;
          if (v45 >= v44[27]) {
            double v32 = v45;
          }
          else {
            double v32 = v44[27];
          }
        }
      }
    }

    if (__p) {
      operator delete(__p);
    }
  }

  return v32;
}

void sub_1003EEC34( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1003EEC74(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  if (v5 - *a1 != a2[1] - *a2)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101836D60);
    }
    unint64_t v29 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 136315650;
      double v45 = "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/Utilities/CLLocationCalculator.mm";
      __int16 v46 = 1024;
      int v47 = 482;
      __int16 v48 = 2080;
      unint64_t v49 = "values.size() == weights.size()";
      _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_FAULT, "Assert Failed, %s, %d, %s", buf, 0x1Cu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101836D60);
      }
      int v38 = 136315650;
      double v39 = "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/Utilities/CLLocationCalculator.mm";
      __int16 v40 = 1024;
      int v41 = 482;
      __int16 v42 = 2080;
      double v43 = "values.size() == weights.size()";
      double v32 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assert Failed, %s, %d, %s",  (const char *)&v38,  28,  v34);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "static double CLLocationCalculator::findWeightedMedian(const std::vector<double> &, const std::vector<double> &)",  "%s\n",  v32);
    }

    sub_1002920DC();
    uint64_t v4 = *a1;
    uint64_t v5 = a1[1];
  }

  if (v5 == v4)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101836D60);
    }
    unsigned int v30 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 136315650;
      double v45 = "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/Utilities/CLLocationCalculator.mm";
      __int16 v46 = 1024;
      int v47 = 483;
      __int16 v48 = 2080;
      unint64_t v49 = "values.size() > 0";
      _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_FAULT, "Assert Failed, %s, %d, %s", buf, 0x1Cu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101836D60);
      }
      int v38 = 136315650;
      double v39 = "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/Utilities/CLLocationCalculator.mm";
      __int16 v40 = 1024;
      int v41 = 483;
      __int16 v42 = 2080;
      double v43 = "values.size() > 0";
      unint64_t v33 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assert Failed, %s, %d, %s",  (const char *)&v38,  28,  v34);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "static double CLLocationCalculator::findWeightedMedian(const std::vector<double> &, const std::vector<double> &)",  "%s\n",  v33);
    }

    sub_1002920DC();
    uint64_t v4 = *a1;
    uint64_t v5 = a1[1];
  }

  std::stringbuf::string_type __p = 0LL;
  double v36 = 0LL;
  double v37 = 0LL;
  if (v5 == v4)
  {
    uint64_t v6 = 0LL;
    __int128 v19 = 0LL;
    double v20 = 0.0;
  }

  else
  {
    uint64_t v6 = 0LL;
    unint64_t v7 = 0LL;
    uint64_t v8 = *a2;
    double v9 = 0.0;
    do
    {
      uint64_t v10 = *(void *)(v4 + 8 * v7);
      uint64_t v11 = *(void *)(v8 + 8 * v7);
      if (v6 >= (double *)v37)
      {
        uint64_t v12 = ((char *)v6 - (char *)__p) >> 4;
        unint64_t v13 = (v37 - (char *)__p) >> 3;
        if (v13 <= v12 + 1) {
          unint64_t v13 = v12 + 1;
        }
        else {
          unint64_t v14 = v13;
        }
        if (v14) {
          unint64_t v15 = (char *)sub_100037038((uint64_t)&v37, v14);
        }
        else {
          unint64_t v15 = 0LL;
        }
        unint64_t v16 = &v15[16 * v12];
        *(void *)unint64_t v16 = v10;
        *((void *)v16 + 1) = v11;
        uint64_t v17 = v36;
        unint64_t v18 = v16;
        if (v36 != __p)
        {
          do
          {
            *((_OWORD *)v18 - 1) = *((_OWORD *)v17 - 1);
            v18 -= 16;
            v17 -= 2;
          }

          while (v17 != __p);
          uint64_t v17 = __p;
        }

        uint64_t v6 = (double *)(v16 + 16);
        std::stringbuf::string_type __p = (double *)v18;
        double v37 = &v15[16 * v14];
        if (v17) {
          operator delete(v17);
        }
      }

      else
      {
        *(void *)uint64_t v6 = v10;
        *((void *)v6 + 1) = v11;
        v6 += 2;
      }

      double v36 = v6;
      uint64_t v8 = *a2;
      double v9 = v9 + *(double *)(*a2 + 8 * v7++);
      uint64_t v4 = *a1;
    }

    while (v7 < (a1[1] - *a1) >> 3);
    __int128 v19 = __p;
    double v20 = v9 * 0.5;
  }

  unint64_t v21 = 126 - 2 * __clz(((char *)v6 - (char *)v19) >> 4);
  if (v6 == v19) {
    uint64_t v22 = 0LL;
  }
  else {
    uint64_t v22 = v21;
  }
  sub_1003F6B30(v19, v6, (uint64_t)buf, v22, 1);
  int v23 = __p;
  if (__p == v36)
  {
LABEL_31:
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101836D60);
    }
    __int128 v26 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 136315650;
      double v45 = "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/Utilities/CLLocationCalculator.mm";
      __int16 v46 = 1024;
      int v47 = 503;
      __int16 v48 = 2080;
      unint64_t v49 = "false";
      _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_FAULT, "Assert Failed, %s, %d, %s", buf, 0x1Cu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101836D60);
      }
      int v38 = 136315650;
      double v39 = "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/Utilities/CLLocationCalculator.mm";
      __int16 v40 = 1024;
      int v41 = 503;
      __int16 v42 = 2080;
      double v43 = "false";
      double v31 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assert Failed, %s, %d, %s",  (const char *)&v38,  28,  v34);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "static double CLLocationCalculator::findWeightedMedian(const std::vector<double> &, const std::vector<double> &)",  "%s\n",  v31);
    }

    sub_1002920DC();
    int v23 = __p;
    double v27 = 1.79769313e308;
    if (!__p) {
      return v27;
    }
LABEL_37:
    operator delete(v23);
    return v27;
  }

  double v24 = 0.0;
  __int128 v25 = __p;
  while (1)
  {
    double v24 = v24 + v25[1];
    if (v24 >= v20) {
      break;
    }
    v25 += 2;
    if (v25 == v36) {
      goto LABEL_31;
    }
  }

  double v27 = *v25;
  if (__p) {
    goto LABEL_37;
  }
  return v27;
}

void sub_1003EF3C0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003EF3F4(void *a1)
{
  float v154 = 0LL;
  float v155 = 0LL;
  std::stringbuf::string_type v156 = 0LL;
  float v151 = 0LL;
  float v152 = 0LL;
  unint64_t v153 = 0LL;
  int v148 = 0LL;
  float v149 = 0LL;
  float v150 = 0LL;
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  if (*a1 == v3)
  {
    unsigned int v30 = 0LL;
    unint64_t v29 = 0LL;
  }

  else
  {
    do
    {
      uint64_t v4 = v155;
      if (v155 >= v156)
      {
        uint64_t v6 = (char *)v154;
        uint64_t v7 = (v155 - (_BYTE *)v154) >> 3;
        unint64_t v8 = v7 + 1;
        uint64_t v9 = v156 - (_BYTE *)v154;
        if ((v156 - (_BYTE *)v154) >> 2 > v8) {
          unint64_t v8 = v9 >> 2;
        }
        else {
          unint64_t v10 = v8;
        }
        if (v10)
        {
          uint64_t v11 = (char *)sub_1000071BC((uint64_t)&v156, v10);
          uint64_t v6 = (char *)v154;
          uint64_t v4 = v155;
        }

        else
        {
          uint64_t v11 = 0LL;
        }

        uint64_t v12 = &v11[8 * v7];
        *(void *)uint64_t v12 = *(void *)(v2 + 16);
        uint64_t v5 = v12 + 8;
        while (v4 != v6)
        {
          uint64_t v13 = *((void *)v4 - 1);
          v4 -= 8;
          *((void *)v12 - 1) = v13;
          v12 -= 8;
        }

        float v154 = v12;
        float v155 = v5;
        std::stringbuf::string_type v156 = &v11[8 * v10];
        if (v6) {
          operator delete(v6);
        }
      }

      else
      {
        *(void *)float v155 = *(void *)(v2 + 16);
        uint64_t v5 = v4 + 8;
      }

      float v155 = v5;
      uint64_t v14 = *(void *)(v2 + 16);
      unint64_t v15 = operator new(8uLL);
      *(void *)std::stringbuf::string_type __p = v15;
      *unint64_t v15 = v14;
      *(void *)&__p[8] = v15 + 1;
      *(void *)&__p[16] = v15 + 1;
      unint64_t v16 = v152;
      if ((unint64_t)v152 >= v153)
      {
        uint64_t v17 = sub_100007264((uint64_t *)&v151, (uint64_t)__p);
      }

      else
      {
        *float v152 = 0LL;
        v16[1] = 0LL;
        void v16[2] = 0LL;
        sub_100007590( v16,  *(const void **)__p,  *(uint64_t *)&__p[8],  (uint64_t)(*(void *)&__p[8] - *(void *)__p) >> 3);
        uint64_t v17 = (uint64_t)(v16 + 3);
      }

      float v152 = (uint64_t *)v17;
      double v18 = *(float *)(v2 + 84);
      __int128 v19 = v149;
      if (v149 >= v150)
      {
        unint64_t v21 = (double *)v148;
        uint64_t v22 = ((char *)v149 - (_BYTE *)v148) >> 3;
        unint64_t v23 = v22 + 1;
        uint64_t v24 = (char *)v150 - (_BYTE *)v148;
        else {
          unint64_t v25 = v23;
        }
        if (v25)
        {
          __int128 v26 = (char *)sub_1000071BC((uint64_t)&v150, v25);
          unint64_t v21 = (double *)v148;
          __int128 v19 = v149;
        }

        else
        {
          __int128 v26 = 0LL;
        }

        double v27 = (double *)&v26[8 * v22];
        double *v27 = v18;
        double v20 = v27 + 1;
        while (v19 != v21)
        {
          uint64_t v28 = *((void *)v19-- - 1);
          *((void *)v27-- - 1) = v28;
        }

        int v148 = v27;
        float v149 = v20;
        float v150 = (double *)&v26[8 * v25];
        if (v21) {
          operator delete(v21);
        }
      }

      else
      {
        *float v149 = v18;
        double v20 = v19 + 1;
      }

      float v149 = v20;
      if (*(void *)__p)
      {
        *(void *)&__p[8] = *(void *)__p;
        operator delete(*(void **)__p);
      }

      v2 += 96LL;
    }

    while (v2 != v3);
    unint64_t v29 = (double *)v154;
    unsigned int v30 = (double *)v155;
  }

  sub_1003F7C44((uint64_t)v145, v29, v30);
  double v31 = (double *)v154;
  double v32 = (double *)((char *)v154 + 8);
  double v33 = *(double *)v154;
  if (v154 != v155 && v32 != (double *)v155)
  {
    double v34 = *(double *)v154;
    uint64_t v35 = (double *)((char *)v154 + 8);
    double v36 = (double *)v154;
    double v37 = (double *)((char *)v154 + 8);
    do
    {
      double v38 = *v37++;
      double v39 = v38;
      if (v34 < v38)
      {
        double v34 = v39;
        double v36 = v35;
      }

      uint64_t v35 = v37;
    }

    while (v37 != (double *)v155);
    double v40 = *v36;
    int v41 = (double *)((char *)v154 + 8);
    do
    {
      double v42 = *v41++;
      double v43 = v42;
      if (v42 < v33)
      {
        double v33 = v43;
        double v31 = v32;
      }

      double v32 = v41;
    }

    while (v41 != (double *)v155);
    double v33 = v40;
  }

  double v44 = *v31;
  else {
    int v45 = 2;
  }
  unint64_t v46 = (unint64_t)(v155 - (_BYTE *)v154) >> 3;
  if (v147 < v45) {
    int v45 = v147;
  }
  else {
    unint64_t v47 = v45;
  }
  if ((int)v47 < 2)
  {
    uint64_t v48 = 0LL;
    goto LABEL_105;
  }

  unint64_t v136 = a1;
  sub_1003F7EE4(&v143, v47);
  uint64_t v49 = v143;
  uint64_t v50 = v144;
  if (v143 != v144)
  {
    int v51 = 0;
    unint64_t v52 = (0xAAAAAAAAAAAAAAABLL * (((char *)v152 - v151) >> 3) - 1) / v47;
    do
    {
      unsigned int v53 = *(void **)&v151[24 * (++v51 * v52)];
      unint64_t v54 = *(void *)(v49 + 16);
      unint64_t v55 = *(void **)(v49 + 8);
      if ((unint64_t)v55 >= v54)
      {
        double v57 = *(void **)v49;
        uint64_t v58 = ((uint64_t)v55 - *(void *)v49) >> 3;
        unint64_t v59 = v58 + 1;
        uint64_t v60 = v54 - (void)v57;
        if (v60 >> 2 > v59) {
          unint64_t v59 = v60 >> 2;
        }
        else {
          unint64_t v61 = v59;
        }
        if (v61)
        {
          __int16 v62 = (char *)sub_1000071BC(v49 + 16, v61);
          double v57 = *(void **)v49;
          unint64_t v55 = *(void **)(v49 + 8);
        }

        else
        {
          __int16 v62 = 0LL;
        }

        double v63 = &v62[8 * v58];
        *(void *)double v63 = *v53;
        int v56 = v63 + 8;
        while (v55 != v57)
        {
          uint64_t v64 = *--v55;
          *((void *)v63 - 1) = v64;
          v63 -= 8;
        }

        *(void *)uint64_t v49 = v63;
        *(void *)(v49 + _Block_object_dispose((const void *)(v30 - 184), 8) = v56;
        *(void *)(v49 + 16) = &v62[8 * v61];
        if (v57) {
          operator delete(v57);
        }
      }

      else
      {
        *unint64_t v55 = *v53;
        int v56 = v55 + 1;
      }

      *(void *)(v49 + _Block_object_dispose((const void *)(v30 - 184), 8) = v56;
      v49 += 24LL;
    }

    while (v49 != v50);
  }

  unint64_t v140 = 0LL;
  uint64_t v141 = 0LL;
  uint64_t v142 = 0LL;
  memset(v139, 0, sizeof(v139));
  if (!sub_100008F20((uint64_t)__p, (uint64_t)&v143, (uint64_t **)&v151, &v148, v47, v139, (uint64_t)&v140))
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101836D40);
    }
    unint64_t v74 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type __p = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v74,  OS_LOG_TYPE_DEBUG,  "WifiCalc, zaxis, MultiModal, detection failed",  __p,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101836D40);
      }
      LOWORD(v157[0]) = 0;
      __int16 v132 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "WifiCalc, zaxis, MultiModal, detection failed",  v157,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLLocationCalculator::detectMultiModalDistribution(const std::vector<CLWifiAccessPoint> &)",  "%s\n",  v132);
      if (v132 != __p) {
        free(v132);
      }
    }

    uint64_t v48 = 0LL;
    goto LABEL_102;
  }

  *(void *)std::stringbuf::string_type __p = 0LL;
  sub_1000070FC(&v137, v47, __p);
  double v65 = (double *)v137;
  if (v152 != (uint64_t *)v151)
  {
    unint64_t v66 = ((char *)v152 - v151) / 24;
    double v67 = (double *)v148;
    __int16 v68 = v140;
    if (v66 <= 1) {
      unint64_t v66 = 1LL;
    }
    do
    {
      double v69 = *v67++;
      double v70 = v69;
      LODWORD(v69) = *v68++;
      v65[LODWORD(v69)] = v70 + v65[LODWORD(v69)];
      --v66;
    }

    while (v66);
  }

  if (v65 == v138) {
    goto LABEL_93;
  }
  unsigned int v71 = 0;
  int v72 = v65;
  do
  {
    double v73 = *v72++;
    if (v73 != 0.0) {
      ++v71;
    }
  }

  while (v72 != v138);
  if (v71 < 2) {
    goto LABEL_93;
  }
  if (v71 != 2)
  {
    if (v65 == v138)
    {
      uint64_t v89 = v65;
    }

    else
    {
      BOOL v88 = v65 + 1;
      uint64_t v89 = v65;
      if (v65 + 1 != v138)
      {
        double v90 = *v65;
        uint64_t v89 = v65;
        __int16 v91 = v65 + 1;
        do
        {
          double v92 = *v91++;
          double v93 = v92;
          if (v90 < v92)
          {
            double v90 = v93;
            uint64_t v89 = v88;
          }

          BOOL v88 = v91;
        }

        while (v91 != v138);
      }
    }

    v157[0] = 0LL;
    sub_1000070FC(__p, v47, v157);
    uint64_t v94 = 0LL;
    uint64_t v95 = *(double **)__p;
    unsigned int v96 = (double **)v139[0];
    unsigned int v97 = *(double **)(v139[0] + 24LL * (int)((unint64_t)((char *)v89 - (char *)v65) >> 3));
    do
    {
      unsigned int v98 = *v96;
      v96 += 3;
      v95[v94++] = vabdd_f64(*v98, *v97);
    }

    while (v47 != v94);
    unsigned int v99 = v95 + 1;
    BOOL v100 = v95 == *(double **)&__p[8] || v99 == *(double **)&__p[8];
    __int128 v101 = v95;
    if (!v100)
    {
      double v102 = *v95;
      __int128 v101 = v95;
      __int128 v103 = v95 + 1;
      do
      {
        double v104 = *v103++;
        double v105 = v104;
        if (v102 < v104)
        {
          double v102 = v105;
          __int128 v101 = v99;
        }

        unsigned int v99 = v103;
      }

      while (v103 != *(double **)&__p[8]);
    }

    memset(v157, 0, 24);
    unsigned __int128 v107 = (uint64_t *)v151;
    __int128 v106 = v152;
    if (v152 != (uint64_t *)v151)
    {
      uint64_t v108 = 0LL;
      unint64_t v109 = 0LL;
      unint64_t v110 = (unint64_t)((char *)v101 - (char *)v95) >> 3;
      do
      {
        if (*((_DWORD *)v140 + v109) != (_DWORD)v110)
        {
          uint64_t v111 = (_OWORD *)(*v136 + 96 * v109);
          if (v108 >= v157[2])
          {
            __int16 v116 = (char *)v157[0];
            unint64_t v117 = 0xAAAAAAAAAAAAAAABLL * ((v108 - (char *)v157[0]) >> 5);
            unint64_t v118 = v117 + 1;
            if (v117 + 1 > 0x2AAAAAAAAAAAAAALL) {
              sub_100007008();
            }
            else {
              unint64_t v119 = v118;
            }
            if (v119)
            {
              __int16 v120 = (char *)sub_1003F6AEC((uint64_t)&v157[2], v119);
              __int16 v116 = (char *)v157[0];
              uint64_t v108 = (char *)v157[1];
            }

            else
            {
              __int16 v120 = 0LL;
            }

            uint64_t v121 = &v120[96 * v117];
            __int128 v122 = v111[1];
            *(_OWORD *)uint64_t v121 = *v111;
            *((_OWORD *)v121 + 1) = v122;
            __int128 v123 = v111[2];
            __int128 v124 = v111[3];
            __int128 v125 = v111[5];
            *((_OWORD *)v121 + 4) = v111[4];
            *((_OWORD *)v121 + 5) = v125;
            *((_OWORD *)v121 + 2) = v123;
            *((_OWORD *)v121 + 3) = v124;
            if (v108 == v116)
            {
              BOOL v131 = &v120[96 * v117];
            }

            else
            {
              int v126 = &v120[96 * v117];
              do
              {
                __int128 v127 = *((_OWORD *)v108 - 5);
                *((_OWORD *)v126 - 6) = *((_OWORD *)v108 - 6);
                *((_OWORD *)v126 - 5) = v127;
                __int128 v128 = *((_OWORD *)v108 - 4);
                __int128 v129 = *((_OWORD *)v108 - 3);
                __int128 v130 = *((_OWORD *)v108 - 2);
                BOOL v131 = v126 - 96;
                *(_OWORD *)(v126 - 23) = *(_OWORD *)(v108 - 23);
                *((_OWORD *)v126 - 3) = v129;
                *((_OWORD *)v126 - 2) = v130;
                *((_OWORD *)v126 - 4) = v128;
                v108 -= 96;
                v126 -= 96;
              }

              while (v108 != v116);
            }

            uint64_t v108 = v121 + 96;
            v157[0] = v131;
            v157[1] = v121 + 96;
            v157[2] = &v120[96 * v119];
            if (v116) {
              operator delete(v116);
            }
          }

          else
          {
            __int128 v112 = v111[1];
            *(_OWORD *)uint64_t v108 = *v111;
            *((_OWORD *)v108 + 1) = v112;
            __int128 v113 = v111[2];
            __int128 v114 = v111[3];
            __int128 v115 = v111[5];
            *((_OWORD *)v108 + 4) = v111[4];
            *((_OWORD *)v108 + 5) = v115;
            *((_OWORD *)v108 + 2) = v113;
            *((_OWORD *)v108 + 3) = v114;
            v108 += 96;
          }

          v157[1] = v108;
          unsigned __int128 v107 = (uint64_t *)v151;
          __int128 v106 = v152;
        }

        ++v109;
      }

      while (0xAAAAAAAAAAAAAAABLL * (v106 - v107) > v109);
    }

    uint64_t v48 = sub_1003EF3F4(v157);
    if (v157[0])
    {
      v157[1] = v157[0];
      operator delete(v157[0]);
    }

    if (*(void *)__p)
    {
      *(void *)&__p[8] = *(void *)__p;
      operator delete(*(void **)__p);
    }

    goto LABEL_94;
  }

  if (vabdd_f64(**(double **)v139[0], **(double **)(v139[0] + 24)) < *((double *)sub_100F4BF20() + 23))
  {
    double v76 = *(double *)v137;
    double v77 = *((double *)v137 + 1);
  }

  uint64_t v78 = (double *)v137;
  if (v137 != v138)
  {
    id v79 = (double *)((char *)v137 + 8);
    if ((char *)v137 + 8 != (char *)v138)
    {
      double v80 = *(double *)v137;
      uint64_t v81 = (double *)((char *)v137 + 8);
      do
      {
        double v82 = *v81++;
        double v83 = v82;
        if (v80 < v82)
        {
          double v80 = v83;
          uint64_t v78 = v79;
        }

        id v79 = v81;
      }

      while (v81 != v138);
    }
  }

  double v84 = *v78;
  if (v84 >= *((double *)sub_100F4BF20() + 24))
  {
LABEL_93:
    uint64_t v48 = 0LL;
  }

  else
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101836D40);
    }
    int v85 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v86 = **(void **)v139[0];
      uint64_t v87 = **(void **)(v139[0] + 24);
      *(_DWORD *)std::stringbuf::string_type __p = 134349568;
      *(void *)&__p[4] = v86;
      *(_WORD *)&_BYTE __p[12] = 2050;
      *(void *)&__p[14] = v87;
      *(_WORD *)&__p[22] = 2050;
      double v159 = v84;
      _os_log_impl( (void *)&_mh_execute_header,  v85,  OS_LOG_TYPE_DEBUG,  "WifiCalc, zaxis, MultiModal, detected, max cluster centers, %{public}0.3f, %{public}0.3f, max weight, %{public}0.3f",  __p,  0x20u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101836D40);
      }
      unsigned int v133 = **(void ***)v139[0];
      uint64_t v134 = **(void ***)(v139[0] + 24);
      LODWORD(v157[0]) = 134349568;
      *(void **)((char *)v157 + 4) = v133;
      WORD2(v157[1]) = 2050;
      *(void **)((char *)&v157[1] + 6) = v134;
      HIWORD(v157[2]) = 2050;
      v157[3] = *(void **)&v84;
      unint64_t v135 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "WifiCalc, zaxis, MultiModal, detected, max cluster centers, %{public}0.3f, %{public}0.3f, max wei ght, %{public}0.3f",  v157,  32);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLLocationCalculator::detectMultiModalDistribution(const std::vector<CLWifiAccessPoint> &)",  "%s\n",  v135);
      if (v135 != __p) {
        free(v135);
      }
    }

    uint64_t v48 = 1LL;
  }

LABEL_102:
  *(void *)std::stringbuf::string_type __p = v139;
  sub_100006BC8((void ***)__p);
  if (v140)
  {
    uint64_t v141 = v140;
    operator delete(v140);
  }

  *(void *)std::stringbuf::string_type __p = &v143;
  sub_100006BC8((void ***)__p);
LABEL_105:
  sub_100008390((uint64_t)v145, v146);
  if (v148)
  {
    float v149 = (double *)v148;
    operator delete(v148);
  }

  *(void *)std::stringbuf::string_type __p = &v151;
  sub_100006BC8((void ***)__p);
  if (v154)
  {
    float v155 = (char *)v154;
    operator delete(v154);
  }

  return v48;
}

      uint64_t v17 = 0LL;
      goto LABEL_103;
    }

    if (!*(_BYTE *)(v5 + 296)) {
      goto LABEL_61;
    }
  }

  unint64_t v66 = (os_log_s *)v9[335];
  if (os_log_type_enabled(v66, OS_LOG_TYPE_FAULT))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 134218752;
    *(void *)BOOL v131 = 12LL;
    *(_WORD *)&v131[8] = 1024;
    *(_DWORD *)&v131[10] = (unsigned __int16)v104;
    *(_WORD *)&v131[14] = 1024;
    *(_DWORD *)&v131[16] = WORD1(v104);
    *(_WORD *)&v131[20] = 1024;
    *(_DWORD *)&v131[22] = v105;
    _os_log_impl( (void *)&_mh_execute_header,  v66,  OS_LOG_TYPE_FAULT,  "TILE: Invalid section signature, readBytes, %lu, section, signature, 0x%x, sectionId, %d, sizeBytes, %d",  buf,  0x1Eu);
  }

  if (sub_1002921D0(115, 0))
  {
    double v67 = v17;
    bzero(buf, 0x65CuLL);
    __int16 v68 = p_vtable;
    double v69 = v9[335];
    uint64_t v108 = 134218752;
    *(void *)unint64_t v109 = 12LL;
    *(_WORD *)&v109[8] = 1024;
    LODWORD(v11sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = (unsigned __int16)v104;
    WORD2(v11sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 1024;
    *(_DWORD *)((char *)&v110 + 6) = WORD1(v104);
    WORD5(v11sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 1024;
    HIDWORD(v11sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v105;
    double v70 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v69,  17LL,  "TILE: Invalid section signature, readBytes, %lu, section, signature, 0x%x, sectionId, %d, sizeBytes, %d",  &v108,  30,  (_DWORD)v95,  (_DWORD)v97);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLTileFileWithTraversal::traverseTileFile(FILE *, const TraverseDetails &)",  "%s\n",  v70);
    goto LABEL_78;
  }

  unint64_t v59 = (double ****)v97;
  uint64_t v58 = v98;
  if (a5 > ((char *)v98 - (_BYTE *)v97) >> 3 || a4 > 0x63 || ((char *)v89 - (_BYTE *)v88) >> 3 < a5)
  {
    if (v97 != v98)
    {
      uint64_t v60 = v89;
      if (v88 != v89)
      {
        while (v88 == v60)
        {
LABEL_120:
          if (++v59 == v58) {
            goto LABEL_125;
          }
        }

        uint64_t v60 = (double ****)v88;
        while (1)
        {
          if (!*(_BYTE *)a6)
          {
            unint64_t v61 = **v59;
            __int16 v62 = **v60;
            double v63 = *(unsigned __int8 **)(a6 + 8);
            strcpy(v105.i8, "FFFFFFFFF");
            sub_100858868(v61, v62, (unsigned __int8 *)&v105, v63);
            if (!v105.i8[9])
            {
              uint64_t v64 = v105.u8[0] != 84 && v105.u8[0] - 48 >= 0xA;
              if (!v64
                || v105.u8[1] == 84
                || v105.u8[1] - 48 <= 9
                || v105.u8[3] == 84
                || v105.u8[3] - 48 < 0xA)
              {
                goto LABEL_173;
              }
            }
          }

          if (++v60 == v89)
          {
            uint64_t v58 = v98;
            goto LABEL_120;
          }
        }
      }
    }
  }

  else if ((sub_100857CC8(&v102, &v97, &v88, a4 + 1, a5, a6, a7, a8, a9, a10, a11) & 1) == 0)
  {
    goto LABEL_155;
  }

  uint64_t v60 = (double ****)v98;
  unint64_t v59 = v99;
  if (a5 > ((char *)v99 - (_BYTE *)v98) >> 3 || a4 > 0x63 || ((char *)v90 - (_BYTE *)v89) >> 3 < a5)
  {
    if (v98 != v99)
    {
      unint64_t v61 = v90;
      if (v89 != v90)
      {
        while (v89 == v61)
        {
LABEL_120:
          if (++v60 == v59) {
            goto LABEL_125;
          }
        }

        unint64_t v61 = (double ****)v89;
        while (1)
        {
          if (!*(_BYTE *)a6)
          {
            __int16 v62 = **v60;
            double v63 = **v61;
            uint64_t v64 = *(unsigned __int8 **)(a6 + 8);
            strcpy(v106.i8, "FFFFFFFFF");
            sub_100858868(v62, v63, (unsigned __int8 *)&v106, v64);
            if (!v106.i8[9])
            {
              double v65 = v106.u8[0] != 84 && v106.u8[0] - 48 >= 0xA;
              if (!v65
                || v106.u8[1] == 84
                || v106.u8[1] - 48 <= 9
                || v106.u8[3] == 84
                || v106.u8[3] - 48 < 0xA)
              {
                goto LABEL_173;
              }
            }
          }

          if (++v61 == v90)
          {
            unint64_t v59 = v99;
            goto LABEL_120;
          }
        }
      }
    }
  }

  else if ((sub_100857134((double *)&v103, (uint64_t **)&v98, (uint64_t **)&v89, a4 + 1, a5, a6, a7, a8, a9, a10, a11) & 1) == 0)
  {
    goto LABEL_155;
  }
}

  uint64_t v49 = *(void *)(a1 + 104);
  if (!v49) {
    uint64_t v49 = *(void *)(qword_1019A1D48 + 104);
  }
  else {
    uint64_t v50 = 0;
  }
  *(_DWORD *)(v49 + 12) = v50;
  uint64_t v4 = (v4 + v50 + 3);
  uint64_t v3 = *(_DWORD *)(a1 + 224);
  if ((v3 & 0x8000) != 0)
  {
LABEL_108:
    int v51 = *(void *)(a1 + 112);
    if (!v51) {
      int v51 = *(void *)(qword_1019A1D48 + 112);
    }
    unint64_t v52 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100BC8E68(v51, a2);
    unsigned int v53 = (int)v52;
    else {
      unint64_t v54 = 1;
    }
    uint64_t v4 = (v4 + v53 + v54 + 2);
    uint64_t v3 = *(_DWORD *)(a1 + 224);
  }

        __int16 v62 = 0;
        goto LABEL_103;
      }

      unint64_t v54 = 0;
LABEL_119:
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_101877138);
      }
      double v67 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        __int16 v68 = a2[1];
        double v69 = a2[2];
        double v70 = a2[11];
        unsigned int v71 = a2[12];
        int v72 = a2[6];
        double v73 = a2[7];
        unint64_t v74 = a2[13];
        uint64_t v75 = a2[14];
        *(_DWORD *)std::stringbuf::string_type buf = 134351617;
        *(double *)unint64_t v136 = a5;
        *(_WORD *)&v136[8] = 2049;
        *(void *)unint64_t v137 = v68;
        *(_WORD *)&v137[8] = 2049;
        unint64_t v138 = v69;
        __int16 v139 = 2049;
        unint64_t v140 = v70;
        uint64_t v141 = 2049;
        uint64_t v142 = v71;
        uint64_t v143 = 2050;
        uint64_t v144 = v72;
        float v145 = 2050;
        uint64_t v146 = v73;
        int v147 = 2050;
        int v148 = v74;
        float v149 = 2050;
        float v150 = v75;
        float v151 = 1026;
        float v152 = v24;
        unint64_t v153 = 1026;
        float v154 = v54;
        _os_log_impl( (void *)&_mh_execute_header,  v67,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}.1lf,TEPA,ell,%{private}.7lf,%{private}.7lf,sll,%{private}.7lf,%{private}.7lf,alt,%{public}.1lf, vUnc,%{public}.1lf,length,%{public}.2lf,distFromCurrentParticle,%{public}.1lf,iterCountOut,%{public}d,iterCountIn,%{public}d",  buf,  0x68u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_101877138);
        }
        double v84 = a2[1];
        int v85 = a2[2];
        uint64_t v86 = a2[11];
        uint64_t v87 = a2[12];
        BOOL v88 = a2[6];
        uint64_t v89 = a2[7];
        double v90 = a2[13];
        __int16 v91 = a2[14];
        *(_DWORD *)uint64_t v111 = 134351617;
        *(double *)&v111[4] = a5;
        *(_WORD *)&v111[12] = 2049;
        *(void *)&v111[14] = v84;
        *(_WORD *)&v111[22] = 2049;
        *(void *)&v111[24] = v85;
        *(_WORD *)__int128 v112 = 2049;
        *(void *)&v112[2] = v86;
        *(_WORD *)&v112[10] = 2049;
        *(void *)&v112[12] = v87;
        *(_WORD *)&v112[20] = 2050;
        *(void *)&v112[22] = v88;
        *(_WORD *)&v112[30] = 2050;
        *(void *)&v112[32] = v89;
        LOWORD(v113[0]) = 2050;
        *(void *)((char *)v113 + 2) = v90;
        HIWORD(v113[2]) = 2050;
        *(void *)&v113[3] = v91;
        LOWORD(v113[5]) = 1026;
        *(_DWORD *)((char *)&v113[5] + 2) = v24;
        HIWORD(v113[6]) = 1026;
        v113[7] = v54;
        LODWORD(v9_Block_object_dispose((const void *)(v30 - 184), 8) = 104;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}.1lf,TEPA,ell,%{private}.7lf,%{private}.7lf,sll,%{private}.7lf,%{private}.7lf,alt,%{public}.1lf, vUnc,%{public}.1lf,length,%{public}.2lf,distFromCurrentParticle,%{public}.1lf,iterCountOut,%{public}d,iterCountIn,%{public}d",  v111,  v98);
        double v93 = (uint8_t *)v92;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMapMatcherCommon::SolutionPropagator::findTunnelEndPoint(double, CLGpsAssistant_Type::TunnelEnd PositionAssistance &, CLMapGeometryPtr, BOOL)",  "%s\n",  v92);
        if (v93 != buf) {
          free(v93);
        }
      }
    }
  }

  _Q0.n128_u64[0] = *a2;
  uint64_t v48 = *(double *)a2 > 0.0;
  double v76 = v108;
  if (v108)
  {
    double v77 = (unint64_t *)&v108->__shared_owners_;
    do
      uint64_t v78 = __ldaxr(v77);
    while (__stlxr(v78 - 1, v77));
    if (!v78)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v76->__on_zero_shared)(v76, _Q0);
      std::__shared_weak_count::__release_weak(v76);
    }
  }

  return v48;
}

        double v67 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_ERROR))
        {
          (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)v56 + 16LL))(buf, v56);
          __int16 v68 = v151[9] >= 0 ? buf : *(_BYTE **)buf;
          *(_DWORD *)uint64_t v141 = 136380675;
          *(void *)&v141[4] = v68;
          _os_log_impl( (void *)&_mh_execute_header,  v67,  OS_LOG_TYPE_ERROR,  "TileMgr, tileDecompressionCompleted, where the file, was it deleted, %{private}s, #CloneMe",  v141,  0xCu);
          if ((v151[9] & 0x80000000) != 0) {
            operator delete(*(void **)buf);
          }
        }

        if (sub_1002921D0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          unint64_t v118 = qword_101934858;
          (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)v56 + 16LL))(v141, v56);
          if (v144 >= 0) {
            unint64_t v119 = v141;
          }
          else {
            unint64_t v119 = *(_BYTE **)v141;
          }
          unint64_t v137 = 136380675;
          unint64_t v138 = v119;
          LODWORD(v122) = 12;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v118,  16LL,  "TileMgr, tileDecompressionCompleted, where the file, was it deleted, %{private}s, #CloneMe",  &v137,  v122);
          uint64_t v121 = v120;
          if (v144 < 0) {
            operator delete(*(void **)v141);
          }
          sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLTilesManager::tileDecompressionCompleted(CLFileDownload *, BOOL, void *, CFAbsoluteTime)",  "%s\n",  v121);
          if (v121 != buf) {
            free(v121);
          }
          double v42 = v128;
        }

        goto LABEL_111;
      }

      bzero(buf, 0x65CuLL);
      if (qword_101934830 == -1)
      {
LABEL_132:
        uint64_t v81 = qword_101934838;
        (*(void (**)(void **__return_ptr, uint64_t))(*(void *)v12 + 16LL))(v132, v12);
        double v82 = SHIBYTE(v133);
        double v83 = (void **)v132[0];
        double v84 = *(void *)(sub_10096B584(v12) + 96);
        int v85 = v132;
        uint64_t v86 = *(_DWORD *)(a1 + 424);
        if (v82 < 0) {
          int v85 = v83;
        }
        *(_DWORD *)std::stringbuf::string_type __p = 136316162;
        *(void *)&__p[4] = v85;
        *(_WORD *)&_BYTE __p[12] = 1024;
        *(_DWORD *)&__p[14] = a3;
        *(_WORD *)&__p[18] = 1024;
        *(_DWORD *)&_BYTE __p[20] = v84;
        *(_WORD *)uint64_t v146 = 1024;
        *(_DWORD *)&v146[2] = v4 == -1100;
        *(_WORD *)&v146[6] = 1024;
        *(_DWORD *)&v146[8] = v86;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v81,  2LL,  "TILE: tileDecompressionCompleted, tile, %s, decompress done, tileDownloadWasSuccessful, %d, NSURLErrorCode, %d , tileDoesNotExist, %d, reachability, %d",  __p,  36,  v123,  v125,  (_DWORD)v126);
        BOOL v88 = v87;
        if (SHIBYTE(v133) < 0) {
          operator delete(v132[0]);
        }
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLTilesManager::tileDecompressionCompleted(CLFileDownload *, BOOL, void *, CFAbsoluteTime)",  "%s\n",  v88);
        if (v88 != buf) {
          free(v88);
        }
        goto LABEL_30;
      }

    sub_10000AE14((uint64_t)v319);
LABEL_58:
    uint64_t v24 = 0LL;
    goto LABEL_59;
  }

  *(_DWORD *)&v319[16] = 0;
  *(_WORD *)&v319[20] = *((unsigned __int8 *)v18 + 48);
  __int128 v19 = *(double *)(v12 + 856);
  *(float *)&v321 = v19;
  double v20 = *(double *)(v12 + 848);
  *(void *)&v322 = *(void *)(v12 + 840);
  *((double *)&v322 + 1) = v20;
  v323 = *(void *)(v12 + 960);
  if (*(double *)&v322 == 0.0 && v20 == 0.0)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_1018819B8);
    }
    unint64_t v21 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      LOWORD(buf.__r_.__value_.__l.__data_) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_ERROR,  "CLMM,Unexpected outgoing snapLat==snapLon==0",  (uint8_t *)&buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_1018819B8);
      }
      v314[0] = 0;
      LODWORD(v245) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,Unexpected outgoing snapLat==snapLon==0",  v314,  v245);
      unint64_t v23 = (std::string *)v22;
      sub_10029211C("Generic", 1LL, 0, 0LL, "BOOL CLParticleMapMatcher::extractSolution()", "%s\n", v22);
      goto LABEL_481;
    }

    goto LABEL_102;
  }

  *(void *)v311 = 0LL;
  v255 = 0LL;
  v256 = 0.0;
  v253 = 0LL;
  v254 = 0LL;
  v252 = 0LL;
  sub_100D533A0( a1,  a1 + 656,  (uint64_t)v319,  v249,  v311,  &v256,  (double *)&v255,  (double *)&v254,  &v253,  (double *)&v252,  0);
  double v44 = sub_100D504C0(*(double *)(v12 + 5136) - *(float *)&v321);
  int v45 = *(double *)(a1 + 1232);
  if (v45 >= 0.0)
  {
    int v174 = sub_100D504C0(v45 - *(float *)&v321);
    unint64_t v46 = 0;
    unint64_t v47 = v174 < 25.0;
    uint64_t v48 = v174 < 25.0 || *(double *)(v12 + 248) >= 7.5;
    if (v48 && v44 >= 45.0 && v174 >= 25.0)
    {
      if (*(double *)(a1 + 1320) >= 20.0)
      {
        unint64_t v46 = 0;
        unint64_t v47 = 0;
      }

      else
      {
        double v175 = sub_100D504C0(*(double *)(v12 + 5136) - *(double *)(a1 + 1232));
        unint64_t v47 = 0;
        unint64_t v46 = v175 < 10.0;
        uint64_t v48 = v175 >= 10.0;
      }
    }
  }

  else
  {
    unint64_t v46 = 0;
    unint64_t v47 = 0;
    uint64_t v48 = 1;
  }

  if (*(_BYTE *)(a1 + 96))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_1018819B8);
    }
    uint64_t v49 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v50 = *(void *)(a1 + 1136);
      int v51 = *(void *)(v12 + 5136);
      unint64_t v52 = *(double *)(a1 + 1232);
      unsigned int v53 = *(void *)(v12 + 248);
      unint64_t v54 = *(void *)(a1 + 1320);
      LODWORD(buf.__r_.__value_.__l.__data_) = 134351360;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v50;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2050;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v51;
      HIWORD(buf.__r_.__value_.__r.__words[2]) = 2050;
      v325 = *(float *)&v321;
      v326 = 2050;
      v327 = v52;
      v328 = 2050;
      v329 = v53;
      v330 = 1026;
      v331 = v48;
      v332 = 2050;
      v333 = v54;
      v334 = 1026;
      v335 = v44 >= 45.0;
      v336 = 1026;
      v337 = v47;
      v338 = 1026;
      v339 = v46;
      _os_log_impl( (void *)&_mh_execute_header,  v49,  OS_LOG_TYPE_DEBUG,  "CLMM,Time,%{public}.1lf,snapCourse,%{public}.2lf,outgoingSnapCourse,%{public}.2lf, crumbCourse,%{public}.2lf, ou tgoingDistanceFromIntersection,%{public}.2lf,outgoingCondition,%{public}d,crumbCourseUnc,%{public}.2lf,significa ntCourseChange,%{public}d,isCourseAligned,%{public}d, isMeanCandidateAlignedWithCourse,%{public}d",  (uint8_t *)&buf,  0x56u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_1018819B8);
      }
      v211 = *(void *)(a1 + 1136);
      v212 = *(void *)(v12 + 5136);
      v213 = *(void *)(a1 + 1232);
      v214 = *(void *)(v12 + 248);
      v215 = *(void *)(a1 + 1320);
      *(_DWORD *)v314 = 134351360;
      *(void *)&v314[2] = v211;
      v314[6] = 2050;
      *(void *)&v314[7] = v212;
      v314[11] = 2050;
      *(double *)&v314[12] = *(float *)&v321;
      v314[16] = 2050;
      *(void *)&v314[17] = v213;
      v314[21] = 2050;
      *(void *)&v314[22] = v214;
      v314[26] = 1026;
      *(_DWORD *)&v314[27] = v48;
      v314[29] = 2050;
      *(void *)&v314[30] = v215;
      v314[34] = 1026;
      *(_DWORD *)&v314[35] = v44 >= 45.0;
      v314[37] = 1026;
      *(_DWORD *)&v314[38] = v47;
      v314[40] = 1026;
      v315 = v46;
      LODWORD(v245) = 86;
      _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,Time,%{public}.1lf,snapCourse,%{public}.2lf,outgoingSnapCourse,%{public}.2lf, crumbCourse,%{public}.2lf, ou tgoingDistanceFromIntersection,%{public}.2lf,outgoingCondition,%{public}d,crumbCourseUnc,%{public}.2lf,significa ntCourseChange,%{public}d,isCourseAligned,%{public}d, isMeanCandidateAlignedWithCourse,%{public}d",  v314,  v245);
      v217 = (std::string *)v216;
      sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLParticleMapMatcher::extractSolution()", "%s\n", v216);
      if (v217 != &buf) {
        free(v217);
      }
    }
  }

  if (*(double *)(a1 + 1792) < 8.05555556 && (*(int *)(v12 + 196) > 1 || *(double *)(a1 + 1208) > 10.0))
  {
    unint64_t v55 = 15.0;
    if (*(double *)(a1 + 1224) > 0.0
      && !*(_BYTE *)(a1 + 1356)
      && vabdd_f64(*(double *)(a1 + 1136), *(double *)(a1 + 3144)) < 20.0)
    {
      unint64_t v55 = 7.5;
    }

    if (v44 >= 45.0 && v47) {
      int v56 = v55 * 0.6;
    }
    else {
      int v56 = v55;
    }
    if (!*(_BYTE *)(a1 + 96)) {
      goto LABEL_127;
    }
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_1018819B8);
    }
    double v57 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v58 = *(void *)(a1 + 1136);
      unint64_t v59 = *(void *)(v12 + 248);
      LODWORD(buf.__r_.__value_.__l.__data_) = 134349568;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v58;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2050;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v59;
      HIWORD(buf.__r_.__value_.__r.__words[2]) = 2050;
      v325 = v56;
      _os_log_impl( (void *)&_mh_execute_header,  v57,  OS_LOG_TYPE_DEBUG,  "CLMM,Time,%{public}.1lf,exit distance check,distance,%{public}.2lf,exitDistance,%{public}.2lf",  (uint8_t *)&buf,  0x20u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_1018819B8);
      }
      v231 = *(void *)(a1 + 1136);
      v232 = *(void *)(v12 + 248);
      *(_DWORD *)v314 = 134349568;
      *(void *)&v314[2] = v231;
      v314[6] = 2050;
      *(void *)&v314[7] = v232;
      v314[11] = 2050;
      *(double *)&v314[12] = v56;
      LODWORD(v245) = 32;
      _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,Time,%{public}.1lf,exit distance check,distance,%{public}.2lf,exitDistance,%{public}.2lf",  v314,  v245);
      v234 = (std::string *)v233;
      sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLParticleMapMatcher::extractSolution()", "%s\n", v233);
      if (v234 != &buf) {
        free(v234);
      }
      if (v48) {
LABEL_128:
      }
        uint64_t v48 = *(double *)(v12 + 248) > v56;
    }

    else
    {
LABEL_127:
      if (v48) {
        goto LABEL_128;
      }
    }
  }

  uint64_t v60 = v44 >= 45.0 && v47;
  if (v60 && *(double *)(a1 + 1320) < 20.0)
  {
    if (!v48) {
      goto LABEL_140;
    }
LABEL_138:
    unint64_t v61 = *(_BYTE *)(a1 + 1356) == 0;
  }

  else
  {
LABEL_140:
    unint64_t v61 = 0;
  }

  *(_BYTE *)(a1 + 165sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v61;
  if (*(_BYTE *)(a1 + 96))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_1018819B8);
    }
    __int16 v62 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      double v63 = *(void *)(a1 + 1136);
      LODWORD(buf.__r_.__value_.__l.__data_) = 134349312;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v63;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 1026;
      *(_DWORD *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v61;
      _os_log_impl( (void *)&_mh_execute_header,  v62,  OS_LOG_TYPE_DEBUG,  "CLMM,Time,%{public}.1lf,outgoing condition,%{public}d",  (uint8_t *)&buf,  0x12u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_1018819B8);
      }
      v218 = *(void *)(a1 + 1136);
      *(_DWORD *)v314 = 134349312;
      *(void *)&v314[2] = v218;
      v314[6] = 1026;
      *(_DWORD *)&v314[7] = v61;
      LODWORD(v245) = 18;
      _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,Time,%{public}.1lf,outgoing condition,%{public}d",  v314,  v245);
      v220 = (std::string *)v219;
      sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLParticleMapMatcher::extractSolution()", "%s\n", v219);
      if (v220 != &buf) {
        free(v220);
      }
    }
  }

  *(_BYTE *)(a1 + 1649) = 1;
  sub_10000AE14((uint64_t)v319);
  uint64_t v4 = (double **)(a1 + 984);
LABEL_148:
  v246 = v4;
  memset(v314, 0, 20);
  v314[10] = 1;
  *(_DWORD *)&v314[12] = 0;
  v318 = 0LL;
  __src = 0LL;
  v317 = 0LL;
  memset(&v314[16], 0, 49);
  uint64_t v64 = *(double *)(a1 + 1320);
  if (v64 < 19.0)
  {
    *(void *)(a1 + 132sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0x4033000000000000LL;
    sub_100D518C8(a1, (uint64_t)v249);
  }

  double v65 = *(void *)(a1 + 864);
  if (v65 != *(void *)(a1 + 872))
  {
    v247 = v12 + 224;
    do
    {
      *(_BYTE *)(v65 + 8sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0;
      sub_100D5DAC4((uint64_t *)v65, (uint64_t)&buf);
      if (sub_100BDA328((uint64_t)&buf, v12 + 32))
      {
        if (*(_BYTE *)(a1 + 1650) || !*(_BYTE *)(v12 + 200) || !*(_BYTE *)(v12 + 192)) {
          goto LABEL_154;
        }
        unsigned int v71 = *(double *)(v65 + 48);
        int v72 = *(double *)(v12 + 528);
        if (*(_BYTE *)(v12 + 48))
        {
          if (v71 <= v72) {
            goto LABEL_154;
          }
        }

        else if (v71 >= v72)
        {
          goto LABEL_154;
        }
      }

      else
      {
        if (*(_BYTE *)(a1 + 1650))
        {
          if (*(_BYTE *)(v12 + 200))
          {
            if (*(_BYTE *)(v12 + 192))
            {
              sub_100D5DAC4((uint64_t *)v65, (uint64_t)&buf);
              if (sub_100BDA328((uint64_t)&buf, v247))
              {
                double v69 = *(double *)(v65 + 48);
                double v70 = *(double *)(v12 + 1120);
                if (*(_BYTE *)(v12 + 240))
                {
                  if (v69 >= v70) {
                    goto LABEL_154;
                  }
                }

                else if (v69 <= v70)
                {
                  goto LABEL_154;
                }
              }
            }
          }
        }

        if (*(_BYTE *)(v12 + 200))
        {
          if (!*(_BYTE *)(v12 + 192))
          {
            sub_100D5DAC4((uint64_t *)v65, (uint64_t)&buf);
            if (sub_100BDA328((uint64_t)&buf, v247))
            {
              double v73 = *(double *)(v65 + 48);
              unint64_t v74 = *(double *)(v12 + 1120);
              if (*(_BYTE *)(v12 + 240))
              {
                if (v73 >= v74) {
                  goto LABEL_181;
                }
              }

              else if (v73 <= v74)
              {
LABEL_181:
                *(_BYTE *)(v65 + 8sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 1;
LABEL_154:
                *(_BYTE *)(v65 + 8sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 1;
                sub_100D53308(a1, a1 + 656, v65, v249, (void *)(v65 + 56), (void *)(v65 + 72));
                if (*(double *)(v65 + 56) > *(double *)&v314[28])
                {
                  sub_1000F2F30(v314, (uint64_t *)v65);
                  unint64_t v66 = *(void *)(v65 + 48);
                  double v67 = *(_OWORD *)(v65 + 32);
                  *(_OWORD *)&v314[8] = *(_OWORD *)(v65 + 16);
                  *(_OWORD *)&v314[16] = v67;
                  *(void *)&v314[24] = v66;
                  __int16 v68 = *(_OWORD *)(v65 + 56);
                  *(_OWORD *)((char *)&v314[32] + 1) = *(_OWORD *)(v65 + 65);
                  *(_OWORD *)&v314[28] = v68;
                  if ((_WORD *)v65 != v314) {
                    sub_100BDD0F8( (char *)&__src,  *(char **)(v65 + 88),  *(void *)(v65 + 96),  0x8E38E38E38E38E39LL * ((uint64_t)(*(void *)(v65 + 96) - *(void *)(v65 + 88)) >> 3));
                  }
                }

                goto LABEL_178;
              }
            }
          }
        }
      }

      *(_BYTE *)(v65 + 8sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0;
LABEL_178:
      v65 += 112LL;
    }

    while (v65 != *(void *)(a1 + 872));
  }

  *(_BYTE *)(a1 + 100_Block_object_dispose((const void *)(v30 - 184), 8) = 1;
  sub_1000F2F30((void *)(a1 + 1016), (uint64_t *)v314);
  uint64_t v75 = *(_OWORD *)&v314[16];
  *(_OWORD *)(a1 + 1032) = *(_OWORD *)&v314[8];
  *(_OWORD *)(a1 + 104_Block_object_dispose((const void *)(v30 - 184), 8) = v75;
  *(void *)(a1 + 1064) = *(void *)&v314[24];
  *(_OWORD *)(a1 + 10sub_10000AE14(v1 - 72) = *(_OWORD *)&v314[28];
  *(_OWORD *)(a1 + 1081) = *(_OWORD *)((char *)&v314[32] + 1);
  if ((_WORD *)(a1 + 1016) != v314) {
    sub_100BDD0F8( (char *)(a1 + 1104),  (char *)__src,  (uint64_t)v317,  0x8E38E38E38E38E39LL * ((v317 - (_BYTE *)__src) >> 3));
  }
  if (*(_BYTE *)(a1 + 1650))
  {
    sub_100D5DAC4((uint64_t *)v314, (uint64_t)&buf);
    double v76 = (double *)(v12 + 224);
    if (sub_100BDA328(v12 + 224, (uint64_t)&buf))
    {
      double v77 = *(_OWORD *)(v12 + 688);
      uint64_t v78 = *(_OWORD *)(v12 + 704);
      id v79 = *(_OWORD *)(v12 + 736);
      *(_OWORD *)(a1 + 116sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(_OWORD *)(v12 + 720);
      *(_OWORD *)(a1 + 1176) = v79;
      *(_OWORD *)v249 = v77;
      *(_OWORD *)(a1 + 11memset(v19, 0, 44) = v78;
      double v80 = *(_OWORD *)(v12 + 752);
      uint64_t v81 = *(_OWORD *)(v12 + 768);
      double v82 = *(_OWORD *)(v12 + 800);
      *(_OWORD *)(a1 + 12sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = *(_OWORD *)(v12 + 784);
      *(_OWORD *)(a1 + 124sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v82;
      *(_OWORD *)(a1 + 1192) = v80;
      *(_OWORD *)(a1 + 120_Block_object_dispose((const void *)(v30 - 184), 8) = v81;
      std::string::operator=((std::string *)(a1 + 1256), (const std::string *)(v12 + 816));
      memcpy((void *)(a1 + 1280), (const void *)(v12 + 840), 0x118uLL);
      sub_1000F2F30(v248, (uint64_t *)(v12 + 56));
      if (*(_BYTE *)(a1 + 96) && *v248)
      {
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_1018819B8);
        }
        double v83 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
        {
          double v84 = *(void *)(a1 + 1136);
          int v85 = **(void **)(a1 + 1656);
          uint64_t v86 = *v76;
          LODWORD(buf.__r_.__value_.__l.__data_) = 134349569;
          *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v84;
          WORD2(buf.__r_.__value_.__r.__words[1]) = 2049;
          *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v85;
          HIWORD(buf.__r_.__value_.__r.__words[2]) = 2049;
          v325 = v86;
          _os_log_impl( (void *)&_mh_execute_header,  v83,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}.1lf,Using outgoing,incomingID,%{private}lld,outgoingID,%{private}lld",  (uint8_t *)&buf,  0x20u);
        }

        uint64_t v4 = v246;
        if (sub_1002921D0(115, 2))
        {
          bzero(&buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_1018819B8);
          }
          v190 = *(void *)(a1 + 1136);
          v191 = **(void **)(a1 + 1656);
          v192 = *v76;
          *(_DWORD *)v319 = 134349569;
          *(void *)&v319[4] = v190;
          *(_WORD *)&v319[12] = 2049;
          *(void *)&v319[14] = v191;
          v320 = 2049;
          v321 = v192;
          LODWORD(v245) = 32;
          _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}.1lf,Using outgoing,incomingID,%{private}lld,outgoingID,%{private}lld",  v319,  v245);
          v194 = (std::string *)v193;
          sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLParticleMapMatcher::extractSolution()", "%s\n", v193);
          if (v194 != &buf) {
            free(v194);
          }
          uint64_t v4 = v246;
        }
      }

      if (v64 >= 19.0) {
        goto LABEL_214;
      }
LABEL_213:
      *(double *)(a1 + 132sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v64;
      sub_100D518C8(a1, (uint64_t)v249);
      goto LABEL_214;
    }
  }

  if (*(_BYTE *)(v12 + 200))
  {
    if (!*(_BYTE *)(v12 + 192))
    {
      sub_100D5DAC4((uint64_t *)v314, (uint64_t)&buf);
      if (sub_100BDA328(v12 + 224, (uint64_t)&buf))
      {
        sub_1000F2F30(v248, (uint64_t *)(v12 + 56));
        if (*(_BYTE *)(a1 + 96))
        {
          if (*v248)
          {
            if (qword_1019348B0 != -1) {
              dispatch_once(&qword_1019348B0, &stru_1018819B8);
            }
            uint64_t v87 = (os_log_s *)qword_1019348B8;
            if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
            {
              BOOL v88 = *(void *)(a1 + 1136);
              uint64_t v89 = **(void **)(a1 + 1656);
              double v90 = **(double **)v314;
              LODWORD(buf.__r_.__value_.__l.__data_) = 134349569;
              *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v88;
              WORD2(buf.__r_.__value_.__r.__words[1]) = 2049;
              *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v89;
              HIWORD(buf.__r_.__value_.__r.__words[2]) = 2049;
              v325 = v90;
              _os_log_impl( (void *)&_mh_execute_header,  v87,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}.1lf,Using particle on outgoing,incomingID,%{private}lld,outgoingID,%{private}lld",  (uint8_t *)&buf,  0x20u);
            }

            uint64_t v4 = v246;
            if (sub_1002921D0(115, 2))
            {
              bzero(&buf, 0x65CuLL);
              if (qword_1019348B0 != -1) {
                dispatch_once(&qword_1019348B0, &stru_1018819B8);
              }
              v206 = *(void *)(a1 + 1136);
              v207 = **(void **)(a1 + 1656);
              v208 = **(double **)v314;
              *(_DWORD *)v319 = 134349569;
              *(void *)&v319[4] = v206;
              *(_WORD *)&v319[12] = 2049;
              *(void *)&v319[14] = v207;
              v320 = 2049;
              v321 = v208;
              LODWORD(v245) = 32;
              _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}.1lf,Using particle on outgoing,incomingID,%{private}lld,outgoingID,%{private}lld",  v319,  v245);
              v210 = (std::string *)v209;
              sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLParticleMapMatcher::extractSolution()", "%s\n", v209);
              if (v210 != &buf) {
                free(v210);
              }
              uint64_t v4 = v246;
            }
          }
        }
      }
    }
  }

  __int16 v91 = *(_OWORD *)(v12 + 4968);
  double v92 = *(_OWORD *)(v12 + 4984);
  double v93 = *(_OWORD *)(v12 + 5016);
  *(_OWORD *)(a1 + 116sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(_OWORD *)(v12 + 5000);
  *(_OWORD *)(a1 + 1176) = v93;
  *(_OWORD *)v249 = v91;
  *(_OWORD *)(a1 + 11memset(v19, 0, 44) = v92;
  uint64_t v94 = *(_OWORD *)(v12 + 5032);
  uint64_t v95 = *(_OWORD *)(v12 + 5048);
  unsigned int v96 = *(_OWORD *)(v12 + 5080);
  *(_OWORD *)(a1 + 12sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = *(_OWORD *)(v12 + 5064);
  *(_OWORD *)(a1 + 124sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v96;
  *(_OWORD *)(a1 + 1192) = v94;
  *(_OWORD *)(a1 + 120_Block_object_dispose((const void *)(v30 - 184), 8) = v95;
  std::string::operator=((std::string *)(a1 + 1256), (const std::string *)(v12 + 5096));
  memcpy((void *)(a1 + 1280), (const void *)(v12 + 5120), 0x118uLL);
  if (*(_BYTE *)(a1 + 96))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_1018819B8);
    }
    unsigned int v97 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      unsigned int v98 = *(void *)(a1 + 1136);
      sub_100D5DAC4((uint64_t *)v314, (uint64_t)&buf);
      *(_DWORD *)v319 = 134349313;
      *(void *)&v319[4] = v98;
      *(_WORD *)&v319[12] = 2049;
      *(void *)&v319[14] = buf.__r_.__value_.__r.__words[0];
      _os_log_impl( (void *)&_mh_execute_header,  v97,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}.1lf,bestParticleRoadID,%{private}lld",  v319,  0x16u);
    }

    uint64_t v4 = v246;
    if (sub_1002921D0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_1018819B8);
      }
      double v181 = qword_1019348B8;
      v182 = *(void *)(a1 + 1136);
      sub_100D5DAC4((uint64_t *)v314, (uint64_t)v319);
      *(_DWORD *)v311 = 134349313;
      *(void *)&v311[4] = v182;
      v312 = 2049;
      v313 = *(void *)v319;
      LODWORD(v245) = 22;
      _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v181,  2LL,  "CLMM,%{public}.1lf,bestParticleRoadID,%{private}lld",  v311,  v245);
      v184 = (std::string *)v183;
      sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLParticleMapMatcher::extractSolution()", "%s\n", v183);
      if (v184 != &buf) {
        free(v184);
      }
      uint64_t v4 = v246;
    }
  }

  if (v64 < 19.0 && !*(_BYTE *)(a1 + 1649)) {
    goto LABEL_213;
  }
LABEL_214:
  if (*(_BYTE *)(a1 + 1490))
  {
    unsigned int v99 = 0.0;
    if (*(_DWORD *)(a1 + 1528) == 1) {
      goto LABEL_260;
    }
  }

  if (*(_BYTE *)(a1 + 1649) && !*(_BYTE *)(a1 + 1650) || (BOOL v100 = *v4, *v4 == v5))
  {
    unsigned int v99 = 0.0;
    goto LABEL_260;
  }

  unsigned int v99 = 0.0;
  while (2)
  {
    __int128 v101 = v100[17];
    if (v101 == 0.0) {
      goto LABEL_248;
    }
    if (v101 > v99) {
      unsigned int v99 = v100[17];
    }
    double v102 = *(double *)(v12 + 136) / v101;
    __int128 v103 = v102 <= 1000000.0 ? v102 : 1000000.0;
    if (v103 > 3.0
      || (double v104 = sub_100D504C0(*(double *)(v12 + 5136) - v100[642]),
          *(void *)v311 = 0LL,
          v256 = 0.0,
          sub_100D2E36C( (double *)(a1 + 608),  (double *)v311,  &v256,  *(double *)(v12 + 5120),  *(double *)(v12 + 5128),  *(double *)(v12 + 5040),  *(double *)(v12 + 5136),  v100[640],  v100[641]),  v104 >= 35.0))
    {
LABEL_248:
      unint64_t v110 = (double *)*((void *)v100 + 1);
      if (v110)
      {
        do
        {
          uint64_t v111 = v110;
          unint64_t v110 = *(double **)v110;
        }

        while (v110);
      }

      else
      {
        do
        {
          uint64_t v111 = (double *)*((void *)v100 + 2);
          _ZF = *(void *)v111 == (void)v100;
          BOOL v100 = v111;
        }

        while (!_ZF);
      }

      BOOL v100 = v111;
      if (v111 == v5) {
        goto LABEL_260;
      }
      continue;
    }

    break;
  }

  if (*(_BYTE *)(a1 + 1848) && !*(_BYTE *)(a1 + 2233))
  {
    double v105 = fabs(v256);
    __int128 v106 = fabs(*(double *)v311);
    _NF = v106 > 2.0 && v105 < 1.5;
    if (!_NF && v106 <= 10.0)
    {
      if (*(_BYTE *)(a1 + 96))
      {
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_1018819B8);
        }
        unint64_t v109 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
        {
          LODWORD(buf.__r_.__value_.__l.__data_) = 134349824;
          *(double *)((char *)buf.__r_.__value_.__r.__words + 4) = v104;
          WORD2(buf.__r_.__value_.__r.__words[1]) = 2050;
          *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = *(void *)v311;
          HIWORD(buf.__r_.__value_.__r.__words[2]) = 2050;
          v325 = v103;
          v326 = 2050;
          v327 = v256;
          _os_log_impl( (void *)&_mh_execute_header,  v109,  OS_LOG_TYPE_DEBUG,  "CLMM,ambiguous solution not detected,fabsCourseDiff,%{public}.1lf,acrossTrack,%{public}.1lf,ratio,%{public}. 3lf,alongTrackToAlt,%{public}.1lf",  (uint8_t *)&buf,  0x2Au);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(&buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_1018819B8);
          }
          *(_DWORD *)v319 = 134349824;
          *(double *)&v319[4] = v104;
          *(_WORD *)&v319[12] = 2050;
          *(void *)&v319[14] = *(void *)v311;
          v320 = 2050;
          v321 = v103;
          LOWORD(v322) = 2050;
          *(double *)((char *)&v322 + 2) = v256;
          LODWORD(v245) = 42;
          _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,ambiguous solution not detected,fabsCourseDiff,%{public}.1lf,acrossTrack,%{public}.1lf,ratio,%{public}. 3lf,alongTrackToAlt,%{public}.1lf",  v319,  v245);
          __int128 v113 = (std::string *)v112;
          sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLParticleMapMatcher::extractSolution()", "%s\n", v112);
          if (v113 != &buf) {
            free(v113);
          }
        }
      }

      if (*(_BYTE *)(a1 + 1393)) {
        goto LABEL_420;
      }
      goto LABEL_248;
    }
  }

  *(_BYTE *)(a1 + 1393) = 1;
LABEL_420:
  if (*(_BYTE *)(a1 + 96))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_1018819B8);
    }
    int v173 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      LODWORD(buf.__r_.__value_.__l.__data_) = 134349824;
      *(double *)((char *)buf.__r_.__value_.__r.__words + 4) = v104;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2050;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = *(void *)v311;
      HIWORD(buf.__r_.__value_.__r.__words[2]) = 2050;
      v325 = v103;
      v326 = 2050;
      v327 = v256;
      _os_log_impl( (void *)&_mh_execute_header,  v173,  OS_LOG_TYPE_DEBUG,  "CLMM,ambiguous solution detected,fabsCourseDiff,%{public}.1lf,acrossTrack,%{public}.1lf,ratio,%{public}.3lf,alon gTrackToAlt,%{public}.1lf",  (uint8_t *)&buf,  0x2Au);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_1018819B8);
      }
      *(_DWORD *)v319 = 134349824;
      *(double *)&v319[4] = v104;
      *(_WORD *)&v319[12] = 2050;
      *(void *)&v319[14] = *(void *)v311;
      v320 = 2050;
      v321 = v103;
      LOWORD(v322) = 2050;
      *(double *)((char *)&v322 + 2) = v256;
      LODWORD(v245) = 42;
      _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,ambiguous solution detected,fabsCourseDiff,%{public}.1lf,acrossTrack,%{public}.1lf,ratio,%{public}.3lf,alon gTrackToAlt,%{public}.1lf",  v319,  v245);
      v222 = (std::string *)v221;
      sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLParticleMapMatcher::extractSolution()", "%s\n", v221);
      if (v222 != &buf) {
        free(v222);
      }
    }
  }

  *(_BYTE *)(a1 + 164_Block_object_dispose((const void *)(v30 - 184), 8) = 1;
  sub_100D5DB64(a1 + 1680, (uint64_t)(v100 + 10));
  *(_BYTE *)(a1 + 16sub_10000AE14(v1 - 72) = 1;
  if (*(_BYTE *)(a1 + 1848) && !*(_BYTE *)(a1 + 2233)) {
    *(void *)(a1 + 3152) = *(void *)(a1 + 1136);
  }
LABEL_260:
  if (*(_BYTE *)(a1 + 1393))
  {
    __int128 v114 = *(uint64_t **)(a1 + 4048);
    __int128 v115 = *(uint64_t **)(a1 + 4056);
    while (v114 != v115)
    {
      sub_100D5DAC4((uint64_t *)(a1 + 1016), (uint64_t)&buf);
      __int16 v116 = (std::__shared_weak_count *)v114[1];
      v250 = *v114;
      v251 = v116;
      if (v116)
      {
        p_shared_owners = (unint64_t *)&v116->__shared_owners_;
        do
          unint64_t v118 = __ldxr(p_shared_owners);
        while (__stxr(v118 + 1, p_shared_owners));
      }

      sub_100BDA324((uint64_t)v319, (uint64_t)&v250, *((_BYTE *)v114 + 20));
      unint64_t v119 = sub_100BDA328((uint64_t)&buf, (uint64_t)v319);
      __int16 v120 = v251;
      if (v251)
      {
        uint64_t v121 = (unint64_t *)&v251->__shared_owners_;
        do
          __int128 v122 = __ldaxr(v121);
        while (__stlxr(v122 - 1, v121));
        if (!v122)
        {
          ((void (*)(std::__shared_weak_count *))v120->__on_zero_shared)(v120);
          std::__shared_weak_count::__release_weak(v120);
        }
      }

      if (v119)
      {
        *(_BYTE *)(a1 + 1393) = 0;
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_1018819B8);
        }
        __int128 v123 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
        {
          __int128 v124 = *(void *)(a1 + 1136);
          LODWORD(buf.__r_.__value_.__l.__data_) = 134349056;
          *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v124;
          _os_log_impl( (void *)&_mh_execute_header,  v123,  OS_LOG_TYPE_DEBUG,  "%{public}.1lf,CLMM,ambiguity reverted using route-hints",  (uint8_t *)&buf,  0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(&buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_1018819B8);
          }
          v187 = *(void *)(a1 + 1136);
          *(_DWORD *)v319 = 134349056;
          *(void *)&v319[4] = v187;
          LODWORD(v245) = 12;
          _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "%{public}.1lf,CLMM,ambiguity reverted using route-hints",  v319,  v245);
          v189 = (std::string *)v188;
          sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLParticleMapMatcher::extractSolution()", "%s\n", v188);
          if (v189 != &buf) {
            free(v189);
          }
        }

        break;
      }

      v114 += 7;
    }
  }

  if (*(_BYTE *)(a1 + 1848)
    && *(_BYTE *)(a1 + 2233)
    && !*(_BYTE *)(a1 + 1393)
    && *(double *)(a1 + 1136) - *(double *)(a1 + 3152) < 3.1)
  {
    if (*(_BYTE *)(a1 + 96))
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_1018819B8);
      }
      __int128 v125 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        LOWORD(buf.__r_.__value_.__l.__data_) = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v125,  OS_LOG_TYPE_DEBUG,  "CLMM,ambiguous solution hysteresis",  (uint8_t *)&buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_1018819B8);
        }
        *(_WORD *)v319 = 0;
        LODWORD(v245) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,ambiguous solution hysteresis",  v319,  v245);
        v205 = (std::string *)v204;
        sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLParticleMapMatcher::extractSolution()", "%s\n", v204);
        if (v205 != &buf) {
          free(v205);
        }
      }
    }

    *(_BYTE *)(a1 + 1393) = 1;
    *(_BYTE *)(a1 + 164_Block_object_dispose((const void *)(v30 - 184), 8) = 1;
    *(_BYTE *)(a1 + 16sub_10000AE14(v1 - 72) = 0;
  }

  int v126 = *(double *)&v314[28];
  *(void *)(a1 + 1616) = *(void *)&v314[28];
  if (v99 <= 0.0)
  {
    __int128 v127 = *(double *)(a1 + 1632);
  }

  else
  {
    __int128 v127 = v126 / v99;
    *(double *)(a1 + 1632) = v127;
    if (v127 > 1000000.0)
    {
      *(void *)(a1 + 1632) = 0x412E848000000000LL;
      __int128 v127 = 1000000.0;
    }
  }

  *(_DWORD *)(a1 + 140_Block_object_dispose((const void *)(v30 - 184), 8) = 1;
  __int128 v128 = *(void *)&v314[16];
  __int128 v129 = *(void *)&v314[20];
  *(void *)(a1 + 128sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(void *)&v314[16];
  *(void *)(a1 + 12sub_1011C52D0(v16 - 88) = v129;
  __int128 v130 = *(float *)&v314[12];
  *(double *)(a1 + 1296) = *(float *)&v314[12];
  *(void *)(a1 + 1416) = v128;
  *(void *)(a1 + 14sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v129;
  *(double *)(a1 + 1432) = v130;
  BOOL v131 = *(void *)v314;
  *(void *)(a1 + 124_Block_object_dispose((const void *)(v30 - 184), 8) = *(void *)(*(void *)v314 + 20LL);
  *(void *)(a1 + 140sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(void *)&v314[24];
  *(float *)(a1 + 1304) = (float)v11;
  __int16 v132 = v127;
  *(float *)(a1 + 130_Block_object_dispose((const void *)(v30 - 184), 8) = v132;
  else {
    std::stringbuf::string_type buf = *(std::string *)(v131 + 48);
  }
  std::string::operator=((std::string *)(a1 + 1256), &buf);
  *(void *)(a1 + 124sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = **(void **)v314;
  unsigned int v133 = *(double *)(a1 + 1232);
  uint64_t v134 = -1.0;
  if (v133 >= 0.0) {
    uint64_t v134 = sub_100D504C0(v133 - *(double *)(a1 + 1296));
  }
  *(double *)(a1 + 160sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v134;
  if (!*(_BYTE *)(a1 + 1357) && !*(_BYTE *)(a1 + 816))
  {
    uint64_t v141 = *(double *)(a1 + 824) - *(double *)(a1 + 832);
    if (v141 >= 0.0 && v141 < 30.0)
    {
      if (*(_BYTE *)(a1 + 96))
      {
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_1018819B8);
        }
        uint64_t v142 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v143 = *(unsigned __int8 *)(a1 + 1648);
          LODWORD(buf.__r_.__value_.__l.__data_) = 67240192;
          HIDWORD(buf.__r_.__value_.__r.__words[0]) = v143;
          _os_log_impl( (void *)&_mh_execute_header,  v142,  OS_LOG_TYPE_DEBUG,  "CLMM,dismounted recently,doNotSnapCourse,%{public}d",  (uint8_t *)&buf,  8u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(&buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_1018819B8);
          }
          uint64_t v144 = *(unsigned __int8 *)(a1 + 1648);
          *(_DWORD *)v319 = 67240192;
          *(_DWORD *)&v319[4] = v144;
          LODWORD(v245) = 8;
          _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,dismounted recently,doNotSnapCourse,%{public}d",  v319,  v245);
          uint64_t v146 = (std::string *)v145;
          sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLParticleMapMatcher::extractSolution()", "%s\n", v145);
          if (v146 != &buf) {
            free(v146);
          }
        }
      }

      goto LABEL_409;
    }
  }

  unint64_t v135 = sub_100D2DBDC( (double *)(a1 + 608),  *(double *)(a1 + 1184),  *(double *)(a1 + 1192),  *(double *)(a1 + 2024),  *(double *)(a1 + 2032),  *(double *)(a1 + 1200));
  unint64_t v136 = sub_100D5B8C8(a1, 35.0);
  if (*(_BYTE *)(a1 + 96))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_1018819B8);
    }
    unint64_t v137 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      LODWORD(buf.__r_.__value_.__l.__data_) = 134349312;
      *(double *)((char *)buf.__r_.__value_.__r.__words + 4) = v136;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2050;
      *(double *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v135;
      _os_log_impl( (void *)&_mh_execute_header,  v137,  OS_LOG_TYPE_DEBUG,  "CLMM,distToNextMulti,%{public}.1lf, distFromPriorCrumb,%{public}.1lf",  (uint8_t *)&buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_1018819B8);
      }
      *(_DWORD *)v319 = 134349312;
      *(double *)&v319[4] = v136;
      *(_WORD *)&v319[12] = 2050;
      *(double *)&v319[14] = v135;
      LODWORD(v245) = 22;
      _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,distToNextMulti,%{public}.1lf, distFromPriorCrumb,%{public}.1lf",  v319,  v245);
      __int16 v180 = (std::string *)v179;
      sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLParticleMapMatcher::extractSolution()", "%s\n", v179);
      if (v180 != &buf) {
        free(v180);
      }
    }
  }

  unint64_t v138 = *(double *)(a1 + 1320);
  if (v138 <= 0.0 || v138 >= 45.0 || *(double *)(a1 + 1600) <= 30.0)
  {
    if (*(_BYTE *)(a1 + 776))
    {
      __int16 v139 = 0;
      unint64_t v140 = *(double *)(a1 + 800);
      if (v140 > 0.0 && v140 < 45.0) {
        __int16 v139 = *(double *)(a1 + 792) > 30.0;
      }
    }

    else
    {
      __int16 v139 = 0;
    }
  }

  else
  {
    __int16 v139 = 1;
  }

  if (*(_BYTE *)(a1 + 1648) || v136 < 0.0 || v136 >= 35.0 || !v139)
  {
LABEL_339:
    if (!*(_BYTE *)(a1 + 1648) && *(_BYTE *)(a1 + 1649) && v139)
    {
      if (*(_BYTE *)(v12 + 200))
      {
        if (*(_BYTE *)(v12 + 192))
        {
          if (sub_100D2DBDC( (double *)(a1 + 608),  *(double *)(a1 + 1280),  *(double *)(a1 + 1288),  *(double *)(v12 + 408),  *(double *)(v12 + 416),  *(double *)(a1 + 1200)) < 35.0)
          {
            *(_BYTE *)(a1 + 164_Block_object_dispose((const void *)(v30 - 184), 8) = 1;
            if (*(_BYTE *)(a1 + 96))
            {
              if (qword_1019348B0 != -1) {
                dispatch_once(&qword_1019348B0, &stru_1018819B8);
              }
              float v149 = (os_log_s *)qword_1019348B8;
              if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
              {
                float v150 = *(void *)(a1 + 1600);
                LODWORD(buf.__r_.__value_.__l.__data_) = 134349056;
                *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v150;
                _os_log_impl( (void *)&_mh_execute_header,  v149,  OS_LOG_TYPE_DEBUG,  "CLMM,not snapping course,reason,at intersection,fabsCourseDifference,%{public}.1lf",  (uint8_t *)&buf,  0xCu);
              }

              if (sub_1002921D0(115, 2))
              {
                bzero(&buf, 0x65CuLL);
                if (qword_1019348B0 != -1) {
                  dispatch_once(&qword_1019348B0, &stru_1018819B8);
                }
                v228 = *(void *)(a1 + 1600);
                *(_DWORD *)v319 = 134349056;
                *(void *)&v319[4] = v228;
                LODWORD(v245) = 12;
                _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,not snapping course,reason,at intersection,fabsCourseDifference,%{public}.1lf",  v319,  v245);
                v230 = (std::string *)v229;
                sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLParticleMapMatcher::extractSolution()", "%s\n", v229);
                if (v230 != &buf) {
                  free(v230);
                }
              }
            }
          }
        }
      }
    }
  }

  else
  {
    *(_BYTE *)(a1 + 164_Block_object_dispose((const void *)(v30 - 184), 8) = 1;
    if (*(_BYTE *)(a1 + 96))
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_1018819B8);
      }
      int v147 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        LODWORD(buf.__r_.__value_.__l.__data_) = 134349056;
        *(double *)((char *)buf.__r_.__value_.__r.__words + 4) = v136;
        _os_log_impl( (void *)&_mh_execute_header,  v147,  OS_LOG_TYPE_DEBUG,  "CLMM,not snapping course,reason,distanceToIntersection,%{public}.1lf",  (uint8_t *)&buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_1018819B8);
        }
        *(_DWORD *)v319 = 134349056;
        *(double *)&v319[4] = v136;
        LODWORD(v245) = 12;
        _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,not snapping course,reason,distanceToIntersection,%{public}.1lf",  v319,  v245);
        v186 = (std::string *)v185;
        sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLParticleMapMatcher::extractSolution()", "%s\n", v185);
        if (v186 != &buf) {
          free(v186);
        }
      }

      goto LABEL_339;
    }
  }

  float v151 = *(double *)(a1 + 1320);
  if (v151 > 0.0 && v151 < 5.0 && *(_BYTE *)(a1 + 752) && *(double *)(a1 + 1600) > 45.0)
  {
    *(_BYTE *)(a1 + 164_Block_object_dispose((const void *)(v30 - 184), 8) = 1;
    if (*(_BYTE *)(a1 + 96))
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_1018819B8);
      }
      float v152 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        unint64_t v153 = *(void *)(a1 + 1600);
        LODWORD(buf.__r_.__value_.__l.__data_) = 134349056;
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v153;
        _os_log_impl( (void *)&_mh_execute_header,  v152,  OS_LOG_TYPE_DEBUG,  "CLMM,not snapping course,reason,turning,fabsCourseDifference,%{public}.1lf",  (uint8_t *)&buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_1018819B8);
        }
        v200 = *(void *)(a1 + 1600);
        *(_DWORD *)v319 = 134349056;
        *(void *)&v319[4] = v200;
        LODWORD(v245) = 12;
        _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,not snapping course,reason,turning,fabsCourseDifference,%{public}.1lf",  v319,  v245);
        v202 = (std::string *)v201;
        sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLParticleMapMatcher::extractSolution()", "%s\n", v201);
        if (v202 != &buf) {
          free(v202);
        }
      }

      goto LABEL_363;
    }
  }

  else
  {
LABEL_363:
    if (!*(_BYTE *)(a1 + 1648)) {
      goto LABEL_409;
    }
  }

  if ((*(double *)(a1 + 1224) < 0.2 || *(_BYTE *)(a1 + 1356))
    && v135 < 2.5
    && (*(double *)(a1 + 1600) > 135.0 || *(_BYTE *)(a1 + 776) && *(double *)(a1 + 792) > 30.0))
  {
    *(_BYTE *)(a1 + 164_Block_object_dispose((const void *)(v30 - 184), 8) = 0;
    if (*(_BYTE *)(a1 + 96))
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_1018819B8);
      }
      float v154 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        float v155 = *(void *)(a1 + 1136);
        std::stringbuf::string_type v156 = *(void *)(a1 + 1600);
        v157 = *(double *)(a1 + 792);
        LODWORD(buf.__r_.__value_.__l.__data_) = 134349568;
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v155;
        WORD2(buf.__r_.__value_.__r.__words[1]) = 2050;
        *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v156;
        HIWORD(buf.__r_.__value_.__r.__words[2]) = 2050;
        v325 = v157;
        _os_log_impl( (void *)&_mh_execute_header,  v154,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}.1lf,snapping course,reason,gps course not reliable,%{public}.1lf,fabsCourseDiffWithPriorSnap,%{public}.1lf",  (uint8_t *)&buf,  0x20u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_1018819B8);
        }
        v195 = *(void *)(a1 + 1136);
        v196 = *(void *)(a1 + 1600);
        v197 = *(double *)(a1 + 792);
        *(_DWORD *)v319 = 134349568;
        *(void *)&v319[4] = v195;
        *(_WORD *)&v319[12] = 2050;
        *(void *)&v319[14] = v196;
        v320 = 2050;
        v321 = v197;
        LODWORD(v245) = 32;
        _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}.1lf,snapping course,reason,gps course not reliable,%{public}.1lf,fabsCourseDiffWithPriorSnap,%{public}.1lf",  v319,  v245);
        v199 = (std::string *)v198;
        sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLParticleMapMatcher::extractSolution()", "%s\n", v198);
        if (v199 != &buf) {
          free(v199);
        }
      }
    }

    if (*(double *)(a1 + 1600) > 135.0 && !*(_BYTE *)(a1 + 776))
    {
      if (*(_BYTE *)(a1 + 96))
      {
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_1018819B8);
        }
        std::stringbuf::string_type v158 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
        {
          double v159 = *(void *)(a1 + 1136);
          __int16 v160 = *(void *)(a1 + 1232);
          uint64_t v161 = *(double *)(a1 + 1296);
          LODWORD(buf.__r_.__value_.__l.__data_) = 134349568;
          *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v159;
          WORD2(buf.__r_.__value_.__r.__words[1]) = 2050;
          *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v160;
          HIWORD(buf.__r_.__value_.__r.__words[2]) = 2050;
          v325 = v161;
          _os_log_impl( (void *)&_mh_execute_header,  v158,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}.1lf,overwriting unreliable GPS course,static case, priorCourse,%{public}.1lf,newCourse,%{public}.1lf",  (uint8_t *)&buf,  0x20u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(&buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_1018819B8);
          }
          v223 = *(void *)(a1 + 1136);
          v224 = *(void *)(a1 + 1232);
          v225 = *(double *)(a1 + 1296);
          *(_DWORD *)v319 = 134349568;
          *(void *)&v319[4] = v223;
          *(_WORD *)&v319[12] = 2050;
          *(void *)&v319[14] = v224;
          v320 = 2050;
          v321 = v225;
          LODWORD(v245) = 32;
          _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}.1lf,overwriting unreliable GPS course,static case, priorCourse,%{public}.1lf,newCourse,%{public}.1lf",  v319,  v245);
          v227 = (std::string *)v226;
          sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLParticleMapMatcher::extractSolution()", "%s\n", v226);
          if (v227 != &buf) {
            free(v227);
          }
        }
      }

      *(void *)(a1 + 1232) = *(void *)(a1 + 1296);
      *(void *)(a1 + 132sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0x403DE66666666666LL;
      *(void *)(a1 + 160sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0LL;
    }
  }

  if (*(_BYTE *)(a1 + 1648)
    && *(_BYTE *)(a1 + 384)
    && *(double *)(a1 + 1224) < 5.0
    && v135 < 5.0
    && fabs(*(double *)(a1 + 1640)) < 1.4
    && sub_100D504C0(*(double *)(a1 + 1296) - *(double *)(a1 + 288)) < 10.0
    && (*(double *)(a1 + 1600) > 135.0 || *(_BYTE *)(a1 + 776) && *(double *)(a1 + 792) > 135.0))
  {
    *(_BYTE *)(a1 + 164_Block_object_dispose((const void *)(v30 - 184), 8) = 0;
    if (*(_BYTE *)(a1 + 96))
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_1018819B8);
      }
      __int16 v162 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        unint64_t v163 = *(void *)(a1 + 1136);
        __int16 v164 = *(void *)(a1 + 1600);
        int v165 = *(double *)(a1 + 792);
        LODWORD(buf.__r_.__value_.__l.__data_) = 134349568;
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v163;
        WORD2(buf.__r_.__value_.__r.__words[1]) = 2050;
        *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v164;
        HIWORD(buf.__r_.__value_.__r.__words[2]) = 2050;
        v325 = v165;
        _os_log_impl( (void *)&_mh_execute_header,  v162,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}.1lf,snapping course, reason,gps course flipping at low speeds,%{public}.1lf,fabsCourseDiffWithP riorSnap,%{public}.1lf",  (uint8_t *)&buf,  0x20u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_1018819B8);
        }
        v235 = *(void *)(a1 + 1136);
        v236 = *(void *)(a1 + 1600);
        v237 = *(double *)(a1 + 792);
        *(_DWORD *)v319 = 134349568;
        *(void *)&v319[4] = v235;
        *(_WORD *)&v319[12] = 2050;
        *(void *)&v319[14] = v236;
        v320 = 2050;
        v321 = v237;
        LODWORD(v245) = 32;
        _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}.1lf,snapping course, reason,gps course flipping at low speeds,%{public}.1lf,fabsCourseDiffWithP riorSnap,%{public}.1lf",  v319,  v245);
        v239 = (std::string *)v238;
        sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLParticleMapMatcher::extractSolution()", "%s\n", v238);
        if (v239 != &buf) {
          free(v239);
        }
      }
    }

    if (*(double *)(a1 + 1600) > 135.0 && !*(_BYTE *)(a1 + 776))
    {
      if (*(_BYTE *)(a1 + 96))
      {
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_1018819B8);
        }
        unint64_t v166 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v167 = *(void *)(a1 + 1136);
          __int16 v168 = *(void *)(a1 + 1232);
          uint64_t v169 = *(double *)(a1 + 1296);
          LODWORD(buf.__r_.__value_.__l.__data_) = 134349568;
          *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v167;
          WORD2(buf.__r_.__value_.__r.__words[1]) = 2050;
          *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v168;
          HIWORD(buf.__r_.__value_.__r.__words[2]) = 2050;
          v325 = v169;
          _os_log_impl( (void *)&_mh_execute_header,  v166,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}.1lf,overwriting unreliable GPS course,low speed case,priorCourse,%{public}.1lf,newCourse,%{public}.1lf",  (uint8_t *)&buf,  0x20u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(&buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_1018819B8);
          }
          v240 = *(void *)(a1 + 1136);
          v241 = *(void *)(a1 + 1232);
          v242 = *(double *)(a1 + 1296);
          *(_DWORD *)v319 = 134349568;
          *(void *)&v319[4] = v240;
          *(_WORD *)&v319[12] = 2050;
          *(void *)&v319[14] = v241;
          v320 = 2050;
          v321 = v242;
          LODWORD(v245) = 32;
          _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}.1lf,overwriting unreliable GPS course,low speed case,priorCourse,%{public}.1lf,newCourse,%{public}.1lf",  v319,  v245);
          v244 = (std::string *)v243;
          sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLParticleMapMatcher::extractSolution()", "%s\n", v243);
          if (v244 != &buf) {
            free(v244);
          }
        }
      }

      *(void *)(a1 + 1232) = *(void *)(a1 + 1296);
      *(void *)(a1 + 132sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0x403DE66666666666LL;
      *(void *)(a1 + 160sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0LL;
    }
  }

    double v77 = WORD2(v232);
    uint64_t v78 = HIWORD(v232);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101894CB8);
    }
    v194 = (const char *)v33;
    id v79 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134218240;
      *(void *)&uint8_t buf[4] = v210;
      *(_WORD *)&_BYTE buf[12] = 2048;
      *(void *)&buf[14] = v221;
      _os_log_impl( (void *)&_mh_execute_header,  v79,  OS_LOG_TYPE_DEBUG,  "TILE: getEntriesForArea, pIndexEntries, 0x%lx, pEntries, 0x%lx",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101894CB8);
      }
      *(_DWORD *)v241 = 134218240;
      *(void *)&v241[4] = v210;
      *(_WORD *)&v241[12] = 2048;
      *(void *)&v241[14] = v221;
      LODWORD(v191) = 22;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "TILE: getEntriesForArea, pIndexEntries, 0x%lx, pEntries, 0x%lx",  v241,  *(void *)&v191);
      __int16 v162 = (char *)v161;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLSpatialDataTileTemplate<CLTilesManager_Type::AppRecommendationIndexEntry, CLTilesManager_Type::Ap pRecommendationEntry>::getEntriesForArea(const double &, const double &, const double &, const double &, BOOL, b ool, std::list<DataEntry_T> &) [IndexEntry_T = CLTilesManager_Type::AppRecommendationIndexEntry, DataEntry_T = C LTilesManager_Type::AppRecommendationEntry]",  "%s\n",  v161);
      if (v162 != buf) {
        free(v162);
      }
    }

    if (!v34)
    {
      LODWORD(v103) = 0;
LABEL_274:
      v185 = clock();
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101894CB8);
      }
      v186 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        v187 = a8[2];
        *(_DWORD *)std::stringbuf::string_type buf = 67110400;
        *(_DWORD *)&uint8_t buf[4] = v103;
        *(_WORD *)&uint8_t buf[8] = 2048;
        *(void *)&buf[10] = v187;
        *(_WORD *)&_BYTE buf[18] = 1024;
        *(_DWORD *)&buf[20] = LODWORD(v197);
        *(_WORD *)&_BYTE buf[24] = 2048;
        *(void *)&buf[26] = v185 - *(void *)&v196;
        *(_WORD *)&buf[34] = 1024;
        *(_DWORD *)&buf[36] = v77;
        *(_WORD *)&buf[40] = 1024;
        *(_DWORD *)&buf[42] = v78;
        _os_log_impl( (void *)&_mh_execute_header,  v186,  OS_LOG_TYPE_DEBUG,  "TILE: getEntriesForArea, examinedEntries, %5u, foundEntries, %5lu, isUseIndex, %d, clocks, %10lu, extra, %3d, %3d",  buf,  0x2Eu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101894CB8);
        }
        v188 = a8[2];
        *(_DWORD *)v241 = 67110400;
        *(_DWORD *)&v241[4] = v103;
        *(_WORD *)&v241[8] = 2048;
        *(void *)&v241[10] = v188;
        *(_WORD *)&v241[18] = 1024;
        *(_DWORD *)&v241[20] = LODWORD(v197);
        *(_WORD *)&v241[24] = 2048;
        *(void *)&v241[26] = v185 - *(void *)&v196;
        *(_WORD *)&v241[34] = 1024;
        *(_DWORD *)&v241[36] = v77;
        *(_WORD *)v242 = 1024;
        *(_DWORD *)&v242[2] = v78;
        LODWORD(v191) = 46;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "TILE: getEntriesForArea, examinedEntries, %5u, foundEntries, %5lu, isUseIndex, %d, clocks, %10lu, extra, %3d, %3d",  v241,  *(void *)&v191,  LODWORD(v192),  v194,  LODWORD(v196),  LODWORD(v197));
        v190 = (char *)v189;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLSpatialDataTileTemplate<CLTilesManager_Type::AppRecommendationIndexEntry, CLTilesManager_Type:: AppRecommendationEntry>::getEntriesForArea(const double &, const double &, const double &, const double &, boo l, BOOL, std::list<DataEntry_T> &) [IndexEntry_T = CLTilesManager_Type::AppRecommendationIndexEntry, DataEntry _T = CLTilesManager_Type::AppRecommendationEntry]",  "%s\n",  v189);
        if (v190 != buf) {
          free(v190);
        }
      }

      if (v205) {
        sub_100596934(v213[0], v205, v238, v239);
      }
      return;
    }

    v211 = v28;
    v218 = v29;
    v227 = 0;
    v226 = 0LL;
    v225 = 0;
    v224[0] = 0LL;
    v224[1] = 0LL;
    v223 = (uint64_t *)v224;
    double v80 = *(float *)&v253[12];
    uint64_t v81 = *(float *)&v254;
    double v82 = *(void *)v213;
    double v83 = (*(uint64_t (**)(int *))(**(void **)v213 + 80LL))(*(int **)v213);
    double v84 = *(float *)&v253[16];
    int v85 = *((float *)&v254 + 1);
    uint64_t v86 = (*(uint64_t (**)(uint64_t))(*(void *)v82 + 72LL))(v82);
    uint64_t v87 = *(float *)&v253[12];
    BOOL v88 = *(float *)&v254;
    uint64_t v89 = (*(uint64_t (**)(uint64_t))(*(void *)v82 + 80LL))(v82);
    double v90 = *(float *)&v253[16];
    __int16 v91 = *((float *)&v254 + 1);
    double v92 = (int)((v211 - v80) / (v81 / (double)v83));
    double v93 = (int)((v218 - v84) / (v85 / (double)v86));
    uint64_t v94 = (int)((v211 + v214 - v87) / (v88 / (double)v89));
    uint64_t v95 = (int)((v218 + v215 - v90)
              / (v91
               / (double)(*(unsigned int (**)(uint64_t))(*(void *)v82 + 72LL))(v82)));
    if (v94 - v92 <= 1) {
      unsigned int v96 = 1;
    }
    else {
      unsigned int v96 = v94 - v92;
    }
    if (v95 - v93 <= 1) {
      unsigned int v97 = 1;
    }
    else {
      unsigned int v97 = v95 - v93;
    }
    if (v210)
    {
      v192 = COERCE_DOUBLE(__PAIR64__(v77, v78));
      v219 = (*(uint64_t (**)(int *))(**(void **)v213 + 80LL))(*(int **)v213);
      v216 = DWORD2(v236);
      unsigned int v98 = (*(uint64_t (**)(int *))(**(void **)v213 + 72LL))(*(int **)v213);
      unsigned int v99 = HIDWORD(v236);
      if (v92 >= SHIDWORD(v192)) {
        BOOL v100 = v92 - HIDWORD(v192);
      }
      else {
        BOOL v100 = 0;
      }
      __int128 v101 = v93 - v78;
      if (v93 < v78) {
        __int128 v101 = 0;
      }
      v203 = v101;
      v204 = v100;
      v212 = v94 + HIDWORD(v192);
      v202 = v95 + v78;
      double v102 = 0;
      LODWORD(v103) = 0;
      v207 = v219 / v216;
      double v104 = v98 / v99;
      v217 = v96 + v92;
      double v105 = v204;
      v206 = v203 / v104;
      while (v105 < (*(unsigned int (**)(int *))(**(void **)v213 + 80LL))(*(int **)v213) && v105 < v212)
      {
        if (v206) {
          unsigned __int128 v107 = v206 - 1;
        }
        else {
          unsigned __int128 v107 = 0;
        }
        sub_100C0C22C( (unsigned int *)(v210 + v237 * (unint64_t)(v107 + HIDWORD(v236) * (v105 / v207))),  &v225);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101894CB8);
        }
        uint64_t v108 = (os_log_s *)qword_101934A78;
        if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)std::stringbuf::string_type buf = 67110912;
          *(_DWORD *)&uint8_t buf[4] = v105;
          *(_WORD *)&uint8_t buf[8] = 1024;
          *(_DWORD *)&buf[10] = v204;
          *(_WORD *)&buf[14] = 1024;
          *(_DWORD *)&uint8_t buf[16] = v212;
          *(_WORD *)&buf[20] = 1024;
          *(_DWORD *)&buf[22] = v203;
          *(_WORD *)&buf[26] = 1024;
          *(_DWORD *)&_BYTE buf[28] = v202;
          *(_WORD *)&uint8_t buf[32] = 1024;
          *(_DWORD *)&buf[34] = v105 / v207;
          *(_WORD *)&_BYTE buf[38] = 1024;
          *(_DWORD *)&buf[40] = v107;
          *(_WORD *)&buf[44] = 1024;
          *(_DWORD *)&buf[46] = v225;
          _os_log_impl( (void *)&_mh_execute_header,  v108,  OS_LOG_TYPE_DEBUG,  "TILE: getEntriesForArea, line, %d, searched_min_y, %d, %d, searched_min_x, %d, %d, index_y, %d, index_x, %d, entriesOffset, %d",  buf,  0x32u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934A70 != -1) {
            dispatch_once(&qword_101934A70, &stru_101894CB8);
          }
          *(_DWORD *)v241 = 67110912;
          *(_DWORD *)&v241[4] = v105;
          *(_WORD *)&v241[8] = 1024;
          *(_DWORD *)&v241[10] = v204;
          *(_WORD *)&v241[14] = 1024;
          *(_DWORD *)&v241[16] = v212;
          *(_WORD *)&v241[20] = 1024;
          *(_DWORD *)&v241[22] = v203;
          *(_WORD *)&v241[26] = 1024;
          *(_DWORD *)&v241[28] = v202;
          *(_WORD *)&v241[32] = 1024;
          *(_DWORD *)&v241[34] = v105 / v207;
          *(_WORD *)&v241[38] = 1024;
          *(_DWORD *)v242 = v107;
          *(_WORD *)&v242[4] = 1024;
          *(_DWORD *)&v242[6] = v225;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "TILE: getEntriesForArea, line, %d, searched_min_y, %d, %d, searched_min_x, %d, %d, index_y, %d, index_x, %d, entriesOffset, %d",  v241,  50,  LODWORD(v192),  (_DWORD)v194,  LODWORD(v196),  LODWORD(v197),  (_DWORD)v198,  LODWORD(v199));
          uint64_t v134 = (char *)v133;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLSpatialDataTileTemplate<CLTilesManager_Type::AppRecommendationIndexEntry, CLTilesManager_Type ::AppRecommendationEntry>::getEntriesForArea(const double &, const double &, const double &, const double &, BOOL, BOOL, std::list<DataEntry_T> &) [IndexEntry_T = CLTilesManager_Type::AppRecommendationIndexEntry, Dat aEntry_T = CLTilesManager_Type::AppRecommendationEntry]",  "%s\n",  v133);
          if (v134 != buf) {
            free(v134);
          }
        }

        unint64_t v109 = 0;
        do
        {
          unint64_t v110 = v225 + v109;
          v222 = v225 + v109;
          if (!v102 || v110 > v102)
          {
            uint64_t v111 = v224[0];
            if (!v224[0]) {
              goto LABEL_151;
            }
            __int128 v112 = v224;
            do
            {
              __int128 v113 = v111;
              __int128 v114 = v112;
              __int128 v115 = *((_DWORD *)v111 + 7);
              __int16 v116 = v111 + 1;
              if (v115 >= v110)
              {
                __int16 v116 = v113;
                __int128 v112 = (void **)v113;
              }

              uint64_t v111 = (void *)*v116;
            }

            while (v111);
            if (v112 == v224) {
              goto LABEL_151;
            }
            if (v115 < v110) {
              __int128 v113 = v114;
            }
            if (v110 < *((_DWORD *)v113 + 7))
            {
LABEL_151:
              sub_100C0C188((unsigned __int16 *)(v221 + HIDWORD(v231) * (unint64_t)v110), (uint64_t)&v226);
              unint64_t v117 = (unsigned __int16)v226 <= v92 && (unsigned __int16)v226 + 1 >= v92
                  || v92 <= (unsigned __int16)v226 && v217 >= (unsigned __int16)v226;
              unint64_t v119 = WORD1(v226) <= v93 && WORD1(v226) + 1 >= v93 || v93 <= WORD1(v226) && v97 + v93 >= WORD1(v226);
              if (qword_101934A70 != -1) {
                dispatch_once(&qword_101934A70, &stru_101894CB8);
              }
              uint64_t v121 = v117 && v119;
              LODWORD(v103) = v103 + 1;
              __int128 v122 = (os_log_s *)qword_101934A78;
              if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
              {
                __int128 v123 = v222;
                sub_100C34680((unsigned __int16 *)&v226, (std::stringbuf::string_type *)v241);
                __int128 v124 = v241;
                if (v241[23] < 0) {
                  __int128 v124 = *(_BYTE **)v241;
                }
                *(_DWORD *)std::stringbuf::string_type buf = 67109890;
                *(_DWORD *)&uint8_t buf[4] = v123;
                *(_WORD *)&uint8_t buf[8] = 1024;
                *(_DWORD *)&buf[10] = v121;
                *(_WORD *)&buf[14] = 1024;
                *(_DWORD *)&uint8_t buf[16] = v103;
                *(_WORD *)&buf[20] = 2080;
                *(void *)&buf[22] = v124;
                _os_log_impl( (void *)&_mh_execute_header,  v122,  OS_LOG_TYPE_DEBUG,  "TILE: getEntriesForArea, entryId, %d, isIntersect, %d, examinedEntries, %d, entry, %s",  buf,  0x1Eu);
                if ((v241[23] & 0x80000000) != 0) {
                  operator delete(*(void **)v241);
                }
              }

              if (sub_1002921D0(115, 2))
              {
                bzero(buf, 0x65CuLL);
                if (qword_101934A70 != -1) {
                  dispatch_once(&qword_101934A70, &stru_101894CB8);
                }
                __int128 v128 = qword_101934A78;
                __int128 v129 = v222;
                sub_100C34680((unsigned __int16 *)&v226, &v240);
                __int128 v130 = &v240;
                if ((v240.__r_.__value_.__s.__size_ & 0x80u) != 0) {
                  __int128 v130 = (std::stringbuf::string_type *)v240.__r_.__value_.__r.__words[0];
                }
                *(_DWORD *)v241 = 67109890;
                *(_DWORD *)&v241[4] = v129;
                *(_WORD *)&v241[8] = 1024;
                *(_DWORD *)&v241[10] = v121;
                *(_WORD *)&v241[14] = 1024;
                *(_DWORD *)&v241[16] = v103;
                *(_WORD *)&v241[20] = 2080;
                *(void *)&v241[22] = v130;
                _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v128,  2LL,  "TILE: getEntriesForArea, entryId, %d, isIntersect, %d, examinedEntries, %d, entry, %s",  v241,  30,  LODWORD(v192),  v194);
                __int16 v132 = v131;
                sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLSpatialDataTileTemplate<CLTilesManager_Type::AppRecommendationIndexEntry, CLTilesManage r_Type::AppRecommendationEntry>::getEntriesForArea(const double &, const double &, const double &, con st double &, BOOL, BOOL, std::list<DataEntry_T> &) [IndexEntry_T = CLTilesManager_Type::AppRecommendat ionIndexEntry, DataEntry_T = CLTilesManager_Type::AppRecommendationEntry]",  "%s\n",  v132);
                if (v132 != buf) {
                  free(v132);
                }
              }

              if (v121)
              {
                __int128 v125 = operator new(0x20uLL);
                int v126 = v226;
                v125[6] = v227;
                __int128 v127 = *a8;
                *((void *)v125 + 1) = a8;
                *((void *)v125 + 2) = v126;
                *(void *)__int128 v125 = v127;
                *(void *)(v127 + _Block_object_dispose((const void *)(v30 - 184), 8) = v125;
                *a8 = (uint64_t)v125;
                ++a8[2];
                sub_100D2BA8C(&v223, &v222, &v222);
              }

              double v102 = v222;
            }
          }

          ++v109;
        }

        while (v105 >= (unsigned __int16)v226);
        ++v105;
      }

      unint64_t v135 = *(void *)v213;
      unint64_t v136 = v198;
      unint64_t v137 = *(double **)&v199;
      unint64_t v138 = v194;
      uint64_t v78 = LODWORD(v192);
      double v77 = HIDWORD(v192);
      goto LABEL_269;
    }

    if (v221)
    {
      if (DWORD2(v231))
      {
        __int128 v103 = 0LL;
        __int16 v139 = v96 + v92;
        unint64_t v140 = v97 + v93;
        unint64_t v135 = *(void *)v213;
        unint64_t v137 = *(double **)&v199;
        do
        {
          sub_100C0C188((unsigned __int16 *)(v221 + v103 * HIDWORD(v231)), (uint64_t)&v226);
          uint64_t v142 = v92 <= (unsigned __int16)v226 && v139 >= (unsigned __int16)v226;
          uint64_t v144 = (unsigned __int16)v226 <= v92 && (unsigned __int16)v226 + 1 >= v92 || v142;
          uint64_t v146 = v93 <= WORD1(v226) && v140 >= WORD1(v226);
          int v148 = WORD1(v226) <= v93 && WORD1(v226) + 1 >= v93 || v146;
          if ((v144 & v148) == 1)
          {
            float v149 = operator new(0x20uLL);
            float v150 = v226;
            v149[6] = v227;
            float v151 = *a8;
            *((void *)v149 + 1) = a8;
            *((void *)v149 + 2) = v150;
            *(void *)float v149 = v151;
            *(void *)(v151 + _Block_object_dispose((const void *)(v30 - 184), 8) = v149;
            *a8 = (uint64_t)v149;
            ++a8[2];
          }

          ++v103;
        }

        while (v103 < DWORD2(v231));
        unint64_t v136 = v198;
        goto LABEL_268;
      }
    }

    else
    {
      unint64_t v136 = v198;
      unint64_t v138 = v194;
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101894CB8);
      }
      unint64_t v135 = *(void *)v213;
      unint64_t v137 = *(double **)&v199;
      float v152 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        (*(void (**)(_BYTE *__return_ptr, int *))(**(void **)v213 + 16LL))(buf, *(int **)v213);
        unint64_t v153 = buf[23] >= 0 ? buf : *(_BYTE **)buf;
        *(_DWORD *)v241 = 136315138;
        *(void *)&v241[4] = v153;
        _os_log_impl( (void *)&_mh_execute_header,  v152,  OS_LOG_TYPE_DEBUG,  "TILE: getEntriesForArea, nothing to search, %s",  v241,  0xCu);
        if ((buf[23] & 0x80000000) != 0) {
          operator delete(*(void **)buf);
        }
      }

      if (!sub_1002921D0(115, 2))
      {
        LODWORD(v103) = 0;
        goto LABEL_269;
      }

      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101894CB8);
      }
      uint64_t v169 = qword_101934A78;
      (*(void (**)(_BYTE *__return_ptr))(**(void **)v213 + 16LL))(v241);
      if (v241[23] >= 0) {
        __int16 v170 = v241;
      }
      else {
        __int16 v170 = *(_BYTE **)v241;
      }
      LODWORD(v240.__r_.__value_.__l.__data_) = 136315138;
      *(std::string::size_type *)((char *)v240.__r_.__value_.__r.__words + 4) = (std::string::size_type)v170;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v169,  2LL,  "TILE: getEntriesForArea, nothing to search, %s",  (const char *)&v240);
      __int16 v172 = v171;
      if ((v241[23] & 0x80000000) != 0) {
        operator delete(*(void **)v241);
      }
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLSpatialDataTileTemplate<CLTilesManager_Type::AppRecommendationIndexEntry, CLTilesManager_Type::Ap pRecommendationEntry>::getEntriesForArea(const double &, const double &, const double &, const double &, BOOL, b ool, std::list<DataEntry_T> &) [IndexEntry_T = CLTilesManager_Type::AppRecommendationIndexEntry, DataEntry_T = C LTilesManager_Type::AppRecommendationEntry]",  "%s\n",  v172);
      if (v172 != buf) {
        free(v172);
      }
    }

    LODWORD(v103) = 0;
    unint64_t v135 = *(void *)v213;
    unint64_t v136 = v198;
    unint64_t v137 = *(double **)&v199;
LABEL_268:
    unint64_t v138 = v194;
LABEL_269:
    if (HIDWORD(v197) && DWORD2(v229))
    {
      int v173 = 0LL;
      do
      {
        sub_100C0C188((unsigned __int16 *)&v138[v173 * HIDWORD(v229)], (uint64_t)&v226);
        int v174 = *a2;
        double v175 = *v137;
        __int16 v176 = *(float *)&v253[12];
        double v177 = *(float *)&v254;
        LOWORD(v226) = (int)((v174 + v175 * 0.5 - v176)
                           / (v177
                            / (double)(*(unsigned int (**)(uint64_t))(*(void *)v135 + 80LL))(v135)));
        v178 = *a3;
        double v179 = *v136;
        __int16 v180 = *(float *)&v253[16];
        double v181 = *((float *)&v254 + 1);
        WORD1(v226) = (int)((v178 + v179 * 0.5 - v180)
                          / (v181
                           / (double)(*(unsigned int (**)(uint64_t))(*(void *)v135 + 72LL))(v135)));
        v182 = operator new(0x20uLL);
        v183 = v226;
        v182[6] = v227;
        v184 = *a8;
        *((void *)v182 + 1) = a8;
        *((void *)v182 + 2) = v183;
        *(void *)v182 = v184;
        *(void *)(v184 + _Block_object_dispose((const void *)(v30 - 184), 8) = v182;
        *a8 = (uint64_t)v182;
        ++a8[2];
        ++v173;
      }

      while (v173 < DWORD2(v229));
    }

    sub_100008390((uint64_t)&v223, v224[0]);
    goto LABEL_274;
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101894CB8);
  }
  unsigned int v71 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v71,  OS_LOG_TYPE_DEBUG,  "TILE: doesIntersectWithTile, %d, no intersection with the tile",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101894CB8);
    }
    *(_DWORD *)v241 = 67109120;
    *(_DWORD *)&v241[4] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "TILE: doesIntersectWithTile, %d, no intersection with the tile",  v241);
    double v73 = (char *)v72;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLSpatialDataTileTemplate<CLTilesManager_Type::AppRecommendationIndexEntry, CLTilesManager_Type::AppR ecommendationEntry>::getEntriesForArea(const double &, const double &, const double &, const double &, BOOL, BOOL, std::list<DataEntry_T> &) [IndexEntry_T = CLTilesManager_Type::AppRecommendationIndexEntry, DataEntry_T = CLTiles Manager_Type::AppRecommendationEntry]",  "%s\n",  v72);
    if (v73 != buf) {
      free(v73);
    }
  }

  uint64_t result = *(float *)(a2 + 280);
  v5 |= 0x800000000000000uLL;
  *uint64_t v2 = v5;
  *(_BYTE *)(a1 + 3sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v6;
  *(float *)(a1 + 28sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = result;
  uint64_t v7 = *v3;
  uint64_t v4 = *(_BYTE *)(a2 + 324);
  if ((*v3 & 0x8000000000000LL) == 0)
  {
LABEL_37:
    if ((v4 & 1) == 0) {
      goto LABEL_38;
    }
    goto LABEL_104;
  }

  PB::TextFormatter::format(this, "hgDeltaVXYBiggestImpact", *(float *)(a1 + 180));
  uint64_t v6 = *v5;
  uint64_t v7 = *(_BYTE *)(a1 + 324);
  if ((*v5 & 0x800000000LL) == 0)
  {
LABEL_36:
    if ((v6 & 0x1000000000LL) == 0) {
      goto LABEL_37;
    }
    goto LABEL_104;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 280), 0x20u);
  uint64_t v6 = *v4;
  uint64_t v5 = *((_BYTE *)v4 + 8);
  if ((*v4 & 0x8000000000000LL) == 0)
  {
LABEL_37:
    if ((v5 & 1) == 0) {
      goto LABEL_38;
    }
    goto LABEL_104;
  }

  uint64_t result = *(float *)(a2 + 228);
  v5 |= 0x40000000000000uLL;
  *uint64_t v2 = v5;
  *(_WORD *)(a1 + 2sub_1011C52D0(v16 - 88) = v6;
  *(float *)(a1 + 22_Block_object_dispose((const void *)(v30 - 184), 8) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x80000) == 0)
  {
LABEL_29:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_104;
  }

  PB::TextFormatter::format(this, "detectorRegimeDeltaVThreshold1WithAudio", *(float *)(a1 + 104));
  uint64_t v6 = *v5;
  uint64_t v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x1000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_104;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 148), 0x17u);
  uint64_t v5 = *v4;
  uint64_t v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x40000000000000LL) == 0)
  {
LABEL_28:
    if ((v5 & 0x100000000000000LL) == 0) {
      goto LABEL_29;
    }
    goto LABEL_104;
  }

  uint64_t result = *(float *)(a2 + 52);
  v5 |= 0x400uLL;
  *uint64_t v2 = v5;
  *(_WORD *)(a1 + 3sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v6;
  *(_BYTE *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 52) = result;
  LODWORD(v_Block_object_dispose((const void *)(v30 - 184), 8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*v3 & 0x200000) == 0)
  {
LABEL_22:
    if ((v8 & 0x10000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_104;
  }

  PB::TextFormatter::format(this, "kAudioDvEnergyThresholdCenterRO", *(float *)(a1 + 60));
  uint64_t v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x2000) == 0)
  {
LABEL_21:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_104;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52), 0x72u);
  uint64_t v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((*v4 & 0x200000) == 0)
  {
LABEL_22:
    if ((v7 & 0x10000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_104;
  }

  double v27 = *(_DWORD *)(a2 + 80);
  v3 |= 0x4000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(_BYTE *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 8sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v27;
  uint64_t v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x4000000000000000LL) == 0)
  {
LABEL_24:
    if ((v2 & 0x4000000000000LL) == 0) {
      goto LABEL_25;
    }
    goto LABEL_104;
  }

  PB::TextFormatter::format(this, "kChaosMetRO", *(_BYTE *)(a1 + 172));
  uint64_t v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x4000000000000LL) == 0)
  {
LABEL_23:
    if ((v5 & 0x8000000000000LL) == 0) {
      goto LABEL_24;
    }
    goto LABEL_104;
  }

  uint64_t result = PB::Writer::write(this, *(_BYTE *)(v3 + 192), 0x77u);
  uint64_t v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x20000000000000LL) == 0)
  {
LABEL_24:
    if ((v4 & 0x200000000000000LL) == 0) {
      goto LABEL_25;
    }
    goto LABEL_104;
  }

          uint64_t v4 = *((void *)this + 1);
          uint64_t v5 = *((void *)this + 2);
          uint64_t v6 = *((unsigned __int8 *)this + 24);
          if (v4 >= v5 || *((_BYTE *)this + 24)) {
            return v6 == 0;
          }
          break;
        case 5u:
          *(_WORD *)(a1 + 112) |= 8u;
          double v42 = *((void *)this + 1);
          if (v42 > 0xFFFFFFFFFFFFFFF7LL || v42 + 8 > *((void *)this + 2)) {
            goto LABEL_99;
          }
          *(void *)(a1 + 56) = *(void *)(*(void *)this + v42);
          goto LABEL_101;
        case 6u:
          *(_WORD *)(a1 + 112) |= 0x10u;
          double v43 = *((void *)this + 1);
          if (v43 > 0xFFFFFFFFFFFFFFF7LL || v43 + 8 > *((void *)this + 2)) {
            goto LABEL_99;
          }
          *(void *)(a1 + 64) = *(void *)(*(void *)this + v43);
          goto LABEL_101;
        case 7u:
          *(_WORD *)(a1 + 112) |= 0x20u;
          double v44 = *((void *)this + 1);
          if (v44 > 0xFFFFFFFFFFFFFFF7LL || v44 + 8 > *((void *)this + 2)) {
            goto LABEL_99;
          }
          *(void *)(a1 + sub_10000AE14(v1 - 72) = *(void *)(*(void *)this + v44);
          goto LABEL_101;
        case 8u:
          *(_WORD *)(a1 + 112) |= 4u;
          int v45 = *((void *)this + 1);
          if (v45 > 0xFFFFFFFFFFFFFFF7LL || v45 + 8 > *((void *)this + 2)) {
            goto LABEL_99;
          }
          *(void *)(a1 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = *(void *)(*(void *)this + v45);
          goto LABEL_101;
        case 9u:
          *(_WORD *)(a1 + 112) |= 0x80u;
          unint64_t v46 = *((void *)this + 1);
          if (v46 > 0xFFFFFFFFFFFFFFF7LL || v46 + 8 > *((void *)this + 2)) {
            goto LABEL_99;
          }
          *(void *)(a1 + sub_1011C52D0(v16 - 88) = *(void *)(*(void *)this + v46);
          goto LABEL_101;
        case 0xAu:
          *(_WORD *)(a1 + 112) |= 0x100u;
          unint64_t v47 = *((void *)this + 1);
          if (v47 > 0xFFFFFFFFFFFFFFF7LL || v47 + 8 > *((void *)this + 2)) {
            goto LABEL_99;
          }
          *(void *)(a1 + 96) = *(void *)(*(void *)this + v47);
          goto LABEL_101;
        case 0xBu:
          *(_WORD *)(a1 + 112) |= 0x40u;
          uint64_t v48 = *((void *)this + 1);
          if (v48 > 0xFFFFFFFFFFFFFFF7LL || v48 + 8 > *((void *)this + 2)) {
            goto LABEL_99;
          }
          *(void *)(a1 + 8sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(void *)(*(void *)this + v48);
          goto LABEL_101;
        default:
          if ((PB::Reader::skip(this, v15 >> 3, v15 & 7, 0) & 1) == 0) {
            return 0LL;
          }
          goto LABEL_102;
      }
    }

    __int128 v19 = 0;
    double v20 = 0;
    unint64_t v15 = 0LL;
    if (v4 > v5) {
      uint64_t v5 = v4;
    }
    while (v5 != v4)
    {
      unint64_t v21 = v4 + 1;
      uint64_t v22 = *(_BYTE *)(v12 + v4);
      *((void *)this + 1) = v21;
      v15 |= (unint64_t)(v22 & 0x7F) << v19;
      if ((v22 & 0x80) == 0) {
        goto LABEL_21;
      }
      v19 += 7;
      uint64_t v4 = v21;
      if (v20++ >= 9)
      {
LABEL_20:
        unint64_t v15 = 0LL;
        goto LABEL_21;
      }
    }

    uint64_t v6 = 1;
    *((_BYTE *)this + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 1;
  }

  return v6 == 0;
}

void sub_1003EFFEC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20, uint64_t a21, char a22, uint64_t a23, uint64_t a24, char a25, void *a26, uint64_t a27, void *a28, uint64_t a29, uint64_t a30, char a31, uint64_t a32, uint64_t a33, void *a34, uint64_t a35, uint64_t a36, void *a37, uint64_t a38, uint64_t a39, uint64_t a40, char *a41, uint64_t a42)
{
  if (__p) {
    operator delete(__p);
  }
  a41 = &a16;
  sub_100006BC8((void ***)&a41);
  if (a19)
  {
    a20 = (uint64_t)a19;
    operator delete(a19);
  }

  a41 = &a22;
  sub_100006BC8((void ***)&a41);
  sub_100008390((uint64_t)&a25, a26);
  if (a28)
  {
    a29 = (uint64_t)a28;
    operator delete(a28);
  }

  a41 = &a31;
  sub_100006BC8((void ***)&a41);
  if (a34)
  {
    a35 = (uint64_t)a34;
    operator delete(a34);
  }

  _Unwind_Resume(a1);
}

void sub_1003F011C(uint64_t *a1, void **a2)
{
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101836D40);
  }
  uint64_t v4 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    int v5 = -1431655765 * ((unint64_t)(a1[1] - *a1) >> 5);
    *(_DWORD *)std::stringbuf::string_type buf = 67174657;
    *(_DWORD *)&uint8_t buf[4] = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "WifiCalc, zaxis, reject outlier, num input accessPointWithWeights, %{private}d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101836D40);
    }
    int v132 = -1431655765 * ((unint64_t)(a1[1] - *a1) >> 5);
    int v152 = 67174657;
    LODWORD(v153) = v132;
    unsigned int v133 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "WifiCalc, zaxis, reject outlier, num input accessPointWithWeights, %{private}d",  &v152,  8);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLLocationCalculator::rejectOutlierAltitudes(const std::vector<CLWifiAccessPoint> &, std::vector<CLWif iAccessPoint> &)",  "%s\n",  v133);
    if (v133 != buf) {
      free(v133);
    }
  }

  std::stringbuf::string_type __p = 0LL;
  float v150 = 0LL;
  float v151 = 0LL;
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  if (*a1 == v7) {
    goto LABEL_71;
  }
  unint64_t v8 = 0LL;
  do
  {
    if (*(float *)(v6 + 84) > 0.0)
    {
      if (v8 >= v151)
      {
        uint64_t v13 = (char *)__p;
        unint64_t v14 = 0xAAAAAAAAAAAAAAABLL * ((v8 - (_BYTE *)__p) >> 5);
        unint64_t v15 = v14 + 1;
        if (v14 + 1 > 0x2AAAAAAAAAAAAAALL) {
          sub_100007008();
        }
        if (0x5555555555555556LL * ((v151 - (_BYTE *)__p) >> 5) > v15) {
          unint64_t v15 = 0x5555555555555556LL * ((v151 - (_BYTE *)__p) >> 5);
        }
        if (0xAAAAAAAAAAAAAAABLL * ((v151 - (_BYTE *)__p) >> 5) >= 0x155555555555555LL) {
          unint64_t v16 = 0x2AAAAAAAAAAAAAALL;
        }
        else {
          unint64_t v16 = v15;
        }
        if (v16)
        {
          uint64_t v17 = (char *)sub_1003F6AEC((uint64_t)&v151, v16);
          uint64_t v13 = (char *)__p;
          unint64_t v8 = v150;
        }

        else
        {
          uint64_t v17 = 0LL;
        }

        double v18 = &v17[96 * v14];
        __int128 v19 = *(_OWORD *)(v6 + 16);
        *(_OWORD *)double v18 = *(_OWORD *)v6;
        *((_OWORD *)v18 + 1) = v19;
        __int128 v20 = *(_OWORD *)(v6 + 32);
        __int128 v21 = *(_OWORD *)(v6 + 48);
        __int128 v22 = *(_OWORD *)(v6 + 80);
        *((_OWORD *)v18 + 4) = *(_OWORD *)(v6 + 64);
        *((_OWORD *)v18 + 5) = v22;
        *((_OWORD *)v18 + 2) = v20;
        *((_OWORD *)v18 + 3) = v21;
        if (v8 == v13)
        {
          uint64_t v28 = &v17[96 * v14];
        }

        else
        {
          unint64_t v23 = &v17[96 * v14];
          do
          {
            __int128 v24 = *((_OWORD *)v8 - 5);
            *((_OWORD *)v23 - 6) = *((_OWORD *)v8 - 6);
            *((_OWORD *)v23 - 5) = v24;
            __int128 v25 = *((_OWORD *)v8 - 4);
            __int128 v26 = *((_OWORD *)v8 - 3);
            __int128 v27 = *((_OWORD *)v8 - 2);
            uint64_t v28 = v23 - 96;
            *(_OWORD *)(v23 - 23) = *(_OWORD *)(v8 - 23);
            *((_OWORD *)v23 - 3) = v26;
            *((_OWORD *)v23 - 2) = v27;
            *((_OWORD *)v23 - 4) = v25;
            v8 -= 96;
            v23 -= 96;
          }

          while (v8 != v13);
        }

        unint64_t v8 = v18 + 96;
        std::stringbuf::string_type __p = v28;
        float v150 = v18 + 96;
        float v151 = &v17[96 * v16];
        if (v13) {
          operator delete(v13);
        }
      }

      else
      {
        __int128 v9 = *(_OWORD *)(v6 + 16);
        *(_OWORD *)unint64_t v8 = *(_OWORD *)v6;
        *((_OWORD *)v8 + 1) = v9;
        __int128 v10 = *(_OWORD *)(v6 + 32);
        __int128 v11 = *(_OWORD *)(v6 + 48);
        __int128 v12 = *(_OWORD *)(v6 + 80);
        *((_OWORD *)v8 + 4) = *(_OWORD *)(v6 + 64);
        *((_OWORD *)v8 + 5) = v12;
        *((_OWORD *)v8 + 2) = v10;
        *((_OWORD *)v8 + 3) = v11;
        v8 += 96;
      }

      float v150 = v8;
    }

    v6 += 96LL;
  }

  while (v6 != v7);
  if (__p == v8)
  {
LABEL_71:
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101836D40);
    }
    unint64_t v54 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v54,  OS_LOG_TYPE_DEBUG,  "WifiCalc, zaxis, reject outlier, accessPointsWithValidWeights is empty",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101836D40);
      }
      LOWORD(v152) = 0;
      LODWORD(v136) = 2;
      unint64_t v55 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "WifiCalc, zaxis, reject outlier, accessPointsWithValidWeights is empty",  &v152,  v136);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLLocationCalculator::rejectOutlierAltitudes(const std::vector<CLWifiAccessPoint> &, std::vector<CLW ifiAccessPoint> &)",  "%s\n",  v55);
      if (v55 != buf) {
        free(v55);
      }
    }
  }

  else
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101836D40);
    }
    unint64_t v29 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 67174657;
      *(_DWORD *)&uint8_t buf[4] = -1431655765 * ((unint64_t)(v150 - (_BYTE *)__p) >> 5);
      _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEBUG,  "WifiCalc, zaxis, reject outlier, num accessPointsWithValidWeights, %{private}d",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101836D40);
      }
      int v152 = 67174657;
      LODWORD(v153) = -1431655765 * ((unint64_t)(v150 - (_BYTE *)__p) >> 5);
      LODWORD(v136) = 8;
      uint64_t v134 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "WifiCalc, zaxis, reject outlier, num accessPointsWithValidWeights, %{private}d",  &v152,  v136);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLLocationCalculator::rejectOutlierAltitudes(const std::vector<CLWifiAccessPoint> &, std::vector<CLW ifiAccessPoint> &)",  "%s\n",  v134);
      if (v134 != buf) {
        free(v134);
      }
    }

    uint64_t v146 = 0LL;
    int v147 = 0LL;
    int v148 = 0LL;
    uint64_t v143 = 0LL;
    uint64_t v144 = 0LL;
    float v145 = 0LL;
    unsigned int v30 = (float *)__p;
    double v31 = (float *)v150;
    if (__p == v150)
    {
      double v32 = 0.0;
    }

    else
    {
      double v32 = 0.0;
      do
      {
        double v33 = v147;
        if (v147 >= v148)
        {
          uint64_t v35 = (char *)v146;
          uint64_t v36 = (v147 - (_BYTE *)v146) >> 3;
          unint64_t v37 = v36 + 1;
          uint64_t v38 = v148 - (_BYTE *)v146;
          if ((v148 - (_BYTE *)v146) >> 2 > v37) {
            unint64_t v37 = v38 >> 2;
          }
          else {
            unint64_t v39 = v37;
          }
          if (v39)
          {
            double v40 = (char *)sub_1000071BC((uint64_t)&v148, v39);
            uint64_t v35 = (char *)v146;
            double v33 = v147;
          }

          else
          {
            double v40 = 0LL;
          }

          int v41 = &v40[8 * v36];
          *(void *)int v41 = *((void *)v30 + 2);
          double v34 = v41 + 8;
          while (v33 != v35)
          {
            uint64_t v42 = *((void *)v33 - 1);
            v33 -= 8;
            *((void *)v41 - 1) = v42;
            v41 -= 8;
          }

          uint64_t v146 = v41;
          int v147 = v34;
          int v148 = &v40[8 * v39];
          if (v35) {
            operator delete(v35);
          }
        }

        else
        {
          *(void *)int v147 = *((void *)v30 + 2);
          double v34 = v33 + 8;
        }

        int v147 = v34;
        double v43 = v30[21];
        double v44 = v144;
        if (v144 >= v145)
        {
          unint64_t v46 = (double *)v143;
          uint64_t v47 = ((char *)v144 - (_BYTE *)v143) >> 3;
          unint64_t v48 = v47 + 1;
          uint64_t v49 = (char *)v145 - (_BYTE *)v143;
          else {
            unint64_t v50 = v48;
          }
          if (v50)
          {
            int v51 = (char *)sub_1000071BC((uint64_t)&v145, v50);
            unint64_t v46 = (double *)v143;
            double v44 = v144;
          }

          else
          {
            int v51 = 0LL;
          }

          unint64_t v52 = (double *)&v51[8 * v47];
          *unint64_t v52 = v43;
          int v45 = v52 + 1;
          while (v44 != v46)
          {
            uint64_t v53 = *((void *)v44-- - 1);
            *((void *)v52-- - 1) = v53;
          }

          uint64_t v143 = v52;
          uint64_t v144 = v45;
          float v145 = (double *)&v51[8 * v50];
          if (v46) {
            operator delete(v46);
          }
        }

        else
        {
          double *v144 = v43;
          int v45 = v44 + 1;
        }

        uint64_t v144 = v45;
        double v32 = v32 + v30[21];
        v30 += 24;
      }

      while (v30 != v31);
    }

    double v56 = sub_1003EEC74((uint64_t *)&v146, (uint64_t *)&v143);
    unint64_t v140 = 0LL;
    uint64_t v141 = 0LL;
    uint64_t v142 = 0LL;
    unint64_t v137 = 0LL;
    unint64_t v138 = 0LL;
    __int16 v139 = 0LL;
    double v57 = (double *)__p;
    uint64_t v58 = (double *)v150;
    if (__p != v150)
    {
      do
      {
        double v59 = vabdd_f64(v57[2], v56);
        __int128 v161 = *((_OWORD *)v57 + 2);
        __int128 v162 = *((_OWORD *)v57 + 3);
        __int128 v163 = *((_OWORD *)v57 + 4);
        __int128 v164 = *((_OWORD *)v57 + 5);
        *(_OWORD *)std::stringbuf::string_type buf = *(_OWORD *)v57;
        *(_OWORD *)&uint8_t buf[16] = *((_OWORD *)v57 + 1);
        if (v138 >= (unint64_t)v139)
        {
          unint64_t v61 = 0x4EC4EC4EC4EC4EC5LL * ((uint64_t)(v138 - (void)v137) >> 3) + 1;
          if (v61 > 0x276276276276276LL) {
            sub_100007008();
          }
          if (0x9D89D89D89D89D8ALL * ((v139 - v137) >> 3) > v61) {
            unint64_t v61 = 0x9D89D89D89D89D8ALL * ((v139 - v137) >> 3);
          }
          else {
            unint64_t v62 = v61;
          }
          if (v62) {
            double v63 = (char *)sub_1003F7F84((uint64_t)&v139, v62);
          }
          else {
            double v63 = 0LL;
          }
          uint64_t v64 = &v63[8 * ((uint64_t)(v138 - (void)v137) >> 3)];
          *(double *)uint64_t v64 = v59;
          *(_OWORD *)(v64 + _Block_object_dispose((const void *)(v30 - 184), 8) = *(_OWORD *)buf;
          *(_OWORD *)(v64 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v161;
          *(_OWORD *)(v64 + 56) = v162;
          *(_OWORD *)(v64 + sub_10000AE14(v1 - 72) = v163;
          *(_OWORD *)(v64 + sub_1011C52D0(v16 - 88) = v164;
          *(_OWORD *)(v64 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = *(_OWORD *)&buf[16];
          double v65 = (char *)v138;
          unint64_t v66 = v64;
          if ((char *)v138 != v137)
          {
            do
            {
              __int128 v67 = *(_OWORD *)(v65 - 104);
              __int128 v68 = *(_OWORD *)(v65 - 88);
              *(_OWORD *)(v66 - sub_10000AE14(v1 - 72) = *(_OWORD *)(v65 - 72);
              *(_OWORD *)(v66 - sub_1011C52D0(v16 - 88) = v68;
              *(_OWORD *)(v66 - 104) = v67;
              __int128 v69 = *(_OWORD *)(v65 - 56);
              __int128 v70 = *(_OWORD *)(v65 - 40);
              __int128 v71 = *(_OWORD *)(v65 - 24);
              *((void *)v66 - 1) = *((void *)v65 - 1);
              *(_OWORD *)(v66 - sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v71;
              *(_OWORD *)(v66 - 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v70;
              *(_OWORD *)(v66 - 56) = v69;
              v66 -= 104;
              v65 -= 104;
            }

            while (v65 != v137);
            double v65 = v137;
          }

          unint64_t v60 = (unint64_t)(v64 + 104);
          unint64_t v137 = v66;
          __int16 v139 = &v63[104 * v62];
          if (v65) {
            operator delete(v65);
          }
        }

        else
        {
          *(double *)unint64_t v138 = v59;
          *(_OWORD *)(v138 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v161;
          *(_OWORD *)(v138 + 56) = v162;
          *(_OWORD *)(v138 + sub_10000AE14(v1 - 72) = v163;
          *(_OWORD *)(v138 + sub_1011C52D0(v16 - 88) = v164;
          *(_OWORD *)(v138 + _Block_object_dispose((const void *)(v30 - 184), 8) = *(_OWORD *)buf;
          *(_OWORD *)(v138 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = *(_OWORD *)&buf[16];
          unint64_t v60 = v138 + 104;
        }

        unint64_t v138 = v60;
        int v72 = v141;
        if (v141 >= v142)
        {
          unint64_t v74 = (double *)v140;
          uint64_t v75 = ((char *)v141 - (_BYTE *)v140) >> 3;
          unint64_t v76 = v75 + 1;
          uint64_t v77 = (char *)v142 - (_BYTE *)v140;
          else {
            unint64_t v78 = v76;
          }
          if (v78)
          {
            id v79 = (char *)sub_1000071BC((uint64_t)&v142, v78);
            unint64_t v74 = (double *)v140;
            int v72 = v141;
          }

          else
          {
            id v79 = 0LL;
          }

          double v80 = (double *)&v79[8 * v75];
          *double v80 = v59;
          double v73 = v80 + 1;
          while (v72 != v74)
          {
            uint64_t v81 = *((void *)v72-- - 1);
            *((void *)v80-- - 1) = v81;
          }

          unint64_t v140 = v80;
          uint64_t v141 = v73;
          uint64_t v142 = (double *)&v79[8 * v78];
          if (v74) {
            operator delete(v74);
          }
        }

        else
        {
          double *v141 = v59;
          double v73 = v72 + 1;
        }

        uint64_t v141 = v73;
        v57 += 12;
      }

      while (v57 != v58);
    }

    double v82 = sub_1003EEC74((uint64_t *)&v140, (uint64_t *)&v143);
    unint64_t v83 = 126 - 2 * __clz(0x4EC4EC4EC4EC4EC5LL * ((uint64_t)(v138 - (void)v137) >> 3));
    double v84 = v82 + v82;
    else {
      uint64_t v85 = v83;
    }
    if (v84 >= 5.0) {
      double v86 = v84;
    }
    else {
      double v86 = 5.0;
    }
    sub_1003F7FCC((uint64_t)v137, v138, v85, 1);
    double v87 = (double)(0xAAAAAAAAAAAAAAABLL * ((v150 - (_BYTE *)__p) >> 5)) * 0.5;
    double v88 = v32 * 0.5;
    uint64_t v89 = v137;
    if (v137 != (char *)v138)
    {
      int v90 = 0;
      double v91 = 0.0;
      while (1)
      {
        double v92 = v89 + 8;
        if (v87 <= (double)v90 || v91 >= v88)
        {
          uint64_t v94 = a2[1];
          unint64_t v95 = (unint64_t)a2[2];
          if ((unint64_t)v94 >= v95)
          {
            unint64_t v96 = 0xAAAAAAAAAAAAAAABLL * (((char *)v94 - (_BYTE *)*a2) >> 5);
            unint64_t v97 = v96 + 1;
            if (v96 + 1 > 0x2AAAAAAAAAAAAAALL) {
              goto LABEL_193;
            }
            unint64_t v98 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v95 - (void)*a2) >> 5);
            if (2 * v98 > v97) {
              unint64_t v97 = 2 * v98;
            }
            if (v98 >= 0x155555555555555LL) {
              unint64_t v99 = 0x2AAAAAAAAAAAAAALL;
            }
            else {
              unint64_t v99 = v97;
            }
            if (v99) {
              BOOL v100 = (char *)sub_1003F6AEC((uint64_t)(a2 + 2), v99);
            }
            else {
              BOOL v100 = 0LL;
            }
            unint64_t v110 = &v100[96 * v96];
            __int128 v122 = *(_OWORD *)(v89 + 24);
            *(_OWORD *)unint64_t v110 = *v92;
            *((_OWORD *)v110 + 1) = v122;
            __int128 v123 = *(_OWORD *)(v89 + 40);
            __int128 v124 = *(_OWORD *)(v89 + 56);
            __int128 v125 = *(_OWORD *)(v89 + 88);
            *((_OWORD *)v110 + 4) = *(_OWORD *)(v89 + 72);
            *((_OWORD *)v110 + 5) = v125;
            *((_OWORD *)v110 + 2) = v123;
            *((_OWORD *)v110 + 3) = v124;
            int v126 = (char *)*a2;
            __int128 v115 = (char *)a2[1];
            unint64_t v117 = v110;
            if (v115 != *a2)
            {
              do
              {
                __int128 v127 = *((_OWORD *)v115 - 5);
                *(v117 - 6) = *((_OWORD *)v115 - 6);
                *(v117 - 5) = v127;
                __int128 v128 = *((_OWORD *)v115 - 4);
                __int128 v129 = *((_OWORD *)v115 - 3);
                __int128 v130 = *((_OWORD *)v115 - 2);
                *(_OWORD *)((char *)v117 - 23) = *(_OWORD *)(v115 - 23);
                *(v117 - 3) = v129;
                *(v117 - 2) = v130;
                *(v117 - 4) = v128;
                v117 -= 6;
                v115 -= 96;
              }

              while (v115 != v126);
              goto LABEL_155;
            }

            goto LABEL_156;
          }

LABEL_160:
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101836D40);
    }
    BOOL v131 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134284289;
      *(double *)&uint8_t buf[4] = v56;
      *(_WORD *)&_BYTE buf[12] = 2049;
      *(double *)&buf[14] = v86;
      *(_WORD *)&buf[22] = 2049;
      *(double *)&_BYTE buf[24] = v87;
      LOWORD(v161) = 2049;
      *(double *)((char *)&v161 + 2) = v88;
      _os_log_impl( (void *)&_mh_execute_header,  v131,  OS_LOG_TYPE_DEBUG,  "WifiCalc, zaxis, reject outlier, medianAltitude, %{private}.2f, maxDeviationFromMedian, %{private}.2f, maxNumAps ToReject, %{private}.1f, maxWeightsToReject, %{private}.2f",  buf,  0x2Au);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101836D40);
      }
      int v152 = 134284289;
      double v153 = v56;
      __int16 v154 = 2049;
      double v155 = v86;
      __int16 v156 = 2049;
      double v157 = v87;
      __int16 v158 = 2049;
      double v159 = v88;
      LODWORD(v136) = 42;
      unint64_t v135 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "WifiCalc, zaxis, reject outlier, medianAltitude, %{private}.2f, maxDeviationFromMedian, %{private }.2f, maxNumApsToReject, %{private}.1f, maxWeightsToReject, %{private}.2f",  &v152,  v136);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLLocationCalculator::rejectOutlierAltitudes(const std::vector<CLWifiAccessPoint> &, std::vector<CLW ifiAccessPoint> &)",  "%s\n",  v135);
      if (v135 != buf) {
        free(v135);
      }
    }

    if (v137) {
      operator delete(v137);
    }
    if (v140)
    {
      uint64_t v141 = (double *)v140;
      operator delete(v140);
    }

    if (v143)
    {
      uint64_t v144 = (double *)v143;
      operator delete(v143);
    }

    if (v146)
    {
      int v147 = (char *)v146;
      operator delete(v146);
    }
  }

  if (__p)
  {
    float v150 = (char *)__p;
    operator delete(__p);
  }

          if (v126)
          {
            __int128 v127 = v126;
            operator delete(v126);
          }

          id v79 = (std::__shared_weak_count *)*((void *)&buf + 1);
          if (*((void *)&buf + 1))
          {
            double v80 = (unint64_t *)(*((void *)&buf + 1) + 8LL);
            do
              uint64_t v81 = __ldaxr(v80);
            while (__stlxr(v81 - 1, v80));
            if (!v81)
            {
              ((void (*)(std::__shared_weak_count *, void **))v79->__on_zero_shared)(v79, v62);
              std::__shared_weak_count::__release_weak(v79);
            }
          }

          unint64_t v61 = (uint64_t *)v61[1];
          if (v61 == &v108)
          {
            double v82 = *(double *)(a1 + 1624);
            *(void *)(a1 + 1632) = 0LL;
            if (v82 > 0.0)
            {
              unint64_t v83 = *(double *)(a1 + 1616) / v82;
              *(double *)(a1 + 1632) = v83;
              if (v83 > 1000000.0) {
                *(void *)(a1 + 1632) = 0x412E848000000000LL;
              }
            }

            break;
          }
        }
      }

  uint64_t result = *(float *)(a2 + 220);
  v5 |= 0x10000000000000uLL;
  *uint64_t v2 = v5;
  *(_WORD *)(a1 + 3sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v6;
  *(_BYTE *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 22sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = result;
  LOWORD(v_Block_object_dispose((const void *)(v30 - 184), 8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x8000000000000LL) == 0)
  {
LABEL_80:
    if ((v4 & 0x100000000000000LL) == 0) {
      goto LABEL_81;
    }
    goto LABEL_162;
  }

  PB::TextFormatter::format(this, "rolloverCrashDetectorDecisionLowSense", *(_BYTE *)(a1 + 312));
  uint64_t v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*(_WORD *)(a1 + 324) & 4) == 0)
  {
LABEL_79:
    if ((v7 & 0x40000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_162;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 220), 0x10Eu);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  int v5 = *v4;
  if ((*v4 & 0x8000000000000LL) == 0)
  {
LABEL_80:
    if ((v5 & 0x100000000000000LL) == 0) {
      goto LABEL_81;
    }
    goto LABEL_162;
  }

  uint64_t v49 = *(_BYTE *)(a2 + 353);
  v6 |= 0x40000000000uLL;
  *uint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_BYTE *)(a1 + 353) = v49;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x10000000000LL) == 0)
  {
LABEL_55:
    if ((v7 & 0x20000000000LL) == 0) {
      goto LABEL_56;
    }
    goto LABEL_162;
  }

  PB::TextFormatter::format(this, "numDeescalationAOI", *(_DWORD *)(a1 + 168));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x200000000LL) == 0)
  {
LABEL_59:
    if ((v7 & 0x400000000LL) == 0) {
      goto LABEL_60;
    }
    goto LABEL_162;
  }

  uint64_t result = PB::Writer::write(this, *(_BYTE *)(v3 + 353), 0x13Eu);
  int v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x10000000000LL) == 0)
  {
LABEL_55:
    if ((v6 & 0x20000000000LL) == 0) {
      goto LABEL_56;
    }
    goto LABEL_162;
  }

  unint64_t v96 = *(_BYTE *)(a2 + 184);
  v3 |= 0x2000000000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(_BYTE *)(result + 214) = BYTE2(v4);
  *(_BYTE *)(result + 184) = v96;
  LOWORD(sub_1012279C0(0LL, v4, v5) = *(_WORD *)(a2 + 212);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x2000000000000LL) == 0)
  {
LABEL_82:
    if ((v5 & 0x20) == 0) {
      goto LABEL_83;
    }
    goto LABEL_162;
  }

  PB::TextFormatter::format(this, "saturationMet1", *(_BYTE *)(a1 + 202));
  int v5 = *(void *)(a1 + 204);
  if (((*(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16)) & 0x10000) == 0)
  {
LABEL_81:
    if ((v5 & 1) == 0) {
      goto LABEL_82;
    }
    goto LABEL_162;
  }

  uint64_t result = PB::Writer::write(this, *(_BYTE *)(v3 + 175), 0x4C2u);
  LOWORD(sub_1012279C0(0LL, v4, v5) = *(_WORD *)(v3 + 212);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v5 & 0x100) == 0)
  {
LABEL_82:
    if ((v4 & 0x100000000000000LL) == 0) {
      goto LABEL_83;
    }
    goto LABEL_162;
  }

          uint64_t v4 = *((void *)this + 1);
          int v5 = *((void *)this + 2);
          uint64_t v6 = *((unsigned __int8 *)this + 24);
          if (v4 >= v5 || v6 != 0) {
            return v6 == 0;
          }
          break;
        case 4u:
          *(_WORD *)(a1 + 96) |= 8u;
          double v56 = *((void *)this + 1);
          if (v56 > 0xFFFFFFFFFFFFFFFBLL || v56 + 4 > *((void *)this + 2)) {
            goto LABEL_156;
          }
          *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v56);
          goto LABEL_158;
        case 5u:
          *(_WORD *)(a1 + 96) |= 0x10u;
          double v57 = *((void *)this + 1);
          if (v57 > 0xFFFFFFFFFFFFFFFBLL || v57 + 4 > *((void *)this + 2)) {
            goto LABEL_156;
          }
          *(_DWORD *)(a1 + 8sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(_DWORD *)(*(void *)this + v57);
          goto LABEL_158;
        case 6u:
          *(_WORD *)(a1 + 96) |= 0x80u;
          uint64_t v58 = *((void *)this + 1);
          if (v58 >= *((void *)this + 2))
          {
            unint64_t v61 = 0;
            *((_BYTE *)this + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 1;
          }

          else
          {
            double v59 = v58 + 1;
            unint64_t v60 = *(unsigned __int8 *)(*(void *)this + v58);
            *((void *)this + 1) = v59;
            unint64_t v61 = v60 != 0;
          }

          *(_BYTE *)(a1 + 92) = v61;
          goto LABEL_160;
        case 7u:
          *(_WORD *)(a1 + 96) |= 0x100u;
          unint64_t v62 = *((void *)this + 1);
          if (v62 >= *((void *)this + 2))
          {
            double v65 = 0;
            *((_BYTE *)this + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 1;
          }

          else
          {
            double v63 = v62 + 1;
            uint64_t v64 = *(unsigned __int8 *)(*(void *)this + v62);
            *((void *)this + 1) = v63;
            double v65 = v64 != 0;
          }

          *(_BYTE *)(a1 + 93) = v65;
          goto LABEL_160;
        case 8u:
          *(_WORD *)(a1 + 96) |= 4u;
          unint64_t v66 = *((void *)this + 1);
          __int128 v67 = *((void *)this + 2);
          __int128 v68 = *(void *)this;
          if (v66 <= 0xFFFFFFFFFFFFFFF5LL && v66 + 10 <= v67)
          {
            __int128 v69 = 0;
            __int128 v70 = 0;
            __int128 v71 = 0LL;
            do
            {
              int v72 = v66 + 1;
              *((void *)this + 1) = v66 + 1;
              double v73 = *(_BYTE *)(v68 + v66);
              v71 |= (unint64_t)(v73 & 0x7F) << v69;
              if ((v73 & 0x80) == 0) {
                goto LABEL_139;
              }
              v69 += 7;
              unint64_t v66 = v72;
              __int128 v20 = v70++ > 8;
            }

            while (!v20);
LABEL_117:
            LODWORD(v71) = 0;
            goto LABEL_139;
          }

          unint64_t v83 = 0;
          double v84 = 0;
          __int128 v71 = 0LL;
          if (v67 <= v66) {
            __int128 v67 = *((void *)this + 1);
          }
          while (2)
          {
            if (v67 == v66)
            {
              LODWORD(v71) = 0;
              *((_BYTE *)this + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 1;
            }

            else
            {
              uint64_t v85 = v66 + 1;
              double v86 = *(_BYTE *)(v68 + v66);
              *((void *)this + 1) = v85;
              v71 |= (unint64_t)(v86 & 0x7F) << v83;
              if (v86 < 0)
              {
                v83 += 7;
                unint64_t v66 = v85;
                __int128 v20 = v84++ > 8;
                if (v20) {
                  goto LABEL_117;
                }
                continue;
              }

              if (*((_BYTE *)this + 24)) {
                LODWORD(v71) = 0;
              }
            }

            break;
          }

void sub_1003F1068( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20, void *a21, uint64_t a22, uint64_t a23, void *a24, uint64_t a25)
{
  if (__p) {
    operator delete(__p);
  }
  if (a15) {
    operator delete(a15);
  }
  if (a18) {
    operator delete(a18);
  }
  if (a21) {
    operator delete(a21);
  }
  if (a24) {
    operator delete(a24);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003F111C(void *a1@<X0>, _BYTE *a2@<X1>, int a3@<W2>, char **a4@<X8>)
{
  v42[0] = 0LL;
  v42[1] = 0LL;
  int v41 = v42;
  unint64_t v8 = (_OWORD *)*a1;
  __int128 v9 = (_OWORD *)a1[1];
  while (v8 != v9)
  {
    sub_1007EC360(&v38);
    int v10 = *((_DWORD *)v8 + 18);
    std::string __p = v38;
    memset(&v38, 0, sizeof(v38));
    int v40 = v10;
    sub_1003F95E8((uint64_t **)&v41, (const void **)&__p.__r_.__value_.__l.__data_, (uint64_t)&__p);
    v8 += 6;
  }

  sub_1003F1438((const void ***)&v41, a2, a3, (uint64_t)&__p);
  *a4 = 0LL;
  a4[1] = 0LL;
  a4[2] = 0LL;
  __int128 v11 = (_OWORD *)*a1;
  __int128 v12 = (_OWORD *)a1[1];
  if ((_OWORD *)*a1 != v12)
  {
    do
    {
      sub_1007EC360(&v38);
      uint64_t v13 = (std::string *)sub_10008E8D0((uint64_t)&__p, (const void **)&v38.__r_.__value_.__l.__data_);
      if (&__p.__r_.__value_.__r.__words[1] != (std::string::size_type *)v13)
      {
        unint64_t v15 = a4[1];
        unint64_t v14 = (unint64_t)a4[2];
        if ((unint64_t)v15 >= v14)
        {
          __int128 v21 = *a4;
          unint64_t v22 = 0xAAAAAAAAAAAAAAABLL * ((v15 - *a4) >> 5);
          unint64_t v23 = v22 + 1;
          if (v22 + 1 > 0x2AAAAAAAAAAAAAALL) {
            sub_100007008();
          }
          unint64_t v24 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v14 - (void)v21) >> 5);
          if (2 * v24 > v23) {
            unint64_t v23 = 2 * v24;
          }
          if (v24 >= 0x155555555555555LL) {
            unint64_t v25 = 0x2AAAAAAAAAAAAAALL;
          }
          else {
            unint64_t v25 = v23;
          }
          if (v25)
          {
            __int128 v26 = (char *)sub_1003F6AEC((uint64_t)(a4 + 2), v25);
            __int128 v21 = *a4;
            unint64_t v15 = a4[1];
          }

          else
          {
            __int128 v26 = 0LL;
          }

          __int128 v27 = &v26[96 * v22];
          __int128 v28 = v11[1];
          *(_OWORD *)__int128 v27 = *v11;
          *((_OWORD *)v27 + 1) = v28;
          __int128 v29 = v11[2];
          __int128 v30 = v11[3];
          __int128 v31 = v11[5];
          *((_OWORD *)v27 + 4) = v11[4];
          *((_OWORD *)v27 + 5) = v31;
          *((_OWORD *)v27 + 2) = v29;
          *((_OWORD *)v27 + 3) = v30;
          if (v15 == v21)
          {
            unint64_t v37 = &v26[96 * v22];
          }

          else
          {
            double v32 = &v26[96 * v22];
            do
            {
              __int128 v33 = *((_OWORD *)v15 - 5);
              *((_OWORD *)v32 - 6) = *((_OWORD *)v15 - 6);
              *((_OWORD *)v32 - 5) = v33;
              __int128 v34 = *((_OWORD *)v15 - 4);
              __int128 v35 = *((_OWORD *)v15 - 3);
              __int128 v36 = *((_OWORD *)v15 - 1);
              unint64_t v37 = v32 - 96;
              *((_OWORD *)v32 - 2) = *((_OWORD *)v15 - 2);
              *((_OWORD *)v32 - 1) = v36;
              *((_OWORD *)v32 - 4) = v34;
              *((_OWORD *)v32 - 3) = v35;
              v15 -= 96;
              v32 -= 96;
            }

            while (v15 != v21);
          }

          __int128 v20 = v27 + 96;
          *a4 = v37;
          a4[1] = v27 + 96;
          a4[2] = &v26[96 * v25];
          if (v21) {
            operator delete(v21);
          }
        }

        else
        {
          __int128 v16 = v11[1];
          *(_OWORD *)unint64_t v15 = *v11;
          *((_OWORD *)v15 + 1) = v16;
          __int128 v17 = v11[2];
          __int128 v18 = v11[3];
          __int128 v19 = v11[5];
          *((_OWORD *)v15 + 4) = v11[4];
          *((_OWORD *)v15 + 5) = v19;
          *((_OWORD *)v15 + 2) = v17;
          *((_OWORD *)v15 + 3) = v18;
          __int128 v20 = v15 + 96;
        }

        a4[1] = v20;
      }

      v11 += 6;
    }

    while (v11 != v12);
  }

  sub_1000229D4((uint64_t)&__p, (char *)__p.__r_.__value_.__l.__size_);
  sub_1000229D4((uint64_t)&v41, v42[0]);
}

void sub_1003F13B0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20, char a21, uint64_t a22, uint64_t a23, char a24, char *a25)
{
}

void sub_1003F1438(const void ***a1@<X0>, _BYTE *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v40 = 0LL;
  uint64_t v41 = 0LL;
  unint64_t v39 = (uint64_t *)&v40;
  int v5 = a1 + 1;
  uint64_t v6 = *a1;
  do
  {
    if (((_DWORD)v6[7] & 0x80000000) != 0) {
      sub_1003F95E8(&v39, v6 + 4, (uint64_t)(v6 + 4));
    }
    __int128 v9 = (const void **)v6[1];
    if (v9)
    {
      do
      {
        int v10 = (const void ***)v9;
        __int128 v9 = (const void **)*v9;
      }

      while (v9);
    }

    else
    {
      do
      {
        int v10 = (const void ***)v6[2];
        BOOL v11 = *v10 == v6;
        uint64_t v6 = (const void **)v10;
      }

      while (!v11);
    }

    uint64_t v6 = (const void **)v10;
  }

  while (v10 != v5);
  if (!v41)
  {
LABEL_22:
    __int128 v18 = v40;
    *(void *)(a4 + _Block_object_dispose((const void *)(v30 - 184), 8) = v40;
    *(void *)(a4 + 16) = 0LL;
    *(void *)a4 = a4 + 8;
    goto LABEL_84;
  }

  *(void *)(a4 + _Block_object_dispose((const void *)(v30 - 184), 8) = 0LL;
  __int128 v12 = (uint64_t *)(a4 + 8);
  *(void *)(a4 + 16) = 0LL;
  *(void *)a4 = a4 + 8;
  uint64_t v13 = v39;
  if (v39 == (uint64_t *)&v40)
  {
    __int128 v17 = (unint64_t *)(a4 + 16);
  }

  else
  {
    do
    {
      int v14 = *((_DWORD *)v13 + 14);
      unint64_t v15 = (uint64_t *)v13[1];
      if (v15)
      {
        do
        {
          __int128 v16 = v15;
          unint64_t v15 = (uint64_t *)*v15;
        }

        while (v15);
      }

      else
      {
        do
        {
          __int128 v16 = (uint64_t *)v13[2];
          BOOL v11 = *v16 == (void)v13;
          uint64_t v13 = v16;
        }

        while (!v11);
      }

      uint64_t v13 = v16;
    }

    while (v16 != (uint64_t *)&v40);
    __int128 v17 = (unint64_t *)(a4 + 16);
    if (*(void *)(a4 + 16)) {
      goto LABEL_37;
    }
  }

  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101836D40);
  }
  __int128 v19 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEBUG,  "WifiCalc, zaxis, all aps filtered out due to weak rssi, add them back to yield a fix",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101836D40);
    }
    LOWORD(__p[0]) = 0;
    std::string v38 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "WifiCalc, zaxis, all aps filtered out due to weak rssi, add them back to yield a fix",  __p,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static std::map<std::string, int> CLLocationCalculator::filterWifiApsBasedOnRssiCriteria(const std::map<std::strin g, int> &, BOOL &, const CLSignalEnvironmentProvider_Type::SignalEnvironmentType)",  "%s\n",  v38);
  }

  __int128 v20 = v39;
  if (v39 != (uint64_t *)&v40)
  {
    do
    {
      sub_1003F95E8((uint64_t **)a4, (const void **)v20 + 4, (uint64_t)(v20 + 4));
      __int128 v21 = (uint64_t *)v20[1];
      if (v21)
      {
        do
        {
          unint64_t v22 = v21;
          __int128 v21 = (uint64_t *)*v21;
        }

        while (v21);
      }

      else
      {
        do
        {
          unint64_t v22 = (uint64_t *)v20[2];
          BOOL v11 = *v22 == (void)v20;
          __int128 v20 = v22;
        }

        while (!v11);
      }

      __int128 v20 = v22;
    }

    while (v22 != (uint64_t *)&v40);
  }

  *a2 = 1;
LABEL_37:
  while (1)
  {
    unint64_t v23 = *v17;
    unint64_t v24 = *(uint64_t **)a4;
    unint64_t v25 = (uint64_t *)(a4 + 8);
    __int128 v26 = (uint64_t *)(a4 + 8);
    if (*(uint64_t **)a4 != v12)
    {
      unint64_t v25 = *(uint64_t **)a4;
      while (1)
      {
        __int128 v27 = (uint64_t *)v24[1];
        __int128 v28 = v24;
        if (v27)
        {
          do
          {
            unint64_t v24 = v27;
            __int128 v27 = (uint64_t *)*v27;
          }

          while (v27);
        }

        else
        {
          do
          {
            unint64_t v24 = (uint64_t *)v28[2];
            BOOL v11 = *v24 == (void)v28;
            __int128 v28 = v24;
          }

          while (!v11);
        }

        if (v24 == v12) {
          break;
        }
        if (*((char *)v25 + 55) < 0)
        {
          sub_1010DD48C(buf, (void *)v25[4], v25[5]);
        }

        else
        {
          *(_OWORD *)std::stringbuf::string_type buf = *((_OWORD *)v25 + 2);
          uint64_t v46 = v25[6];
        }

        int v29 = *((_DWORD *)v25 + 14);
        int v47 = v29;
        if (*((char *)v24 + 55) < 0)
        {
          sub_1010DD48C(__p, (void *)v24[4], v24[5]);
          int v29 = v47;
        }

        else
        {
          *(_OWORD *)std::string __p = *((_OWORD *)v24 + 2);
          uint64_t v43 = v24[6];
        }

        int v30 = *((_DWORD *)v24 + 14);
        int v44 = v30;
        if (SHIBYTE(v43) < 0) {
          operator delete(__p[0]);
        }
        if (SHIBYTE(v46) < 0) {
          operator delete(*(void **)buf);
        }
        if (v29 < v30) {
          unint64_t v25 = v24;
        }
      }

      __int128 v26 = *(uint64_t **)a4;
      if (*(uint64_t **)a4 == v12)
      {
        __int128 v26 = (uint64_t *)(a4 + 8);
      }

      else
      {
        __int128 v31 = *(uint64_t **)a4;
        while (1)
        {
          double v32 = (uint64_t *)v31[1];
          __int128 v33 = v31;
          if (v32)
          {
            do
            {
              __int128 v31 = v32;
              double v32 = (uint64_t *)*v32;
            }

            while (v32);
          }

          else
          {
            do
            {
              __int128 v31 = (uint64_t *)v33[2];
              BOOL v11 = *v31 == (void)v33;
              __int128 v33 = v31;
            }

            while (!v11);
          }

          if (v31 == v12) {
            break;
          }
          if (*((char *)v31 + 55) < 0)
          {
            sub_1010DD48C(buf, (void *)v31[4], v31[5]);
          }

          else
          {
            *(_OWORD *)std::stringbuf::string_type buf = *((_OWORD *)v31 + 2);
            uint64_t v46 = v31[6];
          }

          int v34 = *((_DWORD *)v31 + 14);
          int v47 = v34;
          if (*((char *)v26 + 55) < 0)
          {
            sub_1010DD48C(__p, (void *)v26[4], v26[5]);
            int v34 = v47;
          }

          else
          {
            *(_OWORD *)std::string __p = *((_OWORD *)v26 + 2);
            uint64_t v43 = v26[6];
          }

          int v35 = *((_DWORD *)v26 + 14);
          int v44 = v35;
          if (SHIBYTE(v43) < 0) {
            operator delete(__p[0]);
          }
          if (SHIBYTE(v46) < 0) {
            operator delete(*(void **)buf);
          }
          if (v34 < v35) {
            __int128 v26 = v31;
          }
        }
      }
    }

    int v36 = *((_DWORD *)v25 + 14);
    int v37 = *((_DWORD *)v26 + 14);
    if (v36 - v37 <= *((_DWORD *)sub_100F4BF20() + 72)) {
      break;
    }
    sub_1003F9708((uint64_t **)a4, (uint64_t)v26);
  }

  __int128 v18 = v40;
LABEL_84:
  sub_1000229D4((uint64_t)&v39, v18);
}

void sub_1003F1974( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, char *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20, int a21, __int16 a22, char a23, char a24)
{
}

uint64_t sub_1003F19D8(int a1)
{
  uint64_t v2 = *((unsigned int *)sub_100F4BF20() + 58);
  switch(a1)
  {
    case 0:
      uint64_t v2 = *((unsigned int *)sub_100F4BF20() + 58);
      break;
    case 1:
      uint64_t v2 = *((unsigned int *)sub_100F4BF20() + 60);
      break;
    case 2:
      uint64_t v2 = *((unsigned int *)sub_100F4BF20() + 61);
      break;
    case 3:
      uint64_t v2 = *((unsigned int *)sub_100F4BF20() + 62);
      break;
    case 4:
      uint64_t v2 = *((unsigned int *)sub_100F4BF20() + 63);
      break;
    case 6:
      uint64_t v2 = *((unsigned int *)sub_100F4BF20() + 59);
      break;
    default:
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101836D40);
      }
      uint64_t v3 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 67109120;
        int v13 = a1;
        _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Received unhandled signal environment type: %d",  buf,  8u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101836D40);
        }
        int v8 = 67109120;
        int v9 = a1;
        uint64_t v4 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  16LL,  "Received unhandled signal environment type: %d",  &v8);
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "static int CLLocationCalculator::getSufficientZaxisInputApThreshold(const CLSignalEnvironmentProvider_Type::Si gnalEnvironmentType)",  "%s\n",  v4);
      }

      break;
  }

  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101836D40);
  }
  int v5 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 67109376;
    int v13 = a1;
    __int16 v14 = 1024;
    int v15 = v2;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "WifiCalc, zaxis, signal environment, %d, sufficient ap threshold, %d",  buf,  0xEu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101836D40);
    }
    int v8 = 67109376;
    int v9 = a1;
    __int16 v10 = 1024;
    int v11 = v2;
    uint64_t v7 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "WifiCalc, zaxis, signal environment, %d, sufficient ap threshold, %d",  &v8,  14);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static int CLLocationCalculator::getSufficientZaxisInputApThreshold(const CLSignalEnvironmentProvider_Type::Signal EnvironmentType)",  "%s\n",  v7);
  }

  return v2;
}

void sub_1003F1D70(uint64_t *a1@<X0>, _BYTE *a2@<X1>, uint64_t a3@<X8>)
{
  *(_OWORD *)std::string __p = 0uLL;
  uint64_t v89 = 0LL;
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  if (*a1 != v6)
  {
    uint64_t v7 = 0LL;
    do
    {
      if (*(double *)(v5 + 40) > 0.0 && (*(void *)(v5 + 40) & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
      {
        if (v7 >= v89)
        {
          int v13 = (char *)__p[0];
          unint64_t v14 = 0xAAAAAAAAAAAAAAABLL * ((v7 - (char *)__p[0]) >> 5);
          unint64_t v15 = v14 + 1;
          if (v14 + 1 > 0x2AAAAAAAAAAAAAALL) {
            sub_100007008();
          }
          else {
            unint64_t v16 = v15;
          }
          if (v16)
          {
            __int128 v17 = (char *)sub_1003F6AEC((uint64_t)&v89, v16);
            uint64_t v7 = (char *)__p[1];
            int v13 = (char *)__p[0];
          }

          else
          {
            __int128 v17 = 0LL;
          }

          __int128 v18 = &v17[96 * v14];
          __int128 v19 = *(_OWORD *)(v5 + 16);
          *(_OWORD *)__int128 v18 = *(_OWORD *)v5;
          *((_OWORD *)v18 + 1) = v19;
          __int128 v20 = *(_OWORD *)(v5 + 32);
          __int128 v21 = *(_OWORD *)(v5 + 48);
          __int128 v22 = *(_OWORD *)(v5 + 80);
          *((_OWORD *)v18 + 4) = *(_OWORD *)(v5 + 64);
          *((_OWORD *)v18 + 5) = v22;
          *((_OWORD *)v18 + 2) = v20;
          *((_OWORD *)v18 + 3) = v21;
          if (v7 == v13)
          {
            __int128 v28 = &v17[96 * v14];
          }

          else
          {
            unint64_t v23 = &v17[96 * v14];
            do
            {
              __int128 v24 = *((_OWORD *)v7 - 5);
              *((_OWORD *)v23 - 6) = *((_OWORD *)v7 - 6);
              *((_OWORD *)v23 - 5) = v24;
              __int128 v25 = *((_OWORD *)v7 - 4);
              __int128 v26 = *((_OWORD *)v7 - 3);
              __int128 v27 = *((_OWORD *)v7 - 1);
              __int128 v28 = v23 - 96;
              *((_OWORD *)v23 - 2) = *((_OWORD *)v7 - 2);
              *((_OWORD *)v23 - 1) = v27;
              *((_OWORD *)v23 - 4) = v25;
              *((_OWORD *)v23 - 3) = v26;
              v7 -= 96;
              v23 -= 96;
            }

            while (v7 != v13);
          }

          uint64_t v7 = v18 + 96;
          __p[0] = v28;
          uint64_t v89 = &v17[96 * v16];
          if (v13) {
            operator delete(v13);
          }
        }

        else
        {
          __int128 v9 = *(_OWORD *)(v5 + 16);
          *(_OWORD *)uint64_t v7 = *(_OWORD *)v5;
          *((_OWORD *)v7 + 1) = v9;
          __int128 v10 = *(_OWORD *)(v5 + 32);
          __int128 v11 = *(_OWORD *)(v5 + 48);
          __int128 v12 = *(_OWORD *)(v5 + 80);
          *((_OWORD *)v7 + 4) = *(_OWORD *)(v5 + 64);
          *((_OWORD *)v7 + 5) = v12;
          *((_OWORD *)v7 + 2) = v10;
          *((_OWORD *)v7 + 3) = v11;
          v7 += 96;
        }

        __p[1] = v7;
      }

      v5 += 96LL;
    }

    while (v5 != v6);
  }

  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101836D40);
  }
  int v29 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    unint64_t v30 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 5);
    *(_DWORD *)std::stringbuf::string_type buf = 134218240;
    unint64_t v95 = v30;
    __int16 v96 = 2048;
    unint64_t v97 = 0xAAAAAAAAAAAAAAABLL * (((char *)__p[1] - (char *)__p[0]) >> 5);
    _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEBUG,  "WifiCalc, zaxis, num input aps, %lu, num valid unc aps, %lu",  buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101836D40);
    }
    unint64_t v82 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 5);
    int v90 = 134218240;
    unint64_t v91 = v82;
    __int16 v92 = 2048;
    unint64_t v93 = 0xAAAAAAAAAAAAAAABLL * (((char *)__p[1] - (char *)__p[0]) >> 5);
    unint64_t v83 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "WifiCalc, zaxis, num input aps, %lu, num valid unc aps, %lu",  &v90,  22);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static std::vector<CLWifiAPLocation> CLLocationCalculator::filterWifiApsBasedOnVerticalUncCriteria(const std::vect or<CLWifiAPLocation> &, BOOL &)",  "%s\n",  v83);
  }

  __int128 v31 = (double *)__p[0];
  if (__p[0] == __p[1])
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101836D40);
    }
    uint64_t v81 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v81,  OS_LOG_TYPE_DEBUG,  "WifiCalc, zaxis, validUncApCollection is empty",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101836D40);
      }
      LOWORD(v9sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0;
      LODWORD(v86) = 2;
      double v84 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "WifiCalc, zaxis, validUncApCollection is empty",  &v90,  v86);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static std::vector<CLWifiAPLocation> CLLocationCalculator::filterWifiApsBasedOnVerticalUncCriteria(const std::ve ctor<CLWifiAPLocation> &, BOOL &)",  "%s\n",  v84);
    }

    *a2 = 1;
    *(_OWORD *)a3 = *(_OWORD *)__p;
    *(void *)(a3 + 16) = v89;
  }

  else
  {
    *(void *)a3 = 0LL;
    *(void *)(a3 + _Block_object_dispose((const void *)(v30 - 184), 8) = 0LL;
    *(void *)(a3 + 16) = 0LL;
    double v32 = (void *)(a3 + 16);
    do
    {
      double v33 = v31[5];
      if (v33 < *((double *)sub_100F4BF20() + 34))
      {
        int v35 = *(_OWORD **)(a3 + 8);
        unint64_t v34 = *(void *)(a3 + 16);
        if ((unint64_t)v35 >= v34)
        {
          uint64_t v41 = *(_OWORD **)a3;
          unint64_t v42 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v35 - *(void *)a3) >> 5);
          unint64_t v43 = v42 + 1;
          if (v42 + 1 > 0x2AAAAAAAAAAAAAALL) {
            sub_100007008();
          }
          unint64_t v44 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v34 - (void)v41) >> 5);
          if (2 * v44 > v43) {
            unint64_t v43 = 2 * v44;
          }
          if (v44 >= 0x155555555555555LL) {
            unint64_t v45 = 0x2AAAAAAAAAAAAAALL;
          }
          else {
            unint64_t v45 = v43;
          }
          if (v45)
          {
            uint64_t v46 = (char *)sub_1003F6AEC(a3 + 16, v45);
            uint64_t v41 = *(_OWORD **)a3;
            int v35 = *(_OWORD **)(a3 + 8);
          }

          else
          {
            uint64_t v46 = 0LL;
          }

          int v47 = &v46[96 * v42];
          __int128 v48 = *((_OWORD *)v31 + 1);
          *(_OWORD *)int v47 = *(_OWORD *)v31;
          *((_OWORD *)v47 + 1) = v48;
          __int128 v49 = *((_OWORD *)v31 + 2);
          __int128 v50 = *((_OWORD *)v31 + 3);
          __int128 v51 = *((_OWORD *)v31 + 5);
          *((_OWORD *)v47 + 4) = *((_OWORD *)v31 + 4);
          *((_OWORD *)v47 + 5) = v51;
          *((_OWORD *)v47 + 2) = v49;
          *((_OWORD *)v47 + 3) = v50;
          if (v35 == v41)
          {
            double v57 = &v46[96 * v42];
          }

          else
          {
            unint64_t v52 = &v46[96 * v42];
            do
            {
              __int128 v53 = *(v35 - 5);
              *((_OWORD *)v52 - 6) = *(v35 - 6);
              *((_OWORD *)v52 - 5) = v53;
              __int128 v54 = *(v35 - 4);
              __int128 v55 = *(v35 - 3);
              __int128 v56 = *(v35 - 1);
              double v57 = v52 - 96;
              *((_OWORD *)v52 - 2) = *(v35 - 2);
              *((_OWORD *)v52 - 1) = v56;
              *((_OWORD *)v52 - 4) = v54;
              *((_OWORD *)v52 - 3) = v55;
              v35 -= 6;
              v52 -= 96;
            }

            while (v35 != v41);
          }

          int v40 = v47 + 96;
          *(void *)a3 = v57;
          *(void *)(a3 + _Block_object_dispose((const void *)(v30 - 184), 8) = v47 + 96;
          *(void *)(a3 + 16) = &v46[96 * v45];
          if (v41) {
            operator delete(v41);
          }
        }

        else
        {
          __int128 v36 = *((_OWORD *)v31 + 1);
          _OWORD *v35 = *(_OWORD *)v31;
          v35[1] = v36;
          __int128 v37 = *((_OWORD *)v31 + 2);
          __int128 v38 = *((_OWORD *)v31 + 3);
          __int128 v39 = *((_OWORD *)v31 + 5);
          v35[4] = *((_OWORD *)v31 + 4);
          v35[5] = v39;
          void v35[2] = v37;
          v35[3] = v38;
          int v40 = v35 + 6;
        }

        *(void *)(a3 + _Block_object_dispose((const void *)(v30 - 184), 8) = v40;
      }

      v31 += 12;
    }

    while (v31 != __p[1]);
    if (*(void *)a3 == *(void *)(a3 + 8))
    {
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101836D40);
      }
      uint64_t v58 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v58,  OS_LOG_TYPE_DEBUG,  "WifiCalc, zaxis, all aps were non-slam, add them back to yield a fix",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101836D40);
        }
        LOWORD(v9sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0;
        LODWORD(v86) = 2;
        uint64_t v85 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "WifiCalc, zaxis, all aps were non-slam, add them back to yield a fix",  &v90,  v86);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "static std::vector<CLWifiAPLocation> CLLocationCalculator::filterWifiApsBasedOnVerticalUncCriteria(const std:: vector<CLWifiAPLocation> &, BOOL &)",  "%s\n",  v85);
      }

      double v59 = __p[0];
      if (__p[0] != __p[1])
      {
        unint64_t v60 = *(_OWORD **)(a3 + 8);
        do
        {
          if ((unint64_t)v60 >= *v32)
          {
            double v65 = *(_OWORD **)a3;
            unint64_t v66 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v60 - *(void *)a3) >> 5);
            unint64_t v67 = v66 + 1;
            if (v66 + 1 > 0x2AAAAAAAAAAAAAALL) {
              sub_100007008();
            }
            else {
              unint64_t v68 = v67;
            }
            if (v68)
            {
              __int128 v69 = (char *)sub_1003F6AEC(a3 + 16, v68);
              double v65 = *(_OWORD **)a3;
              unint64_t v60 = *(_OWORD **)(a3 + 8);
            }

            else
            {
              __int128 v69 = 0LL;
            }

            __int128 v70 = &v69[96 * v66];
            __int128 v71 = v59[1];
            *(_OWORD *)__int128 v70 = *v59;
            *((_OWORD *)v70 + 1) = v71;
            __int128 v72 = v59[2];
            __int128 v73 = v59[3];
            __int128 v74 = v59[5];
            *((_OWORD *)v70 + 4) = v59[4];
            *((_OWORD *)v70 + 5) = v74;
            *((_OWORD *)v70 + 2) = v72;
            *((_OWORD *)v70 + 3) = v73;
            if (v60 == v65)
            {
              double v80 = &v69[96 * v66];
            }

            else
            {
              uint64_t v75 = &v69[96 * v66];
              do
              {
                __int128 v76 = *(v60 - 5);
                *((_OWORD *)v75 - 6) = *(v60 - 6);
                *((_OWORD *)v75 - 5) = v76;
                __int128 v77 = *(v60 - 4);
                __int128 v78 = *(v60 - 3);
                __int128 v79 = *(v60 - 1);
                double v80 = v75 - 96;
                *((_OWORD *)v75 - 2) = *(v60 - 2);
                *((_OWORD *)v75 - 1) = v79;
                *((_OWORD *)v75 - 4) = v77;
                *((_OWORD *)v75 - 3) = v78;
                v60 -= 6;
                v75 -= 96;
              }

              while (v60 != v65);
            }

            unint64_t v60 = v70 + 96;
            *(void *)a3 = v80;
            *(void *)(a3 + _Block_object_dispose((const void *)(v30 - 184), 8) = v70 + 96;
            *(void *)(a3 + 16) = &v69[96 * v68];
            if (v65) {
              operator delete(v65);
            }
          }

          else
          {
            __int128 v61 = v59[1];
            *unint64_t v60 = *v59;
            v60[1] = v61;
            __int128 v62 = v59[2];
            __int128 v63 = v59[3];
            __int128 v64 = v59[5];
            v60[4] = v59[4];
            v60[5] = v64;
            v60[2] = v62;
            v60[3] = v63;
            v60 += 6;
          }

          *(void *)(a3 + _Block_object_dispose((const void *)(v30 - 184), 8) = v60;
          v59 += 6;
        }

        while (v59 != __p[1]);
      }

      *a2 = 1;
    }

    if (__p[0]) {
      operator delete(__p[0]);
    }
  }

void sub_1003F2640( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  unint64_t v16 = *(void **)v14;
  if (*(void *)v14)
  {
    *(void *)(v14 + _Block_object_dispose((const void *)(v30 - 184), 8) = v16;
    operator delete(v16);
  }

  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003F2698(uint64_t ***a1, const void ***a2, int *a3, int *a4, double *a5, double *a6)
{
  v30[0] = 0LL;
  v30[1] = 0LL;
  int v29 = v30;
  __int128 v11 = *a1;
  __int128 v12 = a1[1];
  while (v11 != v12)
  {
    __int128 v27 = (const void **)*v11;
    sub_1007EC360(&__p);
    sub_1003F9748((uint64_t **)&v29, (const void **)&__p.__r_.__value_.__l.__data_, (uint64_t)&__p);
    v11 += 12;
  }

  v28[0] = 0LL;
  v28[1] = 0LL;
  __int128 v27 = v28;
  int v13 = *a2;
  uint64_t v14 = v28;
  if (*a2 != (const void **)(a2 + 1))
  {
    do
    {
      sub_10002276C((uint64_t **)&v27, v13 + 4, (uint64_t)(v13 + 4));
      unint64_t v15 = (const void **)v13[1];
      if (v15)
      {
        do
        {
          unint64_t v16 = (const void ***)v15;
          unint64_t v15 = (const void **)*v15;
        }

        while (v15);
      }

      else
      {
        do
        {
          unint64_t v16 = (const void ***)v13[2];
          BOOL v17 = *v16 == v13;
          int v13 = (const void **)v16;
        }

        while (!v17);
      }

      int v13 = (const void **)v16;
    }

    while (v16 != a2 + 1);
    uint64_t v14 = v27;
  }

  __int128 v25 = 0LL;
  unint64_t v26 = 0LL;
  __int128 v24 = &v25;
  sub_1003F97D8(v29, v30, v14, v28, (uint64_t)&v24, (uint64_t)&v25, (uint64_t)&v31, (uint64_t)&__p);
  *a5 = 1.0 - (double)v26 / (double)(unint64_t)a2[2];
  int v18 = *a4;
  int v19 = *a3;
  double v20 = *((double *)sub_100F4BF20() + 37);
  double v21 = *a5;
  __int128 v22 = (double *)sub_100F4BF20();
  double v23 = exp((double)(v18 - v19) / v20);
  *a6 = v23 * exp(v21 * v22[38]);
  sub_1000229D4((uint64_t)&v24, v25);
  sub_1000229D4((uint64_t)&v27, (char *)v28[0]);
  sub_1000229D4((uint64_t)&v29, v30[0]);
}

void sub_1003F2870( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char *a10, uint64_t a11, char a12, char *a13, uint64_t a14, char a15, char *a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20, int a21, __int16 a22, char a23, char a24)
{
}

void sub_1003F28CC( uint64_t a1, uint64_t *a2, std::string::size_type *a3, double *a4, int *a5, double *a6, BOOL *a7, int *a8, double a9, uint64_t a10, int a11)
{
  uint64_t v247 = 0LL;
  int v245 = 0;
  *(double *)&uint64_t v244 = 1.0;
  *a7 = 0;
  *a8 = 0;
  *a6 = -200.0;
  if (*a2 != a2[1])
  {
    unsigned __int8 v243 = 0;
    sub_1003F1D70(a2, &v243, (uint64_t)&v241);
    double v21 = v241;
    double v20 = v242;
    if (v243) {
      int v22 = 0;
    }
    else {
      int v22 = -1431655765 * ((unint64_t)((_BYTE *)v242 - (_BYTE *)v241) >> 5);
    }
    *(_DWORD *)(a10 + 116) = -1431655765 * ((unint64_t)((_BYTE *)v242 - (_BYTE *)v241) >> 5);
    *(_DWORD *)(a10 + 152) = v22;
    if (v20 == v21)
    {
LABEL_200:
      if (v20)
      {
        v242 = v20;
        operator delete(v20);
      }

      return;
    }

    v226 = a5;
    v230 = a6;
    v231 = a7;
    v228 = a4;
    v229 = a8;
    sub_1003F111C(&v241, &v243, a11, (char **)&v239);
    __int128 v24 = (char *)v239;
    double v23 = v240;
    if (v239 == v240)
    {
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101836D40);
      }
      int v35 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_DEBUG,  "WifiCalc, zaxis, validRssiApCollection is empty",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101836D40);
        }
        LOWORD(__p.__r_.__value_.__l.__data_) = 0;
        __int128 v36 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "WifiCalc, zaxis, validRssiApCollection is empty",  &__p,  2);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLLocationCalculator::calculateWifiCentroidAltitude(const std::map<std::string, int> *, const std: :vector<CLWifiAPLocation> &, double &, double &, CFAbsoluteTime, int &, double &, BOOL &, unsigned int &, Zaxi sDebuggingData &, const CLSignalEnvironmentProvider_Type::SignalEnvironmentType)",  "%s\n",  v36);
        if (v36 != buf) {
          free(v36);
        }
      }

      goto LABEL_197;
    }

    v225 = a2;
    __int128 v25 = (char *)v239 + 96;
    unint64_t v26 = v239;
    if ((char *)v239 + 96 != v240)
    {
      unint64_t v26 = v239;
      do
      {
        if (v26[18] < *((_DWORD *)v25 + 18)) {
          unint64_t v26 = v25;
        }
        v25 += 96;
      }

      while (v25 != v240);
    }

    int v246 = v26[18];
    if (a1)
    {
      *(_DWORD *)(a10 + 112) = *(void *)(a1 + 16);
      sub_1003F1438((const void ***)a1, &v233, a11, (uint64_t)&v236);
      __int128 v27 = (char *)v236;
      if (v236 != &v237)
      {
        __int128 v28 = (char **)v236;
        while (1)
        {
          int v29 = v28[1];
          unint64_t v30 = v28;
          if (v29)
          {
            do
            {
              __int128 v28 = (char **)v29;
              int v29 = *(char **)v29;
            }

            while (v29);
          }

          else
          {
            do
            {
              __int128 v28 = (char **)v30[2];
              BOOL v70 = *v28 == (char *)v30;
              unint64_t v30 = v28;
            }

            while (!v70);
          }

          if (v28 == &v237) {
            break;
          }
          if (v27[55] < 0)
          {
            sub_1010DD48C(buf, *((void **)v27 + 4), *((void *)v27 + 5));
          }

          else
          {
            *(_OWORD *)std::stringbuf::string_type buf = *((_OWORD *)v27 + 2);
            *(void *)&uint8_t buf[16] = *((void *)v27 + 6);
          }

          int v31 = *((_DWORD *)v27 + 14);
          *(_DWORD *)&_BYTE buf[24] = v31;
          if (*((char *)v28 + 55) < 0)
          {
            sub_1010DD48C(&__p, v28[4], (unint64_t)v28[5]);
            int v31 = *(_DWORD *)&buf[24];
          }

          else
          {
            std::string __p = *(std::string *)(v28 + 4);
          }

          int v32 = *((_DWORD *)v28 + 14);
          LODWORD(v249) = v32;
          if ((buf[23] & 0x80000000) != 0) {
            operator delete(*(void **)buf);
          }
          if (v31 < v32) {
            __int128 v27 = (char *)v28;
          }
        }
      }

      int v245 = *((_DWORD *)v27 + 14);
      sub_1003F2698((uint64_t ***)&v239, (const void ***)&v236, &v246, &v245, (double *)&v247, (double *)&v244);
      sub_1000229D4((uint64_t)&v236, v237);
      __int128 v24 = (char *)v239;
      double v23 = v240;
    }

    else
    {
      *(double *)&uint64_t v244 = 1.0;
      uint64_t v247 = 0LL;
    }

    v236 = 0LL;
    v237 = 0LL;
    for (unint64_t i = 0LL; v24 != v23; v24 += 96)
    {
      sub_1003F45B4((uint64_t)v24, (uint64_t)buf);
      __int128 v37 = v237;
      if ((unint64_t)v237 >= i)
      {
        unint64_t v43 = (char *)v236;
        unint64_t v44 = 0xAAAAAAAAAAAAAAABLL * ((v237 - (_BYTE *)v236) >> 5);
        unint64_t v45 = v44 + 1;
        if (v44 + 1 > 0x2AAAAAAAAAAAAAALL) {
          sub_100007008();
        }
        else {
          unint64_t v46 = v45;
        }
        if (v46)
        {
          int v47 = (char *)sub_1003F6AEC((uint64_t)&i, v46);
          unint64_t v43 = (char *)v236;
          __int128 v37 = v237;
        }

        else
        {
          int v47 = 0LL;
        }

        __int128 v48 = &v47[96 * v44];
        __int128 v49 = *(_OWORD *)&buf[16];
        *(_OWORD *)__int128 v48 = *(_OWORD *)buf;
        *((_OWORD *)v48 + 1) = v49;
        __int128 v50 = v254;
        __int128 v51 = v255;
        __int128 v52 = v257;
        *((_OWORD *)v48 + 4) = v256;
        *((_OWORD *)v48 + 5) = v52;
        *((_OWORD *)v48 + 2) = v50;
        *((_OWORD *)v48 + 3) = v51;
        if (v37 == v43)
        {
          uint64_t v58 = &v47[96 * v44];
        }

        else
        {
          __int128 v53 = &v47[96 * v44];
          do
          {
            __int128 v54 = *((_OWORD *)v37 - 5);
            *((_OWORD *)v53 - 6) = *((_OWORD *)v37 - 6);
            *((_OWORD *)v53 - 5) = v54;
            __int128 v55 = *((_OWORD *)v37 - 4);
            __int128 v56 = *((_OWORD *)v37 - 3);
            __int128 v57 = *((_OWORD *)v37 - 2);
            uint64_t v58 = v53 - 96;
            *(_OWORD *)(v53 - 23) = *(_OWORD *)(v37 - 23);
            *((_OWORD *)v53 - 3) = v56;
            *((_OWORD *)v53 - 2) = v57;
            *((_OWORD *)v53 - 4) = v55;
            v37 -= 96;
            v53 -= 96;
          }

          while (v37 != v43);
        }

        unint64_t v42 = v48 + 96;
        v236 = v58;
        v237 = v48 + 96;
        unint64_t i = (unint64_t)&v47[96 * v46];
        if (v43) {
          operator delete(v43);
        }
      }

      else
      {
        __int128 v38 = *(_OWORD *)&buf[16];
        *(_OWORD *)v237 = *(_OWORD *)buf;
        *((_OWORD *)v37 + 1) = v38;
        __int128 v39 = v254;
        __int128 v40 = v255;
        __int128 v41 = v257;
        *((_OWORD *)v37 + 4) = v256;
        *((_OWORD *)v37 + 5) = v41;
        *((_OWORD *)v37 + 2) = v39;
        *((_OWORD *)v37 + 3) = v40;
        unint64_t v42 = v37 + 96;
      }

      v237 = v42;
    }

    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101836D40);
    }
    double v59 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134283521;
      *(void *)&uint8_t buf[4] = 0xAAAAAAAAAAAAAAABLL * ((v237 - (_BYTE *)v236) >> 5);
      _os_log_impl( (void *)&_mh_execute_header,  v59,  OS_LOG_TYPE_DEBUG,  "@WifiCalc, zaxis, num accessPointsToUseInCalculation, %{private}lu",  buf,  0xCu);
    }

    unint64_t v60 = v228;
    __int128 v61 = v229;
    __int128 v62 = v230;
    __int128 v63 = v231;
    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101836D40);
      }
      LODWORD(__p.__r_.__value_.__l.__data_) = 134283521;
      *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + 4) = 0xAAAAAAAAAAAAAAABLL
                                                                             * ((v237 - (_BYTE *)v236) >> 5);
      v210 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "@WifiCalc, zaxis, num accessPointsToUseInCalculation, %{private}lu",  &__p,  12);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLLocationCalculator::calculateWifiCentroidAltitude(const std::map<std::string, int> *, const std::v ector<CLWifiAPLocation> &, double &, double &, CFAbsoluteTime, int &, double &, BOOL &, unsigned int &, ZaxisDeb uggingData &, const CLSignalEnvironmentProvider_Type::SignalEnvironmentType)",  "%s\n",  v210);
      if (v210 != buf) {
        free(v210);
      }
      unint64_t v60 = v228;
      __int128 v61 = v229;
      __int128 v62 = v230;
      __int128 v63 = v231;
    }

    int v64 = v243;
    BOOL *v63 = v243 ^ 1;
    int v224 = v64;
    if (!v64)
    {
      BOOL *v63 = 0xAAAAAAAAAAAAAAABLL * ((v237 - (_BYTE *)v236) >> 5) >= (int)sub_1003F19D8(a11);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101836D40);
      }
      double v65 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
      {
        BOOL v66 = *v63;
        *(_DWORD *)std::stringbuf::string_type buf = 67109120;
        *(_DWORD *)&uint8_t buf[4] = v66;
        _os_log_impl( (void *)&_mh_execute_header,  v65,  OS_LOG_TYPE_DEBUG,  "@WifiCalc, zaxis, hasSufficientData, %d",  buf,  8u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101836D40);
        }
        BOOL v215 = *v231;
        LODWORD(__p.__r_.__value_.__l.__data_) = 67109120;
        HIDWORD(__p.__r_.__value_.__r.__words[0]) = v215;
        v216 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "@WifiCalc, zaxis, hasSufficientData, %d",  &__p);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLLocationCalculator::calculateWifiCentroidAltitude(const std::map<std::string, int> *, const std: :vector<CLWifiAPLocation> &, double &, double &, CFAbsoluteTime, int &, double &, BOOL &, unsigned int &, Zaxi sDebuggingData &, const CLSignalEnvironmentProvider_Type::SignalEnvironmentType)",  "%s\n",  v216);
        if (v216 != buf) {
          free(v216);
        }
        unint64_t v60 = v228;
        __int128 v61 = v229;
        __int128 v62 = v230;
        __int128 v63 = v231;
      }
    }

    unint64_t v67 = v236;
    if (v237 - (_BYTE *)v236 == 96)
    {
      *a3 = *((void *)v236 + 2);
      double v68 = *((double *)v67 + 5);
      double v69 = v68 * *((double *)sub_100F4BF20() + 32);
      *unint64_t v60 = v69;
      BOOL v70 = v69 > 0.0 && !*v63;
      if (v70)
      {
        __int128 v71 = (double *)sub_100F4BF20();
        double v72 = *v60;
        if (*v60 < v71[28]) {
          double v72 = v71[28];
        }
        *unint64_t v60 = v72;
      }

      __int128 v73 = (int *)v236;
      *__int128 v61 = -1431655765 * ((unint64_t)(v237 - (_BYTE *)v236) >> 5);
      *__int128 v62 = (double)v73[14];
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101836D40);
      }
      __int128 v74 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
      {
        std::string::size_type v75 = *a3;
        double v76 = *v60;
        unint64_t v77 = 0xAAAAAAAAAAAAAAABLL * ((v225[1] - *v225) >> 5);
        *(_DWORD *)std::stringbuf::string_type buf = 134284545;
        *(void *)&uint8_t buf[4] = v75;
        *(_WORD *)&_BYTE buf[12] = 2050;
        *(double *)&buf[14] = v76;
        *(_WORD *)&buf[22] = 2048;
        *(void *)&_BYTE buf[24] = v77;
        LOWORD(v254) = 2048;
        *(void *)((char *)&v254 + 2) = 0xAAAAAAAAAAAAAAABLL * ((v237 - (_BYTE *)v236) >> 5);
        WORD5(v254) = 1024;
        HIDWORD(v254) = v224 == 0;
        _os_log_impl( (void *)&_mh_execute_header,  v74,  OS_LOG_TYPE_DEBUG,  "WifiCalc, est, %{private}0.3f, vunc, %{public}0.1f, numInputAps, %lu, numApsUsed, %lu, isSLAM, %d",  buf,  0x30u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101836D40);
        }
        std::string::size_type v211 = *a3;
        double v212 = *v228;
        unint64_t v213 = 0xAAAAAAAAAAAAAAABLL * ((v225[1] - *v225) >> 5);
        LODWORD(__p.__r_.__value_.__l.__data_) = 134284545;
        *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + 4) = v211;
        WORD2(__p.__r_.__value_.__r.__words[1]) = 2050;
        *(double *)((char *)&__p.__r_.__value_.__r.__words[1] + 6) = v212;
        HIWORD(__p.__r_.__value_.__r.__words[2]) = 2048;
        v249 = (char *)v213;
        *(_WORD *)v250 = 2048;
        *(void *)&v250[2] = 0xAAAAAAAAAAAAAAABLL * ((v237 - (_BYTE *)v236) >> 5);
        __int16 v251 = 1024;
        BOOL v252 = v224 == 0;
        LODWORD(v223) = 48;
        v214 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "WifiCalc, est, %{private}0.3f, vunc, %{public}0.1f, numInputAps, %lu, numApsUsed, %lu, isSLAM, %d",  &__p,  v223);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLLocationCalculator::calculateWifiCentroidAltitude(const std::map<std::string, int> *, const std: :vector<CLWifiAPLocation> &, double &, double &, CFAbsoluteTime, int &, double &, BOOL &, unsigned int &, Zaxi sDebuggingData &, const CLSignalEnvironmentProvider_Type::SignalEnvironmentType)",  "%s\n",  v214);
        if (v214 != buf) {
          free(v214);
        }
        __int128 v61 = v229;
        __int128 v63 = v231;
      }

      *((_DWORD *)v236 + 21) = 1065353216;
      sub_1007EC360(&__p);
      unint64_t v78 = *(void *)(a10 + 200);
      unint64_t v79 = *(void *)(a10 + 192);
      if (v79 >= v78)
      {
        uint64_t v127 = *(void *)(a10 + 184);
        unint64_t v128 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v79 - v127) >> 3);
        unint64_t v129 = v128 + 1;
        if (v128 + 1 > 0xAAAAAAAAAAAAAAALL) {
          sub_100007008();
        }
        unint64_t v130 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v78 - v127) >> 3);
        if (2 * v130 > v129) {
          unint64_t v129 = 2 * v130;
        }
        if (v130 >= 0x555555555555555LL) {
          unint64_t v131 = 0xAAAAAAAAAAAAAAALL;
        }
        else {
          unint64_t v131 = v129;
        }
        *(void *)&__int128 v254 = a10 + 200;
        if (v131) {
          int v132 = (char *)sub_10000701C(a10 + 200, v131);
        }
        else {
          int v132 = 0LL;
        }
        double v155 = &v132[24 * v128];
        *(void *)std::stringbuf::string_type buf = v132;
        *(void *)&uint8_t buf[8] = v155;
        *(void *)&_BYTE buf[24] = &v132[24 * v131];
        __int128 v156 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
        *((void *)v155 + 2) = __p.__r_.__value_.__l.__cap_;
        *(_OWORD *)double v155 = v156;
        memset(&__p, 0, sizeof(__p));
        *(void *)&uint8_t buf[16] = v155 + 24;
        sub_100013F10((uint64_t *)(a10 + 184), buf);
        uint64_t v157 = *(void *)(a10 + 192);
        sub_100014098((uint64_t)buf);
        int size = (char)__p.__r_.__value_.__s.__size_;
        *(void *)(a10 + 192) = v157;
        if (size < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
      }

      else
      {
        __int128 v80 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
        *(void *)(v79 + 16) = __p.__r_.__value_.__l.__cap_;
        *(_OWORD *)unint64_t v79 = v80;
        *(void *)(a10 + 192) = v79 + 24;
      }

      if ((void **)(a10 + 160) != &v236) {
        sub_1003F9BA8( (char *)(a10 + 160),  (char *)v236,  (uint64_t)v237,  0xAAAAAAAAAAAAAAABLL * ((v237 - (_BYTE *)v236) >> 5));
      }
      int v159 = v246;
      int v160 = *((_DWORD *)v67 + 14);
      uint64_t v161 = v247;
      int v162 = *v61;
      BOOL v163 = *v63;
      *(_DWORD *)(a10 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v245;
      *(_DWORD *)(a10 + memset(v19, 0, 44) = v159;
      *(_DWORD *)(a10 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v160;
      *(double *)(a10 + 56) = (double)v160;
      *(_BYTE *)(a10 + 64) = 0;
      *(void *)(a10 + sub_10000AE14(v1 - 72) = 0LL;
      *(void *)(a10 + 8sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v161;
      *(_DWORD *)(a10 + 10_Block_object_dispose((const void *)(v30 - 184), 8) = v162;
      *(_BYTE *)(a10 + 1memset(v19, 0, 44) = v163;
      goto LABEL_194;
    }

    unint64_t v81 = 126 - 2 * __clz(0xAAAAAAAAAAAAAAABLL * ((v237 - (_BYTE *)v236) >> 5));
    if (v237 == v236) {
      uint64_t v82 = 0LL;
    }
    else {
      uint64_t v82 = v81;
    }
    sub_1003F9D38((uint64_t)v236, v237, v82, 1);
    unint64_t v83 = v237;
    while (1)
    {
      double v84 = v236;
      unint64_t v83 = v237 - 96;
      v237 -= 96;
    }

    uint64_t v86 = (char *)v236;
    uint64_t v85 = v237;
    if (v236 == v237) {
      goto LABEL_195;
    }
    do
    {
      double v87 = *((double *)v86 + 8);
      *((_DWORD *)v86 + 21) = 0;
      double v88 = *((double *)v86 + 5);
      if (v88 > 0.0)
      {
        int v90 = *((_DWORD *)v86 + 13);
        int v89 = *((_DWORD *)v86 + 14);
        unint64_t v91 = (double *)sub_100F4BF20();
        sub_1003EE184(v91 + 45, (double)v89, (double)v90, v88, a9 - v87);
        *(float *)&double v92 = v92;
        *((_DWORD *)v86 + 21) = LODWORD(v92);
      }

      v86 += 96;
    }

    while (v86 != v85);
    unint64_t v93 = (char *)v236;
    uint64_t v86 = v237;
    if (v236 == v237) {
      goto LABEL_195;
    }
    double v94 = 0.0;
    unint64_t v95 = (float *)v236;
    do
    {
      double v94 = v94 + v95[21];
      v95 += 24;
    }

    while (v95 != (float *)v237);
    if (v94 <= 0.0)
    {
LABEL_194:
      uint64_t v86 = (char *)v236;
LABEL_195:
      if (v86)
      {
        v237 = v86;
        operator delete(v86);
      }

LABEL_197:
      if (v239)
      {
        v240 = (char *)v239;
        operator delete(v239);
      }

      double v20 = v241;
      goto LABEL_200;
    }

    __int16 v96 = (float *)v236;
    do
    {
      float v97 = v96[21] / v94;
      v96[21] = v97;
      v96 += 24;
    }

    while (v96 != (float *)v86);
    int v227 = sub_1003EF3F4(&v236);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101836D40);
    }
    unint64_t v98 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 67174657;
      *(_DWORD *)&uint8_t buf[4] = v227;
      _os_log_impl( (void *)&_mh_execute_header,  v98,  OS_LOG_TYPE_DEBUG,  "WifiCalc, zaxis, isMultimodal, %{private}d",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101836D40);
      }
      LODWORD(__p.__r_.__value_.__l.__data_) = 67174657;
      HIDWORD(__p.__r_.__value_.__r.__words[0]) = v227;
      LODWORD(v223) = 8;
      v217 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "WifiCalc, zaxis, isMultimodal, %{private}d",  &__p,  v223);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLLocationCalculator::calculateWifiCentroidAltitude(const std::map<std::string, int> *, const std::v ector<CLWifiAPLocation> &, double &, double &, CFAbsoluteTime, int &, double &, BOOL &, unsigned int &, ZaxisDeb uggingData &, const CLSignalEnvironmentProvider_Type::SignalEnvironmentType)",  "%s\n",  v217);
      if (v217 != buf) {
        free(v217);
      }
    }

    v233 = 0LL;
    v234 = 0LL;
    uint64_t v235 = 0LL;
    sub_1003F011C((uint64_t *)&v236, &v233);
    if (v233 != v234) {
      sub_1003F9BA8((char *)&v236, (char *)v233, (uint64_t)v234, 0xAAAAAAAAAAAAAAABLL * ((v234 - (_BYTE *)v233) >> 5));
    }
    unint64_t v99 = (char *)v236;
    BOOL v100 = v237;
    if (v236 != v237)
    {
      unint64_t v101 = (void *)(a10 + 184);
      do
      {
        __int128 v102 = *((_OWORD *)v99 + 1);
        *(_OWORD *)std::stringbuf::string_type buf = *(_OWORD *)v99;
        *(_OWORD *)&uint8_t buf[16] = v102;
        __int128 v103 = *((_OWORD *)v99 + 2);
        __int128 v104 = *((_OWORD *)v99 + 3);
        __int128 v105 = *((_OWORD *)v99 + 5);
        __int128 v256 = *((_OWORD *)v99 + 4);
        __int128 v257 = v105;
        __int128 v254 = v103;
        __int128 v255 = v104;
        sub_1007EC360(&v232);
        unint64_t v107 = *(void *)(a10 + 192);
        unint64_t v106 = *(void *)(a10 + 200);
        if (v107 >= v106)
        {
          unint64_t v109 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v107 - *v101) >> 3);
          unint64_t v110 = v109 + 1;
          if (v109 + 1 > 0xAAAAAAAAAAAAAAALL) {
            sub_100007008();
          }
          unint64_t v111 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v106 - *v101) >> 3);
          if (2 * v111 > v110) {
            unint64_t v110 = 2 * v111;
          }
          if (v111 >= 0x555555555555555LL) {
            unint64_t v112 = 0xAAAAAAAAAAAAAAALL;
          }
          else {
            unint64_t v112 = v110;
          }
          *(void *)v250 = a10 + 200;
          if (v112) {
            __int128 v113 = (char *)sub_10000701C(a10 + 200, v112);
          }
          else {
            __int128 v113 = 0LL;
          }
          std::string::size_type v114 = (std::string::size_type)&v113[24 * v109];
          __p.__r_.__value_.__r.__words[0] = (std::string::size_type)v113;
          __p.__r_.__value_.__l.__size_ = v114;
          v249 = &v113[24 * v112];
          __int128 v115 = *(_OWORD *)&v232.__r_.__value_.__l.__data_;
          *(void *)(v114 + 16) = v232.__r_.__value_.__l.__cap_;
          *(_OWORD *)std::string::size_type v114 = v115;
          memset(&v232, 0, sizeof(v232));
          __p.__r_.__value_.__l.__cap_ = v114 + 24;
          sub_100013F10((uint64_t *)(a10 + 184), &__p);
          uint64_t v116 = *(void *)(a10 + 192);
          sub_100014098((uint64_t)&__p);
          int v117 = (char)v232.__r_.__value_.__s.__size_;
          *(void *)(a10 + 192) = v116;
          if (v117 < 0) {
            operator delete(v232.__r_.__value_.__l.__data_);
          }
        }

        else
        {
          __int128 v108 = *(_OWORD *)&v232.__r_.__value_.__l.__data_;
          *(void *)(v107 + 16) = v232.__r_.__value_.__l.__cap_;
          *(_OWORD *)unint64_t v107 = v108;
          *(void *)(a10 + 192) = v107 + 24;
        }

        v99 += 96;
      }

      while (v99 != v100);
    }

    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101836D40);
    }
    p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
    __int128 v119 = (os_log_s *)qword_101934858;
    __int128 v121 = v230;
    __int128 v120 = v231;
    __int128 v122 = v226;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134217984;
      *(void *)&uint8_t buf[4] = 0xAAAAAAAAAAAAAAABLL * ((v237 - (_BYTE *)v236) >> 5);
      _os_log_impl( (void *)&_mh_execute_header,  v119,  OS_LOG_TYPE_DEBUG,  "WifiCalc, zaxis, num aps after outlier rejection, %lu",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101836D40);
      }
      LODWORD(__p.__r_.__value_.__l.__data_) = 134217984;
      *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + 4) = 0xAAAAAAAAAAAAAAABLL
                                                                             * ((v237 - (_BYTE *)v236) >> 5);
      v218 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "WifiCalc, zaxis, num aps after outlier rejection, %lu",  &__p);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLLocationCalculator::calculateWifiCentroidAltitude(const std::map<std::string, int> *, const std::v ector<CLWifiAPLocation> &, double &, double &, CFAbsoluteTime, int &, double &, BOOL &, unsigned int &, ZaxisDeb uggingData &, const CLSignalEnvironmentProvider_Type::SignalEnvironmentType)",  "%s\n",  v218);
      if (v218 != buf) {
        free(v218);
      }
      __int128 v121 = v230;
      __int128 v120 = v231;
      __int128 v122 = v226;
    }

    __int128 v123 = (float *)v236;
    double v124 = 0.0;
    double v125 = 0.0;
    while (v123 != (float *)v237)
    {
      double v126 = v123[21];
      double v125 = v125 + v126 * *((double *)v123 + 2);
      double v124 = v124 + v126;
      v123 += 24;
    }

    double v133 = v125 / v124;
    if (v124 <= 0.0) {
      double v134 = 0.0;
    }
    else {
      double v134 = v133;
    }
    unint64_t v135 = &OBJC_METACLASS___CLPrivacyManager.vtable;
    double v136 = sub_1003EE290((uint64_t *)&v236, v134);
    if (v136 < 0.0)
    {
LABEL_265:
      if (v233)
      {
        v234 = v233;
        operator delete(v233);
      }

      goto LABEL_194;
    }

    unint64_t v137 = (char *)v236;
    unint64_t v138 = v237;
    __int16 v139 = v236;
    if (v236 != v237)
    {
      unint64_t v140 = (char *)v236 + 96;
      __int16 v139 = v236;
      if ((char *)v236 + 96 != v237)
      {
        __int16 v139 = v236;
        do
        {
          if (v139[14] < *((_DWORD *)v140 + 14)) {
            __int16 v139 = v140;
          }
          v140 += 96;
        }

        while (v140 != v237);
      }
    }

    int v141 = v139[14];
    *__int128 v122 = v141;
    double v142 = 0.0;
    if (v137 != v138)
    {
      uint64_t v143 = (int *)v137;
      do
      {
        double v142 = v142 + (double)v143[14];
        v143 += 24;
      }

      while (v143 != (int *)v138);
    }

    *__int128 v121 = v142 / (double)(0xAAAAAAAAAAAAAAABLL * ((v138 - v137) >> 5));
    if (*(double *)sub_100F4BF20() >= (double)v141
      || (v144 = *v122, double v145 = *v121, (double)v144 - v145 > *((double *)sub_100F4BF20() + 2))
      && (double v146 = *v121, v146 < *((double *)sub_100F4BF20() + 1)))
    {
      *__int128 v120 = 0;
    }

    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101836D40);
    }
    int v147 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      int v148 = *v122;
      *(_DWORD *)std::stringbuf::string_type buf = 67109120;
      *(_DWORD *)&uint8_t buf[4] = v148;
      _os_log_impl((void *)&_mh_execute_header, v147, OS_LOG_TYPE_DEBUG, "WifiCalc, zaxis, maxRssi, %d", buf, 8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101836D40);
      }
      int v219 = *v226;
      LODWORD(__p.__r_.__value_.__l.__data_) = 67109120;
      HIDWORD(__p.__r_.__value_.__r.__words[0]) = v219;
      v220 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "WifiCalc, zaxis, maxRssi, %d",  &__p);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLLocationCalculator::calculateWifiCentroidAltitude(const std::map<std::string, int> *, const std::v ector<CLWifiAPLocation> &, double &, double &, CFAbsoluteTime, int &, double &, BOOL &, unsigned int &, ZaxisDeb uggingData &, const CLSignalEnvironmentProvider_Type::SignalEnvironmentType)",  "%s\n",  v220);
      if (v220 != buf) {
        free(v220);
      }
      __int128 v122 = v226;
      p_vtable = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
      unint64_t v135 = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
    }

    int v149 = v246;
    if (*v122 != v246) {
      BOOL *v231 = 0;
    }
    float v150 = (double *)v236;
    float v151 = v237;
    if (v236 == v237)
    {
      int v152 = 0;
      __int16 v154 = (char *)v236;
    }

    else
    {
      int v152 = 0;
      do
      {
        double v153 = v150[5];
        v150 += 12;
      }

      while (v150 != (double *)v151);
      float v150 = (double *)v236;
      __int16 v154 = v237;
    }

    double v164 = *((double *)sub_100F4BF20() + 39);
    double v165 = *((double *)sub_100F4BF20() + 28);
    double v166 = *(double *)&v244;
    uint64_t v167 = (double *)sub_100F4BF20();
    double v168 = (double)v152 / (double)(0xAAAAAAAAAAAAAAABLL * ((v154 - (char *)v150) >> 5));
    double v169 = v136 * exp(v168 * v164);
    if (v136 >= v169) {
      double v169 = v136;
    }
    if (v165 < v169) {
      double v169 = v165;
    }
    double v170 = v169 * v166;
    if (v167[28] >= v170) {
      double v171 = v170;
    }
    else {
      double v171 = v167[28];
    }
    if (!v227)
    {
LABEL_253:
      char v202 = *v231;
      if (v171 >= 0.0)
      {
        if (*v231)
        {
          char v202 = 1;
        }

        else
        {
          v203 = (double *)sub_100F4BF20();
          if (v171 < v203[28]) {
            double v171 = v203[28];
          }
          char v202 = *v231;
        }

        double *v228 = v171;
        *(double *)a3 = v134;
      }

      int v204 = -1431655765 * ((unint64_t)(v237 - (_BYTE *)v236) >> 5);
      int *v229 = v204;
      int v205 = *v226;
      double v206 = *v230;
      uint64_t v207 = v247;
      *(_DWORD *)(a10 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v245;
      *(_DWORD *)(a10 + memset(v19, 0, 44) = v149;
      *(_DWORD *)(a10 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v205;
      *(double *)(a10 + 56) = v206;
      *(_BYTE *)(a10 + 64) = v227;
      *(double *)(a10 + sub_10000AE14(v1 - 72) = v168;
      *(void *)(a10 + 8sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v207;
      *(_DWORD *)(a10 + 10_Block_object_dispose((const void *)(v30 - 184), 8) = v204;
      *(_BYTE *)(a10 + 1memset(v19, 0, 44) = v202;
      v208 = (os_log_s *)p_vtable[267];
      if (os_log_type_enabled(v208, OS_LOG_TYPE_DEBUG))
      {
        unint64_t v209 = 0xAAAAAAAAAAAAAAABLL * ((v225[1] - *v225) >> 5);
        *(_DWORD *)std::stringbuf::string_type buf = 134284545;
        *(double *)&uint8_t buf[4] = v134;
        *(_WORD *)&_BYTE buf[12] = 2050;
        *(double *)&buf[14] = v171;
        *(_WORD *)&buf[22] = 2048;
        *(void *)&_BYTE buf[24] = v209;
        LOWORD(v254) = 2048;
        *(void *)((char *)&v254 + 2) = 0xAAAAAAAAAAAAAAABLL * ((v237 - (_BYTE *)v236) >> 5);
        WORD5(v254) = 1024;
        HIDWORD(v254) = v224 == 0;
        _os_log_impl( (void *)&_mh_execute_header,  v208,  OS_LOG_TYPE_DEBUG,  "WifiCalc, est, %{private}0.3f, vunc, %{public}0.1f, numInputAps, %lu, numApsUsed, %lu, isSLAM, %d",  buf,  0x30u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        unint64_t v221 = 0xAAAAAAAAAAAAAAABLL * ((v225[1] - *v225) >> 5);
        LODWORD(__p.__r_.__value_.__l.__data_) = 134284545;
        *(double *)((char *)__p.__r_.__value_.__r.__words + 4) = v134;
        WORD2(__p.__r_.__value_.__r.__words[1]) = 2050;
        *(double *)((char *)&__p.__r_.__value_.__r.__words[1] + 6) = v171;
        HIWORD(__p.__r_.__value_.__r.__words[2]) = 2048;
        v249 = (char *)v221;
        *(_WORD *)v250 = 2048;
        *(void *)&v250[2] = 0xAAAAAAAAAAAAAAABLL * ((v237 - (_BYTE *)v236) >> 5);
        __int16 v251 = 1024;
        BOOL v252 = v224 == 0;
        LODWORD(v223) = 48;
        v222 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "WifiCalc, est, %{private}0.3f, vunc, %{public}0.1f, numInputAps, %lu, numApsUsed, %lu, isSLAM, %d",  &__p,  v223);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLLocationCalculator::calculateWifiCentroidAltitude(const std::map<std::string, int> *, const std: :vector<CLWifiAPLocation> &, double &, double &, CFAbsoluteTime, int &, double &, BOOL &, unsigned int &, Zaxi sDebuggingData &, const CLSignalEnvironmentProvider_Type::SignalEnvironmentType)",  "%s\n",  v222);
        if (v222 != buf) {
          free(v222);
        }
      }

      goto LABEL_265;
    }

    memset(buf, 0, 24);
    __int16 v172 = (char *)v239;
    int v173 = v240;
    if (v239 == v240)
    {
      v185 = 0LL;
    }

    else
    {
      int v174 = 0LL;
      do
      {
        uint64_t v175 = *((void *)v172 + 3);
        if ((unint64_t)v174 >= *(void *)&buf[16])
        {
          __int16 v176 = *(void **)buf;
          uint64_t v177 = ((uint64_t)v174 - *(void *)buf) >> 3;
          unint64_t v178 = v177 + 1;
          uint64_t v179 = *(void *)&buf[16] - *(void *)buf;
          else {
            unint64_t v180 = v178;
          }
          if (v180)
          {
            double v181 = (char *)sub_1000071BC((uint64_t)&buf[16], v180);
            __int16 v176 = *(void **)buf;
            int v174 = *(void **)&buf[8];
          }

          else
          {
            double v181 = 0LL;
          }

          v182 = &v181[8 * v177];
          *(void *)v182 = v175;
          v183 = v182 + 8;
          while (v174 != v176)
          {
            uint64_t v184 = *--v174;
            *((void *)v182 - 1) = v184;
            v182 -= 8;
          }

          *(void *)std::stringbuf::string_type buf = v182;
          *(void *)&uint8_t buf[8] = v183;
          *(void *)&uint8_t buf[16] = &v181[8 * v180];
          if (v176) {
            operator delete(v176);
          }
          int v174 = v183;
          unint64_t v135 = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
        }

        else
        {
          *v174++ = v175;
        }

        *(void *)&uint8_t buf[8] = v174;
        v172 += 96;
      }

      while (v172 != v173);
      v185 = *(double **)buf;
      uint64_t v186 = *(void *)buf + 8LL;
      if (*(void **)buf != v174 && v186 != (void)v174)
      {
        double v188 = **(double **)buf;
        double v189 = **(double **)buf;
        uint64_t v190 = *(void *)buf + 8LL;
        v191 = *(double **)buf;
        v192 = (double *)(*(void *)buf + 8LL);
        do
        {
          double v193 = *v192++;
          double v194 = v193;
          if (v189 < v193)
          {
            double v189 = v194;
            v191 = (double *)v190;
          }

          uint64_t v190 = (uint64_t)v192;
        }

        while (v192 != (double *)v174);
        double v195 = *v191;
        v196 = (double *)(*(void *)buf + 8LL);
        do
        {
          double v197 = *v196++;
          double v198 = v197;
          if (v197 < v188)
          {
            double v188 = v198;
            v185 = (double *)v186;
          }

          uint64_t v186 = (uint64_t)v196;
        }

        while (v196 != (double *)v174);
        goto LABEL_247;
      }
    }

    double v195 = *v185;
LABEL_247:
    double v199 = *v185;
    v200 = (double *)sub_100F4BF20();
    double v201 = v195 - v199;
    if (v200[28] < v195 - v199) {
      double v201 = v200[28];
    }
    if (v171 < v201) {
      double v171 = v201;
    }
    if (*(void *)buf)
    {
      *(void *)&uint8_t buf[8] = *(void *)buf;
      operator delete(*(void **)buf);
    }

    goto LABEL_253;
  }

  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101836D40);
  }
  double v33 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEBUG, "WifiCalc, zaxis, apCollection is empty", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101836D40);
    }
    LOWORD(__p.__r_.__value_.__l.__data_) = 0;
    unint64_t v34 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "WifiCalc, zaxis, apCollection is empty",  &__p,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLLocationCalculator::calculateWifiCentroidAltitude(const std::map<std::string, int> *, const std::vec tor<CLWifiAPLocation> &, double &, double &, CFAbsoluteTime, int &, double &, BOOL &, unsigned int &, ZaxisDebuggi ngData &, const CLSignalEnvironmentProvider_Type::SignalEnvironmentType)",  "%s\n",  v34);
    if (v34 != buf) {
      free(v34);
    }
  }

  double v65 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 128);
  if (v65 >= 0x80)
  {
    BOOL v66 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v65, a2) + 2;
    uint64_t v3 = *(_DWORD *)(a1 + 148);
  }

  else
  {
    BOOL v66 = 3;
  }

  uint64_t v4 = (v66 + v4);
  if ((v3 & 0x80000000) != 0)
  {
LABEL_201:
    unint64_t v67 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 132);
    else {
      double v68 = 3;
    }
    uint64_t v4 = (v68 + v4);
  }

  unint64_t v77 = *(_DWORD *)(a2 + 164);
  v5 |= 0x80000000uLL;
  *uint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 164) = v77;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x20000000) == 0)
  {
LABEL_92:
    if ((v4 & 0x8000000000000LL) == 0) {
      goto LABEL_93;
    }
    goto LABEL_199;
  }

  PB::TextFormatter::format(this, "stepCountEventTimestamp", *(_DWORD *)(a1 + 264));
  uint64_t v7 = *v5;
  if ((*v5 & 0x40) == 0)
  {
LABEL_96:
    if ((v7 & 0x200000000000000LL) == 0) {
      goto LABEL_97;
    }
    goto LABEL_199;
  }

  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 164), 0x450u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x20000000) == 0)
  {
LABEL_92:
    if ((v5 & 0x8000000000000LL) == 0) {
      goto LABEL_93;
    }
    goto LABEL_199;
  }

void sub_1003F444C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, int a22, __int16 a23, char a24, char a25, void *__p, uint64_t a27, uint64_t a28, void *a29, uint64_t a30, uint64_t a31, void *a32, uint64_t a33, uint64_t a34, void *a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, int a44, __int16 a45, char a46, char a47, uint64_t a48, uint64_t a49, uint64_t a50,void *a51,uint64_t a52,int a53,__int16 a54,char a55,char a56)
{
  if (__p) {
    operator delete(__p);
  }
  if (a29) {
    operator delete(a29);
  }
  if (a32) {
    operator delete(a32);
  }
  if (a35) {
    operator delete(a35);
  }
  _Unwind_Resume(exception_object);
}

int32x2_t sub_1003F45B4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (sub_100C3A4EC(a1)) {
    int v4 = sub_100C3A4FC(a1);
  }
  else {
    int v4 = -1;
  }
  uint64_t v5 = *(void *)(a1 + 24);
  int v6 = *(_DWORD *)(a1 + 72);
  uint64_t v7 = *(void *)(a1 + 80);
  uint64_t v8 = *(void *)a1;
  BOOL v9 = *(_BYTE *)(a1 + 88) != 0;
  *(_OWORD *)a2 = *(_OWORD *)(a1 + 8);
  *(void *)(a2 + 16) = v5;
  *(_DWORD *)(a2 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v4;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  int32x2_t result = vrev64_s32(*(int32x2_t *)(a1 + 48));
  *(int32x2_t *)(a2 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = result;
  *(_DWORD *)(a2 + 56) = v6;
  *(void *)(a2 + 64) = v7;
  *(void *)(a2 + sub_10000AE14(v1 - 72) = v8;
  *(_BYTE *)(a2 + sub_1011C52D0(v16 - 88) = v9;
  return result;
}

void sub_1003F463C( uint64_t a1, uint64_t *a2, uint64_t *a3, double a4, double a5, double a6, uint64_t a7, uint64_t a8, uint64_t a9, int *a10, int *a11, double *a12, uint64_t a13, uint64_t a14, int *a15, double *a16, BOOL *a17, int *a18, uint64_t *a19, uint64_t a20, int a21)
{
  *(void *)(a14 + 96) = 0LL;
  *(void *)(a14 + 104) = 0LL;
  *(_DWORD *)(a14 + 112) = 0;
  *(void *)(a14 + 136) = 0LL;
  *(void *)(a14 + 1memset(v19, 0, 44) = 0LL;
  *(void *)(a14 + 12_Block_object_dispose((const void *)(v30 - 184), 8) = 0LL;
  *(_BYTE *)(a14 + 152) = 0;
  *(_DWORD *)a14 = 0xFFFF;
  *(void *)(a14 + 12) = 0LL;
  *(void *)(a14 + 4) = 0LL;
  __asm { FMOV            V0.2D, #-1.0 }

  *(_OWORD *)(a14 + 36) = _Q0;
  *(_OWORD *)(a14 + 52) = _Q0;
  *(_OWORD *)(a14 + 6_Block_object_dispose((const void *)(v30 - 184), 8) = _Q0;
  *(_DWORD *)(a14 + 84) = 0;
  *(void *)(a14 + sub_1011C52D0(v16 - 88) = 0xBFF0000000000000LL;
  *(void *)(a14 + 116) = 0xBFF0000000000000LL;
  *(_DWORD *)(a14 + 1sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 0x7FFFFFFF;
  *(_OWORD *)(a14 + 2sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = xmmword_1012E8430;
  *a11 = -1;
  *a10 = -1;
  std::string __p = 0LL;
  unint64_t v81 = 0LL;
  uint64_t v82 = 0LL;
  uint64_t v26 = *a2;
  uint64_t v27 = a2[1];
  if (*a2 != v27)
  {
    unint64_t v79 = (double *)(a14 + 36);
    double v76 = (std::string::size_type *)(a14 + 28);
    do
    {
      if (sub_100C3A418((double *)v26) && *(double *)(v26 + 32) > 0.0)
      {
        int v31 = v81;
        if (v81 >= v82)
        {
          __int128 v37 = (char *)__p;
          unint64_t v38 = 0xAAAAAAAAAAAAAAABLL * ((v81 - (_BYTE *)__p) >> 5);
          unint64_t v39 = v38 + 1;
          if (v38 + 1 > 0x2AAAAAAAAAAAAAALL) {
            sub_100007008();
          }
          if (0x5555555555555556LL * ((v82 - (_BYTE *)__p) >> 5) > v39) {
            unint64_t v39 = 0x5555555555555556LL * ((v82 - (_BYTE *)__p) >> 5);
          }
          if (0xAAAAAAAAAAAAAAABLL * ((v82 - (_BYTE *)__p) >> 5) >= 0x155555555555555LL) {
            unint64_t v40 = 0x2AAAAAAAAAAAAAALL;
          }
          else {
            unint64_t v40 = v39;
          }
          if (v40)
          {
            __int128 v41 = (char *)sub_1003F6AEC((uint64_t)&v82, v40);
            __int128 v37 = (char *)__p;
            int v31 = v81;
          }

          else
          {
            __int128 v41 = 0LL;
          }

          unint64_t v42 = &v41[32 * ((v81 - (_BYTE *)__p) >> 5)];
          __int128 v43 = *(_OWORD *)(v26 + 16);
          *(_OWORD *)unint64_t v42 = *(_OWORD *)v26;
          *((_OWORD *)v42 + 1) = v43;
          __int128 v44 = *(_OWORD *)(v26 + 32);
          __int128 v45 = *(_OWORD *)(v26 + 48);
          __int128 v46 = *(_OWORD *)(v26 + 80);
          *((_OWORD *)v42 + 4) = *(_OWORD *)(v26 + 64);
          *((_OWORD *)v42 + 5) = v46;
          *((_OWORD *)v42 + 2) = v44;
          *((_OWORD *)v42 + 3) = v45;
          if (v31 == v37)
          {
            __int128 v52 = &v41[96 * v38];
          }

          else
          {
            int v47 = &v41[96 * v38];
            do
            {
              __int128 v48 = *((_OWORD *)v31 - 5);
              *((_OWORD *)v47 - 6) = *((_OWORD *)v31 - 6);
              *((_OWORD *)v47 - 5) = v48;
              __int128 v49 = *((_OWORD *)v31 - 4);
              __int128 v50 = *((_OWORD *)v31 - 3);
              __int128 v51 = *((_OWORD *)v31 - 1);
              __int128 v52 = v47 - 96;
              *((_OWORD *)v47 - 2) = *((_OWORD *)v31 - 2);
              *((_OWORD *)v47 - 1) = v51;
              *((_OWORD *)v47 - 4) = v49;
              *((_OWORD *)v47 - 3) = v50;
              v31 -= 96;
              v47 -= 96;
            }

            while (v31 != v37);
          }

          __int128 v36 = v42 + 96;
          std::string __p = v52;
          unint64_t v81 = v42 + 96;
          uint64_t v82 = &v41[96 * v40];
          if (v37) {
            operator delete(v37);
          }
        }

        else
        {
          __int128 v32 = *(_OWORD *)(v26 + 16);
          *(_OWORD *)unint64_t v81 = *(_OWORD *)v26;
          *((_OWORD *)v31 + 1) = v32;
          __int128 v33 = *(_OWORD *)(v26 + 32);
          __int128 v34 = *(_OWORD *)(v26 + 48);
          __int128 v35 = *(_OWORD *)(v26 + 80);
          *((_OWORD *)v31 + 4) = *(_OWORD *)(v26 + 64);
          *((_OWORD *)v31 + 5) = v35;
          *((_OWORD *)v31 + 2) = v33;
          *((_OWORD *)v31 + 3) = v34;
          __int128 v36 = v31 + 96;
        }

        unint64_t v81 = v36;
      }

      v26 += 96LL;
    }

    while (v26 != v27);
    __int128 v53 = v81;
    if (__p != v81)
    {
      if (a1 && *(void *)(a1 + 16) < 0xAAAAAAAAAAAAAAABLL * ((a3[1] - *a3) >> 5)) {
        __assert_rtn( "calculateWifiCentroidRssiMaxreach",  "CLLocationCalculator.mm",  1153,  "allScannedExcludingMovingWifiApsMacToRssiVertical->size() >= apCollectionVertical.size()");
      }
      __int128 v54 = (uint64_t *)(a14 + 28);
      __int128 v55 = (double *)(a14 + 36);
      sub_1003F28CC(a1, a3, v76, v79, a15, a16, a17, a18, a5, a20, a21);
      __int128 v56 = a11;
      if (sub_100E5D040((double *)v76, v79))
      {
        __int128 v57 = (double *)sub_100F4BF20();
        double v61 = *v79;
        if (*v79 < v57[27]) {
          double v61 = v57[27];
        }
        *unint64_t v79 = v61;
        std::string::size_type v62 = *v76;
        *(_BYTE *)(a20 + 104) = 1;
        *(void *)a20 = v62;
        *(double *)(a20 + _Block_object_dispose((const void *)(v30 - 184), 8) = v61;
      }

      else
      {
        double v63 = *v79;
        if ((*(void *)v79 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000LL)
        {
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101836D40);
          }
          int v64 = (os_log_s *)qword_101934858;
          if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_FAULT))
          {
            *(_WORD *)std::stringbuf::string_type buf = 0;
            _os_log_impl((void *)&_mh_execute_header, v64, OS_LOG_TYPE_FAULT, "WifiCalc, zaxis, inf unc", buf, 2u);
          }

          if (sub_1002921D0(115, 0))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934850 != -1) {
              dispatch_once(&qword_101934850, &stru_101836D40);
            }
            LOWORD(v83) = 0;
            LODWORD(v74) = 2;
            __int128 v73 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  17LL,  "WifiCalc, zaxis, inf unc",  &v83,  v74);
            sub_10029211C( "Generic",  1LL,  0,  0LL,  "static void CLLocationCalculator::calculateWifiCentroidRssiMaxreach(const std::map<std::string, int> *, co nst std::vector<CLWifiAPLocation> &, const std::vector<CLWifiAPLocation> &, unsigned int, unsigned int, un signed int, double, unsigned int &, unsigned int &, double &, const CLDaemonLocation &, CLDaemonLocation & , CFAbsoluteTime, int &, double &, BOOL &, unsigned int &, LatLonDebuggingData &, ZaxisDebuggingData &, co nst CLSignalEnvironmentProvider_Type::SignalEnvironmentType, double)",  "%s\n",  v73);
            __int128 v56 = a11;
            __int128 v55 = (double *)(a14 + 36);
            __int128 v54 = (uint64_t *)(a14 + 28);
          }

          double v63 = *v55;
        }

        if (v63 != -1.0)
        {
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101836D40);
          }
          double v65 = (os_log_s *)qword_101934858;
          if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_FAULT))
          {
            uint64_t v66 = *v54;
            double v67 = *v55;
            *(_DWORD *)std::stringbuf::string_type buf = 134283777;
            uint64_t v88 = v66;
            __int16 v89 = 2049;
            double v90 = v67;
            _os_log_impl( (void *)&_mh_execute_header,  v65,  OS_LOG_TYPE_FAULT,  "WifiCalc, zaxis, invalid signleshot alt, %{private}.2f, unc, %{private}.2f",  buf,  0x16u);
          }

          if (sub_1002921D0(115, 0))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934850 != -1) {
              dispatch_once(&qword_101934850, &stru_101836D40);
            }
            std::string::size_type v70 = *v76;
            double v71 = *v79;
            int v83 = 134283777;
            std::string::size_type v84 = v70;
            __int16 v85 = 2049;
            double v86 = v71;
            LODWORD(v74) = 22;
            double v72 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  17LL,  "WifiCalc, zaxis, invalid signleshot alt, %{private}.2f, unc, %{private}.2f",  &v83,  v74);
            sub_10029211C( "Generic",  1LL,  0,  0LL,  "static void CLLocationCalculator::calculateWifiCentroidRssiMaxreach(const std::map<std::string, int> *, co nst std::vector<CLWifiAPLocation> &, const std::vector<CLWifiAPLocation> &, unsigned int, unsigned int, un signed int, double, unsigned int &, unsigned int &, double &, const CLDaemonLocation &, CLDaemonLocation & , CFAbsoluteTime, int &, double &, BOOL &, unsigned int &, LatLonDebuggingData &, ZaxisDebuggingData &, co nst CLSignalEnvironmentProvider_Type::SignalEnvironmentType, double)",  "%s\n",  v72);
            __int128 v56 = a11;
            __int128 v55 = (double *)(a14 + 36);
          }
        }

        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101836D40);
        }
        double v68 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)std::stringbuf::string_type buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v68,  OS_LOG_TYPE_DEBUG,  "WifiCalc, zaxis, invalid vertical accuracy!",  buf,  2u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101836D40);
          }
          LOWORD(v83) = 0;
          LODWORD(v74) = 2;
          double v69 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "WifiCalc, zaxis, invalid vertical accuracy!",  &v83,  v74);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLLocationCalculator::calculateWifiCentroidRssiMaxreach(const std::map<std::string, int> *, cons t std::vector<CLWifiAPLocation> &, const std::vector<CLWifiAPLocation> &, unsigned int, unsigned int, unsign ed int, double, unsigned int &, unsigned int &, double &, const CLDaemonLocation &, CLDaemonLocation &, CFAb soluteTime, int &, double &, BOOL &, unsigned int &, LatLonDebuggingData &, ZaxisDebuggingData &, const CLSi gnalEnvironmentProvider_Type::SignalEnvironmentType, double)",  "%s\n",  v69);
          __int128 v56 = a11;
          __int128 v55 = (double *)(a14 + 36);
        }

        *__int128 v55 = -1.0;
      }

      sub_1003F4E20((uint64_t *)&__p, v61, a5, a6, v58, v59, v60, a10, v56, a12, a13, a14, a19);
      __int128 v53 = (char *)__p;
    }

    if (v53)
    {
      unint64_t v81 = v53;
      operator delete(v53);
    }
  }

void sub_1003F4DF0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, void *__p, uint64_t a27)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003F4E20( uint64_t *a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, int *a8, int *a9, double *a10, uint64_t a11, uint64_t a12, uint64_t *a13)
{
  unint64_t v16 = a10;
  unsigned __int8 v17 = atomic_load((unsigned __int8 *)&qword_1019956F8);
  if ((v17 & 1) == 0 && __cxa_guard_acquire(&qword_1019956F8))
  {
    sub_100D2D9A4((uint64_t)dbl_1019956D0);
    __cxa_guard_release(&qword_1019956F8);
    unint64_t v16 = a10;
  }

  double v18 = *(double *)(a12 + 28);
  v241 = 0LL;
  v242 = 0LL;
  unint64_t v243 = 0LL;
  double v19 = *(double *)(a11 + 76);
  double v20 = *(double *)(a11 + 20);
  *unint64_t v16 = -1.0;
  uint64_t v22 = *a1;
  uint64_t v21 = a1[1];
  if (0xAAAAAAAAAAAAAAABLL * ((v21 - v22) >> 5) > *((unsigned int *)sub_100F4BF14() + 26) || v20 < 0.0)
  {
    if (*(_DWORD *)(a11 + 96) != 4) {
      goto LABEL_66;
    }
    BOOL v24 = 0;
  }

  else
  {
    double v23 = *((double *)sub_100F4BF14() + 14);
    BOOL v24 = a3 - v19 <= v23;
    if (*(_DWORD *)(a11 + 96) != 4)
    {
      if (a3 - v19 > v23) {
        goto LABEL_66;
      }
      goto LABEL_16;
    }
  }

  unsigned int v25 = *(_DWORD *)(a11 + 84);
  if (v25 <= *((_DWORD *)sub_100F4BF14() + 27) || !v24)
  {
LABEL_66:
    uint64_t v68 = *a1;
    uint64_t v67 = a1[1];
    if (*a1 != v67)
    {
      do
      {
        sub_1003F45B4(v68, (uint64_t)v257);
        double v69 = v242;
        if ((unint64_t)v242 >= v243)
        {
          std::string::size_type v75 = (char *)v241;
          unint64_t v76 = 0xAAAAAAAAAAAAAAABLL * ((v242 - (_BYTE *)v241) >> 5);
          unint64_t v77 = v76 + 1;
          if (v76 + 1 > 0x2AAAAAAAAAAAAAALL) {
            sub_100007008();
          }
          else {
            unint64_t v78 = v77;
          }
          if (v78)
          {
            unint64_t v79 = (char *)sub_1003F6AEC((uint64_t)&v243, v78);
            std::string::size_type v75 = (char *)v241;
            double v69 = v242;
          }

          else
          {
            unint64_t v79 = 0LL;
          }

          __int128 v80 = &v79[32 * ((v242 - (_BYTE *)v241) >> 5)];
          __int128 v81 = *(_OWORD *)&v257[16];
          *(_OWORD *)__int128 v80 = *(_OWORD *)v257;
          *((_OWORD *)v80 + 1) = v81;
          __int128 v82 = *(_OWORD *)v258;
          __int128 v83 = *(_OWORD *)&v258[16];
          __int128 v84 = v260;
          *((_OWORD *)v80 + 4) = v259;
          *((_OWORD *)v80 + 5) = v84;
          *((_OWORD *)v80 + 2) = v82;
          *((_OWORD *)v80 + 3) = v83;
          if (v69 == v75)
          {
            double v90 = &v79[96 * v76];
          }

          else
          {
            __int16 v85 = &v79[96 * v76];
            do
            {
              __int128 v86 = *((_OWORD *)v69 - 5);
              *((_OWORD *)v85 - 6) = *((_OWORD *)v69 - 6);
              *((_OWORD *)v85 - 5) = v86;
              __int128 v87 = *((_OWORD *)v69 - 4);
              __int128 v88 = *((_OWORD *)v69 - 3);
              __int128 v89 = *((_OWORD *)v69 - 2);
              double v90 = v85 - 96;
              *(_OWORD *)(v85 - 23) = *(_OWORD *)(v69 - 23);
              *((_OWORD *)v85 - 3) = v88;
              *((_OWORD *)v85 - 2) = v89;
              *((_OWORD *)v85 - 4) = v87;
              v69 -= 96;
              v85 -= 96;
            }

            while (v69 != v75);
          }

          uint64_t v74 = v80 + 96;
          v241 = v90;
          v242 = v80 + 96;
          unint64_t v243 = (unint64_t)&v79[96 * v78];
          if (v75) {
            operator delete(v75);
          }
        }

        else
        {
          __int128 v70 = *(_OWORD *)&v257[16];
          *(_OWORD *)v242 = *(_OWORD *)v257;
          *((_OWORD *)v69 + 1) = v70;
          __int128 v71 = *(_OWORD *)v258;
          __int128 v72 = *(_OWORD *)&v258[16];
          __int128 v73 = v260;
          *((_OWORD *)v69 + 4) = v259;
          *((_OWORD *)v69 + 5) = v73;
          *((_OWORD *)v69 + 2) = v71;
          *((_OWORD *)v69 + 3) = v72;
          uint64_t v74 = v69 + 96;
        }

        v242 = v74;
        v68 += 96LL;
      }

      while (v68 != v67);
    }

LABEL_206:
  char v186 = v236;
  if ((v186 & 1) == 0)
  {
    double v187 = *(double *)(v156 + 12);
    if (v187 > 180.0)
    {
      do
        double v187 = v187 + -360.0;
      while (v187 > 180.0);
      *(double *)(v156 + 12) = v187;
    }

    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101836D40);
    }
    double v188 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v189 = *(void *)(a12 + 4);
      uint64_t v190 = *(void *)(a12 + 12);
      *(_DWORD *)__int128 v257 = 134283777;
      *(void *)&v257[4] = v189;
      *(_WORD *)&v257[12] = 2049;
      *(void *)&v257[14] = v190;
      _os_log_impl( (void *)&_mh_execute_header,  v188,  OS_LOG_TYPE_DEBUG,  "WifiCalc, b360repr, %{private}14.8lf, %{private}14.8lf",  v257,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(v257, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101836D40);
      }
      std::string::size_type v221 = *(void *)(a12 + 4);
      std::string::size_type v222 = *(void *)(a12 + 12);
      LODWORD(__p.__r_.__value_.__l.__data_) = 134283777;
      *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + 4) = v221;
      WORD2(__p.__r_.__value_.__r.__words[1]) = 2049;
      *(std::string::size_type *)((char *)&__p.__r_.__value_.__r.__words[1] + 6) = v222;
      LODWORD(v233) = 22;
      uint64_t v223 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  v257,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "WifiCalc, b360repr, %{private}14.8lf, %{private}14.8lf",  &__p,  v233);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLLocationCalculator::calculateWifiCentroidLatLon(const std::vector<CLWifiAPLocation> &, unsigned in t, unsigned int, unsigned int, double, unsigned int &, unsigned int &, double &, const CLDaemonLocation &, CLDae monLocation &, CFAbsoluteTime, LatLonDebuggingData &, double)",  "%s\n",  v223);
      if (v223 != v257) {
        free(v223);
      }
    }
  }

  if (v241)
  {
    v242 = (char *)v241;
    operator delete(v241);
  }

  sub_1002F0B04(buf);
  unint64_t v135 = sub_1002A6F64(*(uint64_t *)buf, "KeepGpsOnWithAccessory", (BOOL *)(a1 + 667));
  double v136 = v135;
  unint64_t v137 = *(std::__shared_weak_count **)&buf[8];
  if (!*(void *)&buf[8]) {
    goto LABEL_210;
  }
  unint64_t v138 = (unint64_t *)(*(void *)&buf[8] + 8LL);
  do
    unint64_t v139 = __ldaxr(v138);
  while (__stlxr(v139 - 1, v138));
  if (v139)
  {
LABEL_210:
    if ((v135 & 1) != 0) {
      goto LABEL_212;
    }
    goto LABEL_211;
  }

  ((void (*)(std::__shared_weak_count *))v137->__on_zero_shared)(v137);
  std::__shared_weak_count::__release_weak(v137);
  if ((v136 & 1) == 0) {
LABEL_211:
  }
    *(_BYTE *)(a1 + 667) = 0;
LABEL_212:
  *(void *)(a1 + 1592) = -[CLLocationDerivedSpeedEstimator initInUniverse:]( objc_alloc(&OBJC_CLASS___CLLocationDerivedSpeedEstimator),  "initInUniverse:",  *(void *)(a1 + 32));
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101838C20);
  }
  unint64_t v140 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    int v141 = *(void *)(a1 + 1592) != 0LL;
    *(_DWORD *)std::stringbuf::string_type buf = 67240192;
    *(_DWORD *)&uint8_t buf[4] = v141;
    _os_log_impl( (void *)&_mh_execute_header,  v140,  OS_LOG_TYPE_DEBUG,  "location derived speed estimator enabled,%{public}d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    v261 = *(void *)(a1 + 1592) != 0LL;
    LODWORD(context.version) = 67240192;
    HIDWORD(context.version) = v261;
    LODWORD(v275) = 8;
    v262 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "location derived speed estimator enabled,%{public}d",  &context,  v275);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLLocationController::CLLocationController(id<CLIntersiloUniverse>)",  "%s\n",  v262);
    if (v262 != buf) {
      free(v262);
    }
  }

  sub_1003CC94C((uint64_t)"CLLocationController", (uint64_t)sub_100420178, a1, *(void **)(a1 + 32), buf);
  unint64_t v142 = *(void *)buf;
  *(void *)std::stringbuf::string_type buf = 0LL;
  unint64_t v143 = *(void *)v5;
  *(void *)uint64_t v5 = v142;
  if (v143)
  {
    (*(void (**)(uint64_t))(*(void *)v143 + 8LL))(v143);
    __int128 v144 = *(void *)buf;
    *(void *)std::stringbuf::string_type buf = 0LL;
    if (v144) {
      (*(void (**)(uint64_t))(*(void *)v144 + 8LL))(v144);
    }
    unint64_t v142 = *(void *)v5;
  }

  if (v142)
  {
    [*(id *)(v142 + 16) register:*(void *)(v142 + 8) forNotification:2 registrationInfo:0];
    [*(id *)(*(void *)v5 + 16) register:*(void *)(*(void *)v5 + 8) forNotification:3 registrationInfo:0];
    [*(id *)(*(void *)v5 + 16) register:*(void *)(*(void *)v5 + 8) forNotification:6 registrationInfo:0];
    [*(id *)(*(void *)v5 + 16) register:*(void *)(*(void *)v5 + 8) forNotification:8 registrationInfo:0];
    [*(id *)(*(void *)v5 + 16) register:*(void *)(*(void *)v5 + 8) forNotification:15 registrationInfo:0];
    [*(id *)(*(void *)v5 + 16) register:*(void *)(*(void *)v5 + 8) forNotification:7 registrationInfo:0];
    [*(id *)(*(void *)v5 + 16) register:*(void *)(*(void *)v5 + 8) forNotification:13 registrationInfo:0];
    [*(id *)(*(void *)v5 + 16) register:*(void *)(*(void *)v5 + 8) forNotification:10 registrationInfo:0];
  }

  sub_10034FFFC((uint64_t)"CLLocationController", (uint64_t)sub_100420360, a1, *(void **)(a1 + 32), buf);
  uint64_t v145 = *(void *)buf;
  *(void *)std::stringbuf::string_type buf = 0LL;
  unint64_t v146 = *(void *)(a1 + 176);
  *(void *)(a1 + 176) = v145;
  if (v146)
  {
    (*(void (**)(uint64_t))(*(void *)v146 + 8LL))(v146);
    unint64_t v147 = *(void *)buf;
    *(void *)std::stringbuf::string_type buf = 0LL;
    if (v147) {
      (*(void (**)(uint64_t))(*(void *)v147 + 8LL))(v147);
    }
  }

  [*(id *)(*(void *)(a1 + 176) + 16) register:*(void *)(*(void *)(a1 + 176) + 8) forNotification:6 registrationInfo:0];
  [*(id *)(*(void *)(a1 + 176) + 16) register:*(void *)(*(void *)(a1 + 176) + 8) forNotification:1 registrationInfo:0];
  [*(id *)(*(void *)(a1 + 176) + 16) register:*(void *)(*(void *)(a1 + 176) + 8) forNotification:7 registrationInfo:0];
  sub_10058390C((uint64_t)"CLLocationController", (uint64_t)sub_100420548, a1, *(void **)(a1 + 32), buf);
  unint64_t v148 = *(void *)buf;
  *(void *)std::stringbuf::string_type buf = 0LL;
  unint64_t v149 = *(void *)(a1 + 184);
  *(void *)(a1 + 184) = v148;
  if (v149)
  {
    (*(void (**)(uint64_t))(*(void *)v149 + 8LL))(v149);
    float v150 = *(void *)buf;
    *(void *)std::stringbuf::string_type buf = 0LL;
    if (v150) {
      (*(void (**)(uint64_t))(*(void *)v150 + 8LL))(v150);
    }
  }

  memset(&v284, 0, sizeof(v284));
  std::string::operator=(&v284, (const std::string *)&qword_101995780);
  [*(id *)(*(void *)(a1 + 184) + 16) register:*(void *)(*(void *)(a1 + 184) + 8) forNotification:0 registrationInfo:sub_10120E548((uint64_t)&v284)];
  [*(id *)(*(void *)(a1 + 184) + 16) register:*(void *)(*(void *)(a1 + 184) + 8) forNotification:4 registrationInfo:0];
  sub_100ACDA48((uint64_t)"CLLocationController", (uint64_t)sub_100420730, a1, *(void **)(a1 + 32), buf);
  float v151 = *(void *)buf;
  *(void *)std::stringbuf::string_type buf = 0LL;
  __int128 v152 = *(void *)(a1 + 192);
  *(void *)(a1 + 192) = v151;
  if (v152)
  {
    (*(void (**)(uint64_t))(*(void *)v152 + 8LL))(v152);
    uint64_t v153 = *(void *)buf;
    *(void *)std::stringbuf::string_type buf = 0LL;
    if (v153) {
      (*(void (**)(uint64_t))(*(void *)v153 + 8LL))(v153);
    }
  }

  [*(id *)(*(void *)(a1 + 192) + 16) register:*(void *)(*(void *)(a1 + 192) + 8) forNotification:0 registrationInfo:0];
  sub_1008F1690((uint64_t)"CLLocationController", (uint64_t)sub_100420918, a1, *(void **)(a1 + 32), buf);
  int v154 = *(void *)buf;
  *(void *)std::stringbuf::string_type buf = 0LL;
  double v155 = *(void *)(a1 + 200);
  *(void *)(a1 + 20sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v154;
  if (v155)
  {
    (*(void (**)(uint64_t))(*(void *)v155 + 8LL))(v155);
    uint64_t v156 = *(void *)buf;
    *(void *)std::stringbuf::string_type buf = 0LL;
    if (v156) {
      (*(void (**)(uint64_t))(*(void *)v156 + 8LL))(v156);
    }
  }

  [*(id *)(*(void *)(a1 + 200) + 16) register:*(void *)(*(void *)(a1 + 200) + 8) forNotification:4 registrationInfo:0];
  [*(id *)(*(void *)(a1 + 200) + 16) register:*(void *)(*(void *)(a1 + 200) + 8) forNotification:5 registrationInfo:0];
  [*(id *)(*(void *)(a1 + 200) + 16) register:*(void *)(*(void *)(a1 + 200) + 8) forNotification:9 registrationInfo:0];
  sub_1003A0A84((uint64_t)"CLLocationController", (uint64_t)sub_100420B00, a1, *(void **)(a1 + 32), buf);
  uint64_t v157 = *(void *)buf;
  *(void *)std::stringbuf::string_type buf = 0LL;
  __int16 v158 = *(void *)(a1 + 208);
  *(void *)(a1 + 20_Block_object_dispose((const void *)(v30 - 184), 8) = v157;
  if (v158)
  {
    (*(void (**)(uint64_t))(*(void *)v158 + 8LL))(v158);
    double v159 = *(void *)buf;
    *(void *)std::stringbuf::string_type buf = 0LL;
    if (v159) {
      (*(void (**)(uint64_t))(*(void *)v159 + 8LL))(v159);
    }
  }

  [*(id *)(*(void *)(a1 + 208) + 16) register:*(void *)(*(void *)(a1 + 208) + 8) forNotification:5 registrationInfo:0];
  sub_10036B3B4((uint64_t)sub_100420CE8, a1, *(void **)(a1 + 32), buf);
  double v160 = *(void *)buf;
  *(void *)std::stringbuf::string_type buf = 0LL;
  double v161 = *(void *)v277;
  *(void *)v277 = v160;
  if (v161)
  {
    (*(void (**)(uint64_t))(*(void *)v161 + 8LL))(v161);
    int v162 = *(void *)buf;
    *(void *)std::stringbuf::string_type buf = 0LL;
    if (v162) {
      (*(void (**)(uint64_t))(*(void *)v162 + 8LL))(v162);
    }
    double v160 = *(void *)v277;
  }

  if (v160)
  {
    v285 = 0;
    sub_1002F0B04(buf);
    double v163 = sub_1002A6F64(*(uint64_t *)buf, "EnableAlwaysOnActivityContext", &v285);
    double v164 = *(std::__shared_weak_count **)&buf[8];
    if (*(void *)&buf[8])
    {
      double v165 = (unint64_t *)(*(void *)&buf[8] + 8LL);
      do
        double v166 = __ldaxr(v165);
      while (__stlxr(v166 - 1, v165));
      if (!v166)
      {
        ((void (*)(std::__shared_weak_count *))v164->__on_zero_shared)(v164);
        std::__shared_weak_count::__release_weak(v164);
      }
    }

    double v167 = v285;
    double v168 = sub_1008FA854(0);
    if (v167) {
      double v169 = v163;
    }
    else {
      double v169 = 0;
    }
    double v171 = *(void *)(*(void *)v277 + 8LL);
    double v170 = *(void **)(*(void *)v277 + 16LL);
    if (v168 || v169)
    {
      [v170 register:v171 forNotification:1 registrationInfo:0];
      *(_BYTE *)(a1 + 1584) = 1;
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      uint64_t v174 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v174,  OS_LOG_TYPE_DEBUG,  "registered for kNotificationContext",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101838C20);
        }
        LOWORD(context.version) = 0;
        LODWORD(v275) = 2;
        int v173 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "registered for kNotificationContext",  &context,  v275);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLLocationController::CLLocationController(id<CLIntersiloUniverse>)",  "%s\n",  v173);
        goto LABEL_457;
      }
    }

    else
    {
      [v170 register:v171 forNotification:2 registrationInfo:0];
      *(_BYTE *)(a1 + 1585) = 1;
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      __int16 v172 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v172,  OS_LOG_TYPE_DEBUG,  "registered for kNotificationContextSpectator",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101838C20);
        }
        LOWORD(context.version) = 0;
        LODWORD(v275) = 2;
        int v173 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "registered for kNotificationContextSpectator",  &context,  v275);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLLocationController::CLLocationController(id<CLIntersiloUniverse>)",  "%s\n",  v173);
LABEL_457:
        if (v173 != buf) {
          free(v173);
        }
      }
    }
  }

  sub_1004F2598();
  double v175 = (int *)(a1 + 320);
  sub_100D96A2C((uint64_t)sub_100420ED0, a1, *(void **)(a1 + 32), buf);
  int v176 = *(void *)buf;
  *(void *)std::stringbuf::string_type buf = 0LL;
  double v177 = *(void *)(a1 + 1568);
  *(void *)(a1 + 156_Block_object_dispose((const void *)(v30 - 184), 8) = v176;
  if (v177)
  {
    (*(void (**)(uint64_t))(*(void *)v177 + 8LL))(v177);
    unint64_t v178 = *(void *)buf;
    *(void *)std::stringbuf::string_type buf = 0LL;
    if (v178) {
      (*(void (**)(uint64_t))(*(void *)v178 + 8LL))(v178);
    }
    int v176 = *(void *)(a1 + 1568);
  }

  if (v176)
  {
    [*(id *)(v176 + 16) register:*(void *)(v176 + 8) forNotification:4 registrationInfo:0];
    [*(id *)(*(void *)(a1 + 1568) + 16) register:*(void *)(*(void *)(a1 + 1568) + 8) forNotification:9 registrationInfo:0];
    [*(id *)(*(void *)(a1 + 1568) + 16) register:*(void *)(*(void *)(a1 + 1568) + 8) forNotification:3 registrationInfo:0];
    [*(id *)(*(void *)(a1 + 1568) + 16) register:*(void *)(*(void *)(a1 + 1568) + 8) forNotification:1 registrationInfo:0];
  }

  sub_100DAA9F8((uint64_t)sub_1004210B8, a1, *(void **)(a1 + 32), buf);
  uint64_t v179 = *(void *)buf;
  *(void *)std::stringbuf::string_type buf = 0LL;
  double v180 = *(void *)(a1 + 1544);
  *(void *)(a1 + 15memset(v19, 0, 44) = v179;
  if (v180)
  {
    (*(void (**)(uint64_t))(*(void *)v180 + 8LL))(v180);
    double v181 = *(void *)buf;
    *(void *)std::stringbuf::string_type buf = 0LL;
    if (v181) {
      (*(void (**)(uint64_t))(*(void *)v181 + 8LL))(v181);
    }
    uint64_t v179 = *(void *)(a1 + 1544);
  }

  if (v179)
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    double v182 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v182,  OS_LOG_TYPE_INFO,  "LocationController,registered to motion state observer",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      LOWORD(context.version) = 0;
      LODWORD(v275) = 2;
      v272 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  1LL,  "LocationController,registered to motion state observer",  &context,  v275);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLLocationController::CLLocationController(id<CLIntersiloUniverse>)",  "%s\n",  v272);
      if (v272 != buf) {
        free(v272);
      }
    }

    [*(id *)(*(void *)(a1 + 1544) + 16) register:*(void *)(*(void *)(a1 + 1544) + 8) forNotification:0 registrationInfo:0];
  }

  sub_100468458((uint64_t)sub_1004212A0, a1, *(void **)(a1 + 32), buf);
  int v183 = *(void *)buf;
  *(void *)std::stringbuf::string_type buf = 0LL;
  int v184 = *(void *)(a1 + 1552);
  *(void *)(a1 + 1552) = v183;
  if (v184)
  {
    (*(void (**)(uint64_t))(*(void *)v184 + 8LL))(v184);
    BOOL v185 = *(void *)buf;
    *(void *)std::stringbuf::string_type buf = 0LL;
    if (v185) {
      (*(void (**)(uint64_t))(*(void *)v185 + 8LL))(v185);
    }
    int v183 = *(void *)(a1 + 1552);
  }

  if (v183)
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    char v186 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v186,  OS_LOG_TYPE_INFO,  "LocationController,registered to motion state mediator",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      LOWORD(context.version) = 0;
      LODWORD(v275) = 2;
      v273 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  1LL,  "LocationController,registered to motion state mediator",  &context,  v275);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLLocationController::CLLocationController(id<CLIntersiloUniverse>)",  "%s\n",  v273);
      if (v273 != buf) {
        free(v273);
      }
    }

    [*(id *)(*(void *)(a1 + 1552) + 16) register:*(void *)(*(void *)(a1 + 1552) + 8) forNotification:0 registrationInfo:0];
    [*(id *)(*(void *)(a1 + 1552) + 16) register:*(void *)(*(void *)(a1 + 1552) + 8) forNotification:2 registrationInfo:0];
  }

  double v187 = sub_1006088E8();
  sub_1010DDBC0(__p, "CLLocationController");
  double v188 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "silo"), "queue");
  v289[0] = &off_101838E40;
  v289[1] = a1;
  v290 = v289;
  sub_100608C04(v187, (char *)__p, (uint64_t)v188, (uint64_t)v289);
  uint64_t v189 = v290;
  if (v290 == v289)
  {
    uint64_t v190 = 4LL;
    uint64_t v189 = v289;
  }

  else
  {
    if (!v290) {
      goto LABEL_302;
    }
    uint64_t v190 = 5LL;
  }

  (*(void (**)(void))(*v189 + 8 * v190))();
LABEL_302:
  if (v283 < 0) {
    operator delete(__p[0]);
  }
LABEL_304:
  sub_1002F0B04(buf);
  sub_1002A6F64(*(uint64_t *)buf, "IgnoreSignalEnvironment", (BOOL *)(a1 + 1586));
  v191 = *(std::__shared_weak_count **)&buf[8];
  if (*(void *)&buf[8])
  {
    unint64_t v192 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      uint64_t v193 = __ldaxr(v192);
    while (__stlxr(v193 - 1, v192));
    if (!v193)
    {
      ((void (*)(std::__shared_weak_count *))v191->__on_zero_shared)(v191);
      std::__shared_weak_count::__release_weak(v191);
    }
  }

  if (!*(_BYTE *)(a1 + 1586))
  {
    sub_100A1C6E0((uint64_t)sub_100421488, a1, *(void **)(a1 + 32), buf);
    uint64_t v194 = *(void *)buf;
    *(void *)std::stringbuf::string_type buf = 0LL;
    double v195 = *(void *)(a1 + 1560);
    *(void *)(a1 + 156sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v194;
    if (v195)
    {
      (*(void (**)(uint64_t))(*(void *)v195 + 8LL))(v195);
      __int128 v196 = *(void *)buf;
      *(void *)std::stringbuf::string_type buf = 0LL;
      if (v196) {
        (*(void (**)(uint64_t))(*(void *)v196 + 8LL))(v196);
      }
      uint64_t v194 = *(void *)(a1 + 1560);
    }

    if (v194) {
      [*(id *)(v194 + 16) register:*(void *)(v194 + 8) forNotification:0 registrationInfo:0];
    }
  }

  sub_100328B0C((uint64_t)sub_100421670, a1, *(void **)(a1 + 32), (id **)buf);
  __int128 v197 = *(void *)buf;
  *(void *)std::stringbuf::string_type buf = 0LL;
  __int128 v198 = *(void *)(a1 + 1576);
  *(void *)(a1 + 1576) = v197;
  if (v198)
  {
    (*(void (**)(uint64_t))(*(void *)v198 + 8LL))(v198);
    __int128 v199 = *(void *)buf;
    *(void *)std::stringbuf::string_type buf = 0LL;
    if (v199) {
      (*(void (**)(uint64_t))(*(void *)v199 + 8LL))(v199);
    }
  }

  v200 = *(void *)(a1 + 1576);
  sub_100320874(buf, kCTRegistrationStatusChangedNotification);
  [*(id *)(v200 + 16) register:*(void *)(v200 + 8) forNotification:sub_100320924((unsigned int *)buf) registrationInfo:0];
  double v201 = *(void *)(a1 + 1576);
  sub_100320874(buf, kCTCallStatusChangeNotification);
  [*(id *)(v201 + 16) register:*(void *)(v201 + 8) forNotification:sub_100320924((unsigned int *)buf) registrationInfo:0];
  v285 = 0;
  sub_1002F0B04(buf);
  unint64_t v202 = sub_1002A6F64(*(uint64_t *)buf, "GroundAltitudeLookUpEnabled", &v285);
  unint64_t v203 = v202;
  unint64_t v204 = *(std::__shared_weak_count **)&buf[8];
  if (!*(void *)&buf[8]) {
    goto LABEL_323;
  }
  int v205 = (unint64_t *)(*(void *)&buf[8] + 8LL);
  do
    double v206 = __ldaxr(v205);
  while (__stlxr(v206 - 1, v205));
  if (v206)
  {
LABEL_323:
    if (!v202) {
      goto LABEL_325;
    }
    goto LABEL_324;
  }

  ((void (*)(std::__shared_weak_count *))v204->__on_zero_shared)(v204);
  std::__shared_weak_count::__release_weak(v204);
  if (v203) {
LABEL_324:
  }
    *(_BYTE *)(a1 + 504sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v285;
LABEL_325:
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101838C20);
  }
  __int128 v207 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    __int128 v208 = *(unsigned __int8 *)(a1 + 5040);
    *(_DWORD *)std::stringbuf::string_type buf = 67240192;
    *(_DWORD *)&uint8_t buf[4] = v208;
    _os_log_impl( (void *)&_mh_execute_header,  v207,  OS_LOG_TYPE_DEBUG,  "DEM,GroundAltitudeLookUpEnabled,%{public}d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    v263 = *(unsigned __int8 *)(a1 + 5040);
    LODWORD(context.version) = 67240192;
    HIDWORD(context.version) = v263;
    LODWORD(v275) = 8;
    v264 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "DEM,GroundAltitudeLookUpEnabled,%{public}d",  &context,  v275);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLLocationController::CLLocationController(id<CLIntersiloUniverse>)",  "%s\n",  v264);
    if (v264 != buf) {
      free(v264);
    }
  }

  if (*(_BYTE *)(a1 + 5040)) {
    *(void *)(a1 + 5032) =  objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "vendor"),  "proxyForService:",  @"CLDigitalElevationModel");
  }
  __int128 v209 = [*(id *)(a1 + 40) newTimer];
  *(void *)(a1 + 64_Block_object_dispose((const void *)(v30 - 184), 8) = v209;
  v281[0] = _NSConcreteStackBlock;
  v281[1] = 3221225472LL;
  v281[2] = sub_100421858;
  v281[3] = &unk_10181D3D0;
  v281[4] = a1;
  [v209 setHandler:v281];
  context.version = 0LL;
  context.info = (void *)a1;
  memset(&context.retain, 0, 56);
  context.perform = (void (__cdecl *)(void *))sub_100421D30;
  __int128 v210 = CFRunLoopSourceCreate(kCFAllocatorDefault, 0LL, &context);
  *(void *)(a1 + 68sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v210;
  if (!v210)
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    std::string::size_type v211 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v211,  OS_LOG_TYPE_FAULT,  "could not create tech status run loop source",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      LOWORD(v287.version) = 0;
      LODWORD(v275) = 2;
      v269 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  17LL,  "could not create tech status run loop source",  &v287,  v275);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "CLLocationController::CLLocationController(id<CLIntersiloUniverse>)",  "%s\n",  v269);
      if (v269 != buf) {
        free(v269);
      }
    }
  }

  v287.version = 0LL;
  v287.info = (void *)a1;
  memset(&v287.retain, 0, 56);
  v287.perform = (void (__cdecl *)(void *))sub_100421F28;
  __int128 v212 = CFRunLoopSourceCreate(kCFAllocatorDefault, 0LL, &v287);
  *(void *)(a1 + 6sub_1011C52D0(v16 - 88) = v212;
  if (!v212)
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    __int128 v213 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v213,  OS_LOG_TYPE_FAULT,  "could not create check active run loop source",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      LOWORD(v292[0]) = 0;
      LODWORD(v275) = 2;
      v270 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  17LL,  "could not create check active run loop source",  v292,  v275);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "CLLocationController::CLLocationController(id<CLIntersiloUniverse>)",  "%s\n",  v270);
      if (v270 != buf) {
        free(v270);
      }
    }
  }

  __int128 v214 = (__CFRunLoop *)sub_10029228C();
  CFRunLoopAddSource(v214, *(CFRunLoopSourceRef *)(a1 + 680), kCFRunLoopCommonModes);
  __int128 v215 = (__CFRunLoop *)sub_10029228C();
  CFRunLoopAddSource(v215, *(CFRunLoopSourceRef *)(a1 + 688), kCFRunLoopCommonModes);
  v216 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "vendor"), "proxyForService:", @"CLHarvesterService");
  unint64_t v217 = 0LL;
  *(void *)(a1 + 632) = v216;
  uint64_t v218 = off_101838A70;
  do
  {
    int v219 = (uint64_t)*v218++;
    v220 = a1 + v217;
    *(void *)(v220 + 160sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v219;
    *(_BYTE *)(v220 + 160_Block_object_dispose((const void *)(v30 - 184), 8) = 0;
    *(void *)(v220 + 1616) = 0LL;
    v217 += 24LL;
  }

  while (v217 != 312);
  std::string::size_type v221 = sub_10080E94C();
  *(_DWORD *)std::stringbuf::string_type buf = 0;
  *(double *)(a1 + 1912) = sub_10080EB58(v221, buf);
  std::string::size_type v222 =  objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "vendor"),  "proxyForService:forClient:",  @"CLEmergencyController",  @"CLLocationController");
  *(void *)(a1 + 500_Block_object_dispose((const void *)(v30 - 184), 8) = v222;
  [v222 startMonitoringEmergencyState:CLISP_ME_TOKEN];
  if (sub_1004FCBF0())
  {
    uint64_t v223 = operator new(0x30uLL);
    *(void *)std::stringbuf::string_type buf = &off_101838ED0;
    *(void *)&uint8_t buf[8] = a1;
    *(void *)&_BYTE buf[24] = buf;
    sub_10052A8A4(v223, v276, buf);
    double v224 = *(void **)&buf[24];
    if (*(_BYTE **)&buf[24] == buf)
    {
      int v225 = 4LL;
      double v224 = buf;
    }

    else
    {
      if (!*(void *)&buf[24])
      {
LABEL_354:
        sub_10042AFBC((uint64_t *)(a1 + 704), (uint64_t)v223);
        goto LABEL_355;
      }

      int v225 = 5LL;
    }

    (*(void (**)(void))(*v224 + 8 * v225))();
    goto LABEL_354;
  }

  __int128 v84 = *(_DWORD *)(a2 + 168);
  v5 |= (unint64_t)&_mh_execute_header;
  *uint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 16_Block_object_dispose((const void *)(v30 - 184), 8) = v84;
  int v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x400000000LL) == 0)
  {
LABEL_101:
    if ((v7 & 0x40) == 0) {
      goto LABEL_102;
    }
    goto LABEL_208;
  }

  int32x2_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 168), 0x519u);
  uint64_t v5 = *v4;
  int v6 = v4[1];
  if ((*v4 & 0x400000000LL) == 0)
  {
LABEL_101:
    if ((v6 & 0x40) == 0) {
      goto LABEL_102;
    }
    goto LABEL_208;
  }

void sub_1003F6904( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, void *__p, uint64_t a23, uint64_t a24, void *a25, uint64_t a26, int a27, __int16 a28, char a29, char a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, int a46, __int16 a47, char a48, char a49)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_1003F69F0(id a1)
{
  qword_101934858 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

void sub_1003F6A1C(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

NSDictionary *sub_1003F6A48(uint64_t a1)
{
  v4[0] = @"apReachOverlapPercentage";
  uint64_t v2 = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", (int)*(double *)(a1 + 32));
  v4[1] = @"numOfAps";
  v5[0] = v2;
  v5[1] = +[NSNumber numberWithUnsignedLong:](&OBJC_CLASS___NSNumber, "numberWithUnsignedLong:", *(void *)(a1 + 40));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v5,  v4,  2LL);
}

void *sub_1003F6AEC(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x2AAAAAAAAAAAAABLL) {
    sub_1000070D4();
  }
  return operator new(96 * a2);
}

void sub_1003F6B30(double *a1, double *a2, uint64_t a3, uint64_t a4, char a5)
{
LABEL_1:
  BOOL v9 = a1;
LABEL_2:
  uint64_t v10 = 1 - a4;
  while (2)
  {
    a1 = v9;
    uint64_t v11 = v10;
    uint64_t v12 = (char *)a2 - (char *)v9;
    unint64_t v13 = ((char *)a2 - (char *)v9) >> 4;
    switch(v13)
    {
      case 0uLL:
      case 1uLL:
        return;
      case 2uLL:
        double v21 = *(a2 - 2);
        double v22 = *v9;
        if (v21 < *v9 || v22 >= v21 && *(a2 - 1) < v9[1])
        {
          *BOOL v9 = v21;
          *(a2 - 2) = v22;
          uint64_t v23 = *((void *)v9 + 1);
          v9[1] = *(a2 - 1);
          *((void *)a2 - 1) = v23;
        }

        return;
      case 3uLL:
        sub_1003F7018(v9, v9 + 2, a2 - 2);
        return;
      case 4uLL:
        sub_1003F75F4(v9, (uint64_t)(v9 + 2), (uint64_t)(v9 + 4), (uint64_t)(a2 - 2));
        return;
      case 5uLL:
        sub_1003F76F4(v9, (uint64_t)(v9 + 2), (uint64_t)(v9 + 4), (uint64_t)(v9 + 6), (uint64_t)(a2 - 2));
        return;
      default:
        if (v12 <= 383)
        {
          if ((a5 & 1) != 0) {
            sub_1003F6EA4(v9, a2);
          }
          else {
            sub_1003F6F7C(v9, a2);
          }
          return;
        }

        if (v11 != 1)
        {
          unint64_t v14 = v13 >> 1;
          unint64_t v15 = &v9[2 * (v13 >> 1)];
          if ((unint64_t)v12 < 0x801)
          {
            sub_1003F7018(&v9[2 * (v13 >> 1)], v9, a2 - 2);
            if ((a5 & 1) != 0) {
              goto LABEL_13;
            }
          }

          else
          {
            sub_1003F7018(v9, &v9[2 * (v13 >> 1)], a2 - 2);
            sub_1003F7018(v9 + 2, v15 - 2, a2 - 4);
            sub_1003F7018(v9 + 4, &v9[2 * v14 + 2], a2 - 6);
            sub_1003F7018(v15 - 2, v15, &v9[2 * v14 + 2]);
            __int128 v16 = *(_OWORD *)v9;
            *(_OWORD *)BOOL v9 = *(_OWORD *)v15;
            *(_OWORD *)unint64_t v15 = v16;
            if ((a5 & 1) != 0) {
              goto LABEL_13;
            }
          }

          double v17 = *(v9 - 2);
          if (v17 >= *v9 && (*v9 < v17 || *(v9 - 1) >= v9[1]))
          {
            BOOL v9 = sub_1003F716C(v9, a2);
            goto LABEL_18;
          }

double *sub_1003F6EA4(double *result, double *a2)
{
  if (result == a2) {
    return result;
  }
  uint64_t v2 = result + 2;
  if (result + 2 == a2) {
    return result;
  }
  uint64_t v3 = 0LL;
  int v4 = result;
  do
  {
    uint64_t v5 = v4;
    int v4 = v2;
    double v6 = v5[2];
    double v7 = *v5;
    if (v6 >= *v5)
    {
      if (v7 < v6) {
        goto LABEL_19;
      }
      double v8 = v5[3];
      if (v8 >= v5[1]) {
        goto LABEL_19;
      }
    }

    else
    {
      double v8 = v5[3];
    }

    void v5[2] = v7;
    v2[1] = v5[1];
    BOOL v9 = result;
    if (v5 == result) {
      goto LABEL_18;
    }
    uint64_t v10 = v3;
    while (1)
    {
      double v11 = *(double *)((char *)result + v10 - 16);
      if (v6 >= v11) {
        break;
      }
      double v12 = *(double *)((char *)result + v10 - 8);
LABEL_12:
      v5 -= 2;
      unint64_t v13 = (double *)((char *)result + v10);
      *unint64_t v13 = v11;
      v13[1] = v12;
      v10 -= 16LL;
      if (!v10)
      {
        BOOL v9 = result;
        goto LABEL_18;
      }
    }

    if (v11 >= v6)
    {
      BOOL v9 = (double *)((char *)result + v10);
      double v12 = *(double *)((char *)result + v10 - 8);
      if (v8 >= v12) {
        goto LABEL_18;
      }
      goto LABEL_12;
    }

    BOOL v9 = v5;
LABEL_18:
    *BOOL v9 = v6;
    v9[1] = v8;
LABEL_19:
    uint64_t v2 = v4 + 2;
    v3 += 16LL;
  }

  while (v4 + 2 != a2);
  return result;
}

double *sub_1003F6F7C(double *result, double *a2)
{
  if (result != a2)
  {
    uint64_t v2 = result + 2;
    if (result + 2 != a2)
    {
      for (unint64_t i = result + 1; ; i += 2)
      {
        int v4 = result;
        int32x2_t result = v2;
        double v5 = v4[2];
        double v6 = *v4;
        if (v5 < *v4) {
          break;
        }
        if (v6 >= v5)
        {
          double v7 = v4[3];
          if (v7 < v4[1]) {
            goto LABEL_6;
          }
        }

uint64_t sub_1003F7018(double *a1, double *a2, double *a3)
{
  double v3 = *a2;
  double v4 = *a1;
  if (*a2 >= *a1 && (v4 < v3 || a2[1] >= a1[1]))
  {
    double v9 = *a3;
    if (*a3 >= v3 && (v3 < v9 || a3[1] >= a2[1])) {
      return 0LL;
    }
    *a2 = v9;
    *a3 = v3;
    uint64_t v10 = a2 + 1;
    uint64_t v11 = *((void *)a2 + 1);
    a2[1] = a3[1];
    *((void *)a3 + 1) = v11;
    double v12 = *a2;
    double v13 = *a1;
    if (*a2 >= *a1 && (v13 < v12 || *v10 >= a1[1])) {
      return 1LL;
    }
    *a1 = v12;
    double v6 = (uint64_t *)(a1 + 1);
    *a2 = v13;
    uint64_t v8 = 2LL;
  }

  else
  {
    double v5 = *a3;
    if (*a3 < v3 || v3 >= v5 && a3[1] < a2[1])
    {
      *a1 = v5;
      double v6 = (uint64_t *)(a1 + 1);
      *a3 = v4;
      double v7 = a3 + 1;
      uint64_t v8 = 1LL;
    }

    else
    {
      *a1 = v3;
      *a2 = v4;
      double v14 = a1[1];
      a1[1] = a2[1];
      a2[1] = v14;
      double v15 = *a3;
      double v16 = *a2;
      if (*a3 >= *a2 && (v16 < v15 || a3[1] >= v14)) {
        return 1LL;
      }
      *a2 = v15;
      *a3 = v16;
      double v7 = a3 + 1;
      uint64_t v8 = 2LL;
      double v6 = (uint64_t *)(a2 + 1);
    }

    uint64_t v10 = v7;
  }

  uint64_t v17 = *v6;
  *double v6 = *(void *)v10;
  *(void *)uint64_t v10 = v17;
  return v8;
}

double *sub_1003F716C(double *a1, double *a2)
{
  double v2 = *a1;
  double v3 = a1[1];
  double v4 = *(a2 - 2);
  if (*a1 >= v4 && (v4 < v2 || v3 >= *(a2 - 1)))
  {
    for (unint64_t i = a1 + 2; i < a2 && v2 >= *i && (*i < v2 || v3 >= i[1]); i += 2)
      ;
  }

  else
  {
    unint64_t i = a1;
    do
    {
      double v6 = i[2];
      i += 2;
      double v7 = v6;
    }

    while (v2 >= v6 && (v7 < v2 || v3 >= i[1]));
  }

  if (i < a2)
  {
    for (a2 -= 2; v2 < v4 || v4 >= v2 && v3 < a2[1]; a2 -= 2)
    {
      double v8 = *(a2 - 2);
      double v4 = v8;
    }
  }

  if (i < a2)
  {
    double v9 = *i;
    double v10 = *a2;
    do
    {
      double *i = v10;
      *a2 = v9;
      uint64_t v11 = *((void *)i + 1);
      i[1] = a2[1];
      *((void *)a2 + 1) = v11;
      do
      {
        double v12 = i[2];
        i += 2;
        double v9 = v12;
      }

      while (v2 >= v12 && (v9 < v2 || v3 >= i[1]));
      do
      {
        do
        {
          double v13 = *(a2 - 2);
          a2 -= 2;
          double v10 = v13;
        }

        while (v2 < v13);
      }

      while (v10 >= v2 && v3 < a2[1]);
    }

    while (i < a2);
  }

  if (i - 2 != a1)
  {
    *a1 = *(i - 2);
    a1[1] = *(i - 1);
  }

  *(i - 2) = v2;
  *(i - 1) = v3;
  return i;
}

unint64_t sub_1003F72B0(double *a1, double *a2)
{
  uint64_t v2 = 0LL;
  double v3 = *a1;
  double v4 = a1[1];
  while (1)
  {
    double v5 = a1[v2 + 2];
    if (v5 >= v3 && (v3 < v5 || a1[v2 + 3] >= v4)) {
      break;
    }
    v2 += 2LL;
  }

  unint64_t v6 = (unint64_t)&a1[v2 + 2];
  if (v2 * 8)
  {
    do
    {
      double v7 = *(a2 - 2);
      a2 -= 2;
      double v8 = v7;
    }

    while (v7 >= v3 && (v3 < v8 || a2[1] >= v4));
  }

  else
  {
LABEL_19:
    if (v6 < (unint64_t)a2)
    {
      do
      {
        double v9 = *(a2 - 2);
        a2 -= 2;
        double v10 = v9;
        if (v9 < v3) {
          break;
        }
        if (v3 < v10) {
          goto LABEL_19;
        }
      }

      while (a2[1] >= v4 && v6 < (unint64_t)a2);
    }
  }

  if (v6 >= (unint64_t)a2)
  {
    unint64_t v13 = (unint64_t)&a1[v2 + 2];
  }

  else
  {
    double v12 = *a2;
    unint64_t v13 = (unint64_t)&a1[v2 + 2];
    double v14 = a2;
    do
    {
      *(double *)unint64_t v13 = v12;
      *double v14 = v5;
      uint64_t v15 = *(void *)(v13 + 8);
      *(double *)(v13 + _Block_object_dispose((const void *)(v30 - 184), 8) = v14[1];
      *((void *)v14 + 1) = v15;
      do
      {
        do
        {
          double v16 = *(double *)(v13 + 16);
          v13 += 16LL;
          double v5 = v16;
        }

        while (v16 < v3);
      }

      while (v3 >= v5 && *(double *)(v13 + 8) < v4);
      do
      {
        double v17 = *(v14 - 2);
        v14 -= 2;
        double v12 = v17;
      }

      while (v17 >= v3 && (v3 < v12 || v14[1] >= v4));
    }

    while (v13 < (unint64_t)v14);
  }

  if ((double *)(v13 - 16) != a1)
  {
    *a1 = *(double *)(v13 - 16);
    a1[1] = *(double *)(v13 - 8);
  }

  *(double *)(v13 - 16) = v3;
  *(double *)(v13 - _Block_object_dispose((const void *)(v30 - 184), 8) = v4;
  return v13 - 16;
}

BOOL sub_1003F73F4(uint64_t a1, double *a2)
{
  uint64_t v4 = ((uint64_t)a2 - a1) >> 4;
  BOOL result = 1LL;
  switch(v4)
  {
    case 0LL:
    case 1LL:
      return result;
    case 2LL:
      double v6 = *(a2 - 2);
      double v7 = *(double *)a1;
      if (v6 < *(double *)a1 || v7 >= v6 && *(a2 - 1) < *(double *)(a1 + 8))
      {
        *(double *)a1 = v6;
        *(a2 - 2) = v7;
        uint64_t v8 = *(void *)(a1 + 8);
        *(double *)(a1 + _Block_object_dispose((const void *)(v30 - 184), 8) = *(a2 - 1);
        *((void *)a2 - 1) = v8;
      }

      return result;
    case 3LL:
      sub_1003F7018((double *)a1, (double *)(a1 + 16), a2 - 2);
      return 1LL;
    case 4LL:
      sub_1003F75F4((double *)a1, a1 + 16, a1 + 32, (uint64_t)(a2 - 2));
      return 1LL;
    case 5LL:
      sub_1003F76F4((double *)a1, a1 + 16, a1 + 32, a1 + 48, (uint64_t)(a2 - 2));
      return 1LL;
    default:
      double v9 = (double *)(a1 + 32);
      sub_1003F7018((double *)a1, (double *)(a1 + 16), (double *)(a1 + 32));
      double v10 = (double *)(a1 + 48);
      uint64_t v11 = 0LL;
      int v12 = 0;
      break;
  }

  do
  {
    double v13 = *v10;
    double v14 = *v9;
    if (*v10 >= *v9)
    {
      if (v14 < v13) {
        goto LABEL_23;
      }
      double v15 = v10[1];
      if (v15 >= v9[1]) {
        goto LABEL_23;
      }
    }

    else
    {
      double v15 = v10[1];
    }

    *double v10 = v14;
    v10[1] = v9[1];
    double v16 = (double *)a1;
    uint64_t v17 = v11;
    while (1)
    {
      uint64_t v18 = a1 + v17;
      double v19 = *(double *)(a1 + v17 + 16);
      if (v13 < v19)
      {
        double v20 = *(double *)(v18 + 24);
        goto LABEL_18;
      }

      if (v19 < v13)
      {
        double v16 = v9;
        goto LABEL_22;
      }

      double v20 = *(double *)(a1 + v17 + 24);
      if (v15 >= v20) {
        break;
      }
LABEL_18:
      v9 -= 2;
      *(double *)(v18 + 32) = v19;
      *(double *)(a1 + v17 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v20;
      v17 -= 16LL;
      if (v17 == -32)
      {
        double v16 = (double *)a1;
        goto LABEL_22;
      }
    }

    double v16 = (double *)(a1 + v17 + 32);
LABEL_22:
    *double v16 = v13;
    v16[1] = v15;
    if (++v12 == 8) {
      return v10 + 2 == a2;
    }
LABEL_23:
    double v9 = v10;
    v11 += 16LL;
    v10 += 2;
  }

  while (v10 != a2);
  return 1LL;
}

double sub_1003F75F4(double *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  double result = *(double *)a4;
  double v9 = *(double *)a3;
  if (*(double *)a4 < *(double *)a3 || v9 >= result && *(double *)(a4 + 8) < *(double *)(a3 + 8))
  {
    *(double *)a3 = result;
    *(double *)a4 = v9;
    uint64_t v10 = *(void *)(a3 + 8);
    *(void *)(a3 + _Block_object_dispose((const void *)(v30 - 184), 8) = *(void *)(a4 + 8);
    *(void *)(a4 + _Block_object_dispose((const void *)(v30 - 184), 8) = v10;
    double result = *(double *)a3;
    double v11 = *(double *)a2;
    if (*(double *)a3 < *(double *)a2 || v11 >= result && *(double *)(a3 + 8) < *(double *)(a2 + 8))
    {
      *(double *)a2 = result;
      *(double *)a3 = v11;
      uint64_t v12 = *(void *)(a2 + 8);
      *(void *)(a2 + _Block_object_dispose((const void *)(v30 - 184), 8) = *(void *)(a3 + 8);
      *(void *)(a3 + _Block_object_dispose((const void *)(v30 - 184), 8) = v12;
      double result = *(double *)a2;
      double v13 = *a1;
      if (*(double *)a2 < *a1 || v13 >= result && *(double *)(a2 + 8) < a1[1])
      {
        *a1 = result;
        *(double *)a2 = v13;
        double result = a1[1];
        a1[1] = *(double *)(a2 + 8);
        *(double *)(a2 + _Block_object_dispose((const void *)(v30 - 184), 8) = result;
      }
    }
  }

  return result;
}

double sub_1003F76F4(double *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double result = *(double *)a5;
  double v11 = *(double *)a4;
  if (*(double *)a5 < *(double *)a4 || v11 >= result && *(double *)(a5 + 8) < *(double *)(a4 + 8))
  {
    *(double *)a4 = result;
    *(double *)a5 = v11;
    uint64_t v12 = *(void *)(a4 + 8);
    *(void *)(a4 + _Block_object_dispose((const void *)(v30 - 184), 8) = *(void *)(a5 + 8);
    *(void *)(a5 + _Block_object_dispose((const void *)(v30 - 184), 8) = v12;
    double result = *(double *)a4;
    double v13 = *(double *)a3;
    if (*(double *)a4 < *(double *)a3 || v13 >= result && *(double *)(a4 + 8) < *(double *)(a3 + 8))
    {
      *(double *)a3 = result;
      *(double *)a4 = v13;
      uint64_t v14 = *(void *)(a3 + 8);
      *(void *)(a3 + _Block_object_dispose((const void *)(v30 - 184), 8) = *(void *)(a4 + 8);
      *(void *)(a4 + _Block_object_dispose((const void *)(v30 - 184), 8) = v14;
      double result = *(double *)a3;
      double v15 = *(double *)a2;
      if (*(double *)a3 < *(double *)a2 || v15 >= result && *(double *)(a3 + 8) < *(double *)(a2 + 8))
      {
        *(double *)a2 = result;
        *(double *)a3 = v15;
        uint64_t v16 = *(void *)(a2 + 8);
        *(void *)(a2 + _Block_object_dispose((const void *)(v30 - 184), 8) = *(void *)(a3 + 8);
        *(void *)(a3 + _Block_object_dispose((const void *)(v30 - 184), 8) = v16;
        double result = *(double *)a2;
        double v17 = *a1;
        if (*(double *)a2 < *a1 || v17 >= result && *(double *)(a2 + 8) < a1[1])
        {
          *a1 = result;
          *(double *)a2 = v17;
          double result = a1[1];
          a1[1] = *(double *)(a2 + 8);
          *(double *)(a2 + _Block_object_dispose((const void *)(v30 - 184), 8) = result;
        }
      }
    }
  }

  return result;
}

uint64_t sub_1003F7848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 != a2)
  {
    uint64_t v8 = a2 - a1;
    uint64_t v9 = (a2 - a1) >> 4;
    if (a2 - a1 >= 17)
    {
      unint64_t v10 = (unint64_t)(v9 - 2) >> 1;
      unint64_t v11 = v10 + 1;
      uint64_t v12 = (double *)(a1 + 16 * v10);
      do
      {
        sub_1003F79C8(a1, a4, v9, v12);
        v12 -= 2;
        --v11;
      }

      while (v11);
    }

    uint64_t v13 = a2;
    if (a2 != a3)
    {
      uint64_t v14 = a2;
      do
      {
        double v15 = *(double *)v14;
        double v16 = *(double *)a1;
        if (*(double *)v14 < *(double *)a1 || v16 >= v15 && *(double *)(v14 + 8) < *(double *)(a1 + 8))
        {
          *(double *)uint64_t v14 = v16;
          *(double *)a1 = v15;
          uint64_t v17 = *(void *)(v14 + 8);
          *(void *)(v14 + _Block_object_dispose((const void *)(v30 - 184), 8) = *(void *)(a1 + 8);
          *(void *)(a1 + _Block_object_dispose((const void *)(v30 - 184), 8) = v17;
          sub_1003F79C8(a1, a4, v9, (double *)a1);
        }

        v14 += 16LL;
      }

      while (v14 != a3);
      uint64_t v13 = a3;
    }

    if (v8 >= 17)
    {
      uint64_t v18 = (unint64_t)v8 >> 4;
      double v19 = (double *)(a2 - 16);
      do
      {
        double v21 = *(double *)a1;
        uint64_t v20 = *(void *)(a1 + 8);
        sub_1003F7B0C((double *)a1, a4, v18);
        if (v19 == v22)
        {
          *double v22 = v21;
          *((void *)v22 + 1) = v20;
        }

        else
        {
          *double v22 = *v19;
          v22[1] = v19[1];
          double *v19 = v21;
          *((void *)v19 + 1) = v20;
          sub_1003F7B9C(a1, (uint64_t)(v22 + 2), a4, ((uint64_t)v22 - a1 + 16) >> 4);
        }

        v19 -= 2;
      }

      while (v18-- > 2);
    }

    return v13;
  }

  return a3;
}

uint64_t sub_1003F79C8(uint64_t result, uint64_t a2, uint64_t a3, double *a4)
{
  if (a3 >= 2)
  {
    uint64_t v4 = (uint64_t)a4 - result;
    int64_t v5 = (unint64_t)(a3 - 2) >> 1;
    if (v5 >= ((uint64_t)a4 - result) >> 4)
    {
      uint64_t v6 = v4 >> 3;
      uint64_t v7 = (v4 >> 3) + 1;
      uint64_t v8 = (double *)(result + 16 * v7);
      uint64_t v9 = v6 + 2;
      if (v9 < a3)
      {
        double v10 = v8[2];
        if (*v8 < v10 || v10 >= *v8 && v8[1] < v8[3])
        {
          v8 += 2;
          uint64_t v7 = v9;
        }
      }

      double v11 = *v8;
      double v12 = *a4;
      if (*v8 >= *a4)
      {
        if (v12 >= v11)
        {
          double v13 = a4[1];
          if (v8[1] < v13) {
            return result;
          }
        }

        else
        {
          double v13 = a4[1];
        }

        *a4 = v11;
        a4[1] = v8[1];
        if (v5 >= v7)
        {
          while (1)
          {
            uint64_t v15 = 2 * v7;
            uint64_t v7 = (2 * v7) | 1;
            uint64_t v14 = (double *)(result + 16 * v7);
            uint64_t v16 = v15 + 2;
            if (v16 < a3)
            {
              double v17 = v14[2];
              if (*v14 < v17 || v17 >= *v14 && v14[1] < v14[3])
              {
                v14 += 2;
                uint64_t v7 = v16;
              }
            }

            double v18 = *v14;
            if (*v14 < v12 || v12 >= v18 && v14[1] < v13) {
              break;
            }
            *uint64_t v8 = v18;
            v8[1] = v14[1];
            uint64_t v8 = v14;
            if (v5 < v7) {
              goto LABEL_23;
            }
          }
        }

        uint64_t v14 = v8;
LABEL_23:
        *uint64_t v14 = v12;
        v14[1] = v13;
      }
    }
  }

  return result;
}

double sub_1003F7B0C(double *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = 0LL;
  uint64_t v4 = a3 - 2;
  if (a3 < 2) {
    uint64_t v4 = a3 - 1;
  }
  uint64_t v5 = v4 >> 1;
  do
  {
    uint64_t v6 = a1;
    a1 += 2 * v3 + 2;
    uint64_t v7 = 2 * v3;
    uint64_t v3 = (2 * v3) | 1;
    uint64_t v8 = v7 + 2;
    if (v8 < a3)
    {
      double v9 = a1[2];
      if (*a1 < v9 || v9 >= *a1 && a1[1] < a1[3])
      {
        a1 += 2;
        uint64_t v3 = v8;
      }
    }

    *uint64_t v6 = *a1;
    double result = a1[1];
    v6[1] = result;
  }

  while (v3 <= v5);
  return result;
}

uint64_t sub_1003F7B9C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4 - 2;
  if (a4 >= 2)
  {
    unint64_t v5 = v4 >> 1;
    uint64_t v6 = (double *)(result + 16 * (v4 >> 1));
    double v7 = *v6;
    double v8 = *(double *)(a2 - 16);
    if (*v6 >= v8)
    {
      if (v8 < v7) {
        return result;
      }
      double v9 = *(double *)(a2 - 8);
      if (v6[1] >= v9) {
        return result;
      }
    }

    else
    {
      double v9 = *(double *)(a2 - 8);
    }

    *(double *)(a2 - 16) = v7;
    *(double *)(a2 - _Block_object_dispose((const void *)(v30 - 184), 8) = v6[1];
    if (v4 >= 2)
    {
      while (1)
      {
        unint64_t v11 = v5 - 1;
        unint64_t v5 = (v5 - 1) >> 1;
        double v10 = (double *)(result + 16 * v5);
        double v12 = *v10;
        if (*v10 >= v8)
        {
          if (v8 < v12) {
            break;
          }
          double v13 = v10[1];
          if (v13 >= v9) {
            break;
          }
        }

        else
        {
          double v13 = v10[1];
        }

        *uint64_t v6 = v12;
        v6[1] = v13;
        uint64_t v6 = (double *)(result + 16 * v5);
        if (v11 <= 1) {
          goto LABEL_13;
        }
      }
    }

    double v10 = v6;
LABEL_13:
    *double v10 = v8;
    v10[1] = v9;
  }

  return result;
}

uint64_t sub_1003F7C44(uint64_t a1, double *a2, double *a3)
{
  *(void *)(a1 + _Block_object_dispose((const void *)(v30 - 184), 8) = 0LL;
  unint64_t v4 = (double *)(a1 + 8);
  *(void *)(a1 + 16) = 0LL;
  *(void *)a1 = a1 + 8;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      sub_1003F7CC4((uint64_t **)a1, v4, v6, (uint64_t *)v6);
      ++v6;
    }

    while (v6 != a3);
  }

  return a1;
}

void sub_1003F7CAC(_Unwind_Exception *a1)
{
}

uint64_t *sub_1003F7CC4(uint64_t **a1, double *a2, double *a3, uint64_t *a4)
{
  uint64_t v6 = sub_1003F7D48(a1, a2, &v11, &v10, a3);
  double v7 = *(uint64_t **)v6;
  if (!*(void *)v6)
  {
    double v8 = (uint64_t **)v6;
    double v7 = (uint64_t *)operator new(0x28uLL);
    _DWORD v7[4] = *a4;
    sub_1000085FC(a1, (uint64_t)v11, v8, v7);
  }

  return v7;
}

double *sub_1003F7D48(void *a1, double *a2, double **a3, double *a4, double *a5)
{
  unint64_t v5 = (double *)(a1 + 1);
  if (a1 + 1 == (void *)a2 || (double v6 = *a5, v7 = a2[4], *a5 < v7))
  {
    double v8 = *(uint64_t **)a2;
    if ((double *)*a1 == a2)
    {
      double v10 = a2;
LABEL_17:
      if (v8)
      {
        *a3 = v10;
        return v10 + 1;
      }

      else
      {
        *a3 = a2;
        return a2;
      }
    }

    if (v8)
    {
      double v9 = *(uint64_t **)a2;
      do
      {
        double v10 = (double *)v9;
        double v9 = (uint64_t *)v9[1];
      }

      while (v9);
    }

    else
    {
      double v13 = a2;
      do
      {
        double v10 = (double *)*((void *)v13 + 2);
        BOOL v14 = *(void *)v10 == (void)v13;
        double v13 = v10;
      }

      while (v14);
    }

    double v15 = *a5;
    if (v10[4] < *a5) {
      goto LABEL_17;
    }
    uint64_t v16 = *(double **)v5;
    if (*(void *)v5)
    {
      do
      {
        while (1)
        {
          double v17 = v16;
          double v18 = v16[4];
          if (v15 >= v18) {
            break;
          }
          uint64_t v16 = *(double **)v16;
          unint64_t v5 = v17;
          if (!*(void *)v17) {
            goto LABEL_43;
          }
        }

        if (v18 >= v15) {
          break;
        }
        unint64_t v5 = v16 + 1;
        uint64_t v16 = (double *)*((void *)v16 + 1);
      }

      while (v16);
      goto LABEL_43;
    }

void *sub_1003F7EE4(void *a1, unint64_t a2)
{
  *a1 = 0LL;
  a1[1] = 0LL;
  a1[2] = 0LL;
  if (a2)
  {
    sub_100006E1C(a1, a2);
    unint64_t v4 = (char *)a1[1];
    size_t v5 = 24 * ((24 * a2 - 24) / 0x18) + 24;
    bzero(v4, v5);
    a1[1] = &v4[v5];
  }

  return a1;
}

void sub_1003F7F70( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

void *sub_1003F7F84(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x276276276276277LL) {
    sub_1000070D4();
  }
  return operator new(104 * a2);
}

void sub_1003F7FCC(uint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
LABEL_1:
  unint64_t v8 = a1;
  while (2)
  {
    a1 = v8;
    uint64_t v9 = a2 - v8;
    uint64_t v10 = 0x4EC4EC4EC4EC4EC5LL * ((uint64_t)(a2 - v8) >> 3);
    switch(v10)
    {
      case 0LL:
      case 1LL:
        return;
      case 2LL:
        double v54 = *(double *)(a2 - 104);
        double v55 = *(double *)v8;
        if (v54 > *(double *)v8)
        {
          *(double *)unint64_t v8 = v54;
          *(double *)(a2 - 104) = v55;
          __int128 v160 = *(_OWORD *)(v8 + 8);
          __int128 v172 = *(_OWORD *)(v8 + 24);
          *(_OWORD *)__int128 v208 = *(_OWORD *)(v8 + 72);
          *(_OWORD *)&v208[16] = *(_OWORD *)(v8 + 88);
          __int128 v184 = *(_OWORD *)(v8 + 40);
          __int128 v196 = *(_OWORD *)(v8 + 56);
          __int128 v57 = *(_OWORD *)(a2 - 48);
          __int128 v56 = *(_OWORD *)(a2 - 32);
          __int128 v58 = *(_OWORD *)(a2 - 23);
          *(_OWORD *)(v8 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(_OWORD *)(a2 - 64);
          *(_OWORD *)(v8 + 81) = v58;
          *(_OWORD *)(v8 + sub_10000AE14(v1 - 72) = v56;
          *(_OWORD *)(v8 + 56) = v57;
          __int128 v59 = *(_OWORD *)(a2 - 96);
          *(_OWORD *)(v8 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = *(_OWORD *)(a2 - 80);
          *(_OWORD *)(v8 + _Block_object_dispose((const void *)(v30 - 184), 8) = v59;
          *(_OWORD *)(a2 - 96) = v160;
          *(_OWORD *)(a2 - 8sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v172;
          *(_OWORD *)(a2 - 23) = *(_OWORD *)&v208[9];
          *(_OWORD *)(a2 - 4_Block_object_dispose((const void *)(v30 - 184), 8) = v196;
          *(_OWORD *)(a2 - 32) = *(_OWORD *)v208;
          *(_OWORD *)(a2 - 64) = v184;
        }

        return;
      case 3LL:
        sub_1003F8D68(v8, v8 + 104, a2 - 104);
        return;
      case 4LL:
        sub_1003F9408(v8, v8 + 104, v8 + 208, a2 - 104);
        return;
      case 5LL:
        sub_1003F9408(v8, v8 + 104, v8 + 208, v8 + 312);
        double v60 = *(double *)(a2 - 104);
        double v61 = *(double *)(v8 + 312);
        if (v60 > v61)
        {
          *(double *)(v8 + 312) = v60;
          *(double *)(a2 - 104) = v61;
          __int128 v185 = *(_OWORD *)(v8 + 352);
          __int128 v197 = *(_OWORD *)(v8 + 368);
          *(_OWORD *)__int128 v209 = *(_OWORD *)(v8 + 384);
          *(_OWORD *)&v209[16] = *(_OWORD *)(v8 + 400);
          __int128 v161 = *(_OWORD *)(v8 + 320);
          __int128 v173 = *(_OWORD *)(v8 + 336);
          __int128 v62 = *(_OWORD *)(a2 - 80);
          *(_OWORD *)(v8 + 32sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(_OWORD *)(a2 - 96);
          *(_OWORD *)(v8 + 336) = v62;
          __int128 v64 = *(_OWORD *)(a2 - 48);
          __int128 v63 = *(_OWORD *)(a2 - 32);
          __int128 v65 = *(_OWORD *)(a2 - 64);
          *(_OWORD *)(v8 + 393) = *(_OWORD *)(a2 - 23);
          *(_OWORD *)(v8 + 36_Block_object_dispose((const void *)(v30 - 184), 8) = v64;
          *(_OWORD *)(v8 + 384) = v63;
          *(_OWORD *)(v8 + 352) = v65;
          *(_OWORD *)(a2 - 96) = v161;
          *(_OWORD *)(a2 - 8sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v173;
          *(_OWORD *)(a2 - 23) = *(_OWORD *)&v209[9];
          *(_OWORD *)(a2 - 4_Block_object_dispose((const void *)(v30 - 184), 8) = v197;
          *(_OWORD *)(a2 - 32) = *(_OWORD *)v209;
          *(_OWORD *)(a2 - 64) = v185;
          double v66 = *(double *)(v8 + 312);
          double v67 = *(double *)(v8 + 208);
          if (v66 > v67)
          {
            *(double *)(v8 + 20_Block_object_dispose((const void *)(v30 - 184), 8) = v66;
            *(double *)(v8 + 312) = v67;
            __int128 v186 = *(_OWORD *)(v8 + 248);
            __int128 v198 = *(_OWORD *)(v8 + 264);
            *(_OWORD *)__int128 v210 = *(_OWORD *)(v8 + 280);
            *(_OWORD *)&v210[16] = *(_OWORD *)(v8 + 296);
            __int128 v162 = *(_OWORD *)(v8 + 216);
            __int128 v174 = *(_OWORD *)(v8 + 232);
            __int128 v68 = *(_OWORD *)(v8 + 368);
            *(_OWORD *)(v8 + 24_Block_object_dispose((const void *)(v30 - 184), 8) = *(_OWORD *)(v8 + 352);
            *(_OWORD *)(v8 + 264) = v68;
            *(_OWORD *)(v8 + 28sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(_OWORD *)(v8 + 384);
            *(_OWORD *)(v8 + 289) = *(_OWORD *)(v8 + 393);
            __int128 v69 = *(_OWORD *)(v8 + 336);
            *(_OWORD *)(v8 + 216) = *(_OWORD *)(v8 + 320);
            *(_OWORD *)(v8 + 232) = v69;
            *(_OWORD *)(v8 + 32sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v162;
            *(_OWORD *)(v8 + 336) = v174;
            *(_OWORD *)(v8 + 393) = *(_OWORD *)&v210[9];
            *(_OWORD *)(v8 + 36_Block_object_dispose((const void *)(v30 - 184), 8) = v198;
            *(_OWORD *)(v8 + 384) = *(_OWORD *)v210;
            *(_OWORD *)(v8 + 352) = v186;
            double v70 = *(double *)(v8 + 104);
            if (v66 > v70)
            {
              *(double *)(v8 + 20_Block_object_dispose((const void *)(v30 - 184), 8) = v70;
              __int128 v187 = *(_OWORD *)(v8 + 144);
              __int128 v199 = *(_OWORD *)(v8 + 160);
              *(_OWORD *)std::string::size_type v211 = *(_OWORD *)(v8 + 176);
              *(_OWORD *)&v211[16] = *(_OWORD *)(v8 + 192);
              __int128 v163 = *(_OWORD *)(v8 + 112);
              __int128 v175 = *(_OWORD *)(v8 + 128);
              __int128 v71 = *(_OWORD *)(v8 + 264);
              *(_OWORD *)(v8 + 1memset(v19, 0, 44) = *(_OWORD *)(v8 + 248);
              *(_OWORD *)(v8 + 16sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v71;
              *(_OWORD *)(v8 + 176) = *(_OWORD *)(v8 + 280);
              *(_OWORD *)(v8 + 185) = *(_OWORD *)(v8 + 289);
              __int128 v72 = *(_OWORD *)(v8 + 232);
              *(_OWORD *)(v8 + 112) = *(_OWORD *)(v8 + 216);
              *(_OWORD *)(v8 + 12_Block_object_dispose((const void *)(v30 - 184), 8) = v72;
              *(_OWORD *)(v8 + 216) = v163;
              *(_OWORD *)(v8 + 232) = v175;
              *(_OWORD *)(v8 + 289) = *(_OWORD *)&v211[9];
              *(_OWORD *)(v8 + 264) = v199;
              *(_OWORD *)(v8 + 28sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(_OWORD *)v211;
              *(_OWORD *)(v8 + 24_Block_object_dispose((const void *)(v30 - 184), 8) = v187;
              double v73 = *(double *)v8;
              BOOL v74 = v66 <= *(double *)v8;
              *(double *)(v8 + 104) = v66;
              if (!v74)
              {
                *(double *)unint64_t v8 = v66;
                *(double *)(v8 + 104) = v73;
                __int128 v164 = *(_OWORD *)(v8 + 8);
                __int128 v176 = *(_OWORD *)(v8 + 24);
                *(_OWORD *)__int128 v212 = *(_OWORD *)(v8 + 72);
                *(_OWORD *)&v212[16] = *(_OWORD *)(v8 + 88);
                __int128 v188 = *(_OWORD *)(v8 + 40);
                __int128 v200 = *(_OWORD *)(v8 + 56);
                *(_OWORD *)(v8 + 81) = *(_OWORD *)(v8 + 185);
                *(_OWORD *)(v8 + sub_10000AE14(v1 - 72) = *(_OWORD *)(v8 + 176);
                __int128 v75 = *(_OWORD *)(v8 + 144);
                *(_OWORD *)(v8 + 56) = *(_OWORD *)(v8 + 160);
                *(_OWORD *)(v8 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v75;
                __int128 v76 = *(_OWORD *)(v8 + 128);
                *(_OWORD *)(v8 + _Block_object_dispose((const void *)(v30 - 184), 8) = *(_OWORD *)(v8 + 112);
                *(_OWORD *)(v8 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v76;
                *(_OWORD *)(v8 + 112) = v164;
                *(_OWORD *)(v8 + 12_Block_object_dispose((const void *)(v30 - 184), 8) = v176;
                *(_OWORD *)(v8 + 185) = *(_OWORD *)&v212[9];
                *(_OWORD *)(v8 + 16sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v200;
                *(_OWORD *)(v8 + 176) = *(_OWORD *)v212;
                *(_OWORD *)(v8 + 1memset(v19, 0, 44) = v188;
              }
            }
          }
        }

        return;
      default:
        if (v9 <= 2495)
        {
          unint64_t v77 = v8 + 104;
          BOOL v79 = v8 == a2 || v77 == a2;
          if ((a4 & 1) != 0)
          {
            if (!v79)
            {
              uint64_t v80 = 0LL;
              unint64_t v81 = v8;
              do
              {
                unint64_t v82 = v77;
                double v83 = *(double *)(v81 + 104);
                if (v83 > *(double *)v81)
                {
                  __int128 v165 = *(_OWORD *)(v81 + 112);
                  __int128 v177 = *(_OWORD *)(v81 + 128);
                  *(_OWORD *)&v213[9] = *(_OWORD *)(v81 + 185);
                  __int128 v201 = *(_OWORD *)(v81 + 160);
                  *(_OWORD *)__int128 v213 = *(_OWORD *)(v81 + 176);
                  __int128 v189 = *(_OWORD *)(v81 + 144);
                  uint64_t v84 = v80;
                  double v85 = *(double *)v81;
                  while (1)
                  {
                    uint64_t v86 = v8 + v84;
                    *(double *)(v86 + 104) = v85;
                    __int128 v87 = *(_OWORD *)(v8 + v84 + 56);
                    *(_OWORD *)(v86 + 1memset(v19, 0, 44) = *(_OWORD *)(v8 + v84 + 40);
                    *(_OWORD *)(v86 + 16sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v87;
                    *(_OWORD *)(v86 + 176) = *(_OWORD *)(v8 + v84 + 72);
                    *(_OWORD *)(v86 + 185) = *(_OWORD *)(v8 + v84 + 81);
                    __int128 v88 = *(_OWORD *)(v8 + v84 + 24);
                    *(_OWORD *)(v86 + 112) = *(_OWORD *)(v8 + v84 + 8);
                    *(_OWORD *)(v86 + 12_Block_object_dispose((const void *)(v30 - 184), 8) = v88;
                    if (!v84) {
                      break;
                    }
                    double v85 = *(double *)(v86 - 104);
                    v84 -= 104LL;
                    if (v83 <= v85)
                    {
                      __int128 v89 = (double *)(v8 + v84 + 104);
                      goto LABEL_78;
                    }
                  }

                  __int128 v89 = (double *)v8;
LABEL_78:
                  double *v89 = v83;
                  *(_OWORD *)(v86 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v177;
                  *(_OWORD *)(v86 + _Block_object_dispose((const void *)(v30 - 184), 8) = v165;
                  *(_OWORD *)(v86 + 81) = *(_OWORD *)&v213[9];
                  *(_OWORD *)(v86 + sub_10000AE14(v1 - 72) = *(_OWORD *)v213;
                  *(_OWORD *)(v86 + 56) = v201;
                  *(_OWORD *)(v86 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v189;
                }

                unint64_t v77 = v82 + 104;
                v80 += 104LL;
                unint64_t v81 = v82;
              }

              while (v82 + 104 != a2);
            }
          }

          else if (!v79)
          {
            unint64_t v135 = (_OWORD *)(v8 + 112);
            do
            {
              uint64_t v136 = v77;
              double v137 = *(double *)(a1 + 104);
              if (v137 > *(double *)a1)
              {
                __int128 v168 = *(_OWORD *)(a1 + 112);
                __int128 v180 = *(_OWORD *)(a1 + 128);
                *(_OWORD *)&v216[9] = *(_OWORD *)(a1 + 185);
                __int128 v204 = *(_OWORD *)(a1 + 160);
                *(_OWORD *)v216 = *(_OWORD *)(a1 + 176);
                __int128 v192 = *(_OWORD *)(a1 + 144);
                unint64_t v138 = v135;
                double v139 = *(double *)a1;
                do
                {
                  *((double *)v138 - 1) = v139;
                  __int128 v140 = *(_OWORD *)((char *)v138 - 56);
                  v138[2] = *(_OWORD *)((char *)v138 - 72);
                  v138[3] = v140;
                  v138[4] = *(_OWORD *)((char *)v138 - 40);
                  *(_OWORD *)((char *)v138 + 73) = *(_OWORD *)((char *)v138 - 31);
                  __int128 v141 = *(_OWORD *)((char *)v138 - 88);
                  _OWORD *v138 = *(_OWORD *)((char *)v138 - 104);
                  v138[1] = v141;
                  double v139 = *((double *)v138 - 27);
                  unint64_t v138 = (_OWORD *)((char *)v138 - 104);
                }

                while (v137 > v139);
                *((double *)v138 - 1) = v137;
                _OWORD *v138 = v168;
                v138[1] = v180;
                *(_OWORD *)((char *)v138 + 73) = *(_OWORD *)&v216[9];
                v138[3] = v204;
                v138[4] = *(_OWORD *)v216;
                v138[2] = v192;
              }

              unint64_t v77 = v136 + 104;
              unint64_t v135 = (_OWORD *)((char *)v135 + 104);
              a1 = v136;
            }

            while (v136 + 104 != a2);
          }

          return;
        }

        if (!a3)
        {
          if (v8 == a2) {
            return;
          }
          int64_t v90 = (unint64_t)(v10 - 2) >> 1;
          int64_t v91 = v90;
          do
          {
            int64_t v92 = v91;
            if (v90 >= v91)
            {
              uint64_t v93 = (2 * v91) | 1;
              unint64_t v94 = v8 + 104 * v93;
              if (2 * v92 + 2 < v10 && *(double *)v94 > *(double *)(v94 + 104))
              {
                v94 += 104LL;
                uint64_t v93 = 2 * v92 + 2;
              }

              unint64_t v95 = v8 + 104 * v92;
              double v96 = *(double *)v94;
              double v97 = *(double *)v95;
              if (*(double *)v94 <= *(double *)v95)
              {
                __int128 v166 = *(_OWORD *)(v95 + 8);
                __int128 v178 = *(_OWORD *)(v95 + 24);
                *(_OWORD *)&v214[9] = *(_OWORD *)(v95 + 81);
                __int128 v202 = *(_OWORD *)(v95 + 56);
                *(_OWORD *)__int128 v214 = *(_OWORD *)(v95 + 72);
                __int128 v190 = *(_OWORD *)(v95 + 40);
                do
                {
                  unint64_t v98 = v95;
                  unint64_t v95 = v94;
                  *(double *)unint64_t v98 = v96;
                  __int128 v99 = *(_OWORD *)(v94 + 8);
                  *(_OWORD *)(v98 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = *(_OWORD *)(v94 + 24);
                  *(_OWORD *)(v98 + _Block_object_dispose((const void *)(v30 - 184), 8) = v99;
                  __int128 v100 = *(_OWORD *)(v94 + 40);
                  __int128 v101 = *(_OWORD *)(v94 + 56);
                  __int128 v102 = *(_OWORD *)(v94 + 72);
                  *(_OWORD *)(v98 + 81) = *(_OWORD *)(v94 + 81);
                  *(_OWORD *)(v98 + sub_10000AE14(v1 - 72) = v102;
                  *(_OWORD *)(v98 + 56) = v101;
                  *(_OWORD *)(v98 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v100;
                  if (v90 < v93) {
                    break;
                  }
                  uint64_t v103 = 2 * v93;
                  uint64_t v93 = (2 * v93) | 1;
                  unint64_t v94 = v8 + 104 * v93;
                  uint64_t v104 = v103 + 2;
                  if (v104 < v10 && *(double *)v94 > *(double *)(v94 + 104))
                  {
                    v94 += 104LL;
                    uint64_t v93 = v104;
                  }

                  double v96 = *(double *)v94;
                }

                while (*(double *)v94 <= v97);
                *(double *)unint64_t v95 = v97;
                *(_OWORD *)(v95 + _Block_object_dispose((const void *)(v30 - 184), 8) = v166;
                *(_OWORD *)(v95 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v178;
                *(_OWORD *)(v95 + 81) = *(_OWORD *)&v214[9];
                *(_OWORD *)(v95 + 56) = v202;
                *(_OWORD *)(v95 + sub_10000AE14(v1 - 72) = *(_OWORD *)v214;
                *(_OWORD *)(v95 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v190;
              }
            }

            int64_t v91 = v92 - 1;
          }

          while (v92);
          int64_t v105 = v9 / 0x68uLL;
          while (2)
          {
            uint64_t v106 = 0LL;
            double v107 = *(double *)v8;
            __int128 v144 = *(_OWORD *)(v8 + 8);
            __int128 v147 = *(_OWORD *)(v8 + 24);
            *(_OWORD *)&v156[9] = *(_OWORD *)(v8 + 81);
            __int128 v153 = *(_OWORD *)(v8 + 56);
            *(_OWORD *)uint64_t v156 = *(_OWORD *)(v8 + 72);
            __int128 v150 = *(_OWORD *)(v8 + 40);
            unint64_t v108 = v8;
            do
            {
              unint64_t v109 = v108;
              v108 += 104 * v106 + 104;
              uint64_t v110 = 2 * v106;
              uint64_t v106 = (2 * v106) | 1;
              int64_t v111 = v110 + 2;
              if (v111 < v105 && *(double *)v108 > *(double *)(v108 + 104))
              {
                v108 += 104LL;
                uint64_t v106 = v111;
              }

              *(void *)unint64_t v109 = *(void *)v108;
              __int128 v112 = *(_OWORD *)(v108 + 8);
              *(_OWORD *)(v109 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = *(_OWORD *)(v108 + 24);
              *(_OWORD *)(v109 + _Block_object_dispose((const void *)(v30 - 184), 8) = v112;
              __int128 v113 = *(_OWORD *)(v108 + 40);
              __int128 v114 = *(_OWORD *)(v108 + 56);
              __int128 v115 = *(_OWORD *)(v108 + 72);
              *(_OWORD *)(v109 + 81) = *(_OWORD *)(v108 + 81);
              *(_OWORD *)(v109 + sub_10000AE14(v1 - 72) = v115;
              *(_OWORD *)(v109 + 56) = v114;
              *(_OWORD *)(v109 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v113;
            }

            while (v106 <= (uint64_t)((unint64_t)(v105 - 2) >> 1));
            int64_t v116 = (__int128 *)(v108 + 8);
            if (v108 != a2 - 104)
            {
              *(void *)unint64_t v108 = *(void *)(a2 - 104);
              __int128 v117 = *(_OWORD *)(a2 - 80);
              __int128 *v116 = *(_OWORD *)(a2 - 96);
              *(_OWORD *)(v108 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v117;
              __int128 v118 = *(_OWORD *)(a2 - 64);
              __int128 v119 = *(_OWORD *)(a2 - 48);
              __int128 v120 = *(_OWORD *)(a2 - 32);
              *(_OWORD *)(v108 + 81) = *(_OWORD *)(a2 - 23);
              *(_OWORD *)(v108 + 56) = v119;
              *(_OWORD *)(v108 + sub_10000AE14(v1 - 72) = v120;
              *(_OWORD *)(v108 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v118;
              *(double *)(a2 - 104) = v107;
              *(_OWORD *)(a2 - 96) = v144;
              *(_OWORD *)(a2 - 8sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v147;
              *(_OWORD *)(a2 - 23) = *(_OWORD *)&v156[9];
              *(_OWORD *)(a2 - 4_Block_object_dispose((const void *)(v30 - 184), 8) = v153;
              *(_OWORD *)(a2 - 32) = *(_OWORD *)v156;
              *(_OWORD *)(a2 - 64) = v150;
              uint64_t v121 = v108 - v8 + 104;
              if (v121 >= 105)
              {
                unint64_t v122 = (v121 / 0x68uLL - 2) >> 1;
                unint64_t v123 = v8 + 104 * v122;
                double v124 = *(double *)v123;
                double v125 = *(double *)v108;
                if (*(double *)v123 > *(double *)v108)
                {
                  __int128 v167 = *v116;
                  __int128 v179 = *(_OWORD *)(v108 + 24);
                  *(_OWORD *)&v215[9] = *(_OWORD *)(v108 + 81);
                  __int128 v203 = *(_OWORD *)(v108 + 56);
                  *(_OWORD *)__int128 v215 = *(_OWORD *)(v108 + 72);
                  __int128 v191 = *(_OWORD *)(v108 + 40);
                  do
                  {
                    unint64_t v126 = v108;
                    unint64_t v108 = v123;
                    *(double *)unint64_t v126 = v124;
                    __int128 v127 = *(_OWORD *)(v123 + 8);
                    *(_OWORD *)(v126 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = *(_OWORD *)(v123 + 24);
                    *(_OWORD *)(v126 + _Block_object_dispose((const void *)(v30 - 184), 8) = v127;
                    __int128 v128 = *(_OWORD *)(v123 + 40);
                    __int128 v129 = *(_OWORD *)(v123 + 56);
                    __int128 v130 = *(_OWORD *)(v123 + 72);
                    *(_OWORD *)(v126 + 81) = *(_OWORD *)(v123 + 81);
                    *(_OWORD *)(v126 + sub_10000AE14(v1 - 72) = v130;
                    *(_OWORD *)(v126 + 56) = v129;
                    *(_OWORD *)(v126 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v128;
                    if (!v122) {
                      break;
                    }
                    unint64_t v122 = (v122 - 1) >> 1;
                    unint64_t v123 = v8 + 104 * v122;
                    double v124 = *(double *)v123;
                  }

                  while (*(double *)v123 > v125);
                  int64_t v116 = (__int128 *)(v108 + 8);
                  *(double *)unint64_t v108 = v125;
                  *(_OWORD *)(v108 + _Block_object_dispose((const void *)(v30 - 184), 8) = v167;
                  *(_OWORD *)(v108 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v179;
                  __int128 v131 = v191;
                  __int128 v132 = v203;
                  __int128 v133 = *(_OWORD *)v215;
                  __int128 v134 = *(_OWORD *)&v215[9];
LABEL_110:
                  *(__int128 *)((char *)v116 + 73) = v134;
                  void v116[3] = v132;
                  v116[4] = v133;
                  v116[2] = v131;
                }
              }

              a2 -= 104LL;
              BOOL v74 = v105-- <= 2;
              if (v74) {
                return;
              }
              continue;
            }

            break;
          }

          *(double *)unint64_t v108 = v107;
          __int128 *v116 = v144;
          *(_OWORD *)(v108 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v147;
          __int128 v131 = v150;
          __int128 v132 = v153;
          __int128 v133 = *(_OWORD *)v156;
          __int128 v134 = *(_OWORD *)&v156[9];
          goto LABEL_110;
        }

        unint64_t v11 = (unint64_t)v10 >> 1;
        uint64_t v12 = v8 + 104 * ((unint64_t)v10 >> 1);
        if ((unint64_t)v9 < 0x3401)
        {
          sub_1003F8D68(v12, a1, a2 - 104);
        }

        else
        {
          sub_1003F8D68(a1, v12, a2 - 104);
          sub_1003F8D68(a1 + 104, 104 * v11 + a1 - 104, a2 - 208);
          sub_1003F8D68(a1 + 208, a1 + 104 + 104 * v11, a2 - 312);
          sub_1003F8D68(104 * v11 + a1 - 104, v12, a1 + 104 + 104 * v11);
          double v13 = *(double *)a1;
          *(void *)a1 = *(void *)v12;
          *(double *)uint64_t v12 = v13;
          __int128 v157 = *(_OWORD *)(a1 + 8);
          __int128 v169 = *(_OWORD *)(a1 + 24);
          *(_OWORD *)int v205 = *(_OWORD *)(a1 + 72);
          *(_OWORD *)&v205[16] = *(_OWORD *)(a1 + 88);
          __int128 v181 = *(_OWORD *)(a1 + 40);
          __int128 v193 = *(_OWORD *)(a1 + 56);
          __int128 v14 = *(_OWORD *)(v12 + 56);
          __int128 v15 = *(_OWORD *)(v12 + 72);
          __int128 v16 = *(_OWORD *)(v12 + 81);
          *(_OWORD *)(a1 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(_OWORD *)(v12 + 40);
          *(_OWORD *)(a1 + 81) = v16;
          *(_OWORD *)(a1 + sub_10000AE14(v1 - 72) = v15;
          *(_OWORD *)(a1 + 56) = v14;
          __int128 v17 = *(_OWORD *)(v12 + 8);
          *(_OWORD *)(a1 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = *(_OWORD *)(v12 + 24);
          *(_OWORD *)(a1 + _Block_object_dispose((const void *)(v30 - 184), 8) = v17;
          *(_OWORD *)(v12 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v169;
          *(_OWORD *)(v12 + _Block_object_dispose((const void *)(v30 - 184), 8) = v157;
          *(_OWORD *)(v12 + 81) = *(_OWORD *)&v205[9];
          *(_OWORD *)(v12 + sub_10000AE14(v1 - 72) = *(_OWORD *)v205;
          *(_OWORD *)(v12 + 56) = v193;
          *(_OWORD *)(v12 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v181;
        }

        --a3;
        double v18 = *(double *)a1;
        if ((a4 & 1) == 0 && *(double *)(a1 - 104) <= v18)
        {
          __int128 v143 = *(_OWORD *)(a1 + 8);
          __int128 v146 = *(_OWORD *)(a1 + 24);
          *(_OWORD *)&v155[9] = *(_OWORD *)(a1 + 81);
          __int128 v152 = *(_OWORD *)(a1 + 56);
          *(_OWORD *)double v155 = *(_OWORD *)(a1 + 72);
          __int128 v149 = *(_OWORD *)(a1 + 40);
          if (v18 <= *(double *)(a2 - 104))
          {
            unint64_t v39 = a1 + 104;
            do
            {
              unint64_t v8 = v39;
              if (v39 >= a2) {
                break;
              }
              v39 += 104LL;
            }

            while (v18 <= *(double *)v8);
          }

          else
          {
            unint64_t v8 = a1;
            do
            {
              double v38 = *(double *)(v8 + 104);
              v8 += 104LL;
            }

            while (v18 <= v38);
          }

          unint64_t v40 = a2;
          if (v8 < a2)
          {
            unint64_t v40 = a2;
            do
            {
              double v41 = *(double *)(v40 - 104);
              v40 -= 104LL;
            }

            while (v18 > v41);
          }

          if (v8 < v40)
          {
            double v42 = *(double *)v8;
            double v43 = *(double *)v40;
            do
            {
              *(double *)unint64_t v8 = v43;
              *(double *)unint64_t v40 = v42;
              __int128 v159 = *(_OWORD *)(v8 + 8);
              __int128 v171 = *(_OWORD *)(v8 + 24);
              *(_OWORD *)__int128 v207 = *(_OWORD *)(v8 + 72);
              *(_OWORD *)&v207[16] = *(_OWORD *)(v8 + 88);
              __int128 v183 = *(_OWORD *)(v8 + 40);
              __int128 v195 = *(_OWORD *)(v8 + 56);
              __int128 v44 = *(_OWORD *)(v40 + 56);
              __int128 v45 = *(_OWORD *)(v40 + 72);
              __int128 v46 = *(_OWORD *)(v40 + 81);
              *(_OWORD *)(v8 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(_OWORD *)(v40 + 40);
              *(_OWORD *)(v8 + 81) = v46;
              *(_OWORD *)(v8 + sub_10000AE14(v1 - 72) = v45;
              *(_OWORD *)(v8 + 56) = v44;
              __int128 v47 = *(_OWORD *)(v40 + 8);
              *(_OWORD *)(v8 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = *(_OWORD *)(v40 + 24);
              *(_OWORD *)(v8 + _Block_object_dispose((const void *)(v30 - 184), 8) = v47;
              *(_OWORD *)(v40 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v171;
              *(_OWORD *)(v40 + _Block_object_dispose((const void *)(v30 - 184), 8) = v159;
              *(_OWORD *)(v40 + 81) = *(_OWORD *)&v207[9];
              *(_OWORD *)(v40 + sub_10000AE14(v1 - 72) = *(_OWORD *)v207;
              *(_OWORD *)(v40 + 56) = v195;
              *(_OWORD *)(v40 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v183;
              do
              {
                double v48 = *(double *)(v8 + 104);
                v8 += 104LL;
                double v42 = v48;
              }

              while (v18 <= v48);
              do
              {
                double v49 = *(double *)(v40 - 104);
                v40 -= 104LL;
                double v43 = v49;
              }

              while (v18 > v49);
            }

            while (v8 < v40);
          }

          if (v8 - 104 != a1)
          {
            *(void *)a1 = *(void *)(v8 - 104);
            __int128 v50 = *(_OWORD *)(v8 - 80);
            *(_OWORD *)(a1 + _Block_object_dispose((const void *)(v30 - 184), 8) = *(_OWORD *)(v8 - 96);
            *(_OWORD *)(a1 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v50;
            __int128 v51 = *(_OWORD *)(v8 - 64);
            __int128 v52 = *(_OWORD *)(v8 - 48);
            __int128 v53 = *(_OWORD *)(v8 - 32);
            *(_OWORD *)(a1 + 81) = *(_OWORD *)(v8 - 23);
            *(_OWORD *)(a1 + 56) = v52;
            *(_OWORD *)(a1 + sub_10000AE14(v1 - 72) = v53;
            *(_OWORD *)(a1 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v51;
          }

          a4 = 0;
          *(double *)(v8 - 104) = v18;
          *(_OWORD *)(v8 - 96) = v143;
          *(_OWORD *)(v8 - 8sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v146;
          *(_OWORD *)(v8 - 23) = *(_OWORD *)&v155[9];
          *(_OWORD *)(v8 - 4_Block_object_dispose((const void *)(v30 - 184), 8) = v152;
          *(_OWORD *)(v8 - 32) = *(_OWORD *)v155;
          *(_OWORD *)(v8 - 64) = v149;
          continue;
        }

        uint64_t v19 = 0LL;
        __int128 v142 = *(_OWORD *)(a1 + 8);
        __int128 v145 = *(_OWORD *)(a1 + 24);
        *(_OWORD *)&v154[9] = *(_OWORD *)(a1 + 81);
        __int128 v151 = *(_OWORD *)(a1 + 56);
        *(_OWORD *)int v154 = *(_OWORD *)(a1 + 72);
        __int128 v148 = *(_OWORD *)(a1 + 40);
        do
        {
          double v20 = *(double *)(a1 + v19 + 104);
          v19 += 104LL;
        }

        while (v20 > v18);
        unint64_t v21 = a1 + v19;
        double v22 = (double *)a2;
        if (v19 == 104)
        {
          double v22 = (double *)a2;
          do
          {
            double v24 = *(v22 - 13);
            v22 -= 13;
          }

          while (v24 <= v18);
        }

        else
        {
          do
          {
            double v23 = *(v22 - 13);
            v22 -= 13;
          }

          while (v23 <= v18);
        }

        if (v21 >= (unint64_t)v22)
        {
          unint64_t v8 = a1 + v19;
        }

        else
        {
          double v25 = *v22;
          unint64_t v8 = a1 + v19;
          uint64_t v26 = v22;
          do
          {
            *(double *)unint64_t v8 = v25;
            *uint64_t v26 = v20;
            __int128 v158 = *(_OWORD *)(v8 + 8);
            __int128 v170 = *(_OWORD *)(v8 + 24);
            *(_OWORD *)double v206 = *(_OWORD *)(v8 + 72);
            *(_OWORD *)&v206[16] = *(_OWORD *)(v8 + 88);
            __int128 v182 = *(_OWORD *)(v8 + 40);
            __int128 v194 = *(_OWORD *)(v8 + 56);
            __int128 v27 = *(_OWORD *)(v26 + 7);
            __int128 v28 = *(_OWORD *)(v26 + 9);
            __int128 v29 = *(_OWORD *)((char *)v26 + 81);
            *(_OWORD *)(v8 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(_OWORD *)(v26 + 5);
            *(_OWORD *)(v8 + 81) = v29;
            *(_OWORD *)(v8 + sub_10000AE14(v1 - 72) = v28;
            *(_OWORD *)(v8 + 56) = v27;
            __int128 v30 = *(_OWORD *)(v26 + 1);
            *(_OWORD *)(v8 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = *(_OWORD *)(v26 + 3);
            *(_OWORD *)(v8 + _Block_object_dispose((const void *)(v30 - 184), 8) = v30;
            *(_OWORD *)(v26 + 3) = v170;
            *(_OWORD *)(v26 + 1) = v158;
            *(_OWORD *)((char *)v26 + 81) = *(_OWORD *)&v206[9];
            *(_OWORD *)(v26 + 9) = *(_OWORD *)v206;
            *(_OWORD *)(v26 + 7) = v194;
            *(_OWORD *)(v26 + 5) = v182;
            do
            {
              double v31 = *(double *)(v8 + 104);
              v8 += 104LL;
              double v20 = v31;
            }

            while (v31 > v18);
            do
            {
              double v32 = *(v26 - 13);
              v26 -= 13;
              double v25 = v32;
            }

            while (v32 <= v18);
          }

          while (v8 < (unint64_t)v26);
        }

        if (v8 - 104 != a1)
        {
          *(void *)a1 = *(void *)(v8 - 104);
          __int128 v33 = *(_OWORD *)(v8 - 80);
          *(_OWORD *)(a1 + _Block_object_dispose((const void *)(v30 - 184), 8) = *(_OWORD *)(v8 - 96);
          *(_OWORD *)(a1 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v33;
          __int128 v34 = *(_OWORD *)(v8 - 64);
          __int128 v35 = *(_OWORD *)(v8 - 48);
          __int128 v36 = *(_OWORD *)(v8 - 32);
          *(_OWORD *)(a1 + 81) = *(_OWORD *)(v8 - 23);
          *(_OWORD *)(a1 + 56) = v35;
          *(_OWORD *)(a1 + sub_10000AE14(v1 - 72) = v36;
          *(_OWORD *)(a1 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v34;
        }

        *(double *)(v8 - 104) = v18;
        *(_OWORD *)(v8 - 96) = v142;
        *(_OWORD *)(v8 - 8sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v145;
        *(_OWORD *)(v8 - 23) = *(_OWORD *)&v154[9];
        *(_OWORD *)(v8 - 4_Block_object_dispose((const void *)(v30 - 184), 8) = v151;
        *(_OWORD *)(v8 - 32) = *(_OWORD *)v154;
        *(_OWORD *)(v8 - 64) = v148;
        if (v21 < (unint64_t)v22)
        {
LABEL_31:
          sub_1003F7FCC(a1, v8 - 104, a3, a4 & 1);
          a4 = 0;
          continue;
        }

        BOOL v37 = sub_1003F8FAC(a1, v8 - 104);
        if (!sub_1003F8FAC(v8, a2))
        {
          if (v37) {
            continue;
          }
          goto LABEL_31;
        }

        a2 = v8 - 104;
        if (!v37) {
          goto LABEL_1;
        }
        return;
    }
  }

__n128 sub_1003F8D68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  result.n128_u64[0] = *(void *)a2;
  double v4 = *(double *)a1;
  double v5 = *(double *)a3;
  if (*(double *)a2 <= *(double *)a1)
  {
    if (v5 > result.n128_f64[0])
    {
      *(double *)a2 = v5;
      *(void *)a3 = result.n128_u64[0];
      __int128 v33 = *(_OWORD *)(a2 + 40);
      __int128 v37 = *(_OWORD *)(a2 + 56);
      *(_OWORD *)double v41 = *(_OWORD *)(a2 + 72);
      *(_OWORD *)&v41[16] = *(_OWORD *)(a2 + 88);
      __int128 v25 = *(_OWORD *)(a2 + 8);
      __int128 v29 = *(_OWORD *)(a2 + 24);
      __int128 v7 = *(_OWORD *)(a3 + 24);
      *(_OWORD *)(a2 + _Block_object_dispose((const void *)(v30 - 184), 8) = *(_OWORD *)(a3 + 8);
      *(_OWORD *)(a2 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v7;
      __int128 v8 = *(_OWORD *)(a3 + 56);
      __int128 v9 = *(_OWORD *)(a3 + 72);
      __int128 v10 = *(_OWORD *)(a3 + 81);
      *(_OWORD *)(a2 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(_OWORD *)(a3 + 40);
      *(_OWORD *)(a2 + 81) = v10;
      *(_OWORD *)(a2 + sub_10000AE14(v1 - 72) = v9;
      *(_OWORD *)(a2 + 56) = v8;
      *(_OWORD *)(a3 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v33;
      *(_OWORD *)(a3 + 56) = v37;
      *(_OWORD *)(a3 + sub_10000AE14(v1 - 72) = *(_OWORD *)v41;
      *(_OWORD *)(a3 + 81) = *(_OWORD *)&v41[9];
      result.n128_u64[1] = *((void *)&v25 + 1);
      *(_OWORD *)(a3 + _Block_object_dispose((const void *)(v30 - 184), 8) = v25;
      *(_OWORD *)(a3 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v29;
      result.n128_u64[0] = *(void *)a2;
      double v11 = *(double *)a1;
      if (*(double *)a2 > *(double *)a1)
      {
        *(void *)a1 = result.n128_u64[0];
        *(double *)a2 = v11;
        __int128 v34 = *(_OWORD *)(a1 + 40);
        __int128 v38 = *(_OWORD *)(a1 + 56);
        *(_OWORD *)double v42 = *(_OWORD *)(a1 + 72);
        *(_OWORD *)&v42[16] = *(_OWORD *)(a1 + 88);
        __n128 v26 = *(__n128 *)(a1 + 8);
        __int128 v30 = *(_OWORD *)(a1 + 24);
        __int128 v12 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + _Block_object_dispose((const void *)(v30 - 184), 8) = *(_OWORD *)(a2 + 8);
        *(_OWORD *)(a1 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v12;
        __int128 v14 = *(_OWORD *)(a2 + 56);
        __int128 v13 = *(_OWORD *)(a2 + 72);
        __int128 v15 = *(_OWORD *)(a2 + 81);
        *(_OWORD *)(a1 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(_OWORD *)(a2 + 40);
        *(_OWORD *)(a1 + 81) = v15;
        *(_OWORD *)(a1 + sub_10000AE14(v1 - 72) = v13;
        *(_OWORD *)(a1 + 56) = v14;
        *(_OWORD *)(a2 + sub_10000AE14(v1 - 72) = *(_OWORD *)v42;
        *(_OWORD *)(a2 + 81) = *(_OWORD *)&v42[9];
        *(_OWORD *)(a2 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v34;
        *(_OWORD *)(a2 + 56) = v38;
        __n128 result = v26;
        *(__n128 *)(a2 + _Block_object_dispose((const void *)(v30 - 184), 8) = v26;
        *(_OWORD *)(a2 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v30;
      }
    }
  }

  else
  {
    double v6 = (_OWORD *)(a1 + 8);
    if (v5 <= result.n128_f64[0])
    {
      *(void *)a1 = result.n128_u64[0];
      *(double *)a2 = v4;
      __int128 v35 = *(_OWORD *)(a1 + 40);
      __int128 v39 = *(_OWORD *)(a1 + 56);
      *(_OWORD *)double v43 = *(_OWORD *)(a1 + 72);
      *(_OWORD *)&v43[16] = *(_OWORD *)(a1 + 88);
      __n128 v27 = *(__n128 *)v6;
      __int128 v31 = *(_OWORD *)(a1 + 24);
      __int128 v16 = *(_OWORD *)(a2 + 24);
      *double v6 = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v16;
      __int128 v17 = *(_OWORD *)(a2 + 56);
      __int128 v18 = *(_OWORD *)(a2 + 72);
      __int128 v19 = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 81) = *(_OWORD *)(a2 + 81);
      *(_OWORD *)(a1 + 56) = v17;
      *(_OWORD *)(a1 + sub_10000AE14(v1 - 72) = v18;
      *(_OWORD *)(a1 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v19;
      *(_OWORD *)(a2 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v35;
      *(_OWORD *)(a2 + 56) = v39;
      *(_OWORD *)(a2 + sub_10000AE14(v1 - 72) = *(_OWORD *)v43;
      *(_OWORD *)(a2 + 81) = *(_OWORD *)&v43[9];
      result.n128_u64[1] = v27.n128_u64[1];
      *(__n128 *)(a2 + _Block_object_dispose((const void *)(v30 - 184), 8) = v27;
      *(_OWORD *)(a2 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v31;
      result.n128_u64[0] = *(void *)a3;
      unint64_t v20 = *(void *)a2;
      double v6 = (_OWORD *)(a2 + 8);
      *(void *)a2 = result.n128_u64[0];
      *(void *)a3 = v20;
    }

    else
    {
      *(double *)a1 = v5;
      *(double *)a3 = v4;
    }

    __int128 v36 = v6[2];
    __int128 v40 = v6[3];
    *(_OWORD *)__int128 v44 = v6[4];
    *(_OWORD *)&v44[16] = v6[5];
    __n128 v28 = *(__n128 *)v6;
    __int128 v32 = v6[1];
    __int128 v21 = *(_OWORD *)(a3 + 24);
    *double v6 = *(_OWORD *)(a3 + 8);
    v6[1] = v21;
    __int128 v22 = *(_OWORD *)(a3 + 56);
    __int128 v23 = *(_OWORD *)(a3 + 72);
    __int128 v24 = *(_OWORD *)(a3 + 40);
    *(_OWORD *)((char *)v6 + 73) = *(_OWORD *)(a3 + 81);
    v6[3] = v22;
    _DWORD v6[4] = v23;
    _DWORD v6[2] = v24;
    *(_OWORD *)(a3 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v36;
    *(_OWORD *)(a3 + 56) = v40;
    *(_OWORD *)(a3 + sub_10000AE14(v1 - 72) = *(_OWORD *)v44;
    *(_OWORD *)(a3 + 81) = *(_OWORD *)&v44[9];
    __n128 result = v28;
    *(__n128 *)(a3 + _Block_object_dispose((const void *)(v30 - 184), 8) = v28;
    *(_OWORD *)(a3 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v32;
  }

  return result;
}

BOOL sub_1003F8FAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = 0x4EC4EC4EC4EC4EC5LL * ((a2 - a1) >> 3);
  BOOL result = 1LL;
  switch(v4)
  {
    case 0LL:
    case 1LL:
      return result;
    case 2LL:
      double v6 = *(double *)(a2 - 104);
      double v7 = *(double *)a1;
      if (v6 > *(double *)a1)
      {
        *(double *)a1 = v6;
        *(double *)(a2 - 104) = v7;
        __int128 v55 = *(_OWORD *)(a1 + 40);
        __int128 v61 = *(_OWORD *)(a1 + 56);
        *(_OWORD *)double v67 = *(_OWORD *)(a1 + 72);
        *(_OWORD *)&v67[16] = *(_OWORD *)(a1 + 88);
        __int128 v43 = *(_OWORD *)(a1 + 8);
        __int128 v49 = *(_OWORD *)(a1 + 24);
        __int128 v8 = *(_OWORD *)(a2 - 80);
        *(_OWORD *)(a1 + _Block_object_dispose((const void *)(v30 - 184), 8) = *(_OWORD *)(a2 - 96);
        *(_OWORD *)(a1 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v8;
        __int128 v10 = *(_OWORD *)(a2 - 48);
        __int128 v9 = *(_OWORD *)(a2 - 32);
        __int128 v11 = *(_OWORD *)(a2 - 23);
        *(_OWORD *)(a1 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(_OWORD *)(a2 - 64);
        *(_OWORD *)(a1 + 81) = v11;
        *(_OWORD *)(a1 + sub_10000AE14(v1 - 72) = v9;
        *(_OWORD *)(a1 + 56) = v10;
        *(_OWORD *)(a2 - 64) = v55;
        *(_OWORD *)(a2 - 4_Block_object_dispose((const void *)(v30 - 184), 8) = v61;
        *(_OWORD *)(a2 - 32) = *(_OWORD *)v67;
        *(_OWORD *)(a2 - 23) = *(_OWORD *)&v67[9];
        *(_OWORD *)(a2 - 96) = v43;
        *(_OWORD *)(a2 - 8sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v49;
      }

      return result;
    case 3LL:
      sub_1003F8D68(a1, a1 + 104, a2 - 104);
      return 1LL;
    case 4LL:
      sub_1003F9408(a1, a1 + 104, a1 + 208, a2 - 104);
      return 1LL;
    case 5LL:
      sub_1003F9408(a1, a1 + 104, a1 + 208, a1 + 312);
      double v26 = *(double *)(a2 - 104);
      double v27 = *(double *)(a1 + 312);
      if (v26 <= v27) {
        return 1LL;
      }
      *(double *)(a1 + 312) = v26;
      *(double *)(a2 - 104) = v27;
      __int128 v57 = *(_OWORD *)(a1 + 352);
      __int128 v63 = *(_OWORD *)(a1 + 368);
      *(_OWORD *)__int128 v69 = *(_OWORD *)(a1 + 384);
      *(_OWORD *)&v69[16] = *(_OWORD *)(a1 + 400);
      __int128 v45 = *(_OWORD *)(a1 + 320);
      __int128 v51 = *(_OWORD *)(a1 + 336);
      __int128 v28 = *(_OWORD *)(a2 - 80);
      *(_OWORD *)(a1 + 32sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(_OWORD *)(a2 - 96);
      *(_OWORD *)(a1 + 336) = v28;
      __int128 v30 = *(_OWORD *)(a2 - 48);
      __int128 v29 = *(_OWORD *)(a2 - 32);
      __int128 v31 = *(_OWORD *)(a2 - 64);
      *(_OWORD *)(a1 + 393) = *(_OWORD *)(a2 - 23);
      *(_OWORD *)(a1 + 36_Block_object_dispose((const void *)(v30 - 184), 8) = v30;
      *(_OWORD *)(a1 + 384) = v29;
      *(_OWORD *)(a1 + 352) = v31;
      *(_OWORD *)(a2 - 64) = v57;
      *(_OWORD *)(a2 - 4_Block_object_dispose((const void *)(v30 - 184), 8) = v63;
      *(_OWORD *)(a2 - 32) = *(_OWORD *)v69;
      *(_OWORD *)(a2 - 23) = *(_OWORD *)&v69[9];
      *(_OWORD *)(a2 - 96) = v45;
      *(_OWORD *)(a2 - 8sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v51;
      double v32 = *(double *)(a1 + 312);
      double v33 = *(double *)(a1 + 208);
      if (v32 <= v33) {
        return 1LL;
      }
      *(double *)(a1 + 20_Block_object_dispose((const void *)(v30 - 184), 8) = v32;
      *(double *)(a1 + 312) = v33;
      __int128 v58 = *(_OWORD *)(a1 + 248);
      __int128 v64 = *(_OWORD *)(a1 + 264);
      *(_OWORD *)double v70 = *(_OWORD *)(a1 + 280);
      *(_OWORD *)&v70[16] = *(_OWORD *)(a1 + 296);
      __int128 v46 = *(_OWORD *)(a1 + 216);
      __int128 v52 = *(_OWORD *)(a1 + 232);
      __int128 v34 = *(_OWORD *)(a1 + 368);
      *(_OWORD *)(a1 + 24_Block_object_dispose((const void *)(v30 - 184), 8) = *(_OWORD *)(a1 + 352);
      *(_OWORD *)(a1 + 264) = v34;
      *(_OWORD *)(a1 + 28sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(_OWORD *)(a1 + 384);
      *(_OWORD *)(a1 + 289) = *(_OWORD *)(a1 + 393);
      __int128 v35 = *(_OWORD *)(a1 + 336);
      *(_OWORD *)(a1 + 216) = *(_OWORD *)(a1 + 320);
      *(_OWORD *)(a1 + 232) = v35;
      *(_OWORD *)(a1 + 32sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v46;
      *(_OWORD *)(a1 + 336) = v52;
      *(_OWORD *)(a1 + 393) = *(_OWORD *)&v70[9];
      *(_OWORD *)(a1 + 36_Block_object_dispose((const void *)(v30 - 184), 8) = v64;
      *(_OWORD *)(a1 + 384) = *(_OWORD *)v70;
      *(_OWORD *)(a1 + 352) = v58;
      double v36 = *(double *)(a1 + 104);
      if (v32 <= v36) {
        return 1LL;
      }
      *(double *)(a1 + 20_Block_object_dispose((const void *)(v30 - 184), 8) = v36;
      __int128 v59 = *(_OWORD *)(a1 + 144);
      __int128 v65 = *(_OWORD *)(a1 + 160);
      *(_OWORD *)__int128 v71 = *(_OWORD *)(a1 + 176);
      *(_OWORD *)&v71[16] = *(_OWORD *)(a1 + 192);
      __int128 v47 = *(_OWORD *)(a1 + 112);
      __int128 v53 = *(_OWORD *)(a1 + 128);
      __int128 v37 = *(_OWORD *)(a1 + 264);
      *(_OWORD *)(a1 + 1memset(v19, 0, 44) = *(_OWORD *)(a1 + 248);
      *(_OWORD *)(a1 + 16sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v37;
      *(_OWORD *)(a1 + 176) = *(_OWORD *)(a1 + 280);
      *(_OWORD *)(a1 + 185) = *(_OWORD *)(a1 + 289);
      __int128 v38 = *(_OWORD *)(a1 + 232);
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a1 + 216);
      *(_OWORD *)(a1 + 12_Block_object_dispose((const void *)(v30 - 184), 8) = v38;
      *(_OWORD *)(a1 + 216) = v47;
      *(_OWORD *)(a1 + 232) = v53;
      *(_OWORD *)(a1 + 289) = *(_OWORD *)&v71[9];
      *(_OWORD *)(a1 + 264) = v65;
      *(_OWORD *)(a1 + 28sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(_OWORD *)v71;
      *(_OWORD *)(a1 + 24_Block_object_dispose((const void *)(v30 - 184), 8) = v59;
      double v39 = *(double *)a1;
      BOOL v40 = v32 <= *(double *)a1;
      *(double *)(a1 + 104) = v32;
      if (v40) {
        return 1LL;
      }
      *(double *)a1 = v32;
      *(double *)(a1 + 104) = v39;
      __int128 v60 = *(_OWORD *)(a1 + 40);
      __int128 v66 = *(_OWORD *)(a1 + 56);
      *(_OWORD *)__int128 v72 = *(_OWORD *)(a1 + 72);
      *(_OWORD *)&v72[16] = *(_OWORD *)(a1 + 88);
      __int128 v48 = *(_OWORD *)(a1 + 8);
      __int128 v54 = *(_OWORD *)(a1 + 24);
      __int128 v41 = *(_OWORD *)(a1 + 160);
      *(_OWORD *)(a1 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(_OWORD *)(a1 + 144);
      *(_OWORD *)(a1 + 56) = v41;
      *(_OWORD *)(a1 + sub_10000AE14(v1 - 72) = *(_OWORD *)(a1 + 176);
      *(_OWORD *)(a1 + 81) = *(_OWORD *)(a1 + 185);
      __int128 v42 = *(_OWORD *)(a1 + 128);
      *(_OWORD *)(a1 + _Block_object_dispose((const void *)(v30 - 184), 8) = *(_OWORD *)(a1 + 112);
      *(_OWORD *)(a1 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v42;
      *(_OWORD *)(a1 + 112) = v48;
      *(_OWORD *)(a1 + 12_Block_object_dispose((const void *)(v30 - 184), 8) = v54;
      *(_OWORD *)(a1 + 185) = *(_OWORD *)&v72[9];
      BOOL result = 1LL;
      *(_OWORD *)(a1 + 16sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v66;
      *(_OWORD *)(a1 + 176) = *(_OWORD *)v72;
      *(_OWORD *)(a1 + 1memset(v19, 0, 44) = v60;
      return result;
    default:
      __int128 v12 = (double *)(a1 + 208);
      sub_1003F8D68(a1, a1 + 104, a1 + 208);
      uint64_t v13 = a1 + 312;
      if (a1 + 312 == a2) {
        return 1LL;
      }
      uint64_t v14 = 0LL;
      int v15 = 0;
      break;
  }

  while (1)
  {
    double v16 = *(double *)v13;
    if (*(double *)v13 > *v12)
    {
      __int128 v44 = *(_OWORD *)(v13 + 8);
      __int128 v50 = *(_OWORD *)(v13 + 24);
      *(_OWORD *)&v68[9] = *(_OWORD *)(v13 + 81);
      __int128 v62 = *(_OWORD *)(v13 + 56);
      *(_OWORD *)__int128 v68 = *(_OWORD *)(v13 + 72);
      __int128 v56 = *(_OWORD *)(v13 + 40);
      uint64_t v17 = v14;
      double v18 = *v12;
      while (1)
      {
        uint64_t v19 = a1 + v17;
        *(double *)(v19 + 312) = v18;
        unint64_t v20 = (_OWORD *)(a1 + v17 + 216);
        __int128 v21 = *(_OWORD *)(a1 + v17 + 248);
        __int128 v22 = *(_OWORD *)(a1 + v17 + 232);
        *(_OWORD *)(v19 + 32sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *v20;
        *(_OWORD *)(v19 + 336) = v22;
        __int128 v23 = *(_OWORD *)(a1 + v17 + 264);
        __int128 v24 = *(_OWORD *)(a1 + v17 + 280);
        *(_OWORD *)(v19 + 352) = v21;
        *(_OWORD *)(v19 + 36_Block_object_dispose((const void *)(v30 - 184), 8) = v23;
        *(_OWORD *)(v19 + 384) = v24;
        *(_OWORD *)(a1 + v17 + 393) = *(_OWORD *)(a1 + v17 + 289);
        if (v17 == -208) {
          break;
        }
        double v18 = *(double *)(v19 + 104);
        v17 -= 104LL;
        if (v16 <= v18)
        {
          __int128 v25 = (double *)(a1 + v17 + 312);
          goto LABEL_13;
        }
      }

      __int128 v25 = (double *)a1;
LABEL_13:
      *__int128 v25 = v16;
      *(_OWORD *)(v19 + 24_Block_object_dispose((const void *)(v30 - 184), 8) = v56;
      *(_OWORD *)(v19 + 216) = v44;
      *(_OWORD *)(v19 + 232) = v50;
      v20[3] = v62;
      v20[4] = *(_OWORD *)v68;
      ++v15;
      *(_OWORD *)((char *)v20 + 73) = *(_OWORD *)&v68[9];
      if (v15 == 8) {
        return v13 + 104 == a2;
      }
    }

    __int128 v12 = (double *)v13;
    v14 += 104LL;
    v13 += 104LL;
    if (v13 == a2) {
      return 1LL;
    }
  }

__n128 sub_1003F9408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  result.n128_u64[0] = *(void *)a4;
  double v9 = *(double *)a3;
  if (*(double *)a4 > *(double *)a3)
  {
    *(void *)a3 = result.n128_u64[0];
    *(double *)a4 = v9;
    __int128 v30 = *(_OWORD *)(a3 + 40);
    __int128 v33 = *(_OWORD *)(a3 + 56);
    *(_OWORD *)double v36 = *(_OWORD *)(a3 + 72);
    *(_OWORD *)&char v36[16] = *(_OWORD *)(a3 + 88);
    __int128 v24 = *(_OWORD *)(a3 + 8);
    __int128 v27 = *(_OWORD *)(a3 + 24);
    __int128 v10 = *(_OWORD *)(a4 + 24);
    *(_OWORD *)(a3 + _Block_object_dispose((const void *)(v30 - 184), 8) = *(_OWORD *)(a4 + 8);
    *(_OWORD *)(a3 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v10;
    __int128 v11 = *(_OWORD *)(a4 + 56);
    __int128 v12 = *(_OWORD *)(a4 + 72);
    __int128 v13 = *(_OWORD *)(a4 + 81);
    *(_OWORD *)(a3 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(_OWORD *)(a4 + 40);
    *(_OWORD *)(a3 + 81) = v13;
    *(_OWORD *)(a3 + sub_10000AE14(v1 - 72) = v12;
    *(_OWORD *)(a3 + 56) = v11;
    *(_OWORD *)(a4 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v30;
    *(_OWORD *)(a4 + 56) = v33;
    *(_OWORD *)(a4 + sub_10000AE14(v1 - 72) = *(_OWORD *)v36;
    *(_OWORD *)(a4 + 81) = *(_OWORD *)&v36[9];
    result.n128_u64[1] = *((void *)&v24 + 1);
    *(_OWORD *)(a4 + _Block_object_dispose((const void *)(v30 - 184), 8) = v24;
    *(_OWORD *)(a4 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v27;
    result.n128_u64[0] = *(void *)a3;
    double v14 = *(double *)a2;
    if (*(double *)a3 > *(double *)a2)
    {
      *(void *)a2 = result.n128_u64[0];
      *(double *)a3 = v14;
      __int128 v31 = *(_OWORD *)(a2 + 40);
      __int128 v34 = *(_OWORD *)(a2 + 56);
      *(_OWORD *)__int128 v37 = *(_OWORD *)(a2 + 72);
      *(_OWORD *)&v37[16] = *(_OWORD *)(a2 + 88);
      __int128 v25 = *(_OWORD *)(a2 + 8);
      __int128 v28 = *(_OWORD *)(a2 + 24);
      __int128 v15 = *(_OWORD *)(a3 + 24);
      *(_OWORD *)(a2 + _Block_object_dispose((const void *)(v30 - 184), 8) = *(_OWORD *)(a3 + 8);
      *(_OWORD *)(a2 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v15;
      __int128 v17 = *(_OWORD *)(a3 + 56);
      __int128 v16 = *(_OWORD *)(a3 + 72);
      __int128 v18 = *(_OWORD *)(a3 + 81);
      *(_OWORD *)(a2 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(_OWORD *)(a3 + 40);
      *(_OWORD *)(a2 + 81) = v18;
      *(_OWORD *)(a2 + sub_10000AE14(v1 - 72) = v16;
      *(_OWORD *)(a2 + 56) = v17;
      *(_OWORD *)(a3 + sub_10000AE14(v1 - 72) = *(_OWORD *)v37;
      *(_OWORD *)(a3 + 81) = *(_OWORD *)&v37[9];
      *(_OWORD *)(a3 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v31;
      *(_OWORD *)(a3 + 56) = v34;
      result.n128_u64[1] = *((void *)&v25 + 1);
      *(_OWORD *)(a3 + _Block_object_dispose((const void *)(v30 - 184), 8) = v25;
      *(_OWORD *)(a3 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v28;
      result.n128_u64[0] = *(void *)a2;
      double v19 = *(double *)a1;
      if (*(double *)a2 > *(double *)a1)
      {
        *(void *)a1 = result.n128_u64[0];
        *(double *)a2 = v19;
        __int128 v32 = *(_OWORD *)(a1 + 40);
        __int128 v35 = *(_OWORD *)(a1 + 56);
        *(_OWORD *)__int128 v38 = *(_OWORD *)(a1 + 72);
        *(_OWORD *)&v38[16] = *(_OWORD *)(a1 + 88);
        __n128 v26 = *(__n128 *)(a1 + 8);
        __int128 v29 = *(_OWORD *)(a1 + 24);
        __int128 v20 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + _Block_object_dispose((const void *)(v30 - 184), 8) = *(_OWORD *)(a2 + 8);
        *(_OWORD *)(a1 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v20;
        __int128 v22 = *(_OWORD *)(a2 + 56);
        __int128 v21 = *(_OWORD *)(a2 + 72);
        __int128 v23 = *(_OWORD *)(a2 + 81);
        *(_OWORD *)(a1 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(_OWORD *)(a2 + 40);
        *(_OWORD *)(a1 + 81) = v23;
        *(_OWORD *)(a1 + sub_10000AE14(v1 - 72) = v21;
        *(_OWORD *)(a1 + 56) = v22;
        *(_OWORD *)(a2 + sub_10000AE14(v1 - 72) = *(_OWORD *)v38;
        *(_OWORD *)(a2 + 81) = *(_OWORD *)&v38[9];
        *(_OWORD *)(a2 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v32;
        *(_OWORD *)(a2 + 56) = v35;
        __n128 result = v26;
        *(__n128 *)(a2 + _Block_object_dispose((const void *)(v30 - 184), 8) = v26;
        *(_OWORD *)(a2 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v29;
      }
    }
  }

  return result;
}

uint64_t *sub_1003F95E8(uint64_t **a1, const void **a2, uint64_t a3)
{
  double v5 = (uint64_t **)sub_1000227E8((uint64_t)a1, &v8, a2);
  __n128 result = *v5;
  if (!*v5)
  {
    sub_1003F9664((uint64_t)a1, a3, (uint64_t)&v7);
    sub_1000085FC(a1, v8, v5, v7);
    return v7;
  }

  return result;
}

_BYTE *sub_1003F9664@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  double v6 = (char *)operator new(0x40uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + _Block_object_dispose((const void *)(v30 - 184), 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  __n128 result = v6 + 32;
  if (*(char *)(a2 + 23) < 0)
  {
    __n128 result = sub_1010DD48C(result, *(void **)a2, *(void *)(a2 + 8));
  }

  else
  {
    *(_OWORD *)__n128 result = *(_OWORD *)a2;
    *((void *)v6 + 6) = *(void *)(a2 + 16);
  }

  *((_DWORD *)v6 + 14) = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_1003F96EC(_Unwind_Exception *a1)
{
  *uint64_t v1 = 0LL;
  sub_100022988(v3, v2);
  _Unwind_Resume(a1);
}

uint64_t *sub_1003F9708(uint64_t **a1, uint64_t a2)
{
  uint64_t v3 = sub_1000087E8(a1, (uint64_t *)a2);
  operator delete((void *)a2);
  return v3;
}

_OWORD *sub_1003F9748(uint64_t **a1, const void **a2, uint64_t a3)
{
  uint64_t v5 = (void **)sub_1000227E8((uint64_t)a1, &v9, a2);
  double v6 = *v5;
  if (!*v5)
  {
    double v7 = (uint64_t **)v5;
    double v6 = operator new(0x38uLL);
    _DWORD v6[2] = *(_OWORD *)a3;
    *((void *)v6 + 6) = *(void *)(a3 + 16);
    *(void *)a3 = 0LL;
    *(void *)(a3 + _Block_object_dispose((const void *)(v30 - 184), 8) = 0LL;
    *(void *)(a3 + 16) = 0LL;
    sub_1000085FC(a1, v9, v7, (uint64_t *)v6);
  }

  return v6;
}

double sub_1003F97D8@<D0>( void *a1@<X0>, void *a2@<X1>, const void **a3@<X2>, const void **a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  *(void *)&__int128 v22 = a5;
  *((void *)&v22 + 1) = a6;
  if (a1 != a2)
  {
    __int128 v11 = a3;
    if (a3 != a4)
    {
      __int128 v13 = a1;
      do
      {
        if (sub_100022920(a7, (const void **)v13 + 4, v11 + 4))
        {
          double v14 = (void *)v13[1];
          if (v14)
          {
            do
            {
              __int128 v13 = v14;
              double v14 = (void *)*v14;
            }

            while (v14);
          }

          else
          {
            do
            {
              __int128 v15 = v13;
              __int128 v13 = (void *)v13[2];
            }

            while ((void *)*v13 != v15);
          }
        }

        else
        {
          if (sub_100022920(a7, v11 + 4, (const void **)v13 + 4))
          {
            __int128 v16 = v13;
          }

          else
          {
            sub_1003F9928((uint64_t)&v22, (const void **)v13 + 4);
            __int128 v17 = (void *)v13[1];
            if (v17)
            {
              do
              {
                __int128 v16 = v17;
                __int128 v17 = (void *)*v17;
              }

              while (v17);
            }

            else
            {
              do
              {
                __int128 v16 = (void *)v13[2];
                BOOL v18 = *v16 == (void)v13;
                __int128 v13 = v16;
              }

              while (!v18);
            }
          }

          double v19 = (const void **)v11[1];
          if (v19)
          {
            do
            {
              __int128 v11 = v19;
              double v19 = (const void **)*v19;
            }

            while (v19);
          }

          else
          {
            do
            {
              __int128 v20 = v11;
              __int128 v11 = (const void **)v11[2];
            }

            while (*v11 != v20);
          }

          __int128 v13 = v16;
        }
      }

      while (v13 != a2 && v11 != a4);
    }
  }

  *(void *)a8 = a2;
  *(void *)(a8 + _Block_object_dispose((const void *)(v30 - 184), 8) = a4;
  double result = *(double *)&v22;
  *(_OWORD *)(a8 + 16) = v22;
  return result;
}

uint64_t sub_1003F9928(uint64_t a1, const void **a2)
{
  uint64_t v3 = sub_1003F9990(*(uint64_t ***)a1, *(uint64_t **)(a1 + 8), a2, (uint64_t)a2);
  *(void *)(a1 + _Block_object_dispose((const void *)(v30 - 184), 8) = v3;
  uint64_t v4 = (uint64_t *)v3[1];
  if (v4)
  {
    do
    {
      uint64_t v5 = v4;
      uint64_t v4 = (uint64_t *)*v4;
    }

    while (v4);
  }

  else
  {
    do
    {
      uint64_t v5 = (uint64_t *)v3[2];
      BOOL v6 = *v5 == (void)v3;
      uint64_t v3 = v5;
    }

    while (!v6);
  }

  *(void *)(a1 + _Block_object_dispose((const void *)(v30 - 184), 8) = v5;
  return a1;
}

uint64_t *sub_1003F9990(uint64_t **a1, uint64_t *a2, const void **a3, uint64_t a4)
{
  BOOL v6 = (uint64_t **)sub_1003F9A10(a1, a2, &v10, &v9, a3);
  double result = *v6;
  if (!*v6)
  {
    sub_100022884((uint64_t)a1, a4, (uint64_t)&v8);
    sub_1000085FC(a1, (uint64_t)v10, v6, v8);
    return v8;
  }

  return result;
}

const void **sub_1003F9A10(void *a1, uint64_t *a2, const void ***a3, uint64_t *a4, const void **a5)
{
  uint64_t v9 = (const void **)(a1 + 1);
  if (a1 + 1 == a2 || sub_100022920((uint64_t)(a1 + 2), a5, (const void **)a2 + 4))
  {
    if ((uint64_t *)*a1 == a2)
    {
      __int128 v12 = (const void **)a2;
LABEL_16:
      if (*a2)
      {
        *a3 = v12;
        return v12 + 1;
      }

      else
      {
        *a3 = (const void **)a2;
        return (const void **)a2;
      }
    }

    __int128 v11 = (const void **)*a2;
    if (*a2)
    {
      do
      {
        __int128 v12 = v11;
        __int128 v11 = (const void **)v11[1];
      }

      while (v11);
    }

    else
    {
      __int128 v16 = a2;
      do
      {
        __int128 v12 = (const void **)v16[2];
        BOOL v17 = *v12 == v16;
        __int128 v16 = (uint64_t *)v12;
      }

      while (v17);
    }

    return (const void **)sub_1000227E8((uint64_t)a1, a3, a5);
  }

  if (sub_100022920((uint64_t)(a1 + 2), (const void **)a2 + 4, a5))
  {
    a4 = a2 + 1;
    uint64_t v13 = a2[1];
    if (v13)
    {
      double v14 = (const void **)a2[1];
      do
      {
        __int128 v15 = v14;
        double v14 = (const void **)*v14;
      }

      while (v14);
    }

    else
    {
      BOOL v18 = (const void **)a2;
      do
      {
        __int128 v15 = (const void **)v18[2];
        BOOL v17 = *v15 == v18;
        BOOL v18 = v15;
      }

      while (!v17);
    }

    if (v15 != v9)
    {
      uint64_t v13 = *a4;
    }

    if (v13)
    {
      *a3 = v15;
      return v15;
    }

    else
    {
      *a3 = (const void **)a2;
    }

    return (const void **)a4;
  }

  *a3 = (const void **)a2;
  *a4 = (uint64_t)a2;
  return (const void **)a4;
}

char *sub_1003F9BA8(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  double v7 = result;
  uint64_t v8 = *((void *)result + 2);
  uint64_t v9 = *(char **)result;
  if (0xAAAAAAAAAAAAAAABLL * ((v8 - *(void *)result) >> 5) < a4)
  {
    if (v9)
    {
      *((void *)result + 1) = v9;
      operator delete(v9);
      uint64_t v8 = 0LL;
      *double v7 = 0LL;
      v7[1] = 0LL;
      _DWORD v7[2] = 0LL;
    }

    if (a4 > 0x2AAAAAAAAAAAAAALL) {
      sub_100007008();
    }
    unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * (v8 >> 5);
    uint64_t v11 = 2 * v10;
    if (2 * v10 <= a4) {
      uint64_t v11 = a4;
    }
    if (v10 >= 0x155555555555555LL) {
      unint64_t v12 = 0x2AAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v12 = v11;
    }
    double result = sub_1003F9CE8(v7, v12);
    double v14 = (char *)v7[1];
    uint64_t v13 = (void **)(v7 + 1);
    uint64_t v9 = v14;
LABEL_16:
    uint64_t v17 = a3 - (void)__src;
    if (v17)
    {
      size_t v18 = v17 - 7;
      double v19 = v9;
      __int128 v20 = __src;
      goto LABEL_18;
    }

    goto LABEL_19;
  }

  uint64_t v13 = (void **)(result + 8);
  __int128 v15 = (_BYTE *)*((void *)result + 1);
  if (0xAAAAAAAAAAAAAAABLL * ((v15 - v9) >> 5) >= a4) {
    goto LABEL_16;
  }
  __int128 v16 = &__src[32 * ((v15 - v9) >> 5)];
  if (v15 != v9)
  {
    double result = (char *)memmove(*(void **)result, __src, v15 - v9 - 7);
    uint64_t v9 = (char *)*v13;
  }

  uint64_t v17 = a3 - (void)v16;
  if (v17)
  {
    size_t v18 = v17 - 7;
    double v19 = v9;
    __int128 v20 = v16;
LABEL_18:
    double result = (char *)memmove(v19, v20, v18);
  }

char *sub_1003F9CE8(void *a1, unint64_t a2)
{
  if (a2 >= 0x2AAAAAAAAAAAAABLL) {
    sub_100007008();
  }
  double result = (char *)sub_1003F6AEC((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[96 * v4];
  return result;
}

void sub_1003F9D38(uint64_t a1, _OWORD *a2, uint64_t a3, char a4)
{
LABEL_1:
  uint64_t v8 = a2 - 6;
  unint64_t i = a1;
  while (2)
  {
    a1 = i;
    uint64_t v10 = (uint64_t)a2 - i;
    uint64_t v11 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)((uint64_t)a2 - i) >> 5);
    switch(v11)
    {
      case 0LL:
      case 1LL:
        return;
      case 2LL:
        int v84 = *((_DWORD *)a2 - 10);
        int v85 = *(_DWORD *)(i + 56);
        if (v84 > v85
          || v84 == v85
          && ((v86 = *((_DWORD *)a2 - 18), int v87 = *(_DWORD *)(i + 24), v86 > v87)
           || v86 == v87 && *((double *)a2 - 7) < *(double *)(i + 40)))
        {
          __int128 v228 = *(_OWORD *)i;
          __int128 v236 = *(_OWORD *)(i + 16);
          *(_OWORD *)int v251 = *(_OWORD *)(i + 64);
          *(_OWORD *)&v251[16] = *(_OWORD *)(i + 80);
          __int128 v241 = *(_OWORD *)(i + 32);
          __int128 v246 = *(_OWORD *)(i + 48);
          __int128 v89 = *(a2 - 3);
          __int128 v88 = *(a2 - 2);
          __int128 v90 = *(a2 - 4);
          *(_OWORD *)(i + 73) = *(_OWORD *)((char *)a2 - 23);
          *(_OWORD *)(i + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v89;
          *(_OWORD *)(i + 64) = v88;
          *(_OWORD *)(i + 32) = v90;
          __int128 v91 = *(a2 - 5);
          *(_OWORD *)unint64_t i = *v8;
          *(_OWORD *)(i + 16) = v91;
          *uint64_t v8 = v228;
          *(a2 - 5) = v236;
          *(_OWORD *)((char *)a2 - 23) = *(_OWORD *)&v251[9];
          *(a2 - 3) = v246;
          *(a2 - 2) = *(_OWORD *)v251;
          *(a2 - 4) = v241;
        }

        return;
      case 3LL:
        sub_1003FB074(i, i + 96, (uint64_t)(a2 - 6));
        return;
      case 4LL:
        sub_1003FB64C(i, i + 96, i + 192, (uint64_t)(a2 - 6));
        return;
      case 5LL:
        sub_1003FADE8(i, i + 96, i + 192, i + 288, (uint64_t)(a2 - 6));
        return;
      default:
        if (v10 <= 2303)
        {
          int64_t v92 = (_OWORD *)(i + 96);
          BOOL v94 = (_OWORD *)i == a2 || v92 == a2;
          if ((a4 & 1) != 0)
          {
            if (v94) {
              return;
            }
            uint64_t v95 = 0LL;
            unint64_t v96 = i;
            while (1)
            {
              unint64_t v97 = v96;
              unint64_t v96 = (unint64_t)v92;
              int v98 = *(_DWORD *)(v97 + 152);
              int v99 = *(_DWORD *)(v97 + 56);
              if (v98 > v99) {
                break;
              }
              if (v98 == v99)
              {
                int v100 = *(_DWORD *)(v97 + 120);
                int v101 = *(_DWORD *)(v97 + 24);
              }

LABEL_158:
            *(void *)(v106 + 16) = v204;
            *(_OWORD *)unint64_t v106 = v200;
            *(_DWORD *)(v106 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v100;
            *(void *)(v106 + 2_Block_object_dispose((const void *)(v30 - 184), 8) = v215;
            *(_DWORD *)(v106 + 36) = v219;
            *(double *)(v106 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v102;
            *(void *)(v106 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v103;
            *(_DWORD *)(v106 + 56) = v98;
            *(_OWORD *)(v106 + 6sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(_OWORD *)v229;
            *(_OWORD *)(v106 + 73) = *(_OWORD *)&v229[13];
            goto LABEL_159;
          }

          if (v94) {
            return;
          }
          while (1)
          {
            uint64_t v184 = a1;
            a1 = (uint64_t)v92;
            int v185 = *(_DWORD *)(v184 + 152);
            int v186 = *(_DWORD *)(v184 + 56);
            if (v185 > v186) {
              break;
            }
            if (v185 == v186)
            {
              int v187 = *(_DWORD *)(v184 + 120);
              int v188 = *(_DWORD *)(v184 + 24);
            }

            *(_OWORD *)unint64_t v106 = v202;
            *(void *)(v106 + 16) = v206;
            *(_DWORD *)(v106 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v99;
            *(_DWORD *)(v106 + 2_Block_object_dispose((const void *)(v30 - 184), 8) = v101;
            *(double *)(v106 + 32) = v102;
            *(_OWORD *)(v106 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v214;
            *(_DWORD *)(v106 + 56) = v97;
            *(_OWORD *)(v106 + 6sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(_OWORD *)v225;
            *(_OWORD *)(v106 + 73) = *(_OWORD *)&v225[13];
            goto LABEL_159;
          }

          if (v93) {
            return;
          }
          while (1)
          {
            int v188 = a1;
            a1 = (uint64_t)v91;
            double v189 = *(_DWORD *)(v188 + 152);
            uint64_t v190 = *(_DWORD *)(v188 + 56);
            if (v189 > v190) {
              break;
            }
            if (v189 == v190)
            {
              __int128 v191 = *(_DWORD *)(v188 + 120);
              __int128 v192 = *(_DWORD *)(v188 + 24);
            }

          uint64_t v4 = *((void *)this + 1);
          uint64_t v5 = *((void *)this + 2);
          BOOL v6 = *((unsigned __int8 *)this + 24);
          if (v4 >= v5 || *((_BYTE *)this + 24)) {
            return v6 == 0;
          }
          break;
        case 4u:
          *(_BYTE *)(a1 + 88) |= 1u;
          __int128 v69 = *((void *)this + 1);
          if (v69 > 0xFFFFFFFFFFFFFFF7LL || v69 + 8 > *((void *)this + 2)) {
            goto LABEL_155;
          }
          *(void *)(a1 + 8sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(void *)(*(void *)this + v69);
          goto LABEL_157;
        default:
          if ((PB::Reader::skip(this, v17 >> 3, v17 & 7, 0) & 1) == 0) {
            return 0LL;
          }
          goto LABEL_158;
      }
    }

    int v21 = 0;
    int v22 = 0;
    __int128 v17 = 0LL;
    if (v4 > v5) {
      uint64_t v5 = v4;
    }
    while (v5 != v4)
    {
      int v23 = v4 + 1;
      uint64_t v24 = *(_BYTE *)(v14 + v4);
      *((void *)this + 1) = v23;
      v17 |= (unint64_t)(v24 & 0x7F) << v21;
      if ((v24 & 0x80) == 0) {
        goto LABEL_21;
      }
      v21 += 7;
      uint64_t v4 = v23;
      if (v22++ >= 9)
      {
LABEL_20:
        __int128 v17 = 0LL;
        goto LABEL_21;
      }
    }

    BOOL v6 = 1;
    *((_BYTE *)this + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 1;
  }

  return v6 == 0;
}

  double result = *(float *)(a2 + 240);
  v5 |= 0x200000000000000uLL;
  *uint64_t v2 = v5;
  *(_WORD *)(a1 + 3sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v6;
  *(_BYTE *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 24sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = result;
  LOWORD(v_Block_object_dispose((const void *)(v30 - 184), 8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x400000000000000LL) == 0)
  {
LABEL_78:
    if ((v4 & 0x10000000000000LL) == 0) {
      goto LABEL_79;
    }
    goto LABEL_160;
  }

  PB::TextFormatter::format(this, "numShortAudio", *(_DWORD *)(a1 + 268));
  double v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  BOOL v6 = *v5;
  if ((*(_WORD *)(a1 + 324) & 2) == 0)
  {
LABEL_77:
    if ((v7 & 0x20000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_160;
  }

  double result = PB::Writer::write(this, *(float *)(v3 + 240), 0x10Cu);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x400000000000000LL) == 0)
  {
LABEL_78:
    if ((v5 & 0x10000000000000LL) == 0) {
      goto LABEL_79;
    }
    goto LABEL_160;
  }

  int v47 = *(_BYTE *)(a2 + 316);
  v6 |= 0x20uLL;
  *uint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_BYTE *)(a1 + 316) = v47;
  uint64_t v4 = *v3;
  double v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x40000) == 0)
  {
LABEL_53:
    if ((v7 & 0x40000000000LL) == 0) {
      goto LABEL_54;
    }
    goto LABEL_160;
  }

  PB::TextFormatter::format(this, "numBaroIncreasesSkiing", *(_DWORD *)(a1 + 160));
  double v7 = *v5;
  BOOL v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x80000000) == 0)
  {
LABEL_57:
    if ((v7 & 0x100000000LL) == 0) {
      goto LABEL_58;
    }
    goto LABEL_160;
  }

  double result = PB::Writer::write(this, *(_BYTE *)(v3 + 316), 0x13Cu);
  uint64_t v5 = *v4;
  BOOL v6 = v4[1];
  if ((*v4 & 0x40000) == 0)
  {
LABEL_53:
    if ((v6 & 0x40000000000LL) == 0) {
      goto LABEL_54;
    }
    goto LABEL_160;
  }

  BOOL v94 = *(_DWORD *)(a2 + 44);
  v3 |= 0x20uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(_BYTE *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + memset(v19, 0, 44) = v94;
  LOWORD(sub_1012279C0(0LL, v4, v5) = *(_WORD *)(a2 + 212);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x2000) == 0)
  {
LABEL_80:
    if ((v2 & 0x2000000000000000LL) == 0) {
      goto LABEL_81;
    }
    goto LABEL_160;
  }

  PB::TextFormatter::format(this, "saturationMet", *(_BYTE *)(a1 + 200));
  BOOL v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((*(_WORD *)(a1 + 212) & 0x4000) == 0)
  {
LABEL_79:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_160;
  }

  double result = PB::Writer::write(this, *(float *)(v3 + 88), 0x4C0u);
  LOWORD(sub_1012279C0(0LL, v4, v5) = *(_WORD *)(v3 + 212);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v5 & 1) == 0)
  {
LABEL_80:
    if ((v4 & 0x10000000000000LL) == 0) {
      goto LABEL_81;
    }
    goto LABEL_160;
  }

          uint64_t v4 = *((void *)this + 1);
          uint64_t v5 = *((void *)this + 2);
          BOOL v6 = *((unsigned __int8 *)this + 24);
          if (v4 >= v5 || *((_BYTE *)this + 24)) {
            return v6 == 0;
          }
          break;
        default:
          if ((PB::Reader::skip(this, v17 >> 3, v17 & 7, 0) & 1) == 0) {
            return 0LL;
          }
          goto LABEL_158;
      }
    }

    int v21 = 0;
    int v22 = 0;
    __int128 v17 = 0LL;
    if (v4 > v5) {
      uint64_t v5 = v4;
    }
    while (v5 != v4)
    {
      int v23 = v4 + 1;
      uint64_t v24 = *(_BYTE *)(v14 + v4);
      *((void *)this + 1) = v23;
      v17 |= (unint64_t)(v24 & 0x7F) << v21;
      if ((v24 & 0x80) == 0) {
        goto LABEL_21;
      }
      v21 += 7;
      uint64_t v4 = v23;
      if (v22++ >= 9)
      {
LABEL_20:
        __int128 v17 = 0LL;
        goto LABEL_21;
      }
    }

    BOOL v6 = 1;
    *((_BYTE *)this + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 1;
  }

  return v6 == 0;
}

LABEL_242:
            int64_t v92 = (_OWORD *)(a1 + 96);
            if ((_OWORD *)(a1 + 96) == a2) {
              return;
            }
          }

          int v187 = *(_DWORD *)(v184 + 120);
LABEL_234:
          uint64_t v206 = *(void *)(a1 + 16);
          __int128 v203 = *(_OWORD *)a1;
          uint64_t v218 = *(void *)(v184 + 124);
          int v221 = *(_DWORD *)(v184 + 132);
          double v189 = *(double *)(v184 + 136);
          uint64_t v190 = *(void *)(v184 + 144);
          __int128 v191 = *(_OWORD *)(v184 + 156);
          __int128 v192 = *(_OWORD *)(v184 + 172);
          __int128 v193 = (_OWORD *)a1;
          *(_DWORD *)std::string v232 = HIDWORD(v191);
          *(_OWORD *)&v232[4] = v192;
          while (1)
          {
            __int128 v194 = *(v193 - 3);
            v193[2] = *(v193 - 4);
            v193[3] = v194;
            v193[4] = *(v193 - 2);
            *(_OWORD *)((char *)v193 + 73) = *(_OWORD *)((char *)v193 - 23);
            __int128 v195 = *(v193 - 5);
            *__int128 v193 = *(v193 - 6);
            v193[1] = v195;
            int v196 = *((_DWORD *)v193 - 34);
            if (v185 <= v196)
            {
              if (v185 != v196) {
                break;
              }
              int v197 = *((_DWORD *)v193 - 42);
            }

            v193 -= 6;
          }

          *((void *)v193 - 1sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v206;
          *(v193 - 6) = v203;
          *((_DWORD *)v193 - 1_Block_object_dispose((const void *)(v30 - 184), 8) = v187;
          *((_DWORD *)v193 - 15) = v221;
          *(void *)((char *)v193 - 6_Block_object_dispose((const void *)(v30 - 184), 8) = v218;
          *((double *)v193 - 7) = v189;
          *((void *)v193 - 6) = v190;
          *((_DWORD *)v193 - 1sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v185;
          *(_OWORD *)((char *)v193 - 23) = *(_OWORD *)&v232[1];
          *(_OWORD *)((char *)v193 - 36) = v191;
          goto LABEL_242;
        }

        if (!a3)
        {
          if ((_OWORD *)i == a2) {
            return;
          }
          int64_t v113 = (unint64_t)(v11 - 2) >> 1;
          int64_t v114 = v113;
          while (1)
          {
            int64_t v115 = v114;
            if (v113 >= v114)
            {
              uint64_t v116 = (2 * v114) | 1;
              unint64_t v117 = i + 96 * v116;
              if (2 * v115 + 2 < v11)
              {
                int v118 = *(_DWORD *)(i + 96 * v116 + 56);
                int v119 = *(_DWORD *)(v117 + 152);
                if (v118 > v119
                  || v118 == v119
                  && ((int v120 = *(_DWORD *)(i + 96 * v116 + 24), v121 = *(_DWORD *)(v117 + 120), v120 > v121)
                   || v120 == v121 && *(double *)(i + 96 * v116 + 40) < *(double *)(v117 + 136)))
                {
                  v117 += 96LL;
                  uint64_t v116 = 2 * v115 + 2;
                }
              }

              int v122 = *(_DWORD *)(v117 + 56);
              int v123 = *(_DWORD *)(i + 96 * v115 + 56);
              if (v122 <= v123)
              {
                unint64_t v124 = i + 96 * v115;
                if (v122 != v123)
                {
                  int v126 = *(_DWORD *)(v124 + 24);
LABEL_177:
                  uint64_t v205 = *(void *)(v124 + 16);
                  __int128 v201 = *(_OWORD *)v124;
                  int v220 = *(_DWORD *)(v124 + 36);
                  uint64_t v216 = *(void *)(v124 + 28);
                  double v127 = *(double *)(v124 + 40);
                  uint64_t v128 = *(void *)(v124 + 48);
                  *(_OWORD *)v230 = *(_OWORD *)(v124 + 60);
                  *(_OWORD *)&v230[16] = *(_OWORD *)(v124 + 76);
                  __int128 v129 = *(_OWORD *)(v117 + 16);
                  *(_OWORD *)unint64_t v124 = *(_OWORD *)v117;
                  for (*(_OWORD *)(v124 + 16) = v129; ; *(_OWORD *)(v124 + 16) = v141)
                  {
                    __int128 v130 = *(_OWORD *)(v117 + 32);
                    __int128 v131 = *(_OWORD *)(v117 + 48);
                    __int128 v132 = *(_OWORD *)(v117 + 64);
                    *(_OWORD *)(v124 + 73) = *(_OWORD *)(v117 + 73);
                    *(_OWORD *)(v124 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v131;
                    *(_OWORD *)(v124 + 64) = v132;
                    *(_OWORD *)(v124 + 32) = v130;
                    if (v113 < v116) {
                      goto LABEL_193;
                    }
                    unint64_t v124 = v117;
                    uint64_t v133 = 2 * v116;
                    uint64_t v116 = (2 * v116) | 1;
                    unint64_t v117 = i + 96 * v116;
                    uint64_t v134 = v133 + 2;
                    if (v134 < v11)
                    {
                      int v135 = *(_DWORD *)(i + 96 * v116 + 56);
                      int v136 = *(_DWORD *)(v117 + 152);
                      if (v135 > v136
                        || v135 == v136
                        && ((int v137 = *(_DWORD *)(i + 96 * v116 + 24), v138 = *(_DWORD *)(v117 + 120), v137 > v138)
                         || v137 == v138 && *(double *)(i + 96 * v116 + 40) < *(double *)(v117 + 136)))
                      {
                        v117 += 96LL;
                        uint64_t v116 = v134;
                      }
                    }

                    int v139 = *(_DWORD *)(v117 + 56);
                    if (v139 > v123) {
                      break;
                    }
                    if (v139 == v123)
                    {
                      int v140 = *(_DWORD *)(v117 + 24);
                    }

                    __int128 v141 = *(_OWORD *)(v117 + 16);
                    *(_OWORD *)unint64_t v124 = *(_OWORD *)v117;
                  }

                  unint64_t v117 = v124;
LABEL_193:
                  *(void *)(v117 + 16) = v205;
                  *(_OWORD *)unint64_t v117 = v201;
                  *(_DWORD *)(v117 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v126;
                  *(void *)(v117 + 2_Block_object_dispose((const void *)(v30 - 184), 8) = v216;
                  *(_DWORD *)(v117 + 36) = v220;
                  *(double *)(v117 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v127;
                  *(void *)(v117 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v128;
                  *(_DWORD *)(v117 + 56) = v123;
                  *(_OWORD *)(v117 + 6sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(_OWORD *)v230;
                  *(_OWORD *)(v117 + 73) = *(_OWORD *)&v230[13];
                  goto LABEL_194;
                }

                int v125 = *(_DWORD *)(v117 + 24);
                int v126 = *(_DWORD *)(i + 96 * v115 + 24);
                if (v125 <= v126)
                {
                  if (v125 != v126) {
                    goto LABEL_177;
                  }
                  int v126 = *(_DWORD *)(v117 + 24);
                }
              }
            }

              if (qword_101934870 != -1) {
                dispatch_once(&qword_101934870, &stru_101847D40);
              }
              __int128 v70 = (os_log_s *)qword_101934878;
              if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
              {
                sub_100923668((uint64_t)&v110, (std::stringbuf::string_type *)__dst);
                __int128 v71 = __dst[23] >= 0 ? __dst : *(_BYTE **)__dst;
                LODWORD(v140.__r_.__value_.__l.__data_) = 136380675;
                *(std::string::size_type *)((char *)v140.__r_.__value_.__r.__words + 4) = (std::string::size_type)v71;
                _os_log_impl( (void *)&_mh_execute_header,  v70,  OS_LOG_TYPE_DEFAULT,  "Fence:Fail sending kNotificationFenceFailure, fence, %{private}s",  (uint8_t *)&v140,  0xCu);
                if ((__dst[23] & 0x80000000) != 0) {
                  operator delete(*(void **)__dst);
                }
              }

              if (sub_1002921D0(115, 2))
              {
                bzero(__dst, 0x65CuLL);
                if (qword_101934870 != -1) {
                  dispatch_once(&qword_101934870, &stru_101847D40);
                }
                unint64_t v73 = qword_101934878;
                sub_100923668((uint64_t)&v110, &v140);
                if ((v140.__r_.__value_.__s.__size_ & 0x80u) == 0) {
                  int v74 = &v140;
                }
                else {
                  int v74 = (std::stringbuf::string_type *)v140.__r_.__value_.__r.__words[0];
                }
                LODWORD(v139.__r_.__value_.__l.__data_) = 136380675;
                *(std::string::size_type *)((char *)v139.__r_.__value_.__r.__words + 4) = (std::string::size_type)v74;
                LODWORD(v97) = 12;
                _os_log_send_and_compose_impl( 2LL,  0LL,  __dst,  1628LL,  &_mh_execute_header,  v73,  0LL,  "Fence:Fail sending kNotificationFenceFailure, fence, %{private}s",  &v139,  v97);
                int v76 = v75;
                sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLFenceManager::addFence(const CLFenceManager_Type::Fence &)",  "%s\n",  v76);
                if (v76 != __dst) {
                  free(v76);
                }
              }

              sub_10065E834((uint64_t)a1, (uint64_t)&v110);
              uint64_t v11 = 0LL;
LABEL_252:
              goto LABEL_254;
            }

            goto LABEL_216;
          }

          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101847D40);
          }
          unint64_t v30 = (os_log_s *)qword_101934878;
          if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
          {
            int v31 = &__str;
            if ((__str.__r_.__value_.__s.__size_ & 0x80u) != 0) {
              int v31 = (std::string *)__str.__r_.__value_.__r.__words[0];
            }
            if ((v126.__r_.__value_.__s.__size_ & 0x80u) == 0) {
              __int128 v32 = &v126;
            }
            else {
              __int128 v32 = (std::string *)v126.__r_.__value_.__r.__words[0];
            }
            *(_DWORD *)__dst = 136380931;
            *(void *)&__dst[4] = v31;
            *(_WORD *)&__dst[12] = 2081;
            *(void *)&_OWORD __dst[14] = v32;
            _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEFAULT,  "Fence: monitoring is not supported on this platform; not adding fence %{private}s/%{private}s",
              __dst,
              0x16u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(__dst, 0x65CuLL);
            if (qword_101934870 != -1) {
              dispatch_once(&qword_101934870, &stru_101847D40);
            }
            __int128 v33 = &__str;
            if ((__str.__r_.__value_.__s.__size_ & 0x80u) != 0) {
              __int128 v33 = (std::string *)__str.__r_.__value_.__r.__words[0];
            }
            int v34 = (v126.__r_.__value_.__s.__size_ & 0x80u) == 0
                ? &v126
                : (std::string *)v126.__r_.__value_.__r.__words[0];
            LODWORD(v140.__r_.__value_.__l.__data_) = 136380931;
            *(std::string::size_type *)((char *)v140.__r_.__value_.__r.__words + 4) = (std::string::size_type)v33;
            WORD2(v140.__r_.__value_.__r.__words[1]) = 2081;
            *(std::string::size_type *)((char *)&v140.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v34;
            _os_log_send_and_compose_impl( 2LL,  0LL,  __dst,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "Fence: monitoring is not supported on this platform; not adding fence %{private}s/%{private}s",
              &v140,
              22);
            uint64_t v27 = (char *)v35;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLFenceManager::addFence(const CLFenceManager_Type::Fence &)",  "%s\n",  v35);
            if (v27 != __dst) {
LABEL_129:
            }
              free(v27);
          }

              if (v39 != buf) {
                free(v39);
              }
              goto LABEL_189;
            }

            if (!*(_BYTE *)(a1 + 96)) {
              goto LABEL_145;
            }
            if (qword_1019348B0 != -1) {
              dispatch_once(&qword_1019348B0, &stru_1018819B8);
            }
            __int128 v41 = (os_log_s *)qword_1019348B8;
            if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
            {
              *(_WORD *)std::stringbuf::string_type buf = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_DEBUG,  "CLMM,no DOT,computeSnapCoordinatesFromRawGPSCoordinates lookBehind returned false",  buf,  2u);
            }

            if (!sub_1002921D0(115, 2))
            {
LABEL_145:
              uint64_t v11 = 0LL;
LABEL_146:
              sub_100BDC958((uint64_t)v133);
              goto LABEL_147;
            }

            bzero(buf, 0x65CuLL);
            if (qword_1019348B0 != -1) {
              dispatch_once(&qword_1019348B0, &stru_1018819B8);
            }
            *(_WORD *)int v139 = 0;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,no DOT,computeSnapCoordinatesFromRawGPSCoordinates lookBehind returned false",  v139,  2);
            __int128 v43 = (char *)v42;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMapMatcher::getDirectionOfTravelAssistance(CLGpsAssistant_Type::DirectionOfTravelAssistance &)",  "%s\n",  v42);
          }

          else
          {
            if (!*(_BYTE *)(a1 + 96)) {
              goto LABEL_145;
            }
            if (qword_1019348B0 != -1) {
              dispatch_once(&qword_1019348B0, &stru_1018819B8);
            }
            __int128 v40 = (os_log_s *)qword_1019348B8;
            if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
            {
              *(_WORD *)std::stringbuf::string_type buf = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_DEBUG,  "CLMM,moveOnRoad returned false,DOT particle assistance",  buf,  2u);
            }

            if (!sub_1002921D0(115, 2)) {
              goto LABEL_145;
            }
            bzero(buf, 0x65CuLL);
            if (qword_1019348B0 != -1) {
              dispatch_once(&qword_1019348B0, &stru_1018819B8);
            }
            *(_WORD *)int v139 = 0;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,moveOnRoad returned false,DOT particle assistance",  v139,  2);
            __int128 v43 = (char *)v94;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMapMatcher::getDirectionOfTravelAssistance(CLGpsAssistant_Type::DirectionOfTravelAssistance &)",  "%s\n",  v94);
          }

          if (v43 != buf) {
            free(v43);
          }
          goto LABEL_145;
        }

        if (v21 - v22 >= 18.0)
        {
          if (v22 >= 5.0 || *(_BYTE *)(a1 + 3168) == 0)
          {
            __int128 v20 = v21 + -1.0;
            goto LABEL_124;
          }

          if (!*(_BYTE *)(a1 + 96)) {
            goto LABEL_122;
          }
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_1018819B8);
          }
          __int128 v32 = (os_log_s *)qword_1019348B8;
          if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
          {
            *(_WORD *)std::stringbuf::string_type buf = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEBUG,  "CLMM,no DOT,too slow when nearing intersection",  buf,  2u);
          }

          if (!sub_1002921D0(115, 2)) {
            goto LABEL_122;
          }
          bzero(buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_1018819B8);
          }
          *(_WORD *)int v139 = 0;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,no DOT,too slow when nearing intersection",  v139,  2);
          unint64_t v30 = (char *)v33;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMapMatcher::getDirectionOfTravelAssistance(CLGpsAssistant_Type::DirectionOfTravelAssistance &)",  "%s\n",  v33);
        }

        else
        {
          if (!*(_BYTE *)(a1 + 96)) {
            goto LABEL_122;
          }
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_1018819B8);
          }
          int v28 = (os_log_s *)qword_1019348B8;
          if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
          {
            *(_WORD *)std::stringbuf::string_type buf = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEBUG,  "CLMM,no DOT,too close to next intersection",  buf,  2u);
          }

          if (!sub_1002921D0(115, 2)) {
            goto LABEL_122;
          }
          bzero(buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_1018819B8);
          }
          *(_WORD *)int v139 = 0;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,no DOT,too close to next intersection",  v139,  2);
          unint64_t v30 = (char *)v29;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMapMatcher::getDirectionOfTravelAssistance(CLGpsAssistant_Type::DirectionOfTravelAssistance &)",  "%s\n",  v29);
        }

        if (v30 != buf) {
          free(v30);
        }
        goto LABEL_122;
      }

      if (!*(_BYTE *)(a1 + 96)) {
        return 0LL;
      }
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_1018819B8);
      }
      double v26 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEBUG,  "CLMM,no DOT,assessParallelRoadsWithinDist returned false,unexpected",  buf,  2u);
      }

      if (!sub_1002921D0(115, 2)) {
        return 0LL;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_1018819B8);
      }
      v133[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,no DOT,assessParallelRoadsWithinDist returned false,unexpected",  v133,  2);
      double v7 = (char *)v27;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMapMatcher::getDirectionOfTravelAssistance(CLGpsAssistant_Type::DirectionOfTravelAssistance &)",  "%s\n",  v27);
LABEL_181:
      if (v7 != buf) {
        free(v7);
      }
    }
  }

  return 0LL;
}

LABEL_194:
            int64_t v114 = v115 - 1;
            if (!v115)
            {
              int64_t v142 = v10 / 0x60uLL;
              while (1)
              {
                uint64_t v143 = 0LL;
                __int128 v231 = *(_OWORD *)i;
                __int128 v237 = *(_OWORD *)(i + 16);
                *(_OWORD *)BOOL v252 = *(_OWORD *)(i + 64);
                *(_OWORD *)&v252[16] = *(_OWORD *)(i + 80);
                __int128 v242 = *(_OWORD *)(i + 32);
                __int128 v247 = *(_OWORD *)(i + 48);
                unint64_t v144 = i;
                do
                {
                  __int128 v145 = (_OWORD *)v144;
                  uint64_t v146 = v143 + 1;
                  v144 += 96 * (v143 + 1);
                  uint64_t v147 = 2 * v143;
                  uint64_t v143 = (2 * v143) | 1;
                  int64_t v148 = v147 + 2;
                  if (v148 < v142)
                  {
                    int v149 = DWORD2(v145[6 * v146 + 3]);
                    int v150 = *(_DWORD *)(v144 + 152);
                    if (v149 > v150
                      || v149 == v150
                      && ((int v151 = DWORD2(v145[6 * v146 + 1]), v152 = *(_DWORD *)(v144 + 120), v151 > v152)
                       || v151 == v152 && *((double *)&v145[6 * v146 + 2] + 1) < *(double *)(v144 + 136)))
                    {
                      v144 += 96LL;
                      uint64_t v143 = v148;
                    }
                  }

                  __int128 v153 = *(_OWORD *)(v144 + 16);
                  *__int128 v145 = *(_OWORD *)v144;
                  v145[1] = v153;
                  __int128 v154 = *(_OWORD *)(v144 + 32);
                  __int128 v155 = *(_OWORD *)(v144 + 48);
                  __int128 v156 = *(_OWORD *)(v144 + 64);
                  *(_OWORD *)((char *)v145 + 73) = *(_OWORD *)(v144 + 73);
                  v145[3] = v155;
                  v145[4] = v156;
                  v145[2] = v154;
                }

                while (v143 <= (uint64_t)((unint64_t)(v142 - 2) >> 1));
                a2 -= 6;
                if ((_OWORD *)v144 == a2)
                {
                  *(_OWORD *)unint64_t v144 = v231;
                  *(_OWORD *)(v144 + 16) = v237;
                  *(_OWORD *)(v144 + 73) = *(_OWORD *)&v252[9];
                  *(_OWORD *)(v144 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v247;
                  *(_OWORD *)(v144 + 64) = *(_OWORD *)v252;
                  *(_OWORD *)(v144 + 32) = v242;
                }

                else
                {
                  __int128 v157 = a2[1];
                  *(_OWORD *)unint64_t v144 = *a2;
                  *(_OWORD *)(v144 + 16) = v157;
                  __int128 v158 = a2[2];
                  __int128 v159 = a2[3];
                  __int128 v160 = a2[4];
                  *(_OWORD *)(v144 + 73) = *(_OWORD *)((char *)a2 + 73);
                  *(_OWORD *)(v144 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v159;
                  *(_OWORD *)(v144 + 64) = v160;
                  *(_OWORD *)(v144 + 32) = v158;
                  *(_OWORD *)((char *)a2 + 73) = *(_OWORD *)&v252[9];
                  a2[3] = v247;
                  a2[4] = *(_OWORD *)v252;
                  a2[2] = v242;
                  *a2 = v231;
                  a2[1] = v237;
                  uint64_t v161 = v144 - i + 96;
                  if (v161 >= 97)
                  {
                    unint64_t v162 = v161 / 0x60uLL - 2;
                    unint64_t v163 = v162 >> 1;
                    unint64_t v164 = i + 96 * (v162 >> 1);
                    int v165 = *(_DWORD *)(v164 + 56);
                    int v166 = *(_DWORD *)(v144 + 56);
                    if (v165 > v166)
                    {
                      int v167 = *(_DWORD *)(v144 + 24);
LABEL_209:
                      uint64_t v224 = *(void *)(v144 + 16);
                      __int128 v217 = *(_OWORD *)v144;
                      int v212 = *(_DWORD *)(v144 + 36);
                      uint64_t v209 = *(void *)(v144 + 28);
                      double v168 = *(double *)(v144 + 40);
                      uint64_t v169 = *(void *)(v144 + 48);
                      *(_OWORD *)__int128 v202 = *(_OWORD *)(v144 + 60);
                      *(_OWORD *)&v202[16] = *(_OWORD *)(v144 + 76);
                      __int128 v170 = *(_OWORD *)(v164 + 16);
                      *(_OWORD *)unint64_t v144 = *(_OWORD *)v164;
                      *(_OWORD *)(v144 + 16) = v170;
                      __int128 v171 = *(_OWORD *)(v164 + 32);
                      __int128 v172 = *(_OWORD *)(v164 + 48);
                      __int128 v173 = *(_OWORD *)(v164 + 64);
                      *(_OWORD *)(v144 + 73) = *(_OWORD *)(v164 + 73);
                      *(_OWORD *)(v144 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v172;
                      *(_OWORD *)(v144 + 64) = v173;
                      *(_OWORD *)(v144 + 32) = v171;
                      if (v162 >= 2)
                      {
                        while (1)
                        {
                          unint64_t v175 = v163 - 1;
                          unint64_t v163 = (v163 - 1) >> 1;
                          unint64_t v174 = i + 96 * v163;
                          int v176 = *(_DWORD *)(v174 + 56);
                          if (v176 <= v166)
                          {
                            if (v176 != v166) {
                              break;
                            }
                            int v177 = *(_DWORD *)(i + 96 * v163 + 24);
                          }

                          __int128 v178 = *(_OWORD *)(v174 + 16);
                          *(_OWORD *)unint64_t v164 = *(_OWORD *)v174;
                          *(_OWORD *)(v164 + 16) = v178;
                          __int128 v179 = *(_OWORD *)(v174 + 32);
                          __int128 v180 = *(_OWORD *)(v174 + 48);
                          __int128 v181 = *(_OWORD *)(v174 + 64);
                          *(_OWORD *)(v164 + 73) = *(_OWORD *)(v174 + 73);
                          *(_OWORD *)(v164 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v180;
                          *(_OWORD *)(v164 + 64) = v181;
                          *(_OWORD *)(v164 + 32) = v179;
                          unint64_t v164 = i + 96 * v163;
                          if (v175 <= 1) {
                            goto LABEL_217;
                          }
                        }
                      }

                      unint64_t v174 = v164;
LABEL_217:
                      *(void *)(v174 + 16) = v224;
                      *(_OWORD *)unint64_t v174 = v217;
                      *(_DWORD *)(v174 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v167;
                      *(void *)(v174 + 2_Block_object_dispose((const void *)(v30 - 184), 8) = v209;
                      *(_DWORD *)(v174 + 36) = v212;
                      *(double *)(v174 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v168;
                      *(void *)(v174 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v169;
                      *(_DWORD *)(v174 + 56) = v166;
                      *(_OWORD *)(v174 + 6sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(_OWORD *)v202;
                      *(_OWORD *)(v174 + 73) = *(_OWORD *)&v202[13];
                      goto LABEL_219;
                    }

                    if (v165 == v166)
                    {
                      int v183 = *(_DWORD *)(i + 96 * v163 + 24);
                      int v167 = *(_DWORD *)(v144 + 24);
                      if (v183 > v167) {
                        goto LABEL_209;
                      }
                      if (v183 == v167)
                      {
                        int v167 = *(_DWORD *)(i + 96 * v163 + 24);
                      }
                    }
                  }
                }

            int64_t v114 = v115 - 1;
            if (!v115)
            {
              uint64_t v146 = v10 / 0x60uLL;
              while (1)
              {
                uint64_t v147 = 0LL;
                __int128 v227 = *(_OWORD *)i;
                __int128 v233 = *(_OWORD *)(i + 16);
                *(_OWORD *)__int16 v248 = *(_OWORD *)(i + 64);
                *(_OWORD *)&v248[16] = *(_OWORD *)(i + 80);
                __int128 v238 = *(_OWORD *)(i + 32);
                __int128 v243 = *(_OWORD *)(i + 48);
                int64_t v148 = i;
                do
                {
                  int v149 = (_OWORD *)v148;
                  int v150 = v147 + 1;
                  v148 += 96 * (v147 + 1);
                  int v151 = 2 * v147;
                  uint64_t v147 = (2 * v147) | 1;
                  int v152 = v151 + 2;
                  if (v152 < v146)
                  {
                    __int128 v153 = DWORD2(v149[6 * v150 + 3]);
                    __int128 v154 = *(_DWORD *)(v148 + 152);
                    if (v153 > v154
                      || v153 == v154
                      && ((__int128 v155 = DWORD2(v149[6 * v150 + 1]), v156 = *(_DWORD *)(v148 + 120), v155 > v156)
                       || v155 == v156 && *(double *)&v149[6 * v150 + 2] < *(double *)(v148 + 128)))
                    {
                      v148 += 96LL;
                      uint64_t v147 = v152;
                    }
                  }

                  __int128 v157 = *(_OWORD *)(v148 + 16);
                  *int v149 = *(_OWORD *)v148;
                  v149[1] = v157;
                  __int128 v158 = *(_OWORD *)(v148 + 32);
                  __int128 v159 = *(_OWORD *)(v148 + 48);
                  __int128 v160 = *(_OWORD *)(v148 + 64);
                  *(_OWORD *)((char *)v149 + 73) = *(_OWORD *)(v148 + 73);
                  v149[3] = v159;
                  v149[4] = v160;
                  v149[2] = v158;
                }

                while (v147 <= (uint64_t)((unint64_t)(v146 - 2) >> 1));
                a2 -= 6;
                if ((_OWORD *)v148 == a2)
                {
                  *(_OWORD *)int64_t v148 = v227;
                  *(_OWORD *)(v148 + 16) = v233;
                  *(_OWORD *)(v148 + 73) = *(_OWORD *)&v248[9];
                  *(_OWORD *)(v148 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v243;
                  *(_OWORD *)(v148 + 64) = *(_OWORD *)v248;
                  *(_OWORD *)(v148 + 32) = v238;
                }

                else
                {
                  uint64_t v161 = a2[1];
                  *(_OWORD *)int64_t v148 = *a2;
                  *(_OWORD *)(v148 + 16) = v161;
                  unint64_t v162 = a2[2];
                  unint64_t v163 = a2[3];
                  unint64_t v164 = a2[4];
                  *(_OWORD *)(v148 + 73) = *(_OWORD *)((char *)a2 + 73);
                  *(_OWORD *)(v148 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v163;
                  *(_OWORD *)(v148 + 64) = v164;
                  *(_OWORD *)(v148 + 32) = v162;
                  *(_OWORD *)((char *)a2 + 73) = *(_OWORD *)&v248[9];
                  a2[3] = v243;
                  a2[4] = *(_OWORD *)v248;
                  a2[2] = v238;
                  *a2 = v227;
                  a2[1] = v233;
                  int v165 = v148 - i + 96;
                  if (v165 >= 97)
                  {
                    int v166 = v165 / 0x60uLL - 2;
                    int v167 = v166 >> 1;
                    double v168 = i + 96 * (v166 >> 1);
                    uint64_t v169 = *(_DWORD *)(v168 + 56);
                    __int128 v170 = *(_DWORD *)(v148 + 56);
                    if (v169 > v170)
                    {
                      __int128 v171 = *(_DWORD *)(v148 + 24);
LABEL_209:
                      int v220 = *(void *)(v148 + 16);
                      uint64_t v216 = *(_OWORD *)v148;
                      __int128 v172 = *(_DWORD *)(v148 + 28);
                      __int128 v173 = *(double *)(v148 + 32);
                      int v211 = *(_OWORD *)(v148 + 40);
                      *(_OWORD *)uint64_t v204 = *(_OWORD *)(v148 + 60);
                      *(_OWORD *)&v204[16] = *(_OWORD *)(v148 + 76);
                      unint64_t v175 = *(_OWORD *)(v168 + 48);
                      unint64_t v174 = *(_OWORD *)(v168 + 64);
                      int v176 = *(_OWORD *)(v168 + 32);
                      *(_OWORD *)(v148 + 73) = *(_OWORD *)(v168 + 73);
                      *(_OWORD *)(v148 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v175;
                      *(_OWORD *)(v148 + 64) = v174;
                      *(_OWORD *)(v148 + 32) = v176;
                      int v177 = *(_OWORD *)(v168 + 16);
                      *(_OWORD *)int64_t v148 = *(_OWORD *)v168;
                      *(_OWORD *)(v148 + 16) = v177;
                      if (v166 >= 2)
                      {
                        while (1)
                        {
                          __int128 v179 = v167 - 1;
                          int v167 = (v167 - 1) >> 1;
                          __int128 v178 = i + 96 * v167;
                          __int128 v180 = *(_DWORD *)(v178 + 56);
                          if (v180 <= v170)
                          {
                            if (v180 != v170) {
                              break;
                            }
                            __int128 v181 = *(_DWORD *)(i + 96 * v167 + 24);
                          }

                          __int128 v182 = *(_OWORD *)(v178 + 16);
                          *(_OWORD *)double v168 = *(_OWORD *)v178;
                          *(_OWORD *)(v168 + 16) = v182;
                          int v183 = *(_OWORD *)(v178 + 32);
                          uint64_t v184 = *(_OWORD *)(v178 + 48);
                          int v185 = *(_OWORD *)(v178 + 64);
                          *(_OWORD *)(v168 + 73) = *(_OWORD *)(v178 + 73);
                          *(_OWORD *)(v168 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v184;
                          *(_OWORD *)(v168 + 64) = v185;
                          *(_OWORD *)(v168 + 32) = v183;
                          double v168 = i + 96 * v167;
                          if (v179 <= 1) {
                            goto LABEL_217;
                          }
                        }
                      }

                      __int128 v178 = v168;
LABEL_217:
                      *(_OWORD *)__int128 v178 = v216;
                      *(void *)(v178 + 16) = v220;
                      *(_DWORD *)(v178 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v171;
                      *(_DWORD *)(v178 + 2_Block_object_dispose((const void *)(v30 - 184), 8) = v172;
                      *(double *)(v178 + 32) = v173;
                      *(_OWORD *)(v178 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v211;
                      *(_DWORD *)(v178 + 56) = v170;
                      *(_OWORD *)(v178 + 6sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(_OWORD *)v204;
                      *(_OWORD *)(v178 + 73) = *(_OWORD *)&v204[13];
                      goto LABEL_219;
                    }

                    if (v169 == v170)
                    {
                      int v187 = *(_DWORD *)(i + 96 * v167 + 24);
                      __int128 v171 = *(_DWORD *)(v148 + 24);
                      if (v187 > v171) {
                        goto LABEL_209;
                      }
                      if (v187 == v171)
                      {
                        __int128 v171 = *(_DWORD *)(i + 96 * v167 + 24);
                      }
                    }
                  }
                }

    v85 += v108;
    v84 += v123;
    v79 += 64LL;
  }

  while (v79 != v80);
  if (v85 && v84)
  {
    int v135 = *(_DWORD *)(a2 + 792);
    if (v135 == 3)
    {
      BOOL v6 = 0LL;
      goto LABEL_211;
    }

    BOOL v6 = 0LL;
    if (v135 != 4 && v173 > v12 + v12)
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      int v137 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 134350080;
        *(double *)&uint8_t buf[4] = v4;
        *(_WORD *)&_BYTE buf[12] = 1026;
        *(_DWORD *)&buf[14] = v85;
        *(_WORD *)&_BYTE buf[18] = 1026;
        *(_DWORD *)&buf[20] = v84;
        *(_WORD *)&_BYTE buf[24] = 2050;
        *(double *)&buf[26] = v173;
        *(_WORD *)&buf[34] = 2050;
        *(double *)&buf[36] = v12 + v12;
        _os_log_impl( (void *)&_mh_execute_header,  v137,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,isSolutionAmbiguous,1,buildingOnBothSides but AT too high,rightCount,%{public}d,leftCoun t,%{public}d,AT,%{public}.1lf,threshold,%{public}.1lf",  buf,  0x2Cu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188A8E0);
        }
        *(_DWORD *)int v177 = 134350080;
        *(double *)&v177[4] = v4;
        __int128 v178 = 1026;
        *(_DWORD *)__int128 v179 = v85;
        *(_WORD *)&v179[4] = 1026;
        *(_DWORD *)&v179[6] = v84;
        *(_WORD *)&v179[10] = 2050;
        *(double *)&v179[12] = v173;
        *(_WORD *)&v179[20] = 2050;
        *(double *)&v179[22] = v12 + v12;
        LODWORD(v1sub_10000AE14(v1 - 72) = 44;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,isSolutionAmbiguous,1,buildingOnBothSides but AT too high,rightCount,%{public}d,leftCoun t,%{public}d,AT,%{public}.1lf,threshold,%{public}.1lf",  v177,  v172);
        __int128 v83 = (char *)v138;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::isSolutionAmbiguous(MMFilterData &, const MMSnapData &)",  "%s\n",  v138);
        goto LABEL_254;
      }

      goto LABEL_210;
    }

    goto LABEL_211;
  }

  int v74 = *(_DWORD *)(a2 + 152);
  v5 |= 0x10000000uLL;
  *uint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 152) = v74;
  uint64_t v4 = *v3;
  double v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x40000000) == 0)
  {
LABEL_89:
    if ((v7 & 0x1000000000LL) == 0) {
      goto LABEL_90;
    }
    goto LABEL_196;
  }

  PB::TextFormatter::format(this, "staticGpsCount", *(_DWORD *)(a1 + 252));
  double v7 = *v5;
  if ((*v5 & 0x40000000000000LL) == 0)
  {
LABEL_93:
    if ((v7 & 0x80000000000000LL) == 0) {
      goto LABEL_94;
    }
    goto LABEL_196;
  }

  double result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 152), 0x44Du);
  uint64_t v5 = *v4;
  BOOL v6 = v4[1];
  if ((*v4 & 0x40000000) == 0)
  {
LABEL_89:
    if ((v6 & 0x1000000000LL) == 0) {
      goto LABEL_90;
    }
    goto LABEL_196;
  }

        *(_DWORD *)(a1 + 216) = v36;
        goto LABEL_203;
      case 6u:
        *(_DWORD *)(a1 + 244) |= 0x40000u;
        double v39 = *((void *)this + 1);
        if (v39 > 0xFFFFFFFFFFFFFFFBLL || v39 + 4 > *((void *)this + 2)) {
          goto LABEL_134;
        }
        *(_DWORD *)(a1 + 22_Block_object_dispose((const void *)(v30 - 184), 8) = *(_DWORD *)(*(void *)this + v39);
        goto LABEL_100;
      case 7u:
        *(_DWORD *)(a1 + 244) |= 0x2000000u;
        __int128 v40 = *((void *)this + 1);
        if (v40 >= *((void *)this + 2))
        {
          __int128 v43 = 0;
          *((_BYTE *)this + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 1;
        }

        else
        {
          __int128 v41 = v40 + 1;
          __int128 v42 = *(unsigned __int8 *)(*(void *)this + v40);
          *((void *)this + 1) = v41;
          __int128 v43 = v42 != 0;
        }

        *(_BYTE *)(a1 + 241) = v43;
        goto LABEL_203;
      case 8u:
        *(_DWORD *)(a1 + 244) |= 0x80000u;
        int v44 = *((void *)this + 1);
        if (v44 > 0xFFFFFFFFFFFFFFFBLL || v44 + 4 > *((void *)this + 2)) {
          goto LABEL_134;
        }
        *(_DWORD *)(a1 + 232) = *(_DWORD *)(*(void *)this + v44);
        goto LABEL_100;
      case 9u:
        *(_DWORD *)(a1 + 244) |= 0x4000000u;
        int v45 = *((void *)this + 1);
        if (v45 >= *((void *)this + 2))
        {
          __int128 v48 = 0;
          *((_BYTE *)this + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 1;
        }

        else
        {
          __int128 v46 = v45 + 1;
          int v47 = *(unsigned __int8 *)(*(void *)this + v45);
          *((void *)this + 1) = v46;
          __int128 v48 = v47 != 0;
        }

        *(_BYTE *)(a1 + 242) = v48;
        goto LABEL_203;
      case 0xAu:
        *(_DWORD *)(a1 + 244) |= 0x200u;
        int v49 = *((void *)this + 1);
        if (v49 > 0xFFFFFFFFFFFFFFF7LL || v49 + 8 > *((void *)this + 2)) {
          goto LABEL_134;
        }
        *(void *)(a1 + 176) = *(void *)(*(void *)this + v49);
        goto LABEL_185;
      case 0xBu:
        *(_DWORD *)(a1 + 244) |= 0x400000u;
        __int128 v50 = *((void *)this + 1);
        if (v50 >= *((void *)this + 2))
        {
          __int128 v53 = 0;
          *((_BYTE *)this + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 1;
        }

        else
        {
          __int128 v51 = v50 + 1;
          __int128 v52 = *(unsigned __int8 *)(*(void *)this + v50);
          *((void *)this + 1) = v51;
          __int128 v53 = v52 != 0;
        }

        *(_BYTE *)(a1 + 23_Block_object_dispose((const void *)(v30 - 184), 8) = v53;
        goto LABEL_203;
      case 0xCu:
        int v56 = operator new(0x40uLL);
        *(void *)int v56 = &off_10189D950;
        v56[15] = 0;
        double v57 = *(void *)(a1 + 64);
        *(void *)(a1 + 64) = v56;
        if (v57)
        {
          (*(void (**)(uint64_t))(*(void *)v57 + 8LL))(v57);
          int v56 = *(_DWORD **)(a1 + 64);
        }

        goto LABEL_139;
      case 0xDu:
        *(_DWORD *)(a1 + 244) |= 0x800u;
        uint64_t v58 = *((void *)this + 1);
        if (v58 > 0xFFFFFFFFFFFFFFF7LL || v58 + 8 > *((void *)this + 2)) {
          goto LABEL_134;
        }
        *(void *)(a1 + 192) = *(void *)(*(void *)this + v58);
        goto LABEL_185;
      case 0xEu:
        *(_DWORD *)(a1 + 244) |= 0x800000u;
        int v59 = *((void *)this + 1);
        if (v59 >= *((void *)this + 2))
        {
          int v62 = 0;
          *((_BYTE *)this + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 1;
        }

        else
        {
          int v60 = v59 + 1;
          uint64_t v61 = *(unsigned __int8 *)(*(void *)this + v59);
          *((void *)this + 1) = v60;
          int v62 = v61 != 0;
        }

        *(_BYTE *)(a1 + 239) = v62;
        goto LABEL_203;
      case 0xFu:
        *(_DWORD *)(a1 + 244) |= 0x400u;
        __int128 v63 = *((void *)this + 1);
        if (v63 > 0xFFFFFFFFFFFFFFF7LL || v63 + 8 > *((void *)this + 2)) {
          goto LABEL_134;
        }
        *(void *)(a1 + 184) = *(void *)(*(void *)this + v63);
        goto LABEL_185;
      case 0x10u:
        *(_DWORD *)(a1 + 244) |= 0x200000u;
        __int128 v64 = *((void *)this + 1);
        if (v64 >= *((void *)this + 2))
        {
          int v67 = 0;
          *((_BYTE *)this + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 1;
        }

        else
        {
          int v65 = v64 + 1;
          int v66 = *(unsigned __int8 *)(*(void *)this + v64);
          *((void *)this + 1) = v65;
          int v67 = v66 != 0;
        }

        *(_BYTE *)(a1 + 237) = v67;
        goto LABEL_203;
      case 0x11u:
        int v56 = operator new(0x38uLL);
        *(void *)int v56 = &off_10189DA68;
        v56[13] = 0;
        int v68 = *(void *)(a1 + 120);
        *(void *)(a1 + sub_1011C52D0(v9 - 120) = v56;
        if (v68)
        {
          (*(void (**)(uint64_t))(*(void *)v68 + 8LL))(v68);
          int v56 = *(_DWORD **)(a1 + 120);
        }

        goto LABEL_139;
      case 0x12u:
        int v56 = operator new(0x60uLL);
        *(void *)int v56 = &off_10189D9F8;
        v56[22] = 0;
        __int128 v69 = *(void *)(a1 + 112);
        *(void *)(a1 + 112) = v56;
        if (v69)
        {
          (*(void (**)(uint64_t))(*(void *)v69 + 8LL))(v69);
          int v56 = *(_DWORD **)(a1 + 112);
        }

        goto LABEL_139;
      case 0x13u:
        int v56 = operator new(0x38uLL);
        *(void *)int v56 = &off_10189DA68;
        v56[13] = 0;
        __int128 v70 = *(void *)(a1 + 104);
        *(void *)(a1 + 104) = v56;
        if (v70)
        {
          (*(void (**)(uint64_t))(*(void *)v70 + 8LL))(v70);
          int v56 = *(_DWORD **)(a1 + 104);
        }

        goto LABEL_139;
      case 0x14u:
        int v56 = operator new(0xB8uLL);
        *(void *)int v56 = &off_10189D9C0;
        v56[44] = 0;
        __int128 v71 = *(void *)(a1 + 96);
        *(void *)(a1 + 96) = v56;
        if (v71)
        {
          (*(void (**)(uint64_t))(*(void *)v71 + 8LL))(v71);
          int v56 = *(_DWORD **)(a1 + 96);
        }

        goto LABEL_139;
      case 0x15u:
        int v56 = operator new(0x38uLL);
        *(void *)int v56 = &off_10189DA68;
        v56[13] = 0;
        __int128 v72 = *(void *)(a1 + 152);
        *(void *)(a1 + 152) = v56;
        if (v72)
        {
          (*(void (**)(uint64_t))(*(void *)v72 + 8LL))(v72);
          int v56 = *(_DWORD **)(a1 + 152);
        }

        goto LABEL_139;
      case 0x16u:
        int v56 = operator new(0x30uLL);
        *(void *)int v56 = &off_10189DAA0;
        v56[10] = 0;
        unint64_t v73 = *(void *)(a1 + 144);
        *(void *)(a1 + 1memset(v19, 0, 44) = v56;
        if (v73)
        {
          (*(void (**)(uint64_t))(*(void *)v73 + 8LL))(v73);
          int v56 = *(_DWORD **)(a1 + 144);
        }

        goto LABEL_139;
      case 0x17u:
        int v56 = operator new(0x38uLL);
        *(void *)int v56 = &off_10189DA68;
        v56[13] = 0;
        int v74 = *(void *)(a1 + 168);
        *(void *)(a1 + 16_Block_object_dispose((const void *)(v30 - 184), 8) = v56;
        if (v74)
        {
          (*(void (**)(uint64_t))(*(void *)v74 + 8LL))(v74);
          int v56 = *(_DWORD **)(a1 + 168);
        }

        goto LABEL_139;
      case 0x18u:
        int v56 = operator new(0xE0uLL);
        *(void *)int v56 = &off_10189DAD8;
        v56[54] = 0;
        unint64_t v75 = *(void *)(a1 + 160);
        *(void *)(a1 + 16sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v56;
        if (v75)
        {
          (*(void (**)(uint64_t))(*(void *)v75 + 8LL))(v75);
          int v56 = *(_DWORD **)(a1 + 160);
        }

        goto LABEL_139;
      case 0x19u:
        *(_DWORD *)(a1 + 244) |= 0x100000u;
        int v76 = *((void *)this + 1);
        if (v76 >= *((void *)this + 2))
        {
          BOOL v79 = 0;
          *((_BYTE *)this + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 1;
        }

        else
        {
          int v77 = v76 + 1;
          int v78 = *(unsigned __int8 *)(*(void *)this + v76);
          *((void *)this + 1) = v77;
          BOOL v79 = v78 != 0;
        }

        *(_BYTE *)(a1 + 236) = v79;
        goto LABEL_203;
      case 0x1Au:
        int v56 = operator new(0x30uLL);
        *(void *)int v56 = &off_10189D988;
        v56[10] = 0;
        __int128 v80 = *(void *)(a1 + 88);
        *(void *)(a1 + sub_1011C52D0(v16 - 88) = v56;
        if (v80)
        {
          (*(void (**)(uint64_t))(*(void *)v80 + 8LL))(v80);
          int v56 = *(_DWORD **)(a1 + 88);
        }

        goto LABEL_139;
      case 0x1Bu:
        *(_DWORD *)(a1 + 244) |= 1u;
        __int128 v81 = *((void *)this + 1);
        if (v81 > 0xFFFFFFFFFFFFFFF7LL || v81 + 8 > *((void *)this + 2)) {
          goto LABEL_134;
        }
        *(void *)(a1 + _Block_object_dispose((const void *)(v30 - 184), 8) = *(void *)(*(void *)this + v81);
        goto LABEL_185;
      case 0x1Cu:
        *(_DWORD *)(a1 + 244) |= 8u;
        __int128 v82 = *((void *)this + 1);
        if (v82 > 0xFFFFFFFFFFFFFFF7LL || v82 + 8 > *((void *)this + 2)) {
          goto LABEL_134;
        }
        *(void *)(a1 + 32) = *(void *)(*(void *)this + v82);
        goto LABEL_185;
      case 0x1Du:
        *(_DWORD *)(a1 + 244) |= 0x20000u;
        __int128 v83 = *((void *)this + 1);
        if (v83 > 0xFFFFFFFFFFFFFFFBLL || v83 + 4 > *((void *)this + 2)) {
          goto LABEL_134;
        }
        *(_DWORD *)(a1 + 2sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = *(_DWORD *)(*(void *)this + v83);
LABEL_100:
        int v84 = *((void *)this + 1) + 4LL;
        goto LABEL_186;
      case 0x1Eu:
        *(_DWORD *)(a1 + 244) |= 0x1000000u;
        int v85 = *((void *)this + 1);
        if (v85 >= *((void *)this + 2))
        {
          __int128 v88 = 0;
          *((_BYTE *)this + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 1;
        }

        else
        {
          int v86 = v85 + 1;
          int v87 = *(unsigned __int8 *)(*(void *)this + v85);
          *((void *)this + 1) = v86;
          __int128 v88 = v87 != 0;
        }

        *(_BYTE *)(a1 + 24sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v88;
        goto LABEL_203;
      case 0x1Fu:
        *(_DWORD *)(a1 + 244) |= 0x1000u;
        __int128 v89 = *((void *)this + 1);
        if (v89 > 0xFFFFFFFFFFFFFFF7LL || v89 + 8 > *((void *)this + 2)) {
          goto LABEL_134;
        }
        *(void *)(a1 + 20sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(void *)(*(void *)this + v89);
        goto LABEL_185;
      case 0x20u:
        *(_DWORD *)(a1 + 244) |= 0x40u;
        __int128 v90 = *((void *)this + 1);
        if (v90 > 0xFFFFFFFFFFFFFFF7LL || v90 + 8 > *((void *)this + 2)) {
          goto LABEL_134;
        }
        *(void *)(a1 + 56) = *(void *)(*(void *)this + v90);
        goto LABEL_185;
      case 0x21u:
        *(_DWORD *)(a1 + 244) |= 2u;
        __int128 v91 = *((void *)this + 1);
        if (v91 > 0xFFFFFFFFFFFFFFF7LL || v91 + 8 > *((void *)this + 2)) {
          goto LABEL_134;
        }
        *(void *)(a1 + 16) = *(void *)(*(void *)this + v91);
        goto LABEL_185;
      case 0x22u:
        *(_DWORD *)(a1 + 244) |= 0x10u;
        int64_t v92 = *((void *)this + 1);
        if (v92 > 0xFFFFFFFFFFFFFFF7LL || v92 + 8 > *((void *)this + 2)) {
          goto LABEL_134;
        }
        *(void *)(a1 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(void *)(*(void *)this + v92);
        goto LABEL_185;
      case 0x23u:
        *(_DWORD *)(a1 + 244) |= 0x4000u;
        uint64_t v93 = *((void *)this + 1);
        BOOL v94 = *((void *)this + 2);
        uint64_t v95 = *(void *)this;
        if (v93 <= 0xFFFFFFFFFFFFFFF5LL && v93 + 10 <= v94)
        {
          unint64_t v96 = 0;
          unint64_t v97 = 0;
          int v98 = 0LL;
          do
          {
            int v99 = v93 + 1;
            *((void *)this + 1) = v93 + 1;
            int v100 = *(_BYTE *)(v95 + v93);
            v98 |= (unint64_t)(v100 & 0x7F) << v96;
            if ((v100 & 0x80) == 0) {
              goto LABEL_198;
            }
            v96 += 7;
            uint64_t v93 = v99;
            uint64_t v14 = v97++ > 8;
          }

          while (!v14);
LABEL_176:
          LODWORD(v9_Block_object_dispose((const void *)(v30 - 184), 8) = 0;
          goto LABEL_198;
        }

        int v121 = 0;
        int v122 = 0;
        int v98 = 0LL;
        if (v94 <= v93) {
          BOOL v94 = *((void *)this + 1);
        }
        while (2)
        {
          if (v94 == v93)
          {
            LODWORD(v9_Block_object_dispose((const void *)(v30 - 184), 8) = 0;
            *((_BYTE *)this + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 1;
          }

          else
          {
            int v123 = v93 + 1;
            unint64_t v124 = *(_BYTE *)(v95 + v93);
            *((void *)this + 1) = v123;
            v98 |= (unint64_t)(v124 & 0x7F) << v121;
            if (v124 < 0)
            {
              v121 += 7;
              uint64_t v93 = v123;
              uint64_t v14 = v122++ > 8;
              if (v14) {
                goto LABEL_176;
              }
              continue;
            }

            if (*((_BYTE *)this + 24)) {
              LODWORD(v9_Block_object_dispose((const void *)(v30 - 184), 8) = 0;
            }
          }

          break;
        }

LABEL_219:
                if (v142-- <= 2) {
                  return;
                }
              }
            }
          }
        }

        unint64_t v12 = (unint64_t)v11 >> 1;
        uint64_t v13 = (_OWORD *)(i + 96 * ((unint64_t)v11 >> 1));
        if ((unint64_t)v10 <= 0x3000)
        {
          sub_1003FB074(a1 + 96 * v12, a1, (uint64_t)(a2 - 6));
        }

        else
        {
          sub_1003FB074(a1, a1 + 96 * v12, (uint64_t)(a2 - 6));
          uint64_t v14 = 3 * v12;
          uint64_t v15 = a1 + 96 * v12 - 96;
          sub_1003FB074(a1 + 96, v15, (uint64_t)(a2 - 12));
          uint64_t v16 = a1 + 96 + 32 * v14;
          sub_1003FB074(a1 + 192, v16, (uint64_t)(a2 - 18));
          sub_1003FB074(v15, (uint64_t)v13, v16);
          __int128 v225 = *(_OWORD *)a1;
          __int128 v233 = *(_OWORD *)(a1 + 16);
          *(_OWORD *)__int16 v248 = *(_OWORD *)(a1 + 64);
          *(_OWORD *)&v248[16] = *(_OWORD *)(a1 + 80);
          __int128 v238 = *(_OWORD *)(a1 + 32);
          __int128 v243 = *(_OWORD *)(a1 + 48);
          __int128 v18 = v13[3];
          __int128 v17 = v13[4];
          __int128 v19 = v13[2];
          *(_OWORD *)(a1 + 73) = *(_OWORD *)((char *)v13 + 73);
          *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v18;
          *(_OWORD *)(a1 + 64) = v17;
          *(_OWORD *)(a1 + 32) = v19;
          __int128 v20 = v13[1];
          *(_OWORD *)a1 = *v13;
          *(_OWORD *)(a1 + 16) = v20;
          *uint64_t v13 = v225;
          v13[1] = v233;
          *(_OWORD *)((char *)v13 + 73) = *(_OWORD *)&v248[9];
          v13[3] = v243;
          void v13[4] = *(_OWORD *)v248;
          void v13[2] = v238;
        }

        --a3;
        if ((a4 & 1) == 0)
        {
          int v21 = *(_DWORD *)(a1 - 40);
          int v22 = *(_DWORD *)(a1 + 56);
          if (v21 > v22)
          {
            int v21 = *(_DWORD *)(a1 + 56);
            goto LABEL_17;
          }

          if (v21 == v22)
          {
            int v23 = *(_DWORD *)(a1 - 72);
            int v56 = *(_DWORD *)(a1 + 24);
            if (v23 > v56) {
              goto LABEL_17;
            }
            if (v23 == v56)
            {
              int v56 = *(_DWORD *)(a1 - 72);
            }
          }

          else
          {
            int v56 = *(_DWORD *)(a1 + 24);
          }

          uint64_t v223 = *(void *)(a1 + 16);
          __int128 v214 = *(_OWORD *)a1;
          int v211 = *(_DWORD *)(a1 + 36);
          uint64_t v208 = *(void *)(a1 + 28);
          double v57 = *(double *)(a1 + 40);
          uint64_t v58 = *(void *)(a1 + 48);
          *(_OWORD *)__int128 v199 = *(_OWORD *)(a1 + 60);
          *(_OWORD *)&v199[16] = *(_OWORD *)(a1 + 76);
          int v59 = *((_DWORD *)a2 - 10);
          if (v22 > v59
            || v22 == v59 && ((int v66 = *((_DWORD *)a2 - 18), v56 > v66) || v56 == v66 && v57 < *((double *)a2 - 7)))
          {
            unint64_t i = a1 + 96;
            int v60 = *(_DWORD *)(a1 + 152);
            if (v22 <= v60)
            {
              uint64_t v61 = a1 + 136;
              do
              {
                if (v22 == v60)
                {
                  int v62 = *(_DWORD *)(v61 - 16);
                  if (v56 > v62) {
                    goto LABEL_81;
                  }
                }

                i += 96LL;
                int v60 = *(_DWORD *)(v61 + 112);
                v61 += 96LL;
              }

              while (v22 <= v60);
              unint64_t i = v61 - 40;
            }
          }

          else
          {
            for (unint64_t i = a1 + 96; i < (unint64_t)a2; i += 96LL)
            {
              int v67 = *(_DWORD *)(i + 56);
              if (v22 > v67) {
                break;
              }
              if (v22 == v67)
              {
                int v68 = *(_DWORD *)(i + 24);
              }
            }
          }

                if (v146-- <= 2) {
                  return;
                }
              }
            }
          }
        }

        unint64_t v12 = (unint64_t)v11 >> 1;
        uint64_t v13 = (_OWORD *)(i + 96 * ((unint64_t)v11 >> 1));
        if ((unint64_t)v10 <= 0x3000)
        {
          sub_1003FCB00(a1 + 96 * v12, a1, (uint64_t)(a2 - 6));
        }

        else
        {
          sub_1003FCB00(a1, a1 + 96 * v12, (uint64_t)(a2 - 6));
          uint64_t v14 = 3 * v12;
          uint64_t v15 = a1 + 96 * v12 - 96;
          sub_1003FCB00(a1 + 96, v15, (uint64_t)(a2 - 12));
          uint64_t v16 = a1 + 96 + 32 * v14;
          sub_1003FCB00(a1 + 192, v16, (uint64_t)(a2 - 18));
          sub_1003FCB00(v15, (uint64_t)v13, v16);
          int v221 = *(_OWORD *)a1;
          v229 = *(_OWORD *)(a1 + 16);
          *(_OWORD *)__int128 v244 = *(_OWORD *)(a1 + 64);
          *(_OWORD *)&v244[16] = *(_OWORD *)(a1 + 80);
          __int128 v234 = *(_OWORD *)(a1 + 32);
          __int128 v239 = *(_OWORD *)(a1 + 48);
          __int128 v18 = v13[3];
          __int128 v17 = v13[4];
          __int128 v19 = v13[2];
          *(_OWORD *)(a1 + 73) = *(_OWORD *)((char *)v13 + 73);
          *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v18;
          *(_OWORD *)(a1 + 64) = v17;
          *(_OWORD *)(a1 + 32) = v19;
          __int128 v20 = v13[1];
          *(_OWORD *)a1 = *v13;
          *(_OWORD *)(a1 + 16) = v20;
          *uint64_t v13 = v221;
          v13[1] = v229;
          *(_OWORD *)((char *)v13 + 73) = *(_OWORD *)&v244[9];
          v13[3] = v239;
          void v13[4] = *(_OWORD *)v244;
          void v13[2] = v234;
        }

        --a3;
        if ((a4 & 1) == 0)
        {
          int v21 = *(_DWORD *)(a1 - 40);
          int v22 = *(_DWORD *)(a1 + 56);
          if (v21 > v22)
          {
            int v21 = *(_DWORD *)(a1 + 56);
            goto LABEL_17;
          }

          if (v21 == v22)
          {
            int v23 = *(_DWORD *)(a1 - 72);
            BOOL v55 = *(_DWORD *)(a1 + 24);
            if (v23 > v55) {
              goto LABEL_17;
            }
            if (v23 == v55)
            {
              BOOL v55 = *(_DWORD *)(a1 - 72);
            }
          }

          else
          {
            BOOL v55 = *(_DWORD *)(a1 + 24);
          }

          int v219 = *(void *)(a1 + 16);
          int v56 = *(_DWORD *)(a1 + 28);
          double v57 = *(double *)(a1 + 32);
          int v210 = *(_OWORD *)(a1 + 40);
          __int128 v213 = *(_OWORD *)a1;
          *(_OWORD *)__int128 v201 = *(_OWORD *)(a1 + 60);
          *(_OWORD *)&v201[16] = *(_OWORD *)(a1 + 76);
          uint64_t v58 = *((_DWORD *)a2 - 10);
          if (v22 > v58
            || v22 == v58 && ((int v65 = *((_DWORD *)a2 - 18), v55 > v65) || v55 == v65 && v57 < *((double *)a2 - 8)))
          {
            unint64_t i = a1 + 96;
            int v59 = *(_DWORD *)(a1 + 152);
            if (v22 <= v59)
            {
              int v60 = a1 + 128;
              do
              {
                if (v22 == v59)
                {
                  uint64_t v61 = *(_DWORD *)(v60 - 8);
                  if (v55 > v61) {
                    goto LABEL_81;
                  }
                }

                i += 96LL;
                int v59 = *(_DWORD *)(v60 + 120);
                v60 += 96LL;
              }

              while (v22 <= v59);
              unint64_t i = v60 - 32;
            }
          }

          else
          {
            for (unint64_t i = a1 + 96; i < (unint64_t)a2; i += 96LL)
            {
              int v66 = *(_DWORD *)(i + 56);
              if (v22 > v66) {
                break;
              }
              if (v22 == v66)
              {
                int v67 = *(_DWORD *)(i + 24);
              }
            }
          }

          *(_DWORD *)(a1 + sub_1011C52D0(v16 - 88) = v66;
          goto LABEL_274;
        case 7u:
          *(_WORD *)(a1 + 104) |= 2u;
          __int128 v69 = *((void *)this + 1);
          __int128 v70 = *((void *)this + 2);
          __int128 v71 = *(void *)this;
          if (v69 <= 0xFFFFFFFFFFFFFFF5LL && v69 + 10 <= v70)
          {
            __int128 v72 = 0;
            unint64_t v73 = 0;
            int v74 = 0LL;
            do
            {
              unint64_t v75 = v69 + 1;
              *((void *)this + 1) = v69 + 1;
              int v76 = *(_BYTE *)(v71 + v69);
              v74 |= (unint64_t)(v76 & 0x7F) << v72;
              if ((v76 & 0x80) == 0) {
                goto LABEL_222;
              }
              v72 += 7;
              __int128 v69 = v75;
              int v47 = v73++ > 8;
            }

            while (!v47);
LABEL_180:
            int v74 = 0LL;
            goto LABEL_222;
          }

          int v121 = 0;
          int v122 = 0;
          int v74 = 0LL;
          if (v70 <= v69) {
            __int128 v70 = *((void *)this + 1);
          }
          while (2)
          {
            if (v70 == v69)
            {
              int v74 = 0LL;
              *((_BYTE *)this + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 1;
            }

            else
            {
              int v123 = v69 + 1;
              unint64_t v124 = *(_BYTE *)(v71 + v69);
              *((void *)this + 1) = v123;
              v74 |= (unint64_t)(v124 & 0x7F) << v121;
              if (v124 < 0)
              {
                v121 += 7;
                __int128 v69 = v123;
                int v47 = v122++ > 8;
                if (v47) {
                  goto LABEL_180;
                }
                continue;
              }

              if (*((_BYTE *)this + 24)) {
                int v74 = 0LL;
              }
            }

            break;
          }

          *(_DWORD *)(a1 + 64) = v74;
          goto LABEL_207;
        case 0x28u:
          *(void *)(a1 + 188) |= (unint64_t)&_mh_execute_header;
          int v77 = *((void *)this + 1);
          if (v77 > 0xFFFFFFFFFFFFFFFBLL || v77 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 14sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(_DWORD *)(*(void *)this + v77);
          goto LABEL_205;
        case 0x29u:
          *(void *)(a1 + 188) |= 0x200000000uLL;
          int v78 = *((void *)this + 1);
          if (v78 > 0xFFFFFFFFFFFFFFFBLL || v78 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 1memset(v19, 0, 44) = *(_DWORD *)(*(void *)this + v78);
          goto LABEL_205;
        case 0x2Au:
          *(void *)(a1 + 188) |= 0x1000000000000uLL;
          BOOL v79 = *((void *)this + 1);
          if (v79 >= *((void *)this + 2))
          {
            __int128 v82 = 0;
            *((_BYTE *)this + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 1;
          }

          else
          {
            __int128 v80 = v79 + 1;
            __int128 v81 = *(unsigned __int8 *)(*(void *)this + v79);
            *((void *)this + 1) = v80;
            __int128 v82 = v81 != 0;
          }

          *(_BYTE *)(a1 + 186) = v82;
          goto LABEL_207;
        case 0x2Bu:
          *(void *)(a1 + 188) |= 0x80000000000uLL;
          __int128 v83 = *((void *)this + 1);
          if (v83 >= *((void *)this + 2))
          {
            int v86 = 0;
            *((_BYTE *)this + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 1;
          }

          else
          {
            int v84 = v83 + 1;
            int v85 = *(unsigned __int8 *)(*(void *)this + v83);
            *((void *)this + 1) = v84;
            int v86 = v85 != 0;
          }

          *(_BYTE *)(a1 + 181) = v86;
          goto LABEL_207;
        case 0x2Cu:
          *(void *)(a1 + 188) |= 0x40000000000uLL;
          int v87 = *((void *)this + 1);
          if (v87 >= *((void *)this + 2))
          {
            __int128 v90 = 0;
            *((_BYTE *)this + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 1;
          }

          else
          {
            __int128 v88 = v87 + 1;
            __int128 v89 = *(unsigned __int8 *)(*(void *)this + v87);
            *((void *)this + 1) = v88;
            __int128 v90 = v89 != 0;
          }

          *(_BYTE *)(a1 + 18sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v90;
          goto LABEL_207;
        case 0x2Du:
          *(void *)(a1 + 188) |= 0x20000000uLL;
          __int128 v91 = *((void *)this + 1);
          if (v91 > 0xFFFFFFFFFFFFFFFBLL || v91 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 12_Block_object_dispose((const void *)(v30 - 184), 8) = *(_DWORD *)(*(void *)this + v91);
          goto LABEL_205;
        case 0x2Eu:
          *(void *)(a1 + 188) |= 0x20000000000uLL;
          int64_t v92 = *((void *)this + 1);
          if (v92 > 0xFFFFFFFFFFFFFFFBLL || v92 + 4 > *((void *)this + 2)) {
            goto LABEL_162;
          }
          *(_DWORD *)(a1 + 176) = *(_DWORD *)(*(void *)this + v92);
          goto LABEL_205;
        case 0x2Fu:
          *(void *)(a1 + 188) |= 0x10000000000uLL;
          uint64_t v93 = *((void *)this + 1);
          if (v93 <= 0xFFFFFFFFFFFFFFFBLL && v93 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 1sub_10000AE14(v1 - 72) = *(_DWORD *)(*(void *)this + v93);
LABEL_205:
            int v21 = *((void *)this + 1) + 4LL;
LABEL_206:
            *((void *)this + 1) = v21;
          }

          else
          {
LABEL_162:
            *((_BYTE *)this + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 1;
          }

          goto LABEL_207;
        case 0x30u:
          *(void *)(a1 + 188) |= 0x100000uLL;
          BOOL v94 = *((void *)this + 1);
          uint64_t v95 = *((void *)this + 2);
          unint64_t v96 = *(void *)this;
          if (v94 <= 0xFFFFFFFFFFFFFFF5LL && v94 + 10 <= v95)
          {
            unint64_t v97 = 0;
            int v98 = 0;
            int v99 = 0LL;
            do
            {
              int v100 = v94 + 1;
              *((void *)this + 1) = v94 + 1;
              int v101 = *(_BYTE *)(v96 + v94);
              v99 |= (unint64_t)(v101 & 0x7F) << v97;
              if ((v101 & 0x80) == 0) {
                goto LABEL_216;
              }
              v97 += 7;
              BOOL v94 = v100;
              uint64_t v14 = v98++ > 8;
            }

            while (!v14);
LABEL_199:
            LODWORD(v99) = 0;
            goto LABEL_216;
          }

          int64_t v114 = 0;
          int64_t v115 = 0;
          int v99 = 0LL;
          if (v95 <= v94) {
            uint64_t v95 = *((void *)this + 1);
          }
          break;
        case 0x31u:
          *(void *)(a1 + 188) |= 0x800000000000uLL;
          double v102 = *((void *)this + 1);
          if (v102 >= *((void *)this + 2))
          {
            __int128 v105 = 0;
            *((_BYTE *)this + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 1;
          }

          else
          {
            uint64_t v103 = v102 + 1;
            __int128 v104 = *(unsigned __int8 *)(*(void *)this + v102);
            *((void *)this + 1) = v103;
            __int128 v105 = v104 != 0;
          }

          *(_BYTE *)(a1 + 185) = v105;
          goto LABEL_207;
        case 0x32u:
          *(void *)(a1 + 188) |= 0x2000000000000uLL;
          unint64_t v106 = *((void *)this + 1);
          if (v106 >= *((void *)this + 2))
          {
            int v109 = 0;
            *((_BYTE *)this + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 1;
          }

          else
          {
            uint64_t v107 = v106 + 1;
            unint64_t v108 = *(unsigned __int8 *)(*(void *)this + v106);
            *((void *)this + 1) = v107;
            int v109 = v108 != 0;
          }

          *(_BYTE *)(a1 + 187) = v109;
          goto LABEL_207;
        default:
          double result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
          if (!(_DWORD)result) {
            return result;
          }
          goto LABEL_207;
      }

      while (1)
      {
        if (v95 == v94)
        {
          LODWORD(v99) = 0;
          *((_BYTE *)this + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 1;
          goto LABEL_216;
        }

        uint64_t v116 = v94 + 1;
        unint64_t v117 = *(_BYTE *)(v96 + v94);
        *((void *)this + 1) = v116;
        v99 |= (unint64_t)(v117 & 0x7F) << v114;
        if ((v117 & 0x80) == 0) {
          break;
        }
        v114 += 7;
        BOOL v94 = v116;
        uint64_t v14 = v115++ > 8;
        if (v14) {
          goto LABEL_199;
        }
      }

      if (*((_BYTE *)this + 24)) {
        LODWORD(v99) = 0;
      }
LABEL_216:
      *(_DWORD *)(a1 + 92) = v99;
LABEL_207:
      uint64_t v2 = *((void *)this + 1);
      uint64_t v3 = *((void *)this + 2);
      uint64_t v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }

    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v11 = 0LL;
    if (v2 > v3) {
      uint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      __int128 v17 = v2 + 1;
      __int128 v18 = *(_BYTE *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      uint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        uint64_t v11 = 0LL;
        goto LABEL_20;
      }
    }

    uint64_t v4 = 1;
    *((_BYTE *)this + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 1;
  }

  return v4 == 0;
}

    *(_BYTE *)(a1 + 232) = *(_BYTE *)(v105 + 64);
    if (v4 != v2) {
      goto LABEL_220;
    }
LABEL_242:
    *(void *)(a1 + 24_Block_object_dispose((const void *)(v30 - 184), 8) = *(void *)(v1 + 80);
    goto LABEL_243;
  }

  *(_BYTE *)(a1 + 232) = *(_BYTE *)(v105 + 64);
LABEL_220:
  int v110 = *(double *)(v1 + 176);
  __int128 v111 = *(double *)(v1 + 80);
  if (v110 >= v111) {
    __int128 v112 = v1 + 96;
  }
  else {
    __int128 v112 = v1;
  }
  if (v106 == v2)
  {
    *(void *)(a1 + 24_Block_object_dispose((const void *)(v30 - 184), 8) = *(void *)(v112 + 80);
LABEL_280:
    int v151 = *(double *)(v1 + 168);
    int v152 = *(double *)(v1 + 72);
    if (v151 >= v152) {
      unint64_t v124 = v1 + 96;
    }
    else {
      unint64_t v124 = v1;
    }
    if (v106 != v2)
    {
      if (v151 >= v152) {
        uint64_t v4 = v1;
      }
      __int128 v153 = v1;
      while (1)
      {
        __int128 v154 = v106;
        __int128 v155 = v106 + 96;
        if (v155 == v2) {
          break;
        }
        __int128 v156 = v153 + 288;
        __int128 v157 = *(double *)(v154 + 168);
        __int128 v158 = *(double *)(v154 + 72);
        __int128 v159 = *(double *)(v4 + 72);
        __int128 v160 = *(double *)(v124 + 72);
        if (v158 >= v159) {
          uint64_t v161 = v4;
        }
        else {
          uint64_t v161 = v154;
        }
        if (v157 < v160) {
          __int128 v156 = v124;
        }
        if (v157 < v159) {
          uint64_t v4 = v155;
        }
        if (v158 >= v160) {
          unint64_t v162 = v154;
        }
        else {
          unint64_t v162 = v124;
        }
        if (v157 < v158)
        {
          unint64_t v124 = v162;
        }

        else
        {
          uint64_t v4 = v161;
          unint64_t v124 = v156;
        }

        unint64_t v106 = v154 + 192;
        __int128 v153 = v154;
        if (v154 + 192 == v2) {
          goto LABEL_244;
        }
      }

      unint64_t v163 = *(double *)(v154 + 72);
    }

    goto LABEL_244;
  }

  if (v110 >= v111) {
    int64_t v113 = v1;
  }
  else {
    int64_t v113 = v1 + 96;
  }
  int64_t v114 = v1 + 192;
  int64_t v115 = v1;
  while (1)
  {
    uint64_t v116 = v114;
    unint64_t v117 = v114 + 96;
    if (v117 == v2) {
      break;
    }
    int v118 = v115 + 288;
    int v119 = *(double *)(v116 + 176);
    int v120 = *(double *)(v116 + 80);
    int v121 = *(double *)(v113 + 80);
    int v122 = *(double *)(v112 + 80);
    if (v120 >= v121) {
      int v123 = v113;
    }
    else {
      int v123 = v116;
    }
    if (v119 < v122) {
      int v118 = v112;
    }
    if (v119 < v121) {
      int64_t v113 = v117;
    }
    if (v120 >= v122) {
      __int128 v112 = v116;
    }
    if (v119 >= v120)
    {
      int64_t v113 = v123;
      __int128 v112 = v118;
    }

    int64_t v114 = v116 + 192;
    int64_t v115 = v116;
    if (v116 + 192 == v2) {
      goto LABEL_279;
    }
  }

  int v150 = *(double *)(v116 + 80);
LABEL_279:
  *(void *)(a1 + 24_Block_object_dispose((const void *)(v30 - 184), 8) = *(void *)(v112 + 80);
  if (v4 != v2) {
    goto LABEL_280;
  }
LABEL_243:
  unint64_t v124 = v1;
LABEL_244:
  *(void *)(a1 + 24sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(void *)(v124 + 72);
  int v125 = (unsigned __int128)((v2 - v1) * (__int128)0x2AAAAAAAAAAAAAABLL) >> 64;
  int v126 = (v125 >> 4) + ((unint64_t)v125 >> 63);
  if (v126 <= 1) {
    int v126 = 1LL;
  }
  double v127 = (int *)(v1 + 24);
  uint64_t v128 = -1;
  do
  {
    __int128 v130 = *v127;
    v127 += 24;
    __int128 v129 = v130;
    if (v130 == 1 || v128 == 1)
    {
      uint64_t v128 = 1;
LABEL_265:
      *(_DWORD *)(a1 + 192) = v128;
      goto LABEL_266;
    }

    if (v129) {
      __int128 v132 = v128 == 0;
    }
    else {
      __int128 v132 = 1;
    }
    if (v132)
    {
      uint64_t v128 = 0;
      goto LABEL_265;
    }

    if (v129 == 2 || v128 == 2)
    {
      uint64_t v128 = 2;
      goto LABEL_265;
    }

double sub_1003FADE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)&double result = sub_1003FB64C(a1, a2, a3, a4).n128_u64[0];
  int v11 = *(_DWORD *)(a5 + 56);
  int v12 = *(_DWORD *)(a4 + 56);
  if (v11 > v12
    || v11 == v12
    && ((v41 = *(_DWORD *)(a5 + 24), int v42 = *(_DWORD *)(a4 + 24), v41 > v42)
     || v41 == v42 && (double result = *(double *)(a5 + 40), result < *(double *)(a4 + 40))))
  {
    __int128 v51 = *(_OWORD *)(a4 + 32);
    __int128 v55 = *(_OWORD *)(a4 + 48);
    *(_OWORD *)int v59 = *(_OWORD *)(a4 + 64);
    *(_OWORD *)&v59[16] = *(_OWORD *)(a4 + 80);
    __int128 v43 = *(_OWORD *)a4;
    __int128 v47 = *(_OWORD *)(a4 + 16);
    __int128 v13 = *(_OWORD *)(a5 + 16);
    *(_OWORD *)a4 = *(_OWORD *)a5;
    *(_OWORD *)(a4 + 16) = v13;
    __int128 v15 = *(_OWORD *)(a5 + 48);
    __int128 v14 = *(_OWORD *)(a5 + 64);
    __int128 v16 = *(_OWORD *)(a5 + 32);
    *(_OWORD *)(a4 + 73) = *(_OWORD *)(a5 + 73);
    *(_OWORD *)(a4 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v15;
    *(_OWORD *)(a4 + 64) = v14;
    *(_OWORD *)(a4 + 32) = v16;
    *(_OWORD *)(a5 + 64) = *(_OWORD *)v59;
    *(_OWORD *)(a5 + 73) = *(_OWORD *)&v59[9];
    *(_OWORD *)(a5 + 32) = v51;
    *(_OWORD *)(a5 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v55;
    double result = *(double *)&v43;
    *(_OWORD *)a5 = v43;
    *(_OWORD *)(a5 + 16) = v47;
    int v17 = *(_DWORD *)(a4 + 56);
    int v18 = *(_DWORD *)(a3 + 56);
    if (v17 > v18
      || v17 == v18
      && ((v19 = *(_DWORD *)(a4 + 24), int v20 = *(_DWORD *)(a3 + 24), v19 > v20)
       || v19 == v20 && (double result = *(double *)(a4 + 40), result < *(double *)(a3 + 40))))
    {
      __int128 v52 = *(_OWORD *)(a3 + 32);
      __int128 v56 = *(_OWORD *)(a3 + 48);
      *(_OWORD *)int v60 = *(_OWORD *)(a3 + 64);
      *(_OWORD *)&v60[16] = *(_OWORD *)(a3 + 80);
      __int128 v44 = *(_OWORD *)a3;
      __int128 v48 = *(_OWORD *)(a3 + 16);
      __int128 v21 = *(_OWORD *)(a4 + 16);
      *(_OWORD *)a3 = *(_OWORD *)a4;
      *(_OWORD *)(a3 + 16) = v21;
      __int128 v23 = *(_OWORD *)(a4 + 48);
      __int128 v22 = *(_OWORD *)(a4 + 64);
      __int128 v24 = *(_OWORD *)(a4 + 32);
      *(_OWORD *)(a3 + 73) = *(_OWORD *)(a4 + 73);
      *(_OWORD *)(a3 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v23;
      *(_OWORD *)(a3 + 64) = v22;
      *(_OWORD *)(a3 + 32) = v24;
      *(_OWORD *)(a4 + 64) = *(_OWORD *)v60;
      *(_OWORD *)(a4 + 73) = *(_OWORD *)&v60[9];
      *(_OWORD *)(a4 + 32) = v52;
      *(_OWORD *)(a4 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v56;
      double result = *(double *)&v44;
      *(_OWORD *)a4 = v44;
      *(_OWORD *)(a4 + 16) = v48;
      int v25 = *(_DWORD *)(a3 + 56);
      int v26 = *(_DWORD *)(a2 + 56);
      if (v25 > v26
        || v25 == v26
        && ((v27 = *(_DWORD *)(a3 + 24), int v28 = *(_DWORD *)(a2 + 24), v27 > v28)
         || v27 == v28 && (double result = *(double *)(a3 + 40), result < *(double *)(a2 + 40))))
      {
        __int128 v53 = *(_OWORD *)(a2 + 32);
        __int128 v57 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)uint64_t v61 = *(_OWORD *)(a2 + 64);
        *(_OWORD *)&v61[16] = *(_OWORD *)(a2 + 80);
        __int128 v45 = *(_OWORD *)a2;
        __int128 v49 = *(_OWORD *)(a2 + 16);
        __int128 v29 = *(_OWORD *)(a3 + 16);
        *(_OWORD *)a2 = *(_OWORD *)a3;
        *(_OWORD *)(a2 + 16) = v29;
        __int128 v31 = *(_OWORD *)(a3 + 48);
        __int128 v30 = *(_OWORD *)(a3 + 64);
        __int128 v32 = *(_OWORD *)(a3 + 32);
        *(_OWORD *)(a2 + 73) = *(_OWORD *)(a3 + 73);
        *(_OWORD *)(a2 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v31;
        *(_OWORD *)(a2 + 64) = v30;
        *(_OWORD *)(a2 + 32) = v32;
        *(_OWORD *)(a3 + 64) = *(_OWORD *)v61;
        *(_OWORD *)(a3 + 73) = *(_OWORD *)&v61[9];
        *(_OWORD *)(a3 + 32) = v53;
        *(_OWORD *)(a3 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v57;
        double result = *(double *)&v45;
        *(_OWORD *)a3 = v45;
        *(_OWORD *)(a3 + 16) = v49;
        int v33 = *(_DWORD *)(a2 + 56);
        int v34 = *(_DWORD *)(a1 + 56);
        if (v33 > v34
          || v33 == v34
          && ((v35 = *(_DWORD *)(a2 + 24), int v36 = *(_DWORD *)(a1 + 24), v35 > v36)
           || v35 == v36 && (double result = *(double *)(a2 + 40), result < *(double *)(a1 + 40))))
        {
          __int128 v54 = *(_OWORD *)(a1 + 32);
          __int128 v58 = *(_OWORD *)(a1 + 48);
          *(_OWORD *)int v62 = *(_OWORD *)(a1 + 64);
          *(_OWORD *)&v62[16] = *(_OWORD *)(a1 + 80);
          __int128 v46 = *(_OWORD *)a1;
          __int128 v50 = *(_OWORD *)(a1 + 16);
          __int128 v37 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v37;
          __int128 v39 = *(_OWORD *)(a2 + 48);
          __int128 v38 = *(_OWORD *)(a2 + 64);
          __int128 v40 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
          *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v39;
          *(_OWORD *)(a1 + 64) = v38;
          *(_OWORD *)(a1 + 32) = v40;
          *(_OWORD *)(a2 + 64) = *(_OWORD *)v62;
          *(_OWORD *)(a2 + 73) = *(_OWORD *)&v62[9];
          *(_OWORD *)(a2 + 32) = v54;
          *(_OWORD *)(a2 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v58;
          double result = *(double *)&v46;
          *(_OWORD *)a2 = v46;
          *(_OWORD *)(a2 + 16) = v50;
        }
      }
    }
  }

  return result;
}

__n128 sub_1003FB074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(a2 + 56);
  int v4 = *(_DWORD *)(a1 + 56);
  if (v3 > v4
    || v3 == v4
    && ((int v10 = *(_DWORD *)(a2 + 24), v11 = *(_DWORD *)(a1 + 24), v10 > v11)
     || v10 == v11 && (result.n128_u64[0] = *(void *)(a2 + 40), result.n128_f64[0] < *(double *)(a1 + 40))))
  {
    int v5 = *(_DWORD *)(a3 + 56);
    if (v5 > v3
      || v5 == v3
      && ((int v28 = *(_DWORD *)(a3 + 24), v29 = *(_DWORD *)(a2 + 24), v28 > v29)
       || v28 == v29 && *(double *)(a3 + 40) < *(double *)(a2 + 40)))
    {
      __int128 v50 = *(_OWORD *)(a1 + 32);
      __int128 v54 = *(_OWORD *)(a1 + 48);
      *(_OWORD *)__int128 v58 = *(_OWORD *)(a1 + 64);
      *(_OWORD *)&v58[16] = *(_OWORD *)(a1 + 80);
      __n128 v42 = *(__n128 *)a1;
      __int128 v46 = *(_OWORD *)(a1 + 16);
      __int128 v6 = *(_OWORD *)(a3 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a3;
      *(_OWORD *)(a1 + 16) = v6;
      __int128 v8 = *(_OWORD *)(a3 + 48);
      __int128 v7 = *(_OWORD *)(a3 + 64);
      __int128 v9 = *(_OWORD *)(a3 + 32);
      *(_OWORD *)(a1 + 73) = *(_OWORD *)(a3 + 73);
      *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v8;
      *(_OWORD *)(a1 + 64) = v7;
      *(_OWORD *)(a1 + 32) = v9;
    }

    else
    {
      __int128 v53 = *(_OWORD *)(a1 + 32);
      __int128 v57 = *(_OWORD *)(a1 + 48);
      *(_OWORD *)uint64_t v61 = *(_OWORD *)(a1 + 64);
      *(_OWORD *)&v61[16] = *(_OWORD *)(a1 + 80);
      __n128 v45 = *(__n128 *)a1;
      __int128 v49 = *(_OWORD *)(a1 + 16);
      __int128 v30 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v30;
      __int128 v32 = *(_OWORD *)(a2 + 48);
      __int128 v31 = *(_OWORD *)(a2 + 64);
      __int128 v33 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
      *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v32;
      *(_OWORD *)(a1 + 64) = v31;
      *(_OWORD *)(a1 + 32) = v33;
      *(_OWORD *)(a2 + 64) = *(_OWORD *)v61;
      *(_OWORD *)(a2 + 73) = *(_OWORD *)&v61[9];
      *(_OWORD *)(a2 + 32) = v53;
      *(_OWORD *)(a2 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v57;
      __n128 result = v45;
      *(__n128 *)a2 = v45;
      *(_OWORD *)(a2 + 16) = v49;
      int v34 = *(_DWORD *)(a3 + 56);
      int v35 = *(_DWORD *)(a2 + 56);
      if (v34 <= v35)
      {
        if (v34 != v35) {
          return result;
        }
        int v36 = *(_DWORD *)(a3 + 24);
        int v37 = *(_DWORD *)(a2 + 24);
        if (v36 <= v37)
        {
          if (v36 != v37) {
            return result;
          }
          result.n128_u64[0] = *(void *)(a3 + 40);
        }
      }

      __int128 v50 = *(_OWORD *)(a2 + 32);
      __int128 v54 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)__int128 v58 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)&v58[16] = *(_OWORD *)(a2 + 80);
      __n128 v42 = *(__n128 *)a2;
      __int128 v46 = *(_OWORD *)(a2 + 16);
      __int128 v38 = *(_OWORD *)(a3 + 16);
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *(_OWORD *)(a2 + 16) = v38;
      __int128 v40 = *(_OWORD *)(a3 + 48);
      __int128 v39 = *(_OWORD *)(a3 + 64);
      __int128 v41 = *(_OWORD *)(a3 + 32);
      *(_OWORD *)(a2 + 73) = *(_OWORD *)(a3 + 73);
      *(_OWORD *)(a2 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v40;
      *(_OWORD *)(a2 + 64) = v39;
      *(_OWORD *)(a2 + 32) = v41;
    }

    *(_OWORD *)(a3 + 64) = *(_OWORD *)v58;
    *(_OWORD *)(a3 + 73) = *(_OWORD *)&v58[9];
    *(_OWORD *)(a3 + 32) = v50;
    *(_OWORD *)(a3 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v54;
    __n128 result = v42;
    *(__n128 *)a3 = v42;
    *(_OWORD *)(a3 + 16) = v46;
    return result;
  }

  int v13 = *(_DWORD *)(a3 + 56);
  if (v13 > v3
    || v13 == v3
    && ((int v14 = *(_DWORD *)(a3 + 24), v15 = *(_DWORD *)(a2 + 24), v14 > v15)
     || v14 == v15 && (result.n128_u64[0] = *(void *)(a3 + 40), result.n128_f64[0] < *(double *)(a2 + 40))))
  {
    __int128 v51 = *(_OWORD *)(a2 + 32);
    __int128 v55 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)int v59 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)&v59[16] = *(_OWORD *)(a2 + 80);
    __n128 v43 = *(__n128 *)a2;
    __int128 v47 = *(_OWORD *)(a2 + 16);
    __int128 v16 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)a2 = *(_OWORD *)a3;
    *(_OWORD *)(a2 + 16) = v16;
    __int128 v18 = *(_OWORD *)(a3 + 48);
    __int128 v17 = *(_OWORD *)(a3 + 64);
    __int128 v19 = *(_OWORD *)(a3 + 32);
    *(_OWORD *)(a2 + 73) = *(_OWORD *)(a3 + 73);
    *(_OWORD *)(a2 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v18;
    *(_OWORD *)(a2 + 64) = v17;
    *(_OWORD *)(a2 + 32) = v19;
    *(_OWORD *)(a3 + 64) = *(_OWORD *)v59;
    *(_OWORD *)(a3 + 73) = *(_OWORD *)&v59[9];
    *(_OWORD *)(a3 + 32) = v51;
    *(_OWORD *)(a3 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v55;
    __n128 result = v43;
    *(__n128 *)a3 = v43;
    *(_OWORD *)(a3 + 16) = v47;
    int v20 = *(_DWORD *)(a2 + 56);
    int v21 = *(_DWORD *)(a1 + 56);
    if (v20 > v21
      || v20 == v21
      && ((int v22 = *(_DWORD *)(a2 + 24), v23 = *(_DWORD *)(a1 + 24), v22 > v23)
       || v22 == v23 && (result.n128_u64[0] = *(void *)(a2 + 40), result.n128_f64[0] < *(double *)(a1 + 40))))
    {
      __int128 v52 = *(_OWORD *)(a1 + 32);
      __int128 v56 = *(_OWORD *)(a1 + 48);
      *(_OWORD *)int v60 = *(_OWORD *)(a1 + 64);
      *(_OWORD *)&v60[16] = *(_OWORD *)(a1 + 80);
      __n128 v44 = *(__n128 *)a1;
      __int128 v48 = *(_OWORD *)(a1 + 16);
      __int128 v24 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v24;
      __int128 v26 = *(_OWORD *)(a2 + 48);
      __int128 v25 = *(_OWORD *)(a2 + 64);
      __int128 v27 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
      *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v26;
      *(_OWORD *)(a1 + 64) = v25;
      *(_OWORD *)(a1 + 32) = v27;
      *(_OWORD *)(a2 + 64) = *(_OWORD *)v60;
      *(_OWORD *)(a2 + 73) = *(_OWORD *)&v60[9];
      *(_OWORD *)(a2 + 32) = v52;
      *(_OWORD *)(a2 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v56;
      __n128 result = v44;
      *(__n128 *)a2 = v44;
      *(_OWORD *)(a2 + 16) = v48;
    }
  }

  return result;
}

BOOL sub_1003FB330(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a2 - a1) >> 5);
  BOOL result = 1LL;
  switch(v4)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      int v6 = *(_DWORD *)(a2 - 40);
      int v7 = *(_DWORD *)(a1 + 56);
      if (v6 > v7
        || v6 == v7
        && ((int v36 = *(_DWORD *)(a2 - 72), v37 = *(_DWORD *)(a1 + 24), v36 > v37)
         || v36 == v37 && *(double *)(a2 - 56) < *(double *)(a1 + 40)))
      {
        __int128 v8 = (_OWORD *)(a2 - 96);
        __int128 v45 = *(_OWORD *)(a1 + 32);
        __int128 v46 = *(_OWORD *)(a1 + 48);
        *(_OWORD *)__int128 v47 = *(_OWORD *)(a1 + 64);
        *(_OWORD *)&v47[16] = *(_OWORD *)(a1 + 80);
        __int128 v42 = *(_OWORD *)a1;
        __int128 v44 = *(_OWORD *)(a1 + 16);
        __int128 v9 = *(_OWORD *)(a2 - 80);
        *(_OWORD *)a1 = *(_OWORD *)(a2 - 96);
        *(_OWORD *)(a1 + 16) = v9;
        __int128 v11 = *(_OWORD *)(a2 - 48);
        __int128 v10 = *(_OWORD *)(a2 - 32);
        __int128 v12 = *(_OWORD *)(a2 - 64);
        *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 - 23);
        *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v11;
        *(_OWORD *)(a1 + 64) = v10;
        *(_OWORD *)(a1 + 32) = v12;
        void v8[4] = *(_OWORD *)v47;
        *(_OWORD *)((char *)v8 + 73) = *(_OWORD *)&v47[9];
        v8[2] = v45;
        v8[3] = v46;
        *__int128 v8 = v42;
        v8[1] = v44;
      }

      return result;
    case 3uLL:
      sub_1003FB074(a1, a1 + 96, a2 - 96);
      return 1LL;
    case 4uLL:
      sub_1003FB64C(a1, a1 + 96, a1 + 192, a2 - 96);
      return 1LL;
    case 5uLL:
      sub_1003FADE8(a1, a1 + 96, a1 + 192, a1 + 288, a2 - 96);
      return 1LL;
    default:
      uint64_t v13 = a1 + 192;
      sub_1003FB074(a1, a1 + 96, a1 + 192);
      uint64_t v14 = a1 + 288;
      if (a1 + 288 == a2) {
        return 1LL;
      }
      uint64_t v15 = 0LL;
      int v16 = 0;
      break;
  }

  while (1)
  {
    int v17 = *(_DWORD *)(v14 + 56);
    int v18 = *(_DWORD *)(v13 + 56);
    if (v17 > v18) {
      break;
    }
    if (v17 == v18)
    {
      int v19 = *(_DWORD *)(v14 + 24);
      int v35 = *(_DWORD *)(v13 + 24);
    }

__n128 sub_1003FB64C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  result.n128_u64[0] = sub_1003FB074(a1, a2, a3).n128_u64[0];
  int v9 = *(_DWORD *)(a4 + 56);
  int v10 = *(_DWORD *)(a3 + 56);
  if (v9 > v10
    || v9 == v10
    && ((int v11 = *(_DWORD *)(a4 + 24), v12 = *(_DWORD *)(a3 + 24), v11 > v12)
     || v11 == v12 && (result.n128_u64[0] = *(void *)(a4 + 40), result.n128_f64[0] < *(double *)(a3 + 40))))
  {
    __int128 v39 = *(_OWORD *)(a3 + 32);
    __int128 v42 = *(_OWORD *)(a3 + 48);
    *(_OWORD *)__int128 v45 = *(_OWORD *)(a3 + 64);
    *(_OWORD *)&v45[16] = *(_OWORD *)(a3 + 80);
    __n128 v33 = *(__n128 *)a3;
    __int128 v36 = *(_OWORD *)(a3 + 16);
    __int128 v13 = *(_OWORD *)(a4 + 16);
    *(_OWORD *)a3 = *(_OWORD *)a4;
    *(_OWORD *)(a3 + 16) = v13;
    __int128 v15 = *(_OWORD *)(a4 + 48);
    __int128 v14 = *(_OWORD *)(a4 + 64);
    __int128 v16 = *(_OWORD *)(a4 + 32);
    *(_OWORD *)(a3 + 73) = *(_OWORD *)(a4 + 73);
    *(_OWORD *)(a3 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v15;
    *(_OWORD *)(a3 + 64) = v14;
    *(_OWORD *)(a3 + 32) = v16;
    *(_OWORD *)(a4 + 64) = *(_OWORD *)v45;
    *(_OWORD *)(a4 + 73) = *(_OWORD *)&v45[9];
    *(_OWORD *)(a4 + 32) = v39;
    *(_OWORD *)(a4 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v42;
    __n128 result = v33;
    *(__n128 *)a4 = v33;
    *(_OWORD *)(a4 + 16) = v36;
    int v17 = *(_DWORD *)(a3 + 56);
    int v18 = *(_DWORD *)(a2 + 56);
    if (v17 > v18
      || v17 == v18
      && ((v19 = *(_DWORD *)(a3 + 24), int v20 = *(_DWORD *)(a2 + 24), v19 > v20)
       || v19 == v20 && (result.n128_u64[0] = *(void *)(a3 + 40), result.n128_f64[0] < *(double *)(a2 + 40))))
    {
      __int128 v40 = *(_OWORD *)(a2 + 32);
      __int128 v43 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)__int128 v46 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)&v46[16] = *(_OWORD *)(a2 + 80);
      __n128 v34 = *(__n128 *)a2;
      __int128 v37 = *(_OWORD *)(a2 + 16);
      __int128 v21 = *(_OWORD *)(a3 + 16);
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *(_OWORD *)(a2 + 16) = v21;
      __int128 v23 = *(_OWORD *)(a3 + 48);
      __int128 v22 = *(_OWORD *)(a3 + 64);
      __int128 v24 = *(_OWORD *)(a3 + 32);
      *(_OWORD *)(a2 + 73) = *(_OWORD *)(a3 + 73);
      *(_OWORD *)(a2 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v23;
      *(_OWORD *)(a2 + 64) = v22;
      *(_OWORD *)(a2 + 32) = v24;
      *(_OWORD *)(a3 + 64) = *(_OWORD *)v46;
      *(_OWORD *)(a3 + 73) = *(_OWORD *)&v46[9];
      *(_OWORD *)(a3 + 32) = v40;
      *(_OWORD *)(a3 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v43;
      __n128 result = v34;
      *(__n128 *)a3 = v34;
      *(_OWORD *)(a3 + 16) = v37;
      int v25 = *(_DWORD *)(a2 + 56);
      int v26 = *(_DWORD *)(a1 + 56);
      if (v25 > v26
        || v25 == v26
        && ((v27 = *(_DWORD *)(a2 + 24), int v28 = *(_DWORD *)(a1 + 24), v27 > v28)
         || v27 == v28 && (result.n128_u64[0] = *(void *)(a2 + 40), result.n128_f64[0] < *(double *)(a1 + 40))))
      {
        __int128 v41 = *(_OWORD *)(a1 + 32);
        __int128 v44 = *(_OWORD *)(a1 + 48);
        *(_OWORD *)__int128 v47 = *(_OWORD *)(a1 + 64);
        *(_OWORD *)&v47[16] = *(_OWORD *)(a1 + 80);
        __n128 v35 = *(__n128 *)a1;
        __int128 v38 = *(_OWORD *)(a1 + 16);
        __int128 v29 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v29;
        __int128 v31 = *(_OWORD *)(a2 + 48);
        __int128 v30 = *(_OWORD *)(a2 + 64);
        __int128 v32 = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
        *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v31;
        *(_OWORD *)(a1 + 64) = v30;
        *(_OWORD *)(a1 + 32) = v32;
        *(_OWORD *)(a2 + 64) = *(_OWORD *)v47;
        *(_OWORD *)(a2 + 73) = *(_OWORD *)&v47[9];
        *(_OWORD *)(a2 + 32) = v41;
        *(_OWORD *)(a2 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v44;
        __n128 result = v35;
        *(__n128 *)a2 = v35;
        *(_OWORD *)(a2 + 16) = v38;
      }
    }
  }

  return result;
}

void sub_1003FB838(uint64_t a1, _OWORD *a2, uint64_t a3, char a4)
{
LABEL_1:
  __int128 v8 = a2 - 6;
  unint64_t i = a1;
  while (2)
  {
    a1 = i;
    uint64_t v10 = (uint64_t)a2 - i;
    uint64_t v11 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)((uint64_t)a2 - i) >> 5);
    switch(v11)
    {
      case 0LL:
      case 1LL:
        return;
      case 2LL:
        int v83 = *((_DWORD *)a2 - 10);
        int v84 = *(_DWORD *)(i + 56);
        if (v83 > v84
          || v83 == v84
          && ((int v85 = *((_DWORD *)a2 - 18), v86 = *(_DWORD *)(i + 24), v85 > v86)
           || v85 == v86 && *((double *)a2 - 8) < *(double *)(i + 32)))
        {
          __int128 v224 = *(_OWORD *)i;
          __int128 v232 = *(_OWORD *)(i + 16);
          *(_OWORD *)__int128 v247 = *(_OWORD *)(i + 64);
          *(_OWORD *)&v247[16] = *(_OWORD *)(i + 80);
          __int128 v237 = *(_OWORD *)(i + 32);
          __int128 v242 = *(_OWORD *)(i + 48);
          __int128 v88 = *(a2 - 3);
          __int128 v87 = *(a2 - 2);
          __int128 v89 = *(a2 - 4);
          *(_OWORD *)(i + 73) = *(_OWORD *)((char *)a2 - 23);
          *(_OWORD *)(i + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v88;
          *(_OWORD *)(i + 64) = v87;
          *(_OWORD *)(i + 32) = v89;
          __int128 v90 = *(a2 - 5);
          *(_OWORD *)unint64_t i = *v8;
          *(_OWORD *)(i + 16) = v90;
          *__int128 v8 = v224;
          *(a2 - 5) = v232;
          *(_OWORD *)((char *)a2 - 23) = *(_OWORD *)&v247[9];
          *(a2 - 3) = v242;
          *(a2 - 2) = *(_OWORD *)v247;
          *(a2 - 4) = v237;
        }

        return;
      case 3LL:
        sub_1003FCB00(i, i + 96, (uint64_t)(a2 - 6));
        return;
      case 4LL:
        sub_1003FD0C0(i, i + 96, i + 192, (uint64_t)(a2 - 6));
        return;
      case 5LL:
        sub_1003FC874(i, i + 96, i + 192, i + 288, (uint64_t)(a2 - 6));
        return;
      default:
        if (v10 <= 2303)
        {
          __int128 v91 = (_OWORD *)(i + 96);
          BOOL v93 = (_OWORD *)i == a2 || v91 == a2;
          if ((a4 & 1) != 0)
          {
            if (v93) {
              return;
            }
            uint64_t v94 = 0LL;
            unint64_t v95 = i;
            while (1)
            {
              unint64_t v96 = v95;
              unint64_t v95 = (unint64_t)v91;
              int v97 = *(_DWORD *)(v96 + 152);
              int v98 = *(_DWORD *)(v96 + 56);
              if (v97 > v98) {
                break;
              }
              if (v97 == v98)
              {
                int v99 = *(_DWORD *)(v96 + 120);
                int v100 = *(_DWORD *)(v96 + 24);
              }

LABEL_241:
            __int128 v91 = (_OWORD *)(a1 + 96);
            if ((_OWORD *)(a1 + 96) == a2) {
              return;
            }
          }

          int v191 = *(_DWORD *)(v188 + 120);
LABEL_234:
          uint64_t v208 = *(void *)(a1 + 16);
          __int128 v205 = *(_OWORD *)a1;
          int v193 = *(_DWORD *)(v188 + 124);
          double v194 = *(double *)(v188 + 128);
          __int128 v217 = *(_OWORD *)(v188 + 136);
          *(_OWORD *)__int128 v228 = *(_OWORD *)(v188 + 156);
          *(_OWORD *)&v228[16] = *(_OWORD *)(v188 + 172);
          do
          {
            do
            {
              uint64_t v195 = v188;
              __int128 v196 = *(_OWORD *)(v188 + 48);
              *(_OWORD *)(v188 + 12_Block_object_dispose((const void *)(v30 - 184), 8) = *(_OWORD *)(v188 + 32);
              *(_OWORD *)(v188 + 1memset(v19, 0, 44) = v196;
              *(_OWORD *)(v188 + 16sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(_OWORD *)(v188 + 64);
              *(_OWORD *)(v188 + 169) = *(_OWORD *)(v188 + 73);
              __int128 v197 = *(_OWORD *)(v188 + 16);
              *(_OWORD *)(v188 + 96) = *(_OWORD *)v188;
              *(_OWORD *)(v188 + 112) = v197;
              v188 -= 96LL;
              int v198 = *(_DWORD *)(v195 - 40);
            }

            while (v189 > v198);
            if (v189 != v198) {
              break;
            }
            int v199 = *(_DWORD *)(v195 - 72);
          }

          while (v191 > v199 || v191 == v199 && v194 < *(double *)(v195 - 64));
          *(_OWORD *)uint64_t v195 = v205;
          *(void *)(v195 + 16) = v208;
          *(_DWORD *)(v195 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v191;
          *(_DWORD *)(v195 + 2_Block_object_dispose((const void *)(v30 - 184), 8) = v193;
          *(double *)(v195 + 32) = v194;
          *(_OWORD *)(v195 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v217;
          *(_DWORD *)(v195 + 56) = v189;
          *(_OWORD *)(v195 + 6sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(_OWORD *)v228;
          *(_OWORD *)(v195 + 73) = *(_OWORD *)&v228[13];
          goto LABEL_241;
        }

        if (!a3)
        {
          if ((_OWORD *)i == a2) {
            return;
          }
          int64_t v113 = (unint64_t)(v11 - 2) >> 1;
          int64_t v114 = v113;
          while (1)
          {
            int64_t v115 = v114;
            if (v113 >= v114)
            {
              uint64_t v116 = (2 * v114) | 1;
              unint64_t v117 = (_OWORD *)(i + 96 * v116);
              if (2 * v115 + 2 < v11)
              {
                int v118 = *(_DWORD *)(i + 96 * v116 + 56);
                int v119 = *((_DWORD *)v117 + 38);
                if (v118 > v119
                  || v118 == v119
                  && ((int v120 = *(_DWORD *)(i + 96 * v116 + 24), v121 = *((_DWORD *)v117 + 30), v120 > v121)
                   || v120 == v121 && *(double *)(i + 96 * v116 + 32) < *((double *)v117 + 16)))
                {
                  v117 += 6;
                  uint64_t v116 = 2 * v115 + 2;
                }
              }

              int v122 = *((_DWORD *)v117 + 14);
              int v123 = *(_DWORD *)(i + 96 * v115 + 56);
              if (v122 <= v123)
              {
                unint64_t v124 = i + 96 * v115;
                if (v122 != v123)
                {
                  int v126 = *(_DWORD *)(v124 + 24);
LABEL_177:
                  uint64_t v207 = *(void *)(v124 + 16);
                  __int128 v203 = *(_OWORD *)v124;
                  int v127 = *(_DWORD *)(v124 + 28);
                  double v128 = *(double *)(v124 + 32);
                  __int128 v215 = *(_OWORD *)(v124 + 40);
                  *(_OWORD *)__int128 v226 = *(_OWORD *)(v124 + 60);
                  *(_OWORD *)&v226[16] = *(_OWORD *)(v124 + 76);
                  __int128 v130 = v117[3];
                  __int128 v129 = v117[4];
                  __int128 v131 = v117[2];
                  *(_OWORD *)(v124 + 73) = *(_OWORD *)((char *)v117 + 73);
                  *(_OWORD *)(v124 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v130;
                  *(_OWORD *)(v124 + 64) = v129;
                  *(_OWORD *)(v124 + 32) = v131;
                  __int128 v132 = v117[1];
                  *(_OWORD *)unint64_t v124 = *v117;
                  *(_OWORD *)(v124 + 16) = v132;
                  while (1)
                  {
                    if (v113 < v116) {
                      goto LABEL_193;
                    }
                    uint64_t v133 = v117;
                    uint64_t v134 = 2 * v116;
                    uint64_t v116 = (2 * v116) | 1;
                    unint64_t v117 = (_OWORD *)(i + 96 * v116);
                    uint64_t v135 = v134 + 2;
                    if (v135 < v11)
                    {
                      int v136 = *(_DWORD *)(i + 96 * v116 + 56);
                      int v137 = *((_DWORD *)v117 + 38);
                      if (v136 > v137
                        || v136 == v137
                        && ((v138 = *(_DWORD *)(i + 96 * v116 + 24), int v139 = *((_DWORD *)v117 + 30), v138 > v139)
                         || v138 == v139 && *(double *)(i + 96 * v116 + 32) < *((double *)v117 + 16)))
                      {
                        v117 += 6;
                        uint64_t v116 = v135;
                      }
                    }

                    int v140 = *((_DWORD *)v117 + 14);
                    if (v140 > v123) {
                      break;
                    }
                    if (v140 == v123)
                    {
                      int v141 = *((_DWORD *)v117 + 6);
                    }

                    __int128 v142 = v117[1];
                    _OWORD *v133 = *v117;
                    v133[1] = v142;
                    __int128 v143 = v117[2];
                    __int128 v144 = v117[3];
                    __int128 v145 = v117[4];
                    *(_OWORD *)((char *)v133 + 73) = *(_OWORD *)((char *)v117 + 73);
                    v133[3] = v144;
                    v133[4] = v145;
                    v133[2] = v143;
                  }

                  unint64_t v117 = v133;
LABEL_193:
                  *unint64_t v117 = v203;
                  *((void *)v117 + 2) = v207;
                  *((_DWORD *)v117 + 6) = v126;
                  *((_DWORD *)v117 + 7) = v127;
                  *((double *)v117 + 4) = v128;
                  *(_OWORD *)((char *)v117 + 4sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = v215;
                  *((_DWORD *)v117 + 14) = v123;
                  *(_OWORD *)((char *)v117 + 6sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = *(_OWORD *)v226;
                  *(_OWORD *)((char *)v117 + 73) = *(_OWORD *)&v226[13];
                  goto LABEL_194;
                }

                int v125 = *((_DWORD *)v117 + 6);
                int v126 = *(_DWORD *)(i + 96 * v115 + 24);
                if (v125 <= v126)
                {
                  if (v125 != v126) {
                    goto LABEL_177;
                  }
                  int v126 = *((_DWORD *)v117 + 6);
                }
              }
            }

      __int128 v143 = 6;
      goto LABEL_242;
    }

double sub_1003FC874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)&double result = sub_1003FD0C0(a1, a2, a3, a4).n128_u64[0];
  int v11 = *(_DWORD *)(a5 + 56);
  int v12 = *(_DWORD *)(a4 + 56);
  if (v11 > v12
    || v11 == v12
    && ((v41 = *(_DWORD *)(a5 + 24), int v42 = *(_DWORD *)(a4 + 24), v41 > v42)
     || v41 == v42 && (double result = *(double *)(a5 + 32), result < *(double *)(a4 + 32))))
  {
    __int128 v51 = *(_OWORD *)(a4 + 32);
    __int128 v55 = *(_OWORD *)(a4 + 48);
    *(_OWORD *)int v59 = *(_OWORD *)(a4 + 64);
    *(_OWORD *)&v59[16] = *(_OWORD *)(a4 + 80);
    __int128 v43 = *(_OWORD *)a4;
    __int128 v47 = *(_OWORD *)(a4 + 16);
    __int128 v13 = *(_OWORD *)(a5 + 16);
    *(_OWORD *)a4 = *(_OWORD *)a5;
    *(_OWORD *)(a4 + 16) = v13;
    __int128 v15 = *(_OWORD *)(a5 + 48);
    __int128 v14 = *(_OWORD *)(a5 + 64);
    __int128 v16 = *(_OWORD *)(a5 + 32);
    *(_OWORD *)(a4 + 73) = *(_OWORD *)(a5 + 73);
    *(_OWORD *)(a4 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v15;
    *(_OWORD *)(a4 + 64) = v14;
    *(_OWORD *)(a4 + 32) = v16;
    *(_OWORD *)(a5 + 64) = *(_OWORD *)v59;
    *(_OWORD *)(a5 + 73) = *(_OWORD *)&v59[9];
    *(_OWORD *)(a5 + 32) = v51;
    *(_OWORD *)(a5 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v55;
    double result = *(double *)&v43;
    *(_OWORD *)a5 = v43;
    *(_OWORD *)(a5 + 16) = v47;
    int v17 = *(_DWORD *)(a4 + 56);
    int v18 = *(_DWORD *)(a3 + 56);
    if (v17 > v18
      || v17 == v18
      && ((v19 = *(_DWORD *)(a4 + 24), int v20 = *(_DWORD *)(a3 + 24), v19 > v20)
       || v19 == v20 && (double result = *(double *)(a4 + 32), result < *(double *)(a3 + 32))))
    {
      __int128 v52 = *(_OWORD *)(a3 + 32);
      __int128 v56 = *(_OWORD *)(a3 + 48);
      *(_OWORD *)uint64_t v60 = *(_OWORD *)(a3 + 64);
      *(_OWORD *)&v60[16] = *(_OWORD *)(a3 + 80);
      __int128 v44 = *(_OWORD *)a3;
      __int128 v48 = *(_OWORD *)(a3 + 16);
      __int128 v21 = *(_OWORD *)(a4 + 16);
      *(_OWORD *)a3 = *(_OWORD *)a4;
      *(_OWORD *)(a3 + 16) = v21;
      __int128 v23 = *(_OWORD *)(a4 + 48);
      __int128 v22 = *(_OWORD *)(a4 + 64);
      __int128 v24 = *(_OWORD *)(a4 + 32);
      *(_OWORD *)(a3 + 73) = *(_OWORD *)(a4 + 73);
      *(_OWORD *)(a3 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v23;
      *(_OWORD *)(a3 + 64) = v22;
      *(_OWORD *)(a3 + 32) = v24;
      *(_OWORD *)(a4 + 64) = *(_OWORD *)v60;
      *(_OWORD *)(a4 + 73) = *(_OWORD *)&v60[9];
      *(_OWORD *)(a4 + 32) = v52;
      *(_OWORD *)(a4 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v56;
      double result = *(double *)&v44;
      *(_OWORD *)a4 = v44;
      *(_OWORD *)(a4 + 16) = v48;
      int v25 = *(_DWORD *)(a3 + 56);
      int v26 = *(_DWORD *)(a2 + 56);
      if (v25 > v26
        || v25 == v26
        && ((v27 = *(_DWORD *)(a3 + 24), int v28 = *(_DWORD *)(a2 + 24), v27 > v28)
         || v27 == v28 && (double result = *(double *)(a3 + 32), result < *(double *)(a2 + 32))))
      {
        __int128 v53 = *(_OWORD *)(a2 + 32);
        __int128 v57 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)int v61 = *(_OWORD *)(a2 + 64);
        *(_OWORD *)&v61[16] = *(_OWORD *)(a2 + 80);
        __int128 v45 = *(_OWORD *)a2;
        __int128 v49 = *(_OWORD *)(a2 + 16);
        __int128 v29 = *(_OWORD *)(a3 + 16);
        *(_OWORD *)a2 = *(_OWORD *)a3;
        *(_OWORD *)(a2 + 16) = v29;
        __int128 v31 = *(_OWORD *)(a3 + 48);
        __int128 v30 = *(_OWORD *)(a3 + 64);
        __int128 v32 = *(_OWORD *)(a3 + 32);
        *(_OWORD *)(a2 + 73) = *(_OWORD *)(a3 + 73);
        *(_OWORD *)(a2 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v31;
        *(_OWORD *)(a2 + 64) = v30;
        *(_OWORD *)(a2 + 32) = v32;
        *(_OWORD *)(a3 + 64) = *(_OWORD *)v61;
        *(_OWORD *)(a3 + 73) = *(_OWORD *)&v61[9];
        *(_OWORD *)(a3 + 32) = v53;
        *(_OWORD *)(a3 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v57;
        double result = *(double *)&v45;
        *(_OWORD *)a3 = v45;
        *(_OWORD *)(a3 + 16) = v49;
        int v33 = *(_DWORD *)(a2 + 56);
        int v34 = *(_DWORD *)(a1 + 56);
        if (v33 > v34
          || v33 == v34
          && ((v35 = *(_DWORD *)(a2 + 24), int v36 = *(_DWORD *)(a1 + 24), v35 > v36)
           || v35 == v36 && (double result = *(double *)(a2 + 32), result < *(double *)(a1 + 32))))
        {
          __int128 v54 = *(_OWORD *)(a1 + 32);
          __int128 v58 = *(_OWORD *)(a1 + 48);
          *(_OWORD *)int v62 = *(_OWORD *)(a1 + 64);
          *(_OWORD *)&v62[16] = *(_OWORD *)(a1 + 80);
          __int128 v46 = *(_OWORD *)a1;
          __int128 v50 = *(_OWORD *)(a1 + 16);
          __int128 v37 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v37;
          __int128 v39 = *(_OWORD *)(a2 + 48);
          __int128 v38 = *(_OWORD *)(a2 + 64);
          __int128 v40 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
          *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v39;
          *(_OWORD *)(a1 + 64) = v38;
          *(_OWORD *)(a1 + 32) = v40;
          *(_OWORD *)(a2 + 64) = *(_OWORD *)v62;
          *(_OWORD *)(a2 + 73) = *(_OWORD *)&v62[9];
          *(_OWORD *)(a2 + 32) = v54;
          *(_OWORD *)(a2 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v58;
          double result = *(double *)&v46;
          *(_OWORD *)a2 = v46;
          *(_OWORD *)(a2 + 16) = v50;
        }
      }
    }
  }

  return result;
}

__n128 sub_1003FCB00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(a2 + 56);
  int v4 = *(_DWORD *)(a1 + 56);
  if (v3 > v4
    || v3 == v4
    && ((int v10 = *(_DWORD *)(a2 + 24), v11 = *(_DWORD *)(a1 + 24), v10 > v11)
     || v10 == v11 && (result.n128_u64[0] = *(void *)(a2 + 32), result.n128_f64[0] < *(double *)(a1 + 32))))
  {
    int v5 = *(_DWORD *)(a3 + 56);
    if (v5 > v3
      || v5 == v3
      && ((int v28 = *(_DWORD *)(a3 + 24), v29 = *(_DWORD *)(a2 + 24), v28 > v29)
       || v28 == v29 && *(double *)(a3 + 32) < *(double *)(a2 + 32)))
    {
      __int128 v50 = *(_OWORD *)(a1 + 32);
      __int128 v54 = *(_OWORD *)(a1 + 48);
      *(_OWORD *)__int128 v58 = *(_OWORD *)(a1 + 64);
      *(_OWORD *)&v58[16] = *(_OWORD *)(a1 + 80);
      __n128 v42 = *(__n128 *)a1;
      __int128 v46 = *(_OWORD *)(a1 + 16);
      __int128 v6 = *(_OWORD *)(a3 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a3;
      *(_OWORD *)(a1 + 16) = v6;
      __int128 v8 = *(_OWORD *)(a3 + 48);
      __int128 v7 = *(_OWORD *)(a3 + 64);
      __int128 v9 = *(_OWORD *)(a3 + 32);
      *(_OWORD *)(a1 + 73) = *(_OWORD *)(a3 + 73);
      *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v8;
      *(_OWORD *)(a1 + 64) = v7;
      *(_OWORD *)(a1 + 32) = v9;
    }

    else
    {
      __int128 v53 = *(_OWORD *)(a1 + 32);
      __int128 v57 = *(_OWORD *)(a1 + 48);
      *(_OWORD *)int v61 = *(_OWORD *)(a1 + 64);
      *(_OWORD *)&v61[16] = *(_OWORD *)(a1 + 80);
      __n128 v45 = *(__n128 *)a1;
      __int128 v49 = *(_OWORD *)(a1 + 16);
      __int128 v30 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v30;
      __int128 v32 = *(_OWORD *)(a2 + 48);
      __int128 v31 = *(_OWORD *)(a2 + 64);
      __int128 v33 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
      *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v32;
      *(_OWORD *)(a1 + 64) = v31;
      *(_OWORD *)(a1 + 32) = v33;
      *(_OWORD *)(a2 + 64) = *(_OWORD *)v61;
      *(_OWORD *)(a2 + 73) = *(_OWORD *)&v61[9];
      *(_OWORD *)(a2 + 32) = v53;
      *(_OWORD *)(a2 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v57;
      __n128 result = v45;
      *(__n128 *)a2 = v45;
      *(_OWORD *)(a2 + 16) = v49;
      int v34 = *(_DWORD *)(a3 + 56);
      int v35 = *(_DWORD *)(a2 + 56);
      if (v34 <= v35)
      {
        if (v34 != v35) {
          return result;
        }
        int v36 = *(_DWORD *)(a3 + 24);
        int v37 = *(_DWORD *)(a2 + 24);
        if (v36 <= v37)
        {
          if (v36 != v37) {
            return result;
          }
          result.n128_u64[0] = *(void *)(a3 + 32);
        }
      }

      __int128 v50 = *(_OWORD *)(a2 + 32);
      __int128 v54 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)__int128 v58 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)&v58[16] = *(_OWORD *)(a2 + 80);
      __n128 v42 = *(__n128 *)a2;
      __int128 v46 = *(_OWORD *)(a2 + 16);
      __int128 v38 = *(_OWORD *)(a3 + 16);
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *(_OWORD *)(a2 + 16) = v38;
      __int128 v40 = *(_OWORD *)(a3 + 48);
      __int128 v39 = *(_OWORD *)(a3 + 64);
      __int128 v41 = *(_OWORD *)(a3 + 32);
      *(_OWORD *)(a2 + 73) = *(_OWORD *)(a3 + 73);
      *(_OWORD *)(a2 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v40;
      *(_OWORD *)(a2 + 64) = v39;
      *(_OWORD *)(a2 + 32) = v41;
    }

    *(_OWORD *)(a3 + 64) = *(_OWORD *)v58;
    *(_OWORD *)(a3 + 73) = *(_OWORD *)&v58[9];
    *(_OWORD *)(a3 + 32) = v50;
    *(_OWORD *)(a3 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v54;
    __n128 result = v42;
    *(__n128 *)a3 = v42;
    *(_OWORD *)(a3 + 16) = v46;
    return result;
  }

  int v13 = *(_DWORD *)(a3 + 56);
  if (v13 > v3
    || v13 == v3
    && ((int v14 = *(_DWORD *)(a3 + 24), v15 = *(_DWORD *)(a2 + 24), v14 > v15)
     || v14 == v15 && (result.n128_u64[0] = *(void *)(a3 + 32), result.n128_f64[0] < *(double *)(a2 + 32))))
  {
    __int128 v51 = *(_OWORD *)(a2 + 32);
    __int128 v55 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)int v59 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)&v59[16] = *(_OWORD *)(a2 + 80);
    __n128 v43 = *(__n128 *)a2;
    __int128 v47 = *(_OWORD *)(a2 + 16);
    __int128 v16 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)a2 = *(_OWORD *)a3;
    *(_OWORD *)(a2 + 16) = v16;
    __int128 v18 = *(_OWORD *)(a3 + 48);
    __int128 v17 = *(_OWORD *)(a3 + 64);
    __int128 v19 = *(_OWORD *)(a3 + 32);
    *(_OWORD *)(a2 + 73) = *(_OWORD *)(a3 + 73);
    *(_OWORD *)(a2 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v18;
    *(_OWORD *)(a2 + 64) = v17;
    *(_OWORD *)(a2 + 32) = v19;
    *(_OWORD *)(a3 + 64) = *(_OWORD *)v59;
    *(_OWORD *)(a3 + 73) = *(_OWORD *)&v59[9];
    *(_OWORD *)(a3 + 32) = v51;
    *(_OWORD *)(a3 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v55;
    __n128 result = v43;
    *(__n128 *)a3 = v43;
    *(_OWORD *)(a3 + 16) = v47;
    int v20 = *(_DWORD *)(a2 + 56);
    int v21 = *(_DWORD *)(a1 + 56);
    if (v20 > v21
      || v20 == v21
      && ((int v22 = *(_DWORD *)(a2 + 24), v23 = *(_DWORD *)(a1 + 24), v22 > v23)
       || v22 == v23 && (result.n128_u64[0] = *(void *)(a2 + 32), result.n128_f64[0] < *(double *)(a1 + 32))))
    {
      __int128 v52 = *(_OWORD *)(a1 + 32);
      __int128 v56 = *(_OWORD *)(a1 + 48);
      *(_OWORD *)uint64_t v60 = *(_OWORD *)(a1 + 64);
      *(_OWORD *)&v60[16] = *(_OWORD *)(a1 + 80);
      __n128 v44 = *(__n128 *)a1;
      __int128 v48 = *(_OWORD *)(a1 + 16);
      __int128 v24 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v24;
      __int128 v26 = *(_OWORD *)(a2 + 48);
      __int128 v25 = *(_OWORD *)(a2 + 64);
      __int128 v27 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
      *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v26;
      *(_OWORD *)(a1 + 64) = v25;
      *(_OWORD *)(a1 + 32) = v27;
      *(_OWORD *)(a2 + 64) = *(_OWORD *)v60;
      *(_OWORD *)(a2 + 73) = *(_OWORD *)&v60[9];
      *(_OWORD *)(a2 + 32) = v52;
      *(_OWORD *)(a2 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v56;
      __n128 result = v44;
      *(__n128 *)a2 = v44;
      *(_OWORD *)(a2 + 16) = v48;
    }
  }

  return result;
}

BOOL sub_1003FCDBC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a2 - a1) >> 5);
  BOOL result = 1LL;
  switch(v4)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      int v6 = *(_DWORD *)(a2 - 40);
      int v7 = *(_DWORD *)(a1 + 56);
      if (v6 > v7
        || v6 == v7
        && ((v35 = *(_DWORD *)(a2 - 72), int v36 = *(_DWORD *)(a1 + 24), v35 > v36)
         || v35 == v36 && *(double *)(a2 - 64) < *(double *)(a1 + 32)))
      {
        __int128 v8 = (_OWORD *)(a2 - 96);
        __int128 v43 = *(_OWORD *)(a1 + 32);
        __int128 v44 = *(_OWORD *)(a1 + 48);
        *(_OWORD *)__n128 v45 = *(_OWORD *)(a1 + 64);
        *(_OWORD *)&v45[16] = *(_OWORD *)(a1 + 80);
        __int128 v40 = *(_OWORD *)a1;
        __int128 v42 = *(_OWORD *)(a1 + 16);
        __int128 v9 = *(_OWORD *)(a2 - 80);
        *(_OWORD *)a1 = *(_OWORD *)(a2 - 96);
        *(_OWORD *)(a1 + 16) = v9;
        __int128 v11 = *(_OWORD *)(a2 - 48);
        __int128 v10 = *(_OWORD *)(a2 - 32);
        __int128 v12 = *(_OWORD *)(a2 - 64);
        *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 - 23);
        *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v11;
        *(_OWORD *)(a1 + 64) = v10;
        *(_OWORD *)(a1 + 32) = v12;
        void v8[4] = *(_OWORD *)v45;
        *(_OWORD *)((char *)v8 + 73) = *(_OWORD *)&v45[9];
        v8[2] = v43;
        v8[3] = v44;
        *__int128 v8 = v40;
        v8[1] = v42;
      }

      return result;
    case 3uLL:
      sub_1003FCB00(a1, a1 + 96, a2 - 96);
      return 1LL;
    case 4uLL:
      sub_1003FD0C0(a1, a1 + 96, a1 + 192, a2 - 96);
      return 1LL;
    case 5uLL:
      sub_1003FC874(a1, a1 + 96, a1 + 192, a1 + 288, a2 - 96);
      return 1LL;
    default:
      uint64_t v13 = a1 + 192;
      sub_1003FCB00(a1, a1 + 96, a1 + 192);
      uint64_t v14 = a1 + 288;
      if (a1 + 288 == a2) {
        return 1LL;
      }
      uint64_t v15 = 0LL;
      int v16 = 0;
      break;
  }

  while (1)
  {
    int v17 = *(_DWORD *)(v14 + 56);
    int v18 = *(_DWORD *)(v13 + 56);
    if (v17 > v18) {
      break;
    }
    if (v17 == v18)
    {
      int v19 = *(_DWORD *)(v14 + 24);
      int v34 = *(_DWORD *)(v13 + 24);
    }

__n128 sub_1003FD0C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  result.n128_u64[0] = sub_1003FCB00(a1, a2, a3).n128_u64[0];
  int v9 = *(_DWORD *)(a4 + 56);
  int v10 = *(_DWORD *)(a3 + 56);
  if (v9 > v10
    || v9 == v10
    && ((int v11 = *(_DWORD *)(a4 + 24), v12 = *(_DWORD *)(a3 + 24), v11 > v12)
     || v11 == v12 && (result.n128_u64[0] = *(void *)(a4 + 32), result.n128_f64[0] < *(double *)(a3 + 32))))
  {
    __int128 v39 = *(_OWORD *)(a3 + 32);
    __int128 v42 = *(_OWORD *)(a3 + 48);
    *(_OWORD *)__n128 v45 = *(_OWORD *)(a3 + 64);
    *(_OWORD *)&v45[16] = *(_OWORD *)(a3 + 80);
    __n128 v33 = *(__n128 *)a3;
    __int128 v36 = *(_OWORD *)(a3 + 16);
    __int128 v13 = *(_OWORD *)(a4 + 16);
    *(_OWORD *)a3 = *(_OWORD *)a4;
    *(_OWORD *)(a3 + 16) = v13;
    __int128 v15 = *(_OWORD *)(a4 + 48);
    __int128 v14 = *(_OWORD *)(a4 + 64);
    __int128 v16 = *(_OWORD *)(a4 + 32);
    *(_OWORD *)(a3 + 73) = *(_OWORD *)(a4 + 73);
    *(_OWORD *)(a3 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v15;
    *(_OWORD *)(a3 + 64) = v14;
    *(_OWORD *)(a3 + 32) = v16;
    *(_OWORD *)(a4 + 64) = *(_OWORD *)v45;
    *(_OWORD *)(a4 + 73) = *(_OWORD *)&v45[9];
    *(_OWORD *)(a4 + 32) = v39;
    *(_OWORD *)(a4 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v42;
    __n128 result = v33;
    *(__n128 *)a4 = v33;
    *(_OWORD *)(a4 + 16) = v36;
    int v17 = *(_DWORD *)(a3 + 56);
    int v18 = *(_DWORD *)(a2 + 56);
    if (v17 > v18
      || v17 == v18
      && ((v19 = *(_DWORD *)(a3 + 24), int v20 = *(_DWORD *)(a2 + 24), v19 > v20)
       || v19 == v20 && (result.n128_u64[0] = *(void *)(a3 + 32), result.n128_f64[0] < *(double *)(a2 + 32))))
    {
      __int128 v40 = *(_OWORD *)(a2 + 32);
      __int128 v43 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)__int128 v46 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)&v46[16] = *(_OWORD *)(a2 + 80);
      __n128 v34 = *(__n128 *)a2;
      __int128 v37 = *(_OWORD *)(a2 + 16);
      __int128 v21 = *(_OWORD *)(a3 + 16);
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *(_OWORD *)(a2 + 16) = v21;
      __int128 v23 = *(_OWORD *)(a3 + 48);
      __int128 v22 = *(_OWORD *)(a3 + 64);
      __int128 v24 = *(_OWORD *)(a3 + 32);
      *(_OWORD *)(a2 + 73) = *(_OWORD *)(a3 + 73);
      *(_OWORD *)(a2 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v23;
      *(_OWORD *)(a2 + 64) = v22;
      *(_OWORD *)(a2 + 32) = v24;
      *(_OWORD *)(a3 + 64) = *(_OWORD *)v46;
      *(_OWORD *)(a3 + 73) = *(_OWORD *)&v46[9];
      *(_OWORD *)(a3 + 32) = v40;
      *(_OWORD *)(a3 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v43;
      __n128 result = v34;
      *(__n128 *)a3 = v34;
      *(_OWORD *)(a3 + 16) = v37;
      int v25 = *(_DWORD *)(a2 + 56);
      int v26 = *(_DWORD *)(a1 + 56);
      if (v25 > v26
        || v25 == v26
        && ((v27 = *(_DWORD *)(a2 + 24), int v28 = *(_DWORD *)(a1 + 24), v27 > v28)
         || v27 == v28 && (result.n128_u64[0] = *(void *)(a2 + 32), result.n128_f64[0] < *(double *)(a1 + 32))))
      {
        __int128 v41 = *(_OWORD *)(a1 + 32);
        __int128 v44 = *(_OWORD *)(a1 + 48);
        *(_OWORD *)__int128 v47 = *(_OWORD *)(a1 + 64);
        *(_OWORD *)&v47[16] = *(_OWORD *)(a1 + 80);
        __n128 v35 = *(__n128 *)a1;
        __int128 v38 = *(_OWORD *)(a1 + 16);
        __int128 v29 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v29;
        __int128 v31 = *(_OWORD *)(a2 + 48);
        __int128 v30 = *(_OWORD *)(a2 + 64);
        __int128 v32 = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
        *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v31;
        *(_OWORD *)(a1 + 64) = v30;
        *(_OWORD *)(a1 + 32) = v32;
        *(_OWORD *)(a2 + 64) = *(_OWORD *)v47;
        *(_OWORD *)(a2 + 73) = *(_OWORD *)&v47[9];
        *(_OWORD *)(a2 + 32) = v41;
        *(_OWORD *)(a2 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = v44;
        __n128 result = v35;
        *(__n128 *)a2 = v35;
        *(_OWORD *)(a2 + 16) = v38;
      }
    }
  }

  return result;
}

void sub_1003FD2AC()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1019361B8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1019361B8))
    {
      qword_1019361A0 = 0LL;
      qword_1019361A8 = 0LL;
      qword_1019361B0 = 0LL;
      uint64_t v1 = operator new(6uLL);
      qword_1019361A8 = (uint64_t)(v1 + 3);
      qword_1019361B0 = (uint64_t)(v1 + 3);
      *(_DWORD *)uint64_t v1 = 151521030;
      v1[2] = 3082;
      qword_1019361A0 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1001CDCD0, &qword_1019361A0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1019361B8);
    }
  }

void sub_1003FD348(_Unwind_Exception *a1)
{
}

void sub_1003FD360()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1019361D8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1019361D8))
    {
      qword_1019361C0 = 0LL;
      qword_1019361C8 = 0LL;
      qword_1019361D0 = 0LL;
      uint64_t v1 = operator new(2uLL);
      qword_1019361C0 = (uint64_t)v1;
      *uint64_t v1 = 256;
      qword_1019361C8 = (uint64_t)(v1 + 1);
      qword_1019361D0 = (uint64_t)(v1 + 1);
      __cxa_atexit((void (*)(void *))sub_1001CDD00, &qword_1019361C0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1019361D8);
    }
  }

void sub_1003FD3EC(_Unwind_Exception *a1)
{
}

uint64_t sub_1003FD498(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = sub_100D54F8C(a1, a2, a3, a4, a5, a6);
  *(void *)uint64_t v8 = off_101836D90;
  *(_DWORD *)(v8 + 184) = 0;
  *(void *)(v8 + 216) = 0LL;
  *(void *)(v8 + 2sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 0LL;
  *(void *)(v8 + 192) = 0LL;
  *(void *)(v8 + 232) = 0x7FEFFFFFFFFFFFFFLL;
  *(_BYTE *)(v8 + 241) = 0;
  *(void *)(v8 + 24_Block_object_dispose((const void *)(v30 - 184), 8) = 0LL;
  *(void *)(v8 + 256) = 0LL;
  sub_1002F0B04(buf);
  char v9 = sub_1002A6F64(*(uint64_t *)buf, "ForceMapMatching", (BOOL *)(a1 + 240));
  char v10 = v9;
  int v11 = *(std::__shared_weak_count **)v27;
  if (*(void *)v27)
  {
    int v12 = (unint64_t *)(*(void *)v27 + 8LL);
    do
      unint64_t v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
      if ((v10 & 1) != 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
  }

  if ((v9 & 1) == 0) {
LABEL_6:
  }
    *(_BYTE *)(a1 + 24sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = 0;
LABEL_7:
  unsigned int v14 = objc_msgSend(objc_msgSend(a4, "objectForKey:", @"config"), "integerValue");
  if (v14 - 1 >= 4 && v14 != 0x7FFFFFFF) {
    unsigned int v14 = 0;
  }
  *(_DWORD *)(a1 + 184) = v14;
  uint64_t v15 = *(void *)(a1 + 24);
  v25[0] = _NSConcreteStackBlock;
  v25[1] = 3221225472LL;
  void v25[2] = sub_1003FD834;
  void v25[3] = &unk_101836E00;
  v25[4] = a1;
  sub_100558E24(v15, (uint64_t)v25);
  v24[0] = _NSConcreteStackBlock;
  v24[1] = 3221225472LL;
  void v24[2] = sub_1003FDA98;
  v24[3] = &unk_101820718;
  v24[4] = a1;
  AnalyticsSendEventLazy(@"com.apple.locationd.locationupdates.configuration", v24);
  __int128 v16 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLDaemonLocationUpdaterLive(ctor)",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
  os_activity_scope_enter(v16, &v23);

  if (qword_101934970 != -1) {
    dispatch_once(&qword_101934970, &stru_101836EC0);
  }
  int v17 = (os_log_s *)qword_101934978;
  if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v18 = *(void *)(a1 + 16);
    int v19 = *(_DWORD *)(a1 + 184);
    int v20 = *(unsigned __int8 *)(a1 + 240);
    *(_DWORD *)std::stringbuf::string_type buf = 68290306;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)int v27 = 2082;
    *(void *)&_DWORD v27[2] = "";
    __int16 v28 = 2082;
    __int128 v29 = "activity";
    __int16 v30 = 2114;
    uint64_t v31 = v18;
    __int16 v32 = 2050;
    uint64_t v33 = a1;
    __int16 v34 = 1026;
    int v35 = v19;
    __int16 v36 = 1026;
    int v37 = v20;
    _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:CLDaemonLocationUpdaterLive(ctor), event:%{public, location:escape_only}s, ClientKe yPath:%{public, location:escape_only}@, this:%{public}p, LiveUpdateConfiguration:%{public}d, fForc eMapMatching:%{public}hhd}",  buf,  0x3Cu);
  }

  *(void *)(a1 + 24_Block_object_dispose((const void *)(v30 - 184), 8) = objc_alloc_init(&OBJC_CLASS___CLDaemonLocationUpdaterLiveAdapter);
  id v21 =  objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "vendor"),  "proxyForService:",  @"CLStreamingAwareLocationProvider");
  *(void *)(a1 + 256) = v21;
  objc_msgSend(v21, "registerDelegate:inSilo:", *(void *)(a1 + 248), objc_msgSend(*(id *)(a1 + 32), "silo"));
  *(void *)(a1 + 20sub_100222B94(v34, (uint64_t)"com.apple.locationd.CLSqliteDatabase.vacuum", 0) = sub_1003FDB68;
  *(void *)(a1 + 20_Block_object_dispose((const void *)(v30 - 184), 8) = a1;
  *(_DWORD *)(a1 + 2memset(v19, 0, 44) = 48;
  sub_1003FDD40(a1, 0);
  os_activity_scope_leave(&v23);
  return a1;
}

void sub_1003FD7CC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v17 = *(void *)(v13 + 192);
  *(void *)(v13 + 192) = 0LL;
  if (v17) {
    (*(void (**)(uint64_t))(*(void *)v17 + 8LL))(v17);
  }
  sub_100D555B4(v13);
  _Unwind_Resume(a1);
}

uint64_t sub_1003FD834(uint64_t a1, void *lpsrc)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (lpsrc) {
  else
  }
    unint64_t v4 = 0LL;
  uint64_t result = (uint64_t)[*(id *)(v3 + 16) isEqual:sub_100019240((uint64_t)lpsrc)];
  if ((_DWORD)result)
  {
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101836EA0);
    }
    int v6 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
    {
      int v7 = (*(uint64_t (**)(void *))(*(void *)lpsrc + 24LL))(lpsrc);
      uint64_t v8 = *(void *)(v3 + 16);
      int v12 = 68289794;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 1026;
      int v17 = v7;
      __int16 v18 = 2114;
      uint64_t v19 = v8;
      __int16 v20 = 2050;
      uint64_t v21 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#luLive consumeMatchingButterfly, dicType:%{public}d, ClientKeyPath:%{public, l ocation:escape_only}@, this:%{public}p}",  (uint8_t *)&v12,  0x2Cu);
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101836EA0);
      }
    }

    char v9 = (os_log_s *)qword_101934988;
    if (os_signpost_enabled((os_log_t)qword_101934988))
    {
      int v10 = (*(uint64_t (**)(void *))(*(void *)lpsrc + 24LL))(lpsrc);
      uint64_t v11 = *(void *)(v3 + 16);
      int v12 = 68289794;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 1026;
      int v17 = v10;
      __int16 v18 = 2114;
      uint64_t v19 = v11;
      __int16 v20 = 2050;
      uint64_t v21 = v3;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v9,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "#luLive consumeMatchingButterfly",  "{msg%{public}.0s:#luLive consumeMatchingButterfly, dicType:%{public}d, ClientKeyPath:%{public, l ocation:escape_only}@, this:%{public}p}",  (uint8_t *)&v12,  0x2Cu);
    }

    return 1LL;
  }

  return result;
}

NSDictionary *sub_1003FDA98(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = (const __CFString *)[*(id *)(v1 + 16) clientAnchorWithType];
  if (v2) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = &stru_1018A4B00;
  }
  unint64_t v4 = (const __CFString *)[*(id *)(v1 + 16) subIdentityIdWithType];
  if (v4) {
    int v5 = v4;
  }
  else {
    int v5 = &stru_1018A4B00;
  }
  v7[0] = @"Anchor";
  v7[1] = @"SubIdentity";
  v8[0] = v3;
  v8[1] = v5;
  _DWORD v7[2] = @"LiveConfigIndex";
  v8[2] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(v1 + 184));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v8,  v7,  3LL);
}

void sub_1003FDB68(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101836EE0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLDaemonLocationUpdaterLive::onLocationNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101836EE0);
    }
    char v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      int v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLDaemonLocationUpdaterLive::onLocationNotification, event:%{public, location:escap e_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_1003FFF34(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1003FDD20( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003FDD40(uint64_t a1, int a2)
{
  uint64_t v4 = *(void *)(a1 + 192);
  *(void *)(a1 + 192) = 0LL;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  sub_1003FF16C((id **)(a1 + 216), 0LL);
  sub_1003FF198((id **)(a1 + 224), 0LL);
  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_101836EA0);
  }
  int v5 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(a1 + 16);
    std::stringbuf::string_type __p = (void *)68289538;
    __int16 v63 = 2082;
    int v64 = "";
    __int16 v65 = 2114;
    uint64_t v66 = v6;
    __int16 v67 = 2050;
    *(void *)__int128 v68 = a1;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#luLive manageSubscription releaseAccuracyEnablementAssertion, ClientKeyPath:%{public , location:escape_only}@, self:%{public}p}",  (uint8_t *)&__p,  0x26u);
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101836EA0);
    }
  }

  uint64_t v7 = (os_log_s *)qword_101934988;
  if (os_signpost_enabled((os_log_t)qword_101934988))
  {
    uint64_t v8 = *(void *)(a1 + 16);
    std::stringbuf::string_type __p = (void *)68289538;
    __int16 v63 = 2082;
    int v64 = "";
    __int16 v65 = 2114;
    uint64_t v66 = v8;
    __int16 v67 = 2050;
    *(void *)__int128 v68 = a1;
    _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v7,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "#luLive manageSubscription releaseAccuracyEnablementAssertion",  "{msg%{public}.0s:#luLive manageSubscription releaseAccuracyEnablementAssertion, ClientKeyPath:%{public , location:escape_only}@, self:%{public}p}",  (uint8_t *)&__p,  0x26u);
  }

  [*(id *)(a1 + 256) releaseAccuracyEnablementAssertionForClient:*(void *)(a1 + 248)];
  sub_100D57E58((id *)a1);
  if ([*(id *)(a1 + 40) isAuthorizedForServiceTypeMask:524304] && (a2 & 1) == 0)
  {
    *(_BYTE *)(a1 + 241) = 1;
    if ([*(id *)(a1 + 40) isAuthorizedForServiceType:12])
    {
      sub_1004EEF6C(*(void *)(a1 + 200), *(void *)(a1 + 208), *(void **)(a1 + 32), &__p);
      char v9 = __p;
      std::stringbuf::string_type __p = 0LL;
      uint64_t v10 = *(void *)(a1 + 192);
      *(void *)(a1 + 192) = v9;
      if (v10)
      {
        (*(void (**)(uint64_t))(*(void *)v10 + 8LL))(v10);
        char v11 = __p;
        std::stringbuf::string_type __p = 0LL;
        if (v11) {
          (*(void (**)(void *))(*(void *)v11 + 8LL))(v11);
        }
      }

      uint64_t v12 = sub_1003FEFD0(a1);
      if ((_DWORD)v12 != 48) {
        [*(id *)(*(void *)(a1 + 192) + 16) register:*(void *)(*(void *)(a1 + 192) + 8) forNotification:v12 registrationInfo:0];
      }
      uint64_t v13 = sub_1003FF048(a1);
      if ((_DWORD)v13 != 48) {
        [*(id *)(*(void *)(a1 + 192) + 16) register:*(void *)(*(void *)(a1 + 192) + 8) forNotification:v13 registrationInfo:0];
      }
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101836EA0);
      }
      __int16 v14 = (os_log_s *)qword_101934988;
      if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v15 = *(void *)(a1 + 16);
        int v16 = *(_DWORD *)(a1 + 184);
        std::stringbuf::string_type __p = (void *)68289794;
        __int16 v63 = 2082;
        int v64 = "";
        __int16 v65 = 2114;
        uint64_t v66 = v15;
        __int16 v67 = 2050;
        *(void *)__int128 v68 = a1;
        *(_WORD *)&v68[8] = 1026;
        *(_DWORD *)&v68[10] = v16;
        _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#luLive starting liveUpdates with liveUpdateConfiguration, ClientKeyPath:%{public , location:escape_only}@, self:%{public}p, LiveUpdateConfiguration:%{public}d}",  (uint8_t *)&__p,  0x2Cu);
        if (qword_101934980 != -1) {
          dispatch_once(&qword_101934980, &stru_101836EA0);
        }
      }

      int v17 = (os_log_s *)qword_101934988;
      if (os_signpost_enabled((os_log_t)qword_101934988))
      {
        uint64_t v18 = *(void *)(a1 + 16);
        int v19 = *(_DWORD *)(a1 + 184);
        std::stringbuf::string_type __p = (void *)68289794;
        __int16 v63 = 2082;
        int v64 = "";
        __int16 v65 = 2114;
        uint64_t v66 = v18;
        __int16 v67 = 2050;
        *(void *)__int128 v68 = a1;
        *(_WORD *)&v68[8] = 1026;
        *(_DWORD *)&v68[10] = v19;
        _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v17,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "#luLive starting liveUpdates with liveUpdateConfiguration",  "{msg%{public}.0s:#luLive starting liveUpdates with liveUpdateConfiguration, ClientKeyPath:%{public , location:escape_only}@, self:%{public}p, LiveUpdateConfiguration:%{public}d}",  (uint8_t *)&__p,  0x2Cu);
        if (qword_101934980 != -1) {
          dispatch_once(&qword_101934980, &stru_101836EA0);
        }
      }

      __int16 v20 = (os_log_s *)qword_101934988;
      if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v21 = *(void *)(a1 + 16);
        int v22 = *(_DWORD *)(a1 + 184);
        std::stringbuf::string_type __p = (void *)68289794;
        __int16 v63 = 2082;
        int v64 = "";
        __int16 v65 = 2114;
        uint64_t v66 = v21;
        __int16 v67 = 1026;
        *(_DWORD *)__int128 v68 = v22;
        *(_WORD *)&v68[4] = 2050;
        *(void *)&v68[6] = a1;
        _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#pwrlog starting liveUpdates, ClientKeyPath:%{public, location:escape_only}@, L iveUpdateConfiguration:%{public}d, self:%{public}p}",  (uint8_t *)&__p,  0x2Cu);
      }

      if ((_DWORD)v12 == 5)
      {
        if (qword_101934980 != -1) {
          dispatch_once(&qword_101934980, &stru_101836EA0);
        }
        os_activity_scope_state_s v23 = (os_log_s *)qword_101934988;
        if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v24 = *(void *)(a1 + 16);
          std::stringbuf::string_type __p = (void *)68289538;
          __int16 v63 = 2082;
          int v64 = "";
          __int16 v65 = 2114;
          uint64_t v66 = v24;
          __int16 v67 = 2050;
          *(void *)__int128 v68 = a1;
          _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#luLive LocationUpdaterRhythmicGnssClient created, ClientKeyPath:%{public, loca tion:escape_only}@, self:%{public}p}",  (uint8_t *)&__p,  0x26u);
          if (qword_101934980 != -1) {
            dispatch_once(&qword_101934980, &stru_101836EA0);
          }
        }

        int v25 = (os_log_s *)qword_101934988;
        if (os_signpost_enabled((os_log_t)qword_101934988))
        {
          uint64_t v26 = *(void *)(a1 + 16);
          std::stringbuf::string_type __p = (void *)68289538;
          __int16 v63 = 2082;
          int v64 = "";
          __int16 v65 = 2114;
          uint64_t v66 = v26;
          __int16 v67 = 2050;
          *(void *)__int128 v68 = a1;
          _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v25,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "#luLive LocationUpdaterRhythmicGnssClient created",  "{msg%{public}.0s:#luLive LocationUpdaterRhythmicGnssClient created, ClientKeyPath:%{public, loca tion:escape_only}@, self:%{public}p}",  (uint8_t *)&__p,  0x26u);
        }

        int v27 = (id *)operator new(8uLL);
        __int16 v28 = *(void **)(a1 + 32);
        id *v27 = 0LL;
        id v29 = objc_msgSend(objc_msgSend(v28, "vendor"), "proxyForService:", @"CLGnssProvider");
        id *v27 = v29;
        [v29 addRhythmicGnssClient:0];
        sub_1003FF16C((id **)(a1 + 216), v27);
        int v30 = 0;
        uint64_t v31 = 5LL;
        goto LABEL_55;
      }
    }

    else
    {
      sub_1005DCB1C(*(void *)(a1 + 200), *(void *)(a1 + 208), *(void **)(a1 + 32), &__p);
      __int128 v41 = __p;
      std::stringbuf::string_type __p = 0LL;
      uint64_t v42 = *(void *)(a1 + 192);
      *(void *)(a1 + 192) = v41;
      if (v42)
      {
        (*(void (**)(uint64_t))(*(void *)v42 + 8LL))(v42);
        __int128 v43 = __p;
        std::stringbuf::string_type __p = 0LL;
        if (v43) {
          (*(void (**)(void *))(*(void *)v43 + 8LL))(v43);
        }
      }
    }

    uint64_t v31 = 0LL;
    int v30 = 1;
LABEL_55:
    if (objc_msgSend(*(id *)(a1 + 40), "isAuthorizedForServiceType:", 12, __p))
    {
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101836EA0);
      }
      __int128 v44 = (os_log_s *)qword_101934988;
      if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v45 = *(void *)(a1 + 16);
        std::stringbuf::string_type __p = (void *)68289538;
        __int16 v63 = 2082;
        int v64 = "";
        __int16 v65 = 2114;
        uint64_t v66 = v45;
        __int16 v67 = 2050;
        *(void *)__int128 v68 = a1;
        _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#luLive cl_os_transaction acquired, ClientKeyPath:%{public, location:escape_only} @, self:%{public}p}",  (uint8_t *)&__p,  0x26u);
        if (qword_101934980 != -1) {
          dispatch_once(&qword_101934980, &stru_101836EA0);
        }
      }

      __int128 v46 = (os_log_s *)qword_101934988;
      if (os_signpost_enabled((os_log_t)qword_101934988))
      {
        uint64_t v47 = *(void *)(a1 + 16);
        std::stringbuf::string_type __p = (void *)68289538;
        __int16 v63 = 2082;
        int v64 = "";
        __int16 v65 = 2114;
        uint64_t v66 = v47;
        __int16 v67 = 2050;
        *(void *)__int128 v68 = a1;
        _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v46,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "#luLive cl_os_transaction acquired",  "{msg%{public}.0s:#luLive cl_os_transaction acquired, ClientKeyPath:%{public, location:escape_only} @, self:%{public}p}",  (uint8_t *)&__p,  0x26u);
      }

      __int128 v48 = (char *)objc_msgSend(objc_msgSend(*(id *)(a1 + 16), "legacyClientKey"), "UTF8String");
      __int128 v49 = (id *)operator new(8uLL);
      sub_1010DDBC0(&__p, v48);
      sub_10040039C(v49, (uint64_t)&__p);
      if (SBYTE3(v66) < 0) {
        operator delete(__p);
      }
      sub_1003FF198((id **)(a1 + 224), v49);
    }

    objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "silo"), "currentLatchedAbsoluteTimestamp");
    uint64_t v50 = *(void *)(a1 + 192);
    *(void *)(a1 + 232) = v51;
    [*(id *)(v50 + 16) register:*(void *)(v50 + 8) forNotification:9 registrationInfo:0];
    [*(id *)(*(void *)(a1 + 192) + 16) register:*(void *)(*(void *)(a1 + 192) + 8) forNotification:v31 registrationInfo:0];
    if (v30 && [*(id *)(a1 + 40) inUseLevelIsAtLeast:3])
    {
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101836EA0);
      }
      __int128 v52 = (os_log_s *)qword_101934988;
      if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v53 = *(void *)(a1 + 16);
        std::stringbuf::string_type __p = (void *)68289538;
        __int16 v63 = 2082;
        int v64 = "";
        __int16 v65 = 2114;
        uint64_t v66 = v53;
        __int16 v67 = 2050;
        *(void *)__int128 v68 = a1;
        _os_log_impl( (void *)&_mh_execute_header,  v52,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#luLive takeAccuracyEnablementAssertion, ClientKeyPath:%{public, location:escape_ only}@, self:%{public}p}",  (uint8_t *)&__p,  0x26u);
        if (qword_101934980 != -1) {
          dispatch_once(&qword_101934980, &stru_101836EA0);
        }
      }

      __int128 v54 = (os_log_s *)qword_101934988;
      if (os_signpost_enabled((os_log_t)qword_101934988))
      {
        uint64_t v55 = *(void *)(a1 + 16);
        std::stringbuf::string_type __p = (void *)68289538;
        __int16 v63 = 2082;
        int v64 = "";
        __int16 v65 = 2114;
        uint64_t v66 = v55;
        __int16 v67 = 2050;
        *(void *)__int128 v68 = a1;
        _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v54,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "#luLive takeAccuracyEnablementAssertion",  "{msg%{public}.0s:#luLive takeAccuracyEnablementAssertion, ClientKeyPath:%{public, location:escape_ only}@, self:%{public}p}",  (uint8_t *)&__p,  0x26u);
      }

      [*(id *)(a1 + 256) takeAccuracyEnablementAssertionForClient:*(void *)(a1 + 248) withDesiredAccuracy:-1.0];
    }

    *(_DWORD *)(a1 + 2memset(v19, 0, 44) = v31;
    uint64_t v56 = *(void *)(a1 + 24);
    uint64_t v57 = sub_100019240(a1);
    sub_10054B118(v56, v57, 0LL);
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101836EA0);
    }
    __int128 v58 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v59 = *(void *)(a1 + 16);
      std::stringbuf::string_type __p = (void *)68289794;
      __int16 v63 = 2082;
      int v64 = "";
      __int16 v65 = 2114;
      uint64_t v66 = v59;
      __int16 v67 = 2050;
      *(void *)__int128 v68 = a1;
      *(_WORD *)&v68[8] = 1026;
      *(_DWORD *)&v68[10] = v31;
      _os_log_impl( (void *)&_mh_execute_header,  v58,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#luLive subscribed for livelocation updates , ClientKeyPath:%{public, location:esca pe_only}@, self:%{public}p, locationNotification:%{public}d}",  (uint8_t *)&__p,  0x2Cu);
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101836EA0);
      }
    }

    uint64_t v60 = (os_log_s *)qword_101934988;
    if (os_signpost_enabled((os_log_t)qword_101934988))
    {
      uint64_t v61 = *(void *)(a1 + 16);
      std::stringbuf::string_type __p = (void *)68289794;
      __int16 v63 = 2082;
      int v64 = "";
      __int16 v65 = 2114;
      uint64_t v66 = v61;
      __int16 v67 = 2050;
      *(void *)__int128 v68 = a1;
      *(_WORD *)&v68[8] = 1026;
      *(_DWORD *)&v68[10] = v31;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v60,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "#luLive subscribed for livelocation updates ",  "{msg%{public}.0s:#luLive subscribed for livelocation updates , ClientKeyPath:%{public, location:esca pe_only}@, self:%{public}p, locationNotification:%{public}d}",  (uint8_t *)&__p,  0x2Cu);
    }

    goto LABEL_83;
  }

  *(_BYTE *)(a1 + 241) = 0;
  uint64_t v32 = *(void *)(a1 + 24);
  uint64_t v33 = sub_100019240(a1);
  sub_10054B118(v32, v33, 0LL);
  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_101836EA0);
  }
  __int16 v34 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v35 = *(void *)(a1 + 16);
    std::stringbuf::string_type __p = (void *)68289794;
    __int16 v63 = 2082;
    int v64 = "";
    __int16 v65 = 2114;
    uint64_t v66 = v35;
    __int16 v67 = 2050;
    *(void *)__int128 v68 = a1;
    *(_WORD *)&v68[8] = 1026;
    *(_DWORD *)&v68[10] = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#luLive skip starting location-updates, ClientKeyPath:%{public, location:escape_only} @, self:%{public}p, lapseSubscriptionDueToStationary:%{public}hhd}",  (uint8_t *)&__p,  0x2Cu);
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101836EA0);
    }
  }

  __int16 v36 = (os_log_s *)qword_101934988;
  if (os_signpost_enabled((os_log_t)qword_101934988))
  {
    uint64_t v37 = *(void *)(a1 + 16);
    std::stringbuf::string_type __p = (void *)68289794;
    __int16 v63 = 2082;
    int v64 = "";
    __int16 v65 = 2114;
    uint64_t v66 = v37;
    __int16 v67 = 2050;
    *(void *)__int128 v68 = a1;
    *(_WORD *)&v68[8] = 1026;
    *(_DWORD *)&v68[10] = a2;
    _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v36,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "#luLive skip starting location-updates",  "{msg%{public}.0s:#luLive skip starting location-updates, ClientKeyPath:%{public, location:escape_only} @, self:%{public}p, lapseSubscriptionDueToStationary:%{public}hhd}",  (uint8_t *)&__p,  0x2Cu);
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101836EA0);
    }
  }

  __int128 v38 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v39 = *(void *)(a1 + 16);
    int v40 = *(_DWORD *)(a1 + 184);
    std::stringbuf::string_type __p = (void *)68290050;
    __int16 v63 = 2082;
    int v64 = "";
    __int16 v65 = 2114;
    uint64_t v66 = v39;
    __int16 v67 = 1026;
    *(_DWORD *)__int128 v68 = v40;
    *(_WORD *)&v68[4] = 2050;
    *(void *)&v68[6] = a1;
    __int16 v69 = 1026;
    int v70 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#pwrlog not authorized for locations; stopping liveUpdates if started, ClientKeyPath:"
      "%{public, location:escape_only}@, LiveUpdateConfiguration:%{public}d, self:%{public}p, lapseSubscrip"
      "tionDueToStationary:%{public}hhd}",
      (uint8_t *)&__p,
      0x32u);
  }

void sub_1003FEACC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  operator delete(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_1003FEB08(uint64_t a1)
{
  *(void *)a1 = off_101836D90;
  [*(id *)(a1 + 256) releaseAccuracyEnablementAssertionForClient:*(void *)(a1 + 248)];

  *(void *)(a1 + 256) = 0LL;
  [*(id *)(a1 + 248) invalidate];

  *(void *)(a1 + 24_Block_object_dispose((const void *)(v30 - 184), 8) = 0LL;
  sub_100D55910(a1);
  int v2 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 24LL))(a1);
  sub_100D56EF4(a1, v2);
  sub_1003FF198((id **)(a1 + 224), 0LL);
  sub_1003FF16C((id **)(a1 + 216), 0LL);
  uint64_t v3 = *(void *)(a1 + 192);
  *(void *)(a1 + 192) = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  return sub_100D555B4(a1);
}

void sub_1003FEBBC(uint64_t a1)
{
  uint64_t v1 = (void *)sub_1003FEB08(a1);
  operator delete(v1);
}

void sub_1003FEBD0(uint64_t a1, CLConnectionMessage **a2)
{
  uint64_t v4 = (void *)CLConnectionMessage::name(*a2);
  int v5 = *((char *)v4 + 23);
  if (v5 < 0)
  {
    if (v4[1] != 44LL) {
      goto LABEL_7;
    }
    uint64_t v4 = (void *)*v4;
  }

  else if (v5 != 44)
  {
    goto LABEL_7;
  }

  if (!memcmp(v4, "kCLConnectionMessageDestroyUponDisconnection", 0x2CuLL))
  {
    *(_BYTE *)(a1 + 4_Block_object_dispose((const void *)(v30 - 184), 8) = 1;
    return;
  }

void sub_1003FEE14(uint64_t a1)
{
  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_101836EA0);
  }
  int v2 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
  {
    [*(id *)(a1 + 40) registrationResult];
    unsigned int v3 = [*(id *)(a1 + 40) registrationResult];
    v4[0] = 68289282;
    v4[1] = 0;
    __int16 v5 = 2082;
    uint64_t v6 = "";
    __int16 v7 = 2050;
    uint64_t v8 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:#luLive updateAuthContext change, RegistrationResult:%{public, location:CLClientRegis trationResult}lld}",  (uint8_t *)v4,  0x1Cu);
  }

  sub_1003FDD40(a1, 0);
}

uint64_t sub_1003FEF18(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 48);
}

NSDictionary *sub_1003FEF20(uint64_t a1)
{
  v4[0] = @"config";
  int v2 = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 184));
  v4[1] = @"SDKAtLeast2024";
  v5[0] = v2;
  v5[1] = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 80));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v5,  v4,  2LL);
}

uint64_t sub_1003FEFC0()
{
  return 1LL;
}

uint64_t sub_1003FEFC8()
{
  return 12415LL;
}

uint64_t sub_1003FEFD0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 184);
  if (v1 > 3)
  {
    if (v1 == 0x7FFFFFFF) {
      unsigned int v3 = 5;
    }
    else {
      unsigned int v3 = 48;
    }
    if (v1 == 4) {
      return 29LL;
    }
    else {
      return v3;
    }
  }

  else if ((v1 - 1) >= 2)
  {
    if (v1 == 3) {
      return 28LL;
    }
    else {
      return 48LL;
    }
  }

  else if ([*(id *)(a1 + 40) inUseLevelIsAtLeast:5])
  {
    return 35LL;
  }

  else
  {
    return 48LL;
  }

uint64_t sub_1003FF048(uint64_t a1)
{
  unsigned int v2 = *(_DWORD *)(a1 + 184);
  if (v2 > 4)
  {
    if (v2 != 0x7FFFFFFF) {
      return 17LL;
    }
    goto LABEL_6;
  }

  if (((1 << v2) & 0xB) == 0)
  {
LABEL_6:
    return 17LL;
  }

  return 48LL;
}

uint64_t sub_1003FF0C8(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 241)) {
    return 0LL;
  }
  unsigned __int8 v3 = [*(id *)(a1 + 40) diagnosticMask];
  else {
    uint64_t v1 = v3 & 3 | 0x10LL;
  }
  uint64_t v4 = *(void *)(a1 + 88);
  unsigned int v5 = [*(id *)(a1 + 40) isAuthorizedForServiceTypeMask:16];
  BOOL v6 = (v4 & 8) == 0;
  uint64_t v7 = v1 | 0x1000;
  if ((v5 & v6) != 0) {
    v1 |= 0x1000uLL;
  }
  if (([*(id *)(a1 + 40) isAuthorizedForServiceTypeMask:0x100000] & 1) == 0
    && [*(id *)(a1 + 40) transientAwareRegistrationResult] == 4)
  {
    return v7;
  }

  return v1;
}

void sub_1003FF16C(id **a1, id *a2)
{
  unsigned __int8 v3 = *a1;
  *a1 = a2;
  if (v3)
  {
    uint64_t v4 = sub_100400330(v3);
    operator delete(v4);
  }

void sub_1003FF198(id **a1, id *a2)
{
  unsigned __int8 v3 = *a1;
  *a1 = a2;
  if (v3)
  {
    uint64_t v4 = sub_10040036C(v3);
    operator delete(v4);
  }

uint64_t sub_1003FF1C4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(int64x2_t *)(a2 + _Block_object_dispose((const void *)(v30 - 184), 8) = vdupq_n_s64(0x7FF0000000000000uLL);
  *(_DWORD *)(a2 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 0;
  *(_DWORD *)(a2 + 27) = 0;
  int v2 = *(_DWORD *)(result + 244);
  *(_BYTE *)(a2 + 29) = v2 == 5;
  *(_BYTE *)a2 = v2 != 48;
  if (v2 != 48) {
    *(_DWORD *)(a2 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = v2;
  }
  return result;
}

void sub_1003FF204(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 232);
  v35[0] = _NSConcreteStackBlock;
  v35[1] = 3321888768LL;
  __int16 v36 = sub_1003FF5C0;
  uint64_t v37 = &unk_101836E20;
  uint64_t v38 = a1;
  sub_100246C40((uint64_t)&v39, (uint64_t)v48);
  int v46 = 0x1000000;
  uint64_t v47 = v3;
  if ([*(id *)(a1 + 40) isNonProvisionallyAuthorizedForServiceTypeMask:524304])
  {
    v36((uint64_t)v35);
  }

  else
  {
    id v4 = [*(id *)(a1 + 16) legacyClientKey];
    unsigned int v5 = objc_alloc(&OBJC_CLASS___CLLocation);
    v33[6] = v48[6];
    v33[7] = v48[7];
    v34[0] = v49[0];
    *(_OWORD *)((char *)v34 + 12) = *(_OWORD *)((char *)v49 + 12);
    void v33[2] = v48[2];
    v33[3] = v48[3];
    v33[4] = v48[4];
    v33[5] = v48[5];
    v33[0] = v48[0];
    v33[1] = v48[1];
    BOOL v6 = -[CLLocation initWithClientLocation:](v5, "initWithClientLocation:", v33);
    id v7 = objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "vendor"),  "proxyForService:forClient:",  @"CLClientManager",  @"CLClientManager");
    id v8 = objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "vendor"),  "proxyForService:",  @"CLApplicationLifecycleManager");
    sub_1002B68E8(a1 + 56, &v31);
    v29[0] = _NSConcreteStackBlock;
    v29[1] = 3321888768LL;
    void v29[2] = sub_1003FFB98;
    v29[3] = &unk_101836E58;
    v29[7] = a1;
    v29[8] = v31;
    int v30 = v32;
    if (v32)
    {
      p_shared_weak_owners = &v32->__shared_weak_owners_;
      do
        unint64_t v10 = __ldxr((unint64_t *)p_shared_weak_owners);
      while (__stxr(v10 + 1, (unint64_t *)p_shared_weak_owners));
    }

    v29[5] = v8;
    v29[6] = v35;
    v29[4] = v4;
    [v7 handleProvisionalIntermediationForService:4 forClientKey:v4 at:v6 withReply:v29];
    if (v30) {
      std::__shared_weak_count::__release_weak(v30);
    }
    if (v32) {
      std::__shared_weak_count::__release_weak(v32);
    }
  }

  uint64_t v11 = v44;
  if (v44)
  {
    p_shared_owners = (unint64_t *)&v44->__shared_owners_;
    do
      unint64_t v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }

  if (v43 < 0) {
    operator delete(__p);
  }
  int v14 = v41;
  if (v41)
  {
    int v15 = (unint64_t *)&v41->__shared_owners_;
    do
      unint64_t v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }

  int v17 = v40;
  if (v40)
  {
    __int16 v18 = (unint64_t *)&v40->__shared_owners_;
    do
      unint64_t v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }

  __int16 v20 = v54;
  if (v54)
  {
    uint64_t v21 = (unint64_t *)&v54->__shared_owners_;
    do
      unint64_t v22 = __ldaxr(v21);
    while (__stlxr(v22 - 1, v21));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }

  if (v53 < 0) {
    operator delete(v52);
  }
  os_activity_scope_state_s v23 = v51;
  if (v51)
  {
    uint64_t v24 = (unint64_t *)&v51->__shared_owners_;
    do
      unint64_t v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
  }

  uint64_t v26 = v50;
  if (v50)
  {
    int v27 = (unint64_t *)&v50->__shared_owners_;
    do
      unint64_t v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
      std::__shared_weak_count::__release_weak(v26);
    }
  }

void sub_1003FF560( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, std::__shared_weak_count *a18, uint64_t a19, std::__shared_weak_count *a20)
{
  if (a18) {
    std::__shared_weak_count::__release_weak(a18);
  }
  if (a20) {
    std::__shared_weak_count::__release_weak(a20);
  }
  sub_100243768(v20);
  sub_100243768((uint64_t)&STACK[0x738]);
  _Unwind_Resume(a1);
}

uint64_t sub_1003FF5C0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  sub_1002A5370(v30);
  uint64_t v3 = a1 + 40;
  int v4 = sub_10100DFD4((UInt8 *)(a1 + 40), (uint64_t)v30, a1 + 1568);
  if (v4)
  {
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101836EC0);
    }
    unsigned int v5 = (os_log_s *)qword_101934978;
    if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = *(void *)(v2 + 16);
      *(_DWORD *)std::stringbuf::string_type buf = 68290307;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)uint64_t v32 = 2082;
      *(void *)&void v32[2] = "";
      __int16 v33 = 2114;
      uint64_t v34 = v6;
      __int16 v35 = 2050;
      uint64_t v36 = v2;
      __int16 v37 = 1026;
      int v38 = v4;
      __int16 v39 = 1040;
      int v40 = 156;
      __int16 v41 = 2097;
      uint64_t v42 = a1 + 40;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#luLive sending location, ClientKeyPath:%{public, location:escape_only}@, self: %{public}p, locationCountAfterSerialization:%{public}d, location:%{private, location:CLClientLocation}.*P}",  buf,  0x3Cu);
      if (qword_101934970 != -1) {
        dispatch_once(&qword_101934970, &stru_101836EC0);
      }
    }

    id v7 = (os_log_s *)qword_101934978;
    if (os_signpost_enabled((os_log_t)qword_101934978))
    {
      uint64_t v8 = *(void *)(v2 + 16);
      *(_DWORD *)std::stringbuf::string_type buf = 68290307;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)uint64_t v32 = 2082;
      *(void *)&void v32[2] = "";
      __int16 v33 = 2114;
      uint64_t v34 = v8;
      __int16 v35 = 2050;
      uint64_t v36 = v2;
      __int16 v37 = 1026;
      int v38 = v4;
      __int16 v39 = 1040;
      int v40 = 156;
      __int16 v41 = 2097;
      uint64_t v42 = a1 + 40;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v7,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "#luLive sending location",  "{msg%{public}.0s:#luLive sending location, ClientKeyPath:%{public, location:escape_only}@, self: %{public}p, locationCountAfterSerialization:%{public}d, location:%{private, location:CLClientLocation}.*P}",  buf,  0x3Cu);
    }

    if (v4 == 1)
    {
      *(_DWORD *)std::stringbuf::string_type buf = sub_100D57E90(v2);
      sub_1002AC220((uint64_t)v30, "kCLConnectionMessageDiagnosticsKey", buf);
      *(void *)std::stringbuf::string_type buf = 0LL;
      *(void *)uint64_t v32 = 0LL;
      uint64_t v29 = sub_1002A59CC((uint64_t)v30);
      if (*(_DWORD *)(a1 + 136) == 12)
      {
        sub_100400434("kCLConnectionMessageCompensatedLocation", &v29, &v27);
        uint64_t v10 = v27;
        char v9 = v28;
        *(void *)std::stringbuf::string_type buf = v27;
        *(void *)uint64_t v32 = v28;
        double v11 = 0.0;
      }

      else
      {
        double v11 = *(double *)(a1 + 128);
        sub_100400494("kCLConnectionMessageLocation", &v29, &v27);
        uint64_t v10 = v27;
        char v9 = v28;
        *(void *)std::stringbuf::string_type buf = v27;
        *(void *)uint64_t v32 = v28;
      }

      uint64_t v25 = v10;
      uint64_t v26 = v9;
      if (v9)
      {
        p_shared_owners = (unint64_t *)&v9->__shared_owners_;
        do
          unint64_t v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
      }

      sub_100D55D8C(v2, (uint64_t)&v25, 16LL, 0, v11);
      __int16 v18 = v26;
      if (v26)
      {
        unint64_t v19 = (unint64_t *)&v26->__shared_owners_;
        do
          unint64_t v20 = __ldaxr(v19);
        while (__stlxr(v20 - 1, v19));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
          std::__shared_weak_count::__release_weak(v18);
        }
      }

      uint64_t v21 = *(std::__shared_weak_count **)v32;
      if (*(void *)v32)
      {
        unint64_t v22 = (unint64_t *)(*(void *)v32 + 8LL);
        do
          unint64_t v23 = __ldaxr(v22);
        while (__stlxr(v23 - 1, v22));
        if (!v23)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }

      return sub_1002A5590(v30);
    }

    sub_10123866C();
    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Core/ClientManagement/DaemonIdentifiableClients/CLDaemon LocationUpdaterLive.mm",  530,  "deliverLocationToClient_block_invoke");
    __break(1u);
  }

  else if (qword_101934970 == -1)
  {
    goto LABEL_13;
  }

  dispatch_once(&qword_101934970, &stru_101836EC0);
LABEL_13:
  uint64_t v12 = (os_log_s *)qword_101934978;
  if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v13 = *(void *)(v2 + 16);
    *(_DWORD *)std::stringbuf::string_type buf = 68290307;
    *(_WORD *)uint64_t v32 = 2082;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(void *)&void v32[2] = "";
    __int16 v33 = 2114;
    uint64_t v34 = v13;
    __int16 v35 = 2050;
    uint64_t v36 = v2;
    __int16 v37 = 1026;
    int v38 = 0;
    __int16 v39 = 1040;
    int v40 = 156;
    __int16 v41 = 2097;
    uint64_t v42 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#luLive locationData does not have any entries, ClientKeyPath:%{public, location:esca pe_only}@, self:%{public}p, locationCountAfterSerialization:%{public}d, location:%{private, locati on:CLClientLocation}.*P}",  buf,  0x3Cu);
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101836EC0);
    }
  }

  int v14 = (os_log_s *)qword_101934978;
  if (os_signpost_enabled((os_log_t)qword_101934978))
  {
    uint64_t v15 = *(void *)(v2 + 16);
    *(_DWORD *)std::stringbuf::string_type buf = 68290307;
    *(_WORD *)uint64_t v32 = 2082;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(void *)&void v32[2] = "";
    __int16 v33 = 2114;
    uint64_t v34 = v15;
    __int16 v35 = 2050;
    uint64_t v36 = v2;
    __int16 v37 = 1026;
    int v38 = 0;
    __int16 v39 = 1040;
    int v40 = 156;
    __int16 v41 = 2097;
    uint64_t v42 = v3;
    _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v14,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "#luLive locationData does not have any entries",  "{msg%{public}.0s:#luLive locationData does not have any entries, ClientKeyPath:%{public, location:esca pe_only}@, self:%{public}p, locationCountAfterSerialization:%{public}d, location:%{private, locati on:CLClientLocation}.*P}",  buf,  0x3Cu);
  }

  return sub_1002A5590(v30);
}

void sub_1003FFAF4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  uint64_t v11 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  sub_10000AE14((uint64_t)va1);
  sub_1002A5590((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1003FFB40(uint64_t a1, uint64_t a2)
{
  return sub_100246C40(a1 + 40, a2 + 40);
}

uint64_t sub_1003FFB4C(uint64_t a1)
{
  return sub_10000AE14(a1 + 720);
}

void sub_1003FFB98(uint64_t a1, int a2)
{
  if (a2)
  {
    uint64_t v3 = *(void *)(a1 + 56);
    uint64_t v13 = 0LL;
    uint64_t v14 = &v13;
    uint64_t v15 = 0x2020000000LL;
    char v16 = 0;
    uint64_t v4 = *(void *)(a1 + 72);
    if (!v4 || *(void *)(v4 + 8) == -1LL) {
      goto LABEL_6;
    }
    if (sub_100D55504(v3))
    {
      if (!*((_BYTE *)v14 + 24))
      {
LABEL_6:
        if (qword_101934980 != -1) {
          dispatch_once(&qword_101934980, &stru_101836EA0);
        }
        unsigned int v5 = (os_log_s *)qword_101934988;
        if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
        {
          id v6 = objc_msgSend(*(id *)(a1 + 32), "UTF8String", v13);
          *(_DWORD *)std::stringbuf::string_type buf = 68289282;
          int v18 = 0;
          __int16 v19 = 2082;
          unint64_t v20 = "";
          __int16 v21 = 2082;
          id v22 = v6;
          _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#luLive ProvisionalIntermediation launching app, Client:%{public, location:escape_only}s}",  buf,  0x1Cu);
          if (qword_101934980 != -1) {
            dispatch_once(&qword_101934980, &stru_101836EA0);
          }
        }

        id v7 = (os_log_s *)qword_101934988;
        if (os_signpost_enabled((os_log_t)qword_101934988))
        {
          id v8 = [*(id *)(a1 + 32) UTF8String];
          *(_DWORD *)std::stringbuf::string_type buf = 68289282;
          int v18 = 0;
          __int16 v19 = 2082;
          unint64_t v20 = "";
          __int16 v21 = 2082;
          id v22 = v8;
          _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v7,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "#luLive ProvisionalIntermediation launching app",  "{msg%{public}.0s:#luLive ProvisionalIntermediation launching app, Client:%{public, location:escape_only}s}",  buf,  0x1Cu);
        }

        objc_msgSend( *(id *)(a1 + 40),  "launchApplication:requiringAuthForServiceMask:",  *(void *)(a1 + 32),  16,  v13);
LABEL_23:
        _Block_object_dispose(&v13, 8);
        return;
      }
    }

    else
    {
      *((_BYTE *)v14 + sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&__p, &v9, 24) = 1;
    }

    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101836EA0);
    }
    char v9 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
    {
      id v10 = objc_msgSend(*(id *)(a1 + 32), "UTF8String", v13);
      *(_DWORD *)std::stringbuf::string_type buf = 68289282;
      int v18 = 0;
      __int16 v19 = 2082;
      unint64_t v20 = "";
      __int16 v21 = 2082;
      id v22 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#luLive ProvisionalIntermediation delievering location block, Client:%{public, loca tion:escape_only}s}",  buf,  0x1Cu);
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101836EA0);
      }
    }

    uint64_t v11 = (os_log_s *)qword_101934988;
    if (os_signpost_enabled((os_log_t)qword_101934988))
    {
      id v12 = [*(id *)(a1 + 32) UTF8String];
      *(_DWORD *)std::stringbuf::string_type buf = 68289282;
      int v18 = 0;
      __int16 v19 = 2082;
      unint64_t v20 = "";
      __int16 v21 = 2082;
      id v22 = v12;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v11,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "#luLive ProvisionalIntermediation delievering location block",  "{msg%{public}.0s:#luLive ProvisionalIntermediation delievering location block, Client:%{public, loca tion:escape_only}s}",  buf,  0x1Cu);
    }

    (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
    goto LABEL_23;
  }

void sub_1003FFED8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_1003FFF00(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 72);
  *(void *)(result + 64) = *(void *)(a2 + 64);
  *(void *)(result + sub_10000AE14(v1 - 72) = v2;
  if (v2)
  {
    uint64_t v3 = (unint64_t *)(v2 + 16);
    do
      unint64_t v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }

  return result;
}

void sub_1003FFF24(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 72);
  if (v1) {
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_1003FFF34(uint64_t a1, uint64_t a2, int *a3, uint64_t a4)
{
  int v7 = *a3;
  if (v7 == 9)
  {
    *(void *)(a1 + 88) |= 0x20uLL;
    id v24 = +[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary");
    objc_msgSend( v24,  "setObject:forKeyedSubscript:",  +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", sub_100D57E90(a1)),  @"kCLConnectionMessageDiagnosticsKey");
    sub_1004004F4("kCLConnectionMessageLocationUnavailable", &v24, buf);
    uint64_t v22 = *(void *)buf;
    unint64_t v23 = *(std::__shared_weak_count **)v26;
    if (*(void *)v26)
    {
      id v8 = (unint64_t *)(*(void *)v26 + 8LL);
      do
        unint64_t v9 = __ldxr(v8);
      while (__stxr(v9 + 1, v8));
    }

    sub_100D55D8C(a1, (uint64_t)&v22, 16LL, 1, 0.0);
    id v10 = v23;
    if (v23)
    {
      p_shared_owners = (unint64_t *)&v23->__shared_owners_;
      do
        unint64_t v12 = __ldaxr(p_shared_owners);
      while (__stlxr(v12 - 1, p_shared_owners));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }

    uint64_t v13 = *(std::__shared_weak_count **)v26;
    if (*(void *)v26)
    {
      uint64_t v14 = (unint64_t *)(*(void *)v26 + 8LL);
      do
        unint64_t v15 = __ldaxr(v14);
      while (__stlxr(v15 - 1, v14));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
        std::__shared_weak_count::__release_weak(v13);
      }
    }
  }

  else
  {
    if (v7 == 5)
    {
LABEL_4:
      *(void *)(a1 + 88) &= ~0x20uLL;
      sub_1003FF204(a1, a4);
      return;
    }

    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101836EA0);
    }
    char v16 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_FAULT))
    {
      uint64_t v17 = *(void *)(a1 + 16);
      int v18 = *a3;
      *(_DWORD *)std::stringbuf::string_type buf = 68289794;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)uint64_t v26 = 2082;
      *(void *)&void v26[2] = "";
      __int16 v27 = 2114;
      uint64_t v28 = v17;
      __int16 v29 = 2050;
      uint64_t v30 = a1;
      __int16 v31 = 1026;
      int v32 = v18;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:#luLive unkown location notification, ClientKeyPath:%{public, location:escape_only} @, self:%{public}p, Notification:%{public}d}",  buf,  0x2Cu);
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101836EA0);
      }
    }

    __int16 v19 = (os_log_s *)qword_101934988;
    if (os_signpost_enabled((os_log_t)qword_101934988))
    {
      uint64_t v20 = *(void *)(a1 + 16);
      int v21 = *a3;
      *(_DWORD *)std::stringbuf::string_type buf = 68289794;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)uint64_t v26 = 2082;
      *(void *)&void v26[2] = "";
      __int16 v27 = 2114;
      uint64_t v28 = v20;
      __int16 v29 = 2050;
      uint64_t v30 = a1;
      __int16 v31 = 1026;
      int v32 = v21;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v19,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "#luLive unkown location notification",  "{msg%{public}.0s:#luLive unkown location notification, ClientKeyPath:%{public, location:escape_only} @, self:%{public}p, Notification:%{public}d}",  buf,  0x2Cu);
    }
  }