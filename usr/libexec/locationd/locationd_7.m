void sub_1001BCB78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1001BCB90(void *result)
{
  if ((void *)qword_1019A0AA8 != result)
  {
    v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
    }
    uint64_t v4 = v1[3];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
    }
    uint64_t v5 = v1[4];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
    }
    uint64_t v6 = v1[5];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
    }
    result = (void *)v1[6];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_1001BCC3C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101827070;
  sub_1001BCB90(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001BCC6C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101827070;
  sub_1001BCB90(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v2);
}

uint64_t sub_1001BCCA0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0AA8;
  if (!qword_1019A0AA8)
  {
    sub_1001BBE2C(0LL, a2, a3, a4);
    return qword_1019A0AA8;
  }

  return result;
}

double sub_1001BCCCC()
{
  v0 = (char *)operator new(0x40uLL);
  *(void *)v0 = off_101827070;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *((void *)v0 + 7) = 0LL;
  return result;
}

uint64_t sub_1001BCD04(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(_BYTE *)(result + 60);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(result + 60) & 1) != 0)
    {
      double result = *(void *)(result + 8);
      if (result)
      {
        double result = sub_1001BCDA0(result);
        int v2 = *(_DWORD *)(v1 + 60);
      }
    }

    if ((v2 & 2) != 0)
    {
      double result = *(void *)(v1 + 16);
      if (result)
      {
        double result = sub_1001BCF60(result);
        int v2 = *(_DWORD *)(v1 + 60);
      }
    }

    if ((v2 & 4) != 0)
    {
      double result = *(void *)(v1 + 24);
      if (result)
      {
        double result = sub_1001BD004(result);
        int v2 = *(_DWORD *)(v1 + 60);
      }
    }

    if ((v2 & 8) != 0)
    {
      double result = *(void *)(v1 + 32);
      if (result)
      {
        double result = sub_1001BD0FC(result);
        int v2 = *(_DWORD *)(v1 + 60);
      }
    }

    if ((v2 & 0x10) != 0)
    {
      double result = *(void *)(v1 + 40);
      if (result)
      {
        double result = sub_1001BD17C(result);
        int v2 = *(_DWORD *)(v1 + 60);
      }
    }

    if ((v2 & 0x20) != 0)
    {
      double result = *(void *)(v1 + 48);
      if (result) {
        double result = sub_1001BD1E0(result);
      }
    }
  }

  *(_DWORD *)(v1 + 60) = 0;
  return result;
}

uint64_t sub_1001BCDA0(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 292);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      double result = *(void *)(result + 8);
      if (result)
      {
        double result = sub_1001C00BC(result);
        int v2 = *(_DWORD *)(v1 + 292);
      }
    }

    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
  }

  if ((v2 & 0xFF00) != 0)
  {
    *(_OWORD *)(v1 + 80) = 0u;
    *(_OWORD *)(v1 + 96) = 0u;
    *(_OWORD *)(v1 + 64) = 0u;
  }

  if ((v2 & 0xFF0000) != 0)
  {
    *(_OWORD *)(v1 + 160) = 0u;
    *(_OWORD *)(v1 + 176) = 0u;
  }

  if (*(int *)(v1 + 120) >= 1)
  {
    uint64_t v3 = 0LL;
    do
    {
      uint64_t v4 = *(void *)(*(void *)(v1 + 112) + 8 * v3);
      double result = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 32LL))(v4);
      ++v3;
    }

    while (v3 < *(int *)(v1 + 120));
  }

  *(_DWORD *)(v1 + 120) = 0;
  if (*(int *)(v1 + 144) >= 1)
  {
    uint64_t v5 = 0LL;
    do
    {
      uint64_t v6 = *(void *)(*(void *)(v1 + 136) + 8 * v5);
      double result = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 32LL))(v6);
      ++v5;
    }

    while (v5 < *(int *)(v1 + 144));
  }

  *(_DWORD *)(v1 + 144) = 0;
  if (*(int *)(v1 + 200) >= 1)
  {
    uint64_t v7 = 0LL;
    do
    {
      uint64_t v8 = *(void *)(*(void *)(v1 + 192) + 8 * v7);
      double result = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 32LL))(v8);
      ++v7;
    }

    while (v7 < *(int *)(v1 + 200));
  }

  *(_DWORD *)(v1 + 200) = 0;
  if (*(int *)(v1 + 224) >= 1)
  {
    uint64_t v9 = 0LL;
    do
    {
      uint64_t v10 = *(void *)(*(void *)(v1 + 216) + 8 * v9);
      double result = (*(uint64_t (**)(uint64_t))(*(void *)v10 + 32LL))(v10);
      ++v9;
    }

    while (v9 < *(int *)(v1 + 224));
  }

  *(_DWORD *)(v1 + 224) = 0;
  if (*(int *)(v1 + 248) >= 1)
  {
    uint64_t v11 = 0LL;
    do
    {
      uint64_t v12 = *(void *)(*(void *)(v1 + 240) + 8 * v11);
      double result = (*(uint64_t (**)(uint64_t))(*(void *)v12 + 32LL))(v12);
      ++v11;
    }

    while (v11 < *(int *)(v1 + 248));
  }

  *(_DWORD *)(v1 + 248) = 0;
  if (*(int *)(v1 + 272) >= 1)
  {
    uint64_t v13 = 0LL;
    do
    {
      uint64_t v14 = *(void *)(*(void *)(v1 + 264) + 8 * v13);
      double result = (*(uint64_t (**)(uint64_t))(*(void *)v14 + 32LL))(v14);
      ++v13;
    }

    while (v13 < *(int *)(v1 + 272));
  }

  *(_DWORD *)(v1 + 272) = 0;
  *(_DWORD *)(v1 + 292) = 0;
  return result;
}

uint64_t sub_1001BCF60(uint64_t result)
{
  uint64_t v1 = result;
  unsigned int v2 = *(_DWORD *)(result + 228);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      double result = *(void *)(result + 8);
      if (result)
      {
        double result = sub_1001C00BC(result);
        unsigned int v2 = *(_DWORD *)(v1 + 228);
      }
    }

    *(void *)(v1 + 48) = 0LL;
    *(_OWORD *)(v1 + 16) = 0u;
    *(_OWORD *)(v1 + 32) = 0u;
  }

  if ((v2 & 0xFF00) != 0)
  {
    *(_DWORD *)(v1 + 136) = 0;
    *(_OWORD *)(v1 + 56) = 0u;
    *(_OWORD *)(v1 + 72) = 0u;
    *(_OWORD *)(v1 + 88) = 0u;
    *(void *)(v1 + 104) = 0LL;
  }

  if ((v2 & 0xFF0000) != 0)
  {
    *(void *)(v1 + 112) = 0LL;
    *(void *)(v1 + 120) = 0LL;
    *(void *)(v1 + 128) = 0LL;
    *(_OWORD *)(v1 + 144) = 0u;
    *(_OWORD *)(v1 + 160) = 0u;
    *(void *)(v1 + 176) = 0LL;
  }

  if (HIBYTE(v2))
  {
    *(_DWORD *)(v1 + 140) = 0;
    *(_OWORD *)(v1 + 184) = 0u;
    *(_OWORD *)(v1 + 200) = 0u;
    *(void *)(v1 + 216) = 0LL;
  }

  *(_DWORD *)(v1 + 228) = 0;
  return result;
}

uint64_t sub_1001BD004(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 92);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      double result = *(void *)(result + 8);
      if (result)
      {
        double result = sub_1001C00BC(result);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }

    if ((v2 & 2) != 0)
    {
      double result = *(void *)(v1 + 16);
      if (result)
      {
        double result = sub_1001C67E8(result);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }

    if ((v2 & 4) != 0)
    {
      double result = *(void *)(v1 + 24);
      if (result)
      {
        double result = sub_1001C6844(result);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }

    if ((v2 & 8) != 0)
    {
      double result = *(void *)(v1 + 32);
      if (result)
      {
        double result = sub_1001C68B0(result);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }

    if ((v2 & 0x10) != 0)
    {
      double result = *(void *)(v1 + 40);
      if (result)
      {
        double result = sub_1001C690C(result);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }

    if ((v2 & 0x20) != 0)
    {
      double result = *(void *)(v1 + 48);
      if (result)
      {
        double result = sub_1001C6968(result);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }

    if ((v2 & 0x40) != 0)
    {
      double result = *(void *)(v1 + 56);
      if (result)
      {
        double result = sub_1001C69D4(result);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }

    if ((v2 & 0x80) != 0)
    {
      double result = *(void *)(v1 + 64);
      if (result)
      {
        double result = sub_1001C6A30(result);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }
  }

  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      double result = *(void *)(v1 + 72);
      if (result)
      {
        double result = sub_1001C6A8C(result);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }

    if ((v2 & 0x200) != 0)
    {
      double result = *(void *)(v1 + 80);
      if (result) {
        double result = sub_1001C6AE8(result);
      }
    }
  }

  *(_DWORD *)(v1 + 92) = 0;
  return result;
}

uint64_t sub_1001BD0FC(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 160);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      double result = *(void *)(result + 8);
      if (result)
      {
        double result = sub_1001C00BC(result);
        int v2 = *(_DWORD *)(v1 + 160);
      }
    }

    *(_WORD *)(v1 + 152) = 0;
    *(_OWORD *)(v1 + 16) = 0u;
    *(_OWORD *)(v1 + 32) = 0u;
    *(void *)(v1 + 48) = 0LL;
  }

  if ((v2 & 0xFF00) != 0)
  {
    *(_OWORD *)(v1 + 104) = 0u;
    *(_OWORD *)(v1 + 88) = 0u;
    *(_OWORD *)(v1 + 72) = 0u;
    *(_OWORD *)(v1 + 56) = 0u;
  }

  if ((v2 & 0xFF0000) != 0)
  {
    *(_OWORD *)(v1 + 136) = 0u;
    *(_OWORD *)(v1 + 120) = 0u;
  }

  *(_DWORD *)(v1 + 160) = 0;
  return result;
}

uint64_t sub_1001BD17C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 96);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      double result = *(void *)(result + 8);
      if (result)
      {
        double result = sub_1001C00BC(result);
        int v2 = *(_DWORD *)(v1 + 96);
      }
    }

    *(_WORD *)(v1 + 88) = 0;
    *(_OWORD *)(v1 + 16) = 0u;
    *(_OWORD *)(v1 + 32) = 0u;
    *(void *)(v1 + 48) = 0LL;
  }

  if ((v2 & 0xFF00) != 0)
  {
    *(_OWORD *)(v1 + 72) = 0u;
    *(_OWORD *)(v1 + 56) = 0u;
  }

  *(_DWORD *)(v1 + 96) = 0;
  return result;
}

uint64_t sub_1001BD1E0(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 168);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      double result = *(void *)(result + 8);
      if (result)
      {
        double result = sub_1001C00BC(result);
        int v2 = *(_DWORD *)(v1 + 168);
      }
    }

    *(_OWORD *)(v1 + 44) = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
    *(_OWORD *)(v1 + 32) = 0u;
  }

  if ((v2 & 0x3FC00) != 0)
  {
    *(_DWORD *)(v1 + 60) = 0;
    *(void *)(v1 + 144) = 0LL;
    *(void *)(v1 + 152) = 0LL;
    *(void *)(v1 + 136) = 0LL;
    *(_DWORD *)(v1 + 160) = 0;
  }

  if (*(int *)(v1 + 72) >= 1)
  {
    uint64_t v3 = 0LL;
    do
    {
      uint64_t v4 = *(void *)(*(void *)(v1 + 64) + 8 * v3);
      double result = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 32LL))(v4);
      ++v3;
    }

    while (v3 < *(int *)(v1 + 72));
  }

  *(_DWORD *)(v1 + 72) = 0;
  if (*(int *)(v1 + 96) >= 1)
  {
    uint64_t v5 = 0LL;
    do
    {
      uint64_t v6 = *(void *)(*(void *)(v1 + 88) + 8 * v5);
      double result = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 32LL))(v6);
      ++v5;
    }

    while (v5 < *(int *)(v1 + 96));
  }

  *(_DWORD *)(v1 + 96) = 0;
  if (*(int *)(v1 + 120) >= 1)
  {
    uint64_t v7 = 0LL;
    do
    {
      uint64_t v8 = *(void *)(*(void *)(v1 + 112) + 8 * v7);
      double result = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 32LL))(v8);
      ++v7;
    }

    while (v7 < *(int *)(v1 + 120));
  }

  *(_DWORD *)(v1 + 120) = 0;
  *(_DWORD *)(v1 + 168) = 0;
  return result;
}

uint64_t sub_1001BD2EC( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 < *((void *)this + 2) && (*v5 & 0x80000000) == 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
      goto LABEL_6;
    }

    TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = (_DWORD)TagFallback;
    if (!(_DWORD)TagFallback) {
      return 1LL;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_23;
        }
        *(_DWORD *)(a1 + 60) |= 1u;
        uint64_t v8 = *(char **)(a1 + 8);
        if (!v8)
        {
          uint64_t v8 = (char *)operator new(0x128uLL);
          *(void *)uint64_t v8 = off_1018272C8;
          *((void *)v8 + 17) = 0LL;
          *((void *)v8 + 18) = 0LL;
          *((_DWORD *)v8 + 38) = 0;
          *((void *)v8 + 27) = 0LL;
          *((void *)v8 + 28) = 0LL;
          *((_DWORD *)v8 + 58) = 0;
          *((void *)v8 + 30) = 0LL;
          *((void *)v8 + 31) = 0LL;
          *((_DWORD *)v8 + 64) = 0;
          *((void *)v8 + 33) = 0LL;
          *((void *)v8 + 34) = 0LL;
          *((_DWORD *)v8 + 70) = 0;
          *((void *)v8 + 36) = 0LL;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *(_OWORD *)(v8 + 40) = 0u;
          *(_OWORD *)(v8 + 56) = 0u;
          *(_OWORD *)(v8 + 72) = 0u;
          *(_OWORD *)(v8 + 88) = 0u;
          *(_OWORD *)(v8 + 104) = 0u;
          *(_OWORD *)(v8 + 116) = 0u;
          *((_DWORD *)v8 + 52) = 0;
          *((_OWORD *)v8 + 11) = 0u;
          *((_OWORD *)v8 + 12) = 0u;
          *((_OWORD *)v8 + 10) = 0u;
          *(void *)(a1 + 8) = v8;
        }

        uint64_t v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v63)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v63 = *v9;
          *((void *)this + 1) = v9 + 1;
        }

        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0LL;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v63);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        v17 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v17 + 1;
        goto LABEL_35;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_23;
        }
LABEL_35:
        *(_DWORD *)(a1 + 60) |= 2u;
        v18 = *(char **)(a1 + 16);
        if (!v18)
        {
          v18 = (char *)operator new(0xE8uLL);
          *(void *)v18 = &off_101827340;
          *(_OWORD *)(v18 + 8) = 0u;
          *(_OWORD *)(v18 + 24) = 0u;
          *(_OWORD *)(v18 + 40) = 0u;
          *(_OWORD *)(v18 + 56) = 0u;
          *(_OWORD *)(v18 + 72) = 0u;
          *(_OWORD *)(v18 + 88) = 0u;
          *(_OWORD *)(v18 + 104) = 0u;
          *(_OWORD *)(v18 + 120) = 0u;
          *(_OWORD *)(v18 + 136) = 0u;
          *(_OWORD *)(v18 + 152) = 0u;
          *(_OWORD *)(v18 + 168) = 0u;
          *(_OWORD *)(v18 + 184) = 0u;
          *(_OWORD *)(v18 + 200) = 0u;
          *(_OWORD *)(v18 + 216) = 0u;
          *(void *)(a1 + 16) = v18;
        }

        v19 = (char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v63)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v63 = *v19;
          *((void *)this + 1) = v19 + 1;
        }

        int v20 = *((_DWORD *)this + 14);
        int v21 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v20 + 1;
        if (v20 >= v21) {
          return 0LL;
        }
        int v22 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v63);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v22);
        int v24 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v24, 1);
        int v25 = v24 - 1;
        if (v25 < 0 == v15) {
          *((_DWORD *)this + 14) = v25;
        }
        v26 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v26 + 1;
LABEL_49:
        *(_DWORD *)(a1 + 60) |= 4u;
        v27 = *(char **)(a1 + 24);
        if (!v27)
        {
          v27 = (char *)operator new(0x60uLL);
          *(void *)v27 = off_1018274A8;
          *(_OWORD *)(v27 + 8) = 0u;
          *(_OWORD *)(v27 + 24) = 0u;
          *(_OWORD *)(v27 + 40) = 0u;
          *(_OWORD *)(v27 + 56) = 0u;
          *(_OWORD *)(v27 + 72) = 0u;
          *((void *)v27 + 11) = 0LL;
          *(void *)(a1 + 24) = v27;
        }

        v28 = (char *)*((void *)this + 1);
        if ((unint64_t)v28 >= *((void *)this + 2) || *v28 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v63)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v63 = *v28;
          *((void *)this + 1) = v28 + 1;
        }

        int v29 = *((_DWORD *)this + 14);
        int v30 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v29 + 1;
        if (v29 >= v30) {
          return 0LL;
        }
        int v31 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v63);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v31);
        int v33 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v33, 1);
        int v34 = v33 - 1;
        if (v34 < 0 == v15) {
          *((_DWORD *)this + 14) = v34;
        }
        v35 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v35 + 1;
LABEL_63:
        *(_DWORD *)(a1 + 60) |= 8u;
        v36 = *(char **)(a1 + 32);
        if (!v36)
        {
          v36 = (char *)operator new(0xA8uLL);
          *(void *)v36 = &off_1018273B8;
          *((_DWORD *)v36 + 39) = 0;
          *((_DWORD *)v36 + 40) = 0;
          *(_OWORD *)(v36 + 8) = 0u;
          *(_OWORD *)(v36 + 24) = 0u;
          *(_OWORD *)(v36 + 40) = 0u;
          *(_OWORD *)(v36 + 56) = 0u;
          *(_OWORD *)(v36 + 72) = 0u;
          *(_OWORD *)(v36 + 88) = 0u;
          *(_OWORD *)(v36 + 104) = 0u;
          *(_OWORD *)(v36 + 120) = 0u;
          *(_OWORD *)(v36 + 136) = 0u;
          *((_WORD *)v36 + 76) = 0;
          *(void *)(a1 + 32) = v36;
        }

        v37 = (char *)*((void *)this + 1);
        if ((unint64_t)v37 >= *((void *)this + 2) || *v37 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v63)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v63 = *v37;
          *((void *)this + 1) = v37 + 1;
        }

        int v38 = *((_DWORD *)this + 14);
        int v39 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v38 + 1;
        if (v38 >= v39) {
          return 0LL;
        }
        int v40 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v63);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v40);
        int v42 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v42, 1);
        int v43 = v42 - 1;
        if (v43 < 0 == v15) {
          *((_DWORD *)this + 14) = v43;
        }
        v44 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v44 + 1;
LABEL_77:
        *(_DWORD *)(a1 + 60) |= 0x10u;
        v45 = *(char **)(a1 + 40);
        if (!v45)
        {
          v45 = (char *)operator new(0x68uLL);
          *(void *)v45 = &off_101827430;
          *((_DWORD *)v45 + 23) = 0;
          *((_DWORD *)v45 + 24) = 0;
          *(_OWORD *)(v45 + 8) = 0u;
          *(_OWORD *)(v45 + 24) = 0u;
          *(_OWORD *)(v45 + 40) = 0u;
          *(_OWORD *)(v45 + 56) = 0u;
          *(_OWORD *)(v45 + 72) = 0u;
          *((_WORD *)v45 + 44) = 0;
          *(void *)(a1 + 40) = v45;
        }

        v46 = (char *)*((void *)this + 1);
        if ((unint64_t)v46 >= *((void *)this + 2) || *v46 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v63)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v63 = *v46;
          *((void *)this + 1) = v46 + 1;
        }

        int v47 = *((_DWORD *)this + 14);
        int v48 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v47 + 1;
        if (v47 >= v48) {
          return 0LL;
        }
        int v49 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v63);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v49);
        int v51 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v51, 1);
        int v52 = v51 - 1;
        if (v52 < 0 == v15) {
          *((_DWORD *)this + 14) = v52;
        }
        v53 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v53 + 1;
LABEL_91:
        *(_DWORD *)(a1 + 60) |= 0x20u;
        v54 = *(char **)(a1 + 48);
        if (!v54)
        {
          v54 = (char *)operator new(0xB0uLL);
          *(void *)v54 = off_101827250;
          *((void *)v54 + 11) = 0LL;
          *((void *)v54 + 12) = 0LL;
          *((_DWORD *)v54 + 26) = 0;
          *((void *)v54 + 14) = 0LL;
          *((void *)v54 + 15) = 0LL;
          *((_DWORD *)v54 + 32) = 0;
          *(_OWORD *)(v54 + 136) = 0u;
          *(_OWORD *)(v54 + 152) = 0u;
          *((_DWORD *)v54 + 42) = 0;
          *(_OWORD *)(v54 + 8) = 0u;
          *(_OWORD *)(v54 + 24) = 0u;
          *(_OWORD *)(v54 + 40) = 0u;
          *(_OWORD *)(v54 + 56) = 0u;
          *(_OWORD *)(v54 + 68) = 0u;
          *(void *)(a1 + 48) = v54;
        }

        v55 = (char *)*((void *)this + 1);
        if ((unint64_t)v55 >= *((void *)this + 2) || *v55 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v63)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v63 = *v55;
          *((void *)this + 1) = v55 + 1;
        }

        int v56 = *((_DWORD *)this + 14);
        int v57 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v56 + 1;
        if (v56 >= v57) {
          return 0LL;
        }
        int v58 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v63);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v58);
        int v60 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v60, 1);
        int v61 = v60 - 1;
        if (v61 < 0 == v15) {
          *((_DWORD *)this + 14) = v61;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1LL;
          *((_BYTE *)this + 36) = 1;
          return result;
        }

        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_49;
        }
        goto LABEL_23;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_63;
        }
        goto LABEL_23;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_77;
        }
        goto LABEL_23;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_23;
        }
        goto LABEL_91;
      default:
        int v7 = TagFallback & 7;
LABEL_23:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001BDAA4( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 60);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0AA8 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_1019A0AA8 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v8,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }

uint64_t sub_1001BDBD0(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 60);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0LL;
    goto LABEL_47;
  }

  if ((*(_BYTE *)(a1 + 60) & 1) == 0)
  {
    uint64_t v4 = 0LL;
    if ((*(_BYTE *)(a1 + 60) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }

  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_1019A0AA8 + 8);
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001C3550(v5, a2);
  int v7 = (int)v6;
  else {
    int v8 = 1;
  }
  uint64_t v4 = (v7 + v8 + 1);
  int v3 = *(_DWORD *)(a1 + 60);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    uint64_t v9 = *(void *)(a1 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_1019A0AA8 + 16);
    }
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001C4BD8(v9, a2);
    int v11 = (int)v10;
    else {
      int v12 = 1;
    }
    uint64_t v4 = (v4 + v11 + v12 + 1);
    int v3 = *(_DWORD *)(a1 + 60);
  }

void sub_1001BDDD0(uint64_t a1, void *lpsrc)
{
}

double sub_1001BDE1C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v64,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPRavenOutput.pb.cc",  2971LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v64,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v63, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v64);
  }

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 112),  *(_DWORD *)(a2 + 120) + *(_DWORD *)(a1 + 120));
  if (*(int *)(a2 + 120) >= 1)
  {
    uint64_t v5 = 0LL;
    do
    {
      uint64_t v6 = *(void *)(*(void *)(a2 + 112) + 8 * v5);
      int v7 = *(_DWORD *)(a1 + 124);
      uint64_t v8 = *(int *)(a1 + 120);
      if ((int)v8 >= v7)
      {
        if (v7 == *(_DWORD *)(a1 + 128))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 112),  v7 + 1);
          int v7 = *(_DWORD *)(a1 + 124);
        }

        *(_DWORD *)(a1 + 124) = v7 + 1;
        uint64_t v10 = (char *)operator new(0x30uLL);
        *(void *)uint64_t v10 = off_1018271D8;
        *(_OWORD *)(v10 + 8) = 0u;
        *(_OWORD *)(v10 + 24) = 0u;
        *((_DWORD *)v10 + 10) = 0;
        uint64_t v11 = *(void *)(a1 + 112);
        uint64_t v12 = *(int *)(a1 + 120);
        *(_DWORD *)(a1 + 120) = v12 + 1;
        *(void *)(v11 + 8 * v12) = v10;
      }

      else
      {
        uint64_t v9 = *(void *)(a1 + 112);
        *(_DWORD *)(a1 + 120) = v8 + 1;
        uint64_t v10 = *(char **)(v9 + 8 * v8);
      }

      sub_1001C08F8((uint64_t)v10, v6);
      ++v5;
    }

    while (v5 < *(int *)(a2 + 120));
  }

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 136),  *(_DWORD *)(a2 + 144) + *(_DWORD *)(a1 + 144));
  if (*(int *)(a2 + 144) >= 1)
  {
    uint64_t v13 = 0LL;
    do
    {
      uint64_t v14 = *(void *)(*(void *)(a2 + 136) + 8 * v13);
      int v15 = *(_DWORD *)(a1 + 148);
      uint64_t v16 = *(int *)(a1 + 144);
      if ((int)v16 >= v15)
      {
        if (v15 == *(_DWORD *)(a1 + 152))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 136),  v15 + 1);
          int v15 = *(_DWORD *)(a1 + 148);
        }

        *(_DWORD *)(a1 + 148) = v15 + 1;
        v18 = (char *)operator new(0x30uLL);
        *(void *)v18 = off_1018271D8;
        *(_OWORD *)(v18 + 8) = 0u;
        *(_OWORD *)(v18 + 24) = 0u;
        *((_DWORD *)v18 + 10) = 0;
        uint64_t v19 = *(void *)(a1 + 136);
        uint64_t v20 = *(int *)(a1 + 144);
        *(_DWORD *)(a1 + 144) = v20 + 1;
        *(void *)(v19 + 8 * v20) = v18;
      }

      else
      {
        uint64_t v17 = *(void *)(a1 + 136);
        *(_DWORD *)(a1 + 144) = v16 + 1;
        v18 = *(char **)(v17 + 8 * v16);
      }

      sub_1001C08F8((uint64_t)v18, v14);
      ++v13;
    }

    while (v13 < *(int *)(a2 + 144));
  }

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 192),  *(_DWORD *)(a2 + 200) + *(_DWORD *)(a1 + 200));
  if (*(int *)(a2 + 200) >= 1)
  {
    uint64_t v21 = 0LL;
    do
    {
      uint64_t v22 = *(void *)(*(void *)(a2 + 192) + 8 * v21);
      int v23 = *(_DWORD *)(a1 + 204);
      uint64_t v24 = *(int *)(a1 + 200);
      if ((int)v24 >= v23)
      {
        if (v23 == *(_DWORD *)(a1 + 208))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 192),  v23 + 1);
          int v23 = *(_DWORD *)(a1 + 204);
        }

        *(_DWORD *)(a1 + 204) = v23 + 1;
        v26 = (char *)operator new(0x30uLL);
        *(void *)v26 = off_1018271D8;
        *(_OWORD *)(v26 + 8) = 0u;
        *(_OWORD *)(v26 + 24) = 0u;
        *((_DWORD *)v26 + 10) = 0;
        uint64_t v27 = *(void *)(a1 + 192);
        uint64_t v28 = *(int *)(a1 + 200);
        *(_DWORD *)(a1 + 200) = v28 + 1;
        *(void *)(v27 + 8 * v28) = v26;
      }

      else
      {
        uint64_t v25 = *(void *)(a1 + 192);
        *(_DWORD *)(a1 + 200) = v24 + 1;
        v26 = *(char **)(v25 + 8 * v24);
      }

      sub_1001C08F8((uint64_t)v26, v22);
      ++v21;
    }

    while (v21 < *(int *)(a2 + 200));
  }

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 216),  *(_DWORD *)(a2 + 224) + *(_DWORD *)(a1 + 224));
  if (*(int *)(a2 + 224) >= 1)
  {
    uint64_t v29 = 0LL;
    do
    {
      uint64_t v30 = *(void *)(*(void *)(a2 + 216) + 8 * v29);
      int v31 = *(_DWORD *)(a1 + 228);
      uint64_t v32 = *(int *)(a1 + 224);
      if ((int)v32 >= v31)
      {
        if (v31 == *(_DWORD *)(a1 + 232))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 216),  v31 + 1);
          int v31 = *(_DWORD *)(a1 + 228);
        }

        *(_DWORD *)(a1 + 228) = v31 + 1;
        int v34 = (char *)operator new(0x30uLL);
        *(void *)int v34 = off_1018271D8;
        *(_OWORD *)(v34 + 8) = 0u;
        *(_OWORD *)(v34 + 24) = 0u;
        *((_DWORD *)v34 + 10) = 0;
        uint64_t v35 = *(void *)(a1 + 216);
        uint64_t v36 = *(int *)(a1 + 224);
        *(_DWORD *)(a1 + 224) = v36 + 1;
        *(void *)(v35 + 8 * v36) = v34;
      }

      else
      {
        uint64_t v33 = *(void *)(a1 + 216);
        *(_DWORD *)(a1 + 224) = v32 + 1;
        int v34 = *(char **)(v33 + 8 * v32);
      }

      sub_1001C08F8((uint64_t)v34, v30);
      ++v29;
    }

    while (v29 < *(int *)(a2 + 224));
  }

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 240),  *(_DWORD *)(a2 + 248) + *(_DWORD *)(a1 + 248));
  if (*(int *)(a2 + 248) >= 1)
  {
    uint64_t v37 = 0LL;
    do
    {
      uint64_t v38 = *(void *)(*(void *)(a2 + 240) + 8 * v37);
      int v39 = *(_DWORD *)(a1 + 252);
      uint64_t v40 = *(int *)(a1 + 248);
      if ((int)v40 >= v39)
      {
        if (v39 == *(_DWORD *)(a1 + 256))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 240),  v39 + 1);
          int v39 = *(_DWORD *)(a1 + 252);
        }

        *(_DWORD *)(a1 + 252) = v39 + 1;
        int v42 = (char *)operator new(0x30uLL);
        *(void *)int v42 = off_1018271D8;
        *(_OWORD *)(v42 + 8) = 0u;
        *(_OWORD *)(v42 + 24) = 0u;
        *((_DWORD *)v42 + 10) = 0;
        uint64_t v43 = *(void *)(a1 + 240);
        uint64_t v44 = *(int *)(a1 + 248);
        *(_DWORD *)(a1 + 248) = v44 + 1;
        *(void *)(v43 + 8 * v44) = v42;
      }

      else
      {
        uint64_t v41 = *(void *)(a1 + 240);
        *(_DWORD *)(a1 + 248) = v40 + 1;
        int v42 = *(char **)(v41 + 8 * v40);
      }

      sub_1001C08F8((uint64_t)v42, v38);
      ++v37;
    }

    while (v37 < *(int *)(a2 + 248));
  }

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 264),  *(_DWORD *)(a2 + 272) + *(_DWORD *)(a1 + 272));
  if (*(int *)(a2 + 272) >= 1)
  {
    uint64_t v46 = 0LL;
    do
    {
      uint64_t v47 = *(void *)(*(void *)(a2 + 264) + 8 * v46);
      uint64_t v48 = *(int *)(a1 + 272);
      int v49 = *(_DWORD *)(a1 + 276);
      if ((int)v48 >= v49)
      {
        if (v49 == *(_DWORD *)(a1 + 280))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 264),  v49 + 1);
          int v49 = *(_DWORD *)(a1 + 276);
        }

        *(_DWORD *)(a1 + 276) = v49 + 1;
        int v51 = (char *)operator new(0x30uLL);
        *(void *)int v51 = off_1018271D8;
        *(_OWORD *)(v51 + 8) = 0u;
        *(_OWORD *)(v51 + 24) = 0u;
        *((_DWORD *)v51 + 10) = 0;
        uint64_t v52 = *(void *)(a1 + 264);
        uint64_t v53 = *(int *)(a1 + 272);
        *(_DWORD *)(a1 + 272) = v53 + 1;
        *(void *)(v52 + 8 * v53) = v51;
      }

      else
      {
        uint64_t v50 = *(void *)(a1 + 264);
        *(_DWORD *)(a1 + 272) = v48 + 1;
        int v51 = *(char **)(v50 + 8 * v48);
      }

      sub_1001C08F8((uint64_t)v51, v47);
      ++v46;
    }

    while (v46 < *(int *)(a2 + 272));
  }

  int v54 = *(_DWORD *)(a2 + 292);
  if (!(_BYTE)v54) {
    goto LABEL_70;
  }
  if ((v54 & 1) != 0)
  {
    *(_DWORD *)(a1 + 292) |= 1u;
    v55 = *(char **)(a1 + 8);
    if (!v55)
    {
      v55 = (char *)operator new(0x38uLL);
      *(void *)v55 = off_101827160;
      *(_OWORD *)(v55 + 8) = 0u;
      *(_OWORD *)(v55 + 24) = 0u;
      *(_OWORD *)(v55 + 40) = 0u;
      *(void *)(a1 + 8) = v55;
    }

    uint64_t v56 = *(void *)(a2 + 8);
    if (!v56) {
      uint64_t v56 = *(void *)(qword_1019A0AD0 + 8);
    }
    double result = sub_1001BFDA8((uint64_t)v55, v56);
    int v54 = *(_DWORD *)(a2 + 292);
  }

  if ((v54 & 2) != 0)
  {
    unsigned int v57 = *(_DWORD *)(a2 + 16);
    if (v57 >= 7) {
      sub_10122F7D4();
    }
    *(_DWORD *)(a1 + 292) |= 2u;
    *(_DWORD *)(a1 + 16) = v57;
    int v54 = *(_DWORD *)(a2 + 292);
  }

  if ((v54 & 4) != 0)
  {
    unsigned int v58 = *(_DWORD *)(a2 + 20);
    if (v58 >= 4) {
      sub_10122F7AC();
    }
    *(_DWORD *)(a1 + 292) |= 4u;
    *(_DWORD *)(a1 + 20) = v58;
    int v54 = *(_DWORD *)(a2 + 292);
  }

  if ((v54 & 8) != 0)
  {
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 292) |= 8u;
    *(double *)(a1 + 24) = result;
    int v54 = *(_DWORD *)(a2 + 292);
    if ((v54 & 0x10) == 0)
    {
LABEL_66:
      if ((v54 & 0x20) == 0) {
        goto LABEL_67;
      }
LABEL_97:
      uint64_t v61 = *(void *)(a2 + 40);
      *(_DWORD *)(a1 + 292) |= 0x20u;
      *(void *)(a1 + 40) = v61;
      int v54 = *(_DWORD *)(a2 + 292);
      if ((v54 & 0x40) == 0)
      {
LABEL_68:
        if ((v54 & 0x80) == 0) {
          goto LABEL_70;
        }
        goto LABEL_69;
      }

      goto LABEL_98;
    }
  }

  else if ((v54 & 0x10) == 0)
  {
    goto LABEL_66;
  }

  double result = *(double *)(a2 + 32);
  *(_DWORD *)(a1 + 292) |= 0x10u;
  *(double *)(a1 + 32) = result;
  int v54 = *(_DWORD *)(a2 + 292);
  if ((v54 & 0x20) != 0) {
    goto LABEL_97;
  }
LABEL_67:
  if ((v54 & 0x40) == 0) {
    goto LABEL_68;
  }
LABEL_98:
  uint64_t v62 = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 292) |= 0x40u;
  *(void *)(a1 + 48) = v62;
  int v54 = *(_DWORD *)(a2 + 292);
  if ((v54 & 0x80) != 0)
  {
LABEL_69:
    uint64_t v59 = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 292) |= 0x80u;
    *(void *)(a1 + 56) = v59;
    int v54 = *(_DWORD *)(a2 + 292);
  }

void sub_1001BE5C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001BE5DC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v38,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPRavenOutput.pb.cc",  4269LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v38,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v37, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v38);
  }

  unsigned int v5 = *(_DWORD *)(a2 + 228);
  if (!(_BYTE)v5) {
    goto LABEL_29;
  }
  if ((v5 & 1) != 0)
  {
    *(_DWORD *)(a1 + 228) |= 1u;
    uint64_t v6 = *(char **)(a1 + 8);
    if (!v6)
    {
      uint64_t v6 = (char *)operator new(0x38uLL);
      *(void *)uint64_t v6 = off_101827160;
      *(_OWORD *)(v6 + 8) = 0u;
      *(_OWORD *)(v6 + 24) = 0u;
      *(_OWORD *)(v6 + 40) = 0u;
      *(void *)(a1 + 8) = v6;
    }

    uint64_t v7 = *(void *)(a2 + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0AD8 + 8);
    }
    sub_1001BFDA8((uint64_t)v6, v7);
    unsigned int v5 = *(_DWORD *)(a2 + 228);
  }

  if ((v5 & 2) != 0)
  {
    unsigned int v8 = *(_DWORD *)(a2 + 24);
    if (v8 >= 0xA) {
      sub_10122F8C4();
    }
    *(_DWORD *)(a1 + 228) |= 2u;
    *(_DWORD *)(a1 + 24) = v8;
    unsigned int v5 = *(_DWORD *)(a2 + 228);
  }

  if ((v5 & 4) != 0)
  {
    uint64_t v9 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 228) |= 4u;
    *(void *)(a1 + 16) = v9;
    unsigned int v5 = *(_DWORD *)(a2 + 228);
  }

  if ((v5 & 8) != 0)
  {
    unsigned int v10 = *(_DWORD *)(a2 + 28);
    if (v10 >= 4) {
      sub_10122F89C();
    }
    *(_DWORD *)(a1 + 228) |= 8u;
    *(_DWORD *)(a1 + 28) = v10;
    unsigned int v5 = *(_DWORD *)(a2 + 228);
  }

  if ((v5 & 0x10) == 0)
  {
    if ((v5 & 0x20) == 0) {
      goto LABEL_20;
    }
LABEL_24:
    uint64_t v12 = *(void *)(a2 + 40);
    *(_DWORD *)(a1 + 228) |= 0x20u;
    *(void *)(a1 + 40) = v12;
    unsigned int v5 = *(_DWORD *)(a2 + 228);
    if ((v5 & 0x40) == 0)
    {
LABEL_21:
      if ((v5 & 0x80) == 0) {
        goto LABEL_29;
      }
      goto LABEL_27;
    }

    goto LABEL_25;
  }

  uint64_t v11 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 228) |= 0x10u;
  *(void *)(a1 + 32) = v11;
  unsigned int v5 = *(_DWORD *)(a2 + 228);
  if ((v5 & 0x20) != 0) {
    goto LABEL_24;
  }
LABEL_20:
  if ((v5 & 0x40) == 0) {
    goto LABEL_21;
  }
LABEL_25:
  unsigned int v13 = *(_DWORD *)(a2 + 48);
  if (v13 >= 0xA) {
    sub_10122F874();
  }
  *(_DWORD *)(a1 + 228) |= 0x40u;
  *(_DWORD *)(a1 + 48) = v13;
  unsigned int v5 = *(_DWORD *)(a2 + 228);
  if ((v5 & 0x80) != 0)
  {
LABEL_27:
    unsigned int v14 = *(_DWORD *)(a2 + 52);
    if (v14 >= 4) {
      sub_10122F84C();
    }
    *(_DWORD *)(a1 + 228) |= 0x80u;
    *(_DWORD *)(a1 + 52) = v14;
    unsigned int v5 = *(_DWORD *)(a2 + 228);
  }

LABEL_62:
  uint64_t v21 = *(void *)(a2 + 144);
  *(_DWORD *)(a1 + 228) |= 0x80000u;
  *(void *)(a1 + 144) = v21;
  unsigned int v5 = *(_DWORD *)(a2 + 228);
  if ((v5 & 0x100000) == 0)
  {
LABEL_47:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_64;
  }

  double result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x47,  (int)a2,  *(double *)(v5 + 216),  a3);
  if ((*(_DWORD *)(v5 + 228) & 0x20000000) != 0) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x50,  *(_DWORD *)(v5 + 140),  (int)a2,  a4);
  }
  return result;
}

    if (v10 == v23)
    {
      uint64_t v60 = *--v9;
      unsigned int v10 = v60 + 3952;
    }

    v10 -= 152LL;
    uint64_t v7 = a1[20];
    unsigned int v8 = a1[21];
  }

  uint64_t v61 = (char *)*a3;
  uint64_t v62 = a3[1];
  char v63 = (unint64_t)v62 - 40;
  if (*a3 != v62 && v63 > (unint64_t)v61)
  {
    v65 = v61 + 40;
    do
    {
      v66 = *(_OWORD *)(v65 - 40);
      v67 = *(_OWORD *)(v65 - 24);
      v68 = *((void *)v65 - 1);
      v69 = *(void *)(v63 + 32);
      v70 = *(_OWORD *)(v63 + 16);
      *(_OWORD *)(v65 - 40) = *(_OWORD *)v63;
      *(_OWORD *)(v65 - 24) = v70;
      *((void *)v65 - 1) = v69;
      *(void *)(v63 + 32) = v68;
      *(_OWORD *)char v63 = v66;
      *(_OWORD *)(v63 + 16) = v67;
      v63 -= 40LL;
      v71 = (unint64_t)v65 >= v63;
      v65 += 40;
    }

    while (!v71);
  }

  if (qword_1019347B0 != -1) {
    dispatch_once(&qword_1019347B0, &stru_10182BCE8);
  }
  uint64_t v29 = (os_log_s *)qword_1019347B8;
  if (os_log_type_enabled((os_log_t)qword_1019347B8, OS_LOG_TYPE_FAULT))
  {
    uint64_t v30 = (void **)__p[0];
    if (v95 >= 0) {
      uint64_t v30 = __p;
    }
    uint64_t v31 = (void *)(v1 + 248);
    uint64_t v32 = (void *)(v1 + 272);
    *(_DWORD *)buf = 136446722;
    *(void *)&buf[4] = v30;
    *(_WORD *)&buf[12] = 2082;
    *(void *)&buf[14] = v31;
    *(_WORD *)&buf[22] = 2082;
    v100 = v32;
    _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_FAULT,  "[DB] Unable to validate table %{public}s. Time (%{public}s) or ID (%{public}s) not found",  buf,  0x20u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019347B0 != -1) {
      dispatch_once(&qword_1019347B0, &stru_10182BCE8);
    }
    v79 = (void **)__p[0];
    if (v95 >= 0) {
      v79 = __p;
    }
    v80 = (void *)(v89 + 248);
    v81 = (void *)(v89 + 272);
    *(_DWORD *)v96 = 136446722;
    *(void *)&v96[4] = v79;
    *(_WORD *)&v96[12] = 2082;
    *(void *)&v96[14] = v80;
    v97 = 2082;
    v98 = v81;
    v82 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019347B8,  17LL,  "[DB] Unable to validate table %{public}s. Time (%{public}s) or ID (%{public}s) not found",  v96,  32);
    sub_10029211C("Generic", 1LL, 0, 0LL, "BOOL CMHealthColdStorageDb::validateTableFormat()", "%s\n", v82);
  }

  uint64_t v33 = 0;
LABEL_142:
  if (v91)
  {
    v92 = (char *)v91;
    operator delete(v91);
  }

  if ((v33 & 1) == 0) {
    goto LABEL_58;
  }
  uint64_t v27 = 1LL;
LABEL_59:
  if (v95 < 0) {
    operator delete(__p[0]);
  }
  return v27;
}

  uint64_t v25 = *(_DWORD *)(a2 + 64);
  a1[37] |= 0x4000u;
  a1[16] = v25;
  unsigned int v5 = *(_DWORD *)(a2 + 148);
  if ((v5 & 0x8000) != 0)
  {
LABEL_22:
    uint64_t v7 = *(_DWORD *)(a2 + 68);
    a1[37] |= 0x8000u;
    a1[17] = v7;
    unsigned int v5 = *(_DWORD *)(a2 + 148);
  }

  double result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1A,  v5[27],  a2,  a4);
  uint64_t v6 = v5[37];
  if ((v6 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_64;
  }

    (*(void (**)(std::string::size_type))(*(void *)v21 + 8LL))(v21);
    goto LABEL_63;
  }

  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_101848BB8);
  }
  uint64_t v38 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_INFO))
  {
    LOWORD(v58.__r_.__value_.__l.__data_) = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_INFO,  "@TileData, saveWifiTileBlobData, not connected to wifi #tile blobs table",  (uint8_t *)&v58,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&v58, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101848BB8);
    }
    LOWORD(v56.__r_.__value_.__l.__data_) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &v58,  1628LL,  &_mh_execute_header,  qword_101934868,  1LL,  "@TileData, saveWifiTileBlobData, not connected to wifi #tile blobs table",  &v56,  2);
    uint64_t v48 = (std::string *)v47;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWifiTileBlobsTable::saveWifiTileBlobData(const CLWifiTileBlobsEntry &, std::optional<CLWifiTileParser::Memo ryMappedFileHandle *>)",  "%s\n",  v47);
    if (v48 != &v58) {
      free(v48);
    }
  }

  return 0LL;
}

  *((_DWORD *)a1 + 31) = 0;
  int v39 = v9;
  if (v9 > 0.0)
  {
    int v39 = v9;
    if (a3 == 2)
    {
      int v39 = v9;
      if (v37 >= 3)
      {
        *((_DWORD *)a1 + 31) = 1;
        int v39 = *((double *)a1 + 11);
      }
    }
  }

  uint64_t v40 = sub_1007B81FC((uint64_t)a1);
  uint64_t v41 = v40;
  if (a5 + -120.0 >= v40) {
    int v42 = a5 + -120.0;
  }
  else {
    int v42 = v40;
  }
  uint64_t v43 = sub_1007B7F90(a1, a5);
  uint64_t v44 = 0;
  v45 = 0.0;
  if (a3 == 2 && v41 > 0.0 && v43 - v42 > 15.0)
  {
    v45 = sub_1007B8034((uint64_t)a1, *a1, v42, v43);
    uint64_t v44 = v45 < 1.6777 && v45 > 0.0909;
  }

  if (qword_101934510 != -1) {
    dispatch_once(&qword_101934510, &stru_10184FF78);
  }
  uint64_t v46 = (os_log_s *)qword_101934518;
  if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v47 = *((_DWORD *)a1 + 30);
    if (v47 < 3)
    {
      uint64_t v48 = 0LL;
      int v49 = 0LL;
    }

    else
    {
      uint64_t v48 = a1[11];
      int v49 = a1[14];
    }

    uint64_t v50 = (float)v47;
    int v51 = (float)*((int *)a1 + 31);
    uint64_t v52 = v45;
    int v54 = a1[3];
    uint64_t v53 = a1[4];
    *(_DWORD *)buf = 136323074;
    v135 = "PaceFusion_Epoch_Time";
    v136 = 2048;
    v137 = a5;
    v138 = 2080;
    v139 = "PaceFusion_Epoch_PedometerPace";
    v140 = 2048;
    v141 = v9;
    v142 = 2080;
    v143 = "PaceFusion_Epoch_PedometerPaceUncalibrated";
    v144 = 2048;
    v145 = v10;
    v146 = 2080;
    v147 = "PaceFusion_Epoch_SmoothOdometerPace";
    v148 = 2048;
    v149 = v48;
    v150 = 2080;
    v151 = "PaceFusion_Epoch_SmoothShortOdometerPace";
    v152 = 2048;
    v153 = v49;
    v154 = 2080;
    v155 = "PaceFusion_Epoch_LongMeanOdometerPace";
    v156 = 2048;
    v157 = v69;
    v158 = 2080;
    v159 = "PaceFusion_Epoch_ShortMeanOdometerPace";
    v160 = 2048;
    v161 = *(const char **)&v68;
    v162 = 2080;
    v163 = "PaceFusion_Epoch_PaceResetTime";
    v164 = 2048;
    v165 = v54;
    v166 = 2080;
    v167 = "PaceFusion_Epoch_FinalFusedPace";
    v168 = 2048;
    v169 = v39;
    v170 = 2080;
    v171 = "PaceFusion_Epoch_OdometerPaceQuality";
    v172 = 2048;
    v173 = (float)a3;
    v174 = 2080;
    v175 = "PaceFusion_Epoch_MeanPaceState";
    v176 = 2048;
    v177 = v50;
    v178 = 2080;
    v179 = "PaceFusion_Epoch_PaceFusionOutput";
    v180 = 2048;
    v181 = v51;
    v182 = 2080;
    v183 = "PaceFusion_Epoch_DoRequestPureGpsOdometerPace";
    v184 = 2048;
    v185 = (double)a4;
    v186 = 2080;
    v187 = "PaceFusion_Epoch_IsPureGpsOdometerPaceAvailable";
    v188 = 2048;
    v189 = (double)v44;
    v190 = 2080;
    v191 = "PaceFusion_Epoch_PureGpsOdometerPace";
    v192 = 2048;
    v193 = v52;
    v194 = 2080;
    v195 = "PaceFusion_Epoch_PureGpsOdometerPaceResetTime";
    v196 = 2048;
    v197 = v53;
    _os_log_impl( (void *)&_mh_execute_header,  v46,  OS_LOG_TYPE_DEBUG,  "%s,%f,%s,%f,%s,%f,%s,%f,%s,%f,%s,%f,%s,%f,%s,%f,%s,%f,%s,%f,%s,%f,%s,%f,%s,%f,%s,%f,%s,%f,%s,%f",  buf,  0x142u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934510 != -1) {
      dispatch_once(&qword_101934510, &stru_10184FF78);
    }
    v55 = *((_DWORD *)a1 + 30);
    if (v55 < 3)
    {
      uint64_t v56 = 0LL;
      unsigned int v57 = 0LL;
    }

    else
    {
      uint64_t v56 = a1[11];
      unsigned int v57 = a1[14];
    }

    unsigned int v58 = (float)v55;
    uint64_t v59 = (float)*((int *)a1 + 31);
    uint64_t v60 = v45;
    uint64_t v62 = a1[3];
    uint64_t v61 = a1[4];
    v70 = 136323074;
    v71 = "PaceFusion_Epoch_Time";
    v72 = 2048;
    v73 = a5;
    v74 = 2080;
    v75 = "PaceFusion_Epoch_PedometerPace";
    v76 = 2048;
    v77 = v9;
    v78 = 2080;
    v79 = "PaceFusion_Epoch_PedometerPaceUncalibrated";
    v80 = 2048;
    v81 = v10;
    v82 = 2080;
    v83 = "PaceFusion_Epoch_SmoothOdometerPace";
    v84 = 2048;
    v85 = v56;
    v86 = 2080;
    v87 = "PaceFusion_Epoch_SmoothShortOdometerPace";
    v88 = 2048;
    v89 = v57;
    v90 = 2080;
    v91 = "PaceFusion_Epoch_LongMeanOdometerPace";
    v92 = 2048;
    v93 = v69;
    v94 = 2080;
    v95 = "PaceFusion_Epoch_ShortMeanOdometerPace";
    v96 = 2048;
    v97 = *(const char **)&v68;
    v98 = 2080;
    v99 = "PaceFusion_Epoch_PaceResetTime";
    v100 = 2048;
    v101 = v62;
    v102 = 2080;
    v103 = "PaceFusion_Epoch_FinalFusedPace";
    v104 = 2048;
    v105 = v39;
    v106 = 2080;
    v107 = "PaceFusion_Epoch_OdometerPaceQuality";
    v108 = 2048;
    v109 = (float)a3;
    v110 = 2080;
    v111 = "PaceFusion_Epoch_MeanPaceState";
    v112 = 2048;
    v113 = v58;
    v114 = 2080;
    v115 = "PaceFusion_Epoch_PaceFusionOutput";
    v116 = 2048;
    v117 = v59;
    v118 = 2080;
    v119 = "PaceFusion_Epoch_DoRequestPureGpsOdometerPace";
    v120 = 2048;
    v121 = (double)a4;
    v122 = 2080;
    v123 = "PaceFusion_Epoch_IsPureGpsOdometerPaceAvailable";
    v124 = 2048;
    v125 = (double)v44;
    v126 = 2080;
    v127 = "PaceFusion_Epoch_PureGpsOdometerPace";
    v128 = 2048;
    v129 = v60;
    v130 = 2080;
    v131 = "PaceFusion_Epoch_PureGpsOdometerPaceResetTime";
    v132 = 2048;
    v133 = v61;
    LODWORD(v65) = 322;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934518,  2LL,  "%s,%f,%s,%f,%s,%f,%s,%f,%s,%f,%s,%f,%s,%f,%s,%f,%s,%f,%s,%f,%s,%f,%s,%f,%s,%f,%s,%f,%s,%f,%s,%f",  (const char *)&v70,  v65,  v66,  v67,  *(const char **)&v68,  v69);
    v64 = (uint8_t *)v63;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "double CLPedometerPaceFusion::computeFusedPace(CFAbsoluteTime, const CLExtendedStepCountEntry &, CLPedometer::Fusi onOdometerQuality, BOOL)",  "%s\n",  v63);
    if (v64 != buf) {
      free(v64);
    }
  }

  *((double *)a1 + 6) = v9;
  *((double *)a1 + 7) = v10;
  *((double *)a1 + 5) = a5;
}

  v70 = 1;
  if ((v60 & 1) != 0) {
    goto LABEL_67;
  }
LABEL_63:
  v71 = sqrt(v55 * v55 + v54 * v54 + v52 * v52);
  if (v71 == 0.0) {
    goto LABEL_65;
  }
  if (*(void *)&v71 >> 52 <= 0x7FEuLL)
  {
    v97 = fabs(v71);
    v98 = 2.22044605e-16;
    if (v97 >= 1.0) {
      v98 = v97 * 2.22044605e-16;
    }
    if (v97 <= v98)
    {
LABEL_65:
      if (!v68 || !v67)
      {
        v67 = 0;
        v68 = 0;
        v263 = 0LL;
      }

      goto LABEL_67;
    }
  }

  v84 = 0;
  uint64_t v52 = v52 / v71;
  int v54 = v54 / v71;
  v259 = v52;
  v260 = v54;
  v55 = v55 / v71;
  v261 = v55;
LABEL_105:
  v99 = v68 | v67;
  if (!(v57 | v56))
  {
    if (!v99) {
      goto LABEL_138;
    }
    v105 = (char *)&v263 + 4;
    LODWORD(v263) = 0;
LABEL_137:
    *(_DWORD *)v105 = 0;
LABEL_138:
    v100 = v66 * v55 + v65 * v54 + v64 * v52;
    if (!v70)
    {
LABEL_109:
      if (v84)
      {
        if (sub_100852AE8( (double *)v5,  (double *)v4,  (double *)v7,  (uint64_t)v6,  &v273,  (uint64_t)&v270,  &v255,  &v267,  &v264,  (double *)&v254 + 1,  &v248,  v58))
        {
          v102 = v248;
          v103 = *((double *)&v254 + 1);
          v279 = v248;
          v280 = *((double *)&v254 + 1);
          if (*((double *)&v254 + 1) < 0.0)
          {
            v102 = -v248;
            v103 = -*((double *)&v254 + 1);
            v279 = -v248;
            v280 = -*((double *)&v254 + 1);
          }

          v104 = 0.0;
          if (v103 != 0.0) {
            v104 = v102 * 1000000.0 / v103;
          }
          v281 = v104;
          sub_100853AF0(v276, (uint64_t)&v279, 0, a3);
          return;
        }

        *(void *)&v282 = 0LL;
        v143 = 40LL;
        do
        {
          v144 = (char *)&v282 + v143;
          *(_OWORD *)v144 = xmmword_1013394A0;
          *((void *)v144 + 2) = 0LL;
          *((void *)v144 + 3) = 0LL;
          *((_OWORD *)v144 + 2) = xmmword_1012E0180;
          v144[48] = 0;
          v143 += 56LL;
        }

        while (v144 + 56 != (char *)v291);
LABEL_458:
        memset((char *)v291 + 2, 0, 40);
        v234 = v288;
        *(_OWORD *)(a3 + 96) = v287;
        *(_OWORD *)(a3 + 112) = v234;
        *(_OWORD *)(a3 + 128) = v289;
        v235 = *(_OWORD *)&v284[16];
        *(_OWORD *)(a3 + 32) = *(_OWORD *)v284;
        *(_OWORD *)(a3 + 48) = v235;
        v236 = v286;
        *(_OWORD *)(a3 + 64) = v285;
        *(_OWORD *)(a3 + 80) = v236;
        v237 = v283;
        *(_OWORD *)a3 = v282;
        *(_OWORD *)(a3 + 16) = v237;
        v82 = v291[1];
        *(_OWORD *)(a3 + 154) = v291[0];
        *(void *)(a3 + 144) = v290;
        v83 = 100;
        goto LABEL_459;
      }

      if ((v53 * -v62 + v63 * v50) * v66 + v65 * (v51 * -v63 + v61 * v53) + v64 * (v50 * -v61 + v62 * v51) >= 0.0) {
        v124 = 1.0 - (v51 * v61 + v62 * v50 + v63 * v53);
      }
      else {
        v124 = -(1.0 - (v51 * v61 + v62 * v50 + v63 * v53));
      }
      if (v124 <= -2.0) {
        v124 = v124 + 4.0;
      }
      *(double *)&v254 = v124;
      if (sub_100853D9C((double *)&v254, (double *)v5, (double *)v7))
      {
        *(void *)&v254 = 0LL;
      }

      else
      {
        *(double *)&v282 = *((double *)&v254 + 1) - *(double *)&v254;
      }

      v145 = 1.0 - (v266 * v275 + v274 * v265 + v273 * v264);
      if ((v273 * v265 - v274 * v264) * v257 + v256 * (v275 * v264 - v273 * v266) + v255 * (v274 * v266 - v275 * v265) < 0.0) {
        v145 = -v145;
      }
      if (v145 <= -2.0) {
        v145 = v145 + 4.0;
      }
      v253 = v145;
      if (sub_100853D9C(&v253, (double *)v5, (double *)v6))
      {
        v253 = 0.0;
      }

      else
      {
        *(double *)&v282 = *((double *)&v254 + 1) - v253;
      }

      v146 = 1.0 - (v275 * v269 + v268 * v274 + v267 * v273);
      if ((v267 * v274 - v268 * v273) * v261 + v260 * (v269 * v273 - v267 * v275) + v259 * (v268 * v275 - v269 * v274) < 0.0) {
        v146 = -v146;
      }
      if (v146 <= -2.0) {
        v146 = v146 + 4.0;
      }
      v252 = v146;
      if (sub_100853D9C(&v252, (double *)v7, (double *)v5))
      {
        v252 = 0.0;
      }

      else
      {
        *(double *)&v282 = v258 - v252;
      }

      v147 = 1.0 - (v272 * v269 + v268 * v271 + v267 * v270);
      if ((v267 * v271 - v268 * v270) * v261 + v260 * (v269 * v270 - v267 * v272) + v259 * (v268 * v272 - v269 * v271) < 0.0) {
        v147 = -v147;
      }
      if (v147 <= -2.0) {
        v147 = v147 + 4.0;
      }
      v251 = v147;
      if (sub_100853D9C(&v251, (double *)v7, (double *)v4))
      {
        v251 = 0.0;
      }

      else
      {
        *(double *)&v282 = v258 - v251;
        if (sub_100853D9C((double *)&v282, (double *)v6, (double *)v4))
        {
          v148 = v258;
          v251 = v258;
          goto LABEL_223;
        }
      }

      v148 = v258;
LABEL_223:
      v279 = v252;
      v280 = v148;
      v149 = v252;
      v150 = v148;
      if (v148 < 0.0)
      {
        v149 = -v252;
        v150 = -v148;
        v279 = -v252;
        v280 = -v148;
      }

      v151 = 0.0;
      if (v150 != 0.0) {
        v151 = v149 * 1000000.0 / v150;
      }
      v281 = v151;
      v248 = v251;
      v249 = v148;
      v152 = v251;
      v153 = v148;
      if (v148 < 0.0)
      {
        v152 = -v251;
        v153 = -v148;
        v248 = -v251;
        v249 = -v148;
      }

      v154 = 0.0;
      if (v153 != 0.0) {
        v154 = v152 * 1000000.0 / v153;
      }
      v250 = v154;
      v155 = *((double *)&v254 + 1);
      v246 = v254;
      v157 = *((double *)&v254 + 1);
      v156 = *(double *)&v254;
      if (*((double *)&v254 + 1) < 0.0)
      {
        v156 = -*(double *)&v254;
        v157 = -*((double *)&v254 + 1);
        *(double *)&v246 = -*(double *)&v254;
        *((double *)&v246 + 1) = -*((double *)&v254 + 1);
      }

      v158 = 0.0;
      if (v157 != 0.0) {
        v158 = v156 * 1000000.0 / v157;
      }
      v247 = v158;
      *(double *)&v244 = v253;
      *((void *)&v244 + 1) = *((void *)&v254 + 1);
      v159 = v253;
      v160 = *((double *)&v254 + 1);
      if (*((double *)&v254 + 1) < 0.0)
      {
        v159 = -v253;
        v160 = -*((double *)&v254 + 1);
        *(double *)&v244 = -v253;
        *((double *)&v244 + 1) = -*((double *)&v254 + 1);
      }

      v161 = 0.0;
      if (v160 != 0.0) {
        v161 = v159 * 1000000.0 / v160;
      }
      v245 = v161;
      if (*(double *)&v254 == 0.0
        || ((unint64_t)v254 & 0x7FFFFFFFFFFFFFFFLL) <= 0x7FEFFFFFFFFFFFFFLL
        && ((v167 = vabdd_f64(0.0, *(double *)&v254), v168 = fmax(fabs(*(double *)&v254), 0.0), v168 >= 1.0)
          ? (v169 = v168 * 2.22044605e-16)
          : (v169 = 2.22044605e-16),
            v167 <= v169))
      {
        v162 = 1;
        goto LABEL_264;
      }

      if (v253 == 0.0
        || (*(void *)&v253 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
        && ((v198 = vabdd_f64(0.0, v253), v199 = fmax(fabs(v253), 0.0), v199 >= 1.0)
          ? (v200 = v199 * 2.22044605e-16)
          : (v200 = 2.22044605e-16),
            v198 <= v200))
      {
        v162 = 3;
        goto LABEL_264;
      }

      if (*(double *)&v254 >= v253)
      {
        if (*(double *)&v254 >= 0.0)
        {
          if (v253 <= 0.0) {
            v162 = 2;
          }
          else {
            v162 = 4;
          }
LABEL_264:
          if (*((double *)&v254 + 1) == *(double *)&v254)
          {
LABEL_265:
            v170 = 1;
            goto LABEL_368;
          }

          if ((*((void *)&v254 + 1) & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL)
          {
          }

          else
          {
            if (((unint64_t)v254 & 0x7FFFFFFFFFFFFFFFLL) <= 0x7FEFFFFFFFFFFFFFLL)
            {
              v171 = vabdd_f64(*((double *)&v254 + 1), *(double *)&v254);
              v172 = fabs(*((double *)&v254 + 1));
              v173 = fabs(*(double *)&v254);
              if (v172 < v173) {
                v172 = v173;
              }
              v174 = v172 >= 1.0 ? v172 * 2.22044605e-16 : 2.22044605e-16;
              if (v171 <= v174) {
                goto LABEL_265;
              }
            }

            if (*((double *)&v254 + 1) != v253)
            {
              if ((*(void *)&v253 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL) {
                goto LABEL_282;
              }
              v175 = vabdd_f64(*((double *)&v254 + 1), v253);
              v176 = fabs(*((double *)&v254 + 1));
              v177 = fabs(v253);
              if (v176 < v177) {
                v176 = v177;
              }
              v178 = v176 >= 1.0 ? v176 * 2.22044605e-16 : 2.22044605e-16;
              if (v175 > v178)
              {
LABEL_282:
                if (*(double *)&v254 >= v253)
                {
                  if (*((double *)&v254 + 1) <= *(double *)&v254)
                  {
                    else {
                      v170 = 4;
                    }
                    goto LABEL_368;
                  }
                }

                else if (*((double *)&v254 + 1) >= *(double *)&v254)
                {
                  else {
                    v170 = 4;
                  }
                  goto LABEL_368;
                }

                v170 = 0;
LABEL_368:
                if (v252 == 0.0
                  || (*(void *)&v252 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
                  && ((v202 = vabdd_f64(0.0, v252), v203 = fmax(fabs(v252), 0.0), v203 >= 1.0)
                    ? (v204 = v203 * 2.22044605e-16)
                    : (v204 = 2.22044605e-16),
                      v202 <= v204))
                {
                  v201 = 1;
                  goto LABEL_377;
                }

                if (v251 == 0.0
                  || (*(void *)&v251 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
                  && ((v214 = vabdd_f64(0.0, v251), v215 = fmax(fabs(v251), 0.0), v215 >= 1.0)
                    ? (v216 = v215 * 2.22044605e-16)
                    : (v216 = 2.22044605e-16),
                      v214 <= v216))
                {
                  v201 = 3;
                  goto LABEL_377;
                }

                if (v252 >= v251)
                {
                  if (v252 >= 0.0)
                  {
                    if (v251 <= 0.0) {
                      v201 = 2;
                    }
                    else {
                      v201 = 4;
                    }
LABEL_377:
                    if (v148 == v252)
                    {
LABEL_378:
                      v205 = 1;
                      goto LABEL_419;
                    }

                    if ((*(void *)&v148 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL)
                    {
                      if (v148 != v251) {
                        goto LABEL_395;
                      }
                    }

                    else
                    {
                      if ((*(void *)&v252 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
                      {
                        v206 = vabdd_f64(v148, v252);
                        v207 = fabs(v148);
                        v208 = fabs(v252);
                        if (v207 < v208) {
                          v207 = v208;
                        }
                        v209 = v207 >= 1.0 ? v207 * 2.22044605e-16 : 2.22044605e-16;
                        if (v206 <= v209) {
                          goto LABEL_378;
                        }
                      }

                      if (v148 != v251)
                      {
                        if ((*(void *)&v251 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL) {
                          goto LABEL_395;
                        }
                        v210 = vabdd_f64(v148, v251);
                        v211 = fabs(v148);
                        v212 = fabs(v251);
                        if (v211 < v212) {
                          v211 = v212;
                        }
                        v213 = v211 >= 1.0 ? v211 * 2.22044605e-16 : 2.22044605e-16;
                        if (v210 > v213)
                        {
LABEL_395:
                          if (v252 >= v251)
                          {
                            if (v148 <= v252)
                            {
                              if (v148 >= v251) {
                                v205 = 2;
                              }
                              else {
                                v205 = 4;
                              }
LABEL_419:
                              if (v162 == 3)
                              {
                                v279 = v148;
                                v280 = v148;
                                v224 = v148;
                                if (v148 < 0.0)
                                {
                                  v224 = -v148;
                                  v279 = -v148;
                                  v280 = -v148;
                                }

                                v225 = 0.0;
                                v226 = 0.0;
                                if (v224 != 0.0) {
                                  v226 = v224 * 1000000.0 / v224;
                                }
                                v281 = v226;
                                *(void *)&v244 = 0LL;
                                v227 = *((double *)&v254 + 1);
                                *((void *)&v244 + 1) = *((void *)&v254 + 1);
                                if (*((double *)&v254 + 1) < 0.0)
                                {
                                  *(void *)&v244 = 0x8000000000000000LL;
                                  v227 = -*((double *)&v254 + 1);
                                  *((double *)&v244 + 1) = -*((double *)&v254 + 1);
                                  v225 = -0.0;
                                }

                                v228 = v225 / v227;
                                if (v227 == 0.0) {
                                  v228 = 0.0;
                                }
                                v245 = v228;
                              }

                              else if (v162 == 1)
                              {
                                v279 = 0.0;
                                v280 = v148;
                                v217 = 0.0;
                                v218 = 0.0;
                                v219 = v148;
                                if (v148 < 0.0)
                                {
                                  v279 = -0.0;
                                  v219 = -v148;
                                  v280 = -v148;
                                  v218 = -0.0;
                                }

                                v220 = v218 / v219;
                                if (v219 == 0.0) {
                                  v221 = 0.0;
                                }
                                else {
                                  v221 = v220;
                                }
                                v281 = v221;
                                *(void *)&v246 = 0LL;
                                *((void *)&v246 + 1) = *((void *)&v254 + 1);
                                v222 = *((double *)&v254 + 1);
                                if (*((double *)&v254 + 1) < 0.0)
                                {
                                  *(void *)&v246 = 0x8000000000000000LL;
                                  v222 = -*((double *)&v254 + 1);
                                  *((double *)&v246 + 1) = -*((double *)&v254 + 1);
                                  v217 = -0.0;
                                }

                                v223 = v217 / v222;
                                if (v222 == 0.0) {
                                  v223 = 0.0;
                                }
                                v247 = v223;
                              }

                              if (v170 == 3)
                              {
                                v248 = v148;
                                v249 = v148;
                                if (v148 < 0.0)
                                {
                                  v148 = -v148;
                                  v248 = v148;
                                  v249 = v148;
                                }

                                v230 = 0.0;
                                if (v148 != 0.0) {
                                  v230 = v148 * 1000000.0 / v148;
                                }
                                v250 = v230;
                                *(void *)&v244 = *((void *)&v254 + 1);
                                *((void *)&v244 + 1) = *((void *)&v254 + 1);
                                if (*((double *)&v254 + 1) < 0.0)
                                {
                                  v155 = -*((double *)&v254 + 1);
                                  *(double *)&v244 = -*((double *)&v254 + 1);
                                  *((double *)&v244 + 1) = -*((double *)&v254 + 1);
                                }

                                v231 = 0.0;
                                if (v155 != 0.0) {
                                  v231 = v155 * 1000000.0 / v155;
                                }
                                v245 = v231;
                              }

                              else if (v170 == 1)
                              {
                                v248 = 0.0;
                                v249 = v148;
                                if (v148 >= 0.0)
                                {
                                  v229 = 0.0;
                                }

                                else
                                {
                                  v248 = -0.0;
                                  v148 = -v148;
                                  v249 = v148;
                                  v229 = -0.0;
                                }

                                v238 = v229 / v148;
                                if (v148 == 0.0) {
                                  v239 = 0.0;
                                }
                                else {
                                  v239 = v238;
                                }
                                v250 = v239;
                                *(void *)&v246 = *((void *)&v254 + 1);
                                *((void *)&v246 + 1) = *((void *)&v254 + 1);
                                if (*((double *)&v254 + 1) < 0.0)
                                {
                                  v155 = -*((double *)&v254 + 1);
                                  *(double *)&v246 = -*((double *)&v254 + 1);
                                  *((double *)&v246 + 1) = -*((double *)&v254 + 1);
                                }

                                v240 = 0.0;
                                if (v155 != 0.0) {
                                  v240 = v155 * 1000000.0 / v155;
                                }
                                v247 = v240;
                              }

                              else if (!(v162 | v170) || v162 >= 4 && v170 >= 4)
                              {
                                *(void *)&v282 = 0LL;
                                v232 = 40LL;
                                do
                                {
                                  v233 = (char *)&v282 + v232;
                                  *(_OWORD *)v233 = xmmword_1013394A0;
                                  *((void *)v233 + 2) = 0LL;
                                  *((void *)v233 + 3) = 0LL;
                                  *((_OWORD *)v233 + 2) = xmmword_1012E0180;
                                  v233[48] = 0;
                                  v232 += 56LL;
                                }

                                while (v233 + 56 != (char *)v291);
                                goto LABEL_458;
                              }

                              sub_100852CE4( (uint64_t)v277,  (uint64_t)v276,  v100 < 0.0,  v162,  v170,  v201,  v205,  (uint64_t)&v279,  a3,  (uint64_t)&v248,  &v246,  &v244);
                              return;
                            }
                          }

                          else if (v148 >= v252)
                          {
                            if (v148 <= v251) {
                              v205 = 2;
                            }
                            else {
                              v205 = 4;
                            }
                            goto LABEL_419;
                          }

                          v205 = 0;
                          goto LABEL_419;
                        }
                      }
                    }

                    v205 = 3;
                    goto LABEL_419;
                  }
                }

                else if (v252 <= 0.0)
                {
                  if (v251 >= 0.0) {
                    v201 = 2;
                  }
                  else {
                    v201 = 4;
                  }
                  goto LABEL_377;
                }

                v201 = 0;
                goto LABEL_377;
              }
            }
          }

          v170 = 3;
          goto LABEL_368;
        }
      }

      else if (*(double *)&v254 <= 0.0)
      {
        if (v253 >= 0.0) {
          v162 = 2;
        }
        else {
          v162 = 4;
        }
        goto LABEL_264;
      }

      v162 = 0;
      goto LABEL_264;
    }

  uint64_t v32 = *(const std::string **)(a2 + 80);
  *(_DWORD *)(a1 + 116) |= 0x2000u;
  uint64_t v33 = *(std::string **)(a1 + 80);
  if (v33 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    uint64_t v33 = (std::string *)operator new(0x18uLL);
    v33->__r_.__value_.__l.__size_ = 0LL;
    v33->__r_.__value_.__l.__cap_ = 0LL;
    v33->__r_.__value_.__r.__words[0] = 0LL;
    *(void *)(a1 + 80) = v33;
  }

  std::string::operator=(v33, v32);
  if ((*(_DWORD *)(a2 + 116) & 0x4000) != 0)
  {
LABEL_33:
    uint64_t v17 = *(_DWORD *)(a2 + 76);
    *(_DWORD *)(a1 + 116) |= 0x4000u;
    *(_DWORD *)(a1 + 76) = v17;
  }

  uint64_t v40 = v77;
  if (v77)
  {
    uint64_t v41 = (unint64_t *)&v77->__shared_owners_;
    do
      int v42 = __ldaxr(v41);
    while (__stlxr(v42 - 1, v41));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
    }
  }

  int v42 = v79;
  if (v79)
  {
    uint64_t v43 = (unint64_t *)&v79->__shared_owners_;
    do
      uint64_t v44 = __ldaxr(v43);
    while (__stlxr(v44 - 1, v43));
    if (!v44)
    {
      ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
      std::__shared_weak_count::__release_weak(v42);
    }
  }

  double result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14,  *(_DWORD *)(v5 + 100),  (int)a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 224);
  if ((v6 & 0x4000) == 0)
  {
LABEL_15:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_66;
  }

              sub_100ECA708((uint64_t)&v81);
            }
          }
        }
      }
    }
  }

  LODWORD(v4) = *(_DWORD *)(a2 + 64);
  v3 |= 0x800uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 64) = v4;
  int v2 = *(void *)(a2 + 156);
  if ((v2 & 0x1000) == 0)
  {
LABEL_28:
    if ((v2 & 0x400000000LL) == 0) {
      goto LABEL_29;
    }
    goto LABEL_64;
  }

  PB::TextFormatter::format(this, "multiPeakPathLengthDecorrelation", *(float *)(a1 + 108));
  unsigned int v5 = *(void *)(a1 + 156);
  if ((v5 & 0x800000) == 0)
  {
LABEL_25:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_64;
  }

  double result = PB::Writer::write(this, *(float *)(v3 + 68), 0x18u);
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x400000000LL) == 0)
  {
LABEL_26:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_64;
  }

  uint64_t v20 = *(void *)(a2 + 216);
  v5 |= 0x4000000uLL;
  *int v2 = v5;
  *(void *)(a1 + 216) = v20;
  uint64_t v4 = *v3;
  if ((*v3 & 0x400000) == 0)
  {
LABEL_20:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_64;
  }

  PB::TextFormatter::format(this, "alertCanceledBecauseOfStand", *(void *)(a1 + 120));
  uint64_t v6 = *v5;
  if ((*v5 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_64;
  }

  double result = PB::Writer::writeVarInt(this, *(void *)(v3 + 184), 0x37u);
  unsigned int v5 = *v4;
  if ((*v4 & 0x800000) == 0)
  {
LABEL_18:
    if ((v5 & 0x20) == 0) {
      goto LABEL_19;
    }
    goto LABEL_64;
  }

  uint64_t v20 = *(_DWORD *)(a2 + 108);
  v3 |= 0x200000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 108) = v20;
  int v2 = *(void *)(a2 + 156);
  if ((v2 & 0x400000) == 0)
  {
LABEL_29:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_64;
  }

  PB::TextFormatter::format(this, "numStandBins", *(_DWORD *)(a1 + 108));
  unsigned int v5 = *(void *)(a1 + 156);
  if ((v5 & 0x400000) == 0)
  {
LABEL_26:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_64;
  }

  double result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 112), 0x19u);
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x80000) == 0)
  {
LABEL_27:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_64;
  }

  char v37 = *(_BYTE *)(a2 + 394);
  v10 |= 0x40000000u;
  *(_DWORD *)(a1 + 396) = v10;
  *(_BYTE *)(a1 + 394) = v37;
  uint64_t v9 = *(_DWORD *)(a2 + 396);
  if ((v9 & 0x200000) == 0)
  {
LABEL_30:
    if ((v9 & 0x800000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_64;
  }

  PB::TextFormatter::format(this, "continuousOffWristBeforeImpact", *(_BYTE *)(a1 + 386));
  if ((*(_DWORD *)(a1 + 396) & 0x800000) != 0) {
LABEL_7:
  }
    PB::TextFormatter::format(this, "continuousStaticAndVerticalBeforeImpact", *(_BYTE *)(a1 + 387));
LABEL_8:
  uint64_t v6 = *(double **)(a1 + 8);
  uint64_t v7 = *(double **)(a1 + 16);
  while (v6 != v7)
  {
    unsigned int v8 = *v6++;
    PB::TextFormatter::format(this, "coreMotionWristStateHistoryEndimestamp", v8);
  }

  uint64_t v9 = *(double **)(a1 + 32);
  unsigned int v10 = *(double **)(a1 + 40);
  while (v9 != v10)
  {
    uint64_t v11 = *v9++;
    PB::TextFormatter::format(this, "coreMotionWristStateHistoryStartTimestamp", v11);
  }

  uint64_t v12 = *(double **)(a1 + 56);
  unsigned int v13 = *(double **)(a1 + 64);
  while (v12 != v13)
  {
    unsigned int v14 = *v12++;
    PB::TextFormatter::format(this, "coreMotionWristStateHistoryState", v14);
  }

  unsigned int v15 = *(_DWORD *)(a1 + 396);
  if ((v15 & 0x1000000) != 0)
  {
    PB::TextFormatter::format(this, "gatingEnabled", *(_BYTE *)(a1 + 388));
    unsigned int v15 = *(_DWORD *)(a1 + 396);
    if ((v15 & 0x2000000) == 0)
    {
LABEL_16:
      if ((v15 & 0x4000000) == 0) {
        goto LABEL_17;
      }
      goto LABEL_66;
    }
  }

  else if ((v15 & 0x2000000) == 0)
  {
    goto LABEL_16;
  }

  PB::TextFormatter::format(this, "gatingLockedNoMotionPreImpact", *(_BYTE *)(a1 + 389));
  unsigned int v15 = *(_DWORD *)(a1 + 396);
  if ((v15 & 0x4000000) == 0)
  {
LABEL_17:
    if ((v15 & 0x8000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_67;
  }

  double result = *(float *)(a2 + 180);
  v3 |= 0x10000000000uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 180) = result;
  int v2 = *(void *)(a2 + 216);
  if ((v2 & 0x100000000000LL) == 0)
  {
LABEL_16:
    if ((v2 & 0x1000000000000LL) == 0) {
      goto LABEL_17;
    }
    goto LABEL_64;
  }

  PB::TextFormatter::format(this, "extrapolatedMaxMinusMin", *(float *)(a1 + 64));
  unsigned int v5 = *(void *)(a1 + 216);
  if ((v5 & 0x1000) == 0)
  {
LABEL_13:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_64;
  }

  double result = PB::Writer::write(this, *(float *)(v3 + 196), 0xCu);
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x1000000000000LL) == 0)
  {
LABEL_14:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_64;
  }

        *(_DWORD *)(a1 + 24) = v25;
        goto LABEL_67;
      case 2u:
        *(_BYTE *)(a1 + 32) |= 2u;
        uint64_t v29 = *((void *)this + 1);
        uint64_t v30 = *((void *)this + 2);
        uint64_t v31 = *(void *)this;
        if (v29 <= 0xFFFFFFFFFFFFFFF5LL && v29 + 10 <= v30)
        {
          uint64_t v32 = 0;
          uint64_t v33 = 0;
          uint64_t v34 = 0LL;
          do
          {
            uint64_t v35 = v29 + 1;
            *((void *)this + 1) = v29 + 1;
            unsigned int v36 = *(_BYTE *)(v31 + v29);
            v34 |= (unint64_t)(v36 & 0x7F) << v32;
            if ((v36 & 0x80) == 0) {
              goto LABEL_66;
            }
            v32 += 7;
            uint64_t v29 = v35;
            unsigned int v14 = v33++ > 8;
          }

          while (!v14);
LABEL_58:
          LODWORD(v34) = 0;
          goto LABEL_66;
        }

        uint64_t v46 = 0;
        uint64_t v47 = 0;
        uint64_t v34 = 0LL;
        if (v30 <= v29) {
          uint64_t v30 = *((void *)this + 1);
        }
        while (2)
        {
          if (v30 == v29)
          {
            LODWORD(v34) = 0;
            *((_BYTE *)this + 24) = 1;
          }

          else
          {
            uint64_t v48 = v29 + 1;
            int v49 = *(_BYTE *)(v31 + v29);
            *((void *)this + 1) = v48;
            v34 |= (unint64_t)(v49 & 0x7F) << v46;
            if (v49 < 0)
            {
              v46 += 7;
              uint64_t v29 = v48;
              unsigned int v14 = v47++ > 8;
              if (v14) {
                goto LABEL_58;
              }
              continue;
            }

            if (*((_BYTE *)this + 24)) {
              LODWORD(v34) = 0;
            }
          }

          break;
        }

        *(_DWORD *)(a1 + 12) = v25;
      }

      else if ((_DWORD)v20 == 2)
      {
        *(_BYTE *)(a1 + 20) |= 1u;
        uint64_t v27 = *((void *)this + 1);
        int v2 = *((void *)this + 2);
        uint64_t v28 = *(void *)this;
        if (v27 > 0xFFFFFFFFFFFFFFF5LL || v27 + 10 > v2)
        {
          uint64_t v38 = 0;
          int v39 = 0;
          uint64_t v31 = 0LL;
          if (v2 <= v27) {
            int v2 = *((void *)this + 1);
          }
          while (1)
          {
            if (v2 == v27)
            {
              LODWORD(v31) = 0;
              *((_BYTE *)this + 24) = 1;
              goto LABEL_67;
            }

            uint64_t v40 = v27++;
            uint64_t v41 = *(_BYTE *)(v28 + v40);
            *((void *)this + 1) = v27;
            v31 |= (unint64_t)(v41 & 0x7F) << v38;
            if ((v41 & 0x80) == 0) {
              break;
            }
            v38 += 7;
            unsigned int v14 = v39++ > 8;
            if (v14)
            {
              LODWORD(v31) = 0;
              goto LABEL_66;
            }
          }

          if (*((_BYTE *)this + 24)) {
            LODWORD(v31) = 0;
          }
LABEL_66:
          int v2 = v40 + 1;
        }

        else
        {
          uint64_t v29 = 0;
          uint64_t v30 = 0;
          uint64_t v31 = 0LL;
          while (1)
          {
            int v2 = v27 + 1;
            *((void *)this + 1) = v27 + 1;
            uint64_t v32 = *(_BYTE *)(v28 + v27);
            v31 |= (unint64_t)(v32 & 0x7F) << v29;
            if ((v32 & 0x80) == 0) {
              break;
            }
            v29 += 7;
            uint64_t v27 = v2;
            unsigned int v14 = v30++ > 8;
            if (v14)
            {
              LODWORD(v31) = 0;
              break;
            }
          }
        }

  uint64_t v34 = *(void *)(a2 + 88);
  *(_DWORD *)(a1 + 212) |= 2u;
  *(void *)(a1 + 88) = v34;
  unsigned int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x40000000) == 0)
  {
LABEL_33:
    if ((v10 & 0x1000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_64;
  }

  PB::TextFormatter::format(this, "nOldDt", *(_DWORD *)(a1 + 168));
  uint64_t v9 = *(_DWORD *)(a1 + 212);
  if ((v9 & 0x80000) == 0)
  {
LABEL_25:
    if ((v9 & 0x100000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_64;
  }

  double result = PB::Writer::writeVarInt(this, *(void *)(v3 + 104), 0x16u);
  unsigned int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x2000000) == 0)
  {
LABEL_31:
    if ((v14 & 0x4000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_64;
  }

  uint64_t v30 = *(_DWORD *)(a2 + 140);
  v3 |= 0x8000000uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 140) = v30;
  int v2 = *(void *)(a2 + 164);
  if ((v2 & 0x800000) == 0)
  {
LABEL_32:
    if ((v2 & 0x20) == 0) {
      goto LABEL_33;
    }
    goto LABEL_64;
  }

  PB::TextFormatter::format(this, "metaMaxOfAccel", *(float *)(a1 + 136));
  unsigned int v5 = *(void *)(a1 + 164);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_64;
  }

  double result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 124), 0x1Cu);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x20) == 0)
  {
LABEL_30:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_64;
  }

  uint64_t v9 = *(_BYTE *)(a2 + 167);
  v3 |= 0x100000000000uLL;
  *(void *)(a1 + 172) = v3;
  *(_BYTE *)(a1 + 167) = v9;
  int v2 = *(void *)(a2 + 172);
  if ((v2 & 0x800000) == 0)
  {
LABEL_19:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_64;
  }

  PB::TextFormatter::format(this, "kChaosMetRO", *(_BYTE *)(a1 + 161));
  unsigned int v5 = *(void *)(a1 + 172);
  if ((v5 & 0x8000000000LL) == 0)
  {
LABEL_16:
    if ((v5 & 0x10000000000LL) == 0) {
      goto LABEL_17;
    }
    goto LABEL_64;
  }

  double result = PB::Writer::write(this, *(float *)(v3 + 116), 0x66u);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x400000) == 0)
  {
LABEL_17:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_64;
  }

        *(_DWORD *)(a1 + 16) = v25;
      }

      else if ((_DWORD)v20 == 2)
      {
        *(_BYTE *)(a1 + 24) |= 4u;
        uint64_t v27 = *((void *)this + 1);
        int v2 = *((void *)this + 2);
        uint64_t v28 = *(void *)this;
        if (v27 > 0xFFFFFFFFFFFFFFF5LL || v27 + 10 > v2)
        {
          uint64_t v38 = 0;
          int v39 = 0;
          uint64_t v31 = 0LL;
          if (v2 <= v27) {
            int v2 = *((void *)this + 1);
          }
          while (1)
          {
            if (v2 == v27)
            {
              LODWORD(v31) = 0;
              *((_BYTE *)this + 24) = 1;
              goto LABEL_67;
            }

            uint64_t v40 = v27++;
            uint64_t v41 = *(_BYTE *)(v28 + v40);
            *((void *)this + 1) = v27;
            v31 |= (unint64_t)(v41 & 0x7F) << v38;
            if ((v41 & 0x80) == 0) {
              break;
            }
            v38 += 7;
            unsigned int v14 = v39++ > 8;
            if (v14)
            {
              LODWORD(v31) = 0;
              goto LABEL_66;
            }
          }

          if (*((_BYTE *)this + 24)) {
            LODWORD(v31) = 0;
          }
LABEL_66:
          int v2 = v40 + 1;
        }

        else
        {
          uint64_t v29 = 0;
          uint64_t v30 = 0;
          uint64_t v31 = 0LL;
          while (1)
          {
            int v2 = v27 + 1;
            *((void *)this + 1) = v27 + 1;
            uint64_t v32 = *(_BYTE *)(v28 + v27);
            v31 |= (unint64_t)(v32 & 0x7F) << v29;
            if ((v32 & 0x80) == 0) {
              break;
            }
            v29 += 7;
            uint64_t v27 = v2;
            unsigned int v14 = v30++ > 8;
            if (v14)
            {
              LODWORD(v31) = 0;
              break;
            }
          }
        }

        *(_DWORD *)(a1 + 20) = v25;
      }

      else
      {
        double result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!(_DWORD)result) {
          return result;
        }
        int v2 = *((void *)this + 1);
      }

      int v3 = *((void *)this + 2);
      uint64_t v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }

    unsigned int v15 = 0;
    uint64_t v16 = 0;
    uint64_t v11 = 0LL;
    if (v2 > v3) {
      int v3 = v2;
    }
    while (v3 != v2)
    {
      uint64_t v17 = v2 + 1;
      uint64_t v18 = *(_BYTE *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      int v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        uint64_t v11 = 0LL;
        goto LABEL_20;
      }
    }

    uint64_t v4 = 1;
    *((_BYTE *)this + 24) = 1;
  }

  return v4 == 0;
}

  LODWORD(v4) = *(_DWORD *)(a2 + 80);
  v3 |= 0x8000uLL;
  *(void *)(a1 + 164) = v3;
  *(_DWORD *)(a1 + 80) = v4;
  int v2 = *(void *)(a2 + 164);
  if ((v2 & 0x1000) == 0)
  {
LABEL_27:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_64;
  }

  PB::TextFormatter::format(this, "rawFMMets", *(float *)(a1 + 100));
  unsigned int v5 = *(void *)(a1 + 164);
  if ((v5 & 0x200000) == 0)
  {
LABEL_24:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_64;
  }

  double result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 68), 0x17u);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x200000) == 0)
  {
LABEL_25:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_64;
  }

        *(_DWORD *)(a1 + 16) = v25;
      }

      else if ((_DWORD)v20 == 2)
      {
        *(_BYTE *)(a1 + 24) |= 4u;
        uint64_t v27 = *((void *)this + 1);
        int v2 = *((void *)this + 2);
        uint64_t v28 = *(void *)this;
        if (v27 > 0xFFFFFFFFFFFFFFF5LL || v27 + 10 > v2)
        {
          uint64_t v38 = 0;
          int v39 = 0;
          uint64_t v31 = 0LL;
          if (v2 <= v27) {
            int v2 = *((void *)this + 1);
          }
          while (1)
          {
            if (v2 == v27)
            {
              LODWORD(v31) = 0;
              *((_BYTE *)this + 24) = 1;
              goto LABEL_67;
            }

            uint64_t v40 = v27++;
            uint64_t v41 = *(_BYTE *)(v28 + v40);
            *((void *)this + 1) = v27;
            v31 |= (unint64_t)(v41 & 0x7F) << v38;
            if ((v41 & 0x80) == 0) {
              break;
            }
            v38 += 7;
            unsigned int v14 = v39++ > 8;
            if (v14)
            {
              LODWORD(v31) = 0;
              goto LABEL_66;
            }
          }

          if (*((_BYTE *)this + 24)) {
            LODWORD(v31) = 0;
          }
LABEL_66:
          int v2 = v40 + 1;
        }

        else
        {
          uint64_t v29 = 0;
          uint64_t v30 = 0;
          uint64_t v31 = 0LL;
          while (1)
          {
            int v2 = v27 + 1;
            *((void *)this + 1) = v27 + 1;
            uint64_t v32 = *(_BYTE *)(v28 + v27);
            v31 |= (unint64_t)(v32 & 0x7F) << v29;
            if ((v32 & 0x80) == 0) {
              break;
            }
            v29 += 7;
            uint64_t v27 = v2;
            unsigned int v14 = v30++ > 8;
            if (v14)
            {
              LODWORD(v31) = 0;
              break;
            }
          }
        }

  uint64_t v29 = *(_DWORD *)(a2 + 64);
  v3 |= 0x200uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 64) = v29;
  int v2 = *(void *)(a2 + 164);
  if ((v2 & 0x20000) == 0)
  {
LABEL_31:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_64;
  }

  PB::TextFormatter::format(this, "regValRefSignalTotalEvents", *(_DWORD *)(a1 + 132));
  unsigned int v5 = *(void *)(a1 + 164);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_28:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_64;
  }

  double result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 96), 0x1Bu);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x40000) == 0)
  {
LABEL_29:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_64;
  }

  LODWORD(v4) = *(_DWORD *)(a2 + 104);
  v3 |= 0x400000u;
  *(_DWORD *)(a1 + 136) = v3;
  *(_DWORD *)(a1 + 104) = v4;
  int v2 = *(_DWORD *)(a2 + 136);
  if ((v2 & 0x800000) == 0)
  {
LABEL_34:
    if ((v2 & 0x1000000) == 0) {
      return *(float *)&v4;
    }
    goto LABEL_64;
  }

  PB::TextFormatter::format(this, "x", *(float *)(a1 + 120));
  unsigned int v5 = *(_DWORD *)(a1 + 136);
  if ((v5 & 0x8000000) != 0) {
    goto LABEL_63;
  }
LABEL_31:
  if ((v5 & 0x10000000) != 0) {
LABEL_32:
  }
    PB::TextFormatter::format(this, "z", *(float *)(a1 + 128));
  return PB::TextFormatter::endObject(this);
}

  double result = PB::Writer::write(this, *(float *)(v3 + 108), 0x1Eu);
  if ((*(_DWORD *)(v3 + 136) & 0x1000000) != 0) {
    return PB::Writer::write(this, *(float *)(v3 + 112), 0x1Fu);
  }
  return result;
}

  uint64_t v23 = *(_DWORD *)(a2 + 164);
  v3 |= 0x8000000uLL;
  *(void *)(result + 212) = v3;
  *(_DWORD *)(result + 164) = v23;
  int v2 = *(void *)(a2 + 212);
  if ((v2 & 0x100000000LL) == 0)
  {
LABEL_25:
    if ((v2 & 0x80000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_64;
  }

  PB::TextFormatter::format(this, "planarTimestampAtMaxChaos", *(void *)(a1 + 48));
  unsigned int v5 = *(void *)(a1 + 212);
  if ((v5 & 0x40) == 0)
  {
LABEL_22:
    if ((v5 & 0x80) == 0) {
      goto LABEL_23;
    }
    goto LABEL_64;
  }

  double result = PB::Writer::write(this, *(float *)(v3 + 184), 0x15u);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 0x80000000) == 0)
  {
LABEL_23:
    if ((v4 & 0x400) == 0) {
      goto LABEL_24;
    }
    goto LABEL_64;
  }

  int v49 = *(_DWORD *)(a2 + 228);
  v6 |= 0x40000u;
  *(_DWORD *)(a1 + 244) = v6;
  *(_DWORD *)(a1 + 228) = v49;
  unsigned int v5 = *(_DWORD *)(a2 + 244);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_10:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_64;
  }

  PB::TextFormatter::format(this, "dailySteps7DaysTotal", *(double *)(a1 + 48));
  unsigned int v5 = *(_DWORD *)(a1 + 244);
  if ((v5 & 0x40) == 0)
  {
LABEL_9:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_64;
  }

  double result = PB::Writer::write(this, *(float *)(v3 + 232), 8u);
  uint64_t v4 = *(_DWORD *)(v3 + 244);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_9:
    if ((v4 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_64;
  }

  uint64_t v12 = *(_DWORD *)(a2 + 152);
  v3 |= 0x200000000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 152) = v12;
  int v2 = *(void *)(a2 + 184);
  if ((v2 & 0x4000000000LL) == 0)
  {
LABEL_20:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_64;
  }

  PB::TextFormatter::format(this, "isHeightSet", *(_BYTE *)(a1 + 178));
  unsigned int v5 = *(void *)(a1 + 184);
  if ((v5 & 0x40000000000LL) == 0)
  {
LABEL_17:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_64;
  }

  double result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 172), 0x10u);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x100000) == 0)
  {
LABEL_18:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_64;
  }

        *(_DWORD *)(a1 + 20) = v25;
      }

      else if ((_DWORD)v20 == 2)
      {
        *(_BYTE *)(a1 + 24) |= 2u;
        uint64_t v27 = *((void *)this + 1);
        int v2 = *((void *)this + 2);
        uint64_t v28 = *(void *)this;
        if (v27 > 0xFFFFFFFFFFFFFFF5LL || v27 + 10 > v2)
        {
          uint64_t v38 = 0;
          int v39 = 0;
          uint64_t v31 = 0LL;
          if (v2 <= v27) {
            int v2 = *((void *)this + 1);
          }
          while (1)
          {
            if (v2 == v27)
            {
              LODWORD(v31) = 0;
              *((_BYTE *)this + 24) = 1;
              goto LABEL_67;
            }

            uint64_t v40 = v27++;
            uint64_t v41 = *(_BYTE *)(v28 + v40);
            *((void *)this + 1) = v27;
            v31 |= (unint64_t)(v41 & 0x7F) << v38;
            if ((v41 & 0x80) == 0) {
              break;
            }
            v38 += 7;
            unsigned int v14 = v39++ > 8;
            if (v14)
            {
              LODWORD(v31) = 0;
              goto LABEL_66;
            }
          }

          if (*((_BYTE *)this + 24)) {
            LODWORD(v31) = 0;
          }
LABEL_66:
          int v2 = v40 + 1;
        }

        else
        {
          uint64_t v29 = 0;
          uint64_t v30 = 0;
          uint64_t v31 = 0LL;
          while (1)
          {
            int v2 = v27 + 1;
            *((void *)this + 1) = v27 + 1;
            uint64_t v32 = *(_BYTE *)(v28 + v27);
            v31 |= (unint64_t)(v32 & 0x7F) << v29;
            if ((v32 & 0x80) == 0) {
              break;
            }
            v29 += 7;
            uint64_t v27 = v2;
            unsigned int v14 = v30++ > 8;
            if (v14)
            {
              LODWORD(v31) = 0;
              break;
            }
          }
        }

  uint64_t v31 = *(_BYTE *)(a2 + 216);
  v3 |= 0x80000000;
  *(_DWORD *)(result + 220) = v3;
  *(_BYTE *)(result + 216) = v31;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x1000) == 0)
  {
LABEL_33:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_64;
  }

  PB::TextFormatter::format(this, "timestampGps", *(double *)(a1 + 160));
  unsigned int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x10000000) == 0)
  {
LABEL_30:
    if ((v5 & 0x20000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_64;
  }

  double result = PB::Writer::write(this, *(double *)(v3 + 104), 0x1Du);
  uint64_t v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x4000) == 0)
  {
LABEL_31:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_64;
  }

  uint64_t v30 = *(_DWORD *)(a2 + 96);
  v5 |= 0x4000uLL;
  *(void *)(a1 + 192) = v5;
  *(_DWORD *)(a1 + 96) = v30;
  uint64_t v4 = *(void *)(a2 + 192);
  if ((v4 & 0x400000) == 0)
  {
LABEL_22:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_64;
  }

  PB::TextFormatter::format(this, "rowStrokeFrequency", *(float *)(a1 + 128));
  unsigned int v5 = *(void *)(a1 + 192);
  if ((v5 & 0x800000) == 0)
  {
LABEL_21:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_64;
  }

  double result = PB::Writer::write(this, *(float *)(v3 + 132), 0x14u);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x10) == 0)
  {
LABEL_22:
    if ((v4 & 0x800000000LL) == 0) {
      goto LABEL_23;
    }
    goto LABEL_64;
  }

  unsigned int v13 = *(_DWORD *)(a2 + 96);
  v3 |= 0x200000uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 96) = v13;
  int v2 = *(void *)(a2 + 188);
  if ((v2 & 2) == 0)
  {
LABEL_15:
    if ((v2 & 0x4000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_64;
  }

  PB::TextFormatter::format(this, "auxVerticalTranslation", *(float *)(a1 + 52));
  unsigned int v5 = *(void *)(a1 + 188);
  if ((v5 & 0x40000000000LL) == 0)
  {
LABEL_12:
    if ((v5 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_64;
  }

  double result = PB::Writer::write(this, *(float *)(v3 + 16), 0xBu);
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_13:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_64;
  }

  uint64_t v31 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_DWORD *)(result + 128) = v3;
  *(void *)(result + 8) = v31;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 2) == 0)
  {
LABEL_33:
    if ((v2 & 0x1000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_64;
  }

  PB::TextFormatter::format(this, "srcHistoricalOmegaStdMax", *(float *)(a1 + 108));
  unsigned int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x800000) == 0)
  {
LABEL_30:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_64;
  }

  double result = PB::Writer::write(this, *(double *)(v3 + 16), 0x1Du);
  uint64_t v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_31:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_64;
  }

  uint64_t v33 = *(_DWORD *)(a2 + 84);
  *(_DWORD *)(a1 + 164) |= 0x20u;
  *(_DWORD *)(a1 + 84) = v33;
  unsigned int v10 = *(_DWORD *)(a2 + 164);
  if ((v10 & 0x40000) == 0)
  {
LABEL_32:
    if ((v10 & 0x10000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_64;
  }

  PB::TextFormatter::format(this, "requestingCamera", *(_BYTE *)(a1 + 158));
  if ((*(_DWORD *)(a1 + 164) & 1) != 0) {
LABEL_27:
  }
    PB::TextFormatter::format(this, "srcTimestamp", *(double *)(a1 + 56));
LABEL_28:
  unsigned int v10 = *(float **)(a1 + 32);
  uint64_t v11 = *(float **)(a1 + 40);
  while (v10 != v11)
  {
    uint64_t v12 = *v10++;
    PB::TextFormatter::format(this, "stateVariance", v12);
  }

  unsigned int v13 = *(_DWORD *)(a1 + 164);
  if ((v13 & 2) != 0)
  {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 64));
    unsigned int v13 = *(_DWORD *)(a1 + 164);
    if ((v13 & 0x20000000) == 0)
    {
LABEL_32:
      if ((v13 & 0x20000) == 0) {
        goto LABEL_33;
      }
      goto LABEL_66;
    }
  }

  else if ((v13 & 0x20000000) == 0)
  {
    goto LABEL_32;
  }

  PB::TextFormatter::format(this, "tracking1IMU", *(_BYTE *)(a1 + 159));
  unsigned int v13 = *(_DWORD *)(a1 + 164);
  if ((v13 & 0x20000) == 0)
  {
LABEL_33:
    if ((v13 & 0x40000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_67;
  }

  double result = PB::Writer::write(this, *(_BYTE *)(v3 + 161), 0x18u);
  uint64_t v11 = *(_DWORD *)(v3 + 164);
  if ((v11 & 0x800000) == 0)
  {
LABEL_31:
    if ((v11 & 0x20) == 0) {
      goto LABEL_32;
    }
    goto LABEL_64;
  }

  double result = *(double *)(a2 + 72);
  v3 |= 0x100uLL;
  *(void *)(a1 + 224) = v3;
  *(double *)(a1 + 72) = result;
  int v2 = *(void *)(a2 + 224);
  if ((v2 & 0x800) == 0)
  {
LABEL_30:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_64;
  }

  PB::TextFormatter::format(this, "strideLengthWindowEndTime", *(double *)(a1 + 120));
  unsigned int v5 = *(void *)(a1 + 224);
  if ((v5 & 0x8000) == 0)
  {
LABEL_27:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_64;
  }

  double result = PB::Writer::write(this, *(double *)(v3 + 96), 0x1Au);
  uint64_t v4 = *(void *)(v3 + 224);
  if ((v4 & 0x10000) == 0)
  {
LABEL_28:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_64;
  }

  *(void *)((char *)v42
  uint64_t v43 = v35;
  std::streambuf::~streambuf(&v44);
  std::ios::~ios(&v45);
  return a1;
}

LABEL_65:
  uint64_t v24 = *(void *)(a2 + 168);
  *(_DWORD *)(a1 + 228) |= 0x400000u;
  *(void *)(a1 + 168) = v24;
  unsigned int v5 = *(_DWORD *)(a2 + 228);
  if ((v5 & 0x800000) != 0)
  {
LABEL_50:
    uint64_t v17 = *(void *)(a2 + 176);
    *(_DWORD *)(a1 + 228) |= 0x800000u;
    *(void *)(a1 + 176) = v17;
    unsigned int v5 = *(_DWORD *)(a2 + 228);
  }

  uint64_t v26 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 152) |= 8u;
  *(void *)(a1 + 24) = v26;
  unsigned int v5 = *(_DWORD *)(a2 + 152);
  if ((v5 & 0x10) == 0)
  {
LABEL_12:
    if ((v5 & 0x20) == 0) {
      goto LABEL_13;
    }
LABEL_67:
    uint64_t v28 = *(void *)(a2 + 40);
    *(_DWORD *)(a1 + 152) |= 0x20u;
    *(void *)(a1 + 40) = v28;
    unsigned int v5 = *(_DWORD *)(a2 + 152);
    if ((v5 & 0x40) == 0)
    {
LABEL_14:
      if ((v5 & 0x80) == 0) {
        goto LABEL_16;
      }
      goto LABEL_15;
    }

    goto LABEL_68;
  }

  double result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  (int)a2,  *(double *)(v5 + 32),  a3);
  uint64_t v6 = *(_DWORD *)(v5 + 364);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_67;
  }
}

    if (v14 == v15) {
      goto LABEL_122;
    }
    if (*(double *)(a2 + 16) <= 0.0)
    {
      if (qword_1019346C0 != -1) {
        dispatch_once(&qword_1019346C0, &stru_101834A68);
      }
      int v39 = (os_log_s *)qword_1019346C8;
      if (os_log_type_enabled((os_log_t)qword_1019346C8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_DEFAULT,  "StepCountEntry with steps but no firstStepTime",  buf,  2u);
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_122;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1019346C0 != -1) {
        dispatch_once(&qword_1019346C0, &stru_101834A68);
      }
      *(_WORD *)v83 = 0;
      LODWORD(v77) = 2;
      uint64_t v31 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019346C8,  0LL,  "StepCountEntry with steps but no firstStepTime",  v83,  *(void *)&v77);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLPredictedWalkDistanceBoutDetector::handleStepCountNotification(const CLStepCountEntry &)",  "%s\n",  v31);
    }

    else
    {
      if (*(double *)(a2 + 88) > *(double *)(a1 + 104))
      {
        if (*(void *)(a1 + 192) == *(void *)(a1 + 200))
        {
          if (qword_1019346C0 != -1) {
            dispatch_once(&qword_1019346C0, &stru_101834A68);
          }
          uint64_t v33 = (os_log_s *)qword_1019346C8;
          if (os_log_type_enabled((os_log_t)qword_1019346C8, OS_LOG_TYPE_INFO))
          {
            uint64_t v34 = *(void *)(a2 + 16);
            *(_DWORD *)buf = 134349056;
            *(void *)v86 = v34;
            _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_INFO,  "Potential walking bout identified... fBoutStartTime: %{public}f",  buf,  0xCu);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1019346C0 != -1) {
              dispatch_once(&qword_1019346C0, &stru_101834A68);
            }
            v75 = *(void *)(a2 + 16);
            *(_DWORD *)v83 = 134349056;
            *(void *)&v83[4] = v75;
            LODWORD(v77) = 12;
            v76 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019346C8,  1LL,  "Potential walking bout identified... fBoutStartTime: %{public}f",  v83,  *(void *)&v77);
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLPredictedWalkDistanceBoutDetector::handleStepCountNotification(const CLStepCountEntry &)",  "%s\n",  v76);
          }
        }

        sub_100370254((double *)a1, a2, v17, (uint64_t)v83);
        if (qword_1019346C0 != -1) {
          dispatch_once(&qword_1019346C0, &stru_101834A68);
        }
        uint64_t v35 = (os_log_s *)qword_1019346C8;
        if (os_log_type_enabled((os_log_t)qword_1019346C8, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 67109632;
          *(_DWORD *)v86 = *(_DWORD *)&v83[24];
          *(_WORD *)&v86[4] = 2048;
          *(void *)&v86[6] = *(void *)&v83[32];
          v87 = 2048;
          v88 = *(double *)&v83[16] - *(double *)&v83[8];
          _os_log_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_DEBUG,  "Extending bout...,deltaSteps,%d,dist,%.3f,activeTime,%.3f",  buf,  0x1Cu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019346C0 != -1) {
            dispatch_once(&qword_1019346C0, &stru_101834A68);
          }
          LODWORD(v78) = 67109632;
          HIDWORD(v78) = *(_DWORD *)&v83[24];
          v79 = 2048;
          v80 = *(void *)&v83[32];
          v81 = 2048;
          v82 = *(double *)&v83[16] - *(double *)&v83[8];
          LODWORD(v77) = 28;
          v74 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019346C8,  2LL,  "Extending bout...,deltaSteps,%d,dist,%.3f,activeTime,%.3f",  &v78,  v77,  v78);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLPredictedWalkDistanceBoutDetector::handleStepCountNotification(const CLStepCountEntry &)",  "%s\n",  v74);
        }

        unsigned int v36 = *(void *)(a1 + 208);
        char v37 = *(void *)(a1 + 200);
        if (v37 >= v36)
        {
          uint64_t v44 = 0x6DB6DB6DB6DB6DB7LL * ((uint64_t)(v37 - (void)*v20) >> 3);
          v45 = v44 + 1;
          uint64_t v46 = 0x6DB6DB6DB6DB6DB7LL * ((uint64_t)(v36 - (void)*v20) >> 3);
          if (2 * v46 > v45) {
            v45 = 2 * v46;
          }
          if (v46 >= 0x249249249249249LL) {
            uint64_t v47 = 0x492492492492492LL;
          }
          else {
            uint64_t v47 = v45;
          }
          if (v47) {
            uint64_t v48 = (char *)sub_1000AC8F0(a1 + 208, v47);
          }
          else {
            uint64_t v48 = 0LL;
          }
          int v49 = &v48[56 * v44];
          uint64_t v50 = &v48[56 * v47];
          *(_OWORD *)int v49 = *(_OWORD *)v83;
          *((_OWORD *)v49 + 1) = *(_OWORD *)&v83[16];
          *((_OWORD *)v49 + 2) = *(_OWORD *)&v83[32];
          *((void *)v49 + 6) = v84;
          uint64_t v38 = v49 + 56;
          uint64_t v52 = *(char **)(a1 + 192);
          int v51 = *(char **)(a1 + 200);
          if (v51 != v52)
          {
            do
            {
              uint64_t v53 = *(_OWORD *)(v51 - 56);
              int v54 = *(_OWORD *)(v51 - 40);
              v55 = *(_OWORD *)(v51 - 24);
              *((_DWORD *)v49 - 2) = *((_DWORD *)v51 - 2);
              *(_OWORD *)(v49 - 24) = v55;
              *(_OWORD *)(v49 - 40) = v54;
              *(_OWORD *)(v49 - 56) = v53;
              v49 -= 56;
              v51 -= 56;
            }

            while (v51 != v52);
            int v51 = *v20;
          }

          *(void *)(a1 + 192) = v49;
          *(void *)(a1 + 200) = v38;
          *(void *)(a1 + 208) = v50;
          if (v51) {
            operator delete(v51);
          }
        }

        else
        {
          *(_OWORD *)char v37 = *(_OWORD *)v83;
          *(_OWORD *)(v37 + 16) = *(_OWORD *)&v83[16];
          *(_OWORD *)(v37 + 32) = *(_OWORD *)&v83[32];
          *(void *)(v37 + 48) = v84;
          uint64_t v38 = (char *)(v37 + 56);
        }

        *(void *)(a1 + 200) = v38;
        sub_100370464(a1, (void *)(a1 + 216), (_DWORD *)(a1 + 240), (double *)v83, 1);
        goto LABEL_122;
      }

      if (qword_1019346C0 != -1) {
        dispatch_once(&qword_1019346C0, &stru_101834A68);
      }
      uint64_t v43 = (os_log_s *)qword_1019346C8;
      if (os_log_type_enabled((os_log_t)qword_1019346C8, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_ERROR,  "StepCountEntry with steps but activeTime doesn't advance",  buf,  2u);
      }

      if (!sub_1002921D0(115, 0)) {
        goto LABEL_122;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1019346C0 != -1) {
        dispatch_once(&qword_1019346C0, &stru_101834A68);
      }
      *(_WORD *)v83 = 0;
      LODWORD(v77) = 2;
      uint64_t v31 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019346C8,  16LL,  "StepCountEntry with steps but activeTime doesn't advance",  v83,  *(void *)&v77);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLPredictedWalkDistanceBoutDetector::handleStepCountNotification(const CLStepCountEntry &)",  "%s\n",  v31);
    }

    goto LABEL_105;
  }

  if (qword_1019346C0 != -1) {
    dispatch_once(&qword_1019346C0, &stru_101834A68);
  }
  uint64_t v11 = (os_log_s *)qword_1019346C8;
  if (os_log_type_enabled((os_log_t)qword_1019346C8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "Ignoring step count while in wheelchair mode",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019346C0 != -1) {
      dispatch_once(&qword_1019346C0, &stru_101834A68);
    }
    *(_WORD *)v83 = 0;
    LODWORD(v77) = 2;
    unsigned int v13 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019346C8,  2LL,  "Ignoring step count while in wheelchair mode",  v83,  *(void *)&v77);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLPredictedWalkDistanceBoutDetector::handleStepCountNotification(const CLStepCountEntry &)",  "%s\n",  v13);
  }

  return result;
}

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  unsigned int v57 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
  {
    sub_1003D13B8((unsigned int *)&v87, __p);
    unsigned int v58 = __p[23];
    uint64_t v59 = *(_BYTE **)__p;
    sub_100832C64(a3, &v117);
    uint64_t v60 = __p;
    if (v58 < 0) {
      uint64_t v60 = v59;
    }
    if ((v117.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v61 = &v117;
    }
    else {
      uint64_t v61 = (std::stringbuf::string_type *)v117.__r_.__value_.__r.__words[0];
    }
    LODWORD(buf.__r_.__value_.__l.__data_) = 67109890;
    HIDWORD(buf.__r_.__value_.__r.__words[0]) = v43;
    LOWORD(buf.__r_.__value_.__r.__words[1]) = 1024;
    *(_DWORD *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = v41;
    HIWORD(buf.__r_.__value_.__r.__words[1]) = 2080;
    buf.__r_.__value_.__l.__cap_ = (std::string::size_type)v60;
    *(_WORD *)v123 = 2080;
    *(void *)&v123[2] = v61;
    _os_log_impl( (void *)&_mh_execute_header,  v57,  OS_LOG_TYPE_DEFAULT,  "CELL_LOC: found, %d, server, %d, cell, %s, location, %s",  (uint8_t *)&buf,  0x22u);
    if ((__p[23] & 0x80000000) != 0) {
      operator delete(*(void **)__p);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    char v63 = qword_101934A78;
    sub_1003D13B8((unsigned int *)&v87, &v117);
    size = (char)v117.__r_.__value_.__s.__size_;
    v65 = v117.__r_.__value_.__r.__words[0];
    sub_100832C64(a3, &v116);
    v66 = &v117;
    if (size < 0) {
      v66 = (std::stringbuf::string_type *)v65;
    }
    if ((v116.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      v67 = &v116;
    }
    else {
      v67 = (std::stringbuf::string_type *)v116.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)__p = 67109890;
    *(_DWORD *)&__p[4] = v43;
    *(_WORD *)&__p[8] = 1024;
    *(_DWORD *)&__p[10] = v41;
    *(_WORD *)&__p[14] = 2080;
    *(void *)&__p[16] = v66;
    *(_WORD *)&__p[24] = 2080;
    *(void *)&__p[26] = v67;
    v68 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v63,  0LL,  "CELL_LOC: found, %d, server, %d, cell, %s, location, %s",  __p,  34,  (const char *)v83,  *((const char **)&v83 + 1));
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLNetworkLocationProvider::getLocation_CDMA(const CLTelephonyService_Type::CdmaCell &, CLDaemonLocation &)",  "%s\n",  (const char *)v68);
    if (v68 != &buf) {
      free(v68);
    }
  }

  if (v86 < 0) {
    operator delete(v85[0]);
  }
  if (SHIBYTE(v104) < 0) {
    operator delete((void *)v103);
  }
  if (v88)
  {
    v89 = v88;
    operator delete(v88);
  }

  return v43;
}

      if (SHIBYTE(v458) < 0) {
        operator delete((void *)__p);
      }
      if (SHIBYTE(v470) < 0) {
        operator delete((void *)v469);
      }
      if (*(void *)&v459[8])
      {
        *(void *)&v459[16] = *(void *)&v459[8];
        operator delete(*(void **)&v459[8]);
      }

      uint64_t v31 = v32;
      uint64_t v30 = *a4;
      if (0x84BDA12F684BDA13LL * ((a4[1] - *a4) >> 4) <= v32++) {
        goto LABEL_86;
      }
    }

    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    v55 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v56 = &__p;
      if (SHIBYTE(v458) < 0) {
        uint64_t v56 = (__int128 *)__p;
      }
      *(_DWORD *)buf = 136315650;
      *(void *)&buf[4] = v56;
      *(_WORD *)&buf[12] = 2048;
      *(double *)&buf[14] = Current - *((double *)&v437 + 1);
      *(_WORD *)&buf[22] = 2048;
      *(void *)&buf[24] = 0x40DC200000000000LL;
      _os_log_impl( (void *)&_mh_execute_header,  v55,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: cdma cell, %s, last updated %.3f ago (%.3fs minimum), not re-querying",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_65;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    unsigned int v57 = &__p;
    if (SHIBYTE(v458) < 0) {
      unsigned int v57 = (__int128 *)__p;
    }
    LODWORD(v455[0]) = 136315650;
    *(void **)((char *)v455 + 4) = v57;
    WORD2(v455[1]) = 2048;
    *(double *)((char *)&v455[1] + 6) = Current - *((double *)&v437 + 1);
    HIWORD(v455[2]) = 2048;
    v456 = 0x40DC200000000000LL;
    LODWORD(v417) = 32;
    unsigned int v58 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "CELL_LOC: cdma cell, %s, last updated %.3f ago (%.3fs minimum), not re-querying",  (const char *)v455,  v417,  v418);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std::vecto r<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector <CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vector<CLMa cAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)",  "%s\n",  v58);
    goto LABEL_52;
  }

      -[NSMutableDictionary setObject:forKeyedSubscript:]( v14,  "setObject:forKeyedSubscript:",  +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", a7),  v18);
      -[NSMutableDictionary removeObjectForKey:](v14, "removeObjectForKey:", v16);
      goto LABEL_66;
    }

        uint64_t v19 = v24 + 1;
        *((void *)this + 1) = v19;
LABEL_66:
        if (v19 < v12 && (*v19 & 0x80000000) == 0)
        {
          uint64_t v38 = *v19;
          *((void *)this + 1) = v19 + 1;
LABEL_70:
          uint64_t v25 = *(_DWORD *)(a1 + 32);
          if (v25 == *(_DWORD *)(a1 + 36))
          {
            sub_10004AAFC(v5, v25 + 1);
            uint64_t v25 = *(_DWORD *)(a1 + 32);
          }

          uint64_t v26 = v38;
          uint64_t v27 = *(void *)(a1 + 24);
          *(_DWORD *)(a1 + 32) = v25 + 1;
          *(_DWORD *)(v27 + 4LL * v25) = v26;
          uint64_t v28 = *(_DWORD *)(a1 + 36) - *(_DWORD *)(a1 + 32);
          if (v28 >= 1)
          {
            uint64_t v29 = v28 + 1;
            do
            {
              uint64_t v30 = (_BYTE *)*((void *)this + 1);
              uint64_t v31 = *((void *)this + 2);
              *((void *)this + 1) = v30 + 1;
              if ((unint64_t)(v30 + 1) >= v31 || (char)v30[1] < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v38)) {
                  return 0LL;
                }
              }

              else
              {
                uint64_t v38 = v30[1];
                *((void *)this + 1) = v30 + 2;
              }

              uint64_t v32 = *(_DWORD *)(a1 + 32);
              if (v32 >= *(_DWORD *)(a1 + 36))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v40,  3LL,  "/AppleInternal/Library/BuildRoots/9fd3fc02-a7db-11ef-98ff-a6e88e557b55/Applications/Xcode.app/Contents /Developer/Platforms/AppleTVOS.platform/Developer/SDKs/AppleTVOS18.2.Internal.sdk/usr/local/include/go ogle/protobuf/repeated_field.h",  602LL);
                uint64_t v33 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v40,  "CHECK failed: (size()) < (Capacity()): ");
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v39, v33);
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v40);
                uint64_t v32 = *(_DWORD *)(a1 + 32);
              }

              uint64_t v34 = v38;
              uint64_t v35 = *(void *)(a1 + 24);
              *(_DWORD *)(a1 + 32) = v32 + 1;
              *(_DWORD *)(v35 + 4LL * v32) = v34;
              --v29;
            }

            while (v29 > 1);
          }

          goto LABEL_83;
        }

        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v38)) {
          goto LABEL_70;
        }
        return 0LL;
      default:
        uint64_t v11 = TagFallback & 7;
        goto LABEL_24;
    }
  }

  double result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D,  v5[30],  a2,  a4);
  uint64_t v6 = v5[37];
  if ((v6 & 0x20000000) == 0)
  {
LABEL_31:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_32;
    }
LABEL_67:
    double result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1F,  v5[32],  a2,  a4);
    if ((v5[37] & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_68;
  }

  (*(void (**)(uint64_t))(*(void *)a1 + 24LL))(a1);
  if (qword_101934580 != -1) {
    dispatch_once(&qword_101934580, &stru_10184F718);
  }
  uint64_t v27 = (os_log_s *)qword_101934588;
  if (os_log_type_enabled((os_log_t)qword_101934588, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEBUG,  "Waiting too long for internal re-calibration. Prompt user.",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934580 != -1) {
      dispatch_once(&qword_101934580, &stru_10184F718);
    }
    LOWORD(v29[0]) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934588,  2LL,  "Waiting too long for internal re-calibration. Prompt user.",  v29,  2,  v29[0]);
    goto LABEL_74;
  }

              if (v25) {
                CFRelease(v25);
              }
              IOObjectRelease(child);
              goto LABEL_68;
            }

            uint64_t v34 = strlen(name);
            uint64_t v35 = v34;
            if (*(char *)(a1 + 143) < 0)
            {
              if (v34 != *(void *)(a1 + 128)) {
                goto LABEL_65;
              }
              if (v34 == -1LL) {
LABEL_115:
              }
                sub_1001040F8();
              unsigned int v36 = (void *)*v16;
            }

            else
            {
              unsigned int v36 = (void *)(a1 + 120);
              if (v35 == -1LL) {
                goto LABEL_115;
              }
            }

            if (memcmp(v36, name, v35)) {
              goto LABEL_65;
            }
            char v37 = sub_100865820(a1 + 48, child);
            if (!v37) {
              goto LABEL_65;
            }
            if (qword_1019347C0 != -1) {
              dispatch_once(&qword_1019347C0, &stru_10185A968);
            }
            uint64_t v38 = (os_log_s *)qword_1019347C8;
            if (os_log_type_enabled((os_log_t)qword_1019347C8, OS_LOG_TYPE_ERROR))
            {
              uint64_t v52 = (void *)(a1 + 120);
              int v39 = mach_error_string(v37);
              *(_DWORD *)buf = 136446978;
              v67 = v52;
              v68 = 2082;
              v69 = name;
              v70 = 1026;
              v71 = v37;
              v72 = 2082;
              v73 = v39;
              _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_ERROR,  "[manager-%{public}s] Failed to open %{public}s, error 0x%{public}x, %{public}s",  buf,  0x26u);
            }

            if (!sub_1002921D0(115, 0)) {
              goto LABEL_65;
            }
            bzero(buf, 0x65CuLL);
            if (qword_1019347C0 != -1) {
              dispatch_once(&qword_1019347C0, &stru_10185A968);
            }
            uint64_t v53 = qword_1019347C8;
            uint64_t v40 = (void *)(a1 + 120);
            uint64_t v41 = mach_error_string(v37);
            unsigned int v57 = 136446978;
            unsigned int v58 = v40;
            uint64_t v59 = 2082;
            uint64_t v60 = name;
            uint64_t v61 = 1026;
            uint64_t v62 = v37;
            char v63 = 2082;
            v64 = v41;
            LODWORD(v51) = 38;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v53,  16LL,  "[manager-%{public}s] Failed to open %{public}s, error 0x%{public}x, %{public}s",  &v57,  v51);
            uint64_t v31 = (uint8_t *)v42;
            sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLDramFastpathClientInterface::Manager::onServiceAdded(HIDDevice * _Nonnull)",  "%s\n",  v42);
          }

          else
          {
            if (qword_1019347C0 != -1) {
              dispatch_once(&qword_1019347C0, &stru_10185A968);
            }
            uint64_t v32 = (os_log_s *)qword_1019347C8;
            if (os_log_type_enabled((os_log_t)qword_1019347C8, OS_LOG_TYPE_ERROR))
            {
              uint64_t v33 = (void *)(a1 + 120);
              *(_DWORD *)buf = 136446210;
              v67 = v33;
              _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_ERROR,  "[manager-%{public}s] unexpected child class",  buf,  0xCu);
            }

            if (!sub_1002921D0(115, 0)) {
              goto LABEL_65;
            }
            bzero(buf, 0x65CuLL);
            if (qword_1019347C0 != -1) {
              dispatch_once(&qword_1019347C0, &stru_10185A968);
            }
            uint64_t v43 = (void *)(a1 + 120);
            *(_DWORD *)name = 136446210;
            *(void *)&name[4] = v43;
            LODWORD(v51) = 12;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019347C8,  16LL,  "[manager-%{public}s] unexpected child class",  name,  v51);
            uint64_t v31 = (uint8_t *)v44;
            sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLDramFastpathClientInterface::Manager::onServiceAdded(HIDDevice * _Nonnull)",  "%s\n",  v44);
          }
}

    uint64_t v7 = v5;
  }

  if ((void)v77 == *((void *)&v77 + 1) && v4 && !*((_BYTE *)a1 + 234)) {
    v85 = 1;
  }
  *((_BYTE *)a1 + 296) = v85;
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101867068);
  }
  uint64_t v27 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v28 = *((unsigned __int8 *)a1 + 296);
    *(_DWORD *)buf = 67174657;
    *(_DWORD *)&buf[4] = v28;
    _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEBUG,  "Fence: fIsContinuousMonitoringNeeded, %{private}d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101867068);
    }
    uint64_t v47 = *((unsigned __int8 *)a1 + 296);
    *(_DWORD *)v86 = 67174657;
    *(_DWORD *)&v86[4] = v47;
    LODWORD(v74) = 8;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: fIsContinuousMonitoringNeeded, %{private}d",  v86,  v74);
    int v49 = (uint8_t *)v48;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFenceMonitorWifi::recalculateNow(const CFAbsoluteTime)", "%s\n", v48);
    if (v49 != buf) {
      free(v49);
    }
  }

  if (*((_BYTE *)a1 + 233))
  {
    if (v79 == v80)
    {
      uint64_t v29 = 2;
    }

    else
    {
      uint64_t v29 = 2;
      if ((void)v77 == *((void *)&v77 + 1))
      {
        if (*((_BYTE *)a1 + 234)) {
          uint64_t v29 = 2;
        }
        else {
          uint64_t v29 = 6;
        }
      }
    }

    uint64_t v30 = *((double *)a1 + 39);
    uint64_t v31 = *((_DWORD *)a1 + 80);
    if (v79 == v80 || v31 > 1)
    {
      if (!*((_BYTE *)a1 + 237))
      {
LABEL_98:
        if (*((_BYTE *)a1 + 324))
        {
          char v37 = a2 - v30;
          if (v37 >= 3600.0)
          {
            if (qword_101934870 != -1) {
              dispatch_once(&qword_101934870, &stru_101867068);
            }
            uint64_t v38 = (os_log_s *)qword_101934878;
            if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
            {
              *(_DWORD *)buf = 134283777;
              *(double *)&buf[4] = v37;
              *(_WORD *)&buf[12] = 2049;
              *(void *)&buf[14] = 0x40AC200000000000LL;
              _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_DEBUG,  "Fence: exit sequence is too long, reset, sinceSequenceStart, %{private}.1lf, %{private}.1lf",  buf,  0x16u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_101934870 != -1) {
                dispatch_once(&qword_101934870, &stru_101867068);
              }
              *(_DWORD *)v86 = 134283777;
              *(double *)&v86[4] = v37;
              v87 = 2049;
              *(void *)v88 = 0x40AC200000000000LL;
              LODWORD(v74) = 22;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: exit sequence is too long, reset, sinceSequenceStart, %{private}.1lf, %{private}.1lf",  v86,  v74);
              v70 = (uint8_t *)v69;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitorWifi::recalculateNow(const CFAbsoluteTime)",  "%s\n",  v69);
              if (v70 != buf) {
                free(v70);
              }
            }

            sub_100A0C5D8((uint64_t)a1, a2);
          }

          else if (v37 >= (double)(v29 + v31 - 1) * 45.0 + -10.0)
          {
            v29 += *((_DWORD *)a1 + 80);
          }
        }

        if (*((_BYTE *)a1 + 234))
        {
          int v39 = 0LL;
        }

        else
        {
          if (v29 >= 10) {
            uint64_t v40 = 10;
          }
          else {
            uint64_t v40 = v29;
          }
          if (v4) {
            uint64_t v41 = 1;
          }
          else {
            uint64_t v41 = *((_BYTE *)a1 + 235) == 0;
          }
          if (v41) {
            int v39 = v40;
          }
          else {
            int v39 = 0LL;
          }
        }

        *((_BYTE *)a1 + 324) = 0;
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101867068);
        }
        int v42 = (os_log_s *)qword_101934878;
        if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 67174657;
          *(_DWORD *)&buf[4] = v39;
          _os_log_impl( (void *)&_mh_execute_header,  v42,  OS_LOG_TYPE_DEBUG,  "Fence: Setting %{private}d background exit scan count",  buf,  8u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101867068);
          }
          *(_DWORD *)v86 = 67174657;
          *(_DWORD *)&v86[4] = v39;
          LODWORD(v74) = 8;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: Setting %{private}d background exit scan count",  v86,  v74);
          unsigned int v57 = (uint8_t *)v56;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitorWifi::recalculateNow(const CFAbsoluteTime)",  "%s\n",  v56);
          if (v57 != buf) {
            free(v57);
          }
        }

        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101867068);
        }
        uint64_t v43 = (os_log_s *)qword_101934878;
        if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 134283521;
          *(void *)&buf[4] = 0x2E8BA2E8BA2E8BA3LL * ((v83 - v82) >> 3);
          _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_DEBUG,  "Fence: Setting %{private}ld background scan entry networks",  buf,  0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101867068);
          }
          *(_DWORD *)v86 = 134283521;
          *(void *)&v86[4] = 0x2E8BA2E8BA2E8BA3LL * ((v83 - v82) >> 3);
          LODWORD(v74) = 12;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: Setting %{private}ld background scan entry networks",  v86,  v74);
          uint64_t v59 = (uint8_t *)v58;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitorWifi::recalculateNow(const CFAbsoluteTime)",  "%s\n",  v58);
          if (v59 != buf) {
            free(v59);
          }
        }

        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101867068);
        }
        uint64_t v44 = (os_log_s *)qword_101934878;
        if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 134283521;
          *(void *)&buf[4] = 0x2E8BA2E8BA2E8BA3LL * ((v80 - v79) >> 3);
          _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_DEBUG,  "Fence: Setting %{private}ld background scan exit networks",  buf,  0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101867068);
          }
          *(_DWORD *)v86 = 134283521;
          *(void *)&v86[4] = 0x2E8BA2E8BA2E8BA3LL * ((v80 - v79) >> 3);
          LODWORD(v74) = 12;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: Setting %{private}ld background scan exit networks",  v86,  v74);
          uint64_t v61 = (uint8_t *)v60;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitorWifi::recalculateNow(const CFAbsoluteTime)",  "%s\n",  v60);
          if (v61 != buf) {
            free(v61);
          }
        }

        (*(void (**)(void, uint64_t))(*(void *)*a1 + 56LL))(*a1, v39);
        v45 = *a1;
        memset(v76, 0, sizeof(v76));
        sub_1002DE3C8(v76, v82, v83, 0x2E8BA2E8BA2E8BA3LL * ((v83 - v82) >> 3));
        memset(v75, 0, sizeof(v75));
        sub_1002DE3C8(v75, v79, v80, 0x2E8BA2E8BA2E8BA3LL * ((v80 - v79) >> 3));
        (*(void (**)(uint64_t, void *, void *))(*(void *)v45 + 48LL))(v45, v76, v75);
        *(void *)buf = v75;
        sub_100023498((void ***)buf);
        *(void *)buf = v76;
        sub_100023498((void ***)buf);
        goto LABEL_135;
      }

      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101867068);
      }
      uint64_t v35 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
      {
        unsigned int v36 = *((_DWORD *)a1 + 80);
        *(_DWORD *)buf = 67174657;
        *(_DWORD *)&buf[4] = v36;
        _os_log_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_DEBUG,  "Fence: considered not in leash, %{private}d",  buf,  8u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101867068);
        }
        v66 = *((_DWORD *)a1 + 80);
        *(_DWORD *)v86 = 67174657;
        *(_DWORD *)&v86[4] = v66;
        LODWORD(v74) = 8;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: considered not in leash, %{private}d",  v86,  v74);
        v68 = (uint8_t *)v67;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitorWifi::recalculateNow(const CFAbsoluteTime)",  "%s\n",  v67);
        if (v68 != buf) {
          free(v68);
        }
      }

      uint64_t v34 = 0;
    }

    else
    {
      if (!*((_BYTE *)a1 + 237))
      {
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101867068);
        }
        uint64_t v32 = (os_log_s *)qword_101934878;
        if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v33 = *((_DWORD *)a1 + 80);
          *(_DWORD *)buf = 67174657;
          *(_DWORD *)&buf[4] = v33;
          _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEBUG,  "Fence: considered in leash, %{private}d",  buf,  8u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101867068);
          }
          v71 = *((_DWORD *)a1 + 80);
          *(_DWORD *)v86 = 67174657;
          *(_DWORD *)&v86[4] = v71;
          LODWORD(v74) = 8;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: considered in leash, %{private}d",  v86,  v74);
          v73 = (uint8_t *)v72;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitorWifi::recalculateNow(const CFAbsoluteTime)",  "%s\n",  v72);
          if (v73 != buf) {
            free(v73);
          }
        }
      }

      uint64_t v34 = 1;
    }

    *((_BYTE *)a1 + 237) = v34;
    goto LABEL_98;
  }

  *(_DWORD *)(a1 + 224) |= 0x400u;
  uint64_t v24 = *(void **)(a1 + 80);
  if (!v24)
  {
    uint64_t v24 = operator new(0x28uLL);
    sub_100501168((uint64_t)v24);
    *(void *)(a1 + 80) = v24;
  }

  uint64_t v25 = *(void *)(a2 + 80);
  if (!v25) {
    uint64_t v25 = *(void *)(qword_1019A1D48 + 80);
  }
  sub_100506498((uint64_t)v24, v25);
  unsigned int v5 = *(_DWORD *)(a2 + 224);
  if ((v5 & 0x800) == 0)
  {
LABEL_50:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_75;
  }

  double result = (Name *)_os_feature_enabled_impl("CoreLocation", "cl_pula");
  if ((_DWORD)result)
  {
    sub_1010DDBC0(&__str, (char *)objc_msgSend(objc_msgSend(v2, "userName"), "UTF8String"));
    double result = (Name *)sub_100FE36F4((std::string *)retstr, (const std::string *)&__str);
    if ((__str_20[3] & 0x80000000) != 0) {
      operator delete((void *)__str);
    }
  }

  return result;
}

  if (qword_10199F3D8 != -1) {
    dispatch_once(&qword_10199F3D8, &stru_10188BDD0);
  }
  if (byte_101991AF8)
  {
    uint64_t v59 = objc_autoreleasePoolPush();
    uint64_t v60 = +[NSMutableString string](&OBJC_CLASS___NSMutableString, "string");
    objc_msgSend(v60, "appendFormat:", @"time,%f,", *(void *)&a7);
    else {
      uint64_t v61 = (uint64_t *)*a4;
    }
    objc_msgSend(v60, "appendFormat:", @"uuid,%s,", v61);
    objc_msgSend(v60, "appendFormat:", @"major,%hd,", *a5);
    objc_msgSend(v60, "appendFormat:", @"major,%hd,", *a6);
    objc_msgSend(v60, "appendFormat:", @"observable,%d,", v114);
    objc_msgSend(v60, "appendFormat:", @"range,%d,", *a3);
    objc_msgSend(v60, "appendFormat:", @"unc,%f,", *((void *)a3 + 1));
    objc_msgSend(v60, "appendFormat:", @"filteredRSSI,%d,", *((__int16 *)a3 + 8));
    objc_msgSend(v60, "appendFormat:", @"activity,%d,", *a2);
    objc_msgSend(v60, "appendFormat:", @"confidence,%d,", a2[1]);
    objc_msgSend(v60, "appendFormat:", @"activityFactor,%f,", v58);
    objc_msgSend(v60, "appendFormat:", @"fFilterPk_pre,%f,", *(float *)(a1 + 156));
    objc_msgSend(v60, "appendFormat:", @"tx,%f,", *(float *)(a1 + 24));
    objc_msgSend(v60, "appendFormat:", @"cntImmediate,%d,", v41);
    objc_msgSend(v60, "appendFormat:", @"cntNear,%d,", v40);
    objc_msgSend(v60, "appendFormat:", @"cntMid,%d,", 0);
    objc_msgSend(v60, "appendFormat:", @"cntFar,%d,", v39);
    objc_msgSend(v60, "appendFormat:", @"pImmediate,%f,", v51);
    objc_msgSend(v60, "appendFormat:", @"pNear,%f,", v52);
    objc_msgSend(v60, "appendFormat:", @"pMid,%f,", v54);
    objc_msgSend(v60, "appendFormat:", @"pFar,%f,", v30);
    objc_msgSend( v60,  "appendFormat:",  @"number rssi,%lu,",  (uint64_t)(*(void *)(a1 + 120) - *(void *)(a1 + 112)) >> 4);
    [v60 appendString:@"rssi,"];
    for (j = *(void *)(a1 + 112); j != *(void *)(a1 + 120); j += 16LL)
      objc_msgSend(v60, "appendFormat:", @"%f,%d,%d,", *(void *)j, *(__int16 *)(j + 8), *(__int16 *)(j + 10));
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188BDF0);
    }
    char v63 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
    {
      v64 = [v60 UTF8String];
      *(_DWORD *)buf = 136380675;
      v128 = v64;
      _os_log_impl((void *)&_mh_execute_header, v63, OS_LOG_TYPE_DEBUG, "iB: %{private}s", buf, 0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188BDF0);
      }
      v102 = qword_101934848;
      v103 = [v60 UTF8String];
      v125 = 136380675;
      v126 = v103;
      LODWORD(v106) = 12;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v102,  2LL,  "iB: %{private}s",  &v125,  v106);
      v105 = (uint8_t *)v104;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLBTLERSSIRangeCalculator::getRangeMeasurement(const CLMotionActivity &, CFTimeInterval, CLBTLERSSIRangeCal culator_Type::RangeMeasurement &, const std::string &, const uint16_t &, const uint16_t &)",  "%s\n",  v104);
      if (v105 != buf) {
        free(v105);
      }
    }

    objc_autoreleasePoolPop(v59);
  }

  if (__p) {
    operator delete(__p);
  }
  if (v118)
  {
    v119 = v118;
    operator delete(v118);
  }

  if (HIBYTE(v124))
  {
    if ((_BYTE)v124) {
      pthread_mutex_unlock(v123);
    }
    else {
      (*(void (**)(uint64_t))(*(void *)v122 + 24LL))(v122);
    }
  }

  return v57;
}

  if (!v7 && *(_BYTE *)(a1 + 24))
  {
    uint64_t v38 = *(void *)(a1 + 208);
    if (v38) {
      (*(void (**)(uint64_t))(*(void *)v38 + 48LL))(v38);
    }
  }

    sub_100FD9298((uint64_t)a1, 0LL);
    return;
  }

  uint64_t v11 = (const std::string::value_type *)[v7 UTF8String];
  uint64_t v12 = (std::string::__raw *)&a1[1];
  std::string::assign(a1 + 1, v11);
  if ([v8 length] || objc_msgSend(v10, "length"))
  {
    sub_100FDA108((uint64_t)a1);
  }

  else
  {
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_1018934C8);
    }
    uint64_t v25 = (os_log_s *)qword_101934978;
    if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_INFO))
    {
      (*(void (**)(void **__return_ptr, std::string *))(a1->__r_.__value_.__r.__words[0] + 24))(__p, a1);
      if (v28 >= 0) {
        uint64_t v26 = __p;
      }
      else {
        uint64_t v26 = (void **)__p[0];
      }
      *(_DWORD *)buf = 68289538;
      *(_DWORD *)&buf[4] = 0;
      uint64_t v30 = 2082;
      uint64_t v31 = "";
      uint64_t v32 = 2082;
      uint64_t v33 = v26;
      uint64_t v34 = 2082;
      uint64_t v35 = (const char *)v12;
      _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:#clgda,#warning,daemon,no beneficiary,request denied, requested by:%{public, locati on:escape_only}s, reason:%{public, location:escape_only}s}",  buf,  0x26u);
      if (v28 < 0) {
        operator delete(__p[0]);
      }
    }

    sub_100FD9298((uint64_t)a1, 0LL);
    if ((char)a1[1].__r_.__value_.__s.__size_ < 0)
    {
      *a1[1].__r_.__value_.__l.__data_ = 0;
      a1[1].__r_.__value_.__l.__size_ = 0LL;
    }

    else
    {
      a1[1].__r_.__value_.__s.__data_[0] = 0;
      a1[1].__r_.__value_.__s.__size_ = 0;
    }
  }

  LODWORD(v4) = *(_DWORD *)(a2 + 112);
  v3 |= 0x800000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 112) = v4;
  int v2 = *(void *)(a2 + 156);
  if ((v2 & 0x400000) == 0)
  {
LABEL_31:
    if ((v2 & 0x1000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_67;
  }

  PB::TextFormatter::format(this, "operatingMode", *(_DWORD *)(a1 + 120));
  unsigned int v5 = *(void *)(a1 + 156);
  if ((v5 & 2) == 0)
  {
LABEL_28:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_67;
  }

  double result = PB::Writer::write(this, *(float *)(v3 + 108), 0x1Bu);
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_29:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_67;
  }

  uint64_t v23 = *(void *)(a2 + 48);
  v5 |= 0x20uLL;
  *int v2 = v5;
  *(void *)(a1 + 48) = v23;
  uint64_t v4 = *v3;
  if ((*v3 & 8) == 0)
  {
LABEL_23:
    if ((v4 & 1) == 0) {
      goto LABEL_24;
    }
    goto LABEL_67;
  }

  PB::TextFormatter::format(this, "alertCanceledBecauseOfWristStatePost", *(void *)(a1 + 144));
  uint64_t v6 = *v5;
  if ((*v5 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_67;
  }

  double result = PB::Writer::writeVarInt(this, *(void *)(v3 + 32), 0x3Cu);
  unsigned int v5 = *v4;
  if ((*v4 & 1) == 0)
  {
LABEL_21:
    if ((v5 & 0x40) == 0) {
      goto LABEL_22;
    }
    goto LABEL_67;
  }

  uint64_t v23 = *(_DWORD *)(a2 + 84);
  v3 |= 0x8000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 84) = v23;
  int v2 = *(void *)(a2 + 156);
  if ((v2 & 0x800000) == 0)
  {
LABEL_32:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_67;
  }

  PB::TextFormatter::format(this, "operatingMode", *(_DWORD *)(a1 + 120));
  unsigned int v5 = *(void *)(a1 + 156);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_29:
    if ((v5 & 8) == 0) {
      goto LABEL_30;
    }
    goto LABEL_67;
  }

  double result = PB::Writer::write(this, *(float *)(v3 + 116), 0x1Cu);
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x100000) == 0)
  {
LABEL_30:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_67;
  }

  uint64_t v40 = *(_BYTE *)(a2 + 392);
  v10 |= 0x10000000u;
  *(_DWORD *)(a1 + 396) = v10;
  *(_BYTE *)(a1 + 392) = v40;
  uint64_t v9 = *(_DWORD *)(a2 + 396);
  if ((v9 & 0x8000000) == 0)
  {
LABEL_33:
    if ((v9 & 0x20000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_67;
  }

  double result = PB::Writer::write(this, *(double *)(v3 + 368), 4u);
  uint64_t v4 = *(_DWORD *)(v3 + 396);
  if ((v4 & 2) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_67;
  }

  double result = *(float *)(a2 + 84);
  v3 |= 0x10000uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 84) = result;
  int v2 = *(void *)(a2 + 216);
  if ((v2 & 0x2000000000LL) == 0)
  {
LABEL_19:
    if ((v2 & 0x20000000000LL) == 0) {
      goto LABEL_20;
    }
    goto LABEL_67;
  }

  PB::TextFormatter::format(this, "isFall", *(_DWORD *)(a1 + 76));
  unsigned int v5 = *(void *)(a1 + 216);
  if ((v5 & 0x8000) == 0)
  {
LABEL_16:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_67;
  }

  double result = PB::Writer::write(this, *(float *)(v3 + 168), 0xFu);
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x20000000000LL) == 0)
  {
LABEL_17:
    if ((v4 & 0x200000000000LL) == 0) {
      goto LABEL_18;
    }
    goto LABEL_67;
  }

              *(void *)(a1 + 8) = v24;
              goto LABEL_66;
            case 2u:
              *(_BYTE *)(a1 + 44) |= 0x80u;
              int v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_51;
              }
              *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_60;
            case 3u:
              *(_BYTE *)(a1 + 44) |= 2u;
              int v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_51;
              }
              *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_60;
            case 4u:
              *(_BYTE *)(a1 + 44) |= 4u;
              int v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_51;
              }
              *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_60;
            case 5u:
              *(_BYTE *)(a1 + 44) |= 8u;
              int v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_51;
              }
              *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_60;
            case 6u:
              *(_BYTE *)(a1 + 44) |= 0x10u;
              int v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_51;
              }
              *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_60;
            case 7u:
              *(_BYTE *)(a1 + 44) |= 0x20u;
              int v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_51;
              }
              *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_60;
            case 8u:
              *(_BYTE *)(a1 + 44) |= 0x40u;
              int v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
LABEL_60:
                int v2 = *((void *)this + 1) + 4LL;
                *((void *)this + 1) = v2;
              }

              else
              {
LABEL_51:
                *((_BYTE *)this + 24) = 1;
              }

              goto LABEL_66;
            default:
              double result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!(_DWORD)result) {
                return result;
              }
              int v2 = *((void *)this + 1);
LABEL_66:
              int v3 = *((void *)this + 2);
              uint64_t v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
          }
        }

        uint64_t v4 = 0;
      }

      break;
    }
  }

  return v4 == 0;
}

        *(_DWORD *)(a1 + 48) = v28;
        goto LABEL_66;
      case 3u:
        uint64_t v31 = operator new(0x18uLL);
        sub_101103644((uint64_t)v31);
        uint64_t v34 = *(void *)(a1 + 24);
        *(void *)(a1 + 24) = v31;
        if (v34)
        {
          (*(void (**)(uint64_t))(*(void *)v34 + 8LL))(v34);
          uint64_t v31 = *(void **)(a1 + 24);
        }

        goto LABEL_40;
      case 4u:
        uint64_t v31 = operator new(0x18uLL);
        sub_101103644((uint64_t)v31);
        uint64_t v35 = *(void *)(a1 + 8);
        *(void *)(a1 + 8) = v31;
        if (v35)
        {
          (*(void (**)(uint64_t))(*(void *)v35 + 8LL))(v35);
          uint64_t v31 = *(void **)(a1 + 8);
        }

        goto LABEL_40;
      case 5u:
        uint64_t v31 = operator new(0x18uLL);
        sub_101103644((uint64_t)v31);
        unsigned int v36 = *(void *)(a1 + 16);
        *(void *)(a1 + 16) = v31;
        if (v36)
        {
          (*(void (**)(uint64_t))(*(void *)v36 + 8LL))(v36);
          uint64_t v31 = *(void **)(a1 + 16);
        }

  char v37 = *(_DWORD *)(a2 + 132);
  *(_DWORD *)(a1 + 212) |= 0x200u;
  *(_DWORD *)(a1 + 132) = v37;
  unsigned int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x40) == 0)
  {
LABEL_36:
    if ((v10 & 0x200000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_67;
  }

  PB::TextFormatter::format(this, "numMaxEnvelopes", *(_DWORD *)(a1 + 180));
  uint64_t v9 = *(_DWORD *)(a1 + 212);
  if ((v9 & 0x400000) == 0)
  {
LABEL_28:
    if ((v9 & 0x800000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_29;
  }

  double result = PB::Writer::write(this, *(float *)(v3 + 204), 0x19u);
  unsigned int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x800) == 0)
  {
LABEL_34:
    if ((v14 & 0x80) == 0) {
      goto LABEL_35;
    }
    goto LABEL_67;
  }

  uint64_t v33 = *(_DWORD *)(a2 + 132);
  v3 |= 0x2000000uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 132) = v33;
  int v2 = *(void *)(a2 + 164);
  if ((v2 & 0x40000000) == 0)
  {
LABEL_35:
    if ((v2 & 1) == 0) {
      goto LABEL_36;
    }
    goto LABEL_67;
  }

  PB::TextFormatter::format(this, "metaNormOfAccel", *(float *)(a1 + 148));
  unsigned int v5 = *(void *)(a1 + 164);
  if ((v5 & 0x40000000) == 0)
  {
LABEL_32:
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_33;
    }
LABEL_67:
    PB::TextFormatter::format(this, "metaTotalZgTime", *(float *)(a1 + 156));
    if ((*(void *)(a1 + 164) & 0x20) == 0) {
      return PB::TextFormatter::endObject(this);
    }
    goto LABEL_34;
  }

  double result = PB::Writer::write(this, *(float *)(v3 + 152), 0x1Fu);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 1) == 0)
  {
LABEL_33:
    if ((v4 & 2) == 0) {
      return result;
    }
    return PB::Writer::writeVarInt(this, *(void *)(v3 + 16), 0xCAu);
  }

  double result = *(float *)(a2 + 108);
  v3 |= 0x200000uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 108) = result;
  int v2 = *(void *)(a2 + 172);
  if ((v2 & 0x1000000) == 0)
  {
LABEL_22:
    if ((v2 & 0x2000000000LL) == 0) {
      goto LABEL_23;
    }
    goto LABEL_67;
  }

  PB::TextFormatter::format(this, "kEnergyAtMaxChaosRO", *(float *)(a1 + 64));
  unsigned int v5 = *(void *)(a1 + 172);
  if ((v5 & 0x800) == 0)
  {
LABEL_19:
    if ((v5 & 0x20000000000LL) == 0) {
      goto LABEL_20;
    }
    goto LABEL_67;
  }

  double result = PB::Writer::write(this, *(float *)(v3 + 120), 0x69u);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x2000000000LL) == 0)
  {
LABEL_20:
    if ((v4 & 0x200000000LL) == 0) {
      goto LABEL_21;
    }
    goto LABEL_67;
  }

          *(_DWORD *)(a1 + 28) = v27;
          goto LABEL_70;
        case 2u:
          uint64_t v31 = (void **)operator new(0x18uLL);
          v31[1] = 0LL;
          v31[2] = 0LL;
          *uint64_t v31 = 0LL;
          __p = 0LL;
          uint64_t v32 = *v9;
          *uint64_t v9 = v31;
          if (v32)
          {
            sub_10058A4FC((int)v9, v32);
            uint64_t v33 = (void **)__p;
            __p = 0LL;
            if (v33) {
              sub_10058A4FC((int)&__p, v33);
            }
          }

          uint64_t v34 = *v9;
          goto LABEL_40;
        case 3u:
          uint64_t v35 = (void **)operator new(0x18uLL);
          v35[1] = 0LL;
          v35[2] = 0LL;
          _BYTE *v35 = 0LL;
          __p = 0LL;
          unsigned int v36 = *v8;
          *unsigned int v8 = v35;
          if (v36)
          {
            sub_10058A4FC((int)v8, v36);
            char v37 = (void **)__p;
            __p = 0LL;
            if (v37) {
              sub_10058A4FC((int)&__p, v37);
            }
          }

          uint64_t v34 = *v8;
LABEL_40:
          PB::Reader::read(this, v34);
          goto LABEL_70;
        case 4u:
          *(_BYTE *)(a1 + 32) |= 1u;
          uint64_t v38 = *((void *)this + 1);
          int v39 = *((void *)this + 2);
          uint64_t v40 = *(void *)this;
          if (v38 <= 0xFFFFFFFFFFFFFFF5LL && v38 + 10 <= v39)
          {
            uint64_t v41 = 0;
            int v42 = 0;
            uint64_t v43 = 0LL;
            do
            {
              uint64_t v44 = v38 + 1;
              *((void *)this + 1) = v38 + 1;
              v45 = *(_BYTE *)(v40 + v38);
              v43 |= (unint64_t)(v45 & 0x7F) << v41;
              if ((v45 & 0x80) == 0) {
                goto LABEL_69;
              }
              v41 += 7;
              uint64_t v38 = v44;
              uint64_t v16 = v42++ > 8;
            }

            while (!v16);
LABEL_61:
            LODWORD(v43) = 0;
            goto LABEL_69;
          }

          uint64_t v50 = 0;
          int v51 = 0;
          uint64_t v43 = 0LL;
          if (v39 <= v38) {
            int v39 = *((void *)this + 1);
          }
          break;
        default:
          double result = PB::Reader::skip(this, v13 >> 3, v13 & 7, 0);
          if (!(_DWORD)result) {
            return result;
          }
          goto LABEL_70;
      }

      while (1)
      {
        if (v39 == v38)
        {
          LODWORD(v43) = 0;
          *((_BYTE *)this + 24) = 1;
          goto LABEL_69;
        }

        uint64_t v52 = v38 + 1;
        uint64_t v53 = *(_BYTE *)(v40 + v38);
        *((void *)this + 1) = v52;
        v43 |= (unint64_t)(v53 & 0x7F) << v50;
        if ((v53 & 0x80) == 0) {
          break;
        }
        v50 += 7;
        uint64_t v38 = v52;
        uint64_t v16 = v51++ > 8;
        if (v16) {
          goto LABEL_61;
        }
      }

      if (*((_BYTE *)this + 24)) {
        LODWORD(v43) = 0;
      }
LABEL_69:
      *(_DWORD *)(a1 + 24) = v43;
LABEL_70:
      int v2 = *((void *)this + 1);
      int v3 = *((void *)this + 2);
      uint64_t v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }

    uint64_t v17 = 0;
    uint64_t v18 = 0;
    unsigned int v13 = 0LL;
    if (v2 > v3) {
      int v3 = v2;
    }
    while (v3 != v2)
    {
      uint64_t v19 = v2 + 1;
      uint64_t v20 = *(_BYTE *)(v10 + v2);
      *((void *)this + 1) = v19;
      v13 |= (unint64_t)(v20 & 0x7F) << v17;
      if ((v20 & 0x80) == 0) {
        goto LABEL_21;
      }
      v17 += 7;
      int v2 = v19;
      if (v18++ >= 9)
      {
LABEL_20:
        unsigned int v13 = 0LL;
        goto LABEL_21;
      }
    }

    uint64_t v4 = 1;
    *((_BYTE *)this + 24) = 1;
  }

  return v4 == 0;
}

  LODWORD(v4) = *(_DWORD *)(a2 + 100);
  v3 |= 0x100000uLL;
  *(void *)(a1 + 164) = v3;
  *(_DWORD *)(a1 + 100) = v4;
  int v2 = *(void *)(a2 + 164);
  if ((v2 & 4) == 0)
  {
LABEL_30:
    if ((v2 & 1) == 0) {
      goto LABEL_31;
    }
    goto LABEL_67;
  }

  PB::TextFormatter::format(this, "rawWRMets", *(float *)(a1 + 112));
  unsigned int v5 = *(void *)(a1 + 164);
  if ((v5 & 2) == 0)
  {
LABEL_27:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_67;
  }

  double result = PB::Writer::writeVarInt(this, *(void *)(v3 + 24), 0x1Au);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 1) == 0)
  {
LABEL_28:
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_67;
  }

  uint64_t v32 = *(_DWORD *)(a2 + 92);
  v3 |= 0x10000uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 92) = v32;
  int v2 = *(void *)(a2 + 164);
  if ((v2 & 8) == 0)
  {
LABEL_34:
    if ((v2 & 4) == 0) {
      goto LABEL_35;
    }
    goto LABEL_67;
  }

  PB::TextFormatter::format(this, "signalRatePerSPAD", *(float *)(a1 + 144));
  unsigned int v5 = *(void *)(a1 + 164);
  if ((v5 & 0x40000000) == 0)
  {
LABEL_31:
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_67;
  }

  double result = PB::Writer::writeVarInt(this, *(void *)(v3 + 32), 0x1Eu);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 4) == 0)
  {
LABEL_32:
    if ((v4 & 1) == 0) {
      goto LABEL_33;
    }
    goto LABEL_67;
  }

  uint64_t v26 = *(void *)(a2 + 88);
  v3 |= 0x400uLL;
  *(void *)(result + 212) = v3;
  *(void *)(result + 88) = v26;
  int v2 = *(void *)(a2 + 212);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v2 & 0x10000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_67;
  }

  PB::TextFormatter::format(this, "rolloverChaosAtMaxEnergy", *(float *)(a1 + 156));
  unsigned int v5 = *(void *)(a1 + 212);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_25:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_67;
  }

  double result = PB::Writer::write(this, *(float *)(v3 + 160), 0x18u);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 0x10000000) == 0)
  {
LABEL_26:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_67;
  }

  uint64_t v52 = *(_BYTE *)(a2 + 242);
  v6 |= 0x4000000u;
  *(_DWORD *)(a1 + 244) = v6;
  *(_BYTE *)(a1 + 242) = v52;
  unsigned int v5 = *(_DWORD *)(a2 + 244);
  if ((v5 & 0x200) == 0)
  {
LABEL_13:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }

  PB::TextFormatter::format(this, "daysWithSteps7Days", *(_DWORD *)(a1 + 212));
  if ((*(_DWORD *)(a1 + 244) & 0x8000) != 0) {
LABEL_12:
  }
    PB::TextFormatter::format(this, "errorStatus", *(_DWORD *)(a1 + 216));
LABEL_13:
  uint64_t v6 = *(void *)(a1 + 64);
  if (v6) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v6 + 32LL))(v6, this, "eventResult");
  }
  uint64_t v7 = *(_DWORD *)(a1 + 244);
  if ((v7 & 0x200000) != 0)
  {
    PB::TextFormatter::format(this, "fusionSuccess", *(_BYTE *)(a1 + 237));
    uint64_t v7 = *(_DWORD *)(a1 + 244);
    if ((v7 & 0x80) == 0)
    {
LABEL_17:
      if ((v7 & 0x100) == 0) {
        goto LABEL_18;
      }
      goto LABEL_69;
    }
  }

  else if ((v7 & 0x80) == 0)
  {
    goto LABEL_17;
  }

  PB::TextFormatter::format(this, "hkEndTime", *(double *)(a1 + 72));
  uint64_t v7 = *(_DWORD *)(a1 + 244);
  if ((v7 & 0x100) == 0)
  {
LABEL_18:
    if ((v7 & 0x400000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }

  unsigned int v15 = *(_DWORD *)(a2 + 88);
  v3 |= 0x20000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 88) = v15;
  int v2 = *(void *)(a2 + 184);
  if ((v2 & 0x10000) == 0)
  {
LABEL_23:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_67;
  }

  PB::TextFormatter::format(this, "rejectionStatus", *(_DWORD *)(a1 + 76));
  unsigned int v5 = *(void *)(a1 + 184);
  if ((v5 & 0x8000) == 0)
  {
LABEL_20:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_67;
  }

  double result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 84), 0x13u);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x40000) == 0)
  {
LABEL_21:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_67;
  }

  uint64_t v34 = *(void *)(a2 + 112);
  v3 |= 0x2000u;
  *(_DWORD *)(result + 220) = v3;
  *(void *)(result + 112) = v34;
  if ((*(_DWORD *)(a2 + 220) & 0x4000000) != 0) {
    goto LABEL_66;
  }
  return result;
}

  uint64_t v33 = *(_DWORD *)(a2 + 132);
  v5 |= 0x800000uLL;
  *(void *)(a1 + 192) = v5;
  *(_DWORD *)(a1 + 132) = v33;
  uint64_t v4 = *(void *)(a2 + 192);
  if ((v4 & 0x10) == 0)
  {
LABEL_25:
    if ((v4 & 0x800000000LL) == 0) {
      goto LABEL_26;
    }
    goto LABEL_67;
  }

  PB::TextFormatter::format(this, "ssLikelihoodSum", *(float *)(a1 + 140));
  unsigned int v5 = *(void *)(a1 + 192);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_24:
    if ((v5 & 4) == 0) {
      goto LABEL_25;
    }
    goto LABEL_67;
  }

  double result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 160), 0x17u);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x100000) == 0)
  {
LABEL_25:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_67;
  }

  uint64_t v16 = *(_DWORD *)(a2 + 120);
  v3 |= 0x8000000uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 120) = v16;
  int v2 = *(void *)(a2 + 188);
  if ((v2 & 0x10000000) == 0)
  {
LABEL_18:
    if ((v2 & 0x40) == 0) {
      goto LABEL_19;
    }
    goto LABEL_67;
  }

  PB::TextFormatter::format(this, "bodyTurnMaximaBaseline", *(float *)(a1 + 60));
  unsigned int v5 = *(void *)(a1 + 188);
  if ((v5 & 0x2000) == 0)
  {
LABEL_15:
    if ((v5 & 0x80000000000LL) == 0) {
      goto LABEL_16;
    }
    goto LABEL_67;
  }

  double result = PB::Writer::write(this, *(float *)(v3 + 124), 0xEu);
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x40) == 0)
  {
LABEL_16:
    if ((v4 & 0x80) == 0) {
      goto LABEL_17;
    }
    goto LABEL_67;
  }

  uint64_t v34 = *(_DWORD *)(a2 + 80);
  v3 |= 0x8000u;
  *(_DWORD *)(result + 128) = v3;
  *(_DWORD *)(result + 80) = v34;
  if ((*(_DWORD *)(a2 + 128) & 0x8000000) != 0) {
    goto LABEL_66;
  }
  return result;
}

  unsigned int v36 = *(_BYTE *)(a2 + 156);
  *(_DWORD *)(a1 + 164) |= 0x4000000u;
  *(_BYTE *)(a1 + 156) = v36;
  unsigned int v10 = *(_DWORD *)(a2 + 164);
  if ((v10 & 0x40000000) == 0)
  {
LABEL_35:
    if ((v10 & 1) == 0) {
      goto LABEL_36;
    }
    goto LABEL_67;
  }

  double result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 136), 0x1Bu);
  uint64_t v11 = *(_DWORD *)(v3 + 164);
  if ((v11 & 0x10000000) == 0)
  {
LABEL_34:
    if ((v11 & 0x4000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_67;
  }

  double result = *(double *)(a2 + 144);
  v3 |= 0x20000uLL;
  *(void *)(a1 + 224) = v3;
  *(double *)(a1 + 144) = result;
  int v2 = *(void *)(a2 + 224);
  if ((v2 & 0x20) == 0)
  {
LABEL_33:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_67;
  }

  PB::TextFormatter::format(this, "verticalOscPace", *(double *)(a1 + 144));
  unsigned int v5 = *(void *)(a1 + 224);
  if ((v5 & 0x40000) == 0)
  {
LABEL_30:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_67;
  }

  double result = PB::Writer::write(this, *(double *)(v3 + 48), 0x1Du);
  uint64_t v4 = *(void *)(v3 + 224);
  if ((v4 & 0x400000) == 0)
  {
LABEL_31:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_67;
  }

LABEL_77:
  uint64_t v34 = *(void *)(a2 + 208);
  *(_DWORD *)(a1 + 228) |= 0x8000000u;
  *(void *)(a1 + 208) = v34;
  unsigned int v5 = *(_DWORD *)(a2 + 228);
  if ((v5 & 0x10000000) != 0) {
    goto LABEL_78;
  }
LABEL_57:
  if ((v5 & 0x20000000) == 0) {
    return;
  }
LABEL_79:
  unsigned int v36 = *(_DWORD *)(a2 + 140);
  if (v36 >= 8) {
    sub_10122F7FC();
  }
  *(_DWORD *)(a1 + 228) |= 0x20000000u;
  *(_DWORD *)(a1 + 140) = v36;
}

  double result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE,  *(_DWORD *)(v5 + 84),  (int)a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 364);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_79;
  }

  uint64_t v38 = *(_DWORD *)(a2 + 124);
  a1[37] |= 0x20000000u;
  a1[31] = v38;
  unsigned int v5 = *(_DWORD *)(a2 + 148);
  if ((v5 & 0x40000000) != 0) {
    goto LABEL_78;
  }
LABEL_41:
  if ((v5 & 0x80000000) == 0) {
    goto LABEL_42;
  }
LABEL_79:
  uint64_t v40 = *(_DWORD *)(a2 + 132);
  a1[37] |= 0x80000000;
  a1[33] = v40;
LABEL_42:
  LOBYTE(v9) = *(_BYTE *)(a2 + 152);
  if ((_BYTE)v9)
  {
    if ((*(_BYTE *)(a2 + 152) & 1) != 0)
    {
      unsigned int v10 = *(_DWORD *)(a2 + 136);
      a1[38] |= 1u;
      a1[34] = v10;
      uint64_t v9 = *(_DWORD *)(a2 + 152);
    }

    if ((v9 & 2) != 0)
    {
      uint64_t v11 = *(_DWORD *)(a2 + 140);
      a1[38] |= 2u;
      a1[35] = v11;
    }
  }

  return sub_1002A5590(v69);
}

  sub_100008390((uint64_t)&v68, v69[0]);
  return v54;
}

  uint64_t v47 = (uint64_t *)__p;
  uint64_t v48 = v83;
  if (__p != v83)
  {
    uint64_t v50 = (double ****)v97;
    int v49 = v98;
    if (a5 > ((char *)v98 - (_BYTE *)v97) >> 3
      || a5 > ((char *)v95 - (_BYTE *)v94) >> 3
      || a4 > 0x63
      || ((char *)v83 - (_BYTE *)__p) >> 3 < a5)
    {
      if (v97 != v98)
      {
        while (__p == v48)
        {
LABEL_96:
          if (++v50 == v49) {
            goto LABEL_97;
          }
        }

        uint64_t v48 = (double ****)__p;
        while (1)
        {
          if (!*(_BYTE *)a6)
          {
            int v51 = **v50;
            uint64_t v52 = **v48;
            uint64_t v53 = *(unsigned __int8 **)(a6 + 8);
            strcpy(v105.i8, "FFFFFFFFF");
            sub_100858868(v51, v52, (unsigned __int8 *)&v105, v53);
            if (!v105.i8[9])
            {
              int v54 = v105.u8[0] != 84 && v105.u8[0] - 48 >= 0xA;
              if (!v54
                || v105.u8[1] == 84
                || v105.u8[1] - 48 <= 9
                || v105.u8[3] == 84
                || v105.u8[3] - 48 < 0xA)
              {
                goto LABEL_173;
              }
            }
          }

          if (++v48 == v83)
          {
            int v49 = v98;
            goto LABEL_96;
          }
        }
      }

  uint64_t v48 = (uint64_t *)__p;
  int v49 = v84;
  if (__p != v84)
  {
    int v51 = (double ****)v98;
    uint64_t v50 = v99;
    if (a5 > ((char *)v99 - (_BYTE *)v98) >> 3
      || a5 > ((char *)v96 - (_BYTE *)v95) >> 3
      || a4 > 0x63
      || ((char *)v84 - (_BYTE *)__p) >> 3 < a5)
    {
      if (v98 != v99)
      {
        while (__p == v49)
        {
LABEL_96:
          if (++v51 == v50) {
            goto LABEL_97;
          }
        }

        int v49 = (double ****)__p;
        while (1)
        {
          if (!*(_BYTE *)a6)
          {
            uint64_t v52 = **v51;
            uint64_t v53 = **v49;
            int v54 = *(unsigned __int8 **)(a6 + 8);
            strcpy(v106.i8, "FFFFFFFFF");
            sub_100858868(v52, v53, (unsigned __int8 *)&v106, v54);
            if (!v106.i8[9])
            {
              v55 = v106.u8[0] != 84 && v106.u8[0] - 48 >= 0xA;
              if (!v55
                || v106.u8[1] == 84
                || v106.u8[1] - 48 <= 9
                || v106.u8[3] == 84
                || v106.u8[3] - 48 < 0xA)
              {
                goto LABEL_173;
              }
            }
          }

          if (++v49 == v84)
          {
            uint64_t v50 = v99;
            goto LABEL_96;
          }
        }
      }

      if (SHIBYTE(cap) < 0) {
        operator delete(__p[0]);
      }
      unsigned int v10 = readdir(v9);
      if (!v10) {
        goto LABEL_117;
      }
    }

    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018628A8);
    }
    uint64_t v32 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v33 = __dst;
      if ((v85 & 0x80u) != 0) {
        uint64_t v33 = (void **)__dst[0];
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 136446210;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v33;
      _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEFAULT,  "TileCoarse, indexTiles, invalid filename  %{public}s",  (uint8_t *)&buf,  0xCu);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_77;
    }
    bzero(&buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018628A8);
    }
    int v49 = __dst;
    if ((v85 & 0x80u) != 0) {
      int v49 = (void **)__dst[0];
    }
    v97.st_dev = 136446210;
    *(void *)&v97.st_mode = v49;
    LODWORD(v79) = 12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "TileCoarse, indexTiles, invalid filename  %{public}s",  &v97,  v79);
    uint64_t v31 = (std::string *)v50;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCoarseCellTilesManager::indexTiles(CLTilesSet &, CFAbsoluteTime)",  "%s\n",  v50);
    goto LABEL_111;
  }

    dispatch_once(&qword_101934870, &stru_101866E28);
    goto LABEL_61;
  }

  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866E28);
  }
  unsigned int v13 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
  {
    else {
      unsigned int v14 = *(void *)(a2 + 8);
    }
    unsigned int v15 = buf;
    sub_1000392EC((uint64_t)buf, v14 + 1);
    if ((buf[0].__r_.__value_.__s.__size_ & 0x80u) != 0) {
      unsigned int v15 = (std::string *)buf[0].__r_.__value_.__r.__words[0];
    }
    if (v14)
    {
      else {
        uint64_t v16 = *(const void **)a2;
      }
      memmove(v15, v16, v14);
    }

    *(_WORD *)((char *)&v15->__r_.__value_.__l.__data_ + v14) = 47;
    uint64_t v17 = *(char *)(a2 + 47);
    if (v17 >= 0) {
      uint64_t v18 = (const std::string::value_type *)(a2 + 24);
    }
    else {
      uint64_t v18 = *(const std::string::value_type **)(a2 + 24);
    }
    if (v17 >= 0) {
      uint64_t v19 = *(unsigned __int8 *)(a2 + 47);
    }
    else {
      uint64_t v19 = *(void *)(a2 + 32);
    }
    uint64_t v20 = std::string::append(buf, v18, v19);
    uint64_t v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
    __p.__r_.__value_.__l.__cap_ = v20->__r_.__value_.__l.__cap_;
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v21;
    v20->__r_.__value_.__l.__size_ = 0LL;
    v20->__r_.__value_.__l.__cap_ = 0LL;
    v20->__r_.__value_.__r.__words[0] = 0LL;
    p_p = &__p;
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    LODWORD(buf[0].__r_.__value_.__l.__data_) = 136380675;
    *(std::string::size_type *)((char *)buf[0].__r_.__value_.__r.__words + 4) = (std::string::size_type)p_p;
    _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_INFO,  "Fence: stopMonitoringNow, no such fence, %{private}s",  (uint8_t *)buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    uint64_t v23 = qword_101934878;
    sub_10065EF44((const void **)a2, &__p);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v24 = &__p;
    }
    else {
      uint64_t v24 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    char v37 = 136380675;
    uint64_t v38 = v24;
    LODWORD(v36) = 12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v23,  1LL,  "Fence: stopMonitoringNow, no such fence, %{private}s",  &v37,  v36);
    uint64_t v26 = v25;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::stopMonitoringAFenceNow(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, BOOL)",  "%s\n",  (const char *)v26);
    if (v26 != buf) {
      free(v26);
    }
  }

  uint64_t v20 = *(void *)(v5 + 144);
  if (!v20) {
    uint64_t v20 = *(void *)(qword_1019A1D48 + 144);
  }
  double result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x28,  v20,  a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 224);
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_83;
  }

    unsigned int v36 = 1;
    goto LABEL_221;
  }

      if (SHIBYTE(cap) < 0) {
        operator delete(__p[0]);
      }
      unsigned int v10 = readdir(v9);
      if (!v10) {
        goto LABEL_117;
      }
    }

    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    uint64_t v32 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v33 = __dst;
      if ((v85 & 0x80u) != 0) {
        uint64_t v33 = (void **)__dst[0];
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 136446210;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v33;
      _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEFAULT,  "TileCell, indexTiles, invalid filename  %{public}s",  (uint8_t *)&buf,  0xCu);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_77;
    }
    bzero(&buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    int v49 = __dst;
    if ((v85 & 0x80u) != 0) {
      int v49 = (void **)__dst[0];
    }
    v97.st_dev = 136446210;
    *(void *)&v97.st_mode = v49;
    LODWORD(v79) = 12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "TileCell, indexTiles, invalid filename  %{public}s",  &v97,  v79);
    uint64_t v31 = (std::string *)v50;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCellTilesManager::indexTiles(CLTilesSet &, CFAbsoluteTime)",  "%s\n",  v50);
    goto LABEL_111;
  }

  uint64_t v35 = *(void *)(a2 + 288);
  v5 |= 0x800000000uLL;
  *int v2 = v5;
  *(void *)(a1 + 288) = v35;
  uint64_t v4 = *v3;
  if ((*v3 & 0x400000000LL) == 0)
  {
LABEL_35:
    if ((v4 & 0x200000000LL) == 0) {
      goto LABEL_36;
    }
    goto LABEL_79;
  }

  PB::TextFormatter::format(this, "leavingImpactBecauseOfNewImpactOldImpact", *(void *)(a1 + 240));
  uint64_t v6 = *v5;
  if ((*v5 & 0x100000000000LL) == 0)
  {
LABEL_32:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_79;
  }

  double result = PB::Writer::writeVarInt(this, *(void *)(v3 + 280), 0x48u);
  unsigned int v5 = *v4;
  if ((*v4 & 0x200000000LL) == 0)
  {
LABEL_33:
    if ((v5 & 0x100000000LL) == 0) {
      goto LABEL_34;
    }
    goto LABEL_79;
  }

  PB::TextFormatter::format(this, "lastCoreMotionWristStateDurationPostStart", *(double *)(a1 + 280));
  unsigned int v15 = *(_DWORD *)(a1 + 396);
  if ((v15 & 0x100) == 0)
  {
LABEL_29:
    if ((v15 & 0x200) == 0) {
      goto LABEL_30;
    }
    goto LABEL_79;
  }

  double result = PB::Writer::writeVarInt(this, *(void *)(v3 + 352), 0x1Fu);
  uint64_t v4 = *(_DWORD *)(v3 + 396);
  if ((v4 & 0x8000) == 0)
  {
LABEL_18:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_79;
  }

        *(void *)(a1 + 24) = v25;
        goto LABEL_62;
      case 3u:
        uint64_t v31 = operator new(0x50uLL);
        *(void *)uint64_t v31 = &off_1018988B0;
        v31[18] = 0;
        uint64_t v32 = *(void *)(a1 + 88);
        *(void *)(a1 + 88) = v31;
        if (v32)
        {
          (*(void (**)(uint64_t))(*(void *)v32 + 8LL))(v32);
          uint64_t v31 = *(_DWORD **)(a1 + 88);
        }

        goto LABEL_59;
      case 4u:
        uint64_t v31 = operator new(0x28uLL);
        sub_1010DF2B4((uint64_t)v31);
        uint64_t v33 = *(void *)(a1 + 8);
        *(void *)(a1 + 8) = v31;
        if (v33)
        {
          (*(void (**)(uint64_t))(*(void *)v33 + 8LL))(v33);
          uint64_t v31 = *(_DWORD **)(a1 + 8);
        }

        goto LABEL_59;
      case 5u:
        uint64_t v31 = operator new(0x28uLL);
        sub_1010DF2B4((uint64_t)v31);
        uint64_t v34 = *(void *)(a1 + 16);
        *(void *)(a1 + 16) = v31;
        if (v34)
        {
          (*(void (**)(uint64_t))(*(void *)v34 + 8LL))(v34);
          uint64_t v31 = *(_DWORD **)(a1 + 16);
        }

        goto LABEL_59;
      case 6u:
        uint64_t v31 = operator new(0x30uLL);
        *(void *)uint64_t v31 = &off_101898D10;
        v31[11] = 0;
        uint64_t v35 = *(void *)(a1 + 64);
        *(void *)(a1 + 64) = v31;
        if (v35)
        {
          (*(void (**)(uint64_t))(*(void *)v35 + 8LL))(v35);
          uint64_t v31 = *(_DWORD **)(a1 + 64);
        }

        goto LABEL_59;
      case 7u:
        uint64_t v31 = operator new(0x30uLL);
        *(void *)uint64_t v31 = &off_101898D10;
        v31[11] = 0;
        unsigned int v36 = *(void *)(a1 + 72);
        *(void *)(a1 + 72) = v31;
        if (v36)
        {
          (*(void (**)(uint64_t))(*(void *)v36 + 8LL))(v36);
          uint64_t v31 = *(_DWORD **)(a1 + 72);
        }

        goto LABEL_59;
      case 8u:
        uint64_t v31 = operator new(0x80uLL);
        sub_1010E4324((uint64_t)v31);
        char v37 = *(void *)(a1 + 32);
        *(void *)(a1 + 32) = v31;
        if (v37)
        {
          (*(void (**)(uint64_t))(*(void *)v37 + 8LL))(v37);
          uint64_t v31 = *(_DWORD **)(a1 + 32);
        }

        goto LABEL_59;
      case 9u:
        uint64_t v31 = operator new(0x20uLL);
        sub_10119F358((uint64_t)v31);
        uint64_t v38 = *(void *)(a1 + 104);
        *(void *)(a1 + 104) = v31;
        if (v38)
        {
          (*(void (**)(uint64_t))(*(void *)v38 + 8LL))(v38);
          uint64_t v31 = *(_DWORD **)(a1 + 104);
        }

        goto LABEL_59;
      case 0xAu:
        uint64_t v31 = operator new(0x10uLL);
        sub_10114F70C(v31);
        int v39 = *(void *)(a1 + 80);
        *(void *)(a1 + 80) = v31;
        if (v39)
        {
          (*(void (**)(uint64_t))(*(void *)v39 + 8LL))(v39);
          uint64_t v31 = *(_DWORD **)(a1 + 80);
        }

        goto LABEL_59;
      case 0xBu:
        uint64_t v31 = operator new(0x30uLL);
        sub_101167CA0((uint64_t)v31);
        uint64_t v40 = *(void *)(a1 + 120);
        *(void *)(a1 + 120) = v31;
        if (v40)
        {
          (*(void (**)(uint64_t))(*(void *)v40 + 8LL))(v40);
          uint64_t v31 = *(_DWORD **)(a1 + 120);
        }

        goto LABEL_59;
      case 0xCu:
        uint64_t v31 = operator new(0x38uLL);
        *(void *)uint64_t v31 = &off_101898920;
        v31[12] = 0;
        uint64_t v41 = *(void *)(a1 + 48);
        *(void *)(a1 + 48) = v31;
        if (v41)
        {
          (*(void (**)(uint64_t))(*(void *)v41 + 8LL))(v41);
          uint64_t v31 = *(_DWORD **)(a1 + 48);
        }

        goto LABEL_59;
      case 0xDu:
        uint64_t v31 = operator new(0xE0uLL);
        *(void *)uint64_t v31 = &off_101898958;
        *((void *)v31 + 27) = 0LL;
        int v42 = *(void *)(a1 + 56);
        *(void *)(a1 + 56) = v31;
        if (v42)
        {
          (*(void (**)(uint64_t))(*(void *)v42 + 8LL))(v42);
          uint64_t v31 = *(_DWORD **)(a1 + 56);
        }

        goto LABEL_59;
      case 0xEu:
        uint64_t v31 = operator new(0x58uLL);
        *(void *)uint64_t v31 = &off_101898878;
        v31[20] = 0;
        uint64_t v43 = *(void *)(a1 + 112);
        *(void *)(a1 + 112) = v31;
        if (v43)
        {
          (*(void (**)(uint64_t))(*(void *)v43 + 8LL))(v43);
          uint64_t v31 = *(_DWORD **)(a1 + 112);
        }

        goto LABEL_59;
      case 0xFu:
        uint64_t v31 = operator new(0x80uLL);
        sub_1010E4324((uint64_t)v31);
        uint64_t v44 = *(void *)(a1 + 40);
        *(void *)(a1 + 40) = v31;
        if (v44)
        {
          (*(void (**)(uint64_t))(*(void *)v44 + 8LL))(v44);
          uint64_t v31 = *(_DWORD **)(a1 + 40);
        }

        goto LABEL_59;
      case 0x10u:
        uint64_t v31 = operator new(0x58uLL);
        sub_101188CD4((uint64_t)v31);
        v45 = *(void *)(a1 + 96);
        *(void *)(a1 + 96) = v31;
        if (v45)
        {
          (*(void (**)(uint64_t))(*(void *)v45 + 8LL))(v45);
          uint64_t v31 = *(_DWORD **)(a1 + 96);
        }

  uint64_t v9 = *(_DWORD *)(a2 + 68);
  v3 |= 0x1000uLL;
  *(void *)(a1 + 216) = v3;
  *(_DWORD *)(a1 + 68) = v9;
  int v2 = *(void *)(a2 + 216);
  if ((v2 & 0x4000) == 0)
  {
LABEL_31:
    if ((v2 & 0x100000000LL) == 0) {
      goto LABEL_32;
    }
    goto LABEL_79;
  }

  PB::TextFormatter::format(this, "pathLengthDecorrelation", *(float *)(a1 + 124));
  unsigned int v5 = *(void *)(a1 + 216);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_28:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_79;
  }

  double result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 76), 0x1Bu);
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x100000000LL) == 0)
  {
LABEL_29:
    if ((v4 & 0x1000000000LL) == 0) {
      goto LABEL_30;
    }
    goto LABEL_79;
  }

  double result = *(float *)(a2 + 104);
  v5 |= 0x8000uLL;
  *int v2 = v5;
  *(_BYTE *)(a1 + 324) = v6;
  *(float *)(a1 + 104) = result;
  uint64_t v7 = *v3;
  uint64_t v4 = *(_BYTE *)(a2 + 324);
  if ((*v3 & 0x80) == 0)
  {
LABEL_12:
    if ((v7 & 0x100) == 0) {
      goto LABEL_13;
    }
    goto LABEL_79;
  }

  PB::TextFormatter::format(this, "arclengthZOverEpoch", *(float *)(a1 + 100));
  uint64_t v6 = *v5;
  uint64_t v7 = *(_BYTE *)(a1 + 324);
  if ((*v5 & 0x8000) == 0)
  {
LABEL_11:
    if ((v6 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_79;
  }

  double result = PB::Writer::write(this, *(float *)(v3 + 104), 7u);
  uint64_t v6 = *v4;
  unsigned int v5 = *((_BYTE *)v4 + 8);
  if ((*v4 & 0x80) == 0)
  {
LABEL_12:
    if ((v6 & 0x100) == 0) {
      goto LABEL_13;
    }
    goto LABEL_79;
  }

  uint64_t v17 = *(_BYTE *)(a2 + 161);
  v3 |= 0x4000000000uLL;
  *(void *)(a1 + 172) = v3;
  *(_BYTE *)(a1 + 161) = v17;
  int v2 = *(void *)(a2 + 172);
  if ((v2 & 0x80000000000LL) == 0)
  {
LABEL_34:
    if ((v2 & 0x8000000000LL) == 0) {
      goto LABEL_35;
    }
    goto LABEL_79;
  }

  PB::TextFormatter::format(this, "kThresholdMaxRMSRO", *(float *)(a1 + 100));
  unsigned int v5 = *(void *)(a1 + 172);
  if ((v5 & 0x100000) == 0)
  {
LABEL_31:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_79;
  }

  double result = PB::Writer::write(this, *(_BYTE *)(v3 + 166), 0x75u);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x8000000000LL) == 0)
  {
LABEL_32:
    if ((v4 & 0x10000000000LL) == 0) {
      goto LABEL_33;
    }
    goto LABEL_79;
  }

        *(_DWORD *)(a1 + 52) = v27;
        goto LABEL_82;
      case 3u:
        *(_BYTE *)(a1 + 60) |= 8u;
        uint64_t v30 = *((void *)this + 1);
        uint64_t v31 = *((void *)this + 2);
        uint64_t v32 = *(void *)this;
        if (v30 <= 0xFFFFFFFFFFFFFFF5LL && v30 + 10 <= v31)
        {
          uint64_t v33 = 0;
          uint64_t v34 = 0;
          uint64_t v35 = 0LL;
          do
          {
            unsigned int v36 = v30 + 1;
            *((void *)this + 1) = v30 + 1;
            char v37 = *(_BYTE *)(v32 + v30);
            v35 |= (unint64_t)(v37 & 0x7F) << v33;
            if ((v37 & 0x80) == 0) {
              goto LABEL_81;
            }
            v33 += 7;
            uint64_t v30 = v36;
            unsigned int v14 = v34++ > 8;
          }

          while (!v14);
LABEL_69:
          LODWORD(v35) = 0;
          goto LABEL_81;
        }

        uint64_t v53 = 0;
        int v54 = 0;
        uint64_t v35 = 0LL;
        if (v31 <= v30) {
          uint64_t v31 = *((void *)this + 1);
        }
        while (2)
        {
          if (v31 == v30)
          {
            LODWORD(v35) = 0;
            *((_BYTE *)this + 24) = 1;
          }

          else
          {
            v55 = v30 + 1;
            uint64_t v56 = *(_BYTE *)(v32 + v30);
            *((void *)this + 1) = v55;
            v35 |= (unint64_t)(v56 & 0x7F) << v53;
            if (v56 < 0)
            {
              v53 += 7;
              uint64_t v30 = v55;
              unsigned int v14 = v54++ > 8;
              if (v14) {
                goto LABEL_69;
              }
              continue;
            }

            if (*((_BYTE *)this + 24)) {
              LODWORD(v35) = 0;
            }
          }

          break;
        }

  LODWORD(v4) = *(_DWORD *)(a2 + 52);
  v3 |= 0x100uLL;
  *(void *)(a1 + 164) = v3;
  *(_DWORD *)(a1 + 52) = v4;
  if ((*(void *)(a2 + 164) & 0x100000000LL) == 0) {
    return *(float *)&v4;
  }
LABEL_78:
  LODWORD(v4) = *(_DWORD *)(a2 + 148);
  *(void *)(a1 + 164) = v3 | (unint64_t)&_mh_execute_header;
  *(_DWORD *)(a1 + 148) = v4;
  return *(float *)&v4;
}

  uint64_t v38 = *(_BYTE *)(a2 + 208);
  v3 |= 0x4000000000uLL;
  *(void *)(result + 212) = v3;
  *(_BYTE *)(result + 208) = v38;
  int v2 = *(void *)(a2 + 212);
  if ((v2 & 0x8000000000LL) == 0)
  {
LABEL_40:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_79;
  }

  PB::TextFormatter::format(this, "rolloverTimestampAtMaxSaturation", *(void *)(a1 + 88));
  unsigned int v5 = *(void *)(a1 + 212);
  if ((v5 & 0x400000000LL) == 0)
  {
LABEL_37:
    if ((v5 & 0x800000000LL) == 0) {
      goto LABEL_38;
    }
    goto LABEL_79;
  }

  double result = PB::Writer::write(this, *(_BYTE *)(v3 + 209), 0x24u);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 0x1000) == 0)
  {
LABEL_38:
    if ((v4 & 4) == 0) {
      goto LABEL_39;
    }
    goto LABEL_79;
  }

        *(_DWORD *)(a1 + 32) = v31;
      }

      else if ((PB::Reader::skip(this, v25, v15 & 7, 0) & 1) == 0)
      {
        return 0LL;
      }

      uint64_t v4 = *((void *)this + 1);
      unsigned int v5 = *((void *)this + 2);
      uint64_t v6 = *((unsigned __int8 *)this + 24);
      if (v4 >= v5 || v6 != 0) {
        return v6 == 0;
      }
    }

    uint64_t v19 = 0;
    uint64_t v20 = 0;
    unsigned int v15 = 0LL;
    if (v4 > v5) {
      unsigned int v5 = v4;
    }
    while (v5 != v4)
    {
      uint64_t v21 = v4 + 1;
      uint64_t v22 = *(_BYTE *)(v12 + v4);
      *((void *)this + 1) = v21;
      v15 |= (unint64_t)(v22 & 0x7F) << v19;
      if ((v22 & 0x80) == 0) {
        goto LABEL_21;
      }
      v19 += 7;
      uint64_t v4 = v21;
      if (v20++ >= 9)
      {
LABEL_20:
        unsigned int v15 = 0LL;
        goto LABEL_21;
      }
    }

    uint64_t v6 = 1;
    *((_BYTE *)this + 24) = 1;
  }

  return v6 == 0;
}

  uint64_t v62 = *(void *)(a2 + 56);
  v6 |= 0x40u;
  *(_DWORD *)(a1 + 244) = v6;
  *(void *)(a1 + 56) = v62;
  int v39 = *(_DWORD *)(a2 + 244);
  if ((v39 & 2) == 0)
  {
LABEL_49:
    if ((v39 & 0x10) == 0) {
      goto LABEL_50;
    }
    goto LABEL_79;
  }

  PB::TextFormatter::format(this, "userAge", *(float *)(a1 + 224));
  uint64_t v19 = *(_DWORD *)(a1 + 244);
  if ((v19 & 0x40000) == 0)
  {
LABEL_50:
    if ((v19 & 0x1000000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_79;
  }

  double result = PB::Writer::write(this, *(double *)(v3 + 40), 0x22u);
  uint64_t v16 = *(_DWORD *)(v3 + 244);
  if ((v16 & 0x4000) == 0)
  {
LABEL_48:
    if ((v16 & 0x2000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_79;
  }

  LODWORD(v4) = *(_DWORD *)(a2 + 160);
  v3 |= 0x800000000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 160) = v4;
  int v2 = *(void *)(a2 + 184);
  if ((v2 & 0x40000000000LL) == 0)
  {
LABEL_35:
    if ((v2 & 0x20) == 0) {
      goto LABEL_36;
    }
    goto LABEL_79;
  }

  PB::TextFormatter::format(this, "stepLength", *(float *)(a1 + 120));
  unsigned int v5 = *(void *)(a1 + 184);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_32:
    if ((v5 & 0x80000000000LL) == 0) {
      goto LABEL_33;
    }
    goto LABEL_79;
  }

  double result = PB::Writer::write(this, *(_BYTE *)(v3 + 179), 0x1Fu);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x20) == 0)
  {
LABEL_33:
    if ((v4 & 0x80) == 0) {
      goto LABEL_34;
    }
    goto LABEL_79;
  }

  uint64_t v44 = *(_DWORD *)(a2 + 152);
  *(void *)(a1 + 192) |= 0x10000000uLL;
  *(_DWORD *)(a1 + 152) = v44;
  unsigned int v13 = *(void *)(a2 + 192);
  if ((v13 & 0x2000000000LL) == 0)
  {
LABEL_41:
    if ((v13 & 0x40) == 0) {
      goto LABEL_42;
    }
    goto LABEL_79;
  }

  double result = PB::Writer::write(this, *(float *)(v3 + 164), 0x24u);
  uint64_t v6 = *(void *)(v3 + 192);
  if ((v6 & 0x100000000LL) == 0)
  {
LABEL_40:
    if ((v6 & 0x200000000LL) == 0) {
      goto LABEL_41;
    }
    goto LABEL_79;
  }

  uint64_t v28 = *(_DWORD *)(a2 + 80);
  v3 |= 0x20000uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 80) = v28;
  int v2 = *(void *)(a2 + 188);
  if ((v2 & 0x800000000LL) == 0)
  {
LABEL_30:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_79;
  }

  PB::TextFormatter::format(this, "longBodyTurnCounter", *(_DWORD *)(a1 + 92));
  unsigned int v5 = *(void *)(a1 + 188);
  if ((v5 & 0x800000000000LL) == 0)
  {
LABEL_27:
    if ((v5 & 0x1000000000000LL) == 0) {
      goto LABEL_28;
    }
    goto LABEL_79;
  }

  double result = PB::Writer::write(this, *(float *)(v3 + 152), 0x1Au);
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x8000) == 0)
  {
LABEL_28:
    if ((v4 & 0x4000000000LL) == 0) {
      goto LABEL_29;
    }
    goto LABEL_79;
  }

    *(void *)(a1 + 200) = *(void *)(v38 + 32);
    uint64_t v50 = *(unsigned __int8 *)(v1 + 136);
    int v51 = *(unsigned __int8 *)(v1 + 40);
    if (v50 >= v51) {
      uint64_t v52 = v1 + 96;
    }
    else {
      uint64_t v52 = v1;
    }
    if (v8 != v2)
    {
      if (v50 >= v51) {
        uint64_t v53 = v1;
      }
      else {
        uint64_t v53 = v1 + 96;
      }
      int v54 = v1 + 192;
      while (v54 + 96 != v2)
      {
        v55 = *(unsigned __int8 *)(v54 + 136);
        uint64_t v56 = *(unsigned __int8 *)(v54 + 40);
        unsigned int v57 = *(unsigned __int8 *)(v53 + 40);
        if (v55 >= v56)
        {
          if (v56 < v57) {
            uint64_t v53 = v54;
          }
        }

        else
        {
          if (v55 < v57) {
            uint64_t v53 = v54 + 96;
          }
          uint64_t v52 = v54;
        }

        v54 += 192LL;
        if (v54 == v2) {
          goto LABEL_99;
        }
      }

      unsigned int v58 = *(unsigned __int8 *)(v54 + 40);
    }

void sub_1001BEA9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

double sub_1001BEAB4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v28,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPRavenOutput.pb.cc",  6279LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v28,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v27, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v28);
  }

  int v6 = *(_DWORD *)(a2 + 92);
  if (!(_BYTE)v6) {
    goto LABEL_53;
  }
  if ((v6 & 1) != 0)
  {
    *(_DWORD *)(a1 + 92) |= 1u;
    uint64_t v7 = *(char **)(a1 + 8);
    if (!v7)
    {
      uint64_t v7 = (char *)operator new(0x38uLL);
      *(void *)uint64_t v7 = off_101827160;
      *(_OWORD *)(v7 + 8) = 0u;
      *(_OWORD *)(v7 + 24) = 0u;
      *(_OWORD *)(v7 + 40) = 0u;
      *(void *)(a1 + 8) = v7;
    }

    uint64_t v8 = *(void *)(a2 + 8);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1019A0AF0 + 8);
    }
    double result = sub_1001BFDA8((uint64_t)v7, v8);
    int v6 = *(_DWORD *)(a2 + 92);
    if ((v6 & 2) == 0)
    {
LABEL_6:
      if ((v6 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_23;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_6;
  }

  *(_DWORD *)(a1 + 92) |= 2u;
  uint64_t v9 = *(char **)(a1 + 16);
  if (!v9)
  {
    uint64_t v9 = (char *)operator new(0x60uLL);
    *(void *)uint64_t v9 = &off_101827520;
    *(_OWORD *)(v9 + 8) = 0u;
    *(_OWORD *)(v9 + 24) = 0u;
    *(_OWORD *)(v9 + 40) = 0u;
    *(_OWORD *)(v9 + 56) = 0u;
    *(_OWORD *)(v9 + 72) = 0u;
    *((void *)v9 + 11) = 0LL;
    *(void *)(a1 + 16) = v9;
  }

  uint64_t v10 = *(void *)(a2 + 16);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_1019A0AF0 + 16);
  }
  double result = sub_1001C7BE4((uint64_t)v9, v10);
  int v6 = *(_DWORD *)(a2 + 92);
  if ((v6 & 4) == 0)
  {
LABEL_7:
    if ((v6 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_28;
  }

void sub_1001BEF5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

double sub_1001BEF74(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v12,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPRavenOutput.pb.cc",  5125LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v12,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }

  int v6 = *(_DWORD *)(a2 + 160);
  if (!(_BYTE)v6) {
    goto LABEL_13;
  }
  if ((v6 & 1) != 0)
  {
    *(_DWORD *)(a1 + 160) |= 1u;
    uint64_t v7 = *(char **)(a1 + 8);
    if (!v7)
    {
      uint64_t v7 = (char *)operator new(0x38uLL);
      *(void *)uint64_t v7 = off_101827160;
      *(_OWORD *)(v7 + 8) = 0u;
      *(_OWORD *)(v7 + 24) = 0u;
      *(_OWORD *)(v7 + 40) = 0u;
      *(void *)(a1 + 8) = v7;
    }

    uint64_t v8 = *(void *)(a2 + 8);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1019A0AE0 + 8);
    }
    double result = sub_1001BFDA8((uint64_t)v7, v8);
    int v6 = *(_DWORD *)(a2 + 160);
    if ((v6 & 2) == 0)
    {
LABEL_6:
      if ((v6 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_36;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_6;
  }

  double result = *(double *)(a2 + 16);
  *(_DWORD *)(a1 + 160) |= 2u;
  *(double *)(a1 + 16) = result;
  int v6 = *(_DWORD *)(a2 + 160);
  if ((v6 & 4) == 0)
  {
LABEL_7:
    if ((v6 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_37;
  }

void sub_1001BF2B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

double sub_1001BF2D0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v12,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPRavenOutput.pb.cc",  5703LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v12,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }

  int v6 = *(_DWORD *)(a2 + 96);
  if (!(_BYTE)v6) {
    goto LABEL_13;
  }
  if ((v6 & 1) != 0)
  {
    *(_DWORD *)(a1 + 96) |= 1u;
    uint64_t v7 = *(char **)(a1 + 8);
    if (!v7)
    {
      uint64_t v7 = (char *)operator new(0x38uLL);
      *(void *)uint64_t v7 = off_101827160;
      *(_OWORD *)(v7 + 8) = 0u;
      *(_OWORD *)(v7 + 24) = 0u;
      *(_OWORD *)(v7 + 40) = 0u;
      *(void *)(a1 + 8) = v7;
    }

    uint64_t v8 = *(void *)(a2 + 8);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1019A0AE8 + 8);
    }
    double result = sub_1001BFDA8((uint64_t)v7, v8);
    int v6 = *(_DWORD *)(a2 + 96);
    if ((v6 & 2) == 0)
    {
LABEL_6:
      if ((v6 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_26;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_6;
  }

  char v9 = *(_BYTE *)(a2 + 88);
  *(_DWORD *)(a1 + 96) |= 2u;
  *(_BYTE *)(a1 + 88) = v9;
  int v6 = *(_DWORD *)(a2 + 96);
  if ((v6 & 4) == 0)
  {
LABEL_7:
    if ((v6 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_27;
  }

void sub_1001BF50C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001BF524(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v44,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPRavenOutput.pb.cc",  1991LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v44,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v43, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v44);
  }

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 64),  *(_DWORD *)(a2 + 72) + *(_DWORD *)(a1 + 72));
  if (*(int *)(a2 + 72) >= 1)
  {
    uint64_t v5 = 0LL;
    do
    {
      uint64_t v6 = *(void *)(*(void *)(a2 + 64) + 8 * v5);
      int v7 = *(_DWORD *)(a1 + 76);
      uint64_t v8 = *(int *)(a1 + 72);
      if ((int)v8 >= v7)
      {
        if (v7 == *(_DWORD *)(a1 + 80))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 64),  v7 + 1);
          int v7 = *(_DWORD *)(a1 + 76);
        }

        *(_DWORD *)(a1 + 76) = v7 + 1;
        char v10 = (char *)operator new(0x30uLL);
        *(void *)char v10 = off_1018271D8;
        *(_OWORD *)(v10 + 8) = 0u;
        *(_OWORD *)(v10 + 24) = 0u;
        *((_DWORD *)v10 + 10) = 0;
        uint64_t v11 = *(void *)(a1 + 64);
        uint64_t v12 = *(int *)(a1 + 72);
        *(_DWORD *)(a1 + 72) = v12 + 1;
        *(void *)(v11 + 8 * v12) = v10;
      }

      else
      {
        uint64_t v9 = *(void *)(a1 + 64);
        *(_DWORD *)(a1 + 72) = v8 + 1;
        char v10 = *(char **)(v9 + 8 * v8);
      }

      sub_1001C08F8((uint64_t)v10, v6);
      ++v5;
    }

    while (v5 < *(int *)(a2 + 72));
  }

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 88),  *(_DWORD *)(a2 + 96) + *(_DWORD *)(a1 + 96));
  if (*(int *)(a2 + 96) >= 1)
  {
    uint64_t v13 = 0LL;
    do
    {
      uint64_t v14 = *(void *)(*(void *)(a2 + 88) + 8 * v13);
      int v15 = *(_DWORD *)(a1 + 100);
      uint64_t v16 = *(int *)(a1 + 96);
      if ((int)v16 >= v15)
      {
        if (v15 == *(_DWORD *)(a1 + 104))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 88),  v15 + 1);
          int v15 = *(_DWORD *)(a1 + 100);
        }

        *(_DWORD *)(a1 + 100) = v15 + 1;
        uint64_t v18 = (char *)operator new(0x30uLL);
        *(void *)uint64_t v18 = off_1018271D8;
        *(_OWORD *)(v18 + 8) = 0u;
        *(_OWORD *)(v18 + 24) = 0u;
        *((_DWORD *)v18 + 10) = 0;
        uint64_t v19 = *(void *)(a1 + 88);
        uint64_t v20 = *(int *)(a1 + 96);
        *(_DWORD *)(a1 + 96) = v20 + 1;
        *(void *)(v19 + 8 * v20) = v18;
      }

      else
      {
        uint64_t v17 = *(void *)(a1 + 88);
        *(_DWORD *)(a1 + 96) = v16 + 1;
        uint64_t v18 = *(char **)(v17 + 8 * v16);
      }

      sub_1001C08F8((uint64_t)v18, v14);
      ++v13;
    }

    while (v13 < *(int *)(a2 + 96));
  }

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 112),  *(_DWORD *)(a2 + 120) + *(_DWORD *)(a1 + 120));
  if (*(int *)(a2 + 120) >= 1)
  {
    uint64_t v21 = 0LL;
    do
    {
      uint64_t v22 = *(void *)(*(void *)(a2 + 112) + 8 * v21);
      int v23 = *(_DWORD *)(a1 + 124);
      uint64_t v24 = *(int *)(a1 + 120);
      if ((int)v24 >= v23)
      {
        if (v23 == *(_DWORD *)(a1 + 128))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 112),  v23 + 1);
          int v23 = *(_DWORD *)(a1 + 124);
        }

        *(_DWORD *)(a1 + 124) = v23 + 1;
        uint64_t v26 = (char *)operator new(0x30uLL);
        *(void *)uint64_t v26 = off_1018271D8;
        *(_OWORD *)(v26 + 8) = 0u;
        *(_OWORD *)(v26 + 24) = 0u;
        *((_DWORD *)v26 + 10) = 0;
        uint64_t v27 = *(void *)(a1 + 112);
        uint64_t v28 = *(int *)(a1 + 120);
        *(_DWORD *)(a1 + 120) = v28 + 1;
        *(void *)(v27 + 8 * v28) = v26;
      }

      else
      {
        uint64_t v25 = *(void *)(a1 + 112);
        *(_DWORD *)(a1 + 120) = v24 + 1;
        uint64_t v26 = *(char **)(v25 + 8 * v24);
      }

      sub_1001C08F8((uint64_t)v26, v22);
      ++v21;
    }

    while (v21 < *(int *)(a2 + 120));
  }

  int v29 = *(_DWORD *)(a2 + 168);
  if (!(_BYTE)v29) {
    goto LABEL_43;
  }
  if ((v29 & 1) != 0)
  {
    *(_DWORD *)(a1 + 168) |= 1u;
    uint64_t v30 = *(char **)(a1 + 8);
    if (!v30)
    {
      uint64_t v30 = (char *)operator new(0x38uLL);
      *(void *)uint64_t v30 = off_101827160;
      *(_OWORD *)(v30 + 8) = 0u;
      *(_OWORD *)(v30 + 24) = 0u;
      *(_OWORD *)(v30 + 40) = 0u;
      *(void *)(a1 + 8) = v30;
    }

    uint64_t v31 = *(void *)(a2 + 8);
    if (!v31) {
      uint64_t v31 = *(void *)(qword_1019A0AC8 + 8);
    }
    sub_1001BFDA8((uint64_t)v30, v31);
    int v29 = *(_DWORD *)(a2 + 168);
  }

  if ((v29 & 2) != 0)
  {
    unsigned int v32 = *(_DWORD *)(a2 + 56);
    if (v32 >= 4) {
      sub_10122F8EC();
    }
    *(_DWORD *)(a1 + 168) |= 2u;
    *(_DWORD *)(a1 + 56) = v32;
    int v29 = *(_DWORD *)(a2 + 168);
  }

  if ((v29 & 4) != 0)
  {
    uint64_t v39 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 168) |= 4u;
    *(void *)(a1 + 16) = v39;
    int v29 = *(_DWORD *)(a2 + 168);
    if ((v29 & 8) == 0)
    {
LABEL_39:
      if ((v29 & 0x10) == 0) {
        goto LABEL_40;
      }
LABEL_58:
      uint64_t v41 = *(void *)(a2 + 32);
      *(_DWORD *)(a1 + 168) |= 0x10u;
      *(void *)(a1 + 32) = v41;
      int v29 = *(_DWORD *)(a2 + 168);
      if ((v29 & 0x20) == 0)
      {
LABEL_41:
        if ((v29 & 0x40) == 0) {
          goto LABEL_43;
        }
        goto LABEL_42;
      }

      goto LABEL_59;
    }
  }

  else if ((v29 & 8) == 0)
  {
    goto LABEL_39;
  }

  uint64_t v40 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 168) |= 8u;
  *(void *)(a1 + 24) = v40;
  int v29 = *(_DWORD *)(a2 + 168);
  if ((v29 & 0x10) != 0) {
    goto LABEL_58;
  }
LABEL_40:
  if ((v29 & 0x20) == 0) {
    goto LABEL_41;
  }
LABEL_59:
  uint64_t v42 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 168) |= 0x20u;
  *(void *)(a1 + 40) = v42;
  int v29 = *(_DWORD *)(a2 + 168);
  if ((v29 & 0x40) != 0)
  {
LABEL_42:
    uint64_t v33 = *(void *)(a2 + 48);
    *(_DWORD *)(a1 + 168) |= 0x40u;
    *(void *)(a1 + 48) = v33;
    int v29 = *(_DWORD *)(a2 + 168);
  }

void sub_1001BF9BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_1001BF9D4()
{
  return 1LL;
}

void *sub_1001BF9DC@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.Raven.RavenOutput");
}

double sub_1001BF9EC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPRavenOutput.pb.cc",  663LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 28);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 28) & 1) != 0)
    {
      uint64_t v7 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 28) |= 1u;
      *(void *)(a1 + 8) = v7;
      int v6 = *(_DWORD *)(a2 + 28);
    }

    if ((v6 & 2) != 0)
    {
      double result = *(double *)(a2 + 16);
      *(_DWORD *)(a1 + 28) |= 2u;
      *(double *)(a1 + 16) = result;
    }
  }

  return result;
}

void sub_1001BFA94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001BFAAC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018270E8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001BFABC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018270E8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

void *sub_1001BFADC()
{
  double result = operator new(0x20uLL);
  *double result = off_1018270E8;
  result[1] = 0LL;
  result[2] = 0LL;
  result[3] = 0LL;
  return result;
}

uint64_t sub_1001BFB04(uint64_t result)
{
  if (*(_BYTE *)(result + 28))
  {
    *(void *)(result + 8) = 0LL;
    *(void *)(result + 16) = 0LL;
  }

  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_1001BFB18( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        int v7 = TagFallback & 7;
        uint64_t v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, &v13);
          if (!(_DWORD)result) {
            return result;
          }
          unint64_t v10 = v13;
          uint64_t v11 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unint64_t v10 = *v9;
          uint64_t v11 = v9 + 1;
          *((void *)this + 1) = v11;
        }

        *(void *)(a1 + 8) = v10;
        *(_DWORD *)(a1 + 28) |= 1u;
        if ((unint64_t)v11 < v8 && *v11 == 17)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_23;
        }
      }

      int v7 = TagFallback & 7;
      if (v7 != 1) {
        goto LABEL_15;
      }
LABEL_23:
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v13) & 1) == 0) {
        return 0LL;
      }
      *(void *)(a1 + 16) = v13;
      *(_DWORD *)(a1 + 28) |= 2u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }

    int v7 = TagFallback & 7;
LABEL_15:
    if (v7 == 4) {
      return 1LL;
    }
  }

  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) != 0);
  return 0LL;
}

uint64_t sub_1001BFC94( uint64_t result, uint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = a2;
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(void *)(result + 8),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }

  if ((v6 & 2) != 0) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v4,  *(double *)(v5 + 16),  a3);
  }
  return result;
}

uint64_t sub_1001BFCEC(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 28);
  if ((_BYTE)v3)
  {
    if ((*(_BYTE *)(a1 + 28) & 1) != 0)
    {
      unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8),  a2)
         + 1;
      int v3 = *(_DWORD *)(a1 + 28);
    }

    else
    {
      unsigned int v4 = 0;
    }

    if ((v3 & 2) != 0) {
      uint64_t result = v4 + 9;
    }
    else {
      uint64_t result = v4;
    }
  }

  else
  {
    uint64_t result = 0LL;
  }

  *(_DWORD *)(a1 + 24) = result;
  return result;
}

double sub_1001BFD44(uint64_t a1, void *lpsrc)
{
  return sub_1001BF9EC(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001BFD90()
{
  return 1LL;
}

void *sub_1001BFD98@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.Raven.TimeStruct");
}

double sub_1001BFDA8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v16,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPRavenOutput.pb.cc",  988LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v16,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v15, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 52);
  if (!(_BYTE)v6) {
    return result;
  }
  if ((*(_BYTE *)(a2 + 52) & 1) != 0)
  {
    *(_DWORD *)(a1 + 52) |= 1u;
    int v7 = *(void **)(a1 + 8);
    if (!v7)
    {
      int v7 = operator new(0x20uLL);
      *int v7 = off_1018270E8;
      v7[1] = 0LL;
      v7[2] = 0LL;
      v7[3] = 0LL;
      *(void *)(a1 + 8) = v7;
    }

    uint64_t v8 = *(void *)(a2 + 8);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1019A0AB8 + 8);
    }
    double result = sub_1001BF9EC((uint64_t)v7, v8);
    int v6 = *(_DWORD *)(a2 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_6:
      if ((v6 & 4) == 0) {
        goto LABEL_7;
      }
LABEL_21:
      *(_DWORD *)(a1 + 52) |= 4u;
      uint64_t v11 = *(void **)(a1 + 24);
      if (!v11)
      {
        uint64_t v11 = operator new(0x20uLL);
        *uint64_t v11 = off_1018270E8;
        v11[1] = 0LL;
        v11[2] = 0LL;
        v11[3] = 0LL;
        *(void *)(a1 + 24) = v11;
      }

      uint64_t v12 = *(void *)(a2 + 24);
      if (!v12) {
        uint64_t v12 = *(void *)(qword_1019A0AB8 + 24);
      }
      double result = sub_1001BF9EC((uint64_t)v11, v12);
      int v6 = *(_DWORD *)(a2 + 52);
      if ((v6 & 8) == 0)
      {
LABEL_8:
        if ((v6 & 0x10) == 0) {
          return result;
        }
        goto LABEL_9;
      }

      goto LABEL_26;
    }
  }

  else if ((*(_BYTE *)(a2 + 52) & 2) == 0)
  {
    goto LABEL_6;
  }

  *(_DWORD *)(a1 + 52) |= 2u;
  uint64_t v9 = *(void **)(a1 + 16);
  if (!v9)
  {
    uint64_t v9 = operator new(0x20uLL);
    *uint64_t v9 = off_1018270E8;
    v9[1] = 0LL;
    v9[2] = 0LL;
    v9[3] = 0LL;
    *(void *)(a1 + 16) = v9;
  }

  uint64_t v10 = *(void *)(a2 + 16);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_1019A0AB8 + 16);
  }
  double result = sub_1001BF9EC((uint64_t)v9, v10);
  int v6 = *(_DWORD *)(a2 + 52);
  if ((v6 & 4) != 0) {
    goto LABEL_21;
  }
LABEL_7:
  if ((v6 & 8) == 0) {
    goto LABEL_8;
  }
LABEL_26:
  *(_DWORD *)(a1 + 52) |= 8u;
  unint64_t v13 = *(void **)(a1 + 32);
  if (!v13)
  {
    unint64_t v13 = operator new(0x20uLL);
    *unint64_t v13 = off_1018270E8;
    v13[1] = 0LL;
    v13[2] = 0LL;
    v13[3] = 0LL;
    *(void *)(a1 + 32) = v13;
  }

  uint64_t v14 = *(void *)(a2 + 32);
  if (!v14) {
    uint64_t v14 = *(void *)(qword_1019A0AB8 + 32);
  }
  double result = sub_1001BF9EC((uint64_t)v13, v14);
  if ((*(_DWORD *)(a2 + 52) & 0x10) != 0)
  {
LABEL_9:
    double result = *(double *)(a2 + 40);
    *(_DWORD *)(a1 + 52) |= 0x10u;
    *(double *)(a1 + 40) = result;
  }

  return result;
}

void sub_1001BFF88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void *sub_1001BFFA0(void *result)
{
  if ((void *)qword_1019A0AB8 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
    }
    uint64_t v4 = v1[3];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
    }
    double result = (void *)v1[4];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_1001C0024(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101827160;
  sub_1001BFFA0(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001C0054(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101827160;
  sub_1001BFFA0(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v2);
}

double sub_1001C0088()
{
  v0 = (char *)operator new(0x38uLL);
  *(void *)v0 = off_101827160;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  return result;
}

uint64_t sub_1001C00BC(uint64_t result)
{
  LOBYTE(v1) = *(_BYTE *)(result + 52);
  if ((_BYTE)v1)
  {
    if ((*(_BYTE *)(result + 52) & 1) != 0)
    {
      uint64_t v2 = *(void *)(result + 8);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 28))
        {
          *(void *)(v2 + 8) = 0LL;
          *(void *)(v2 + 16) = 0LL;
        }

        *(_DWORD *)(v2 + 28) = 0;
        int v1 = *(_DWORD *)(result + 52);
      }
    }

    if ((v1 & 2) != 0)
    {
      uint64_t v3 = *(void *)(result + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 28))
        {
          *(void *)(v3 + 8) = 0LL;
          *(void *)(v3 + 16) = 0LL;
        }

        *(_DWORD *)(v3 + 28) = 0;
        int v1 = *(_DWORD *)(result + 52);
      }
    }

    if ((v1 & 4) != 0)
    {
      uint64_t v4 = *(void *)(result + 24);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 28))
        {
          *(void *)(v4 + 8) = 0LL;
          *(void *)(v4 + 16) = 0LL;
        }

        *(_DWORD *)(v4 + 28) = 0;
        int v1 = *(_DWORD *)(result + 52);
      }
    }

    if ((v1 & 8) != 0)
    {
      uint64_t v5 = *(void *)(result + 32);
      if (v5)
      {
        if (*(_BYTE *)(v5 + 28))
        {
          *(void *)(v5 + 8) = 0LL;
          *(void *)(v5 + 16) = 0LL;
        }

        *(_DWORD *)(v5 + 28) = 0;
      }
    }

    *(void *)(result + 40) = 0LL;
  }

  *(_DWORD *)(result + 52) = 0;
  return result;
}

uint64_t sub_1001C014C( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 < *((void *)this + 2) && (*v5 & 0x80000000) == 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
      goto LABEL_6;
    }

    TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = (_DWORD)TagFallback;
    if (!(_DWORD)TagFallback) {
      return 1LL;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_21;
        }
        *(_DWORD *)(a1 + 52) |= 1u;
        uint64_t v8 = *(void **)(a1 + 8);
        if (!v8)
        {
          uint64_t v8 = operator new(0x20uLL);
          *uint64_t v8 = off_1018270E8;
          v8[1] = 0LL;
          v8[2] = 0LL;
          v8[3] = 0LL;
          *(void *)(a1 + 8) = v8;
        }

        uint64_t v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v46)) {
            return 0LL;
          }
        }

        else
        {
          v46[0] = *v9;
          *((void *)this + 1) = v9 + 1;
        }

        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0LL;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v46[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        uint64_t v17 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v17 + 1;
        goto LABEL_33;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_21;
        }
LABEL_33:
        *(_DWORD *)(a1 + 52) |= 2u;
        uint64_t v18 = *(void **)(a1 + 16);
        if (!v18)
        {
          uint64_t v18 = operator new(0x20uLL);
          void *v18 = off_1018270E8;
          v18[1] = 0LL;
          v18[2] = 0LL;
          v18[3] = 0LL;
          *(void *)(a1 + 16) = v18;
        }

        uint64_t v19 = (char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v46)) {
            return 0LL;
          }
        }

        else
        {
          v46[0] = *v19;
          *((void *)this + 1) = v19 + 1;
        }

        int v20 = *((_DWORD *)this + 14);
        int v21 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v20 + 1;
        if (v20 >= v21) {
          return 0LL;
        }
        int v22 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v46[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v22);
        int v24 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v24, 1);
        int v25 = v24 - 1;
        if (v25 < 0 == v15) {
          *((_DWORD *)this + 14) = v25;
        }
        uint64_t v26 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v26 + 1;
LABEL_47:
        *(_DWORD *)(a1 + 52) |= 4u;
        uint64_t v27 = *(void **)(a1 + 24);
        if (!v27)
        {
          uint64_t v27 = operator new(0x20uLL);
          void *v27 = off_1018270E8;
          v27[1] = 0LL;
          v27[2] = 0LL;
          v27[3] = 0LL;
          *(void *)(a1 + 24) = v27;
        }

        uint64_t v28 = (char *)*((void *)this + 1);
        if ((unint64_t)v28 >= *((void *)this + 2) || *v28 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v46)) {
            return 0LL;
          }
        }

        else
        {
          v46[0] = *v28;
          *((void *)this + 1) = v28 + 1;
        }

        int v29 = *((_DWORD *)this + 14);
        int v30 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v29 + 1;
        if (v29 >= v30) {
          return 0LL;
        }
        int v31 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v46[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v31);
        int v33 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v33, 1);
        int v34 = v33 - 1;
        if (v34 < 0 == v15) {
          *((_DWORD *)this + 14) = v34;
        }
        uint64_t v35 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v35 + 1;
LABEL_61:
        *(_DWORD *)(a1 + 52) |= 8u;
        uint64_t v36 = *(void **)(a1 + 32);
        if (!v36)
        {
          uint64_t v36 = operator new(0x20uLL);
          void *v36 = off_1018270E8;
          v36[1] = 0LL;
          v36[2] = 0LL;
          v36[3] = 0LL;
          *(void *)(a1 + 32) = v36;
        }

        int v37 = (char *)*((void *)this + 1);
        if ((unint64_t)v37 >= *((void *)this + 2) || *v37 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v46)) {
            return 0LL;
          }
        }

        else
        {
          v46[0] = *v37;
          *((void *)this + 1) = v37 + 1;
        }

        int v38 = *((_DWORD *)this + 14);
        int v39 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v38 + 1;
        if (v38 >= v39) {
          return 0LL;
        }
        int v40 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v46[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v40);
        int v42 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v42, 1);
        int v43 = v42 - 1;
        if (v43 < 0 == v15) {
          *((_DWORD *)this + 14) = v43;
        }
        uint64_t v44 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v44 + 1;
LABEL_75:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v46) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 40) = *(void *)v46;
        *(_DWORD *)(a1 + 52) |= 0x10u;
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1LL;
          *((_BYTE *)this + 36) = 1;
          return result;
        }

        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_47;
        }
        goto LABEL_21;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_61;
        }
        goto LABEL_21;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_21;
        }
        goto LABEL_75;
      default:
        int v7 = TagFallback & 7;
LABEL_21:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001C0630( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 52);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0AB8 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_1019A0AB8 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v8,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }

uint64_t sub_1001C0720(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 52);
  if (!(_BYTE)v3)
  {
    uint64_t result = 0LL;
    goto LABEL_36;
  }

  if ((*(_BYTE *)(a1 + 52) & 1) == 0)
  {
    unsigned int v4 = 0;
    if ((*(_BYTE *)(a1 + 52) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }

  uint64_t v6 = *(void *)(a1 + 8);
  if (!v6) {
    uint64_t v6 = *(void *)(qword_1019A0AB8 + 8);
  }
  uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001BFCEC(v6, a2);
  int v8 = (int)v7;
  else {
    int v9 = 1;
  }
  unsigned int v4 = v8 + v9 + 1;
  int v3 = *(_DWORD *)(a1 + 52);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    uint64_t v10 = *(void *)(a1 + 16);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_1019A0AB8 + 16);
    }
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001BFCEC(v10, a2);
    int v12 = (int)v11;
    else {
      int v13 = 1;
    }
    v4 += v12 + v13 + 1;
    int v3 = *(_DWORD *)(a1 + 52);
  }

double sub_1001C0894(uint64_t a1, void *lpsrc)
{
  return sub_1001BFDA8(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001C08E0()
{
  return 1LL;
}

void *sub_1001C08E8@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.Raven.TimeStamp");
}

void sub_1001C08F8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v11,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPRavenOutput.pb.cc",  1352LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v11,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 40);
  if (!(_BYTE)v5) {
    return;
  }
  if ((*(_BYTE *)(a2 + 40) & 1) == 0)
  {
    if ((*(_BYTE *)(a2 + 40) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_11:
    uint64_t v8 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 40) |= 2u;
    *(void *)(a1 + 16) = v8;
    int v5 = *(_DWORD *)(a2 + 40);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        return;
      }
      goto LABEL_8;
    }

    goto LABEL_12;
  }

  uint64_t v7 = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 40) |= 1u;
  *(void *)(a1 + 8) = v7;
  int v5 = *(_DWORD *)(a2 + 40);
  if ((v5 & 2) != 0) {
    goto LABEL_11;
  }
LABEL_6:
  if ((v5 & 4) == 0) {
    goto LABEL_7;
  }
LABEL_12:
  unsigned int v9 = *(_DWORD *)(a2 + 32);
  if (v9 >= 0x24) {
    sub_10122F914();
  }
  *(_DWORD *)(a1 + 40) |= 4u;
  *(_DWORD *)(a1 + 32) = v9;
  if ((*(_DWORD *)(a2 + 40) & 8) != 0)
  {
LABEL_8:
    uint64_t v6 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 40) |= 8u;
    *(void *)(a1 + 24) = v6;
  }

void sub_1001C09F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001C0A0C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018271D8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001C0A1C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018271D8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

double sub_1001C0A3C()
{
  v0 = (char *)operator new(0x30uLL);
  *(void *)v0 = off_1018271D8;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *((_DWORD *)v0 + 10) = 0;
  return result;
}

uint64_t sub_1001C0A70(uint64_t result)
{
  if (*(_BYTE *)(result + 40))
  {
    *(void *)(result + 8) = 0LL;
    *(void *)(result + 16) = 0LL;
    *(_DWORD *)(result + 32) = 0;
    *(void *)(result + 24) = 0LL;
  }

  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_1001C0A8C( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unint64_t *)(a1 + 8);
  uint64_t v6 = (unint64_t *)(a1 + 16);
  uint64_t v7 = (unint64_t *)(a1 + 24);
  while (2)
  {
    uint64_t v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        int v12 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        if ((unint64_t)v12 < v11 && (*v12 & 0x80000000) == 0)
        {
          *int v5 = *v12;
          int v13 = v12 + 1;
          *((void *)this + 1) = v13;
LABEL_24:
          *(_DWORD *)(a1 + 40) |= 1u;
          if ((unint64_t)v13 < v11 && *v13 == 16)
          {
            uint64_t v14 = v13 + 1;
            *((void *)this + 1) = v14;
            goto LABEL_27;
          }

          continue;
        }

        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
        if ((_DWORD)result)
        {
          int v13 = (_BYTE *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
          goto LABEL_24;
        }

        break;
      case 2u:
        int v10 = TagFallback & 7;
        uint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
LABEL_27:
        if ((unint64_t)v14 >= v11 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
          if (!(_DWORD)result) {
            return result;
          }
          uint64_t v18 = (_BYTE *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }

        else
        {
          *uint64_t v6 = *v14;
          uint64_t v18 = v14 + 1;
          *((void *)this + 1) = v18;
        }

        *(_DWORD *)(a1 + 40) |= 2u;
        BOOL v15 = v18 + 1;
        *((void *)this + 1) = v15;
LABEL_35:
        if ((unint64_t)v15 >= v11 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v19 = v23;
        }

        else
        {
          unsigned int v19 = *v15;
          *((void *)this + 1) = v15 + 1;
        }

        if (v19 <= 0x23)
        {
          *(_DWORD *)(a1 + 40) |= 4u;
          *(_DWORD *)(a1 + 32) = v19;
        }

        unsigned int v20 = (_BYTE *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        int v17 = v20 + 1;
        *((void *)this + 1) = v17;
LABEL_45:
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v7);
          if (!(_DWORD)result) {
            return result;
          }
          int v21 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }

        else
        {
          *uint64_t v7 = *v17;
          int v21 = (unsigned __int8 *)(v17 + 1);
          *((void *)this + 1) = v21;
        }

        *(_DWORD *)(a1 + 40) |= 8u;
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        int v10 = TagFallback & 7;
        BOOL v15 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_35;
      case 4u:
        int v10 = TagFallback & 7;
        int v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_45;
      default:
        int v10 = TagFallback & 7;
LABEL_18:
        if (v10 == 4) {
          return 1LL;
        }
        return 0LL;
    }

    return result;
  }

uint64_t sub_1001C0D40( uint64_t result, unint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 40);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(void *)(result + 8),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(void *)(v5 + 16),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      return result;
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  *(void *)(v5 + 24),  a2,  a4);
  }

uint64_t sub_1001C0DD4(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 40);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0LL;
    goto LABEL_11;
  }

  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
  {
    uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8),  a2)
       + 1;
    int v3 = *(_DWORD *)(a1 + 40);
    if ((v3 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }

  uint64_t v4 = 0LL;
  if ((*(_BYTE *)(a1 + 40) & 2) != 0)
  {
LABEL_7:
    uint64_t v4 = v4
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16),  a2)
       + 1;
    int v3 = *(_DWORD *)(a1 + 40);
  }

void sub_1001C0E90(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1001C0EDC()
{
  return 1LL;
}

void *sub_1001C0EE4@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.Raven.MeasurementTypeCount");
}

void sub_1001C0EF4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101827250;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0AC8 != a1)
  {
    uint64_t v2 = *((void *)a1 + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  sub_10008D0EC((uint64_t)a1 + 112);
  sub_10008D0EC((uint64_t)a1 + 88);
  sub_10008D0EC((uint64_t)a1 + 64);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001C0F6C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

double sub_1001C0F80()
{
  v0 = (char *)operator new(0xB0uLL);
  *(void *)v0 = off_101827250;
  *((void *)v0 + 11) = 0LL;
  *((void *)v0 + 12) = 0LL;
  *((_DWORD *)v0 + 26) = 0;
  *((void *)v0 + 14) = 0LL;
  *((void *)v0 + 15) = 0LL;
  *((_DWORD *)v0 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 + 136) = 0u;
  *(_OWORD *)(v0 + 152) = 0u;
  *((_DWORD *)v0 + 42) = 0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 68) = 0u;
  return result;
}

uint64_t sub_1001C0FD8( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unint64_t *)(a1 + 32);
  int v6 = (unint64_t *)(a1 + 40);
  int v7 = (unint64_t *)(a1 + 48);
  v88 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 64);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 88);
  unsigned int v9 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 112);
  while (1)
  {
LABEL_2:
    int v10 = (char *)*((void *)this + 1);
    if ((unint64_t)v10 < *((void *)this + 2) && (*v10 & 0x80000000) == 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v10;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v10 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
      goto LABEL_7;
    }

    TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = (_DWORD)TagFallback;
    if (!(_DWORD)TagFallback) {
      return 1LL;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 168) |= 1u;
        int v13 = *(char **)(a1 + 8);
        if (!v13)
        {
          int v13 = (char *)operator new(0x38uLL);
          *(void *)int v13 = off_101827160;
          *(_OWORD *)(v13 + 8) = 0u;
          *(_OWORD *)(v13 + 24) = 0u;
          *(_OWORD *)(v13 + 40) = 0u;
          *(void *)(a1 + 8) = v13;
        }

        uint64_t v14 = (char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v89)) {
            return 0LL;
          }
        }

        else
        {
          v89[0] = *v14;
          *((void *)this + 1) = v14 + 1;
        }

        int v24 = *((_DWORD *)this + 14);
        int v25 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v24 + 1;
        if (v24 >= v25) {
          return 0LL;
        }
        int v26 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v89[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v26);
        int v28 = *((_DWORD *)this + 14);
        BOOL v29 = __OFSUB__(v28, 1);
        int v30 = v28 - 1;
        if (v30 < 0 == v29) {
          *((_DWORD *)this + 14) = v30;
        }
        int v31 = (_BYTE *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        unint64_t v16 = v31 + 1;
        *((void *)this + 1) = v16;
        goto LABEL_54;
      case 2u:
        int v12 = TagFallback & 7;
        unint64_t v16 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
LABEL_54:
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v89);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v32 = v89[0];
        }

        else
        {
          unsigned int v32 = *v16;
          *((void *)this + 1) = v16 + 1;
        }

        if (v32 <= 3)
        {
          *(_DWORD *)(a1 + 168) |= 2u;
          *(_DWORD *)(a1 + 56) = v32;
        }

        int v34 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v34 + 1;
LABEL_64:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v89) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = *(void *)v89;
        *(_DWORD *)(a1 + 168) |= 4u;
        uint64_t v35 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v35 + 1;
LABEL_68:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v89) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 24) = *(void *)v89;
        *(_DWORD *)(a1 + 168) |= 8u;
        uint64_t v36 = (_BYTE *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        uint64_t v18 = v36 + 1;
        *((void *)this + 1) = v18;
LABEL_72:
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
          if (!(_DWORD)result) {
            return result;
          }
          int v37 = (_BYTE *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }

        else
        {
          *uint64_t v5 = *v18;
          int v37 = v18 + 1;
          *((void *)this + 1) = v37;
        }

        *(_DWORD *)(a1 + 168) |= 0x10u;
        unsigned int v19 = v37 + 1;
        *((void *)this + 1) = v19;
LABEL_80:
        if ((unint64_t)v19 >= v17 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
          if (!(_DWORD)result) {
            return result;
          }
          int v38 = (_BYTE *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }

        else
        {
          *int v6 = *v19;
          int v38 = v19 + 1;
          *((void *)this + 1) = v38;
        }

        *(_DWORD *)(a1 + 168) |= 0x20u;
        unsigned int v20 = v38 + 1;
        *((void *)this + 1) = v20;
LABEL_88:
        if ((unint64_t)v20 >= v17 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v7);
          if (!(_DWORD)result) {
            return result;
          }
          int v39 = (_BYTE *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }

        else
        {
          *int v7 = *v20;
          int v39 = v20 + 1;
          *((void *)this + 1) = v39;
        }

        *(_DWORD *)(a1 + 168) |= 0x40u;
        do
        {
          *((void *)this + 1) = v39 + 1;
LABEL_96:
          int v40 = *(_DWORD *)(a1 + 76);
          uint64_t v41 = *(int *)(a1 + 72);
          if ((int)v41 >= v40)
          {
            if (v40 == *(_DWORD *)(a1 + 80))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v88, v40 + 1);
              int v40 = *(_DWORD *)(a1 + 76);
            }

            *(_DWORD *)(a1 + 76) = v40 + 1;
            int v43 = (char *)operator new(0x30uLL);
            *(void *)int v43 = off_1018271D8;
            *(_OWORD *)(v43 + 8) = 0u;
            *(_OWORD *)(v43 + 24) = 0u;
            *((_DWORD *)v43 + 10) = 0;
            uint64_t v44 = *(void *)(a1 + 64);
            uint64_t v45 = *(int *)(a1 + 72);
            *(_DWORD *)(a1 + 72) = v45 + 1;
            *(void *)(v44 + 8 * v45) = v43;
          }

          else
          {
            uint64_t v42 = *(void *)(a1 + 64);
            *(_DWORD *)(a1 + 72) = v41 + 1;
            int v43 = *(char **)(v42 + 8 * v41);
          }

          uint64_t v46 = (char *)*((void *)this + 1);
          if ((unint64_t)v46 >= *((void *)this + 2) || *v46 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v89)) {
              return 0LL;
            }
          }

          else
          {
            v89[0] = *v46;
            *((void *)this + 1) = v46 + 1;
          }

          int v47 = *((_DWORD *)this + 14);
          int v48 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v47 + 1;
          if (v47 >= v48) {
            return 0LL;
          }
          int v49 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v89[0]);
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v49);
          int v51 = *((_DWORD *)this + 14);
          BOOL v29 = __OFSUB__(v51, 1);
          int v52 = v51 - 1;
          if (v52 < 0 == v29) {
            *((_DWORD *)this + 14) = v52;
          }
          int v39 = (_BYTE *)*((void *)this + 1);
          int v53 = *v39;
        }

        while (v53 == 66);
        if (v53 != 74) {
          continue;
        }
        do
        {
          *((void *)this + 1) = v39 + 1;
LABEL_114:
          int v54 = *(_DWORD *)(a1 + 100);
          uint64_t v55 = *(int *)(a1 + 96);
          if ((int)v55 >= v54)
          {
            if (v54 == *(_DWORD *)(a1 + 104))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v8, v54 + 1);
              int v54 = *(_DWORD *)(a1 + 100);
            }

            *(_DWORD *)(a1 + 100) = v54 + 1;
            unsigned int v57 = (char *)operator new(0x30uLL);
            *(void *)unsigned int v57 = off_1018271D8;
            *(_OWORD *)(v57 + 8) = 0u;
            *(_OWORD *)(v57 + 24) = 0u;
            *((_DWORD *)v57 + 10) = 0;
            uint64_t v58 = *(void *)(a1 + 88);
            uint64_t v59 = *(int *)(a1 + 96);
            *(_DWORD *)(a1 + 96) = v59 + 1;
            *(void *)(v58 + 8 * v59) = v57;
          }

          else
          {
            uint64_t v56 = *(void *)(a1 + 88);
            *(_DWORD *)(a1 + 96) = v55 + 1;
            unsigned int v57 = *(char **)(v56 + 8 * v55);
          }

          uint64_t v60 = (char *)*((void *)this + 1);
          if ((unint64_t)v60 >= *((void *)this + 2) || *v60 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v89)) {
              return 0LL;
            }
          }

          else
          {
            v89[0] = *v60;
            *((void *)this + 1) = v60 + 1;
          }

          int v61 = *((_DWORD *)this + 14);
          int v62 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v61 + 1;
          if (v61 >= v62) {
            return 0LL;
          }
          int v63 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v89[0]);
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v63);
          int v65 = *((_DWORD *)this + 14);
          BOOL v29 = __OFSUB__(v65, 1);
          int v66 = v65 - 1;
          if (v66 < 0 == v29) {
            *((_DWORD *)this + 14) = v66;
          }
          int v39 = (_BYTE *)*((void *)this + 1);
          int v67 = *v39;
        }

        while (v67 == 74);
        if (v67 != 82) {
          continue;
        }
        do
        {
          *((void *)this + 1) = v39 + 1;
LABEL_132:
          int v68 = *(_DWORD *)(a1 + 124);
          uint64_t v69 = *(int *)(a1 + 120);
          if ((int)v69 >= v68)
          {
            if (v68 == *(_DWORD *)(a1 + 128))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v9, v68 + 1);
              int v68 = *(_DWORD *)(a1 + 124);
            }

            *(_DWORD *)(a1 + 124) = v68 + 1;
            v71 = (char *)operator new(0x30uLL);
            *(void *)v71 = off_1018271D8;
            *(_OWORD *)(v71 + 8) = 0u;
            *(_OWORD *)(v71 + 24) = 0u;
            *((_DWORD *)v71 + 10) = 0;
            uint64_t v72 = *(void *)(a1 + 112);
            uint64_t v73 = *(int *)(a1 + 120);
            *(_DWORD *)(a1 + 120) = v73 + 1;
            *(void *)(v72 + 8 * v73) = v71;
          }

          else
          {
            uint64_t v70 = *(void *)(a1 + 112);
            *(_DWORD *)(a1 + 120) = v69 + 1;
            v71 = *(char **)(v70 + 8 * v69);
          }

          v74 = (char *)*((void *)this + 1);
          if ((unint64_t)v74 >= *((void *)this + 2) || *v74 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v89)) {
              return 0LL;
            }
          }

          else
          {
            v89[0] = *v74;
            *((void *)this + 1) = v74 + 1;
          }

          int v75 = *((_DWORD *)this + 14);
          int v76 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v75 + 1;
          if (v75 >= v76) {
            return 0LL;
          }
          int v77 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v89[0]);
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v77);
          int v79 = *((_DWORD *)this + 14);
          BOOL v29 = __OFSUB__(v79, 1);
          int v80 = v79 - 1;
          if (v80 < 0 == v29) {
            *((_DWORD *)this + 14) = v80;
          }
          int v39 = (_BYTE *)*((void *)this + 1);
          int v81 = *v39;
        }

        while (v81 == 82);
        if (v81 != 89) {
          continue;
        }
        *((void *)this + 1) = v39 + 1;
LABEL_150:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v89) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 136) = *(void *)v89;
        *(_DWORD *)(a1 + 168) |= 0x400u;
        v82 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v82 + 1;
LABEL_154:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v89) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 144) = *(void *)v89;
        *(_DWORD *)(a1 + 168) |= 0x800u;
        v83 = (_BYTE *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        int v22 = v83 + 1;
        *((void *)this + 1) = v22;
LABEL_158:
        if ((unint64_t)v22 >= v21 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v89);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v84 = v89[0];
          v85 = (_BYTE *)*((void *)this + 1);
          unint64_t v21 = *((void *)this + 2);
        }

        else
        {
          unsigned int v84 = *v22;
          v85 = v22 + 1;
          *((void *)this + 1) = v85;
        }

        *(_DWORD *)(a1 + 60) = v84;
        *(_DWORD *)(a1 + 168) |= 0x1000u;
        unsigned int v23 = v85 + 1;
        *((void *)this + 1) = v23;
LABEL_166:
        if ((unint64_t)v23 >= v21 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v89);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v86 = v89[0];
          v87 = (_BYTE *)*((void *)this + 1);
          unint64_t v21 = *((void *)this + 2);
        }

        else
        {
          unsigned int v86 = *v23;
          v87 = v23 + 1;
          *((void *)this + 1) = v87;
        }

        *(_DWORD *)(a1 + 160) = v86;
        *(_DWORD *)(a1 + 168) |= 0x2000u;
        *((void *)this + 1) = v87 + 1;
LABEL_174:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v89) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 152) = *(void *)v89;
        *(_DWORD *)(a1 + 168) |= 0x4000u;
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1LL;
          *((_BYTE *)this + 36) = 1;
          return result;
        }

        break;
      case 3u:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_64;
        }
        goto LABEL_42;
      case 4u:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_68;
        }
        goto LABEL_42;
      case 5u:
        int v12 = TagFallback & 7;
        uint64_t v18 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_72;
      case 6u:
        int v12 = TagFallback & 7;
        unsigned int v19 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_80;
      case 7u:
        int v12 = TagFallback & 7;
        unsigned int v20 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_88;
      case 8u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_96;
        }
        goto LABEL_42;
      case 9u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_114;
        }
        goto LABEL_42;
      case 0xAu:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_132;
        }
        goto LABEL_42;
      case 0xBu:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_150;
        }
        goto LABEL_42;
      case 0xCu:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_154;
        }
        goto LABEL_42;
      case 0xDu:
        int v12 = TagFallback & 7;
        int v22 = (char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        goto LABEL_158;
      case 0xEu:
        int v12 = TagFallback & 7;
        unsigned int v23 = (char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        goto LABEL_166;
      case 0xFu:
        int v12 = TagFallback & 7;
        if (v12 != 1) {
          goto LABEL_42;
        }
        goto LABEL_174;
      default:
        int v12 = TagFallback & 7;
LABEL_42:
        if (v12 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001C1A18( uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 168);
  if ((v6 & 1) != 0)
  {
    uint64_t v11 = *(void *)(result + 8);
    if (!v11) {
      uint64_t v11 = *(void *)(qword_1019A0AC8 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v11,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 168);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_28;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(_DWORD *)(v5 + 56),  (int)a2,  a4);
  int v6 = *(_DWORD *)(v5 + 168);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_29;
  }

uint64_t sub_1001C1C44(uint64_t a1, unint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 168);
  if (!(_BYTE)v3)
  {
    int v5 = 0;
    goto LABEL_27;
  }

  if ((v3 & 1) == 0)
  {
    int v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }

  uint64_t v6 = *(void *)(a1 + 8);
  if (!v6) {
    uint64_t v6 = *(void *)(qword_1019A0AC8 + 8);
  }
  uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001C0720(v6, a2);
  int v8 = (int)v7;
  else {
    int v9 = 1;
  }
  int v4 = v8 + v9 + 1;
  int v3 = *(_DWORD *)(a1 + 168);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
    if ((v10 & 0x80000000) != 0)
    {
      int v11 = 10;
    }

    else if (v10 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
      int v3 = *(_DWORD *)(a1 + 168);
    }

    else
    {
      int v11 = 1;
    }

    v4 += v11 + 1;
  }

void sub_1001C1F04(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1001C1F50()
{
  return 1LL;
}

void *sub_1001C1F58@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.Raven.NrEstimatorHealth");
}

void sub_1001C1F68(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018272C8;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0AD0 != a1)
  {
    uint64_t v2 = *((void *)a1 + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  sub_10008D0EC((uint64_t)a1 + 264);
  sub_10008D0EC((uint64_t)a1 + 240);
  sub_10008D0EC((uint64_t)a1 + 216);
  sub_10008D0EC((uint64_t)a1 + 192);
  sub_10008D0EC((uint64_t)a1 + 136);
  sub_10008D0EC((uint64_t)a1 + 112);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001C2004(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

double sub_1001C2018()
{
  v0 = (char *)operator new(0x128uLL);
  *(void *)v0 = off_1018272C8;
  *((void *)v0 + 17) = 0LL;
  *((void *)v0 + 18) = 0LL;
  *((_DWORD *)v0 + 38) = 0;
  *((void *)v0 + 27) = 0LL;
  *((void *)v0 + 28) = 0LL;
  *((_DWORD *)v0 + 58) = 0;
  *((void *)v0 + 30) = 0LL;
  *((void *)v0 + 31) = 0LL;
  *((_DWORD *)v0 + 64) = 0;
  *((void *)v0 + 33) = 0LL;
  *((void *)v0 + 34) = 0LL;
  *((_DWORD *)v0 + 70) = 0;
  *((void *)v0 + 36) = 0LL;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_OWORD *)(v0 + 88) = 0u;
  *(_OWORD *)(v0 + 104) = 0u;
  *(_OWORD *)(v0 + 116) = 0u;
  *((_DWORD *)v0 + 52) = 0;
  *((_OWORD *)v0 + 11) = 0u;
  *((_OWORD *)v0 + 12) = 0u;
  *((_OWORD *)v0 + 10) = 0u;
  return result;
}

uint64_t sub_1001C2090( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unint64_t *)(a1 + 40);
  uint64_t v6 = (unint64_t *)(a1 + 48);
  uint64_t v7 = (unint64_t *)(a1 + 56);
  int v8 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 112);
  int v9 = (unint64_t *)(a1 + 184);
  v137 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 192);
  v138 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 216);
  v139 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 240);
  v140 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 136);
  v141 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 264);
  while (1)
  {
LABEL_2:
    int v10 = (char *)*((void *)this + 1);
    if ((unint64_t)v10 < *((void *)this + 2) && (*v10 & 0x80000000) == 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v10;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v10 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
      goto LABEL_7;
    }

    TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = (_DWORD)TagFallback;
    if (!(_DWORD)TagFallback) {
      return 1LL;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_60;
        }
        *(_DWORD *)(a1 + 292) |= 1u;
        int v13 = *(char **)(a1 + 8);
        if (!v13)
        {
          int v13 = (char *)operator new(0x38uLL);
          *(void *)int v13 = off_101827160;
          *(_OWORD *)(v13 + 8) = 0u;
          *(_OWORD *)(v13 + 24) = 0u;
          *(_OWORD *)(v13 + 40) = 0u;
          *(void *)(a1 + 8) = v13;
        }

        uint64_t v14 = (char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v142)) {
            return 0LL;
          }
        }

        else
        {
          v142[0] = *v14;
          *((void *)this + 1) = v14 + 1;
        }

        int v25 = *((_DWORD *)this + 14);
        int v26 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v25 + 1;
        if (v25 >= v26) {
          return 0LL;
        }
        int v27 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v142[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v27);
        int v29 = *((_DWORD *)this + 14);
        BOOL v30 = __OFSUB__(v29, 1);
        int v31 = v29 - 1;
        if (v31 < 0 == v30) {
          *((_DWORD *)this + 14) = v31;
        }
        uint64_t v32 = (_BYTE *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        unint64_t v16 = v32 + 1;
        *((void *)this + 1) = v16;
        goto LABEL_72;
      case 2u:
        int v12 = TagFallback & 7;
        unint64_t v16 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
LABEL_72:
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v142);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v33 = v142[0];
        }

        else
        {
          unsigned int v33 = *v16;
          *((void *)this + 1) = v16 + 1;
        }

        if (v33 <= 6)
        {
          *(_DWORD *)(a1 + 292) |= 2u;
          *(_DWORD *)(a1 + 16) = v33;
        }

        int v35 = (_BYTE *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        int v18 = v35 + 1;
        *((void *)this + 1) = v18;
LABEL_82:
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v142);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v36 = v142[0];
        }

        else
        {
          unsigned int v36 = *v18;
          *((void *)this + 1) = v18 + 1;
        }

        if (v36 <= 3)
        {
          *(_DWORD *)(a1 + 292) |= 4u;
          *(_DWORD *)(a1 + 20) = v36;
        }

        int v37 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v37 + 1;
LABEL_92:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v142) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 24) = *(void *)v142;
        *(_DWORD *)(a1 + 292) |= 8u;
        int v38 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v38 + 1;
LABEL_96:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v142) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 32) = *(void *)v142;
        *(_DWORD *)(a1 + 292) |= 0x10u;
        int v39 = (_BYTE *)*((void *)this + 1);
        unint64_t v19 = *((void *)this + 2);
        uint64_t v20 = v39 + 1;
        *((void *)this + 1) = v20;
LABEL_100:
        if ((unint64_t)v20 >= v19 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
          if (!(_DWORD)result) {
            return result;
          }
          int v40 = (_BYTE *)*((void *)this + 1);
          unint64_t v19 = *((void *)this + 2);
        }

        else
        {
          *uint64_t v5 = *v20;
          int v40 = v20 + 1;
          *((void *)this + 1) = v40;
        }

        *(_DWORD *)(a1 + 292) |= 0x20u;
        unint64_t v21 = v40 + 1;
        *((void *)this + 1) = v21;
LABEL_108:
        if ((unint64_t)v21 >= v19 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
          if (!(_DWORD)result) {
            return result;
          }
          uint64_t v41 = (_BYTE *)*((void *)this + 1);
          unint64_t v19 = *((void *)this + 2);
        }

        else
        {
          *uint64_t v6 = *v21;
          uint64_t v41 = v21 + 1;
          *((void *)this + 1) = v41;
        }

        *(_DWORD *)(a1 + 292) |= 0x40u;
        int v22 = v41 + 1;
        *((void *)this + 1) = v22;
LABEL_116:
        if ((unint64_t)v22 >= v19 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v7);
          if (!(_DWORD)result) {
            return result;
          }
          uint64_t v42 = (_BYTE *)*((void *)this + 1);
          unint64_t v19 = *((void *)this + 2);
        }

        else
        {
          *uint64_t v7 = *v22;
          uint64_t v42 = v22 + 1;
          *((void *)this + 1) = v42;
        }

        *(_DWORD *)(a1 + 292) |= 0x80u;
        *((void *)this + 1) = v42 + 1;
LABEL_124:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v142) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 64) = *(void *)v142;
        *(_DWORD *)(a1 + 292) |= 0x100u;
        int v43 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v43 + 1;
LABEL_128:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v142) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 72) = *(void *)v142;
        *(_DWORD *)(a1 + 292) |= 0x200u;
        uint64_t v44 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v44 + 1;
LABEL_132:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v142) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 80) = *(void *)v142;
        *(_DWORD *)(a1 + 292) |= 0x400u;
        uint64_t v45 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v45 + 1;
LABEL_136:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v142) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 88) = *(void *)v142;
        *(_DWORD *)(a1 + 292) |= 0x800u;
        uint64_t v46 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v46 + 1;
LABEL_140:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v142) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 96) = *(void *)v142;
        *(_DWORD *)(a1 + 292) |= 0x1000u;
        int v47 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v47 + 1;
LABEL_144:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v142) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 104) = *(void *)v142;
        *(_DWORD *)(a1 + 292) |= 0x2000u;
        int v48 = (unsigned __int8 *)*((void *)this + 1);
        do
        {
          *((void *)this + 1) = v48 + 1;
LABEL_148:
          int v49 = *(_DWORD *)(a1 + 124);
          uint64_t v50 = *(int *)(a1 + 120);
          if ((int)v50 >= v49)
          {
            if (v49 == *(_DWORD *)(a1 + 128))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v8, v49 + 1);
              int v49 = *(_DWORD *)(a1 + 124);
            }

            *(_DWORD *)(a1 + 124) = v49 + 1;
            int v52 = (char *)operator new(0x30uLL);
            *(void *)int v52 = off_1018271D8;
            *(_OWORD *)(v52 + 8) = 0u;
            *(_OWORD *)(v52 + 24) = 0u;
            *((_DWORD *)v52 + 10) = 0;
            uint64_t v53 = *(void *)(a1 + 112);
            uint64_t v54 = *(int *)(a1 + 120);
            *(_DWORD *)(a1 + 120) = v54 + 1;
            *(void *)(v53 + 8 * v54) = v52;
          }

          else
          {
            uint64_t v51 = *(void *)(a1 + 112);
            *(_DWORD *)(a1 + 120) = v50 + 1;
            int v52 = *(char **)(v51 + 8 * v50);
          }

          uint64_t v55 = (char *)*((void *)this + 1);
          if ((unint64_t)v55 >= *((void *)this + 2) || *v55 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v142)) {
              return 0LL;
            }
          }

          else
          {
            v142[0] = *v55;
            *((void *)this + 1) = v55 + 1;
          }

          int v56 = *((_DWORD *)this + 14);
          int v57 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v56 + 1;
          if (v56 >= v57) {
            return 0LL;
          }
          int v58 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v142[0]);
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v58);
          int v60 = *((_DWORD *)this + 14);
          BOOL v30 = __OFSUB__(v60, 1);
          int v61 = v60 - 1;
          if (v61 < 0 == v30) {
            *((_DWORD *)this + 14) = v61;
          }
          int v48 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v62 = *((void *)this + 2);
        }

        while ((unint64_t)v48 < v62 && *v48 == 122);
        while (1)
        {
          *((void *)this + 1) = v48 + 2;
LABEL_168:
          int v63 = *(_DWORD *)(a1 + 148);
          uint64_t v64 = *(int *)(a1 + 144);
          if ((int)v64 >= v63)
          {
            if (v63 == *(_DWORD *)(a1 + 152))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v140, v63 + 1);
              int v63 = *(_DWORD *)(a1 + 148);
            }

            *(_DWORD *)(a1 + 148) = v63 + 1;
            int v66 = (char *)operator new(0x30uLL);
            *(void *)int v66 = off_1018271D8;
            *(_OWORD *)(v66 + 8) = 0u;
            *(_OWORD *)(v66 + 24) = 0u;
            *((_DWORD *)v66 + 10) = 0;
            uint64_t v67 = *(void *)(a1 + 136);
            uint64_t v68 = *(int *)(a1 + 144);
            *(_DWORD *)(a1 + 144) = v68 + 1;
            *(void *)(v67 + 8 * v68) = v66;
          }

          else
          {
            uint64_t v65 = *(void *)(a1 + 136);
            *(_DWORD *)(a1 + 144) = v64 + 1;
            int v66 = *(char **)(v65 + 8 * v64);
          }

          uint64_t v69 = (char *)*((void *)this + 1);
          if ((unint64_t)v69 >= *((void *)this + 2) || *v69 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v142)) {
              return 0LL;
            }
          }

          else
          {
            v142[0] = *v69;
            *((void *)this + 1) = v69 + 1;
          }

          int v70 = *((_DWORD *)this + 14);
          int v71 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v70 + 1;
          if (v70 >= v71) {
            return 0LL;
          }
          int v72 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v142[0]);
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v72);
          int v74 = *((_DWORD *)this + 14);
          BOOL v30 = __OFSUB__(v74, 1);
          int v75 = v74 - 1;
          if (v75 < 0 == v30) {
            *((_DWORD *)this + 14) = v75;
          }
          int v48 = (unsigned __int8 *)*((void *)this + 1);
          int v76 = *v48;
          if (v76 == 137) {
            break;
          }
          if (v76 != 130 || v48[1] != 1) {
            goto LABEL_2;
          }
        }

        if (v48[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v48 + 2;
LABEL_189:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v142) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 160) = *(void *)v142;
        *(_DWORD *)(a1 + 292) |= 0x10000u;
        int v77 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v77 + 2;
LABEL_194:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v142) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 168) = *(void *)v142;
        *(_DWORD *)(a1 + 292) |= 0x20000u;
        unsigned int v78 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v78 + 2;
LABEL_199:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v142) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 176) = *(void *)v142;
        *(_DWORD *)(a1 + 292) |= 0x40000u;
        int v79 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        if ((int)v24 - (int)v79 >= 2 && *v79 == 160 && v79[1] == 1)
        {
          int v23 = v79 + 2;
          *((void *)this + 1) = v23;
LABEL_204:
          if ((unint64_t)v23 >= v24 || (char)*v23 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v9);
            if (!(_DWORD)result) {
              return result;
            }
            int v80 = (unsigned __int8 *)*((void *)this + 1);
            unint64_t v24 = *((void *)this + 2);
          }

          else
          {
            *int v9 = *v23;
            int v80 = v23 + 1;
            *((void *)this + 1) = v80;
          }

          *(_DWORD *)(a1 + 292) |= 0x80000u;
          if ((int)v24 - (int)v80 >= 2 && *v80 == 170 && v80[1] == 1)
          {
            while (1)
            {
              *((void *)this + 1) = v80 + 2;
LABEL_213:
              int v81 = *(_DWORD *)(a1 + 204);
              uint64_t v82 = *(int *)(a1 + 200);
              if ((int)v82 >= v81)
              {
                if (v81 == *(_DWORD *)(a1 + 208))
                {
                  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v137, v81 + 1);
                  int v81 = *(_DWORD *)(a1 + 204);
                }

                *(_DWORD *)(a1 + 204) = v81 + 1;
                unsigned int v84 = (char *)operator new(0x30uLL);
                *(void *)unsigned int v84 = off_1018271D8;
                *(_OWORD *)(v84 + 8) = 0u;
                *(_OWORD *)(v84 + 24) = 0u;
                *((_DWORD *)v84 + 10) = 0;
                uint64_t v85 = *(void *)(a1 + 192);
                uint64_t v86 = *(int *)(a1 + 200);
                *(_DWORD *)(a1 + 200) = v86 + 1;
                *(void *)(v85 + 8 * v86) = v84;
              }

              else
              {
                uint64_t v83 = *(void *)(a1 + 192);
                *(_DWORD *)(a1 + 200) = v82 + 1;
                unsigned int v84 = *(char **)(v83 + 8 * v82);
              }

              v87 = (char *)*((void *)this + 1);
              if ((unint64_t)v87 >= *((void *)this + 2) || *v87 < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v142)) {
                  return 0LL;
                }
              }

              else
              {
                v142[0] = *v87;
                *((void *)this + 1) = v87 + 1;
              }

              int v88 = *((_DWORD *)this + 14);
              int v89 = *((_DWORD *)this + 15);
              *((_DWORD *)this + 14) = v88 + 1;
              if (v88 >= v89) {
                return 0LL;
              }
              int v90 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v142[0]);
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v90);
              int v92 = *((_DWORD *)this + 14);
              BOOL v30 = __OFSUB__(v92, 1);
              int v93 = v92 - 1;
              if (v93 < 0 == v30) {
                *((_DWORD *)this + 14) = v93;
              }
              int v80 = (unsigned __int8 *)*((void *)this + 1);
              int v94 = *v80;
              if (v94 == 178) {
                break;
              }
              if (v94 != 170 || v80[1] != 1) {
                goto LABEL_2;
              }
            }

            if (v80[1] == 1)
            {
              while (1)
              {
                *((void *)this + 1) = v80 + 2;
LABEL_234:
                int v95 = *(_DWORD *)(a1 + 228);
                uint64_t v96 = *(int *)(a1 + 224);
                if ((int)v96 >= v95)
                {
                  if (v95 == *(_DWORD *)(a1 + 232))
                  {
                    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v138, v95 + 1);
                    int v95 = *(_DWORD *)(a1 + 228);
                  }

                  *(_DWORD *)(a1 + 228) = v95 + 1;
                  v98 = (char *)operator new(0x30uLL);
                  *(void *)v98 = off_1018271D8;
                  *(_OWORD *)(v98 + 8) = 0u;
                  *(_OWORD *)(v98 + 24) = 0u;
                  *((_DWORD *)v98 + 10) = 0;
                  uint64_t v99 = *(void *)(a1 + 216);
                  uint64_t v100 = *(int *)(a1 + 224);
                  *(_DWORD *)(a1 + 224) = v100 + 1;
                  *(void *)(v99 + 8 * v100) = v98;
                }

                else
                {
                  uint64_t v97 = *(void *)(a1 + 216);
                  *(_DWORD *)(a1 + 224) = v96 + 1;
                  v98 = *(char **)(v97 + 8 * v96);
                }

                v101 = (char *)*((void *)this + 1);
                if ((unint64_t)v101 >= *((void *)this + 2) || *v101 < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v142)) {
                    return 0LL;
                  }
                }

                else
                {
                  v142[0] = *v101;
                  *((void *)this + 1) = v101 + 1;
                }

                int v102 = *((_DWORD *)this + 14);
                int v103 = *((_DWORD *)this + 15);
                *((_DWORD *)this + 14) = v102 + 1;
                if (v102 >= v103) {
                  return 0LL;
                }
                int v104 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v142[0]);
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v104);
                int v106 = *((_DWORD *)this + 14);
                BOOL v30 = __OFSUB__(v106, 1);
                int v107 = v106 - 1;
                if (v107 < 0 == v30) {
                  *((_DWORD *)this + 14) = v107;
                }
                int v80 = (unsigned __int8 *)*((void *)this + 1);
                int v108 = *v80;
                if (v108 == 186) {
                  break;
                }
                if (v108 != 178 || v80[1] != 1) {
                  goto LABEL_2;
                }
              }

              if (v80[1] == 1)
              {
                while (1)
                {
                  *((void *)this + 1) = v80 + 2;
LABEL_255:
                  int v109 = *(_DWORD *)(a1 + 252);
                  uint64_t v110 = *(int *)(a1 + 248);
                  if ((int)v110 >= v109)
                  {
                    if (v109 == *(_DWORD *)(a1 + 256))
                    {
                      wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v139, v109 + 1);
                      int v109 = *(_DWORD *)(a1 + 252);
                    }

                    *(_DWORD *)(a1 + 252) = v109 + 1;
                    v112 = (char *)operator new(0x30uLL);
                    *(void *)v112 = off_1018271D8;
                    *(_OWORD *)(v112 + 8) = 0u;
                    *(_OWORD *)(v112 + 24) = 0u;
                    *((_DWORD *)v112 + 10) = 0;
                    uint64_t v113 = *(void *)(a1 + 240);
                    uint64_t v114 = *(int *)(a1 + 248);
                    *(_DWORD *)(a1 + 248) = v114 + 1;
                    *(void *)(v113 + 8 * v114) = v112;
                  }

                  else
                  {
                    uint64_t v111 = *(void *)(a1 + 240);
                    *(_DWORD *)(a1 + 248) = v110 + 1;
                    v112 = *(char **)(v111 + 8 * v110);
                  }

                  v115 = (char *)*((void *)this + 1);
                  if ((unint64_t)v115 >= *((void *)this + 2) || *v115 < 0)
                  {
                    if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v142)) {
                      return 0LL;
                    }
                  }

                  else
                  {
                    v142[0] = *v115;
                    *((void *)this + 1) = v115 + 1;
                  }

                  int v116 = *((_DWORD *)this + 14);
                  int v117 = *((_DWORD *)this + 15);
                  *((_DWORD *)this + 14) = v116 + 1;
                  if (v116 >= v117) {
                    return 0LL;
                  }
                  int v118 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v142[0]);
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v118);
                  int v120 = *((_DWORD *)this + 14);
                  BOOL v30 = __OFSUB__(v120, 1);
                  int v121 = v120 - 1;
                  if (v121 < 0 == v30) {
                    *((_DWORD *)this + 14) = v121;
                  }
                  int v80 = (unsigned __int8 *)*((void *)this + 1);
                  int v122 = *v80;
                  if (v122 == 194) {
                    break;
                  }
                  if (v122 != 186 || v80[1] != 1) {
                    goto LABEL_2;
                  }
                }

                if (v80[1] == 1)
                {
                  do
                  {
                    *((void *)this + 1) = v80 + 2;
LABEL_276:
                    uint64_t v123 = *(int *)(a1 + 272);
                    int v124 = *(_DWORD *)(a1 + 276);
                    if ((int)v123 >= v124)
                    {
                      if (v124 == *(_DWORD *)(a1 + 280))
                      {
                        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v141, v124 + 1);
                        int v124 = *(_DWORD *)(a1 + 276);
                      }

                      *(_DWORD *)(a1 + 276) = v124 + 1;
                      v126 = (char *)operator new(0x30uLL);
                      *(void *)v126 = off_1018271D8;
                      *(_OWORD *)(v126 + 8) = 0u;
                      *(_OWORD *)(v126 + 24) = 0u;
                      *((_DWORD *)v126 + 10) = 0;
                      uint64_t v127 = *(void *)(a1 + 264);
                      uint64_t v128 = *(int *)(a1 + 272);
                      *(_DWORD *)(a1 + 272) = v128 + 1;
                      *(void *)(v127 + 8 * v128) = v126;
                    }

                    else
                    {
                      uint64_t v125 = *(void *)(a1 + 264);
                      *(_DWORD *)(a1 + 272) = v123 + 1;
                      v126 = *(char **)(v125 + 8 * v123);
                    }

                    v129 = (char *)*((void *)this + 1);
                    if ((unint64_t)v129 >= *((void *)this + 2) || *v129 < 0)
                    {
                      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v142)) {
                        return 0LL;
                      }
                    }

                    else
                    {
                      v142[0] = *v129;
                      *((void *)this + 1) = v129 + 1;
                    }

                    int v130 = *((_DWORD *)this + 14);
                    int v131 = *((_DWORD *)this + 15);
                    *((_DWORD *)this + 14) = v130 + 1;
                    if (v130 >= v131) {
                      return 0LL;
                    }
                    int v132 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v142[0]);
                    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v132);
                    int v134 = *((_DWORD *)this + 14);
                    BOOL v30 = __OFSUB__(v134, 1);
                    int v135 = v134 - 1;
                    if (v135 < 0 == v30) {
                      *((_DWORD *)this + 14) = v135;
                    }
                    int v80 = (unsigned __int8 *)*((void *)this + 1);
                    v136 = (unsigned __int8 *)*((void *)this + 2);
                  }

                  while ((int)v136 - (int)v80 > 1 && *v80 == 194 && v80[1] == 1);
                  if (v80 == v136 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                  {
                    *((_DWORD *)this + 8) = 0;
                    uint64_t result = 1LL;
                    *((_BYTE *)this + 36) = 1;
                    return result;
                  }
                }
              }
            }
          }
        }

        break;
      case 3u:
        int v12 = TagFallback & 7;
        int v18 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_82;
      case 4u:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_92;
        }
        goto LABEL_60;
      case 5u:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_96;
        }
        goto LABEL_60;
      case 6u:
        int v12 = TagFallback & 7;
        uint64_t v20 = (char *)*((void *)this + 1);
        unint64_t v19 = *((void *)this + 2);
        goto LABEL_100;
      case 7u:
        int v12 = TagFallback & 7;
        unint64_t v21 = (char *)*((void *)this + 1);
        unint64_t v19 = *((void *)this + 2);
        goto LABEL_108;
      case 8u:
        int v12 = TagFallback & 7;
        int v22 = (char *)*((void *)this + 1);
        unint64_t v19 = *((void *)this + 2);
        goto LABEL_116;
      case 9u:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_124;
        }
        goto LABEL_60;
      case 0xAu:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_128;
        }
        goto LABEL_60;
      case 0xBu:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_132;
        }
        goto LABEL_60;
      case 0xCu:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_136;
        }
        goto LABEL_60;
      case 0xDu:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_140;
        }
        goto LABEL_60;
      case 0xEu:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_144;
        }
        goto LABEL_60;
      case 0xFu:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_148;
        }
        goto LABEL_60;
      case 0x10u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_168;
        }
        goto LABEL_60;
      case 0x11u:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_189;
        }
        goto LABEL_60;
      case 0x12u:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_194;
        }
        goto LABEL_60;
      case 0x13u:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_199;
        }
        goto LABEL_60;
      case 0x14u:
        int v12 = TagFallback & 7;
        int v23 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        goto LABEL_204;
      case 0x15u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_213;
        }
        goto LABEL_60;
      case 0x16u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_234;
        }
        goto LABEL_60;
      case 0x17u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_255;
        }
        goto LABEL_60;
      case 0x18u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_60;
        }
        goto LABEL_276;
      default:
        int v12 = TagFallback & 7;
LABEL_60:
        if (v12 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001C31E8( uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 292);
  if ((v6 & 1) != 0)
  {
    uint64_t v14 = *(void *)(result + 8);
    if (!v14) {
      uint64_t v14 = *(void *)(qword_1019A0AD0 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v14,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 292);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_44;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(_DWORD *)(v5 + 16),  (int)a2,  a4);
  int v6 = *(_DWORD *)(v5 + 292);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_45;
  }

uint64_t sub_1001C3550(uint64_t a1, unint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 292);
  if (!(_BYTE)v3)
  {
    int v5 = 0;
    goto LABEL_34;
  }

  if ((v3 & 1) == 0)
  {
    int v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }

  uint64_t v6 = *(void *)(a1 + 8);
  if (!v6) {
    uint64_t v6 = *(void *)(qword_1019A0AD0 + 8);
  }
  uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001C0720(v6, a2);
  int v8 = (int)v7;
  else {
    int v9 = 1;
  }
  int v4 = v8 + v9 + 1;
  int v3 = *(_DWORD *)(a1 + 292);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if ((v10 & 0x80000000) != 0)
    {
      int v11 = 10;
    }

    else if (v10 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
      int v3 = *(_DWORD *)(a1 + 292);
    }

    else
    {
      int v11 = 1;
    }

    v4 += v11 + 1;
  }

double sub_1001C393C(uint64_t a1, void *lpsrc)
{
  return sub_1001BDE1C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001C3988()
{
  return 1LL;
}

void *sub_1001C3990@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.Raven.EstimatorHealth");
}

void sub_1001C39A0(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_101827340;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0AD8 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1001C39F4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

double sub_1001C3A08()
{
  v0 = (char *)operator new(0xE8uLL);
  *(void *)v0 = &off_101827340;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_OWORD *)(v0 + 88) = 0u;
  *(_OWORD *)(v0 + 104) = 0u;
  *(_OWORD *)(v0 + 120) = 0u;
  *(_OWORD *)(v0 + 136) = 0u;
  *(_OWORD *)(v0 + 152) = 0u;
  *(_OWORD *)(v0 + 168) = 0u;
  *(_OWORD *)(v0 + 184) = 0u;
  *(_OWORD *)(v0 + 200) = 0u;
  *(_OWORD *)(v0 + 216) = 0u;
  return result;
}

uint64_t sub_1001C3A68( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_72;
        }
        *(_DWORD *)(a1 + 228) |= 1u;
        int v8 = *(char **)(a1 + 8);
        if (!v8)
        {
          int v8 = (char *)operator new(0x38uLL);
          *(void *)int v8 = off_101827160;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *(_OWORD *)(v8 + 40) = 0u;
          *(void *)(a1 + 8) = v8;
        }

        int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v65)) {
            return 0LL;
          }
        }

        else
        {
          v65[0] = *v9;
          *((void *)this + 1) = v9 + 1;
        }

        int v22 = *((_DWORD *)this + 14);
        int v23 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v22 + 1;
        if (v22 >= v23) {
          return 0LL;
        }
        int v24 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v65[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v24);
        int v26 = *((_DWORD *)this + 14);
        BOOL v27 = __OFSUB__(v26, 1);
        int v28 = v26 - 1;
        if (v28 < 0 == v27) {
          *((_DWORD *)this + 14) = v28;
        }
        int v29 = (_BYTE *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        int v13 = v29 + 1;
        *((void *)this + 1) = v13;
        goto LABEL_84;
      case 2u:
        int v7 = TagFallback & 7;
        int v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
LABEL_84:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v65);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v30 = v65[0];
        }

        else
        {
          unsigned int v30 = *v13;
          *((void *)this + 1) = v13 + 1;
        }

        if (v30 <= 9)
        {
          *(_DWORD *)(a1 + 228) |= 2u;
          *(_DWORD *)(a1 + 24) = v30;
        }

        uint64_t v32 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v32 + 1;
LABEL_94:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v65) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = *(void *)v65;
        *(_DWORD *)(a1 + 228) |= 4u;
        int v33 = (_BYTE *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        int v15 = v33 + 1;
        *((void *)this + 1) = v15;
LABEL_98:
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v65);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v34 = v65[0];
        }

        else
        {
          unsigned int v34 = *v15;
          *((void *)this + 1) = v15 + 1;
        }

        if (v34 <= 3)
        {
          *(_DWORD *)(a1 + 228) |= 8u;
          *(_DWORD *)(a1 + 28) = v34;
        }

        int v35 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v35 + 1;
LABEL_108:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v65) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 32) = *(void *)v65;
        *(_DWORD *)(a1 + 228) |= 0x10u;
        int v36 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v36 + 1;
LABEL_112:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v65) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 40) = *(void *)v65;
        *(_DWORD *)(a1 + 228) |= 0x20u;
        uint64_t v37 = (_BYTE *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        int v17 = v37 + 1;
        *((void *)this + 1) = v17;
LABEL_116:
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v65);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v38 = v65[0];
        }

        else
        {
          unsigned int v38 = *v17;
          *((void *)this + 1) = v17 + 1;
        }

        if (v38 <= 9)
        {
          *(_DWORD *)(a1 + 228) |= 0x40u;
          *(_DWORD *)(a1 + 48) = v38;
        }

        int v39 = (_BYTE *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        uint64_t v19 = v39 + 1;
        *((void *)this + 1) = v19;
LABEL_126:
        if ((unint64_t)v19 >= v18 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v65);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v40 = v65[0];
        }

        else
        {
          unsigned int v40 = *v19;
          *((void *)this + 1) = v19 + 1;
        }

        if (v40 <= 3)
        {
          *(_DWORD *)(a1 + 228) |= 0x80u;
          *(_DWORD *)(a1 + 52) = v40;
        }

        int v41 = (_BYTE *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        int v21 = v41 + 1;
        *((void *)this + 1) = v21;
LABEL_136:
        if ((unint64_t)v21 >= v20 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v65);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v42 = v65[0];
        }

        else
        {
          unsigned int v42 = *v21;
          *((void *)this + 1) = v21 + 1;
        }

        if (v42 <= 2)
        {
          *(_DWORD *)(a1 + 228) |= 0x100u;
          *(_DWORD *)(a1 + 136) = v42;
        }

        uint64_t v43 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v43 + 2;
LABEL_147:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v65) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 56) = *(void *)v65;
        *(_DWORD *)(a1 + 228) |= 0x200u;
        uint64_t v44 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v44 + 2;
LABEL_152:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v65) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 64) = *(void *)v65;
        *(_DWORD *)(a1 + 228) |= 0x400u;
        int v45 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v45 + 2;
LABEL_157:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v65) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 72) = *(void *)v65;
        *(_DWORD *)(a1 + 228) |= 0x800u;
        int v46 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v46 + 2;
LABEL_162:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v65) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 80) = *(void *)v65;
        *(_DWORD *)(a1 + 228) |= 0x1000u;
        int v47 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v47 + 2;
LABEL_167:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v65) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 88) = *(void *)v65;
        *(_DWORD *)(a1 + 228) |= 0x2000u;
        uint64_t v48 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v48 + 2;
LABEL_172:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v65) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 96) = *(void *)v65;
        *(_DWORD *)(a1 + 228) |= 0x4000u;
        uint64_t v49 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v49 + 2;
LABEL_177:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v65) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 104) = *(void *)v65;
        *(_DWORD *)(a1 + 228) |= 0x8000u;
        uint64_t v50 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v50 + 2;
LABEL_182:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v65) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 112) = *(void *)v65;
        *(_DWORD *)(a1 + 228) |= 0x10000u;
        int v51 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v51 + 2;
LABEL_187:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v65) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 120) = *(void *)v65;
        *(_DWORD *)(a1 + 228) |= 0x20000u;
        int v52 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v52 + 2;
LABEL_192:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v65) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 128) = *(void *)v65;
        *(_DWORD *)(a1 + 228) |= 0x40000u;
        uint64_t v53 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v53 + 2;
LABEL_197:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v65) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 144) = *(void *)v65;
        *(_DWORD *)(a1 + 228) |= 0x80000u;
        uint64_t v54 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v54 + 2;
LABEL_202:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v65) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 152) = *(void *)v65;
        *(_DWORD *)(a1 + 228) |= 0x100000u;
        uint64_t v55 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v55 + 2;
LABEL_207:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v65) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 160) = *(void *)v65;
        *(_DWORD *)(a1 + 228) |= 0x200000u;
        int v56 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v56 + 2;
LABEL_212:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v65) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 168) = *(void *)v65;
        *(_DWORD *)(a1 + 228) |= 0x400000u;
        int v57 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v57 + 2;
LABEL_217:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v65) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 176) = *(void *)v65;
        *(_DWORD *)(a1 + 228) |= 0x800000u;
        int v58 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v58 + 2;
LABEL_222:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v65) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 184) = *(void *)v65;
        *(_DWORD *)(a1 + 228) |= 0x1000000u;
        unsigned int v59 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v59 + 2;
LABEL_227:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v65) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 192) = *(void *)v65;
        *(_DWORD *)(a1 + 228) |= 0x2000000u;
        int v60 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v60 + 2;
LABEL_232:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v65) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 200) = *(void *)v65;
        *(_DWORD *)(a1 + 228) |= 0x4000000u;
        int v61 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v61 + 2;
LABEL_237:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v65) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 208) = *(void *)v65;
        *(_DWORD *)(a1 + 228) |= 0x8000000u;
        unint64_t v62 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v62 + 2;
LABEL_242:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v65) & 1) != 0)
        {
          *(void *)(a1 + 216) = *(void *)v65;
          *(_DWORD *)(a1 + 228) |= 0x10000000u;
          int v63 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          if ((int)v10 - (int)v63 >= 2 && *v63 == 128 && v63[1] == 5)
          {
            int v11 = (char *)(v63 + 2);
            *((void *)this + 1) = v11;
LABEL_247:
            if ((unint64_t)v11 >= v10 || *v11 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v65);
              if (!(_DWORD)result) {
                return result;
              }
              unsigned int v64 = v65[0];
            }

            else
            {
              unsigned int v64 = *v11;
              *((void *)this + 1) = v11 + 1;
            }

            if (v64 <= 7)
            {
              *(_DWORD *)(a1 + 228) |= 0x20000000u;
              *(_DWORD *)(a1 + 140) = v64;
            }

            if (*((void *)this + 1) == *((void *)this + 2)
              && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              uint64_t result = 1LL;
              *((_BYTE *)this + 36) = 1;
              return result;
            }
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_94;
        }
        goto LABEL_72;
      case 4u:
        int v7 = TagFallback & 7;
        int v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_98;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_108;
        }
        goto LABEL_72;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_112;
        }
        goto LABEL_72;
      case 7u:
        int v7 = TagFallback & 7;
        int v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_116;
      case 8u:
        int v7 = TagFallback & 7;
        uint64_t v19 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_126;
      case 9u:
        int v7 = TagFallback & 7;
        int v21 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_136;
      case 0xAu:
      case 0xBu:
      case 0xCu:
      case 0xDu:
      case 0xEu:
      case 0xFu:
      case 0x10u:
      case 0x11u:
      case 0x12u:
      case 0x13u:
      case 0x1Eu:
      case 0x1Fu:
      case 0x20u:
      case 0x21u:
      case 0x22u:
      case 0x23u:
      case 0x24u:
      case 0x25u:
      case 0x26u:
      case 0x27u:
      case 0x28u:
      case 0x29u:
      case 0x2Au:
      case 0x2Bu:
      case 0x2Cu:
      case 0x2Du:
      case 0x2Eu:
      case 0x2Fu:
      case 0x30u:
      case 0x31u:
      case 0x36u:
      case 0x37u:
      case 0x38u:
      case 0x39u:
      case 0x3Au:
      case 0x3Bu:
      case 0x40u:
      case 0x41u:
      case 0x42u:
      case 0x43u:
      case 0x44u:
      case 0x45u:
        goto LABEL_16;
      case 0x14u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_147;
        }
        goto LABEL_72;
      case 0x15u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_152;
        }
        goto LABEL_72;
      case 0x16u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_157;
        }
        goto LABEL_72;
      case 0x17u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_162;
        }
        goto LABEL_72;
      case 0x18u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_167;
        }
        goto LABEL_72;
      case 0x19u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_172;
        }
        goto LABEL_72;
      case 0x1Au:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_177;
        }
        goto LABEL_72;
      case 0x1Bu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_182;
        }
        goto LABEL_72;
      case 0x1Cu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_187;
        }
        goto LABEL_72;
      case 0x1Du:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_192;
        }
        goto LABEL_72;
      case 0x32u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_197;
        }
        goto LABEL_72;
      case 0x33u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_202;
        }
        goto LABEL_72;
      case 0x34u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_207;
        }
        goto LABEL_72;
      case 0x35u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_212;
        }
        goto LABEL_72;
      case 0x3Cu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_217;
        }
        goto LABEL_72;
      case 0x3Du:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_222;
        }
        goto LABEL_72;
      case 0x3Eu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_227;
        }
        goto LABEL_72;
      case 0x3Fu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_232;
        }
        goto LABEL_72;
      case 0x46u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_237;
        }
        goto LABEL_72;
      case 0x47u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_72;
        }
        goto LABEL_242;
      default:
        if (TagFallback >> 3 == 80)
        {
          int v7 = TagFallback & 7;
          if ((TagFallback & 7) == 0)
          {
            int v11 = (char *)*((void *)this + 1);
            unint64_t v10 = *((void *)this + 2);
            goto LABEL_247;
          }
        }

        else
        {
LABEL_16:
          int v7 = TagFallback & 7;
        }

uint64_t sub_1001C485C( uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 228);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0AD8 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 228);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_36;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(_DWORD *)(v5 + 24),  (int)a2,  a4);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_37;
  }

LABEL_56:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x35,  (int)a2,  *(double *)(v5 + 168),  a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x800000) == 0)
  {
LABEL_25:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_58;
  }

  uint64_t result = (9 * (*(_DWORD *)(a1 + 64) + *(_DWORD *)(a1 + 40)) + v4);
  *(_DWORD *)(a1 + 76) = result;
  return result;
}

  BOOL v27 = 0LL;
LABEL_57:
  if (SBYTE7(v70) < 0) {
    operator delete((void *)v69);
  }
  return v27;
}

  BOOL v27 = 0LL;
LABEL_57:
  if (SHIBYTE(v75) < 0) {
    operator delete(v73);
  }
  return v27;
}

  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14,  v5[21],  a2,  a4);
  int v6 = v5[37];
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_58;
  }

  int v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
  if (v23 >= 0x80)
  {
    int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 64);
  }

  else
  {
    int v24 = 2;
  }

  uint64_t v4 = (v24 + v4);
  if ((v3 & 0x800) != 0)
  {
LABEL_60:
    unsigned int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
    else {
      int v26 = 2;
    }
    uint64_t v4 = (v26 + v4);
  }

  int v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
  if (v23 >= 0x80)
  {
    int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 64);
  }

  else
  {
    int v24 = 2;
  }

  uint64_t v4 = (v24 + v4);
  if ((v3 & 0x800) != 0)
  {
LABEL_60:
    unsigned int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
    else {
      int v26 = 2;
    }
    uint64_t v4 = (v26 + v4);
  }

  *(_BYTE *)(a1 + 538) |= 0x10u;
  if ((v21 & 1) != 0) {
    return;
  }
LABEL_57:
  if (v30)
  {
    *(_BYTE *)(a1 + 474) |= 1u;
    if (!v7)
    {
LABEL_59:
      if (!v10) {
        goto LABEL_60;
      }
      goto LABEL_66;
    }
  }

  else if (!v7)
  {
    goto LABEL_59;
  }

  *(_BYTE *)(a1 + 505) |= 1u;
  if (!v10)
  {
LABEL_60:
    if (!v17) {
      goto LABEL_61;
    }
    goto LABEL_67;
  }

      v51 += 3;
    }

    while (v51 != v50);
  }

  if (__p)
  {
    int v63 = (double *)__p;
    operator delete(__p);
  }

  if (v65)
  {
    int v66 = (double *)v65;
    operator delete(v65);
  }

  unint64_t v14 = *(void *)(v5 + 80);
  if (!v14) {
    unint64_t v14 = *(void *)(qword_1019A1D48 + 80);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12,  v14,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 224);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_62;
  }

  if ((v3 & 0xFF00) == 0) {
    goto LABEL_114;
  }
  if ((v3 & 0x100) != 0)
  {
    int v29 = *(void *)(a1 + 64);
    if (!v29) {
      int v29 = *(void *)(qword_1019A1D48 + 64);
    }
    unsigned int v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100BC579C(v29, a2);
    uint64_t v31 = (int)v30;
    else {
      uint64_t v32 = 1;
    }
    uint64_t v4 = (v4 + v31 + v32 + 2);
    int v3 = *(_DWORD *)(a1 + 224);
    if ((v3 & 0x200) == 0)
    {
LABEL_59:
      if ((v3 & 0x400) == 0) {
        goto LABEL_60;
      }
      goto LABEL_78;
    }
  }

  else if ((v3 & 0x200) == 0)
  {
    goto LABEL_59;
  }

  int v33 = *(void *)(a1 + 72);
  if (!v33) {
    int v33 = *(void *)(qword_1019A1D48 + 72);
  }
  unsigned int v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100BC5A58(v33, a2);
  int v35 = (int)v34;
  else {
    int v36 = 1;
  }
  uint64_t v4 = (v4 + v35 + v36 + 2);
  int v3 = *(_DWORD *)(a1 + 224);
  if ((v3 & 0x400) == 0)
  {
LABEL_60:
    if ((v3 & 0x800) == 0) {
      goto LABEL_61;
    }
    goto LABEL_84;
  }

  sub_1002F0B04(buf);
  uint64_t v44 = sub_1002A7CB0(*(uint64_t *)buf, "AutoPauseActivityType", &v56);
  int v45 = v56;
  if (v56 >= 0) {
    int v46 = v44;
  }
  else {
    int v46 = 0;
  }
  if (v46 == 1)
  {
    int v47 = *(std::__shared_weak_count **)v59;
    if (*(void *)v59)
    {
      uint64_t v48 = (unint64_t *)(*(void *)v59 + 8LL);
      do
        uint64_t v49 = __ldaxr(v48);
      while (__stlxr(v49 - 1, v48));
      if (!v49)
      {
        ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
        std::__shared_weak_count::__release_weak(v47);
      }
    }

    if (v45 <= 3) {
      sub_100DB3558(a1, v56);
    }
  }

  else
  {
    uint64_t v50 = *(std::__shared_weak_count **)v59;
    if (*(void *)v59)
    {
      int v51 = (unint64_t *)(*(void *)v59 + 8LL);
      do
        int v52 = __ldaxr(v51);
      while (__stlxr(v52 - 1, v51));
      if (!v52)
      {
        ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
        std::__shared_weak_count::__release_weak(v50);
      }
    }
  }

  if (qword_101934970 != -1) {
    dispatch_once(&qword_101934970, &stru_101883130);
  }
  uint64_t v53 = (os_log_s *)qword_101934978;
  if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v54 = *(_DWORD *)(a1 + 232);
    *(_DWORD *)buf = 68289282;
    *(_DWORD *)&buf[4] = 0;
    *(_WORD *)unsigned int v59 = 2082;
    *(void *)&v59[2] = "";
    int v60 = 1026;
    int v61 = v54;
    _os_log_impl( (void *)&_mh_execute_header,  v53,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:PAUSE: activity type defaulted, activity:%{public}d}",  buf,  0x18u);
  }

  return a1;
}

  if (SHIBYTE(cap) < 0) {
    operator delete((void *)v43);
  }
  return 1LL;
}

          if (SBYTE7(v31) < 0) {
            operator delete((void *)v30);
          }
        }

        int v22 = (void *)v3[1];
        if (v22)
        {
          do
          {
            int v23 = v22;
            int v22 = (void *)*v22;
          }

          while (v22);
        }

        else
        {
          do
          {
            int v23 = (void *)v3[2];
            int v24 = *v23 == (void)v3;
            int v3 = v23;
          }

          while (!v24);
        }

        int v3 = v23;
      }

      while (v23 != (void *)(a1 + 280));
    }
  }

  a1[17] = v7;
  return v7;
}

  uint64_t v7 = *(_DWORD *)(a2 + 48);
  v3 |= 0x80uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 48) = v7;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x8000000) == 0)
  {
LABEL_22:
    if ((v2 & 0x200000000LL) == 0) {
      goto LABEL_23;
    }
    goto LABEL_58;
  }

  PB::TextFormatter::format(this, "maxJerkVM", *(float *)(a1 + 84));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x20000) == 0)
  {
LABEL_19:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_58;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 128), 0x12u);
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x200000000LL) == 0)
  {
LABEL_20:
    if ((v4 & 0x100000000LL) == 0) {
      goto LABEL_21;
    }
    goto LABEL_58;
  }

  unint64_t v14 = *(void *)(a2 + 336);
  v5 |= 0x20000000000uLL;
  *uint64_t v2 = v5;
  *(void *)(a1 + 336) = v14;
  uint64_t v4 = *v3;
  if ((*v3 & 0x80000000000LL) == 0)
  {
LABEL_14:
    if ((v4 & 0x100000000000LL) == 0) {
      goto LABEL_15;
    }
    goto LABEL_58;
  }

  PB::TextFormatter::format(this, "alertCanceledBecauseOfLowFrequencyFFT", *(void *)(a1 + 72));
  int v6 = *v5;
  if ((*v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_58;
  }

  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 352), 0x31u);
  uint64_t v5 = *v4;
  if ((*v4 & 0x100000000000LL) == 0)
  {
LABEL_12:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_58;
  }

  unint64_t v14 = *(_DWORD *)(a2 + 52);
  v3 |= 0x80uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 52) = v14;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x40000000) == 0)
  {
LABEL_23:
    if ((v2 & 0x2000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_58;
  }

  PB::TextFormatter::format(this, "numActiveBins", *(_DWORD *)(a1 + 84));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x10000) == 0)
  {
LABEL_20:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_58;
  }

  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 144), 0x13u);
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x2000000) == 0)
  {
LABEL_21:
    if ((v4 & 0x800000000LL) == 0) {
      goto LABEL_22;
    }
    goto LABEL_58;
  }

  uint64_t v31 = *(void *)(a2 + 328);
  v10 |= 0x2000u;
  *(_DWORD *)(a1 + 396) = v10;
  *(void *)(a1 + 328) = v31;
  int v9 = *(_DWORD *)(a2 + 396);
  if ((v9 & 0x80000000) == 0)
  {
LABEL_24:
    if ((v9 & 4) == 0) {
      goto LABEL_25;
    }
    goto LABEL_58;
  }

  uint64_t result = *(float *)(a2 + 176);
  v3 |= 0x8000000000uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 176) = result;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x4000000000LL) == 0)
  {
LABEL_10:
    if ((v2 & 0x80000000000LL) == 0) {
      goto LABEL_11;
    }
    goto LABEL_58;
  }

  PB::TextFormatter::format(this, "angleChangePreImpact", *(float *)(a1 + 48));
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 1) == 0)
  {
LABEL_7:
    if ((v5 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_58;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 172), 6u);
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x80000000000LL) == 0)
  {
LABEL_8:
    if ((v4 & 0x40000000000LL) == 0) {
      goto LABEL_9;
    }
    goto LABEL_58;
  }

  int v28 = *(void *)(a2 + 104);
  *(_DWORD *)(a1 + 212) |= 8u;
  *(void *)(a1 + 104) = v28;
  unint64_t v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v10 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_58;
  }

  PB::TextFormatter::format(this, "maxMeanTenMinPreTrigger", *(float *)(a1 + 144));
  int v9 = *(_DWORD *)(a1 + 212);
  if ((v9 & 0x2000) == 0)
  {
LABEL_19:
    if ((v9 & 0x4000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_58;
  }

  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 152), 0x10u);
  unint64_t v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x2000) == 0)
  {
LABEL_25:
    if ((v14 & 0x100000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_58;
  }

  uint64_t result = *(float *)(a2 + 24);
  v3 |= 0x10u;
  *(_DWORD *)(a1 + 108) = v3;
  *(float *)(a1 + 24) = result;
  uint64_t v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x400) == 0)
  {
LABEL_31:
    if ((v2 & 0x200) == 0) {
      return result;
    }
LABEL_58:
    uint64_t result = *(float *)(a2 + 44);
    *(_DWORD *)(a1 + 108) = v3 | 0x200;
    *(float *)(a1 + 44) = result;
    return result;
  }

  PB::TextFormatter::format(this, "t2TimesRmsClipSum", *(float *)(a1 + 88));
  uint64_t v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x200000) != 0) {
    goto LABEL_57;
  }
LABEL_28:
  if ((v5 & 0x400000) != 0) {
LABEL_29:
  }
    PB::TextFormatter::format(this, "tauBar", *(float *)(a1 + 96));
  return PB::TextFormatter::endObject(this);
}

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48), 0x1Bu);
  if ((*(_DWORD *)(v3 + 108) & 0x200) != 0) {
    return PB::Writer::write(this, *(float *)(v3 + 44), 0x1Cu);
  }
  return result;
}

  uint64_t result = *(float *)(a2 + 132);
  v3 |= 0x2000000u;
  *(_DWORD *)(a1 + 152) = v3;
  *(float *)(a1 + 132) = result;
  uint64_t v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x40000) == 0)
  {
LABEL_29:
    if ((v2 & 0x100) == 0) {
      goto LABEL_30;
    }
    goto LABEL_58;
  }

  PB::TextFormatter::format(this, "preEventPressureMedian", *(float *)(a1 + 124));
  uint64_t v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_58;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 104), 0x19u);
  uint64_t v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x100) == 0)
  {
LABEL_27:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_58;
  }

  int v28 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_DWORD *)(result + 132) = v3;
  *(void *)(result + 8) = v28;
  uint64_t v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x200) == 0)
  {
LABEL_30:
    if ((v2 & 0x400) == 0) {
      goto LABEL_31;
    }
    goto LABEL_58;
  }

  PB::TextFormatter::format(this, "transitionEndSpeed", *(float *)(a1 + 108));
  uint64_t v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x200000) == 0)
  {
LABEL_27:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_58;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 64), 0x12Eu);
  uint64_t v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x400) == 0)
  {
LABEL_28:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_58;
  }

  int v24 = *(_DWORD *)(a2 + 76);
  v3 |= 0x800uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 76) = v24;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x1000) == 0)
  {
LABEL_26:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_58;
  }

  PB::TextFormatter::format(this, "metaCrossingCount", *(_DWORD *)(a1 + 124));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 4) == 0)
  {
LABEL_23:
    if ((v5 & 8) == 0) {
      goto LABEL_24;
    }
    goto LABEL_58;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80), 0x16u);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x2000) == 0)
  {
LABEL_24:
    if ((v4 & 0x100) == 0) {
      goto LABEL_25;
    }
    goto LABEL_58;
  }

  uint64_t result = *(float *)(a2 + 100);
  v3 |= 0x80000uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 100) = result;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x40000) == 0)
  {
LABEL_13:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_58;
  }

  PB::TextFormatter::format(this, "energyAtMaxChaosTimestamp", *(float *)(a1 + 52));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x2000000000LL) == 0)
  {
LABEL_10:
    if ((v5 & 1) == 0) {
      goto LABEL_11;
    }
    goto LABEL_58;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 96), 9u);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x20000) == 0)
  {
LABEL_11:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_58;
  }

  LODWORD(v4) = *(_DWORD *)(a2 + 136);
  v3 |= 0x20000000uLL;
  *(void *)(a1 + 164) = v3;
  *(_DWORD *)(a1 + 136) = v4;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x200) == 0)
  {
LABEL_21:
    if ((v2 & 0x1000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_58;
  }

  PB::TextFormatter::format(this, "isStanding", *(_BYTE *)(a1 + 161));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x2000000000LL) == 0)
  {
LABEL_18:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_58;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56), 0x11u);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_58;
  }

  int v23 = *(_DWORD *)(a2 + 124);
  v3 |= 0x1000000uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 124) = v23;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x80000000) == 0)
  {
LABEL_25:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_58;
  }

  PB::TextFormatter::format(this, "refPhaseOffset", *(_DWORD *)(a1 + 108));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x200000) == 0)
  {
LABEL_22:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_58;
  }

  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 152), 0x15u);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x8000) == 0)
  {
LABEL_23:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_58;
  }

  LODWORD(v4) = *(_DWORD *)(a2 + 44);
  v3 |= 0x80u;
  *(_DWORD *)(a1 + 136) = v3;
  *(_DWORD *)(a1 + 44) = v4;
  uint64_t v2 = *(_DWORD *)(a2 + 136);
  if ((v2 & 0x100) == 0)
  {
LABEL_28:
    if ((v2 & 0x200) == 0) {
      goto LABEL_29;
    }
    goto LABEL_58;
  }

  PB::TextFormatter::format(this, "right_eye_z", *(float *)(a1 + 112));
  uint64_t v5 = *(_DWORD *)(a1 + 136);
  if ((v5 & 1) == 0)
  {
LABEL_25:
    if ((v5 & 0x20000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_58;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48), 0x18u);
  uint64_t v4 = *(_DWORD *)(v3 + 136);
  if ((v4 & 0x200) == 0)
  {
LABEL_26:
    if ((v4 & 0x800) == 0) {
      goto LABEL_27;
    }
    goto LABEL_58;
  }

  int v17 = *(_DWORD *)(a2 + 176);
  v3 |= 0x40000000uLL;
  *(void *)(result + 212) = v3;
  *(_DWORD *)(result + 176) = v17;
  uint64_t v2 = *(void *)(a2 + 212);
  if ((v2 & 0x200) == 0)
  {
LABEL_19:
    if ((v2 & 0x2000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_58;
  }

  PB::TextFormatter::format(this, "planarMaxChaos", *(float *)(a1 + 136));
  uint64_t v5 = *(void *)(a1 + 212);
  if ((v5 & 0x200000) == 0)
  {
LABEL_16:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_58;
  }

  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 80), 0xFu);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 0x2000000) == 0)
  {
LABEL_17:
    if ((v4 & 0x200000000LL) == 0) {
      goto LABEL_18;
    }
    goto LABEL_58;
  }

  uint64_t result = *(double *)(a2 + 192);
  v3 |= 0x800000u;
  *(_DWORD *)(a1 + 248) = v3;
  *(double *)(a1 + 192) = result;
  uint64_t v2 = *(_DWORD *)(a2 + 248);
  if ((v2 & 0x1000000) == 0)
  {
LABEL_29:
    if ((v2 & 0x4000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_58;
  }

  PB::TextFormatter::format(this, "allBoutsSwingIndexOfHarmonicityMlQ5", *(double *)(a1 + 192));
  uint64_t v5 = *(_DWORD *)(a1 + 248);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_58;
  }

  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 200), 0x19u);
  uint64_t v4 = *(_DWORD *)(v3 + 248);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_27:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_58;
  }

  uint64_t v43 = *(_DWORD *)(a2 + 132);
  *(_DWORD *)(a1 + 152) |= 0x20000u;
  *(_DWORD *)(a1 + 132) = v43;
  uint64_t v32 = *(_DWORD *)(a2 + 152);
  if ((v32 & 0x400) == 0)
  {
LABEL_43:
    if ((v32 & 0x800) == 0) {
      goto LABEL_44;
    }
    goto LABEL_58;
  }

  int v8 = *(_BYTE *)(a2 + 180);
  v3 |= 0x80000000000uLL;
  *(void *)(a1 + 184) = v3;
  *(_BYTE *)(a1 + 180) = v8;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x4000) == 0)
  {
LABEL_14:
    if ((v2 & 2) == 0) {
      goto LABEL_15;
    }
    goto LABEL_58;
  }

  PB::TextFormatter::format(this, "deviceSide", *(_DWORD *)(a1 + 60));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x800) == 0)
  {
LABEL_11:
    if ((v5 & 0x10000000000LL) == 0) {
      goto LABEL_12;
    }
    goto LABEL_58;
  }

  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 76), 0xAu);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 2) == 0)
  {
LABEL_12:
    if ((v4 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_58;
  }

  int v35 = *(_DWORD *)(a2 + 156);
  v5 |= 0x200000u;
  *(_DWORD *)(a1 + 180) = v5;
  *(_DWORD *)(a1 + 156) = v35;
  uint64_t v4 = *(_DWORD *)(a2 + 180);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_26:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_58;
  }

  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 136), 0x18u);
  if ((*(_DWORD *)(v3 + 180) & 0x100000) != 0) {
LABEL_26:
  }
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 152), 0x19u);
LABEL_27:
  uint64_t v5 = *(const PB::Base **)(v3 + 112);
  if (v5) {
    uint64_t result = PB::Writer::writeSubmessage(this, v5, 0x1Au);
  }
  int v6 = *(_DWORD *)(v3 + 180);
  if ((v6 & 0x8000) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 132), 0x1Bu);
    int v6 = *(_DWORD *)(v3 + 180);
  }

  if ((v6 & 0x4000) != 0) {
    return PB::Writer::write(this, *(float *)(v3 + 128), 0x1Cu);
  }
  return result;
}

  unsigned int v25 = *(_DWORD *)(a2 + 200);
  v3 |= 0x8000000u;
  *(_DWORD *)(result + 220) = v3;
  *(_DWORD *)(result + 200) = v25;
  uint64_t v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x1000000) == 0)
  {
LABEL_27:
    if ((v2 & 0x20) == 0) {
      goto LABEL_28;
    }
    goto LABEL_58;
  }

  PB::TextFormatter::format(this, "rawVerticalAccuracy", *(double *)(a1 + 120));
  uint64_t v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_24:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_58;
  }

  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 188), 0x17u);
  uint64_t v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x20) == 0)
  {
LABEL_25:
    if ((v4 & 0x40) == 0) {
      goto LABEL_26;
    }
    goto LABEL_58;
  }

  int v24 = *(void *)(a2 + 8);
  v5 |= 1uLL;
  *(void *)(a1 + 192) = v5;
  *(void *)(a1 + 8) = v24;
  uint64_t v4 = *(void *)(a2 + 192);
  if ((v4 & 4) == 0)
  {
LABEL_16:
    if ((v4 & 2) == 0) {
      goto LABEL_17;
    }
    goto LABEL_58;
  }

  PB::TextFormatter::format(this, "mountedConfidence", *(_DWORD *)(a1 + 108));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 2) == 0)
  {
LABEL_15:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_58;
  }

  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 68), 0xEu);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x20000000) == 0)
  {
LABEL_16:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_58;
  }

  PB::TextFormatter::format(this, "auxOmegaInertial_Y", *(float *)(a1 + 28));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x20) == 0)
  {
LABEL_6:
    if ((v5 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_58;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24), 5u);
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_58;
  }

  unsigned int v25 = *(_DWORD *)(a2 + 84);
  v3 |= 0x10000u;
  *(_DWORD *)(result + 128) = v3;
  *(_DWORD *)(result + 84) = v25;
  uint64_t v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 8) == 0)
  {
LABEL_27:
    if ((v2 & 0x200) == 0) {
      goto LABEL_28;
    }
    goto LABEL_58;
  }

  PB::TextFormatter::format(this, "srcAvgOmegaAroundGrav2s", *(float *)(a1 + 84));
  uint64_t v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x20000) == 0)
  {
LABEL_24:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_58;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32), 0x17u);
  uint64_t v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x200) == 0)
  {
LABEL_25:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_58;
  }

  BOOL v27 = *(_DWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 164) |= 0x10u;
  *(_DWORD *)(a1 + 80) = v27;
  unint64_t v10 = *(_DWORD *)(a2 + 164);
  if ((v10 & 8) == 0)
  {
LABEL_26:
    if ((v10 & 4) == 0) {
      goto LABEL_27;
    }
    goto LABEL_58;
  }

  PB::TextFormatter::format(this, "rBoresight_X", *(float *)(a1 + 108));
  int v9 = *(_DWORD *)(a1 + 164);
  if ((v9 & 0x1000) == 0)
  {
LABEL_21:
    if ((v9 & 0x2000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_58;
  }

  unint64_t v14 = *(_DWORD *)(a2 + 200);
  v3 |= 0x2000000uLL;
  *(void *)(a1 + 224) = v3;
  *(_DWORD *)(a1 + 200) = v14;
  uint64_t v2 = *(void *)(a2 + 224);
  if ((v2 & 0x1000000) == 0)
  {
LABEL_24:
    if ((v2 & 8) == 0) {
      goto LABEL_25;
    }
    goto LABEL_58;
  }

  PB::TextFormatter::format(this, "strideLengthGradeType", *(double *)(a1 + 88));
  uint64_t v5 = *(void *)(a1 + 224);
  if ((v5 & 0x200000000LL) == 0)
  {
LABEL_21:
    if ((v5 & 0x800) == 0) {
      goto LABEL_22;
    }
    goto LABEL_58;
  }

  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 196), 0x14u);
  uint64_t v4 = *(void *)(v3 + 224);
  if ((v4 & 8) == 0)
  {
LABEL_22:
    if ((v4 & 4) == 0) {
      goto LABEL_23;
    }
    goto LABEL_58;
  }

  int v29 = *(void *)(a2 + 88);
  v3 |= 0x400u;
  *(_DWORD *)(result + 188) = v3;
  *(void *)(result + 88) = v29;
  uint64_t v2 = *(_DWORD *)(a2 + 188);
  if ((v2 & 0x800) == 0)
  {
LABEL_31:
    if ((v2 & 0x1000000) == 0) {
      return result;
    }
LABEL_58:
    uint64_t v31 = *(_BYTE *)(a2 + 181);
    *(_DWORD *)(result + 188) = v3 | 0x1000000;
    *(_BYTE *)(result + 181) = v31;
    return result;
  }

  PB::TextFormatter::format(this, "pedometerSpeed", *(double *)(a1 + 144));
  uint64_t v5 = *(_DWORD *)(a1 + 188);
  if ((v5 & 0x40000) != 0) {
    goto LABEL_57;
  }
LABEL_28:
  if ((v5 & 0x80000) != 0) {
LABEL_29:
  }
    PB::TextFormatter::format(this, "startTime", *(double *)(a1 + 160));
  return PB::TextFormatter::endObject(this);
}

  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 96), 0x1Bu);
  if ((*(_DWORD *)(v3 + 188) & 0x1000000) != 0) {
    return PB::Writer::write(this, *(_BYTE *)(v3 + 181), 0x1Cu);
  }
  return result;
}

LABEL_60:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3F,  (int)a2,  *(double *)(v5 + 200),  a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_62;
  }

  int v24 = *(_DWORD *)(a2 + 76);
  if (v24 >= 3) {
    sub_10122FC0C();
  }
  *(_DWORD *)(a1 + 100) |= 0x800u;
  *(_DWORD *)(a1 + 76) = v24;
  if ((*(_DWORD *)(a2 + 100) & 0x1000) != 0)
  {
LABEL_62:
    *(_DWORD *)(a1 + 100) |= 0x1000u;
    unsigned int v25 = *(char **)(a1 + 88);
    if (!v25)
    {
      unsigned int v25 = (char *)operator new(0x28uLL);
      *(void *)unsigned int v25 = off_1018283F0;
      *(_OWORD *)(v25 + 8) = 0u;
      *(_OWORD *)(v25 + 24) = 0u;
      *(void *)(a1 + 88) = v25;
    }

    int v26 = *(void *)(a2 + 88);
    if (!v26) {
      int v26 = *(void *)(qword_1019A0BD8 + 88);
    }
    return sub_1001DDED4((uint64_t)v25, v26);
  }

  return result;
}

  if ((v3 & 0x40) != 0) {
    uint64_t result = v4 + 9;
  }
  else {
    uint64_t result = v4;
  }
LABEL_63:
  *(_DWORD *)(a1 + 64) = result;
  return result;
}

  unsigned int v42 = 0LL;
LABEL_61:
  if (v64)
  {
    uint64_t v65 = v64;
    operator delete(v64);
  }

  (*(void (**)(uint64_t))(*(void *)v8 + 24LL))(v8);
  return v42;
}

      unint64_t v14 = v26 + 1;
    }

    while (v14 != v11);
    int v11 = [a2 countByEnumeratingWithState:&v68 objects:v82 count:16];
  }

  while (v11);
LABEL_69:
  int v35 = -[NSSet allObjects](+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", v9, v58), "allObjects");
  if (![*(id *)(v59 + 32) countriesAreUnchanged:v35])
  {
    if (qword_101934930 != -1) {
      dispatch_once(&qword_101934930, &stru_10183F288);
    }
    int v45 = qword_101934938;
    if (!os_log_type_enabled((os_log_t)qword_101934938, OS_LOG_TYPE_INFO)) {
      goto LABEL_84;
    }
    int v46 = [*(id *)(v59 + 32) previousCountries];
    *(_DWORD *)buf = 68289795;
    int v75 = 0;
    int v76 = 2082;
    int v77 = "";
    unsigned int v78 = 2113;
    *(void *)int v79 = v46;
    *(_WORD *)&v79[8] = 2113;
    *(void *)&v79[10] = v35;
    *(_WORD *)&v79[18] = 1025;
    int v80 = v12 & 1;
    int v47 = "{msg%{public}.0s:location country codes have changed, sending, prev:%{private, location:escape_onl"
          "y}@, curr:%{private, location:escape_only}@, disputed:%{private}hhd}";
    uint64_t v48 = (os_log_s *)v45;
    uint64_t v49 = OS_LOG_TYPE_INFO;
    uint64_t v50 = 44;
    goto LABEL_83;
  }

  -[NSDate timeIntervalSince1970](+[NSDate now](&OBJC_CLASS___NSDate, "now"), "timeIntervalSince1970");
  uint64_t v37 = v36;
  [*(id *)(v59 + 32) previousCountryCodeTimeStamp];
  if ((int)[*(id *)(v59 + 32) countryCodeDebounceInterval] <= (int)(v37 - v38))
  {
    if (qword_101934930 != -1) {
      dispatch_once(&qword_101934930, &stru_10183F288);
    }
    int v51 = qword_101934938;
    if (!os_log_type_enabled((os_log_t)qword_101934938, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_84;
    }
    -[NSDate timeIntervalSince1970](+[NSDate now](&OBJC_CLASS___NSDate, "now"), "timeIntervalSince1970");
    uint64_t v53 = (int)v52;
    [*(id *)(v59 + 32) previousCountryCodeTimeStamp];
    uint64_t v55 = v54;
    int v56 = [*(id *)(v59 + 32) countryCodeDebounceInterval];
    *(_DWORD *)buf = 68289794;
    int v75 = 0;
    int v76 = 2082;
    int v77 = "";
    unsigned int v78 = 1026;
    *(_DWORD *)int v79 = v53;
    *(_WORD *)&v79[4] = 2050;
    *(void *)&v79[6] = v55;
    *(_WORD *)&v79[14] = 1026;
    *(_DWORD *)&v79[16] = v56;
    int v47 = "{msg%{public}.0s:already sent this country code, but it's been long enough so sending it again, now"
          ":%{public}d, prevTime:%{public}f, delta:%{public}d}";
    uint64_t v48 = (os_log_s *)v51;
    uint64_t v49 = OS_LOG_TYPE_DEFAULT;
    uint64_t v50 = 40;
LABEL_83:
    _os_log_impl((void *)&_mh_execute_header, v48, v49, v47, buf, v50);
LABEL_84:
    a1 = v59;

    *(void *)(*(void *)(v59 + 32) + 200LL) = -[NSArray copy](v35, "copy");
    -[NSDate timeIntervalSince1970](+[NSDate now](&OBJC_CLASS___NSDate, "now"), "timeIntervalSince1970");
    *(void *)(*(void *)(v59 + 32) + 208LL) = v57;
    *(_BYTE *)(*(void *)(v59 + 32) + 99LL) = v12 & 1;
    v72[0] = kRDUpdateKeyCountryCodes;
    v72[1] = kRDUpdateKeyInDisputedArea;
    v73[0] = v35;
    v73[1] = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:");
    objc_msgSend( *(id *)(v59 + 32),  "sendUpdateToRDIfAllowed:",  +[NSDictionary dictionaryWithObjects:forKeys:count:]( NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v73,  v72,  2));
    goto LABEL_85;
  }

  if (qword_101934930 != -1) {
    dispatch_once(&qword_101934930, &stru_10183F288);
  }
  a1 = v59;
  int v39 = (os_log_s *)qword_101934938;
  if (os_log_type_enabled((os_log_t)qword_101934938, OS_LOG_TYPE_DEFAULT))
  {
    -[NSDate timeIntervalSince1970](+[NSDate now](&OBJC_CLASS___NSDate, "now"), "timeIntervalSince1970");
    int v41 = (int)v40;
    [*(id *)(v59 + 32) previousCountryCodeTimeStamp];
    uint64_t v43 = v42;
    uint64_t v44 = [*(id *)(v59 + 32) countryCodeDebounceInterval];
    *(_DWORD *)buf = 68289794;
    int v75 = 0;
    int v76 = 2082;
    int v77 = "";
    unsigned int v78 = 1026;
    *(_DWORD *)int v79 = v41;
    *(_WORD *)&v79[4] = 2050;
    *(void *)&v79[6] = v43;
    *(_WORD *)&v79[14] = 1026;
    *(_DWORD *)&v79[16] = v44;
    _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:already sent this country code, skipping, now:%{public}d, prevTime:%{public}f , delta:%{public}d}",  buf,  0x28u);
  }

  int v23 = *(_DWORD *)(a2 + 56);
  a1[37] |= 0x1000u;
  a1[14] = v23;
  uint64_t v5 = *(_DWORD *)(a2 + 148);
  if ((v5 & 0x2000) == 0)
  {
LABEL_20:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_62;
  }

  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18,  v5[25],  a2,  a4);
  int v6 = v5[37];
  if ((v6 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_62;
  }

  unsigned int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[12];
  if (v25 >= 0x80)
  {
    int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2) + 1;
    int v3 = a1[16];
  }

  else
  {
    int v26 = 2;
  }

  uint64_t v4 = (v26 + v4);
  if ((v3 & 0x800) == 0)
  {
LABEL_50:
    if ((v3 & 0x1000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_68;
  }

  unsigned int v59 = sub_1006E27E8();
  sub_100413284(v59, buf);
  int v60 = (uint64_t *)(a1 + 376);
  int v61 = sub_1002A82BC(*(uint64_t *)&buf[0], "HRR_MinAllowedEstimate", (void *)(a1 + 376));
  unint64_t v62 = v61;
  int v63 = (std::__shared_weak_count *)*((void *)&buf[0] + 1);
  if (!*((void *)&buf[0] + 1)) {
    goto LABEL_64;
  }
  unsigned int v64 = (unint64_t *)(*((void *)&buf[0] + 1) + 8LL);
  do
    uint64_t v65 = __ldaxr(v64);
  while (__stlxr(v65 - 1, v64));
  if (!v65)
  {
    ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
    std::__shared_weak_count::__release_weak(v63);
    if (!v62) {
      goto LABEL_70;
    }
  }

  else
  {
LABEL_64:
    if (!v61) {
      goto LABEL_70;
    }
  }

  if (qword_101934770 != -1) {
    dispatch_once(&qword_101934770, &stru_101848228);
  }
  int v66 = (os_log_s *)qword_101934778;
  if (os_log_type_enabled((os_log_t)qword_101934778, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v67 = *v60;
    LODWORD(buf[0]) = 134349056;
    *(void *)((char *)buf + 4) = v67;
    _os_log_impl( (void *)&_mh_execute_header,  v66,  OS_LOG_TYPE_DEFAULT,  "Estimator,fMinAllowedEstimate overridden (%{public}f)",  (uint8_t *)buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934770 != -1) {
      dispatch_once(&qword_101934770, &stru_101848228);
    }
    int v93 = *v60;
    uint64_t v100 = 134349056;
    v101 = v93;
    LODWORD(v99) = 12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934778,  0LL,  "Estimator,fMinAllowedEstimate overridden (%{public}f)",  &v100,  v99);
    int v95 = (char *)v94;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLHRRecoveryEstimator::CLHRRecoveryEstimator(std::shared_ptr<CLHRRecoveryInputHRRecorderDb>, std::shared_ptr<CLHRR ecoveryInputWRRecorderDb>, std::shared_ptr<CLHRRecoverySessionRecorderDb>)",  "%s\n",  v94);
  }

    ++v14;
  }

  while (v14 != 3);
  if (v46 == (v52 - (_BYTE *)__p) >> 2)
  {
    if (__p)
    {
      int v51 = (float *)__p;
      operator delete(__p);
    }
  }

  else
  {
    sub_10124A944();
    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Motion/GyroBiasEstimator/CLGyroBiasFitter.cpp",  77,  "computeLinearFit");
    __break(1u);
  }

    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      unsigned int v25 = &__p;
    }
    else {
      unsigned int v25 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
LABEL_63:
    sub_1007B4DF4(a1, (char *)v25);
    if (!v3)
    {
      int v26 = *(void *)(a1 + 224);
      if (v26) {
        sub_1007BC288(v26, *(FILE **)(a1 + 192));
      }
    }

    goto LABEL_66;
  }

  sub_1007B3D8C(a1, 0LL, 0);
LABEL_73:
LABEL_75:
  if ((*(_DWORD *)(a1 + 172) & 0x80000000) != 0 || (int v29 = v42, v42 < 1))
  {
    sub_1000F0D38((void *)(a1 + 224));
    *(void *)(a1 + 200) = 0LL;
  }

  else
  {
    if (v42 > 0xA00000)
    {
      int v29 = 10485760;
      unsigned int v42 = 10485760;
    }

    uint64_t v31 = (uint64_t *)(a1 + 224);
    unsigned int v30 = *(void *)(a1 + 224);
    if (!v30 || (v32 = sub_10008D01C(v30), int v29 = v42, v32 != v42))
    {
      int v33 = operator new(0x30uLL);
      sub_1007BC050((uint64_t)v33, v29);
      sub_1007B7250(&__p, (uint64_t)v33);
      unsigned int v34 = *v31;
      if (*v31)
      {
        int v35 = sub_1007BC174((FILE **)__p.__r_.__value_.__l.__data_);
        sub_1007BC288(v34, v35);
      }

      sub_1000F2F30((void *)(a1 + 224), (uint64_t *)&__p);
      int v36 = (std::__shared_weak_count *)__p.__r_.__value_.__l.__size_;
      if (__p.__r_.__value_.__l.__size_)
      {
        uint64_t v37 = (unint64_t *)(__p.__r_.__value_.__l.__size_ + 8);
        do
          unsigned int v38 = __ldaxr(v37);
        while (__stlxr(v38 - 1, v37));
        if (!v38)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
    }

    *(void *)(a1 + 200) = sub_1007BC174(*(FILE ***)(a1 + 224));
    syslog(5, "%s,%s,logging locations to an internal buffer with capacity %d\n", "NOTICE", "CLLog", v42);
  }

    uint64_t v49 = (sqlite3_stmt *)sub_100019240(v32);
    sqlite3_reset(v49);
    uint64_t v50 = 0LL;
    if (!v32) {
      goto LABEL_62;
    }
    goto LABEL_61;
  }

  std::string::operator=((std::string *)(a5 + 40), a2);
  std::string::operator=((std::string *)(a5 + 88), a4);
  uint64_t v53 = (sqlite3_stmt *)sub_100019240(v32);
  uint64_t v54 = sqlite3_column_text(v53, 0);
  std::string::assign((std::string *)(a5 + 8), (const std::string::value_type *)v54);
  uint64_t v55 = (sqlite3_stmt *)sub_100019240(v32);
  *(_WORD *)(a5 + 32) = sqlite3_column_int(v55, 1);
  int v56 = (sqlite3_stmt *)sub_100019240(v32);
  *(_WORD *)(a5 + 34) = sqlite3_column_int(v56, 2);
  int v57 = (sqlite3_stmt *)sub_100019240(v32);
  *(_DWORD *)(a5 + 36) = sqlite3_column_int(v57, 3);
  int v58 = (sqlite3_stmt *)sub_100019240(v32);
  *(_DWORD *)(a5 + 112) = sqlite3_column_int(v58, 4);
  std::string::operator=((std::string *)(a5 + 64), a3);
  unsigned int v59 = (sqlite3_stmt *)sub_100019240(v32);
  sqlite3_reset(v59);
  uint64_t v50 = 1LL;
  if (v32) {
LABEL_61:
  }
    (*(void (**)(uint64_t))(*(void *)v32 + 8LL))(v32);
LABEL_62:
  sub_1001BA1BC(v74);
  *(void *)((char *)v75
  int v76 = v51;
  std::streambuf::~streambuf(&v77);
  std::ios::~ios(&v78);
  return v50;
}

  LODWORD(v4) = *(_DWORD *)(a2 + 144);
  v3 |= 0x80000000uLL;
  *(void *)(a1 + 156) = v3;
  *(_DWORD *)(a1 + 144) = v4;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x400) == 0)
  {
LABEL_26:
    if ((v2 & 0x800) == 0) {
      goto LABEL_27;
    }
    goto LABEL_62;
  }

  PB::TextFormatter::format(this, "minInertialZHighFreq", *(float *)(a1 + 100));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x200000) == 0)
  {
LABEL_23:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_62;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 60), 0x16u);
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x800) == 0)
  {
LABEL_24:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_62;
  }

  unint64_t v18 = *(void *)(a2 + 224);
  v5 |= 0x8000000uLL;
  *uint64_t v2 = v5;
  *(void *)(a1 + 224) = v18;
  uint64_t v4 = *v3;
  if ((*v3 & 0x2000000) == 0)
  {
LABEL_18:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_62;
  }

  PB::TextFormatter::format(this, "alertCanceledBecauseOfRetraction", *(void *)(a1 + 104));
  int v6 = *v5;
  if ((*v5 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_62;
  }

  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 208), 0x35u);
  uint64_t v5 = *v4;
  if ((*v4 & 0x4000000) == 0)
  {
LABEL_16:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_62;
  }

  unint64_t v18 = *(_BYTE *)(a2 + 152);
  v3 |= (unint64_t)&_mh_execute_header;
  *(void *)(a1 + 156) = v3;
  *(_BYTE *)(a1 + 152) = v18;
  uint64_t v2 = *(void *)(a2 + 156);
  if ((v2 & 0x20000) == 0)
  {
LABEL_27:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_62;
  }

  PB::TextFormatter::format(this, "numQuiescentBins", *(_DWORD *)(a1 + 100));
  uint64_t v5 = *(void *)(a1 + 156);
  if ((v5 & 0x100000) == 0)
  {
LABEL_24:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_62;
  }

  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 92), 0x17u);
  uint64_t v4 = *(void *)(v3 + 156);
  if ((v4 & 0x200000) == 0)
  {
LABEL_25:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_62;
  }

  int v35 = *(_BYTE *)(a2 + 384);
  v10 |= 0x100000u;
  *(_DWORD *)(a1 + 396) = v10;
  *(_BYTE *)(a1 + 384) = v35;
  int v9 = *(_DWORD *)(a2 + 396);
  if ((v9 & 0x400000) == 0)
  {
LABEL_28:
    if ((v9 & 0x40000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_62;
  }

  PB::TextFormatter::format(this, "aopTimestampOfImpact", *(void *)(a1 + 232));
  uint64_t v5 = *(_DWORD *)(a1 + 396);
  if ((v5 & 0x200000) == 0)
  {
LABEL_5:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_62;
  }

  uint64_t result = *(float *)(a2 + 208);
  v3 |= 0x800000000000uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 208) = result;
  uint64_t v2 = *(void *)(a2 + 216);
  if ((v2 & 0x400000000000LL) == 0)
  {
LABEL_14:
    if ((v2 & 0x10000000000LL) == 0) {
      goto LABEL_15;
    }
    goto LABEL_62;
  }

  PB::TextFormatter::format(this, "crownVariance", *(float *)(a1 + 56));
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x400) == 0)
  {
LABEL_11:
    if ((v5 & 0x800) == 0) {
      goto LABEL_12;
    }
    goto LABEL_62;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 204), 0xAu);
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x10000000000LL) == 0)
  {
LABEL_12:
    if ((v4 & 0x100000000000LL) == 0) {
      goto LABEL_13;
    }
    goto LABEL_62;
  }

        *(void *)(a1 + 8) = v25;
      }

      else
      {
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!(_DWORD)result) {
          return result;
        }
        int v3 = *((void *)this + 1);
        uint64_t v2 = *((void *)this + 2);
      }

      uint64_t v4 = *((unsigned __int8 *)this + 24);
      if (v3 >= v2 || *((_BYTE *)this + 24)) {
        return v4 == 0;
      }
    }

    int v15 = 0;
    unint64_t v16 = 0;
    int v11 = 0LL;
    if (v3 > v2) {
      uint64_t v2 = v3;
    }
    while (v2 != v3)
    {
      int v17 = v3 + 1;
      unint64_t v18 = *(_BYTE *)(v8 + v3);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      int v3 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        int v11 = 0LL;
        goto LABEL_20;
      }
    }

    uint64_t v4 = 1;
    *((_BYTE *)this + 24) = 1;
  }

  return v4 == 0;
}

  uint64_t v32 = *(_DWORD *)(a2 + 140);
  *(_DWORD *)(a1 + 212) |= 0x800u;
  *(_DWORD *)(a1 + 140) = v32;
  unint64_t v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x80) == 0)
  {
LABEL_31:
    if ((v10 & 2) == 0) {
      goto LABEL_32;
    }
    goto LABEL_62;
  }

  PB::TextFormatter::format(this, "nOldAccel", *(_DWORD *)(a1 + 160));
  int v9 = *(_DWORD *)(a1 + 212);
  if ((v9 & 0x20000) == 0)
  {
LABEL_23:
    if ((v9 & 0x40000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_62;
  }

  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 192), 0x14u);
  unint64_t v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x20) == 0)
  {
LABEL_29:
    if ((v14 & 8) == 0) {
      goto LABEL_30;
    }
    goto LABEL_62;
  }

  uint64_t result = *(float *)(a2 + 56);
  v3 |= 0x40u;
  *(_DWORD *)(a1 + 152) = v3;
  *(float *)(a1 + 56) = result;
  uint64_t v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 8) == 0)
  {
LABEL_33:
    if ((v2 & 0x80) == 0) {
      return result;
    }
LABEL_62:
    uint64_t result = *(float *)(a2 + 60);
    *(_DWORD *)(a1 + 152) = v3 | 0x80;
    *(float *)(a1 + 60) = result;
    return result;
  }

  PB::TextFormatter::format(this, "riseTimeTo80", *(float *)(a1 + 140));
  uint64_t v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x20) != 0) {
    goto LABEL_61;
  }
LABEL_30:
  if ((v5 & 0x10000000) != 0) {
LABEL_31:
  }
    PB::TextFormatter::format(this, "width", *(float *)(a1 + 144));
  return PB::TextFormatter::endObject(this);
}

  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 32), 0x1Du);
  if ((*(_DWORD *)(v3 + 152) & 0x80) != 0) {
    return PB::Writer::write(this, *(float *)(v3 + 60), 0x1Eu);
  }
  return result;
}

  int v28 = *(_DWORD *)(a2 + 68);
  v3 |= 0x200uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 68) = v28;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x400) == 0)
  {
LABEL_30:
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_62;
  }

  PB::TextFormatter::format(this, "metaFreefallTime", *(float *)(a1 + 128));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_62;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72), 0x1Au);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_28:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_62;
  }

  uint64_t v7 = *(_DWORD *)(a2 + 84);
  v3 |= 0x8000uLL;
  *(void *)(a1 + 172) = v3;
  *(_DWORD *)(a1 + 84) = v7;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x10000) == 0)
  {
LABEL_17:
    if ((v2 & 0x100000000000LL) == 0) {
      goto LABEL_18;
    }
    goto LABEL_62;
  }

  PB::TextFormatter::format(this, "kChaosAtMaxEnergyRO", *(float *)(a1 + 56));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x200) == 0)
  {
LABEL_14:
    if ((v5 & 0x4000000000LL) == 0) {
      goto LABEL_15;
    }
    goto LABEL_62;
  }

  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 88), 0xDu);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x100000000000LL) == 0)
  {
LABEL_15:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_62;
  }

        *(void *)(a1 + 8) = v25;
      }

      else
      {
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!(_DWORD)result) {
          return result;
        }
        int v3 = *((void *)this + 1);
        uint64_t v2 = *((void *)this + 2);
      }

      uint64_t v4 = *((unsigned __int8 *)this + 24);
      if (v3 >= v2 || *((_BYTE *)this + 24)) {
        return v4 == 0;
      }
    }

    int v15 = 0;
    unint64_t v16 = 0;
    int v11 = 0LL;
    if (v3 > v2) {
      uint64_t v2 = v3;
    }
    while (v2 != v3)
    {
      int v17 = v3 + 1;
      unint64_t v18 = *(_BYTE *)(v8 + v3);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      int v3 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        int v11 = 0LL;
        goto LABEL_20;
      }
    }

    uint64_t v4 = 1;
    *((_BYTE *)this + 24) = 1;
  }

  return v4 == 0;
}

  LODWORD(v4) = *(_DWORD *)(a2 + 152);
  v3 |= 0x200000000uLL;
  *(void *)(a1 + 164) = v3;
  *(_DWORD *)(a1 + 152) = v4;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x4000) == 0)
  {
LABEL_25:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_62;
  }

  PB::TextFormatter::format(this, "pedRawDistance", *(float *)(a1 + 92));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x80000) == 0)
  {
LABEL_22:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_62;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 76), 0x15u);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x8000) == 0)
  {
LABEL_23:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_62;
  }

        *(_DWORD *)(a1 + 8) = v25;
      }

      else
      {
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!(_DWORD)result) {
          return result;
        }
        int v3 = *((void *)this + 1);
        uint64_t v2 = *((void *)this + 2);
      }

      uint64_t v4 = *((unsigned __int8 *)this + 24);
      if (v3 >= v2 || *((_BYTE *)this + 24)) {
        return v4 == 0;
      }
    }

    int v15 = 0;
    unint64_t v16 = 0;
    int v11 = 0LL;
    if (v3 > v2) {
      uint64_t v2 = v3;
    }
    while (v2 != v3)
    {
      int v17 = v3 + 1;
      unint64_t v18 = *(_BYTE *)(v8 + v3);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      int v3 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        int v11 = 0LL;
        goto LABEL_20;
      }
    }

    uint64_t v4 = 1;
    *((_BYTE *)this + 24) = 1;
  }

  return v4 == 0;
}

  BOOL v27 = *(_DWORD *)(a2 + 60);
  v3 |= 0x100uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 60) = v27;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x200000) == 0)
  {
LABEL_29:
    if ((v2 & 0x200) == 0) {
      goto LABEL_30;
    }
    goto LABEL_62;
  }

  PB::TextFormatter::format(this, "regValRefAmbientWindowEvents", *(_DWORD *)(a1 + 124));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_26:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_62;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 112), 0x19u);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x200) == 0)
  {
LABEL_27:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_62;
  }

  LODWORD(v4) = *(_DWORD *)(a2 + 64);
  v3 |= 0x1000u;
  *(_DWORD *)(a1 + 136) = v3;
  *(_DWORD *)(a1 + 64) = v4;
  uint64_t v2 = *(_DWORD *)(a2 + 136);
  if ((v2 & 0x2000) == 0)
  {
LABEL_32:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_62;
  }

  PB::TextFormatter::format(this, "tooDark", *(_BYTE *)(a1 + 133));
  uint64_t v5 = *(_DWORD *)(a1 + 136);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_29:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_62;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 68), 0x1Cu);
  uint64_t v4 = *(_DWORD *)(v3 + 136);
  if ((v4 & 0x400000) == 0)
  {
LABEL_30:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_62;
  }

        *(void *)(a1 + 8) = v25;
      }

      else
      {
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!(_DWORD)result) {
          return result;
        }
        int v3 = *((void *)this + 1);
        uint64_t v2 = *((void *)this + 2);
      }

      uint64_t v4 = *((unsigned __int8 *)this + 24);
      if (v3 >= v2 || *((_BYTE *)this + 24)) {
        return v4 == 0;
      }
    }

    int v15 = 0;
    unint64_t v16 = 0;
    int v11 = 0LL;
    if (v3 > v2) {
      uint64_t v2 = v3;
    }
    while (v2 != v3)
    {
      int v17 = v3 + 1;
      unint64_t v18 = *(_BYTE *)(v8 + v3);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      int v3 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        int v11 = 0LL;
        goto LABEL_20;
      }
    }

    uint64_t v4 = 1;
    *((_BYTE *)this + 24) = 1;
  }

  return v4 == 0;
}

  int v21 = *(_DWORD *)(a2 + 172);
  v3 |= 0x20000000uLL;
  *(void *)(result + 212) = v3;
  *(_DWORD *)(result + 172) = v21;
  uint64_t v2 = *(void *)(a2 + 212);
  if ((v2 & 0x100) == 0)
  {
LABEL_23:
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_62;
  }

  PB::TextFormatter::format(this, "planarSaturationAtMaxChaos", *(float *)(a1 + 148));
  uint64_t v5 = *(void *)(a1 + 212);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_20:
    if ((v5 & 0x20) == 0) {
      goto LABEL_21;
    }
    goto LABEL_62;
  }

  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 72), 0x13u);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_21:
    if ((v4 & 0x100000000LL) == 0) {
      goto LABEL_22;
    }
    goto LABEL_62;
  }

        *(void *)(a1 + 8) = v25;
      }

      else
      {
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!(_DWORD)result) {
          return result;
        }
        int v3 = *((void *)this + 1);
        uint64_t v2 = *((void *)this + 2);
      }

      uint64_t v4 = *((unsigned __int8 *)this + 24);
      if (v3 >= v2 || *((_BYTE *)this + 24)) {
        return v4 == 0;
      }
    }

    int v15 = 0;
    unint64_t v16 = 0;
    int v11 = 0LL;
    if (v3 > v2) {
      uint64_t v2 = v3;
    }
    while (v2 != v3)
    {
      int v17 = v3 + 1;
      unint64_t v18 = *(_BYTE *)(v8 + v3);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      int v3 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        int v11 = 0LL;
        goto LABEL_20;
      }
    }

    uint64_t v4 = 1;
    *((_BYTE *)this + 24) = 1;
  }

  return v4 == 0;
}

  uint64_t result = *(double *)(a2 + 232);
  v3 |= 0x10000000u;
  *(_DWORD *)(a1 + 248) = v3;
  *(double *)(a1 + 232) = result;
  uint64_t v2 = *(_DWORD *)(a2 + 248);
  if ((v2 & 0x20000000) == 0)
  {
LABEL_33:
    if ((v2 & 0x2000000) == 0) {
      return result;
    }
LABEL_62:
    uint64_t result = *(double *)(a2 + 208);
    *(_DWORD *)(a1 + 248) = v3 | 0x2000000;
    *(double *)(a1 + 208) = result;
    return result;
  }

  PB::TextFormatter::format(this, "allBoutsSwingIndexOfHarmonicityVtMedian", *(double *)(a1 + 224));
  uint64_t v5 = *(_DWORD *)(a1 + 248);
  if ((v5 & 0x10000000) != 0) {
    goto LABEL_61;
  }
LABEL_30:
  if ((v5 & 0x20000000) != 0) {
LABEL_31:
  }
    PB::TextFormatter::format(this, "allBoutsSwingIndexOfHarmonicityVtQ95", *(double *)(a1 + 240));
  return PB::TextFormatter::endObject(this);
}

  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 240), 0x1Du);
  if ((*(_DWORD *)(v3 + 248) & 0x2000000) != 0) {
    return PB::Writer::write(this, *(double *)(v3 + 208), 0x1Eu);
  }
  return result;
}

        *(_DWORD *)(a1 + 16) = v25;
      }

      else
      {
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!(_DWORD)result) {
          return result;
        }
        int v3 = *((void *)this + 1);
        uint64_t v2 = *((void *)this + 2);
      }

      uint64_t v4 = *((unsigned __int8 *)this + 24);
      if (v3 >= v2 || *((_BYTE *)this + 24)) {
        return v4 == 0;
      }
    }

    int v15 = 0;
    unint64_t v16 = 0;
    int v11 = 0LL;
    if (v3 > v2) {
      uint64_t v2 = v3;
    }
    while (v2 != v3)
    {
      int v17 = v3 + 1;
      unint64_t v18 = *(_BYTE *)(v8 + v3);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      int v3 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        int v11 = 0LL;
        goto LABEL_20;
      }
    }

    uint64_t v4 = 1;
    *((_BYTE *)this + 24) = 1;
  }

  return v4 == 0;
}

  PB::TextFormatter::format(this, "dailySteps30daysMax", *(double *)(a1 + 32));
  uint64_t v5 = *(_DWORD *)(a1 + 244);
  if ((v5 & 0x10) == 0)
  {
LABEL_7:
    if ((v5 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_62;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 228), 6u);
  uint64_t v4 = *(_DWORD *)(v3 + 244);
  if ((v4 & 0x2000000) == 0)
  {
LABEL_7:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_62;
  }

        *(_DWORD *)(a1 + 12) = v25;
      }

      else
      {
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!(_DWORD)result) {
          return result;
        }
        int v3 = *((void *)this + 1);
        uint64_t v2 = *((void *)this + 2);
      }

      uint64_t v4 = *((unsigned __int8 *)this + 24);
      if (v3 >= v2 || *((_BYTE *)this + 24)) {
        return v4 == 0;
      }
    }

    int v15 = 0;
    unint64_t v16 = 0;
    int v11 = 0LL;
    if (v3 > v2) {
      uint64_t v2 = v3;
    }
    while (v2 != v3)
    {
      int v17 = v3 + 1;
      unint64_t v18 = *(_BYTE *)(v8 + v3);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      int v3 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        int v11 = 0LL;
        goto LABEL_20;
      }
    }

    uint64_t v4 = 1;
    *((_BYTE *)this + 24) = 1;
  }

  return v4 == 0;
}

        *(_DWORD *)(a1 + 12) = v25;
      }

      else
      {
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!(_DWORD)result) {
          return result;
        }
        int v3 = *((void *)this + 1);
        uint64_t v2 = *((void *)this + 2);
      }

      uint64_t v4 = *((unsigned __int8 *)this + 24);
      if (v3 >= v2 || *((_BYTE *)this + 24)) {
        return v4 == 0;
      }
    }

    int v15 = 0;
    unint64_t v16 = 0;
    int v11 = 0LL;
    if (v3 > v2) {
      uint64_t v2 = v3;
    }
    while (v2 != v3)
    {
      int v17 = v3 + 1;
      unint64_t v18 = *(_BYTE *)(v8 + v3);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      int v3 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        int v11 = 0LL;
        goto LABEL_20;
      }
    }

    uint64_t v4 = 1;
    *((_BYTE *)this + 24) = 1;
  }

  return v4 == 0;
}

        *(void *)(a1 + 8) = v25;
      }

      else
      {
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!(_DWORD)result) {
          return result;
        }
        int v3 = *((void *)this + 1);
        uint64_t v2 = *((void *)this + 2);
      }

      uint64_t v4 = *((unsigned __int8 *)this + 24);
      if (v3 >= v2 || *((_BYTE *)this + 24)) {
        return v4 == 0;
      }
    }

    int v15 = 0;
    unint64_t v16 = 0;
    int v11 = 0LL;
    if (v3 > v2) {
      uint64_t v2 = v3;
    }
    while (v2 != v3)
    {
      int v17 = v3 + 1;
      unint64_t v18 = *(_BYTE *)(v8 + v3);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      int v3 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        int v11 = 0LL;
        goto LABEL_20;
      }
    }

    uint64_t v4 = 1;
    *((_BYTE *)this + 24) = 1;
  }

  return v4 == 0;
}

  unint64_t v10 = *(_BYTE *)(a2 + 176);
  v3 |= 0x8000000000uLL;
  *(void *)(a1 + 184) = v3;
  *(_BYTE *)(a1 + 176) = v10;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x2000) == 0)
  {
LABEL_18:
    if ((v2 & 0x200000000LL) == 0) {
      goto LABEL_19;
    }
    goto LABEL_62;
  }

  PB::TextFormatter::format(this, "endTime", *(double *)(a1 + 8));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 2) == 0)
  {
LABEL_15:
    if ((v5 & 0x20000000000LL) == 0) {
      goto LABEL_16;
    }
    goto LABEL_62;
  }

  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 72), 0xEu);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x200000000LL) == 0)
  {
LABEL_16:
    if ((v4 & 0x4000000000LL) == 0) {
      goto LABEL_17;
    }
    goto LABEL_62;
  }

  int v29 = *(void *)(a2 + 128);
  v3 |= 0x8000u;
  *(_DWORD *)(result + 220) = v3;
  *(void *)(result + 128) = v29;
  uint64_t v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x400) == 0)
  {
LABEL_31:
    if ((v2 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_62;
  }

  PB::TextFormatter::format(this, "speedAccuracy", *(double *)(a1 + 144));
  uint64_t v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x40000) == 0)
  {
LABEL_28:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_62;
  }

  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 88), 0x1Bu);
  uint64_t v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x80000000) == 0)
  {
LABEL_29:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_62;
  }

  int v28 = *(_DWORD *)(a2 + 156);
  v5 |= 0x20000000uLL;
  *(void *)(a1 + 192) = v5;
  *(_DWORD *)(a1 + 156) = v28;
  uint64_t v4 = *(void *)(a2 + 192);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_20:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_62;
  }

  PB::TextFormatter::format(this, "rawMotionType", *(_DWORD *)(a1 + 120));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x200000) == 0)
  {
LABEL_19:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_62;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 128), 0x12u);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x200000) == 0)
  {
LABEL_20:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_62;
  }

  int v11 = *(_DWORD *)(a2 + 132);
  v3 |= 0x40000000uLL;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 132) = v11;
  uint64_t v2 = *(void *)(a2 + 188);
  if ((v2 & 0x200) == 0)
  {
LABEL_13:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_62;
  }

  PB::TextFormatter::format(this, "auxUserAccelInertial_Z", *(float *)(a1 + 44));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x200) == 0)
  {
LABEL_10:
    if ((v5 & 0x400) == 0) {
      goto LABEL_11;
    }
    goto LABEL_62;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48), 9u);
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x200000) == 0)
  {
LABEL_11:
    if ((v4 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_62;
  }

  int v29 = *(_BYTE *)(a2 + 121);
  v3 |= 0x4000000u;
  *(_DWORD *)(result + 128) = v3;
  *(_BYTE *)(result + 121) = v29;
  uint64_t v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x800) == 0)
  {
LABEL_31:
    if ((v2 & 1) == 0) {
      goto LABEL_32;
    }
    goto LABEL_62;
  }

  PB::TextFormatter::format(this, "srcAvgOmegaShort", *(float *)(a1 + 100));
  uint64_t v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x200000) == 0)
  {
LABEL_28:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_62;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 64), 0x1Bu);
  uint64_t v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 1) == 0)
  {
LABEL_29:
    if ((v4 & 2) == 0) {
      goto LABEL_30;
    }
    goto LABEL_62;
  }

  uint64_t v31 = *(_BYTE *)(a2 + 161);
  *(_DWORD *)(a1 + 164) |= 0x80000000;
  *(_BYTE *)(a1 + 161) = v31;
  unint64_t v10 = *(_DWORD *)(a2 + 164);
  if ((v10 & 0x800000) == 0)
  {
LABEL_30:
    if ((v10 & 0x20) == 0) {
      goto LABEL_31;
    }
    goto LABEL_62;
  }

  PB::TextFormatter::format(this, "rHat_Y", *(float *)(a1 + 124));
  int v9 = *(_DWORD *)(a1 + 164);
  if ((v9 & 0x10000) == 0)
  {
LABEL_25:
    if ((v9 & 0x10000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_62;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72), 0x16u);
  int v11 = *(_DWORD *)(v3 + 164);
  if ((v11 & 0x20000000) == 0)
  {
LABEL_29:
    if ((v11 & 0x80000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_62;
  }

  uint64_t result = *(double *)(a2 + 40);
  v3 |= 0x10uLL;
  *(void *)(a1 + 224) = v3;
  *(double *)(a1 + 40) = result;
  uint64_t v2 = *(void *)(a2 + 224);
  if ((v2 & 0x100000000LL) == 0)
  {
LABEL_28:
    if ((v2 & 0x100) == 0) {
      goto LABEL_29;
    }
    goto LABEL_62;
  }

  PB::TextFormatter::format(this, "strideLengthUncalibrated", *(double *)(a1 + 104));
  uint64_t v5 = *(void *)(a1 + 224);
  if ((v5 & 0x2000) == 0)
  {
LABEL_25:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_62;
  }

  uint64_t result = PB::Writer::write(this, *(_BYTE *)(v3 + 219), 0x18u);
  uint64_t v4 = *(void *)(v3 + 224);
  if ((v4 & 0x100) == 0)
  {
LABEL_26:
    if ((v4 & 0x800) == 0) {
      goto LABEL_27;
    }
    goto LABEL_62;
  }

uint64_t sub_1001C4BD8(uint64_t a1, unint64_t a2)
{
  unsigned int v3 = *(_DWORD *)(a1 + 228);
  if (!(_BYTE)v3)
  {
    uint64_t v5 = 0LL;
    goto LABEL_46;
  }

  if ((v3 & 1) != 0)
  {
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1019A0AD8 + 8);
    }
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001C0720(v6, a2);
    int v8 = (int)v7;
    else {
      int v9 = 1;
    }
    int v4 = v8 + v9 + 1;
    unsigned int v3 = *(_DWORD *)(a1 + 228);
    if ((v3 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }

  int v4 = 0;
  if ((v3 & 2) != 0)
  {
LABEL_12:
    unint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
    if ((v10 & 0x80000000) != 0)
    {
      int v11 = 10;
    }

    else if (v10 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
      unsigned int v3 = *(_DWORD *)(a1 + 228);
    }

    else
    {
      int v11 = 1;
    }

    v4 += v11 + 1;
  }

void sub_1001C4EC0(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1001C4F0C()
{
  return 1LL;
}

void *sub_1001C4F14@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.Raven.EstimatorActivity");
}

void sub_1001C4F24(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1018273B8;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0AE0 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1001C4F78(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

double sub_1001C4F8C()
{
  v0 = (char *)operator new(0xA8uLL);
  *(void *)v0 = &off_1018273B8;
  *((_DWORD *)v0 + 39) = 0;
  *((_DWORD *)v0 + 40) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_OWORD *)(v0 + 88) = 0u;
  *(_OWORD *)(v0 + 104) = 0u;
  *(_OWORD *)(v0 + 120) = 0u;
  *(_OWORD *)(v0 + 136) = 0u;
  *((_WORD *)v0 + 76) = 0;
  return result;
}

uint64_t sub_1001C4FE0( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 160) |= 1u;
        int v8 = *(char **)(a1 + 8);
        if (!v8)
        {
          int v8 = (char *)operator new(0x38uLL);
          *(void *)int v8 = off_101827160;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *(_OWORD *)(v8 + 40) = 0u;
          *(void *)(a1 + 8) = v8;
        }

        int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v42)) {
            return 0LL;
          }
        }

        else
        {
          v42[0] = *v9;
          *((void *)this + 1) = v9 + 1;
        }

        int v13 = *((_DWORD *)this + 14);
        int v14 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v13 + 1;
        if (v13 >= v14) {
          return 0LL;
        }
        int v15 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v42[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v15);
        int v17 = *((_DWORD *)this + 14);
        BOOL v18 = __OFSUB__(v17, 1);
        int v19 = v17 - 1;
        if (v19 < 0 == v18) {
          *((_DWORD *)this + 14) = v19;
        }
        int v20 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v20 + 1;
        goto LABEL_63;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_51;
        }
LABEL_63:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v42) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = *(void *)v42;
        *(_DWORD *)(a1 + 160) |= 2u;
        unsigned int v21 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v21 + 1;
LABEL_67:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v42) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 24) = *(void *)v42;
        *(_DWORD *)(a1 + 160) |= 4u;
        unsigned int v22 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v22 + 1;
LABEL_71:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v42) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 32) = *(void *)v42;
        *(_DWORD *)(a1 + 160) |= 8u;
        unsigned int v23 = (_BYTE *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        int v11 = v23 + 1;
        *((void *)this + 1) = v11;
LABEL_75:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v42);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v24 = v42[0];
          int v25 = (_BYTE *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }

        else
        {
          unsigned int v24 = *v11;
          int v25 = v11 + 1;
          *((void *)this + 1) = v25;
        }

        *(_BYTE *)(a1 + 152) = v24 != 0;
        *(_DWORD *)(a1 + 160) |= 0x10u;
        unint64_t v12 = v25 + 1;
        *((void *)this + 1) = v12;
LABEL_83:
        if ((unint64_t)v12 >= v10 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v42);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v27 = v42[0];
          int v28 = (_BYTE *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }

        else
        {
          unsigned int v27 = *v12;
          int v28 = v12 + 1;
          *((void *)this + 1) = v28;
        }

        *(_BYTE *)(a1 + 153) = v27 != 0;
        *(_DWORD *)(a1 + 160) |= 0x20u;
        *((void *)this + 1) = v28 + 1;
LABEL_91:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v42) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 40) = *(void *)v42;
        *(_DWORD *)(a1 + 160) |= 0x40u;
        int v29 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v29 + 1;
LABEL_95:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v42) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 48) = *(void *)v42;
        *(_DWORD *)(a1 + 160) |= 0x80u;
        unsigned int v30 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v30 + 1;
LABEL_99:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v42) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 56) = *(void *)v42;
        *(_DWORD *)(a1 + 160) |= 0x100u;
        uint64_t v31 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v31 + 1;
LABEL_103:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v42) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 64) = *(void *)v42;
        *(_DWORD *)(a1 + 160) |= 0x200u;
        uint64_t v32 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v32 + 1;
LABEL_107:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v42) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 72) = *(void *)v42;
        *(_DWORD *)(a1 + 160) |= 0x400u;
        int v33 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v33 + 1;
LABEL_111:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v42) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 80) = *(void *)v42;
        *(_DWORD *)(a1 + 160) |= 0x800u;
        unsigned int v34 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v34 + 1;
LABEL_115:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v42) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 88) = *(void *)v42;
        *(_DWORD *)(a1 + 160) |= 0x1000u;
        int v35 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v35 + 1;
LABEL_119:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v42) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 96) = *(void *)v42;
        *(_DWORD *)(a1 + 160) |= 0x2000u;
        int v36 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v36 + 1;
LABEL_123:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v42) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 104) = *(void *)v42;
        *(_DWORD *)(a1 + 160) |= 0x4000u;
        uint64_t v37 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v37 + 2;
LABEL_128:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v42) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 112) = *(void *)v42;
        *(_DWORD *)(a1 + 160) |= 0x8000u;
        unsigned int v38 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v38 + 2;
LABEL_133:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v42) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 120) = *(void *)v42;
        *(_DWORD *)(a1 + 160) |= 0x10000u;
        int v39 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v39 + 2;
LABEL_138:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v42) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 128) = *(void *)v42;
        *(_DWORD *)(a1 + 160) |= 0x20000u;
        unsigned int v40 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v40 + 2;
LABEL_143:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v42) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 136) = *(void *)v42;
        *(_DWORD *)(a1 + 160) |= 0x40000u;
        int v41 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v41 + 2;
LABEL_148:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v42) & 1) != 0)
        {
          *(void *)(a1 + 144) = *(void *)v42;
          *(_DWORD *)(a1 + 160) |= 0x80000u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1LL;
            *((_BYTE *)this + 36) = 1;
            return result;
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_67;
        }
        goto LABEL_51;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_71;
        }
        goto LABEL_51;
      case 5u:
        int v7 = TagFallback & 7;
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_75;
      case 6u:
        int v7 = TagFallback & 7;
        unint64_t v12 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_83;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_91;
        }
        goto LABEL_51;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_95;
        }
        goto LABEL_51;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_99;
        }
        goto LABEL_51;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_103;
        }
        goto LABEL_51;
      case 0xBu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_107;
        }
        goto LABEL_51;
      case 0xCu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_111;
        }
        goto LABEL_51;
      case 0xDu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_115;
        }
        goto LABEL_51;
      case 0xEu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_119;
        }
        goto LABEL_51;
      case 0xFu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_123;
        }
        goto LABEL_51;
      case 0x10u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_128;
        }
        goto LABEL_51;
      case 0x11u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_133;
        }
        goto LABEL_51;
      case 0x12u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_138;
        }
        goto LABEL_51;
      case 0x13u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_143;
        }
        goto LABEL_51;
      case 0x14u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_51;
        }
        goto LABEL_148;
      default:
        int v7 = TagFallback & 7;
LABEL_51:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001C58A8( uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 160);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0AE0 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 160);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_26;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  (int)a2,  *(double *)(v5 + 16),  a3);
  int v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_27;
  }

uint64_t sub_1001C5B0C(uint64_t a1, unint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 160);
  if ((_BYTE)v3)
  {
    if ((v3 & 1) != 0)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_1019A0AE0 + 8);
      }
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001C0720(v6, a2);
      int v9 = (int)v7;
      else {
        int v10 = 1;
      }
      unsigned int v4 = v9 + v10 + 1;
      int v3 = *(_DWORD *)(a1 + 160);
    }

    else
    {
      unsigned int v4 = 0;
    }

    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 2;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 2;
    }
    if ((v3 & 0x40) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x80) != 0) {
      uint64_t result = v4 + 9;
    }
    else {
      uint64_t result = v4;
    }
  }

  else
  {
    uint64_t result = 0LL;
  }

  if ((v3 & 0xFF00) != 0)
  {
    unsigned int v11 = result + 9;
    if ((v3 & 0x100) == 0) {
      unsigned int v11 = result;
    }
    if ((v3 & 0x200) != 0) {
      v11 += 9;
    }
    if ((v3 & 0x400) != 0) {
      v11 += 9;
    }
    if ((v3 & 0x800) != 0) {
      v11 += 9;
    }
    if ((v3 & 0x1000) != 0) {
      v11 += 9;
    }
    if ((v3 & 0x2000) != 0) {
      v11 += 9;
    }
    if ((v3 & 0x4000) != 0) {
      v11 += 9;
    }
    if ((v3 & 0x8000) != 0) {
      uint64_t result = v11 + 10;
    }
    else {
      uint64_t result = v11;
    }
  }

  if ((v3 & 0xFF0000) != 0)
  {
    unsigned int v12 = result + 10;
    if ((v3 & 0x10000) == 0) {
      unsigned int v12 = result;
    }
    if ((v3 & 0x20000) != 0) {
      v12 += 10;
    }
    if ((v3 & 0x40000) != 0) {
      v12 += 10;
    }
    if ((v3 & 0x80000) != 0) {
      uint64_t result = v12 + 10;
    }
    else {
      uint64_t result = v12;
    }
  }

  *(_DWORD *)(a1 + 156) = result;
  return result;
}

double sub_1001C5C80(uint64_t a1, void *lpsrc)
{
  return sub_1001BEF74(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001C5CCC()
{
  return 1LL;
}

void *sub_1001C5CD4@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.Raven.NrParameters");
}

void sub_1001C5CE4(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_101827430;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0AE8 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1001C5D38(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

double sub_1001C5D4C()
{
  v0 = (char *)operator new(0x68uLL);
  *(void *)v0 = &off_101827430;
  *((_DWORD *)v0 + 23) = 0;
  *((_DWORD *)v0 + 24) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *((_WORD *)v0 + 44) = 0;
  return result;
}

uint64_t sub_1001C5D90( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 96) |= 1u;
        unsigned int v8 = *(char **)(a1 + 8);
        if (!v8)
        {
          unsigned int v8 = (char *)operator new(0x38uLL);
          *(void *)unsigned int v8 = off_101827160;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *(_OWORD *)(v8 + 40) = 0u;
          *(void *)(a1 + 8) = v8;
        }

        int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v34)) {
            return 0LL;
          }
        }

        else
        {
          v34[0] = *v9;
          *((void *)this + 1) = v9 + 1;
        }

        int v13 = *((_DWORD *)this + 14);
        int v14 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v13 + 1;
        if (v13 >= v14) {
          return 0LL;
        }
        int v15 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v15);
        int v17 = *((_DWORD *)this + 14);
        BOOL v18 = __OFSUB__(v17, 1);
        int v19 = v17 - 1;
        if (v19 < 0 == v18) {
          *((_DWORD *)this + 14) = v19;
        }
        int v20 = (_BYTE *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        unsigned int v11 = v20 + 1;
        *((void *)this + 1) = v11;
        goto LABEL_47;
      case 2u:
        int v7 = TagFallback & 7;
        unsigned int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_47:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v34);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v21 = v34[0];
          unsigned int v22 = (_BYTE *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }

        else
        {
          unsigned int v21 = *v11;
          unsigned int v22 = v11 + 1;
          *((void *)this + 1) = v22;
        }

        *(_BYTE *)(a1 + 88) = v21 != 0;
        *(_DWORD *)(a1 + 96) |= 2u;
        unsigned int v12 = v22 + 1;
        *((void *)this + 1) = v12;
LABEL_55:
        if ((unint64_t)v12 >= v10 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v34);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v24 = v34[0];
          int v25 = (_BYTE *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }

        else
        {
          unsigned int v24 = *v12;
          int v25 = v12 + 1;
          *((void *)this + 1) = v25;
        }

        *(_BYTE *)(a1 + 89) = v24 != 0;
        *(_DWORD *)(a1 + 96) |= 4u;
        *((void *)this + 1) = v25 + 1;
LABEL_63:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v34) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = *(void *)v34;
        *(_DWORD *)(a1 + 96) |= 8u;
        int v26 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v26 + 1;
LABEL_67:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v34) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 24) = *(void *)v34;
        *(_DWORD *)(a1 + 96) |= 0x10u;
        unsigned int v27 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v27 + 1;
LABEL_71:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v34) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 32) = *(void *)v34;
        *(_DWORD *)(a1 + 96) |= 0x20u;
        int v28 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v28 + 1;
LABEL_75:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v34) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 40) = *(void *)v34;
        *(_DWORD *)(a1 + 96) |= 0x40u;
        int v29 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v29 + 1;
LABEL_79:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v34) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 48) = *(void *)v34;
        *(_DWORD *)(a1 + 96) |= 0x80u;
        unsigned int v30 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v30 + 1;
LABEL_83:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v34) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 56) = *(void *)v34;
        *(_DWORD *)(a1 + 96) |= 0x100u;
        uint64_t v31 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v31 + 1;
LABEL_87:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v34) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 64) = *(void *)v34;
        *(_DWORD *)(a1 + 96) |= 0x200u;
        uint64_t v32 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v32 + 1;
LABEL_91:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v34) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 72) = *(void *)v34;
        *(_DWORD *)(a1 + 96) |= 0x400u;
        int v33 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v33 + 1;
LABEL_95:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v34) & 1) != 0)
        {
          *(void *)(a1 + 80) = *(void *)v34;
          *(_DWORD *)(a1 + 96) |= 0x800u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1LL;
            *((_BYTE *)this + 36) = 1;
            return result;
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v7 = TagFallback & 7;
        unsigned int v12 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_55;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_63;
        }
        goto LABEL_35;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_67;
        }
        goto LABEL_35;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_71;
        }
        goto LABEL_35;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_75;
        }
        goto LABEL_35;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_79;
        }
        goto LABEL_35;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_83;
        }
        goto LABEL_35;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_87;
        }
        goto LABEL_35;
      case 0xBu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_91;
        }
        goto LABEL_35;
      case 0xCu:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_35;
        }
        goto LABEL_95;
      default:
        int v7 = TagFallback & 7;
LABEL_35:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001C6354( uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 96);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0AE8 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 96);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(unsigned __int8 *)(v5 + 88),  (BOOL)a2,  a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }

uint64_t sub_1001C64D8(uint64_t a1, unint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 96);
  if ((_BYTE)v3)
  {
    if ((v3 & 1) != 0)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_1019A0AE8 + 8);
      }
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001C0720(v6, a2);
      int v9 = (int)v7;
      else {
        int v10 = 1;
      }
      unsigned int v4 = v9 + v10 + 1;
      int v3 = *(_DWORD *)(a1 + 96);
    }

    else
    {
      unsigned int v4 = 0;
    }

    if ((v3 & 2) != 0) {
      v4 += 2;
    }
    if ((v3 & 4) != 0) {
      v4 += 2;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x40) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x80) != 0) {
      uint64_t result = v4 + 9;
    }
    else {
      uint64_t result = v4;
    }
  }

  else
  {
    uint64_t result = 0LL;
  }

  if ((v3 & 0xFF00) != 0)
  {
    unsigned int v11 = result + 9;
    if ((v3 & 0x100) == 0) {
      unsigned int v11 = result;
    }
    if ((v3 & 0x200) != 0) {
      v11 += 9;
    }
    if ((v3 & 0x400) != 0) {
      v11 += 9;
    }
    if ((v3 & 0x800) != 0) {
      uint64_t result = v11 + 9;
    }
    else {
      uint64_t result = v11;
    }
  }

  *(_DWORD *)(a1 + 92) = result;
  return result;
}

double sub_1001C65E4(uint64_t a1, void *lpsrc)
{
  return sub_1001BF2D0(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001C6630()
{
  return 1LL;
}

void *sub_1001C6638@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.Raven.NrBiases");
}

void *sub_1001C6648(void *result)
{
  if ((void *)qword_1019A0AF0 != result)
  {
    int v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
    }
    uint64_t v4 = v1[3];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
    }
    uint64_t v5 = v1[4];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
    }
    uint64_t v6 = v1[5];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
    }
    uint64_t v7 = v1[6];
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
    }
    uint64_t v8 = v1[7];
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
    }
    uint64_t v9 = v1[8];
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8LL))(v9);
    }
    uint64_t v10 = v1[9];
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8LL))(v10);
    }
    uint64_t result = (void *)v1[10];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_1001C6744(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018274A8;
  sub_1001C6648(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001C6774(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018274A8;
  sub_1001C6648(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v2);
}

double sub_1001C67A8()
{
  v0 = (char *)operator new(0x60uLL);
  *(void *)v0 = off_1018274A8;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *((void *)v0 + 11) = 0LL;
  return result;
}

uint64_t sub_1001C67E8(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 92);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      double result = *(void *)(result + 8);
      if (result)
      {
        double result = sub_1001C00BC(result);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }

    *(void *)(v1 + 64) = 0LL;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
  }

  if ((v2 & 0xFF00) != 0)
  {
    *(void *)(v1 + 72) = 0LL;
    *(void *)(v1 + 80) = 0LL;
  }

  *(_DWORD *)(v1 + 92) = 0;
  return result;
}

uint64_t sub_1001C6844(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 132);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      double result = *(void *)(result + 8);
      if (result)
      {
        double result = sub_1001C00BC(result);
        int v2 = *(_DWORD *)(v1 + 132);
      }
    }

    *(void *)(v1 + 64) = 0LL;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
  }

  if ((v2 & 0xFF00) != 0)
  {
    *(void *)(v1 + 120) = 0LL;
    *(_OWORD *)(v1 + 104) = 0u;
    *(_OWORD *)(v1 + 88) = 0u;
    *(_OWORD *)(v1 + 72) = 0u;
  }

  *(_DWORD *)(v1 + 132) = 0;
  return result;
}

uint64_t sub_1001C68B0(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 92);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      double result = *(void *)(result + 8);
      if (result)
      {
        double result = sub_1001C00BC(result);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }

    *(void *)(v1 + 64) = 0LL;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
  }

  if ((v2 & 0xFF00) != 0)
  {
    *(void *)(v1 + 72) = 0LL;
    *(void *)(v1 + 80) = 0LL;
  }

  *(_DWORD *)(v1 + 92) = 0;
  return result;
}

uint64_t sub_1001C690C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 92);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      double result = *(void *)(result + 8);
      if (result)
      {
        double result = sub_1001C00BC(result);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }

    *(void *)(v1 + 64) = 0LL;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
  }

  if ((v2 & 0xFF00) != 0)
  {
    *(void *)(v1 + 72) = 0LL;
    *(void *)(v1 + 80) = 0LL;
  }

  *(_DWORD *)(v1 + 92) = 0;
  return result;
}

uint64_t sub_1001C6968(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 132);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      double result = *(void *)(result + 8);
      if (result)
      {
        double result = sub_1001C00BC(result);
        int v2 = *(_DWORD *)(v1 + 132);
      }
    }

    *(void *)(v1 + 64) = 0LL;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
  }

  if ((v2 & 0xFF00) != 0)
  {
    *(void *)(v1 + 120) = 0LL;
    *(_OWORD *)(v1 + 104) = 0u;
    *(_OWORD *)(v1 + 88) = 0u;
    *(_OWORD *)(v1 + 72) = 0u;
  }

  *(_DWORD *)(v1 + 132) = 0;
  return result;
}

uint64_t sub_1001C69D4(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 92);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      double result = *(void *)(result + 8);
      if (result)
      {
        double result = sub_1001C00BC(result);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }

    *(void *)(v1 + 64) = 0LL;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
  }

  if ((v2 & 0xFF00) != 0)
  {
    *(void *)(v1 + 72) = 0LL;
    *(void *)(v1 + 80) = 0LL;
  }

  *(_DWORD *)(v1 + 92) = 0;
  return result;
}

uint64_t sub_1001C6A30(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 92);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      double result = *(void *)(result + 8);
      if (result)
      {
        double result = sub_1001C00BC(result);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }

    *(void *)(v1 + 64) = 0LL;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
  }

  if ((v2 & 0xFF00) != 0)
  {
    *(void *)(v1 + 72) = 0LL;
    *(void *)(v1 + 80) = 0LL;
  }

  *(_DWORD *)(v1 + 92) = 0;
  return result;
}

uint64_t sub_1001C6A8C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 92);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      double result = *(void *)(result + 8);
      if (result)
      {
        double result = sub_1001C00BC(result);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }

    *(void *)(v1 + 64) = 0LL;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
  }

  if ((v2 & 0xFF00) != 0)
  {
    *(void *)(v1 + 72) = 0LL;
    *(void *)(v1 + 80) = 0LL;
  }

  *(_DWORD *)(v1 + 92) = 0;
  return result;
}

uint64_t sub_1001C6AE8(uint64_t result)
{
  uint64_t v1 = result;
  if (*(_BYTE *)(result + 60))
  {
    if ((*(_BYTE *)(result + 60) & 1) != 0)
    {
      double result = *(void *)(result + 8);
      if (result) {
        double result = sub_1001C00BC(result);
      }
    }

    *(void *)(v1 + 48) = 0LL;
    *(_OWORD *)(v1 + 16) = 0u;
    *(_OWORD *)(v1 + 32) = 0u;
  }

  *(_DWORD *)(v1 + 60) = 0;
  return result;
}

uint64_t sub_1001C6B2C( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 < *((void *)this + 2) && (*v5 & 0x80000000) == 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
      goto LABEL_6;
    }

    TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = (_DWORD)TagFallback;
    if (!(_DWORD)TagFallback) {
      return 1LL;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 92) |= 1u;
        uint64_t v8 = *(char **)(a1 + 8);
        if (!v8)
        {
          uint64_t v8 = (char *)operator new(0x38uLL);
          *(void *)uint64_t v8 = off_101827160;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *(_OWORD *)(v8 + 40) = 0u;
          *(void *)(a1 + 8) = v8;
        }

        uint64_t v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v99)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v99 = *v9;
          *((void *)this + 1) = v9 + 1;
        }

        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0LL;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v99);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        int v17 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v17 + 1;
        goto LABEL_43;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_31;
        }
LABEL_43:
        *(_DWORD *)(a1 + 92) |= 2u;
        BOOL v18 = *(char **)(a1 + 16);
        if (!v18)
        {
          BOOL v18 = (char *)operator new(0x60uLL);
          *(void *)BOOL v18 = &off_101827520;
          *(_OWORD *)(v18 + 8) = 0u;
          *(_OWORD *)(v18 + 24) = 0u;
          *(_OWORD *)(v18 + 40) = 0u;
          *(_OWORD *)(v18 + 56) = 0u;
          *(_OWORD *)(v18 + 72) = 0u;
          *((void *)v18 + 11) = 0LL;
          *(void *)(a1 + 16) = v18;
        }

        int v19 = (char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v99)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v99 = *v19;
          *((void *)this + 1) = v19 + 1;
        }

        int v20 = *((_DWORD *)this + 14);
        int v21 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v20 + 1;
        if (v20 >= v21) {
          return 0LL;
        }
        int v22 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v99);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v22);
        int v24 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v24, 1);
        int v25 = v24 - 1;
        if (v25 < 0 == v15) {
          *((_DWORD *)this + 14) = v25;
        }
        int v26 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v26 + 1;
LABEL_57:
        *(_DWORD *)(a1 + 92) |= 4u;
        unsigned int v27 = *(char **)(a1 + 24);
        if (!v27)
        {
          unsigned int v27 = (char *)operator new(0x88uLL);
          *(void *)unsigned int v27 = &off_101827598;
          *(_OWORD *)(v27 + 8) = 0u;
          *(_OWORD *)(v27 + 24) = 0u;
          *(_OWORD *)(v27 + 40) = 0u;
          *(_OWORD *)(v27 + 56) = 0u;
          *(_OWORD *)(v27 + 72) = 0u;
          *(_OWORD *)(v27 + 88) = 0u;
          *(_OWORD *)(v27 + 104) = 0u;
          *(_OWORD *)(v27 + 120) = 0u;
          *(void *)(a1 + 24) = v27;
        }

        int v28 = (char *)*((void *)this + 1);
        if ((unint64_t)v28 >= *((void *)this + 2) || *v28 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v99)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v99 = *v28;
          *((void *)this + 1) = v28 + 1;
        }

        int v29 = *((_DWORD *)this + 14);
        int v30 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v29 + 1;
        if (v29 >= v30) {
          return 0LL;
        }
        int v31 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v99);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v31);
        int v33 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v33, 1);
        int v34 = v33 - 1;
        if (v34 < 0 == v15) {
          *((_DWORD *)this + 14) = v34;
        }
        int v35 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v35 + 1;
LABEL_71:
        *(_DWORD *)(a1 + 92) |= 8u;
        int v36 = *(char **)(a1 + 32);
        if (!v36)
        {
          int v36 = (char *)operator new(0x60uLL);
          *(void *)int v36 = &off_101827610;
          *(_OWORD *)(v36 + 8) = 0u;
          *(_OWORD *)(v36 + 24) = 0u;
          *(_OWORD *)(v36 + 40) = 0u;
          *(_OWORD *)(v36 + 56) = 0u;
          *(_OWORD *)(v36 + 72) = 0u;
          *((void *)v36 + 11) = 0LL;
          *(void *)(a1 + 32) = v36;
        }

        uint64_t v37 = (char *)*((void *)this + 1);
        if ((unint64_t)v37 >= *((void *)this + 2) || *v37 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v99)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v99 = *v37;
          *((void *)this + 1) = v37 + 1;
        }

        int v38 = *((_DWORD *)this + 14);
        int v39 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v38 + 1;
        if (v38 >= v39) {
          return 0LL;
        }
        int v40 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v99);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v40);
        int v42 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v42, 1);
        int v43 = v42 - 1;
        if (v43 < 0 == v15) {
          *((_DWORD *)this + 14) = v43;
        }
        uint64_t v44 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v44 + 1;
LABEL_85:
        *(_DWORD *)(a1 + 92) |= 0x10u;
        int v45 = *(char **)(a1 + 40);
        if (!v45)
        {
          int v45 = (char *)operator new(0x60uLL);
          *(void *)int v45 = &off_101827688;
          *(_OWORD *)(v45 + 8) = 0u;
          *(_OWORD *)(v45 + 24) = 0u;
          *(_OWORD *)(v45 + 40) = 0u;
          *(_OWORD *)(v45 + 56) = 0u;
          *(_OWORD *)(v45 + 72) = 0u;
          *((void *)v45 + 11) = 0LL;
          *(void *)(a1 + 40) = v45;
        }

        int v46 = (char *)*((void *)this + 1);
        if ((unint64_t)v46 >= *((void *)this + 2) || *v46 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v99)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v99 = *v46;
          *((void *)this + 1) = v46 + 1;
        }

        int v47 = *((_DWORD *)this + 14);
        int v48 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v47 + 1;
        if (v47 >= v48) {
          return 0LL;
        }
        int v49 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v99);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v49);
        int v51 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v51, 1);
        int v52 = v51 - 1;
        if (v52 < 0 == v15) {
          *((_DWORD *)this + 14) = v52;
        }
        uint64_t v53 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v53 + 1;
LABEL_99:
        *(_DWORD *)(a1 + 92) |= 0x20u;
        uint64_t v54 = *(char **)(a1 + 48);
        if (!v54)
        {
          uint64_t v54 = (char *)operator new(0x88uLL);
          *(void *)uint64_t v54 = &off_101827700;
          *(_OWORD *)(v54 + 8) = 0u;
          *(_OWORD *)(v54 + 24) = 0u;
          *(_OWORD *)(v54 + 40) = 0u;
          *(_OWORD *)(v54 + 56) = 0u;
          *(_OWORD *)(v54 + 72) = 0u;
          *(_OWORD *)(v54 + 88) = 0u;
          *(_OWORD *)(v54 + 104) = 0u;
          *(_OWORD *)(v54 + 120) = 0u;
          *(void *)(a1 + 48) = v54;
        }

        uint64_t v55 = (char *)*((void *)this + 1);
        if ((unint64_t)v55 >= *((void *)this + 2) || *v55 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v99)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v99 = *v55;
          *((void *)this + 1) = v55 + 1;
        }

        int v56 = *((_DWORD *)this + 14);
        int v57 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v56 + 1;
        if (v56 >= v57) {
          return 0LL;
        }
        int v58 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v99);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v58);
        int v60 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v60, 1);
        int v61 = v60 - 1;
        if (v61 < 0 == v15) {
          *((_DWORD *)this + 14) = v61;
        }
        unint64_t v62 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v62 + 1;
LABEL_113:
        *(_DWORD *)(a1 + 92) |= 0x40u;
        int v63 = *(char **)(a1 + 56);
        if (!v63)
        {
          int v63 = (char *)operator new(0x60uLL);
          *(void *)int v63 = &off_101827778;
          *(_OWORD *)(v63 + 8) = 0u;
          *(_OWORD *)(v63 + 24) = 0u;
          *(_OWORD *)(v63 + 40) = 0u;
          *(_OWORD *)(v63 + 56) = 0u;
          *(_OWORD *)(v63 + 72) = 0u;
          *((void *)v63 + 11) = 0LL;
          *(void *)(a1 + 56) = v63;
        }

        unsigned int v64 = (char *)*((void *)this + 1);
        if ((unint64_t)v64 >= *((void *)this + 2) || *v64 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v99)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v99 = *v64;
          *((void *)this + 1) = v64 + 1;
        }

        int v65 = *((_DWORD *)this + 14);
        int v66 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v65 + 1;
        if (v65 >= v66) {
          return 0LL;
        }
        int v67 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v99);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v67);
        int v69 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v69, 1);
        int v70 = v69 - 1;
        if (v70 < 0 == v15) {
          *((_DWORD *)this + 14) = v70;
        }
        int v71 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v71 + 1;
LABEL_127:
        *(_DWORD *)(a1 + 92) |= 0x80u;
        int v72 = *(char **)(a1 + 64);
        if (!v72)
        {
          int v72 = (char *)operator new(0x60uLL);
          *(void *)int v72 = &off_1018277F0;
          *(_OWORD *)(v72 + 8) = 0u;
          *(_OWORD *)(v72 + 24) = 0u;
          *(_OWORD *)(v72 + 40) = 0u;
          *(_OWORD *)(v72 + 56) = 0u;
          *(_OWORD *)(v72 + 72) = 0u;
          *((void *)v72 + 11) = 0LL;
          *(void *)(a1 + 64) = v72;
        }

        unsigned int v73 = (char *)*((void *)this + 1);
        if ((unint64_t)v73 >= *((void *)this + 2) || *v73 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v99)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v99 = *v73;
          *((void *)this + 1) = v73 + 1;
        }

        int v74 = *((_DWORD *)this + 14);
        int v75 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v74 + 1;
        if (v74 >= v75) {
          return 0LL;
        }
        int v76 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v99);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v76);
        int v78 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v78, 1);
        int v79 = v78 - 1;
        if (v79 < 0 == v15) {
          *((_DWORD *)this + 14) = v79;
        }
        int v80 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v80 + 1;
LABEL_141:
        *(_DWORD *)(a1 + 92) |= 0x100u;
        int v81 = *(char **)(a1 + 72);
        if (!v81)
        {
          int v81 = (char *)operator new(0x60uLL);
          *(void *)int v81 = &off_101827868;
          *(_OWORD *)(v81 + 8) = 0u;
          *(_OWORD *)(v81 + 24) = 0u;
          *(_OWORD *)(v81 + 40) = 0u;
          *(_OWORD *)(v81 + 56) = 0u;
          *(_OWORD *)(v81 + 72) = 0u;
          *((void *)v81 + 11) = 0LL;
          *(void *)(a1 + 72) = v81;
        }

        uint64_t v82 = (char *)*((void *)this + 1);
        if ((unint64_t)v82 >= *((void *)this + 2) || *v82 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v99)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v99 = *v82;
          *((void *)this + 1) = v82 + 1;
        }

        int v83 = *((_DWORD *)this + 14);
        int v84 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v83 + 1;
        if (v83 >= v84) {
          return 0LL;
        }
        int v85 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v99);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v85);
        int v87 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v87, 1);
        int v88 = v87 - 1;
        if (v88 < 0 == v15) {
          *((_DWORD *)this + 14) = v88;
        }
        int v89 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v89 + 1;
LABEL_155:
        *(_DWORD *)(a1 + 92) |= 0x200u;
        int v90 = *(char **)(a1 + 80);
        if (!v90)
        {
          int v90 = (char *)operator new(0x40uLL);
          *(void *)int v90 = &off_1018278E0;
          *(_OWORD *)(v90 + 8) = 0u;
          *(_OWORD *)(v90 + 24) = 0u;
          *(_OWORD *)(v90 + 40) = 0u;
          *((void *)v90 + 7) = 0LL;
          *(void *)(a1 + 80) = v90;
        }

        unsigned int v91 = (char *)*((void *)this + 1);
        if ((unint64_t)v91 >= *((void *)this + 2) || *v91 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v99)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v99 = *v91;
          *((void *)this + 1) = v91 + 1;
        }

        int v92 = *((_DWORD *)this + 14);
        int v93 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v92 + 1;
        if (v92 >= v93) {
          return 0LL;
        }
        int v94 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v99);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v94);
        int v96 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v96, 1);
        int v97 = v96 - 1;
        if (v97 < 0 == v15) {
          *((_DWORD *)this + 14) = v97;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1LL;
          *((_BYTE *)this + 36) = 1;
          return result;
        }

        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_57;
        }
        goto LABEL_31;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_71;
        }
        goto LABEL_31;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_85;
        }
        goto LABEL_31;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_99;
        }
        goto LABEL_31;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_113;
        }
        goto LABEL_31;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_127;
        }
        goto LABEL_31;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_141;
        }
        goto LABEL_31;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_31;
        }
        goto LABEL_155;
      default:
        int v7 = TagFallback & 7;
LABEL_31:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001C7688( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 92);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0AF0 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_1019A0AF0 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v8,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }

uint64_t sub_1001C7864(uint64_t a1, unint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 92);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0LL;
    goto LABEL_61;
  }

  if ((v3 & 1) == 0)
  {
    uint64_t v4 = 0LL;
    if ((v3 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }

  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_1019A0AF0 + 8);
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001C0720(v5, a2);
  int v7 = (int)v6;
  else {
    int v8 = 1;
  }
  uint64_t v4 = (v7 + v8 + 1);
  int v3 = *(_DWORD *)(a1 + 92);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    uint64_t v9 = *(void *)(a1 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_1019A0AF0 + 16);
    }
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001C95F4(v9, a2);
    int v11 = (int)v10;
    else {
      int v12 = 1;
    }
    uint64_t v4 = (v4 + v11 + v12 + 1);
    int v3 = *(_DWORD *)(a1 + 92);
  }

double sub_1001C7B98(uint64_t a1, void *lpsrc)
{
  return sub_1001BEAB4(a1, (uint64_t)lpsrc);
}

double sub_1001C7BE4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v10,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPRavenOutput.pb.cc",  6757LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v10,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }

  int v6 = *(_DWORD *)(a2 + 92);
  if (!(_BYTE)v6) {
    goto LABEL_13;
  }
  if ((v6 & 1) != 0)
  {
    *(_DWORD *)(a1 + 92) |= 1u;
    int v7 = *(char **)(a1 + 8);
    if (!v7)
    {
      int v7 = (char *)operator new(0x38uLL);
      *(void *)int v7 = off_101827160;
      *(_OWORD *)(v7 + 8) = 0u;
      *(_OWORD *)(v7 + 24) = 0u;
      *(_OWORD *)(v7 + 40) = 0u;
      *(void *)(a1 + 8) = v7;
    }

    uint64_t v8 = *(void *)(a2 + 8);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1019A0AF8 + 8);
    }
    double result = sub_1001BFDA8((uint64_t)v7, v8);
    int v6 = *(_DWORD *)(a2 + 92);
    if ((v6 & 2) == 0)
    {
LABEL_6:
      if ((v6 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_25;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_6;
  }

  double result = *(double *)(a2 + 16);
  *(_DWORD *)(a1 + 92) |= 2u;
  *(double *)(a1 + 16) = result;
  int v6 = *(_DWORD *)(a2 + 92);
  if ((v6 & 4) == 0)
  {
LABEL_7:
    if ((v6 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }

void sub_1001C7DD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

double sub_1001C7DF0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v10,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPRavenOutput.pb.cc",  7380LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v10,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }

  int v6 = *(_DWORD *)(a2 + 132);
  if (!(_BYTE)v6) {
    goto LABEL_13;
  }
  if ((v6 & 1) != 0)
  {
    *(_DWORD *)(a1 + 132) |= 1u;
    int v7 = *(char **)(a1 + 8);
    if (!v7)
    {
      int v7 = (char *)operator new(0x38uLL);
      *(void *)int v7 = off_101827160;
      *(_OWORD *)(v7 + 8) = 0u;
      *(_OWORD *)(v7 + 24) = 0u;
      *(_OWORD *)(v7 + 40) = 0u;
      *(void *)(a1 + 8) = v7;
    }

    uint64_t v8 = *(void *)(a2 + 8);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1019A0B00 + 8);
    }
    double result = sub_1001BFDA8((uint64_t)v7, v8);
    int v6 = *(_DWORD *)(a2 + 132);
    if ((v6 & 2) == 0)
    {
LABEL_6:
      if ((v6 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_29;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_6;
  }

  double result = *(double *)(a2 + 16);
  *(_DWORD *)(a1 + 132) |= 2u;
  *(double *)(a1 + 16) = result;
  int v6 = *(_DWORD *)(a2 + 132);
  if ((v6 & 4) == 0)
  {
LABEL_7:
    if ((v6 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_30;
  }

void sub_1001C808C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

double sub_1001C80A4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v10,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPRavenOutput.pb.cc",  7878LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v10,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }

  int v6 = *(_DWORD *)(a2 + 92);
  if (!(_BYTE)v6) {
    goto LABEL_13;
  }
  if ((v6 & 1) != 0)
  {
    *(_DWORD *)(a1 + 92) |= 1u;
    int v7 = *(char **)(a1 + 8);
    if (!v7)
    {
      int v7 = (char *)operator new(0x38uLL);
      *(void *)int v7 = off_101827160;
      *(_OWORD *)(v7 + 8) = 0u;
      *(_OWORD *)(v7 + 24) = 0u;
      *(_OWORD *)(v7 + 40) = 0u;
      *(void *)(a1 + 8) = v7;
    }

    uint64_t v8 = *(void *)(a2 + 8);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1019A0B08 + 8);
    }
    double result = sub_1001BFDA8((uint64_t)v7, v8);
    int v6 = *(_DWORD *)(a2 + 92);
    if ((v6 & 2) == 0)
    {
LABEL_6:
      if ((v6 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_25;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_6;
  }

  double result = *(double *)(a2 + 16);
  *(_DWORD *)(a1 + 92) |= 2u;
  *(double *)(a1 + 16) = result;
  int v6 = *(_DWORD *)(a2 + 92);
  if ((v6 & 4) == 0)
  {
LABEL_7:
    if ((v6 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }

void sub_1001C8298(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

double sub_1001C82B0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v10,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPRavenOutput.pb.cc",  8356LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v10,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }

  int v6 = *(_DWORD *)(a2 + 92);
  if (!(_BYTE)v6) {
    goto LABEL_13;
  }
  if ((v6 & 1) != 0)
  {
    *(_DWORD *)(a1 + 92) |= 1u;
    int v7 = *(char **)(a1 + 8);
    if (!v7)
    {
      int v7 = (char *)operator new(0x38uLL);
      *(void *)int v7 = off_101827160;
      *(_OWORD *)(v7 + 8) = 0u;
      *(_OWORD *)(v7 + 24) = 0u;
      *(_OWORD *)(v7 + 40) = 0u;
      *(void *)(a1 + 8) = v7;
    }

    uint64_t v8 = *(void *)(a2 + 8);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1019A0B10 + 8);
    }
    double result = sub_1001BFDA8((uint64_t)v7, v8);
    int v6 = *(_DWORD *)(a2 + 92);
    if ((v6 & 2) == 0)
    {
LABEL_6:
      if ((v6 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_25;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_6;
  }

  double result = *(double *)(a2 + 16);
  *(_DWORD *)(a1 + 92) |= 2u;
  *(double *)(a1 + 16) = result;
  int v6 = *(_DWORD *)(a2 + 92);
  if ((v6 & 4) == 0)
  {
LABEL_7:
    if ((v6 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }

void sub_1001C84A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

double sub_1001C84BC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v10,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPRavenOutput.pb.cc",  8979LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v10,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }

  int v6 = *(_DWORD *)(a2 + 132);
  if (!(_BYTE)v6) {
    goto LABEL_13;
  }
  if ((v6 & 1) != 0)
  {
    *(_DWORD *)(a1 + 132) |= 1u;
    int v7 = *(char **)(a1 + 8);
    if (!v7)
    {
      int v7 = (char *)operator new(0x38uLL);
      *(void *)int v7 = off_101827160;
      *(_OWORD *)(v7 + 8) = 0u;
      *(_OWORD *)(v7 + 24) = 0u;
      *(_OWORD *)(v7 + 40) = 0u;
      *(void *)(a1 + 8) = v7;
    }

    uint64_t v8 = *(void *)(a2 + 8);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1019A0B18 + 8);
    }
    double result = sub_1001BFDA8((uint64_t)v7, v8);
    int v6 = *(_DWORD *)(a2 + 132);
    if ((v6 & 2) == 0)
    {
LABEL_6:
      if ((v6 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_29;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_6;
  }

  double result = *(double *)(a2 + 16);
  *(_DWORD *)(a1 + 132) |= 2u;
  *(double *)(a1 + 16) = result;
  int v6 = *(_DWORD *)(a2 + 132);
  if ((v6 & 4) == 0)
  {
LABEL_7:
    if ((v6 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_30;
  }

void sub_1001C8758(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

double sub_1001C8770(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v10,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPRavenOutput.pb.cc",  9477LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v10,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }

  int v6 = *(_DWORD *)(a2 + 92);
  if (!(_BYTE)v6) {
    goto LABEL_13;
  }
  if ((v6 & 1) != 0)
  {
    *(_DWORD *)(a1 + 92) |= 1u;
    int v7 = *(char **)(a1 + 8);
    if (!v7)
    {
      int v7 = (char *)operator new(0x38uLL);
      *(void *)int v7 = off_101827160;
      *(_OWORD *)(v7 + 8) = 0u;
      *(_OWORD *)(v7 + 24) = 0u;
      *(_OWORD *)(v7 + 40) = 0u;
      *(void *)(a1 + 8) = v7;
    }

    uint64_t v8 = *(void *)(a2 + 8);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1019A0B20 + 8);
    }
    double result = sub_1001BFDA8((uint64_t)v7, v8);
    int v6 = *(_DWORD *)(a2 + 92);
    if ((v6 & 2) == 0)
    {
LABEL_6:
      if ((v6 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_25;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_6;
  }

  double result = *(double *)(a2 + 16);
  *(_DWORD *)(a1 + 92) |= 2u;
  *(double *)(a1 + 16) = result;
  int v6 = *(_DWORD *)(a2 + 92);
  if ((v6 & 4) == 0)
  {
LABEL_7:
    if ((v6 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }

void sub_1001C8964(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

double sub_1001C897C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v10,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPRavenOutput.pb.cc",  9955LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v10,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }

  int v6 = *(_DWORD *)(a2 + 92);
  if (!(_BYTE)v6) {
    goto LABEL_13;
  }
  if ((v6 & 1) != 0)
  {
    *(_DWORD *)(a1 + 92) |= 1u;
    int v7 = *(char **)(a1 + 8);
    if (!v7)
    {
      int v7 = (char *)operator new(0x38uLL);
      *(void *)int v7 = off_101827160;
      *(_OWORD *)(v7 + 8) = 0u;
      *(_OWORD *)(v7 + 24) = 0u;
      *(_OWORD *)(v7 + 40) = 0u;
      *(void *)(a1 + 8) = v7;
    }

    uint64_t v8 = *(void *)(a2 + 8);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1019A0B28 + 8);
    }
    double result = sub_1001BFDA8((uint64_t)v7, v8);
    int v6 = *(_DWORD *)(a2 + 92);
    if ((v6 & 2) == 0)
    {
LABEL_6:
      if ((v6 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_25;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_6;
  }

  double result = *(double *)(a2 + 16);
  *(_DWORD *)(a1 + 92) |= 2u;
  *(double *)(a1 + 16) = result;
  int v6 = *(_DWORD *)(a2 + 92);
  if ((v6 & 4) == 0)
  {
LABEL_7:
    if ((v6 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }

void sub_1001C8B70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

double sub_1001C8B88(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v10,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPRavenOutput.pb.cc",  10433LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v10,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }

  int v6 = *(_DWORD *)(a2 + 92);
  if (!(_BYTE)v6) {
    goto LABEL_13;
  }
  if ((v6 & 1) != 0)
  {
    *(_DWORD *)(a1 + 92) |= 1u;
    int v7 = *(char **)(a1 + 8);
    if (!v7)
    {
      int v7 = (char *)operator new(0x38uLL);
      *(void *)int v7 = off_101827160;
      *(_OWORD *)(v7 + 8) = 0u;
      *(_OWORD *)(v7 + 24) = 0u;
      *(_OWORD *)(v7 + 40) = 0u;
      *(void *)(a1 + 8) = v7;
    }

    uint64_t v8 = *(void *)(a2 + 8);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1019A0B30 + 8);
    }
    double result = sub_1001BFDA8((uint64_t)v7, v8);
    int v6 = *(_DWORD *)(a2 + 92);
    if ((v6 & 2) == 0)
    {
LABEL_6:
      if ((v6 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_25;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_6;
  }

  double result = *(double *)(a2 + 16);
  *(_DWORD *)(a1 + 92) |= 2u;
  *(double *)(a1 + 16) = result;
  int v6 = *(_DWORD *)(a2 + 92);
  if ((v6 & 4) == 0)
  {
LABEL_7:
    if ((v6 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }

void sub_1001C8D7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

double sub_1001C8D94(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v10,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPRavenOutput.pb.cc",  10791LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v10,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 60);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 60) & 1) != 0)
    {
      *(_DWORD *)(a1 + 60) |= 1u;
      int v7 = *(char **)(a1 + 8);
      if (!v7)
      {
        int v7 = (char *)operator new(0x38uLL);
        *(void *)int v7 = off_101827160;
        *(_OWORD *)(v7 + 8) = 0u;
        *(_OWORD *)(v7 + 24) = 0u;
        *(_OWORD *)(v7 + 40) = 0u;
        *(void *)(a1 + 8) = v7;
      }

      uint64_t v8 = *(void *)(a2 + 8);
      if (!v8) {
        uint64_t v8 = *(void *)(qword_1019A0B38 + 8);
      }
      double result = sub_1001BFDA8((uint64_t)v7, v8);
      int v6 = *(_DWORD *)(a2 + 60);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_18;
      }
    }

    else if ((*(_BYTE *)(a2 + 60) & 2) == 0)
    {
      goto LABEL_6;
    }

    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 60) |= 2u;
    *(double *)(a1 + 16) = result;
    int v6 = *(_DWORD *)(a2 + 60);
    if ((v6 & 4) == 0)
    {
LABEL_7:
      if ((v6 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_19;
    }

void sub_1001C8F04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_1001C8F1C()
{
  return 1LL;
}

void *sub_1001C8F24@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.Raven.EstimatorState");
}

void sub_1001C8F34(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_101827520;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0AF8 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1001C8F88(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

double sub_1001C8F9C()
{
  v0 = (char *)operator new(0x60uLL);
  *(void *)v0 = &off_101827520;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *((void *)v0 + 11) = 0LL;
  return result;
}

uint64_t sub_1001C8FDC( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 92) |= 1u;
        uint64_t v8 = *(char **)(a1 + 8);
        if (!v8)
        {
          uint64_t v8 = (char *)operator new(0x38uLL);
          *(void *)uint64_t v8 = off_101827160;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *(_OWORD *)(v8 + 40) = 0u;
          *(void *)(a1 + 8) = v8;
        }

        char v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v27)) {
            return 0LL;
          }
        }

        else
        {
          v27[0] = *v9;
          *((void *)this + 1) = v9 + 1;
        }

        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0LL;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        uint64_t v17 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v17 + 1;
        goto LABEL_43;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_31;
        }
LABEL_43:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 2u;
        BOOL v18 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v18 + 1;
LABEL_47:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 24) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 4u;
        int v19 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v19 + 1;
LABEL_51:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 32) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 8u;
        int v20 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v20 + 1;
LABEL_55:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 40) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 0x10u;
        uint64_t v21 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v21 + 1;
LABEL_59:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 48) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 0x20u;
        int v22 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v22 + 1;
LABEL_63:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 56) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 0x40u;
        int v23 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v23 + 1;
LABEL_67:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 64) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 0x80u;
        int v24 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v24 + 1;
LABEL_71:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 72) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 0x100u;
        uint64_t v25 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v25 + 1;
LABEL_75:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) != 0)
        {
          *(void *)(a1 + 80) = *(void *)v27;
          *(_DWORD *)(a1 + 92) |= 0x200u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1LL;
            *((_BYTE *)this + 36) = 1;
            return result;
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_47;
        }
        goto LABEL_31;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_51;
        }
        goto LABEL_31;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_55;
        }
        goto LABEL_31;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_59;
        }
        goto LABEL_31;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_63;
        }
        goto LABEL_31;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_67;
        }
        goto LABEL_31;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_71;
        }
        goto LABEL_31;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_31;
        }
        goto LABEL_75;
      default:
        int v7 = TagFallback & 7;
LABEL_31:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001C94A8( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 92);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0AF8 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  (int)a2,  *(double *)(v5 + 16),  a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }

uint64_t sub_1001C95F4(uint64_t a1, unint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 92);
  if ((_BYTE)v3)
  {
    if ((v3 & 1) != 0)
    {
      uint64_t v5 = *(void *)(a1 + 8);
      if (!v5) {
        uint64_t v5 = *(void *)(qword_1019A0AF8 + 8);
      }
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001C0720(v5, a2);
      int v8 = (int)v6;
      else {
        int v9 = 1;
      }
      unsigned int v4 = v8 + v9 + 1;
      int v3 = *(_DWORD *)(a1 + 92);
    }

    else
    {
      unsigned int v4 = 0;
    }

    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x40) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x80) != 0) {
      v4 += 9;
    }
  }

  else
  {
    unsigned int v4 = 0;
  }

  unsigned int v10 = v4 + 9;
  if ((v3 & 0x100) == 0) {
    unsigned int v10 = v4;
  }
  if ((v3 & 0x200) != 0) {
    v10 += 9;
  }
  if ((v3 & 0xFF00) != 0) {
    uint64_t result = v10;
  }
  else {
    uint64_t result = v4;
  }
  *(_DWORD *)(a1 + 88) = result;
  return result;
}

double sub_1001C96E8(uint64_t a1, void *lpsrc)
{
  return sub_1001C7BE4(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001C9734()
{
  return 1LL;
}

void *sub_1001C973C@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.Raven.UserPosition");
}

void sub_1001C974C(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_101827598;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0B00 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1001C97A0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

double sub_1001C97B4()
{
  v0 = (char *)operator new(0x88uLL);
  *(void *)v0 = &off_101827598;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_OWORD *)(v0 + 88) = 0u;
  *(_OWORD *)(v0 + 104) = 0u;
  *(_OWORD *)(v0 + 120) = 0u;
  return result;
}

uint64_t sub_1001C97FC( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 132) |= 1u;
        int v8 = *(char **)(a1 + 8);
        if (!v8)
        {
          int v8 = (char *)operator new(0x38uLL);
          *(void *)int v8 = off_101827160;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *(_OWORD *)(v8 + 40) = 0u;
          *(void *)(a1 + 8) = v8;
        }

        int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v32)) {
            return 0LL;
          }
        }

        else
        {
          v32[0] = *v9;
          *((void *)this + 1) = v9 + 1;
        }

        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0LL;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v32[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        uint64_t v17 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v17 + 1;
        goto LABEL_53;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_41;
        }
LABEL_53:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v32) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = *(void *)v32;
        *(_DWORD *)(a1 + 132) |= 2u;
        BOOL v18 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v18 + 1;
LABEL_57:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v32) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 24) = *(void *)v32;
        *(_DWORD *)(a1 + 132) |= 4u;
        int v19 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v19 + 1;
LABEL_61:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v32) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 32) = *(void *)v32;
        *(_DWORD *)(a1 + 132) |= 8u;
        int v20 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v20 + 1;
LABEL_65:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v32) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 40) = *(void *)v32;
        *(_DWORD *)(a1 + 132) |= 0x10u;
        uint64_t v21 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v21 + 1;
LABEL_69:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v32) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 48) = *(void *)v32;
        *(_DWORD *)(a1 + 132) |= 0x20u;
        int v22 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v22 + 1;
LABEL_73:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v32) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 56) = *(void *)v32;
        *(_DWORD *)(a1 + 132) |= 0x40u;
        int v23 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v23 + 1;
LABEL_77:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v32) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 64) = *(void *)v32;
        *(_DWORD *)(a1 + 132) |= 0x80u;
        int v24 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v24 + 1;
LABEL_81:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v32) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 72) = *(void *)v32;
        *(_DWORD *)(a1 + 132) |= 0x100u;
        uint64_t v25 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v25 + 1;
LABEL_85:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v32) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 80) = *(void *)v32;
        *(_DWORD *)(a1 + 132) |= 0x200u;
        int v26 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v26 + 1;
LABEL_89:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v32) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 88) = *(void *)v32;
        *(_DWORD *)(a1 + 132) |= 0x400u;
        int v27 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v27 + 1;
LABEL_93:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v32) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 96) = *(void *)v32;
        *(_DWORD *)(a1 + 132) |= 0x800u;
        int v28 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v28 + 1;
LABEL_97:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v32) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 104) = *(void *)v32;
        *(_DWORD *)(a1 + 132) |= 0x1000u;
        uint64_t v29 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v29 + 1;
LABEL_101:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v32) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 112) = *(void *)v32;
        *(_DWORD *)(a1 + 132) |= 0x2000u;
        int v30 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v30 + 1;
LABEL_105:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v32) & 1) != 0)
        {
          *(void *)(a1 + 120) = *(void *)v32;
          *(_DWORD *)(a1 + 132) |= 0x4000u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1LL;
            *((_BYTE *)this + 36) = 1;
            return result;
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_57;
        }
        goto LABEL_41;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_61;
        }
        goto LABEL_41;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_65;
        }
        goto LABEL_41;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_69;
        }
        goto LABEL_41;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_73;
        }
        goto LABEL_41;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_77;
        }
        goto LABEL_41;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_81;
        }
        goto LABEL_41;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_85;
        }
        goto LABEL_41;
      case 0xBu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_89;
        }
        goto LABEL_41;
      case 0xCu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_93;
        }
        goto LABEL_41;
      case 0xDu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_97;
        }
        goto LABEL_41;
      case 0xEu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_101;
        }
        goto LABEL_41;
      case 0xFu:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_41;
        }
        goto LABEL_105;
      default:
        int v7 = TagFallback & 7;
LABEL_41:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001C9E6C( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 132);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0B00 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 132);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_21;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  (int)a2,  *(double *)(v5 + 16),  a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_22;
  }

uint64_t sub_1001CA044(uint64_t a1, unint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 132);
  if ((_BYTE)v3)
  {
    if ((v3 & 1) != 0)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_1019A0B00 + 8);
      }
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001C0720(v6, a2);
      int v9 = (int)v7;
      else {
        int v10 = 1;
      }
      unsigned int v4 = v9 + v10 + 1;
      int v3 = *(_DWORD *)(a1 + 132);
    }

    else
    {
      unsigned int v4 = 0;
    }

    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x40) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x80) != 0) {
      uint64_t result = v4 + 9;
    }
    else {
      uint64_t result = v4;
    }
  }

  else
  {
    uint64_t result = 0LL;
  }

  if ((v3 & 0xFF00) != 0)
  {
    unsigned int v11 = result + 9;
    if ((v3 & 0x100) == 0) {
      unsigned int v11 = result;
    }
    if ((v3 & 0x200) != 0) {
      v11 += 9;
    }
    if ((v3 & 0x400) != 0) {
      v11 += 9;
    }
    if ((v3 & 0x800) != 0) {
      v11 += 9;
    }
    if ((v3 & 0x1000) != 0) {
      v11 += 9;
    }
    if ((v3 & 0x2000) != 0) {
      v11 += 9;
    }
    if ((v3 & 0x4000) != 0) {
      uint64_t result = v11 + 9;
    }
    else {
      uint64_t result = v11;
    }
  }

  *(_DWORD *)(a1 + 128) = result;
  return result;
}

double sub_1001CA174(uint64_t a1, void *lpsrc)
{
  return sub_1001C7DF0(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001CA1C0()
{
  return 1LL;
}

void *sub_1001CA1C8@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.Raven.UserVelocity");
}

void sub_1001CA1D8(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_101827610;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0B08 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1001CA22C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

double sub_1001CA240()
{
  v0 = (char *)operator new(0x60uLL);
  *(void *)v0 = &off_101827610;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *((void *)v0 + 11) = 0LL;
  return result;
}

uint64_t sub_1001CA280( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 92) |= 1u;
        unsigned int v8 = *(char **)(a1 + 8);
        if (!v8)
        {
          unsigned int v8 = (char *)operator new(0x38uLL);
          *(void *)unsigned int v8 = off_101827160;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *(_OWORD *)(v8 + 40) = 0u;
          *(void *)(a1 + 8) = v8;
        }

        int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v27)) {
            return 0LL;
          }
        }

        else
        {
          v27[0] = *v9;
          *((void *)this + 1) = v9 + 1;
        }

        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0LL;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        uint64_t v17 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v17 + 1;
        goto LABEL_43;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_31;
        }
LABEL_43:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 2u;
        BOOL v18 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v18 + 1;
LABEL_47:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 24) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 4u;
        int v19 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v19 + 1;
LABEL_51:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 32) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 8u;
        int v20 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v20 + 1;
LABEL_55:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 40) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 0x10u;
        uint64_t v21 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v21 + 1;
LABEL_59:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 48) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 0x20u;
        int v22 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v22 + 1;
LABEL_63:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 56) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 0x40u;
        int v23 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v23 + 1;
LABEL_67:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 64) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 0x80u;
        int v24 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v24 + 1;
LABEL_71:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 72) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 0x100u;
        uint64_t v25 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v25 + 1;
LABEL_75:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) != 0)
        {
          *(void *)(a1 + 80) = *(void *)v27;
          *(_DWORD *)(a1 + 92) |= 0x200u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1LL;
            *((_BYTE *)this + 36) = 1;
            return result;
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_47;
        }
        goto LABEL_31;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_51;
        }
        goto LABEL_31;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_55;
        }
        goto LABEL_31;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_59;
        }
        goto LABEL_31;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_63;
        }
        goto LABEL_31;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_67;
        }
        goto LABEL_31;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_71;
        }
        goto LABEL_31;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_31;
        }
        goto LABEL_75;
      default:
        int v7 = TagFallback & 7;
LABEL_31:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001CA74C( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 92);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0B08 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  (int)a2,  *(double *)(v5 + 16),  a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }

uint64_t sub_1001CA898(uint64_t a1, unint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 92);
  if ((_BYTE)v3)
  {
    if ((v3 & 1) != 0)
    {
      uint64_t v5 = *(void *)(a1 + 8);
      if (!v5) {
        uint64_t v5 = *(void *)(qword_1019A0B08 + 8);
      }
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001C0720(v5, a2);
      int v8 = (int)v6;
      else {
        int v9 = 1;
      }
      unsigned int v4 = v8 + v9 + 1;
      int v3 = *(_DWORD *)(a1 + 92);
    }

    else
    {
      unsigned int v4 = 0;
    }

    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x40) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x80) != 0) {
      v4 += 9;
    }
  }

  else
  {
    unsigned int v4 = 0;
  }

  unsigned int v10 = v4 + 9;
  if ((v3 & 0x100) == 0) {
    unsigned int v10 = v4;
  }
  if ((v3 & 0x200) != 0) {
    v10 += 9;
  }
  if ((v3 & 0xFF00) != 0) {
    uint64_t result = v10;
  }
  else {
    uint64_t result = v4;
  }
  *(_DWORD *)(a1 + 88) = result;
  return result;
}

double sub_1001CA98C(uint64_t a1, void *lpsrc)
{
  return sub_1001C80A4(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001CA9D8()
{
  return 1LL;
}

void *sub_1001CA9E0@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.Raven.DevicePosition");
}

void sub_1001CA9F0(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_101827688;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0B10 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1001CAA44(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

double sub_1001CAA58()
{
  v0 = (char *)operator new(0x60uLL);
  *(void *)v0 = &off_101827688;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *((void *)v0 + 11) = 0LL;
  return result;
}

uint64_t sub_1001CAA98( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 92) |= 1u;
        int v8 = *(char **)(a1 + 8);
        if (!v8)
        {
          int v8 = (char *)operator new(0x38uLL);
          *(void *)int v8 = off_101827160;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *(_OWORD *)(v8 + 40) = 0u;
          *(void *)(a1 + 8) = v8;
        }

        int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v27)) {
            return 0LL;
          }
        }

        else
        {
          v27[0] = *v9;
          *((void *)this + 1) = v9 + 1;
        }

        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0LL;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        uint64_t v17 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v17 + 1;
        goto LABEL_43;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_31;
        }
LABEL_43:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 2u;
        BOOL v18 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v18 + 1;
LABEL_47:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 24) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 4u;
        int v19 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v19 + 1;
LABEL_51:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 32) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 8u;
        int v20 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v20 + 1;
LABEL_55:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 40) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 0x10u;
        uint64_t v21 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v21 + 1;
LABEL_59:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 48) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 0x20u;
        int v22 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v22 + 1;
LABEL_63:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 56) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 0x40u;
        int v23 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v23 + 1;
LABEL_67:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 64) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 0x80u;
        int v24 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v24 + 1;
LABEL_71:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 72) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 0x100u;
        uint64_t v25 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v25 + 1;
LABEL_75:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) != 0)
        {
          *(void *)(a1 + 80) = *(void *)v27;
          *(_DWORD *)(a1 + 92) |= 0x200u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1LL;
            *((_BYTE *)this + 36) = 1;
            return result;
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_47;
        }
        goto LABEL_31;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_51;
        }
        goto LABEL_31;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_55;
        }
        goto LABEL_31;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_59;
        }
        goto LABEL_31;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_63;
        }
        goto LABEL_31;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_67;
        }
        goto LABEL_31;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_71;
        }
        goto LABEL_31;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_31;
        }
        goto LABEL_75;
      default:
        int v7 = TagFallback & 7;
LABEL_31:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001CAF64( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 92);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0B10 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  (int)a2,  *(double *)(v5 + 16),  a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }

uint64_t sub_1001CB0B0(uint64_t a1, unint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 92);
  if ((_BYTE)v3)
  {
    if ((v3 & 1) != 0)
    {
      uint64_t v5 = *(void *)(a1 + 8);
      if (!v5) {
        uint64_t v5 = *(void *)(qword_1019A0B10 + 8);
      }
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001C0720(v5, a2);
      int v8 = (int)v6;
      else {
        int v9 = 1;
      }
      unsigned int v4 = v8 + v9 + 1;
      int v3 = *(_DWORD *)(a1 + 92);
    }

    else
    {
      unsigned int v4 = 0;
    }

    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x40) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x80) != 0) {
      v4 += 9;
    }
  }

  else
  {
    unsigned int v4 = 0;
  }

  unsigned int v10 = v4 + 9;
  if ((v3 & 0x100) == 0) {
    unsigned int v10 = v4;
  }
  if ((v3 & 0x200) != 0) {
    v10 += 9;
  }
  if ((v3 & 0xFF00) != 0) {
    uint64_t result = v10;
  }
  else {
    uint64_t result = v4;
  }
  *(_DWORD *)(a1 + 88) = result;
  return result;
}

double sub_1001CB1A4(uint64_t a1, void *lpsrc)
{
  return sub_1001C82B0(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001CB1F0()
{
  return 1LL;
}

void *sub_1001CB1F8@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.Raven.DeviceVelocity");
}

void sub_1001CB208(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_101827700;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0B18 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1001CB25C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

double sub_1001CB270()
{
  v0 = (char *)operator new(0x88uLL);
  *(void *)v0 = &off_101827700;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_OWORD *)(v0 + 88) = 0u;
  *(_OWORD *)(v0 + 104) = 0u;
  *(_OWORD *)(v0 + 120) = 0u;
  return result;
}

uint64_t sub_1001CB2B8( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 132) |= 1u;
        int v8 = *(char **)(a1 + 8);
        if (!v8)
        {
          int v8 = (char *)operator new(0x38uLL);
          *(void *)int v8 = off_101827160;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *(_OWORD *)(v8 + 40) = 0u;
          *(void *)(a1 + 8) = v8;
        }

        int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v32)) {
            return 0LL;
          }
        }

        else
        {
          v32[0] = *v9;
          *((void *)this + 1) = v9 + 1;
        }

        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0LL;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v32[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        uint64_t v17 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v17 + 1;
        goto LABEL_53;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_41;
        }
LABEL_53:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v32) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = *(void *)v32;
        *(_DWORD *)(a1 + 132) |= 2u;
        BOOL v18 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v18 + 1;
LABEL_57:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v32) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 24) = *(void *)v32;
        *(_DWORD *)(a1 + 132) |= 4u;
        int v19 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v19 + 1;
LABEL_61:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v32) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 32) = *(void *)v32;
        *(_DWORD *)(a1 + 132) |= 8u;
        int v20 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v20 + 1;
LABEL_65:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v32) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 40) = *(void *)v32;
        *(_DWORD *)(a1 + 132) |= 0x10u;
        uint64_t v21 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v21 + 1;
LABEL_69:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v32) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 48) = *(void *)v32;
        *(_DWORD *)(a1 + 132) |= 0x20u;
        int v22 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v22 + 1;
LABEL_73:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v32) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 56) = *(void *)v32;
        *(_DWORD *)(a1 + 132) |= 0x40u;
        int v23 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v23 + 1;
LABEL_77:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v32) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 64) = *(void *)v32;
        *(_DWORD *)(a1 + 132) |= 0x80u;
        int v24 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v24 + 1;
LABEL_81:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v32) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 72) = *(void *)v32;
        *(_DWORD *)(a1 + 132) |= 0x100u;
        uint64_t v25 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v25 + 1;
LABEL_85:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v32) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 80) = *(void *)v32;
        *(_DWORD *)(a1 + 132) |= 0x200u;
        int v26 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v26 + 1;
LABEL_89:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v32) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 88) = *(void *)v32;
        *(_DWORD *)(a1 + 132) |= 0x400u;
        int v27 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v27 + 1;
LABEL_93:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v32) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 96) = *(void *)v32;
        *(_DWORD *)(a1 + 132) |= 0x800u;
        int v28 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v28 + 1;
LABEL_97:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v32) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 104) = *(void *)v32;
        *(_DWORD *)(a1 + 132) |= 0x1000u;
        uint64_t v29 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v29 + 1;
LABEL_101:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v32) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 112) = *(void *)v32;
        *(_DWORD *)(a1 + 132) |= 0x2000u;
        int v30 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v30 + 1;
LABEL_105:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v32) & 1) != 0)
        {
          *(void *)(a1 + 120) = *(void *)v32;
          *(_DWORD *)(a1 + 132) |= 0x4000u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1LL;
            *((_BYTE *)this + 36) = 1;
            return result;
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_57;
        }
        goto LABEL_41;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_61;
        }
        goto LABEL_41;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_65;
        }
        goto LABEL_41;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_69;
        }
        goto LABEL_41;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_73;
        }
        goto LABEL_41;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_77;
        }
        goto LABEL_41;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_81;
        }
        goto LABEL_41;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_85;
        }
        goto LABEL_41;
      case 0xBu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_89;
        }
        goto LABEL_41;
      case 0xCu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_93;
        }
        goto LABEL_41;
      case 0xDu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_97;
        }
        goto LABEL_41;
      case 0xEu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_101;
        }
        goto LABEL_41;
      case 0xFu:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_41;
        }
        goto LABEL_105;
      default:
        int v7 = TagFallback & 7;
LABEL_41:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001CB928( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 132);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0B18 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 132);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_21;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  (int)a2,  *(double *)(v5 + 16),  a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_22;
  }

uint64_t sub_1001CBB00(uint64_t a1, unint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 132);
  if ((_BYTE)v3)
  {
    if ((v3 & 1) != 0)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_1019A0B18 + 8);
      }
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001C0720(v6, a2);
      int v9 = (int)v7;
      else {
        int v10 = 1;
      }
      unsigned int v4 = v9 + v10 + 1;
      int v3 = *(_DWORD *)(a1 + 132);
    }

    else
    {
      unsigned int v4 = 0;
    }

    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x40) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x80) != 0) {
      uint64_t result = v4 + 9;
    }
    else {
      uint64_t result = v4;
    }
  }

  else
  {
    uint64_t result = 0LL;
  }

  if ((v3 & 0xFF00) != 0)
  {
    unsigned int v11 = result + 9;
    if ((v3 & 0x100) == 0) {
      unsigned int v11 = result;
    }
    if ((v3 & 0x200) != 0) {
      v11 += 9;
    }
    if ((v3 & 0x400) != 0) {
      v11 += 9;
    }
    if ((v3 & 0x800) != 0) {
      v11 += 9;
    }
    if ((v3 & 0x1000) != 0) {
      v11 += 9;
    }
    if ((v3 & 0x2000) != 0) {
      v11 += 9;
    }
    if ((v3 & 0x4000) != 0) {
      uint64_t result = v11 + 9;
    }
    else {
      uint64_t result = v11;
    }
  }

  *(_DWORD *)(a1 + 128) = result;
  return result;
}

double sub_1001CBC30(uint64_t a1, void *lpsrc)
{
  return sub_1001C84BC(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001CBC7C()
{
  return 1LL;
}

void *sub_1001CBC84@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.Raven.DeviceAttitude");
}

void sub_1001CBC94(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_101827778;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0B20 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1001CBCE8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

double sub_1001CBCFC()
{
  v0 = (char *)operator new(0x60uLL);
  *(void *)v0 = &off_101827778;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *((void *)v0 + 11) = 0LL;
  return result;
}

uint64_t sub_1001CBD3C( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 92) |= 1u;
        unsigned int v8 = *(char **)(a1 + 8);
        if (!v8)
        {
          unsigned int v8 = (char *)operator new(0x38uLL);
          *(void *)unsigned int v8 = off_101827160;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *(_OWORD *)(v8 + 40) = 0u;
          *(void *)(a1 + 8) = v8;
        }

        int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v27)) {
            return 0LL;
          }
        }

        else
        {
          v27[0] = *v9;
          *((void *)this + 1) = v9 + 1;
        }

        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0LL;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        uint64_t v17 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v17 + 1;
        goto LABEL_43;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_31;
        }
LABEL_43:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 2u;
        BOOL v18 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v18 + 1;
LABEL_47:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 24) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 4u;
        int v19 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v19 + 1;
LABEL_51:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 32) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 8u;
        int v20 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v20 + 1;
LABEL_55:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 40) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 0x10u;
        uint64_t v21 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v21 + 1;
LABEL_59:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 48) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 0x20u;
        int v22 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v22 + 1;
LABEL_63:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 56) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 0x40u;
        int v23 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v23 + 1;
LABEL_67:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 64) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 0x80u;
        int v24 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v24 + 1;
LABEL_71:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 72) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 0x100u;
        uint64_t v25 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v25 + 1;
LABEL_75:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) != 0)
        {
          *(void *)(a1 + 80) = *(void *)v27;
          *(_DWORD *)(a1 + 92) |= 0x200u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1LL;
            *((_BYTE *)this + 36) = 1;
            return result;
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_47;
        }
        goto LABEL_31;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_51;
        }
        goto LABEL_31;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_55;
        }
        goto LABEL_31;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_59;
        }
        goto LABEL_31;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_63;
        }
        goto LABEL_31;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_67;
        }
        goto LABEL_31;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_71;
        }
        goto LABEL_31;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_31;
        }
        goto LABEL_75;
      default:
        int v7 = TagFallback & 7;
LABEL_31:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001CC208( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 92);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0B20 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  (int)a2,  *(double *)(v5 + 16),  a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }

uint64_t sub_1001CC354(uint64_t a1, unint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 92);
  if ((_BYTE)v3)
  {
    if ((v3 & 1) != 0)
    {
      uint64_t v5 = *(void *)(a1 + 8);
      if (!v5) {
        uint64_t v5 = *(void *)(qword_1019A0B20 + 8);
      }
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001C0720(v5, a2);
      int v8 = (int)v6;
      else {
        int v9 = 1;
      }
      unsigned int v4 = v8 + v9 + 1;
      int v3 = *(_DWORD *)(a1 + 92);
    }

    else
    {
      unsigned int v4 = 0;
    }

    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x40) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x80) != 0) {
      v4 += 9;
    }
  }

  else
  {
    unsigned int v4 = 0;
  }

  unsigned int v10 = v4 + 9;
  if ((v3 & 0x100) == 0) {
    unsigned int v10 = v4;
  }
  if ((v3 & 0x200) != 0) {
    v10 += 9;
  }
  if ((v3 & 0xFF00) != 0) {
    uint64_t result = v10;
  }
  else {
    uint64_t result = v4;
  }
  *(_DWORD *)(a1 + 88) = result;
  return result;
}

double sub_1001CC448(uint64_t a1, void *lpsrc)
{
  return sub_1001C8770(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001CC494()
{
  return 1LL;
}

void *sub_1001CC49C@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.Raven.DeviceRateGyroBias");
}

void sub_1001CC4AC(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1018277F0;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0B28 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1001CC500(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

double sub_1001CC514()
{
  v0 = (char *)operator new(0x60uLL);
  *(void *)v0 = &off_1018277F0;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *((void *)v0 + 11) = 0LL;
  return result;
}

uint64_t sub_1001CC554( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 92) |= 1u;
        int v8 = *(char **)(a1 + 8);
        if (!v8)
        {
          int v8 = (char *)operator new(0x38uLL);
          *(void *)int v8 = off_101827160;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *(_OWORD *)(v8 + 40) = 0u;
          *(void *)(a1 + 8) = v8;
        }

        int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v27)) {
            return 0LL;
          }
        }

        else
        {
          v27[0] = *v9;
          *((void *)this + 1) = v9 + 1;
        }

        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0LL;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        uint64_t v17 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v17 + 1;
        goto LABEL_43;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_31;
        }
LABEL_43:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 2u;
        BOOL v18 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v18 + 1;
LABEL_47:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 24) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 4u;
        int v19 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v19 + 1;
LABEL_51:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 32) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 8u;
        int v20 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v20 + 1;
LABEL_55:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 40) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 0x10u;
        uint64_t v21 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v21 + 1;
LABEL_59:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 48) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 0x20u;
        int v22 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v22 + 1;
LABEL_63:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 56) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 0x40u;
        int v23 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v23 + 1;
LABEL_67:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 64) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 0x80u;
        int v24 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v24 + 1;
LABEL_71:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 72) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 0x100u;
        uint64_t v25 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v25 + 1;
LABEL_75:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) != 0)
        {
          *(void *)(a1 + 80) = *(void *)v27;
          *(_DWORD *)(a1 + 92) |= 0x200u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1LL;
            *((_BYTE *)this + 36) = 1;
            return result;
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_47;
        }
        goto LABEL_31;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_51;
        }
        goto LABEL_31;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_55;
        }
        goto LABEL_31;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_59;
        }
        goto LABEL_31;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_63;
        }
        goto LABEL_31;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_67;
        }
        goto LABEL_31;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_71;
        }
        goto LABEL_31;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_31;
        }
        goto LABEL_75;
      default:
        int v7 = TagFallback & 7;
LABEL_31:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001CCA20( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 92);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0B28 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  (int)a2,  *(double *)(v5 + 16),  a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }

uint64_t sub_1001CCB6C(uint64_t a1, unint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 92);
  if ((_BYTE)v3)
  {
    if ((v3 & 1) != 0)
    {
      uint64_t v5 = *(void *)(a1 + 8);
      if (!v5) {
        uint64_t v5 = *(void *)(qword_1019A0B28 + 8);
      }
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001C0720(v5, a2);
      int v8 = (int)v6;
      else {
        int v9 = 1;
      }
      unsigned int v4 = v8 + v9 + 1;
      int v3 = *(_DWORD *)(a1 + 92);
    }

    else
    {
      unsigned int v4 = 0;
    }

    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x40) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x80) != 0) {
      v4 += 9;
    }
  }

  else
  {
    unsigned int v4 = 0;
  }

  unsigned int v10 = v4 + 9;
  if ((v3 & 0x100) == 0) {
    unsigned int v10 = v4;
  }
  if ((v3 & 0x200) != 0) {
    v10 += 9;
  }
  if ((v3 & 0xFF00) != 0) {
    uint64_t result = v10;
  }
  else {
    uint64_t result = v4;
  }
  *(_DWORD *)(a1 + 88) = result;
  return result;
}

double sub_1001CCC60(uint64_t a1, void *lpsrc)
{
  return sub_1001C897C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001CCCAC()
{
  return 1LL;
}

void *sub_1001CCCB4@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.Raven.DeviceAccelerometerBias");
}

void sub_1001CCCC4(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_101827868;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0B30 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1001CCD18(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

double sub_1001CCD2C()
{
  v0 = (char *)operator new(0x60uLL);
  *(void *)v0 = &off_101827868;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *((void *)v0 + 11) = 0LL;
  return result;
}

uint64_t sub_1001CCD6C( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 92) |= 1u;
        int v8 = *(char **)(a1 + 8);
        if (!v8)
        {
          int v8 = (char *)operator new(0x38uLL);
          *(void *)int v8 = off_101827160;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *(_OWORD *)(v8 + 40) = 0u;
          *(void *)(a1 + 8) = v8;
        }

        int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v27)) {
            return 0LL;
          }
        }

        else
        {
          v27[0] = *v9;
          *((void *)this + 1) = v9 + 1;
        }

        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0LL;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        uint64_t v17 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v17 + 1;
        goto LABEL_43;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_31;
        }
LABEL_43:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 2u;
        BOOL v18 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v18 + 1;
LABEL_47:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 24) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 4u;
        int v19 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v19 + 1;
LABEL_51:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 32) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 8u;
        int v20 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v20 + 1;
LABEL_55:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 40) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 0x10u;
        uint64_t v21 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v21 + 1;
LABEL_59:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 48) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 0x20u;
        int v22 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v22 + 1;
LABEL_63:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 56) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 0x40u;
        int v23 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v23 + 1;
LABEL_67:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 64) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 0x80u;
        int v24 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v24 + 1;
LABEL_71:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 72) = *(void *)v27;
        *(_DWORD *)(a1 + 92) |= 0x100u;
        uint64_t v25 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v25 + 1;
LABEL_75:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) != 0)
        {
          *(void *)(a1 + 80) = *(void *)v27;
          *(_DWORD *)(a1 + 92) |= 0x200u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1LL;
            *((_BYTE *)this + 36) = 1;
            return result;
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_47;
        }
        goto LABEL_31;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_51;
        }
        goto LABEL_31;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_55;
        }
        goto LABEL_31;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_59;
        }
        goto LABEL_31;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_63;
        }
        goto LABEL_31;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_67;
        }
        goto LABEL_31;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_71;
        }
        goto LABEL_31;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_31;
        }
        goto LABEL_75;
      default:
        int v7 = TagFallback & 7;
LABEL_31:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001CD238( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 92);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0B30 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  (int)a2,  *(double *)(v5 + 16),  a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }

uint64_t sub_1001CD384(uint64_t a1, unint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 92);
  if ((_BYTE)v3)
  {
    if ((v3 & 1) != 0)
    {
      uint64_t v5 = *(void *)(a1 + 8);
      if (!v5) {
        uint64_t v5 = *(void *)(qword_1019A0B30 + 8);
      }
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001C0720(v5, a2);
      int v8 = (int)v6;
      else {
        int v9 = 1;
      }
      unsigned int v4 = v8 + v9 + 1;
      int v3 = *(_DWORD *)(a1 + 92);
    }

    else
    {
      unsigned int v4 = 0;
    }

    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x40) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x80) != 0) {
      v4 += 9;
    }
  }

  else
  {
    unsigned int v4 = 0;
  }

  unsigned int v10 = v4 + 9;
  if ((v3 & 0x100) == 0) {
    unsigned int v10 = v4;
  }
  if ((v3 & 0x200) != 0) {
    v10 += 9;
  }
  if ((v3 & 0xFF00) != 0) {
    uint64_t result = v10;
  }
  else {
    uint64_t result = v4;
  }
  *(_DWORD *)(a1 + 88) = result;
  return result;
}

double sub_1001CD478(uint64_t a1, void *lpsrc)
{
  return sub_1001C8B88(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001CD4C4()
{
  return 1LL;
}

void *sub_1001CD4CC@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.Raven.DeviceAccelerometerScaleFactor");
}

void sub_1001CD4DC(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1018278E0;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0B38 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1001CD530(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

double sub_1001CD544()
{
  v0 = (char *)operator new(0x40uLL);
  *(void *)v0 = &off_1018278E0;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *((void *)v0 + 7) = 0LL;
  return result;
}

uint64_t sub_1001CD57C( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_23;
        }
        *(_DWORD *)(a1 + 60) |= 1u;
        int v8 = *(char **)(a1 + 8);
        if (!v8)
        {
          int v8 = (char *)operator new(0x38uLL);
          *(void *)int v8 = off_101827160;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *(_OWORD *)(v8 + 40) = 0u;
          *(void *)(a1 + 8) = v8;
        }

        int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v23)) {
            return 0LL;
          }
        }

        else
        {
          v23[0] = *v9;
          *((void *)this + 1) = v9 + 1;
        }

        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0LL;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v23[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        uint64_t v17 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v17 + 1;
        goto LABEL_35;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_23;
        }
LABEL_35:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v23) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = *(void *)v23;
        *(_DWORD *)(a1 + 60) |= 2u;
        BOOL v18 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v18 + 1;
LABEL_39:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v23) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 24) = *(void *)v23;
        *(_DWORD *)(a1 + 60) |= 4u;
        int v19 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v19 + 1;
LABEL_43:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v23) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 32) = *(void *)v23;
        *(_DWORD *)(a1 + 60) |= 8u;
        int v20 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v20 + 1;
LABEL_47:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v23) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 40) = *(void *)v23;
        *(_DWORD *)(a1 + 60) |= 0x10u;
        uint64_t v21 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v21 + 1;
LABEL_51:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v23) & 1) != 0)
        {
          *(void *)(a1 + 48) = *(void *)v23;
          *(_DWORD *)(a1 + 60) |= 0x20u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1LL;
            *((_BYTE *)this + 36) = 1;
            return result;
          }

          continue;
        }

        return 0LL;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_39;
        }
        goto LABEL_23;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_43;
        }
        goto LABEL_23;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_47;
        }
        goto LABEL_23;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_23;
        }
        goto LABEL_51;
      default:
        int v7 = TagFallback & 7;
LABEL_23:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001CD8F8( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 60);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0B38 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  (int)a2,  *(double *)(v5 + 16),  a3);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }

uint64_t sub_1001CD9D4(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 60);
  if ((_BYTE)v3)
  {
    if ((*(_BYTE *)(a1 + 60) & 1) != 0)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_1019A0B38 + 8);
      }
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001C0720(v6, a2);
      int v9 = (int)v7;
      else {
        int v10 = 1;
      }
      unsigned int v4 = v9 + v10 + 1;
      int v3 = *(_DWORD *)(a1 + 60);
    }

    else
    {
      unsigned int v4 = 0;
    }

    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x20) != 0) {
      uint64_t result = v4 + 9;
    }
    else {
      uint64_t result = v4;
    }
  }

  else
  {
    uint64_t result = 0LL;
  }

  *(_DWORD *)(a1 + 56) = result;
  return result;
}

double sub_1001CDA8C(uint64_t a1, void *lpsrc)
{
  return sub_1001C8D94(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001CDAD8()
{
  return 1LL;
}

void *sub_1001CDAE0@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.Raven.DeviceReceiverClockDiscrepancy");
}

uint64_t sub_1001CDAF0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

uint64_t sub_1001CDAF8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_1001CDB00(uint64_t a1)
{
  return *(unsigned int *)(a1 + 164);
}

uint64_t sub_1001CDB08(uint64_t a1)
{
  return *(unsigned int *)(a1 + 224);
}

uint64_t sub_1001CDB10(uint64_t a1)
{
  return *(unsigned int *)(a1 + 156);
}

uint64_t sub_1001CDB18(uint64_t a1)
{
  return *(unsigned int *)(a1 + 92);
}

uint64_t sub_1001CDB20(uint64_t a1)
{
  return *(unsigned int *)(a1 + 88);
}

uint64_t sub_1001CDB28(uint64_t a1)
{
  return *(unsigned int *)(a1 + 128);
}

uint64_t sub_1001CDCD0(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  if (v2)
  {
    *(void *)(a1 + 8) = v2;
    operator delete(v2);
  }

  return a1;
}

uint64_t sub_1001CDD00(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  if (v2)
  {
    *(void *)(a1 + 8) = v2;
    operator delete(v2);
  }

  return a1;
}

uint64_t sub_1001CDD30@<X0>(uint64_t a1@<X0>, std::stringbuf::string_type *a2@<X8>)
{
  uint64_t v4 = v12;
  *(std::locale::__imp **)((char *)&v13.__loc_.__locale_ + *(void *)(v12 - 24)) = (std::locale::__imp *)8;
  *(_DWORD *)((char *)&v12 + *(void *)(v4 - 24) + 8) = *(_DWORD *)((_BYTE *)&v12 + *(void *)(v4 - 24) + 8) & 0xFFFFFEFB | 4;
  std::ostream::operator<<(*(double *)(a1 + 4));
  uint64_t v5 = sub_10000CF44(&v12, (uint64_t)", ", 2LL);
  uint64_t v6 = *v5;
  *(uint64_t *)((char *)v5 + *(void *)(*v5 - 24) + 16) = 8LL;
  *(_DWORD *)((char *)v5 + *(void *)(v6 - 24) + 8) = *(_DWORD *)((_BYTE *)v5 + *(void *)(v6 - 24) + 8) & 0xFFFFFEFB | 4;
  std::ostream::operator<<(*(double *)(a1 + 12));
  uint64_t v7 = sub_10000CF44(&v12, (uint64_t)", hacc, ", 8LL);
  uint64_t v8 = *v7;
  *(uint64_t *)((char *)v7 + *(void *)(*v7 - 24) + 16) = 1LL;
  *(_DWORD *)((char *)v7 + *(void *)(v8 - 24) + 8) = *(_DWORD *)((_BYTE *)v7 + *(void *)(v8 - 24) + 8) & 0xFFFFFEFB | 4;
  std::ostream::operator<<(*(double *)(a1 + 20));
  std::stringbuf::str(a2, &v13);
  *(void *)((char *)v11
  uint64_t v12 = v9;
  std::streambuf::~streambuf(&v13);
  return std::ios::~ios(&v14);
}

void sub_1001CDEA8(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_1001CDEC8(uint64_t a1)
{
  *(_DWORD *)(v2 + 40) = 0xFFFF;
  *(void *)(v2 + 52) = 0LL;
  *(void *)(v2 + 44) = 0LL;
  *(_OWORD *)(v2 + 60) = xmmword_1012E0070;
  __asm { FMOV            V1.2D, #-1.0 }

  *(_OWORD *)(v2 + 76) = _Q1;
  *(_OWORD *)(v2 + 92) = _Q1;
  *(_OWORD *)(v2 + 108) = _Q1;
  *(_DWORD *)(v2 + 124) = 0;
  *(void *)(v2 + 136) = 0LL;
  *(void *)(v2 + 144) = 0LL;
  *(void *)(v2 + 128) = 0xBFF0000000000000LL;
  *(_DWORD *)(v2 + 152) = 0;
  *(void *)(v2 + 156) = 0xBFF0000000000000LL;
  *(_DWORD *)(v2 + 164) = 0x7FFFFFFF;
  *(void *)(v2 + 176) = 0LL;
  *(void *)(v2 + 184) = 0LL;
  *(void *)(v2 + 168) = 0LL;
  *(_BYTE *)(v2 + 192) = 0;
  *(_DWORD *)(v2 + 196) = 0xFFFF;
  *(void *)(v2 + 284) = 0xBFF0000000000000LL;
  uint64_t v8 = v2 + 284;
  *(void *)(v2 + 208) = 0LL;
  *(void *)(v2 + 200) = 0LL;
  *(_OWORD *)(v2 + 216) = xmmword_1012E0070;
  *(_OWORD *)(v2 + 232) = _Q1;
  *(_OWORD *)(v2 + 248) = _Q1;
  *(void *)(v2 + 264) = 0xBFF0000000000000LL;
  *(void *)(v2 + 272) = 0xBFF0000000000000LL;
  *(_DWORD *)(v2 + 280) = 0;
  *(_DWORD *)(v2 + 308) = 0;
  *(void *)(v2 + 292) = 0LL;
  *(void *)(v2 + 300) = 0LL;
  *(void *)(v2 + 312) = 0xBFF0000000000000LL;
  *(_DWORD *)(v2 + 320) = 0x7FFFFFFF;
  *(void *)(v2 + 332) = 0LL;
  *(void *)(v2 + 340) = 0LL;
  *(void *)(v2 + 324) = 0LL;
  *(_BYTE *)(v2 + 348) = 0;
  *(_DWORD *)(v2 + 352) = 0xFFFF;
  *(void *)(v2 + 356) = 0LL;
  *(void *)(v2 + 364) = 0LL;
  *(_OWORD *)(v2 + 372) = xmmword_1012E0070;
  *(_OWORD *)(v2 + 388) = _Q1;
  *(_OWORD *)(v2 + 404) = _Q1;
  *(_OWORD *)(v2 + 420) = _Q1;
  *(_DWORD *)(v2 + 436) = 0;
  *(void *)(v2 + 440) = 0xBFF0000000000000LL;
  *(_DWORD *)(v2 + 464) = 0;
  *(void *)(v2 + 448) = 0LL;
  *(void *)(v2 + 456) = 0LL;
  *(void *)(v2 + 468) = 0xBFF0000000000000LL;
  *(_DWORD *)(v2 + 476) = 0x7FFFFFFF;
  *(void *)(v2 + 488) = 0LL;
  *(void *)(v2 + 480) = 0LL;
  *(void *)(v2 + 496) = 0LL;
  *(_BYTE *)(v2 + 504) = 0;
  *(_WORD *)(v2 + 508) = 0;
  sub_1010DDBC0((void *)(v2 + 512), "N/A");
  sub_1010DDBC0((void *)(v8 + 252), "not_set");
  sub_1010DDBC0((void *)(a1 + 560), "not_set");
  sub_1010DDBC0((void *)(a1 + 584), "not_set");
  return a1;
}

void sub_1001CE030(_Unwind_Exception *exception_object)
{
  if (v1[583] < 0) {
    operator delete(*v4);
  }
  if (v1[559] < 0) {
    operator delete(*v3);
  }
  if (v1[535] < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001CE080(uint64_t a1, __int128 *a2)
{
  if (*((_DWORD *)a2 + 24) != 4)
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101827B50);
    }
    uint64_t v9 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_FAULT, "location type is not WiFi!", buf, 2u);
    }

    if (!sub_1002921D0(115, 0)) {
      return;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101827B50);
    }
    LOWORD(v13[0]) = 0;
    int v10 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  17LL,  "location type is not WiFi!",  v13,  2,  v13[0]);
LABEL_21:
    uint64_t v12 = (uint8_t *)v10;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLWifiPositionCalculatorWithAssociatedApAnalytics::receiveWifiLocationBeforeUseOfAssociatedAp(const CLDaemonLocation &)",  "%s\n",  v10);
    if (v12 != buf) {
      free(v12);
    }
    return;
  }

  if (*(double *)((char *)a2 + 76) > 0.0)
  {
    __int128 v2 = *a2;
    *(_OWORD *)(a1 + 56) = a2[1];
    *(_OWORD *)(a1 + 40) = v2;
    __int128 v3 = a2[2];
    __int128 v4 = a2[3];
    __int128 v5 = a2[4];
    *(_OWORD *)(a1 + 120) = a2[5];
    *(_OWORD *)(a1 + 104) = v5;
    *(_OWORD *)(a1 + 88) = v4;
    *(_OWORD *)(a1 + 72) = v3;
    __int128 v6 = a2[6];
    __int128 v7 = a2[7];
    __int128 v8 = a2[8];
    *(_OWORD *)(a1 + 180) = *(__int128 *)((char *)a2 + 140);
    *(_OWORD *)(a1 + 168) = v8;
    *(_OWORD *)(a1 + 152) = v7;
    *(_OWORD *)(a1 + 136) = v6;
    return;
  }

  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101827B50);
  }
  int v11 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_FAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_FAULT, "location timestamp is not set!", buf, 2u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101827B50);
    }
    LOWORD(v13[0]) = 0;
    int v10 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  17LL,  "location timestamp is not set!",  v13,  2,  v13[0]);
    goto LABEL_21;
  }

void sub_1001CE334(_OWORD *a1, __int128 *a2)
{
  if (*((_DWORD *)a2 + 24) != 4)
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101827B50);
    }
    uint64_t v9 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_FAULT, "location type is not WiFi!", buf, 2u);
    }

    if (!sub_1002921D0(115, 0)) {
      return;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101827B50);
    }
    LOWORD(v13[0]) = 0;
    int v10 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  17LL,  "location type is not WiFi!",  v13,  2,  v13[0]);
LABEL_21:
    uint64_t v12 = (uint8_t *)v10;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLWifiPositionCalculatorWithAssociatedApAnalytics::receiveWifiLocationAfterUseOfAssociatedAp(const CLDaemonLocation &)",  "%s\n",  v10);
    if (v12 != buf) {
      free(v12);
    }
    return;
  }

  if (*(double *)((char *)a2 + 76) > 0.0)
  {
    __int128 v2 = *a2;
    *(_OWORD *)((char *)a1 + 212) = a2[1];
    *(_OWORD *)((char *)a1 + 196) = v2;
    __int128 v3 = a2[2];
    __int128 v4 = a2[3];
    __int128 v5 = a2[5];
    *(_OWORD *)((char *)a1 + 260) = a2[4];
    *(_OWORD *)((char *)a1 + 276) = v5;
    *(_OWORD *)((char *)a1 + 244) = v4;
    *(_OWORD *)((char *)a1 + 228) = v3;
    __int128 v6 = a2[6];
    __int128 v7 = a2[7];
    __int128 v8 = a2[8];
    a1[21] = *(__int128 *)((char *)a2 + 140);
    *(_OWORD *)((char *)a1 + 308) = v7;
    *(_OWORD *)((char *)a1 + 324) = v8;
    *(_OWORD *)((char *)a1 + 292) = v6;
    return;
  }

  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101827B50);
  }
  int v11 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_FAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_FAULT, "location timestamp is not set!", buf, 2u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101827B50);
    }
    LOWORD(v13[0]) = 0;
    int v10 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  17LL,  "location timestamp is not set!",  v13,  2,  v13[0]);
    goto LABEL_21;
  }

void sub_1001CE5E4(_OWORD *a1, uint64_t a2)
{
  if (*(_DWORD *)(a2 + 96) != 1)
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101827B50);
    }
    uint64_t v9 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_FAULT, "location type is not GPS!", buf, 2u);
    }

    if (!sub_1002921D0(115, 0)) {
      return;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101827B50);
    }
    LOWORD(v13[0]) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  17LL,  "location type is not GPS!",  v13,  2,  v13[0]);
LABEL_22:
    uint64_t v12 = (uint8_t *)v10;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLWifiPositionCalculatorWithAssociatedApAnalytics::receiveGpsLocation(const CLDaemonLocation &)",  "%s\n",  v10);
    if (v12 != buf) {
      free(v12);
    }
    return;
  }

  if (*(double *)(a2 + 76) > 0.0)
  {
    if (*(double *)(a2 + 20) <= 30.0)
    {
      __int128 v2 = *(_OWORD *)(a2 + 16);
      a1[22] = *(_OWORD *)a2;
      a1[23] = v2;
      __int128 v3 = *(_OWORD *)(a2 + 32);
      __int128 v4 = *(_OWORD *)(a2 + 48);
      __int128 v5 = *(_OWORD *)(a2 + 80);
      a1[26] = *(_OWORD *)(a2 + 64);
      a1[27] = v5;
      a1[24] = v3;
      a1[25] = v4;
      __int128 v6 = *(_OWORD *)(a2 + 96);
      __int128 v7 = *(_OWORD *)(a2 + 112);
      __int128 v8 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)((char *)a1 + 492) = *(_OWORD *)(a2 + 140);
      a1[29] = v7;
      a1[30] = v8;
      a1[28] = v6;
    }

    return;
  }

  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101827B50);
  }
  int v11 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_FAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_FAULT, "location timestamp is not set!", buf, 2u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101827B50);
    }
    LOWORD(v13[0]) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  17LL,  "location timestamp is not set!",  v13,  2,  v13[0]);
    goto LABEL_22;
  }

std::string *sub_1001CE89C(uint64_t a1, const std::string *a2)
{
  return std::string::operator=((std::string *)(a1 + 512), a2);
}

std::string *sub_1001CE8A4(uint64_t a1, const std::string *a2)
{
  return std::string::operator=((std::string *)(a1 + 584), a2);
}

void sub_1001CE8AC(uint64_t a1)
{
  uint64_t v2 = a1 + 352;
  uint64_t v3 = a1 + 196;
  sub_100D2DCA4((double *)a1, a1 + 352, a1 + 196);
  double v5 = v4;
  if (v4 >= *((double *)sub_100F4BF44() + 9))
  {
    sub_100D2DCA4((double *)a1, v2, a1 + 40);
    uint64_t v7 = v6;
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101827B50);
    }
    __int128 v8 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_FAULT))
    {
      sub_1001CDD30(v2, &v26);
      if ((v26.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v9 = &v26;
      }
      else {
        uint64_t v9 = (std::stringbuf::string_type *)v26.__r_.__value_.__r.__words[0];
      }
      sub_1001CDD30(a1 + 40, &v25);
      int size = (char)v25.__r_.__value_.__s.__size_;
      std::string::size_type v11 = v25.__r_.__value_.__r.__words[0];
      sub_1001CDD30(v3, &__p);
      if (size >= 0) {
        uint64_t v12 = &v25;
      }
      else {
        uint64_t v12 = (std::stringbuf::string_type *)v11;
      }
      p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
      if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        p_p = &__p;
      }
      uint64_t v14 = (void *)(a1 + 512);
      *(_DWORD *)buf = 136316418;
      int v35 = v9;
      __int16 v36 = 2080;
      uint64_t v37 = v12;
      __int16 v38 = 2050;
      uint64_t v39 = v7;
      __int16 v40 = 2080;
      uint64_t v41 = p_p;
      __int16 v42 = 2050;
      double v43 = v5;
      __int16 v44 = 2080;
      int v45 = v14;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_FAULT,  "Large error detected! GPS: %s. Wifi1 before use of associated AP: %s, error %{public}.1fm. After: %s, error %{pu blic}.1fm. LOI: %s",  buf,  0x3Eu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101827B50);
      }
      uint64_t v15 = qword_101934858;
      sub_1001CDD30(v2, &v25);
      if ((v25.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        int v16 = &v25;
      }
      else {
        int v16 = (std::stringbuf::string_type *)v25.__r_.__value_.__r.__words[0];
      }
      sub_1001CDD30(a1 + 40, &__p);
      int v17 = (char)__p.__r_.__value_.__s.__size_;
      std::string::size_type v18 = __p.__r_.__value_.__r.__words[0];
      sub_1001CDD30(v3, &v23);
      if (v17 >= 0) {
        int v19 = &__p;
      }
      else {
        int v19 = (std::stringbuf::string_type *)v18;
      }
      int v20 = (std::stringbuf::string_type *)v23.__r_.__value_.__r.__words[0];
      if ((v23.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        int v20 = &v23;
      }
      uint64_t v21 = (void *)(a1 + 512);
      LODWORD(v26.__r_.__value_.__l.__data_) = 136316418;
      *(std::string::size_type *)((char *)v26.__r_.__value_.__r.__words + 4) = (std::string::size_type)v16;
      WORD2(v26.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&v26.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v19;
      HIWORD(v26.__r_.__value_.__r.__words[2]) = 2050;
      uint64_t v27 = v7;
      __int16 v28 = 2080;
      uint64_t v29 = v20;
      __int16 v30 = 2050;
      double v31 = v5;
      __int16 v32 = 2080;
      uint64_t v33 = v21;
      int v22 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v15,  17LL,  "Large error detected! GPS: %s. Wifi1 before use of associated AP: %s, error %{public}.1fm. After: %s, error %{public}.1fm. LOI: %s",  &v26,  62);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLWifiPositionCalculatorWithAssociatedApAnalytics::logFaultForLargeErrorAfterUseOfAssociatedAp()",  "%s\n",  v22);
    }
  }

void sub_1001CEC58( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20, void *a21, uint64_t a22, int a23, __int16 a24, char a25, char a26, uint64_t a27, uint64_t a28, int a29, __int16 a30, char a31, char a32)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001CECC0(uint64_t result, char a2)
{
  *(_BYTE *)(result + 508) = a2;
  return result;
}

uint64_t sub_1001CECC8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 509) = a2;
  return result;
}

std::string *sub_1001CECD0(uint64_t a1, const std::string *a2)
{
  return std::string::operator=((std::string *)(a1 + 536), a2);
}

std::string *sub_1001CECD8(uint64_t a1, const std::string *a2)
{
  return std::string::operator=((std::string *)(a1 + 560), a2);
}

uint64_t sub_1001CECE0(uint64_t a1)
{
  return sub_1001CF5B8(a1);
}

void sub_1001CED24(uint64_t a1)
{
  if (!(rand() % dword_101993C38))
  {
    std::operator+<char>(v4, "isWifiFixOverriddenByAssociatedApAt", a1 + 512);
    if (byte_101993C57 >= 0) {
      uint64_t v2 = &qword_101993C40;
    }
    else {
      uint64_t v2 = (uint64_t *)qword_101993C40;
    }
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472LL;
    v3[2] = sub_1001CF7D8;
    v3[3] = &unk_101827B10;
    v3[4] = a1;
    v3[5] = v4;
    AnalyticsSendEventLazy(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v2), v3);
    if (v5 < 0) {
      operator delete(v4[0]);
    }
  }

void sub_1001CEDE4(_Unwind_Exception *exception_object)
{
}

uint64_t sub_1001CEE00(uint64_t result)
{
  if (*(_BYTE *)(result + 509))
  {
    uint64_t v1 = result;
    uint64_t result = rand();
    if (!((int)result % dword_101993C38))
    {
      if (byte_101993C57 >= 0) {
        uint64_t v2 = &qword_101993C40;
      }
      else {
        uint64_t v2 = (uint64_t *)qword_101993C40;
      }
      v3[0] = _NSConcreteStackBlock;
      v3[1] = 3221225472LL;
      v3[2] = sub_1001CF8A8;
      v3[3] = &unk_101820718;
      v3[4] = v1;
      return AnalyticsSendEventLazy( +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v2),  v3);
    }
  }

  return result;
}

uint64_t sub_1001CEEA0(uint64_t a1)
{
  uint64_t v2 = a1 + 40;
  uint64_t result = sub_100869780(a1 + 40);
  if ((_DWORD)result)
  {
    uint64_t result = sub_100869780(a1 + 196);
    if ((_DWORD)result)
    {
      uint64_t result = rand();
      if (!((int)result % dword_101993C38))
      {
        sub_100D2DCA4((double *)a1, v2, a1 + 196);
        uint64_t v5 = v4;
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101827B50);
        }
        uint64_t v6 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v7 = (void *)(a1 + 584);
          __int128 v8 = (void *)(a1 + 512);
          *(_DWORD *)buf = 136446723;
          uint64_t v21 = v7;
          __int16 v22 = 2050;
          uint64_t v23 = v5;
          __int16 v24 = 2081;
          std::stringbuf::string_type v25 = v8;
          _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "WifiPositionCalculatorWithAssociatedApAnalytics, fixType, %{public}s, wifiFixDistanceBeforeAndAfterUseOfAsso ciatedAp, %{public}.1fm, LOI %{private}s",  buf,  0x20u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101827B50);
          }
          int v10 = (void *)(a1 + 584);
          std::string::size_type v11 = (void *)(a1 + 512);
          int v14 = 136446723;
          uint64_t v15 = v10;
          __int16 v16 = 2050;
          uint64_t v17 = v5;
          __int16 v18 = 2081;
          int v19 = v11;
          uint64_t v12 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "WifiPositionCalculatorWithAssociatedApAnalytics, fixType, %{public}s, wifiFixDistanceBeforeAnd AfterUseOfAssociatedAp, %{public}.1fm, LOI %{private}s",  &v14,  32);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiPositionCalculatorWithAssociatedApAnalytics::submitWifiFixDistanceBeforeAndAfterUseOfAssociatedApIfPossible()",  "%s\n",  v12);
        }

        if (byte_101993C57 >= 0) {
          uint64_t v9 = &qword_101993C40;
        }
        else {
          uint64_t v9 = (uint64_t *)qword_101993C40;
        }
        v13[0] = _NSConcreteStackBlock;
        v13[1] = 3221225472LL;
        void v13[2] = sub_1001CF958;
        v13[3] = &unk_101827B10;
        v13[4] = a1;
        v13[5] = v5;
        return AnalyticsSendEventLazy( +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v9),  v13);
      }
    }
  }

  return result;
}

void sub_1001CF16C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 509)
    && sub_100869780(a1 + 352)
    && sub_100869780(a1 + 40)
    && sub_100869780(a1 + 196))
  {
    double v2 = *(double *)(a1 + 272);
    if (*(double *)(a1 + 116) == v2)
    {
      if (vabdd_f64(*(double *)(a1 + 428), v2) <= 1.0)
      {
        sub_1001CE8AC(a1);
        if (!(rand() % dword_101993C38)) {
          sub_1001CFA44(a1);
        }
      }
    }

    else
    {
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101827B50);
      }
      uint64_t v3 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_FAULT,  "different timestamps between wifi locations before and after use of associated AP!",  buf,  2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101827B50);
        }
        v5[0] = 0;
        uint64_t v4 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  17LL,  "different timestamps between wifi locations before and after use of associated AP!",  v5,  2);
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLWifiPositionCalculatorWithAssociatedApAnalytics::submitWifiFixErrorAndHorizontalErrorRatioMetricsIfPossible()",  "%s\n",  v4);
      }
    }
  }

uint64_t sub_1001CF398(uint64_t a1)
{
  uint64_t result = rand();
  if (!((int)result % dword_101993C38))
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101827B50);
    }
    uint64_t v3 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v4 = (void *)(a1 + 536);
      *(_DWORD *)buf = 136380675;
      std::string::size_type v11 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "wifiFixWithAssociatedApOutcome, %{private}s",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101827B50);
      }
      uint64_t v5 = (void *)(a1 + 536);
      int v8 = 136380675;
      uint64_t v9 = v5;
      uint64_t v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "wifiFixWithAssociatedApOutcome, %{private}s",  &v8,  12);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiPositionCalculatorWithAssociatedApAnalytics::submitWifiFixWithAssociatedApOutcomeMetricsIfPossible()",  "%s\n",  v6);
    }

    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472LL;
    v7[2] = sub_1001CFEAC;
    v7[3] = &unk_101820718;
    v7[4] = a1;
    return AnalyticsSendEventLazy(@"com.apple.clx.wifiFixWithAssociatedApOutcome", v7);
  }

  return result;
}

uint64_t sub_1001CF5B8(uint64_t a1)
{
  uint64_t result = rand();
  if (!((int)result % dword_101993C38))
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101827B50);
    }
    uint64_t v3 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v4 = (void *)(a1 + 560);
      *(_DWORD *)buf = 136380675;
      std::string::size_type v11 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "associatedApCentroidFetchOutcome, %{private}s",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101827B50);
      }
      uint64_t v5 = (void *)(a1 + 560);
      int v8 = 136380675;
      uint64_t v9 = v5;
      uint64_t v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "associatedApCentroidFetchOutcome, %{private}s",  &v8,  12);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiPositionCalculatorWithAssociatedApAnalytics::submitAssociatedApCentroidFetchOutcomeMetricsIfPossible()",  "%s\n",  v6);
    }

    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472LL;
    v7[2] = sub_1001CFF64;
    v7[3] = &unk_101820718;
    v7[4] = a1;
    return AnalyticsSendEventLazy(@"com.apple.clx.associatedApCentroidFetchOutcome", v7);
  }

  return result;
}

NSDictionary *sub_1001CF7D8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  v6[0] = @"fixType";
  uint64_t v3 = (void *)(v2 + 584);
  v7[0] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v3);
  uint64_t v4 = *(uint64_t **)(a1 + 40);
  v6[1] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v4);
  v7[1] = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", *(unsigned __int8 *)(v2 + 509));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v7,  v6,  2LL);
}

NSDictionary *sub_1001CF8A8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  v4[0] = @"fixType";
  uint64_t v2 = (void *)(v1 + 584);
  v4[1] = @"wifiFixYieldIncrease";
  v5[0] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v2);
  v5[1] = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", *(unsigned __int8 *)(v1 + 508));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v5,  v4,  2LL);
}

NSDictionary *sub_1001CF958(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  v7[0] = @"fixType";
  uint64_t v3 = (void *)(v2 + 584);
  v8[0] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v3);
  v7[1] = @"wifiFixDistanceBeforeAndAfterUseOfAssociatedAp";
  LODWORD(v4) = llround(*(double *)(a1 + 40));
  v8[1] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v4);
  void v7[2] = @"wifiFixLocationOfInterestTypeString";
  uint64_t v5 = (void *)(v2 + 512);
  v8[2] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v5);
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v8,  v7,  3LL);
}

uint64_t sub_1001CFA44(uint64_t a1)
{
  uint64_t v2 = a1 + 352;
  sub_100D2DCA4((double *)a1, a1 + 352, a1 + 40);
  double v4 = v3;
  double v5 = *(double *)(a1 + 60);
  sub_100D2DCA4((double *)a1, v2, a1 + 196);
  double v7 = v6;
  double v8 = *(double *)(a1 + 216);
  double v9 = *(double *)(v2 + 76);
  double v10 = *(double *)(a1 + 272);
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101827B50);
  }
  double v11 = vabdd_f64(v9, v10);
  uint64_t v12 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    std::stringbuf v13 = (void *)(a1 + 512);
    *(_DWORD *)buf = 134350083;
    double v32 = v4;
    __int16 v33 = 2050;
    double v34 = v7;
    __int16 v35 = 2050;
    double v36 = v4 - v7;
    __int16 v37 = 2050;
    double v38 = v11;
    __int16 v39 = 2081;
    __int16 v40 = v13;
    _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "WifiPositionCalculatorWithAssociatedApAnalytics, wifiFixErrorBeforeUseOfAssociatedAp, %{public}.1fm, wifiFixErrorA fterUseOfAssociatedAp, %{public}.1fm, wifiFixAccuracyGainByUseOfAssociatedAp, %{public}.1fm, deltaTimeFromGps, %{p ublic}.1fs, LOI %{private}s",  buf,  0x34u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101827B50);
    }
    __int16 v18 = (void *)(a1 + 512);
    int v21 = 134350083;
    double v22 = v4;
    __int16 v23 = 2050;
    double v24 = v7;
    __int16 v25 = 2050;
    double v26 = v4 - v7;
    __int16 v27 = 2050;
    double v28 = v11;
    __int16 v29 = 2081;
    __int16 v30 = v18;
    int v19 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "WifiPositionCalculatorWithAssociatedApAnalytics, wifiFixErrorBeforeUseOfAssociatedAp, %{public}.1fm, wifiFixErrorAfterUseOfAssociatedAp, %{public}.1fm, wifiFixAccuracyGainByUseOfAssociatedAp, %{public }.1fm, deltaTimeFromGps, %{public}.1fs, LOI %{private}s",  &v21,  52);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiPositionCalculatorWithAssociatedApAnalytics::sendCoreAnalyticsEventForWifiFixErrorAndHorizontalErrorRatio()",  "%s\n",  v19);
  }

  if (v8 <= 0.0) {
    double v14 = INFINITY;
  }
  else {
    double v14 = v7 / v8;
  }
  if (v5 <= 0.0) {
    double v15 = INFINITY;
  }
  else {
    double v15 = v4 / v5;
  }
  if (byte_101993C57 >= 0) {
    __int16 v16 = &qword_101993C40;
  }
  else {
    __int16 v16 = (uint64_t *)qword_101993C40;
  }
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472LL;
  v20[2] = sub_1001CFD48;
  v20[3] = &unk_101827B30;
  v20[4] = a1;
  *(double *)&v20[5] = v4;
  *(double *)&v20[6] = v7;
  *(double *)&v20[7] = v15;
  *(double *)&v20[8] = v14;
  *(double *)&v20[9] = v4 - v7;
  return AnalyticsSendEventLazy( +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v16),  v20);
}

NSDictionary *sub_1001CFD48(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  v9[0] = @"fixType";
  double v3 = (void *)(v2 + 584);
  v10[0] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v3);
  v9[1] = @"wifiFixErrorBeforeUseOfAssociatedAp";
  LODWORD(v4) = llround(*(double *)(a1 + 40));
  v10[1] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v4);
  v9[2] = @"wifiFixErrorAfterUseOfAssociatedAp";
  LODWORD(sub_1012279C0(0LL, v4, v5) = llround(*(double *)(a1 + 48));
  v10[2] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v5);
  v9[3] = @"hErrRatioBeforeUseOfAssociatedAp";
  v10[3] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", *(double *)(a1 + 56));
  v9[4] = @"hErrRatioAfterUseOfAssociatedAp";
  v10[4] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", *(double *)(a1 + 64));
  v9[5] = @"wifiFixAccuracyGainByUseOfAssociatedAp";
  LODWORD(v6) = llround(*(double *)(a1 + 72));
  v10[5] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v6);
  v9[6] = @"wifiFixLocationOfInterestTypeString";
  double v7 = (void *)(v2 + 512);
  v10[6] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v7);
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v10,  v9,  7LL);
}

NSDictionary *sub_1001CFEAC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  v5[0] = @"fixType";
  uint64_t v2 = (void *)(v1 + 584);
  v5[1] = @"wifiFixWithAssociatedApOutcome";
  v6[0] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v2);
  double v3 = (void *)(v1 + 536);
  v6[1] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v3);
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v6,  v5,  2LL);
}

NSDictionary *sub_1001CFF64(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  v5[0] = @"fixType";
  uint64_t v2 = (void *)(v1 + 584);
  v5[1] = @"associatedApCentroidFetchOutcome";
  v6[0] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v2);
  double v3 = (void *)(v1 + 560);
  v6[1] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v3);
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v6,  v5,  2LL);
}

void sub_1001D001C(id a1)
{
  qword_101934858 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

void sub_1001D0048()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1019361B8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1019361B8))
    {
      qword_1019361A0 = 0LL;
      qword_1019361A8 = 0LL;
      qword_1019361B0 = 0LL;
      uint64_t v1 = operator new(6uLL);
      qword_1019361A8 = (uint64_t)(v1 + 3);
      qword_1019361B0 = (uint64_t)(v1 + 3);
      *(_DWORD *)uint64_t v1 = 151521030;
      v1[2] = 3082;
      qword_1019361A0 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1001CDCD0, &qword_1019361A0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1019361B8);
    }
  }

void sub_1001D00E4(_Unwind_Exception *a1)
{
}

void sub_1001D00FC()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1019361D8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1019361D8))
    {
      qword_1019361C0 = 0LL;
      qword_1019361C8 = 0LL;
      qword_1019361D0 = 0LL;
      uint64_t v1 = operator new(2uLL);
      qword_1019361C0 = (uint64_t)v1;
      _WORD *v1 = 256;
      qword_1019361C8 = (uint64_t)(v1 + 1);
      qword_1019361D0 = (uint64_t)(v1 + 1);
      __cxa_atexit((void (*)(void *))sub_1001CDD00, &qword_1019361C0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1019361D8);
    }
  }

void sub_1001D0188(_Unwind_Exception *a1)
{
}

uint64_t sub_1001D01A0()
{
  dword_101993C38 = *(_DWORD *)sub_100F4CD68();
  sub_1010DDBC0(&qword_101993C40, "com.apple.wifiPositionCalculatorWithAssociatedAp.analytics");
  return __cxa_atexit((void (*)(void *))&std::string::~string, &qword_101993C40, (void *)&_mh_execute_header);
}

uint64_t sub_1001D01F4()
{
  if (qword_1019A0B40) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0B40 + 8LL))(qword_1019A0B40);
  }
  if (qword_1019A0B48) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0B48 + 8LL))(qword_1019A0B48);
  }
  if (qword_1019A0B50) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0B50 + 8LL))(qword_1019A0B50);
  }
  if (qword_1019A0B58) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0B58 + 8LL))(qword_1019A0B58);
  }
  if (qword_1019A0B60) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0B60 + 8LL))(qword_1019A0B60);
  }
  if (qword_1019A0B68) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0B68 + 8LL))(qword_1019A0B68);
  }
  if (qword_1019A0B70) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0B70 + 8LL))(qword_1019A0B70);
  }
  if (qword_1019A0B78) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0B78 + 8LL))(qword_1019A0B78);
  }
  if (qword_1019A0B80) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0B80 + 8LL))(qword_1019A0B80);
  }
  if (qword_1019A0B88) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0B88 + 8LL))(qword_1019A0B88);
  }
  if (qword_1019A0B90) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0B90 + 8LL))(qword_1019A0B90);
  }
  if (qword_1019A0B98) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0B98 + 8LL))(qword_1019A0B98);
  }
  if (qword_1019A0BA0) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0BA0 + 8LL))(qword_1019A0BA0);
  }
  if (qword_1019A0BA8) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0BA8 + 8LL))(qword_1019A0BA8);
  }
  if (qword_1019A0BB0) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0BB0 + 8LL))(qword_1019A0BB0);
  }
  if (qword_1019A0BB8) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0BB8 + 8LL))(qword_1019A0BB8);
  }
  if (qword_1019A0BC0) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0BC0 + 8LL))(qword_1019A0BC0);
  }
  if (qword_1019A0BC8) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0BC8 + 8LL))(qword_1019A0BC8);
  }
  if (qword_1019A0BD0) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0BD0 + 8LL))(qword_1019A0BD0);
  }
  if (qword_1019A0BD8) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0BD8 + 8LL))(qword_1019A0BD8);
  }
  if (qword_1019A0BE0) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0BE0 + 8LL))(qword_1019A0BE0);
  }
  if (qword_1019A0BE8) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0BE8 + 8LL))(qword_1019A0BE8);
  }
  if (qword_1019A0BF0) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0BF0 + 8LL))(qword_1019A0BF0);
  }
  if (qword_1019A0BF8) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0BF8 + 8LL))(qword_1019A0BF8);
  }
  if (qword_1019A0C00) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0C00 + 8LL))(qword_1019A0C00);
  }
  if (qword_1019A0C08) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0C08 + 8LL))(qword_1019A0C08);
  }
  if (qword_1019A0C10) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0C10 + 8LL))(qword_1019A0C10);
  }
  if (qword_1019A0C18) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0C18 + 8LL))(qword_1019A0C18);
  }
  if (qword_1019A0C20) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0C20 + 8LL))(qword_1019A0C20);
  }
  if (qword_1019A0C28) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0C28 + 8LL))(qword_1019A0C28);
  }
  if (qword_1019A0C30) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0C30 + 8LL))(qword_1019A0C30);
  }
  if (qword_1019A0C38) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0C38 + 8LL))(qword_1019A0C38);
  }
  if (qword_1019A0C40) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0C40 + 8LL))(qword_1019A0C40);
  }
  if (qword_1019A0C48) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0C48 + 8LL))(qword_1019A0C48);
  }
  if (qword_1019A0C50) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0C50 + 8LL))(qword_1019A0C50);
  }
  if (qword_1019A0C58) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0C58 + 8LL))(qword_1019A0C58);
  }
  if (qword_1019A0C60) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0C60 + 8LL))(qword_1019A0C60);
  }
  if (qword_1019A0C68) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0C68 + 8LL))(qword_1019A0C68);
  }
  if (qword_1019A0C70) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0C70 + 8LL))(qword_1019A0C70);
  }
  if (qword_1019A0C78) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0C78 + 8LL))(qword_1019A0C78);
  }
  if (qword_1019A0C80) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0C80 + 8LL))(qword_1019A0C80);
  }
  if (qword_1019A0C88) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0C88 + 8LL))(qword_1019A0C88);
  }
  if (qword_1019A0C90) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0C90 + 8LL))(qword_1019A0C90);
  }
  if (qword_1019A0C98) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0C98 + 8LL))(qword_1019A0C98);
  }
  if (qword_1019A0CA0) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0CA0 + 8LL))(qword_1019A0CA0);
  }
  if (qword_1019A0CA8) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0CA8 + 8LL))(qword_1019A0CA8);
  }
  if (qword_1019A0CB0) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0CB0 + 8LL))(qword_1019A0CB0);
  }
  if (qword_1019A0CB8) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0CB8 + 8LL))(qword_1019A0CB8);
  }
  if (qword_1019A0CC0) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0CC0 + 8LL))(qword_1019A0CC0);
  }
  if (qword_1019A0CC8) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0CC8 + 8LL))(qword_1019A0CC8);
  }
  if (qword_1019A0CD0) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0CD0 + 8LL))(qword_1019A0CD0);
  }
  if (qword_1019A0CD8) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0CD8 + 8LL))(qword_1019A0CD8);
  }
  if (qword_1019A0CE0) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0CE0 + 8LL))(qword_1019A0CE0);
  }
  if (qword_1019A0CE8) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0CE8 + 8LL))(qword_1019A0CE8);
  }
  if (qword_1019A0CF0) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0CF0 + 8LL))(qword_1019A0CF0);
  }
  if (qword_1019A0CF8) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0CF8 + 8LL))(qword_1019A0CF8);
  }
  if (qword_1019A0D00) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0D00 + 8LL))(qword_1019A0D00);
  }
  if (qword_1019A0D08) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0D08 + 8LL))(qword_1019A0D08);
  }
  if (qword_1019A0D10) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0D10 + 8LL))(qword_1019A0D10);
  }
  if (qword_1019A0D18) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0D18 + 8LL))(qword_1019A0D18);
  }
  if (qword_1019A0D20) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0D20 + 8LL))(qword_1019A0D20);
  }
  if (qword_1019A0D28) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0D28 + 8LL))(qword_1019A0D28);
  }
  if (qword_1019A0D30) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0D30 + 8LL))(qword_1019A0D30);
  }
  if (qword_1019A0D38) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0D38 + 8LL))(qword_1019A0D38);
  }
  if (qword_1019A0D40) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0D40 + 8LL))(qword_1019A0D40);
  }
  if (qword_1019A0D48) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0D48 + 8LL))(qword_1019A0D48);
  }
  if (qword_1019A0D50) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0D50 + 8LL))(qword_1019A0D50);
  }
  if (qword_1019A0D58) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0D58 + 8LL))(qword_1019A0D58);
  }
  if (qword_1019A0D60) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0D60 + 8LL))(qword_1019A0D60);
  }
  if (qword_1019A0D68) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0D68 + 8LL))(qword_1019A0D68);
  }
  if (qword_1019A0D70) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0D70 + 8LL))(qword_1019A0D70);
  }
  if (qword_1019A0D78) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0D78 + 8LL))(qword_1019A0D78);
  }
  if (qword_1019A0D80) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0D80 + 8LL))(qword_1019A0D80);
  }
  if (qword_1019A0D88) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0D88 + 8LL))(qword_1019A0D88);
  }
  if (qword_1019A0D90) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0D90 + 8LL))(qword_1019A0D90);
  }
  if (qword_1019A0D98) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0D98 + 8LL))(qword_1019A0D98);
  }
  if (qword_1019A0DA0) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0DA0 + 8LL))(qword_1019A0DA0);
  }
  if (qword_1019A0DA8) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0DA8 + 8LL))(qword_1019A0DA8);
  }
  if (qword_1019A0DB0) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0DB0 + 8LL))(qword_1019A0DB0);
  }
  if (qword_1019A0DB8) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0DB8 + 8LL))(qword_1019A0DB8);
  }
  if (qword_1019A0DC0) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0DC0 + 8LL))(qword_1019A0DC0);
  }
  if (qword_1019A0DC8) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0DC8 + 8LL))(qword_1019A0DC8);
  }
  if (qword_1019A0DD0) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0DD0 + 8LL))(qword_1019A0DD0);
  }
  if (qword_1019A0DD8) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0DD8 + 8LL))(qword_1019A0DD8);
  }
  if (qword_1019A0DE0) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0DE0 + 8LL))(qword_1019A0DE0);
  }
  if (qword_1019A0DE8) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0DE8 + 8LL))(qword_1019A0DE8);
  }
  if (qword_1019A0DF0) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A0DF0 + 8LL))(qword_1019A0DF0);
  }
  uint64_t result = qword_1019A0DF8;
  if (qword_1019A0DF8) {
    return (*(uint64_t (**)(uint64_t))(*(void *)qword_1019A0DF8 + 8LL))(qword_1019A0DF8);
  }
  return result;
}

void sub_1001D0A48(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_101993C58 & 1) != 0) {
    return;
  }
  byte_101993C58 = 1;
  wireless_diagnostics::google::protobuf::internal::VerifyVersion( (wireless_diagnostics::google::protobuf::internal *)0x1E9808,  2005000,  (int)"/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  a4);
  uint64_t v4 = (char *)operator new(0x28uLL);
  *(void *)uint64_t v4 = off_101827B80;
  *(_OWORD *)(v4 + 8) = 0u;
  *(_OWORD *)(v4 + 24) = 0u;
  qword_1019A0B40 = (uint64_t)v4;
  uint64_t v5 = operator new(0x28uLL);
  *uint64_t v5 = &off_101827BF8;
  v5[1] = 0LL;
  void v5[2] = 0LL;
  v5[3] = 0LL;
  *((_DWORD *)v5 + 8) = 0;
  qword_1019A0B48 = (uint64_t)v5;
  uint64_t v6 = operator new(0x30uLL);
  v6[5] = 0LL;
  *uint64_t v6 = off_101827C70;
  v6[1] = 0LL;
  void v6[2] = 0LL;
  v6[3] = 0LL;
  *((_DWORD *)v6 + 8) = 0;
  qword_1019A0B50 = (uint64_t)v6;
  double v7 = operator new(0x28uLL);
  *double v7 = &off_101827CE8;
  v7[1] = 0LL;
  void v7[2] = 0LL;
  void v7[3] = 0LL;
  *((_DWORD *)v7 + 8) = 0;
  qword_1019A0B58 = (uint64_t)v7;
  double v8 = operator new(0x30uLL);
  v8[5] = 0LL;
  *double v8 = off_101827D60;
  v8[1] = 0LL;
  v8[2] = 0LL;
  void v8[3] = 0LL;
  *((_DWORD *)v8 + 8) = 0;
  qword_1019A0B60 = (uint64_t)v8;
  double v9 = operator new(0x20uLL);
  *double v9 = &off_101827DD8;
  v9[1] = 0LL;
  v9[2] = 0LL;
  v9[3] = 0LL;
  qword_1019A0B68 = (uint64_t)v9;
  double v10 = operator new(0x30uLL);
  v10[5] = 0LL;
  *double v10 = off_101827E50;
  v10[1] = 0LL;
  v10[2] = 0LL;
  v10[3] = 0LL;
  *((_DWORD *)v10 + 8) = 0;
  qword_1019A0B70 = (uint64_t)v10;
  double v11 = operator new(0x20uLL);
  *double v11 = off_101827EC8;
  v11[1] = 0LL;
  void v11[2] = 0LL;
  v11[3] = 0LL;
  qword_1019A0B78 = (uint64_t)v11;
  uint64_t v12 = (char *)operator new(0xA0uLL);
  *(void *)uint64_t v12 = off_101827F40;
  *(_OWORD *)(v12 + 8) = 0u;
  *(_OWORD *)(v12 + 24) = 0u;
  *(_OWORD *)(v12 + 40) = 0u;
  *(_OWORD *)(v12 + 56) = 0u;
  *(_OWORD *)(v12 + 72) = 0u;
  *(_OWORD *)(v12 + 88) = 0u;
  *(_OWORD *)(v12 + 104) = 0u;
  *(_OWORD *)(v12 + 120) = xmmword_1012E0BA0;
  *((void *)v12 + 17) = 0LL;
  v12[144] = 0;
  *(void *)(v12 + 148) = 0LL;
  qword_1019A0B80 = (uint64_t)v12;
  std::stringbuf v13 = operator new(0x28uLL);
  *(void *)((char *)v13 + 28) = 0LL;
  v13[1] = 0LL;
  void v13[2] = 0LL;
  *std::stringbuf v13 = off_101827FB8;
  *((_WORD *)v13 + 12) = 0;
  qword_1019A0B88 = (uint64_t)v13;
  double v14 = operator new(0x20uLL);
  *double v14 = off_101828030;
  v14[1] = 0LL;
  v14[2] = 0LL;
  v14[3] = 0LL;
  qword_1019A0B90 = (uint64_t)v14;
  double v15 = operator new(0x30uLL);
  *(void *)((char *)v15 + 36) = 0LL;
  *double v15 = off_1018280A8;
  v15[1] = 0LL;
  v15[2] = 0LL;
  v15[3] = 0LL;
  *((_WORD *)v15 + 16) = 0;
  qword_1019A0B98 = (uint64_t)v15;
  __int16 v16 = (char *)operator new(0x178uLL);
  *(void *)__int16 v16 = off_101828198;
  *((void *)v16 + 36) = 0LL;
  *((void *)v16 + 37) = 0LL;
  *((_DWORD *)v16 + 76) = 0;
  *((_DWORD *)v16 + 90) = 0;
  *((_WORD *)v16 + 56) = 0;
  *(_OWORD *)(v16 + 8) = 0u;
  *(_OWORD *)(v16 + 24) = 0u;
  *(_OWORD *)(v16 + 40) = 0u;
  *(_OWORD *)(v16 + 56) = 0u;
  *(_OWORD *)(v16 + 72) = 0u;
  *((void *)v16 + 11) = 0LL;
  *((void *)v16 + 12) = 0xFFFFFFFFLL;
  *((void *)v16 + 13) = 0LL;
  *(void *)(v16 + 364) = 0LL;
  *(_OWORD *)(v16 + 130) = 0u;
  *(_OWORD *)(v16 + 146) = 0u;
  *(_OWORD *)(v16 + 162) = 0u;
  *(_OWORD *)(v16 + 178) = 0u;
  *(_OWORD *)(v16 + 194) = 0u;
  *(_OWORD *)(v16 + 210) = 0u;
  *(_OWORD *)(v16 + 226) = 0u;
  *(_OWORD *)(v16 + 242) = 0u;
  *((_OWORD *)v16 + 17) = 0u;
  qword_1019A0BA0 = (uint64_t)v16;
  *(_OWORD *)(v16 + 114) = 0u;
  *(_OWORD *)(v16 + 258) = 0u;
  *(_OWORD *)(v16 + 341) = 0u;
  *(_OWORD *)(v16 + 312) = 0u;
  *(_OWORD *)(v16 + 328) = 0u;
  uint64_t v17 = operator new(0x30uLL);
  void *v17 = off_101828120;
  v17[1] = 0LL;
  v17[2] = 0LL;
  v17[3] = 0LL;
  v17[4] = 0xFFFFFFFFLL;
  *((_DWORD *)v17 + 10) = 0;
  qword_1019A0BA8 = (uint64_t)v17;
  __int16 v18 = operator new(0x18uLL);
  *(void *)__int16 v18 = off_101828210;
  v18[2] = 0;
  *((_BYTE *)v18 + 12) = 0;
  *((void *)v18 + 2) = 0LL;
  qword_1019A0BB0 = (uint64_t)v18;
  int v19 = (char *)operator new(0x30uLL);
  *(void *)int v19 = off_101828288;
  *(_OWORD *)(v19 + 8) = 0u;
  *(_OWORD *)(v19 + 24) = 0u;
  *((void *)v19 + 5) = 0LL;
  qword_1019A0BB8 = (uint64_t)v19;
  int v20 = operator new(0x20uLL);
  *int v20 = off_101828300;
  v20[1] = 0LL;
  v20[2] = 0LL;
  v20[3] = 0LL;
  qword_1019A0BC0 = (uint64_t)v20;
  int v21 = operator new(0x20uLL);
  *int v21 = off_101828378;
  v21[1] = 0LL;
  v21[2] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  v21[3] = 0LL;
  qword_1019A0BC8 = (uint64_t)v21;
  double v22 = (char *)operator new(0x28uLL);
  *(void *)double v22 = off_1018283F0;
  *(_OWORD *)(v22 + 8) = 0u;
  *(_OWORD *)(v22 + 24) = 0u;
  qword_1019A0BD0 = (uint64_t)v22;
  __int16 v23 = (char *)operator new(0x68uLL);
  *(void *)__int16 v23 = off_101828468;
  *((void *)v23 + 1) = 0LL;
  *((void *)v23 + 2) = 0LL;
  *((void *)v23 + 3) = 0LL;
  *(void *)(v23 + 29) = 0LL;
  *(_OWORD *)(v23 + 40) = 0u;
  *(_OWORD *)(v23 + 56) = 0u;
  *(_OWORD *)(v23 + 72) = 0u;
  *(_OWORD *)(v23 + 88) = 0u;
  qword_1019A0BD8 = (uint64_t)v23;
  double v24 = operator new(0x40uLL);
  v24[1] = 0LL;
  v24[2] = 0LL;
  *double v24 = off_1018284E0;
  *((_DWORD *)v24 + 6) = 0;
  v24[4] = 0LL;
  v24[5] = 0LL;
  *((_DWORD *)v24 + 12) = 0;
  v24[7] = 0LL;
  qword_1019A0BE0 = (uint64_t)v24;
  __int16 v25 = (char *)operator new(0x20uLL);
  *(void *)__int16 v25 = off_101828558;
  *((_WORD *)v25 + 8) = 0;
  *((void *)v25 + 1) = &_mh_execute_header;
  *(void *)(v25 + 20) = 0LL;
  *((_DWORD *)v25 + 7) = 0;
  qword_1019A0BE8 = (uint64_t)v25;
  double v26 = (char *)operator new(0x18uLL);
  *(void *)double v26 = off_1018285D0;
  v26[8] = 0;
  *(void *)(v26 + 12) = 0LL;
  qword_1019A0BF0 = (uint64_t)v26;
  __int16 v27 = operator new(0x60uLL);
  v27[1] = 0LL;
  unsigned int v27[2] = 0LL;
  void *v27 = off_101828648;
  *(void *)((char *)v27 + 22) = 0LL;
  *((_OWORD *)v27 + 2) = 0u;
  *((_OWORD *)v27 + 3) = 0u;
  *((_OWORD *)v27 + 4) = 0u;
  *((_OWORD *)v27 + 5) = 0u;
  qword_1019A0BF8 = (uint64_t)v27;
  double v28 = operator new(0x28uLL);
  void *v28 = off_1018286C0;
  v28[1] = 0LL;
  v28[2] = 0LL;
  v28[3] = 0LL;
  *((_DWORD *)v28 + 8) = 0;
  qword_1019A0C00 = (uint64_t)v28;
  __int16 v29 = (char *)operator new(0x28uLL);
  *(void *)__int16 v29 = &off_101828738;
  *(_OWORD *)(v29 + 8) = 0u;
  *(_OWORD *)(v29 + 24) = 0u;
  qword_1019A0C08 = (uint64_t)v29;
  __int16 v30 = operator new(0x28uLL);
  *__int16 v30 = off_1018287B0;
  v30[1] = 0LL;
  v30[2] = 0LL;
  v30[3] = 0LL;
  *((_DWORD *)v30 + 8) = 0;
  qword_1019A0C10 = (uint64_t)v30;
  double v31 = (char *)operator new(0x30uLL);
  *(void *)double v31 = off_101828828;
  *((void *)v31 + 1) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *((void *)v31 + 2) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(_OWORD *)(v31 + 24) = 0u;
  *((_DWORD *)v31 + 10) = 0;
  qword_1019A0C18 = (uint64_t)v31;
  double v32 = (char *)operator new(0x38uLL);
  *(void *)double v32 = off_1018288A0;
  *(_OWORD *)(v32 + 8) = 0u;
  *(_OWORD *)(v32 + 24) = 0u;
  *(_OWORD *)(v32 + 36) = 0u;
  qword_1019A0C20 = (uint64_t)v32;
  __int16 v33 = operator new(0x28uLL);
  *__int16 v33 = off_101828918;
  v33[1] = 0LL;
  v33[2] = 0LL;
  v33[3] = 0LL;
  *((_DWORD *)v33 + 8) = 0;
  qword_1019A0C28 = (uint64_t)v33;
  double v34 = operator new(0x28uLL);
  *(void *)((char *)v34 + 28) = 0LL;
  v34[1] = 0LL;
  unsigned int v34[2] = 0LL;
  *double v34 = &off_101828990;
  *((_BYTE *)v34 + 24) = 0;
  qword_1019A0C30 = (uint64_t)v34;
  __int16 v35 = (char *)operator new(0x40uLL);
  *(void *)__int16 v35 = off_101828A08;
  *(_OWORD *)(v35 + 8) = 0u;
  *(_OWORD *)(v35 + 24) = 0u;
  *(_OWORD *)(v35 + 40) = 0u;
  *((_DWORD *)v35 + 14) = 0;
  qword_1019A0C38 = (uint64_t)v35;
  double v36 = operator new(0x28uLL);
  void *v36 = off_101828A80;
  v36[1] = 0LL;
  v36[2] = 0LL;
  v36[3] = 0LL;
  *((_DWORD *)v36 + 8) = 0;
  qword_1019A0C40 = (uint64_t)v36;
  __int16 v37 = operator new(0x18uLL);
  v37[1] = 0LL;
  v37[2] = 0LL;
  void *v37 = &off_101828AF8;
  qword_1019A0C48 = (uint64_t)v37;
  double v38 = (char *)operator new(0x38uLL);
  *(void *)double v38 = &off_101828B70;
  *(_OWORD *)(v38 + 8) = 0u;
  *(_OWORD *)(v38 + 24) = 0u;
  *(_OWORD *)(v38 + 40) = 0u;
  qword_1019A0C50 = (uint64_t)v38;
  __int16 v39 = (char *)operator new(0x68uLL);
  *(void *)__int16 v39 = &off_101828BE8;
  *(_OWORD *)(v39 + 8) = 0u;
  *(_OWORD *)(v39 + 24) = 0u;
  *(_OWORD *)(v39 + 40) = 0u;
  *(_OWORD *)(v39 + 56) = 0u;
  *(_OWORD *)(v39 + 72) = 0u;
  *(_OWORD *)(v39 + 84) = 0u;
  qword_1019A0C58 = (uint64_t)v39;
  __int16 v40 = operator new(0x28uLL);
  *__int16 v40 = off_101828C60;
  v40[1] = 0LL;
  v40[2] = 0LL;
  v40[3] = 0LL;
  *((_DWORD *)v40 + 8) = 0;
  qword_1019A0C60 = (uint64_t)v40;
  uint64_t v41 = (char *)operator new(0x38uLL);
  *(void *)uint64_t v41 = &off_101828CD8;
  *(_OWORD *)(v41 + 8) = 0u;
  *(_OWORD *)(v41 + 24) = 0u;
  *(_OWORD *)(v41 + 36) = 0u;
  qword_1019A0C68 = (uint64_t)v41;
  __int16 v42 = operator new(0x28uLL);
  *__int16 v42 = off_101828D50;
  v42[1] = 0LL;
  unsigned int v42[2] = 0LL;
  v42[3] = 0LL;
  *((_DWORD *)v42 + 8) = 0;
  qword_1019A0C70 = (uint64_t)v42;
  double v43 = (char *)operator new(0x80uLL);
  *(void *)double v43 = &off_101828DC8;
  *(_OWORD *)(v43 + 8) = 0u;
  *(_OWORD *)(v43 + 24) = 0u;
  *(_OWORD *)(v43 + 40) = 0u;
  *(_OWORD *)(v43 + 56) = 0u;
  *(void *)(v43 + 69) = 0LL;
  *((_OWORD *)v43 + 5) = 0u;
  *((_OWORD *)v43 + 6) = 0u;
  *((_OWORD *)v43 + 7) = 0u;
  qword_1019A0C78 = (uint64_t)v43;
  __int16 v44 = operator new(0x28uLL);
  void *v44 = off_101828E40;
  v44[1] = 0LL;
  v44[2] = 0LL;
  v44[3] = 0LL;
  *((_DWORD *)v44 + 8) = 0;
  qword_1019A0C80 = (uint64_t)v44;
  int v45 = (char *)operator new(0x38uLL);
  *(void *)int v45 = off_101828EB8;
  *(_OWORD *)(v45 + 8) = 0u;
  *(_OWORD *)(v45 + 24) = 0u;
  *(_OWORD *)(v45 + 40) = 0u;
  qword_1019A0C88 = (uint64_t)v45;
  int v46 = (char *)operator new(0x40uLL);
  *(void *)int v46 = off_101828F30;
  *((void *)v46 + 7) = 0LL;
  *(_OWORD *)(v46 + 8) = 0u;
  *(_OWORD *)(v46 + 24) = 0u;
  *(_OWORD *)(v46 + 36) = 0u;
  qword_1019A0C90 = (uint64_t)v46;
  int v47 = (char *)operator new(0x58uLL);
  *(void *)int v47 = off_101828FA8;
  *(_OWORD *)(v47 + 8) = 0u;
  *(_OWORD *)(v47 + 24) = 0u;
  *(_OWORD *)(v47 + 37) = 0u;
  *((void *)v47 + 8) = 0LL;
  *((void *)v47 + 9) = 0LL;
  *((void *)v47 + 7) = 0LL;
  *((_DWORD *)v47 + 20) = 0;
  qword_1019A0C98 = (uint64_t)v47;
  int v48 = operator new(0x20uLL);
  *(void *)((char *)v48 + 20) = 0LL;
  *int v48 = off_101829020;
  v48[1] = 0LL;
  *((_WORD *)v48 + 8) = 0;
  qword_1019A0CA0 = (uint64_t)v48;
  int v49 = (char *)operator new(0x28uLL);
  *(void *)int v49 = off_101829098;
  *((void *)v49 + 1) = 0xBFF0000000000000LL;
  *((_WORD *)v49 + 8) = 0;
  v49[18] = 0;
  *(_OWORD *)(v49 + 20) = 0u;
  qword_1019A0CA8 = (uint64_t)v49;
  unsigned int v50 = (char *)operator new(0x40uLL);
  *(void *)unsigned int v50 = off_101829110;
  *(void *)(v50 + 52) = 0LL;
  *((_DWORD *)v50 + 15) = 0;
  *(_OWORD *)(v50 + 8) = 0u;
  *(_OWORD *)(v50 + 24) = 0u;
  *(_OWORD *)(v50 + 34) = 0u;
  qword_1019A0CB0 = (uint64_t)v50;
  int v51 = operator new(0x28uLL);
  *int v51 = &off_101829188;
  v51[1] = 0LL;
  *((_OWORD *)v51 + 1) = xmmword_1012E0BB0;
  *((_DWORD *)v51 + 8) = 0;
  qword_1019A0CB8 = (uint64_t)v51;
  int v52 = (char *)operator new(0x18uLL);
  *(void *)int v52 = off_101829200;
  *(_OWORD *)(v52 + 8) = xmmword_1012E0BC0;
  qword_1019A0CC0 = (uint64_t)v52;
  uint64_t v53 = operator new(0x28uLL);
  void *v53 = &off_101829278;
  v53[1] = 0LL;
  v53[2] = 0LL;
  v53[3] = 0LL;
  *((_DWORD *)v53 + 8) = 0;
  qword_1019A0CC8 = (uint64_t)v53;
  uint64_t v54 = operator new(0x30uLL);
  v54[5] = 0LL;
  void *v54 = off_1018292F0;
  v54[1] = 0LL;
  v54[2] = 0LL;
  v54[3] = 0LL;
  *((_DWORD *)v54 + 8) = 0;
  qword_1019A0CD0 = (uint64_t)v54;
  uint64_t v55 = operator new(0x18uLL);
  void *v55 = &off_101829368;
  v55[1] = 0LL;
  v55[2] = 0LL;
  qword_1019A0CD8 = (uint64_t)v55;
  int v56 = (char *)operator new(0x28uLL);
  *(void *)int v56 = off_1018293E0;
  *(_OWORD *)(v56 + 8) = 0u;
  *(_OWORD *)(v56 + 24) = 0u;
  qword_1019A0CE0 = (uint64_t)v56;
  int v57 = operator new(0x18uLL);
  *int v57 = off_101829458;
  v57[1] = 0LL;
  v57[2] = 0LL;
  qword_1019A0CE8 = (uint64_t)v57;
  int v58 = (char *)operator new(0x98uLL);
  *(void *)int v58 = off_1018294D0;
  *(_OWORD *)(v58 + 8) = 0u;
  *(_OWORD *)(v58 + 24) = 0u;
  *(_OWORD *)(v58 + 40) = 0u;
  *(_OWORD *)(v58 + 56) = 0u;
  *(_OWORD *)(v58 + 72) = 0u;
  *((void *)v58 + 11) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *((_WORD *)v58 + 48) = 0;
  *((void *)v58 + 18) = 0LL;
  *(_OWORD *)(v58 + 100) = 0u;
  *(_OWORD *)(v58 + 116) = 0u;
  *((_OWORD *)v58 + 8) = 0u;
  qword_1019A0CF0 = (uint64_t)v58;
  unsigned int v59 = operator new(0x28uLL);
  *unsigned int v59 = off_101829548;
  v59[1] = 0LL;
  v59[2] = 0LL;
  v59[3] = 0LL;
  *((_DWORD *)v59 + 8) = 0;
  qword_1019A0CF8 = (uint64_t)v59;
  int v60 = operator new(0x20uLL);
  *int v60 = off_1018295C0;
  v60[1] = 0LL;
  v60[2] = 0LL;
  *((_DWORD *)v60 + 6) = 0;
  qword_1019A0D00 = (uint64_t)v60;
  int v61 = (char *)operator new(0x30uLL);
  *(void *)int v61 = off_101829638;
  *(_OWORD *)(v61 + 8) = 0u;
  *(_OWORD *)(v61 + 24) = 0u;
  *((void *)v61 + 5) = 0LL;
  qword_1019A0D08 = (uint64_t)v61;
  unint64_t v62 = operator new(0x48uLL);
  *unint64_t v62 = off_1018296B0;
  v62[1] = 0LL;
  v62[2] = 0LL;
  v62[3] = 0LL;
  *((_DWORD *)v62 + 8) = 0;
  *((_DWORD *)v62 + 9) = -1;
  *((_BYTE *)v62 + 40) = 0;
  v62[8] = 0LL;
  *(void *)((char *)v62 + 44) = 0LL;
  *(void *)((char *)v62 + 52) = 0LL;
  *((_DWORD *)v62 + 15) = 0;
  qword_1019A0D10 = (uint64_t)v62;
  int v63 = operator new(0x30uLL);
  *(void *)((char *)v63 + 36) = 0LL;
  *int v63 = off_101829728;
  v63[1] = 0LL;
  v63[2] = 0LL;
  v63[3] = 0LL;
  *((_BYTE *)v63 + 32) = 0;
  qword_1019A0D18 = (uint64_t)v63;
  unsigned int v64 = operator new(0x30uLL);
  v64[5] = 0LL;
  *unsigned int v64 = off_1018297A0;
  v64[1] = 0LL;
  v64[2] = 0LL;
  v64[3] = 0LL;
  *((_DWORD *)v64 + 8) = 0;
  qword_1019A0D20 = (uint64_t)v64;
  int v65 = (char *)operator new(0x40uLL);
  *(void *)int v65 = off_101829818;
  *(_OWORD *)(v65 + 8) = 0u;
  *(_OWORD *)(v65 + 24) = 0u;
  *((_DWORD *)v65 + 10) = -1;
  *((_WORD *)v65 + 22) = 0;
  v65[46] = 0;
  *((_DWORD *)v65 + 12) = 0;
  *(void *)(v65 + 52) = 0LL;
  qword_1019A0D28 = (uint64_t)v65;
  int v66 = operator new(0x18uLL);
  *int v66 = off_101829890;
  v66[1] = 0LL;
  *((_DWORD *)v66 + 4) = 0;
  qword_1019A0D30 = (uint64_t)v66;
  int v67 = (char *)operator new(0x40uLL);
  *(void *)int v67 = off_101829908;
  *((void *)v67 + 1) = 0LL;
  *((void *)v67 + 2) = 0LL;
  v67[24] = 0;
  *(_OWORD *)(v67 + 28) = 0u;
  *(_OWORD *)(v67 + 44) = 0u;
  qword_1019A0D38 = (uint64_t)v67;
  unsigned int v68 = operator new(0x30uLL);
  v68[5] = 0LL;
  *unsigned int v68 = off_101829980;
  v68[1] = 0LL;
  v68[2] = 0LL;
  v68[3] = 0LL;
  *((_DWORD *)v68 + 8) = 0;
  qword_1019A0D40 = (uint64_t)v68;
  int v69 = (char *)operator new(0x50uLL);
  *(void *)int v69 = &off_1018299F8;
  *(_OWORD *)(v69 + 8) = 0u;
  *(_OWORD *)(v69 + 24) = 0u;
  *(_OWORD *)(v69 + 40) = 0u;
  *(_OWORD *)(v69 + 56) = 0u;
  *((void *)v69 + 9) = 0LL;
  qword_1019A0D48 = (uint64_t)v69;
  int v70 = operator new(0x18uLL);
  *int v70 = &off_101829A70;
  v70[1] = 0LL;
  v70[2] = 0LL;
  qword_1019A0D50 = (uint64_t)v70;
  int v71 = (char *)operator new(0x40uLL);
  *(void *)int v71 = off_101829AE8;
  *((void *)v71 + 1) = 0LL;
  *(_OWORD *)(v71 + 44) = 0u;
  *((void *)v71 + 2) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *((void *)v71 + 3) = 0LL;
  *((void *)v71 + 4) = 0LL;
  *((_WORD *)v71 + 20) = 0;
  qword_1019A0D58 = (uint64_t)v71;
  int v72 = (char *)operator new(0x20uLL);
  v72[16] = 0;
  *(void *)int v72 = &off_101829B60;
  *((void *)v72 + 1) = 0LL;
  *(void *)(v72 + 20) = 0LL;
  qword_1019A0D60 = (uint64_t)v72;
  unsigned int v73 = operator new(0x30uLL);
  v73[5] = 0LL;
  *unsigned int v73 = off_101829BD8;
  v73[1] = 0LL;
  v73[2] = 0LL;
  v73[3] = 0LL;
  *((_DWORD *)v73 + 8) = 0;
  qword_1019A0D68 = (uint64_t)v73;
  int v74 = (char *)operator new(0x40uLL);
  *(void *)int v74 = off_101829C50;
  *(void *)(v74 + 52) = 0LL;
  *(_OWORD *)(v74 + 8) = 0u;
  *(_OWORD *)(v74 + 24) = 0u;
  *(_OWORD *)(v74 + 33) = 0u;
  qword_1019A0D70 = (uint64_t)v74;
  int v75 = (char *)operator new(0x28uLL);
  *(void *)int v75 = &off_101829CC8;
  *(_OWORD *)(v75 + 8) = 0u;
  *(_OWORD *)(v75 + 24) = 0u;
  qword_1019A0D78 = (uint64_t)v75;
  int v76 = operator new(0x20uLL);
  *int v76 = off_101829D40;
  v76[1] = 0LL;
  v76[2] = 0LL;
  v76[3] = 0LL;
  qword_1019A0D80 = (uint64_t)v76;
  unsigned int v77 = operator new(0x60uLL);
  *unsigned int v77 = off_101829DB8;
  v77[1] = 0LL;
  v77[2] = 0LL;
  *((_DWORD *)v77 + 6) = 0;
  *(void *)((char *)v77 + 84) = 0LL;
  *((_OWORD *)v77 + 2) = 0u;
  *((_OWORD *)v77 + 3) = 0u;
  *((_OWORD *)v77 + 4) = 0u;
  *((_BYTE *)v77 + 80) = 0;
  qword_1019A0D88 = (uint64_t)v77;
  int v78 = operator new(0x38uLL);
  *int v78 = off_101829E30;
  v78[1] = 0LL;
  v78[2] = 0LL;
  *((_DWORD *)v78 + 6) = 0;
  v78[4] = 0LL;
  v78[5] = 0LL;
  v78[6] = 0LL;
  qword_1019A0D90 = (uint64_t)v78;
  int v79 = (char *)operator new(0x48uLL);
  *(void *)int v79 = off_101829EA8;
  *((void *)v79 + 1) = 0LL;
  *((void *)v79 + 2) = 0LL;
  *((void *)v79 + 3) = 0LL;
  *((_DWORD *)v79 + 8) = 0;
  *(_OWORD *)(v79 + 40) = 0u;
  *(_OWORD *)(v79 + 56) = 0u;
  qword_1019A0D98 = (uint64_t)v79;
  int v80 = operator new(0x38uLL);
  *int v80 = off_101829F20;
  v80[1] = 0LL;
  v80[2] = 0LL;
  *((_DWORD *)v80 + 6) = 0;
  v80[4] = 0LL;
  v80[5] = 0LL;
  v80[6] = 0LL;
  qword_1019A0DA0 = (uint64_t)v80;
  int v81 = (char *)operator new(0x48uLL);
  *(void *)int v81 = off_101829F98;
  *((void *)v81 + 8) = 0LL;
  *(_OWORD *)(v81 + 8) = 0u;
  *(_OWORD *)(v81 + 24) = 0u;
  *(_OWORD *)(v81 + 40) = 0u;
  *((_DWORD *)v81 + 14) = 0;
  qword_1019A0DA8 = (uint64_t)v81;
  uint64_t v82 = (char *)operator new(0x50uLL);
  *(_OWORD *)(v82 + 40) = 0u;
  *(_OWORD *)(v82 + 56) = 0u;
  *((void *)v82 + 9) = 0LL;
  *(void *)uint64_t v82 = off_10182A088;
  *((void *)v82 + 1) = 0LL;
  *((void *)v82 + 2) = 0LL;
  *((void *)v82 + 3) = 0LL;
  *((_DWORD *)v82 + 8) = 0;
  qword_1019A0DB0 = (uint64_t)v82;
  int v83 = (char *)operator new(0x18uLL);
  *(void *)int v83 = off_10182A010;
  *((_WORD *)v83 + 4) = 0;
  *(void *)(v83 + 12) = 0LL;
  qword_1019A0DB8 = (uint64_t)v83;
  int v84 = (char *)operator new(0x38uLL);
  v84[40] = 0;
  *(void *)(v84 + 44) = 0LL;
  *(void *)int v84 = off_10182A100;
  *((void *)v84 + 1) = 0LL;
  *((void *)v84 + 2) = 0LL;
  *((void *)v84 + 3) = 0LL;
  *((_DWORD *)v84 + 8) = 0;
  qword_1019A0DC0 = (uint64_t)v84;
  int v85 = operator new(0x18uLL);
  void *v85 = off_10182A178;
  v85[1] = 0LL;
  v85[2] = 0LL;
  qword_1019A0DC8 = (uint64_t)v85;
  unsigned int v86 = operator new(0x28uLL);
  v86[4] = 0LL;
  *unsigned int v86 = &off_10182A1F0;
  v86[1] = 0LL;
  v86[2] = 0LL;
  *(void *)((char *)v86 + 23) = 0LL;
  qword_1019A0DD0 = (uint64_t)v86;
  int v87 = (char *)operator new(0x30uLL);
  *(void *)int v87 = off_10182A268;
  *(_OWORD *)(v87 + 8) = 0u;
  *(_OWORD *)(v87 + 24) = 0u;
  *((_DWORD *)v87 + 10) = 0;
  qword_1019A0DD8 = (uint64_t)v87;
  int v88 = operator new(0x28uLL);
  void *v88 = off_10182A2E0;
  v88[1] = 0LL;
  v88[2] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  v88[3] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  v88[4] = 0LL;
  qword_1019A0DE0 = (uint64_t)v88;
  int v89 = (char *)operator new(0x48uLL);
  *(void *)int v89 = off_10182A358;
  *(_OWORD *)(v89 + 8) = 0u;
  *(_OWORD *)(v89 + 24) = 0u;
  *(_OWORD *)(v89 + 40) = 0u;
  *(_OWORD *)(v89 + 56) = 0u;
  qword_1019A0DE8 = (uint64_t)v89;
  int v90 = (char *)operator new(0x40uLL);
  *(void *)int v90 = off_10182A3D0;
  *((_DWORD *)v90 + 12) = 0;
  *(void *)(v90 + 52) = 0LL;
  *(_OWORD *)(v90 + 8) = 0u;
  *(_OWORD *)(v90 + 24) = 0u;
  *(void *)(v90 + 37) = 0LL;
  qword_1019A0DF0 = (uint64_t)v90;
  unsigned int v91 = (char *)operator new(0x58uLL);
  *(void *)unsigned int v91 = off_10182A448;
  *(void *)(v91 + 76) = 0LL;
  *((_DWORD *)v91 + 21) = 0;
  *(_OWORD *)(v91 + 8) = 0u;
  *(_OWORD *)(v91 + 24) = 0u;
  *(_OWORD *)(v91 + 40) = 0u;
  *(_OWORD *)(v91 + 56) = 0u;
  *(_DWORD *)(v91 + 71) = 0;
  qword_1019A0DF8 = (uint64_t)v91;
  uint64_t v92 = qword_1019A0B48;
  uint64_t v93 = qword_1019A0B40;
  if (qword_1019A0B40)
  {
    *(void *)(qword_1019A0B48 + 8) = qword_1019A0B40;
    *(void *)(qword_1019A0B50 + 8) = v93;
    uint64_t v94 = qword_1019A0B58;
LABEL_4:
    unsigned int v95 = &dword_1019A0000;
    int v96 = &dword_1019A0000;
    int v97 = &dword_1019A0000;
    *(void *)(v94 + 8) = v93;
    *(void *)(qword_1019A0B60 + 8) = v93;
    uint64_t v98 = qword_1019A0B68;
LABEL_5:
    *(void *)(v98 + 8) = v93;
    uint64_t v99 = *((void *)v97 + 366);
    goto LABEL_9;
  }

  unsigned int v91 = (char *)sub_1001D0A48(v91);
  uint64_t v93 = qword_1019A0B40;
  *(void *)(v92 + 8) = qword_1019A0B40;
  uint64_t v100 = qword_1019A0B50;
  if (v93)
  {
    *(void *)(qword_1019A0B50 + 8) = v93;
    *(void *)(qword_1019A0B58 + 8) = v93;
    uint64_t v101 = qword_1019A0B60;
LABEL_8:
    unsigned int v95 = &dword_1019A0000;
    int v96 = &dword_1019A0000;
    *(void *)(v101 + 8) = v93;
    *(void *)(qword_1019A0B68 + 8) = v93;
    uint64_t v99 = qword_1019A0B70;
    goto LABEL_9;
  }

  unsigned int v91 = (char *)sub_1001D0A48(v91);
  uint64_t v93 = qword_1019A0B40;
  *(void *)(v100 + 8) = qword_1019A0B40;
  uint64_t v94 = qword_1019A0B58;
  if (v93) {
    goto LABEL_4;
  }
  unsigned int v91 = (char *)sub_1001D0A48(v91);
  uint64_t v93 = qword_1019A0B40;
  *(void *)(v94 + 8) = qword_1019A0B40;
  uint64_t v101 = qword_1019A0B60;
  if (v93) {
    goto LABEL_8;
  }
  unsigned int v91 = (char *)sub_1001D0A48(v91);
  uint64_t v93 = qword_1019A0B40;
  *(void *)(v101 + 8) = qword_1019A0B40;
  uint64_t v98 = qword_1019A0B68;
  if (v93)
  {
    unsigned int v95 = &dword_1019A0000;
    int v96 = &dword_1019A0000;
    int v97 = &dword_1019A0000;
    goto LABEL_5;
  }

  unsigned int v91 = (char *)sub_1001D0A48(v91);
  uint64_t v93 = qword_1019A0B40;
  *(void *)(v98 + 8) = qword_1019A0B40;
  uint64_t v99 = qword_1019A0B70;
  if (!v93)
  {
    unsigned int v91 = (char *)sub_1001D0A48(v91);
    uint64_t v93 = qword_1019A0B40;
  }

  unsigned int v95 = &dword_1019A0000;
  int v96 = &dword_1019A0000;
LABEL_9:
  *(void *)(v99 + 8) = v93;
  uint64_t v102 = *((void *)v96 + 368);
  uint64_t v103 = *((void *)v95 + 367);
  if (v103)
  {
    *(void *)(v102 + 8) = v103;
  }

  else
  {
    uint64_t v104 = sub_1001D0A48(v91);
    uint64_t v103 = qword_1019A0B78;
    *(void *)(v102 + 8) = qword_1019A0B78;
    if (!v103)
    {
      sub_1001D0A48(v104);
      uint64_t v103 = qword_1019A0B78;
    }
  }

  *(void *)(v102 + 96) = v103;
  sub_1001D2B80(qword_1019A0BA0);
  uint64_t v105 = sub_1001D2C2C(qword_1019A0BD8);
  uint64_t v106 = qword_1019A0BF8;
  uint64_t v107 = qword_1019A0B40;
  if (qword_1019A0B40)
  {
    *(void *)(qword_1019A0BF8 + 64) = qword_1019A0B40;
LABEL_16:
    *(void *)(v106 + 80) = v107;
    uint64_t v108 = qword_1019A0C00;
    goto LABEL_17;
  }

  uint64_t v105 = sub_1001D0A48(v105);
  uint64_t v107 = qword_1019A0B40;
  *(void *)(v106 + 64) = qword_1019A0B40;
  if (v107) {
    goto LABEL_16;
  }
  uint64_t v105 = sub_1001D0A48(v105);
  uint64_t v107 = qword_1019A0B40;
  *(void *)(v106 + 80) = qword_1019A0B40;
  uint64_t v108 = qword_1019A0C00;
  if (!v107)
  {
    uint64_t v105 = sub_1001D0A48(v105);
    uint64_t v107 = qword_1019A0B40;
  }

double sub_1001D23B4(uint64_t a1)
{
  *(void *)a1 = off_101827B80;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  return result;
}

uint64_t sub_1001D23D0(uint64_t result)
{
  *(void *)(result + 40) = 0LL;
  *(void *)double result = off_101827C70;
  *(void *)(result + 8) = 0LL;
  *(void *)(result + 16) = 0LL;
  *(void *)(result + 24) = 0LL;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1001D23EC(uint64_t result)
{
  *(void *)(result + 40) = 0LL;
  *(void *)double result = off_101827D60;
  *(void *)(result + 8) = 0LL;
  *(void *)(result + 16) = 0LL;
  *(void *)(result + 24) = 0LL;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1001D2408(uint64_t result)
{
  *(void *)(result + 40) = 0LL;
  *(void *)double result = off_101827E50;
  *(void *)(result + 8) = 0LL;
  *(void *)(result + 16) = 0LL;
  *(void *)(result + 24) = 0LL;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void *sub_1001D2424(void *result)
{
  *double result = off_101827EC8;
  result[1] = 0LL;
  result[2] = 0LL;
  result[3] = 0LL;
  return result;
}

double sub_1001D2438(uint64_t a1)
{
  *(void *)a1 = off_101827F40;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(void *)&double result = 0xFFFFFFFFLL;
  *(_OWORD *)(a1 + 120) = xmmword_1012E0BA0;
  *(void *)(a1 + 136) = 0LL;
  *(_BYTE *)(a1 + 144) = 0;
  *(_DWORD *)(a1 + 148) = 0;
  *(_DWORD *)(a1 + 152) = 0;
  return result;
}

uint64_t sub_1001D2480(uint64_t result)
{
  *(_DWORD *)(result + 28) = 0;
  *(_DWORD *)(result + 32) = 0;
  *(void *)(result + 8) = 0LL;
  *(void *)(result + 16) = 0LL;
  *(void *)double result = off_101827FB8;
  *(_WORD *)(result + 24) = 0;
  return result;
}

void *sub_1001D249C(void *result)
{
  *double result = off_101828030;
  result[1] = 0LL;
  result[2] = 0LL;
  result[3] = 0LL;
  return result;
}

uint64_t sub_1001D24B0(uint64_t result)
{
  *(_DWORD *)(result + 36) = 0;
  *(_DWORD *)(result + 40) = 0;
  *(void *)double result = off_1018280A8;
  *(void *)(result + 8) = 0LL;
  *(void *)(result + 16) = 0LL;
  *(void *)(result + 24) = 0LL;
  *(_WORD *)(result + 32) = 0;
  return result;
}

double sub_1001D24CC(uint64_t a1)
{
  *(void *)a1 = off_101828198;
  *(void *)(a1 + 288) = 0LL;
  *(void *)(a1 + 296) = 0LL;
  *(_DWORD *)(a1 + 304) = 0;
  *(_DWORD *)(a1 + 360) = 0;
  *(_WORD *)(a1 + 112) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(void *)(a1 + 88) = 0LL;
  *(void *)(a1 + 96) = 0xFFFFFFFFLL;
  *(void *)(a1 + 104) = 0LL;
  *(_OWORD *)(a1 + 130) = 0u;
  *(_OWORD *)(a1 + 146) = 0u;
  *(_OWORD *)(a1 + 162) = 0u;
  *(_OWORD *)(a1 + 178) = 0u;
  *(_OWORD *)(a1 + 194) = 0u;
  *(_OWORD *)(a1 + 210) = 0u;
  *(_OWORD *)(a1 + 226) = 0u;
  *(_OWORD *)(a1 + 242) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 114) = 0u;
  *(void *)(a1 + 364) = 0LL;
  *(_OWORD *)(a1 + 258) = 0u;
  *(_OWORD *)(a1 + 341) = 0u;
  *(_OWORD *)(a1 + 312) = 0u;
  *(_OWORD *)(a1 + 328) = 0u;
  return result;
}

double sub_1001D2554(uint64_t a1)
{
  *(void *)a1 = off_101828120;
  *(void *)(a1 + 8) = 0LL;
  *(void *)(a1 + 16) = 0LL;
  *(void *)(a1 + 24) = 0LL;
  *(void *)&double result = 0xFFFFFFFFLL;
  *(void *)(a1 + 32) = 0xFFFFFFFFLL;
  *(_DWORD *)(a1 + 40) = 0;
  return result;
}

uint64_t sub_1001D2574(uint64_t result)
{
  *(void *)double result = off_101828210;
  *(_DWORD *)(result + 8) = 0;
  *(_BYTE *)(result + 12) = 0;
  *(void *)(result + 16) = 0LL;
  return result;
}

double sub_1001D2590(uint64_t a1)
{
  *(void *)a1 = off_101828288;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = 0LL;
  return result;
}

void *sub_1001D25B0(void *result)
{
  *double result = off_101828300;
  result[1] = 0LL;
  result[2] = 0LL;
  result[3] = 0LL;
  return result;
}

double sub_1001D25C4(uint64_t a1)
{
  *(void *)a1 = off_1018283F0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  return result;
}

double sub_1001D25E0(uint64_t a1)
{
  *(void *)a1 = off_101828468;
  *(void *)(a1 + 8) = 0LL;
  *(void *)(a1 + 16) = 0LL;
  *(void *)(a1 + 24) = 0LL;
  *(void *)(a1 + 29) = 0LL;
  double result = 0.0;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  return result;
}

uint64_t sub_1001D260C(uint64_t result)
{
  *(void *)(result + 8) = 0LL;
  *(void *)(result + 16) = 0LL;
  *(void *)double result = off_1018284E0;
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 32) = 0LL;
  *(void *)(result + 40) = 0LL;
  *(_DWORD *)(result + 48) = 0;
  *(void *)(result + 56) = 0LL;
  return result;
}

double sub_1001D2630(uint64_t a1)
{
  *(void *)a1 = off_101828558;
  *(_WORD *)(a1 + 16) = 0;
  double result = COERCE_DOUBLE(&_mh_execute_header);
  *(void *)(a1 + 8) = &_mh_execute_header;
  *(void *)(a1 + 24) = 0LL;
  *(_DWORD *)(a1 + 20) = 0;
  return result;
}

uint64_t sub_1001D2658(uint64_t result)
{
  *(void *)double result = off_1018285D0;
  *(_BYTE *)(result + 8) = 0;
  *(_DWORD *)(result + 12) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

double sub_1001D2670(uint64_t a1)
{
  *(void *)(a1 + 8) = 0LL;
  *(void *)(a1 + 16) = 0LL;
  *(void *)a1 = off_101828648;
  *(void *)(a1 + 22) = 0LL;
  double result = 0.0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  return result;
}

uint64_t sub_1001D2694(uint64_t result)
{
  *(void *)double result = off_1018286C0;
  *(void *)(result + 8) = 0LL;
  *(void *)(result + 16) = 0LL;
  *(void *)(result + 24) = 0LL;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_1001D26AC(uint64_t a1)
{
  *(void *)a1 = &off_101828738;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  return result;
}

uint64_t sub_1001D26C8(uint64_t result)
{
  *(void *)double result = off_1018287B0;
  *(void *)(result + 8) = 0LL;
  *(void *)(result + 16) = 0LL;
  *(void *)(result + 24) = 0LL;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1001D26E0(uint64_t result)
{
  *(void *)double result = off_101828828;
  *(void *)(result + 8) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(void *)(result + 16) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(void *)(result + 24) = 0LL;
  *(void *)(result + 32) = 0LL;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

double sub_1001D2704(uint64_t a1)
{
  *(void *)a1 = off_1018288A0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 36) = 0u;
  return result;
}

uint64_t sub_1001D2724(uint64_t result)
{
  *(void *)double result = off_101828918;
  *(void *)(result + 8) = 0LL;
  *(void *)(result + 16) = 0LL;
  *(void *)(result + 24) = 0LL;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1001D273C(uint64_t result)
{
  *(_DWORD *)(result + 28) = 0;
  *(_DWORD *)(result + 32) = 0;
  *(void *)(result + 8) = 0LL;
  *(void *)(result + 16) = 0LL;
  *(void *)double result = &off_101828990;
  *(_BYTE *)(result + 24) = 0;
  return result;
}

uint64_t sub_1001D2758(uint64_t result)
{
  *(void *)double result = off_101828A80;
  *(void *)(result + 8) = 0LL;
  *(void *)(result + 16) = 0LL;
  *(void *)(result + 24) = 0LL;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void *sub_1001D2770(void *result)
{
  result[1] = 0LL;
  result[2] = 0LL;
  *double result = &off_101828AF8;
  return result;
}

double sub_1001D2784(uint64_t a1)
{
  *(void *)a1 = &off_101828B70;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return result;
}

uint64_t sub_1001D27A4(uint64_t result)
{
  *(void *)double result = off_101828C60;
  *(void *)(result + 8) = 0LL;
  *(void *)(result + 16) = 0LL;
  *(void *)(result + 24) = 0LL;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1001D27BC(uint64_t result)
{
  *(void *)double result = off_101828D50;
  *(void *)(result + 8) = 0LL;
  *(void *)(result + 16) = 0LL;
  *(void *)(result + 24) = 0LL;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1001D27D4(uint64_t result)
{
  *(void *)double result = off_101828E40;
  *(void *)(result + 8) = 0LL;
  *(void *)(result + 16) = 0LL;
  *(void *)(result + 24) = 0LL;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_1001D27EC(uint64_t a1)
{
  *(void *)a1 = off_101828EB8;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return result;
}

double sub_1001D280C(uint64_t a1)
{
  *(void *)a1 = off_101828F30;
  *(void *)(a1 + 56) = 0LL;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 36) = 0u;
  return result;
}

double sub_1001D2830(uint64_t a1)
{
  *(void *)a1 = off_101828FA8;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 37) = 0u;
  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + 72) = 0LL;
  *(void *)(a1 + 56) = 0LL;
  *(_DWORD *)(a1 + 80) = 0;
  return result;
}

uint64_t sub_1001D285C(uint64_t result)
{
  *(_DWORD *)(result + 20) = 0;
  *(_DWORD *)(result + 24) = 0;
  *(void *)double result = off_101829020;
  *(void *)(result + 8) = 0LL;
  *(_WORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1001D2874(uint64_t result)
{
  *(void *)double result = off_101829098;
  *(void *)(result + 8) = 0xBFF0000000000000LL;
  *(_WORD *)(result + 16) = 0;
  *(_BYTE *)(result + 18) = 0;
  *(_DWORD *)(result + 32) = 0;
  *(void *)(result + 24) = 0LL;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

double sub_1001D289C(uint64_t a1)
{
  *(void *)a1 = off_101829110;
  *(void *)(a1 + 56) = 0LL;
  *(_DWORD *)(a1 + 52) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 34) = 0u;
  return result;
}

double sub_1001D28C4(uint64_t a1)
{
  *(void *)a1 = &off_101829188;
  *(void *)(a1 + 8) = 0LL;
  double result = NAN;
  *(_OWORD *)(a1 + 16) = xmmword_1012E0BB0;
  *(_DWORD *)(a1 + 32) = 0;
  return result;
}

double sub_1001D28E4(uint64_t a1)
{
  *(void *)a1 = off_101829200;
  *(void *)&double result = 0xFFFFFFFFLL;
  *(_OWORD *)(a1 + 8) = xmmword_1012E0BC0;
  return result;
}

uint64_t sub_1001D2900(uint64_t result)
{
  *(void *)(result + 40) = 0LL;
  *(void *)double result = off_1018292F0;
  *(void *)(result + 8) = 0LL;
  *(void *)(result + 16) = 0LL;
  *(void *)(result + 24) = 0LL;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void *sub_1001D291C(void *result)
{
  result[1] = 0LL;
  result[2] = 0LL;
  *double result = &off_101829368;
  return result;
}

uint64_t sub_1001D2930(uint64_t result)
{
  *(void *)double result = off_101829548;
  *(void *)(result + 8) = 0LL;
  *(void *)(result + 16) = 0LL;
  *(void *)(result + 24) = 0LL;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1001D2948(uint64_t result)
{
  *(_DWORD *)(result + 36) = 0;
  *(_DWORD *)(result + 40) = 0;
  *(void *)double result = off_101829728;
  *(void *)(result + 8) = 0LL;
  *(void *)(result + 16) = 0LL;
  *(void *)(result + 24) = 0LL;
  *(_BYTE *)(result + 32) = 0;
  return result;
}

uint64_t sub_1001D2964(uint64_t result)
{
  *(void *)(result + 40) = 0LL;
  *(void *)double result = off_1018297A0;
  *(void *)(result + 8) = 0LL;
  *(void *)(result + 16) = 0LL;
  *(void *)(result + 24) = 0LL;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_1001D2980(uint64_t a1)
{
  *(void *)(a1 + 8) = 0LL;
  *(void *)(a1 + 16) = 0LL;
  *(void *)a1 = off_101829908;
  *(_BYTE *)(a1 + 24) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 28) = 0u;
  *(_OWORD *)(a1 + 44) = 0u;
  return result;
}

uint64_t sub_1001D29A4(uint64_t result)
{
  *(void *)(result + 40) = 0LL;
  *(void *)double result = off_101829980;
  *(void *)(result + 8) = 0LL;
  *(void *)(result + 16) = 0LL;
  *(void *)(result + 24) = 0LL;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void *sub_1001D29C0(void *result)
{
  result[1] = 0LL;
  result[2] = 0LL;
  *double result = &off_101829A70;
  return result;
}

uint64_t sub_1001D29D4(uint64_t result)
{
  *(void *)double result = off_101829AE8;
  *(void *)(result + 8) = 0LL;
  *(_DWORD *)(result + 56) = 0;
  *(void *)(result + 48) = 0LL;
  *(_DWORD *)(result + 44) = 0;
  *(void *)(result + 24) = 0LL;
  *(void *)(result + 32) = 0LL;
  *(void *)(result + 16) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(_WORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_1001D2A04(uint64_t result)
{
  *(_BYTE *)(result + 16) = 0;
  *(void *)double result = &off_101829B60;
  *(void *)(result + 8) = 0LL;
  *(_DWORD *)(result + 20) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1001D2A1C(uint64_t result)
{
  *(void *)(result + 40) = 0LL;
  *(void *)double result = off_101829BD8;
  *(void *)(result + 8) = 0LL;
  *(void *)(result + 16) = 0LL;
  *(void *)(result + 24) = 0LL;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_1001D2A38(uint64_t a1)
{
  *(void *)a1 = off_101829C50;
  *(_DWORD *)(a1 + 52) = 0;
  *(_DWORD *)(a1 + 56) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 33) = 0u;
  return result;
}

double sub_1001D2A5C(uint64_t a1)
{
  *(void *)a1 = &off_101829CC8;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  return result;
}

double sub_1001D2A78(uint64_t a1)
{
  *(void *)a1 = off_101829EA8;
  *(void *)(a1 + 8) = 0LL;
  *(void *)(a1 + 16) = 0LL;
  *(void *)(a1 + 24) = 0LL;
  *(_DWORD *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  return result;
}

uint64_t sub_1001D2A9C(uint64_t result)
{
  *(_BYTE *)(result + 40) = 0;
  *(_DWORD *)(result + 44) = 0;
  *(_DWORD *)(result + 48) = 0;
  *(void *)double result = off_10182A100;
  *(void *)(result + 8) = 0LL;
  *(void *)(result + 16) = 0LL;
  *(void *)(result + 24) = 0LL;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_1001D2ABC(uint64_t a1)
{
  *(void *)a1 = off_10182A268;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_DWORD *)(a1 + 40) = 0;
  return result;
}

double sub_1001D2ADC(void *a1)
{
  *a1 = off_10182A2E0;
  double result = 0.0;
  a1[1] = 0LL;
  a1[2] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  a1[3] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  a1[4] = 0LL;
  return result;
}

double sub_1001D2B04(uint64_t a1)
{
  *(void *)a1 = off_10182A358;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  return result;
}

double sub_1001D2B28(uint64_t a1)
{
  *(void *)a1 = off_10182A3D0;
  *(_DWORD *)(a1 + 56) = 0;
  *(void *)(a1 + 48) = 0LL;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 37) = 0LL;
  return result;
}

double sub_1001D2B50(uint64_t a1)
{
  *(void *)a1 = off_10182A448;
  *(void *)(a1 + 80) = 0LL;
  *(_DWORD *)(a1 + 76) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_DWORD *)(a1 + 71) = 0;
  return result;
}

uint64_t sub_1001D2B80(uint64_t result)
{
  uint64_t v1 = (void *)result;
  uint64_t v2 = qword_1019A0B78;
  if (!qword_1019A0B78)
  {
    double result = sub_1001D0A48();
    uint64_t v2 = qword_1019A0B78;
  }

  v1[8] = v2;
  uint64_t v3 = qword_1019A0B90;
  if (!qword_1019A0B90)
  {
    double result = sub_1001D0A48();
    uint64_t v2 = qword_1019A0B78;
    uint64_t v3 = qword_1019A0B90;
  }

  v1[11] = v3;
  if (!v2)
  {
    double result = sub_1001D0A48();
    uint64_t v2 = qword_1019A0B78;
  }

  v1[13] = v2;
  uint64_t v4 = qword_1019A0B88;
  if (!qword_1019A0B88)
  {
    double result = sub_1001D0A48();
    uint64_t v2 = qword_1019A0B78;
    uint64_t v4 = qword_1019A0B88;
  }

  v1[17] = v4;
  if (!v2)
  {
    double result = sub_1001D0A48();
    uint64_t v2 = qword_1019A0B78;
  }

  v1[26] = v2;
  uint64_t v5 = qword_1019A0BA8;
  if (!qword_1019A0BA8)
  {
    double result = sub_1001D0A48();
    uint64_t v5 = qword_1019A0BA8;
  }

  v1[40] = v5;
  return result;
}

uint64_t sub_1001D2C2C(uint64_t result)
{
  uint64_t v1 = (void *)result;
  uint64_t v2 = qword_1019A0B40;
  if (!qword_1019A0B40)
  {
    double result = sub_1001D0A48();
    uint64_t v2 = qword_1019A0B40;
  }

  v1[1] = v2;
  uint64_t v3 = qword_1019A0B80;
  if (!qword_1019A0B80)
  {
    double result = sub_1001D0A48();
    uint64_t v3 = qword_1019A0B80;
  }

  v1[2] = v3;
  uint64_t v4 = qword_1019A0BA0;
  if (!qword_1019A0BA0)
  {
    double result = sub_1001D0A48();
    uint64_t v4 = qword_1019A0BA0;
  }

  v1[3] = v4;
  uint64_t v5 = qword_1019A0BB0;
  if (!qword_1019A0BB0)
  {
    double result = sub_1001D0A48();
    uint64_t v5 = qword_1019A0BB0;
  }

  v1[5] = v5;
  uint64_t v6 = qword_1019A0BB8;
  if (!qword_1019A0BB8)
  {
    double result = sub_1001D0A48();
    uint64_t v6 = qword_1019A0BB8;
  }

  v1[7] = v6;
  uint64_t v7 = qword_1019A0BC0;
  if (!qword_1019A0BC0)
  {
    double result = sub_1001D0A48();
    uint64_t v7 = qword_1019A0BC0;
  }

  v1[8] = v7;
  uint64_t v8 = qword_1019A0BC8;
  if (!qword_1019A0BC8)
  {
    double result = sub_1001D0A48();
    uint64_t v8 = qword_1019A0BC8;
  }

  v1[10] = v8;
  uint64_t v9 = qword_1019A0BD0;
  if (!qword_1019A0BD0)
  {
    double result = sub_1001D0A48();
    uint64_t v9 = qword_1019A0BD0;
  }

  v1[11] = v9;
  return result;
}

uint64_t sub_1001D2D08(uint64_t result)
{
  uint64_t v1 = (void *)result;
  uint64_t v2 = qword_1019A0B40;
  if (qword_1019A0B40)
  {
    *(void *)(result + 8) = qword_1019A0B40;
LABEL_4:
    v1[2] = v2;
    goto LABEL_5;
  }

  double result = ((uint64_t (*)(void))sub_1001D0A48)();
  uint64_t v2 = qword_1019A0B40;
  v1[1] = qword_1019A0B40;
  if (v2) {
    goto LABEL_4;
  }
  double result = sub_1001D0A48(result);
  uint64_t v2 = qword_1019A0B40;
  v1[2] = qword_1019A0B40;
  if (!v2)
  {
    double result = sub_1001D0A48(result);
    uint64_t v2 = qword_1019A0B40;
  }

uint64_t sub_1001D2D84(uint64_t result)
{
  uint64_t v1 = (void *)result;
  uint64_t v2 = qword_1019A0B40;
  if (qword_1019A0B40)
  {
    *(void *)(result + 8) = qword_1019A0B40;
LABEL_4:
    v1[2] = v2;
    goto LABEL_5;
  }

  double result = sub_1001D0A48(result);
  uint64_t v2 = qword_1019A0B40;
  v1[1] = qword_1019A0B40;
  if (v2) {
    goto LABEL_4;
  }
  double result = sub_1001D0A48(result);
  uint64_t v2 = qword_1019A0B40;
  v1[2] = qword_1019A0B40;
  if (!v2)
  {
    double result = sub_1001D0A48(result);
    uint64_t v2 = qword_1019A0B40;
  }

uint64_t sub_1001D2E18(uint64_t result)
{
  uint64_t v1 = (void *)result;
  uint64_t v2 = qword_1019A0D08;
  if (!qword_1019A0D08)
  {
    double result = sub_1001D0A48(result);
    uint64_t v2 = qword_1019A0D08;
  }

  v1[1] = v2;
  uint64_t v3 = qword_1019A0D00;
  if (qword_1019A0D00)
  {
    v1[2] = qword_1019A0D00;
LABEL_6:
    v1[3] = v3;
    goto LABEL_7;
  }

  double result = sub_1001D0A48(result);
  uint64_t v3 = qword_1019A0D00;
  v1[2] = qword_1019A0D00;
  if (v3) {
    goto LABEL_6;
  }
  double result = sub_1001D0A48(result);
  uint64_t v3 = qword_1019A0D00;
  v1[3] = qword_1019A0D00;
  if (!v3)
  {
    double result = sub_1001D0A48(result);
    uint64_t v3 = qword_1019A0D00;
  }

uint64_t sub_1001D2E94(uint64_t result)
{
  uint64_t v1 = (void *)result;
  uint64_t v2 = qword_1019A0B40;
  if (qword_1019A0B40)
  {
    *(void *)(result + 8) = qword_1019A0B40;
LABEL_4:
    v1[2] = v2;
LABEL_5:
    v1[3] = v2;
    goto LABEL_6;
  }

  double result = sub_1001D0A48(result);
  uint64_t v2 = qword_1019A0B40;
  v1[1] = qword_1019A0B40;
  if (v2) {
    goto LABEL_4;
  }
  double result = sub_1001D0A48(result);
  uint64_t v2 = qword_1019A0B40;
  v1[2] = qword_1019A0B40;
  if (v2) {
    goto LABEL_5;
  }
  double result = sub_1001D0A48(result);
  uint64_t v2 = qword_1019A0B40;
  v1[3] = qword_1019A0B40;
  if (!v2)
  {
    double result = sub_1001D0A48(result);
    uint64_t v2 = qword_1019A0B40;
  }

BOOL sub_1001D2F3C(unsigned int a1)
{
  return a1 < 0xE;
}

BOOL sub_1001D2F48(unsigned int a1)
{
  return a1 < 7;
}

BOOL sub_1001D2F54(unsigned int a1)
{
  return a1 < 5;
}

uint64_t sub_1001D2F60(int a1)
{
  uint64_t result = 1LL;
  if (a1 <= 11804)
  {
    if (a1 > 2009)
    {
      if (((a1 - 2010) > 0x3D || ((1LL << (a1 + 38)) & 0x2488004000005401LL) == 0)
        && ((a1 - 2101) > 0x31 || ((1LL << (a1 - 53)) & 0x2000000000011LL) == 0)
        && (a1 - 3015) >= 2)
      {
        return 0LL;
      }

      return result;
    }

    unsigned int v4 = a1 - 41;
    if (v4 <= 0x3B)
    {
      uint64_t v5 = 1LL << v4;
      uint64_t v6 = 0x800000003F08801LL;
      goto LABEL_33;
    }

    return 0LL;
  }

  if (a1 <= 15651)
  {
    if (a1 > 15329)
    {
      if ((a1 - 15562) <= 0x3A && ((1LL << (a1 + 54)) & 0x401000040000001LL) != 0
        || (a1 - 15330) <= 0x1E && ((1 << (a1 + 30)) & 0x40100001) != 0)
      {
        return result;
      }

      int v3 = 15460;
    }

    else if (a1 <= 15054)
    {
      if (a1 == 11805 || a1 == 12150) {
        return result;
      }
      int v3 = 15030;
    }

    else
    {
      if ((a1 - 15100) <= 0x32 && ((1LL << (a1 + 4)) & 0x4000000000401LL) != 0
        || (a1 - 15230) <= 0x19 && ((1 << (a1 - 126)) & 0x2000401) != 0)
      {
        return result;
      }

      int v3 = 15055;
    }

    goto LABEL_51;
  }

  if (a1 > 18199)
  {
    if (a1 > 19149)
    {
      if (a1 <= 90602)
      {
        if (a1 == 19150) {
          return result;
        }
        int v3 = 19160;
      }

      else
      {
        if (a1 == 90603 || a1 == 515621) {
          return result;
        }
        int v3 = 515652;
      }
    }

    else
    {
      if ((a1 - 18200) <= 0x28 && ((1LL << (a1 - 24)) & 0x10002000001LL) != 0
        || a1 == 19030)
      {
        return result;
      }

      int v3 = 19090;
    }

    goto LABEL_51;
  }

  if (a1 > 15732)
  {
    if (a1 == 15733 || a1 == 17150) {
      return result;
    }
    int v3 = 18070;
LABEL_51:
    if (a1 == v3) {
      return result;
    }
    return 0LL;
  }

  unsigned int v7 = a1 - 15652;
  if (v7 > 0x3A) {
    return 0LL;
  }
  uint64_t v5 = 1LL << v7;
  uint64_t v6 = 0x400000000840101LL;
LABEL_33:
  if ((v5 & v6) == 0) {
    return 0LL;
  }
  return result;
}

BOOL sub_1001D3218(unsigned int a1)
{
  return a1 < 4 || a1 == 1001;
}

BOOL sub_1001D3230(unsigned int a1)
{
  return a1 < 0xF;
}

double sub_1001D323C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v8,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  889LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v8,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v7, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 36);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 36) & 1) != 0)
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(double *)(a1 + 8) = result;
      int v6 = *(_DWORD *)(a2 + 36);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }

    else if ((*(_BYTE *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }

    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(double *)(a1 + 16) = result;
    if ((*(_DWORD *)(a2 + 36) & 4) == 0) {
      return result;
    }
LABEL_7:
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 4u;
    *(double *)(a1 + 24) = result;
  }

  return result;
}

void sub_1001D330C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001D3324(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101827B80;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001D3334(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101827B80;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

uint64_t sub_1001D3354(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0B40;
  if (!qword_1019A0B40)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0B40;
  }

  return result;
}

double sub_1001D3380()
{
  unsigned __int8 v0 = (char *)operator new(0x28uLL);
  *(void *)unsigned __int8 v0 = off_101827B80;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  return result;
}

uint64_t sub_1001D33B0(uint64_t result)
{
  if (*(_BYTE *)(result + 36))
  {
    *(void *)(result + 8) = 0LL;
    *(void *)(result + 16) = 0LL;
    *(void *)(result + 24) = 0LL;
  }

  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_1001D33C8( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        unsigned int v7 = TagFallback >> 3;
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_27;
        }
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 8) = v12;
        *(_DWORD *)(a1 + 36) |= 1u;
        uint64_t v9 = (_BYTE *)*((void *)this + 1);
        if ((unint64_t)v9 < *((void *)this + 2) && *v9 == 17)
        {
          *((void *)this + 1) = v9 + 1;
LABEL_17:
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
            return 0LL;
          }
          *(void *)(a1 + 16) = v12;
          *(_DWORD *)(a1 + 36) |= 2u;
          double v10 = (_BYTE *)*((void *)this + 1);
          if ((unint64_t)v10 < *((void *)this + 2) && *v10 == 25)
          {
            *((void *)this + 1) = v10 + 1;
            goto LABEL_21;
          }
        }
      }

      if (v7 == 2)
      {
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_27;
        }
        goto LABEL_17;
      }

      if (v7 != 3)
      {
        int v8 = TagFallback & 7;
        goto LABEL_27;
      }

      int v8 = TagFallback & 7;
      if (v8 == 1) {
        break;
      }
LABEL_27:
      if (v8 == 4) {
        return 1LL;
      }
    }

uint64_t sub_1001D3580( uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 36);
  if ((v5 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  a2,  *(double *)(result + 8),  a3);
    int v5 = *(_DWORD *)(v4 + 36);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        return result;
      }
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  a2,  *(double *)(v4 + 24),  a3);
    }
  }

  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  a2,  *(double *)(v4 + 16),  a3);
  if ((*(_DWORD *)(v4 + 36) & 4) != 0) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  a2,  *(double *)(v4 + 24),  a3);
  }
  return result;
}

uint64_t sub_1001D35F8(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 36);
  if (*(_BYTE *)(a1 + 36))
  {
    unsigned int v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }

  *(_DWORD *)(a1 + 32) = v1;
  return v1;
}

double sub_1001D3630(uint64_t a1, void *lpsrc)
{
  return sub_1001D323C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001D367C()
{
  return 1LL;
}

void *sub_1001D3684@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.TimeStamp");
}

float sub_1001D3694(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v11,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  1159LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v11,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 32);
  if (!(_BYTE)v6) {
    return *(float *)&v5;
  }
  if ((*(_BYTE *)(a2 + 32) & 1) != 0)
  {
    *(_DWORD *)(a1 + 32) |= 1u;
    unsigned int v7 = *(char **)(a1 + 8);
    if (!v7)
    {
      unsigned int v7 = (char *)operator new(0x28uLL);
      *(void *)unsigned int v7 = off_101827B80;
      *(_OWORD *)(v7 + 8) = 0u;
      *(_OWORD *)(v7 + 24) = 0u;
      *(void *)(a1 + 8) = v7;
    }

    uint64_t v8 = *(void *)(a2 + 8);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1019A0B48 + 8);
    }
    double v5 = sub_1001D323C((uint64_t)v7, v8);
    int v6 = *(_DWORD *)(a2 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_6:
      if ((v6 & 4) == 0) {
        goto LABEL_7;
      }
LABEL_16:
      LODWORD(sub_1012279C0(0LL, v4, v5) = *(_DWORD *)(a2 + 20);
      *(_DWORD *)(a1 + 32) |= 4u;
      *(_DWORD *)(a1 + 20) = LODWORD(v5);
      if ((*(_DWORD *)(a2 + 32) & 8) != 0) {
        goto LABEL_8;
      }
      return *(float *)&v5;
    }
  }

  else if ((*(_BYTE *)(a2 + 32) & 2) == 0)
  {
    goto LABEL_6;
  }

  LODWORD(sub_1012279C0(0LL, v4, v5) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) |= 2u;
  *(_DWORD *)(a1 + 16) = LODWORD(v5);
  int v6 = *(_DWORD *)(a2 + 32);
  if ((v6 & 4) != 0) {
    goto LABEL_16;
  }
LABEL_7:
  if ((v6 & 8) != 0)
  {
LABEL_8:
    LODWORD(sub_1012279C0(0LL, v4, v5) = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 8u;
    *(_DWORD *)(a1 + 24) = LODWORD(v5);
  }

  return *(float *)&v5;
}

void sub_1001D37C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001D37D8(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_101827BF8;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0B48 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1001D382C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

void *sub_1001D3840()
{
  uint64_t result = operator new(0x28uLL);
  *uint64_t result = &off_101827BF8;
  result[1] = 0LL;
  result[2] = 0LL;
  result[3] = 0LL;
  *((_DWORD *)result + 8) = 0;
  return result;
}

uint64_t sub_1001D386C(uint64_t result)
{
  if (*(_BYTE *)(result + 32))
  {
    if ((*(_BYTE *)(result + 32) & 1) != 0)
    {
      uint64_t v1 = *(void *)(result + 8);
      if (v1)
      {
        if (*(_BYTE *)(v1 + 36))
        {
          *(void *)(v1 + 8) = 0LL;
          *(void *)(v1 + 16) = 0LL;
          *(void *)(v1 + 24) = 0LL;
        }

        *(_DWORD *)(v1 + 36) = 0;
      }
    }

    *(void *)(result + 16) = 0LL;
    *(_DWORD *)(result + 24) = 0;
  }

  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1001D38A4( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    double v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_19;
        }
        *(_DWORD *)(a1 + 32) |= 1u;
        uint64_t v8 = *(char **)(a1 + 8);
        if (!v8)
        {
          uint64_t v8 = (char *)operator new(0x28uLL);
          *(void *)uint64_t v8 = off_101827B80;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *(void *)(a1 + 8) = v8;
        }

        uint64_t v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v21)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v21 = *v9;
          *((void *)this + 1) = v9 + 1;
        }

        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0LL;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v21);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        uint64_t v17 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v17 + 1;
        goto LABEL_31;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_19;
        }
LABEL_31:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v21) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 16) = v21;
        *(_DWORD *)(a1 + 32) |= 2u;
        __int16 v18 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v18 + 1;
LABEL_35:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v21) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 20) = v21;
        *(_DWORD *)(a1 + 32) |= 4u;
        int v19 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v19 + 1;
LABEL_39:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v21) & 1) != 0)
        {
          *(_DWORD *)(a1 + 24) = v21;
          *(_DWORD *)(a1 + 32) |= 8u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1LL;
            *((_BYTE *)this + 36) = 1;
            return result;
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_35;
        }
        goto LABEL_19;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_19;
        }
        goto LABEL_39;
      default:
        int v7 = TagFallback & 7;
LABEL_19:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001D3B74( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0B48 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  (int)a2,  *(float *)(v5 + 16),  a3);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      return result;
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  (int)a2,  *(float *)(v5 + 24),  a3);
  }

uint64_t sub_1001D3C18(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 32);
  if (*(_BYTE *)(a1 + 32))
  {
    if ((v1 & 1) != 0)
    {
      uint64_t v1 = *(void *)(a1 + 8);
      if (!v1) {
        uint64_t v1 = *(void *)(qword_1019A0B48 + 8);
      }
      int v3 = *(unsigned __int8 *)(v1 + 36);
      if (*(_BYTE *)(v1 + 36))
      {
        int v4 = (v3 << 31 >> 31) & 9;
        if ((v3 & 2) != 0) {
          v4 += 9;
        }
        if ((v3 & 4) != 0) {
          int v3 = v4 + 9;
        }
        else {
          int v3 = v4;
        }
      }

      *(_DWORD *)(v1 + 32) = v3;
      unsigned int v2 = v3 + 2;
      LODWORD(v1) = *(_DWORD *)(a1 + 32);
    }

    else
    {
      unsigned int v2 = 0;
    }

    if ((v1 & 2) != 0) {
      v2 += 5;
    }
    if ((v1 & 4) != 0) {
      v2 += 5;
    }
    if ((v1 & 8) != 0) {
      uint64_t v1 = v2 + 5;
    }
    else {
      uint64_t v1 = v2;
    }
  }

  *(_DWORD *)(a1 + 28) = v1;
  return v1;
}

float sub_1001D3CA8(uint64_t a1, void *lpsrc)
{
  return sub_1001D3694(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001D3CF4()
{
  return 1LL;
}

void *sub_1001D3CFC@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.AccelSample");
}

double sub_1001D3D0C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v17,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  1377LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v17,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v16, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16),  *(_DWORD *)(a2 + 24) + *(_DWORD *)(a1 + 24));
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v6 = 0LL;
    do
    {
      uint64_t v7 = *(void *)(*(void *)(a2 + 16) + 8 * v6);
      int v8 = *(_DWORD *)(a1 + 28);
      uint64_t v9 = *(int *)(a1 + 24);
      if ((int)v9 >= v8)
      {
        if (v8 == *(_DWORD *)(a1 + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16),  v8 + 1);
          int v8 = *(_DWORD *)(a1 + 28);
        }

        *(_DWORD *)(a1 + 28) = v8 + 1;
        int v11 = operator new(0x28uLL);
        *int v11 = &off_101827BF8;
        v11[1] = 0LL;
        void v11[2] = 0LL;
        v11[3] = 0LL;
        *((_DWORD *)v11 + 8) = 0;
        uint64_t v12 = *(void *)(a1 + 16);
        uint64_t v13 = *(int *)(a1 + 24);
        *(_DWORD *)(a1 + 24) = v13 + 1;
        *(void *)(v12 + 8 * v13) = v11;
      }

      else
      {
        uint64_t v10 = *(void *)(a1 + 16);
        *(_DWORD *)(a1 + 24) = v9 + 1;
        int v11 = *(void **)(v10 + 8 * v9);
      }

      *(float *)&double result = sub_1001D3694((uint64_t)v11, v7);
      ++v6;
    }

    while (v6 < *(int *)(a2 + 24));
  }

  if ((*(_BYTE *)(a2 + 44) & 1) != 0)
  {
    *(_DWORD *)(a1 + 44) |= 1u;
    int v14 = *(char **)(a1 + 8);
    if (!v14)
    {
      int v14 = (char *)operator new(0x28uLL);
      *(void *)int v14 = off_101827B80;
      *(_OWORD *)(v14 + 8) = 0u;
      *(_OWORD *)(v14 + 24) = 0u;
      *(void *)(a1 + 8) = v14;
    }

    uint64_t v15 = *(void *)(a2 + 8);
    if (!v15) {
      uint64_t v15 = *(void *)(qword_1019A0B50 + 8);
    }
    return sub_1001D323C((uint64_t)v14, v15);
  }

  return result;
}

void sub_1001D3EA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001D3EB8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101827C70;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0B50 != a1)
  {
    uint64_t v2 = *((void *)a1 + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  sub_10008D0EC((uint64_t)a1 + 16);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001D3F18(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

uint64_t sub_1001D3F2C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0B50;
  if (!qword_1019A0B50)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0B50;
  }

  return result;
}

void *sub_1001D3F58()
{
  uint64_t result = operator new(0x30uLL);
  result[5] = 0LL;
  *uint64_t result = off_101827C70;
  result[1] = 0LL;
  result[2] = 0LL;
  result[3] = 0LL;
  *((_DWORD *)result + 8) = 0;
  return result;
}

uint64_t sub_1001D3F88(uint64_t result)
{
  uint64_t v1 = result;
  if ((*(_BYTE *)(result + 44) & 1) != 0)
  {
    uint64_t v2 = *(void *)(result + 8);
    if (v2)
    {
      if (*(_BYTE *)(v2 + 36))
      {
        *(void *)(v2 + 8) = 0LL;
        *(void *)(v2 + 16) = 0LL;
        *(void *)(v2 + 24) = 0LL;
      }

      *(_DWORD *)(v2 + 36) = 0;
    }
  }

  if (*(int *)(result + 24) >= 1)
  {
    uint64_t v3 = 0LL;
    do
    {
      uint64_t v4 = *(void *)(*(void *)(v1 + 16) + 8 * v3);
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 32LL))(v4);
      ++v3;
    }

    while (v3 < *(int *)(v1 + 24));
  }

  *(_DWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 44) = 0;
  return result;
}

uint64_t sub_1001D4004( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = (char *)*((void *)this + 1);
        if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((void *)this + 1) = v6 + 1;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_18;
        }
        *(_DWORD *)(a1 + 44) |= 1u;
        uint64_t v9 = *(char **)(a1 + 8);
        if (!v9)
        {
          uint64_t v9 = (char *)operator new(0x28uLL);
          *(void *)uint64_t v9 = off_101827B80;
          *(_OWORD *)(v9 + 8) = 0u;
          *(_OWORD *)(v9 + 24) = 0u;
          *(void *)(a1 + 8) = v9;
        }

        uint64_t v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v34)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v34 = *v10;
          *((void *)this + 1) = v10 + 1;
        }

        int v11 = *((_DWORD *)this + 14);
        int v12 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v11 + 1;
        if (v11 >= v12) {
          return 0LL;
        }
        int v13 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v13);
        int v15 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v15, 1);
        int v17 = v15 - 1;
        if (v17 < 0 == v16) {
          *((_DWORD *)this + 14) = v17;
        }
        __int16 v18 = (_BYTE *)*((void *)this + 1);
      }

      int v8 = TagFallback & 7;
      if (v8 != 2) {
        goto LABEL_18;
      }
      while (1)
      {
        int v19 = *(_DWORD *)(a1 + 28);
        uint64_t v20 = *(int *)(a1 + 24);
        if ((int)v20 >= v19)
        {
          if (v19 == *(_DWORD *)(a1 + 32))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v19 + 1);
            int v19 = *(_DWORD *)(a1 + 28);
          }

          *(_DWORD *)(a1 + 28) = v19 + 1;
          double v22 = operator new(0x28uLL);
          *double v22 = &off_101827BF8;
          v22[1] = 0LL;
          v22[2] = 0LL;
          v22[3] = 0LL;
          *((_DWORD *)v22 + 8) = 0;
          uint64_t v23 = *(void *)(a1 + 16);
          uint64_t v24 = *(int *)(a1 + 24);
          *(_DWORD *)(a1 + 24) = v24 + 1;
          *(void *)(v23 + 8 * v24) = v22;
        }

        else
        {
          uint64_t v21 = *(void *)(a1 + 16);
          *(_DWORD *)(a1 + 24) = v20 + 1;
          double v22 = *(void **)(v21 + 8 * v20);
        }

        __int16 v25 = (char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v35)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v35 = *v25;
          *((void *)this + 1) = v25 + 1;
        }

        int v26 = *((_DWORD *)this + 14);
        int v27 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v26 + 1;
        if (v26 >= v27) {
          return 0LL;
        }
        int v28 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v35);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v28);
        int v30 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v30, 1);
        int v31 = v30 - 1;
        if (v31 < 0 == v16) {
          *((_DWORD *)this + 14) = v31;
        }
        __int16 v18 = (_BYTE *)*((void *)this + 1);
        double v32 = (_BYTE *)*((void *)this + 2);
        if (v18 >= v32 || *v18 != 18) {
          break;
        }
LABEL_29:
        *((void *)this + 1) = v18 + 1;
      }

      if (v18 == v32 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }

    int v8 = TagFallback & 7;
LABEL_18:
    if (v8 == 4) {
      return 1LL;
    }
  }

uint64_t sub_1001D4320( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if ((*(_BYTE *)(result + 44) & 1) != 0)
  {
    uint64_t v6 = *(void *)(result + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1019A0B50 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v6,  a2,  a4);
  }

  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0LL;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(void *)(*(void *)(v5 + 16) + 8 * v7++),  a2,  a4);
    while (v7 < *(int *)(v5 + 24));
  }

  return result;
}

uint64_t sub_1001D43A4(uint64_t a1)
{
  if ((*(_BYTE *)(a1 + 44) & 1) != 0)
  {
    uint64_t v3 = *(void *)(a1 + 8);
    if (!v3) {
      uint64_t v3 = *(void *)(qword_1019A0B50 + 8);
    }
    int v4 = *(unsigned __int8 *)(v3 + 36);
    if (*(_BYTE *)(v3 + 36))
    {
      int v5 = (v4 << 31 >> 31) & 9;
      if ((v4 & 2) != 0) {
        v5 += 9;
      }
      if ((v4 & 4) != 0) {
        int v4 = v5 + 9;
      }
      else {
        int v4 = v5;
      }
    }

    *(_DWORD *)(v3 + 32) = v4;
    int v2 = v4 + 2;
  }

  else
  {
    int v2 = 0;
  }

  int v6 = *(_DWORD *)(a1 + 24);
  uint64_t v7 = (v6 + v2);
  if (v6 >= 1)
  {
    uint64_t v8 = 0LL;
    do
    {
      uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001D3C18(*(void *)(*(void *)(a1 + 16) + 8 * v8));
      int v11 = (int)v9;
      else {
        int v12 = 1;
      }
      uint64_t v7 = (v11 + v7 + v12);
      ++v8;
    }

    while (v8 < *(int *)(a1 + 24));
  }

  *(_DWORD *)(a1 + 40) = v7;
  return v7;
}

double sub_1001D447C(uint64_t a1, void *lpsrc)
{
  return sub_1001D3D0C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001D44C8()
{
  return 1LL;
}

void *sub_1001D44D0@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.Accel");
}

float sub_1001D44E0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v11,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  1641LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v11,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 32);
  if (!(_BYTE)v6) {
    return *(float *)&v5;
  }
  if ((*(_BYTE *)(a2 + 32) & 1) != 0)
  {
    *(_DWORD *)(a1 + 32) |= 1u;
    uint64_t v7 = *(char **)(a1 + 8);
    if (!v7)
    {
      uint64_t v7 = (char *)operator new(0x28uLL);
      *(void *)uint64_t v7 = off_101827B80;
      *(_OWORD *)(v7 + 8) = 0u;
      *(_OWORD *)(v7 + 24) = 0u;
      *(void *)(a1 + 8) = v7;
    }

    uint64_t v8 = *(void *)(a2 + 8);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1019A0B58 + 8);
    }
    double v5 = sub_1001D323C((uint64_t)v7, v8);
    int v6 = *(_DWORD *)(a2 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_6:
      if ((v6 & 4) == 0) {
        goto LABEL_7;
      }
LABEL_16:
      LODWORD(sub_1012279C0(0LL, v4, v5) = *(_DWORD *)(a2 + 20);
      *(_DWORD *)(a1 + 32) |= 4u;
      *(_DWORD *)(a1 + 20) = LODWORD(v5);
      if ((*(_DWORD *)(a2 + 32) & 8) != 0) {
        goto LABEL_8;
      }
      return *(float *)&v5;
    }
  }

  else if ((*(_BYTE *)(a2 + 32) & 2) == 0)
  {
    goto LABEL_6;
  }

  LODWORD(sub_1012279C0(0LL, v4, v5) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) |= 2u;
  *(_DWORD *)(a1 + 16) = LODWORD(v5);
  int v6 = *(_DWORD *)(a2 + 32);
  if ((v6 & 4) != 0) {
    goto LABEL_16;
  }
LABEL_7:
  if ((v6 & 8) != 0)
  {
LABEL_8:
    LODWORD(sub_1012279C0(0LL, v4, v5) = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 8u;
    *(_DWORD *)(a1 + 24) = LODWORD(v5);
  }

  return *(float *)&v5;
}

void sub_1001D460C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001D4624(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_101827CE8;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0B58 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1001D4678(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

void *sub_1001D468C()
{
  uint64_t result = operator new(0x28uLL);
  *uint64_t result = &off_101827CE8;
  result[1] = 0LL;
  result[2] = 0LL;
  result[3] = 0LL;
  *((_DWORD *)result + 8) = 0;
  return result;
}

uint64_t sub_1001D46B8(uint64_t result)
{
  if (*(_BYTE *)(result + 32))
  {
    if ((*(_BYTE *)(result + 32) & 1) != 0)
    {
      uint64_t v1 = *(void *)(result + 8);
      if (v1)
      {
        if (*(_BYTE *)(v1 + 36))
        {
          *(void *)(v1 + 8) = 0LL;
          *(void *)(v1 + 16) = 0LL;
          *(void *)(v1 + 24) = 0LL;
        }

        *(_DWORD *)(v1 + 36) = 0;
      }
    }

    *(void *)(result + 16) = 0LL;
    *(_DWORD *)(result + 24) = 0;
  }

  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1001D46F0( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    double v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_19;
        }
        *(_DWORD *)(a1 + 32) |= 1u;
        uint64_t v8 = *(char **)(a1 + 8);
        if (!v8)
        {
          uint64_t v8 = (char *)operator new(0x28uLL);
          *(void *)uint64_t v8 = off_101827B80;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *(void *)(a1 + 8) = v8;
        }

        uint64_t v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v21)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v21 = *v9;
          *((void *)this + 1) = v9 + 1;
        }

        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0LL;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v21);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        int v17 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v17 + 1;
        goto LABEL_31;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_19;
        }
LABEL_31:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v21) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 16) = v21;
        *(_DWORD *)(a1 + 32) |= 2u;
        __int16 v18 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v18 + 1;
LABEL_35:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v21) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 20) = v21;
        *(_DWORD *)(a1 + 32) |= 4u;
        int v19 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v19 + 1;
LABEL_39:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v21) & 1) != 0)
        {
          *(_DWORD *)(a1 + 24) = v21;
          *(_DWORD *)(a1 + 32) |= 8u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1LL;
            *((_BYTE *)this + 36) = 1;
            return result;
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_35;
        }
        goto LABEL_19;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_19;
        }
        goto LABEL_39;
      default:
        int v7 = TagFallback & 7;
LABEL_19:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001D49C0( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0B58 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  (int)a2,  *(float *)(v5 + 16),  a3);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      return result;
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  (int)a2,  *(float *)(v5 + 24),  a3);
  }

uint64_t sub_1001D4A64(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 32);
  if (*(_BYTE *)(a1 + 32))
  {
    if ((v1 & 1) != 0)
    {
      uint64_t v1 = *(void *)(a1 + 8);
      if (!v1) {
        uint64_t v1 = *(void *)(qword_1019A0B58 + 8);
      }
      int v3 = *(unsigned __int8 *)(v1 + 36);
      if (*(_BYTE *)(v1 + 36))
      {
        int v4 = (v3 << 31 >> 31) & 9;
        if ((v3 & 2) != 0) {
          v4 += 9;
        }
        if ((v3 & 4) != 0) {
          int v3 = v4 + 9;
        }
        else {
          int v3 = v4;
        }
      }

      *(_DWORD *)(v1 + 32) = v3;
      unsigned int v2 = v3 + 2;
      LODWORD(v1) = *(_DWORD *)(a1 + 32);
    }

    else
    {
      unsigned int v2 = 0;
    }

    if ((v1 & 2) != 0) {
      v2 += 5;
    }
    if ((v1 & 4) != 0) {
      v2 += 5;
    }
    if ((v1 & 8) != 0) {
      uint64_t v1 = v2 + 5;
    }
    else {
      uint64_t v1 = v2;
    }
  }

  *(_DWORD *)(a1 + 28) = v1;
  return v1;
}

float sub_1001D4AF4(uint64_t a1, void *lpsrc)
{
  return sub_1001D44E0(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001D4B40()
{
  return 1LL;
}

void *sub_1001D4B48@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.GyroSample");
}

double sub_1001D4B58(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v17,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  1859LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v17,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v16, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16),  *(_DWORD *)(a2 + 24) + *(_DWORD *)(a1 + 24));
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v6 = 0LL;
    do
    {
      uint64_t v7 = *(void *)(*(void *)(a2 + 16) + 8 * v6);
      int v8 = *(_DWORD *)(a1 + 28);
      uint64_t v9 = *(int *)(a1 + 24);
      if ((int)v9 >= v8)
      {
        if (v8 == *(_DWORD *)(a1 + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16),  v8 + 1);
          int v8 = *(_DWORD *)(a1 + 28);
        }

        *(_DWORD *)(a1 + 28) = v8 + 1;
        int v11 = operator new(0x28uLL);
        *int v11 = &off_101827CE8;
        v11[1] = 0LL;
        void v11[2] = 0LL;
        v11[3] = 0LL;
        *((_DWORD *)v11 + 8) = 0;
        uint64_t v12 = *(void *)(a1 + 16);
        uint64_t v13 = *(int *)(a1 + 24);
        *(_DWORD *)(a1 + 24) = v13 + 1;
        *(void *)(v12 + 8 * v13) = v11;
      }

      else
      {
        uint64_t v10 = *(void *)(a1 + 16);
        *(_DWORD *)(a1 + 24) = v9 + 1;
        int v11 = *(void **)(v10 + 8 * v9);
      }

      *(float *)&double result = sub_1001D44E0((uint64_t)v11, v7);
      ++v6;
    }

    while (v6 < *(int *)(a2 + 24));
  }

  if ((*(_BYTE *)(a2 + 44) & 1) != 0)
  {
    *(_DWORD *)(a1 + 44) |= 1u;
    int v14 = *(char **)(a1 + 8);
    if (!v14)
    {
      int v14 = (char *)operator new(0x28uLL);
      *(void *)int v14 = off_101827B80;
      *(_OWORD *)(v14 + 8) = 0u;
      *(_OWORD *)(v14 + 24) = 0u;
      *(void *)(a1 + 8) = v14;
    }

    uint64_t v15 = *(void *)(a2 + 8);
    if (!v15) {
      uint64_t v15 = *(void *)(qword_1019A0B60 + 8);
    }
    return sub_1001D323C((uint64_t)v14, v15);
  }

  return result;
}

void sub_1001D4CEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001D4D04(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101827D60;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0B60 != a1)
  {
    uint64_t v2 = *((void *)a1 + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  sub_10008D0EC((uint64_t)a1 + 16);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001D4D64(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

uint64_t sub_1001D4D78(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0B60;
  if (!qword_1019A0B60)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0B60;
  }

  return result;
}

void *sub_1001D4DA4()
{
  uint64_t result = operator new(0x30uLL);
  result[5] = 0LL;
  *uint64_t result = off_101827D60;
  result[1] = 0LL;
  result[2] = 0LL;
  result[3] = 0LL;
  *((_DWORD *)result + 8) = 0;
  return result;
}

uint64_t sub_1001D4DD4(uint64_t result)
{
  uint64_t v1 = result;
  if ((*(_BYTE *)(result + 44) & 1) != 0)
  {
    uint64_t v2 = *(void *)(result + 8);
    if (v2)
    {
      if (*(_BYTE *)(v2 + 36))
      {
        *(void *)(v2 + 8) = 0LL;
        *(void *)(v2 + 16) = 0LL;
        *(void *)(v2 + 24) = 0LL;
      }

      *(_DWORD *)(v2 + 36) = 0;
    }
  }

  if (*(int *)(result + 24) >= 1)
  {
    uint64_t v3 = 0LL;
    do
    {
      uint64_t v4 = *(void *)(*(void *)(v1 + 16) + 8 * v3);
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 32LL))(v4);
      ++v3;
    }

    while (v3 < *(int *)(v1 + 24));
  }

  *(_DWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 44) = 0;
  return result;
}

uint64_t sub_1001D4E50( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = (char *)*((void *)this + 1);
        if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((void *)this + 1) = v6 + 1;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_18;
        }
        *(_DWORD *)(a1 + 44) |= 1u;
        uint64_t v9 = *(char **)(a1 + 8);
        if (!v9)
        {
          uint64_t v9 = (char *)operator new(0x28uLL);
          *(void *)uint64_t v9 = off_101827B80;
          *(_OWORD *)(v9 + 8) = 0u;
          *(_OWORD *)(v9 + 24) = 0u;
          *(void *)(a1 + 8) = v9;
        }

        uint64_t v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v34)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v34 = *v10;
          *((void *)this + 1) = v10 + 1;
        }

        int v11 = *((_DWORD *)this + 14);
        int v12 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v11 + 1;
        if (v11 >= v12) {
          return 0LL;
        }
        int v13 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v13);
        int v15 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v15, 1);
        int v17 = v15 - 1;
        if (v17 < 0 == v16) {
          *((_DWORD *)this + 14) = v17;
        }
        __int16 v18 = (_BYTE *)*((void *)this + 1);
      }

      int v8 = TagFallback & 7;
      if (v8 != 2) {
        goto LABEL_18;
      }
      while (1)
      {
        int v19 = *(_DWORD *)(a1 + 28);
        uint64_t v20 = *(int *)(a1 + 24);
        if ((int)v20 >= v19)
        {
          if (v19 == *(_DWORD *)(a1 + 32))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v19 + 1);
            int v19 = *(_DWORD *)(a1 + 28);
          }

          *(_DWORD *)(a1 + 28) = v19 + 1;
          double v22 = operator new(0x28uLL);
          *double v22 = &off_101827CE8;
          v22[1] = 0LL;
          v22[2] = 0LL;
          v22[3] = 0LL;
          *((_DWORD *)v22 + 8) = 0;
          uint64_t v23 = *(void *)(a1 + 16);
          uint64_t v24 = *(int *)(a1 + 24);
          *(_DWORD *)(a1 + 24) = v24 + 1;
          *(void *)(v23 + 8 * v24) = v22;
        }

        else
        {
          uint64_t v21 = *(void *)(a1 + 16);
          *(_DWORD *)(a1 + 24) = v20 + 1;
          double v22 = *(void **)(v21 + 8 * v20);
        }

        __int16 v25 = (char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v35)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v35 = *v25;
          *((void *)this + 1) = v25 + 1;
        }

        int v26 = *((_DWORD *)this + 14);
        int v27 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v26 + 1;
        if (v26 >= v27) {
          return 0LL;
        }
        int v28 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v35);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v28);
        int v30 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v30, 1);
        int v31 = v30 - 1;
        if (v31 < 0 == v16) {
          *((_DWORD *)this + 14) = v31;
        }
        __int16 v18 = (_BYTE *)*((void *)this + 1);
        double v32 = (_BYTE *)*((void *)this + 2);
        if (v18 >= v32 || *v18 != 18) {
          break;
        }
LABEL_29:
        *((void *)this + 1) = v18 + 1;
      }

      if (v18 == v32 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }

    int v8 = TagFallback & 7;
LABEL_18:
    if (v8 == 4) {
      return 1LL;
    }
  }

uint64_t sub_1001D516C( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if ((*(_BYTE *)(result + 44) & 1) != 0)
  {
    uint64_t v6 = *(void *)(result + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1019A0B60 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v6,  a2,  a4);
  }

  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0LL;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(void *)(*(void *)(v5 + 16) + 8 * v7++),  a2,  a4);
    while (v7 < *(int *)(v5 + 24));
  }

  return result;
}

uint64_t sub_1001D51F0(uint64_t a1)
{
  if ((*(_BYTE *)(a1 + 44) & 1) != 0)
  {
    uint64_t v3 = *(void *)(a1 + 8);
    if (!v3) {
      uint64_t v3 = *(void *)(qword_1019A0B60 + 8);
    }
    int v4 = *(unsigned __int8 *)(v3 + 36);
    if (*(_BYTE *)(v3 + 36))
    {
      int v5 = (v4 << 31 >> 31) & 9;
      if ((v4 & 2) != 0) {
        v5 += 9;
      }
      if ((v4 & 4) != 0) {
        int v4 = v5 + 9;
      }
      else {
        int v4 = v5;
      }
    }

    *(_DWORD *)(v3 + 32) = v4;
    int v2 = v4 + 2;
  }

  else
  {
    int v2 = 0;
  }

  int v6 = *(_DWORD *)(a1 + 24);
  uint64_t v7 = (v6 + v2);
  if (v6 >= 1)
  {
    uint64_t v8 = 0LL;
    do
    {
      uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001D4A64(*(void *)(*(void *)(a1 + 16) + 8 * v8));
      int v11 = (int)v9;
      else {
        int v12 = 1;
      }
      uint64_t v7 = (v11 + v7 + v12);
      ++v8;
    }

    while (v8 < *(int *)(a1 + 24));
  }

  *(_DWORD *)(a1 + 40) = v7;
  return v7;
}

double sub_1001D52C8(uint64_t a1, void *lpsrc)
{
  return sub_1001D4B58(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001D5314()
{
  return 1LL;
}

void *sub_1001D531C@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.Gyro");
}

float sub_1001D532C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v11,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  2094LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v11,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 28);
  if (!(_BYTE)v6) {
    return *(float *)&v5;
  }
  if ((*(_BYTE *)(a2 + 28) & 1) == 0)
  {
    if ((*(_BYTE *)(a2 + 28) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_14:
    LODWORD(sub_1012279C0(0LL, v4, v5) = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 28) |= 2u;
    *(_DWORD *)(a1 + 16) = LODWORD(v5);
    if ((*(_DWORD *)(a2 + 28) & 4) != 0) {
      goto LABEL_7;
    }
    return *(float *)&v5;
  }

  *(_DWORD *)(a1 + 28) |= 1u;
  uint64_t v7 = *(char **)(a1 + 8);
  if (!v7)
  {
    uint64_t v7 = (char *)operator new(0x28uLL);
    *(void *)uint64_t v7 = off_101827B80;
    *(_OWORD *)(v7 + 8) = 0u;
    *(_OWORD *)(v7 + 24) = 0u;
    *(void *)(a1 + 8) = v7;
  }

  uint64_t v8 = *(void *)(a2 + 8);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_1019A0B68 + 8);
  }
  double v5 = sub_1001D323C((uint64_t)v7, v8);
  int v6 = *(_DWORD *)(a2 + 28);
  if ((v6 & 2) != 0) {
    goto LABEL_14;
  }
LABEL_6:
  if ((v6 & 4) != 0)
  {
LABEL_7:
    LODWORD(sub_1012279C0(0LL, v4, v5) = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 28) |= 4u;
    *(_DWORD *)(a1 + 20) = LODWORD(v5);
  }

  return *(float *)&v5;
}

void sub_1001D5438(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001D5450(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_101827DD8;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0B68 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1001D54A4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

void *sub_1001D54B8()
{
  uint64_t result = operator new(0x20uLL);
  *uint64_t result = &off_101827DD8;
  result[1] = 0LL;
  result[2] = 0LL;
  result[3] = 0LL;
  return result;
}

uint64_t sub_1001D54E0(uint64_t result)
{
  if (*(_BYTE *)(result + 28))
  {
    if ((*(_BYTE *)(result + 28) & 1) != 0)
    {
      uint64_t v1 = *(void *)(result + 8);
      if (v1)
      {
        if (*(_BYTE *)(v1 + 36))
        {
          *(void *)(v1 + 8) = 0LL;
          *(void *)(v1 + 16) = 0LL;
          *(void *)(v1 + 24) = 0LL;
        }

        *(_DWORD *)(v1 + 36) = 0;
      }
    }

    *(void *)(result + 16) = 0LL;
  }

  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_1001D5514( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      double v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback) {
          return 1LL;
        }
      }

      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((void *)this + 1) = v5 + 1;
        if (!(_DWORD)TagFallback) {
          return 1LL;
        }
      }

      unsigned int v7 = TagFallback >> 3;
      if (v7 == 2)
      {
        int v8 = TagFallback & 7;
        if (v8 != 5) {
          goto LABEL_20;
        }
LABEL_32:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v22) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 16) = v22;
        *(_DWORD *)(a1 + 28) |= 2u;
        int v19 = (_BYTE *)*((void *)this + 1);
        if ((unint64_t)v19 < *((void *)this + 2) && *v19 == 29)
        {
          *((void *)this + 1) = v19 + 1;
          goto LABEL_36;
        }
      }

      else
      {
        if (v7 != 3)
        {
          int v8 = TagFallback & 7;
          goto LABEL_20;
        }

        int v8 = TagFallback & 7;
        if (v8 == 5)
        {
LABEL_36:
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v21) & 1) == 0) {
            return 0LL;
          }
          *(_DWORD *)(a1 + 20) = v21;
          *(_DWORD *)(a1 + 28) |= 4u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1LL;
            *((_BYTE *)this + 36) = 1;
            return result;
          }
        }

        else
        {
LABEL_20:
          if (v8 == 4) {
            return 1LL;
          }
        }
      }
    }

    int v8 = TagFallback & 7;
    if (v8 != 2) {
      goto LABEL_20;
    }
    *(_DWORD *)(a1 + 28) |= 1u;
    uint64_t v9 = *(char **)(a1 + 8);
    if (!v9)
    {
      uint64_t v9 = (char *)operator new(0x28uLL);
      *(void *)uint64_t v9 = off_101827B80;
      *(_OWORD *)(v9 + 8) = 0u;
      *(_OWORD *)(v9 + 24) = 0u;
      *(void *)(a1 + 8) = v9;
    }

    char v10 = (char *)*((void *)this + 1);
    if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
    {
    }

    else
    {
      unsigned int v23 = *v10;
      *((void *)this + 1) = v10 + 1;
    }

    int v11 = *((_DWORD *)this + 14);
    int v12 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v11 + 1;
    if (v11 >= v12) {
      return 0LL;
    }
    int v13 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v23);
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v13);
    int v15 = *((_DWORD *)this + 14);
    BOOL v16 = __OFSUB__(v15, 1);
    int v17 = v15 - 1;
    if (v17 < 0 == v16) {
      *((_DWORD *)this + 14) = v17;
    }
    __int16 v18 = (_BYTE *)*((void *)this + 1);
    if ((unint64_t)v18 < *((void *)this + 2) && *v18 == 21)
    {
      *((void *)this + 1) = v18 + 1;
      goto LABEL_32;
    }
  }

uint64_t sub_1001D5784( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0B68 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 28);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        return result;
      }
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  (int)a2,  *(float *)(v5 + 20),  a3);
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  (int)a2,  *(float *)(v5 + 16),  a3);
  if ((*(_DWORD *)(v5 + 28) & 4) != 0) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  (int)a2,  *(float *)(v5 + 20),  a3);
  }
  return result;
}

uint64_t sub_1001D580C(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 28);
  if (*(_BYTE *)(a1 + 28))
  {
    if ((v1 & 1) != 0)
    {
      uint64_t v1 = *(void *)(a1 + 8);
      if (!v1) {
        uint64_t v1 = *(void *)(qword_1019A0B68 + 8);
      }
      int v3 = *(unsigned __int8 *)(v1 + 36);
      if (*(_BYTE *)(v1 + 36))
      {
        int v4 = (v3 << 31 >> 31) & 9;
        if ((v3 & 2) != 0) {
          v4 += 9;
        }
        if ((v3 & 4) != 0) {
          int v3 = v4 + 9;
        }
        else {
          int v3 = v4;
        }
      }

      *(_DWORD *)(v1 + 32) = v3;
      unsigned int v2 = v3 + 2;
      LODWORD(v1) = *(_DWORD *)(a1 + 28);
    }

    else
    {
      unsigned int v2 = 0;
    }

    if ((v1 & 2) != 0) {
      v2 += 5;
    }
    if ((v1 & 4) != 0) {
      uint64_t v1 = v2 + 5;
    }
    else {
      uint64_t v1 = v2;
    }
  }

  *(_DWORD *)(a1 + 24) = v1;
  return v1;
}

float sub_1001D5890(uint64_t a1, void *lpsrc)
{
  return sub_1001D532C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001D58DC()
{
  return 1LL;
}

void *sub_1001D58E4@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.BaroSample");
}

double sub_1001D58F4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v17,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  2308LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v17,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v16, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16),  *(_DWORD *)(a2 + 24) + *(_DWORD *)(a1 + 24));
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v6 = 0LL;
    do
    {
      uint64_t v7 = *(void *)(*(void *)(a2 + 16) + 8 * v6);
      int v8 = *(_DWORD *)(a1 + 28);
      uint64_t v9 = *(int *)(a1 + 24);
      if ((int)v9 >= v8)
      {
        if (v8 == *(_DWORD *)(a1 + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16),  v8 + 1);
          int v8 = *(_DWORD *)(a1 + 28);
        }

        *(_DWORD *)(a1 + 28) = v8 + 1;
        int v11 = operator new(0x20uLL);
        *int v11 = &off_101827DD8;
        v11[1] = 0LL;
        void v11[2] = 0LL;
        v11[3] = 0LL;
        uint64_t v12 = *(void *)(a1 + 16);
        uint64_t v13 = *(int *)(a1 + 24);
        *(_DWORD *)(a1 + 24) = v13 + 1;
        *(void *)(v12 + 8 * v13) = v11;
      }

      else
      {
        uint64_t v10 = *(void *)(a1 + 16);
        *(_DWORD *)(a1 + 24) = v9 + 1;
        int v11 = *(void **)(v10 + 8 * v9);
      }

      *(float *)&double result = sub_1001D532C((uint64_t)v11, v7);
      ++v6;
    }

    while (v6 < *(int *)(a2 + 24));
  }

  if ((*(_BYTE *)(a2 + 44) & 1) != 0)
  {
    *(_DWORD *)(a1 + 44) |= 1u;
    unsigned int v14 = *(char **)(a1 + 8);
    if (!v14)
    {
      unsigned int v14 = (char *)operator new(0x28uLL);
      *(void *)unsigned int v14 = off_101827B80;
      *(_OWORD *)(v14 + 8) = 0u;
      *(_OWORD *)(v14 + 24) = 0u;
      *(void *)(a1 + 8) = v14;
    }

    uint64_t v15 = *(void *)(a2 + 8);
    if (!v15) {
      uint64_t v15 = *(void *)(qword_1019A0B70 + 8);
    }
    return sub_1001D323C((uint64_t)v14, v15);
  }

  return result;
}

void sub_1001D5A84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001D5A9C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101827E50;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0B70 != a1)
  {
    uint64_t v2 = *((void *)a1 + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  sub_10008D0EC((uint64_t)a1 + 16);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001D5AFC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

uint64_t sub_1001D5B10(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0B70;
  if (!qword_1019A0B70)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0B70;
  }

  return result;
}

void *sub_1001D5B3C()
{
  uint64_t result = operator new(0x30uLL);
  result[5] = 0LL;
  *uint64_t result = off_101827E50;
  result[1] = 0LL;
  result[2] = 0LL;
  result[3] = 0LL;
  *((_DWORD *)result + 8) = 0;
  return result;
}

uint64_t sub_1001D5B6C(uint64_t result)
{
  uint64_t v1 = result;
  if ((*(_BYTE *)(result + 44) & 1) != 0)
  {
    uint64_t v2 = *(void *)(result + 8);
    if (v2)
    {
      if (*(_BYTE *)(v2 + 36))
      {
        *(void *)(v2 + 8) = 0LL;
        *(void *)(v2 + 16) = 0LL;
        *(void *)(v2 + 24) = 0LL;
      }

      *(_DWORD *)(v2 + 36) = 0;
    }
  }

  if (*(int *)(result + 24) >= 1)
  {
    uint64_t v3 = 0LL;
    do
    {
      uint64_t v4 = *(void *)(*(void *)(v1 + 16) + 8 * v3);
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 32LL))(v4);
      ++v3;
    }

    while (v3 < *(int *)(v1 + 24));
  }

  *(_DWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 44) = 0;
  return result;
}

uint64_t sub_1001D5BE8( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = (char *)*((void *)this + 1);
        if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((void *)this + 1) = v6 + 1;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_18;
        }
        *(_DWORD *)(a1 + 44) |= 1u;
        uint64_t v9 = *(char **)(a1 + 8);
        if (!v9)
        {
          uint64_t v9 = (char *)operator new(0x28uLL);
          *(void *)uint64_t v9 = off_101827B80;
          *(_OWORD *)(v9 + 8) = 0u;
          *(_OWORD *)(v9 + 24) = 0u;
          *(void *)(a1 + 8) = v9;
        }

        uint64_t v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v34)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v34 = *v10;
          *((void *)this + 1) = v10 + 1;
        }

        int v11 = *((_DWORD *)this + 14);
        int v12 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v11 + 1;
        if (v11 >= v12) {
          return 0LL;
        }
        int v13 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v13);
        int v15 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v15, 1);
        int v17 = v15 - 1;
        if (v17 < 0 == v16) {
          *((_DWORD *)this + 14) = v17;
        }
        __int16 v18 = (_BYTE *)*((void *)this + 1);
      }

      int v8 = TagFallback & 7;
      if (v8 != 2) {
        goto LABEL_18;
      }
      while (1)
      {
        int v19 = *(_DWORD *)(a1 + 28);
        uint64_t v20 = *(int *)(a1 + 24);
        if ((int)v20 >= v19)
        {
          if (v19 == *(_DWORD *)(a1 + 32))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v19 + 1);
            int v19 = *(_DWORD *)(a1 + 28);
          }

          *(_DWORD *)(a1 + 28) = v19 + 1;
          unsigned int v22 = operator new(0x20uLL);
          *unsigned int v22 = &off_101827DD8;
          v22[1] = 0LL;
          v22[2] = 0LL;
          v22[3] = 0LL;
          uint64_t v23 = *(void *)(a1 + 16);
          uint64_t v24 = *(int *)(a1 + 24);
          *(_DWORD *)(a1 + 24) = v24 + 1;
          *(void *)(v23 + 8 * v24) = v22;
        }

        else
        {
          uint64_t v21 = *(void *)(a1 + 16);
          *(_DWORD *)(a1 + 24) = v20 + 1;
          unsigned int v22 = *(void **)(v21 + 8 * v20);
        }

        __int16 v25 = (char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v35)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v35 = *v25;
          *((void *)this + 1) = v25 + 1;
        }

        int v26 = *((_DWORD *)this + 14);
        int v27 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v26 + 1;
        if (v26 >= v27) {
          return 0LL;
        }
        int v28 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v35);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v28);
        int v30 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v30, 1);
        int v31 = v30 - 1;
        if (v31 < 0 == v16) {
          *((_DWORD *)this + 14) = v31;
        }
        __int16 v18 = (_BYTE *)*((void *)this + 1);
        double v32 = (_BYTE *)*((void *)this + 2);
        if (v18 >= v32 || *v18 != 18) {
          break;
        }
LABEL_29:
        *((void *)this + 1) = v18 + 1;
      }

      if (v18 == v32 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }

    int v8 = TagFallback & 7;
LABEL_18:
    if (v8 == 4) {
      return 1LL;
    }
  }

uint64_t sub_1001D5F00( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if ((*(_BYTE *)(result + 44) & 1) != 0)
  {
    uint64_t v6 = *(void *)(result + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1019A0B70 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v6,  a2,  a4);
  }

  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0LL;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(void *)(*(void *)(v5 + 16) + 8 * v7++),  a2,  a4);
    while (v7 < *(int *)(v5 + 24));
  }

  return result;
}

uint64_t sub_1001D5F84(uint64_t a1)
{
  if ((*(_BYTE *)(a1 + 44) & 1) != 0)
  {
    uint64_t v3 = *(void *)(a1 + 8);
    if (!v3) {
      uint64_t v3 = *(void *)(qword_1019A0B70 + 8);
    }
    int v4 = *(unsigned __int8 *)(v3 + 36);
    if (*(_BYTE *)(v3 + 36))
    {
      int v5 = (v4 << 31 >> 31) & 9;
      if ((v4 & 2) != 0) {
        v5 += 9;
      }
      if ((v4 & 4) != 0) {
        int v4 = v5 + 9;
      }
      else {
        int v4 = v5;
      }
    }

    *(_DWORD *)(v3 + 32) = v4;
    int v2 = v4 + 2;
  }

  else
  {
    int v2 = 0;
  }

  int v6 = *(_DWORD *)(a1 + 24);
  uint64_t v7 = (v6 + v2);
  if (v6 >= 1)
  {
    uint64_t v8 = 0LL;
    do
    {
      uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001D580C(*(void *)(*(void *)(a1 + 16) + 8 * v8));
      int v11 = (int)v9;
      else {
        int v12 = 1;
      }
      uint64_t v7 = (v11 + v7 + v12);
      ++v8;
    }

    while (v8 < *(int *)(a1 + 24));
  }

  *(_DWORD *)(a1 + 40) = v7;
  return v7;
}

double sub_1001D605C(uint64_t a1, void *lpsrc)
{
  return sub_1001D58F4(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001D60A8()
{
  return 1LL;
}

void *sub_1001D60B0@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.Baro");
}

double sub_1001D60C0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v8,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  2504LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v8,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v7, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 28);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 28) & 1) != 0)
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 28) |= 1u;
      *(double *)(a1 + 8) = result;
      int v6 = *(_DWORD *)(a2 + 28);
    }

    if ((v6 & 2) != 0)
    {
      double result = *(double *)(a2 + 16);
      *(_DWORD *)(a1 + 28) |= 2u;
      *(double *)(a1 + 16) = result;
    }
  }

  return result;
}

void sub_1001D6168(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001D6180(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101827EC8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001D6190(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101827EC8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

void *sub_1001D61B0()
{
  double result = operator new(0x20uLL);
  *double result = off_101827EC8;
  result[1] = 0LL;
  result[2] = 0LL;
  result[3] = 0LL;
  return result;
}

uint64_t sub_1001D61D8(uint64_t result)
{
  if (*(_BYTE *)(result + 28))
  {
    *(void *)(result + 8) = 0LL;
    *(void *)(result + 16) = 0LL;
  }

  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_1001D61EC( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_21;
        }
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v10) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 8) = v10;
        *(_DWORD *)(a1 + 28) |= 1u;
        uint64_t v8 = (_BYTE *)*((void *)this + 1);
        if ((unint64_t)v8 < *((void *)this + 2) && *v8 == 17)
        {
          *((void *)this + 1) = v8 + 1;
          goto LABEL_15;
        }
      }

      if (TagFallback >> 3 != 2)
      {
        int v7 = TagFallback & 7;
        goto LABEL_21;
      }

      int v7 = TagFallback & 7;
      if (v7 == 1) {
        break;
      }
LABEL_21:
      if (v7 == 4) {
        return 1LL;
      }
    }

uint64_t sub_1001D6348( uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 28);
  if ((v5 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  a2,  *(double *)(result + 8),  a3);
    int v5 = *(_DWORD *)(v4 + 28);
  }

  if ((v5 & 2) != 0) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  a2,  *(double *)(v4 + 16),  a3);
  }
  return result;
}

uint64_t sub_1001D63A0(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 28);
  if (*(_BYTE *)(a1 + 28))
  {
    unsigned int v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }

  *(_DWORD *)(a1 + 24) = v1;
  return v1;
}

double sub_1001D63CC(uint64_t a1, void *lpsrc)
{
  return sub_1001D60C0(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001D6418()
{
  return 1LL;
}

void *sub_1001D6420@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.ClientLocationCoordinate");
}

BOOL sub_1001D6430(unsigned int a1)
{
  return a1 < 3 || a1 == 0xFFFF;
}

BOOL sub_1001D644C(int a1)
{
  BOOL result = 1LL;
  return result;
}

void sub_1001D6490(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v31,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  3388LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v31,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v30, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v31);
  }

  int v5 = *(_DWORD *)(a2 + 152);
  if (!(_BYTE)v5) {
    goto LABEL_16;
  }
  if ((v5 & 1) != 0)
  {
    unsigned int v6 = *(_DWORD *)(a2 + 48);
    if (v6 >= 3 && v6 != 0xFFFF) {
      sub_10122FA04();
    }
    *(_DWORD *)(a1 + 152) |= 1u;
    *(_DWORD *)(a1 + 48) = v6;
    int v5 = *(_DWORD *)(a2 + 152);
  }

  if ((v5 & 2) != 0)
  {
    *(_DWORD *)(a1 + 152) |= 2u;
    uint64_t v23 = *(void **)(a1 + 8);
    if (!v23)
    {
      uint64_t v23 = operator new(0x20uLL);
      *uint64_t v23 = off_101827EC8;
      v23[1] = 0LL;
      unsigned int v23[2] = 0LL;
      v23[3] = 0LL;
      *(void *)(a1 + 8) = v23;
    }

    uint64_t v24 = *(void *)(a2 + 8);
    if (!v24) {
      uint64_t v24 = *(void *)(qword_1019A0B80 + 8);
    }
    sub_1001D60C0((uint64_t)v23, v24);
    int v5 = *(_DWORD *)(a2 + 152);
    if ((v5 & 4) == 0)
    {
LABEL_10:
      if ((v5 & 8) == 0) {
        goto LABEL_11;
      }
      goto LABEL_65;
    }
  }

  else if ((v5 & 4) == 0)
  {
    goto LABEL_10;
  }

  uint64_t v25 = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 152) |= 4u;
  *(void *)(a1 + 16) = v25;
  int v5 = *(_DWORD *)(a2 + 152);
  if ((v5 & 8) == 0)
  {
LABEL_11:
    if ((v5 & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_66;
  }

void sub_1001D68A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void *sub_1001D68BC(void *result)
{
  if ((void *)qword_1019A0B80 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    BOOL result = (void *)v1[12];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_1001D6918(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101827F40;
  sub_1001D68BC(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001D6948(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101827F40;
  sub_1001D68BC(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v2);
}

uint64_t sub_1001D697C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0B80;
  if (!qword_1019A0B80)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0B80;
  }

  return result;
}

double sub_1001D69A8()
{
  unsigned __int8 v0 = (char *)operator new(0xA0uLL);
  *(void *)unsigned __int8 v0 = off_101827F40;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_OWORD *)(v0 + 88) = 0u;
  *(_OWORD *)(v0 + 104) = 0u;
  *(void *)&double result = 0xFFFFFFFFLL;
  *(_OWORD *)(v0 + 120) = xmmword_1012E0BA0;
  *((void *)v0 + 17) = 0LL;
  v0[144] = 0;
  *((_DWORD *)v0 + 37) = 0;
  *((_DWORD *)v0 + 38) = 0;
  return result;
}

uint64_t sub_1001D6A04(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 152);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(result + 48) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(result + 8);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 28))
        {
          *(void *)(v2 + 8) = 0LL;
          *(void *)(v2 + 16) = 0LL;
        }

        *(_DWORD *)(v2 + 28) = 0;
        int v1 = *(_DWORD *)(result + 152);
      }
    }

    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(void *)(result + 56) = 0LL;
    *(void *)(result + 64) = 0LL;
  }

  if ((v1 & 0xFF00) != 0)
  {
    *(_DWORD *)(result + 52) = 0;
    *(_DWORD *)(result + 104) = 0;
    *(void *)(result + 80) = 0LL;
    *(void *)(result + 88) = 0LL;
    *(void *)(result + 72) = 0LL;
    if ((v1 & 0x2000) != 0)
    {
      uint64_t v3 = *(void *)(result + 96);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 28))
        {
          *(void *)(v3 + 8) = 0LL;
          *(void *)(v3 + 16) = 0LL;
        }

        *(_DWORD *)(v3 + 28) = 0;
        int v1 = *(_DWORD *)(result + 152);
      }
    }

    *(void *)(result + 112) = 0LL;
    *(_DWORD *)(result + 108) = 0;
  }

  if ((v1 & 0xFF0000) != 0)
  {
    *(_OWORD *)(result + 120) = xmmword_1012E0BA0;
    *(void *)(result + 136) = 0LL;
    *(_BYTE *)(result + 144) = 0;
  }

  *(_DWORD *)(result + 152) = 0;
  return result;
}

uint64_t sub_1001D6AA4( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        int v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v9 = v76[0];
        }

        else
        {
          unsigned int v9 = *v8;
          *((void *)this + 1) = v8 + 1;
        }

        if (v9 < 3 || v9 == 0xFFFF)
        {
          *(_DWORD *)(a1 + 152) |= 1u;
          *(_DWORD *)(a1 + 48) = v9;
        }

        char v30 = (_BYTE *)*((void *)this + 1);
        if ((unint64_t)v30 < *((void *)this + 2) && *v30 == 18)
        {
          *((void *)this + 1) = v30 + 1;
          goto LABEL_81;
        }

        continue;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_57;
        }
LABEL_81:
        *(_DWORD *)(a1 + 152) |= 2u;
        int v31 = *(void **)(a1 + 8);
        if (!v31)
        {
          int v31 = operator new(0x20uLL);
          *int v31 = off_101827EC8;
          v31[1] = 0LL;
          v31[2] = 0LL;
          v31[3] = 0LL;
          *(void *)(a1 + 8) = v31;
        }

        double v32 = (char *)*((void *)this + 1);
        if ((unint64_t)v32 >= *((void *)this + 2) || *v32 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v76)) {
            return 0LL;
          }
        }

        else
        {
          v76[0] = *v32;
          *((void *)this + 1) = v32 + 1;
        }

        int v33 = *((_DWORD *)this + 14);
        int v34 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v33 + 1;
        if (v33 >= v34) {
          return 0LL;
        }
        int v35 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v76[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v35);
        int v37 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v37, 1);
        int v39 = v37 - 1;
        if (v39 < 0 == v38) {
          *((_DWORD *)this + 14) = v39;
        }
        __int16 v40 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v40 + 1;
LABEL_95:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v76) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = *(void *)v76;
        *(_DWORD *)(a1 + 152) |= 4u;
        uint64_t v41 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v41 + 1;
LABEL_99:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v76) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 24) = *(void *)v76;
        *(_DWORD *)(a1 + 152) |= 8u;
        __int16 v42 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v42 + 1;
LABEL_103:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v76) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 32) = *(void *)v76;
        *(_DWORD *)(a1 + 152) |= 0x10u;
        double v43 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v43 + 1;
LABEL_107:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v76) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 40) = *(void *)v76;
        *(_DWORD *)(a1 + 152) |= 0x20u;
        __int16 v44 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v44 + 1;
LABEL_111:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v76) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 56) = *(void *)v76;
        *(_DWORD *)(a1 + 152) |= 0x40u;
        int v45 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v45 + 1;
LABEL_115:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v76) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 64) = *(void *)v76;
        *(_DWORD *)(a1 + 152) |= 0x80u;
        int v46 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v46 + 1;
LABEL_119:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v76) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 72) = *(void *)v76;
        *(_DWORD *)(a1 + 152) |= 0x100u;
        int v47 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v47 + 1;
LABEL_123:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v76) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 80) = *(void *)v76;
        *(_DWORD *)(a1 + 152) |= 0x200u;
        int v48 = (_BYTE *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        unsigned int v11 = v48 + 1;
        *((void *)this + 1) = v11;
LABEL_127:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v49 = v76[0];
          unsigned int v50 = (_BYTE *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }

        else
        {
          unsigned int v49 = *v11;
          unsigned int v50 = v11 + 1;
          *((void *)this + 1) = v50;
        }

        *(_DWORD *)(a1 + 52) = v49;
        *(_DWORD *)(a1 + 152) |= 0x400u;
        *((void *)this + 1) = v50 + 1;
LABEL_135:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v76) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 88) = *(void *)v76;
        *(_DWORD *)(a1 + 152) |= 0x800u;
        int v51 = (_BYTE *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        uint64_t v13 = v51 + 1;
        *((void *)this + 1) = v13;
LABEL_139:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v52 = v76[0];
        }

        else
        {
          unsigned int v52 = *v13;
          *((void *)this + 1) = v13 + 1;
        }

        if (v52 <= 0xD)
        {
          *(_DWORD *)(a1 + 152) |= 0x1000u;
          *(_DWORD *)(a1 + 104) = v52;
        }

        uint64_t v53 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v53 + 1;
LABEL_149:
        *(_DWORD *)(a1 + 152) |= 0x2000u;
        uint64_t v54 = *(void **)(a1 + 96);
        if (!v54)
        {
          uint64_t v54 = operator new(0x20uLL);
          void *v54 = off_101827EC8;
          v54[1] = 0LL;
          v54[2] = 0LL;
          v54[3] = 0LL;
          *(void *)(a1 + 96) = v54;
        }

        uint64_t v55 = (char *)*((void *)this + 1);
        if ((unint64_t)v55 >= *((void *)this + 2) || *v55 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v76)) {
            return 0LL;
          }
        }

        else
        {
          v76[0] = *v55;
          *((void *)this + 1) = v55 + 1;
        }

        int v56 = *((_DWORD *)this + 14);
        int v57 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v56 + 1;
        if (v56 >= v57) {
          return 0LL;
        }
        int v58 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v76[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v58);
        int v60 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v60, 1);
        int v61 = v60 - 1;
        if (v61 < 0 == v38) {
          *((_DWORD *)this + 14) = v61;
        }
        unint64_t v62 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v62 + 1;
LABEL_163:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v76) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 112) = *(void *)v76;
        *(_DWORD *)(a1 + 152) |= 0x4000u;
        int v63 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        uint64_t v15 = v63 + 2;
        *((void *)this + 1) = v15;
LABEL_168:
        if ((unint64_t)v15 >= v14 || (char)*v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v64 = v76[0];
          int v65 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }

        else
        {
          unsigned int v64 = *v15;
          int v65 = v15 + 1;
          *((void *)this + 1) = v65;
        }

        *(_DWORD *)(a1 + 108) = v64;
        *(_DWORD *)(a1 + 152) |= 0x8000u;
        uint64_t v16 = (char *)(v65 + 2);
        *((void *)this + 1) = v16;
LABEL_177:
        if ((unint64_t)v16 >= v14 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v66 = v76[0];
        }

        else
        {
          unsigned int v66 = *v16;
          *((void *)this + 1) = v16 + 1;
        }

        if (v66 - 25 <= 0x32 && ((1LL << (v66 - 25)) & 0x4000002000001LL) != 0 || v66 + 1 < 2)
        {
          *(_DWORD *)(a1 + 152) |= 0x10000u;
          *(_DWORD *)(a1 + 120) = v66;
        }

        int v69 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        uint64_t v18 = (char *)(v69 + 2);
        *((void *)this + 1) = v18;
LABEL_194:
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v70 = v76[0];
        }

        else
        {
          unsigned int v70 = *v18;
          *((void *)this + 1) = v18 + 1;
        }

        if (v70 <= 2)
        {
          *(_DWORD *)(a1 + 152) |= 0x20000u;
          *(_DWORD *)(a1 + 124) = v70;
        }

        int v71 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v19 = *((void *)this + 2);
        uint64_t v20 = (char *)(v71 + 2);
        *((void *)this + 1) = v20;
LABEL_205:
        if ((unint64_t)v20 >= v19 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v72 = v76[0];
        }

        else
        {
          unsigned int v72 = *v20;
          *((void *)this + 1) = v20 + 1;
        }

        if (v72 <= 2)
        {
          *(_DWORD *)(a1 + 152) |= 0x40000u;
          *(_DWORD *)(a1 + 128) = v72;
        }

        unsigned int v73 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        uint64_t v22 = (char *)(v73 + 2);
        *((void *)this + 1) = v22;
LABEL_216:
        if ((unint64_t)v22 >= v21 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v74 = v76[0];
        }

        else
        {
          unsigned int v74 = *v22;
          *((void *)this + 1) = v22 + 1;
        }

        if (v74 + 1 <= 7)
        {
          *(_DWORD *)(a1 + 152) |= 0x80000u;
          *(_DWORD *)(a1 + 132) = v74;
        }

        int v75 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v75 + 2;
LABEL_51:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v76) & 1) != 0)
        {
          *(void *)(a1 + 136) = *(void *)v76;
          *(_DWORD *)(a1 + 152) |= 0x100000u;
          uint64_t v24 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v23 = *((void *)this + 2);
          if ((int)v23 - (int)v24 >= 2 && *v24 == 176 && v24[1] == 1)
          {
            uint64_t v25 = (char *)(v24 + 2);
            *((void *)this + 1) = v25;
LABEL_61:
            if ((unint64_t)v25 >= v23 || *v25 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76);
              if (!(_DWORD)result) {
                return result;
              }
              unsigned int v26 = v76[0];
              uint64_t v27 = (unsigned __int8 *)*((void *)this + 1);
              unint64_t v23 = *((void *)this + 2);
            }

            else
            {
              unsigned int v26 = *v25;
              uint64_t v27 = (unsigned __int8 *)(v25 + 1);
              *((void *)this + 1) = v27;
            }

            *(_BYTE *)(a1 + 144) = v26 != 0;
            *(_DWORD *)(a1 + 152) |= 0x200000u;
            if (v27 == (unsigned __int8 *)v23
              && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              uint64_t result = 1LL;
              *((_BYTE *)this + 36) = 1;
              return result;
            }
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_95;
        }
        goto LABEL_57;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_99;
        }
        goto LABEL_57;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_103;
        }
        goto LABEL_57;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_107;
        }
        goto LABEL_57;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_111;
        }
        goto LABEL_57;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_115;
        }
        goto LABEL_57;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_119;
        }
        goto LABEL_57;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_123;
        }
        goto LABEL_57;
      case 0xBu:
        int v7 = TagFallback & 7;
        unsigned int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_127;
      case 0xCu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_135;
        }
        goto LABEL_57;
      case 0xDu:
        int v7 = TagFallback & 7;
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_139;
      case 0xEu:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_149;
        }
        goto LABEL_57;
      case 0xFu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_163;
        }
        goto LABEL_57;
      case 0x10u:
        int v7 = TagFallback & 7;
        uint64_t v15 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_168;
      case 0x11u:
        int v7 = TagFallback & 7;
        uint64_t v16 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_177;
      case 0x12u:
        int v7 = TagFallback & 7;
        uint64_t v18 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_194;
      case 0x13u:
        int v7 = TagFallback & 7;
        uint64_t v20 = (char *)*((void *)this + 1);
        unint64_t v19 = *((void *)this + 2);
        goto LABEL_205;
      case 0x14u:
        int v7 = TagFallback & 7;
        uint64_t v22 = (char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        goto LABEL_216;
      case 0x15u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_51;
        }
        goto LABEL_57;
      case 0x16u:
        int v7 = TagFallback & 7;
        uint64_t v25 = (char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        goto LABEL_61;
      default:
        int v7 = TagFallback & 7;
LABEL_57:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

BOOL sub_1001D7604(int a1)
{
  return (a1 + 1) < 8;
}

uint64_t sub_1001D7614( uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 152);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(_DWORD *)(result + 48),  (int)a2,  a4);
    int v6 = *(_DWORD *)(v5 + 152);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_28;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_1019A0B80 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v7,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 152);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_29;
  }

uint64_t sub_1001D78C0(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 152);
  if (!(_BYTE)v3)
  {
    uint64_t v5 = 0LL;
    goto LABEL_32;
  }

  if ((v3 & 1) != 0)
  {
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
    if ((v6 & 0x80000000) != 0)
    {
      int v7 = 10;
    }

    else if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
      int v3 = *(_DWORD *)(a1 + 152);
    }

    else
    {
      int v7 = 1;
    }

    unsigned int v4 = v7 + 1;
    if ((v3 & 2) == 0) {
      goto LABEL_19;
    }
LABEL_12:
    uint64_t v8 = *(void *)(a1 + 8);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1019A0B80 + 8);
    }
    int v9 = *(unsigned __int8 *)(v8 + 28);
    if (*(_BYTE *)(v8 + 28))
    {
      if ((v9 & 2) != 0) {
        int v9 = ((v9 << 31 >> 31) & 9) + 9;
      }
      else {
        int v9 = (v9 << 31 >> 31) & 9;
      }
    }

    *(_DWORD *)(v8 + 24) = v9;
    v4 += v9 + 2;
    int v3 = *(_DWORD *)(a1 + 152);
    goto LABEL_19;
  }

  unsigned int v4 = 0;
  if ((v3 & 2) != 0) {
    goto LABEL_12;
  }
LABEL_19:
  if ((v3 & 4) != 0) {
    v4 += 9;
  }
  if ((v3 & 8) != 0) {
    v4 += 9;
  }
  if ((v3 & 0x10) != 0) {
    v4 += 9;
  }
  if ((v3 & 0x20) != 0) {
    v4 += 9;
  }
  if ((v3 & 0x40) != 0) {
    v4 += 9;
  }
  if ((v3 & 0x80) != 0) {
    uint64_t v5 = v4 + 9;
  }
  else {
    uint64_t v5 = v4;
  }
LABEL_32:
  if ((v3 & 0xFF00) != 0)
  {
    int v10 = v5 + 9;
    if ((v3 & 0x100) == 0) {
      int v10 = v5;
    }
    if ((v3 & 0x200) != 0) {
      LODWORD(sub_1012279C0(0LL, v4, v5) = v10 + 9;
    }
    else {
      LODWORD(sub_1012279C0(0LL, v4, v5) = v10;
    }
    if ((v3 & 0x400) != 0)
    {
      unsigned int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
      if ((v11 & 0x80000000) != 0)
      {
        int v12 = 10;
      }

      else if (v11 >= 0x80)
      {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
        int v3 = *(_DWORD *)(a1 + 152);
      }

      else
      {
        int v12 = 1;
      }

      LODWORD(sub_1012279C0(0LL, v4, v5) = v5 + v12 + 1;
    }

    if ((v3 & 0x800) != 0) {
      LODWORD(sub_1012279C0(0LL, v4, v5) = v5 + 9;
    }
    if ((v3 & 0x1000) != 0)
    {
      uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 104);
      if ((v13 & 0x80000000) != 0)
      {
        int v14 = 10;
      }

      else if (v13 >= 0x80)
      {
        int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
        int v3 = *(_DWORD *)(a1 + 152);
      }

      else
      {
        int v14 = 1;
      }

      LODWORD(sub_1012279C0(0LL, v4, v5) = v5 + v14 + 1;
    }

    if ((v3 & 0x2000) != 0)
    {
      uint64_t v15 = *(void *)(a1 + 96);
      if (!v15) {
        uint64_t v15 = *(void *)(qword_1019A0B80 + 96);
      }
      int v16 = *(unsigned __int8 *)(v15 + 28);
      int v17 = (v16 << 31 >> 31) & 9;
      if ((v16 & 2) != 0) {
        v17 += 9;
      }
      if (*(_BYTE *)(v15 + 28)) {
        int v18 = v17;
      }
      else {
        int v18 = 0;
      }
      *(_DWORD *)(v15 + 24) = v18;
      LODWORD(sub_1012279C0(0LL, v4, v5) = v5 + v18 + 2;
      int v3 = *(_DWORD *)(a1 + 152);
    }

    if ((v3 & 0x4000) != 0) {
      uint64_t v5 = (v5 + 9);
    }
    else {
      uint64_t v5 = v5;
    }
    if ((v3 & 0x8000) != 0)
    {
      unint64_t v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 108);
      if ((v19 & 0x80000000) != 0)
      {
        int v20 = 12;
      }

      else if (v19 >= 0x80)
      {
        int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 2;
        int v3 = *(_DWORD *)(a1 + 152);
      }

      else
      {
        int v20 = 3;
      }

      uint64_t v5 = (v20 + v5);
    }
  }

  if ((v3 & 0xFF0000) != 0)
  {
    if ((v3 & 0x10000) != 0)
    {
      unint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 120);
      if ((v21 & 0x80000000) != 0)
      {
        int v22 = 12;
      }

      else if (v21 >= 0x80)
      {
        int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2) + 2;
        int v3 = *(_DWORD *)(a1 + 152);
      }

      else
      {
        int v22 = 3;
      }

      LODWORD(sub_1012279C0(0LL, v4, v5) = v22 + v5;
      if ((v3 & 0x20000) == 0)
      {
LABEL_76:
        if ((v3 & 0x40000) == 0) {
          goto LABEL_77;
        }
        goto LABEL_91;
      }
    }

    else if ((v3 & 0x20000) == 0)
    {
      goto LABEL_76;
    }

    unint64_t v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 124);
    if ((v23 & 0x80000000) != 0)
    {
      int v24 = 12;
    }

    else if (v23 >= 0x80)
    {
      int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23, a2) + 2;
      int v3 = *(_DWORD *)(a1 + 152);
    }

    else
    {
      int v24 = 3;
    }

    LODWORD(sub_1012279C0(0LL, v4, v5) = v24 + v5;
    if ((v3 & 0x40000) == 0)
    {
LABEL_77:
      if ((v3 & 0x80000) == 0) {
        goto LABEL_103;
      }
      goto LABEL_97;
    }

LABEL_108:
  *(_DWORD *)(a1 + 148) = v5;
  return v5;
}

  __int16 v42 = *(void *)(a2 + 128);
  *(_DWORD *)(a1 + 364) |= 0x100000u;
  *(void *)(a1 + 128) = v42;
  uint64_t v13 = *(_DWORD *)(a2 + 364);
  if ((v13 & 0x200000) == 0)
  {
LABEL_65:
    if ((v13 & 0x400000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_66;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x25,  *(_DWORD *)(v5 + 272),  (int)a2,  a4);
  int v7 = *(_DWORD *)(v5 + 368);
  if ((v7 & 0x20) == 0)
  {
LABEL_39:
    if ((v7 & 0x40) == 0) {
      goto LABEL_40;
    }
    goto LABEL_110;
  }

  objc_msgSend( v3,  "setObject:forKey:",  +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", self->_nVeryHighCatherine),  @"nVeryHighCatherine");
  has = self->_has;
  if ((*(_WORD *)&has & 0x400) == 0)
  {
LABEL_86:
    if ((*(_WORD *)&has & 0x1000) == 0) {
      goto LABEL_87;
    }
    goto LABEL_110;
  }

    __break(1u);
  }

  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_1018401A0);
  }
  int v46 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_INFO))
  {
    else {
      int v47 = *(void *)a2;
    }
    int v48 = &v86;
    if ((v86.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      int v48 = (std::string *)v86.__r_.__value_.__r.__words[0];
    }
    unsigned int v49 = &v85;
    if ((v85.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      unsigned int v49 = (std::string *)v85.__r_.__value_.__r.__words[0];
    }
    *(void *)buf = 68290050LL;
    int v88 = 2082;
    int v89 = "";
    int v90 = 2082;
    unsigned int v91 = v47;
    uint64_t v92 = 2082;
    uint64_t v93 = v48;
    uint64_t v94 = 2082;
    unsigned int v95 = v49;
    int v96 = 1026;
    int v97 = a5 == 2;
    _os_log_impl( (void *)&_mh_execute_header,  v46,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:#pla #reconcile registered zone not in zonesReconciliationLedger. No collapsing, client Key:%{public, location:escape_only}s, zoneIdToWrite:%{public, location:escape_only}s, zoneIdToReconcile: %{public, location:escape_only}s, isSyncedZone:%{public}hhd}",  buf,  0x36u);
  }

  if (a5 == 2)
  {
    unsigned int v50 = 0LL;
    goto LABEL_100;
  }

  sub_1010DDBC0(buf, "InfoPlistZoneRegistration");
  sub_10056DB04(a1, (uint64_t *)a2, (uint64_t *)buf);
  if (SBYTE3(v91) < 0) {
    operator delete(*(void **)buf);
  }
LABEL_99:
  unsigned int v50 = 1LL;
LABEL_100:
  return v50;
}

  (*(void (**)(uint64_t))(*(void *)v6 + 24LL))(v6);
  return v17;
}

    uint64_t v103 = *(void *)(a1 + 8);
    if (v95 != *(void *)(a1 + 16)) {
      *(void *)(a1 + 16) = v95;
    }
    uint64_t v104 = 126 - 2 * __clz(0xAAAAAAAAAAAAAAABLL * ((v95 - v103) >> 5));
    if (v95 == v103) {
      uint64_t v105 = 0LL;
    }
    else {
      uint64_t v105 = v104;
    }
    sub_10094E2C4(v103, (double *)v95, v105, 1);
    int v89 = *(void *)(a1 + 8);
    int v88 = *(void *)(a1 + 16);
  }

  if (v89 != v88)
  {
    uint64_t v106 = *(double *)(a1 + 416);
    uint64_t v107 = *(double *)(a1 + 424);
    uint64_t v108 = *(double *)(a1 + 432);
    uint64_t v109 = *(double *)(a1 + 440);
    while (1)
    {
      uint64_t v110 = *(double *)(v89 + 8);
      if (v110 > v106 || v110 < v108) {
        break;
      }
      uint64_t v112 = *(double *)(v89 + 16);
      if (v112 > v109 || v112 < v107) {
        break;
      }
      v89 += 96LL;
      if (v89 == v88) {
        goto LABEL_141;
      }
    }

    if (v89 != v88)
    {
      uint64_t v114 = v89 + 96;
      if (v89 + 96 != v88)
      {
        do
        {
          uint64_t v115 = *(double *)(v114 + 8);
          if (v115 <= v106 && v115 >= v108)
          {
            uint64_t v117 = *(double *)(v114 + 16);
            if (v117 <= v109 && v117 >= v107)
            {
              uint64_t v119 = *(_OWORD *)(v114 + 16);
              *(_OWORD *)int v89 = *(_OWORD *)v114;
              *(_OWORD *)(v89 + 16) = v119;
              uint64_t v120 = *(_OWORD *)(v114 + 32);
              uint64_t v121 = *(_OWORD *)(v114 + 48);
              uint64_t v122 = *(_OWORD *)(v114 + 80);
              *(_OWORD *)(v89 + 64) = *(_OWORD *)(v114 + 64);
              *(_OWORD *)(v89 + 80) = v122;
              *(_OWORD *)(v89 + 32) = v120;
              *(_OWORD *)(v89 + 48) = v121;
              v89 += 96LL;
            }
          }

          v114 += 96LL;
        }

        while (v114 != v88);
        int v88 = *(void *)(a1 + 16);
      }
    }

    if (v89 != v88) {
      *(void *)(a1 + 16) = v89;
    }
  }

    if (v28 != buf) {
      free(v28);
    }
    goto LABEL_32;
  }

  if (qword_101934970 != -1) {
    dispatch_once(&qword_101934970, &stru_101883130);
  }
  unint64_t v19 = qword_101934978;
  if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
  {
    int v20 = *(void *)(a1 + 24);
    *(_DWORD *)buf = 68289282;
    *(_DWORD *)int v67 = 0;
    *(_WORD *)&v67[4] = 2082;
    *(void *)&v67[6] = "";
    *(_WORD *)&v67[14] = 2114;
    *(void *)&v67[16] = v20;
    unint64_t v21 = "{msg%{public}.0s:BATCH: client disallowed Batch, Client:%{public, location:escape_only}@}";
    int v22 = (os_log_s *)v19;
    unint64_t v23 = 28;
LABEL_37:
    _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEBUG, v21, buf, v23);
  }

  uint64_t result = *(float *)(a2 + 240);
  v5 |= 0x2000000000000uLL;
  *uint64_t v2 = v5;
  *(_BYTE *)(a1 + 324) = v6;
  *(float *)(a1 + 240) = result;
  int v7 = *v3;
  if ((*v3 & 0x8000000000000000LL) == 0)
  {
LABEL_43:
    if ((v7 & 0x800000000LL) == 0) {
      goto LABEL_44;
    }
    goto LABEL_110;
  }

  PB::TextFormatter::format(this, "hgDeltaVZBiggestImpact", *(float *)(a1 + 204));
  int v6 = *v5;
  int v7 = *(_BYTE *)(a1 + 324);
  if ((*v5 & 0x20000000000LL) == 0)
  {
LABEL_42:
    if ((v6 & 0x40000000000LL) == 0) {
      goto LABEL_43;
    }
    goto LABEL_110;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 240), 0x26u);
  int v6 = *v4;
  if ((*v4 & 0x8000000000000000LL) == 0)
  {
LABEL_43:
    if ((v6 & 0x800000000LL) == 0) {
      goto LABEL_44;
    }
    goto LABEL_110;
  }

  uint64_t result = *(float *)(a2 + 240);
  v5 |= 0x200000000000000uLL;
  *uint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 240) = result;
  unsigned int v4 = *v3;
  int v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x40) == 0)
  {
LABEL_35:
    if ((v4 & 2) == 0) {
      goto LABEL_36;
    }
    goto LABEL_110;
  }

  PB::TextFormatter::format(this, "detectorRegimeDeltaVThreshold2WithoutAudio", *(float *)(a1 + 128));
  int v6 = *v5;
  int v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x40000000) == 0)
  {
LABEL_34:
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_110;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16), 0x1Du);
  uint64_t v5 = *v4;
  int v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x8000) == 0)
  {
LABEL_34:
    if ((v6 & 0x800) == 0) {
      goto LABEL_35;
    }
    goto LABEL_110;
  }

  uint64_t result = *(float *)(a2 + 264);
  v5 |= 0x8000000000000000LL;
  *uint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(_BYTE *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 264) = result;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  unsigned int v4 = *v3;
  if ((*(_WORD *)(a2 + 324) & 1) == 0)
  {
LABEL_28:
    if ((v8 & 0x40000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_110;
  }

  PB::TextFormatter::format(this, "kAudioDvMaxRmsThresholdMaxRO", *(float *)(a1 + 84));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  int v6 = *v5;
  if ((*v5 & 0x80000) == 0)
  {
LABEL_27:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_110;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 264), 0x78u);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((v4[1] & 1) == 0)
  {
LABEL_28:
    if ((v7 & 0x40000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_110;
  }

  PB::TextFormatter::format(this, "crashTimestamp", *(void *)(a1 + 8));
  int v7 = *v5;
  int v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x400) == 0)
  {
LABEL_7:
    if ((v7 & 0x800) == 0) {
      goto LABEL_8;
    }
    goto LABEL_110;
  }

  int v34 = *(_BYTE *)(a2 + 189);
  int v35 = v4 >> 16;
  v4 |= 4uLL;
  *(void *)(result + 204) = v3;
  *(_BYTE *)(result + 214) = v35;
  *(_WORD *)(result + 212) = v4;
  *(_BYTE *)(result + 189) = v34;
  uint64_t v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 4) == 0)
  {
LABEL_30:
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_110;
  }

  PB::TextFormatter::format(this, "kChaosOrSaturationMetRO1", *(_BYTE *)(a1 + 178));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x100000000000000LL) == 0)
  {
LABEL_29:
    if ((v5 & 0x200000000000000LL) == 0) {
      goto LABEL_30;
    }
    goto LABEL_110;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 96), 0x3EEu);
  uint64_t v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  unsigned int v4 = *(void *)(v3 + 204);
  if ((v4 & 0x40000000) == 0)
  {
LABEL_30:
    if ((v4 & 0x400000000000LL) == 0) {
      goto LABEL_31;
    }
    goto LABEL_110;
  }

        *(void *)(a1 + 24) = v43;
      }

      else
      {
        if ((_DWORD)v20 != 103)
        {
LABEL_58:
          uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
          if (!(_DWORD)result) {
            return result;
          }
          uint64_t v2 = *((void *)this + 1);
          goto LABEL_109;
        }

        *(_BYTE *)(a1 + 40) |= 8u;
        uint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
        {
          *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
          uint64_t v2 = *((void *)this + 1) + 4LL;
          *((void *)this + 1) = v2;
        }

        else
        {
          *((_BYTE *)this + 24) = 1;
        }
      }
    }

    else
    {
      switch((_DWORD)v20)
      {
        case 0x68:
          *(_BYTE *)(a1 + 40) |= 0x10u;
          uint64_t v27 = *((void *)this + 1);
          uint64_t v2 = *((void *)this + 2);
          int v28 = *(void *)this;
          if (v27 > 0xFFFFFFFFFFFFFFF5LL || v27 + 10 > v2)
          {
            unsigned int v50 = 0;
            int v51 = 0;
            int v31 = 0LL;
            if (v2 <= v27) {
              uint64_t v2 = *((void *)this + 1);
            }
            while (1)
            {
              if (v2 == v27)
              {
                LODWORD(v31) = 0;
                *((_BYTE *)this + 24) = 1;
                goto LABEL_98;
              }

              unsigned int v52 = v27++;
              uint64_t v53 = *(_BYTE *)(v28 + v52);
              *((void *)this + 1) = v27;
              v31 |= (unint64_t)(v53 & 0x7F) << v50;
              if ((v53 & 0x80) == 0) {
                break;
              }
              v50 += 7;
              int v14 = v51++ > 8;
              if (v14)
              {
                LODWORD(v31) = 0;
                goto LABEL_97;
              }
            }

            if (*((_BYTE *)this + 24)) {
              LODWORD(v31) = 0;
            }
LABEL_97:
            uint64_t v2 = v52 + 1;
          }

          else
          {
            unsigned int v29 = 0;
            char v30 = 0;
            int v31 = 0LL;
            while (1)
            {
              uint64_t v2 = v27 + 1;
              *((void *)this + 1) = v27 + 1;
              double v32 = *(_BYTE *)(v28 + v27);
              v31 |= (unint64_t)(v32 & 0x7F) << v29;
              if ((v32 & 0x80) == 0) {
                break;
              }
              v29 += 7;
              uint64_t v27 = v2;
              int v14 = v30++ > 8;
              if (v14)
              {
                LODWORD(v31) = 0;
                break;
              }
            }
          }

              *(void *)(a1 + 8) = v24;
              goto LABEL_124;
            case 2u:
              *(_WORD *)(a1 + 56) |= 0x20u;
              uint64_t v27 = *((void *)this + 1);
              uint64_t v2 = *((void *)this + 2);
              int v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5LL || v27 + 10 > v2)
              {
                int v51 = 0;
                unsigned int v52 = 0;
                int v31 = 0LL;
                if (v2 <= v27) {
                  uint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((_BYTE *)this + 24) = 1;
                    goto LABEL_113;
                  }

                  uint64_t v53 = v27++;
                  uint64_t v54 = *(_BYTE *)(v28 + v53);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v54 & 0x7F) << v51;
                  if ((v54 & 0x80) == 0) {
                    break;
                  }
                  v51 += 7;
                  int v14 = v52++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_112:
                    uint64_t v2 = v53 + 1;
                    goto LABEL_113;
                  }
                }

                if (*((_BYTE *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_112;
              }

              unsigned int v29 = 0;
              char v30 = 0;
              int v31 = 0LL;
              do
              {
                uint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                double v32 = *(_BYTE *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_113;
                }
                v29 += 7;
                uint64_t v27 = v2;
                int v14 = v30++ > 8;
              }

              while (!v14);
              LODWORD(v31) = 0;
LABEL_113:
              *(_DWORD *)(a1 + 32) = v31;
              goto LABEL_124;
            case 3u:
              *(_WORD *)(a1 + 56) |= 4u;
              uint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_71;
              }
              *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_103;
            case 4u:
              *(_WORD *)(a1 + 56) |= 0x10u;
              uint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_71;
              }
              *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_103;
            case 5u:
              *(_WORD *)(a1 + 56) |= 8u;
              uint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_71;
              }
              *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_103;
            case 6u:
              *(_WORD *)(a1 + 56) |= 0x200u;
              uint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_71;
              }
              *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_103;
            case 7u:
              *(_WORD *)(a1 + 56) |= 0x80u;
              uint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_71;
              }
              *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_103;
            case 8u:
              *(_WORD *)(a1 + 56) |= 0x400u;
              uint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                int v34 = 0;
                *((_BYTE *)this + 24) = 1;
              }

              else
              {
                int v33 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                int v34 = v33 != 0;
              }

              *(_BYTE *)(a1 + 52) = v34;
              goto LABEL_124;
            case 9u:
              *(_WORD *)(a1 + 56) |= 2u;
              int v35 = *((void *)this + 1);
              uint64_t v2 = *((void *)this + 2);
              unsigned int v36 = *(void *)this;
              if (v35 > 0xFFFFFFFFFFFFFFF5LL || v35 + 10 > v2)
              {
                uint64_t v55 = 0;
                int v56 = 0;
                int v39 = 0LL;
                if (v2 <= v35) {
                  uint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v35)
                  {
                    LODWORD(v39) = 0;
                    *((_BYTE *)this + 24) = 1;
                    goto LABEL_118;
                  }

                  int v57 = v35++;
                  int v58 = *(_BYTE *)(v36 + v57);
                  *((void *)this + 1) = v35;
                  v39 |= (unint64_t)(v58 & 0x7F) << v55;
                  if ((v58 & 0x80) == 0) {
                    break;
                  }
                  v55 += 7;
                  int v14 = v56++ > 8;
                  if (v14)
                  {
                    LODWORD(v39) = 0;
LABEL_117:
                    uint64_t v2 = v57 + 1;
                    goto LABEL_118;
                  }
                }

                if (*((_BYTE *)this + 24)) {
                  LODWORD(v39) = 0;
                }
                goto LABEL_117;
              }

              int v37 = 0;
              BOOL v38 = 0;
              int v39 = 0LL;
              do
              {
                uint64_t v2 = v35 + 1;
                *((void *)this + 1) = v35 + 1;
                __int16 v40 = *(_BYTE *)(v36 + v35);
                v39 |= (unint64_t)(v40 & 0x7F) << v37;
                if ((v40 & 0x80) == 0) {
                  goto LABEL_118;
                }
                v37 += 7;
                int v35 = v2;
                int v14 = v38++ > 8;
              }

              while (!v14);
              LODWORD(v39) = 0;
LABEL_118:
              *(_DWORD *)(a1 + 16) = v39;
              goto LABEL_124;
            case 0xAu:
              *(_WORD *)(a1 + 56) |= 0x100u;
              uint64_t v41 = *((void *)this + 1);
              uint64_t v2 = *((void *)this + 2);
              __int16 v42 = *(void *)this;
              if (v41 > 0xFFFFFFFFFFFFFFF5LL || v41 + 10 > v2)
              {
                unsigned int v59 = 0;
                int v60 = 0;
                int v45 = 0LL;
                if (v2 <= v41) {
                  uint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v41)
                  {
                    LODWORD(v45) = 0;
                    *((_BYTE *)this + 24) = 1;
                    goto LABEL_123;
                  }

                  int v61 = v41++;
                  unint64_t v62 = *(_BYTE *)(v42 + v61);
                  *((void *)this + 1) = v41;
                  v45 |= (unint64_t)(v62 & 0x7F) << v59;
                  if ((v62 & 0x80) == 0) {
                    break;
                  }
                  v59 += 7;
                  int v14 = v60++ > 8;
                  if (v14)
                  {
                    LODWORD(v45) = 0;
LABEL_122:
                    uint64_t v2 = v61 + 1;
                    goto LABEL_123;
                  }
                }

                if (*((_BYTE *)this + 24)) {
                  LODWORD(v45) = 0;
                }
                goto LABEL_122;
              }

              double v43 = 0;
              __int16 v44 = 0;
              int v45 = 0LL;
              do
              {
                uint64_t v2 = v41 + 1;
                *((void *)this + 1) = v41 + 1;
                int v46 = *(_BYTE *)(v42 + v41);
                v45 |= (unint64_t)(v46 & 0x7F) << v43;
                if ((v46 & 0x80) == 0) {
                  goto LABEL_123;
                }
                v43 += 7;
                uint64_t v41 = v2;
                int v14 = v44++ > 8;
              }

              while (!v14);
              LODWORD(v45) = 0;
LABEL_123:
              *(_DWORD *)(a1 + 44) = v45;
LABEL_124:
              int v3 = *((void *)this + 2);
              unsigned int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 0xBu:
              *(_WORD *)(a1 + 56) |= 0x40u;
              uint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
LABEL_103:
                uint64_t v2 = *((void *)this + 1) + 4LL;
                *((void *)this + 1) = v2;
              }

              else
              {
LABEL_71:
                *((_BYTE *)this + 24) = 1;
              }

              goto LABEL_124;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!(_DWORD)result) {
                return result;
              }
              uint64_t v2 = *((void *)this + 1);
              goto LABEL_124;
          }
        }

        unsigned int v4 = 0;
      }

      break;
    }
  }

  return v4 == 0;
}

          unsigned int v4 = *((void *)this + 1);
          uint64_t v5 = *((void *)this + 2);
          int v6 = *((unsigned __int8 *)this + 24);
          if (v4 >= v5 || *((_BYTE *)this + 24)) {
            return v6 == 0;
          }
          break;
        case 6u:
          *(_WORD *)(a1 + 96) |= 0x400u;
          double v43 = *((void *)this + 1);
          if (v43 >= *((void *)this + 2))
          {
            int v46 = 0;
            *((_BYTE *)this + 24) = 1;
          }

          else
          {
            __int16 v44 = v43 + 1;
            int v45 = *(unsigned __int8 *)(*(void *)this + v43);
            *((void *)this + 1) = v44;
            int v46 = v45 != 0;
          }

          *(_BYTE *)(a1 + 92) = v46;
          goto LABEL_108;
        case 7u:
          *(_WORD *)(a1 + 96) |= 0x20u;
          int v47 = *((void *)this + 1);
          if (v47 > 0xFFFFFFFFFFFFFFFBLL || v47 + 4 > *((void *)this + 2)) {
            goto LABEL_104;
          }
          *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v47);
          goto LABEL_106;
        case 8u:
          *(_WORD *)(a1 + 96) |= 0x40u;
          int v48 = *((void *)this + 1);
          if (v48 > 0xFFFFFFFFFFFFFFFBLL || v48 + 4 > *((void *)this + 2)) {
            goto LABEL_104;
          }
          *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v48);
          goto LABEL_106;
        case 9u:
          *(_WORD *)(a1 + 96) |= 8u;
          unsigned int v49 = *((void *)this + 1);
          if (v49 > 0xFFFFFFFFFFFFFFF7LL || v49 + 8 > *((void *)this + 2)) {
            goto LABEL_104;
          }
          *(void *)(a1 + 56) = *(void *)(*(void *)this + v49);
          goto LABEL_81;
        case 0xAu:
          *(_WORD *)(a1 + 96) |= 1u;
          unsigned int v50 = *((void *)this + 1);
          if (v50 > 0xFFFFFFFFFFFFFFF7LL || v50 + 8 > *((void *)this + 2)) {
            goto LABEL_104;
          }
          *(void *)(a1 + 32) = *(void *)(*(void *)this + v50);
          goto LABEL_81;
        case 0xBu:
          *(_WORD *)(a1 + 96) |= 4u;
          int v51 = *((void *)this + 1);
          if (v51 > 0xFFFFFFFFFFFFFFF7LL || v51 + 8 > *((void *)this + 2)) {
            goto LABEL_104;
          }
          *(void *)(a1 + 48) = *(void *)(*(void *)this + v51);
          goto LABEL_81;
        case 0xCu:
          *(_WORD *)(a1 + 96) |= 2u;
          unsigned int v52 = *((void *)this + 1);
          if (v52 > 0xFFFFFFFFFFFFFFF7LL || v52 + 8 > *((void *)this + 2)) {
            goto LABEL_104;
          }
          *(void *)(a1 + 40) = *(void *)(*(void *)this + v52);
LABEL_81:
          uint64_t v53 = *((void *)this + 1) + 8LL;
          goto LABEL_107;
        default:
          if ((PB::Reader::skip(this, v15 >> 3, v15 & 7, 0) & 1) == 0) {
            return 0LL;
          }
          goto LABEL_108;
      }
    }

    unint64_t v19 = 0;
    int v20 = 0;
    uint64_t v15 = 0LL;
    if (v4 > v5) {
      uint64_t v5 = v4;
    }
    while (v5 != v4)
    {
      unint64_t v21 = v4 + 1;
      int v22 = *(_BYTE *)(v12 + v4);
      *((void *)this + 1) = v21;
      v15 |= (unint64_t)(v22 & 0x7F) << v19;
      if ((v22 & 0x80) == 0) {
        goto LABEL_21;
      }
      v19 += 7;
      unsigned int v4 = v21;
      if (v20++ >= 9)
      {
LABEL_20:
        uint64_t v15 = 0LL;
        goto LABEL_21;
      }
    }

    int v6 = 1;
    *((_BYTE *)this + 24) = 1;
  }

  return v6 == 0;
}

void sub_1001D7BE4(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1001D7C30()
{
  return 1LL;
}

void *sub_1001D7C38@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.DaemonLocation");
}

void sub_1001D7C48(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v11,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  3728LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v11,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    {
      uint64_t v7 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(void *)(a1 + 8) = v7;
      int v5 = *(_DWORD *)(a2 + 32);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }

    else if ((*(_BYTE *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }

    uint64_t v8 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(void *)(a1 + 16) = v8;
    int v5 = *(_DWORD *)(a2 + 32);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        return;
      }
      goto LABEL_8;
    }

void sub_1001D7D38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001D7D50(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101827FB8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001D7D60(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101827FB8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

_DWORD *sub_1001D7D80()
{
  uint64_t result = operator new(0x28uLL);
  result[7] = 0;
  result[8] = 0;
  *((void *)result + 1) = 0LL;
  *((void *)result + 2) = 0LL;
  *(void *)uint64_t result = off_101827FB8;
  *((_WORD *)result + 12) = 0;
  return result;
}

uint64_t sub_1001D7DB0(uint64_t result)
{
  if (*(_BYTE *)(result + 32))
  {
    *(void *)(result + 8) = 0LL;
    *(void *)(result + 16) = 0LL;
    *(_WORD *)(result + 24) = 0;
  }

  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1001D7DC8( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_24;
        }
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v18) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 8) = *(void *)v18;
        *(_DWORD *)(a1 + 32) |= 1u;
        uint64_t v8 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v8 + 1;
        goto LABEL_14;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_24;
        }
LABEL_14:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v18) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = *(void *)v18;
        *(_DWORD *)(a1 + 32) |= 2u;
        char v10 = (_BYTE *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        unsigned int v11 = v10 + 1;
        *((void *)this + 1) = v11;
LABEL_20:
        if ((unint64_t)v11 >= v9 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v18);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v12 = v18[0];
          uint64_t v13 = (_BYTE *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }

        else
        {
          unsigned int v12 = *v11;
          uint64_t v13 = v11 + 1;
          *((void *)this + 1) = v13;
        }

        *(_BYTE *)(a1 + 24) = v12 != 0;
        *(_DWORD *)(a1 + 32) |= 4u;
        int v14 = v13 + 1;
        *((void *)this + 1) = v14;
LABEL_33:
        if ((unint64_t)v14 >= v9 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v18);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v16 = v18[0];
          int v17 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }

        else
        {
          unsigned int v16 = *v14;
          int v17 = (unsigned __int8 *)(v14 + 1);
          *((void *)this + 1) = v17;
        }

        *(_BYTE *)(a1 + 25) = v16 != 0;
        *(_DWORD *)(a1 + 32) |= 8u;
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        break;
      case 3u:
        int v7 = TagFallback & 7;
        unsigned int v11 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_20;
      case 4u:
        int v7 = TagFallback & 7;
        int v14 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_33;
      default:
        int v7 = TagFallback & 7;
LABEL_24:
        if (v7 == 4) {
          return 1LL;
        }
        return 0LL;
    }

    return result;
  }

uint64_t sub_1001D803C( uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  a2,  *(double *)(result + 8),  a3);
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  a2,  *(double *)(v5 + 16),  a3);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      return result;
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  *(unsigned __int8 *)(v5 + 25),  a2,  a4);
  }

uint64_t sub_1001D80D0(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 32);
  if (*(_BYTE *)(a1 + 32))
  {
    unsigned int v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      v2 += 2;
    }
    if ((v1 & 8) != 0) {
      uint64_t v1 = v2 + 2;
    }
    else {
      uint64_t v1 = v2;
    }
  }

  *(_DWORD *)(a1 + 28) = v1;
  return v1;
}

void sub_1001D8114(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1001D8160()
{
  return 1LL;
}

void *sub_1001D8168@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.MapMatcherData");
}

double sub_1001D8178(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v8,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  3934LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v8,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v7, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 28);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 28) & 1) != 0)
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 28) |= 1u;
      *(double *)(a1 + 8) = result;
      int v6 = *(_DWORD *)(a2 + 28);
    }

    if ((v6 & 2) != 0)
    {
      double result = *(double *)(a2 + 16);
      *(_DWORD *)(a1 + 28) |= 2u;
      *(double *)(a1 + 16) = result;
    }
  }

  return result;
}

void sub_1001D8220(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001D8238(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101828030;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001D8248(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101828030;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

void *sub_1001D8268()
{
  double result = operator new(0x20uLL);
  *double result = off_101828030;
  result[1] = 0LL;
  result[2] = 0LL;
  result[3] = 0LL;
  return result;
}

uint64_t sub_1001D8290(uint64_t result)
{
  if (*(_BYTE *)(result + 28))
  {
    *(void *)(result + 8) = 0LL;
    *(void *)(result + 16) = 0LL;
  }

  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_1001D82A4( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_21;
        }
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v10) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 8) = v10;
        *(_DWORD *)(a1 + 28) |= 1u;
        uint64_t v8 = (_BYTE *)*((void *)this + 1);
        if ((unint64_t)v8 < *((void *)this + 2) && *v8 == 17)
        {
          *((void *)this + 1) = v8 + 1;
          goto LABEL_15;
        }
      }

      if (TagFallback >> 3 != 2)
      {
        int v7 = TagFallback & 7;
        goto LABEL_21;
      }

      int v7 = TagFallback & 7;
      if (v7 == 1) {
        break;
      }
LABEL_21:
      if (v7 == 4) {
        return 1LL;
      }
    }

uint64_t sub_1001D8400( uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 28);
  if ((v5 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  a2,  *(double *)(result + 8),  a3);
    int v5 = *(_DWORD *)(v4 + 28);
  }

  if ((v5 & 2) != 0) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  a2,  *(double *)(v4 + 16),  a3);
  }
  return result;
}

uint64_t sub_1001D8458(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 28);
  if (*(_BYTE *)(a1 + 28))
  {
    unsigned int v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }

  *(_DWORD *)(a1 + 24) = v1;
  return v1;
}

double sub_1001D8484(uint64_t a1, void *lpsrc)
{
  return sub_1001D8178(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001D84D0()
{
  return 1LL;
}

void *sub_1001D84D8@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.PressureSample");
}

void sub_1001D84E8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v15,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  4313LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v15,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v14, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 40);
  if (!(_BYTE)v5) {
    return;
  }
  if ((*(_BYTE *)(a2 + 40) & 1) != 0)
  {
    unsigned int v6 = *(_DWORD *)(a2 + 8);
    if (v6 >= 7) {
      sub_10122FA2C();
    }
    *(_DWORD *)(a1 + 40) |= 1u;
    *(_DWORD *)(a1 + 8) = v6;
    int v5 = *(_DWORD *)(a2 + 40);
  }

  if ((v5 & 2) != 0)
  {
    int v8 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 40) |= 2u;
    *(_DWORD *)(a1 + 12) = v8;
    int v5 = *(_DWORD *)(a2 + 40);
    if ((v5 & 4) == 0)
    {
LABEL_9:
      if ((v5 & 8) == 0) {
        goto LABEL_10;
      }
      goto LABEL_18;
    }
  }

  else if ((v5 & 4) == 0)
  {
    goto LABEL_9;
  }

  int v9 = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 40) |= 4u;
  *(_DWORD *)(a1 + 16) = v9;
  int v5 = *(_DWORD *)(a2 + 40);
  if ((v5 & 8) == 0)
  {
LABEL_10:
    if ((v5 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_19;
  }

void sub_1001D8660(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001D8678(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018280A8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001D8688(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018280A8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

_DWORD *sub_1001D86A8()
{
  uint64_t result = operator new(0x30uLL);
  result[9] = 0;
  result[10] = 0;
  *(void *)uint64_t result = off_1018280A8;
  *((void *)result + 1) = 0LL;
  *((void *)result + 2) = 0LL;
  *((void *)result + 3) = 0LL;
  *((_WORD *)result + 16) = 0;
  return result;
}

uint64_t sub_1001D86D8(uint64_t result)
{
  if (*(_BYTE *)(result + 40))
  {
    *(void *)(result + 8) = 0LL;
    *(void *)(result + 16) = 0LL;
    *(_WORD *)(result + 32) = 0;
    *(void *)(result + 24) = 0LL;
  }

  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_1001D86F4( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        int v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v9 = v27;
        }

        else
        {
          unsigned int v9 = *v8;
          *((void *)this + 1) = v8 + 1;
        }

        if (v9 <= 6)
        {
          *(_DWORD *)(a1 + 40) |= 1u;
          *(_DWORD *)(a1 + 8) = v9;
        }

        unsigned int v16 = (_BYTE *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v16 < v10 && *v16 == 16)
        {
          int v11 = v16 + 1;
          *((void *)this + 1) = v11;
          goto LABEL_36;
        }

        continue;
      case 2u:
        int v7 = TagFallback & 7;
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_36:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v17 = v27;
          int v18 = (_BYTE *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }

        else
        {
          unsigned int v17 = *v11;
          int v18 = v11 + 1;
          *((void *)this + 1) = v18;
        }

        *(_DWORD *)(a1 + 12) = v17;
        *(_DWORD *)(a1 + 40) |= 2u;
        *((void *)this + 1) = v18 + 1;
LABEL_44:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v27) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 16) = v27;
        *(_DWORD *)(a1 + 40) |= 4u;
        unint64_t v19 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v19 + 1;
LABEL_48:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v27) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 20) = v27;
        *(_DWORD *)(a1 + 40) |= 8u;
        int v20 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v20 + 1;
LABEL_52:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v27) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 24) = v27;
        *(_DWORD *)(a1 + 40) |= 0x10u;
        unint64_t v21 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v21 + 1;
LABEL_56:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v27) & 1) != 0)
        {
          *(_DWORD *)(a1 + 28) = v27;
          *(_DWORD *)(a1 + 40) |= 0x20u;
          int v22 = (_BYTE *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          if ((unint64_t)v22 < v12 && *v22 == 56)
          {
            char v13 = v22 + 1;
            *((void *)this + 1) = v13;
LABEL_60:
            if ((unint64_t)v13 >= v12 || *v13 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27);
              if (!(_DWORD)result) {
                return result;
              }
              unsigned int v23 = v27;
              int v24 = (_BYTE *)*((void *)this + 1);
              unint64_t v12 = *((void *)this + 2);
            }

            else
            {
              unsigned int v23 = *v13;
              int v24 = v13 + 1;
              *((void *)this + 1) = v24;
            }

            *(_BYTE *)(a1 + 32) = v23 != 0;
            *(_DWORD *)(a1 + 40) |= 0x40u;
            if ((unint64_t)v24 < v12 && *v24 == 64)
            {
              char v14 = v24 + 1;
              *((void *)this + 1) = v14;
LABEL_68:
              if ((unint64_t)v14 >= v12 || *v14 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27);
                if (!(_DWORD)result) {
                  return result;
                }
                unsigned int v25 = v27;
                int v26 = (unsigned __int8 *)*((void *)this + 1);
                unint64_t v12 = *((void *)this + 2);
              }

              else
              {
                unsigned int v25 = *v14;
                int v26 = (unsigned __int8 *)(v14 + 1);
                *((void *)this + 1) = v26;
              }

              *(_BYTE *)(a1 + 33) = v25 != 0;
              *(_DWORD *)(a1 + 40) |= 0x80u;
              if (v26 == (unsigned __int8 *)v12
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1LL;
                *((_BYTE *)this + 36) = 1;
                return result;
              }
            }
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_44;
        }
        goto LABEL_25;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_48;
        }
        goto LABEL_25;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_52;
        }
        goto LABEL_25;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_56;
        }
        goto LABEL_25;
      case 7u:
        int v7 = TagFallback & 7;
        char v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_60;
      case 8u:
        int v7 = TagFallback & 7;
        char v14 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_68;
      default:
        int v7 = TagFallback & 7;
LABEL_25:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001D8B00( uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 40);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(_DWORD *)(result + 8),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(_DWORD *)(v5 + 12),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }

uint64_t sub_1001D8C04(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 40);
  if (!(_BYTE)v3)
  {
    uint64_t result = 0LL;
    goto LABEL_32;
  }

  if ((*(_BYTE *)(a1 + 40) & 1) == 0)
  {
    int v4 = 0;
    if ((*(_BYTE *)(a1 + 40) & 2) == 0) {
      goto LABEL_19;
    }
LABEL_13:
    int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if ((v7 & 0x80000000) != 0)
    {
      int v8 = 11;
    }

    else if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 40);
    }

    else
    {
      int v8 = 2;
    }

    v4 += v8;
    goto LABEL_19;
  }

  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
  if ((v6 & 0x80000000) != 0)
  {
    int v4 = 11;
    if ((v3 & 2) == 0) {
      goto LABEL_19;
    }
    goto LABEL_13;
  }

  if (v6 < 0x80)
  {
    int v4 = 2;
    if ((v3 & 2) == 0) {
      goto LABEL_19;
    }
    goto LABEL_13;
  }

  int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 2) != 0) {
    goto LABEL_13;
  }
LABEL_19:
  unsigned int v9 = v4 + 5;
  if ((v3 & 4) == 0) {
    unsigned int v9 = v4;
  }
  if ((v3 & 8) != 0) {
    v9 += 5;
  }
  if ((v3 & 0x10) != 0) {
    v9 += 5;
  }
  if ((v3 & 0x20) != 0) {
    v9 += 5;
  }
  if ((v3 & 0x40) != 0) {
    v9 += 2;
  }
  if ((v3 & 0x80) != 0) {
    uint64_t result = v9 + 2;
  }
  else {
    uint64_t result = v9;
  }
LABEL_32:
  *(_DWORD *)(a1 + 36) = result;
  return result;
}

void sub_1001D8CF4(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1001D8D40()
{
  return 1LL;
}

void *sub_1001D8D48@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.ClientSatelliteInfo");
}

BOOL sub_1001D8D58(int a1)
{
  return (a1 + 1) < 4;
}

void sub_1001D8D68(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v11,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  4737LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v11,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 40);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 40) & 1) != 0)
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 40) |= 1u;
      *(void *)(a1 + 8) = v6;
      int v5 = *(_DWORD *)(a2 + 40);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_11;
      }
    }

    else if ((*(_BYTE *)(a2 + 40) & 2) == 0)
    {
      goto LABEL_6;
    }

    uint64_t v7 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 40) |= 2u;
    *(void *)(a1 + 16) = v7;
    int v5 = *(_DWORD *)(a2 + 40);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        return;
      }
LABEL_12:
      int v9 = *(_DWORD *)(a2 + 32);
      *(_DWORD *)(a1 + 40) |= 8u;
      *(_DWORD *)(a1 + 32) = v9;
      return;
    }

void sub_1001D8E68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001D8E80(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101828120;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001D8E90(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101828120;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

double sub_1001D8EB0()
{
  unsigned __int8 v0 = operator new(0x30uLL);
  void *v0 = off_101828120;
  v0[1] = 0LL;
  v0[2] = 0LL;
  v0[3] = 0LL;
  *(void *)&double result = 0xFFFFFFFFLL;
  v0[4] = 0xFFFFFFFFLL;
  *((_DWORD *)v0 + 10) = 0;
  return result;
}

uint64_t sub_1001D8EE4(uint64_t result)
{
  if (*(_BYTE *)(result + 40))
  {
    *(void *)(result + 8) = 0LL;
    *(void *)(result + 16) = 0LL;
    *(void *)(result + 24) = 0LL;
    *(_DWORD *)(result + 32) = -1;
  }

  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_1001D8F04( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_24;
        }
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v15) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 8) = *(void *)v15;
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v8 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v8 + 1;
        goto LABEL_14;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_24;
        }
LABEL_14:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v15) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = *(void *)v15;
        *(_DWORD *)(a1 + 40) |= 2u;
        int v9 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v9 + 1;
LABEL_19:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v15) & 1) != 0)
        {
          *(void *)(a1 + 24) = *(void *)v15;
          *(_DWORD *)(a1 + 40) |= 4u;
          int v11 = (_BYTE *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          if ((unint64_t)v11 < v10 && *v11 == 32)
          {
            unint64_t v12 = v11 + 1;
            *((void *)this + 1) = v12;
LABEL_28:
            if ((unint64_t)v12 >= v10 || *v12 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v15);
              if (!(_DWORD)result) {
                return result;
              }
              unsigned int v13 = v15[0];
            }

            else
            {
              unsigned int v13 = *v12;
              *((void *)this + 1) = v12 + 1;
            }

            if (v13 + 1 <= 3)
            {
              *(_DWORD *)(a1 + 40) |= 8u;
              *(_DWORD *)(a1 + 32) = v13;
            }

            if (*((void *)this + 1) == *((void *)this + 2)
              && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              uint64_t result = 1LL;
              *((_BYTE *)this + 36) = 1;
              return result;
            }
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_19;
        }
        goto LABEL_24;
      case 4u:
        int v7 = TagFallback & 7;
        unint64_t v12 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_28;
      default:
        int v7 = TagFallback & 7;
LABEL_24:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001D9154( uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 40);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  a2,  *(double *)(result + 8),  a3);
    int v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  a2,  *(double *)(v5 + 16),  a3);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      return result;
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  *(_DWORD *)(v5 + 32),  a2,  a4);
  }

uint64_t sub_1001D91E8(uint64_t a1, unsigned int a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 40);
  if (*(_BYTE *)(a1 + 40))
  {
    unsigned int v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 8) != 0)
    {
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
      if ((v6 & 0x80000000) != 0)
      {
        int v7 = 11;
      }

      else if (v6 >= 0x80)
      {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
      }

      else
      {
        int v7 = 2;
      }

      uint64_t v5 = (v7 + v5);
    }
  }

  else
  {
    uint64_t v5 = 0LL;
  }

  *(_DWORD *)(a1 + 36) = v5;
  return v5;
}

void sub_1001D9270(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1001D92BC()
{
  return 1LL;
}

void *sub_1001D92C4@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.DaemonLocationPrivate.AltitudeInfo");
}

void sub_1001D92D4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v78,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  6677LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v78,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v77, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v78);
  }

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 288),  *(_DWORD *)(a2 + 296) + *(_DWORD *)(a1 + 296));
  if (*(int *)(a2 + 296) >= 1)
  {
    uint64_t v5 = 0LL;
    do
    {
      uint64_t v6 = *(void *)(*(void *)(a2 + 288) + 8 * v5);
      uint64_t v7 = *(int *)(a1 + 296);
      int v8 = *(_DWORD *)(a1 + 300);
      if ((int)v7 >= v8)
      {
        if (v8 == *(_DWORD *)(a1 + 304))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 288),  v8 + 1);
          int v8 = *(_DWORD *)(a1 + 300);
        }

        *(_DWORD *)(a1 + 300) = v8 + 1;
        unint64_t v10 = operator new(0x30uLL);
        v10[9] = 0;
        v10[10] = 0;
        *(void *)unint64_t v10 = off_1018280A8;
        *((void *)v10 + 1) = 0LL;
        *((void *)v10 + 2) = 0LL;
        *((void *)v10 + 3) = 0LL;
        *((_WORD *)v10 + 16) = 0;
        uint64_t v11 = *(void *)(a1 + 288);
        uint64_t v12 = *(int *)(a1 + 296);
        *(_DWORD *)(a1 + 296) = v12 + 1;
        *(void *)(v11 + 8 * v12) = v10;
      }

      else
      {
        uint64_t v9 = *(void *)(a1 + 288);
        *(_DWORD *)(a1 + 296) = v7 + 1;
        unint64_t v10 = *(_DWORD **)(v9 + 8 * v7);
      }

      sub_1001D84E8((uint64_t)v10, v6);
      ++v5;
    }

    while (v5 < *(int *)(a2 + 296));
  }

  unsigned int v13 = *(_DWORD *)(a2 + 364);
  if (!(_BYTE)v13) {
    goto LABEL_21;
  }
  if ((v13 & 1) != 0)
  {
    uint64_t v17 = *(void *)(a2 + 8);
    *(_DWORD *)(a1 + 364) |= 1u;
    *(void *)(a1 + 8) = v17;
    unsigned int v13 = *(_DWORD *)(a2 + 364);
    if ((v13 & 2) == 0)
    {
LABEL_14:
      if ((v13 & 4) == 0) {
        goto LABEL_15;
      }
      goto LABEL_36;
    }
  }

  else if ((v13 & 2) == 0)
  {
    goto LABEL_14;
  }

  uint64_t v18 = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 364) |= 2u;
  *(void *)(a1 + 16) = v18;
  unsigned int v13 = *(_DWORD *)(a2 + 364);
  if ((v13 & 4) == 0)
  {
LABEL_15:
    if ((v13 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_37;
  }

LABEL_164:
  uint64_t v71 = *(void *)(a2 + 160);
  *(_DWORD *)(a1 + 364) |= 0x4000000u;
  *(void *)(a1 + 160) = v71;
  unsigned int v13 = *(_DWORD *)(a2 + 364);
  if ((v13 & 0x8000000) == 0)
  {
LABEL_78:
    if ((v13 & 0x10000000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_166;
  }

  uint64_t v103 = *(char *)(v10 + 900);
  uint64_t v104 = *(char *)(a1 + 160);
  if (v103 >= v104)
  {
    uint64_t v105 = v15;
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    uint64_t v106 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      *(void *)buf = v105;
      uint64_t v107 = sub_10043B674(v260, v105, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
      uint64_t v108 = v107 + 6;
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = v108;
      _os_log_impl( (void *)&_mh_execute_header,  v106,  OS_LOG_TYPE_DEBUG,  "reached the granularity, stopping all providers finer than current,%{public}s ",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      uint64_t v196 = qword_101934838;
      *(void *)v263 = v105;
      v197 = sub_10043B674(v260, v105, (uint64_t)&unk_1012CF090, (_DWORD **)v263);
      uint64_t v198 = v197 + 6;
      *(_DWORD *)v263 = 136446210;
      *(void *)&v263[4] = v198;
      LODWORD(v252) = 12;
      uint64_t v199 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v196,  2LL,  "reached the granularity, stopping all providers finer than current,%{public}s ",  v263,  v252);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLLocationController::shouldNotify(CFAbsoluteTime, LocationProvider, const CLLocationProvider_Type::NotificationData &)",  "%s\n",  v199);
      if (v199 != buf) {
        free(v199);
      }
    }

    sub_100426D64(a1, (_BYTE *)(v10 + 900));
    LOBYTE(v103) = *(_BYTE *)(v10 + 900);
    LOBYTE(v104) = *(_BYTE *)(a1 + 160);
    char v15 = v105;
  }

  if ((char)v103 > (char)v104 || !*(_BYTE *)(a1 + 216))
  {
LABEL_185:
    if (!(_DWORD)v46) {
      return v46;
    }
    goto LABEL_186;
  }

  if (v262 == *(_DWORD *)(a1 + 328))
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    uint64_t v109 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v110 = *(unsigned __int8 *)(v258 + 516);
      *(_DWORD *)buf = 67240448;
      *(_DWORD *)&uint8_t buf[4] = v259;
      *(_WORD *)&buf[8] = 1026;
      *(_DWORD *)&buf[10] = v110;
      _os_log_impl( (void *)&_mh_execute_header,  v109,  OS_LOG_TYPE_DEBUG,  "got accessory,stopping everything less preferred,isShifted,%{public}d,isPropagatedSolution,%{public}d\n",  buf,  0xEu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      v209 = *(unsigned __int8 *)(v258 + 516);
      *(_DWORD *)v263 = 67240448;
      *(_DWORD *)&v263[4] = v259;
      *(_WORD *)&v263[8] = 1026;
      *(_DWORD *)&v263[10] = v209;
      LODWORD(v252) = 14;
      v210 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "got accessory,stopping everything less preferred,isShifted,%{public}d,isPropagatedSolution,%{public}d\n",  v263,  v252);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLLocationController::shouldNotify(CFAbsoluteTime, LocationProvider, const CLLocationProvider_Type::NotificationData &)",  "%s\n",  v210);
      if (v210 != buf) {
        free(v210);
      }
    }

    buf[0] = 5;
    if (*(_BYTE *)(v258 + 516)) {
      uint64_t v111 = 1;
    }
    else {
      uint64_t v111 = v259;
    }
    sub_10042CC80(a1, buf, v111);
    goto LABEL_185;
  }

  if (!(_DWORD)v46) {
    return v46;
  }
  if (v262 == *(_DWORD *)(a1 + 320) && *(_DWORD *)(v10 + 192) == 9)
  {
    uint64_t v114 = v15;
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    uint64_t v115 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v115,  OS_LOG_TYPE_DEBUG,  "stopping all providers below coarse gps",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      *(_WORD *)v263 = 0;
      LODWORD(v252) = 2;
      v227 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "stopping all providers below coarse gps",  v263,  v252);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLLocationController::shouldNotify(CFAbsoluteTime, LocationProvider, const CLLocationProvider_Type::NotificationData &)",  "%s\n",  v227);
      if (v227 != buf) {
        free(v227);
      }
    }

    buf[0] = 0;
    uint64_t v116 = buf;
  }

  else
  {
    uint64_t v114 = v15;
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    uint64_t v149 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v149,  OS_LOG_TYPE_DEBUG,  "stopping all providers below newIter",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      *(_WORD *)v263 = 0;
      LODWORD(v252) = 2;
      v213 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "stopping all providers below newIter",  v263,  v252);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLLocationController::shouldNotify(CFAbsoluteTime, LocationProvider, const CLLocationProvider_Type::NotificationData &)",  "%s\n",  v213);
      if (v213 != buf) {
        free(v213);
      }
    }

    uint64_t v116 = (_BYTE *)(v10 + 901);
  }

  sub_10042CC80(a1, v116, 0);
  char v15 = v114;
LABEL_186:
  if (*v15 != v262)
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    uint64_t v112 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      if (v10 == v9)
      {
        uint64_t v113 = "(none)";
      }

      else
      {
        uint64_t v113 = (const char *)(v10 + 48);
      }

      if (v17 == v9)
      {
        uint64_t v150 = "(none)";
      }

      else
      {
        uint64_t v150 = (const char *)(v17 + 48);
      }

      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = v113;
      *(_WORD *)&buf[12] = 2082;
      v284 = v150;
      _os_log_impl( (void *)&_mh_execute_header,  v112,  OS_LOG_TYPE_DEBUG,  "changing to provider,%{public}s,from,%{public}s",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      if (v10 == v9)
      {
        v208 = "(none)";
      }

      else
      {
        v208 = (const char *)(v10 + 48);
      }

      if (v17 == v9)
      {
        v211 = "(none)";
      }

      else
      {
        v211 = (const char *)(v17 + 48);
      }

      *(_DWORD *)v263 = 136446466;
      *(void *)&v263[4] = v208;
      *(_WORD *)&v263[12] = 2082;
      v264 = v211;
      LODWORD(v252) = 22;
      v212 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "changing to provider,%{public}s,from,%{public}s",  v263,  v252);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLLocationController::shouldNotify(CFAbsoluteTime, LocationProvider, const CLLocationProvider_Type::NotificationData &)",  "%s\n",  v212);
      if (v212 != buf) {
        free(v212);
      }
    }

    *char v15 = v262;
  }

  return 1LL;
}

  uint64_t result = *(float *)(a2 + 228);
  v5 |= 0x40000000000000uLL;
  *unsigned int v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(_BYTE *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 228) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  if ((*v3 & 0x20000000000000LL) == 0)
  {
LABEL_84:
    if ((v8 & 8) == 0) {
      goto LABEL_85;
    }
    goto LABEL_166;
  }

  PB::TextFormatter::format(this, "shortAudioPeakPressureThreshold", *(float *)(a1 + 284));
  LOWORD(v7) = *(_WORD *)(a1 + 324);
  if ((*v5 & 1) == 0)
  {
LABEL_83:
    if ((v7 & 0x20) == 0) {
      goto LABEL_84;
    }
    goto LABEL_166;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 228), 0x112u);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  if ((*v4 & 0x20000000000000LL) == 0)
  {
LABEL_84:
    if ((v7 & 8) == 0) {
      goto LABEL_85;
    }
    goto LABEL_166;
  }

  uint64_t v53 = *(_BYTE *)(a2 + 342);
  v6 |= 0x80000000uLL;
  *unsigned int v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_BYTE *)(a1 + 342) = v53;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x20000000000000LL) == 0)
  {
LABEL_59:
    if ((v4 & 0x40000000000000LL) == 0) {
      goto LABEL_60;
    }
    goto LABEL_166;
  }

  PB::TextFormatter::format(this, "numGpsSamplesInHistory", *(_DWORD *)(a1 + 184));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x2000000000LL) == 0)
  {
LABEL_63:
    if ((v7 & 0x4000000000LL) == 0) {
      goto LABEL_64;
    }
    goto LABEL_166;
  }

  uint64_t result = PB::Writer::write(this, *(_BYTE *)(v3 + 342), 0x142u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x20000000000000LL) == 0)
  {
LABEL_59:
    if ((v5 & 0x40000000000000LL) == 0) {
      goto LABEL_60;
    }
    goto LABEL_166;
  }

LABEL_166:
  uint64_t v73 = *(void *)(a2 + 176);
  *(_DWORD *)(a1 + 364) |= 0x10000000u;
  *(void *)(a1 + 176) = v73;
  unsigned int v13 = *(_DWORD *)(a2 + 364);
  if ((v13 & 0x20000000) == 0)
  {
LABEL_80:
    if ((v13 & 0x40000000) == 0) {
      goto LABEL_81;
    }
LABEL_168:
    char v75 = *(_BYTE *)(a2 + 115);
    *(_DWORD *)(a1 + 364) |= 0x40000000u;
    *(_BYTE *)(a1 + 115) = v75;
    if ((*(_DWORD *)(a2 + 364) & 0x80000000) == 0) {
      goto LABEL_82;
    }
    goto LABEL_169;
  }

          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101847D40);
          }
          int v84 = (os_log_s *)qword_101934878;
          if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
          {
            else {
              int v85 = v62[5];
            }
            sub_1000392EC((uint64_t)v163, v85 + 1);
            if (v165[9] >= 0) {
              unsigned int v86 = v163;
            }
            else {
              unsigned int v86 = *(_BYTE **)v163;
            }
            if (v85)
            {
              else {
                int v87 = (const void *)v62[4];
              }
              memmove(v86, v87, v85);
            }

            *(_WORD *)&v86[v85] = 47;
            int v88 = *((char *)v62 + 79);
            if (v88 >= 0) {
              int v89 = (const std::string::value_type *)(v62 + 7);
            }
            else {
              int v89 = (const std::string::value_type *)v62[7];
            }
            if (v88 >= 0) {
              int v90 = *((unsigned __int8 *)v62 + 79);
            }
            else {
              int v90 = v62[8];
            }
            unsigned int v91 = std::string::append((std::string *)v163, v89, v90);
            uint64_t v92 = *(_OWORD *)&v91->__r_.__value_.__l.__data_;
            *(void *)&__p[16] = v91->__r_.__value_.__l.__cap_;
            *(_OWORD *)std::stringbuf::string_type __p = v92;
            v91->__r_.__value_.__l.__size_ = 0LL;
            v91->__r_.__value_.__l.__cap_ = 0LL;
            v91->__r_.__value_.__r.__words[0] = 0LL;
            if ((v165[9] & 0x80000000) != 0) {
              operator delete(*(void **)v163);
            }
            uint64_t v93 = __p;
            if (__p[23] < 0) {
              uint64_t v93 = *(_BYTE **)__p;
            }
            uint64_t v94 = *((_DWORD *)v62 + 70) + 1;
            unsigned int v95 = "---";
            if (v94 <= 4) {
              unsigned int v95 = off_101847F50[v94];
            }
            int v96 = "---";
            *(_DWORD *)uint64_t v163 = 136381443;
            *(void *)&v163[4] = v93;
            uint64_t v164 = 2081;
            *(void *)v165 = v95;
            *(_WORD *)&v165[8] = 2081;
            *(void *)&v165[10] = v96;
            uint64_t v166 = 1026;
            uint64_t v167 = a3;
            _os_log_impl( (void *)&_mh_execute_header,  v84,  OS_LOG_TYPE_DEBUG,  "sendFenceStatusNotification,fence,%{private}s,fenceStatus,%{private}s,searchStatus %{private}s,client,%{public}d",  v163,  0x26u);
            if ((__p[23] & 0x80000000) != 0) {
              operator delete(*(void **)__p);
            }
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(v163, 0x65CuLL);
            if (qword_101934870 != -1) {
              dispatch_once(&qword_101934870, &stru_101847D40);
            }
            uint64_t v106 = qword_101934878;
            sub_10065EF44((const void **)v62 + 4, &v157);
            uint64_t v107 = &v157;
            if ((v157.__r_.__value_.__s.__size_ & 0x80u) != 0) {
              uint64_t v107 = (std::string *)v157.__r_.__value_.__r.__words[0];
            }
            uint64_t v108 = *((_DWORD *)v62 + 70) + 1;
            uint64_t v109 = "---";
            if (v108 <= 4) {
              uint64_t v109 = off_101847F50[v108];
            }
            uint64_t v110 = "---";
            *(_DWORD *)std::stringbuf::string_type __p = 136381443;
            *(void *)&__p[4] = v107;
            *(_WORD *)&__p[12] = 2081;
            *(void *)&__p[14] = v109;
            *(_WORD *)&__p[22] = 2081;
            *(void *)&__p[24] = v110;
            uint64_t v159 = 1026;
            uint64_t v160 = a3;
            LODWORD(v152) = 38;
            _os_log_send_and_compose_impl( 2LL,  0LL,  v163,  1628LL,  &_mh_execute_header,  v106,  2LL,  "sendFenceStatusNotification,fence,%{private}s,fenceStatus,%{private}s,searchStatus %{private}s,client,%{public}d",  __p,  v152);
            uint64_t v112 = v111;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceManager::pendingFenceMaintenanceOnClientRegistration(CFAbsoluteTime, CLFenceManager_Type::Fenc eStatus, int, const std::string &)",  "%s\n",  v112);
            if (v112 != v163) {
              free(v112);
            }
          }

          sub_10065EAA8(a1, (uint64_t)(v62 + 4), (int *)v62 + 70, (int *)v62 + 74, a3);
          goto LABEL_198;
        }
      }

          unint64_t v10 = (_BYTE *)*((void *)this + 1);
          unsigned int v13 = *((void *)this + 2);
          char v64 = *v10;
          if (v64 == 25) {
            goto LABEL_149;
          }
          if (v64 == 32)
          {
            for (i = v10 + 1; ; i = (char *)(v25 + 1))
            {
              *((void *)this + 1) = i;
LABEL_171:
              if ((unint64_t)i >= v13 || *i < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v224);
                if (!(_DWORD)result) {
                  return result;
                }
                char v65 = v224[0];
              }

              else
              {
                char v65 = *i;
                *((void *)this + 1) = i + 1;
              }

              uint64_t v66 = *(_DWORD *)(a1 + 56);
              if (v66 == *(_DWORD *)(a1 + 60))
              {
                sub_10004AAFC(v217, v66 + 1);
                uint64_t v66 = *(_DWORD *)(a1 + 56);
              }

              uint64_t v67 = *(void *)(a1 + 48);
              *(_DWORD *)(a1 + 56) = v66 + 1;
              *(_DWORD *)(v67 + 4LL * v66) = v65;
              unsigned int v68 = *(_DWORD *)(a1 + 60) - *(_DWORD *)(a1 + 56);
              if (v68 >= 1)
              {
                uint64_t v69 = v68 + 1;
                do
                {
                  uint64_t v70 = (_BYTE *)*((void *)this + 1);
                  uint64_t v71 = *((void *)this + 2);
                  *((void *)this + 1) = v70 + 1;
                  if ((unint64_t)(v70 + 1) >= v71 || (char)v70[1] < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v224);
                    if (!(_DWORD)result) {
                      return result;
                    }
                    uint64_t v72 = v224[0];
                  }

                  else
                  {
                    uint64_t v72 = v70[1];
                    *((void *)this + 1) = v70 + 2;
                  }

                  uint64_t v73 = *(_DWORD *)(a1 + 56);
                  if (v73 >= *(_DWORD *)(a1 + 60))
                  {
                    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v224,  3LL,  "/AppleInternal/Library/BuildRoots/9fd3fc02-a7db-11ef-98ff-a6e88e557b55/Applications/Xcode.app/Cont ents/Developer/Platforms/AppleTVOS.platform/Developer/SDKs/AppleTVOS18.2.Internal.sdk/usr/local/in clude/google/protobuf/repeated_field.h",  602LL);
                    uint64_t v74 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v224,  "CHECK failed: (size()) < (Capacity()): ");
                    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v223, v74);
                    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v224);
                    uint64_t v73 = *(_DWORD *)(a1 + 56);
                  }

                  char v75 = *(void *)(a1 + 48);
                  *(_DWORD *)(a1 + 56) = v73 + 1;
                  *(_DWORD *)(v75 + 4LL * v73) = v72;
                  --v69;
                }

                while (v69 > 1);
              }

          dispatch_once(&qword_101934860, &stru_10186A5E8);
          goto LABEL_139;
        }
      }

      else
      {
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_10186A5E8);
        }
        char v33 = (os_log_s *)qword_101934868;
        if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
        {
          int v34 = sub_10099EBD8((char)v6);
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = v34;
          _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEFAULT,  "@EmerWarn, ignore scan, %{public}s",  buf,  0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934860 != -1) {
            dispatch_once(&qword_101934860, &stru_10186A5E8);
          }
          uint64_t v35 = qword_101934868;
          int v36 = sub_10099EBD8((char)v6);
          *(_DWORD *)uint64_t v126 = 136446210;
          *(void *)&v126[4] = v36;
          uint64_t v37 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v35,  0LL,  "@EmerWarn, ignore scan, %{public}s",  v126,  12);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Wifi::Scan &) const",  "%s\n",  v37);
          if (v37 != buf) {
            free(v37);
          }
          p_vtable = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
        }
      }
    }

    dispatch_once(&qword_101934570, &stru_101873AF8);
    goto LABEL_112;
  }

  *(_DWORD *)(a1 + 396) |= 0x4000000u;
  unsigned int v57 = *(char **)(a1 + 208);
  if (!v57)
  {
    unsigned int v57 = (char *)operator new(0x40uLL);
    *(void *)unsigned int v57 = off_101876428;
    v57[8] = 0;
    *(_OWORD *)(v57 + 12) = 0u;
    *(_OWORD *)(v57 + 28) = 0u;
    *(_OWORD *)(v57 + 44) = 0u;
    *(void *)(a1 + 208) = v57;
  }

  int v58 = *(void *)(a2 + 208);
  if (!v58) {
    int v58 = *(void *)(qword_1019A1D38 + 208);
  }
  sub_100BB9CF4((uint64_t)v57, v58);
  uint64_t v7 = *(_DWORD *)(a2 + 396);
  if ((v7 & 0x8000000) == 0)
  {
LABEL_151:
    if ((v7 & 0x10000000) == 0) {
      goto LABEL_152;
    }
    goto LABEL_176;
  }

  uint64_t result = *(float *)(a2 + 280);
  int v8 = v6 >> 16;
  v6 |= 8uLL;
  *unsigned int v2 = v5;
  *(_BYTE *)(a1 + 326) = v8;
  *(_WORD *)(a1 + 324) = v6;
  *(float *)(a1 + 280) = result;
  LOBYTE(v8) = *(_WORD *)(a2 + 324);
  if ((*(_WORD *)(a2 + 324) & 0x10) == 0)
  {
LABEL_86:
    if ((v8 & 4) == 0) {
      return result;
    }
LABEL_168:
    uint64_t result = *(float *)(a2 + 276);
    *unsigned int v2 = v5;
    *(_BYTE *)(a1 + 326) = BYTE2(v6);
    *(_WORD *)(a1 + 324) = v6 | 4;
    *(float *)(a1 + 276) = result;
    return result;
  }

  PB::TextFormatter::format(this, "zgTime", *(float *)(a1 + 288));
  LOWORD(v7) = *(_WORD *)(a1 + 324);
  if ((v7 & 0x40) == 0)
  {
LABEL_85:
    if ((v7 & 0x80) == 0) {
      goto LABEL_86;
    }
LABEL_168:
    PB::TextFormatter::format(this, "zgTimeThresholdWithAudio", *(float *)(a1 + 296));
    if ((*(_WORD *)(a1 + 324) & 0x100) == 0) {
      return PB::TextFormatter::endObject(this);
    }
    goto LABEL_87;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 280), 0x114u);
  LOBYTE(v7) = *((_WORD *)v4 + 4);
  if ((v4[1] & 0x10) == 0)
  {
LABEL_86:
    if ((v7 & 4) == 0) {
      return result;
    }
    return PB::Writer::write(this, *(float *)(v3 + 276), 0x116u);
  }

  uint64_t v55 = *(_DWORD *)(a2 + 256);
  v5 |= 0x40000000000000uLL;
  *unsigned int v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 256) = v55;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x4000000) == 0)
  {
LABEL_61:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_168;
  }

  PB::TextFormatter::format(this, "numTriggersWithRecentSkiLiftDetected", *(_DWORD *)(a1 + 192));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x8000000000LL) == 0)
  {
LABEL_65:
    if ((v7 & 0x10000000000LL) == 0) {
      goto LABEL_66;
    }
    goto LABEL_168;
  }

  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 256), 0x192u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x4000000) == 0)
  {
LABEL_61:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_168;
  }

          uint64_t v4 = *((void *)this + 1);
          uint64_t v5 = *((void *)this + 2);
          uint64_t v6 = *((unsigned __int8 *)this + 24);
          if (v4 >= v5 || v6 != 0) {
            return v6 == 0;
          }
          break;
        default:
          if ((PB::Reader::skip(this, v15 >> 3, v15 & 7, 0) & 1) == 0) {
            return 0LL;
          }
          goto LABEL_166;
      }
    }

    uint64_t v18 = 0;
    uint64_t v19 = 0;
    char v15 = 0LL;
    if (v4 > v5) {
      uint64_t v5 = v4;
    }
    while (v5 != v4)
    {
      uint64_t v20 = v4 + 1;
      uint64_t v21 = *(_BYTE *)(v12 + v4);
      *((void *)this + 1) = v20;
      v15 |= (unint64_t)(v21 & 0x7F) << v18;
      if ((v21 & 0x80) == 0) {
        goto LABEL_21;
      }
      v18 += 7;
      uint64_t v4 = v20;
      if (v19++ >= 9)
      {
LABEL_20:
        char v15 = 0LL;
        goto LABEL_21;
      }
    }

    uint64_t v6 = 1;
    *((_BYTE *)this + 24) = 1;
  }

  return v6 == 0;
}

              uint64_t v4 = *((unsigned __int8 *)this + 24);
              if (v3 >= v2 || *((_BYTE *)this + 24)) {
                return v4 == 0;
              }
              continue;
          }
        }

        uint64_t v4 = 0;
      }

      break;
    }
  }

  return v4 == 0;
}

LABEL_167:
  uint64_t v74 = *(void *)(a2 + 184);
  *(_DWORD *)(a1 + 364) |= 0x20000000u;
  *(void *)(a1 + 184) = v74;
  unsigned int v13 = *(_DWORD *)(a2 + 364);
  if ((v13 & 0x40000000) != 0) {
    goto LABEL_168;
  }
LABEL_81:
  if ((v13 & 0x80000000) == 0) {
    goto LABEL_82;
  }
LABEL_169:
  uint64_t v76 = *(void *)(a2 + 192);
  *(_DWORD *)(a1 + 364) |= 0x80000000;
  *(void *)(a1 + 192) = v76;
LABEL_82:
  int v36 = *(_DWORD *)(a2 + 368);
  if (!(_BYTE)v36) {
    goto LABEL_92;
  }
  if ((v36 & 1) != 0)
  {
    uint64_t v44 = *(void *)(a2 + 200);
    *(_DWORD *)(a1 + 368) |= 1u;
    *(void *)(a1 + 200) = v44;
    int v36 = *(_DWORD *)(a2 + 368);
    if ((v36 & 2) == 0)
    {
LABEL_85:
      if ((v36 & 4) == 0) {
        goto LABEL_86;
      }
      goto LABEL_114;
    }
  }

  else if ((v36 & 2) == 0)
  {
    goto LABEL_85;
  }

  char v45 = *(_BYTE *)(a2 + 276);
  *(_DWORD *)(a1 + 368) |= 2u;
  *(_BYTE *)(a1 + 276) = v45;
  int v36 = *(_DWORD *)(a2 + 368);
  if ((v36 & 4) == 0)
  {
LABEL_86:
    if ((v36 & 8) == 0) {
      goto LABEL_87;
    }
    goto LABEL_119;
  }

  if (*(_BYTE *)(a1 + 1892)) {
    [*(id *)(*(void *)(a1 + 1216) + 16) register:*(void *)(*(void *)(a1 + 1216) + 8) forNotification:0 registrationInfo:0];
  }
  if (*(_BYTE *)(a1 + 1940))
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_10185E9B0);
    }
    uint64_t v50 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v50,  OS_LOG_TYPE_DEFAULT,  "Logging GNSS mode of operation status",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_10185E9B0);
      }
      LOWORD(v102) = 0;
      LODWORD(v97) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "Logging GNSS mode of operation status",  &v102,  v97);
      uint64_t v93 = (uint8_t *)v92;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLMotionLogger::enableAlwaysOnLogging()", "%s\n", v92);
      if (v93 != buf) {
        free(v93);
      }
    }

    uint64_t v51 = *(void *)(a1 + 1104);
    if (v51) {
      [*(id *)(v51 + 16) register:*(void *)(v51 + 8) forNotification:41 registrationInfo:0];
    }
  }

  if (*(_BYTE *)(a1 + 2017) && !*(void *)(a1 + 520))
  {
    uint64_t v52 = operator new(0x20uLL);
    *uint64_t v52 = off_1018A2210;
    *uint64_t v52 = &off_10185F668;
    v52[1] = 0LL;
    v52[2] = sub_1008C5628;
    v52[3] = a1;
    uint64_t v53 = *(void *)(a1 + 520);
    *(void *)(a1 + 520) = v52;
    if (v53) {
      (*(void (**)(uint64_t))(*(void *)v53 + 8LL))(v53);
    }
    char v54 = sub_100C87D2C();
    sub_1006DCB40(v54, 0, *(void *)(a1 + 520), -1.0);
    if (qword_101934540 != -1) {
      dispatch_once(&qword_101934540, &stru_10185E9D0);
    }
    uint64_t v55 = (os_log_s *)qword_101934548;
    if (os_log_type_enabled((os_log_t)qword_101934548, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v55, OS_LOG_TYPE_DEFAULT, "Logging wake gesture notifications", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934540 != -1) {
        dispatch_once(&qword_101934540, &stru_10185E9D0);
      }
      LOWORD(v102) = 0;
      LODWORD(v97) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934548,  0LL,  "Logging wake gesture notifications",  &v102,  v97);
      int v96 = (uint8_t *)v95;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLMotionLogger::enableAlwaysOnLogging()", "%s\n", v95);
      if (v96 != buf) {
        free(v96);
      }
    }
  }

  sub_100DD9668(*(_DWORD *)(v9 + 4), v8 + 456, __p);
  uint64_t v93 = *(void *)__p;
  *(void *)std::stringbuf::string_type __p = 0LL;
  uint64_t v190 = v93;
  sub_100DF6F20(v8, &v190, &v194, &v191);
  uint64_t v94 = v190;
  uint64_t v190 = 0LL;
  if (v94) {
    (*(void (**)(uint64_t))(*(void *)v94 + 8LL))(v94);
  }
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101884538);
  }
  unsigned int v95 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    int v96 = sub_1008ADB4C((uint64_t)&v194);
    int v97 = sub_1008ADB70((uint64_t)&v194);
    uint64_t v98 = *(void *)(v8 + 144);
    *(_DWORD *)buf = 134284033;
    *(double *)&uint8_t buf[4] = v96;
    *(_WORD *)&buf[12] = 2049;
    uint64_t v7 = __p;
    *(double *)&buf[14] = v97;
    *(_WORD *)&buf[22] = 2050;
    *(void *)&buf[24] = v98;
    _os_log_impl( (void *)&_mh_execute_header,  v95,  OS_LOG_TYPE_DEFAULT,  "@TileReq, wifi, onlist, llsw, %{private}.2lf, %{private}.2lf, center, size, %{public}ld",  buf,  0x20u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101884538);
    }
    v158 = qword_101934858;
    uint64_t v159 = sub_1008ADB4C((uint64_t)&v194);
    uint64_t v160 = sub_1008ADB70((uint64_t)&v194);
    uint64_t v161 = *(void *)(v187 + 144);
    LODWORD(v200.__r_.__value_.__l.__data_) = 134284033;
    *(double *)((char *)v200.__r_.__value_.__r.__words + 4) = v159;
    WORD2(v200.__r_.__value_.__r.__words[1]) = 2049;
    uint64_t v7 = __p;
    *(double *)((char *)&v200.__r_.__value_.__r.__words[1] + 6) = v160;
    HIWORD(v200.__r_.__value_.__r.__words[2]) = 2050;
    v201.__r_.__value_.__r.__words[0] = v161;
    LODWORD(v168) = 32;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v158,  0LL,  "@TileReq, wifi, onlist, llsw, %{private}.2lf, %{private}.2lf, center, size, %{public}ld",  &v200,  v168);
    uint64_t v163 = (char *)v162;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWifiTilesManager::requestDownload(CLTilesManager_Type::TileType, double, double, const std::string &, const CLTileFileDownloadDetails &, CFAbsoluteTime)",  "%s\n",  v162);
    if (v163 != buf) {
      free(v163);
    }
    int v8 = v187;
  }

  uint64_t v99 = *(void *)__p;
  *(void *)std::stringbuf::string_type __p = 0LL;
  if (v99) {
    (*(void (**)(uint64_t))(*(void *)v99 + 8LL))(v99);
  }
  LOBYTE(v39) = 1;
LABEL_177:
  v200 = v194;
  else {
    v201 = *__str;
  }
  uint64_t v100 = v39;
  LOWORD(v191) = 0;
  BYTE2(v191) = 0;
  if ((v192 & 0x80000000) == 0)
  {
    uint64_t v101 = -(int)v192;
    uint64_t v180 = v8 + 456;
    uint64_t v173 = (2 * v192) | 1;
    uint64_t v174 = -(int)v192;
    HIDWORD(v171) = v192;
    do
    {
      uint64_t v102 = v173;
      uint64_t v103 = v174;
      do
      {
        if (v103 | v101)
        {
          v200 = v194;
          std::string::operator=(&v201, __str);
          uint64_t v104 = *(double *)(v9 + 160);
          uint64_t v105 = *(double *)(v9 + 152);
          *(float *)&uint64_t v104 = v104;
          sub_1008AE784((uint64_t)&v200, v101, v103, v105, *(float32x2_t *)&v104);
          if (sub_1008AD1E0((unsigned int *)&v200))
          {
            if (qword_101934A70 != -1) {
              dispatch_once(&qword_101934A70, &stru_101884558);
            }
            uint64_t v106 = (os_log_s *)qword_101934A78;
            if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v107 = v200.__r_.__value_.__r.__words[1];
              uint64_t v108 = HIDWORD(v200.__r_.__value_.__r.__words[0]);
              sub_1008AD840((unsigned int *)&v200, (std::stringbuf::string_type *)__p);
              uint64_t v109 = __p;
              if (v199[1] < 0) {
                uint64_t v109 = *(_BYTE **)__p;
              }
              *(_DWORD *)buf = 67110146;
              *(_DWORD *)&uint8_t buf[4] = v101;
              *(_WORD *)&buf[8] = 1024;
              *(_DWORD *)&buf[10] = v103;
              *(_WORD *)&buf[14] = 1024;
              *(_DWORD *)&buf[16] = v107;
              *(_WORD *)&buf[20] = 1024;
              *(_DWORD *)&buf[22] = v108;
              *(_WORD *)&buf[26] = 2080;
              uint64_t v7 = __p;
              *(void *)&buf[28] = v109;
              _os_log_impl( (void *)&_mh_execute_header,  v106,  OS_LOG_TYPE_DEBUG,  "WIFITILE: requestDownload, y, %d, x, %d, tile_y, %d, tile_x, %d, neighbourTileID, %s",  buf,  0x24u);
              if ((v199[1] & 0x80000000) != 0) {
                operator delete(*(void **)__p);
              }
              int v8 = v187;
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_101934A70 != -1) {
                dispatch_once(&qword_101934A70, &stru_101884558);
              }
              uint64_t v124 = qword_101934A78;
              uint64_t v125 = v200.__r_.__value_.__r.__words[1];
              uint64_t v126 = HIDWORD(v200.__r_.__value_.__r.__words[0]);
              sub_1008AD840((unsigned int *)&v200, &v202);
              uint64_t v127 = &v202;
              if ((v202.__r_.__value_.__s.__size_ & 0x80u) != 0) {
                uint64_t v127 = (std::stringbuf::string_type *)v202.__r_.__value_.__r.__words[0];
              }
              *(_DWORD *)std::stringbuf::string_type __p = 67110146;
              *(_DWORD *)&__p[4] = v101;
              *(_WORD *)&__p[8] = 1024;
              *(_DWORD *)&__p[10] = v103;
              LOWORD(v198) = 1024;
              *(_DWORD *)((char *)&v198 + 2) = v125;
              HIWORD(v198) = 1024;
              *(_DWORD *)uint64_t v199 = v126;
              *(_WORD *)&v199[4] = 2080;
              uint64_t v7 = __p;
              *(void *)&v199[6] = v127;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v124,  2LL,  "WIFITILE: requestDownload, y, %d, x, %d, tile_y, %d, tile_x, %d, neighbourTileID, %s",  __p,  36,  (_DWORD)v169,  v170,  v171);
              uint64_t v129 = v128;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWifiTilesManager::requestDownload(CLTilesManager_Type::TileType, double, double, const std::strin g &, const CLTileFileDownloadDetails &, CFAbsoluteTime)",  "%s\n",  v129);
              int v8 = v187;
              if (v129 != buf) {
                free(v129);
              }
            }

            uint64_t v110 = sub_100603554(v185, (uint64_t)&v200);
            uint64_t v111 = sub_10060238C(v186, (unsigned int *)&v200);
            if (*(_BYTE *)(v8 + 216)) {
              uint64_t v112 = 1;
            }
            else {
              uint64_t v112 = v111;
            }
            if ((v112 & 1) == 0 && v182 == v110)
            {
              if (qword_101934A70 != -1) {
                dispatch_once(&qword_101934A70, &stru_101884558);
              }
              uint64_t v113 = (os_log_s *)qword_101934A78;
              if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
              {
                sub_1008AD840((unsigned int *)&v200, (std::stringbuf::string_type *)buf);
                uint64_t v114 = buf;
                if (buf[23] < 0) {
                  uint64_t v114 = *(_BYTE **)buf;
                }
                *(_DWORD *)std::stringbuf::string_type __p = 136315138;
                *(void *)&__p[4] = v114;
                _os_log_impl( (void *)&_mh_execute_header,  v113,  OS_LOG_TYPE_DEBUG,  "WIFITILE: requestDownload, adding neighbour, %s",  __p,  0xCu);
                if ((buf[23] & 0x80000000) != 0) {
                  operator delete(*(void **)buf);
                }
              }

              if (sub_1002921D0(115, 2))
              {
                bzero(buf, 0x65CuLL);
                if (qword_101934A70 != -1) {
                  dispatch_once(&qword_101934A70, &stru_101884558);
                }
                uint64_t v136 = qword_101934A78;
                sub_1008AD840((unsigned int *)&v200, (std::stringbuf::string_type *)__p);
                v137 = __p;
                if (v199[1] < 0) {
                  v137 = *(_BYTE **)__p;
                }
                LODWORD(v202.__r_.__value_.__l.__data_) = 136315138;
                *(void *)(v7 + 100) = v137;
                _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v136,  2LL,  "WIFITILE: requestDownload, adding neighbour, %s",  (const char *)&v202);
                uint64_t v139 = v138;
                if ((v199[1] & 0x80000000) != 0) {
                  operator delete(*(void **)__p);
                }
                sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWifiTilesManager::requestDownload(CLTilesManager_Type::TileType, double, double, const std::str ing &, const CLTileFileDownloadDetails &, CFAbsoluteTime)",  "%s\n",  v139);
                if (v139 != buf) {
                  free(v139);
                }
              }

              sub_100DD9668(*(_DWORD *)(v9 + 4), v180, &v189);
              sub_100DF6F20(v8, &v189, &v200, &v191);
              uint64_t v115 = v189;
              uint64_t v189 = 0LL;
              if (v115) {
                (*(void (**)(uint64_t))(*(void *)v115 + 8LL))(v115);
              }
              if (qword_101934850 != -1) {
                dispatch_once(&qword_101934850, &stru_101884538);
              }
              uint64_t v116 = (os_log_s *)qword_101934858;
              if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t v117 = sub_1008ADB4C((uint64_t)&v200);
                uint64_t v118 = sub_1008ADB70((uint64_t)&v200);
                uint64_t v119 = *(void *)(v8 + 144);
                *(_DWORD *)buf = 134284033;
                *(double *)&uint8_t buf[4] = v117;
                *(_WORD *)&buf[12] = 2049;
                uint64_t v7 = __p;
                *(double *)&buf[14] = v118;
                *(_WORD *)&buf[22] = 2050;
                *(void *)&buf[24] = v119;
                _os_log_impl( (void *)&_mh_execute_header,  v116,  OS_LOG_TYPE_DEFAULT,  "@TileReq, wifi, onlist, llsw, %{private}.2lf, %{private}.2lf, neighbor, size, %{public}ld",  buf,  0x20u);
              }

              if (sub_1002921D0(115, 2))
              {
                bzero(buf, 0x65CuLL);
                if (qword_101934850 != -1) {
                  dispatch_once(&qword_101934850, &stru_101884538);
                }
                uint64_t v140 = qword_101934858;
                uint64_t v141 = sub_1008ADB4C((uint64_t)&v200);
                uint64_t v142 = sub_1008ADB70((uint64_t)&v200);
                uint64_t v143 = *(void *)(v8 + 144);
                *(_DWORD *)std::stringbuf::string_type __p = 134284033;
                *(double *)&__p[4] = v141;
                *(_WORD *)&__p[12] = 2049;
                uint64_t v198 = v142;
                *(_WORD *)uint64_t v199 = 2050;
                *(void *)&v199[2] = v143;
                LODWORD(v168) = 32;
                _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v140,  0LL,  "@TileReq, wifi, onlist, llsw, %{private}.2lf, %{private}.2lf, neighbor, size, %{public}ld",  __p,  v168);
                v145 = (char *)v144;
                sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWifiTilesManager::requestDownload(CLTilesManager_Type::TileType, double, double, const std::str ing &, const CLTileFileDownloadDetails &, CFAbsoluteTime)",  "%s\n",  v144);
                if (v145 != buf) {
                  free(v145);
                }
              }

              uint64_t v100 = 1;
            }
          }

          else
          {
            if (qword_101934A70 != -1) {
              dispatch_once(&qword_101934A70, &stru_101884558);
            }
            uint64_t v120 = (os_log_s *)qword_101934A78;
            if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v121 = v200.__r_.__value_.__r.__words[1];
              uint64_t v122 = HIDWORD(v200.__r_.__value_.__r.__words[0]);
              sub_1008AD840((unsigned int *)&v200, (std::stringbuf::string_type *)__p);
              uint64_t v123 = __p;
              if (v199[1] < 0) {
                uint64_t v123 = *(_BYTE **)__p;
              }
              *(_DWORD *)buf = 67110146;
              *(_DWORD *)&uint8_t buf[4] = v101;
              *(_WORD *)&buf[8] = 1024;
              *(_DWORD *)&buf[10] = v103;
              *(_WORD *)&buf[14] = 1024;
              *(_DWORD *)&buf[16] = v121;
              *(_WORD *)&buf[20] = 1024;
              *(_DWORD *)&buf[22] = v122;
              *(_WORD *)&buf[26] = 2080;
              uint64_t v7 = __p;
              *(void *)&buf[28] = v123;
              _os_log_impl( (void *)&_mh_execute_header,  v120,  OS_LOG_TYPE_DEBUG,  "WIFITILE: requestDownload, out of boundaries, y, %d, x, %d, tile_y, %d, tile_x, %d, neighbourTileID, %s",  buf,  0x24u);
              if ((v199[1] & 0x80000000) != 0) {
                operator delete(*(void **)__p);
              }
              int v8 = v187;
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_101934A70 != -1) {
                dispatch_once(&qword_101934A70, &stru_101884558);
              }
              uint64_t v130 = qword_101934A78;
              uint64_t v131 = v200.__r_.__value_.__r.__words[1];
              uint64_t v132 = HIDWORD(v200.__r_.__value_.__r.__words[0]);
              sub_1008AD840((unsigned int *)&v200, &v202);
              unsigned int v133 = &v202;
              if ((v202.__r_.__value_.__s.__size_ & 0x80u) != 0) {
                unsigned int v133 = (std::stringbuf::string_type *)v202.__r_.__value_.__r.__words[0];
              }
              *(_DWORD *)std::stringbuf::string_type __p = 67110146;
              *(_DWORD *)&__p[4] = v101;
              *(_WORD *)&__p[8] = 1024;
              *(_DWORD *)&__p[10] = v103;
              LOWORD(v198) = 1024;
              *(_DWORD *)((char *)&v198 + 2) = v131;
              HIWORD(v198) = 1024;
              *(_DWORD *)uint64_t v199 = v132;
              *(_WORD *)&v199[4] = 2080;
              uint64_t v7 = __p;
              *(void *)&v199[6] = v133;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v130,  2LL,  "WIFITILE: requestDownload, out of boundaries, y, %d, x, %d, tile_y, %d, tile_x, %d, neighbourTileID, %s",  __p,  36,  (_DWORD)v169,  v170,  v171);
              int v135 = v134;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWifiTilesManager::requestDownload(CLTilesManager_Type::TileType, double, double, const std::strin g &, const CLTileFileDownloadDetails &, CFAbsoluteTime)",  "%s\n",  v135);
              int v8 = v187;
              if (v135 != buf) {
                free(v135);
              }
            }
          }
        }

        ++v103;
        --v102;
      }

      while (v102);
    }

    while (v101++ != HIDWORD(v171));
  }

  if ((v100 & 1) != 0)
  {
    uint64_t v147 = (*(uint64_t (**)(void))(**(void **)(v187 + 448) + 80LL))(*(void *)(v187 + 448));
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101884538);
    }
    uint64_t v148 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 67240192;
      *(_DWORD *)&uint8_t buf[4] = v147;
      _os_log_impl((void *)&_mh_execute_header, v148, OS_LOG_TYPE_DEFAULT, "@TileSched, wifi, set, %{public}d", buf, 8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101884538);
      }
      *(_DWORD *)std::stringbuf::string_type __p = 67240192;
      *(_DWORD *)&__p[4] = v147;
      LODWORD(v168) = 8;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "@TileSched, wifi, set, %{public}d",  __p,  v168);
      v157 = (char *)v156;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWifiTilesManager::requestDownload(CLTilesManager_Type::TileType, double, double, const std::string &, con st CLTileFileDownloadDetails &, CFAbsoluteTime)",  "%s\n",  v156);
      if (v157 != buf) {
        free(v157);
      }
    }

    sub_100DF1154(v187, 0, v13);
  }

  int v89 = *(void *)(a1 + 144);
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101884538);
  }
  int v90 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    unsigned int v91 = *(unsigned __int8 *)(a1 + 160);
    uint64_t v92 = *(unsigned __int8 *)(a1 + 192);
    *(_DWORD *)buf = 67240960;
    *(_DWORD *)&uint8_t buf[4] = v120;
    *(_WORD *)&buf[8] = 2050;
    *(void *)&buf[10] = v89;
    *(_WORD *)&buf[18] = 1026;
    *(_DWORD *)&buf[20] = v91;
    *(_WORD *)&buf[24] = 1026;
    *(_DWORD *)&buf[26] = v92;
    _os_log_impl( (void *)&_mh_execute_header,  v90,  OS_LOG_TYPE_DEBUG,  "WIFITILE: checkDownloadSchedule, numOfActiveDownloads, %{public}d, tilesToDownload, %{public}lu, small, %{public}d , large, %{public}d",  buf,  0x1Eu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101884538);
    }
    uint64_t v110 = *(unsigned __int8 *)(a1 + 160);
    uint64_t v111 = *(unsigned __int8 *)(a1 + 192);
    *(_DWORD *)uint64_t v127 = 67240960;
    *(_DWORD *)&v127[4] = v120;
    *(_WORD *)&v127[8] = 2050;
    *(void *)&v127[10] = v89;
    *(_WORD *)&v127[18] = 1026;
    *(_DWORD *)&v127[20] = v110;
    *(_WORD *)&v127[24] = 1026;
    *(_DWORD *)&v127[26] = v111;
    LODWORD(v118) = 30;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "WIFITILE: checkDownloadSchedule, numOfActiveDownloads, %{public}d, tilesToDownload, %{public}lu, small, %{public}d , large, %{public}d",  v127,  v118);
    uint64_t v113 = (char *)v112;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::checkDownloadSchedule(DownloadPriority, CFAbsoluteTime)",  "%s\n",  v112);
    if (v113 != buf) {
      free(v113);
    }
  }

  if (!*(_BYTE *)(a1 + 160) && !*(_BYTE *)(a1 + 192))
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101884538);
    }
    uint64_t v93 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v93,  OS_LOG_TYPE_DEBUG,  "WIFITILE: checkDownloadSchedule, NoActiveDownloads",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101884538);
      }
      *(_WORD *)uint64_t v127 = 0;
      LODWORD(v118) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "WIFITILE: checkDownloadSchedule, NoActiveDownloads",  v127,  v118);
      int v36 = (char *)v94;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiTilesManager::checkDownloadSchedule(DownloadPriority, CFAbsoluteTime)",  "%s\n",  v94);
      goto LABEL_193;
    }
  }

  uint64_t result = *(float *)(a2 + 284);
  char v29 = v6 >> 16;
  LODWORD(v6) = v6 | 0x10;
  *unsigned int v2 = v5;
  *(_BYTE *)(a1 + 326) = v29;
  *(_WORD *)(a1 + 324) = v6;
  *(float *)(a1 + 284) = result;
  if ((*(_WORD *)(a2 + 324) & 4) != 0) {
    goto LABEL_168;
  }
  return result;
}

  PB::TextFormatter::format(this, "zgTimeThreshold", *(float *)(a1 + 292));
  LOWORD(v7) = *(_WORD *)(a1 + 324);
  if ((v7 & 0x80) != 0) {
    goto LABEL_168;
  }
LABEL_86:
  if ((v7 & 0x100) != 0) {
LABEL_87:
  }
    PB::TextFormatter::format(this, "zgTimeThresholdWithoutAudio", *(float *)(a1 + 300));
  return PB::TextFormatter::endObject(this);
}

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 284), 0x115u);
  if ((v4[1] & 4) != 0) {
    return PB::Writer::write(this, *(float *)(v3 + 276), 0x116u);
  }
  return result;
}

  uint64_t v56 = *(_DWORD *)(a2 + 144);
  v5 |= 0x4000000uLL;
  *unsigned int v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 144) = v56;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x8000000) == 0)
  {
LABEL_62:
    if ((v7 & 0x2000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_169;
  }

  PB::TextFormatter::format(this, "numTriggersWithTrueBtHint", *(_DWORD *)(a1 + 196));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x10000000000LL) == 0)
  {
LABEL_66:
    if ((v7 & 0x20000000000LL) == 0) {
      goto LABEL_67;
    }
    goto LABEL_169;
  }

  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 144), 0x193u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x8000000) == 0)
  {
LABEL_62:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_169;
  }

LABEL_114:
  *(_DWORD *)(a1 + 368) |= 4u;
  int v46 = *(void **)(a1 + 208);
  if (!v46)
  {
    int v46 = operator new(0x20uLL);
    void *v46 = off_101827EC8;
    v46[1] = 0LL;
    unsigned int v46[2] = 0LL;
    v46[3] = 0LL;
    *(void *)(a1 + 208) = v46;
  }

  uint64_t v47 = *(void *)(a2 + 208);
  if (!v47) {
    uint64_t v47 = *(void *)(qword_1019A0BA0 + 208);
  }
  sub_1001D60C0((uint64_t)v46, v47);
  int v36 = *(_DWORD *)(a2 + 368);
  if ((v36 & 8) == 0)
  {
LABEL_87:
    if ((v36 & 0x10) == 0) {
      goto LABEL_88;
    }
    goto LABEL_120;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2B,  *(unsigned __int8 *)(v5 + 277),  (BOOL)a2,  a4);
  uint64_t v7 = *(_DWORD *)(v5 + 368);
  if ((v7 & 0x800) == 0)
  {
LABEL_45:
    if ((v7 & 0x1000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_46;
  }

    uint64_t v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 116);
    if (v41 >= 0x80)
    {
      uint64_t v42 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v41, a2) + 2;
      int v3 = *(_DWORD *)(a1 + 148);
    }

    else
    {
      uint64_t v42 = 3;
    }

    uint64_t v5 = (v42 + v5);
    if ((v3 & 0x80000) == 0)
    {
LABEL_101:
      if ((v3 & 0x100000) == 0) {
        goto LABEL_102;
      }
      goto LABEL_122;
    }

      char v61 = sqlite3_step(v60);
      unsigned int v62 = (char *)__p;
      unsigned int v63 = v119;
      uint64_t v99 = v69 + 1;
      if (v69 != 0xAAAAAAAAAAAAAAABLL * ((v119 - (_BYTE *)__p) >> 4))
      {
        v68 += 48LL;
        ++v69;
        if (v61 == 100) {
          continue;
        }
      }

      char v64 = v99 - 1;
      goto LABEL_117;
    }

    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
    int v85 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
    {
      unsigned int v86 = *(void *)((char *)__p + v68);
      int v88 = *(void *)((char *)__p + v68 + 16);
      int v87 = *(void *)((char *)__p + v68 + 24);
      int v89 = sqlite3_column_text(v60, 3);
      int v90 = sqlite3_column_text(v60, 2);
      unsigned int v91 = sqlite3_column_text(v60, 4);
      uint64_t v110 = v68;
      sub_1010DDBC0(v116, (&off_101835CD0)[*(int *)((char *)__p + v68 + 32)]);
      uint64_t v107 = v91;
      uint64_t v108 = v69;
      if (v117 >= 0) {
        uint64_t v92 = v116;
      }
      else {
        uint64_t v92 = (void **)v116[0];
      }
      uint64_t v93 = sqlite3_column_text(v60, 6);
      uint64_t v106 = v85;
      uint64_t v94 = v60;
      sub_1010DDBC0(v114, (&off_101835CD0)[*(int *)((char *)__p + v110 + 36)]);
      unsigned int v95 = v115;
      int v96 = (void **)v114[0];
      int v97 = sqlite3_column_text(v94, 5);
      *(_DWORD *)__str = 68291843;
      uint64_t v98 = v114;
      if (v95 < 0) {
        uint64_t v98 = v96;
      }
      *(_DWORD *)&__str[4] = 0;
      *(_WORD *)&__str[8] = 2082;
      *(void *)&__str[10] = "";
      *(_WORD *)&__str[18] = 2081;
      *(void *)&__str[20] = a2;
      uint64_t v125 = 2082;
      *(void *)uint64_t v126 = v86;
      *(_WORD *)&v126[8] = 2082;
      *(void *)&v126[10] = v88;
      *(_WORD *)&v126[18] = 2082;
      *(void *)&v126[20] = v87;
      *(_WORD *)&v126[28] = 2082;
      *(void *)uint64_t v127 = v89;
      *(_WORD *)&v127[8] = 2082;
      *(void *)uint64_t v128 = v90;
      *(_WORD *)&v128[8] = 2082;
      uint64_t v129 = v107;
      uint64_t v130 = 2082;
      uint64_t v131 = v92;
      uint64_t v132 = 2082;
      unsigned int v133 = v93;
      int v134 = 2082;
      int v135 = v98;
      uint64_t v136 = 2082;
      v137 = v97;
      _os_log_impl( (void *)&_mh_execute_header,  v106,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:#warning Existing table's foreign key constraint does not match expected, table:%{p rivate, location:escape_only}s, ExpectedFromCol:%{public, location:escape_only}s, ExpectedToTable:%{publ ic, location:escape_only}s, ExpectedToCol:%{public, location:escape_only}s, ActualFromCol:%{public, loca tion:escape_only}s, ActualToTable:%{public, location:escape_only}s, ActualToCol:%{public, location:escap e_only}s, ExpectedOnDelete:%{public, location:escape_only}s, ActualOnDelete:%{public, location:escape_on ly}s, ExpectedOnUpdate:%{public, location:escape_only}s, ActualOnUpdate:%{public, location:escape_only}s}",  __str,  0x80u);
      if (v115 < 0) {
        operator delete(v114[0]);
      }
      a3 = v112;
      unsigned int v60 = v94;
      unsigned int v68 = v110;
      if (v117 < 0) {
        operator delete(v116[0]);
      }
      char v65 = 0;
      uint64_t v69 = v108;
    }

    else
    {
      char v65 = 0;
    }

    goto LABEL_114;
  }

  if (qword_101934A20 != -1) {
    dispatch_once(&qword_101934A20, &stru_101835C50);
  }
  int v34 = (os_log_s *)off_101934A28;
  if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
  {
    *(_DWORD *)buf = 68289283;
    *(_DWORD *)&uint8_t buf[4] = 0;
    uint64_t v139 = 2082;
    *(void *)uint64_t v140 = "";
    *(_WORD *)&v140[8] = 2081;
    *(void *)&v140[10] = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Need at least one column in table, table:%{private, location:escape_only}s}",  buf,  0x1Cu);
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101835C50);
    }
  }

  uint64_t v35 = (os_log_s *)off_101934A28;
  if (os_signpost_enabled((os_log_t)off_101934A28))
  {
    *(_DWORD *)buf = 68289283;
    *(_DWORD *)&uint8_t buf[4] = 0;
    uint64_t v139 = 2082;
    *(void *)uint64_t v140 = "";
    *(_WORD *)&v140[8] = 2081;
    *(void *)&v140[10] = a2;
    _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v35,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Need at least one column in table",  "{msg%{public}.0s:Need at least one column in table, table:%{private, location:escape_only}s}",  buf,  0x1Cu);
  }

  int v36 = 0LL;
LABEL_141:
  if ((_BYTE)v123) {
    pthread_mutex_unlock(v122);
  }
  else {
    (*(void (**)(uint64_t))(*(void *)v121 + 24LL))(v121);
  }
  return v36;
}

  *(float *)&uint64_t v6 = self->_meanCatherine;
  objc_msgSend( v3,  "setObject:forKey:",  +[NSNumber numberWithFloat:](NSNumber, "numberWithFloat:", v6),  @"meanCatherine");
  has = self->_has;
  if ((*(_BYTE *)&has & 0x40) == 0)
  {
LABEL_92:
    if ((*(_BYTE *)&has & 2) == 0) {
      goto LABEL_93;
    }
    goto LABEL_116;
  }

  memset(&v168, 0, sizeof(v168));
  memset(&v167, 0, sizeof(v167));
  sub_1002F0B04(__p);
  int v87 = sub_1002A8560((uint64_t)__p[0].__r_.__value_.__l.__data_, "ClientKeysToFault", &v168);
  int v88 = v87;
  int v89 = (std::__shared_weak_count *)__p[0].__r_.__value_.__l.__size_;
  if (!__p[0].__r_.__value_.__l.__size_) {
    goto LABEL_118;
  }
  int v90 = (unint64_t *)(__p[0].__r_.__value_.__l.__size_ + 8);
  do
    unsigned int v91 = __ldaxr(v90);
  while (__stlxr(v91 - 1, v90));
  if (!v91)
  {
    ((void (*)(std::__shared_weak_count *))v89->__on_zero_shared)(v89);
    std::__shared_weak_count::__release_weak(v89);
    if (!v88) {
      goto LABEL_140;
    }
  }

  else
  {
LABEL_118:
    if (!v87) {
      goto LABEL_140;
    }
  }

  sub_100292A34((void (__cdecl ***)(std::basic_stringstream<char> *__hidden))&v178, &v168, 24);
  while (1)
  {
    uint64_t v92 = sub_1005799F8((uint64_t *)&v178, &v167);
    if ((*((_BYTE *)v92 + *(void *)(*v92 - 24) + 32) & 5) != 0) {
      break;
    }
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_1018401A0);
    }
    uint64_t v93 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
    {
      if ((v167.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v94 = &v167;
      }
      else {
        uint64_t v94 = (std::string *)v167.__r_.__value_.__r.__words[0];
      }
      LODWORD(__p[0].__r_.__value_.__l.__data_) = 136315138;
      *(std::string::size_type *)((char *)__p[0].__r_.__value_.__r.__words + 4) = (std::string::size_type)v94;
      _os_log_impl( (void *)&_mh_execute_header,  v93,  OS_LOG_TYPE_DEFAULT,  "Will fault consumption score increases for %s",  (uint8_t *)__p,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_1018401A0);
      }
      if ((v167.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        unsigned int v95 = &v167;
      }
      else {
        unsigned int v95 = (std::string *)v167.__r_.__value_.__r.__words[0];
      }
      uint64_t v176 = 136315138;
      uint64_t v177 = v95;
      int v96 = (std::string *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934988,  0LL,  "Will fault consumption score increases for %s",  (const char *)&v176);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLClientManager::CLClientManager(id<CLIntersiloUniverse>)",  "%s\n",  (const char *)v96);
      if (v96 != __p) {
        free(v96);
      }
    }

    sub_10002276C((uint64_t **)(a1 + 712), (const void **)&v167.__r_.__value_.__l.__data_, (uint64_t)&v167);
  }

  *(void *)((char *)&v178
  *(void *)&uint64_t v179 = v97;
  if (v181 < 0) {
    operator delete(v180);
  }
  std::streambuf::~streambuf((char *)&v179 + 8);
  std::ios::~ios(&v182);
LABEL_140:
  uint64_t v98 = [*(id *)(a1 + 40) newTimer];
  *(void *)(a1 + 296) = v98;
  v166[0] = _NSConcreteStackBlock;
  v166[1] = 3221225472LL;
  v166[2] = sub_100579C24;
  v166[3] = &unk_10181D3D0;
  v166[4] = a1;
  [v98 setHandler:v166];
  sub_100579D44(a1);
  sub_10054C7F4(a1);
  sub_100565668((void *)a1);
  sub_100579EB8(a1);
  uint64_t v99 = *(void **)(a1 + 40);
  v165[0] = _NSConcreteStackBlock;
  v165[1] = 3221225472LL;
  v165[2] = sub_10057A0A8;
  v165[3] = &unk_10181D3D0;
  v165[4] = a1;
  [v99 async:v165];
  uint64_t v100 = operator new(0x30uLL);
  sub_1010DDBC0(v163, "com.apple.locationd.registration");
  uint64_t v101 = [*(id *)(a1 + 40) queue];
  v162[0] = _NSConcreteStackBlock;
  v162[1] = 3221225472LL;
  v162[2] = sub_10057A180;
  v162[3] = &unk_10183FFE8;
  v162[4] = a1;
  CLConnectionServer::CLConnectionServer(v100, v163, v101, v162);
  *(void *)(a1 + 744) = v100;
  if (v164 < 0) {
    operator delete(v163[0]);
  }
  uint64_t v185 = 0u;
  memset(v186, 0, sizeof(v186));
  uint64_t v184 = 0u;
  memset(__p, 0, sizeof(__p));
  uint64_t v187 = 0u;
  uint64_t v188 = 0u;
  uint64_t v189 = 0u;
  memset(v190, 0, 27);
  uint64_t v191 = [*(id *)(a1 + 120) locationServicesEnabledStatus];
  LODWORD(v178) = 4;
  (*(void (**)(std::string::size_type, __int128 *, std::string *, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  &v178,  __p,  1LL,  0xFFFFFFFFLL,  0LL);
  if (SHIBYTE(v190[2]) < 0) {
    operator delete(v190[0]);
  }
  if (SHIBYTE(v189) < 0) {
    operator delete(*((void **)&v188 + 1));
  }
  if (SBYTE7(v188) < 0) {
    operator delete((void *)v187);
  }
  if ((v186[15] & 0x80000000) != 0) {
    operator delete(*((void **)&v185 + 1));
  }
  if (SBYTE7(v185) < 0) {
    operator delete((void *)v184);
  }
  uint64_t v102 = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterPostNotification(v102, CLAuthorizationStatusChangedNotification, 0LL, 0LL, 0);
  sub_100575294(&v178, 0LL);
  uint64_t v103 = *(_OWORD **)(a1 + 976);
  uint64_t v104 = *(void *)(a1 + 984);
  if ((unint64_t)v103 >= v104)
  {
    uint64_t v107 = ((uint64_t)v103 - *v160) >> 5;
    uint64_t v108 = v107 + 1;
    uint64_t v109 = v104 - *v160;
    if (v109 >> 4 > v108) {
      uint64_t v108 = v109 >> 4;
    }
    else {
      uint64_t v110 = v108;
    }
    __p[1].__r_.__value_.__l.__size_ = a1 + 984;
    if (v110) {
      uint64_t v111 = (char *)sub_10000835C(a1 + 984, v110);
    }
    else {
      uint64_t v111 = 0LL;
    }
    uint64_t v112 = &v111[32 * v107];
    __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v111;
    __p[0].__r_.__value_.__l.__size_ = (std::string::size_type)v112;
    __p[1].__r_.__value_.__r.__words[0] = (std::string::size_type)&v111[32 * v110];
    uint64_t v113 = v179;
    *(_OWORD *)uint64_t v112 = v178;
    *((_OWORD *)v112 + 1) = v113;
    __p[0].__r_.__value_.__l.__cap_ = (std::string::size_type)(v112 + 32);
    sub_100589FA4(v160, __p);
    uint64_t v106 = *(_OWORD **)(a1 + 976);
    sub_10058A198((uint64_t)__p);
  }

  else
  {
    uint64_t v105 = v179;
    *uint64_t v103 = v178;
    v103[1] = v105;
    uint64_t v106 = v103 + 2;
    *(void *)(a1 + 976) = v103 + 2;
  }

  *(void *)(a1 + 976) = v106;
  sub_100575680(&v178);
  sub_100575294(&v178, 1LL);
  uint64_t v114 = &CMOnBodyStatusManagerManufacturer_ptr;
  uint64_t v115 = *(_OWORD **)(a1 + 976);
  uint64_t v116 = *(void *)(a1 + 984);
  if ((unint64_t)v115 >= v116)
  {
    uint64_t v119 = ((uint64_t)v115 - *v160) >> 5;
    uint64_t v120 = v119 + 1;
    uint64_t v121 = v116 - *v160;
    if (v121 >> 4 > v120) {
      uint64_t v120 = v121 >> 4;
    }
    else {
      uint64_t v122 = v120;
    }
    __p[1].__r_.__value_.__l.__size_ = a1 + 984;
    if (v122) {
      uint64_t v123 = (char *)sub_10000835C(a1 + 984, v122);
    }
    else {
      uint64_t v123 = 0LL;
    }
    uint64_t v124 = &v123[32 * v119];
    __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v123;
    __p[0].__r_.__value_.__l.__size_ = (std::string::size_type)v124;
    __p[1].__r_.__value_.__r.__words[0] = (std::string::size_type)&v123[32 * v122];
    uint64_t v125 = v179;
    *(_OWORD *)uint64_t v124 = v178;
    *((_OWORD *)v124 + 1) = v125;
    __p[0].__r_.__value_.__l.__cap_ = (std::string::size_type)(v124 + 32);
    sub_100589FA4(v160, __p);
    uint64_t v118 = *(_OWORD **)(a1 + 976);
    sub_10058A198((uint64_t)__p);
    uint64_t v114 = &CMOnBodyStatusManagerManufacturer_ptr;
  }

  else
  {
    uint64_t v117 = v179;
    char *v115 = v178;
    v115[1] = v117;
    uint64_t v118 = v115 + 2;
    *(void *)(a1 + 976) = v115 + 2;
  }

  *(void *)(a1 + 976) = v118;
  sub_100575680(&v178);
  sub_1003CC884((uint64_t)sub_10057A278, a1, *(void **)(a1 + 32), __p);
  uint64_t v126 = __p[0].__r_.__value_.__r.__words[0];
  __p[0].__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v127 = *(void *)(a1 + 192);
  *(void *)(a1 + 192) = v126;
  if (v127)
  {
    (*(void (**)(uint64_t))(*(void *)v127 + 8LL))(v127);
    uint64_t v128 = __p[0].__r_.__value_.__r.__words[0];
    __p[0].__r_.__value_.__r.__words[0] = 0LL;
    if (v128) {
      (*(void (**)(std::string::size_type))(*(void *)v128 + 8LL))(v128);
    }
  }

  [*(id *)(*(void *)(a1 + 192) + 16) register:*(void *)(*(void *)(a1 + 192) + 8) forNotification:8 registrationInfo:0];
  LOBYTE(v178) = 0;
  if (objc_msgSend( objc_msgSend(objc_msgSend(*v159, "vendor"), "proxyForService:", @"CLDaemonStatus"),  "syncgetAirplaneMode:",  &v178))
  {
    *(_BYTE *)(a1 + 992) = v178;
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_1018401A0);
    }
    uint64_t v129 = qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v130 = *(unsigned __int8 *)(a1 + 992);
      __p[0].__r_.__value_.__r.__words[0] = 68289282LL;
      LOWORD(__p[0].__r_.__value_.__r.__words[1]) = 2082;
      *(std::string::size_type *)((char *)&__p[0].__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
      WORD1(__p[0].__r_.__value_.__r.__words[2]) = 1026;
      HIDWORD(__p[0].__r_.__value_.__r.__words[2]) = v130;
      uint64_t v131 = "{msg%{public}.0s:airplane mode enabled, enabled:%{public}d}";
      uint64_t v132 = (os_log_s *)v129;
      unsigned int v133 = 24;
LABEL_204:
      _os_log_impl((void *)&_mh_execute_header, v132, OS_LOG_TYPE_DEBUG, v131, (uint8_t *)__p, v133);
    }
  }

  else
  {
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_1018401A0);
    }
    int v134 = qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
    {
      __p[0].__r_.__value_.__r.__words[0] = 68289026LL;
      LOWORD(__p[0].__r_.__value_.__r.__words[1]) = 2082;
      *(std::string::size_type *)((char *)&__p[0].__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
      uint64_t v131 = "{msg%{public}.0s:failed to fetch airplane mode state.}";
      uint64_t v132 = (os_log_s *)v134;
      unsigned int v133 = 18;
      goto LABEL_204;
    }
  }

  sub_10034FF34((uint64_t)sub_10057A450, a1, *(void **)(a1 + 32), __p);
  int v135 = __p[0].__r_.__value_.__r.__words[0];
  __p[0].__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v136 = *(void *)(a1 + 208);
  *(void *)(a1 + 208) = v135;
  if (v136)
  {
    (*(void (**)(uint64_t))(*(void *)v136 + 8LL))(v136);
    v137 = __p[0].__r_.__value_.__r.__words[0];
    __p[0].__r_.__value_.__r.__words[0] = 0LL;
    if (v137) {
      (*(void (**)(std::string::size_type))(*(void *)v137 + 8LL))(v137);
    }
  }

  [*(id *)(*(void *)(a1 + 208) + 16) register:*(void *)(*(void *)(a1 + 208) + 8) forNotification:1 registrationInfo:0];
  sub_1008F15C8((uint64_t)sub_10057A628, a1, *(void **)(a1 + 32), __p);
  v138 = __p[0].__r_.__value_.__r.__words[0];
  __p[0].__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v139 = *(void *)(a1 + 200);
  *(void *)(a1 + 200) = v138;
  if (v139)
  {
    (*(void (**)(uint64_t))(*(void *)v139 + 8LL))(v139);
    uint64_t v140 = __p[0].__r_.__value_.__r.__words[0];
    __p[0].__r_.__value_.__r.__words[0] = 0LL;
    if (v140) {
      (*(void (**)(std::string::size_type))(*(void *)v140 + 8LL))(v140);
    }
  }

  [*(id *)(*(void *)(a1 + 200) + 16) register:*(void *)(*(void *)(a1 + 200) + 8) forNotification:9 registrationInfo:0];
  [*(id *)(a1 + 1480) startMonitoringCapabilityChangeForClient:CLISP_ME_TOKEN];
  sub_100ADBEF8((uint64_t)sub_10057A800, a1, *(void **)(a1 + 32), __p);
  uint64_t v141 = __p[0].__r_.__value_.__r.__words[0];
  __p[0].__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v142 = *(void *)(a1 + 216);
  *(void *)(a1 + 216) = v141;
  if (v142)
  {
    (*(void (**)(uint64_t))(*(void *)v142 + 8LL))(v142);
    uint64_t v143 = __p[0].__r_.__value_.__r.__words[0];
    __p[0].__r_.__value_.__r.__words[0] = 0LL;
    if (v143) {
      (*(void (**)(std::string::size_type))(*(void *)v143 + 8LL))(v143);
    }
  }

  [*(id *)(*(void *)(a1 + 216) + 16) register:*(void *)(*(void *)(a1 + 216) + 8) forNotification:0 registrationInfo:0];
  [*(id *)(*(void *)(a1 + 216) + 16) register:*(void *)(*(void *)(a1 + 216) + 8) forNotification:1 registrationInfo:0];
  [*(id *)(*(void *)(a1 + 216) + 16) register:*(void *)(*(void *)(a1 + 216) + 8) forNotification:2 registrationInfo:0];
  sub_100554ECC(a1);
  sub_10053E9E8(*(void **)(a1 + 952));
  sub_1002965D0();
  sub_100574E34();
  *(void *)(a1 + 344) = 0LL;
  *(void *)(a1 + 352) = -[CLZoneRelevanceTracker initWithClientManagerPointer:andUniverse:]( objc_alloc(&OBJC_CLASS___CLZoneRelevanceTracker),  "initWithClientManagerPointer:andUniverse:",  a1,  *(void *)(a1 + 32));
  *(void *)(a1 + 512) = objc_alloc_init((Class)v114[424]);
  *(void *)(a1 + 520) = objc_alloc_init((Class)v114[424]);
  v144 = [*(id *)(a1 + 40) newTimer];
  *(void *)(a1 + 224) = v144;
  [v144 setHandler:&stru_101840008];
  qword_101996DE8 =  +[CLClientKeyPath clientKeyPathWithClientAnchor:anchorType:]( &OBJC_CLASS___CLClientKeyPath,  "clientKeyPathWithClientAnchor:anchorType:",  @"/System/Library/LocationBundles/Traffic.bundle",  112LL);
  return a1;
}

  if ((v3 & 0xFF0000) == 0) {
    goto LABEL_175;
  }
  if ((v3 & 0x10000) != 0)
  {
    uint64_t v55 = *(void *)(a1 + 120);
    if (!v55) {
      uint64_t v55 = *(void *)(qword_1019A1D48 + 120);
    }
    uint64_t v56 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100BC92B8(v55, a2);
    unsigned int v57 = (int)v56;
    else {
      int v58 = 1;
    }
    uint64_t v4 = (v4 + v57 + v58 + 2);
    int v3 = *(_DWORD *)(a1 + 224);
    if ((v3 & 0x20000) == 0)
    {
LABEL_117:
      if ((v3 & 0x40000) == 0) {
        goto LABEL_118;
      }
      goto LABEL_136;
    }
  }

  else if ((v3 & 0x20000) == 0)
  {
    goto LABEL_117;
  }

  uint64_t v59 = *(void *)(a1 + 128);
  if (!v59) {
    uint64_t v59 = *(void *)(qword_1019A1D48 + 128);
  }
  unsigned int v60 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100615DB0(v59, a2);
  char v61 = (int)v60;
  else {
    unsigned int v62 = 1;
  }
  uint64_t v4 = (v4 + v61 + v62 + 2);
  int v3 = *(_DWORD *)(a1 + 224);
  if ((v3 & 0x40000) == 0)
  {
LABEL_118:
    if ((v3 & 0x80000) == 0) {
      goto LABEL_119;
    }
    goto LABEL_145;
  }

      if (v72 < 0) {
        operator delete(__p[0]);
      }
      break;
    default:
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_10187F990);
      }
      int v28 = (os_log_s *)qword_101934888;
      if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 67240192;
        *(_DWORD *)&uint8_t buf[4] = a3;
        _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEFAULT,  "#Warning,DEM,avl download status,%{public}d",  buf,  8u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934880 != -1) {
          dispatch_once(&qword_101934880, &stru_10187F990);
        }
        LODWORD(__p[0]) = 67240192;
        HIDWORD(__p[0]) = a3;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  0LL,  "#Warning,DEM,avl download status,%{public}d",  __p,  8);
        uint64_t v9 = (char *)v29;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLDigitalElevationModel::onAvlFileUpdated(CLFileUpdate *, CLFileUpdate::UpdateStatus)",  "%s\n",  v29);
LABEL_70:
        if (v9 != buf) {
          free(v9);
        }
      }

      break;
  }

  return (*(uint64_t (**)(uint64_t))(*(void *)v6 + 24LL))(v6);
}

  uint64_t result = *(float *)(a2 + 160);
  v5 |= 0x20000000uLL;
  *unsigned int v2 = v5;
  *(_BYTE *)(a1 + 324) = v6;
  *(float *)(a1 + 160) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x20000000000LL) == 0)
  {
LABEL_49:
    if ((v7 & 0x200000000LL) == 0) {
      goto LABEL_50;
    }
    goto LABEL_116;
  }

  PB::TextFormatter::format(this, "hgWeightCoeff", *(float *)(a1 + 228));
  uint64_t v6 = *v5;
  uint64_t v7 = *(_BYTE *)(a1 + 324);
  if ((v7 & 8) == 0)
  {
LABEL_48:
    if ((v6 & 0x800000000000LL) == 0) {
      goto LABEL_49;
    }
    goto LABEL_116;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 160), 0x2Cu);
  uint64_t v6 = *v4;
  if ((*v4 & 0x20000000000LL) == 0)
  {
LABEL_49:
    if ((v6 & 0x200000000LL) == 0) {
      goto LABEL_50;
    }
    goto LABEL_116;
  }

  uint64_t result = *(float *)(a2 + 40);
  v5 |= 0x80uLL;
  *unsigned int v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 40) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x400) == 0)
  {
LABEL_41:
    if ((v4 & 0x200) == 0) {
      goto LABEL_42;
    }
    goto LABEL_116;
  }

  PB::TextFormatter::format( this,  "detectorRegimeDeltaVThreshold3WithoutAudioStandaloneBaroNeeded",  *(float *)(a1 + 152));
  uint64_t v6 = *v5;
  uint64_t v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x1000000000LL) == 0)
  {
LABEL_40:
    if ((v7 & 1) == 0) {
      goto LABEL_41;
    }
    goto LABEL_116;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48), 0x23u);
  uint64_t v5 = *v4;
  uint64_t v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x100) == 0)
  {
LABEL_40:
    if ((v5 & 4) == 0) {
      goto LABEL_41;
    }
    goto LABEL_116;
  }

  uint64_t result = *(float *)(a2 + 252);
  v5 |= 0x1000000000000000uLL;
  *unsigned int v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(_BYTE *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 252) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((v8 & 0x40) == 0)
  {
LABEL_34:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_116;
  }

  PB::TextFormatter::format(this, "kBaroEscalateSpinNormThresholdRO", *(float *)(a1 + 104));
  uint64_t v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*(_WORD *)(a1 + 324) & 0x4000) == 0)
  {
LABEL_33:
    if ((v7 & 0x8000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_116;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 252), 0xCCu);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((v7 & 0x40) == 0)
  {
LABEL_34:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_116;
  }

  PB::TextFormatter::format(this, "distanceToNearestRoad", *(float *)(a1 + 100));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x10000) == 0)
  {
LABEL_13:
    if ((v6 & 0x40) == 0) {
      goto LABEL_14;
    }
    goto LABEL_116;
  }

  uint64_t v41 = *(_BYTE *)(a2 + 170);
  v3 |= 0x800000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(_BYTE *)(result + 214) = BYTE2(v4);
  *(_BYTE *)(result + 170) = v41;
  uint64_t v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  unsigned int v2 = *(void *)(a2 + 204);
  if ((v2 & 0x800000000LL) == 0)
  {
LABEL_36:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_116;
  }

  PB::TextFormatter::format(this, "kEnergyMetRO", *(_BYTE *)(a1 + 184));
  uint64_t v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x4000000000000000LL) == 0)
  {
LABEL_35:
    if ((v5 & 0x8000000000000000LL) == 0) {
      goto LABEL_36;
    }
    goto LABEL_116;
  }

  uint64_t result = PB::Writer::write(this, *(_BYTE *)(v3 + 165), 0x3F4u);
  uint64_t v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 0x400) == 0)
  {
LABEL_36:
    if ((v4 & 0x400) == 0) {
      goto LABEL_37;
    }
    goto LABEL_116;
  }

        *(_DWORD *)(a1 + 56) = v33;
      }

      else if ((PB::Reader::skip(this, v27, v17 & 7, 0) & 1) == 0)
      {
        return 0LL;
      }

          *(void *)(a1 + 32) = v56;
          goto LABEL_129;
        case 5u:
          *(_BYTE *)(a1 + 64) |= 2u;
          uint64_t v59 = *((void *)this + 1);
          unsigned int v60 = *((void *)this + 2);
          char v61 = *(void *)this;
          if (v59 <= 0xFFFFFFFFFFFFFFF5LL && v59 + 10 <= v60)
          {
            unsigned int v62 = 0;
            unsigned int v63 = 0;
            char v64 = 0LL;
            do
            {
              char v65 = v59 + 1;
              *((void *)this + 1) = v59 + 1;
              uint64_t v66 = *(_BYTE *)(v61 + v59);
              v64 |= (unint64_t)(v66 & 0x7F) << v62;
              if ((v66 & 0x80) == 0) {
                goto LABEL_117;
              }
              v62 += 7;
              uint64_t v59 = v65;
              uint64_t v18 = v63++ > 8;
            }

            while (!v18);
LABEL_97:
            char v64 = 0LL;
            goto LABEL_117;
          }

          int v78 = 0;
          int v79 = 0;
          char v64 = 0LL;
          if (v60 <= v59) {
            unsigned int v60 = *((void *)this + 1);
          }
          while (2)
          {
            if (v60 == v59)
            {
              char v64 = 0LL;
              *((_BYTE *)this + 24) = 1;
            }

            else
            {
              int v80 = v59 + 1;
              int v81 = *(_BYTE *)(v61 + v59);
              *((void *)this + 1) = v80;
              v64 |= (unint64_t)(v81 & 0x7F) << v78;
              if (v81 < 0)
              {
                v78 += 7;
                uint64_t v59 = v80;
                uint64_t v18 = v79++ > 8;
                if (v18) {
                  goto LABEL_97;
                }
                continue;
              }

              if (*((_BYTE *)this + 24)) {
                char v64 = 0LL;
              }
            }

            break;
          }

        *(_DWORD *)(a1 + 56) = v47;
        goto LABEL_133;
      }

      if ((_DWORD)v27 == 2) {
        break;
      }
      if ((_DWORD)v27 == 1)
      {
        if ((_DWORD)v26 != 2)
        {
          char v65 = *(char **)(a1 + 16);
          char v64 = *(void *)(a1 + 24);
          if ((unint64_t)v65 >= v64)
          {
            uint64_t v73 = (char *)*v12;
            uint64_t v74 = (v65 - (_BYTE *)*v12) >> 3;
            char v75 = v74 + 1;
            if ((unint64_t)(v74 + 1) >> 61) {
LABEL_143:
            }
              sub_100007008();
            uint64_t v76 = v64 - (void)v73;
            if (v76 >> 2 > v75) {
              char v75 = v76 >> 2;
            }
            else {
              char v77 = v75;
            }
            if (v77)
            {
              int v78 = (char *)sub_1000071BC(v13, v77);
              uint64_t v73 = *(char **)(a1 + 8);
              char v65 = *(char **)(a1 + 16);
            }

            else
            {
              int v78 = 0LL;
            }

            int v85 = &v78[8 * v74];
            *(void *)int v85 = 0LL;
            uint64_t v66 = v85 + 8;
            while (v65 != v73)
            {
              unsigned int v86 = *((void *)v65 - 1);
              v65 -= 8;
              *((void *)v85 - 1) = v86;
              v85 -= 8;
            }

            *(void *)(a1 + 8) = v85;
            *(void *)(a1 + 16) = v66;
            *(void *)(a1 + 24) = &v78[8 * v77];
            if (v73) {
              operator delete(v73);
            }
          }

          else
          {
            *(void *)char v65 = 0LL;
            uint64_t v66 = v65 + 8;
          }

          *(void *)(a1 + 16) = v66;
LABEL_129:
          int v89 = *((void *)this + 1);
          if (v89 <= 0xFFFFFFFFFFFFFFF7LL && v89 + 8 <= *((void *)this + 2))
          {
            *(v66 - 1) = *(void *)(*(void *)this + v89);
            *((void *)this + 1) += 8LL;
          }

          else
          {
            *((_BYTE *)this + 24) = 1;
          }

          goto LABEL_133;
        }

        if ((PB::Reader::placeMark(this, v92, v26, a4) & 1) != 0) {
          return 0LL;
        }
        int v28 = *((void *)this + 1);
        char v29 = *((void *)this + 2);
        while (v28 < v29 && !*((_BYTE *)this + 24))
        {
          uint64_t v31 = *(char **)(a1 + 16);
          char v30 = *(void *)(a1 + 24);
          if ((unint64_t)v31 >= v30)
          {
            char v33 = (char *)*v12;
            int v34 = (v31 - (_BYTE *)*v12) >> 3;
            uint64_t v35 = v34 + 1;
            int v36 = v30 - (void)v33;
            if (v36 >> 2 > v35) {
              uint64_t v35 = v36 >> 2;
            }
            else {
              uint64_t v37 = v35;
            }
            if (v37)
            {
              int v38 = (char *)sub_1000071BC(v13, v37);
              char v33 = *(char **)(a1 + 8);
              uint64_t v31 = *(char **)(a1 + 16);
            }

            else
            {
              int v38 = 0LL;
            }

            int v39 = &v38[8 * v34];
            *(void *)int v39 = 0LL;
            int v32 = v39 + 8;
            while (v31 != v33)
            {
              uint64_t v40 = *((void *)v31 - 1);
              v31 -= 8;
              *((void *)v39 - 1) = v40;
              v39 -= 8;
            }

            *(void *)(a1 + 8) = v39;
            *(void *)(a1 + 16) = v32;
            *(void *)(a1 + 24) = &v38[8 * v37];
            if (v33) {
              operator delete(v33);
            }
          }

          else
          {
            *(void *)uint64_t v31 = 0LL;
            int v32 = v31 + 8;
          }

          *(void *)(a1 + 16) = v32;
          uint64_t v41 = *((void *)this + 1);
          if (v41 > 0xFFFFFFFFFFFFFFF7LL || v41 + 8 > *((void *)this + 2)) {
            goto LABEL_93;
          }
          *(v32 - 1) = *(void *)(*(void *)this + v41);
          char v29 = *((void *)this + 2);
          int v28 = *((void *)this + 1) + 8LL;
          *((void *)this + 1) = v28;
        }

LABEL_120:
  unsigned int v49 = *(_DWORD *)(a2 + 272);
  if (v49 >= 3) {
    sub_10122FB44();
  }
  *(_DWORD *)(a1 + 368) |= 0x10u;
  *(_DWORD *)(a1 + 272) = v49;
  int v36 = *(_DWORD *)(a2 + 368);
  if ((v36 & 0x20) == 0)
  {
LABEL_89:
    if ((v36 & 0x40) == 0) {
      goto LABEL_90;
    }
    goto LABEL_123;
  }

  objc_msgSend( v3,  "setObject:forKey:",  +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", self->_nDropout),  @"nDropout");
  has = self->_has;
  if ((*(_BYTE *)&has & 1) == 0)
  {
LABEL_98:
    if ((*(_DWORD *)&has & 0x40000) == 0) {
      goto LABEL_99;
    }
    goto LABEL_122;
  }

              uint64_t v1 = (uint64_t *)*v1;
              if (!v1) {
                goto LABEL_176;
              }
              goto LABEL_3;
            }

            uint64_t v184 = &off_1018920B8;
            uint64_t v185 = v180;
            uint64_t v188 = xmmword_1012E0070;
            uint64_t v189 = xmmword_1012E0070;
            uint64_t v190 = v180;
            uint64_t v191 = v180;
            uint64_t v192 = 0xBFF0000000000000LL;
            uint64_t v193 = 0;
            v194 = 0;
            uint64_t v195 = 0;
            if ((sub_1004CE2F8((uint64_t)(v8 + 7), (uint64_t)&v184) & 1) == 0)
            {
              if (qword_101934960 != -1) {
                dispatch_once(&qword_101934960, &stru_10186D380);
              }
              char v33 = (os_log_s *)qword_101934968;
              if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
              {
                *(_WORD *)buf = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEBUG,  "#fusion, hypotheses merging, inner loop get filter estimate failed.",  buf,  2u);
              }

              if (!sub_1002921D0(115, 2)) {
                goto LABEL_99;
              }
              bzero(buf, 0x65CuLL);
              if (qword_101934960 != -1) {
                dispatch_once(&qword_101934960, &stru_10186D380);
              }
              *(_WORD *)v204 = 0;
              LODWORD(v167) = 2;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "#fusion, hypotheses merging, inner loop get filter estimate failed.",  v204,  v167);
              int v36 = (uint8_t *)v96;
              sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL cllcf::CLLCFusion::performHypothesesMerging()", "%s\n", v96);
LABEL_104:
              if (v36 != buf) {
                free(v36);
              }
              goto LABEL_99;
            }

            uint64_t v182 = 0.0;
            uint64_t v183 = 0.0;
            uint64_t v25 = (double *)&v188 + 1;
            if ((sub_100D2E600(v178, &v183, &v182, v186, *v25) & 1) == 0)
            {
              if (qword_101934960 != -1) {
                dispatch_once(&qword_101934960, &stru_10186D380);
              }
              int v34 = (os_log_s *)qword_101934968;
              if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_ERROR))
              {
                *(_WORD *)buf = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_ERROR,  "#Error,fusion hypotheses merging, calc_dNdE failed.",  buf,  2u);
              }

              if (!sub_1002921D0(115, 0)) {
                goto LABEL_99;
              }
              bzero(buf, 0x65CuLL);
              if (qword_101934960 != -1) {
                dispatch_once(&qword_101934960, &stru_10186D380);
              }
              *(_WORD *)v204 = 0;
              LODWORD(v167) = 2;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  16LL,  "#Error,fusion hypotheses merging, calc_dNdE failed.",  v204,  v167);
              int v36 = (uint8_t *)v35;
              sub_10029211C("Generic", 1LL, 0, 0LL, "BOOL cllcf::CLLCFusion::performHypothesesMerging()", "%s\n", v35);
              goto LABEL_104;
            }

            int v27 = v186;
            *(double *)v26.i64 = v187 * 0.0174532925;
            int v28 = v198;
            char v29 = v199;
            v30.i64[1] = 0LL;
            v31.i64[1] = 0LL;
            if (fabs(v187 * 0.0174532925) <= 3.14159265)
            {
              int v32 = (int8x16_t)0x400921FB54442D18uLL;
            }

            else
            {
              uint64_t v170 = vbslq_s8(v176, (int8x16_t)0x400921FB54442D18uLL, v26);
              *(double *)v31.i64 = fmod(*(double *)v26.i64 + *(double *)v170.i64, 6.28318531);
              int v32 = (int8x16_t)0x400921FB54442D18uLL;
              v30.i64[1] = v170.i64[1];
              *(double *)v26.i64 = *(double *)v31.i64 - *(double *)v170.i64;
            }

            *(double *)v31.i64 = v29 * 0.0174532925;
            if (fabs(v29 * 0.0174532925) > *(double *)v32.i64)
            {
              uint64_t v169 = vbslq_s8(v176, v32, v31);
              uint64_t v171 = v26.i64[0];
              *(double *)v31.i64 = fmod(*(double *)v31.i64 + *(double *)v169.i64, 6.28318531);
              int v32 = (int8x16_t)0x400921FB54442D18uLL;
              v30.i64[1] = v169.i64[1];
              v26.i64[0] = v171;
              *(double *)v31.i64 = *(double *)v31.i64 - *(double *)v169.i64;
            }

            *(double *)v30.i64 = *(double *)v26.i64 - *(double *)v31.i64;
            if (vabdd_f64(*(double *)v26.i64, *(double *)v31.i64) > *(double *)v32.i64)
            {
              uint64_t v172 = *(double *)vbslq_s8(v176, v32, v30).i64;
              *(double *)v30.i64 = fmod(*(double *)v30.i64 + v172, 6.28318531) - v172;
            }

            uint64_t v37 = 1.0 / (*(double *)v200 * *(double *)v200 * 0.5 + *(double *)&v188 * *(double *)&v188 * 0.5);
            int v38 = (v27 - v28) * 0.0174532925 * v183 * ((v27 - v28) * 0.0174532925 * v183) * v37
                + *(double *)v30.i64
                * 57.2957795
                * 0.0174532925
                * v182
                * (*(double *)v30.i64
                 * 57.2957795
                 * 0.0174532925
                 * v182)
                * v37;
            if (v38 <= 6.18007) {
              break;
            }
          }
        }
      }

  uint64_t result = *(float *)(a2 + 196);
  v5 |= 0x4000000000uLL;
  *unsigned int v2 = v5;
  *(_BYTE *)(a1 + 324) = v6;
  *(float *)(a1 + 196) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x80000000) == 0)
  {
LABEL_55:
    if ((v7 & 0x2000000000LL) == 0) {
      goto LABEL_56;
    }
    goto LABEL_122;
  }

  PB::TextFormatter::format(this, "lgArclengthZBiggestImpact", *(float *)(a1 + 248));
  uint64_t v6 = *v5;
  uint64_t v7 = *(_BYTE *)(a1 + 324);
  if ((*v5 & 0x10000000000000LL) == 0)
  {
LABEL_54:
    if ((v6 & 0x20000000000000LL) == 0) {
      goto LABEL_55;
    }
    goto LABEL_122;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 196), 0x32u);
  uint64_t v6 = *v4;
  if ((*v4 & 0x80000000) == 0)
  {
LABEL_55:
    if ((v6 & 0x2000000000LL) == 0) {
      goto LABEL_56;
    }
    goto LABEL_122;
  }

  uint64_t result = *(float *)(a2 + 28);
  v5 |= 0x10uLL;
  *unsigned int v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 28) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 8) == 0)
  {
LABEL_47:
    if ((v4 & 0x800) == 0) {
      goto LABEL_48;
    }
    goto LABEL_122;
  }

  PB::TextFormatter::format(this, "isBaro", *(_BYTE *)(a1 + 272));
  uint64_t v6 = *v5;
  uint64_t v7 = *(_WORD *)(a1 + 288);
  if ((v7 & 0x20) == 0)
  {
LABEL_46:
    if ((v7 & 0x40) == 0) {
      goto LABEL_47;
    }
    goto LABEL_122;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56), 0x29u);
  uint64_t v5 = *v4;
  uint64_t v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x4000) == 0)
  {
LABEL_46:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_122;
  }

  uint64_t result = *(float *)(a2 + 296);
  int v8 = v6 >> 16;
  v6 |= 0x80uLL;
  *unsigned int v2 = v5;
  *(_BYTE *)(a1 + 326) = v8;
  *(_WORD *)(a1 + 324) = v6;
  *(float *)(a1 + 296) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x20000000) == 0)
  {
LABEL_40:
    if ((v4 & 0x100000000LL) == 0) {
      goto LABEL_41;
    }
    goto LABEL_122;
  }

  PB::TextFormatter::format(this, "kRegimeDeltaVThreshold1RO", *(float *)(a1 + 120));
  uint64_t v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x10000000) == 0)
  {
LABEL_39:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_122;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 296), 0xD2u);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x20000000) == 0)
  {
LABEL_40:
    if ((v5 & 0x100000000LL) == 0) {
      goto LABEL_41;
    }
    goto LABEL_122;
  }

  unsigned int v13 = *(_DWORD *)(a2 + 260);
  v5 |= 0x80000000000000uLL;
  *unsigned int v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 260) = v13;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x2000000) == 0)
  {
LABEL_15:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_122;
  }

  PB::TextFormatter::format(this, "hasSteps", *(_BYTE *)(a1 + 319));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x40000) == 0)
  {
LABEL_19:
    if ((v6 & 0x200) == 0) {
      goto LABEL_20;
    }
    goto LABEL_122;
  }

  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 260), 0xAu);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x2000000) == 0)
  {
LABEL_15:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_122;
  }

  unsigned int v49 = *(_DWORD *)(a2 + 68);
  v3 |= 0x800uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(_BYTE *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 68) = v49;
  uint64_t v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  unsigned int v2 = *(void *)(a2 + 204);
  if ((v2 & 0x80) == 0)
  {
LABEL_42:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_122;
  }

  PB::TextFormatter::format(this, "kMaxChaosRO1", *(float *)(a1 + 52));
  uint64_t v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x100) == 0)
  {
LABEL_41:
    if ((v5 & 0x200) == 0) {
      goto LABEL_42;
    }
    goto LABEL_122;
  }

  uint64_t result = PB::Writer::write(this, *(_BYTE *)(v3 + 173), 0x3FAu);
  uint64_t v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 0x40) == 0)
  {
LABEL_42:
    if ((v4 & 0x40000000000000LL) == 0) {
      goto LABEL_43;
    }
    goto LABEL_122;
  }

                *(void *)(a1 + 16) = v31;
              }

              else
              {
                uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
                if (!(_DWORD)result) {
                  return result;
                }
                unsigned int v2 = *((void *)this + 1);
              }

          uint64_t v4 = *((void *)this + 1);
          uint64_t v5 = *((void *)this + 2);
          uint64_t v6 = *((unsigned __int8 *)this + 24);
          if (v4 >= v5 || *((_BYTE *)this + 24)) {
            return v6 == 0;
          }
          break;
        case 4u:
          *(_BYTE *)(a1 + 72) |= 1u;
          uint64_t v56 = *((void *)this + 1);
          if (v56 > 0xFFFFFFFFFFFFFFF7LL || v56 + 8 > *((void *)this + 2)) {
            goto LABEL_117;
          }
          *(void *)(a1 + 56) = *(void *)(*(void *)this + v56);
          goto LABEL_119;
        default:
          if ((PB::Reader::skip(this, v17 >> 3, v17 & 7, 0) & 1) == 0) {
            return 0LL;
          }
          goto LABEL_120;
      }
    }

    uint64_t v21 = 0;
    int v22 = 0;
    uint64_t v17 = 0LL;
    if (v4 > v5) {
      uint64_t v5 = v4;
    }
    while (v5 != v4)
    {
      int v23 = v4 + 1;
      int v24 = *(_BYTE *)(v14 + v4);
      *((void *)this + 1) = v23;
      v17 |= (unint64_t)(v24 & 0x7F) << v21;
      if ((v24 & 0x80) == 0) {
        goto LABEL_21;
      }
      v21 += 7;
      uint64_t v4 = v23;
      if (v22++ >= 9)
      {
LABEL_20:
        uint64_t v17 = 0LL;
        goto LABEL_21;
      }
    }

    uint64_t v6 = 1;
    *((_BYTE *)this + 24) = 1;
  }

  return v6 == 0;
}

LABEL_92:
  if ((v36 & 0xFF00) == 0) {
    goto LABEL_137;
  }
  if ((v36 & 0x100) != 0)
  {
    uint64_t v52 = *(void *)(a2 + 248);
    *(_DWORD *)(a1 + 368) |= 0x100u;
    *(void *)(a1 + 248) = v52;
    int v36 = *(_DWORD *)(a2 + 368);
    if ((v36 & 0x200) == 0)
    {
LABEL_95:
      if ((v36 & 0x400) == 0) {
        goto LABEL_96;
      }
      goto LABEL_127;
    }
  }

  else if ((v36 & 0x200) == 0)
  {
    goto LABEL_95;
  }

  uint64_t v53 = *(void *)(a2 + 256);
  *(_DWORD *)(a1 + 368) |= 0x200u;
  *(void *)(a1 + 256) = v53;
  int v36 = *(_DWORD *)(a2 + 368);
  if ((v36 & 0x400) == 0)
  {
LABEL_96:
    if ((v36 & 0x800) == 0) {
      goto LABEL_97;
    }
    goto LABEL_128;
  }

  turn = self->_turn;
  if (turn >= 3) {
    char v15 = +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  self->_turn);
  }
  else {
    char v15 = (NSString *)*(&off_10182C408 + turn);
  }
  [v3 setObject:v15 forKey:@"turn"];
  has = (char)self->_has;
  if ((has & 0x40) == 0)
  {
LABEL_77:
    if ((has & 0x20) == 0) {
      goto LABEL_78;
    }
    goto LABEL_97;
  }

    sub_1002A5590(v71);
    return;
  }

  if (qword_101934970 != -1) {
    dispatch_once(&qword_101934970, &stru_101856D90);
  }
  uint64_t v5 = (os_log_s *)qword_101934978;
  if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *a3;
    LODWORD(buf[0].__r_.__value_.__l.__data_) = 67240192;
    HIDWORD(buf[0].__r_.__value_.__r.__words[0]) = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "#Warning Unknown range notification received, %{public}d",  (uint8_t *)buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101856D90);
    }
    uint64_t v7 = *a3;
    LODWORD(v76.__r_.__value_.__l.__data_) = 67240192;
    HIDWORD(v76.__r_.__value_.__r.__words[0]) = v7;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934978,  0LL,  "#Warning Unknown range notification received, %{public}d",  &v76,  8);
    uint64_t v9 = (std::stringbuf::string_type *)v8;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLRangingSubscription::onBTLERangeNotification(int, const CLBTLERangeManager_Type::Notification &, const CLBT LERangeManager_Type::NotificationData &)",  "%s\n",  v8);
    if (v9 != buf) {
      free(v9);
    }
  }

    v5[1542] = v14;
    v5[1543] = v15;
    *((double *)v5 + 772) = v16;
    *((void *)v5 + 775) = v105;
    *(_OWORD *)(v5 + 1546) = v104;
    *((double *)v5 + 776) = v18;
    *(_OWORD *)(v5 + 1554) = v103;
    *((double *)v5 + 779) = v19;
    uint64_t v40 = *(_OWORD *)&v113[16];
    *((_OWORD *)v5 + 390) = *(_OWORD *)v113;
    *((_OWORD *)v5 + 391) = v40;
    *((_BYTE *)v5 + 6272) = v114;
    uint64_t v41 = *(double *)(*(void *)(a1 + 3176) + 40LL);
    uint64_t v42 = *(double *)(a1 + 6384);
    unsigned int v43 = sub_100495E64((_DWORD *)(a1 + 5968));
    uint64_t v44 = v42 - v41;
    char v45 = *(_BYTE *)(a2 + 48) != 5 || v43;
    int v46 = *(double *)(a2 + 40);
    uint64_t v47 = *(double *)(a1 + 6144);
    uint64_t v48 = v46 - v47;
    if ((v45 & 1) != 0)
    {
      if (v46 - v47 >= 0.0)
      {
        *((_BYTE *)v5 + 808) = 1;
        goto LABEL_107;
      }
    }

    else if (v46 - v47 >= 0.0)
    {
      uint64_t v53 = fabs(v44);
      *((_BYTE *)v5 + 808) = v53 > 6.0;
      if (v53 <= 6.0)
      {
        uint64_t v52 = 0;
LABEL_114:
        unsigned int v57 = *(_DWORD *)(a1 + 6368);
        int v58 = sub_100869780(a1 + 4944);
        *((double *)v5 + 770) = sub_100A5D178(a1, v57, v58);
        uint64_t v59 = *(double *)(a1 + 6384);
        unsigned int v60 = (std::__shared_weak_count *)*((void *)v5 + 396);
        v102[0] = *((void **)v5 + 395);
        v102[1] = &v60->__vftable;
        if (v60)
        {
          p_shared_owners = (unint64_t *)&v60->__shared_owners_;
          do
            unsigned int v62 = __ldxr(p_shared_owners);
          while (__stxr(v62 + 1, p_shared_owners));
        }

        sub_100A5D428(v102, v59);
        if (v60)
        {
          unsigned int v63 = (unint64_t *)&v60->__shared_owners_;
          do
            char v64 = __ldaxr(v63);
          while (__stlxr(v64 - 1, v63));
          if (!v64)
          {
            ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
            std::__shared_weak_count::__release_weak(v60);
          }
        }

        sub_100A5D66C(*((void **)v5 + 395), a2);
        sub_100787B14((unsigned __int8 *)v5 + 6444, *(_BYTE *)(a2 + 48));
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_10186A5E8);
        }
        char v65 = (os_log_s *)p_vtable[269];
        if (os_log_type_enabled(v65, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v66 = *(void *)(a2 + 24);
          uint64_t v101 = v5;
          uint64_t v67 = sub_10099EBD8(*(char *)(a2 + 48));
          unsigned int v68 = *(void *)(*((void *)v5 + 395) + 24LL);
          uint64_t v69 = *(_DWORD *)(a1 + 6400);
          uint64_t v70 = *(_DWORD *)(a1 + 6404);
          uint64_t v71 = *(_DWORD *)(a1 + 6408);
          uint64_t v72 = sub_1004970A0((_DWORD *)(a1 + 5968));
          *(_DWORD *)buf = 134351106;
          *(void *)&uint8_t buf[4] = v66;
          *(_WORD *)&buf[12] = 2082;
          *(void *)&buf[14] = v67;
          uint64_t v132 = 1026;
          *(_DWORD *)unsigned int v133 = (int)v44;
          *(_WORD *)&v133[4] = 1026;
          *(_DWORD *)&v133[6] = v52;
          *(_WORD *)int v134 = 2050;
          *(void *)&v134[2] = v68;
          int v135 = 1026;
          uint64_t v136 = v69;
          v137 = 1026;
          v138 = v70;
          uint64_t v139 = 1026;
          uint64_t v140 = v71;
          uint64_t v141 = 2082;
          uint64_t v142 = v72;
          _os_log_impl( (void *)&_mh_execute_header,  v65,  OS_LOG_TYPE_DEFAULT,  "@WifiFlow, scanreply, aps, %{public}lu, type, %{public}s, lastused, %{public}d, use, %{public}d, history, %{ public}ld, lsbclients, %{public}d, %{public}d, %{public}d, reqtype, %{public}s",  buf,  0x48u);
          uint64_t v21 = (_DWORD *)(a1 + 5968);
          uint64_t v5 = v101;
          p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
        }

        if (!sub_1002921D0(115, 2)) {
          return;
        }
        bzero(buf, 0x65CuLL);
        uint64_t v73 = v52;
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_10186A5E8);
        }
        uint64_t v74 = v21;
        uint64_t v99 = p_vtable[269];
        char v75 = *(void *)(a2 + 24);
        uint64_t v76 = sub_10099EBD8(*(char *)(a2 + 48));
        char v77 = *(void *)(*((void *)v5 + 395) + 24LL);
        int v78 = *(_DWORD *)(a1 + 6400);
        int v79 = *(_DWORD *)(a1 + 6404);
        int v80 = *(_DWORD *)(a1 + 6408);
        int v81 = sub_1004970A0(v74);
        *(_DWORD *)uint64_t v126 = 134351106;
        *(void *)&v126[4] = v75;
        *(_WORD *)&v126[12] = 2082;
        *(void *)&v126[14] = v76;
        *(_WORD *)&v126[22] = 1026;
        *(_DWORD *)uint64_t v127 = (int)v44;
        *(_WORD *)&v127[4] = 1026;
        *(_DWORD *)&v127[6] = v73;
        *(_WORD *)&v127[10] = 2050;
        *(void *)&v127[12] = v77;
        *(_WORD *)&v127[20] = 1026;
        *(_DWORD *)&v127[22] = v78;
        *(_WORD *)&v127[26] = 1026;
        *(_DWORD *)&v127[28] = v79;
        *(_WORD *)&v127[32] = 1026;
        *(_DWORD *)&v127[34] = v80;
        *(_WORD *)&v127[38] = 2082;
        *(void *)&uint64_t v128 = v81;
        LODWORD(v98) = 72;
        uint64_t v12 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v99,  0LL,  "@WifiFlow, scanreply, aps, %{public}lu, type, %{public}s, lastused, %{public}d, use, %{public}d, history, %{public}ld, lsbclients, %{public}d, %{public}d, %{public}d, reqtype, %{public}s",  v126,  v98);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Wifi::Scan &) const",  "%s\n",  v12);
LABEL_131:
        if (v12 != buf) {
          free(v12);
        }
        return;
      }

  uint64_t v25 = *(void *)(v5 + 184);
  if (!v25) {
    uint64_t v25 = *(void *)(qword_1019A1D48 + 184);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x32,  v25,  a2,  a4);
  uint64_t v6 = *(_DWORD *)(v5 + 224);
  if ((v6 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_98;
  }

  uint64_t v6 = 0LL;
LABEL_93:
  if (v52)
  {
    uint64_t v42 = (unint64_t *)&v52->__shared_owners_;
    do
      unsigned int v43 = __ldaxr(v42);
    while (__stlxr(v43 - 1, v42));
    if (!v43)
    {
      ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
      std::__shared_weak_count::__release_weak(v52);
    }
  }

  sub_100890314(&v53);
  return v6;
}

  uint64_t result = *(float *)(a2 + 124);
  v3 |= 0x4000000uLL;
  *(void *)(a1 + 216) = v3;
  *(float *)(a1 + 124) = result;
  unsigned int v2 = *(void *)(a2 + 216);
  if ((v2 & 0x8000000) == 0)
  {
LABEL_46:
    if ((v2 & 0x20) == 0) {
      goto LABEL_47;
    }
    goto LABEL_94;
  }

  PB::TextFormatter::format(this, "xZCTime", *(float *)(a1 + 180));
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x20000000000LL) == 0)
  {
LABEL_43:
    if ((v5 & 0x40000000000LL) == 0) {
      goto LABEL_44;
    }
    goto LABEL_94;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 128), 0x2Au);
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x20) == 0)
  {
LABEL_44:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_94;
  }

  uint64_t result = *(float *)(a2 + 120);
  v5 |= 0x80000uLL;
  *unsigned int v2 = v5;
  *(_BYTE *)(a1 + 324) = v6;
  *(float *)(a1 + 120) = result;
  uint64_t v7 = *v3;
  uint64_t v4 = *(_BYTE *)(a2 + 324);
  if ((*v3 & 0x800) == 0)
  {
LABEL_27:
    if ((v7 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_94;
  }

  PB::TextFormatter::format(this, "epochFirstTimestamp", *(void *)(a1 + 16));
  uint64_t v6 = *v5;
  uint64_t v7 = *(_BYTE *)(a1 + 324);
  if ((*v5 & 4) == 0)
  {
LABEL_26:
    if ((v6 & 8) == 0) {
      goto LABEL_27;
    }
    goto LABEL_94;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 120), 0x16u);
  uint64_t v6 = *v4;
  uint64_t v5 = *((_BYTE *)v4 + 8);
  if ((*v4 & 0x800) == 0)
  {
LABEL_27:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_94;
  }

  uint64_t result = *(float *)(a2 + 120);
  v5 |= 0x8000000uLL;
  *unsigned int v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 120) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x100000000LL) == 0)
  {
LABEL_19:
    if ((v4 & 0x10000000000000LL) == 0) {
      goto LABEL_20;
    }
    goto LABEL_94;
  }

  PB::TextFormatter::format(this, "audioDvMaxRmsThresholdMin", *(float *)(a1 + 64));
  uint64_t v6 = *v5;
  uint64_t v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x4000) == 0)
  {
LABEL_18:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_94;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 100), 0xDu);
  uint64_t v5 = *v4;
  uint64_t v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x8000000) == 0)
  {
LABEL_18:
    if ((v5 & 0x100000000LL) == 0) {
      goto LABEL_19;
    }
    goto LABEL_94;
  }

  uint64_t v12 = *(_BYTE *)(a2 + 306);
  unsigned int v13 = v6 >> 16;
  v6 |= 0x800uLL;
  *unsigned int v2 = v5;
  *(_BYTE *)(a1 + 326) = v13;
  *(_WORD *)(a1 + 324) = v6;
  *(_BYTE *)(a1 + 306) = v12;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*(_WORD *)(a2 + 324) & 0x8000) == 0)
  {
LABEL_12:
    if ((v8 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_94;
  }

  PB::TextFormatter::format(this, "detectorRegime", *(_DWORD *)(a1 + 36));
  uint64_t v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*(_WORD *)(a1 + 324) & 0x200) == 0)
  {
LABEL_11:
    if ((v7 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_94;
  }

  uint64_t result = PB::Writer::write(this, *(_BYTE *)(v3 + 306), 0x68u);
  uint64_t v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((v4[1] & 0x8000) == 0)
  {
LABEL_12:
    if ((v7 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_94;
  }

  char v15 = *(_DWORD *)(a2 + 96);
  v3 |= 0x40000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(_BYTE *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 96) = v15;
  uint64_t v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  unsigned int v2 = *(void *)(a2 + 204);
  if ((v2 & 0x40000000) == 0)
  {
LABEL_14:
    if ((v2 & 0x400000000000LL) == 0) {
      goto LABEL_15;
    }
    goto LABEL_94;
  }

  PB::TextFormatter::format(this, "chaosOrSaturationMet2", *(_BYTE *)(a1 + 163));
  uint64_t v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x20000000000LL) == 0)
  {
LABEL_13:
    if ((v5 & 0x40000000000LL) == 0) {
      goto LABEL_14;
    }
    goto LABEL_94;
  }

  uint64_t result = PB::Writer::write(this, *(_BYTE *)(v3 + 156), 0x6Du);
  uint64_t v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 0x2000) == 0)
  {
LABEL_14:
    if ((v4 & 0x2000000000LL) == 0) {
      goto LABEL_15;
    }
    goto LABEL_94;
  }

  uint64_t result = *(float *)(a2 + 60);
  v3 |= 0x200uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 60) = result;
  unsigned int v2 = *(void *)(a2 + 172);
  if ((v2 & 0x400) == 0)
  {
LABEL_49:
    if ((v2 & 0x800) == 0) {
      return result;
    }
LABEL_94:
    uint64_t result = *(float *)(a2 + 68);
    *(void *)(a1 + 172) = v3 | 0x800;
    *(float *)(a1 + 68) = result;
    return result;
  }

  PB::TextFormatter::format(this, "thresholdSaturationTime", *(float *)(a1 + 152));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 4) != 0) {
    goto LABEL_93;
  }
LABEL_46:
  if ((v5 & 8) != 0) {
LABEL_47:
  }
    PB::TextFormatter::format(this, "triggerTimestamp", *(void *)(a1 + 32));
  return PB::TextFormatter::endObject(this);
}

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 64), 0xD5u);
  if ((*(void *)(v3 + 172) & 0x800) != 0) {
    return PB::Writer::write(this, *(float *)(v3 + 68), 0xD6u);
  }
  return result;
}

        *(_DWORD *)(a1 + 92) = v43;
        goto LABEL_97;
      case 0xDu:
        *(_WORD *)(a1 + 100) |= 0x100u;
        int v46 = *((void *)this + 1);
        uint64_t v47 = *((void *)this + 2);
        uint64_t v48 = *(void *)this;
        if (v46 <= 0xFFFFFFFFFFFFFFF5LL && v46 + 10 <= v47)
        {
          unsigned int v49 = 0;
          uint64_t v50 = 0;
          uint64_t v51 = 0LL;
          do
          {
            uint64_t v52 = v46 + 1;
            *((void *)this + 1) = v46 + 1;
            uint64_t v53 = *(_BYTE *)(v48 + v46);
            v51 |= (unint64_t)(v53 & 0x7F) << v49;
            if ((v53 & 0x80) == 0) {
              goto LABEL_96;
            }
            v49 += 7;
            int v46 = v52;
            int v14 = v50++ > 8;
          }

          while (!v14);
LABEL_86:
          LODWORD(v51) = 0;
          goto LABEL_96;
        }

        int v58 = 0;
        uint64_t v59 = 0;
        uint64_t v51 = 0LL;
        if (v47 <= v46) {
          uint64_t v47 = *((void *)this + 1);
        }
        while (2)
        {
          if (v47 == v46)
          {
            LODWORD(v51) = 0;
            *((_BYTE *)this + 24) = 1;
          }

          else
          {
            unsigned int v60 = v46 + 1;
            char v61 = *(_BYTE *)(v48 + v46);
            *((void *)this + 1) = v60;
            v51 |= (unint64_t)(v61 & 0x7F) << v58;
            if (v61 < 0)
            {
              v58 += 7;
              int v46 = v60;
              int v14 = v59++ > 8;
              if (v14) {
                goto LABEL_86;
              }
              continue;
            }

            if (*((_BYTE *)this + 24)) {
              LODWORD(v51) = 0;
            }
          }

          break;
        }

            PB::Reader::recallMark(this, v89);
          }

          else
          {
            uint64_t v70 = *(char **)(a1 + 40);
            uint64_t v69 = *(void *)(a1 + 48);
            if ((unint64_t)v70 >= v69)
            {
              char v77 = (char *)*v10;
              int v78 = (v70 - (_BYTE *)*v10) >> 2;
              int v79 = v78 + 1;
              if ((unint64_t)(v78 + 1) >> 62) {
LABEL_138:
              }
                sub_100007008();
              int v80 = v69 - (void)v77;
              if (v80 >> 1 > v79) {
                int v79 = v80 >> 1;
              }
              else {
                int v81 = v79;
              }
              if (v81)
              {
                uint64_t v82 = (char *)sub_10000956C(v11, v81);
                char v77 = *(char **)(a1 + 32);
                uint64_t v70 = *(char **)(a1 + 40);
              }

              else
              {
                uint64_t v82 = 0LL;
              }

              int v85 = &v82[4 * v78];
              *(_DWORD *)int v85 = 0;
              unsigned int v68 = v85 + 4;
              while (v70 != v77)
              {
                unsigned int v86 = *((_DWORD *)v70 - 1);
                v70 -= 4;
                *((_DWORD *)v85 - 1) = v86;
                v85 -= 4;
              }

              *(void *)(a1 + 32) = v85;
              *(void *)(a1 + 40) = v68;
              *(void *)(a1 + 48) = &v82[4 * v81];
              if (v77) {
                operator delete(v77);
              }
            }

            else
            {
              *(_DWORD *)uint64_t v70 = 0;
              unsigned int v68 = v70 + 4;
            }

            *(void *)(a1 + 40) = v68;
LABEL_123:
            int v87 = *((void *)this + 1);
            if (v87 <= 0xFFFFFFFFFFFFFFFBLL && v87 + 4 <= *((void *)this + 2))
            {
              *(v68 - 1) = *(_DWORD *)(*(void *)this + v87);
LABEL_127:
              int v28 = *((void *)this + 1) + 4LL;
LABEL_128:
              *((void *)this + 1) = v28;
            }

            else
            {
LABEL_125:
              *((_BYTE *)this + 24) = 1;
            }
          }

  unsigned int v43 = *(_DWORD *)(a2 + 140);
  v3 |= (unint64_t)&_mh_execute_header;
  *(void *)(result + 188) = v3;
  *(_DWORD *)(result + 140) = v43;
  unsigned int v2 = *(void *)(a2 + 188);
  if ((v2 & 0x200000000LL) == 0)
  {
LABEL_45:
    if ((v2 & 0x1000000000000LL) == 0) {
      goto LABEL_46;
    }
    goto LABEL_94;
  }

  PB::TextFormatter::format(this, "srcYawRotationMaximaBaseline", *(float *)(a1 + 144));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 1) == 0)
  {
LABEL_42:
    if ((v5 & 0x400000000LL) == 0) {
      goto LABEL_43;
    }
    goto LABEL_94;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 144), 0x29u);
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x1000000000000LL) == 0)
  {
LABEL_43:
    if ((v4 & 0x80000000000LL) == 0) {
      goto LABEL_44;
    }
    goto LABEL_94;
  }

LABEL_129:
  uint64_t v56 = *(void *)(a2 + 280);
  *(_DWORD *)(a1 + 368) |= 0x1000u;
  *(void *)(a1 + 280) = v56;
  int v36 = *(_DWORD *)(a2 + 368);
  if ((v36 & 0x4000) == 0)
  {
LABEL_99:
    if ((v36 & 0x8000) == 0) {
      goto LABEL_137;
    }
    goto LABEL_132;
  }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Core/ClientManagement/CLClientManager_Unified.mm",  v32,  "updateClientServiceSessionInfo");
    __break(1u);
  }

  uint64_t v117 = a1 + 3208;
  uint64_t v118 = sub_100B83D5C(a1 + 3208);
  LOBYTE(v313) = 0;
  v314 = 0;
  buf[0] = 0;
  v374 = 0;
  if (v118)
  {
    uint64_t v119 = sub_100F4BF44();
    if (sub_100F4C51C((uint64_t)v119))
    {
      sub_1009CDF88(__src);
      uint64_t v120 = *(void *)__src;
      uint64_t v121 = nullsub_10(a1 + 3208);
      sub_1009CE434(v120, (uint64_t)v319, v121);
      uint64_t v122 = *(std::__shared_weak_count **)&__src[8];
      if (*(void *)&__src[8])
      {
        uint64_t v123 = (unint64_t *)(*(void *)&__src[8] + 8LL);
        do
          uint64_t v124 = __ldaxr(v123);
        while (__stlxr(v124 - 1, v123));
        if (!v124)
        {
          ((void (*)(std::__shared_weak_count *))v122->__on_zero_shared)(v122);
          std::__shared_weak_count::__release_weak(v122);
        }
      }
    }

    v314 = 1;
    v313 = sub_1005B46E8(a1 + 3208);
    v374 = *(_BYTE *)(a1 + 1400);
    uint64_t v125 = *(_OWORD *)(a1 + 1384);
    v372 = *(_OWORD *)(a1 + 1368);
    v373 = v125;
    uint64_t v126 = *(_OWORD *)(a1 + 1320);
    *(_OWORD *)buf = *(_OWORD *)(a1 + 1304);
    v369 = v126;
    uint64_t v127 = *(_OWORD *)(a1 + 1336);
    v371 = *(_OWORD *)(a1 + 1352);
    v370 = v127;
LABEL_137:
    sub_100F76854(v364);
    sub_1010DDBC0(v367, "Wifi1");
    sub_100B7779C(__src, &v313, buf, v364, a1 + 6472, v367, a1 + 3328);
    if ((v367[23] & 0x80000000) != 0) {
      operator delete(*(void **)v367);
    }
    uint64_t v128 = *(std::__shared_weak_count **)&v364[8];
    if (*(void *)&v364[8])
    {
      uint64_t v129 = (unint64_t *)(*(void *)&v364[8] + 8LL);
      do
        uint64_t v130 = __ldaxr(v129);
      while (__stlxr(v130 - 1, v129));
      if (!v130)
      {
        ((void (*)(std::__shared_weak_count *))v128->__on_zero_shared)(v128);
        std::__shared_weak_count::__release_weak(v128);
      }
    }

    sub_100B7AE6C((uint64_t)__src, v319);
    sub_100B7B6FC((uint64_t)__src);
    sub_10068C0F8((uint64_t)__src);
    goto LABEL_175;
  }

  uint64_t v131 = sub_100231608() ^ 1;
  if (!v113) {
    LOBYTE(v131) = 1;
  }
  [v113 fetchAllEntries];
  sub_10068AE30(*(void **)(a1 + 3160), (uint64_t)__src);
  v313 = sub_100CFCB2C(__src, (uint64_t *)v367);
  v314 = v132;
  sub_100019CEC((uint64_t)__src);
  if (!v314)
  {
    ++*(_DWORD *)(*(void *)(a3 + 6424) + 232LL);
    *(void *)__src = v367;
    sub_10068CDBC((void ***)__src);
LABEL_169:
    if (v314)
    {
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101848798);
      }
      uint64_t v136 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)__src = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v136,  OS_LOG_TYPE_FAULT,  "WifiCalc, error, associated AP mac is available but unassociated",  __src,  2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(__src, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101848798);
        }
        *(_WORD *)v367 = 0;
        LODWORD(v229) = 2;
        v216 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __src,  1628LL,  &_mh_execute_header,  qword_101934858,  17LL,  "WifiCalc, error, associated AP mac is available but unassociated",  v367,  v229);
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CL::Wifi1::Policies::PositionCalculation::HandleEvent::updateSingleShotLocation(const char *, Output &) const",  "%s\n",  v216);
        if (v216 != __src) {
          free(v216);
        }
      }
    }

    goto LABEL_175;
  }

  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101848798);
  }
  unsigned int v133 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    sub_1007EC360((std::string *)__src);
    int v134 = __src[23] >= 0 ? __src : *(_BYTE **)__src;
    *(_DWORD *)v364 = 136380675;
    *(void *)&v364[4] = v134;
    _os_log_impl( (void *)&_mh_execute_header,  v133,  OS_LOG_TYPE_DEFAULT,  "WifiCalc, selected associated AP %{private}s",  v364,  0xCu);
    if ((__src[23] & 0x80000000) != 0) {
      operator delete(*(void **)__src);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__src, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101848798);
    }
    v223 = qword_101934858;
    sub_1007EC360((std::string *)v364);
    if ((SBYTE7(v365) & 0x80u) == 0) {
      v224 = v364;
    }
    else {
      v224 = *(uint8_t **)v364;
    }
    *(_DWORD *)v356 = 136380675;
    *(void *)&v356[4] = v224;
    LODWORD(v229) = 12;
    v225 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __src,  1628LL,  &_mh_execute_header,  v223,  0LL,  "WifiCalc, selected associated AP %{private}s",  v356,  v229);
    if (SBYTE7(v365) < 0) {
      operator delete(*(void **)v364);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CL::Wifi1::Policies::PositionCalculation::HandleEvent::updateSingleShotLocation(const char *, Output &) const",  "%s\n",  v225);
    if (v225 != __src) {
      free(v225);
    }
  }

  ++*(_DWORD *)(*(void *)(a3 + 6424) + 228LL);
  if (v374) {
    v374 = 0;
  }
  *(void *)__src = v367;
  sub_10068CDBC((void ***)__src);
  if (v314) {
    goto LABEL_137;
  }
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101848798);
  }
  int v135 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_FAULT))
  {
    *(_WORD *)__src = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v135,  OS_LOG_TYPE_FAULT,  "WifiCalc, error, associated AP mac is unavailable but associated",  __src,  2u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(__src, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101848798);
    }
    *(_WORD *)v367 = 0;
    LODWORD(v229) = 2;
    v228 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __src,  1628LL,  &_mh_execute_header,  qword_101934858,  17LL,  "WifiCalc, error, associated AP mac is unavailable but associated",  v367,  v229);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CL::Wifi1::Policies::PositionCalculation::HandleEvent::updateSingleShotLocation(const char *, Output &) const",  "%s\n",  v228);
    if (v228 != __src) {
      free(v228);
    }
  }

    dispatch_once(&qword_101934860, &stru_1018820E8);
    goto LABEL_35;
  }

            PB::Reader::recallMark(this, v140);
          }

          else
          {
            uint64_t v101 = *(char **)(a1 + 16);
            uint64_t v100 = *(void *)(a1 + 24);
            if ((unint64_t)v101 >= v100)
            {
              uint64_t v120 = (char *)*v10;
              uint64_t v121 = (v101 - (_BYTE *)*v10) >> 2;
              uint64_t v122 = v121 + 1;
              if ((unint64_t)(v121 + 1) >> 62) {
LABEL_218:
              }
                sub_100007008();
              uint64_t v123 = v100 - (void)v120;
              if (v123 >> 1 > v122) {
                uint64_t v122 = v123 >> 1;
              }
              else {
                uint64_t v124 = v122;
              }
              if (v124)
              {
                uint64_t v125 = (char *)sub_10000956C(v139, v124);
                uint64_t v120 = *(char **)(a1 + 8);
                uint64_t v101 = *(char **)(a1 + 16);
              }

              else
              {
                uint64_t v125 = 0LL;
              }

              uint64_t v132 = &v125[4 * v121];
              *(_DWORD *)uint64_t v132 = 0;
              unsigned int v95 = v132 + 4;
              while (v101 != v120)
              {
                unsigned int v133 = *((_DWORD *)v101 - 1);
                v101 -= 4;
                *((_DWORD *)v132 - 1) = v133;
                v132 -= 4;
              }

              *(void *)(a1 + 8) = v132;
              *(void *)(a1 + 16) = v95;
              *(void *)(a1 + 24) = &v125[4 * v124];
              if (v120) {
                operator delete(v120);
              }
            }

            else
            {
              *(_DWORD *)uint64_t v101 = 0;
              unsigned int v95 = v101 + 4;
            }

            *(void *)(a1 + 16) = v95;
LABEL_202:
            int v134 = *((void *)this + 1);
            if (v134 <= 0xFFFFFFFFFFFFFFFBLL && v134 + 4 <= *((void *)this + 2))
            {
              *(v95 - 1) = *(_DWORD *)(*(void *)this + v134);
              int v28 = *((void *)this + 1) + 4LL;
LABEL_206:
              *((void *)this + 1) = v28;
            }

            else
            {
LABEL_204:
              *((_BYTE *)this + 24) = 1;
            }
          }

  uint64_t result = *(float *)(a2 + 212);
  v5 |= 0x40000000000uLL;
  *unsigned int v2 = v5;
  *(_BYTE *)(a1 + 324) = v6;
  *(float *)(a1 + 212) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x40000) == 0)
  {
LABEL_64:
    if ((v7 & 0x80000000000000LL) == 0) {
      goto LABEL_65;
    }
    goto LABEL_131;
  }

  PB::TextFormatter::format(this, "lgDeltaVZOverEpoch", *(float *)(a1 + 284));
  uint64_t v6 = *v5;
  uint64_t v7 = *(_BYTE *)(a1 + 324);
  if ((*v5 & 0x2000000000000000LL) == 0)
  {
LABEL_63:
    if ((v6 & 0x4000000000000000LL) == 0) {
      goto LABEL_64;
    }
    goto LABEL_131;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 212), 0x3Bu);
  uint64_t v6 = *v4;
  if ((*v4 & 0x40000) == 0)
  {
LABEL_64:
    if ((v6 & 0x80000000000000LL) == 0) {
      goto LABEL_65;
    }
    goto LABEL_131;
  }

  uint64_t result = *(float *)(a2 + 160);
  v5 |= 0x2000000000uLL;
  *unsigned int v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 160) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x4000000) == 0)
  {
LABEL_56:
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_131;
  }

  PB::TextFormatter::format(this, "lowSenseWithAudioDeltaVThreshold2", *(float *)(a1 + 172));
  uint64_t v6 = *v5;
  uint64_t v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x20000000000LL) == 0)
  {
LABEL_55:
    if ((v6 & 0x40000000000LL) == 0) {
      goto LABEL_56;
    }
    goto LABEL_131;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 136), 0x32u);
  uint64_t v5 = *v4;
  uint64_t v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x1000000000LL) == 0)
  {
LABEL_55:
    if ((v5 & 0x4000000000LL) == 0) {
      goto LABEL_56;
    }
    goto LABEL_131;
  }

  uint64_t result = *(float *)(a2 + 64);
  v5 |= 0x2000uLL;
  *unsigned int v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(_BYTE *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 64) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x80) == 0)
  {
LABEL_49:
    if ((v4 & 0x800) == 0) {
      goto LABEL_50;
    }
    goto LABEL_131;
  }

  PB::TextFormatter::format(this, "kRegimeDvThreshold2ROWOASF", *(float *)(a1 + 156));
  uint64_t v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x2000000000LL) == 0)
  {
LABEL_48:
    if ((v6 & 0x4000000000LL) == 0) {
      goto LABEL_49;
    }
    goto LABEL_131;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 64), 0xEFu);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x80) == 0)
  {
LABEL_49:
    if ((v5 & 0x800) == 0) {
      goto LABEL_50;
    }
    goto LABEL_131;
  }

  uint64_t v18 = *(_DWORD *)(a2 + 300);
  v6 |= 2uLL;
  *unsigned int v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 300) = v18;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x80) == 0)
  {
LABEL_24:
    if ((v4 & 1) == 0) {
      goto LABEL_25;
    }
    goto LABEL_131;
  }

  PB::TextFormatter::format(this, "isHighSpeedDetectedOverWindow", *(_BYTE *)(a1 + 327));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x20000) == 0)
  {
LABEL_28:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_131;
  }

  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 300), 0x13u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x80) == 0)
  {
LABEL_24:
    if ((v5 & 1) == 0) {
      goto LABEL_25;
    }
    goto LABEL_131;
  }

  unsigned int v60 = *(void *)(a2 + 32);
  v3 |= 8uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(_BYTE *)(result + 214) = BYTE2(v4);
  *(void *)(result + 32) = v60;
  uint64_t v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  unsigned int v2 = *(void *)(a2 + 204);
  if ((v2 & 0x10000000) == 0)
  {
LABEL_51:
    if ((v2 & 0x1000000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_131;
  }

  PB::TextFormatter::format(this, "kMaxSaturationRO2", *(float *)(a1 + 88));
  uint64_t v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((*(_WORD *)(a1 + 212) & 2) == 0)
  {
LABEL_50:
    if ((v6 & 4) == 0) {
      goto LABEL_51;
    }
    goto LABEL_131;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 148), 0x453u);
  uint64_t v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x800000000000LL) == 0)
  {
LABEL_51:
    if ((v4 & 0x800000000LL) == 0) {
      goto LABEL_52;
    }
    goto LABEL_131;
  }

          uint64_t v4 = *((void *)this + 1);
          uint64_t v5 = *((void *)this + 2);
          uint64_t v6 = *((unsigned __int8 *)this + 24);
          if (v4 >= v5 || *((_BYTE *)this + 24)) {
            return v6 == 0;
          }
          break;
        case 4u:
          *(_BYTE *)(a1 + 72) |= 2u;
          unsigned int v57 = *((void *)this + 1);
          if (v57 > 0xFFFFFFFFFFFFFFFBLL || v57 + 4 > *((void *)this + 2)) {
            goto LABEL_125;
          }
          *(_DWORD *)(a1 + 64) = *(_DWORD *)(*(void *)this + v57);
          goto LABEL_127;
        case 5u:
          *(_BYTE *)(a1 + 72) |= 8u;
          int v58 = *((void *)this + 1);
          if (v58 >= *((void *)this + 2))
          {
            char v61 = 0;
            *((_BYTE *)this + 24) = 1;
          }

          else
          {
            uint64_t v59 = v58 + 1;
            unsigned int v60 = *(unsigned __int8 *)(*(void *)this + v58);
            *((void *)this + 1) = v59;
            char v61 = v60 != 0;
          }

          *(_BYTE *)(a1 + 69) = v61;
          goto LABEL_129;
        case 6u:
          *(_BYTE *)(a1 + 72) |= 4u;
          unsigned int v62 = *((void *)this + 1);
          if (v62 >= *((void *)this + 2))
          {
            char v65 = 0;
            *((_BYTE *)this + 24) = 1;
          }

          else
          {
            unsigned int v63 = v62 + 1;
            char v64 = *(unsigned __int8 *)(*(void *)this + v62);
            *((void *)this + 1) = v63;
            char v65 = v64 != 0;
          }

          *(_BYTE *)(a1 + 68) = v65;
          goto LABEL_129;
        default:
          if ((PB::Reader::skip(this, v17 >> 3, v17 & 7, 0) & 1) == 0) {
            return 0LL;
          }
          goto LABEL_129;
      }
    }

    uint64_t v21 = 0;
    int v22 = 0;
    uint64_t v17 = 0LL;
    if (v4 > v5) {
      uint64_t v5 = v4;
    }
    while (v5 != v4)
    {
      int v23 = v4 + 1;
      int v24 = *(_BYTE *)(v14 + v4);
      *((void *)this + 1) = v23;
      v17 |= (unint64_t)(v24 & 0x7F) << v21;
      if ((v24 & 0x80) == 0) {
        goto LABEL_21;
      }
      v21 += 7;
      uint64_t v4 = v23;
      if (v22++ >= 9)
      {
LABEL_20:
        uint64_t v17 = 0LL;
        goto LABEL_21;
      }
    }

    uint64_t v6 = 1;
    *((_BYTE *)this + 24) = 1;
  }

  return v6 == 0;
}

          uint64_t v4 = *((void *)this + 1);
          uint64_t v5 = *((void *)this + 2);
          uint64_t v6 = *((unsigned __int8 *)this + 24);
          if (v4 >= v5 || v6 != 0) {
            return v6 == 0;
          }
          break;
        case 4u:
          *(_BYTE *)(a1 + 64) |= 1u;
          uint64_t v51 = *((void *)this + 1);
          uint64_t v52 = *((void *)this + 2);
          uint64_t v53 = *(void *)this;
          if (v51 <= 0xFFFFFFFFFFFFFFF5LL && v51 + 10 <= v52)
          {
            char v54 = 0;
            uint64_t v55 = 0;
            uint64_t v56 = 0LL;
            do
            {
              unsigned int v57 = v51 + 1;
              *((void *)this + 1) = v51 + 1;
              int v58 = *(_BYTE *)(v53 + v51);
              v56 |= (unint64_t)(v58 & 0x7F) << v54;
              if ((v58 & 0x80) == 0) {
                goto LABEL_114;
              }
              v54 += 7;
              uint64_t v51 = v57;
              uint64_t v18 = v55++ > 8;
            }

            while (!v18);
LABEL_90:
            uint64_t v56 = 0LL;
            goto LABEL_114;
          }

          uint64_t v74 = 0;
          char v75 = 0;
          uint64_t v56 = 0LL;
          if (v52 <= v51) {
            uint64_t v52 = *((void *)this + 1);
          }
          while (2)
          {
            if (v52 == v51)
            {
              uint64_t v56 = 0LL;
              *((_BYTE *)this + 24) = 1;
            }

            else
            {
              uint64_t v76 = v51 + 1;
              char v77 = *(_BYTE *)(v53 + v51);
              *((void *)this + 1) = v76;
              v56 |= (unint64_t)(v77 & 0x7F) << v74;
              if (v77 < 0)
              {
                v74 += 7;
                uint64_t v51 = v76;
                uint64_t v18 = v75++ > 8;
                if (v18) {
                  goto LABEL_90;
                }
                continue;
              }

              if (*((_BYTE *)this + 24)) {
                uint64_t v56 = 0LL;
              }
            }

            break;
          }

LABEL_137:
  if ((v36 & 0xFF0000) == 0) {
    goto LABEL_154;
  }
  if ((v36 & 0x10000) != 0)
  {
    unsigned int v60 = *(_DWORD *)(a2 + 316);
    if (v60 >= 3) {
      sub_10122FAF4();
    }
    *(_DWORD *)(a1 + 368) |= 0x10000u;
    *(_DWORD *)(a1 + 316) = v60;
    int v36 = *(_DWORD *)(a2 + 368);
  }

  if ((v36 & 0x20000) != 0)
  {
    uint64_t v66 = *(void *)(a2 + 328);
    *(_DWORD *)(a1 + 368) |= 0x20000u;
    *(void *)(a1 + 328) = v66;
    int v36 = *(_DWORD *)(a2 + 368);
    if ((v36 & 0x40000) == 0)
    {
LABEL_143:
      if ((v36 & 0x80000) == 0) {
        goto LABEL_144;
      }
LABEL_159:
      unsigned int v68 = *(_DWORD *)(a2 + 344);
      if (v68 >= 4) {
        sub_10122FACC();
      }
      *(_DWORD *)(a1 + 368) |= 0x80000u;
      *(_DWORD *)(a1 + 344) = v68;
      int v36 = *(_DWORD *)(a2 + 368);
      if ((v36 & 0x100000) == 0) {
        goto LABEL_146;
      }
      goto LABEL_145;
    }
  }

  else if ((v36 & 0x40000) == 0)
  {
    goto LABEL_143;
  }

  uint64_t v67 = *(void *)(a2 + 336);
  *(_DWORD *)(a1 + 368) |= 0x40000u;
  *(void *)(a1 + 336) = v67;
  int v36 = *(_DWORD *)(a2 + 368);
  if ((v36 & 0x80000) != 0) {
    goto LABEL_159;
  }
LABEL_144:
  if ((v36 & 0x100000) != 0)
  {
LABEL_145:
    char v61 = *(_BYTE *)(a2 + 278);
    *(_DWORD *)(a1 + 368) |= 0x100000u;
    *(_BYTE *)(a1 + 278) = v61;
    int v36 = *(_DWORD *)(a2 + 368);
  }

  sub_1002F0B04(buf);
  int v97 = sub_1002A6F64(*(uint64_t *)buf, "EnableMapMatching", &v285);
  uint64_t v98 = v97;
  uint64_t v99 = *(std::__shared_weak_count **)&buf[8];
  if (!*(void *)&buf[8]) {
    goto LABEL_141;
  }
  uint64_t v100 = (unint64_t *)(*(void *)&buf[8] + 8LL);
  do
    uint64_t v101 = __ldaxr(v100);
  while (__stlxr(v101 - 1, v100));
  if (v101)
  {
LABEL_141:
    if (!v97) {
      goto LABEL_143;
    }
    goto LABEL_142;
  }

  ((void (*)(std::__shared_weak_count *))v99->__on_zero_shared)(v99);
  std::__shared_weak_count::__release_weak(v99);
  if (v98) {
LABEL_142:
  }
    *(_BYTE *)(a1 + 659) = v285;
LABEL_143:
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101838C20);
  }
  uint64_t v102 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v103 = *(unsigned __int8 *)(a1 + 659);
    *(_DWORD *)buf = 67240192;
    *(_DWORD *)&uint8_t buf[4] = v103;
    _os_log_impl((void *)&_mh_execute_header, v102, OS_LOG_TYPE_DEBUG, "CLMM,EnableMapMatching,%{public}d", buf, 8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    v252 = *(unsigned __int8 *)(a1 + 659);
    LODWORD(context.version) = 67240192;
    HIDWORD(context.version) = v252;
    LODWORD(v275) = 8;
    v253 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "CLMM,EnableMapMatching,%{public}d",  &context,  v275);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLLocationController::CLLocationController(id<CLIntersiloUniverse>)",  "%s\n",  v253);
    if (v253 != buf) {
      free(v253);
    }
  }

  sub_1002F0B04(buf);
  uint64_t v104 = sub_1002A6F64(*(uint64_t *)buf, "ForceMapMatching", &v285);
  uint64_t v105 = v104;
  uint64_t v106 = *(std::__shared_weak_count **)&buf[8];
  if (!*(void *)&buf[8]) {
    goto LABEL_152;
  }
  uint64_t v107 = (unint64_t *)(*(void *)&buf[8] + 8LL);
  do
    uint64_t v108 = __ldaxr(v107);
  while (__stlxr(v108 - 1, v107));
  if (v108)
  {
LABEL_152:
    if (!v104) {
      goto LABEL_154;
    }
    goto LABEL_153;
  }

  ((void (*)(std::__shared_weak_count *))v106->__on_zero_shared)(v106);
  std::__shared_weak_count::__release_weak(v106);
  if (v105) {
LABEL_153:
  }
    *(_BYTE *)(a1 + 661) = v285;
LABEL_154:
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101838C20);
  }
  uint64_t v109 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v110 = *(unsigned __int8 *)(a1 + 661);
    *(_DWORD *)buf = 67240192;
    *(_DWORD *)&uint8_t buf[4] = v110;
    _os_log_impl((void *)&_mh_execute_header, v109, OS_LOG_TYPE_DEBUG, "CLMM,ForceMapMatching,%{public}d", buf, 8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    v254 = *(unsigned __int8 *)(a1 + 661);
    LODWORD(context.version) = 67240192;
    HIDWORD(context.version) = v254;
    LODWORD(v275) = 8;
    v255 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "CLMM,ForceMapMatching,%{public}d",  &context,  v275);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLLocationController::CLLocationController(id<CLIntersiloUniverse>)",  "%s\n",  v255);
    if (v255 != buf) {
      free(v255);
    }
  }

  sub_1002F0B04(buf);
  uint64_t v111 = sub_1002A6F64(*(uint64_t *)buf, "GpsConformanceTestMode", &v285);
  uint64_t v112 = *(std::__shared_weak_count **)&buf[8];
  if (*(void *)&buf[8])
  {
    uint64_t v113 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      uint64_t v114 = __ldaxr(v113);
    while (__stlxr(v114 - 1, v113));
    if (!v114)
    {
      ((void (*)(std::__shared_weak_count *))v112->__on_zero_shared)(v112);
      std::__shared_weak_count::__release_weak(v112);
    }
  }

  if (v111)
  {
    uint64_t v115 = v285;
    *(_BYTE *)(a1 + 656) = v285;
    if (v115)
    {
      if (sub_100292108())
      {
        v271 = CFStringCreateWithFormat( kCFAllocatorDefault,  0LL,  @"Warning: Conformance mode is enabled, this disables client based GPS applications.");
        sub_100A15640(@"GPS Conformance Mode", 0, v271);
        CFRelease(v271);
      }
    }
  }

  sub_1002F0B04(buf);
  uint64_t v116 = sub_1002A6F64(*(uint64_t *)buf, "NotifyAllLocations", (BOOL *)(a1 + 657));
  uint64_t v117 = v116;
  uint64_t v118 = *(std::__shared_weak_count **)&buf[8];
  if (!*(void *)&buf[8]) {
    goto LABEL_172;
  }
  uint64_t v119 = (unint64_t *)(*(void *)&buf[8] + 8LL);
  do
    uint64_t v120 = __ldaxr(v119);
  while (__stlxr(v120 - 1, v119));
  if (v120)
  {
LABEL_172:
    if ((v116 & 1) != 0) {
      goto LABEL_174;
    }
    goto LABEL_173;
  }

  ((void (*)(std::__shared_weak_count *))v118->__on_zero_shared)(v118);
  std::__shared_weak_count::__release_weak(v118);
  if ((v117 & 1) == 0) {
LABEL_173:
  }
    *(_BYTE *)(a1 + 657) = 0;
LABEL_174:
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101838C20);
  }
  uint64_t v121 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v122 = *(unsigned __int8 *)(a1 + 216);
    uint64_t v123 = *(void *)(a1 + 224);
    uint64_t v124 = *(unsigned __int8 *)(a1 + 656);
    uint64_t v125 = *(unsigned __int8 *)(a1 + 657);
    *(_DWORD *)buf = 67240960;
    *(_DWORD *)&uint8_t buf[4] = v122;
    *(_WORD *)&buf[8] = 2050;
    *(void *)&buf[10] = v123;
    *(_WORD *)&buf[18] = 1026;
    *(_DWORD *)&buf[20] = v124;
    *(_WORD *)&buf[24] = 1026;
    *(_DWORD *)&buf[26] = v125;
    _os_log_impl( (void *)&_mh_execute_header,  v121,  OS_LOG_TYPE_DEBUG,  "dynamic location providers,%{public}d,accuracy,%{public}.2f,gps test mode,%{public}d,always notify,%{public}d",  buf,  0x1Eu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    v256 = *(unsigned __int8 *)(a1 + 216);
    v257 = *(void **)(a1 + 224);
    v258 = *(unsigned __int8 *)(a1 + 656);
    v259 = *(unsigned __int8 *)(a1 + 657);
    LODWORD(context.version) = 67240960;
    HIDWORD(context.version) = v256;
    LOWORD(context.info) = 2050;
    *(void **)((char *)&context.info + 2) = v257;
    WORD1(context.retain) = 1026;
    HIDWORD(context.retain) = v258;
    LOWORD(context.release) = 1026;
    *(_DWORD *)((char *)&context.release + 2) = v259;
    LODWORD(v275) = 30;
    v260 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "dynamic location providers,%{public}d,accuracy,%{public}.2f,gps test mode,%{public}d,always notify,%{public}d",  &context,  v275);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLLocationController::CLLocationController(id<CLIntersiloUniverse>)",  "%s\n",  v260);
    if (v260 != buf) {
      free(v260);
    }
  }

  sub_1002F0B04(buf);
  if (sub_1002A6F64(*(uint64_t *)buf, "UseKfWhenSimulationActive", (BOOL *)(a1 + 665)))
  {
    uint64_t v126 = *(unsigned __int8 *)(a1 + 665);
    uint64_t v127 = *(std::__shared_weak_count **)&buf[8];
    if (!*(void *)&buf[8]) {
      goto LABEL_184;
    }
    uint64_t v128 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      uint64_t v129 = __ldaxr(v128);
    while (__stlxr(v129 - 1, v128));
    if (!v129)
    {
      ((void (*)(std::__shared_weak_count *))v127->__on_zero_shared)(v127);
      std::__shared_weak_count::__release_weak(v127);
      if (!v126) {
        goto LABEL_206;
      }
    }

    else
    {
LABEL_184:
      if (!v126) {
        goto LABEL_206;
      }
    }

    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    uint64_t v130 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v130,  OS_LOG_TYPE_DEFAULT,  "Applying KF to simulated locations for internal testing",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      LOWORD(context.version) = 0;
      LODWORD(v275) = 2;
      uint64_t v131 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "Applying KF to simulated locations for internal testing",  &context,  v275);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLLocationController::CLLocationController(id<CLIntersiloUniverse>)",  "%s\n",  v131);
      if (v131 != buf) {
        free(v131);
      }
    }
  }

  else
  {
    uint64_t v132 = *(std::__shared_weak_count **)&buf[8];
    if (*(void *)&buf[8])
    {
      unsigned int v133 = (unint64_t *)(*(void *)&buf[8] + 8LL);
      do
        int v134 = __ldaxr(v133);
      while (__stlxr(v134 - 1, v133));
      if (!v134)
      {
        ((void (*)(std::__shared_weak_count *))v132->__on_zero_shared)(v132);
        std::__shared_weak_count::__release_weak(v132);
      }
    }
  }

        if (qword_101934980 != -1) {
          dispatch_once(&qword_101934980, &stru_1018401A0);
        }
        uint64_t v130 = v60;
        uint64_t v102 = (os_log_s *)qword_101934988;
        if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 68289538;
          *(_DWORD *)&uint8_t buf[4] = 0;
          *(_WORD *)&buf[8] = 2082;
          *(void *)&buf[10] = "";
          *(_WORD *)&buf[18] = 2114;
          *(void *)&buf[20] = v9;
          v138 = 1026;
          LODWORD(v139) = v15;
          _os_log_impl( (void *)&_mh_execute_header,  v102,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#Warning, unable to copy purpose string from client, Client:%{public, location: escape_only}@, requestType:%{public}d}",  buf,  0x22u);
        }

        if ((objc_msgSend( -[NSMutableDictionary objectForKeyedSubscript:]( v131,  "objectForKeyedSubscript:",  @"isAutoPrompting"),  "BOOLValue") & 1) == 0)
        {
          uint64_t v127 = 0LL;
          alloc = kCFAllocatorDefault;
          uint64_t v123 = 1;
          goto LABEL_147;
        }

        if (qword_101934980 != -1) {
          dispatch_once(&qword_101934980, &stru_1018401A0);
        }
        uint64_t v103 = (os_log_s *)qword_101934988;
        uint64_t v104 = os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT);
        uint64_t result = 0LL;
        if (v104)
        {
          *(_DWORD *)buf = 68289538;
          *(_DWORD *)&uint8_t buf[4] = 0;
          *(_WORD *)&buf[8] = 2082;
          *(void *)&buf[10] = "";
          *(_WORD *)&buf[18] = 2114;
          *(void *)&buf[20] = v9;
          v138 = 1026;
          LODWORD(v139) = v15;
          _os_log_impl( (void *)&_mh_execute_header,  v103,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#Warning #autoPrompt fail to createAndPostClientUserNotification - purpose(UsageDescr iption) is NULL, Client:%{public, location:escape_only}@, requestType:%{public}d}",  buf,  0x22u);
          return 0LL;
        }
      }

      else
      {
        if (qword_101934970 != -1) {
          dispatch_once(&qword_101934970, &stru_101840220);
        }
        unsigned int v95 = (os_log_s *)qword_101934978;
        if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_FAULT))
        {
          *(_DWORD *)buf = 68289282;
          *(_DWORD *)&uint8_t buf[4] = 0;
          *(_WORD *)&buf[8] = 2082;
          *(void *)&buf[10] = "";
          *(_WORD *)&buf[18] = 2114;
          *(void *)&buf[20] = v9;
          _os_log_impl( (void *)&_mh_execute_header,  v95,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:#AuthPrompt couldn't get bundle for client, ClientKeyPath:%{public, location:escape_only}@}",  buf,  0x1Cu);
          if (qword_101934970 != -1) {
            dispatch_once(&qword_101934970, &stru_101840220);
          }
        }

        uint64_t v18 = (os_log_s *)qword_101934978;
        uint64_t result = os_signpost_enabled((os_log_t)qword_101934978);
        if (result)
        {
LABEL_210:
          *(_DWORD *)buf = 68289282;
          *(_DWORD *)&uint8_t buf[4] = 0;
          *(_WORD *)&buf[8] = 2082;
          *(void *)&buf[10] = "";
          *(_WORD *)&buf[18] = 2114;
          *(void *)&buf[20] = v9;
          uint64_t v20 = "#AuthPrompt couldn't get bundle for client";
          uint64_t v21 = "{msg%{public}.0s:#AuthPrompt couldn't get bundle for client, ClientKeyPath:%{public, locatio"
                "n:escape_only}@}";
          goto LABEL_28;
        }
      }

      return result;
    case 0xCu:
      uint64_t v73 = sub_10059CEEC();
      format = (CFStringRef)sub_10059E10C(v73, @"LOCATION_CLIENT_PERMISSION_INCIDENTAL_USE_MODE_TITLE");
      alloc = kCFAllocatorDefault;
      value = CFStringCreateStringWithValidatedFormat(kCFAllocatorDefault, 0LL, @"%@", format, &errorPtr, cf);
      uint64_t v74 = sub_10059CEEC();
      uint64_t v130 = (CFTypeRef)sub_10059E10C(v74, @"LOCATION_CLIENT_PERMISSION_INCIDENTAL_USE_MODE_YES_BUTTON");
      char v75 = sub_10059CEEC();
      uint64_t v125 = (CFTypeRef)sub_10059E10C(v75, @"LOCATION_CLIENT_PERMISSION_INCIDENTAL_USE_MODE_NO_BUTTON");
      uint64_t v76 = sub_10059CEEC();
      uint64_t v127 = (__CFString *)sub_10059E10C(v76, @"LOCATION_CLIENT_PERMISSION_INCIDENTAL_USE_MODE_PURPOSE");
LABEL_94:
      char v30 = 0;
      uint64_t v53 = 0LL;
      uint64_t v124 = 0LL;
      goto LABEL_124;
    case 0xDu:
      char v77 = sub_10059CEEC();
      format = (CFStringRef)sub_10059E10C(v77, @"LOCATION_CLIENT_PERMISSION_PLAIN_TITLE_FOR_LOCATION_BUTTONS");
      int v78 = sub_10059CEEC();
      uint64_t v127 = (__CFString *)sub_10059E10C(v78, @"LOCATION_CLIENT_PERMISSION_EXPLANATION_FOR_LOCATION_BUTTONS");
      int v79 = sub_10059CEEC();
      uint64_t v130 = (CFTypeRef)sub_10059E10C(v79, @"LOCATION_CLIENT_PERMISSION_ALLOW_LOCATION_BUTTONS");
      int v80 = sub_10059CEEC();
      uint64_t v125 = (CFTypeRef)sub_10059E10C(v80, @"LOCATION_CLIENT_PERMISSION_DENY_LOCATION_BUTTONS");
      uint64_t v124 = +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "com.apple.corelocation.CoreLocationTemporaryPreciseAuthPromptPlugin");
      alloc = kCFAllocatorDefault;
      value = CFStringCreateStringWithValidatedFormat(kCFAllocatorDefault, 0LL, @"%@", format, &errorPtr, cf);
      goto LABEL_123;
    case 0xEu:
      int v81 = sub_10059CEEC();
      format = (CFStringRef)sub_10059E10C(v81, @"LOCATION_CLIENT_PERMISSION_TITLE_FOR_LOCATION_BUTTONS");
      uint64_t v82 = sub_10059CEEC();
      uint64_t v127 = (__CFString *)sub_10059E10C(v82, @"LOCATION_CLIENT_PERMISSION_EXPLANATION_FOR_LOCATION_BUTTONS");
      int v83 = sub_10059CEEC();
      uint64_t v130 = (CFTypeRef)sub_10059E10C(v83, @"LOCATION_CLIENT_PERMISSION_ALLOW_LOCATION_BUTTONS");
      int v84 = sub_10059CEEC();
      uint64_t v125 = (CFTypeRef)sub_10059E10C(v84, @"LOCATION_CLIENT_PERMISSION_DENY_LOCATION_BUTTONS");
      int v85 = sub_10059CEEC();
      -[NSMutableDictionary setObject:forKeyedSubscript:]( v131,  "setObject:forKeyedSubscript:",  (id)sub_10059E10C(v85, @"PRECISE_ON_PILL_BUTTON_TITLE"),  @"PreciseButtonOnTitle");
      unsigned int v86 = sub_10059CEEC();
      -[NSMutableDictionary setObject:forKeyedSubscript:]( v131,  "setObject:forKeyedSubscript:",  (id)sub_10059E10C(v86, @"PRECISE_OFF_PILL_BUTTON_TITLE"),  @"PreciseButtonOffTitle");
      uint64_t v124 = +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "com.apple.corelocation.CoreLocationVanillaWhenInUseAuthPromptPlugin");
      alloc = kCFAllocatorDefault;
      value = CFStringCreateStringWithValidatedFormat(kCFAllocatorDefault, 0LL, @"%@", format, &errorPtr, cf);
      goto LABEL_123;
    case 0x10u:
      uint64_t v124 = +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "com.apple.corelocation.CoreLocationRepromptAlwaysAuthPromptPlugin");
      int v87 = (void *)sub_10059CEEC();
      format = sub_10059E110(v87, @"LOCATION_CLIENT_TRANSCRIPT_TITLE");
      alloc = kCFAllocatorDefault;
      value = CFStringCreateStringWithValidatedFormat(kCFAllocatorDefault, 0LL, @"%@", format, &errorPtr, cf);
      uint64_t v127 = (__CFString *)objc_msgSend( -[NSMutableDictionary objectForKey:](v131, "objectForKey:", @"UsageDescription"),  "copy");
      if (!v127)
      {
        int v88 = (void *)sub_10059CEEC();
        int v89 = sub_10059E110(v88, @"LOCATION_CLIENT_TRANSCRIPT_USAGE_DESCRIPTION");
        uint64_t v127 = (__CFString *)CFStringCreateStringWithValidatedFormat( kCFAllocatorDefault,  0LL,  @"%@",  v89,  &errorPtr,  cf);
        CFRelease(v89);
      }

      int v90 = sub_10059CEEC();
      uint64_t v130 = (CFTypeRef)sub_10059E10C(v90, @"LOCATION_CLIENT_TRANSCRIPT_YES_BUTTON");
      unsigned int v91 = sub_10059CEEC();
      uint64_t v125 = (CFTypeRef)sub_10059E10C(v91, @"LOCATION_CLIENT_TRANSCRIPT_NO_BUTTON");
      goto LABEL_123;
    default:
      char v30 = 0;
      uint64_t v59 = 0LL;
      uint64_t v53 = 0LL;
      unsigned int v60 = 0LL;
      uint64_t v124 = 0LL;
      uint64_t v125 = 0LL;
      format = 0LL;
      value = 0LL;
      goto LABEL_137;
  }

  unsigned int v43 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 84);
  if ((v43 & 0x80000000) != 0)
  {
    uint64_t v44 = 10;
  }

  else if (v43 >= 0x80)
  {
    uint64_t v44 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v43, a2);
    int v3 = *(_DWORD *)(a1 + 148);
  }

  else
  {
    uint64_t v44 = 1;
  }

  uint64_t v4 = (v4 + v44 + 2);
  if ((v3 & 0x100000) == 0)
  {
LABEL_115:
    if ((v3 & 0x200000) == 0) {
      goto LABEL_116;
    }
    goto LABEL_147;
  }

      char v77 = (unsigned int *)*((void *)v65 + 1);
      if (v77)
      {
        do
        {
          int v78 = v77;
          char v77 = *(unsigned int **)v77;
        }

        while (v77);
      }

      else
      {
        do
        {
          int v78 = (unsigned int *)*((void *)v65 + 2);
          int v24 = *(void *)v78 == (void)v65;
          char v65 = v78;
        }

        while (!v24);
      }

      char v65 = v78;
    }
  }

  uint64_t v50 = a2 + 184;
  sub_1006031FC(a2 + 184, (uint64_t *)__p);
  uint64_t v51 = *(unsigned int **)__p;
  if (*(_BYTE **)__p == &__p[8])
  {
    sub_100603B94((uint64_t)__p, **(char ***)__p);
  }

  else
  {
    uint64_t v52 = 1;
    do
    {
      uint64_t v53 = sub_1006025CC(v50, v51 + 8);
      char v54 = v53;
      if (v53)
      {
        uint64_t v55 = sub_100C0CCC8(v53);
        if ((v55 & v52) == 1) {
          uint64_t v52 = sub_100C145F0(v54, *(unsigned __int8 *)(v3 + 128));
        }
        else {
          v52 &= !v55;
        }
      }

      else
      {
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101883640);
        }
        uint64_t v56 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v56,  OS_LOG_TYPE_ERROR,  "CellTile, tile ptr is NULL, #CloneMe",  buf,  2u);
        }

        if (sub_1002921D0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101883640);
          }
          LOWORD(v147.__r_.__value_.__l.__data_) = 0;
          LODWORD(v134) = 2;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  16LL,  "CellTile, tile ptr is NULL, #CloneMe",  &v147,  v134);
          int v58 = (char *)v57;
          sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLCellTilesManager::updateProtectionClass(const char *, const CLDaemonLocation &, BOOL)_block_invoke",  "%s\n",  v57);
          if (v58 != buf) {
            free(v58);
          }
        }
      }

      uint64_t v59 = (unsigned int *)*((void *)v51 + 1);
      if (v59)
      {
        do
        {
          unsigned int v60 = v59;
          uint64_t v59 = *(unsigned int **)v59;
        }

        while (v59);
      }

      else
      {
        do
        {
          unsigned int v60 = (unsigned int *)*((void *)v51 + 2);
          int v24 = *(void *)v60 == (void)v51;
          uint64_t v51 = v60;
        }

        while (!v24);
      }

      uint64_t v51 = v60;
    }

    while (v60 != (unsigned int *)&__p[8]);
    sub_100603B94((uint64_t)__p, *(char **)&__p[8]);
    if ((v52 & 1) == 0)
    {
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101883640);
      }
      char v61 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v61,  OS_LOG_TYPE_ERROR,  "CellTile, Unable to lock all unprotected files!, #CloneMe",  buf,  2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101883640);
        }
        *(_WORD *)std::stringbuf::string_type __p = 0;
        LODWORD(v134) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  16LL,  "CellTile, Unable to lock all unprotected files!, #CloneMe",  __p,  v134);
        unsigned int v63 = (char *)v62;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLCellTilesManager::updateProtectionClass(const char *, const CLDaemonLocation &, BOOL)_block_invoke",  "%s\n",  v62);
        if (v63 != buf) {
          free(v63);
        }
      }

      goto LABEL_179;
    }
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101883660);
  }
  int v87 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v87,  OS_LOG_TYPE_DEBUG,  "TILE: updateProtectionClass, clearing unprotected map",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101883660);
    }
    *(_WORD *)std::stringbuf::string_type __p = 0;
    LODWORD(v134) = 2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "TILE: updateProtectionClass, clearing unprotected map",  __p,  v134);
    uint64_t v125 = (char *)v124;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::updateProtectionClass(const char *, const CLDaemonLocation &, BOOL)_block_invoke",  "%s\n",  v124);
    if (v125 != buf) {
      free(v125);
    }
  }

  sub_100603264(v50);
LABEL_179:
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101883660);
  }
  int v96 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    else {
      int v97 = *(void *)(a2 + 8);
    }
    uint64_t v98 = sub_100019240(a2 + 184);
    uint64_t v99 = *(_DWORD *)(*(void *)(*(void *)(v2 + 32) + 8LL) + 24LL);
    *(_DWORD *)buf = 136315650;
    *(void *)&uint8_t buf[4] = v97;
    v158 = 2048;
    *(void *)&uint64_t v159 = v98;
    WORD4(v159) = 1024;
    *(_DWORD *)((char *)&v159 + 10) = v99;
    _os_log_impl( (void *)&_mh_execute_header,  v96,  OS_LOG_TYPE_DEBUG,  "TILE: updateProtectionClass, end, %s, total, %lu, numOfUnProtectedTiles, %d",  buf,  0x1Cu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101883660);
    }
    uint64_t v112 = qword_101934A78;
    else {
      uint64_t v113 = *(void *)(a2 + 8);
    }
    uint64_t v114 = sub_100019240(a2 + 184);
    uint64_t v115 = *(_DWORD *)(*(void *)(*(void *)(v2 + 32) + 8LL) + 24LL);
    *(_DWORD *)std::stringbuf::string_type __p = 136315650;
    *(void *)&__p[4] = v113;
    *(_WORD *)&__p[12] = 2048;
    *(void *)&__p[14] = v114;
    *(_WORD *)&__p[22] = 1024;
    *(_DWORD *)&__p[24] = v115;
    LODWORD(v134) = 28;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v112,  2LL,  "TILE: updateProtectionClass, end, %s, total, %lu, numOfUnProtectedTiles, %d",  __p,  v134,  v135);
    uint64_t v117 = (char *)v116;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::updateProtectionClass(const char *, const CLDaemonLocation &, BOOL)_block_invoke",  "%s\n",  v116);
    if (v117 != buf) {
      free(v117);
    }
  }

  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101883640);
  }
  uint64_t v100 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_INFO))
  {
    else {
      uint64_t v101 = *(void *)(a2 + 8);
    }
    uint64_t v102 = *(unsigned __int8 *)(v2 + 64);
    uint64_t v103 = sub_100019240(a2 + 184);
    *(_DWORD *)buf = 136446722;
    *(void *)&uint8_t buf[4] = v101;
    v158 = 1026;
    LODWORD(v159) = v102;
    WORD2(v159) = 2050;
    *(void *)((char *)&v159 + 6) = v103;
    _os_log_impl( (void *)&_mh_execute_header,  v100,  OS_LOG_TYPE_INFO,  "@TileEvent, %{public}s, locking, %{public}d, readable, %{public}lu\n",  buf,  0x1Cu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    uint64_t v118 = qword_101934858;
    else {
      uint64_t v119 = *(void *)(a2 + 8);
    }
    uint64_t v120 = *(unsigned __int8 *)(v2 + 64);
    uint64_t v121 = sub_100019240(a2 + 184);
    *(_DWORD *)std::stringbuf::string_type __p = 136446722;
    *(void *)&__p[4] = v119;
    *(_WORD *)&__p[12] = 1026;
    *(_DWORD *)&__p[14] = v120;
    *(_WORD *)&__p[18] = 2050;
    *(void *)&__p[20] = v121;
    LODWORD(v134) = 28;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v118,  1LL,  "@TileEvent, %{public}s, locking, %{public}d, readable, %{public}lu\n",  __p,  v134);
    uint64_t v123 = (char *)v122;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCellTilesManager::updateProtectionClass(const char *, const CLDaemonLocation &, BOOL)_block_invoke",  "%s\n",  v122);
    if (v123 != buf) {
      free(v123);
    }
  }

              *(void *)(a1 + 16) = v24;
              goto LABEL_168;
            case 2u:
              *(_BYTE *)(a1 + 48) |= 1u;
              int v27 = *((void *)this + 1);
              unsigned int v2 = *((void *)this + 2);
              int v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5LL || v27 + 10 > v2)
              {
                uint64_t v69 = 0;
                uint64_t v70 = 0;
                uint64_t v31 = 0LL;
                if (v2 <= v27) {
                  int v3 = *((void *)this + 1);
                }
                else {
                  int v3 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v3 == v27)
                  {
                    uint64_t v31 = 0LL;
                    *((_BYTE *)this + 24) = 1;
                    goto LABEL_142;
                  }

                  uint64_t v71 = v27++;
                  uint64_t v72 = *(_BYTE *)(v28 + v71);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v72 & 0x7F) << v69;
                  if ((v72 & 0x80) == 0) {
                    break;
                  }
                  v69 += 7;
                  int v14 = v70++ > 8;
                  if (v14)
                  {
                    uint64_t v31 = 0LL;
LABEL_141:
                    int v3 = v71 + 1;
                    goto LABEL_142;
                  }
                }

                if (*((_BYTE *)this + 24)) {
                  uint64_t v31 = 0LL;
                }
                goto LABEL_141;
              }

              char v29 = 0;
              char v30 = 0;
              uint64_t v31 = 0LL;
              do
              {
                int v3 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                int v32 = *(_BYTE *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_142;
                }
                v29 += 7;
                int v27 = v3;
                int v14 = v30++ > 8;
              }

              while (!v14);
              uint64_t v31 = 0LL;
LABEL_142:
              *(void *)(a1 + 8) = v31;
              goto LABEL_168;
            case 3u:
              *(_BYTE *)(a1 + 48) |= 4u;
              char v33 = *((void *)this + 1);
              unsigned int v2 = *((void *)this + 2);
              int v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5LL || v33 + 10 > v2)
              {
                uint64_t v73 = 0;
                uint64_t v74 = 0;
                uint64_t v37 = 0LL;
                if (v2 <= v33) {
                  int v3 = *((void *)this + 1);
                }
                else {
                  int v3 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v3 == v33)
                  {
                    LODWORD(v37) = 0;
                    *((_BYTE *)this + 24) = 1;
                    goto LABEL_147;
                  }

                  char v75 = v33++;
                  uint64_t v76 = *(_BYTE *)(v34 + v75);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v76 & 0x7F) << v73;
                  if ((v76 & 0x80) == 0) {
                    break;
                  }
                  v73 += 7;
                  int v14 = v74++ > 8;
                  if (v14)
                  {
                    LODWORD(v37) = 0;
LABEL_146:
                    int v3 = v75 + 1;
                    goto LABEL_147;
                  }
                }

                if (*((_BYTE *)this + 24)) {
                  LODWORD(v37) = 0;
                }
                goto LABEL_146;
              }

              uint64_t v35 = 0;
              int v36 = 0;
              uint64_t v37 = 0LL;
              do
              {
                int v3 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                int v38 = *(_BYTE *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_147;
                }
                v35 += 7;
                char v33 = v3;
                int v14 = v36++ > 8;
              }

              while (!v14);
              LODWORD(v37) = 0;
LABEL_147:
              *(_DWORD *)(a1 + 24) = v37;
              goto LABEL_168;
            case 4u:
              *(_BYTE *)(a1 + 48) |= 0x40u;
              int v39 = *((void *)this + 1);
              unsigned int v2 = *((void *)this + 2);
              uint64_t v40 = *(void *)this;
              if (v39 > 0xFFFFFFFFFFFFFFF5LL || v39 + 10 > v2)
              {
                char v77 = 0;
                int v78 = 0;
                unsigned int v43 = 0LL;
                if (v2 <= v39) {
                  int v3 = *((void *)this + 1);
                }
                else {
                  int v3 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v3 == v39)
                  {
                    LODWORD(v43) = 0;
                    *((_BYTE *)this + 24) = 1;
                    goto LABEL_152;
                  }

                  int v79 = v39++;
                  int v80 = *(_BYTE *)(v40 + v79);
                  *((void *)this + 1) = v39;
                  v43 |= (unint64_t)(v80 & 0x7F) << v77;
                  if ((v80 & 0x80) == 0) {
                    break;
                  }
                  v77 += 7;
                  int v14 = v78++ > 8;
                  if (v14)
                  {
                    LODWORD(v43) = 0;
LABEL_151:
                    int v3 = v79 + 1;
                    goto LABEL_152;
                  }
                }

                if (*((_BYTE *)this + 24)) {
                  LODWORD(v43) = 0;
                }
                goto LABEL_151;
              }

              uint64_t v41 = 0;
              uint64_t v42 = 0;
              unsigned int v43 = 0LL;
              do
              {
                int v3 = v39 + 1;
                *((void *)this + 1) = v39 + 1;
                uint64_t v44 = *(_BYTE *)(v40 + v39);
                v43 |= (unint64_t)(v44 & 0x7F) << v41;
                if ((v44 & 0x80) == 0) {
                  goto LABEL_152;
                }
                v41 += 7;
                int v39 = v3;
                int v14 = v42++ > 8;
              }

              while (!v14);
              LODWORD(v43) = 0;
LABEL_152:
              *(_DWORD *)(a1 + 40) = v43;
              goto LABEL_168;
            case 5u:
              *(_BYTE *)(a1 + 48) |= 0x20u;
              char v45 = *((void *)this + 1);
              unsigned int v2 = *((void *)this + 2);
              int v46 = *(void *)this;
              if (v45 > 0xFFFFFFFFFFFFFFF5LL || v45 + 10 > v2)
              {
                int v81 = 0;
                uint64_t v82 = 0;
                unsigned int v49 = 0LL;
                if (v2 <= v45) {
                  int v3 = *((void *)this + 1);
                }
                else {
                  int v3 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v3 == v45)
                  {
                    LODWORD(v49) = 0;
                    *((_BYTE *)this + 24) = 1;
                    goto LABEL_157;
                  }

                  int v83 = v45++;
                  int v84 = *(_BYTE *)(v46 + v83);
                  *((void *)this + 1) = v45;
                  v49 |= (unint64_t)(v84 & 0x7F) << v81;
                  if ((v84 & 0x80) == 0) {
                    break;
                  }
                  v81 += 7;
                  int v14 = v82++ > 8;
                  if (v14)
                  {
                    LODWORD(v49) = 0;
LABEL_156:
                    int v3 = v83 + 1;
                    goto LABEL_157;
                  }
                }

                if (*((_BYTE *)this + 24)) {
                  LODWORD(v49) = 0;
                }
                goto LABEL_156;
              }

              uint64_t v47 = 0;
              uint64_t v48 = 0;
              unsigned int v49 = 0LL;
              do
              {
                int v3 = v45 + 1;
                *((void *)this + 1) = v45 + 1;
                uint64_t v50 = *(_BYTE *)(v46 + v45);
                v49 |= (unint64_t)(v50 & 0x7F) << v47;
                if ((v50 & 0x80) == 0) {
                  goto LABEL_157;
                }
                v47 += 7;
                char v45 = v3;
                int v14 = v48++ > 8;
              }

              while (!v14);
              LODWORD(v49) = 0;
LABEL_157:
              *(_DWORD *)(a1 + 36) = v49;
              goto LABEL_168;
            case 6u:
              *(_BYTE *)(a1 + 48) |= 0x10u;
              uint64_t v51 = *((void *)this + 1);
              unsigned int v2 = *((void *)this + 2);
              uint64_t v52 = *(void *)this;
              if (v51 > 0xFFFFFFFFFFFFFFF5LL || v51 + 10 > v2)
              {
                int v85 = 0;
                unsigned int v86 = 0;
                uint64_t v55 = 0LL;
                if (v2 <= v51) {
                  int v3 = *((void *)this + 1);
                }
                else {
                  int v3 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v3 == v51)
                  {
                    LODWORD(v55) = 0;
                    *((_BYTE *)this + 24) = 1;
                    goto LABEL_162;
                  }

                  int v87 = v51++;
                  int v88 = *(_BYTE *)(v52 + v87);
                  *((void *)this + 1) = v51;
                  v55 |= (unint64_t)(v88 & 0x7F) << v85;
                  if ((v88 & 0x80) == 0) {
                    break;
                  }
                  v85 += 7;
                  int v14 = v86++ > 8;
                  if (v14)
                  {
                    LODWORD(v55) = 0;
LABEL_161:
                    int v3 = v87 + 1;
                    goto LABEL_162;
                  }
                }

                if (*((_BYTE *)this + 24)) {
                  LODWORD(v55) = 0;
                }
                goto LABEL_161;
              }

              uint64_t v53 = 0;
              char v54 = 0;
              uint64_t v55 = 0LL;
              do
              {
                int v3 = v51 + 1;
                *((void *)this + 1) = v51 + 1;
                uint64_t v56 = *(_BYTE *)(v52 + v51);
                v55 |= (unint64_t)(v56 & 0x7F) << v53;
                if ((v56 & 0x80) == 0) {
                  goto LABEL_162;
                }
                v53 += 7;
                uint64_t v51 = v3;
                int v14 = v54++ > 8;
              }

              while (!v14);
              LODWORD(v55) = 0;
LABEL_162:
              *(_DWORD *)(a1 + 32) = v55;
              goto LABEL_168;
            case 7u:
              *(_BYTE *)(a1 + 48) |= 8u;
              unsigned int v57 = *((void *)this + 1);
              unsigned int v2 = *((void *)this + 2);
              int v58 = *(void *)this;
              if (v57 > 0xFFFFFFFFFFFFFFF5LL || v57 + 10 > v2)
              {
                int v89 = 0;
                int v90 = 0;
                char v61 = 0LL;
                if (v2 <= v57) {
                  int v3 = *((void *)this + 1);
                }
                else {
                  int v3 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v3 == v57)
                  {
                    LODWORD(v61) = 0;
                    *((_BYTE *)this + 24) = 1;
                    goto LABEL_167;
                  }

                  unsigned int v91 = v57++;
                  uint64_t v92 = *(_BYTE *)(v58 + v91);
                  *((void *)this + 1) = v57;
                  v61 |= (unint64_t)(v92 & 0x7F) << v89;
                  if ((v92 & 0x80) == 0) {
                    break;
                  }
                  v89 += 7;
                  int v14 = v90++ > 8;
                  if (v14)
                  {
                    LODWORD(v61) = 0;
LABEL_166:
                    int v3 = v91 + 1;
                    goto LABEL_167;
                  }
                }

                if (*((_BYTE *)this + 24)) {
                  LODWORD(v61) = 0;
                }
                goto LABEL_166;
              }

              uint64_t v59 = 0;
              unsigned int v60 = 0;
              char v61 = 0LL;
              do
              {
                int v3 = v57 + 1;
                *((void *)this + 1) = v57 + 1;
                unsigned int v62 = *(_BYTE *)(v58 + v57);
                v61 |= (unint64_t)(v62 & 0x7F) << v59;
                if ((v62 & 0x80) == 0) {
                  goto LABEL_167;
                }
                v59 += 7;
                unsigned int v57 = v3;
                int v14 = v60++ > 8;
              }

              while (!v14);
              LODWORD(v61) = 0;
LABEL_167:
              *(_DWORD *)(a1 + 28) = v61;
LABEL_168:
              uint64_t v4 = *((unsigned __int8 *)this + 24);
              if (v3 >= v2 || *((_BYTE *)this + 24)) {
                return v4 == 0;
              }
              continue;
            case 8u:
              *(_BYTE *)(a1 + 48) |= 0x80u;
              int v3 = *((void *)this + 1);
              unsigned int v2 = *((void *)this + 2);
              if (v3 >= v2)
              {
                char v64 = 0;
                *((_BYTE *)this + 24) = 1;
              }

              else
              {
                unsigned int v63 = *(unsigned __int8 *)(*(void *)this + v3++);
                *((void *)this + 1) = v3;
                char v64 = v63 != 0;
              }

              *(_BYTE *)(a1 + 44) = v64;
              goto LABEL_168;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!(_DWORD)result) {
                return result;
              }
              int v3 = *((void *)this + 1);
              unsigned int v2 = *((void *)this + 2);
              goto LABEL_168;
          }
        }

        uint64_t v4 = 0;
      }

      break;
    }
  }

  return v4 == 0;
}

  uint64_t v18 = *(void *)(a2 + 24);
  v5 |= 4uLL;
  *unsigned int v2 = v5;
  *(_BYTE *)(a1 + 324) = v6;
  *(void *)(a1 + 24) = v18;
  if ((*v3 & 0x400000000000LL) != 0) {
    goto LABEL_138;
  }
  return result;
}

  PB::TextFormatter::format(this, "maxPulseTime", *(void *)(a1 + 56));
  uint64_t v6 = *v5;
  if ((*v5 & 0x80) != 0) {
    goto LABEL_138;
  }
LABEL_71:
  if ((v6 & 0x100) != 0) {
LABEL_72:
  }
    PB::TextFormatter::format(this, "triggerTimestamp", *(void *)(a1 + 72));
  return PB::TextFormatter::endObject(this);
}

  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 24), 0xCAu);
  if ((*v4 & 0x400000000000LL) != 0) {
    return PB::Writer::write(this, *(float *)(v3 + 228), 0x12Du);
  }
  return result;
}

  uint64_t v21 = *(_BYTE *)(a2 + 277);
  v6 |= 0x200u;
  *unsigned int v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(_BYTE *)(a1 + 277) = v21;
  uint64_t v4 = *v3;
  uint64_t v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x8000000000LL) == 0)
  {
LABEL_64:
    if ((v4 & 0x10000000000LL) == 0) {
      goto LABEL_65;
    }
    goto LABEL_139;
  }

  PB::TextFormatter::format(this, "lowSenseWithoutAudioMaxPulseThreshold", *(float *)(a1 + 204));
  uint64_t v6 = *v5;
  uint64_t v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x2000000000000LL) == 0)
  {
LABEL_63:
    if ((v6 & 0x4000000000000LL) == 0) {
      goto LABEL_64;
    }
    goto LABEL_139;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 172), 0x3Au);
  uint64_t v5 = *v4;
  uint64_t v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x20000000000LL) == 0)
  {
LABEL_63:
    if ((v5 & 0x80000000000LL) == 0) {
      goto LABEL_64;
    }
    goto LABEL_139;
  }

  uint64_t result = *(float *)(a2 + 84);
  v5 |= 0x40000uLL;
  *unsigned int v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(_BYTE *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 84) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x400000) == 0)
  {
LABEL_57:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_139;
  }

  PB::TextFormatter::format(this, "lowSenseWithAudioCumulativeRotationThreshold", *(float *)(a1 + 184));
  uint64_t v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x100000000000LL) == 0)
  {
LABEL_56:
    if ((v6 & 0x200000000000LL) == 0) {
      goto LABEL_57;
    }
    goto LABEL_139;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 84), 0xF7u);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x400000) == 0)
  {
LABEL_57:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_139;
  }

  uint64_t v26 = *(_BYTE *)(a2 + 331);
  v6 |= 0x100000uLL;
  *unsigned int v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_BYTE *)(a1 + 331) = v26;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x200) == 0)
  {
LABEL_32:
    if ((v7 & 0x400000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_139;
  }

  PB::TextFormatter::format(this, "kDetectedOverEpochsAB", *(_BYTE *)(a1 + 335));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x2000000) == 0)
  {
LABEL_36:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_139;
  }

  uint64_t result = PB::Writer::write(this, *(_BYTE *)(v3 + 331), 0x6Cu);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x200) == 0)
  {
LABEL_32:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_139;
  }

  unsigned int v68 = *(_BYTE *)(a2 + 163);
  v3 |= 0x10000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(_BYTE *)(result + 214) = BYTE2(v4);
  *(_BYTE *)(result + 163) = v68;
  LOWORD(sub_1012279C0(0LL, v4, v5) = *(_WORD *)(a2 + 212);
  unsigned int v2 = *(void *)(a2 + 204);
  if ((v2 & 0x100000000000LL) == 0)
  {
LABEL_59:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_139;
  }

  PB::TextFormatter::format(this, "kSaturationMetRO2", *(_BYTE *)(a1 + 195));
  uint64_t v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x20000) == 0)
  {
LABEL_58:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_139;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52), 0x45Bu);
  uint64_t v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x8000) == 0)
  {
LABEL_59:
    if ((v4 & 0x8000000000000000LL) == 0) {
      goto LABEL_60;
    }
    goto LABEL_139;
  }

            PB::Reader::recallMark(this, v135);
          }

          else
          {
            int v96 = *(char **)(a1 + 64);
            unsigned int v95 = *(void *)(a1 + 72);
            if ((unint64_t)v96 >= v95)
            {
              uint64_t v115 = (char *)*v10;
              uint64_t v116 = (v96 - (_BYTE *)*v10) >> 3;
              uint64_t v117 = v116 + 1;
              if ((unint64_t)(v116 + 1) >> 61) {
LABEL_222:
              }
                sub_100007008();
              uint64_t v118 = v95 - (void)v115;
              if (v118 >> 2 > v117) {
                uint64_t v117 = v118 >> 2;
              }
              else {
                uint64_t v119 = v117;
              }
              if (v119)
              {
                uint64_t v120 = (char *)sub_1000071BC(v134, v119);
                uint64_t v115 = *(char **)(a1 + 56);
                int v96 = *(char **)(a1 + 64);
              }

              else
              {
                uint64_t v120 = 0LL;
              }

              uint64_t v127 = &v120[8 * v116];
              *(void *)uint64_t v127 = 0LL;
              int v90 = v127 + 8;
              while (v96 != v115)
              {
                uint64_t v128 = *((void *)v96 - 1);
                v96 -= 8;
                *((void *)v127 - 1) = v128;
                v127 -= 8;
              }

              *(void *)(a1 + 56) = v127;
              *(void *)(a1 + 64) = v90;
              *(void *)(a1 + 72) = &v120[8 * v119];
              if (v115) {
                operator delete(v115);
              }
            }

            else
            {
              *(void *)int v96 = 0LL;
              int v90 = v96 + 8;
            }

            *(void *)(a1 + 64) = v90;
LABEL_206:
            uint64_t v129 = *((void *)this + 1);
            if (v129 <= 0xFFFFFFFFFFFFFFF7LL && v129 + 8 <= *((void *)this + 2))
            {
              *(v90 - 1) = *(void *)(*(void *)this + v129);
LABEL_210:
              *((void *)this + 1) += 8LL;
            }

            else
            {
LABEL_208:
              *((_BYTE *)this + 24) = 1;
            }
          }

          *(_DWORD *)(a1 + 68) = v42;
          goto LABEL_156;
        case 5u:
          if ((_DWORD)v26 != 2)
          {
            uint64_t v82 = *(char **)(a1 + 16);
            int v81 = *(void *)(a1 + 24);
            if ((unint64_t)v82 >= v81)
            {
              unsigned int v86 = (char *)*v12;
              int v87 = (v82 - (_BYTE *)*v12) >> 2;
              int v88 = v87 + 1;
              if ((unint64_t)(v87 + 1) >> 62) {
LABEL_166:
              }
                sub_100007008();
              int v89 = v81 - (void)v86;
              if (v89 >> 1 > v88) {
                int v88 = v89 >> 1;
              }
              else {
                int v90 = v88;
              }
              if (v90)
              {
                unsigned int v91 = (char *)sub_10000956C(v13, v90);
                unsigned int v86 = *(char **)(a1 + 8);
                uint64_t v82 = *(char **)(a1 + 16);
              }

              else
              {
                unsigned int v91 = 0LL;
              }

              uint64_t v98 = &v91[4 * v87];
              *(_DWORD *)uint64_t v98 = 0;
              int v83 = v98 + 4;
              while (v82 != v86)
              {
                uint64_t v99 = *((_DWORD *)v82 - 1);
                v82 -= 4;
                *((_DWORD *)v98 - 1) = v99;
                v98 -= 4;
              }

              *(void *)(a1 + 8) = v98;
              *(void *)(a1 + 16) = v83;
              *(void *)(a1 + 24) = &v91[4 * v90];
              if (v86) {
                operator delete(v86);
              }
            }

            else
            {
              *(_DWORD *)uint64_t v82 = 0;
              int v83 = v82 + 4;
            }

            *(void *)(a1 + 16) = v83;
            goto LABEL_152;
          }

          if ((PB::Reader::placeMark(this, v105, v26, a4) & 1) != 0) {
            return 0LL;
          }
          char v45 = *((void *)this + 1);
          int v46 = *((void *)this + 2);
          while (v45 < v46 && !*((_BYTE *)this + 24))
          {
            uint64_t v48 = *(char **)(a1 + 16);
            uint64_t v47 = *(void *)(a1 + 24);
            if ((unint64_t)v48 >= v47)
            {
              uint64_t v50 = (char *)*v12;
              uint64_t v51 = (v48 - (_BYTE *)*v12) >> 2;
              uint64_t v52 = v51 + 1;
              uint64_t v53 = v47 - (void)v50;
              if (v53 >> 1 > v52) {
                uint64_t v52 = v53 >> 1;
              }
              else {
                char v54 = v52;
              }
              if (v54)
              {
                uint64_t v55 = (char *)sub_10000956C(v13, v54);
                uint64_t v50 = *(char **)(a1 + 8);
                uint64_t v48 = *(char **)(a1 + 16);
              }

              else
              {
                uint64_t v55 = 0LL;
              }

              uint64_t v56 = &v55[4 * v51];
              *(_DWORD *)uint64_t v56 = 0;
              unsigned int v49 = v56 + 4;
              while (v48 != v50)
              {
                unsigned int v57 = *((_DWORD *)v48 - 1);
                v48 -= 4;
                *((_DWORD *)v56 - 1) = v57;
                v56 -= 4;
              }

              *(void *)(a1 + 8) = v56;
              *(void *)(a1 + 16) = v49;
              *(void *)(a1 + 24) = &v55[4 * v54];
              if (v50) {
                operator delete(v50);
              }
            }

            else
            {
              *(_DWORD *)uint64_t v48 = 0;
              unsigned int v49 = v48 + 4;
            }

            *(void *)(a1 + 16) = v49;
            int v58 = *((void *)this + 1);
            if (v58 > 0xFFFFFFFFFFFFFFFBLL || v58 + 4 > *((void *)this + 2)) {
              goto LABEL_112;
            }
            *(v49 - 1) = *(_DWORD *)(*(void *)this + v58);
            int v46 = *((void *)this + 2);
            char v45 = *((void *)this + 1) + 4LL;
            *((void *)this + 1) = v45;
          }

          goto LABEL_113;
        case 6u:
          if ((_DWORD)v26 == 2)
          {
            if ((PB::Reader::placeMark(this, v105, v26, a4) & 1) != 0) {
              return 0LL;
            }
            uint64_t v59 = *((void *)this + 1);
            unsigned int v60 = *((void *)this + 2);
            while (v59 < v60 && !*((_BYTE *)this + 24))
            {
              unsigned int v62 = *(char **)(a1 + 40);
              char v61 = *(void *)(a1 + 48);
              if ((unint64_t)v62 >= v61)
              {
                char v64 = (char *)*v10;
                char v65 = (v62 - (_BYTE *)*v10) >> 2;
                uint64_t v66 = v65 + 1;
                uint64_t v67 = v61 - (void)v64;
                if (v67 >> 1 > v66) {
                  uint64_t v66 = v67 >> 1;
                }
                else {
                  unsigned int v68 = v66;
                }
                if (v68)
                {
                  uint64_t v69 = (char *)sub_10000956C(v11, v68);
                  char v64 = *(char **)(a1 + 32);
                  unsigned int v62 = *(char **)(a1 + 40);
                }

                else
                {
                  uint64_t v69 = 0LL;
                }

                uint64_t v70 = &v69[4 * v65];
                *(_DWORD *)uint64_t v70 = 0;
                unsigned int v63 = v70 + 4;
                while (v62 != v64)
                {
                  uint64_t v71 = *((_DWORD *)v62 - 1);
                  v62 -= 4;
                  *((_DWORD *)v70 - 1) = v71;
                  v70 -= 4;
                }

                *(void *)(a1 + 32) = v70;
                *(void *)(a1 + 40) = v63;
                *(void *)(a1 + 48) = &v69[4 * v68];
                if (v64) {
                  operator delete(v64);
                }
              }

              else
              {
                *(_DWORD *)unsigned int v62 = 0;
                unsigned int v63 = v62 + 4;
              }

              *(void *)(a1 + 40) = v63;
              uint64_t v72 = *((void *)this + 1);
              if (v72 > 0xFFFFFFFFFFFFFFFBLL || v72 + 4 > *((void *)this + 2))
              {
LABEL_112:
                *((_BYTE *)this + 24) = 1;
                break;
              }

              *(v63 - 1) = *(_DWORD *)(*(void *)this + v72);
              unsigned int v60 = *((void *)this + 2);
              uint64_t v59 = *((void *)this + 1) + 4LL;
              *((void *)this + 1) = v59;
            }

LABEL_146:
  if ((v36 & 0x200000) != 0)
  {
    unsigned int v62 = *(_DWORD *)(a2 + 348);
    if (v62 >= 3) {
      sub_10122FAA4();
    }
    *(_DWORD *)(a1 + 368) |= 0x200000u;
    *(_DWORD *)(a1 + 348) = v62;
    int v36 = *(_DWORD *)(a2 + 368);
  }

  if ((v36 & 0x400000) != 0)
  {
    unsigned int v63 = *(_DWORD *)(a2 + 352);
    if (v63 >= 5) {
      sub_10122FA7C();
    }
    *(_DWORD *)(a1 + 368) |= 0x400000u;
    *(_DWORD *)(a1 + 352) = v63;
    int v36 = *(_DWORD *)(a2 + 368);
  }

  if ((v36 & 0x800000) != 0)
  {
    char v64 = *(_BYTE *)(a2 + 279);
    *(_DWORD *)(a1 + 368) |= 0x800000u;
    *(_BYTE *)(a1 + 279) = v64;
    int v36 = *(_DWORD *)(a2 + 368);
  }

          unint64_t v10 = (_BYTE *)*((void *)this + 1);
          uint64_t v52 = *v10;
          if (v52 != 21) {
            break;
          }
LABEL_129:
          *((void *)this + 1) = v10 + 1;
        }

        if (v52 != 25) {
          continue;
        }
LABEL_149:
        *((void *)this + 1) = v10 + 1;
LABEL_150:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v224) & 1) != 0)
        {
          uint64_t v53 = *(void *)v224;
          char v54 = *(_DWORD *)(a1 + 40);
          if (v54 == *(_DWORD *)(a1 + 44))
          {
            sub_10008D024(v216, v54 + 1);
            char v54 = *(_DWORD *)(a1 + 40);
          }

          uint64_t v55 = *(void *)(a1 + 32);
          uint64_t v56 = v54 + 1;
          *(_DWORD *)(a1 + 40) = v54 + 1;
          *(void *)(v55 + 8LL * v54) = v53;
          unsigned int v57 = *((void *)this + 1);
          int v58 = *((_DWORD *)this + 4) - v57;
          if (v58 >= 1)
          {
            uint64_t v59 = v58 / 9u;
            unsigned int v60 = v59 >= *(_DWORD *)(a1 + 44) - v56 ? *(_DWORD *)(a1 + 44) - v56 : v59;
            if (v60 >= 1)
            {
              char v61 = 0;
              while (*(_BYTE *)v57 == 25)
              {
                unsigned int v62 = *(void *)(v57 + 1);
                if (v56 >= *(_DWORD *)(a1 + 44))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v224,  3LL,  "/AppleInternal/Library/BuildRoots/9fd3fc02-a7db-11ef-98ff-a6e88e557b55/Applications/Xcode.app/Conten ts/Developer/Platforms/AppleTVOS.platform/Developer/SDKs/AppleTVOS18.2.Internal.sdk/usr/local/includ e/google/protobuf/repeated_field.h",  602LL);
                  unsigned int v63 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v224,  "CHECK failed: (size()) < (Capacity()): ");
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v223, v63);
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v224);
                  uint64_t v56 = *(_DWORD *)(a1 + 40);
                  uint64_t v55 = *(void *)(a1 + 32);
                }

                *(_DWORD *)(a1 + 40) = v56 + 1;
                *(void *)(v55 + 8LL * v56) = v62;
                ++v61;
                v57 += 9LL;
                ++v56;
                if (v60 == v61)
                {
                  char v61 = v60;
                  break;
                }
              }

              if (v61) {
                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 9 * v61);
              }
            }
          }

  if (!HIBYTE(v7)) {
    goto LABEL_196;
  }
  if ((v7 & 0x1000000) != 0)
  {
    *(_DWORD *)(a1 + 396) |= 0x1000000u;
    uint64_t v53 = *(void **)(a1 + 192);
    if (!v53)
    {
      uint64_t v53 = operator new(0x18uLL);
      _BYTE *v53 = off_101875F78;
      v53[1] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
      v53[2] = 0LL;
      *(void *)(a1 + 192) = v53;
    }

    char v54 = *(void *)(a2 + 192);
    if (!v54) {
      char v54 = *(void *)(qword_1019A1D38 + 192);
    }
    sub_100BB9B5C((uint64_t)v53, v54);
    uint64_t v7 = *(_DWORD *)(a2 + 396);
    if ((v7 & 0x2000000) == 0)
    {
LABEL_149:
      if ((v7 & 0x4000000) == 0) {
        goto LABEL_150;
      }
      goto LABEL_166;
    }
  }

  else if ((v7 & 0x2000000) == 0)
  {
    goto LABEL_149;
  }

  *(_DWORD *)(a1 + 396) |= 0x2000000u;
  uint64_t v55 = *(void **)(a1 + 200);
  if (!v55)
  {
    uint64_t v55 = operator new(0x18uLL);
    char *v55 = off_101875FF0;
    v55[1] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
    v55[2] = 0LL;
    *(void *)(a1 + 200) = v55;
  }

  uint64_t v56 = *(void *)(a2 + 200);
  if (!v56) {
    uint64_t v56 = *(void *)(qword_1019A1D38 + 200);
  }
  sub_100BB9C28((uint64_t)v55, v56);
  uint64_t v7 = *(_DWORD *)(a2 + 396);
  if ((v7 & 0x4000000) == 0)
  {
LABEL_150:
    if ((v7 & 0x8000000) == 0) {
      goto LABEL_151;
    }
    goto LABEL_171;
  }

  uint64_t result = *(float *)(a2 + 200);
  v5 |= 0x800000000000uLL;
  *unsigned int v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 200) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x2000000000000LL) == 0)
  {
LABEL_73:
    if ((v4 & 0x1000000000000LL) == 0) {
      goto LABEL_74;
    }
    goto LABEL_148;
  }

  PB::TextFormatter::format(this, "maxAudioRms", *(float *)(a1 + 240));
  uint64_t v6 = *v5;
  uint64_t v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x400000000000000LL) == 0)
  {
LABEL_72:
    if ((v6 & 0x800000000000000LL) == 0) {
      goto LABEL_73;
    }
    goto LABEL_148;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 204), 0x43u);
  uint64_t v5 = *v4;
  uint64_t v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x4000000000000LL) == 0)
  {
LABEL_72:
    if ((v5 & 0x800000000000000LL) == 0) {
      goto LABEL_73;
    }
    goto LABEL_148;
  }

  uint64_t result = *(float *)(a2 + 156);
  v5 |= 0x1000000000uLL;
  *unsigned int v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(_BYTE *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 156) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x10000000000LL) == 0)
  {
LABEL_66:
    if ((v4 & 0x4000000000LL) == 0) {
      goto LABEL_67;
    }
    goto LABEL_148;
  }

  PB::TextFormatter::format(this, "lowSenseWithoutAudioMaxAccelNormThreshold", *(float *)(a1 + 220));
  uint64_t v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x20000000000000LL) == 0)
  {
LABEL_65:
    if ((v6 & 0x40000000000000LL) == 0) {
      goto LABEL_66;
    }
    goto LABEL_148;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 156), 0x100u);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x10000000000LL) == 0)
  {
LABEL_66:
    if ((v5 & 0x4000000000LL) == 0) {
      goto LABEL_67;
    }
    goto LABEL_148;
  }

  uint64_t v35 = *(_BYTE *)(a2 + 348);
  v6 |= 0x2000000000uLL;
  *unsigned int v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_BYTE *)(a1 + 348) = v35;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x200000000LL) == 0)
  {
LABEL_41:
    if ((v7 & 0x4000000000LL) == 0) {
      goto LABEL_42;
    }
    goto LABEL_148;
  }

  PB::TextFormatter::format(this, "lastTimestampMAPDecision", *(void *)(a1 + 48));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x80000) == 0)
  {
LABEL_45:
    if ((v7 & 0x100000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_148;
  }

  uint64_t result = PB::Writer::write(this, *(_BYTE *)(v3 + 348), 0x130u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x200000000LL) == 0)
  {
LABEL_41:
    if ((v6 & 0x4000000000LL) == 0) {
      goto LABEL_42;
    }
    goto LABEL_148;
  }

  int v80 = *(_BYTE *)(a2 + 179);
  v3 |= 0x100000000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(_BYTE *)(result + 214) = BYTE2(v4);
  *(_BYTE *)(result + 179) = v80;
  LOWORD(sub_1012279C0(0LL, v4, v5) = *(_WORD *)(a2 + 212);
  unsigned int v2 = *(void *)(a2 + 204);
  if ((v2 & 0x1000000000000000LL) == 0)
  {
LABEL_68:
    if ((v5 & 0x10) == 0) {
      goto LABEL_69;
    }
    goto LABEL_148;
  }

  PB::TextFormatter::format(this, "maxRMS", *(float *)(a1 + 124));
  uint64_t v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_67:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_148;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 136), 0x4B4u);
  uint64_t v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_68:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_148;
  }

LABEL_154:
  if ((v36 & 0x1000000) != 0)
  {
    char v65 = *(_BYTE *)(a2 + 356);
    *(_DWORD *)(a1 + 368) |= 0x1000000u;
    *(_BYTE *)(a1 + 356) = v65;
  }

    int v39 = v30;
    uint64_t v40 = v87;
LABEL_155:
    if (v86)
    {
      sub_1002957B8(v40);
      sub_1010DDBC0(buf, "com.apple.locationd.CLEEA");
      sub_100545EE8(a1, (uint64_t *)buf, 1);
      if ((buf[23] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
      objc_msgSend( objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "vendor"), "proxyForService:", @"CLEmergencyController"),  "onCLEmergencyEnablementAssertion:",  v40);
    }

    if (v39)
    {
      sub_1010DDBC0(buf, "");
      sub_100544214(a1, v39, (uint64_t)buf);
      if ((buf[23] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
    }

    goto LABEL_174;
  }

  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_1018401A0);
  }
  int v24 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v25 = &v88;
    if ((v88.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      uint64_t v25 = (std::string *)v88.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = v25;
    _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "#CLEEA removing emergency client,%{public}s",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_1018401A0);
    }
    int v81 = &v88;
    if ((v88.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      int v81 = (std::string *)v88.__r_.__value_.__r.__words[0];
    }
    int v89 = 136446210;
    v90[0] = v81;
    LODWORD(v85) = 12;
    uint64_t v82 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934988,  0LL,  "#CLEEA removing emergency client,%{public}s",  &v89,  v85);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLClientManager::markClientEmergencyEnablementTransition(BOOL, BOOL, CLClientKeyPath *)",  "%s\n",  v82);
    if (v82 != buf) {
      free(v82);
    }
  }

  uint64_t v26 = (void *)(a1 + 616);
  int v27 = sub_10008E8D0(a1 + 616, (const void **)&v88.__r_.__value_.__l.__data_);
  int v28 = (void *)(a1 + 624);
  if (a1 + 624 == v27)
  {
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_1018401A0);
    }
    uint64_t v50 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_FAULT))
    {
      uint64_t v51 = &v88;
      if ((v88.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        uint64_t v51 = (std::string *)v88.__r_.__value_.__r.__words[0];
      }
      uint64_t v52 = *(void *)(a1 + 632);
      *(_DWORD *)buf = 68289538;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&buf[18] = 2082;
      *(void *)&buf[20] = v51;
      uint64_t v92 = 1026;
      uint64_t v93 = v52;
      _os_log_impl( (void *)&_mh_execute_header,  v50,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:#CLEEA Trying to remove emergency beneficiary which doesn't exist, MissingClientKey :%{public, location:escape_only}s, TotalMultisetSize:%{public}d}",  buf,  0x22u);
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_1018401A0);
      }
    }

    uint64_t v53 = (os_log_s *)qword_101934988;
    if (os_signpost_enabled((os_log_t)qword_101934988))
    {
      char v54 = &v88;
      if ((v88.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        char v54 = (std::string *)v88.__r_.__value_.__r.__words[0];
      }
      uint64_t v55 = *(void *)(a1 + 632);
      *(_DWORD *)buf = 68289538;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&buf[18] = 2082;
      *(void *)&buf[20] = v54;
      uint64_t v92 = 1026;
      uint64_t v93 = v55;
      uint64_t v56 = "#CLEEA Trying to remove emergency beneficiary which doesn't exist";
      unsigned int v57 = "{msg%{public}.0s:#CLEEA Trying to remove emergency beneficiary which doesn't exist, MissingClientK"
            "ey:%{public, location:escape_only}s, TotalMultisetSize:%{public}d}";
      goto LABEL_173;
    }
  }

  else
  {
    sub_1003F9708((uint64_t **)(a1 + 616), v27);
    char v29 = *(void *)(a1 + 632);
    unsigned int v86 = v29 == 0;
    int v87 = 0;
    if (v29)
    {
      char v30 = v8;
      uint64_t v31 = (void *)*v26;
      if ((void *)*v26 != v28)
      {
        do
        {
          if (qword_101934980 != -1) {
            dispatch_once(&qword_101934980, &stru_1018401A0);
          }
          int v32 = v31 + 4;
          char v33 = (os_log_s *)qword_101934988;
          if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
          {
            int v34 = v31 + 4;
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = v34;
            _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEFAULT,  "#CLEEA %{public}s is still an emergency client",  buf,  0xCu);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934980 != -1) {
              dispatch_once(&qword_101934980, &stru_1018401A0);
            }
            int v89 = 136446210;
            v90[0] = v32;
            LODWORD(v85) = 12;
            uint64_t v37 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934988,  0LL,  "#CLEEA %{public}s is still an emergency client",  &v89,  v85);
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLClientManager::markClientEmergencyEnablementTransition(BOOL, BOOL, CLClientKeyPath *)",  "%s\n",  v37);
            if (v37 != buf) {
              free(v37);
            }
          }

          uint64_t v35 = (void *)v31[1];
          if (v35)
          {
            do
            {
              int v36 = v35;
              uint64_t v35 = (void *)*v35;
            }

            while (v35);
          }

          else
          {
            do
            {
              int v36 = (void *)v31[2];
              int v22 = *v36 == (void)v31;
              uint64_t v31 = v36;
            }

            while (!v22);
          }

          uint64_t v31 = v36;
        }

        while (v36 != v28);
      }
    }

    else
    {
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_1018401A0);
      }
      int v58 = (os_log_s *)qword_101934988;
      if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v58,  OS_LOG_TYPE_DEFAULT,  "#CLEEA Last emergency client disconnected",  buf,  2u);
      }

      char v30 = v8;
      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934980 != -1) {
          dispatch_once(&qword_101934980, &stru_1018401A0);
        }
        LOWORD(v89) = 0;
        LODWORD(v85) = 2;
        int v84 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934988,  0LL,  "#CLEEA Last emergency client disconnected",  &v89,  v85);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLClientManager::markClientEmergencyEnablementTransition(BOOL, BOOL, CLClientKeyPath *)",  "%s\n",  v84);
        if (v84 != buf) {
          free(v84);
        }
      }
    }

    if (!a3) {
      goto LABEL_154;
    }
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_1018401A0);
    }
    uint64_t v59 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
    {
      unsigned int v60 = &v88;
      if ((v88.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        unsigned int v60 = (std::string *)v88.__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)buf = 68289282;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&buf[18] = 2082;
      *(void *)&buf[20] = v60;
      _os_log_impl( (void *)&_mh_execute_header,  v59,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#CLEPTO removing beneficiary for deauthorization override, Client:%{public, locatio n:escape_only}s}",  buf,  0x1Cu);
    }

    char v61 = (void *)(a1 + 640);
    unsigned int v62 = sub_10008E8D0(a1 + 640, (const void **)&v88.__r_.__value_.__l.__data_);
    unsigned int v63 = (void *)(a1 + 648);
    if (a1 + 648 != v62)
    {
      sub_1003F9708((uint64_t **)(a1 + 640), v62);
      char v64 = (void *)*v61;
      if ((void *)*v61 != v63)
      {
        do
        {
          if (qword_101934980 != -1) {
            dispatch_once(&qword_101934980, &stru_1018401A0);
          }
          char v65 = v64 + 4;
          uint64_t v66 = (os_log_s *)qword_101934988;
          if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v67 = v64 + 4;
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = v67;
            _os_log_impl( (void *)&_mh_execute_header,  v66,  OS_LOG_TYPE_DEFAULT,  "#CLEPTO (-) : %{public}s is still a beneficiary for deauthorization override",  buf,  0xCu);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934980 != -1) {
              dispatch_once(&qword_101934980, &stru_1018401A0);
            }
            int v89 = 136446210;
            v90[0] = v65;
            LODWORD(v85) = 12;
            uint64_t v70 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934988,  0LL,  "#CLEPTO (-) : %{public}s is still a beneficiary for deauthorization override",  &v89,  v85);
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLClientManager::markClientEmergencyEnablementTransition(BOOL, BOOL, CLClientKeyPath *)",  "%s\n",  v70);
            if (v70 != buf) {
              free(v70);
            }
          }

          unsigned int v68 = (void *)v64[1];
          if (v68)
          {
            do
            {
              uint64_t v69 = v68;
              unsigned int v68 = (void *)*v68;
            }

            while (v68);
          }

          else
          {
            do
            {
              uint64_t v69 = (void *)v64[2];
              int v22 = *v69 == (void)v64;
              char v64 = v69;
            }

            while (!v22);
          }

          char v64 = v69;
        }

        while (v69 != v63);
      }

      goto LABEL_154;
    }

    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_1018401A0);
    }
    uint64_t v71 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_FAULT))
    {
      uint64_t v72 = &v88;
      if ((v88.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        uint64_t v72 = (std::string *)v88.__r_.__value_.__r.__words[0];
      }
      uint64_t v73 = *(void *)(a1 + 656);
      *(_DWORD *)buf = 68289538;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&buf[18] = 2082;
      *(void *)&buf[20] = v72;
      uint64_t v92 = 1026;
      uint64_t v93 = v73;
      _os_log_impl( (void *)&_mh_execute_header,  v71,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:#CLEPTO Trying to remove deauthorizationOverride beneficiary which doesn't exist, Mis singClientKey:%{public, location:escape_only}s, TotalMultisetSize:%{public}d}",  buf,  0x22u);
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_1018401A0);
      }
    }

    uint64_t v53 = (os_log_s *)qword_101934988;
    if (os_signpost_enabled((os_log_t)qword_101934988))
    {
      uint64_t v74 = &v88;
      if ((v88.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        uint64_t v74 = (std::string *)v88.__r_.__value_.__r.__words[0];
      }
      char v75 = *(void *)(a1 + 656);
      *(_DWORD *)buf = 68289538;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&buf[18] = 2082;
      *(void *)&buf[20] = v74;
      uint64_t v92 = 1026;
      uint64_t v93 = v75;
      uint64_t v56 = "#CLEPTO Trying to remove deauthorizationOverride beneficiary which doesn't exist";
      unsigned int v57 = "{msg%{public}.0s:#CLEPTO Trying to remove deauthorizationOverride beneficiary which doesn't exist, "
            "MissingClientKey:%{public, location:escape_only}s, TotalMultisetSize:%{public}d}";
LABEL_173:
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v53,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  v56,  v57,  buf,  0x22u);
    }
  }

        ++v71;
        --v70;
      }

      while (v70);
    }

    while (v69++ != v107);
  }

  if ((v122[47] & 0x80000000) != 0) {
    operator delete(*(void **)&v122[24]);
  }
  int v24 = v110;
  return v24 & 1;
}

    if (!*(_BYTE *)(a1 + 96))
    {
      uint64_t v99 = 37;
      goto LABEL_161;
    }

    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_1018819B8);
    }
    uint64_t v108 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v109 = *(void *)(a1 + 1136);
      uint64_t v110 = *((void *)v40 + 4);
      *(_DWORD *)buf = 134349313;
      uint64_t v176 = v109;
      uint64_t v177 = 2049;
      uint64_t v178 = v110;
      _os_log_impl( (void *)&_mh_execute_header,  v108,  OS_LOG_TYPE_DEBUG,  "CLMM,Time,%{public}.1lf,roadID,%{private}llu,no particles after the intersection",  buf,  0x16u);
    }

    if (!sub_1002921D0(115, 2))
    {
LABEL_160:
      uint64_t v99 = 37;
      goto LABEL_161;
    }

    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_1018819B8);
    }
    uint64_t v121 = *(void *)(a1 + 1136);
    uint64_t v122 = *((void *)v40 + 4);
    uint64_t v163 = 134349313;
    uint64_t v164 = v121;
    v165 = 2049;
    uint64_t v166 = v122;
    LODWORD(v144) = 22;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,Time,%{public}.1lf,roadID,%{private}llu,no particles after the intersection",  &v163,  v144);
    uint64_t v124 = (uint8_t *)v123;
    sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLParticleMapMatcher::assessCandidates()", "%s\n", v123);
    if (v124 != buf) {
      free(v124);
    }
    uint64_t v99 = 37;
LABEL_161:
    sub_100890314(&v157);
    if (SHIBYTE(v173) < 0) {
      operator delete(*(void **)&v172[80]);
    }
    if (v99 == 37 || !v99)
    {
      uint64_t v111 = (int *)*((void *)v40 + 1);
      if (v111)
      {
        do
        {
          uint64_t v112 = v111;
          uint64_t v111 = *(int **)v111;
        }

        while (v111);
      }

      else
      {
        do
        {
          uint64_t v112 = (int *)*((void *)v40 + 2);
          _ZF = *(void *)v112 == (void)v40;
          uint64_t v40 = v112;
        }

        while (!_ZF);
      }

      uint64_t v40 = v112;
      if (v112 == v150)
      {
LABEL_54:
        int v39 = 1LL;
        goto LABEL_219;
      }

      continue;
    }

    break;
  }

  int v39 = 0LL;
LABEL_219:
  v137 = v162;
  if (v162)
  {
    v138 = (unint64_t *)&v162->__shared_owners_;
    do
      uint64_t v139 = __ldaxr(v138);
    while (__stlxr(v139 - 1, v138));
    if (!v139)
    {
      ((void (*)(std::__shared_weak_count *))v137->__on_zero_shared)(v137);
      std::__shared_weak_count::__release_weak(v137);
    }
  }

  return v39;
}

  uint64_t result = *(float *)(a2 + 204);
  v5 |= 0x1000000000000uLL;
  *unsigned int v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(_BYTE *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 204) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x800000000000LL) == 0)
  {
LABEL_74:
    if ((v4 & 0x400000000000LL) == 0) {
      goto LABEL_75;
    }
    goto LABEL_156;
  }

  PB::TextFormatter::format(this, "maxAccelNormThreshold", *(float *)(a1 + 252));
  uint64_t v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x2000000000000000LL) == 0)
  {
LABEL_73:
    if ((v6 & 0x4000000000000000LL) == 0) {
      goto LABEL_74;
    }
    goto LABEL_156;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 204), 0x108u);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x800000000000LL) == 0)
  {
LABEL_74:
    if ((v5 & 0x400000000000LL) == 0) {
      goto LABEL_75;
    }
    goto LABEL_156;
  }

  unsigned int v43 = *(_BYTE *)(a2 + 346);
  v6 |= 0x800000000uLL;
  *unsigned int v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_BYTE *)(a1 + 346) = v43;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x20000) == 0)
  {
LABEL_49:
    if ((v7 & 0x20000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_156;
  }

  PB::TextFormatter::format(this, "movingGpsCount", *(_DWORD *)(a1 + 144));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x8000000) == 0)
  {
LABEL_53:
    if ((v7 & 0x10000000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_156;
  }

  uint64_t result = PB::Writer::write(this, *(_BYTE *)(v3 + 346), 0x138u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x20000) == 0)
  {
LABEL_49:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_156;
  }

  int v89 = *(_BYTE *)(a2 + 200);
  int v90 = v4 >> 16;
  v4 |= 0x2000uLL;
  *(void *)(result + 204) = v3;
  *(_BYTE *)(result + 214) = v90;
  *(_WORD *)(result + 212) = v4;
  *(_BYTE *)(result + 200) = v89;
  LOWORD(sub_1012279C0(0LL, v4, v5) = *(_WORD *)(a2 + 212);
  unsigned int v2 = *(void *)(a2 + 204);
  if ((v2 & 0x2000000000LL) == 0)
  {
LABEL_76:
    if ((v2 & 0x20000000000LL) == 0) {
      goto LABEL_77;
    }
    goto LABEL_156;
  }

  PB::TextFormatter::format(this, "passThru", *(_BYTE *)(a1 + 196));
  uint64_t v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((*(_WORD *)(a1 + 212) & 0x400) == 0)
  {
LABEL_75:
    if ((v6 & 0x800) == 0) {
      goto LABEL_76;
    }
    goto LABEL_156;
  }

  uint64_t result = PB::Writer::write(this, *(_BYTE *)(v3 + 167), 0x4BCu);
  LOWORD(sub_1012279C0(0LL, v4, v5) = *(_WORD *)(v3 + 212);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v5 & 0x1000) == 0)
  {
LABEL_76:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_156;
  }

        *(_DWORD *)(a1 + 52) = v71;
        goto LABEL_158;
      case 8u:
        *(_BYTE *)(a1 + 64) |= 0x40u;
        uint64_t v74 = *((void *)this + 1);
        char v75 = *((void *)this + 2);
        uint64_t v76 = *(void *)this;
        if (v74 <= 0xFFFFFFFFFFFFFFF5LL && v74 + 10 <= v75)
        {
          char v77 = 0;
          int v78 = 0;
          int v79 = 0LL;
          do
          {
            int v80 = v74 + 1;
            *((void *)this + 1) = v74 + 1;
            int v81 = *(_BYTE *)(v76 + v74);
            v79 |= (unint64_t)(v81 & 0x7F) << v77;
            if ((v81 & 0x80) == 0) {
              goto LABEL_157;
            }
            v77 += 7;
            uint64_t v74 = v80;
            char v15 = v78++ > 8;
          }

          while (!v15);
LABEL_129:
          LODWORD(v79) = 0;
          goto LABEL_157;
        }

        uint64_t v109 = 0;
        uint64_t v110 = 0;
        int v79 = 0LL;
        if (v75 <= v74) {
          char v75 = *((void *)this + 1);
        }
        while (2)
        {
          if (v75 == v74)
          {
            LODWORD(v79) = 0;
            *((_BYTE *)this + 24) = 1;
          }

          else
          {
            uint64_t v111 = v74 + 1;
            uint64_t v112 = *(_BYTE *)(v76 + v74);
            *((void *)this + 1) = v111;
            v79 |= (unint64_t)(v112 & 0x7F) << v109;
            if (v112 < 0)
            {
              v109 += 7;
              uint64_t v74 = v111;
              char v15 = v110++ > 8;
              if (v15) {
                goto LABEL_129;
              }
              continue;
            }

            if (*((_BYTE *)this + 24)) {
              LODWORD(v79) = 0;
            }
          }

          break;
        }

void sub_1001D9CE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001D9CFC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101828198;
  sub_1001D9D38(a1);
  sub_10008D0EC((uint64_t)a1 + 288);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void *sub_1001D9D38(void *result)
{
  if ((void *)qword_1019A0BA0 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[8];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    uint64_t v3 = v1[11];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
    }
    uint64_t v4 = v1[13];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
    }
    uint64_t v5 = v1[17];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
    }
    uint64_t v6 = v1[26];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
    }
    uint64_t result = (void *)v1[40];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_1001D9DE8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

uint64_t sub_1001D9DFC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0BA0;
  if (!qword_1019A0BA0)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0BA0;
  }

  return result;
}

double sub_1001D9E28()
{
  unsigned __int8 v0 = (char *)operator new(0x178uLL);
  *(void *)unsigned __int8 v0 = off_101828198;
  *((void *)v0 + 36) = 0LL;
  *((void *)v0 + 37) = 0LL;
  *((_DWORD *)v0 + 76) = 0;
  *((_DWORD *)v0 + 90) = 0;
  *((_WORD *)v0 + 56) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *((void *)v0 + 11) = 0LL;
  *((void *)v0 + 12) = 0xFFFFFFFFLL;
  *((void *)v0 + 13) = 0LL;
  *(_OWORD *)(v0 + 130) = 0u;
  *(_OWORD *)(v0 + 146) = 0u;
  *(_OWORD *)(v0 + 162) = 0u;
  *(_OWORD *)(v0 + 178) = 0u;
  *(_OWORD *)(v0 + 194) = 0u;
  *(_OWORD *)(v0 + 210) = 0u;
  *(_OWORD *)(v0 + 226) = 0u;
  *(_OWORD *)(v0 + 242) = 0u;
  *((_OWORD *)v0 + 17) = 0u;
  *(_OWORD *)(v0 + 114) = 0u;
  *(void *)(v0 + 364) = 0LL;
  *(_OWORD *)(v0 + 258) = 0u;
  *(_OWORD *)(v0 + 341) = 0u;
  *(_OWORD *)(v0 + 312) = 0u;
  *(_OWORD *)(v0 + 328) = 0u;
  return result;
}

uint64_t sub_1001D9EC4(uint64_t result)
{
  uint64_t v1 = result;
  unsigned int v2 = *(_DWORD *)(result + 364);
  if ((_BYTE)v2)
  {
    *(_DWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }

  uint64_t v3 = (unsigned int *)(result + 364);
  if ((v2 & 0xFF00) != 0)
  {
    *(_BYTE *)(result + 112) = 0;
    *(_DWORD *)(result + 60) = 0;
    if ((v2 & 0x400) != 0)
    {
      uint64_t v4 = *(void *)(result + 64);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 28))
        {
          *(void *)(v4 + 8) = 0LL;
          *(void *)(v4 + 16) = 0LL;
        }

        *(_DWORD *)(v4 + 28) = 0;
        unsigned int v2 = *v3;
      }
    }

    *(_BYTE *)(result + 113) = 0;
    *(void *)(result + 72) = 0LL;
    *(void *)(result + 80) = 0LL;
    if ((v2 & 0x8000) != 0)
    {
      uint64_t v5 = *(void *)(result + 88);
      if (v5)
      {
        if (*(_BYTE *)(v5 + 28))
        {
          *(void *)(v5 + 8) = 0LL;
          *(void *)(v5 + 16) = 0LL;
        }

        *(_DWORD *)(v5 + 28) = 0;
        unsigned int v2 = *v3;
      }
    }
  }

  if ((v2 & 0xFF0000) != 0)
  {
    *(void *)(result + 96) = 0xFFFFFFFFLL;
    if ((v2 & 0x40000) != 0)
    {
      uint64_t v6 = *(void *)(result + 104);
      if (v6)
      {
        if (*(_BYTE *)(v6 + 28))
        {
          *(void *)(v6 + 8) = 0LL;
          *(void *)(v6 + 16) = 0LL;
        }

        *(_DWORD *)(v6 + 28) = 0;
        unsigned int v2 = *v3;
      }
    }

    *(_BYTE *)(result + 114) = 0;
    *(void *)(result + 124) = 0LL;
    *(void *)(result + 116) = 0LL;
    *(_DWORD *)(result + 132) = 0;
    if ((v2 & 0x800000) != 0)
    {
      uint64_t v7 = *(void *)(result + 136);
      if (v7)
      {
        if (*(_BYTE *)(v7 + 32))
        {
          *(void *)(v7 + 8) = 0LL;
          *(void *)(v7 + 16) = 0LL;
          *(_WORD *)(v7 + 24) = 0;
        }

        *(_DWORD *)(v7 + 32) = 0;
        unsigned int v2 = *v3;
      }
    }
  }

  if (HIBYTE(v2))
  {
    *(_BYTE *)(result + 115) = 0;
    *(_OWORD *)(result + 144) = 0u;
    *(_OWORD *)(result + 160) = 0u;
    *(_OWORD *)(result + 176) = 0u;
    *(void *)(result + 192) = 0LL;
  }

  unsigned int v8 = *(_DWORD *)(result + 368);
  if ((_BYTE)v8)
  {
    *(void *)(result + 200) = 0LL;
    *(_BYTE *)(result + 276) = 0;
    if ((v8 & 4) != 0)
    {
      uint64_t v9 = *(void *)(result + 208);
      if (v9)
      {
        if (*(_BYTE *)(v9 + 28))
        {
          *(void *)(v9 + 8) = 0LL;
          *(void *)(v9 + 16) = 0LL;
        }

        *(_DWORD *)(v9 + 28) = 0;
        unsigned int v8 = *(_DWORD *)(result + 368);
      }
    }

    *(_DWORD *)(result + 272) = 0;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 232) = 0u;
  }

  if ((v8 & 0xFF00) != 0)
  {
    *(_BYTE *)(result + 277) = 0;
    *(void *)(result + 280) = 0LL;
    *(_DWORD *)(result + 312) = 0;
    *(void *)(result + 256) = 0LL;
    *(void *)(result + 264) = 0LL;
    *(void *)(result + 248) = 0LL;
    if ((v8 & 0x8000) != 0)
    {
      uint64_t v10 = *(void *)(result + 320);
      if (v10)
      {
        if (*(_BYTE *)(v10 + 40))
        {
          *(void *)(v10 + 8) = 0LL;
          *(void *)(v10 + 16) = 0LL;
          *(void *)(v10 + 24) = 0LL;
          *(_DWORD *)(v10 + 32) = -1;
        }

        *(_DWORD *)(v10 + 40) = 0;
        unsigned int v8 = *(_DWORD *)(result + 368);
      }
    }
  }

  if ((v8 & 0xFF0000) != 0)
  {
    *(_DWORD *)(result + 316) = 0;
    *(_WORD *)(result + 278) = 0;
    *(void *)(result + 336) = 0LL;
    *(void *)(result + 344) = 0LL;
    *(void *)(result + 328) = 0LL;
    *(_DWORD *)(result + 352) = 0;
  }

  if (HIBYTE(v8)) {
    *(_BYTE *)(result + 356) = 0;
  }
  if (*(int *)(result + 296) >= 1)
  {
    uint64_t v11 = 0LL;
    do
    {
      uint64_t v12 = *(void *)(*(void *)(v1 + 288) + 8 * v11);
      double result = (*(uint64_t (**)(uint64_t))(*(void *)v12 + 32LL))(v12);
      ++v11;
    }

    while (v11 < *(int *)(v1 + 296));
  }

  *(_DWORD *)(v1 + 296) = 0;
  *(void *)uint64_t v3 = 0LL;
  return result;
}

uint64_t sub_1001DA0D4( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 288);
LABEL_2:
  while (2)
  {
    uint64_t v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_149;
        }
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v188) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 8) = *(void *)v188;
        *(_DWORD *)(a1 + 364) |= 1u;
        uint64_t v9 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v9 + 1;
        goto LABEL_15;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_149;
        }
LABEL_15:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v188) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = *(void *)v188;
        *(_DWORD *)(a1 + 364) |= 2u;
        uint64_t v10 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v10 + 1;
LABEL_20:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v188) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 24) = *(void *)v188;
        *(_DWORD *)(a1 + 364) |= 4u;
        uint64_t v11 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v11 + 1;
LABEL_25:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v188) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 32) = *(void *)v188;
        *(_DWORD *)(a1 + 364) |= 8u;
        uint64_t v12 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v12 + 1;
LABEL_30:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v188) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 40) = *(void *)v188;
        *(_DWORD *)(a1 + 364) |= 0x10u;
        unsigned int v13 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v13 + 1;
LABEL_35:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v188) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 48) = v188[0];
        *(_DWORD *)(a1 + 364) |= 0x20u;
        int v14 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v14 + 1;
LABEL_40:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v188) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 52) = v188[0];
        *(_DWORD *)(a1 + 364) |= 0x40u;
        char v15 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v15 + 1;
LABEL_45:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v188) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 56) = v188[0];
        *(_DWORD *)(a1 + 364) |= 0x80u;
        uint64_t v17 = (_BYTE *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        uint64_t v18 = v17 + 1;
        *((void *)this + 1) = v18;
LABEL_51:
        if ((unint64_t)v18 >= v16 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v188);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v19 = v188[0];
          uint64_t v20 = (_BYTE *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }

        else
        {
          unsigned int v19 = *v18;
          uint64_t v20 = v18 + 1;
          *((void *)this + 1) = v20;
        }

        *(_BYTE *)(a1 + 112) = v19 != 0;
        *(_DWORD *)(a1 + 364) |= 0x100u;
        uint64_t v21 = v20 + 1;
        *((void *)this + 1) = v21;
LABEL_158:
        if ((unint64_t)v21 >= v16 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v188);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v59 = v188[0];
        }

        else
        {
          unsigned int v59 = *v21;
          *((void *)this + 1) = v21 + 1;
        }

        if (v59 <= 3)
        {
          *(_DWORD *)(a1 + 364) |= 0x200u;
          *(_DWORD *)(a1 + 60) = v59;
        }

        unsigned int v60 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v60 + 1;
LABEL_168:
        *(_DWORD *)(a1 + 364) |= 0x400u;
        char v61 = *(void **)(a1 + 64);
        if (!v61)
        {
          char v61 = operator new(0x20uLL);
          *char v61 = off_101827EC8;
          v61[1] = 0LL;
          v61[2] = 0LL;
          v61[3] = 0LL;
          *(void *)(a1 + 64) = v61;
        }

        unsigned int v62 = (char *)*((void *)this + 1);
        if ((unint64_t)v62 >= *((void *)this + 2) || *v62 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v188)) {
            return 0LL;
          }
        }

        else
        {
          v188[0] = *v62;
          *((void *)this + 1) = v62 + 1;
        }

        int v63 = *((_DWORD *)this + 14);
        int v64 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v63 + 1;
        if (v63 >= v64) {
          return 0LL;
        }
        int v65 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v188[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v65);
        int v67 = *((_DWORD *)this + 14);
        BOOL v68 = __OFSUB__(v67, 1);
        int v69 = v67 - 1;
        if (v69 < 0 == v68) {
          *((_DWORD *)this + 14) = v69;
        }
        uint64_t v70 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v70 + 1;
LABEL_182:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v188) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 72) = *(void *)v188;
        *(_DWORD *)(a1 + 364) |= 0x800u;
        uint64_t v71 = (_BYTE *)*((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        int v23 = v71 + 1;
        *((void *)this + 1) = v23;
LABEL_186:
        if ((unint64_t)v23 >= v22 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v188);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v72 = v188[0];
          uint64_t v73 = (_BYTE *)*((void *)this + 1);
          unint64_t v22 = *((void *)this + 2);
        }

        else
        {
          unsigned int v72 = *v23;
          uint64_t v73 = v23 + 1;
          *((void *)this + 1) = v73;
        }

        *(_DWORD *)(a1 + 80) = v72;
        *(_DWORD *)(a1 + 364) |= 0x1000u;
        int v24 = v73 + 1;
        *((void *)this + 1) = v24;
LABEL_194:
        if ((unint64_t)v24 >= v22 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v188);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v74 = v188[0];
          char v75 = (_BYTE *)*((void *)this + 1);
          unint64_t v22 = *((void *)this + 2);
        }

        else
        {
          unsigned int v74 = *v24;
          char v75 = v24 + 1;
          *((void *)this + 1) = v75;
        }

        *(_DWORD *)(a1 + 84) = v74;
        *(_DWORD *)(a1 + 364) |= 0x2000u;
        uint64_t v25 = v75 + 1;
        *((void *)this + 1) = v25;
LABEL_202:
        if ((unint64_t)v25 >= v22 || (char)*v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v188);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v76 = v188[0];
          char v77 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v22 = *((void *)this + 2);
        }

        else
        {
          unsigned int v76 = *v25;
          char v77 = v25 + 1;
          *((void *)this + 1) = v77;
        }

        *(_BYTE *)(a1 + 113) = v76 != 0;
        int v26 = *(_DWORD *)(a1 + 364) | 0x4000;
        *(_DWORD *)(a1 + 364) = v26;
        *((void *)this + 1) = v77 + 2;
LABEL_211:
        *(_DWORD *)(a1 + 364) = v26 | 0x8000;
        int v78 = *(void **)(a1 + 88);
        if (!v78)
        {
          int v78 = operator new(0x20uLL);
          *int v78 = off_101828030;
          v78[1] = 0LL;
          v78[2] = 0LL;
          v78[3] = 0LL;
          *(void *)(a1 + 88) = v78;
        }

        int v79 = (char *)*((void *)this + 1);
        if ((unint64_t)v79 >= *((void *)this + 2) || *v79 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v188)) {
            return 0LL;
          }
        }

        else
        {
          v188[0] = *v79;
          *((void *)this + 1) = v79 + 1;
        }

        int v80 = *((_DWORD *)this + 14);
        int v81 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v80 + 1;
        if (v80 >= v81) {
          return 0LL;
        }
        int v82 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v188[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v82);
        int v84 = *((_DWORD *)this + 14);
        BOOL v68 = __OFSUB__(v84, 1);
        int v85 = v84 - 1;
        if (v85 < 0 == v68) {
          *((_DWORD *)this + 14) = v85;
        }
        unsigned int v86 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        int v28 = (char *)(v86 + 2);
        *((void *)this + 1) = v28;
LABEL_226:
        if ((unint64_t)v28 >= v27 || *v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v188);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v87 = v188[0];
        }

        else
        {
          unsigned int v87 = *v28;
          *((void *)this + 1) = v28 + 1;
        }

        if (v87 + 1 <= 3)
        {
          *(_DWORD *)(a1 + 364) |= 0x10000u;
          *(_DWORD *)(a1 + 96) = v87;
        }

        int v88 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v88 + 2;
LABEL_237:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v188) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 100) = v188[0];
        int v29 = *(_DWORD *)(a1 + 364) | 0x20000;
        *(_DWORD *)(a1 + 364) = v29;
        int v89 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v89 + 2;
LABEL_242:
        *(_DWORD *)(a1 + 364) = v29 | 0x40000;
        int v90 = *(void **)(a1 + 104);
        if (!v90)
        {
          int v90 = operator new(0x20uLL);
          *int v90 = off_101827EC8;
          v90[1] = 0LL;
          v90[2] = 0LL;
          v90[3] = 0LL;
          *(void *)(a1 + 104) = v90;
        }

        unsigned int v91 = (char *)*((void *)this + 1);
        if ((unint64_t)v91 >= *((void *)this + 2) || *v91 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v188)) {
            return 0LL;
          }
        }

        else
        {
          v188[0] = *v91;
          *((void *)this + 1) = v91 + 1;
        }

        int v92 = *((_DWORD *)this + 14);
        int v93 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v92 + 1;
        if (v92 >= v93) {
          return 0LL;
        }
        int v94 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v188[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v94);
        int v96 = *((_DWORD *)this + 14);
        BOOL v68 = __OFSUB__(v96, 1);
        int v97 = v96 - 1;
        if (v97 < 0 == v68) {
          *((_DWORD *)this + 14) = v97;
        }
        uint64_t v98 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v98 + 2;
LABEL_257:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v188) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 120) = *(void *)v188;
        *(_DWORD *)(a1 + 364) |= 0x80000u;
        uint64_t v99 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v99 + 2;
LABEL_262:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v188) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 128) = *(void *)v188;
        *(_DWORD *)(a1 + 364) |= 0x100000u;
        uint64_t v100 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v30 = *((void *)this + 2);
        uint64_t v31 = (char *)(v100 + 2);
        *((void *)this + 1) = v31;
LABEL_267:
        if ((unint64_t)v31 >= v30 || *v31 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v188);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v101 = v188[0];
        }

        else
        {
          unsigned int v101 = *v31;
          *((void *)this + 1) = v31 + 1;
        }

        if (v101 <= 2)
        {
          *(_DWORD *)(a1 + 364) |= 0x200000u;
          *(_DWORD *)(a1 + 116) = v101;
        }

        uint64_t v102 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v32 = *((void *)this + 2);
        char v33 = v102 + 2;
        *((void *)this + 1) = v33;
LABEL_278:
        if ((unint64_t)v33 >= v32 || (char)*v33 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v188);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v103 = v188[0];
          uint64_t v104 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v32 = *((void *)this + 2);
        }

        else
        {
          unsigned int v103 = *v33;
          uint64_t v104 = v33 + 1;
          *((void *)this + 1) = v104;
        }

        *(_BYTE *)(a1 + 114) = v103 != 0;
        int v34 = *(_DWORD *)(a1 + 364) | 0x400000;
        *(_DWORD *)(a1 + 364) = v34;
        *((void *)this + 1) = v104 + 2;
LABEL_287:
        *(_DWORD *)(a1 + 364) = v34 | 0x800000;
        uint64_t v105 = *(_DWORD **)(a1 + 136);
        if (!v105)
        {
          uint64_t v105 = operator new(0x28uLL);
          v105[7] = 0;
          v105[8] = 0;
          *((void *)v105 + 1) = 0LL;
          *((void *)v105 + 2) = 0LL;
          *(void *)uint64_t v105 = off_101827FB8;
          *((_WORD *)v105 + 12) = 0;
          *(void *)(a1 + 136) = v105;
        }

        uint64_t v106 = (char *)*((void *)this + 1);
        if ((unint64_t)v106 >= *((void *)this + 2) || *v106 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v188)) {
            return 0LL;
          }
        }

        else
        {
          v188[0] = *v106;
          *((void *)this + 1) = v106 + 1;
        }

        int v107 = *((_DWORD *)this + 14);
        int v108 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v107 + 1;
        if (v107 >= v108) {
          return 0LL;
        }
        int v109 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v188[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v109);
        int v111 = *((_DWORD *)this + 14);
        BOOL v68 = __OFSUB__(v111, 1);
        int v112 = v111 - 1;
        if (v112 < 0 == v68) {
          *((_DWORD *)this + 14) = v112;
        }
        uint64_t v113 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v113 + 2;
LABEL_302:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v188) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 144) = *(void *)v188;
        *(_DWORD *)(a1 + 364) |= 0x1000000u;
        uint64_t v114 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v114 + 2;
LABEL_307:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v188) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 152) = *(void *)v188;
        *(_DWORD *)(a1 + 364) |= 0x2000000u;
        uint64_t v115 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v115 + 2;
LABEL_312:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v188) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 160) = *(void *)v188;
        *(_DWORD *)(a1 + 364) |= 0x4000000u;
        uint64_t v116 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v116 + 2;
LABEL_317:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v188) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 168) = *(void *)v188;
        *(_DWORD *)(a1 + 364) |= 0x8000000u;
        uint64_t v117 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v117 + 2;
LABEL_322:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v188) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 176) = *(void *)v188;
        *(_DWORD *)(a1 + 364) |= 0x10000000u;
        uint64_t v118 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v118 + 2;
LABEL_327:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v188) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 184) = *(void *)v188;
        *(_DWORD *)(a1 + 364) |= 0x20000000u;
        uint64_t v119 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v35 = *((void *)this + 2);
        int v36 = v119 + 2;
        *((void *)this + 1) = v36;
LABEL_332:
        if ((unint64_t)v36 >= v35 || (char)*v36 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v188);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v120 = v188[0];
          uint64_t v121 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v35 = *((void *)this + 2);
        }

        else
        {
          unsigned int v120 = *v36;
          uint64_t v121 = v36 + 1;
          *((void *)this + 1) = v121;
        }

        *(_BYTE *)(a1 + 115) = v120 != 0;
        *(_DWORD *)(a1 + 364) |= 0x40000000u;
        *((void *)this + 1) = v121 + 2;
LABEL_341:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v188) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 192) = *(void *)v188;
        *(_DWORD *)(a1 + 364) |= 0x80000000;
        uint64_t v122 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v122 + 2;
LABEL_346:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v188) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 200) = *(void *)v188;
        *(_DWORD *)(a1 + 368) |= 1u;
        uint64_t v123 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v37 = *((void *)this + 2);
        int v38 = v123 + 2;
        *((void *)this + 1) = v38;
LABEL_351:
        if ((unint64_t)v38 >= v37 || (char)*v38 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v188);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v124 = v188[0];
          uint64_t v125 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v37 = *((void *)this + 2);
        }

        else
        {
          unsigned int v124 = *v38;
          uint64_t v125 = v38 + 1;
          *((void *)this + 1) = v125;
        }

        *(_BYTE *)(a1 + 276) = v124 != 0;
        int v39 = *(_DWORD *)(a1 + 368) | 2;
        *(_DWORD *)(a1 + 368) = v39;
        *((void *)this + 1) = v125 + 2;
LABEL_360:
        *(_DWORD *)(a1 + 368) = v39 | 4;
        uint64_t v126 = *(void **)(a1 + 208);
        if (!v126)
        {
          uint64_t v126 = operator new(0x20uLL);
          void *v126 = off_101827EC8;
          v126[1] = 0LL;
          v126[2] = 0LL;
          v126[3] = 0LL;
          *(void *)(a1 + 208) = v126;
        }

        uint64_t v127 = (char *)*((void *)this + 1);
        if ((unint64_t)v127 >= *((void *)this + 2) || *v127 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v188)) {
            return 0LL;
          }
        }

        else
        {
          v188[0] = *v127;
          *((void *)this + 1) = v127 + 1;
        }

        int v128 = *((_DWORD *)this + 14);
        int v129 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v128 + 1;
        if (v128 >= v129) {
          return 0LL;
        }
        int v130 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v188[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v130);
        int v132 = *((_DWORD *)this + 14);
        BOOL v68 = __OFSUB__(v132, 1);
        int v133 = v132 - 1;
        if (v133 < 0 == v68) {
          *((_DWORD *)this + 14) = v133;
        }
        int v134 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v134 + 2;
LABEL_375:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v188) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 216) = *(void *)v188;
        *(_DWORD *)(a1 + 368) |= 8u;
        int v135 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v40 = *((void *)this + 2);
        uint64_t v41 = (char *)(v135 + 2);
        *((void *)this + 1) = v41;
LABEL_380:
        if ((unint64_t)v41 >= v40 || *v41 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v188);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v136 = v188[0];
        }

        else
        {
          unsigned int v136 = *v41;
          *((void *)this + 1) = v41 + 1;
        }

        if (v136 <= 2)
        {
          *(_DWORD *)(a1 + 368) |= 0x10u;
          *(_DWORD *)(a1 + 272) = v136;
        }

        v137 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v137 + 2;
LABEL_391:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v188) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 224) = *(void *)v188;
        *(_DWORD *)(a1 + 368) |= 0x20u;
        v138 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v138 + 2;
LABEL_396:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v188) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 232) = *(void *)v188;
        *(_DWORD *)(a1 + 368) |= 0x40u;
        uint64_t v139 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v139 + 2;
LABEL_401:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v188) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 240) = *(void *)v188;
        *(_DWORD *)(a1 + 368) |= 0x80u;
        uint64_t v140 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v140 + 2;
LABEL_406:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v188) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 248) = *(void *)v188;
        *(_DWORD *)(a1 + 368) |= 0x100u;
        uint64_t v141 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v141 + 2;
LABEL_411:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v188) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 256) = *(void *)v188;
        *(_DWORD *)(a1 + 368) |= 0x200u;
        uint64_t v142 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v42 = *((void *)this + 2);
        unsigned int v43 = v142 + 2;
        *((void *)this + 1) = v43;
LABEL_416:
        if ((unint64_t)v43 >= v42 || (char)*v43 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v188);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v143 = v188[0];
          v144 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v42 = *((void *)this + 2);
        }

        else
        {
          unsigned int v143 = *v43;
          v144 = v43 + 1;
          *((void *)this + 1) = v144;
        }

        *(_BYTE *)(a1 + 277) = v143 != 0;
        *(_DWORD *)(a1 + 368) |= 0x400u;
        *((void *)this + 1) = v144 + 2;
LABEL_425:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v188) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 264) = *(void *)v188;
        *(_DWORD *)(a1 + 368) |= 0x800u;
        v145 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v145 + 2;
LABEL_430:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v188) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 280) = *(void *)v188;
        *(_DWORD *)(a1 + 368) |= 0x1000u;
        uint64_t v146 = (unsigned __int8 *)*((void *)this + 1);
        while (1)
        {
          *((void *)this + 1) = v146 + 2;
LABEL_435:
          uint64_t v147 = *(int *)(a1 + 296);
          int v148 = *(_DWORD *)(a1 + 300);
          if ((int)v147 >= v148)
          {
            if (v148 == *(_DWORD *)(a1 + 304))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v148 + 1);
              int v148 = *(_DWORD *)(a1 + 300);
            }

            *(_DWORD *)(a1 + 300) = v148 + 1;
            uint64_t v150 = operator new(0x30uLL);
            v150[9] = 0;
            v150[10] = 0;
            *(void *)uint64_t v150 = off_1018280A8;
            *((void *)v150 + 1) = 0LL;
            *((void *)v150 + 2) = 0LL;
            *((void *)v150 + 3) = 0LL;
            *((_WORD *)v150 + 16) = 0;
            uint64_t v151 = *(void *)(a1 + 288);
            uint64_t v152 = *(int *)(a1 + 296);
            *(_DWORD *)(a1 + 296) = v152 + 1;
            *(void *)(v151 + 8 * v152) = v150;
          }

          else
          {
            uint64_t v149 = *(void *)(a1 + 288);
            *(_DWORD *)(a1 + 296) = v147 + 1;
            uint64_t v150 = *(_DWORD **)(v149 + 8 * v147);
          }

          v153 = (char *)*((void *)this + 1);
          if ((unint64_t)v153 >= *((void *)this + 2) || *v153 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v188)) {
              return 0LL;
            }
          }

          else
          {
            v188[0] = *v153;
            *((void *)this + 1) = v153 + 1;
          }

          int v154 = *((_DWORD *)this + 14);
          int v155 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v154 + 1;
          if (v154 >= v155) {
            return 0LL;
          }
          int v156 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v188[0]);
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v156);
          int v158 = *((_DWORD *)this + 14);
          BOOL v68 = __OFSUB__(v158, 1);
          int v159 = v158 - 1;
          if (v159 < 0 == v68) {
            *((_DWORD *)this + 14) = v159;
          }
          uint64_t v146 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v45 = *((void *)this + 2);
          int v160 = *v146;
          if (v160 == 248) {
            break;
          }
          if (v160 != 242 || v146[1] != 2) {
            goto LABEL_2;
          }
        }

        if (v146[1] != 2) {
          continue;
        }
        uint64_t v44 = (char *)(v146 + 2);
        *((void *)this + 1) = v44;
LABEL_456:
        if ((unint64_t)v44 >= v45 || *v44 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v188);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v161 = v188[0];
        }

        else
        {
          unsigned int v161 = *v44;
          *((void *)this + 1) = v44 + 1;
        }

        if (v161 <= 2)
        {
          *(_DWORD *)(a1 + 368) |= 0x4000u;
          *(_DWORD *)(a1 + 312) = v161;
        }

        uint64_t v162 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v162 + 2;
LABEL_467:
        *(_DWORD *)(a1 + 368) |= 0x8000u;
        uint64_t v163 = *(void **)(a1 + 320);
        if (!v163)
        {
          uint64_t v163 = operator new(0x30uLL);
          *uint64_t v163 = off_101828120;
          v163[1] = 0LL;
          v163[2] = 0LL;
          v163[3] = 0LL;
          v163[4] = 0xFFFFFFFFLL;
          *((_DWORD *)v163 + 10) = 0;
          *(void *)(a1 + 320) = v163;
        }

        uint64_t v164 = (char *)*((void *)this + 1);
        if ((unint64_t)v164 >= *((void *)this + 2) || *v164 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v188)) {
            return 0LL;
          }
        }

        else
        {
          v188[0] = *v164;
          *((void *)this + 1) = v164 + 1;
        }

        int v165 = *((_DWORD *)this + 14);
        int v166 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v165 + 1;
        if (v165 >= v166) {
          return 0LL;
        }
        int v167 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v188[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v167);
        int v169 = *((_DWORD *)this + 14);
        BOOL v68 = __OFSUB__(v169, 1);
        int v170 = v169 - 1;
        if (v170 < 0 == v68) {
          *((_DWORD *)this + 14) = v170;
        }
        uint64_t v171 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v46 = *((void *)this + 2);
        uint64_t v47 = (char *)(v171 + 2);
        *((void *)this + 1) = v47;
LABEL_482:
        if ((unint64_t)v47 >= v46 || *v47 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v188);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v172 = v188[0];
        }

        else
        {
          unsigned int v172 = *v47;
          *((void *)this + 1) = v47 + 1;
        }

        if (v172 <= 2)
        {
          *(_DWORD *)(a1 + 368) |= 0x10000u;
          *(_DWORD *)(a1 + 316) = v172;
        }

        uint64_t v173 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v173 + 2;
LABEL_493:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v188) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 328) = *(void *)v188;
        *(_DWORD *)(a1 + 368) |= 0x20000u;
        uint64_t v174 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v174 + 2;
LABEL_498:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v188) & 1) != 0)
        {
          *(void *)(a1 + 336) = *(void *)v188;
          *(_DWORD *)(a1 + 368) |= 0x40000u;
          uint64_t v175 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v48 = *((void *)this + 2);
          if ((int)v48 - (int)v175 >= 2 && *v175 == 160 && v175[1] == 3)
          {
            unsigned int v49 = (char *)(v175 + 2);
            *((void *)this + 1) = v49;
LABEL_503:
            if ((unint64_t)v49 >= v48 || *v49 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v188);
              if (!(_DWORD)result) {
                return result;
              }
              unsigned int v176 = v188[0];
            }

            else
            {
              unsigned int v176 = *v49;
              *((void *)this + 1) = v49 + 1;
            }

            if (v176 <= 3)
            {
              *(_DWORD *)(a1 + 368) |= 0x80000u;
              *(_DWORD *)(a1 + 344) = v176;
            }

            uint64_t v177 = (unsigned __int8 *)*((void *)this + 1);
            unint64_t v50 = *((void *)this + 2);
            if ((int)v50 - (int)v177 >= 2 && *v177 == 168 && v177[1] == 3)
            {
              uint64_t v51 = v177 + 2;
              *((void *)this + 1) = v51;
LABEL_514:
              if ((unint64_t)v51 >= v50 || (char)*v51 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v188);
                if (!(_DWORD)result) {
                  return result;
                }
                unsigned int v178 = v188[0];
                uint64_t v179 = (unsigned __int8 *)*((void *)this + 1);
                unint64_t v50 = *((void *)this + 2);
              }

              else
              {
                unsigned int v178 = *v51;
                uint64_t v179 = v51 + 1;
                *((void *)this + 1) = v179;
              }

              *(_BYTE *)(a1 + 278) = v178 != 0;
              *(_DWORD *)(a1 + 368) |= 0x100000u;
              if ((int)v50 - (int)v179 >= 2 && *v179 == 176 && v179[1] == 3)
              {
                uint64_t v52 = (char *)(v179 + 2);
                *((void *)this + 1) = v52;
LABEL_523:
                if ((unint64_t)v52 >= v50 || *v52 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v188);
                  if (!(_DWORD)result) {
                    return result;
                  }
                  unsigned int v180 = v188[0];
                }

                else
                {
                  unsigned int v180 = *v52;
                  *((void *)this + 1) = v52 + 1;
                }

                if (v180 <= 2)
                {
                  *(_DWORD *)(a1 + 368) |= 0x200000u;
                  *(_DWORD *)(a1 + 348) = v180;
                }

                v181 = (unsigned __int8 *)*((void *)this + 1);
                unint64_t v53 = *((void *)this + 2);
                if ((int)v53 - (int)v181 >= 2 && *v181 == 184 && v181[1] == 3)
                {
                  char v54 = (char *)(v181 + 2);
                  *((void *)this + 1) = v54;
LABEL_534:
                  if ((unint64_t)v54 >= v53 || *v54 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v188);
                    if (!(_DWORD)result) {
                      return result;
                    }
                    unsigned int v182 = v188[0];
                  }

                  else
                  {
                    unsigned int v182 = *v54;
                    *((void *)this + 1) = v54 + 1;
                  }

                  if (v182 <= 4)
                  {
                    *(_DWORD *)(a1 + 368) |= 0x400000u;
                    *(_DWORD *)(a1 + 352) = v182;
                  }

                  uint64_t v183 = (unsigned __int8 *)*((void *)this + 1);
                  unint64_t v55 = *((void *)this + 2);
                  if ((int)v55 - (int)v183 >= 2 && *v183 == 192 && v183[1] == 3)
                  {
                    uint64_t v56 = v183 + 2;
                    *((void *)this + 1) = v56;
LABEL_545:
                    if ((unint64_t)v56 >= v55 || (char)*v56 < 0)
                    {
                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v188);
                      if (!(_DWORD)result) {
                        return result;
                      }
                      unsigned int v184 = v188[0];
                      uint64_t v185 = (unsigned __int8 *)*((void *)this + 1);
                      unint64_t v55 = *((void *)this + 2);
                    }

                    else
                    {
                      unsigned int v184 = *v56;
                      uint64_t v185 = v56 + 1;
                      *((void *)this + 1) = v185;
                    }

                    *(_BYTE *)(a1 + 279) = v184 != 0;
                    *(_DWORD *)(a1 + 368) |= 0x800000u;
                    if ((int)v55 - (int)v185 >= 2 && *v185 == 200 && v185[1] == 3)
                    {
                      unsigned int v57 = (char *)(v185 + 2);
                      *((void *)this + 1) = v57;
LABEL_554:
                      if ((unint64_t)v57 >= v55 || *v57 < 0)
                      {
                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v188);
                        if (!(_DWORD)result) {
                          return result;
                        }
                        unsigned int v186 = v188[0];
                        uint64_t v187 = (unsigned __int8 *)*((void *)this + 1);
                        unint64_t v55 = *((void *)this + 2);
                      }

                      else
                      {
                        unsigned int v186 = *v57;
                        uint64_t v187 = (unsigned __int8 *)(v57 + 1);
                        *((void *)this + 1) = v187;
                      }

                      *(_BYTE *)(a1 + 356) = v186 != 0;
                      *(_DWORD *)(a1 + 368) |= 0x1000000u;
                      if (v187 == (unsigned __int8 *)v55
                        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                      {
                        *((_DWORD *)this + 8) = 0;
                        uint64_t result = 1LL;
                        *((_BYTE *)this + 36) = 1;
                        return result;
                      }
                    }
                  }
                }
              }
            }
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_20;
        }
        goto LABEL_149;
      case 4u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_25;
        }
        goto LABEL_149;
      case 5u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_30;
        }
        goto LABEL_149;
      case 6u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_35;
        }
        goto LABEL_149;
      case 7u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_40;
        }
        goto LABEL_149;
      case 8u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_45;
        }
        goto LABEL_149;
      case 9u:
        int v8 = TagFallback & 7;
        uint64_t v18 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_51;
      case 0xAu:
        int v8 = TagFallback & 7;
        uint64_t v21 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_158;
      case 0xBu:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_168;
        }
        goto LABEL_149;
      case 0xCu:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_182;
        }
        goto LABEL_149;
      case 0xDu:
        int v8 = TagFallback & 7;
        int v23 = (char *)*((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        goto LABEL_186;
      case 0xEu:
        int v8 = TagFallback & 7;
        int v24 = (char *)*((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        goto LABEL_194;
      case 0xFu:
        int v8 = TagFallback & 7;
        uint64_t v25 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        goto LABEL_202;
      case 0x10u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_149;
        }
        int v26 = *(_DWORD *)(a1 + 364);
        goto LABEL_211;
      case 0x11u:
        int v8 = TagFallback & 7;
        int v28 = (char *)*((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        goto LABEL_226;
      case 0x12u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_237;
        }
        goto LABEL_149;
      case 0x13u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_149;
        }
        int v29 = *(_DWORD *)(a1 + 364);
        goto LABEL_242;
      case 0x14u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_257;
        }
        goto LABEL_149;
      case 0x15u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_262;
        }
        goto LABEL_149;
      case 0x16u:
        int v8 = TagFallback & 7;
        uint64_t v31 = (char *)*((void *)this + 1);
        unint64_t v30 = *((void *)this + 2);
        goto LABEL_267;
      case 0x17u:
        int v8 = TagFallback & 7;
        char v33 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v32 = *((void *)this + 2);
        goto LABEL_278;
      case 0x18u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_149;
        }
        int v34 = *(_DWORD *)(a1 + 364);
        goto LABEL_287;
      case 0x19u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_302;
        }
        goto LABEL_149;
      case 0x1Au:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_307;
        }
        goto LABEL_149;
      case 0x1Bu:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_312;
        }
        goto LABEL_149;
      case 0x1Cu:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_317;
        }
        goto LABEL_149;
      case 0x1Du:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_322;
        }
        goto LABEL_149;
      case 0x1Eu:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_327;
        }
        goto LABEL_149;
      case 0x1Fu:
        int v8 = TagFallback & 7;
        int v36 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v35 = *((void *)this + 2);
        goto LABEL_332;
      case 0x20u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_341;
        }
        goto LABEL_149;
      case 0x21u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_346;
        }
        goto LABEL_149;
      case 0x22u:
        int v8 = TagFallback & 7;
        int v38 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v37 = *((void *)this + 2);
        goto LABEL_351;
      case 0x23u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_149;
        }
        int v39 = *(_DWORD *)(a1 + 368);
        goto LABEL_360;
      case 0x24u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_375;
        }
        goto LABEL_149;
      case 0x25u:
        int v8 = TagFallback & 7;
        uint64_t v41 = (char *)*((void *)this + 1);
        unint64_t v40 = *((void *)this + 2);
        goto LABEL_380;
      case 0x26u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_391;
        }
        goto LABEL_149;
      case 0x27u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_396;
        }
        goto LABEL_149;
      case 0x28u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_401;
        }
        goto LABEL_149;
      case 0x29u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_406;
        }
        goto LABEL_149;
      case 0x2Au:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_411;
        }
        goto LABEL_149;
      case 0x2Bu:
        int v8 = TagFallback & 7;
        unsigned int v43 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v42 = *((void *)this + 2);
        goto LABEL_416;
      case 0x2Cu:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_425;
        }
        goto LABEL_149;
      case 0x2Du:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_430;
        }
        goto LABEL_149;
      case 0x2Eu:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_435;
        }
        goto LABEL_149;
      case 0x2Fu:
        int v8 = TagFallback & 7;
        uint64_t v44 = (char *)*((void *)this + 1);
        unint64_t v45 = *((void *)this + 2);
        goto LABEL_456;
      case 0x30u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_467;
        }
        goto LABEL_149;
      case 0x31u:
        int v8 = TagFallback & 7;
        uint64_t v47 = (char *)*((void *)this + 1);
        unint64_t v46 = *((void *)this + 2);
        goto LABEL_482;
      case 0x32u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_493;
        }
        goto LABEL_149;
      case 0x33u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_498;
        }
        goto LABEL_149;
      case 0x34u:
        int v8 = TagFallback & 7;
        unsigned int v49 = (char *)*((void *)this + 1);
        unint64_t v48 = *((void *)this + 2);
        goto LABEL_503;
      case 0x35u:
        int v8 = TagFallback & 7;
        uint64_t v51 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v50 = *((void *)this + 2);
        goto LABEL_514;
      case 0x36u:
        int v8 = TagFallback & 7;
        uint64_t v52 = (char *)*((void *)this + 1);
        unint64_t v50 = *((void *)this + 2);
        goto LABEL_523;
      case 0x37u:
        int v8 = TagFallback & 7;
        char v54 = (char *)*((void *)this + 1);
        unint64_t v53 = *((void *)this + 2);
        goto LABEL_534;
      case 0x38u:
        int v8 = TagFallback & 7;
        uint64_t v56 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v55 = *((void *)this + 2);
        goto LABEL_545;
      case 0x39u:
        int v8 = TagFallback & 7;
        unsigned int v57 = (char *)*((void *)this + 1);
        unint64_t v55 = *((void *)this + 2);
        goto LABEL_554;
      default:
        int v8 = TagFallback & 7;
LABEL_149:
        if (v8 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001DBF50( uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 364);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  (int)a2,  *(double *)(result + 8),  a3);
    int v6 = *(_DWORD *)(v5 + 364);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_64;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  (int)a2,  *(double *)(v5 + 16),  a3);
  int v6 = *(_DWORD *)(v5 + 364);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_65;
  }

LABEL_90:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17,  *(unsigned __int8 *)(v5 + 114),  (BOOL)a2,  a4);
  int v6 = *(_DWORD *)(v5 + 364);
  if ((v6 & 0x800000) == 0)
  {
LABEL_25:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_94;
  }

    sub_100007008();
  }

      uint64_t v8 = v25;
    }

    while (v25 != v9);
  }

  unsigned int v62 = *(uint64_t **)(a1 + 3840);
  if (v62 != (uint64_t *)(a1 + 3848))
  {
    do
    {
      if (*((double *)v62 + 36) + 20.0 < v7)
      {
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101847D40);
        }
        int v63 = (os_log_s *)qword_101934878;
        if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
        {
          else {
            int v64 = v62[5];
          }
          sub_1000392EC((uint64_t)v163, v64 + 1);
          if (v165[9] >= 0) {
            int v65 = v163;
          }
          else {
            int v65 = *(_BYTE **)v163;
          }
          if (v64)
          {
            else {
              unsigned int v66 = (const void *)v62[4];
            }
            memmove(v65, v66, v64);
          }

          *(_WORD *)&v65[v64] = 47;
          int v67 = *((char *)v62 + 79);
          if (v67 >= 0) {
            BOOL v68 = (const std::string::value_type *)(v62 + 7);
          }
          else {
            BOOL v68 = (const std::string::value_type *)v62[7];
          }
          if (v67 >= 0) {
            int v69 = *((unsigned __int8 *)v62 + 79);
          }
          else {
            int v69 = v62[8];
          }
          uint64_t v70 = std::string::append((std::string *)v163, v68, v69);
          uint64_t v71 = *(_OWORD *)&v70->__r_.__value_.__l.__data_;
          *(void *)&__p[16] = v70->__r_.__value_.__l.__cap_;
          *(_OWORD *)std::stringbuf::string_type __p = v71;
          v70->__r_.__value_.__l.__size_ = 0LL;
          v70->__r_.__value_.__l.__cap_ = 0LL;
          v70->__r_.__value_.__r.__words[0] = 0LL;
          if ((v165[9] & 0x80000000) != 0) {
            operator delete(*(void **)v163);
          }
          unsigned int v72 = __p;
          if (__p[23] < 0) {
            unsigned int v72 = *(_BYTE **)__p;
          }
          uint64_t v73 = *((_DWORD *)v62 + 70) + 1;
          unsigned int v74 = "---";
          if (v73 <= 4) {
            unsigned int v74 = off_101847F50[v73];
          }
          char v75 = "---";
          unsigned int v76 = v62[36];
          *(_DWORD *)uint64_t v163 = 136381699;
          *(void *)&v163[4] = v72;
          uint64_t v164 = 2081;
          *(void *)int v165 = v74;
          *(_WORD *)&v165[8] = 2081;
          *(void *)&v165[10] = v75;
          int v166 = 1026;
          int v167 = a3;
          unsigned int v168 = 2050;
          int v169 = v76;
          _os_log_impl( (void *)&_mh_execute_header,  v63,  OS_LOG_TYPE_DEBUG,  "#Warning Fence: avoid sendFenceStatusNotification, fence, %{private}s, status, %{private}s, searchStatus, %{ private}s, client, %{public}d, timestamp,%{public}.1lf",  v163,  0x30u);
          if ((__p[23] & 0x80000000) != 0) {
            operator delete(*(void **)__p);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(v163, 0x65CuLL);
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101847D40);
          }
          uint64_t v98 = qword_101934878;
          sub_10065EF44((const void **)v62 + 4, &v157);
          uint64_t v99 = &v157;
          if ((v157.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            uint64_t v99 = (std::string *)v157.__r_.__value_.__r.__words[0];
          }
          uint64_t v100 = *((_DWORD *)v62 + 70) + 1;
          unsigned int v101 = "---";
          if (v100 <= 4) {
            unsigned int v101 = off_101847F50[v100];
          }
          uint64_t v102 = "---";
          unsigned int v103 = v62[36];
          *(_DWORD *)std::stringbuf::string_type __p = 136381699;
          *(void *)&__p[4] = v99;
          *(_WORD *)&__p[12] = 2081;
          *(void *)&__p[14] = v101;
          *(_WORD *)&__p[22] = 2081;
          *(void *)&__p[24] = v102;
          int v159 = 1026;
          int v160 = a3;
          unsigned int v161 = 2050;
          uint64_t v162 = v103;
          LODWORD(v152) = 48;
          _os_log_send_and_compose_impl( 2LL,  0LL,  v163,  1628LL,  &_mh_execute_header,  v98,  2LL,  "#Warning Fence: avoid sendFenceStatusNotification, fence, %{private}s, status, %{private}s, searchStatus, %{ private}s, client, %{public}d, timestamp,%{public}.1lf",  __p,  v152);
          uint64_t v105 = v104;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceManager::pendingFenceMaintenanceOnClientRegistration(CFAbsoluteTime, CLFenceManager_Type::FenceS tatus, int, const std::string &)",  "%s\n",  v105);
          if (v105 != v163) {
            free(v105);
          }
        }

        char v77 = sub_1000087E8((uint64_t **)(a1 + 3840), v62);
        sub_100668624((uint64_t)(v62 + 4));
        operator delete(v62);
        goto LABEL_203;
      }

      int v78 = *((unsigned __int8 *)v62 + 55);
      if ((v78 & 0x80u) == 0LL) {
        int v79 = *((unsigned __int8 *)v62 + 55);
      }
      else {
        int v79 = v62[5];
      }
      int v80 = a4[23];
      int v81 = (char)v80;
      if ((v80 & 0x80u) != 0LL) {
        int v80 = *((void *)a4 + 1);
      }
      if (v79 == v80)
      {
        if (v81 >= 0) {
          int v82 = a4;
        }
        else {
          int v82 = *(unsigned __int8 **)a4;
        }
        if ((v78 & 0x80) == 0)
        {
          if (*((_BYTE *)v62 + 55))
          {
            unsigned int v83 = (unsigned __int8 *)(v62 + 4);
            while (*v83 == *v82)
            {
              ++v83;
              ++v82;
              if (!--v78) {
                goto LABEL_166;
              }
            }

            goto LABEL_198;
          }

  *(_DWORD *)(a1 + 184) |= 0x4000u;
  char v33 = *(void **)(a1 + 112);
  if (!v33)
  {
    char v33 = operator new(0x18uLL);
    v33[1] = 0LL;
    v33[2] = 0LL;
    *char v33 = off_101871CA8;
    *(void *)(a1 + 112) = v33;
  }

  int v34 = *(void *)(a2 + 112);
  if (!v34) {
    int v34 = *(void *)(qword_1019A1CE8 + 112);
  }
  sub_100B2ABC4(v33, v34);
  uint64_t v5 = *(_DWORD *)(a2 + 184);
  if ((v5 & 0x8000) != 0)
  {
LABEL_95:
    *(_DWORD *)(a1 + 184) |= 0x8000u;
    unint64_t v35 = *(void **)(a1 + 120);
    if (!v35)
    {
      unint64_t v35 = operator new(0x20uLL);
      char *v35 = &off_101871D98;
      v35[1] = 0LL;
      v35[2] = 0LL;
      v35[3] = 0LL;
      *(void *)(a1 + 120) = v35;
    }

    int v36 = *(void *)(a2 + 120);
    if (!v36) {
      int v36 = *(void *)(qword_1019A1CE8 + 120);
    }
    sub_100B2B3B0((uint64_t)v35, v36);
    uint64_t v5 = *(_DWORD *)(a2 + 184);
  }

  unint64_t v45 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 96);
  if ((v45 & 0x80000000) != 0)
  {
    unint64_t v46 = 10;
  }

  else if (v45 >= 0x80)
  {
    unint64_t v46 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v45, a2);
    uint64_t v3 = *(_DWORD *)(a1 + 224);
  }

  else
  {
    unint64_t v46 = 1;
  }

  uint64_t v4 = (v4 + v46 + 2);
  if ((v3 & 0x2000) == 0)
  {
LABEL_63:
    if ((v3 & 0x4000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_102;
  }

        int v67 = 0LL;
        goto LABEL_91;
      }

  sub_100527B44(&v63);
}

  unint64_t v48 = *(void *)(a2 + 312);
  v5 |= 0x4000000000uLL;
  *unsigned int v2 = v5;
  *(void *)(a1 + 312) = v48;
  uint64_t v4 = *v3;
  if ((*v3 & 0x1000000000LL) == 0)
  {
LABEL_48:
    if ((v4 & 0x2000000000LL) == 0) {
      return result;
    }
LABEL_92:
    uint64_t result = *(double *)(a2 + 304);
    *unsigned int v2 = v5 | 0x2000000000LL;
    *(double *)(a1 + 304) = result;
    return result;
  }

  PB::TextFormatter::format(this, "workoutTransitionResume", *(void *)(a1 + 336));
  int v6 = *v5;
  if ((*v5 & 0x40000000000LL) != 0) {
    goto LABEL_91;
  }
LABEL_45:
  if ((v6 & 0x80000000000LL) != 0) {
LABEL_46:
  }
    PB::TextFormatter::format(this, "workoutTransitionStop", *(void *)(a1 + 352));
  return PB::TextFormatter::endObject(this);
}

  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 296), 0x65u);
  if ((*v4 & 0x2000000000LL) != 0) {
    return PB::Writer::write(this, *(double *)(v3 + 304), 0x66u);
  }
  return result;
}

  uint64_t result = PB::Writer::write(this, *(_BYTE *)(v3 + 391), 0x66u);
  uint64_t v4 = *(_DWORD *)(v3 + 396);
  if ((v4 & 0x20000000) == 0)
  {
LABEL_31:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_32;
    }
LABEL_92:
    uint64_t result = PB::Writer::write(this, *(_BYTE *)(v3 + 389), 0x68u);
    if ((*(_DWORD *)(v3 + 396) & 0x4000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_33;
  }

  uint64_t v14 = *(_DWORD *)(a2 + 80);
  v3 |= 0x8000uLL;
  *(void *)(a1 + 216) = v3;
  *(_DWORD *)(a1 + 80) = v14;
  unsigned int v2 = *(void *)(a2 + 216);
  if ((v2 & 0x10000000) == 0)
  {
LABEL_44:
    if ((v2 & 0x4000000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_92;
  }

  PB::TextFormatter::format(this, "xMax", *(float *)(a1 + 172));
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x8000000000LL) == 0)
  {
LABEL_41:
    if ((v5 & 0x10000000000LL) == 0) {
      goto LABEL_42;
    }
    goto LABEL_92;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 132), 0x28u);
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_42:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_92;
  }

  uint64_t result = *(float *)(a2 + 124);
  v5 |= 0x100000uLL;
  *unsigned int v2 = v5;
  *(_BYTE *)(a1 + 324) = v6;
  *(float *)(a1 + 124) = result;
  int v7 = *v3;
  uint64_t v4 = *(_BYTE *)(a2 + 324);
  if ((*v3 & 0x1000) == 0)
  {
LABEL_25:
    if ((v7 & 0x80000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_92;
  }

  PB::TextFormatter::format(this, "durationXYZBiggestImpact", *(float *)(a1 + 148));
  int v6 = *v5;
  int v7 = *(_BYTE *)(a1 + 324);
  if ((*v5 & 0x8000000) == 0)
  {
LABEL_24:
    if ((v6 & 2) == 0) {
      goto LABEL_25;
    }
    goto LABEL_92;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 124), 0x14u);
  int v6 = *v4;
  uint64_t v5 = *((_BYTE *)v4 + 8);
  if ((*v4 & 0x1000) == 0)
  {
LABEL_25:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_92;
  }

  uint64_t result = *(float *)(a2 + 76);
  v5 |= 0x10000uLL;
  *unsigned int v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 76) = result;
  uint64_t v4 = *v3;
  int v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x400000) == 0)
  {
LABEL_17:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_92;
  }

  PB::TextFormatter::format(this, "audioDvMaxRmsThresholdCenter", *(float *)(a1 + 56));
  int v6 = *v5;
  int v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x1000) == 0)
  {
LABEL_16:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_92;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80), 0xBu);
  uint64_t v5 = *v4;
  int v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x10000) == 0)
  {
LABEL_16:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_92;
  }

  uint64_t result = *(float *)(a2 + 16);
  v5 |= 2uLL;
  *unsigned int v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(_BYTE *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 16) = result;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*(_WORD *)(a2 + 324) & 0x20) == 0)
  {
LABEL_10:
    if ((v8 & 0x800) == 0) {
      goto LABEL_11;
    }
    goto LABEL_92;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16), 0x66u);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((v4[1] & 0x20) == 0)
  {
LABEL_10:
    if ((v7 & 0x800) == 0) {
      goto LABEL_11;
    }
    goto LABEL_92;
  }

  uint64_t v13 = *(_DWORD *)(a2 + 128);
  v3 |= 0x4000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(_BYTE *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 128) = v13;
  uint64_t v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  unsigned int v2 = *(void *)(a2 + 204);
  if ((v2 & 0x400000) == 0)
  {
LABEL_12:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_92;
  }

  PB::TextFormatter::format(this, "chaosOrSaturationMet0", *(_BYTE *)(a1 + 161));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x8000000000LL) == 0)
  {
LABEL_11:
    if ((v5 & 0x10000000000LL) == 0) {
      goto LABEL_12;
    }
    goto LABEL_92;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 140), 0x6Bu);
  uint64_t v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x200000000000LL) == 0)
  {
LABEL_12:
    if ((v4 & 0x200000000LL) == 0) {
      goto LABEL_13;
    }
    goto LABEL_92;
  }

  int v26 = *(void *)(a2 + 16);
  v3 |= 2uLL;
  *(void *)(a1 + 172) = v3;
  *(void *)(a1 + 16) = v26;
  unsigned int v2 = *(void *)(a2 + 172);
  if ((v2 & 0x100) == 0)
  {
LABEL_47:
    if ((v2 & 0x200) == 0) {
      goto LABEL_48;
    }
    goto LABEL_92;
  }

  PB::TextFormatter::format(this, "thresholdEnergy", *(float *)(a1 + 144));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x80000000) == 0)
  {
LABEL_44:
    if ((v5 & 0x100000000LL) == 0) {
      goto LABEL_45;
    }
    goto LABEL_92;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56), 0xD3u);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x200) == 0)
  {
LABEL_45:
    if ((v4 & 0x400) == 0) {
      goto LABEL_46;
    }
    goto LABEL_92;
  }

  LODWORD(v4) = *(_DWORD *)(a2 + 140);
  v3 |= 0x40000000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 140) = v4;
  unsigned int v2 = *(void *)(a2 + 184);
  if ((v2 & 0x80000000) == 0)
  {
LABEL_48:
    if ((v2 & 0x100000000LL) == 0) {
      return *(float *)&v4;
    }
    goto LABEL_92;
  }

  PB::TextFormatter::format(this, "walkingSpeedIsValid", *(_BYTE *)(a1 + 181));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x2000000000LL) != 0) {
    goto LABEL_91;
  }
LABEL_45:
  if ((v5 & 0x4000000000LL) != 0) {
LABEL_46:
  }
    PB::TextFormatter::format(this, "workoutType", *(_DWORD *)(a1 + 172));
  return PB::TextFormatter::endObject(this);
}

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 144), 0x2Cu);
  if ((*(void *)(v3 + 184) & 0x100000000LL) != 0) {
    return PB::Writer::write(this, *(float *)(v3 + 148), 0x2Du);
  }
  return result;
}

  uint64_t v41 = *(_BYTE *)(a2 + 184);
  v3 |= 0x400000000000uLL;
  *(void *)(result + 188) = v3;
  *(_BYTE *)(result + 184) = v41;
  unsigned int v2 = *(void *)(a2 + 188);
  if ((v2 & 0x2000) == 0)
  {
LABEL_43:
    if ((v2 & 0x100000000LL) == 0) {
      goto LABEL_44;
    }
    goto LABEL_92;
  }

  PB::TextFormatter::format(this, "srcVerticalTranslation", *(float *)(a1 + 136));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x100000000LL) == 0)
  {
LABEL_40:
    if ((v5 & 0x200000000LL) == 0) {
      goto LABEL_41;
    }
    goto LABEL_92;
  }

  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 64), 0x27u);
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x100000000LL) == 0)
  {
LABEL_41:
    if ((v4 & 0x200000000LL) == 0) {
      goto LABEL_42;
    }
    goto LABEL_92;
  }

LABEL_96:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1B,  (int)a2,  *(double *)(v5 + 160),  a3);
  int v6 = *(_DWORD *)(v5 + 364);
  if ((v6 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_98;
  }

  objc_msgSend( v3,  "setObject:forKey:",  +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", self->_isVehicular),  @"isVehicular");
  has = (char)self->_has;
  if ((has & 0x20) == 0)
  {
LABEL_78:
    if ((has & 2) == 0) {
      goto LABEL_79;
    }
LABEL_98:
    exitState = self->_exitState;
    if (exitState >= 3) {
      uint64_t v17 = +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"(unknown: %i)",  self->_exitState);
    }
    else {
      uint64_t v17 = (NSString *)*(&off_10182C420 + exitState);
    }
    [v3 setObject:v17 forKey:@"exitState"];
    if ((*(_BYTE *)&self->_has & 1) != 0) {
      goto LABEL_80;
    }
    return v3;
  }

        unsigned int v43 = operator new(0x108uLL);
        sub_1003FEB04((uint64_t)v43, v11, (uint64_t)a2, DictionaryOfClasses, a1, *(void *)(a1 + 32));
        goto LABEL_110;
      }

  a1[19] = v4;
  return v4;
}

  *(_DWORD *)(a1 + 108) = v5;
  return v5;
}

  if ((v7 & 0xFF0000) == 0) {
    goto LABEL_146;
  }
  if ((v7 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 396) |= 0x10000u;
    unint64_t v37 = *(void **)(a1 + 128);
    if (!v37)
    {
      unint64_t v37 = operator new(0x18uLL);
      void *v37 = off_1018755A0;
      v37[1] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
      v37[2] = 0LL;
      *(void *)(a1 + 128) = v37;
    }

    int v38 = *(void *)(a2 + 128);
    if (!v38) {
      int v38 = *(void *)(qword_1019A1D38 + 128);
    }
    sub_100BB94AC((uint64_t)v37, v38);
    int v7 = *(_DWORD *)(a2 + 396);
    if ((v7 & 0x20000) == 0)
    {
LABEL_99:
      if ((v7 & 0x40000) == 0) {
        goto LABEL_100;
      }
      goto LABEL_116;
    }
  }

  else if ((v7 & 0x20000) == 0)
  {
    goto LABEL_99;
  }

  *(_DWORD *)(a1 + 396) |= 0x20000u;
  int v39 = *(void **)(a1 + 136);
  if (!v39)
  {
    int v39 = operator new(0x28uLL);
    v39[1] = 0LL;
    v39[2] = 0LL;
    *int v39 = off_101875618;
    *((_DWORD *)v39 + 6) = 0;
    v39[4] = 0LL;
    *(void *)(a1 + 136) = v39;
  }

  unint64_t v40 = *(void *)(a2 + 136);
  if (!v40) {
    unint64_t v40 = *(void *)(qword_1019A1D38 + 136);
  }
  sub_100BB9578(v39, v40);
  int v7 = *(_DWORD *)(a2 + 396);
  if ((v7 & 0x40000) == 0)
  {
LABEL_100:
    if ((v7 & 0x80000) == 0) {
      goto LABEL_101;
    }
    goto LABEL_121;
  }

  uint64_t v47 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 100);
  if ((v47 & 0x80000000) != 0)
  {
    unint64_t v48 = 10;
  }

  else if (v47 >= 0x80)
  {
    unint64_t v48 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v47, a2);
    uint64_t v3 = *(_DWORD *)(a1 + 224);
  }

  else
  {
    unint64_t v48 = 1;
  }

  uint64_t v4 = (v4 + v48 + 2);
  if ((v3 & 0x4000) == 0)
  {
LABEL_64:
    if ((v3 & 0x8000) == 0) {
      goto LABEL_114;
    }
    goto LABEL_108;
  }

  if (SHIBYTE(v36) < 0) {
    operator delete(__p[1]);
  }
  if (SHIBYTE(__p[0]) < 0) {
    operator delete(v34[0]);
  }
  if (SHIBYTE(v33) < 0) {
    operator delete(v32[1]);
  }
  if (SHIBYTE(v32[0]) < 0) {
    operator delete(v31[0]);
  }
  return sub_1002A5590(v39);
}

  uint64_t v15 = *(_DWORD *)(a2 + 120);
  v3 |= 0x2000000uLL;
  *(void *)(a1 + 216) = v3;
  *(_DWORD *)(a1 + 120) = v15;
  unsigned int v2 = *(void *)(a2 + 216);
  if ((v2 & 0x2000) == 0)
  {
LABEL_50:
    if ((v2 & 0x200) == 0) {
      goto LABEL_51;
    }
    goto LABEL_98;
  }

  PB::TextFormatter::format(this, "yZCTime", *(float *)(a1 + 196));
  uint64_t v5 = *(void *)(a1 + 216);
  if ((v5 & 0x200000000000LL) == 0)
  {
LABEL_47:
    if ((v5 & 0x400000000000LL) == 0) {
      goto LABEL_48;
    }
    goto LABEL_98;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72), 0x2Eu);
  uint64_t v4 = *(void *)(v3 + 216);
  if ((v4 & 0x200) == 0)
  {
LABEL_48:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_98;
  }

  uint64_t result = *(float *)(a2 + 256);
  v5 |= 0x20000000000000uLL;
  *unsigned int v2 = v5;
  *(_BYTE *)(a1 + 324) = v6;
  *(float *)(a1 + 256) = result;
  int v7 = *v3;
  uint64_t v4 = *(_BYTE *)(a2 + 324);
  if ((*v3 & 0x4000000000000000LL) == 0)
  {
LABEL_31:
    if ((v7 & 0x800000000000LL) == 0) {
      goto LABEL_32;
    }
    goto LABEL_98;
  }

  PB::TextFormatter::format(this, "hgArclengthXYBiggestImpact", *(float *)(a1 + 156));
  int v6 = *v5;
  int v7 = *(_BYTE *)(a1 + 324);
  if ((*v5 & 0x20000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_98;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 256), 0x1Au);
  int v6 = *v4;
  uint64_t v5 = *((_BYTE *)v4 + 8);
  if ((*v4 & 0x4000000000000000LL) == 0)
  {
LABEL_31:
    if ((v6 & 0x800000000000LL) == 0) {
      goto LABEL_32;
    }
    goto LABEL_98;
  }

  uint64_t result = *(float *)(a2 + 124);
  v5 |= 0x10000000uLL;
  *unsigned int v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 124) = result;
  uint64_t v4 = *v3;
  int v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x200000000LL) == 0)
  {
LABEL_23:
    if ((v4 & 0x20000000000000LL) == 0) {
      goto LABEL_24;
    }
    goto LABEL_98;
  }

  PB::TextFormatter::format(this, "deltaVXYOverEpoch", *(float *)(a1 + 80));
  int v6 = *v5;
  int v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x40000) == 0)
  {
LABEL_22:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_98;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 104), 0x11u);
  uint64_t v5 = *v4;
  int v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x10000000) == 0)
  {
LABEL_22:
    if ((v5 & 0x200000000LL) == 0) {
      goto LABEL_23;
    }
    goto LABEL_98;
  }

  unsigned int v19 = *(_BYTE *)(a2 + 305);
  uint64_t v20 = v6 >> 16;
  v6 |= 0x400uLL;
  *unsigned int v2 = v5;
  *(_BYTE *)(a1 + 326) = v20;
  *(_WORD *)(a1 + 324) = v6;
  *(_BYTE *)(a1 + 305) = v19;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*v3 & 0x20) == 0)
  {
LABEL_16:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_98;
  }

  PB::TextFormatter::format(this, "isCompanionConnected", *(_BYTE *)(a1 + 307));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  int v6 = *v5;
  if ((*v5 & 0x80) == 0)
  {
LABEL_15:
    if ((v6 & 0x100) == 0) {
      goto LABEL_16;
    }
    goto LABEL_98;
  }

  uint64_t result = PB::Writer::write(this, *(_BYTE *)(v3 + 305), 0x6Cu);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((*v4 & 0x20) == 0)
  {
LABEL_16:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_98;
  }

  unsigned int v19 = *(_BYTE *)(a2 + 201);
  uint64_t v20 = v4 >> 16;
  v4 |= 0x4000uLL;
  *(void *)(result + 204) = v3;
  *(_BYTE *)(result + 214) = v20;
  *(_WORD *)(result + 212) = v4;
  *(_BYTE *)(result + 201) = v19;
  uint64_t v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  unsigned int v2 = *(void *)(a2 + 204);
  if ((v2 & 0x4000000000LL) == 0)
  {
LABEL_18:
    if ((v2 & 0x40000000000LL) == 0) {
      goto LABEL_19;
    }
    goto LABEL_98;
  }

  PB::TextFormatter::format(this, "energyAndChaosOrSaturationMet2", *(_BYTE *)(a1 + 167));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x200000000000LL) == 0)
  {
LABEL_17:
    if ((v5 & 0x400000000000LL) == 0) {
      goto LABEL_18;
    }
    goto LABEL_98;
  }

  uint64_t result = PB::Writer::write(this, *(_BYTE *)(v3 + 188), 0x71u);
  uint64_t v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x200) == 0)
  {
LABEL_18:
    if ((v4 & 0x20) == 0) {
      goto LABEL_19;
    }
    goto LABEL_98;
  }

        *(_DWORD *)(a1 + 88) = v51;
        goto LABEL_97;
      default:
        uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
        if (!(_DWORD)result) {
          return result;
        }
        goto LABEL_97;
    }
  }

            PB::Reader::recallMark(this, v87);
          }

          else
          {
            int v65 = *(char **)(a1 + 16);
            int v64 = *(void *)(a1 + 24);
            if ((unint64_t)v65 >= v64)
            {
              uint64_t v73 = (char *)*v10;
              unsigned int v74 = (v65 - (_BYTE *)*v10) >> 2;
              char v75 = v74 + 1;
              if ((unint64_t)(v74 + 1) >> 62) {
LABEL_144:
              }
                sub_100007008();
              unsigned int v76 = v64 - (void)v73;
              if (v76 >> 1 > v75) {
                char v75 = v76 >> 1;
              }
              else {
                char v77 = v75;
              }
              if (v77)
              {
                int v78 = (char *)sub_10000956C(v11, v77);
                uint64_t v73 = *(char **)(a1 + 8);
                int v65 = *(char **)(a1 + 16);
              }

              else
              {
                int v78 = 0LL;
              }

              unsigned int v83 = &v78[4 * v74];
              *(_DWORD *)unsigned int v83 = 0;
              unsigned int v66 = v83 + 4;
              while (v65 != v73)
              {
                int v84 = *((_DWORD *)v65 - 1);
                v65 -= 4;
                *((_DWORD *)v83 - 1) = v84;
                v83 -= 4;
              }

              *(void *)(a1 + 8) = v83;
              *(void *)(a1 + 16) = v66;
              *(void *)(a1 + 24) = &v78[4 * v77];
              if (v73) {
                operator delete(v73);
              }
            }

            else
            {
              *(_DWORD *)int v65 = 0;
              unsigned int v66 = v65 + 4;
            }

            *(void *)(a1 + 16) = v66;
            int v85 = *((void *)this + 1);
            if (v85 <= 0xFFFFFFFFFFFFFFFBLL && v85 + 4 <= *((void *)this + 2))
            {
              *(v66 - 1) = *(_DWORD *)(*(void *)this + v85);
LABEL_133:
              int v82 = *((void *)this + 1) + 4LL;
LABEL_134:
              *((void *)this + 1) = v82;
            }

            else
            {
LABEL_131:
              *((_BYTE *)this + 24) = 1;
            }
          }

          uint64_t v4 = *((void *)this + 1);
          uint64_t v5 = *((void *)this + 2);
          int v6 = *((unsigned __int8 *)this + 24);
          if (v4 >= v5 || v6 != 0) {
            return v6 == 0;
          }
          break;
        case 4u:
          *(_BYTE *)(a1 + 52) |= 2u;
          unint64_t v48 = *((void *)this + 1);
          if (v48 > 0xFFFFFFFFFFFFFFF7LL || v48 + 8 > *((void *)this + 2)) {
            goto LABEL_95;
          }
          *(void *)(a1 + 40) = *(void *)(*(void *)this + v48);
LABEL_60:
          unsigned int v49 = *((void *)this + 1) + 8LL;
          goto LABEL_61;
        default:
          if ((PB::Reader::skip(this, v15 >> 3, v15 & 7, 0) & 1) == 0) {
            return 0LL;
          }
          goto LABEL_96;
      }
    }

    unsigned int v19 = 0;
    uint64_t v20 = 0;
    uint64_t v15 = 0LL;
    if (v4 > v5) {
      uint64_t v5 = v4;
    }
    while (v5 != v4)
    {
      uint64_t v21 = v4 + 1;
      unint64_t v22 = *(_BYTE *)(v12 + v4);
      *((void *)this + 1) = v21;
      v15 |= (unint64_t)(v22 & 0x7F) << v19;
      if ((v22 & 0x80) == 0) {
        goto LABEL_21;
      }
      v19 += 7;
      uint64_t v4 = v21;
      if (v20++ >= 9)
      {
LABEL_20:
        uint64_t v15 = 0LL;
        goto LABEL_21;
      }
    }

    int v6 = 1;
    *((_BYTE *)this + 24) = 1;
  }

  return v6 == 0;
}

          uint64_t v4 = *((void *)this + 1);
          uint64_t v5 = *((void *)this + 2);
          int v6 = *((unsigned __int8 *)this + 24);
          if (v4 >= v5 || v6 != 0) {
            return v6 == 0;
          }
          break;
        case 4u:
          *(_BYTE *)(a1 + 52) |= 2u;
          unint64_t v48 = *((void *)this + 1);
          if (v48 > 0xFFFFFFFFFFFFFFF7LL || v48 + 8 > *((void *)this + 2)) {
            goto LABEL_95;
          }
          *(void *)(a1 + 40) = *(void *)(*(void *)this + v48);
LABEL_60:
          unsigned int v49 = *((void *)this + 1) + 8LL;
          goto LABEL_61;
        default:
          if ((PB::Reader::skip(this, v15 >> 3, v15 & 7, 0) & 1) == 0) {
            return 0LL;
          }
          goto LABEL_96;
      }
    }

    unsigned int v19 = 0;
    uint64_t v20 = 0;
    uint64_t v15 = 0LL;
    if (v4 > v5) {
      uint64_t v5 = v4;
    }
    while (v5 != v4)
    {
      uint64_t v21 = v4 + 1;
      unint64_t v22 = *(_BYTE *)(v12 + v4);
      *((void *)this + 1) = v21;
      v15 |= (unint64_t)(v22 & 0x7F) << v19;
      if ((v22 & 0x80) == 0) {
        goto LABEL_21;
      }
      v19 += 7;
      uint64_t v4 = v21;
      if (v20++ >= 9)
      {
LABEL_20:
        uint64_t v15 = 0LL;
        goto LABEL_21;
      }
    }

    int v6 = 1;
    *((_BYTE *)this + 24) = 1;
  }

  return v6 == 0;
}

  uint64_t v47 = *(_BYTE *)(a2 + 180);
  v3 |= 0x40000000000uLL;
  *(void *)(result + 188) = v3;
  *(_BYTE *)(result + 180) = v47;
  unsigned int v2 = *(void *)(a2 + 188);
  if ((v2 & 0x20000000) == 0)
  {
LABEL_49:
    if ((v2 & 0x20000000000LL) == 0) {
      goto LABEL_50;
    }
    goto LABEL_98;
  }

  PB::TextFormatter::format(this, "verticalRotationSimilarityThreshold", *(float *)(a1 + 156));
  uint64_t v5 = *(void *)(a1 + 188);
  if ((v5 & 0x2000000000LL) == 0)
  {
LABEL_46:
    if ((v5 & 0x4000000000LL) == 0) {
      goto LABEL_47;
    }
    goto LABEL_98;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 128), 0x2Du);
  uint64_t v4 = *(void *)(v3 + 188);
  if ((v4 & 0x20000000000LL) == 0)
  {
LABEL_47:
    if ((v4 & 0x10000000000LL) == 0) {
      goto LABEL_48;
    }
    goto LABEL_98;
  }

LABEL_104:
  uint64_t v14 = *(void *)(v5 + 208);
  if (!v14) {
    uint64_t v14 = *(void *)(qword_1019A0BA0 + 208);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x23,  v14,  a2,  a4);
  int v7 = *(_DWORD *)(v5 + 368);
  if ((v7 & 8) == 0)
  {
LABEL_37:
    if ((v7 & 0x10) == 0) {
      goto LABEL_38;
    }
    goto LABEL_108;
  }

  sub_1002F0B04(__p);
  int v79 = (std::string::size_type *)(a1 + 592);
  int v80 = sub_1002A82BC((uint64_t)__p[0].__r_.__value_.__l.__data_, "UnsubscribeGraceDuration", (void *)(a1 + 592));
  int v81 = v80;
  int v82 = (std::__shared_weak_count *)__p[0].__r_.__value_.__l.__size_;
  if (!__p[0].__r_.__value_.__l.__size_) {
    goto LABEL_108;
  }
  unsigned int v83 = (unint64_t *)(__p[0].__r_.__value_.__l.__size_ + 8);
  do
    int v84 = __ldaxr(v83);
  while (__stlxr(v84 - 1, v83));
  if (!v84)
  {
    ((void (*)(std::__shared_weak_count *))v82->__on_zero_shared)(v82);
    std::__shared_weak_count::__release_weak(v82);
    if (!v81) {
      goto LABEL_114;
    }
  }

  else
  {
LABEL_108:
    if (!v80) {
      goto LABEL_114;
    }
  }

  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_1018401A0);
  }
  int v85 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
  {
    unsigned int v86 = *v79;
    LODWORD(__p[0].__r_.__value_.__l.__data_) = 134349056;
    *(std::string::size_type *)((char *)__p[0].__r_.__value_.__r.__words + 4) = v86;
    _os_log_impl( (void *)&_mh_execute_header,  v85,  OS_LOG_TYPE_DEFAULT,  "Client unsubscription grace duration overridden to %{public}f",  (uint8_t *)__p,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_1018401A0);
    }
    v153 = *v79;
    LODWORD(v178) = 134349056;
    *(void *)((char *)&v178 + 4) = v153;
    LODWORD(v158) = 12;
    int v154 = (std::string *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934988,  0LL,  "Client unsubscription grace duration overridden to %{public}f",  &v178,  v158);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLClientManager::CLClientManager(id<CLIntersiloUniverse>)",  "%s\n",  (const char *)v154);
    if (v154 != __p) {
      free(v154);
    }
  }

  if (*(_BYTE *)(a1 + 44))
  {
    unsigned int v59 = *a3;
    unsigned int v60 = a3[1];
    if (*a3 != v60)
    {
      do
      {
        *(void *)(v59 + 40) = -2LL;
        v59 += 88LL;
      }

      while (v59 != v60);
    }
  }

  p_fInstance = (uint64_t *)&self->fInstance;
  unint64_t v37 = self->fInstance.__ptr_.__value_;
  if ((v32 & 0x80) == 0)
  {
    *(_OWORD *)__dst = __s1;
    uint64_t v99 = v105;
    goto LABEL_107;
  }

                  sub_100DBA374(a1, 5LL);
                  goto LABEL_105;
                }

  uint64_t result = *(float *)(a2 + 300);
  v6 |= 1u;
  *unsigned int v2 = v5;
  *(_BYTE *)(a1 + 324) = v6;
  *(float *)(a1 + 300) = result;
  int v7 = *v3;
  if ((*v3 & 0x200000000000000LL) == 0)
  {
LABEL_39:
    if ((v7 & 0x4000000000000LL) == 0) {
      goto LABEL_40;
    }
    goto LABEL_106;
  }

  PB::TextFormatter::format(this, "hgDeltaVXYUnconditional", *(float *)(a1 + 188));
  int v6 = *v5;
  int v7 = *(_BYTE *)(a1 + 324);
  if ((*v5 & 0x2000000000LL) == 0)
  {
LABEL_38:
    if ((v6 & 0x4000000000LL) == 0) {
      goto LABEL_39;
    }
    goto LABEL_106;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 300), 0x22u);
  int v6 = *v4;
  if ((*v4 & 0x200000000000000LL) == 0)
  {
LABEL_39:
    if ((v6 & 0x4000000000000LL) == 0) {
      goto LABEL_40;
    }
    goto LABEL_106;
  }

  uint64_t result = *(float *)(a2 + 92);
  v5 |= 0x100000uLL;
  *unsigned int v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 92) = result;
  uint64_t v4 = *v3;
  int v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x200000) == 0)
  {
LABEL_31:
    if ((v4 & 0x100000000000000LL) == 0) {
      goto LABEL_32;
    }
    goto LABEL_106;
  }

  PB::TextFormatter::format( this,  "detectorRegimeDeltaVThreshold1WithoutAudioStandaloneBaroNeeded",  *(float *)(a1 + 112));
  int v6 = *v5;
  int v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x4000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_106;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 236), 0x19u);
  uint64_t v5 = *v4;
  int v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x80000000000000LL) == 0)
  {
LABEL_30:
    if ((v5 & 0x200000000000000LL) == 0) {
      goto LABEL_31;
    }
    goto LABEL_106;
  }

  uint64_t v21 = *(_BYTE *)(a2 + 311);
  *(_WORD *)(a1 + 324) = v6;
  v6 |= 0x10000uLL;
  *unsigned int v2 = v5;
  *(_BYTE *)(a1 + 326) = BYTE2(v6);
  *(_BYTE *)(a1 + 311) = v21;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*(_WORD *)(a2 + 324) & 0x2000) == 0)
  {
LABEL_24:
    if ((v8 & 0x1000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_106;
  }

  PB::TextFormatter::format(this, "kAudioDvEnergyThresholdMinRO", *(float *)(a1 + 68));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  int v6 = *v5;
  if ((*v5 & 0x8000) == 0)
  {
LABEL_23:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_106;
  }

  uint64_t result = PB::Writer::write(this, *(_BYTE *)(v3 + 311), 0x74u);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((v4[1] & 0x2000) == 0)
  {
LABEL_24:
    if ((v7 & 0x1000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_106;
  }

  int v29 = *(_BYTE *)(a2 + 173);
  v3 |= 0x4000000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(_BYTE *)(result + 214) = BYTE2(v4);
  *(_BYTE *)(result + 173) = v29;
  uint64_t v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  unsigned int v2 = *(void *)(a2 + 204);
  if ((*(_WORD *)(a2 + 212) & 0x40) == 0)
  {
LABEL_26:
    if ((v2 & 0x40000000000000LL) == 0) {
      goto LABEL_27;
    }
    goto LABEL_106;
  }

  PB::TextFormatter::format(this, "kChaosMetRO1", *(_BYTE *)(a1 + 174));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x10000000000000LL) == 0)
  {
LABEL_25:
    if ((v5 & 0x20000000000000LL) == 0) {
      goto LABEL_26;
    }
    goto LABEL_106;
  }

  uint64_t result = PB::Writer::write(this, *(_BYTE *)(v3 + 180), 0x79u);
  uint64_t v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 2) == 0)
  {
LABEL_26:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_106;
  }

          uint64_t v4 = *((void *)this + 1);
          uint64_t v5 = *((void *)this + 2);
          int v6 = *((unsigned __int8 *)this + 24);
          if (v4 >= v5 || v6 != 0) {
            return v6 == 0;
          }
          break;
        case 6u:
          *(_BYTE *)(a1 + 56) |= 2u;
          uint64_t v44 = *((void *)this + 1);
          unint64_t v45 = *((void *)this + 2);
          unint64_t v46 = *(void *)this;
          if (v44 <= 0xFFFFFFFFFFFFFFF5LL && v44 + 10 <= v45)
          {
            uint64_t v47 = 0;
            unint64_t v48 = 0;
            unsigned int v49 = 0LL;
            do
            {
              unint64_t v50 = v44 + 1;
              *((void *)this + 1) = v44 + 1;
              uint64_t v51 = *(_BYTE *)(v46 + v44);
              v49 |= (unint64_t)(v51 & 0x7F) << v47;
              if ((v51 & 0x80) == 0) {
                goto LABEL_89;
              }
              v47 += 7;
              uint64_t v44 = v50;
              uint64_t v18 = v48++ > 8;
            }

            while (!v18);
LABEL_77:
            LODWORD(v49) = 0;
            goto LABEL_89;
          }

          unint64_t v55 = 0;
          uint64_t v56 = 0;
          unsigned int v49 = 0LL;
          if (v45 <= v44) {
            unint64_t v45 = *((void *)this + 1);
          }
          while (2)
          {
            if (v45 == v44)
            {
              LODWORD(v49) = 0;
              *((_BYTE *)this + 24) = 1;
            }

            else
            {
              unsigned int v57 = v44 + 1;
              int v58 = *(_BYTE *)(v46 + v44);
              *((void *)this + 1) = v57;
              v49 |= (unint64_t)(v58 & 0x7F) << v55;
              if (v58 < 0)
              {
                v55 += 7;
                uint64_t v44 = v57;
                uint64_t v18 = v56++ > 8;
                if (v18) {
                  goto LABEL_77;
                }
                continue;
              }

              if (*((_BYTE *)this + 24)) {
                LODWORD(v49) = 0;
              }
            }

            break;
          }

              *(void *)(a1 + 8) = v24;
              goto LABEL_95;
            case 2u:
              *(_DWORD *)(a1 + 88) |= 0x100u;
              unsigned int v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_94;
            case 3u:
              *(_DWORD *)(a1 + 88) |= 0x400u;
              unsigned int v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_94;
            case 4u:
              *(_DWORD *)(a1 + 88) |= 0x1000u;
              unsigned int v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(_DWORD *)(a1 + 60) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_94;
            case 5u:
              *(_DWORD *)(a1 + 88) |= 0x800u;
              unsigned int v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_94;
            case 6u:
              *(_DWORD *)(a1 + 88) |= 0x10000u;
              unsigned int v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_94;
            case 7u:
              *(_DWORD *)(a1 + 88) |= 0x20000u;
              unsigned int v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_94;
            case 8u:
              *(_DWORD *)(a1 + 88) |= 0x40000u;
              unsigned int v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                int v28 = 0;
                *((_BYTE *)this + 24) = 1;
              }

              else
              {
                unint64_t v27 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                int v28 = v27 != 0;
              }

              *(_BYTE *)(a1 + 84) = v28;
              goto LABEL_95;
            case 9u:
              *(_DWORD *)(a1 + 88) |= 0x4000u;
              unsigned int v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(_DWORD *)(a1 + 68) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_94;
            case 0xAu:
              *(_DWORD *)(a1 + 88) |= 0x2000u;
              unsigned int v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(_DWORD *)(a1 + 64) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_94;
            case 0xBu:
              *(_DWORD *)(a1 + 88) |= 2u;
              unsigned int v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_94;
            case 0xCu:
              *(_DWORD *)(a1 + 88) |= 0x20u;
              unsigned int v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_94;
            case 0xDu:
              *(_DWORD *)(a1 + 88) |= 0x40u;
              unsigned int v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_94;
            case 0xEu:
              *(_DWORD *)(a1 + 88) |= 0x80u;
              unsigned int v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_94;
            case 0xFu:
              *(_DWORD *)(a1 + 88) |= 4u;
              unsigned int v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_94;
            case 0x10u:
              *(_DWORD *)(a1 + 88) |= 8u;
              unsigned int v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_94;
            case 0x11u:
              *(_DWORD *)(a1 + 88) |= 0x10u;
              unsigned int v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_94;
            case 0x12u:
              *(_DWORD *)(a1 + 88) |= 0x8000u;
              unsigned int v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_94;
            case 0x13u:
              *(_DWORD *)(a1 + 88) |= 0x200u;
              unsigned int v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v2);
LABEL_94:
                unsigned int v2 = *((void *)this + 1) + 4LL;
                *((void *)this + 1) = v2;
              }

              else
              {
LABEL_83:
                *((_BYTE *)this + 24) = 1;
              }

              goto LABEL_95;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!(_DWORD)result) {
                return result;
              }
              unsigned int v2 = *((void *)this + 1);
LABEL_95:
              uint64_t v3 = *((void *)this + 2);
              uint64_t v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
          }
        }

        uint64_t v4 = 0;
      }

      break;
    }
  }

  return v4 == 0;
}

LABEL_111:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x28,  (int)a2,  *(double *)(v5 + 240),  a3);
  int v7 = *(_DWORD *)(v5 + 368);
  if ((v7 & 0x100) == 0)
  {
LABEL_42:
    if ((v7 & 0x200) == 0) {
      goto LABEL_43;
    }
    goto LABEL_113;
  }

  objc_msgSend( v3,  "setObject:forKey:",  +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", self->_nSampleAndHoldCatherine),  @"nSampleAndHoldCatherine");
  has = self->_has;
  if ((*(_BYTE *)&has & 0x80) == 0)
  {
LABEL_89:
    if ((*(_BYTE *)&has & 0x10) == 0) {
      goto LABEL_90;
    }
    goto LABEL_113;
  }

    if (v59 == 3 && (_DWORD)v29)
    {
      sub_1010DDBC0(buf, "");
      sub_100544214(a1, v12, (uint64_t)buf);
      if ((buf[23] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
      int v29 = 1LL;
    }

    goto LABEL_116;
  }

  uint64_t v14 = +[NSMutableDictionary dictionaryWithDictionary:]( NSMutableDictionary,  "dictionaryWithDictionary:",  [*(id *)(a1 + 136) dictionaryForKey:@"RemoteUsage" atKeyPath:v12 defaultValue:&__NSDictionary0__struct]);
  uint64_t v15 = [v12 isAuthSharingSubIdentity];
  unint64_t v16 = v65;
  uint64_t v17 = -[NSMutableDictionary objectForKeyedSubscript:](v14, "objectForKeyedSubscript:", v65);
  uint64_t v18 = v64;
  unsigned int v19 = -[NSMutableDictionary objectForKeyedSubscript:](v14, "objectForKeyedSubscript:", v64);
  if ((v15 & 1) != 0)
  {
    if (a4)
    {
      if (!v17 || v19)
      {
        v77[0] = &off_1018D3548;
        v77[1] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", a7);
        uint64_t v20 = 1;
        uint64_t v21 = v77;
      }

      else
      {
        v76[0] = +[NSNumber numberWithInt:]( NSNumber,  "numberWithInt:",  objc_msgSend(objc_msgSend(v17, "objectAtIndexedSubscript:", 0), "intValue") + 1);
        uint64_t v20 = 0;
        v76[1] = [v17 objectAtIndexedSubscript:1];
        uint64_t v21 = v76;
      }

      char v33 = +[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v21, 2LL);
LABEL_56:
      -[NSMutableDictionary setObject:forKeyedSubscript:](v14, "setObject:forKeyedSubscript:", v33, v16);
      -[NSMutableDictionary removeObjectForKey:](v14, "removeObjectForKey:", v18);
      [*(id *)(a1 + 136) setDictionary:v14 forKey:@"RemoteUsage" atKeyPath:v12];
      if (!v20) {
        goto LABEL_57;
      }
      goto LABEL_67;
    }

    if (v17) {
      int v34 = 1;
    }
    else {
      int v34 = a5;
    }
    if (v34 == 1)
    {
      if ((int)objc_msgSend(objc_msgSend(v17, "objectAtIndexedSubscript:", 0), "intValue") >= 2)
      {
        v75[0] = +[NSNumber numberWithInt:]( NSNumber,  "numberWithInt:",  objc_msgSend(objc_msgSend(v17, "objectAtIndexedSubscript:", 0), "intValue") - 1);
        v75[1] = [v17 objectAtIndexedSubscript:1];
        -[NSMutableDictionary setObject:forKeyedSubscript:]( v14,  "setObject:forKeyedSubscript:",  +[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v75, 2LL),  v16);
LABEL_66:
        sub_100547C58(a1);
        [*(id *)(a1 + 136) setDictionary:v14 forKey:@"RemoteUsage" atKeyPath:v12];
        goto LABEL_67;
      }

  sub_1002F0B04(buf);
  unsigned int v101 = (unsigned __int8 *)(a1 + 753);
  uint64_t v102 = sub_1002A6F64(*(uint64_t *)&buf[0], "FenceMonitorIsTriggerOnTether", (BOOL *)(a1 + 753));
  unsigned int v103 = v102;
  uint64_t v104 = (std::__shared_weak_count *)*((void *)&buf[0] + 1);
  if (!*((void *)&buf[0] + 1)) {
    goto LABEL_115;
  }
  uint64_t v105 = (unint64_t *)(*((void *)&buf[0] + 1) + 8LL);
  do
    uint64_t v106 = __ldaxr(v105);
  while (__stlxr(v106 - 1, v105));
  if (!v106)
  {
    ((void (*)(std::__shared_weak_count *))v104->__on_zero_shared)(v104);
    std::__shared_weak_count::__release_weak(v104);
    if (!v103) {
      goto LABEL_121;
    }
  }

  else
  {
LABEL_115:
    if (!v102) {
      goto LABEL_121;
    }
  }

  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866E28);
  }
  int v107 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
  {
    int v108 = *v101;
    LODWORD(buf[0]) = 67174657;
    DWORD1(buf[0]) = v108;
    _os_log_impl( (void *)&_mh_execute_header,  v107,  OS_LOG_TYPE_DEFAULT,  "Fence: Overriding fIsTriggerOnTether, %{private}d",  (uint8_t *)buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    uint64_t v151 = *v101;
    unsigned int v161 = 67174657;
    LODWORD(v162) = v151;
    LODWORD(v157) = 8;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "Fence: Overriding fIsTriggerOnTether, %{private}d",  &v161,  v157);
    v153 = (char *)v152;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLFenceMonitor::CLFenceMonitor(CLFenceMonitorClientProtocol *, CLFenceMonitor::DatabaseType)",  "%s\n",  v152);
  }

        if (v12 != 4)
        {
          continue;
        }

        return 1LL;
      case 0x4Au:
        uint64_t v12 = TagFallback & 7;
        uint64_t v25 = (char *)*((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        goto LABEL_760;
      case 0x4Bu:
        uint64_t v12 = TagFallback & 7;
        int v26 = (char *)*((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        goto LABEL_769;
      case 0x4Cu:
        uint64_t v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_111;
        }
        int v28 = *(_DWORD *)(a1 + 400);
        goto LABEL_778;
      case 0x4Du:
        uint64_t v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_793;
        }
        goto LABEL_111;
      default:
        uint64_t v12 = TagFallback & 7;
        goto LABEL_111;
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934770 != -1) {
      dispatch_once(&qword_101934770, &stru_101878D40);
    }
    if (v64 < 2)
    {
      int v130 = 0.0;
      unsigned int v131 = 0.0;
      if (v64 != 1) {
        goto LABEL_235;
      }
    }

    else
    {
      int v130 = sqrt(v12 / (double)(v64 - 1));
    }

    unsigned int v131 = v10;
LABEL_235:
    *(_DWORD *)int v148 = 134284033;
    *(double *)&v148[4] = v4;
    *(_WORD *)&v148[12] = 2049;
    *(double *)&v148[14] = v130;
    *(_WORD *)&v148[22] = 2049;
    uint64_t v149 = v131;
    LODWORD(v134) = 32;
    int v132 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934778,  2LL,  "CLHRPeakEstimator::estimateRecoveryOnset,recoveryOnsetWindowStart,%{private}f,metsStdDev,%{private} f,metsMean,%{private}f",  v148,  v134);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLHRPeakEstimator::estimateRecoveryOnset(HRRecoveryResult &, const std::vector<HRRecoveryInputWR> &)",  "%s\n",  v132);
    if (v132 != buf) {
      free(v132);
    }
  }

  *(void *)buf = 0x3FF6A09E60000000LL;
  sub_1000070FC(v148, 0x18uLL, buf);
  unsigned int v72 = 0;
  uint64_t v73 = *(void **)&v148[8];
  do
  {
    if ((unint64_t)v73 >= *(void *)&v148[16])
    {
      unsigned int v74 = *(void **)v148;
      char v75 = ((uint64_t)v73 - *(void *)v148) >> 3;
      unsigned int v76 = v75 + 1;
      char v77 = *(void *)&v148[16] - *(void *)v148;
      else {
        int v78 = v76;
      }
      if (v78)
      {
        int v79 = (char *)sub_1000071BC((uint64_t)&v148[16], v78);
        unsigned int v74 = *(void **)v148;
        uint64_t v73 = *(void **)&v148[8];
      }

      else
      {
        int v79 = 0LL;
      }

      int v80 = &v79[8 * v75];
      *(void *)int v80 = 0xBFE6A09E60000000LL;
      int v81 = v80 + 8;
      while (v73 != v74)
      {
        int v82 = *--v73;
        *((void *)v80 - 1) = v82;
        v80 -= 8;
      }

      *(void *)int v148 = v80;
      *(void *)&v148[8] = v81;
      *(void *)&v148[16] = &v79[8 * v78];
      if (v74) {
        operator delete(v74);
      }
      uint64_t v73 = v81;
    }

    else
    {
      *v73++ = 0xBFE6A09E60000000LL;
    }

    *(void *)&v148[8] = v73;
    ++v72;
  }

  while (v72 != 48);
  int v84 = (double *)__p;
  unsigned int v83 = v142;
  int v85 = *(void **)v148;
  unsigned int v86 = (uint64_t)v73 - *(void *)v148;
  if (0x6DB6DB6DB6DB6DB7LL * ((v142 - (_BYTE *)__p) >> 3) >= (unint64_t)(((uint64_t)v73 - *(void *)v148) >> 3))
  {
    unsigned int v87 = 0.0;
    if (v64 >= 2) {
      unsigned int v87 = v12 / (double)(v64 - 1);
    }
    if (sqrt(v87) != 0.0)
    {
      v138 = 0LL;
      uint64_t v139 = 0LL;
      uint64_t v140 = 0LL;
      if (__p == v142)
      {
        uint64_t v105 = 0LL;
        uint64_t v104 = 0LL;
      }

      else
      {
        int v88 = v12 / (double)(v64 - 1);
        if (v64 >= 1) {
          int v89 = v10;
        }
        else {
          int v89 = 0.0;
        }
        if (v64 < 2) {
          int v88 = 0.0;
        }
        int v90 = sqrt(v88) * (double)v64;
        do
        {
          unsigned int v91 = (v84[2] - v89) / v90;
          int v92 = v139;
          if (v139 >= v140)
          {
            int v94 = v138;
            unsigned int v95 = v139 - v138;
            int v96 = v95 + 1;
            int v97 = (char *)v140 - (char *)v138;
            else {
              uint64_t v98 = v96;
            }
            if (v98)
            {
              uint64_t v99 = (char *)sub_1000071BC((uint64_t)&v140, v98);
              int v94 = v138;
              int v92 = v139;
            }

            else
            {
              uint64_t v99 = 0LL;
            }

            uint64_t v100 = (double *)&v99[8 * v95];
            *uint64_t v100 = v91;
            int v93 = v100 + 1;
            while (v92 != v94)
            {
              unsigned int v101 = *((void *)v92-- - 1);
              *((void *)v100-- - 1) = v101;
            }

            v138 = v100;
            uint64_t v140 = (double *)&v99[8 * v98];
            if (v94) {
              operator delete(v94);
            }
          }

          else
          {
            unsigned __int8 *v139 = v91;
            int v93 = v139 + 1;
          }

          uint64_t v139 = v93;
          if (qword_101934770 != -1) {
            dispatch_once(&qword_101934770, &stru_101878D40);
          }
          uint64_t v102 = (os_log_s *)qword_101934778;
          if (os_log_type_enabled((os_log_t)qword_101934778, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)buf = 134283521;
            *(double *)&uint8_t buf[4] = v91;
            _os_log_impl( (void *)&_mh_execute_header,  v102,  OS_LOG_TYPE_DEBUG,  "CLHRPeakEstimator::estimateRecoveryOnset,normalizedMetsValue,%{private}f",  buf,  0xCu);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934770 != -1) {
              dispatch_once(&qword_101934770, &stru_101878D40);
            }
            LODWORD(v147[0]) = 134283521;
            *(double *)((char *)v147 + 4) = v91;
            LODWORD(v134) = 12;
            unsigned int v103 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934778,  2LL,  "CLHRPeakEstimator::estimateRecoveryOnset,normalizedMetsValue,%{private}f",  v147,  v134);
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLHRPeakEstimator::estimateRecoveryOnset(HRRecoveryResult &, const std::vector<HRRecoveryInputWR> &)",  "%s\n",  v103);
            if (v103 != buf) {
              free(v103);
            }
          }

          v84 += 7;
        }

        while (v84 != (double *)v83);
        uint64_t v105 = v138;
        uint64_t v104 = v139;
        unsigned int v86 = *(void *)&v148[8] - *(void *)v148;
      }

      v137 = v104 - v105 - (v86 >> 3);
      *(void *)buf = 0LL;
      sub_1000070FC(v147, v137 + 1, buf);
      if (v137 != -1)
      {
        uint64_t v106 = 0LL;
        int v107 = 0LL;
        int v108 = *(void *)v148;
        int v109 = *(void *)&v148[8];
        do
        {
          if (v109 == v108)
          {
            int v109 = v108;
          }

          else
          {
            unsigned int v110 = 0LL;
            do
            {
              if (qword_101934770 != -1) {
                dispatch_once(&qword_101934770, &stru_101878D40);
              }
              int v111 = (os_log_s *)qword_101934778;
              if (os_log_type_enabled((os_log_t)qword_101934778, OS_LOG_TYPE_DEBUG))
              {
                int v112 = *(void *)(*(void *)&v147[0] + 8 * v107);
                *(_DWORD *)buf = 67175169;
                *(_DWORD *)&uint8_t buf[4] = v107;
                *(_WORD *)&buf[8] = 1025;
                *(_DWORD *)&buf[10] = v110;
                *(_WORD *)uint64_t v151 = 2049;
                *(void *)&v151[2] = v112;
                _os_log_impl( (void *)&_mh_execute_header,  v111,  OS_LOG_TYPE_DEBUG,  "CLHRPeakEstimator::estimateRecoveryOnset,l,%{private}d,i,%{private}d,xCorrVals[l],%{private}f",  buf,  0x18u);
              }

              if (sub_1002921D0(115, 2))
              {
                bzero(buf, 0x65CuLL);
                if (qword_101934770 != -1) {
                  dispatch_once(&qword_101934770, &stru_101878D40);
                }
                uint64_t v113 = *(void *)(*(void *)&v147[0] + 8 * v107);
                v144 = 67175169;
                *(_DWORD *)v145 = v107;
                *(_WORD *)&v145[4] = 1025;
                *(_DWORD *)&v145[6] = v110;
                *(_WORD *)uint64_t v146 = 2049;
                *(void *)&v146[2] = v113;
                LODWORD(v134) = 24;
                uint64_t v114 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934778,  2LL,  "CLHRPeakEstimator::estimateRecoveryOnset,l,%{private}d,i,%{private}d,xCorrVals[l],%{private}f",  &v144,  v134);
                sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLHRPeakEstimator::estimateRecoveryOnset(HRRecoveryResult &, const std::vector<HRRecoveryInputWR> &)",  "%s\n",  v114);
                if (v114 != buf) {
                  free(v114);
                }
              }

              ++v110;
              int v108 = *(void *)v148;
              int v109 = *(void *)&v148[8];
            }

            while (v110 < (uint64_t)(*(void *)&v148[8] - *(void *)v148) >> 3);
          }

          ++v106;
        }

        while (v107++ != v137);
      }

      if (*((void *)&v147[0] + 1) == *(void *)&v147[0])
      {
        uint64_t v117 = 0;
        uint64_t v119 = 0.0;
      }

      else
      {
        uint64_t v116 = 0LL;
        uint64_t v117 = 0;
        uint64_t v118 = (uint64_t)(*((void *)&v147[0] + 1) - *(void *)&v147[0]) >> 3;
        if (v118 <= 1) {
          uint64_t v118 = 1LL;
        }
        uint64_t v119 = 0.0;
        do
        {
          if (*(double *)(*(void *)&v147[0] + 8 * v116) > v119)
          {
            uint64_t v119 = *(double *)(*(void *)&v147[0] + 8 * v116);
            uint64_t v117 = v116;
          }

          ++v116;
        }

        while (v118 != v116);
      }

      unsigned int v120 = v117 + 24LL;
      if (qword_101934770 != -1) {
        dispatch_once(&qword_101934770, &stru_101878D40);
      }
      uint64_t v121 = (os_log_s *)qword_101934778;
      if (os_log_type_enabled((os_log_t)qword_101934778, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 134284033;
        *(double *)&uint8_t buf[4] = v119;
        *(_WORD *)&buf[12] = 1025;
        *(_DWORD *)uint64_t v151 = v117;
        *(_WORD *)&v151[4] = 1025;
        *(_DWORD *)&v151[6] = v117 + 24;
        _os_log_impl( (void *)&_mh_execute_header,  v121,  OS_LOG_TYPE_DEBUG,  "CLHRPeakEstimator::estimateRecoveryOnset,xCorrValMax,%{private}f,xCorrValMaxIndex,%{private}d,onsetIndex,%{private}d",  buf,  0x18u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934770 != -1) {
          dispatch_once(&qword_101934770, &stru_101878D40);
        }
        v144 = 134284033;
        *(double *)v145 = v119;
        *(_WORD *)&v145[8] = 1025;
        *(_DWORD *)uint64_t v146 = v117;
        *(_WORD *)&v146[4] = 1025;
        *(_DWORD *)&v146[6] = v117 + 24;
        LODWORD(v134) = 24;
        int v133 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934778,  2LL,  "CLHRPeakEstimator::estimateRecoveryOnset,xCorrValMax,%{private}f,xCorrValMaxIndex,%{private}d,o nsetIndex,%{private}d",  &v144,  v134);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLHRPeakEstimator::estimateRecoveryOnset(HRRecoveryResult &, const std::vector<HRRecoveryInputWR> &)",  "%s\n",  v133);
        if (v133 != buf) {
          free(v133);
        }
      }

      uint64_t v123 = (double *)__p;
      uint64_t v122 = v142;
      if (0x6DB6DB6DB6DB6DB7LL * ((v142 - (_BYTE *)__p) >> 3) > v120)
      {
        unsigned int v124 = *((double *)__p + 7 * v120 + 1);
        *(double *)(a2 + 56) = v124;
        uint64_t v125 = 0;
        do
        {
          uint64_t v126 = v123[1];
          if (v126 > v124 && v126 < v124 + 180.0)
          {
            uint64_t v10 = v123[2];
            if (v125)
            {
              ++v125;
              int v128 = v10 - v67;
              int v67 = v67 + (v10 - v67) / (double)v125;
              uint64_t v12 = v11 + v128 * (v10 - v67);
              uint64_t v11 = v12;
              uint64_t v10 = v67;
            }

            else
            {
              uint64_t v11 = 0.0;
              uint64_t v125 = 1;
              int v67 = v123[2];
            }
          }

          v123 += 7;
        }

        while (v123 != (double *)v122);
        if (v125 <= 0)
        {
LABEL_217:
          *(void *)(a2 + 152) = 0LL;
          uint64_t v10 = 0.0;
          int v129 = 0.0;
        }

        else
        {
          *(double *)(a2 + 152) = v10;
          int v129 = 0.0;
          if (v125 != 1) {
            int v129 = v12 / (double)(v125 - 1);
          }
        }

        *(double *)(a2 + 160) = sqrt(v129);
        *(_BYTE *)(a2 + 168) = v10 < 2.5;
      }

      if (*(void *)&v147[0])
      {
        *((void *)&v147[0] + 1) = *(void *)&v147[0];
        operator delete(*(void **)&v147[0]);
      }

      if (v138) {
        operator delete(v138);
      }
      int v85 = *(void **)v148;
    }
  }

  if (v85)
  {
    *(void *)&v148[8] = v85;
    operator delete(v85);
  }

  if (__p)
  {
    uint64_t v142 = (char *)__p;
    operator delete(__p);
  }

            if (SHIBYTE(v78) < 0) {
              operator delete((void *)v77);
            }
          }

          ++v43;
        }

        while (v43 != 21);
      }
    }

    else
    {
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101879158);
      }
      unsigned int v62 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v62,  OS_LOG_TYPE_ERROR,  "TileMgr, Invalid tile id!, #CloneMe",  buf,  2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101879158);
        }
        LOWORD(__p.__r_.__value_.__l.__data_) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  16LL,  "TileMgr, Invalid tile id!, #CloneMe",  &__p,  2);
        int v64 = (uint8_t *)v63;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLTilesManager::updateTileLocationRelevancy(const CLDaemonLocation &)_block_invoke",  "%s\n",  v63);
        if (v64 != buf) {
          free(v64);
        }
      }
    }

    if (SHIBYTE(v82) < 0) {
      operator delete((void *)v81);
    }
    return;
  }

  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101879178);
  }
  uint64_t v10 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v11 = a2 + 8;
    *(_DWORD *)buf = 136315138;
    *(void *)int v84 = v11;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "TILE: tiles, %s, not active", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101879178);
    }
    uint64_t v14 = *(void *)(a2 + 8);
    uint64_t v13 = a2 + 8;
    uint64_t v12 = v14;
    LODWORD(v80.__r_.__value_.__l.__data_) = 136315138;
    *(std::string::size_type *)((char *)v80.__r_.__value_.__r.__words + 4) = v12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "TILE: tiles, %s, not active",  (const char *)&v80);
    int v9 = (uint8_t *)v15;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLTilesManager::updateTileLocationRelevancy(const CLDaemonLocation &)_block_invoke",  "%s\n",  v15);
    goto LABEL_24;
  }

      uint64_t v31 = a4;
      if (v98[8])
      {
        *((void *)v34 + 7) = *(void *)(a1 + 8);
LABEL_60:
        if (v98 + 6 != (__n128 **)a3) {
          sub_100C7DC2C(a3, (uint64_t)v98[7], (uint64_t)(v98 + 6));
        }
        goto LABEL_62;
      }
    }

    else if (v98[8])
    {
      goto LABEL_60;
    }

    *(void *)uint64_t v114 = sub_100C76224(a1, a6);
    if (!*(void *)v114)
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10187A7C8);
      }
      int v78 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
      {
        int v79 = *(void *)(a1 + 8);
        buf.n128_u32[0] = 134349056;
        *(unint64_t *)((char *)buf.n128_u64 + 4) = v79;
        _os_log_impl( (void *)&_mh_execute_header,  v78,  OS_LOG_TYPE_ERROR,  "CLMM,%{public}.1lf,getGeoMapFeatureRoadObject returned nil",  (uint8_t *)&buf,  0xCu);
      }

      if (!sub_1002921D0(115, 0)) {
        goto LABEL_132;
      }
      bzero(&buf, 0x65CuLL);
      if (qword_1019348B0 == -1) {
        goto LABEL_98;
      }
      goto LABEL_151;
    }

    ++*(_DWORD *)(a1 + 36);
    uint64_t v113 = 0LL;
    unsigned int v74 = operator new(0x28uLL);
    char *v74 = &off_10187A8F8;
    v74[1] = &v109;
    v74[2] = a1;
    v74[3] = v114;
    v74[4] = &v93;
    uint64_t v113 = v74;
    char v75 = sub_100C76C70((uint64_t)v112);
    unsigned int v76 = v113;
    if (v113 == v112)
    {
      char v77 = 4LL;
      unsigned int v76 = v112;
    }

    else
    {
      if (!v113) {
        goto LABEL_126;
      }
      char v77 = 5LL;
    }

    (*(void (**)(void))(*v76 + 8 * v77))();
LABEL_126:

    *(void *)uint64_t v114 = 0LL;
    if (!v75)
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10187A7C8);
      }
      int v80 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
      {
        int v81 = *(void *)(a1 + 8);
        buf.n128_u32[0] = 134349056;
        *(unint64_t *)((char *)buf.n128_u64 + 4) = v81;
        _os_log_impl( (void *)&_mh_execute_header,  v80,  OS_LOG_TYPE_ERROR,  "CLMM,%{public}.1lf,outgoing roads query failed (roadsAtIntersection)",  (uint8_t *)&buf,  0xCu);
      }

      if (!sub_1002921D0(115, 0)) {
        goto LABEL_132;
      }
      bzero(&buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10187A7C8);
      }
      int v88 = *(void *)(a1 + 8);
      LODWORD(v115) = 134349056;
      *(void *)((char *)&v115 + 4) = v88;
      _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,%{public}.1lf,outgoing roads query failed (roadsAtIntersection)",  &v115,  12);
      int v69 = (__n128 *)v89;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLGeoMapFeatureAccessGeometry::roadsAtIntersection(CLMapCrumb &, CLMapGeometry::IntersectionQueryRe sultList *, CLMapGeometry::IntersectionQueryResultList *, BOOL, const CLMapRoadPtr &, BOOL, double, double, double &) const",  "%s\n",  v89);
      goto LABEL_148;
    }

    goto LABEL_60;
  }

  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_10187A7C8);
  }
  int v26 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
  {
    unint64_t v27 = *(void *)(a1 + 8);
    buf.n128_u32[0] = 134349056;
    *(unint64_t *)((char *)buf.n128_u64 + 4) = v27;
    _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_ERROR,  "CLMM,%{public}.1lf,input road is nullptr",  (uint8_t *)&buf,  0xCu);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10187A7C8);
    }
    unsigned int v83 = *(void *)(a1 + 8);
    LODWORD(v117) = 134349056;
    *(void *)((char *)&v117 + 4) = v83;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,%{public}.1lf,input road is nullptr",  &v117,  12);
    uint64_t v25 = (__n128 *)v84;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLGeoMapFeatureAccessGeometry::roadsAtIntersection(CLMapCrumb &, CLMapGeometry::IntersectionQueryResu ltList *, CLMapGeometry::IntersectionQueryResultList *, BOOL, const CLMapRoadPtr &, BOOL, double, double, double &) const",  "%s\n",  v84);
LABEL_138:
    if (v25 != &buf) {
      free(v25);
    }
  }

  return 0LL;
}

        unsigned int v83 = *(void *)v218;
        int v84 = *(void *)&v218[8];
        int v85 = v179;
        unsigned int v86 = v177;
        if (v177 < 0)
        {
          do
          {
            int v85 = (__n128 **)*v85;
            _CF = __CFADD__(v86++, 1LL);
          }

          while (!_CF);
        }

        else if (v177)
        {
          unsigned int v87 = v177 + 1LL;
          do
          {
            int v85 = (__n128 **)v85[1];
            --v87;
          }

          while (v87 > 1);
        }

        int v88 = sub_100D2DBDC( (double *)v1 + 76,  *(double *)v218,  *(double *)&v218[8],  *((double *)v85 + 6),  *((double *)v85 + 7),  0.0);
        memset(v203, 0, 24);
        *(_OWORD *)&v203[24] = xmmword_1012E0070;
        v203[40] = 0;
        v204 = 0u;
        v205 = 0u;
        __asm { FMOV            V1.2D, #-1.0 }

        v210 = _Q1;
        *(void *)&v211[0] = 0xBFF0000000000000LL;
        v212 = 0LL;
        v213 = 0LL;
        LODWORD(v214) = 0;
        WORD2(v214) = 1;
        DWORD2(v214) = 0;
        v216 = 0LL;
        v215 = 0uLL;
        *(void *)&v206 = v83;
        *((void *)&v206 + 1) = v84;
        *(void *)&v207 = v1[150];
        *((double *)&v207 + 1) = v79;
        if (v88 < 8.0) {
          int v88 = 8.0;
        }
        *(double *)v208 = v88;
        *((double *)v208 + 1) = v80;
        *(void *)&v208[1] = 0x3FF0000000000000LL;
        int v90 = v1[164];
        *((void *)&v208[1] + 1) = v1[153];
        *(void *)&v209 = v90;
        BYTE8(v209) = *((_BYTE *)v1 + 1356);
        *(int8x16_t *)((char *)v211 + 8) = vextq_s8(*(int8x16_t *)(v1 + 143), *(int8x16_t *)(v1 + 143), 8uLL);
        *((void *)&v211[1] + 1) = v1[142];
        sub_100D725E4((uint64_t)v203, 0);
        sub_1000F2F30(&v212, (uint64_t *)v217);
        v214 = *(_OWORD *)&v217[16];
        v215 = *(_OWORD *)v218;
        v216 = *(void *)&v218[16];
        sub_100D726F0((uint64_t *)&v184, (uint64_t)v203);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_1018819B8);
        }
        unsigned int v91 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
        {
          int v92 = 0xF83E0F83E0F83E1LL * ((uint64_t)(v1[510] - v1[509]) >> 3);
          *(_DWORD *)buf = 134350593;
          *(void *)&uint8_t buf[4] = v7;
          v224 = 2049;
          *(void *)v225 = v206;
          *(_WORD *)&v225[8] = 2049;
          *(void *)&v225[10] = *((void *)&v206 + 1);
          v226 = 2050;
          v227 = *((void *)&v207 + 1);
          v228 = 2050;
          v229 = *(void *)&v208[0];
          v230 = 2050;
          v231 = *((void *)&v208[0] + 1);
          v232 = 2050;
          v233 = v92;
          _os_log_impl( (void *)&_mh_execute_header,  v91,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}.1lf,routeHints,meas,moveOnRouteRoads,ll,%{private}.7lf,%{private}.7lf,course,%{public}.3lf,hu nc,%{public}.3lf,cunc,%{public}.3lf,count,%{public}lu",  buf,  0x48u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_1018819B8);
          }
          int v165 = 0xF83E0F83E0F83E1LL * ((uint64_t)(v1[510] - v1[509]) >> 3);
          uint64_t v189 = 134350593;
          uint64_t v190 = v7;
          uint64_t v191 = 2049;
          uint64_t v192 = v206;
          uint64_t v193 = 2049;
          v194 = *((void *)&v206 + 1);
          uint64_t v195 = 2050;
          uint64_t v196 = *((void *)&v207 + 1);
          v197 = 2050;
          uint64_t v198 = *(void *)&v208[0];
          uint64_t v199 = 2050;
          v200 = *((void *)&v208[0] + 1);
          v201 = 2050;
          v202 = v165;
          LODWORD(v170) = 72;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}.1lf,routeHints,meas,moveOnRouteRoads,ll,%{private}.7lf,%{private}.7lf,course,%{public}.3lf,hu nc,%{public}.3lf,cunc,%{public}.3lf,count,%{public}lu",  &v189,  v170);
          int v167 = (char *)v166;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMapMatcher::generateRouteHintMeasurement()",  "%s\n",  v166);
          if (v167 != buf) {
            free(v167);
          }
        }

        sub_10000AE14((uint64_t)&v212);
LABEL_126:
        sub_100890314((uint64_t *)&v178);
        sub_100BDC958((uint64_t)v217);
        goto LABEL_24;
      }

      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_1018819B8);
      }
      int v132 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 134349056;
        *(void *)&uint8_t buf[4] = v7;
        _os_log_impl( (void *)&_mh_execute_header,  v132,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}.1lf,routeHints,no meas,moveOnRouteRoads,failed as not enough route roads are available",  buf,  0xCu);
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_201;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_1018819B8);
      }
      *(_DWORD *)v203 = 134349056;
      *(void *)&v203[4] = v7;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}.1lf,routeHints,no meas,moveOnRouteRoads,failed as not enough route roads are available",  v203,  12);
      int v134 = (char *)v133;
      sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLParticleMapMatcher::generateRouteHintMeasurement()", "%s\n", v133);
      goto LABEL_258;
    }
  }

  uint64_t result = *(float *)(a2 + 180);
  v5 |= 0x400000000uLL;
  *unsigned int v2 = v5;
  *(_BYTE *)(a1 + 324) = v6;
  *(float *)(a1 + 180) = result;
  int v7 = *v3;
  if ((*v3 & 0x80000000000LL) == 0)
  {
LABEL_46:
    if ((v7 & 0x10000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_113;
  }

  PB::TextFormatter::format(this, "hgDurationXYBiggestImpact", *(float *)(a1 + 216));
  int v6 = *v5;
  int v7 = *(_BYTE *)(a1 + 324);
  if ((*v5 & 0x100000000000LL) == 0)
  {
LABEL_45:
    if ((v6 & 0x200000000000LL) == 0) {
      goto LABEL_46;
    }
    goto LABEL_113;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 180), 0x29u);
  int v6 = *v4;
  if ((*v4 & 0x80000000000LL) == 0)
  {
LABEL_46:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_113;
  }

  uint64_t result = *(float *)(a2 + 72);
  v5 |= 0x8000uLL;
  *unsigned int v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 72) = result;
  uint64_t v4 = *v3;
  int v7 = *(_WORD *)(a2 + 288);
  if ((v7 & 0x800) == 0)
  {
LABEL_38:
    if ((v7 & 4) == 0) {
      goto LABEL_39;
    }
    goto LABEL_113;
  }

  PB::TextFormatter::format(this, "detectorRegimeDeltaVThreshold3", *(float *)(a1 + 140));
  int v6 = *v5;
  int v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x200000000LL) == 0)
  {
LABEL_37:
    if ((v6 & 0x400000000LL) == 0) {
      goto LABEL_38;
    }
    goto LABEL_113;
  }

  uint64_t result = PB::Writer::write(this, *(_BYTE *)(v3 + 270), 0x20u);
  uint64_t v5 = *v4;
  int v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x80) == 0)
  {
LABEL_37:
    if ((v5 & 0x400) == 0) {
      goto LABEL_38;
    }
    goto LABEL_113;
  }

  uint64_t result = *(float *)(a2 + 120);
  v5 |= 0x8000000uLL;
  *unsigned int v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(_BYTE *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 120) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x40000000) == 0)
  {
LABEL_31:
    if ((v4 & 4) == 0) {
      goto LABEL_32;
    }
    goto LABEL_113;
  }

  PB::TextFormatter::format(this, "kAudioDvRO", *(_BYTE *)(a1 + 308));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  int v6 = *v5;
  if ((*v5 & 0x200000) == 0)
  {
LABEL_30:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_113;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 120), 0xC9u);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x40000000) == 0)
  {
LABEL_31:
    if ((v5 & 4) == 0) {
      goto LABEL_32;
    }
    goto LABEL_113;
  }

  PB::TextFormatter::format(this, "currentCadence", *(float *)(a1 + 88));
  int v7 = *v5;
  int v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x2000) == 0)
  {
LABEL_10:
    if ((v7 & 0x4000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_113;
  }

  int v38 = *(_DWORD *)(a2 + 116);
  v3 |= 0x800000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(_BYTE *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 116) = v38;
  uint64_t v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  unsigned int v2 = *(void *)(a2 + 204);
  if ((v2 & 0x80000) == 0)
  {
LABEL_33:
    if ((v2 & 0x80000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_113;
  }

  PB::TextFormatter::format(this, "kEnergyAndChaosOrSaturationMetRO0", *(_BYTE *)(a1 + 181));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x800000000000000LL) == 0)
  {
LABEL_32:
    if ((v5 & 0x1000000000000000LL) == 0) {
      goto LABEL_33;
    }
    goto LABEL_113;
  }

  uint64_t result = PB::Writer::write(this, *(_BYTE *)(v3 + 157), 0x3F1u);
  uint64_t v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 0x4000) == 0)
  {
LABEL_33:
    if ((v4 & 0x4000000000LL) == 0) {
      goto LABEL_34;
    }
    goto LABEL_113;
  }

          *(void *)(a1 + 56) = v34;
          goto LABEL_129;
        case 3u:
          if ((_DWORD)v24 == 2)
          {
            if ((PB::Reader::placeMark(this, v93, v24, a4) & 1) != 0) {
              return 0LL;
            }
            unint64_t v37 = *((void *)this + 1);
            int v38 = *((void *)this + 2);
            while (v37 < v38 && !*((_BYTE *)this + 24))
            {
              unint64_t v40 = *(char **)(a1 + 16);
              int v39 = *(void *)(a1 + 24);
              if ((unint64_t)v40 >= v39)
              {
                unint64_t v42 = (char *)*v10;
                unsigned int v43 = (v40 - (_BYTE *)*v10) >> 3;
                uint64_t v44 = v43 + 1;
                unint64_t v45 = v39 - (void)v42;
                if (v45 >> 2 > v44) {
                  uint64_t v44 = v45 >> 2;
                }
                else {
                  unint64_t v46 = v44;
                }
                if (v46)
                {
                  uint64_t v47 = (char *)sub_1000071BC(v11, v46);
                  unint64_t v42 = *(char **)(a1 + 8);
                  unint64_t v40 = *(char **)(a1 + 16);
                }

                else
                {
                  uint64_t v47 = 0LL;
                }

                unint64_t v48 = &v47[8 * v43];
                *(void *)unint64_t v48 = 0LL;
                uint64_t v41 = v48 + 8;
                while (v40 != v42)
                {
                  unsigned int v49 = *((void *)v40 - 1);
                  v40 -= 8;
                  *((void *)v48 - 1) = v49;
                  v48 -= 8;
                }

                *(void *)(a1 + 8) = v48;
                *(void *)(a1 + 16) = v41;
                *(void *)(a1 + 24) = &v47[8 * v46];
                if (v42) {
                  operator delete(v42);
                }
              }

              else
              {
                *(void *)unint64_t v40 = 0LL;
                uint64_t v41 = v40 + 8;
              }

              *(void *)(a1 + 16) = v41;
              unint64_t v50 = *((void *)this + 1);
              if (v50 > 0xFFFFFFFFFFFFFFF7LL || v50 + 8 > *((void *)this + 2))
              {
                *((_BYTE *)this + 24) = 1;
                break;
              }

              *(v41 - 1) = *(void *)(*(void *)this + v50);
              int v38 = *((void *)this + 2);
              unint64_t v37 = *((void *)this + 1) + 8LL;
              *((void *)this + 1) = v37;
            }

LABEL_125:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x35,  *(unsigned __int8 *)(v5 + 278),  (BOOL)a2,  a4);
  int v9 = *(_DWORD *)(v5 + 368);
  if ((v9 & 0x200000) == 0)
  {
LABEL_58:
    if ((v9 & 0x400000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_127;
  }

    dispatch_once(&qword_101934970, &stru_101840220);
    goto LABEL_123;
  }

  return 0LL;
}

  unsigned int v66 = (double ****)v94;
  int v65 = v95;
  if (a5 <= ((char *)v95 - (_BYTE *)v94) >> 3 && a4 <= 0x63 && ((char *)v86 - (_BYTE *)v85) >> 3 >= a5)
  {
    if ((sub_100857CC8(v100, &v94, &v85, a4 + 1, a5, a6, a7, a8, a9, a10, a11) & 1) != 0)
    {
LABEL_148:
      unsigned int v72 = 1LL;
      goto LABEL_174;
    }

  int v67 = (double ****)v95;
  unsigned int v66 = v96;
  if (a5 <= ((char *)v96 - (_BYTE *)v95) >> 3 && a4 <= 0x63 && ((char *)v87 - (_BYTE *)v86) >> 3 >= a5)
  {
    if ((sub_100857134(v101, (uint64_t **)&v95, (uint64_t **)&v86, a4 + 1, a5, a6, a7, a8, a9, a10, a11) & 1) != 0)
    {
LABEL_148:
      uint64_t v73 = 1LL;
      goto LABEL_174;
    }

      int v80 = *((unsigned __int8 *)v72 + 55);
      if ((v80 & 0x80u) == 0LL) {
        int v81 = *((unsigned __int8 *)v72 + 55);
      }
      else {
        int v81 = v72[5];
      }
      int v82 = *(unsigned __int8 *)(v65 + 23);
      unsigned int v83 = (char)v82;
      if ((v82 & 0x80u) != 0LL) {
        int v82 = *(void *)(v65 + 8);
      }
      if (v81 != v82) {
        goto LABEL_162;
      }
      if (v83 >= 0) {
        int v84 = (unsigned __int8 *)v65;
      }
      else {
        int v84 = *(unsigned __int8 **)v65;
      }
      if ((v80 & 0x80) != 0)
      {
      }

      else if (*((_BYTE *)v72 + 55))
      {
        int v85 = (unsigned __int8 *)(v72 + 4);
        while (*v85 == *v84)
        {
          ++v85;
          ++v84;
          if (!--v80) {
            goto LABEL_141;
          }
        }

        goto LABEL_162;
      }

  uint64_t v15 = *(void *)(a2 + 32);
  v5 |= 8uLL;
  *unsigned int v2 = v5;
  *(_BYTE *)(a1 + 324) = v6;
  *(void *)(a1 + 32) = v15;
  int v7 = *v3;
  if ((*v3 & 0x10) == 0)
  {
LABEL_60:
    if ((v7 & 0x1000000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_127;
  }

  PB::TextFormatter::format(this, "lgDeltaVXYZBiggestImpact", *(float *)(a1 + 268));
  int v6 = *v5;
  int v7 = *(_BYTE *)(a1 + 324);
  if ((*v5 & 0x200000000000000LL) == 0)
  {
LABEL_59:
    if ((v6 & 0x400000000000000LL) == 0) {
      goto LABEL_60;
    }
    goto LABEL_127;
  }

  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 32), 0x37u);
  int v6 = *v4;
  if ((*v4 & 0x10) == 0)
  {
LABEL_60:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_127;
  }

  uint64_t result = *(float *)(a2 + 60);
  v5 |= 0x1000uLL;
  *unsigned int v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 60) = result;
  uint64_t v4 = *v3;
  int v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x2000000) == 0)
  {
LABEL_52:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_127;
  }

  PB::TextFormatter::format(this, "kRegimeNormThresholdROWOASB", *(float *)(a1 + 160));
  int v6 = *v5;
  int v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x4000000000LL) == 0)
  {
LABEL_51:
    if ((v7 & 0x200) == 0) {
      goto LABEL_52;
    }
    goto LABEL_127;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 132), 0x2Eu);
  uint64_t v5 = *v4;
  int v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x800000000LL) == 0)
  {
LABEL_51:
    if ((v5 & 0x2000000000LL) == 0) {
      goto LABEL_52;
    }
    goto LABEL_127;
  }

  uint64_t result = *(float *)(a2 + 300);
  uint64_t v8 = v6 >> 16;
  v6 |= 0x100uLL;
  *unsigned int v2 = v5;
  *(_BYTE *)(a1 + 326) = v8;
  *(_WORD *)(a1 + 324) = v6;
  *(float *)(a1 + 300) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x1000) == 0)
  {
LABEL_45:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_127;
  }

  PB::TextFormatter::format(this, "kRegimeDeltaVThreshold2ROWOA", *(float *)(a1 + 140));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  int v6 = *v5;
  if ((*v5 & 0x200000000LL) == 0)
  {
LABEL_44:
    if ((v6 & 0x400000000LL) == 0) {
      goto LABEL_45;
    }
    goto LABEL_127;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 300), 0xEBu);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x1000) == 0)
  {
LABEL_45:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_127;
  }

  uint64_t v15 = *(_DWORD *)(a2 + 212);
  v5 |= 0x80000000000uLL;
  *unsigned int v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 212) = v15;
  uint64_t v4 = *v3;
  int v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x20000000000LL) == 0)
  {
LABEL_20:
    if ((v4 & 0x4000000000000LL) == 0) {
      goto LABEL_21;
    }
    goto LABEL_127;
  }

  PB::TextFormatter::format(this, "isDescalationRequired", *(_BYTE *)(a1 + 323));
  int v7 = *v5;
  int v6 = *(void *)(a1 + 364);
  if ((v6 & 0x2000) == 0)
  {
LABEL_24:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_127;
  }

  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 212), 0xFu);
  uint64_t v5 = *v4;
  int v6 = v4[1];
  if ((*v4 & 0x20000000000LL) == 0)
  {
LABEL_20:
    if ((v5 & 0x4000000000000LL) == 0) {
      goto LABEL_21;
    }
    goto LABEL_127;
  }

  char v54 = *(_BYTE *)(a2 + 194);
  unint64_t v55 = v4 >> 16;
  v4 |= 0x80uLL;
  *(void *)(result + 204) = v3;
  *(_BYTE *)(result + 214) = v55;
  *(_WORD *)(result + 212) = v4;
  *(_BYTE *)(result + 194) = v54;
  uint64_t v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  unsigned int v2 = *(void *)(a2 + 204);
  if ((v2 & 0x80000000000000LL) == 0)
  {
LABEL_47:
    if ((v2 & 0x800000000000000LL) == 0) {
      goto LABEL_48;
    }
    goto LABEL_127;
  }

  PB::TextFormatter::format(this, "kMaxEnergyRO2", *(float *)(a1 + 72));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x2000) == 0)
  {
LABEL_46:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_127;
  }

  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 24), 0x44Fu);
  uint64_t v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_47:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_127;
  }

            PB::Reader::recallMark(this, v122);
          }

          else
          {
            int v88 = *(char **)(a1 + 64);
            unsigned int v87 = *(void *)(a1 + 72);
            if ((unint64_t)v88 >= v87)
            {
              uint64_t v105 = (char *)*v10;
              uint64_t v106 = (v88 - (_BYTE *)*v10) >> 3;
              int v107 = v106 + 1;
              if ((unint64_t)(v106 + 1) >> 61) {
LABEL_192:
              }
                sub_100007008();
              int v108 = v87 - (void)v105;
              if (v108 >> 2 > v107) {
                int v107 = v108 >> 2;
              }
              else {
                int v109 = v107;
              }
              if (v109)
              {
                unsigned int v110 = (char *)sub_1000071BC(v121, v109);
                uint64_t v105 = *(char **)(a1 + 56);
                int v88 = *(char **)(a1 + 64);
              }

              else
              {
                unsigned int v110 = 0LL;
              }

              uint64_t v115 = &v110[8 * v106];
              *(void *)uint64_t v115 = 0LL;
              int v84 = v115 + 8;
              while (v88 != v105)
              {
                uint64_t v116 = *((void *)v88 - 1);
                v88 -= 8;
                *((void *)v115 - 1) = v116;
                v115 -= 8;
              }

              *(void *)(a1 + 56) = v115;
              *(void *)(a1 + 64) = v84;
              *(void *)(a1 + 72) = &v110[8 * v109];
              if (v105) {
                operator delete(v105);
              }
            }

            else
            {
              *(void *)int v88 = 0LL;
              int v84 = v88 + 8;
            }

            *(void *)(a1 + 64) = v84;
LABEL_175:
            uint64_t v117 = *((void *)this + 1);
            if (v117 <= 0xFFFFFFFFFFFFFFF7LL && v117 + 8 <= *((void *)this + 2))
            {
              *(v84 - 1) = *(void *)(*(void *)this + v117);
LABEL_179:
              *((void *)this + 1) += 8LL;
            }

            else
            {
LABEL_177:
              *((_BYTE *)this + 24) = 1;
            }
          }

            PB::Reader::recallMark(this, v132);
          }

          else
          {
            int v93 = *(char **)(a1 + 64);
            int v92 = *(void *)(a1 + 72);
            if ((unint64_t)v93 >= v92)
            {
              int v112 = (char *)*v10;
              uint64_t v113 = (v93 - (_BYTE *)*v10) >> 2;
              uint64_t v114 = v113 + 1;
              if ((unint64_t)(v113 + 1) >> 62) {
LABEL_210:
              }
                sub_100007008();
              uint64_t v115 = v92 - (void)v112;
              if (v115 >> 1 > v114) {
                uint64_t v114 = v115 >> 1;
              }
              else {
                uint64_t v116 = v114;
              }
              if (v116)
              {
                uint64_t v117 = (char *)sub_10000956C(v131, v116);
                int v112 = *(char **)(a1 + 56);
                int v93 = *(char **)(a1 + 64);
              }

              else
              {
                uint64_t v117 = 0LL;
              }

              unsigned int v124 = &v117[4 * v113];
              *(_DWORD *)unsigned int v124 = 0;
              unsigned int v87 = v124 + 4;
              while (v93 != v112)
              {
                uint64_t v125 = *((_DWORD *)v93 - 1);
                v93 -= 4;
                *((_DWORD *)v124 - 1) = v125;
                v124 -= 4;
              }

              *(void *)(a1 + 56) = v124;
              *(void *)(a1 + 64) = v87;
              *(void *)(a1 + 72) = &v117[4 * v116];
              if (v112) {
                operator delete(v112);
              }
            }

            else
            {
              *(_DWORD *)int v93 = 0;
              unsigned int v87 = v93 + 4;
            }

            *(void *)(a1 + 64) = v87;
LABEL_194:
            uint64_t v126 = *((void *)this + 1);
            if (v126 <= 0xFFFFFFFFFFFFFFFBLL && v126 + 4 <= *((void *)this + 2))
            {
              *(v87 - 1) = *(_DWORD *)(*(void *)this + v126);
              int v28 = *((void *)this + 1) + 4LL;
LABEL_198:
              *((void *)this + 1) = v28;
            }

            else
            {
LABEL_196:
              *((_BYTE *)this + 24) = 1;
            }
          }

LABEL_126:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x36,  *(_DWORD *)(v5 + 348),  (int)a2,  a4);
  int v9 = *(_DWORD *)(v5 + 368);
  if ((v9 & 0x400000) == 0)
  {
LABEL_59:
    if ((v9 & 0x800000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_128;
  }

    uint64_t v47 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 128);
    if (v47 >= 0x80)
    {
      unint64_t v48 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v47, a2) + 2;
      uint64_t v3 = *(_DWORD *)(a1 + 148);
    }

    else
    {
      unint64_t v48 = 3;
    }

    uint64_t v5 = (v48 + v5);
    if ((v3 & 0x400000) == 0)
    {
LABEL_104:
      if ((v3 & 0x800000) == 0) {
        goto LABEL_142;
      }
LABEL_136:
      uint64_t v51 = *(void *)(a1 + 136);
      if (!v51) {
        uint64_t v51 = *(void *)(qword_1019A0CF0 + 136);
      }
      uint64_t v52 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001F27C8(v51);
      char v54 = (int)v52;
      else {
        unint64_t v55 = 1;
      }
      uint64_t v5 = (v5 + v54 + v55 + 2);
      goto LABEL_142;
    }

  *(float *)&int v6 = self->_onsetCatherine;
  objc_msgSend( v3,  "setObject:forKey:",  +[NSNumber numberWithFloat:](NSNumber, "numberWithFloat:", v6),  @"onsetCatherine");
  has = self->_has;
  if ((*(_DWORD *)&has & 0x200000) != 0) {
    goto LABEL_127;
  }
LABEL_101:
  if ((*(_DWORD *)&has & 0x80000) != 0)
  {
LABEL_102:
    *(float *)&int v6 = self->_persistedMinHR;
    objc_msgSend( v3,  "setObject:forKey:",  +[NSNumber numberWithFloat:](NSNumber, "numberWithFloat:", v6),  @"persistedMinHR");
  }

  return v3;
}

    if (sub_10054038C("Monitor", &v150))
    {
      unint64_t v45 = a3[1];
      v147[0] = *a3;
      v147[1] = v45;
      if (v45)
      {
        unint64_t v46 = (unint64_t *)((char *)v45 + 8);
        do
          uint64_t v47 = __ldxr(v46);
        while (__stxr(v47 + 1, v46));
      }

      sub_100540EA0(a1, a2, v147);
      unint64_t v48 = (uint64_t *)v147;
LABEL_186:
      sub_10000AE14((uint64_t)v48);
      goto LABEL_187;
    }

    if (sub_10054038C("MotionActivityLite", &v150))
    {
      unint64_t v55 = (uint64_t)a3[1];
      v146[0] = (uint64_t)*a3;
      v146[1] = v55;
      if (v55)
      {
        uint64_t v56 = (unint64_t *)(v55 + 8);
        do
          unsigned int v57 = __ldxr(v56);
        while (__stxr(v57 + 1, v56));
      }

      sub_1005411D4(a1, a2, v146);
      unint64_t v48 = v146;
      goto LABEL_186;
    }

    if (sub_10054038C("InUseAssertion", &v150))
    {
      int v58 = (uint64_t)a3[1];
      v145[0] = (uint64_t)*a3;
      v145[1] = v58;
      if (v58)
      {
        unsigned int v59 = (unint64_t *)(v58 + 8);
        do
          unsigned int v60 = __ldxr(v59);
        while (__stxr(v60 + 1, v59));
      }

      sub_100541510(a1, a2, v145);
      unint64_t v48 = v145;
      goto LABEL_186;
    }

    if (sub_10054038C("LocationIndependenceAssertion", &v150))
    {
      int v65 = (uint64_t)a3[1];
      v144[0] = (uint64_t)*a3;
      v144[1] = v65;
      if (v65)
      {
        unsigned int v66 = (unint64_t *)(v65 + 8);
        do
          int v67 = __ldxr(v66);
        while (__stxr(v67 + 1, v66));
      }

      sub_10054184C(a1, a2, v144);
      unint64_t v48 = v144;
      goto LABEL_186;
    }

    if (sub_10054038C("kCLConnectionMessageBBTimeFreqTransferAssert", &v150))
    {
      BOOL v68 = (uint64_t)a3[1];
      v143[0] = (uint64_t)*a3;
      v143[1] = v68;
      if (v68)
      {
        int v69 = (unint64_t *)(v68 + 8);
        do
          uint64_t v70 = __ldxr(v69);
        while (__stxr(v70 + 1, v69));
      }

      sub_100541B88(a1, a2, v143);
      unint64_t v48 = v143;
      goto LABEL_186;
    }

    if (sub_10054038C("kCLConnectionMessageGnssDisablementAssertReq", &v150))
    {
      uint64_t v71 = (uint64_t)a3[1];
      v142[0] = (uint64_t)*a3;
      v142[1] = v71;
      if (v71)
      {
        unsigned int v72 = (unint64_t *)(v71 + 8);
        do
          uint64_t v73 = __ldxr(v72);
        while (__stxr(v73 + 1, v72));
      }

      sub_100541EC4(a1, a2, v142);
      unint64_t v48 = v142;
      goto LABEL_186;
    }

    if (sub_10054038C("kCLConnectionMessageBBGnssStatusQuery", &v150))
    {
      unsigned int v74 = (uint64_t)a3[1];
      v141[0] = (uint64_t)*a3;
      v141[1] = v74;
      if (v74)
      {
        char v75 = (unint64_t *)(v74 + 8);
        do
          unsigned int v76 = __ldxr(v75);
        while (__stxr(v76 + 1, v75));
      }

      sub_100542200(a1, a2, v141);
      unint64_t v48 = v141;
      goto LABEL_186;
    }

    if (sub_10054038C("EmergencyEnablementAssertion", &v150))
    {
      char v77 = (uint64_t)a3[1];
      v140[0] = (uint64_t)*a3;
      v140[1] = v77;
      if (v77)
      {
        int v78 = (unint64_t *)(v77 + 8);
        do
          int v79 = __ldxr(v78);
        while (__stxr(v79 + 1, v78));
      }

      sub_10054253C(a1, a2, v140);
      unint64_t v48 = v140;
      goto LABEL_186;
    }

    if (sub_10054038C("kCLConnectionMessageGnssExtensionsClient", &v150))
    {
      int v80 = (uint64_t)a3[1];
      v139[0] = (uint64_t)*a3;
      v139[1] = v80;
      if (v80)
      {
        int v81 = (unint64_t *)(v80 + 8);
        do
          int v82 = __ldxr(v81);
        while (__stxr(v82 + 1, v81));
      }

      sub_100542878(a1, a2, v139);
      unint64_t v48 = v139;
      goto LABEL_186;
    }

    if (sub_10054038C("LaunchdManagedClients", &v150))
    {
      Dictionary = (void *)CLConnectionMessage::getDictionary(*a3);
      int v84 = [Dictionary objectForKeyedSubscript:@"UUID"];
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_1018401A0);
      }
      int v85 = (os_log_s *)qword_101934988;
      if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
      {
        unsigned int v86 = [v84 UTF8String];
        *(_DWORD *)buf = 68289282;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&buf[8] = 2082;
        *(void *)&buf[10] = "";
        *(_WORD *)&buf[18] = 2082;
        *(void *)&buf[20] = v86;
        _os_log_impl( (void *)&_mh_execute_header,  v85,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:UserEventAgent reached out to locationd with registration message., UUID:%{public , location:escape_only}s}",  buf,  0x1Cu);
      }

      if (!*(void *)(a1 + 872))
      {
        *(void *)(a1 + 872) = a2;
        if (qword_101934980 != -1) {
          dispatch_once(&qword_101934980, &stru_1018401A0);
        }
        unsigned int v87 = (os_log_s *)qword_101934988;
        if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
        {
          CLConnection::getName(a2);
          int v88 = buf[23] >= 0 ? buf : *(_BYTE **)buf;
          *(_DWORD *)uint64_t v164 = 136446210;
          *(void *)&v164[4] = v88;
          _os_log_impl( (void *)&_mh_execute_header,  v87,  OS_LOG_TYPE_DEFAULT,  "UserEventAgent connected (from %{public}s)",  v164,  0xCu);
          if ((buf[23] & 0x80000000) != 0) {
            operator delete(*(void **)buf);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934980 != -1) {
            dispatch_once(&qword_101934980, &stru_1018401A0);
          }
          int v128 = qword_101934988;
          CLConnection::getName(a2);
          if (v165 >= 0) {
            int v129 = v164;
          }
          else {
            int v129 = *(uint8_t **)v164;
          }
          *(_DWORD *)uint64_t v162 = 136446210;
          *(void *)&v162[4] = v129;
          int v130 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v128,  0LL,  "UserEventAgent connected (from %{public}s)",  v162,  12);
          if (SHIBYTE(v165) < 0) {
            operator delete(*(void **)v164);
          }
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLClientManager::handleNewConnectionWithFirstMsg(CLConnection *, std::shared_ptr<CLConnectionMessage>)",  "%s\n",  v130);
          if (v130 != buf) {
            free(v130);
          }
        }

        CLConnection::start(*(CLConnection **)(a1 + 872));
        goto LABEL_187;
      }

      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_1018401A0);
      }
      int v109 = (os_log_s *)qword_101934988;
      if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_FAULT))
      {
        unsigned int v110 = v164;
        CLConnection::getName(*(CLConnection **)(a1 + 872));
        if (v165 < 0) {
          unsigned int v110 = *(uint8_t **)v164;
        }
        CLConnection::getName(a2);
        int v111 = v163;
        int v112 = *(_BYTE **)v162;
        RemotePid = CLConnection::getRemotePid(a2);
        uint64_t v114 = v162;
        *(_DWORD *)buf = 68290563;
        if (v111 < 0) {
          uint64_t v114 = v112;
        }
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&buf[8] = 2082;
        *(void *)&buf[10] = "";
        *(_WORD *)&buf[18] = 2082;
        *(void *)&buf[20] = v110;
        *(_WORD *)&buf[28] = 2082;
        *(void *)&buf[30] = v114;
        int v154 = 2114;
        int v155 = Dictionary;
        int v156 = 1026;
        unsigned int v157 = RemotePid;
        int v158 = 2082;
        int v159 = "assert";
        int v160 = 2081;
        unsigned int v161 = "!fUserEventAgentConnection";
        _os_log_impl( (void *)&_mh_execute_header,  v109,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Connection to User Event Agent already exists., ExistingConnection:%{public, loca tion:escape_only}s, IncomingConnection:%{public, location:escape_only}s, Payload:%{public, location:es cape_only}@, PID:%{public}d, event:%{public, location:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x4Au);
        if (v163 < 0) {
          operator delete(*(void **)v162);
        }
        if (SHIBYTE(v165) < 0) {
          operator delete(*(void **)v164);
        }
        if (qword_101934980 != -1) {
          dispatch_once(&qword_101934980, &stru_1018401A0);
        }
      }

      uint64_t v115 = (os_log_s *)qword_101934988;
      if (os_signpost_enabled((os_log_t)qword_101934988))
      {
        uint64_t v116 = v164;
        CLConnection::getName(*(CLConnection **)(a1 + 872));
        if (v165 < 0) {
          uint64_t v116 = *(uint8_t **)v164;
        }
        CLConnection::getName(a2);
        uint64_t v117 = v163;
        uint64_t v118 = *(_BYTE **)v162;
        uint64_t v119 = CLConnection::getRemotePid(a2);
        unsigned int v120 = v162;
        *(_DWORD *)buf = 68290563;
        if (v117 < 0) {
          unsigned int v120 = v118;
        }
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&buf[8] = 2082;
        *(void *)&buf[10] = "";
        *(_WORD *)&buf[18] = 2082;
        *(void *)&buf[20] = v116;
        *(_WORD *)&buf[28] = 2082;
        *(void *)&buf[30] = v120;
        int v154 = 2114;
        int v155 = Dictionary;
        int v156 = 1026;
        unsigned int v157 = v119;
        int v158 = 2082;
        int v159 = "assert";
        int v160 = 2081;
        unsigned int v161 = "!fUserEventAgentConnection";
        _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v115,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Connection to User Event Agent already exists.",  "{msg%{public}.0s:Connection to User Event Agent already exists., ExistingConnection:%{public, loca tion:escape_only}s, IncomingConnection:%{public, location:escape_only}s, Payload:%{public, location:es cape_only}@, PID:%{public}d, event:%{public, location:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x4Au);
        if (v163 < 0) {
          operator delete(*(void **)v162);
        }
        if (SHIBYTE(v165) < 0) {
          operator delete(*(void **)v164);
        }
        if (qword_101934980 != -1) {
          dispatch_once(&qword_101934980, &stru_1018401A0);
        }
      }

      uint64_t v121 = (os_log_s *)qword_101934988;
      if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_INFO))
      {
        uint64_t v122 = *(CLConnection **)(a1 + 872);
        uint64_t v123 = v164;
        CLConnection::getName(v122);
        if (v165 < 0) {
          uint64_t v123 = *(uint8_t **)v164;
        }
        CLConnection::getName(a2);
        unsigned int v124 = v163;
        uint64_t v125 = *(_BYTE **)v162;
        uint64_t v126 = CLConnection::getRemotePid(a2);
        uint64_t v127 = v162;
        *(_DWORD *)buf = 68290563;
        if (v124 < 0) {
          uint64_t v127 = v125;
        }
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&buf[8] = 2082;
        *(void *)&buf[10] = "";
        *(_WORD *)&buf[18] = 2082;
        *(void *)&buf[20] = v123;
        *(_WORD *)&buf[28] = 2082;
        *(void *)&buf[30] = v127;
        int v154 = 2114;
        int v155 = Dictionary;
        int v156 = 1026;
        unsigned int v157 = v126;
        int v158 = 2082;
        int v159 = "assert";
        int v160 = 2081;
        unsigned int v161 = "!fUserEventAgentConnection";
        _os_log_impl( (void *)&_mh_execute_header,  v121,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Connection to User Event Agent already exists., ExistingConnection:%{public, loca tion:escape_only}s, IncomingConnection:%{public, location:escape_only}s, Payload:%{public, location:es cape_only}@, PID:%{public}d, event:%{public, location:escape_only}s, condition:%{private, location:escape_only}s}",  buf,  0x4Au);
        if (v163 < 0) {
          operator delete(*(void **)v162);
        }
        if (SHIBYTE(v165) < 0) {
          operator delete(*(void **)v164);
        }
      }

      abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Core/ClientManagement/CLClientManager_Unified.mm",  868,  "handleNewConnectionWithFirstMsg");
    }

    else
    {
      if (sub_10054038C("Health", &v150))
      {
        int v89 = (uint64_t)a3[1];
        v138[0] = (uint64_t)*a3;
        v138[1] = v89;
        if (v89)
        {
          int v90 = (unint64_t *)(v89 + 8);
          do
            unsigned int v91 = __ldxr(v90);
          while (__stxr(v91 + 1, v90));
        }

        sub_100542BB4(a1, a2, v138);
        unint64_t v48 = v138;
        goto LABEL_186;
      }

      if (sub_10054038C("SpringTracking", &v150))
      {
        int v92 = (uint64_t)a3[1];
        v137[0] = (uint64_t)*a3;
        v137[1] = v92;
        if (v92)
        {
          int v93 = (unint64_t *)(v92 + 8);
          do
            int v94 = __ldxr(v93);
          while (__stxr(v94 + 1, v93));
        }

        sub_100542EF0(a1, a2, v137);
        unint64_t v48 = v137;
        goto LABEL_186;
      }

      if (sub_10054038C("DistributedSensing", &v150))
      {
        unsigned int v95 = (uint64_t)a3[1];
        v136[0] = (uint64_t)*a3;
        v136[1] = v95;
        if (v95)
        {
          int v96 = (unint64_t *)(v95 + 8);
          do
            int v97 = __ldxr(v96);
          while (__stxr(v97 + 1, v96));
        }

        sub_10054322C(a1, a2, v136);
        unint64_t v48 = v136;
        goto LABEL_186;
      }

      if (!sub_10054038C("CoreLocationAgent", &v150))
      {
        if (sub_10054038C("PedestrianFence", &v150))
        {
          uint64_t v98 = (uint64_t)a3[1];
          v132[0] = (uint64_t)*a3;
          v132[1] = v98;
          if (v98)
          {
            uint64_t v99 = (unint64_t *)(v98 + 8);
            do
              uint64_t v100 = __ldxr(v99);
            while (__stxr(v100 + 1, v99));
          }

          sub_100543BC8(a1, a2, v132);
          unint64_t v48 = v132;
        }

        else
        {
          unsigned int v101 = a3[1];
          v131[0] = *a3;
          v131[1] = v101;
          if (v101)
          {
            uint64_t v102 = (unint64_t *)((char *)v101 + 8);
            do
              unsigned int v103 = __ldxr(v102);
            while (__stxr(v103 + 1, v102));
          }

          sub_100543F04(a1, (uint64_t)a2, (uint64_t)v131);
          unint64_t v48 = v131;
        }

        goto LABEL_186;
      }

      CLConnection::getUserName(a2);
      if (a1 + 808 == sub_10008E8D0(a1 + 800, (const void **)v164))
      {
        v133[0] = _NSConcreteStackBlock;
        v133[1] = 3321888768LL;
        v133[2] = sub_100543568;
        v133[3] = &unk_10183F8D0;
        v133[4] = a1;
        if (SHIBYTE(v165) < 0)
        {
          sub_1010DD48C(&v134, *(void **)v164, *(unint64_t *)&v164[8]);
        }

        else
        {
          int v134 = *(_OWORD *)v164;
          int v135 = v165;
        }

        CLConnection::setDefaultMessageHandler(a2, v133);
        if (SHIBYTE(v165) < 0)
        {
          sub_1010DD48C(buf, *(void **)v164, *(unint64_t *)&v164[8]);
        }

        else
        {
          *(_OWORD *)buf = *(_OWORD *)v164;
          *(void *)&buf[16] = v165;
        }

        *(void *)&buf[24] = a2;
        sub_1005880F8((uint64_t **)(a1 + 800), (const void **)buf, (uint64_t)buf);
        if ((buf[23] & 0x80000000) != 0) {
          operator delete(*(void **)buf);
        }
        CLConnection::start(a2);
        if (qword_101934980 == -1) {
          goto LABEL_243;
        }
        goto LABEL_300;
      }

      sub_10123CC34();
      abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Core/ClientManagement/CLClientManager_Unified.mm",  902,  "handleNewConnectionWithFirstMsg");
    }

    __break(1u);
LABEL_300:
    dispatch_once(&qword_101934980, &stru_1018401A0);
LABEL_243:
    uint64_t v104 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v105 = SHIBYTE(v165);
      uint64_t v106 = *(uint8_t **)v164;
      CLConnection::getName(a2);
      int v107 = v164;
      if (v105 < 0) {
        int v107 = v106;
      }
      if (v163 >= 0) {
        int v108 = v162;
      }
      else {
        int v108 = *(_BYTE **)v162;
      }
      *(_DWORD *)buf = 68289538;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&buf[18] = 2082;
      *(void *)&buf[20] = v107;
      *(_WORD *)&buf[28] = 2082;
      *(void *)&buf[30] = v108;
      _os_log_impl( (void *)&_mh_execute_header,  v104,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#CoreLocationAgent connected, User:%{public, location:escape_only}s, Connection :%{public, location:escape_only}s}",  buf,  0x26u);
      if (v163 < 0) {
        operator delete(*(void **)v162);
      }
    }

    if (SHIBYTE(v135) < 0) {
      operator delete((void *)v134);
    }
    if (SHIBYTE(v165) < 0) {
      operator delete(*(void **)v164);
    }
    goto LABEL_187;
  }

                                                    int v39 = (unsigned __int8 *)*((void *)this + 1);
                                                    unint64_t v22 = *((void *)this + 2);
                                                    unint64_t v40 = *v39;
                                                    if (v40 == 125)
                                                    {
                                                      do
                                                      {
                                                        *((void *)this + 1) = v39 + 1;
LABEL_326:
                                                        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback( this,  v224) & 1) == 0) {
                                                          return 0LL;
                                                        }
                                                        uint64_t v141 = v224[0];
                                                        uint64_t v142 = *(_DWORD *)(a1 + 200);
                                                        if (v142 == *(_DWORD *)(a1 + 204))
                                                        {
                                                          sub_10004AAFC(v222, v142 + 1);
                                                          uint64_t v142 = *(_DWORD *)(a1 + 200);
                                                        }

                                                        unsigned int v143 = *(void *)(a1 + 192);
                                                        v144 = v142 + 1;
                                                        *(_DWORD *)(a1 + 200) = v142 + 1;
                                                        *(_DWORD *)(v143 + 4LL * v142) = v141;
                                                        v145 = *((void *)this + 1);
                                                        uint64_t v146 = *((_DWORD *)this + 4) - v145;
                                                        if (v146 >= 1)
                                                        {
                                                          uint64_t v147 = v146 / 5u;
                                                          int v148 = v147 >= *(_DWORD *)(a1 + 204) - v144
                                                               ? *(_DWORD *)(a1 + 204) - v144
                                                               : v147;
                                                          if (v148 >= 1)
                                                          {
                                                            uint64_t v149 = 0;
                                                            while (*(_BYTE *)v145 == 125)
                                                            {
                                                              uint64_t v150 = *(_DWORD *)(v145 + 1);
                                                              if (v144 >= *(_DWORD *)(a1 + 204))
                                                              {
                                                                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v224,  3LL,  "/AppleInternal/Library/BuildRoots/9fd3fc02-a7db-11ef-9 8ff-a6e88e557b55/Applications/Xcode.app/Contents/Devel oper/Platforms/AppleTVOS.platform/Developer/SDKs/Apple TVOS18.2.Internal.sdk/usr/local/include/google/protobu f/repeated_field.h",  602LL);
                                                                uint64_t v151 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v224,  "CHECK failed: (size()) < (Capacity()): ");
                                                                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=( &v223,  v151);
                                                                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v224);
                                                                v144 = *(_DWORD *)(a1 + 200);
                                                                unsigned int v143 = *(void *)(a1 + 192);
                                                              }

                                                              *(_DWORD *)(a1 + 200) = v144 + 1;
                                                              *(_DWORD *)(v143 + 4LL * v144) = v150;
                                                              ++v149;
                                                              v145 += 5LL;
                                                              ++v144;
                                                              if (v148 == v149)
                                                              {
                                                                uint64_t v149 = v148;
                                                                break;
                                                              }
                                                            }

                                                            if (v149) {
                                                              wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip( this,  5 * v149);
                                                            }
                                                          }
                                                        }

  *(_DWORD *)(a1 + 396) |= 0x100000u;
  unint64_t v45 = *(void **)(a1 + 160);
  if (!v45)
  {
    unint64_t v45 = operator new(0x18uLL);
    v45[1] = 0LL;
    v45[2] = 0LL;
    _BYTE *v45 = off_1018757F8;
    *(void *)(a1 + 160) = v45;
  }

  unint64_t v46 = *(void *)(a2 + 160);
  if (!v46) {
    unint64_t v46 = *(void *)(qword_1019A1D38 + 160);
  }
  sub_100BB989C((uint64_t)v45, v46);
  int v7 = *(_DWORD *)(a2 + 396);
  if ((v7 & 0x200000) == 0)
  {
LABEL_103:
    if ((v7 & 0x400000) == 0) {
      goto LABEL_104;
    }
    goto LABEL_136;
  }

  unint64_t v16 = *(void *)(a2 + 40);
  v5 |= 0x10uLL;
  *unsigned int v2 = v5;
  *(_BYTE *)(a1 + 324) = v6;
  *(void *)(a1 + 40) = v16;
  int v7 = *v3;
  if ((*v3 & 0x1000000) == 0)
  {
LABEL_61:
    if ((v7 & 0x2000000000000000LL) == 0) {
      goto LABEL_62;
    }
    goto LABEL_128;
  }

  PB::TextFormatter::format(this, "lgDeltaVXYZOverEpoch", *(float *)(a1 + 272));
  int v6 = *v5;
  int v7 = *(_BYTE *)(a1 + 324);
  if ((*v5 & 0x400000000000000LL) == 0)
  {
LABEL_60:
    if ((v6 & 0x800000000000000LL) == 0) {
      goto LABEL_61;
    }
    goto LABEL_128;
  }

  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 40), 0x38u);
  int v6 = *v4;
  if ((*v4 & 0x1000000) == 0)
  {
LABEL_61:
    if ((v6 & 0x2000000000000000LL) == 0) {
      goto LABEL_62;
    }
    goto LABEL_128;
  }

  uint64_t result = *(float *)(a2 + 112);
  v5 |= 0x2000000uLL;
  *unsigned int v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 112) = result;
  uint64_t v4 = *v3;
  int v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x40000000) == 0)
  {
LABEL_53:
    if ((v4 & 0x800000000LL) == 0) {
      goto LABEL_54;
    }
    goto LABEL_128;
  }

  PB::TextFormatter::format(this, "kRegimeNormThresholdROWOASF", *(float *)(a1 + 164));
  int v6 = *v5;
  int v7 = *(_WORD *)(a1 + 288);
  if ((v7 & 0x200) == 0)
  {
LABEL_52:
    if ((v6 & 0x8000000000LL) == 0) {
      goto LABEL_53;
    }
    goto LABEL_128;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 152), 0x2Fu);
  uint64_t v5 = *v4;
  int v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x2000000000LL) == 0)
  {
LABEL_52:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_128;
  }

  uint64_t result = *(float *)(a2 + 60);
  v5 |= 0x1000uLL;
  *unsigned int v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(_BYTE *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 60) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x10000) == 0)
  {
LABEL_46:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_128;
  }

  PB::TextFormatter::format(this, "kRegimeDvThreshold1ROWOASB", *(float *)(a1 + 144));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  int v6 = *v5;
  if ((*v5 & 0x400000000LL) == 0)
  {
LABEL_45:
    if ((v6 & 0x800000000LL) == 0) {
      goto LABEL_46;
    }
    goto LABEL_128;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 60), 0xECu);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x10000) == 0)
  {
LABEL_46:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_128;
  }

  unint64_t v16 = *(_DWORD *)(a2 + 204);
  v5 |= 0x20000000000uLL;
  *unsigned int v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 204) = v16;
  uint64_t v4 = *v3;
  int v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x4000000000000LL) == 0)
  {
LABEL_21:
    if ((v4 & 0x1000000000000000LL) == 0) {
      goto LABEL_22;
    }
    goto LABEL_128;
  }

  PB::TextFormatter::format(this, "isEvaluatingMovingGps", *(_BYTE *)(a1 + 324));
  int v7 = *v5;
  int v6 = *(void *)(a1 + 364);
  if ((v6 & 0x4000) == 0)
  {
LABEL_25:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_128;
  }

  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 204), 0x10u);
  uint64_t v5 = *v4;
  int v6 = v4[1];
  if ((*v4 & 0x4000000000000LL) == 0)
  {
LABEL_21:
    if ((v5 & 0x1000000000000000LL) == 0) {
      goto LABEL_22;
    }
    goto LABEL_128;
  }

  uint64_t v56 = *(_BYTE *)(a2 + 178);
  v3 |= 0x80000000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(_BYTE *)(result + 214) = BYTE2(v4);
  *(_BYTE *)(result + 178) = v56;
  uint64_t v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  unsigned int v2 = *(void *)(a2 + 204);
  if ((v2 & 0x800000000000000LL) == 0)
  {
LABEL_48:
    if ((v5 & 8) == 0) {
      goto LABEL_49;
    }
    goto LABEL_128;
  }

  PB::TextFormatter::format(this, "kMaxSaturationRO", *(float *)(a1 + 76));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x4000) == 0)
  {
LABEL_47:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_128;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 132), 0x450u);
  uint64_t v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x800000) == 0)
  {
LABEL_48:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_128;
  }

              *(_DWORD *)(a1 + 60) = v24;
              goto LABEL_152;
            case 2u:
              *(_WORD *)(a1 + 64) |= 0x10u;
              unint64_t v27 = *((void *)this + 1);
              unsigned int v2 = *((void *)this + 2);
              int v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5LL || v27 + 10 > v2)
              {
                char v61 = 0;
                unsigned int v62 = 0;
                uint64_t v31 = 0LL;
                if (v2 <= v27) {
                  unsigned int v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((_BYTE *)this + 24) = 1;
                    goto LABEL_131;
                  }

                  int v63 = v27++;
                  int v64 = *(_BYTE *)(v28 + v63);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v64 & 0x7F) << v61;
                  if ((v64 & 0x80) == 0) {
                    break;
                  }
                  v61 += 7;
                  uint64_t v14 = v62++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_130:
                    unsigned int v2 = v63 + 1;
                    goto LABEL_131;
                  }
                }

                if (*((_BYTE *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_130;
              }

              int v29 = 0;
              unint64_t v30 = 0;
              uint64_t v31 = 0LL;
              do
              {
                unsigned int v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                unint64_t v32 = *(_BYTE *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_131;
                }
                v29 += 7;
                unint64_t v27 = v2;
                uint64_t v14 = v30++ > 8;
              }

              while (!v14);
              LODWORD(v31) = 0;
LABEL_131:
              *(_DWORD *)(a1 + 40) = v31;
              goto LABEL_152;
            case 3u:
              *(_WORD *)(a1 + 64) |= 2u;
              unsigned int v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7LL || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_70;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_121;
            case 4u:
              *(_WORD *)(a1 + 64) |= 8u;
              unsigned int v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7LL || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_70;
              }
              *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
              goto LABEL_121;
            case 5u:
              *(_WORD *)(a1 + 64) |= 1u;
              unsigned int v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7LL || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_70;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              goto LABEL_121;
            case 6u:
              *(_WORD *)(a1 + 64) |= 0x80u;
              char v33 = *((void *)this + 1);
              unsigned int v2 = *((void *)this + 2);
              int v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5LL || v33 + 10 > v2)
              {
                int v65 = 0;
                unsigned int v66 = 0;
                unint64_t v37 = 0LL;
                if (v2 <= v33) {
                  unsigned int v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    LODWORD(v37) = 0;
                    *((_BYTE *)this + 24) = 1;
                    goto LABEL_136;
                  }

                  int v67 = v33++;
                  BOOL v68 = *(_BYTE *)(v34 + v67);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v68 & 0x7F) << v65;
                  if ((v68 & 0x80) == 0) {
                    break;
                  }
                  v65 += 7;
                  uint64_t v14 = v66++ > 8;
                  if (v14)
                  {
                    LODWORD(v37) = 0;
LABEL_135:
                    unsigned int v2 = v67 + 1;
                    goto LABEL_136;
                  }
                }

                if (*((_BYTE *)this + 24)) {
                  LODWORD(v37) = 0;
                }
                goto LABEL_135;
              }

              unint64_t v35 = 0;
              int v36 = 0;
              unint64_t v37 = 0LL;
              do
              {
                unsigned int v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                int v38 = *(_BYTE *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_136;
                }
                v35 += 7;
                char v33 = v2;
                uint64_t v14 = v36++ > 8;
              }

              while (!v14);
              LODWORD(v37) = 0;
LABEL_136:
              *(_DWORD *)(a1 + 52) = v37;
              goto LABEL_152;
            case 7u:
              *(_WORD *)(a1 + 64) |= 0x100u;
              int v39 = *((void *)this + 1);
              unsigned int v2 = *((void *)this + 2);
              unint64_t v40 = *(void *)this;
              if (v39 > 0xFFFFFFFFFFFFFFF5LL || v39 + 10 > v2)
              {
                int v69 = 0;
                uint64_t v70 = 0;
                unsigned int v43 = 0LL;
                if (v2 <= v39) {
                  unsigned int v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v39)
                  {
                    LODWORD(v43) = 0;
                    *((_BYTE *)this + 24) = 1;
                    goto LABEL_141;
                  }

                  uint64_t v71 = v39++;
                  unsigned int v72 = *(_BYTE *)(v40 + v71);
                  *((void *)this + 1) = v39;
                  v43 |= (unint64_t)(v72 & 0x7F) << v69;
                  if ((v72 & 0x80) == 0) {
                    break;
                  }
                  v69 += 7;
                  uint64_t v14 = v70++ > 8;
                  if (v14)
                  {
                    LODWORD(v43) = 0;
LABEL_140:
                    unsigned int v2 = v71 + 1;
                    goto LABEL_141;
                  }
                }

                if (*((_BYTE *)this + 24)) {
                  LODWORD(v43) = 0;
                }
                goto LABEL_140;
              }

              uint64_t v41 = 0;
              unint64_t v42 = 0;
              unsigned int v43 = 0LL;
              do
              {
                unsigned int v2 = v39 + 1;
                *((void *)this + 1) = v39 + 1;
                uint64_t v44 = *(_BYTE *)(v40 + v39);
                v43 |= (unint64_t)(v44 & 0x7F) << v41;
                if ((v44 & 0x80) == 0) {
                  goto LABEL_141;
                }
                v41 += 7;
                int v39 = v2;
                uint64_t v14 = v42++ > 8;
              }

              while (!v14);
              LODWORD(v43) = 0;
LABEL_141:
              *(_DWORD *)(a1 + 56) = v43;
              goto LABEL_152;
            case 8u:
              *(_WORD *)(a1 + 64) |= 0x40u;
              unint64_t v45 = *((void *)this + 1);
              unsigned int v2 = *((void *)this + 2);
              unint64_t v46 = *(void *)this;
              if (v45 > 0xFFFFFFFFFFFFFFF5LL || v45 + 10 > v2)
              {
                uint64_t v73 = 0;
                unsigned int v74 = 0;
                unsigned int v49 = 0LL;
                if (v2 <= v45) {
                  unsigned int v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v45)
                  {
                    LODWORD(v49) = 0;
                    *((_BYTE *)this + 24) = 1;
                    goto LABEL_146;
                  }

                  char v75 = v45++;
                  unsigned int v76 = *(_BYTE *)(v46 + v75);
                  *((void *)this + 1) = v45;
                  v49 |= (unint64_t)(v76 & 0x7F) << v73;
                  if ((v76 & 0x80) == 0) {
                    break;
                  }
                  v73 += 7;
                  uint64_t v14 = v74++ > 8;
                  if (v14)
                  {
                    LODWORD(v49) = 0;
LABEL_145:
                    unsigned int v2 = v75 + 1;
                    goto LABEL_146;
                  }
                }

                if (*((_BYTE *)this + 24)) {
                  LODWORD(v49) = 0;
                }
                goto LABEL_145;
              }

              uint64_t v47 = 0;
              unint64_t v48 = 0;
              unsigned int v49 = 0LL;
              do
              {
                unsigned int v2 = v45 + 1;
                *((void *)this + 1) = v45 + 1;
                unint64_t v50 = *(_BYTE *)(v46 + v45);
                v49 |= (unint64_t)(v50 & 0x7F) << v47;
                if ((v50 & 0x80) == 0) {
                  goto LABEL_146;
                }
                v47 += 7;
                unint64_t v45 = v2;
                uint64_t v14 = v48++ > 8;
              }

              while (!v14);
              LODWORD(v49) = 0;
LABEL_146:
              *(_DWORD *)(a1 + 48) = v49;
              goto LABEL_152;
            case 9u:
              *(_WORD *)(a1 + 64) |= 4u;
              unsigned int v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7LL && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
LABEL_121:
                unsigned int v2 = *((void *)this + 1) + 8LL;
                *((void *)this + 1) = v2;
              }

              else
              {
LABEL_70:
                *((_BYTE *)this + 24) = 1;
              }

              goto LABEL_152;
            case 0xAu:
              *(_WORD *)(a1 + 64) |= 0x20u;
              uint64_t v51 = *((void *)this + 1);
              unsigned int v2 = *((void *)this + 2);
              uint64_t v52 = *(void *)this;
              if (v51 > 0xFFFFFFFFFFFFFFF5LL || v51 + 10 > v2)
              {
                char v77 = 0;
                int v78 = 0;
                unint64_t v55 = 0LL;
                if (v2 <= v51) {
                  unsigned int v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v51)
                  {
                    LODWORD(v55) = 0;
                    *((_BYTE *)this + 24) = 1;
                    goto LABEL_151;
                  }

                  int v79 = v51++;
                  int v80 = *(_BYTE *)(v52 + v79);
                  *((void *)this + 1) = v51;
                  v55 |= (unint64_t)(v80 & 0x7F) << v77;
                  if ((v80 & 0x80) == 0) {
                    break;
                  }
                  v77 += 7;
                  uint64_t v14 = v78++ > 8;
                  if (v14)
                  {
                    LODWORD(v55) = 0;
LABEL_150:
                    unsigned int v2 = v79 + 1;
                    goto LABEL_151;
                  }
                }

                if (*((_BYTE *)this + 24)) {
                  LODWORD(v55) = 0;
                }
                goto LABEL_150;
              }

              unint64_t v53 = 0;
              char v54 = 0;
              unint64_t v55 = 0LL;
              do
              {
                unsigned int v2 = v51 + 1;
                *((void *)this + 1) = v51 + 1;
                uint64_t v56 = *(_BYTE *)(v52 + v51);
                v55 |= (unint64_t)(v56 & 0x7F) << v53;
                if ((v56 & 0x80) == 0) {
                  goto LABEL_151;
                }
                v53 += 7;
                uint64_t v51 = v2;
                uint64_t v14 = v54++ > 8;
              }

              while (!v14);
              LODWORD(v55) = 0;
LABEL_151:
              *(_DWORD *)(a1 + 44) = v55;
LABEL_152:
              uint64_t v3 = *((void *)this + 2);
              uint64_t v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!(_DWORD)result) {
                return result;
              }
              unsigned int v2 = *((void *)this + 1);
              goto LABEL_152;
          }
        }

        uint64_t v4 = 0;
      }

      break;
    }
  }

  return v4 == 0;
}

uint64_t sub_1001DC634(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 364);
  if ((_BYTE)v3)
  {
    int v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x40) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x80) != 0) {
      int v5 = v4 + 5;
    }
    else {
      int v5 = v4;
    }
  }

  else
  {
    int v5 = 0;
  }

  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0) {
      int v6 = v5 + 2;
    }
    else {
      int v6 = v5;
    }
    if ((v3 & 0x200) != 0)
    {
      int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
      if ((v7 & 0x80000000) != 0)
      {
        int v8 = 10;
      }

      else if (v7 >= 0x80)
      {
        int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
        int v3 = *(_DWORD *)(a1 + 364);
      }

      else
      {
        int v8 = 1;
      }

      v6 += v8 + 1;
    }

    if ((v3 & 0x400) != 0)
    {
      uint64_t v9 = *(void *)(a1 + 64);
      if (!v9) {
        uint64_t v9 = *(void *)(qword_1019A0BA0 + 64);
      }
      int v10 = *(unsigned __int8 *)(v9 + 28);
      int v11 = (v10 << 31 >> 31) & 9;
      if ((v10 & 2) != 0) {
        v11 += 9;
      }
      if (*(_BYTE *)(v9 + 28)) {
        int v12 = v11;
      }
      else {
        int v12 = 0;
      }
      *(_DWORD *)(v9 + 24) = v12;
      v6 += v12 + 2;
      int v3 = *(_DWORD *)(a1 + 364);
    }

    if ((v3 & 0x800) != 0) {
      v6 += 9;
    }
    if ((v3 & 0x1000) != 0)
    {
      uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 80);
      if ((v13 & 0x80000000) != 0)
      {
        int v14 = 10;
      }

      else if (v13 >= 0x80)
      {
        int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
        int v3 = *(_DWORD *)(a1 + 364);
      }

      else
      {
        int v14 = 1;
      }

      v6 += v14 + 1;
    }

    if ((v3 & 0x2000) != 0)
    {
      uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 84);
      if ((v15 & 0x80000000) != 0)
      {
        int v16 = 10;
      }

      else if (v15 >= 0x80)
      {
        int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
        int v3 = *(_DWORD *)(a1 + 364);
      }

      else
      {
        int v16 = 1;
      }

      v6 += v16 + 1;
    }

    if ((v3 & 0x4000) != 0) {
      int v5 = v6 + 2;
    }
    else {
      int v5 = v6;
    }
    if ((v3 & 0x8000) != 0)
    {
      uint64_t v17 = *(void *)(a1 + 88);
      if (!v17) {
        uint64_t v17 = *(void *)(qword_1019A0BA0 + 88);
      }
      int v18 = *(unsigned __int8 *)(v17 + 28);
      int v19 = (v18 << 31 >> 31) & 9;
      if ((v18 & 2) != 0) {
        v19 += 9;
      }
      if (*(_BYTE *)(v17 + 28)) {
        int v20 = v19;
      }
      else {
        int v20 = 0;
      }
      *(_DWORD *)(v17 + 24) = v20;
      v5 += v20 + 3;
      int v3 = *(_DWORD *)(a1 + 364);
    }
  }

  if ((v3 & 0xFF0000) != 0)
  {
    if ((v3 & 0x10000) != 0)
    {
      uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 96);
      if ((v21 & 0x80000000) != 0)
      {
        int v22 = 10;
      }

      else if (v21 >= 0x80)
      {
        int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2);
        int v3 = *(_DWORD *)(a1 + 364);
      }

      else
      {
        int v22 = 1;
      }

      v5 += v22 + 2;
    }

    int v23 = v5 + 6;
    if ((v3 & 0x20000) == 0) {
      int v23 = v5;
    }
    if ((v3 & 0x40000) != 0)
    {
      uint64_t v24 = *(void *)(a1 + 104);
      if (!v24) {
        uint64_t v24 = *(void *)(qword_1019A0BA0 + 104);
      }
      int v25 = *(unsigned __int8 *)(v24 + 28);
      int v26 = (v25 << 31 >> 31) & 9;
      if ((v25 & 2) != 0) {
        v26 += 9;
      }
      if (*(_BYTE *)(v24 + 28)) {
        int v27 = v26;
      }
      else {
        int v27 = 0;
      }
      *(_DWORD *)(v24 + 24) = v27;
      v23 += v27 + 3;
      int v3 = *(_DWORD *)(a1 + 364);
    }

    if ((v3 & 0x80000) != 0) {
      v23 += 10;
    }
    if ((v3 & 0x100000) != 0) {
      int v28 = v23 + 10;
    }
    else {
      int v28 = v23;
    }
    if ((v3 & 0x200000) != 0)
    {
      int v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 116);
      if ((v29 & 0x80000000) != 0)
      {
        int v30 = 10;
      }

      else if (v29 >= 0x80)
      {
        int v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29, a2);
        int v3 = *(_DWORD *)(a1 + 364);
      }

      else
      {
        int v30 = 1;
      }

      v28 += v30 + 2;
    }

    if ((v3 & 0x400000) != 0) {
      int v5 = v28 + 3;
    }
    else {
      int v5 = v28;
    }
    if ((v3 & 0x800000) != 0)
    {
      uint64_t v31 = *(void *)(a1 + 136);
      if (!v31) {
        uint64_t v31 = *(void *)(qword_1019A0BA0 + 136);
      }
      unint64_t v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001D80D0(v31);
      int v33 = (int)v32;
      else {
        int v34 = 1;
      }
      v5 += v33 + v34 + 2;
      int v3 = *(_DWORD *)(a1 + 364);
    }
  }

  if (HIBYTE(v3))
  {
    int v35 = v5 + 10;
    if ((v3 & 0x1000000) == 0) {
      int v35 = v5;
    }
    if ((v3 & 0x2000000) != 0) {
      v35 += 10;
    }
    if ((v3 & 0x4000000) != 0) {
      v35 += 10;
    }
    if ((v3 & 0x8000000) != 0) {
      v35 += 10;
    }
    if ((v3 & 0x10000000) != 0) {
      v35 += 10;
    }
    if ((v3 & 0x20000000) != 0) {
      v35 += 10;
    }
    if ((v3 & 0x40000000) != 0) {
      v35 += 3;
    }
    if (v3 >= 0) {
      int v5 = v35;
    }
    else {
      int v5 = v35 + 10;
    }
  }

  int v36 = *(_DWORD *)(a1 + 368);
  if ((_BYTE)v36)
  {
    int v37 = v5 + 10;
    if ((v36 & 1) == 0) {
      int v37 = v5;
    }
    if ((v36 & 2) != 0) {
      v37 += 3;
    }
    if ((v36 & 4) != 0)
    {
      uint64_t v38 = *(void *)(a1 + 208);
      if (!v38) {
        uint64_t v38 = *(void *)(qword_1019A0BA0 + 208);
      }
      int v39 = *(unsigned __int8 *)(v38 + 28);
      int v40 = (v39 << 31 >> 31) & 9;
      if ((v39 & 2) != 0) {
        v40 += 9;
      }
      if (*(_BYTE *)(v38 + 28)) {
        int v41 = v40;
      }
      else {
        int v41 = 0;
      }
      *(_DWORD *)(v38 + 24) = v41;
      v37 += v41 + 3;
      int v36 = *(_DWORD *)(a1 + 368);
    }

    if ((v36 & 8) != 0) {
      int v42 = v37 + 10;
    }
    else {
      int v42 = v37;
    }
    if ((v36 & 0x10) != 0)
    {
      unsigned int v43 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 272);
      if ((v43 & 0x80000000) != 0)
      {
        int v44 = 10;
      }

      else if (v43 >= 0x80)
      {
        int v44 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v43, a2);
        int v36 = *(_DWORD *)(a1 + 368);
      }

      else
      {
        int v44 = 1;
      }

      v42 += v44 + 2;
    }

    int v45 = v42 + 10;
    if ((v36 & 0x20) == 0) {
      int v45 = v42;
    }
    if ((v36 & 0x40) != 0) {
      v45 += 10;
    }
    if ((v36 & 0x80) != 0) {
      int v5 = v45 + 10;
    }
    else {
      int v5 = v45;
    }
  }

  if ((v36 & 0xFF00) != 0)
  {
    int v46 = v5 + 10;
    if ((v36 & 0x100) == 0) {
      int v46 = v5;
    }
    if ((v36 & 0x200) != 0) {
      v46 += 10;
    }
    if ((v36 & 0x400) != 0) {
      v46 += 3;
    }
    if ((v36 & 0x800) != 0) {
      v46 += 10;
    }
    if ((v36 & 0x1000) != 0) {
      int v5 = v46 + 10;
    }
    else {
      int v5 = v46;
    }
    if ((v36 & 0x4000) != 0)
    {
      uint64_t v47 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 312);
      if ((v47 & 0x80000000) != 0)
      {
        int v48 = 10;
      }

      else if (v47 >= 0x80)
      {
        int v48 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v47, a2);
        int v36 = *(_DWORD *)(a1 + 368);
      }

      else
      {
        int v48 = 1;
      }

      v5 += v48 + 2;
    }

    if ((v36 & 0x8000) != 0)
    {
      uint64_t v49 = *(void *)(a1 + 320);
      if (!v49) {
        uint64_t v49 = *(void *)(qword_1019A0BA0 + 320);
      }
      unint64_t v50 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001D91E8(v49, a2);
      int v51 = (int)v50;
      else {
        int v52 = 1;
      }
      v5 += v51 + v52 + 2;
      int v36 = *(_DWORD *)(a1 + 368);
    }
  }

  if ((v36 & 0xFF0000) != 0)
  {
    if ((v36 & 0x10000) != 0)
    {
      unint64_t v53 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 316);
      if ((v53 & 0x80000000) != 0)
      {
        int v54 = 12;
      }

      else if (v53 >= 0x80)
      {
        int v54 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v53, a2) + 2;
        int v36 = *(_DWORD *)(a1 + 368);
      }

      else
      {
        int v54 = 3;
      }

      v5 += v54;
    }

    int v55 = v5 + 10;
    if ((v36 & 0x20000) == 0) {
      int v55 = v5;
    }
    if ((v36 & 0x40000) != 0) {
      int v56 = v55 + 10;
    }
    else {
      int v56 = v55;
    }
    if ((v36 & 0x80000) != 0)
    {
      unsigned int v57 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 344);
      if ((v57 & 0x80000000) != 0)
      {
        int v58 = 12;
      }

      else if (v57 >= 0x80)
      {
        int v58 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v57, a2) + 2;
        int v36 = *(_DWORD *)(a1 + 368);
      }

      else
      {
        int v58 = 3;
      }

      v56 += v58;
    }

    if ((v36 & 0x100000) != 0) {
      v56 += 3;
    }
    if ((v36 & 0x200000) != 0)
    {
      unsigned int v59 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 348);
      if ((v59 & 0x80000000) != 0)
      {
        int v60 = 12;
      }

      else if (v59 >= 0x80)
      {
        int v60 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v59, a2) + 2;
        int v36 = *(_DWORD *)(a1 + 368);
      }

      else
      {
        int v60 = 3;
      }

      v56 += v60;
    }

    if ((v36 & 0x400000) != 0)
    {
      char v61 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 352);
      if ((v61 & 0x80000000) != 0)
      {
        int v62 = 12;
      }

      else if (v61 >= 0x80)
      {
        int v62 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v61, a2) + 2;
        int v36 = *(_DWORD *)(a1 + 368);
      }

      else
      {
        int v62 = 3;
      }

      v56 += v62;
    }

    if ((v36 & 0x800000) != 0) {
      int v5 = v56 + 3;
    }
    else {
      int v5 = v56;
    }
  }

  if ((v36 & 0x1000000) != 0) {
    int v63 = v5 + 3;
  }
  else {
    int v63 = v5;
  }
  int v64 = *(_DWORD *)(a1 + 296);
  uint64_t v65 = (v63 + 2 * v64);
  if (v64 >= 1)
  {
    uint64_t v66 = 0LL;
    do
    {
      int v67 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001D8C04( *(void *)(*(void *)(a1 + 288)
                                                                                         + 8 * v66),
                                                                               a2);
      int v68 = (int)v67;
      else {
        int v69 = 1;
      }
      uint64_t v65 = (v68 + v65 + v69);
      ++v66;
    }

    while (v66 < *(int *)(a1 + 296));
  }

  *(_DWORD *)(a1 + 360) = v65;
  return v65;
}

void sub_1001DCCCC(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1001DCD18()
{
  return 1LL;
}

void *sub_1001DCD20@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.DaemonLocationPrivate");
}

void sub_1001DCD30(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  7113LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 20);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 20) & 1) != 0)
    {
      unsigned int v6 = *(_DWORD *)(a2 + 8);
      if (v6 >= 0xE) {
        sub_10122FBE4();
      }
      *(_DWORD *)(a1 + 20) |= 1u;
      *(_DWORD *)(a1 + 8) = v6;
      int v5 = *(_DWORD *)(a2 + 20);
    }

    if ((v5 & 2) != 0)
    {
      char v7 = *(_BYTE *)(a2 + 12);
      *(_DWORD *)(a1 + 20) |= 2u;
      *(_BYTE *)(a1 + 12) = v7;
    }
  }

void sub_1001DCDE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001DCDFC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101828210;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001DCE0C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101828210;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

uint64_t sub_1001DCE2C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0BB0;
  if (!qword_1019A0BB0)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0BB0;
  }

  return result;
}

_DWORD *sub_1001DCE58()
{
  uint64_t result = operator new(0x18uLL);
  *(void *)uint64_t result = off_101828210;
  result[2] = 0;
  *((_BYTE *)result + 12) = 0;
  *((void *)result + 2) = 0LL;
  return result;
}

uint64_t sub_1001DCE88(uint64_t result)
{
  if (*(_BYTE *)(result + 20))
  {
    *(_DWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 12) = 0;
  }

  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1001DCEA0( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      int v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback) {
          return 1LL;
        }
      }

      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((void *)this + 1) = v5 + 1;
        if (!(_DWORD)TagFallback) {
          return 1LL;
        }
      }

      int v7 = TagFallback & 7;
      int v10 = (char *)*((void *)this + 1);
      if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v16);
        if (!(_DWORD)result) {
          return result;
        }
        unsigned int v11 = v16;
      }

      else
      {
        unsigned int v11 = *v10;
        *((void *)this + 1) = v10 + 1;
      }

      if (v11 <= 0xD)
      {
        *(_DWORD *)(a1 + 20) |= 1u;
        *(_DWORD *)(a1 + 8) = v11;
      }

      int v12 = (_BYTE *)*((void *)this + 1);
      unint64_t v8 = *((void *)this + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        uint64_t v9 = v12 + 1;
        *((void *)this + 1) = v9;
LABEL_25:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v17);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v13 = v17;
          int v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v13 = *v9;
          int v14 = (unsigned __int8 *)(v9 + 1);
          *((void *)this + 1) = v14;
        }

        *(_BYTE *)(a1 + 12) = v13 != 0;
        *(_DWORD *)(a1 + 20) |= 2u;
        if (v14 == (unsigned __int8 *)v8 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1LL;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }

    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        uint64_t v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_25;
      }
    }

    else
    {
      int v7 = TagFallback & 7;
    }

uint64_t sub_1001DD04C( uint64_t result, char a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(_DWORD *)(result + 8),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }

  if ((v6 & 2) != 0) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(unsigned __int8 *)(v5 + 12),  a2,  a4);
  }
  return result;
}

uint64_t sub_1001DD0A4(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 20);
  if ((_BYTE)v3)
  {
    if ((*(_BYTE *)(a1 + 20) & 1) != 0)
    {
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if ((v6 & 0x80000000) != 0)
      {
        unsigned int v4 = 11;
      }

      else if (v6 >= 0x80)
      {
        unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 20);
      }

      else
      {
        unsigned int v4 = 2;
      }
    }

    else
    {
      unsigned int v4 = 0;
    }

    if ((v3 & 2) != 0) {
      uint64_t result = v4 + 2;
    }
    else {
      uint64_t result = v4;
    }
  }

  else
  {
    uint64_t result = 0LL;
  }

  *(_DWORD *)(a1 + 16) = result;
  return result;
}

void sub_1001DD118(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1001DD164()
{
  return 1LL;
}

void *sub_1001DD16C@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.TechnologyStatus");
}

double sub_1001DD17C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v8,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  7369LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v8,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v7, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 44);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 44) & 1) != 0)
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 44) |= 1u;
      *(double *)(a1 + 8) = result;
      int v6 = *(_DWORD *)(a2 + 44);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }

    else if ((*(_BYTE *)(a2 + 44) & 2) == 0)
    {
      goto LABEL_6;
    }

    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 44) |= 2u;
    *(double *)(a1 + 16) = result;
    int v6 = *(_DWORD *)(a2 + 44);
    if ((v6 & 4) == 0)
    {
LABEL_7:
      if ((v6 & 8) == 0) {
        return result;
      }
      goto LABEL_8;
    }

void sub_1001DD26C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001DD284(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101828288;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001DD294(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101828288;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

uint64_t sub_1001DD2B4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0BB8;
  if (!qword_1019A0BB8)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0BB8;
  }

  return result;
}

double sub_1001DD2E0()
{
  unsigned __int8 v0 = (char *)operator new(0x30uLL);
  *(void *)unsigned __int8 v0 = off_101828288;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *((void *)v0 + 5) = 0LL;
  return result;
}

uint64_t sub_1001DD314(uint64_t result)
{
  if (*(_BYTE *)(result + 44))
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }

  *(_DWORD *)(result + 44) = 0;
  return result;
}

uint64_t sub_1001DD330( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_29;
        }
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 8) = v12;
        *(_DWORD *)(a1 + 44) |= 1u;
        unint64_t v8 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v8 + 1;
        goto LABEL_14;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_29;
        }
LABEL_14:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = v12;
        *(_DWORD *)(a1 + 44) |= 2u;
        uint64_t v9 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v9 + 1;
LABEL_19:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 24) = v12;
        *(_DWORD *)(a1 + 44) |= 4u;
        int v10 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v10 + 1;
LABEL_24:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 32) = v12;
        *(_DWORD *)(a1 + 44) |= 8u;
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }

        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_19;
        }
        goto LABEL_29;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_24;
        }
        goto LABEL_29;
      default:
        int v7 = TagFallback & 7;
LABEL_29:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }

    return result;
  }

uint64_t sub_1001DD554( uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 44);
  if ((v5 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  a2,  *(double *)(result + 8),  a3);
    int v5 = *(_DWORD *)(v4 + 44);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }

  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  a2,  *(double *)(v4 + 16),  a3);
  int v5 = *(_DWORD *)(v4 + 44);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      return result;
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  a2,  *(double *)(v4 + 32),  a3);
  }

uint64_t sub_1001DD5E8(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 44);
  if (*(_BYTE *)(a1 + 44))
  {
    unsigned int v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      v2 += 9;
    }
    if ((v1 & 8) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }

  *(_DWORD *)(a1 + 40) = v1;
  return v1;
}

double sub_1001DD62C(uint64_t a1, void *lpsrc)
{
  return sub_1001DD17C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001DD678()
{
  return 1LL;
}

void *sub_1001DD680@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.VehicleSpeed");
}

double sub_1001DD690(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v8,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  7575LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v8,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v7, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 28);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 28) & 1) != 0)
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 28) |= 1u;
      *(double *)(a1 + 8) = result;
      int v6 = *(_DWORD *)(a2 + 28);
    }

    if ((v6 & 2) != 0)
    {
      double result = *(double *)(a2 + 16);
      *(_DWORD *)(a1 + 28) |= 2u;
      *(double *)(a1 + 16) = result;
    }
  }

  return result;
}

void sub_1001DD738(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001DD750(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101828300;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001DD760(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101828300;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

uint64_t sub_1001DD780(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0BC0;
  if (!qword_1019A0BC0)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0BC0;
  }

  return result;
}

void *sub_1001DD7AC()
{
  uint64_t result = operator new(0x20uLL);
  *uint64_t result = off_101828300;
  result[1] = 0LL;
  result[2] = 0LL;
  result[3] = 0LL;
  return result;
}

uint64_t sub_1001DD7D4(uint64_t result)
{
  if (*(_BYTE *)(result + 28))
  {
    *(void *)(result + 8) = 0LL;
    *(void *)(result + 16) = 0LL;
  }

  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_1001DD7E8( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_21;
        }
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v10) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 8) = v10;
        *(_DWORD *)(a1 + 28) |= 1u;
        unint64_t v8 = (_BYTE *)*((void *)this + 1);
        if ((unint64_t)v8 < *((void *)this + 2) && *v8 == 17)
        {
          *((void *)this + 1) = v8 + 1;
          goto LABEL_15;
        }
      }

      if (TagFallback >> 3 != 2)
      {
        int v7 = TagFallback & 7;
        goto LABEL_21;
      }

      int v7 = TagFallback & 7;
      if (v7 == 1) {
        break;
      }
LABEL_21:
      if (v7 == 4) {
        return 1LL;
      }
    }

uint64_t sub_1001DD944( uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 28);
  if ((v5 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  a2,  *(double *)(result + 8),  a3);
    int v5 = *(_DWORD *)(v4 + 28);
  }

  if ((v5 & 2) != 0) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  a2,  *(double *)(v4 + 16),  a3);
  }
  return result;
}

uint64_t sub_1001DD99C(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 28);
  if (*(_BYTE *)(a1 + 28))
  {
    unsigned int v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }

  *(_DWORD *)(a1 + 24) = v1;
  return v1;
}

double sub_1001DD9C8(uint64_t a1, void *lpsrc)
{
  return sub_1001DD690(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001DDA14()
{
  return 1LL;
}

void *sub_1001DDA1C@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.VehicleHeading");
}

void sub_1001DDA2C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v10,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  7781LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v10,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 28);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 28) & 1) != 0)
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 28) |= 1u;
      *(void *)(a1 + 8) = v6;
      int v5 = *(_DWORD *)(a2 + 28);
    }

    if ((v5 & 2) != 0)
    {
      int v7 = *(const std::string **)(a2 + 16);
      *(_DWORD *)(a1 + 28) |= 2u;
      unint64_t v8 = *(std::string **)(a1 + 16);
      if (v8 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        unint64_t v8 = (std::string *)operator new(0x18uLL);
        v8->__r_.__value_.__l.__size_ = 0LL;
        v8->__r_.__value_.__l.__cap_ = 0LL;
        v8->__r_.__value_.__r.__words[0] = 0LL;
        *(void *)(a1 + 16) = v8;
      }

      std::string::operator=(v8, v7);
    }
  }

void sub_1001DDB00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001DDB18(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101828378;
  sub_100069200((uint64_t)a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001DDB48(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101828378;
  sub_100069200((uint64_t)a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v2);
}

void *sub_1001DDB7C()
{
  uint64_t result = operator new(0x20uLL);
  *uint64_t result = off_101828378;
  result[1] = 0LL;
  result[2] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  result[3] = 0LL;
  return result;
}

uint64_t sub_1001DDBAC(uint64_t result)
{
  char v1 = *(_BYTE *)(result + 28);
  if (v1)
  {
    *(void *)(result + 8) = 0LL;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(result + 16);
      if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(_BYTE **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0LL;
        }

        else
        {
          *(_BYTE *)uint64_t v2 = 0;
          *(_BYTE *)(v2 + 23) = 0;
        }
      }
    }
  }

  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_1001DDBF8( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      int v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback) {
          return 1LL;
        }
      }

      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((void *)this + 1) = v5 + 1;
        if (!(_DWORD)TagFallback) {
          return 1LL;
        }
      }

      if (TagFallback >> 3 == 2)
      {
        int v7 = TagFallback & 7;
        if (v7 == 2)
        {
          int v8 = *(_DWORD *)(a1 + 28);
          goto LABEL_15;
        }
      }

      else
      {
        int v7 = TagFallback & 7;
      }

uint64_t sub_1001DDD7C( uint64_t result, uint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 28);
  if ((v5 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  a2,  *(double *)(result + 8),  a3);
    int v5 = *(_DWORD *)(v4 + 28);
  }

  if ((v5 & 2) != 0) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString(2LL, *(void *)(v4 + 16), a2);
  }
  return result;
}

uint64_t sub_1001DDDD4(uint64_t a1, unsigned int a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 28);
  if (*(_BYTE *)(a1 + 28))
  {
    uint64_t v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0)
    {
      uint64_t v5 = *(void *)(a1 + 16);
      int v6 = *(unsigned __int8 *)(v5 + 23);
      char v7 = v6;
      uint64_t v8 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
      }
      else {
        unint64_t v9 = v8;
      }
      if (v9 >= 0x80)
      {
        int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback( (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9,  a2);
        int v6 = *(unsigned __int8 *)(v5 + 23);
        uint64_t v8 = *(void *)(v5 + 8);
        char v7 = *(_BYTE *)(v5 + 23);
      }

      else
      {
        int v10 = 1;
      }

      if (v7 < 0) {
        int v6 = v8;
      }
      uint64_t v4 = (v4 + v10 + v6 + 1);
    }
  }

  else
  {
    uint64_t v4 = 0LL;
  }

  *(_DWORD *)(a1 + 24) = v4;
  return v4;
}

void sub_1001DDE70(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1001DDEBC()
{
  return 1LL;
}

void *sub_1001DDEC4@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.XtraFileAvailable");
}

double sub_1001DDED4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v8,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  8008LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v8,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v7, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 36);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 36) & 1) != 0)
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(double *)(a1 + 8) = result;
      int v6 = *(_DWORD *)(a2 + 36);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }

    else if ((*(_BYTE *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }

    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(double *)(a1 + 16) = result;
    if ((*(_DWORD *)(a2 + 36) & 4) == 0) {
      return result;
    }
LABEL_7:
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 4u;
    *(double *)(a1 + 24) = result;
  }

  return result;
}

void sub_1001DDFA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001DDFBC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018283F0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001DDFCC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018283F0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

uint64_t sub_1001DDFEC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0BD0;
  if (!qword_1019A0BD0)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0BD0;
  }

  return result;
}

double sub_1001DE018()
{
  unsigned __int8 v0 = (char *)operator new(0x28uLL);
  *(void *)unsigned __int8 v0 = off_1018283F0;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  return result;
}

uint64_t sub_1001DE048(uint64_t result)
{
  if (*(_BYTE *)(result + 36))
  {
    *(void *)(result + 8) = 0LL;
    *(void *)(result + 16) = 0LL;
    *(void *)(result + 24) = 0LL;
  }

  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_1001DE060( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        unsigned int v7 = TagFallback >> 3;
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_27;
        }
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 8) = v12;
        *(_DWORD *)(a1 + 36) |= 1u;
        unint64_t v9 = (_BYTE *)*((void *)this + 1);
        if ((unint64_t)v9 < *((void *)this + 2) && *v9 == 17)
        {
          *((void *)this + 1) = v9 + 1;
LABEL_17:
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
            return 0LL;
          }
          *(void *)(a1 + 16) = v12;
          *(_DWORD *)(a1 + 36) |= 2u;
          int v10 = (_BYTE *)*((void *)this + 1);
          if ((unint64_t)v10 < *((void *)this + 2) && *v10 == 25)
          {
            *((void *)this + 1) = v10 + 1;
            goto LABEL_21;
          }
        }
      }

      if (v7 == 2)
      {
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_27;
        }
        goto LABEL_17;
      }

      if (v7 != 3)
      {
        int v8 = TagFallback & 7;
        goto LABEL_27;
      }

      int v8 = TagFallback & 7;
      if (v8 == 1) {
        break;
      }
LABEL_27:
      if (v8 == 4) {
        return 1LL;
      }
    }

uint64_t sub_1001DE218( uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 36);
  if ((v5 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  a2,  *(double *)(result + 8),  a3);
    int v5 = *(_DWORD *)(v4 + 36);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        return result;
      }
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  a2,  *(double *)(v4 + 24),  a3);
    }
  }

  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  a2,  *(double *)(v4 + 16),  a3);
  if ((*(_DWORD *)(v4 + 36) & 4) != 0) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  a2,  *(double *)(v4 + 24),  a3);
  }
  return result;
}

uint64_t sub_1001DE290(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 36);
  if (*(_BYTE *)(a1 + 36))
  {
    unsigned int v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }

  *(_DWORD *)(a1 + 32) = v1;
  return v1;
}

double sub_1001DE2C8(uint64_t a1, void *lpsrc)
{
  return sub_1001DDED4(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001DE314()
{
  return 1LL;
}

void *sub_1001DE31C@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.LocationDerivedSpeed");
}

double sub_1001DE32C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v28,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  8663LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v28,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v27, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v28);
  }

  int v6 = *(_DWORD *)(a2 + 100);
  if ((_BYTE)v6)
  {
    if ((v6 & 1) != 0)
    {
      *(_DWORD *)(a1 + 100) |= 1u;
      unsigned int v7 = *(char **)(a1 + 8);
      if (!v7)
      {
        unsigned int v7 = (char *)operator new(0x28uLL);
        *(void *)unsigned int v7 = off_101827B80;
        *(_OWORD *)(v7 + 8) = 0u;
        *(_OWORD *)(v7 + 24) = 0u;
        *(void *)(a1 + 8) = v7;
      }

      uint64_t v8 = *(void *)(a2 + 8);
      if (!v8) {
        uint64_t v8 = *(void *)(qword_1019A0BD8 + 8);
      }
      double result = sub_1001D323C((uint64_t)v7, v8);
      int v6 = *(_DWORD *)(a2 + 100);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_19;
      }
    }

    else if ((v6 & 2) == 0)
    {
      goto LABEL_6;
    }

    int v9 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 100) |= 2u;
    *(_DWORD *)(a1 + 32) = v9;
    int v6 = *(_DWORD *)(a2 + 100);
    if ((v6 & 4) == 0)
    {
LABEL_7:
      if ((v6 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_24;
    }

void sub_1001DE7D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void *sub_1001DE7EC(void *result)
{
  if ((void *)qword_1019A0BD8 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
    }
    uint64_t v4 = v1[3];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
    }
    uint64_t v5 = v1[5];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
    }
    uint64_t v6 = v1[7];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
    }
    uint64_t v7 = v1[8];
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
    }
    uint64_t v8 = v1[10];
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
    }
    double result = (void *)v1[11];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_1001DE8C0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101828468;
  sub_1001DE7EC(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001DE8F0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101828468;
  sub_1001DE7EC(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v2);
}

uint64_t sub_1001DE924(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0BD8;
  if (!qword_1019A0BD8)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0BD8;
  }

  return result;
}

double sub_1001DE950()
{
  unsigned __int8 v0 = (char *)operator new(0x68uLL);
  *(void *)unsigned __int8 v0 = off_101828468;
  *((void *)v0 + 1) = 0LL;
  *((void *)v0 + 2) = 0LL;
  *((void *)v0 + 3) = 0LL;
  *(void *)(v0 + 29) = 0LL;
  double result = 0.0;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_OWORD *)(v0 + 88) = 0u;
  return result;
}

uint64_t sub_1001DE990(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 100);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      uint64_t v3 = *(void *)(result + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0LL;
          *(void *)(v3 + 16) = 0LL;
          *(void *)(v3 + 24) = 0LL;
        }

        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(result + 100);
      }
    }

    *(_DWORD *)(result + 32) = 0;
    if ((v2 & 4) != 0)
    {
      double result = *(void *)(result + 16);
      if (result)
      {
        double result = sub_1001D6A04(result);
        int v2 = *(_DWORD *)(v1 + 100);
      }
    }

    if ((v2 & 8) != 0)
    {
      double result = *(void *)(v1 + 24);
      if (result)
      {
        double result = sub_1001D9EC4(result);
        int v2 = *(_DWORD *)(v1 + 100);
      }
    }

    if ((v2 & 0x10) != 0)
    {
      uint64_t v4 = *(void *)(v1 + 40);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 20))
        {
          *(_DWORD *)(v4 + 8) = 0;
          *(_BYTE *)(v4 + 12) = 0;
        }

        *(_DWORD *)(v4 + 20) = 0;
        int v2 = *(_DWORD *)(v1 + 100);
      }
    }

    *(_BYTE *)(v1 + 36) = 0;
    *(void *)(v1 + 48) = 0LL;
    *(_DWORD *)(v1 + 72) = 0;
  }

  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      uint64_t v5 = *(void *)(v1 + 56);
      if (v5)
      {
        if (*(_BYTE *)(v5 + 44))
        {
          *(_OWORD *)(v5 + 24) = 0u;
          *(_OWORD *)(v5 + 8) = 0u;
        }

        *(_DWORD *)(v5 + 44) = 0;
        int v2 = *(_DWORD *)(v1 + 100);
      }
    }

    if ((v2 & 0x200) != 0)
    {
      uint64_t v6 = *(void *)(v1 + 64);
      if (v6)
      {
        if (*(_BYTE *)(v6 + 28))
        {
          *(void *)(v6 + 8) = 0LL;
          *(void *)(v6 + 16) = 0LL;
        }

        *(_DWORD *)(v6 + 28) = 0;
        int v2 = *(_DWORD *)(v1 + 100);
      }
    }

    if ((v2 & 0x400) != 0)
    {
      double result = *(void *)(v1 + 80);
      if (result)
      {
        double result = sub_1001DDBAC(result);
        int v2 = *(_DWORD *)(v1 + 100);
      }
    }

    *(_DWORD *)(v1 + 76) = 0;
    if ((v2 & 0x1000) != 0)
    {
      uint64_t v7 = *(void *)(v1 + 88);
      if (v7)
      {
        if (*(_BYTE *)(v7 + 36))
        {
          *(void *)(v7 + 8) = 0LL;
          *(void *)(v7 + 16) = 0LL;
          *(void *)(v7 + 24) = 0LL;
        }

        *(_DWORD *)(v7 + 36) = 0;
      }
    }
  }

  *(_DWORD *)(v1 + 100) = 0;
  return result;
}

uint64_t sub_1001DEAC4( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 < *((void *)this + 2) && (*v5 & 0x80000000) == 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
      goto LABEL_6;
    }

    TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = (_DWORD)TagFallback;
    if (!(_DWORD)TagFallback) {
      return 1LL;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 100) |= 1u;
        uint64_t v8 = *(char **)(a1 + 8);
        if (!v8)
        {
          uint64_t v8 = (char *)operator new(0x28uLL);
          *(void *)uint64_t v8 = off_101827B80;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *(void *)(a1 + 8) = v8;
        }

        int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v99)) {
            return 0LL;
          }
        }

        else
        {
          v99[0] = *v9;
          *((void *)this + 1) = v9 + 1;
        }

        int v19 = *((_DWORD *)this + 14);
        int v20 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v19 + 1;
        if (v19 >= v20) {
          return 0LL;
        }
        int v21 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v99[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v21);
        int v23 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v23, 1);
        int v25 = v23 - 1;
        if (v25 < 0 == v24) {
          *((_DWORD *)this + 14) = v25;
        }
        uint64_t v26 = (_BYTE *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        uint64_t v11 = v26 + 1;
        *((void *)this + 1) = v11;
        goto LABEL_49;
      case 2u:
        int v7 = TagFallback & 7;
        uint64_t v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_49:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v99);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v27 = v99[0];
          int v28 = (_BYTE *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }

        else
        {
          unsigned int v27 = *v11;
          int v28 = v11 + 1;
          *((void *)this + 1) = v28;
        }

        *(_DWORD *)(a1 + 32) = v27;
        int v12 = *(_DWORD *)(a1 + 100) | 2;
        *(_DWORD *)(a1 + 100) = v12;
        *((void *)this + 1) = v28 + 1;
LABEL_57:
        *(_DWORD *)(a1 + 100) = v12 | 4;
        int v30 = *(char **)(a1 + 16);
        if (!v30)
        {
          int v30 = (char *)operator new(0xA0uLL);
          *(void *)int v30 = off_101827F40;
          *(_OWORD *)(v30 + 8) = 0u;
          *(_OWORD *)(v30 + 24) = 0u;
          *(_OWORD *)(v30 + 40) = 0u;
          *(_OWORD *)(v30 + 56) = 0u;
          *(_OWORD *)(v30 + 72) = 0u;
          *(_OWORD *)(v30 + 88) = 0u;
          *(_OWORD *)(v30 + 104) = 0u;
          *(_OWORD *)(v30 + 120) = xmmword_1012E0BA0;
          *((void *)v30 + 17) = 0LL;
          v30[144] = 0;
          *((_DWORD *)v30 + 37) = 0;
          *((_DWORD *)v30 + 38) = 0;
          *(void *)(a1 + 16) = v30;
        }

        uint64_t v31 = (char *)*((void *)this + 1);
        if ((unint64_t)v31 >= *((void *)this + 2) || *v31 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v99)) {
            return 0LL;
          }
        }

        else
        {
          v99[0] = *v31;
          *((void *)this + 1) = v31 + 1;
        }

        int v32 = *((_DWORD *)this + 14);
        int v33 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v32 + 1;
        if (v32 >= v33) {
          return 0LL;
        }
        int v34 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v99[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v34);
        int v36 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v36, 1);
        int v37 = v36 - 1;
        if (v37 < 0 == v24) {
          *((_DWORD *)this + 14) = v37;
        }
        uint64_t v38 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v38 + 1;
LABEL_71:
        *(_DWORD *)(a1 + 100) |= 8u;
        int v39 = *(char **)(a1 + 24);
        if (!v39)
        {
          int v39 = (char *)operator new(0x178uLL);
          *(void *)int v39 = off_101828198;
          *((void *)v39 + 36) = 0LL;
          *((void *)v39 + 37) = 0LL;
          *((_DWORD *)v39 + 76) = 0;
          *((_DWORD *)v39 + 90) = 0;
          *((_WORD *)v39 + 56) = 0;
          *(_OWORD *)(v39 + 8) = 0u;
          *(_OWORD *)(v39 + 24) = 0u;
          *(_OWORD *)(v39 + 40) = 0u;
          *(_OWORD *)(v39 + 56) = 0u;
          *(_OWORD *)(v39 + 72) = 0u;
          *((void *)v39 + 11) = 0LL;
          *((void *)v39 + 12) = 0xFFFFFFFFLL;
          *((void *)v39 + 13) = 0LL;
          *(void *)(v39 + 364) = 0LL;
          *(_OWORD *)(v39 + 130) = 0u;
          *(_OWORD *)(v39 + 146) = 0u;
          *(_OWORD *)(v39 + 162) = 0u;
          *(_OWORD *)(v39 + 178) = 0u;
          *(_OWORD *)(v39 + 194) = 0u;
          *(_OWORD *)(v39 + 210) = 0u;
          *(_OWORD *)(v39 + 226) = 0u;
          *(_OWORD *)(v39 + 242) = 0u;
          *(_OWORD *)(v39 + 114) = 0u;
          *((_OWORD *)v39 + 17) = 0u;
          *(_OWORD *)(v39 + 258) = 0u;
          *(_OWORD *)(v39 + 341) = 0u;
          *(_OWORD *)(v39 + 312) = 0u;
          *(_OWORD *)(v39 + 328) = 0u;
          *(void *)(a1 + 24) = v39;
        }

        int v40 = (char *)*((void *)this + 1);
        if ((unint64_t)v40 >= *((void *)this + 2) || *v40 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v99)) {
            return 0LL;
          }
        }

        else
        {
          v99[0] = *v40;
          *((void *)this + 1) = v40 + 1;
        }

        int v41 = *((_DWORD *)this + 14);
        int v42 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v41 + 1;
        if (v41 >= v42) {
          return 0LL;
        }
        int v43 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v99[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v43);
        int v45 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v45, 1);
        int v46 = v45 - 1;
        if (v46 < 0 == v24) {
          *((_DWORD *)this + 14) = v46;
        }
        uint64_t v47 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v47 + 1;
LABEL_85:
        *(_DWORD *)(a1 + 100) |= 0x10u;
        int v48 = *(_DWORD **)(a1 + 40);
        if (!v48)
        {
          int v48 = operator new(0x18uLL);
          *(void *)int v48 = off_101828210;
          v48[2] = 0;
          *((_BYTE *)v48 + 12) = 0;
          *((void *)v48 + 2) = 0LL;
          *(void *)(a1 + 40) = v48;
        }

        uint64_t v49 = (char *)*((void *)this + 1);
        if ((unint64_t)v49 >= *((void *)this + 2) || *v49 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v99)) {
            return 0LL;
          }
        }

        else
        {
          v99[0] = *v49;
          *((void *)this + 1) = v49 + 1;
        }

        int v50 = *((_DWORD *)this + 14);
        int v51 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v50 + 1;
        if (v50 >= v51) {
          return 0LL;
        }
        int v52 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v99[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v52);
        int v54 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v54, 1);
        int v55 = v54 - 1;
        if (v55 < 0 == v24) {
          *((_DWORD *)this + 14) = v55;
        }
        int v56 = (_BYTE *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        int v14 = v56 + 1;
        *((void *)this + 1) = v14;
LABEL_99:
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v99);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v57 = v99[0];
          int v58 = (_BYTE *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }

        else
        {
          unsigned int v57 = *v14;
          int v58 = v14 + 1;
          *((void *)this + 1) = v58;
        }

        *(_BYTE *)(a1 + 36) = v57 != 0;
        *(_DWORD *)(a1 + 100) |= 0x20u;
        *((void *)this + 1) = v58 + 1;
LABEL_107:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v99) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 48) = *(void *)v99;
        *(_DWORD *)(a1 + 100) |= 0x40u;
        unsigned int v59 = (_BYTE *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        char v16 = v59 + 1;
        *((void *)this + 1) = v16;
LABEL_111:
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v99);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v60 = v99[0];
        }

        else
        {
          unsigned int v60 = *v16;
          *((void *)this + 1) = v16 + 1;
        }

        if (v60 <= 2)
        {
          *(_DWORD *)(a1 + 100) |= 0x80u;
          *(_DWORD *)(a1 + 72) = v60;
        }

        char v61 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v61 + 1;
LABEL_121:
        *(_DWORD *)(a1 + 100) |= 0x100u;
        int v62 = *(char **)(a1 + 56);
        if (!v62)
        {
          int v62 = (char *)operator new(0x30uLL);
          *(void *)int v62 = off_101828288;
          *(_OWORD *)(v62 + 8) = 0u;
          *(_OWORD *)(v62 + 24) = 0u;
          *((void *)v62 + 5) = 0LL;
          *(void *)(a1 + 56) = v62;
        }

        int v63 = (char *)*((void *)this + 1);
        if ((unint64_t)v63 >= *((void *)this + 2) || *v63 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v99)) {
            return 0LL;
          }
        }

        else
        {
          v99[0] = *v63;
          *((void *)this + 1) = v63 + 1;
        }

        int v64 = *((_DWORD *)this + 14);
        int v65 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v64 + 1;
        if (v64 >= v65) {
          return 0LL;
        }
        int v66 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v99[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v66);
        int v68 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v68, 1);
        int v69 = v68 - 1;
        if (v69 < 0 == v24) {
          *((_DWORD *)this + 14) = v69;
        }
        uint64_t v70 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v70 + 1;
LABEL_135:
        *(_DWORD *)(a1 + 100) |= 0x200u;
        uint64_t v71 = *(void **)(a1 + 64);
        if (!v71)
        {
          uint64_t v71 = operator new(0x20uLL);
          void *v71 = off_101828300;
          v71[1] = 0LL;
          v71[2] = 0LL;
          v71[3] = 0LL;
          *(void *)(a1 + 64) = v71;
        }

        unsigned int v72 = (char *)*((void *)this + 1);
        if ((unint64_t)v72 >= *((void *)this + 2) || *v72 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v99)) {
            return 0LL;
          }
        }

        else
        {
          v99[0] = *v72;
          *((void *)this + 1) = v72 + 1;
        }

        int v73 = *((_DWORD *)this + 14);
        int v74 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v73 + 1;
        if (v73 >= v74) {
          return 0LL;
        }
        int v75 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v99[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v75);
        int v77 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v77, 1);
        int v78 = v77 - 1;
        if (v78 < 0 == v24) {
          *((_DWORD *)this + 14) = v78;
        }
        int v79 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v79 + 1;
LABEL_149:
        *(_DWORD *)(a1 + 100) |= 0x400u;
        int v80 = *(void **)(a1 + 80);
        if (!v80)
        {
          int v80 = operator new(0x20uLL);
          *int v80 = off_101828378;
          v80[1] = 0LL;
          v80[2] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
          v80[3] = 0LL;
          *(void *)(a1 + 80) = v80;
        }

        int v81 = (char *)*((void *)this + 1);
        if ((unint64_t)v81 >= *((void *)this + 2) || *v81 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v99)) {
            return 0LL;
          }
        }

        else
        {
          v99[0] = *v81;
          *((void *)this + 1) = v81 + 1;
        }

        int v82 = *((_DWORD *)this + 14);
        int v83 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v82 + 1;
        if (v82 >= v83) {
          return 0LL;
        }
        int v84 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v99[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v84);
        int v86 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v86, 1);
        int v87 = v86 - 1;
        if (v87 < 0 == v24) {
          *((_DWORD *)this + 14) = v87;
        }
        int v88 = (_BYTE *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        int v18 = v88 + 1;
        *((void *)this + 1) = v18;
LABEL_163:
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v99);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v89 = v99[0];
        }

        else
        {
          unsigned int v89 = *v18;
          *((void *)this + 1) = v18 + 1;
        }

        if (v89 <= 2)
        {
          *(_DWORD *)(a1 + 100) |= 0x800u;
          *(_DWORD *)(a1 + 76) = v89;
        }

        int v90 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v90 + 1;
LABEL_173:
        *(_DWORD *)(a1 + 100) |= 0x1000u;
        unsigned int v91 = *(char **)(a1 + 88);
        if (!v91)
        {
          unsigned int v91 = (char *)operator new(0x28uLL);
          *(void *)unsigned int v91 = off_1018283F0;
          *(_OWORD *)(v91 + 8) = 0u;
          *(_OWORD *)(v91 + 24) = 0u;
          *(void *)(a1 + 88) = v91;
        }

        int v92 = (char *)*((void *)this + 1);
        if ((unint64_t)v92 >= *((void *)this + 2) || *v92 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v99)) {
            return 0LL;
          }
        }

        else
        {
          v99[0] = *v92;
          *((void *)this + 1) = v92 + 1;
        }

        int v93 = *((_DWORD *)this + 14);
        int v94 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v93 + 1;
        if (v93 >= v94) {
          return 0LL;
        }
        int v95 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v99[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v95);
        int v97 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v97, 1);
        int v98 = v97 - 1;
        if (v98 < 0 == v24) {
          *((_DWORD *)this + 14) = v98;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1LL;
          *((_BYTE *)this + 36) = 1;
          return result;
        }

        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_37;
        }
        int v12 = *(_DWORD *)(a1 + 100);
        goto LABEL_57;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_71;
        }
        goto LABEL_37;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_85;
        }
        goto LABEL_37;
      case 6u:
        int v7 = TagFallback & 7;
        int v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_99;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_107;
        }
        goto LABEL_37;
      case 8u:
        int v7 = TagFallback & 7;
        char v16 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_111;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_121;
        }
        goto LABEL_37;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_135;
        }
        goto LABEL_37;
      case 0xBu:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_149;
        }
        goto LABEL_37;
      case 0xCu:
        int v7 = TagFallback & 7;
        int v18 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_163;
      case 0xDu:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_37;
        }
        goto LABEL_173;
      default:
        int v7 = TagFallback & 7;
LABEL_37:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001DF664( uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 100);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0BD8 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 100);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(_DWORD *)(v5 + 32),  (int)a2,  a4);
  int v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_22;
  }

uint64_t sub_1001DF874(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 100);
  if (!(_BYTE)v3)
  {
    uint64_t v5 = 0LL;
    goto LABEL_55;
  }

  if ((v3 & 1) == 0)
  {
    int v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }

  uint64_t v6 = *(void *)(a1 + 8);
  if (!v6) {
    uint64_t v6 = *(void *)(qword_1019A0BD8 + 8);
  }
  int v7 = *(unsigned __int8 *)(v6 + 36);
  if (*(_BYTE *)(v6 + 36))
  {
    int v8 = (v7 << 31 >> 31) & 9;
    if ((v7 & 2) != 0) {
      v8 += 9;
    }
    if ((v7 & 4) != 0) {
      int v7 = v8 + 9;
    }
    else {
      int v7 = v8;
    }
  }

  *(_DWORD *)(v6 + 32) = v7;
  int v4 = v7 + 2;
  int v3 = *(_DWORD *)(a1 + 100);
  if ((v3 & 2) != 0)
  {
LABEL_15:
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if ((v9 & 0x80000000) != 0)
    {
      int v10 = 10;
    }

    else if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
      int v3 = *(_DWORD *)(a1 + 100);
    }

    else
    {
      int v10 = 1;
    }

    v4 += v10 + 1;
  }

double sub_1001DFBF0(uint64_t a1, void *lpsrc)
{
  return sub_1001DE32C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001DFC3C()
{
  return 1LL;
}

void *sub_1001DFC44@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.Location");
}

void sub_1001DFC54(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v6,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  8908LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v6,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v5, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }

  sub_1002076A8((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 8), a2 + 8);
  sub_1002077D0((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 32), a2 + 32);
}

void sub_1001DFCD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001DFCF0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018284E0;
  sub_10008D0EC((uint64_t)a1 + 32);
  sub_10008D0EC((uint64_t)a1 + 8);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001DFD34(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

uint64_t sub_1001DFD48(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0BE0;
  if (!qword_1019A0BE0)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0BE0;
  }

  return result;
}

void *sub_1001DFD74()
{
  uint64_t result = operator new(0x40uLL);
  result[1] = 0LL;
  result[2] = 0LL;
  *uint64_t result = off_1018284E0;
  *((_DWORD *)result + 6) = 0;
  result[4] = 0LL;
  result[5] = 0LL;
  *((_DWORD *)result + 12) = 0;
  result[7] = 0LL;
  return result;
}

uint64_t sub_1001DFDAC(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 16) >= 1)
  {
    uint64_t v2 = 0LL;
    do
    {
      uint64_t v3 = *(void *)(*(void *)(v1 + 8) + 8 * v2);
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 32LL))(v3);
      ++v2;
    }

    while (v2 < *(int *)(v1 + 16));
  }

  *(_DWORD *)(v1 + 16) = 0;
  if (*(int *)(v1 + 40) >= 1)
  {
    uint64_t v4 = 0LL;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(v1 + 32) + 8 * v4);
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 32LL))(v5);
      ++v4;
    }

    while (v4 < *(int *)(v1 + 40));
  }

  *(_DWORD *)(v1 + 40) = 0;
  *(_DWORD *)(v1 + 60) = 0;
  return result;
}

uint64_t sub_1001DFE3C( int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2);
  uint64_t v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 8);
  while (1)
  {
    while (1)
    {
      while (1)
      {
LABEL_2:
        int v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_30;
        }
        while (1)
        {
          int v10 = a1[5];
          uint64_t v11 = a1[4];
          if ((int)v11 >= v10)
          {
            if (v10 == a1[6])
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v10 + 1);
              int v10 = a1[5];
            }

            a1[5] = v10 + 1;
            int v13 = (char *)operator new(0xA0uLL);
            *(void *)int v13 = off_101827F40;
            *(_OWORD *)(v13 + 8) = 0u;
            *(_OWORD *)(v13 + 24) = 0u;
            *(_OWORD *)(v13 + 40) = 0u;
            *(_OWORD *)(v13 + 56) = 0u;
            *(_OWORD *)(v13 + 72) = 0u;
            *(_OWORD *)(v13 + 88) = 0u;
            *(_OWORD *)(v13 + 104) = 0u;
            *(_OWORD *)(v13 + 120) = xmmword_1012E0BA0;
            *((void *)v13 + 17) = 0LL;
            v13[144] = 0;
            *((_DWORD *)v13 + 37) = 0;
            *((_DWORD *)v13 + 38) = 0;
            uint64_t v14 = *((void *)a1 + 1);
            uint64_t v15 = a1[4];
            a1[4] = v15 + 1;
            *(void *)(v14 + 8 * v15) = v13;
          }

          else
          {
            uint64_t v12 = *((void *)a1 + 1);
            a1[4] = v11 + 1;
            int v13 = *(char **)(v12 + 8 * v11);
          }

          char v16 = (char *)*((void *)this + 1);
          if ((unint64_t)v16 >= *((void *)this + 2) || *v16 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v41)) {
              return 0LL;
            }
          }

          else
          {
            unsigned int v41 = *v16;
            *((void *)this + 1) = v16 + 1;
          }

          int v17 = *((_DWORD *)this + 14);
          int v18 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v17 + 1;
          if (v17 >= v18) {
            return 0LL;
          }
          int v19 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v41);
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v19);
          int v21 = *((_DWORD *)this + 14);
          BOOL v22 = __OFSUB__(v21, 1);
          int v23 = v21 - 1;
          if (v23 < 0 == v22) {
            *((_DWORD *)this + 14) = v23;
          }
          BOOL v24 = (_BYTE *)*((void *)this + 1);
          int v25 = *v24;
          if (v25 != 10)
          {
            if (v25 != 18) {
              goto LABEL_2;
            }
            goto LABEL_34;
          }

          *((void *)this + 1) = v24 + 1;
        }
      }

      int v9 = TagFallback & 7;
      if (v9 != 2) {
        goto LABEL_30;
      }
      while (1)
      {
        int v26 = a1[11];
        uint64_t v27 = a1[10];
        if ((int)v27 >= v26)
        {
          if (v26 == a1[12])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v26 + 1);
            int v26 = a1[11];
          }

          a1[11] = v26 + 1;
          int v29 = (char *)operator new(0x178uLL);
          *(void *)int v29 = off_101828198;
          *((void *)v29 + 36) = 0LL;
          *((void *)v29 + 37) = 0LL;
          *((_DWORD *)v29 + 76) = 0;
          *((_DWORD *)v29 + 90) = 0;
          *((_WORD *)v29 + 56) = 0;
          *(_OWORD *)(v29 + 8) = 0u;
          *(_OWORD *)(v29 + 24) = 0u;
          *(_OWORD *)(v29 + 40) = 0u;
          *(_OWORD *)(v29 + 56) = 0u;
          *(_OWORD *)(v29 + 72) = 0u;
          *((void *)v29 + 11) = 0LL;
          *((void *)v29 + 12) = 0xFFFFFFFFLL;
          *((void *)v29 + 13) = 0LL;
          *(void *)(v29 + 364) = 0LL;
          *(_OWORD *)(v29 + 130) = 0u;
          *(_OWORD *)(v29 + 146) = 0u;
          *(_OWORD *)(v29 + 162) = 0u;
          *(_OWORD *)(v29 + 178) = 0u;
          *(_OWORD *)(v29 + 194) = 0u;
          *(_OWORD *)(v29 + 210) = 0u;
          *(_OWORD *)(v29 + 226) = 0u;
          *(_OWORD *)(v29 + 242) = 0u;
          *((_OWORD *)v29 + 17) = 0u;
          *(_OWORD *)(v29 + 114) = 0u;
          *(_OWORD *)(v29 + 258) = 0u;
          *(_OWORD *)(v29 + 341) = 0u;
          *(_OWORD *)(v29 + 312) = 0u;
          *(_OWORD *)(v29 + 328) = 0u;
          uint64_t v30 = *((void *)a1 + 4);
          uint64_t v31 = a1[10];
          a1[10] = v31 + 1;
          *(void *)(v30 + 8 * v31) = v29;
        }

        else
        {
          uint64_t v28 = *((void *)a1 + 4);
          a1[10] = v27 + 1;
          int v29 = *(char **)(v28 + 8 * v27);
        }

        int v32 = (char *)*((void *)this + 1);
        if ((unint64_t)v32 >= *((void *)this + 2) || *v32 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v42)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v42 = *v32;
          *((void *)this + 1) = v32 + 1;
        }

        int v33 = *((_DWORD *)this + 14);
        int v34 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v33 + 1;
        if (v33 >= v34) {
          return 0LL;
        }
        int v35 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v42);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v35);
        int v37 = *((_DWORD *)this + 14);
        BOOL v22 = __OFSUB__(v37, 1);
        int v38 = v37 - 1;
        if (v38 < 0 == v22) {
          *((_DWORD *)this + 14) = v38;
        }
        BOOL v24 = (_BYTE *)*((void *)this + 1);
        int v39 = (_BYTE *)*((void *)this + 2);
        if (v24 >= v39 || *v24 != 18) {
          break;
        }
LABEL_34:
        *((void *)this + 1) = v24 + 1;
      }

      if (v24 == v39 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }

    int v9 = TagFallback & 7;
LABEL_30:
    if (v9 == 4) {
      return 1LL;
    }
  }

uint64_t sub_1001E0260( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(int *)(result + 16) >= 1)
  {
    uint64_t v6 = 0LL;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(void *)(*(void *)(v5 + 8) + 8 * v6++),  a2,  a4);
    while (v6 < *(int *)(v5 + 16));
  }

  if (*(int *)(v5 + 40) >= 1)
  {
    uint64_t v7 = 0LL;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(void *)(*(void *)(v5 + 32) + 8 * v7++),  a2,  a4);
    while (v7 < *(int *)(v5 + 40));
  }

  return result;
}

uint64_t sub_1001E02F0(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 16);
  if (v3 >= 1)
  {
    uint64_t v4 = 0LL;
    do
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001D78C0( *(void *)(*(void *)(a1 + 8) + 8 * v4),  a2);
      int v6 = (int)v5;
      else {
        int v7 = 1;
      }
      v3 += v6 + v7;
      ++v4;
    }

    while (v4 < *(int *)(a1 + 16));
  }

  int v8 = *(_DWORD *)(a1 + 40);
  uint64_t v9 = (v8 + v3);
  if (v8 >= 1)
  {
    uint64_t v10 = 0LL;
    do
    {
      uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001DC634( *(void *)(*(void *)(a1 + 32) + 8 * v10),  a2);
      int v12 = (int)v11;
      else {
        int v13 = 1;
      }
      uint64_t v9 = (v12 + v9 + v13);
      ++v10;
    }

    while (v10 < *(int *)(a1 + 40));
  }

  *(_DWORD *)(a1 + 56) = v9;
  return v9;
}

void sub_1001E03C0(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1001E040C()
{
  return 1LL;
}

void *sub_1001E0414@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.BatchedLocations");
}

void sub_1001E0424(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v12,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  9199LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v12,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 28);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 28) & 1) != 0)
    {
      unsigned int v6 = *(_DWORD *)(a2 + 8);
      if (v6 >= 3) {
        sub_10122FC84();
      }
      *(_DWORD *)(a1 + 28) |= 1u;
      *(_DWORD *)(a1 + 8) = v6;
      int v5 = *(_DWORD *)(a2 + 28);
    }

    if ((v5 & 2) != 0)
    {
      char v7 = *(_BYTE *)(a2 + 16);
      *(_DWORD *)(a1 + 28) |= 2u;
      *(_BYTE *)(a1 + 16) = v7;
      int v5 = *(_DWORD *)(a2 + 28);
    }

    if ((v5 & 4) != 0)
    {
      unsigned int v8 = *(_DWORD *)(a2 + 12);
      if (v8 >= 5) {
        sub_10122FC5C();
      }
      *(_DWORD *)(a1 + 28) |= 4u;
      *(_DWORD *)(a1 + 12) = v8;
      int v5 = *(_DWORD *)(a2 + 28);
    }

    if ((v5 & 8) != 0)
    {
      int v9 = *(_DWORD *)(a2 + 20);
      *(_DWORD *)(a1 + 28) |= 8u;
      *(_DWORD *)(a1 + 20) = v9;
      int v5 = *(_DWORD *)(a2 + 28);
    }

    if ((v5 & 0x10) != 0)
    {
      char v10 = *(_BYTE *)(a2 + 17);
      *(_DWORD *)(a1 + 28) |= 0x10u;
      *(_BYTE *)(a1 + 17) = v10;
    }
  }

void sub_1001E0538(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001E0550(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101828558;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001E0560(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101828558;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

uint64_t sub_1001E0580(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0BE8;
  if (!qword_1019A0BE8)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0BE8;
  }

  return result;
}

double sub_1001E05AC()
{
  unsigned __int8 v0 = operator new(0x20uLL);
  *(void *)unsigned __int8 v0 = off_101828558;
  v0[8] = 0;
  double result = COERCE_DOUBLE(&_mh_execute_header);
  *((void *)v0 + 1) = &_mh_execute_header;
  *((void *)v0 + 3) = 0LL;
  *((_DWORD *)v0 + 5) = 0;
  return result;
}

uint64_t sub_1001E05E8(uint64_t result)
{
  if (*(_BYTE *)(result + 28))
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)(result + 8) = &_mh_execute_header;
    *(_DWORD *)(result + 20) = 0;
  }

  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_1001E060C( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 20);
  while (2)
  {
    unsigned int v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 < *((void *)this + 2) && (*v9 & 0x80000000) == 0)
        {
          unsigned int v10 = *v9;
          *((void *)this + 1) = v9 + 1;
          goto LABEL_26;
        }

        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26);
        if ((_DWORD)result)
        {
          unsigned int v10 = v26;
LABEL_26:
          if (v10 <= 2)
          {
            *(_DWORD *)(a1 + 28) |= 1u;
            *(_DWORD *)(a1 + 8) = v10;
          }

          int v17 = (_BYTE *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
          if ((unint64_t)v17 < v11 && *v17 == 16)
          {
            int v12 = v17 + 1;
            *((void *)this + 1) = v12;
            goto LABEL_31;
          }

          continue;
        }

        break;
      case 2u:
        int v8 = TagFallback & 7;
        int v12 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
LABEL_31:
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v18 = v26;
          int v19 = (_BYTE *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }

        else
        {
          unsigned int v18 = *v12;
          int v19 = v12 + 1;
          *((void *)this + 1) = v19;
        }

        *(_BYTE *)(a1 + 16) = v18 != 0;
        *(_DWORD *)(a1 + 28) |= 2u;
        int v13 = v19 + 1;
        *((void *)this + 1) = v13;
LABEL_39:
        if ((unint64_t)v13 >= v11 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v20 = v26;
        }

        else
        {
          unsigned int v20 = *v13;
          *((void *)this + 1) = v13 + 1;
        }

        if (v20 <= 4)
        {
          *(_DWORD *)(a1 + 28) |= 4u;
          *(_DWORD *)(a1 + 12) = v20;
        }

        int v21 = (_BYTE *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        uint64_t v15 = v21 + 1;
        *((void *)this + 1) = v15;
LABEL_49:
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result) {
            return result;
          }
          BOOL v22 = (_BYTE *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }

        else
        {
          *int v5 = *v15;
          BOOL v22 = v15 + 1;
          *((void *)this + 1) = v22;
        }

        *(_DWORD *)(a1 + 28) |= 8u;
        char v16 = v22 + 1;
        *((void *)this + 1) = v16;
LABEL_57:
        if ((unint64_t)v16 >= v14 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v23 = v26;
          BOOL v24 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }

        else
        {
          unsigned int v23 = *v16;
          BOOL v24 = (unsigned __int8 *)(v16 + 1);
          *((void *)this + 1) = v24;
        }

        *(_BYTE *)(a1 + 17) = v23 != 0;
        *(_DWORD *)(a1 + 28) |= 0x10u;
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        int v8 = TagFallback & 7;
        int v13 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_39;
      case 4u:
        int v8 = TagFallback & 7;
        uint64_t v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_49;
      case 5u:
        int v8 = TagFallback & 7;
        char v16 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_57;
      default:
        int v8 = TagFallback & 7;
LABEL_20:
        if (v8 == 4) {
          return 1LL;
        }
        return 0LL;
    }

    return result;
  }

uint64_t sub_1001E0944( uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(_DWORD *)(result + 8),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 28);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(unsigned __int8 *)(v5 + 16),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 28);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }

uint64_t sub_1001E09F4(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 28);
  if ((_BYTE)v3)
  {
    if ((*(_BYTE *)(a1 + 28) & 1) != 0)
    {
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if ((v6 & 0x80000000) != 0)
      {
        int v4 = 11;
      }

      else if (v6 >= 0x80)
      {
        int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 28);
      }

      else
      {
        int v4 = 2;
      }
    }

    else
    {
      int v4 = 0;
    }

    if ((v3 & 2) != 0) {
      unsigned int v7 = v4 + 2;
    }
    else {
      unsigned int v7 = v4;
    }
    if ((v3 & 4) != 0)
    {
      int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
      if ((v8 & 0x80000000) != 0)
      {
        int v9 = 11;
      }

      else if (v8 >= 0x80)
      {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 28);
      }

      else
      {
        int v9 = 2;
      }

      v7 += v9;
    }

    if ((v3 & 8) != 0)
    {
      unsigned int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
      if (v10 >= 0x80)
      {
        int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 28);
      }

      else
      {
        int v11 = 2;
      }

      v7 += v11;
    }

    if ((v3 & 0x10) != 0) {
      uint64_t result = v7 + 2;
    }
    else {
      uint64_t result = v7;
    }
  }

  else
  {
    uint64_t result = 0LL;
  }

  *(_DWORD *)(a1 + 24) = result;
  return result;
}

void sub_1001E0AD0(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1001E0B1C()
{
  return 1LL;
}

void *sub_1001E0B24@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.RhythmicGnssStatusUpdate");
}

void sub_1001E0B34(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v7,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  9380LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v7,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v6, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }

  if ((*(_BYTE *)(a2 + 16) & 1) != 0)
  {
    char v5 = *(_BYTE *)(a2 + 8);
    *(_DWORD *)(a1 + 16) |= 1u;
    *(_BYTE *)(a1 + 8) = v5;
  }

void sub_1001E0BBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001E0BD4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018285D0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001E0BE4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018285D0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

uint64_t sub_1001E0C04(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0BF0;
  if (!qword_1019A0BF0)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0BF0;
  }

  return result;
}

_BYTE *sub_1001E0C30()
{
  uint64_t result = operator new(0x18uLL);
  *(void *)uint64_t result = off_1018285D0;
  result[8] = 0;
  *((_DWORD *)result + 3) = 0;
  *((_DWORD *)result + 4) = 0;
  return result;
}

uint64_t sub_1001E0C5C(uint64_t result)
{
  if (*(_BYTE *)(result + 16)) {
    *(_BYTE *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1001E0C70( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      char v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      }

      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((void *)this + 1) = v5 + 1;
      }

      if ((_DWORD)TagFallback != 8) {
        break;
      }
      int v8 = (char *)*((void *)this + 1);
      unint64_t v7 = *((void *)this + 2);
      if ((unint64_t)v8 >= v7 || *v8 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v12);
        if (!(_DWORD)result) {
          return result;
        }
        unsigned int v9 = v12;
        unsigned int v10 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v7 = *((void *)this + 2);
      }

      else
      {
        unsigned int v9 = *v8;
        unsigned int v10 = (unsigned __int8 *)(v8 + 1);
        *((void *)this + 1) = v10;
      }

      *(_BYTE *)(a1 + 8) = v9 != 0;
      *(_DWORD *)(a1 + 16) |= 1u;
      if (v10 == (unsigned __int8 *)v7 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
  }

  return 1LL;
}

uint64_t sub_1001E0D88( uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if ((*(_BYTE *)(result + 16) & 1) != 0) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(unsigned __int8 *)(result + 8),  a2,  a4);
  }
  return result;
}

uint64_t sub_1001E0DA4(uint64_t a1)
{
  else {
    uint64_t v1 = 0LL;
  }
  *(_DWORD *)(a1 + 12) = v1;
  return v1;
}

void sub_1001E0DC0(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1001E0E0C()
{
  return 1LL;
}

void *sub_1001E0E14@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.RhythmicStreamingControl");
}

void sub_1001E0E24(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v25,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  10130LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v25,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v24, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v25);
  }

  int v5 = *(_DWORD *)(a2 + 92);
  if (!(_BYTE)v5) {
    goto LABEL_21;
  }
  if ((v5 & 1) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 8);
    if ((sub_1001D2F60(v6) & 1) == 0) {
      sub_10122FDC4();
    }
    *(_DWORD *)(a1 + 92) |= 1u;
    *(_DWORD *)(a1 + 8) = v6;
    int v5 = *(_DWORD *)(a2 + 92);
  }

  if ((v5 & 2) != 0)
  {
    unsigned int v7 = *(_DWORD *)(a2 + 12);
    if (v7 >= 4) {
      sub_10122FD9C();
    }
    *(_DWORD *)(a1 + 92) |= 2u;
    *(_DWORD *)(a1 + 12) = v7;
    int v5 = *(_DWORD *)(a2 + 92);
  }

  if ((v5 & 4) != 0)
  {
    unsigned int v8 = *(_DWORD *)(a2 + 16);
    if (v8 >= 3) {
      sub_10122FD74();
    }
    *(_DWORD *)(a1 + 92) |= 4u;
    *(_DWORD *)(a1 + 16) = v8;
    int v5 = *(_DWORD *)(a2 + 92);
  }

  if ((v5 & 8) != 0)
  {
    unsigned int v9 = *(_DWORD *)(a2 + 20);
    if (v9 >= 4) {
      sub_10122FD4C();
    }
    *(_DWORD *)(a1 + 92) |= 8u;
    *(_DWORD *)(a1 + 20) = v9;
    int v5 = *(_DWORD *)(a2 + 92);
  }

  if ((v5 & 0x10) == 0)
  {
    if ((v5 & 0x20) == 0) {
      goto LABEL_18;
    }
LABEL_53:
    int v22 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 92) |= 0x20u;
    *(_DWORD *)(a1 + 24) = v22;
    int v5 = *(_DWORD *)(a2 + 92);
    if ((v5 & 0x40) == 0)
    {
LABEL_19:
      if ((v5 & 0x80) == 0) {
        goto LABEL_21;
      }
      goto LABEL_20;
    }

    goto LABEL_54;
  }

  char v21 = *(_BYTE *)(a2 + 28);
  *(_DWORD *)(a1 + 92) |= 0x10u;
  *(_BYTE *)(a1 + 28) = v21;
  int v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 0x20) != 0) {
    goto LABEL_53;
  }
LABEL_18:
  if ((v5 & 0x40) == 0) {
    goto LABEL_19;
  }
LABEL_54:
  uint64_t v23 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 92) |= 0x40u;
  *(void *)(a1 + 32) = v23;
  int v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 0x80) != 0)
  {
LABEL_20:
    char v10 = *(_BYTE *)(a2 + 29);
    *(_DWORD *)(a1 + 92) |= 0x80u;
    *(_BYTE *)(a1 + 29) = v10;
    int v5 = *(_DWORD *)(a2 + 92);
  }

void sub_1001E1174(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void *sub_1001E118C(void *result)
{
  if ((void *)qword_1019A0BF8 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[8];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    uint64_t result = (void *)v1[10];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_1001E11E8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101828648;
  sub_1001E118C(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001E1218(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101828648;
  sub_1001E118C(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v2);
}

uint64_t sub_1001E124C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0BF8;
  if (!qword_1019A0BF8)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0BF8;
  }

  return result;
}

double sub_1001E1278()
{
  unsigned __int8 v0 = operator new(0x60uLL);
  v0[1] = 0LL;
  v0[2] = 0LL;
  void *v0 = off_101828648;
  *(void *)((char *)v0 + 22) = 0LL;
  double result = 0.0;
  *((_OWORD *)v0 + 2) = 0u;
  *((_OWORD *)v0 + 3) = 0u;
  *((_OWORD *)v0 + 4) = 0u;
  *((_OWORD *)v0 + 5) = 0u;
  return result;
}

uint64_t sub_1001E12B0(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 92);
  if ((_BYTE)v1)
  {
    *(void *)(result + 32) = 0LL;
    *(void *)(result + 8) = 0LL;
    *(void *)(result + 16) = 0LL;
    *(void *)(result + 22) = 0LL;
  }

  if ((v1 & 0xFF00) != 0)
  {
    *(_DWORD *)(result + 72) = 0;
    *(void *)(result + 48) = 0LL;
    *(void *)(result + 56) = 0LL;
    *(void *)(result + 40) = 0LL;
    if ((v1 & 0x2000) != 0)
    {
      uint64_t v2 = *(void *)(result + 64);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 36))
        {
          *(void *)(v2 + 8) = 0LL;
          *(void *)(v2 + 16) = 0LL;
          *(void *)(v2 + 24) = 0LL;
        }

        *(_DWORD *)(v2 + 36) = 0;
        int v1 = *(_DWORD *)(result + 92);
      }
    }

    if ((v1 & 0x4000) != 0)
    {
      uint64_t v3 = *(void *)(result + 80);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0LL;
          *(void *)(v3 + 16) = 0LL;
          *(void *)(v3 + 24) = 0LL;
        }

        *(_DWORD *)(v3 + 36) = 0;
      }
    }

    *(_DWORD *)(result + 76) = 0;
  }

  *(_DWORD *)(result + 92) = 0;
  return result;
}

uint64_t sub_1001E132C( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        unsigned int v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v69);
          if (!(_DWORD)result) {
            return result;
          }
          int v9 = v69[0];
        }

        else
        {
          int v9 = *v8;
          *((void *)this + 1) = v8 + 1;
        }

        if (sub_1001D2F60(v9))
        {
          *(_DWORD *)(a1 + 92) |= 1u;
          *(_DWORD *)(a1 + 8) = v9;
        }

        uint64_t v28 = (_BYTE *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v28 < v10 && *v28 == 16)
        {
          unsigned int v11 = v28 + 1;
          *((void *)this + 1) = v11;
          goto LABEL_52;
        }

        continue;
      case 2u:
        int v7 = TagFallback & 7;
        unsigned int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_52:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v69);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v29 = v69[0];
        }

        else
        {
          unsigned int v29 = *v11;
          *((void *)this + 1) = v11 + 1;
        }

        if (v29 <= 3)
        {
          *(_DWORD *)(a1 + 92) |= 2u;
          *(_DWORD *)(a1 + 12) = v29;
        }

        uint64_t v30 = (_BYTE *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        uint64_t v13 = v30 + 1;
        *((void *)this + 1) = v13;
LABEL_62:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v69);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v31 = v69[0];
        }

        else
        {
          unsigned int v31 = *v13;
          *((void *)this + 1) = v13 + 1;
        }

        if (v31 <= 2)
        {
          *(_DWORD *)(a1 + 92) |= 4u;
          *(_DWORD *)(a1 + 16) = v31;
        }

        int v32 = (_BYTE *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        unsigned int v15 = v32 + 1;
        *((void *)this + 1) = v15;
LABEL_72:
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v69);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v33 = v69[0];
        }

        else
        {
          unsigned int v33 = *v15;
          *((void *)this + 1) = v15 + 1;
        }

        if (v33 <= 3)
        {
          *(_DWORD *)(a1 + 92) |= 8u;
          *(_DWORD *)(a1 + 20) = v33;
        }

        int v34 = (_BYTE *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        uint64_t v17 = v34 + 1;
        *((void *)this + 1) = v17;
LABEL_82:
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v69);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v35 = v69[0];
          unsigned int v36 = (_BYTE *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }

        else
        {
          unsigned int v35 = *v17;
          unsigned int v36 = v17 + 1;
          *((void *)this + 1) = v36;
        }

        *(_BYTE *)(a1 + 28) = v35 != 0;
        *(_DWORD *)(a1 + 92) |= 0x10u;
        *((void *)this + 1) = v36 + 1;
LABEL_90:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v69) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 24) = v69[0];
        *(_DWORD *)(a1 + 92) |= 0x20u;
        int v37 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v37 + 1;
LABEL_94:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v69) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 32) = *(void *)v69;
        *(_DWORD *)(a1 + 92) |= 0x40u;
        int v38 = (_BYTE *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        uint64_t v19 = v38 + 1;
        *((void *)this + 1) = v19;
LABEL_98:
        if ((unint64_t)v19 >= v18 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v69);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v39 = v69[0];
          uint64_t v40 = (_BYTE *)*((void *)this + 1);
          unint64_t v18 = *((void *)this + 2);
        }

        else
        {
          unsigned int v39 = *v19;
          uint64_t v40 = v19 + 1;
          *((void *)this + 1) = v40;
        }

        *(_BYTE *)(a1 + 29) = v39 != 0;
        *(_DWORD *)(a1 + 92) |= 0x80u;
        unsigned int v20 = v40 + 1;
        *((void *)this + 1) = v20;
LABEL_106:
        if ((unint64_t)v20 >= v18 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v69);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v41 = v69[0];
        }

        else
        {
          unsigned int v41 = *v20;
          *((void *)this + 1) = v20 + 1;
        }

        if (v41 <= 3)
        {
          *(_DWORD *)(a1 + 92) |= 0x100u;
          *(_DWORD *)(a1 + 48) = v41;
        }

        unsigned int v42 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v42 + 1;
LABEL_116:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v69) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 40) = *(void *)v69;
        *(_DWORD *)(a1 + 92) |= 0x200u;
        int v43 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v43 + 1;
LABEL_120:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v69) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 56) = *(void *)v69;
        *(_DWORD *)(a1 + 92) |= 0x400u;
        unsigned int v44 = (_BYTE *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        int v22 = v44 + 1;
        *((void *)this + 1) = v22;
LABEL_124:
        if ((unint64_t)v22 >= v21 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v69);
          if (!(_DWORD)result) {
            return result;
          }
          int v45 = v69[0];
        }

        else
        {
          int v45 = *v22;
          *((void *)this + 1) = v22 + 1;
        }

        if (sub_1001D2F60(v45))
        {
          *(_DWORD *)(a1 + 92) |= 0x800u;
          *(_DWORD *)(a1 + 52) = v45;
        }

        int v46 = (_BYTE *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        char v24 = v46 + 1;
        *((void *)this + 1) = v24;
LABEL_134:
        if ((unint64_t)v24 >= v23 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v69);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v47 = v69[0];
        }

        else
        {
          unsigned int v47 = *v24;
          *((void *)this + 1) = v24 + 1;
        }

        if (v47 <= 3)
        {
          *(_DWORD *)(a1 + 92) |= 0x1000u;
          *(_DWORD *)(a1 + 72) = v47;
        }

        int v48 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v48 + 1;
LABEL_144:
        *(_DWORD *)(a1 + 92) |= 0x2000u;
        uint64_t v49 = *(char **)(a1 + 64);
        if (!v49)
        {
          uint64_t v49 = (char *)operator new(0x28uLL);
          *(void *)uint64_t v49 = off_101827B80;
          *(_OWORD *)(v49 + 8) = 0u;
          *(_OWORD *)(v49 + 24) = 0u;
          *(void *)(a1 + 64) = v49;
        }

        int v50 = (char *)*((void *)this + 1);
        if ((unint64_t)v50 >= *((void *)this + 2) || *v50 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v69)) {
            return 0LL;
          }
        }

        else
        {
          v69[0] = *v50;
          *((void *)this + 1) = v50 + 1;
        }

        int v51 = *((_DWORD *)this + 14);
        int v52 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v51 + 1;
        if (v51 >= v52) {
          return 0LL;
        }
        int v53 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v69[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v53);
        int v55 = *((_DWORD *)this + 14);
        BOOL v56 = __OFSUB__(v55, 1);
        int v57 = v55 - 1;
        if (v57 < 0 == v56) {
          *((_DWORD *)this + 14) = v57;
        }
        int v58 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v58 + 1;
LABEL_158:
        *(_DWORD *)(a1 + 92) |= 0x4000u;
        unsigned int v59 = *(char **)(a1 + 80);
        if (!v59)
        {
          unsigned int v59 = (char *)operator new(0x28uLL);
          *(void *)unsigned int v59 = off_101827B80;
          *(_OWORD *)(v59 + 8) = 0u;
          *(_OWORD *)(v59 + 24) = 0u;
          *(void *)(a1 + 80) = v59;
        }

        unsigned int v60 = (char *)*((void *)this + 1);
        if ((unint64_t)v60 >= *((void *)this + 2) || *v60 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v69)) {
            return 0LL;
          }
        }

        else
        {
          v69[0] = *v60;
          *((void *)this + 1) = v60 + 1;
        }

        int v61 = *((_DWORD *)this + 14);
        int v62 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v61 + 1;
        if (v61 < v62)
        {
          int v63 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v69[0]);
          if (sub_1001D33C8((uint64_t)v59, this, v64))
          {
            if (*((_BYTE *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v63);
              int v65 = *((_DWORD *)this + 14);
              BOOL v56 = __OFSUB__(v65, 1);
              int v66 = v65 - 1;
              if (v66 < 0 == v56) {
                *((_DWORD *)this + 14) = v66;
              }
              unsigned int v67 = (unsigned __int8 *)*((void *)this + 1);
              unint64_t v25 = *((void *)this + 2);
              if ((int)v25 - (int)v67 > 1 && *v67 == 128 && v67[1] == 1)
              {
                unsigned int v26 = (char *)(v67 + 2);
                *((void *)this + 1) = v26;
LABEL_173:
                if ((unint64_t)v26 >= v25 || *v26 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v69);
                  if (!(_DWORD)result) {
                    return result;
                  }
                  unsigned int v68 = v69[0];
                }

                else
                {
                  unsigned int v68 = *v26;
                  *((void *)this + 1) = v26 + 1;
                }

                if (v68 <= 5)
                {
                  *(_DWORD *)(a1 + 92) |= 0x8000u;
                  *(_DWORD *)(a1 + 76) = v68;
                }

                if (*((void *)this + 1) == *((void *)this + 2)
                  && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                {
                  *((_DWORD *)this + 8) = 0;
                  uint64_t result = 1LL;
                  *((_BYTE *)this + 36) = 1;
                  return result;
                }
              }

              continue;
            }
          }
        }

        return 0LL;
      case 3u:
        int v7 = TagFallback & 7;
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_62;
      case 4u:
        int v7 = TagFallback & 7;
        unsigned int v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_72;
      case 5u:
        int v7 = TagFallback & 7;
        uint64_t v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_82;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_90;
        }
        goto LABEL_41;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_94;
        }
        goto LABEL_41;
      case 8u:
        int v7 = TagFallback & 7;
        uint64_t v19 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_98;
      case 9u:
        int v7 = TagFallback & 7;
        unsigned int v20 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_106;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_116;
        }
        goto LABEL_41;
      case 0xBu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_120;
        }
        goto LABEL_41;
      case 0xCu:
        int v7 = TagFallback & 7;
        int v22 = (char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        goto LABEL_124;
      case 0xDu:
        int v7 = TagFallback & 7;
        char v24 = (char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        goto LABEL_134;
      case 0xEu:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_144;
        }
        goto LABEL_41;
      case 0xFu:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_158;
        }
        goto LABEL_41;
      case 0x10u:
        int v7 = TagFallback & 7;
        unsigned int v26 = (char *)*((void *)this + 1);
        unint64_t v25 = *((void *)this + 2);
        goto LABEL_173;
      default:
        int v7 = TagFallback & 7;
LABEL_41:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001E1C38( uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 92);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(_DWORD *)(result + 8),  (int)a2,  a4);
    int v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(_DWORD *)(v5 + 12),  (int)a2,  a4);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }

uint64_t sub_1001E1E3C(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 92);
  if (!(_BYTE)v3)
  {
    uint64_t v5 = 0LL;
    goto LABEL_42;
  }

  if ((v3 & 1) == 0)
  {
    int v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }

  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
  if ((v6 & 0x80000000) != 0)
  {
    int v7 = 10;
  }

  else if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
    int v3 = *(_DWORD *)(a1 + 92);
  }

  else
  {
    int v7 = 1;
  }

  int v4 = v7 + 1;
  if ((v3 & 2) != 0)
  {
LABEL_12:
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if ((v8 & 0x80000000) != 0)
    {
      int v9 = 10;
    }

    else if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2);
      int v3 = *(_DWORD *)(a1 + 92);
    }

    else
    {
      int v9 = 1;
    }

    v4 += v9 + 1;
  }

void sub_1001E2134(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1001E2180()
{
  return 1LL;
}

void *sub_1001E2188@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.MotionActivity");
}

void sub_1001E2198(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v12,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  10437LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v12,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    {
      *(_DWORD *)(a1 + 32) |= 1u;
      int v6 = *(char **)(a1 + 8);
      if (!v6)
      {
        int v6 = (char *)operator new(0x28uLL);
        *(void *)int v6 = off_101827B80;
        *(_OWORD *)(v6 + 8) = 0u;
        *(_OWORD *)(v6 + 24) = 0u;
        *(void *)(a1 + 8) = v6;
      }

      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_1019A0C00 + 8);
      }
      sub_1001D323C((uint64_t)v6, v7);
      int v5 = *(_DWORD *)(a2 + 32);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return;
        }
        goto LABEL_14;
      }
    }

    else if ((*(_BYTE *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }

    int v8 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(_DWORD *)(a1 + 24) = v8;
    if ((*(_DWORD *)(a2 + 32) & 4) == 0) {
      return;
    }
LABEL_14:
    *(_DWORD *)(a1 + 32) |= 4u;
    int v9 = *(void **)(a1 + 16);
    if (!v9)
    {
      int v9 = operator new(0x60uLL);
      v9[1] = 0LL;
      v9[2] = 0LL;
      *int v9 = off_101828648;
      *(void *)((char *)v9 + 22) = 0LL;
      *((_OWORD *)v9 + 2) = 0u;
      *((_OWORD *)v9 + 3) = 0u;
      *((_OWORD *)v9 + 4) = 0u;
      *((_OWORD *)v9 + 5) = 0u;
      *(void *)(a1 + 16) = v9;
    }

    uint64_t v10 = *(void *)(a2 + 16);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_1019A0C00 + 16);
    }
    sub_1001E0E24((uint64_t)v9, v10);
  }

void sub_1001E22E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void *sub_1001E2300(void *result)
{
  if ((void *)qword_1019A0C00 != result)
  {
    int v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    uint64_t result = (void *)v1[2];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_1001E235C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018286C0;
  sub_1001E2300(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001E238C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018286C0;
  sub_1001E2300(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v2);
}

uint64_t sub_1001E23C0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0C00;
  if (!qword_1019A0C00)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0C00;
  }

  return result;
}

void *sub_1001E23EC()
{
  uint64_t result = operator new(0x28uLL);
  *uint64_t result = off_1018286C0;
  result[1] = 0LL;
  result[2] = 0LL;
  result[3] = 0LL;
  *((_DWORD *)result + 8) = 0;
  return result;
}

uint64_t sub_1001E2418(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(_BYTE *)(result + 32);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(result + 32) & 1) != 0)
    {
      uint64_t v3 = *(void *)(result + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0LL;
          *(void *)(v3 + 16) = 0LL;
          *(void *)(v3 + 24) = 0LL;
        }

        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(result + 32);
      }
    }

    *(_DWORD *)(result + 24) = 0;
    if ((v2 & 4) != 0)
    {
      uint64_t result = *(void *)(result + 16);
      if (result) {
        uint64_t result = sub_1001E12B0(result);
      }
    }
  }

  *(_DWORD *)(v1 + 32) = 0;
  return result;
}

uint64_t sub_1001E2478( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    do
    {
      while (1)
      {
        while (1)
        {
          int v5 = (char *)*((void *)this + 1);
          if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
          {
            TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = (_DWORD)TagFallback;
            if (!(_DWORD)TagFallback) {
              return 1LL;
            }
          }

          else
          {
            TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
            *((_DWORD *)this + 8) = (_DWORD)TagFallback;
            *((void *)this + 1) = v5 + 1;
            if (!(_DWORD)TagFallback) {
              return 1LL;
            }
          }

          unsigned int v7 = TagFallback >> 3;
          int v8 = TagFallback & 7;
          if (v8 != 2) {
            goto LABEL_20;
          }
          *(_DWORD *)(a1 + 32) |= 1u;
          uint64_t v10 = *(char **)(a1 + 8);
          if (!v10)
          {
            uint64_t v10 = (char *)operator new(0x28uLL);
            *(void *)uint64_t v10 = off_101827B80;
            *(_OWORD *)(v10 + 8) = 0u;
            *(_OWORD *)(v10 + 24) = 0u;
            *(void *)(a1 + 8) = v10;
          }

          char v11 = (char *)*((void *)this + 1);
          if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v34)) {
              return 0LL;
            }
          }

          else
          {
            unsigned int v34 = *v11;
            *((void *)this + 1) = v11 + 1;
          }

          int v14 = *((_DWORD *)this + 14);
          int v15 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v14 + 1;
          if (v14 >= v15) {
            return 0LL;
          }
          int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34);
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
          int v18 = *((_DWORD *)this + 14);
          BOOL v19 = __OFSUB__(v18, 1);
          int v20 = v18 - 1;
          if (v20 < 0 == v19) {
            *((_DWORD *)this + 14) = v20;
          }
          int v21 = (_BYTE *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          if ((unint64_t)v21 < v12 && *v21 == 16)
          {
            int v13 = v21 + 1;
            *((void *)this + 1) = v13;
            goto LABEL_32;
          }
        }

        if (v7 == 2) {
          break;
        }
        if (v7 == 3)
        {
          int v8 = TagFallback & 7;
          if (v8 == 2)
          {
            int v9 = *(_DWORD *)(a1 + 32);
            goto LABEL_40;
          }
        }

        else
        {
          int v8 = TagFallback & 7;
        }

uint64_t sub_1001E27B8( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_8:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(_DWORD *)(v5 + 24),  (int)a2,  a4);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0) {
      return result;
    }
    goto LABEL_9;
  }

  uint64_t v7 = *(void *)(result + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_1019A0C00 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_9:
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_1019A0C00 + 16);
  }
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  v8,  a2,  a4);
}

uint64_t sub_1001E2850(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 32);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0LL;
    goto LABEL_28;
  }

  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
  {
    uint64_t v5 = *(void *)(a1 + 8);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_1019A0C00 + 8);
    }
    int v6 = *(unsigned __int8 *)(v5 + 36);
    if (*(_BYTE *)(v5 + 36))
    {
      int v7 = (v6 << 31 >> 31) & 9;
      if ((v6 & 2) != 0) {
        v7 += 9;
      }
      if ((v6 & 4) != 0) {
        int v6 = v7 + 9;
      }
      else {
        int v6 = v7;
      }
    }

    *(_DWORD *)(v5 + 32) = v6;
    uint64_t v4 = (v6 + 2);
    int v3 = *(_DWORD *)(a1 + 32);
    if ((v3 & 2) == 0) {
      goto LABEL_21;
    }
  }

  else
  {
    uint64_t v4 = 0LL;
    if ((*(_BYTE *)(a1 + 32) & 2) == 0) {
      goto LABEL_21;
    }
  }

  uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if ((v8 & 0x80000000) != 0)
  {
    int v9 = 11;
  }

  else if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 32);
  }

  else
  {
    int v9 = 2;
  }

  uint64_t v4 = (v9 + v4);
LABEL_21:
  if ((v3 & 4) != 0)
  {
    uint64_t v10 = *(void *)(a1 + 16);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_1019A0C00 + 16);
    }
    char v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001E1E3C(v10, a2);
    int v13 = (int)v11;
    else {
      int v14 = 1;
    }
    uint64_t v4 = (v4 + v13 + v14 + 1);
  }

void sub_1001E2960(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1001E29AC()
{
  return 1LL;
}

void *sub_1001E29B4@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.MotionState");
}

void sub_1001E29C4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v12,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  10717LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v12,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 36) & 1) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 16);
      if ((sub_1001D2F60(v6) & 1) == 0) {
        sub_10122FE14();
      }
      *(_DWORD *)(a1 + 36) |= 1u;
      *(_DWORD *)(a1 + 16) = v6;
      int v5 = *(_DWORD *)(a2 + 36);
    }

    if ((v5 & 2) != 0)
    {
      uint64_t v7 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 36) |= 2u;
      *(void *)(a1 + 8) = v7;
      int v5 = *(_DWORD *)(a2 + 36);
      if ((v5 & 4) == 0)
      {
LABEL_9:
        if ((v5 & 8) == 0) {
          return;
        }
        goto LABEL_17;
      }
    }

    else if ((v5 & 4) == 0)
    {
      goto LABEL_9;
    }

    *(_DWORD *)(a1 + 36) |= 4u;
    uint64_t v8 = *(char **)(a1 + 24);
    if (!v8)
    {
      uint64_t v8 = (char *)operator new(0x28uLL);
      *(void *)uint64_t v8 = off_101827B80;
      *(_OWORD *)(v8 + 8) = 0u;
      *(_OWORD *)(v8 + 24) = 0u;
      *(void *)(a1 + 24) = v8;
    }

    uint64_t v9 = *(void *)(a2 + 24);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_1019A0C08 + 24);
    }
    sub_1001D323C((uint64_t)v8, v9);
    if ((*(_DWORD *)(a2 + 36) & 8) != 0)
    {
LABEL_17:
      int v10 = *(_DWORD *)(a2 + 20);
      if ((sub_1001D2F60(v10) & 1) == 0) {
        sub_10122FDEC();
      }
      *(_DWORD *)(a1 + 36) |= 8u;
      *(_DWORD *)(a1 + 20) = v10;
    }
  }

void sub_1001E2B14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001E2B2C(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_101828738;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0C08 != this)
  {
    uint64_t v2 = *((void *)this + 3);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1001E2B80(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

uint64_t sub_1001E2B94(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0C08;
  if (!qword_1019A0C08)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0C08;
  }

  return result;
}

double sub_1001E2BC0()
{
  unsigned __int8 v0 = (char *)operator new(0x28uLL);
  *(void *)unsigned __int8 v0 = &off_101828738;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  return result;
}

uint64_t sub_1001E2BF0(uint64_t result)
{
  char v1 = *(_BYTE *)(result + 36);
  if (v1)
  {
    *(_DWORD *)(result + 16) = 0;
    *(void *)(result + 8) = 0LL;
    if ((v1 & 4) != 0)
    {
      uint64_t v2 = *(void *)(result + 24);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 36))
        {
          *(void *)(v2 + 8) = 0LL;
          *(void *)(v2 + 16) = 0LL;
          *(void *)(v2 + 24) = 0LL;
        }

        *(_DWORD *)(v2 + 36) = 0;
      }
    }

    *(_DWORD *)(result + 20) = 0;
  }

  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_1001E2C2C( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        uint64_t v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v27);
          if (!(_DWORD)result) {
            return result;
          }
          int v9 = v27[0];
        }

        else
        {
          int v9 = *v8;
          *((void *)this + 1) = v8 + 1;
        }

        if (sub_1001D2F60(v9))
        {
          *(_DWORD *)(a1 + 36) |= 1u;
          *(_DWORD *)(a1 + 16) = v9;
        }

        int v14 = (_BYTE *)*((void *)this + 1);
        if ((unint64_t)v14 < *((void *)this + 2) && *v14 == 17)
        {
          *((void *)this + 1) = v14 + 1;
          goto LABEL_28;
        }

        continue;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_17;
        }
LABEL_28:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 8) = *(void *)v27;
        int v10 = *(_DWORD *)(a1 + 36) | 2;
        *(_DWORD *)(a1 + 36) = v10;
        int v15 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v15 + 1;
LABEL_32:
        *(_DWORD *)(a1 + 36) = v10 | 4;
        int v16 = *(char **)(a1 + 24);
        if (!v16)
        {
          int v16 = (char *)operator new(0x28uLL);
          *(void *)int v16 = off_101827B80;
          *(_OWORD *)(v16 + 8) = 0u;
          *(_OWORD *)(v16 + 24) = 0u;
          *(void *)(a1 + 24) = v16;
        }

        unsigned int v17 = (char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v27)) {
            return 0LL;
          }
        }

        else
        {
          v27[0] = *v17;
          *((void *)this + 1) = v17 + 1;
        }

        int v18 = *((_DWORD *)this + 14);
        int v19 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v18 + 1;
        if (v18 < v19)
        {
          int v20 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27[0]);
          if (sub_1001D33C8((uint64_t)v16, this, v21))
          {
            if (*((_BYTE *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v20);
              int v22 = *((_DWORD *)this + 14);
              BOOL v23 = __OFSUB__(v22, 1);
              int v24 = v22 - 1;
              if (v24 < 0 == v23) {
                *((_DWORD *)this + 14) = v24;
              }
              int v25 = (_BYTE *)*((void *)this + 1);
              unint64_t v11 = *((void *)this + 2);
              if ((unint64_t)v25 < v11 && *v25 == 32)
              {
                unsigned int v12 = v25 + 1;
                *((void *)this + 1) = v12;
LABEL_46:
                if ((unint64_t)v12 >= v11 || *v12 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v27);
                  if (!(_DWORD)result) {
                    return result;
                  }
                  int v26 = v27[0];
                }

                else
                {
                  int v26 = *v12;
                  *((void *)this + 1) = v12 + 1;
                }

                if (sub_1001D2F60(v26))
                {
                  *(_DWORD *)(a1 + 36) |= 8u;
                  *(_DWORD *)(a1 + 20) = v26;
                }

                if (*((void *)this + 1) == *((void *)this + 2)
                  && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                {
                  *((_DWORD *)this + 8) = 0;
                  uint64_t result = 1LL;
                  *((_BYTE *)this + 36) = 1;
                  return result;
                }
              }

              continue;
            }
          }
        }

        return 0LL;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_17;
        }
        int v10 = *(_DWORD *)(a1 + 36);
        goto LABEL_32;
      case 4u:
        int v7 = TagFallback & 7;
        unsigned int v12 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_46;
      default:
        int v7 = TagFallback & 7;
LABEL_17:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001E2F58( uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(_DWORD *)(result + 16),  (int)a2,  a4);
    int v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  (int)a2,  *(double *)(v5 + 8),  a3);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      return result;
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  *(_DWORD *)(v5 + 20),  (int)a2,  a4);
  }

uint64_t sub_1001E2FFC(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 36);
  if ((_BYTE)v3)
  {
    if ((*(_BYTE *)(a1 + 36) & 1) != 0)
    {
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
      if ((v6 & 0x80000000) != 0)
      {
        unsigned int v4 = 11;
      }

      else if (v6 >= 0x80)
      {
        unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 36);
      }

      else
      {
        unsigned int v4 = 2;
      }
    }

    else
    {
      unsigned int v4 = 0;
    }

    if ((v3 & 2) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 4) != 0)
    {
      uint64_t v7 = *(void *)(a1 + 24);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_1019A0C08 + 24);
      }
      int v8 = *(unsigned __int8 *)(v7 + 36);
      if (*(_BYTE *)(v7 + 36))
      {
        int v9 = (v8 << 31 >> 31) & 9;
        if ((v8 & 2) != 0) {
          v9 += 9;
        }
        if ((v8 & 4) != 0) {
          int v8 = v9 + 9;
        }
        else {
          int v8 = v9;
        }
      }

      *(_DWORD *)(v7 + 32) = v8;
      uint64_t v5 = (v5 + v8 + 2);
      int v3 = *(_DWORD *)(a1 + 36);
    }

    if ((v3 & 8) != 0)
    {
      int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
      if ((v10 & 0x80000000) != 0)
      {
        int v11 = 11;
      }

      else if (v10 >= 0x80)
      {
        int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
      }

      else
      {
        int v11 = 2;
      }

      uint64_t v5 = (v11 + v5);
    }
  }

  else
  {
    uint64_t v5 = 0LL;
  }

  *(_DWORD *)(a1 + 32) = v5;
  return v5;
}

void sub_1001E30F8(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1001E3144()
{
  return 1LL;
}

void *sub_1001E314C@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.WorkoutUpdate");
}

void sub_1001E315C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v12,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  10974LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v12,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    {
      *(_DWORD *)(a1 + 32) |= 1u;
      int v6 = *(char **)(a1 + 8);
      if (!v6)
      {
        int v6 = (char *)operator new(0x28uLL);
        *(void *)int v6 = off_101827B80;
        *(_OWORD *)(v6 + 8) = 0u;
        *(_OWORD *)(v6 + 24) = 0u;
        *(void *)(a1 + 8) = v6;
      }

      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_1019A0C10 + 8);
      }
      sub_1001D323C((uint64_t)v6, v7);
      int v5 = *(_DWORD *)(a2 + 32);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return;
        }
        goto LABEL_14;
      }
    }

    else if ((*(_BYTE *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }

    int v8 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(_DWORD *)(a1 + 24) = v8;
    if ((*(_DWORD *)(a2 + 32) & 4) == 0) {
      return;
    }
LABEL_14:
    *(_DWORD *)(a1 + 32) |= 4u;
    int v9 = *(char **)(a1 + 16);
    if (!v9)
    {
      int v9 = (char *)operator new(0x28uLL);
      *(void *)int v9 = &off_101828738;
      *(_OWORD *)(v9 + 8) = 0u;
      *(_OWORD *)(v9 + 24) = 0u;
      *(void *)(a1 + 16) = v9;
    }

    uint64_t v10 = *(void *)(a2 + 16);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_1019A0C10 + 16);
    }
    sub_1001E29C4((uint64_t)v9, v10);
  }

void sub_1001E32A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void *sub_1001E32BC(void *result)
{
  if ((void *)qword_1019A0C10 != result)
  {
    char v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    uint64_t result = (void *)v1[2];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_1001E3318(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018287B0;
  sub_1001E32BC(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001E3348(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018287B0;
  sub_1001E32BC(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v2);
}

uint64_t sub_1001E337C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0C10;
  if (!qword_1019A0C10)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0C10;
  }

  return result;
}

void *sub_1001E33A8()
{
  uint64_t result = operator new(0x28uLL);
  *uint64_t result = off_1018287B0;
  result[1] = 0LL;
  result[2] = 0LL;
  result[3] = 0LL;
  *((_DWORD *)result + 8) = 0;
  return result;
}

uint64_t sub_1001E33D4(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(_BYTE *)(result + 32);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(result + 32) & 1) != 0)
    {
      uint64_t v3 = *(void *)(result + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0LL;
          *(void *)(v3 + 16) = 0LL;
          *(void *)(v3 + 24) = 0LL;
        }

        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(result + 32);
      }
    }

    *(_DWORD *)(result + 24) = 0;
    if ((v2 & 4) != 0)
    {
      uint64_t result = *(void *)(result + 16);
      if (result) {
        uint64_t result = sub_1001E2BF0(result);
      }
    }
  }

  *(_DWORD *)(v1 + 32) = 0;
  return result;
}

uint64_t sub_1001E3434( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    do
    {
      while (1)
      {
        while (1)
        {
          int v5 = (char *)*((void *)this + 1);
          if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
          {
            TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = (_DWORD)TagFallback;
            if (!(_DWORD)TagFallback) {
              return 1LL;
            }
          }

          else
          {
            TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
            *((_DWORD *)this + 8) = (_DWORD)TagFallback;
            *((void *)this + 1) = v5 + 1;
            if (!(_DWORD)TagFallback) {
              return 1LL;
            }
          }

          unsigned int v7 = TagFallback >> 3;
          int v8 = TagFallback & 7;
          if (v8 != 2) {
            goto LABEL_20;
          }
          *(_DWORD *)(a1 + 32) |= 1u;
          uint64_t v10 = *(char **)(a1 + 8);
          if (!v10)
          {
            uint64_t v10 = (char *)operator new(0x28uLL);
            *(void *)uint64_t v10 = off_101827B80;
            *(_OWORD *)(v10 + 8) = 0u;
            *(_OWORD *)(v10 + 24) = 0u;
            *(void *)(a1 + 8) = v10;
          }

          char v11 = (char *)*((void *)this + 1);
          if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v34)) {
              return 0LL;
            }
          }

          else
          {
            unsigned int v34 = *v11;
            *((void *)this + 1) = v11 + 1;
          }

          int v14 = *((_DWORD *)this + 14);
          int v15 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v14 + 1;
          if (v14 >= v15) {
            return 0LL;
          }
          int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34);
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
          int v18 = *((_DWORD *)this + 14);
          BOOL v19 = __OFSUB__(v18, 1);
          int v20 = v18 - 1;
          if (v20 < 0 == v19) {
            *((_DWORD *)this + 14) = v20;
          }
          unsigned int v21 = (_BYTE *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          if ((unint64_t)v21 < v12 && *v21 == 16)
          {
            int v13 = v21 + 1;
            *((void *)this + 1) = v13;
            goto LABEL_32;
          }
        }

        if (v7 == 2) {
          break;
        }
        if (v7 == 3)
        {
          int v8 = TagFallback & 7;
          if (v8 == 2)
          {
            int v9 = *(_DWORD *)(a1 + 32);
            goto LABEL_40;
          }
        }

        else
        {
          int v8 = TagFallback & 7;
        }

uint64_t sub_1001E376C( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_8:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(_DWORD *)(v5 + 24),  (int)a2,  a4);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0) {
      return result;
    }
    goto LABEL_9;
  }

  uint64_t v7 = *(void *)(result + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_1019A0C10 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_9:
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_1019A0C10 + 16);
  }
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  v8,  a2,  a4);
}

uint64_t sub_1001E3804(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 32);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0LL;
    goto LABEL_28;
  }

  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
  {
    uint64_t v5 = *(void *)(a1 + 8);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_1019A0C10 + 8);
    }
    int v6 = *(unsigned __int8 *)(v5 + 36);
    if (*(_BYTE *)(v5 + 36))
    {
      int v7 = (v6 << 31 >> 31) & 9;
      if ((v6 & 2) != 0) {
        v7 += 9;
      }
      if ((v6 & 4) != 0) {
        int v6 = v7 + 9;
      }
      else {
        int v6 = v7;
      }
    }

    *(_DWORD *)(v5 + 32) = v6;
    uint64_t v4 = (v6 + 2);
    int v3 = *(_DWORD *)(a1 + 32);
    if ((v3 & 2) == 0) {
      goto LABEL_21;
    }
  }

  else
  {
    uint64_t v4 = 0LL;
    if ((*(_BYTE *)(a1 + 32) & 2) == 0) {
      goto LABEL_21;
    }
  }

  uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if ((v8 & 0x80000000) != 0)
  {
    int v9 = 11;
  }

  else if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 32);
  }

  else
  {
    int v9 = 2;
  }

  uint64_t v4 = (v9 + v4);
LABEL_21:
  if ((v3 & 4) != 0)
  {
    uint64_t v10 = *(void *)(a1 + 16);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_1019A0C10 + 16);
    }
    char v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001E2FFC(v10, a2);
    int v13 = (int)v11;
    else {
      int v14 = 1;
    }
    uint64_t v4 = (v4 + v13 + v14 + 1);
  }

void sub_1001E3914(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1001E3960()
{
  return 1LL;
}

void *sub_1001E3968@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.MotionStateObserver");
}

BOOL sub_1001E3978(unsigned int a1)
{
  return a1 < 0x43;
}

void sub_1001E3984(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v14,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  11483LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v14,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v13, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 40);
  if (!(_BYTE)v5) {
    return;
  }
  if ((*(_BYTE *)(a2 + 40) & 1) != 0)
  {
    int v6 = *(const std::string **)(a2 + 8);
    *(_DWORD *)(a1 + 40) |= 1u;
    int v7 = *(std::string **)(a1 + 8);
    if (v7 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      int v7 = (std::string *)operator new(0x18uLL);
      v7->__r_.__value_.__l.__size_ = 0LL;
      v7->__r_.__value_.__l.__cap_ = 0LL;
      v7->__r_.__value_.__r.__words[0] = 0LL;
      *(void *)(a1 + 8) = v7;
    }

    std::string::operator=(v7, v6);
    int v5 = *(_DWORD *)(a2 + 40);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
LABEL_16:
      unsigned int v10 = *(_DWORD *)(a2 + 24);
      if (v10 >= 0x43) {
        sub_10122FE8C();
      }
      *(_DWORD *)(a1 + 40) |= 4u;
      *(_DWORD *)(a1 + 24) = v10;
      int v5 = *(_DWORD *)(a2 + 40);
      if ((v5 & 8) == 0)
      {
LABEL_8:
        if ((v5 & 0x10) == 0) {
          return;
        }
        goto LABEL_20;
      }

      goto LABEL_18;
    }
  }

  else if ((*(_BYTE *)(a2 + 40) & 2) == 0)
  {
    goto LABEL_6;
  }

  uint64_t v8 = *(const std::string **)(a2 + 16);
  *(_DWORD *)(a1 + 40) |= 2u;
  int v9 = *(std::string **)(a1 + 16);
  if (v9 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    int v9 = (std::string *)operator new(0x18uLL);
    v9->__r_.__value_.__l.__size_ = 0LL;
    v9->__r_.__value_.__l.__cap_ = 0LL;
    v9->__r_.__value_.__r.__words[0] = 0LL;
    *(void *)(a1 + 16) = v9;
  }

  std::string::operator=(v9, v8);
  int v5 = *(_DWORD *)(a2 + 40);
  if ((v5 & 4) != 0) {
    goto LABEL_16;
  }
LABEL_7:
  if ((v5 & 8) == 0) {
    goto LABEL_8;
  }
LABEL_18:
  unsigned int v11 = *(_DWORD *)(a2 + 28);
  if (v11 >= 5) {
    sub_10122FE64();
  }
  *(_DWORD *)(a1 + 40) |= 8u;
  *(_DWORD *)(a1 + 28) = v11;
  if ((*(_DWORD *)(a2 + 40) & 0x10) != 0)
  {
LABEL_20:
    unsigned int v12 = *(_DWORD *)(a2 + 32);
    if (v12 >= 3) {
      sub_10122FE3C();
    }
    *(_DWORD *)(a1 + 40) |= 0x10u;
    *(_DWORD *)(a1 + 32) = v12;
  }

void sub_1001E3B10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001E3B28(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101828828;
  sub_10007A578((uint64_t)a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001E3B58(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101828828;
  sub_10007A578((uint64_t)a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v2);
}

void *sub_1001E3B8C()
{
  uint64_t result = operator new(0x30uLL);
  *uint64_t result = off_101828828;
  result[1] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  result[2] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  result[3] = 0LL;
  result[4] = 0LL;
  *((_DWORD *)result + 10) = 0;
  return result;
}

uint64_t sub_1001E3BC4(uint64_t result)
{
  if (*(_BYTE *)(result + 40))
  {
    if ((*(_BYTE *)(result + 40) & 1) != 0)
    {
      uint64_t v1 = *(void *)(result + 8);
      if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v1 + 23) < 0)
        {
          **(_BYTE **)uint64_t v1 = 0;
          *(void *)(v1 + 8) = 0LL;
        }

        else
        {
          *(_BYTE *)uint64_t v1 = 0;
          *(_BYTE *)(v1 + 23) = 0;
        }
      }
    }

    if ((*(_BYTE *)(result + 40) & 2) != 0)
    {
      uint64_t v2 = *(void *)(result + 16);
      if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(_BYTE **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0LL;
        }

        else
        {
          *(_BYTE *)uint64_t v2 = 0;
          *(_BYTE *)(v2 + 23) = 0;
        }
      }
    }

    *(void *)(result + 24) = 0LL;
    *(_DWORD *)(result + 32) = 0;
  }

  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_1001E3C48( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v8 = *(void **)(a1 + 8);
        if (v8 == (void *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
        {
          uint64_t v8 = operator new(0x18uLL);
          v8[1] = 0LL;
          v8[2] = 0LL;
          *uint64_t v8 = 0LL;
          *(void *)(a1 + 8) = v8;
        }

        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString(this, v8);
        if ((_DWORD)result)
        {
          unsigned int v10 = (_BYTE *)*((void *)this + 1);
          if ((unint64_t)v10 < *((void *)this + 2) && *v10 == 18)
          {
            *((void *)this + 1) = v10 + 1;
            goto LABEL_16;
          }

          continue;
        }

        return result;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_30;
        }
LABEL_16:
        *(_DWORD *)(a1 + 40) |= 2u;
        unsigned int v11 = *(void **)(a1 + 16);
        if (v11 == (void *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
        {
          unsigned int v11 = operator new(0x18uLL);
          v11[1] = 0LL;
          void v11[2] = 0LL;
          *unsigned int v11 = 0LL;
          *(void *)(a1 + 16) = v11;
        }

        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString(this, v11);
        if ((_DWORD)result)
        {
          char v13 = (_BYTE *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          if ((unint64_t)v13 < v12 && *v13 == 24)
          {
            int v14 = v13 + 1;
            *((void *)this + 1) = v14;
            goto LABEL_24;
          }

          continue;
        }

        return result;
      case 3u:
        int v7 = TagFallback & 7;
        int v14 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
LABEL_24:
        if ((unint64_t)v14 < v12 && (*v14 & 0x80000000) == 0)
        {
          unsigned int v15 = *v14;
          *((void *)this + 1) = v14 + 1;
          goto LABEL_36;
        }

        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26);
        if ((_DWORD)result)
        {
          unsigned int v15 = v26;
LABEL_36:
          if (v15 <= 0x42)
          {
            *(_DWORD *)(a1 + 40) |= 4u;
            *(_DWORD *)(a1 + 24) = v15;
          }

          int v20 = (_BYTE *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
          if ((unint64_t)v20 < v16 && *v20 == 32)
          {
            unsigned int v17 = v20 + 1;
            *((void *)this + 1) = v17;
            goto LABEL_41;
          }

          continue;
        }

        break;
      case 4u:
        int v7 = TagFallback & 7;
        unsigned int v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
LABEL_41:
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v21 = v25;
        }

        else
        {
          unsigned int v21 = *v17;
          *((void *)this + 1) = v17 + 1;
        }

        if (v21 <= 4)
        {
          *(_DWORD *)(a1 + 40) |= 8u;
          *(_DWORD *)(a1 + 28) = v21;
        }

        unsigned int v22 = (_BYTE *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        BOOL v19 = v22 + 1;
        *((void *)this + 1) = v19;
LABEL_51:
        if ((unint64_t)v19 >= v18 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v24);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v23 = v24;
        }

        else
        {
          unsigned int v23 = *v19;
          *((void *)this + 1) = v19 + 1;
        }

        if (v23 <= 2)
        {
          *(_DWORD *)(a1 + 40) |= 0x10u;
          *(_DWORD *)(a1 + 32) = v23;
        }

        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }

        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 5u:
        int v7 = TagFallback & 7;
        BOOL v19 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_51;
      default:
        int v7 = TagFallback & 7;
LABEL_30:
        if (v7 == 4) {
          return 1LL;
        }
        return 0LL;
    }

    return result;
  }

uint64_t sub_1001E3F70( uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 40);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString( 1LL,  *(void *)(result + 8),  a2);
    int v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString(2LL, *(void *)(v5 + 16), a2);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }

uint64_t sub_1001E4020(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 40);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0LL;
    goto LABEL_46;
  }

  if ((*(_BYTE *)(a1 + 40) & 1) == 0)
  {
    uint64_t v4 = 0LL;
    if ((*(_BYTE *)(a1 + 40) & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_15;
  }

  uint64_t v5 = *(void *)(a1 + 8);
  int v6 = *(unsigned __int8 *)(v5 + 23);
  char v7 = v6;
  uint64_t v8 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
  }
  else {
    unint64_t v9 = v8;
  }
  if (v9 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback( (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9,  a2);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v8 = *(void *)(v5 + 8);
    int v10 = v11 + 1;
    int v3 = *(_DWORD *)(a1 + 40);
    char v7 = *(_BYTE *)(v5 + 23);
  }

  else
  {
    int v10 = 2;
  }

  if (v7 < 0) {
    int v6 = v8;
  }
  uint64_t v4 = (v10 + v6);
  if ((v3 & 2) != 0)
  {
LABEL_15:
    uint64_t v12 = *(void *)(a1 + 16);
    int v13 = *(unsigned __int8 *)(v12 + 23);
    char v14 = v13;
    uint64_t v15 = *(void *)(v12 + 8);
    if ((v13 & 0x80u) == 0) {
      unint64_t v16 = *(unsigned __int8 *)(v12 + 23);
    }
    else {
      unint64_t v16 = v15;
    }
    if (v16 >= 0x80)
    {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback( (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v16,  a2);
      int v13 = *(unsigned __int8 *)(v12 + 23);
      uint64_t v15 = *(void *)(v12 + 8);
      int v3 = *(_DWORD *)(a1 + 40);
      char v14 = *(_BYTE *)(v12 + 23);
    }

    else
    {
      int v17 = 1;
    }

    if (v14 < 0) {
      int v13 = v15;
    }
    uint64_t v4 = (v4 + v17 + v13 + 1);
  }

void sub_1001E41B8(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1001E4204()
{
  return 1LL;
}

void *sub_1001E420C@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.WorkoutSettings");
}

BOOL sub_1001E421C(unsigned int a1)
{
  return a1 < 0x13;
}

void sub_1001E4228(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v16,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  11876LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v16,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v15, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 48);
  if (!(_BYTE)v5) {
    return;
  }
  if ((*(_BYTE *)(a2 + 48) & 1) != 0)
  {
    *(_DWORD *)(a1 + 48) |= 1u;
    int v6 = *(char **)(a1 + 8);
    if (!v6)
    {
      int v6 = (char *)operator new(0x28uLL);
      *(void *)int v6 = off_101827B80;
      *(_OWORD *)(v6 + 8) = 0u;
      *(_OWORD *)(v6 + 24) = 0u;
      *(void *)(a1 + 8) = v6;
    }

    uint64_t v7 = *(void *)(a2 + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0C20 + 8);
    }
    sub_1001D323C((uint64_t)v6, v7);
    int v5 = *(_DWORD *)(a2 + 48);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
LABEL_20:
      unsigned int v10 = *(_DWORD *)(a2 + 40);
      if (v10 >= 0x13) {
        sub_10122FEB4();
      }
      *(_DWORD *)(a1 + 48) |= 4u;
      *(_DWORD *)(a1 + 40) = v10;
      int v5 = *(_DWORD *)(a2 + 48);
      if ((v5 & 8) == 0)
      {
LABEL_8:
        if ((v5 & 0x10) == 0) {
          return;
        }
        goto LABEL_27;
      }

      goto LABEL_22;
    }
  }

  else if ((*(_BYTE *)(a2 + 48) & 2) == 0)
  {
    goto LABEL_6;
  }

  *(_DWORD *)(a1 + 48) |= 2u;
  uint64_t v8 = *(char **)(a1 + 16);
  if (!v8)
  {
    uint64_t v8 = (char *)operator new(0x28uLL);
    *(void *)uint64_t v8 = off_101827B80;
    *(_OWORD *)(v8 + 8) = 0u;
    *(_OWORD *)(v8 + 24) = 0u;
    *(void *)(a1 + 16) = v8;
  }

  uint64_t v9 = *(void *)(a2 + 16);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_1019A0C20 + 16);
  }
  sub_1001D323C((uint64_t)v8, v9);
  int v5 = *(_DWORD *)(a2 + 48);
  if ((v5 & 4) != 0) {
    goto LABEL_20;
  }
LABEL_7:
  if ((v5 & 8) == 0) {
    goto LABEL_8;
  }
LABEL_22:
  *(_DWORD *)(a1 + 48) |= 8u;
  int v11 = *(char **)(a1 + 24);
  if (!v11)
  {
    int v11 = (char *)operator new(0x28uLL);
    *(void *)int v11 = off_101827B80;
    *(_OWORD *)(v11 + 8) = 0u;
    *(_OWORD *)(v11 + 24) = 0u;
    *(void *)(a1 + 24) = v11;
  }

  uint64_t v12 = *(void *)(a2 + 24);
  if (!v12) {
    uint64_t v12 = *(void *)(qword_1019A0C20 + 24);
  }
  sub_1001D323C((uint64_t)v11, v12);
  if ((*(_DWORD *)(a2 + 48) & 0x10) != 0)
  {
LABEL_27:
    *(_DWORD *)(a1 + 48) |= 0x10u;
    int v13 = *(void **)(a1 + 32);
    if (!v13)
    {
      int v13 = operator new(0x30uLL);
      *int v13 = off_101828828;
      v13[1] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
      void v13[2] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
      v13[3] = 0LL;
      v13[4] = 0LL;
      *((_DWORD *)v13 + 10) = 0;
      *(void *)(a1 + 32) = v13;
    }

    uint64_t v14 = *(void *)(a2 + 32);
    if (!v14) {
      uint64_t v14 = *(void *)(qword_1019A0C20 + 32);
    }
    sub_1001E3984((uint64_t)v13, v14);
  }

void sub_1001E443C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void *sub_1001E4454(void *result)
{
  if ((void *)qword_1019A0C20 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
    }
    uint64_t v4 = v1[3];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
    }
    uint64_t result = (void *)v1[4];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_1001E44D8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018288A0;
  sub_1001E4454(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001E4508(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018288A0;
  sub_1001E4454(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v2);
}

uint64_t sub_1001E453C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0C20;
  if (!qword_1019A0C20)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0C20;
  }

  return result;
}

double sub_1001E4568()
{
  unsigned __int8 v0 = (char *)operator new(0x38uLL);
  *(void *)unsigned __int8 v0 = off_1018288A0;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 36) = 0u;
  return result;
}

uint64_t sub_1001E459C(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(_BYTE *)(result + 48);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(result + 48) & 1) != 0)
    {
      uint64_t v3 = *(void *)(result + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0LL;
          *(void *)(v3 + 16) = 0LL;
          *(void *)(v3 + 24) = 0LL;
        }

        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(result + 48);
      }
    }

    if ((v2 & 2) != 0)
    {
      uint64_t v4 = *(void *)(result + 16);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 36))
        {
          *(void *)(v4 + 8) = 0LL;
          *(void *)(v4 + 16) = 0LL;
          *(void *)(v4 + 24) = 0LL;
        }

        *(_DWORD *)(v4 + 36) = 0;
        int v2 = *(_DWORD *)(result + 48);
      }
    }

    *(_DWORD *)(result + 40) = 0;
    if ((v2 & 8) != 0)
    {
      uint64_t v5 = *(void *)(result + 24);
      if (v5)
      {
        if (*(_BYTE *)(v5 + 36))
        {
          *(void *)(v5 + 8) = 0LL;
          *(void *)(v5 + 16) = 0LL;
          *(void *)(v5 + 24) = 0LL;
        }

        *(_DWORD *)(v5 + 36) = 0;
        int v2 = *(_DWORD *)(result + 48);
      }
    }

    if ((v2 & 0x10) != 0)
    {
      double result = *(void *)(result + 32);
      if (result) {
        double result = sub_1001E3BC4(result);
      }
    }
  }

  *(_DWORD *)(v1 + 48) = 0;
  return result;
}

uint64_t sub_1001E4644( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 < *((void *)this + 2) && (*v5 & 0x80000000) == 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
      goto LABEL_6;
    }

    TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = (_DWORD)TagFallback;
    if (!(_DWORD)TagFallback) {
      return 1LL;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_21;
        }
        *(_DWORD *)(a1 + 48) |= 1u;
        uint64_t v8 = *(char **)(a1 + 8);
        if (!v8)
        {
          uint64_t v8 = (char *)operator new(0x28uLL);
          *(void *)uint64_t v8 = off_101827B80;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *(void *)(a1 + 8) = v8;
        }

        uint64_t v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v49)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v49 = *v9;
          *((void *)this + 1) = v9 + 1;
        }

        int v12 = *((_DWORD *)this + 14);
        int v13 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v12 + 1;
        if (v12 >= v13) {
          return 0LL;
        }
        int v14 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v49);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v14);
        int v16 = *((_DWORD *)this + 14);
        BOOL v17 = __OFSUB__(v16, 1);
        int v18 = v16 - 1;
        if (v18 < 0 == v17) {
          *((_DWORD *)this + 14) = v18;
        }
        int v19 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v19 + 1;
        goto LABEL_33;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_21;
        }
LABEL_33:
        *(_DWORD *)(a1 + 48) |= 2u;
        int v20 = *(char **)(a1 + 16);
        if (!v20)
        {
          int v20 = (char *)operator new(0x28uLL);
          *(void *)int v20 = off_101827B80;
          *(_OWORD *)(v20 + 8) = 0u;
          *(_OWORD *)(v20 + 24) = 0u;
          *(void *)(a1 + 16) = v20;
        }

        int v21 = (char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v49)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v49 = *v21;
          *((void *)this + 1) = v21 + 1;
        }

        int v22 = *((_DWORD *)this + 14);
        int v23 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v22 + 1;
        if (v22 >= v23) {
          return 0LL;
        }
        int v24 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v49);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v24);
        int v26 = *((_DWORD *)this + 14);
        BOOL v17 = __OFSUB__(v26, 1);
        int v27 = v26 - 1;
        if (v27 < 0 == v17) {
          *((_DWORD *)this + 14) = v27;
        }
        int v28 = (_BYTE *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        int v11 = v28 + 1;
        *((void *)this + 1) = v11;
LABEL_47:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v49);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v29 = v49;
        }

        else
        {
          unsigned int v29 = *v11;
          *((void *)this + 1) = v11 + 1;
        }

        if (v29 <= 0x12)
        {
          *(_DWORD *)(a1 + 48) |= 4u;
          *(_DWORD *)(a1 + 40) = v29;
        }

        int v31 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v31 + 1;
LABEL_57:
        *(_DWORD *)(a1 + 48) |= 8u;
        int v32 = *(char **)(a1 + 24);
        if (!v32)
        {
          int v32 = (char *)operator new(0x28uLL);
          *(void *)int v32 = off_101827B80;
          *(_OWORD *)(v32 + 8) = 0u;
          *(_OWORD *)(v32 + 24) = 0u;
          *(void *)(a1 + 24) = v32;
        }

        unsigned int v33 = (char *)*((void *)this + 1);
        if ((unint64_t)v33 >= *((void *)this + 2) || *v33 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v49)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v49 = *v33;
          *((void *)this + 1) = v33 + 1;
        }

        int v34 = *((_DWORD *)this + 14);
        int v35 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v34 + 1;
        if (v34 >= v35) {
          return 0LL;
        }
        int v36 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v49);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v36);
        int v38 = *((_DWORD *)this + 14);
        BOOL v17 = __OFSUB__(v38, 1);
        int v39 = v38 - 1;
        if (v39 < 0 == v17) {
          *((_DWORD *)this + 14) = v39;
        }
        uint64_t v40 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v40 + 1;
LABEL_71:
        *(_DWORD *)(a1 + 48) |= 0x10u;
        unsigned int v41 = *(void **)(a1 + 32);
        if (!v41)
        {
          unsigned int v41 = operator new(0x30uLL);
          *unsigned int v41 = off_101828828;
          v41[1] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
          v41[2] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
          v41[3] = 0LL;
          v41[4] = 0LL;
          *((_DWORD *)v41 + 10) = 0;
          *(void *)(a1 + 32) = v41;
        }

        unsigned int v42 = (char *)*((void *)this + 1);
        if ((unint64_t)v42 >= *((void *)this + 2) || *v42 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v49)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v49 = *v42;
          *((void *)this + 1) = v42 + 1;
        }

        int v43 = *((_DWORD *)this + 14);
        int v44 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v43 + 1;
        if (v43 >= v44) {
          return 0LL;
        }
        int v45 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v49);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v45);
        int v47 = *((_DWORD *)this + 14);
        BOOL v17 = __OFSUB__(v47, 1);
        int v48 = v47 - 1;
        if (v48 < 0 == v17) {
          *((_DWORD *)this + 14) = v48;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1LL;
          *((_BYTE *)this + 36) = 1;
          return result;
        }

        break;
      case 3u:
        int v7 = TagFallback & 7;
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_47;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_57;
        }
        goto LABEL_21;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_21;
        }
        goto LABEL_71;
      default:
        int v7 = TagFallback & 7;
LABEL_21:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001E4B88( uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 48);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0C20 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_1019A0C20 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v8,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }

uint64_t sub_1001E4C78(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 48);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0LL;
    goto LABEL_49;
  }

  if ((*(_BYTE *)(a1 + 48) & 1) == 0)
  {
    uint64_t v4 = 0LL;
    if ((*(_BYTE *)(a1 + 48) & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_15;
  }

  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_1019A0C20 + 8);
  }
  int v6 = *(unsigned __int8 *)(v5 + 36);
  if (*(_BYTE *)(v5 + 36))
  {
    int v7 = (v6 << 31 >> 31) & 9;
    if ((v6 & 2) != 0) {
      v7 += 9;
    }
    if ((v6 & 4) != 0) {
      int v6 = v7 + 9;
    }
    else {
      int v6 = v7;
    }
  }

  *(_DWORD *)(v5 + 32) = v6;
  uint64_t v4 = (v6 + 2);
  int v3 = *(_DWORD *)(a1 + 48);
  if ((v3 & 2) != 0)
  {
LABEL_15:
    uint64_t v8 = *(void *)(a1 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1019A0C20 + 16);
    }
    int v9 = *(unsigned __int8 *)(v8 + 36);
    if (*(_BYTE *)(v8 + 36))
    {
      int v10 = (v9 << 31 >> 31) & 9;
      if ((v9 & 2) != 0) {
        v10 += 9;
      }
      if ((v9 & 4) != 0) {
        int v9 = v10 + 9;
      }
      else {
        int v9 = v10;
      }
    }

    *(_DWORD *)(v8 + 32) = v9;
    uint64_t v4 = (v4 + v9 + 2);
    int v3 = *(_DWORD *)(a1 + 48);
  }

void sub_1001E4E3C(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1001E4E88()
{
  return 1LL;
}

void *sub_1001E4E90@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.WorkoutEvent");
}

void sub_1001E4EA0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v12,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  12137LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v12,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    {
      *(_DWORD *)(a1 + 32) |= 1u;
      int v6 = *(char **)(a1 + 8);
      if (!v6)
      {
        int v6 = (char *)operator new(0x28uLL);
        *(void *)int v6 = off_101827B80;
        *(_OWORD *)(v6 + 8) = 0u;
        *(_OWORD *)(v6 + 24) = 0u;
        *(void *)(a1 + 8) = v6;
      }

      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_1019A0C28 + 8);
      }
      sub_1001D323C((uint64_t)v6, v7);
      int v5 = *(_DWORD *)(a2 + 32);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return;
        }
        goto LABEL_14;
      }
    }

    else if ((*(_BYTE *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }

    int v8 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(_DWORD *)(a1 + 24) = v8;
    if ((*(_DWORD *)(a2 + 32) & 4) == 0) {
      return;
    }
LABEL_14:
    *(_DWORD *)(a1 + 32) |= 4u;
    int v9 = *(char **)(a1 + 16);
    if (!v9)
    {
      int v9 = (char *)operator new(0x38uLL);
      *(void *)int v9 = off_1018288A0;
      *(_OWORD *)(v9 + 8) = 0u;
      *(_OWORD *)(v9 + 24) = 0u;
      *(_OWORD *)(v9 + 36) = 0u;
      *(void *)(a1 + 16) = v9;
    }

    uint64_t v10 = *(void *)(a2 + 16);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_1019A0C28 + 16);
    }
    sub_1001E4228((uint64_t)v9, v10);
  }

void sub_1001E4FEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void *sub_1001E5004(void *result)
{
  if ((void *)qword_1019A0C28 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    uint64_t result = (void *)v1[2];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_1001E5060(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101828918;
  sub_1001E5004(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001E5090(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101828918;
  sub_1001E5004(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v2);
}

uint64_t sub_1001E50C4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0C28;
  if (!qword_1019A0C28)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0C28;
  }

  return result;
}

void *sub_1001E50F0()
{
  uint64_t result = operator new(0x28uLL);
  *uint64_t result = off_101828918;
  result[1] = 0LL;
  result[2] = 0LL;
  result[3] = 0LL;
  *((_DWORD *)result + 8) = 0;
  return result;
}

uint64_t sub_1001E511C(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(_BYTE *)(result + 32);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(result + 32) & 1) != 0)
    {
      uint64_t v3 = *(void *)(result + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0LL;
          *(void *)(v3 + 16) = 0LL;
          *(void *)(v3 + 24) = 0LL;
        }

        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(result + 32);
      }
    }

    *(_DWORD *)(result + 24) = 0;
    if ((v2 & 4) != 0)
    {
      uint64_t result = *(void *)(result + 16);
      if (result) {
        uint64_t result = sub_1001E459C(result);
      }
    }
  }

  *(_DWORD *)(v1 + 32) = 0;
  return result;
}

uint64_t sub_1001E517C( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    do
    {
      while (1)
      {
        while (1)
        {
          int v5 = (char *)*((void *)this + 1);
          if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
          {
            TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = (_DWORD)TagFallback;
            if (!(_DWORD)TagFallback) {
              return 1LL;
            }
          }

          else
          {
            TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
            *((_DWORD *)this + 8) = (_DWORD)TagFallback;
            *((void *)this + 1) = v5 + 1;
            if (!(_DWORD)TagFallback) {
              return 1LL;
            }
          }

          unsigned int v7 = TagFallback >> 3;
          int v8 = TagFallback & 7;
          if (v8 != 2) {
            goto LABEL_20;
          }
          *(_DWORD *)(a1 + 32) |= 1u;
          uint64_t v10 = *(char **)(a1 + 8);
          if (!v10)
          {
            uint64_t v10 = (char *)operator new(0x28uLL);
            *(void *)uint64_t v10 = off_101827B80;
            *(_OWORD *)(v10 + 8) = 0u;
            *(_OWORD *)(v10 + 24) = 0u;
            *(void *)(a1 + 8) = v10;
          }

          char v11 = (char *)*((void *)this + 1);
          if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v34)) {
              return 0LL;
            }
          }

          else
          {
            unsigned int v34 = *v11;
            *((void *)this + 1) = v11 + 1;
          }

          int v14 = *((_DWORD *)this + 14);
          int v15 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v14 + 1;
          if (v14 >= v15) {
            return 0LL;
          }
          int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34);
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
          int v18 = *((_DWORD *)this + 14);
          BOOL v19 = __OFSUB__(v18, 1);
          int v20 = v18 - 1;
          if (v20 < 0 == v19) {
            *((_DWORD *)this + 14) = v20;
          }
          int v21 = (_BYTE *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          if ((unint64_t)v21 < v12 && *v21 == 16)
          {
            uint64_t v13 = v21 + 1;
            *((void *)this + 1) = v13;
            goto LABEL_32;
          }
        }

        if (v7 == 2) {
          break;
        }
        if (v7 == 3)
        {
          int v8 = TagFallback & 7;
          if (v8 == 2)
          {
            int v9 = *(_DWORD *)(a1 + 32);
            goto LABEL_40;
          }
        }

        else
        {
          int v8 = TagFallback & 7;
        }

uint64_t sub_1001E54B8( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_8:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(_DWORD *)(v5 + 24),  (int)a2,  a4);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0) {
      return result;
    }
    goto LABEL_9;
  }

  uint64_t v7 = *(void *)(result + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_1019A0C28 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_9:
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_1019A0C28 + 16);
  }
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  v8,  a2,  a4);
}

uint64_t sub_1001E5550(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 32);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0LL;
    goto LABEL_28;
  }

  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
  {
    uint64_t v5 = *(void *)(a1 + 8);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_1019A0C28 + 8);
    }
    int v6 = *(unsigned __int8 *)(v5 + 36);
    if (*(_BYTE *)(v5 + 36))
    {
      int v7 = (v6 << 31 >> 31) & 9;
      if ((v6 & 2) != 0) {
        v7 += 9;
      }
      if ((v6 & 4) != 0) {
        int v6 = v7 + 9;
      }
      else {
        int v6 = v7;
      }
    }

    *(_DWORD *)(v5 + 32) = v6;
    uint64_t v4 = (v6 + 2);
    int v3 = *(_DWORD *)(a1 + 32);
    if ((v3 & 2) == 0) {
      goto LABEL_21;
    }
  }

  else
  {
    uint64_t v4 = 0LL;
    if ((*(_BYTE *)(a1 + 32) & 2) == 0) {
      goto LABEL_21;
    }
  }

  uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if ((v8 & 0x80000000) != 0)
  {
    int v9 = 11;
  }

  else if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 32);
  }

  else
  {
    int v9 = 2;
  }

  uint64_t v4 = (v9 + v4);
LABEL_21:
  if ((v3 & 4) != 0)
  {
    uint64_t v10 = *(void *)(a1 + 16);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_1019A0C28 + 16);
    }
    char v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001E4C78(v10, a2);
    int v13 = (int)v11;
    else {
      int v14 = 1;
    }
    uint64_t v4 = (v4 + v13 + v14 + 1);
  }

void sub_1001E5660(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1001E56AC()
{
  return 1LL;
}

void *sub_1001E56B4@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.MotionStateMediator");
}

void sub_1001E56C4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v11,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  12378LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v11,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    {
      uint64_t v7 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(void *)(a1 + 8) = v7;
      int v5 = *(_DWORD *)(a2 + 32);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return;
        }
        goto LABEL_7;
      }
    }

    else if ((*(_BYTE *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }

    *(_DWORD *)(a1 + 32) |= 2u;
    uint64_t v8 = *(void **)(a1 + 16);
    if (!v8)
    {
      uint64_t v8 = operator new(0x60uLL);
      v8[1] = 0LL;
      v8[2] = 0LL;
      *uint64_t v8 = off_101828648;
      *(void *)((char *)v8 + 22) = 0LL;
      *((_OWORD *)v8 + 2) = 0u;
      *((_OWORD *)v8 + 3) = 0u;
      *((_OWORD *)v8 + 4) = 0u;
      *((_OWORD *)v8 + 5) = 0u;
      *(void *)(a1 + 16) = v8;
    }

    uint64_t v9 = *(void *)(a2 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_1019A0C30 + 16);
    }
    sub_1001E0E24((uint64_t)v8, v9);
    if ((*(_DWORD *)(a2 + 32) & 4) != 0)
    {
LABEL_7:
      char v6 = *(_BYTE *)(a2 + 24);
      *(_DWORD *)(a1 + 32) |= 4u;
      *(_BYTE *)(a1 + 24) = v6;
    }
  }

void sub_1001E57D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001E57F0(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_101828990;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0C30 != this)
  {
    uint64_t v2 = *((void *)this + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1001E5844(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

uint64_t sub_1001E5858(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0C30;
  if (!qword_1019A0C30)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0C30;
  }

  return result;
}

_DWORD *sub_1001E5884()
{
  uint64_t result = operator new(0x28uLL);
  result[7] = 0;
  result[8] = 0;
  *((void *)result + 1) = 0LL;
  *((void *)result + 2) = 0LL;
  *(void *)uint64_t result = &off_101828990;
  *((_BYTE *)result + 24) = 0;
  return result;
}

uint64_t sub_1001E58B4(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(_BYTE *)(result + 32);
  if (v2)
  {
    *(void *)(result + 8) = 0LL;
    if ((v2 & 2) != 0)
    {
      uint64_t result = *(void *)(result + 16);
      if (result) {
        uint64_t result = sub_1001E12B0(result);
      }
    }

    *(_BYTE *)(v1 + 24) = 0;
  }

  *(_DWORD *)(v1 + 32) = 0;
  return result;
}

uint64_t sub_1001E58F4( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        unsigned int v7 = TagFallback >> 3;
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_24;
        }
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v26) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 8) = *(void *)v26;
        int v11 = *(_DWORD *)(a1 + 32) | 1;
        *(_DWORD *)(a1 + 32) = v11;
        unsigned int v12 = (_BYTE *)*((void *)this + 1);
        if ((unint64_t)v12 < *((void *)this + 2) && *v12 == 18)
        {
          *((void *)this + 1) = v12 + 1;
          goto LABEL_18;
        }
      }

      if (v7 == 2) {
        break;
      }
      if (v7 == 3)
      {
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) == 0)
        {
          char v10 = (char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
          goto LABEL_36;
        }
      }

      else
      {
        int v8 = TagFallback & 7;
      }

uint64_t sub_1001E5B94( uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  (int)a2,  *(double *)(result + 8),  a3);
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        return result;
      }
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(unsigned __int8 *)(v5 + 24),  (BOOL)a2,  a4);
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_1019A0C30 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v7,  a2,  a4);
  if ((*(_DWORD *)(v5 + 32) & 4) != 0) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(unsigned __int8 *)(v5 + 24),  (BOOL)a2,  a4);
  }
  return result;
}

uint64_t sub_1001E5C1C(uint64_t a1, unsigned int a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 32);
  if (*(_BYTE *)(a1 + 32))
  {
    unsigned int v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0)
    {
      uint64_t v5 = *(void *)(a1 + 16);
      if (!v5) {
        uint64_t v5 = *(void *)(qword_1019A0C30 + 16);
      }
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001E1E3C(v5, a2);
      int v8 = (int)v6;
      else {
        int v9 = 1;
      }
      v4 += v8 + v9 + 1;
      int v3 = *(_DWORD *)(a1 + 32);
    }

    if ((v3 & 4) != 0) {
      uint64_t result = v4 + 2;
    }
    else {
      uint64_t result = v4;
    }
  }

  else
  {
    uint64_t result = 0LL;
  }

  *(_DWORD *)(a1 + 28) = result;
  return result;
}

void sub_1001E5CB4(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1001E5D00()
{
  return 1LL;
}

void *sub_1001E5D08@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.MediatedMotionActivity");
}

float sub_1001E5D18(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v10,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  12903LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v10,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }

  int v6 = *(_DWORD *)(a2 + 56);
  if (!(_BYTE)v6) {
    goto LABEL_15;
  }
  if ((v6 & 1) != 0)
  {
    unsigned int v7 = *(_DWORD *)(a2 + 8);
    if (v7 >= 3) {
      sub_10122FF04();
    }
    *(_DWORD *)(a1 + 56) |= 1u;
    *(_DWORD *)(a1 + 8) = v7;
    int v6 = *(_DWORD *)(a2 + 56);
  }

  if ((v6 & 2) != 0)
  {
    float result = *(float *)(a2 + 12);
    *(_DWORD *)(a1 + 56) |= 2u;
    *(float *)(a1 + 12) = result;
    int v6 = *(_DWORD *)(a2 + 56);
    if ((v6 & 4) == 0)
    {
LABEL_9:
      if ((v6 & 8) == 0) {
        goto LABEL_10;
      }
      goto LABEL_26;
    }
  }

  else if ((v6 & 4) == 0)
  {
    goto LABEL_9;
  }

  float result = *(float *)(a2 + 16);
  *(_DWORD *)(a1 + 56) |= 4u;
  *(float *)(a1 + 16) = result;
  int v6 = *(_DWORD *)(a2 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_10:
    if ((v6 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }

void sub_1001E5EFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001E5F14(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101828A08;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001E5F24(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101828A08;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

double sub_1001E5F44()
{
  unsigned __int8 v0 = (char *)operator new(0x40uLL);
  *(void *)unsigned __int8 v0 = off_101828A08;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *((_DWORD *)v0 + 14) = 0;
  return result;
}

uint64_t sub_1001E5F7C(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 56);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }

  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(result + 40) = 0LL;
    *(_DWORD *)(result + 48) = 0;
  }

  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_1001E5FAC( _DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        unsigned int v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v24);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v9 = v24;
        }

        else
        {
          unsigned int v9 = *v8;
          *((void *)this + 1) = v8 + 1;
        }

        if (v9 <= 2)
        {
          a1[14] |= 1u;
          a1[2] = v9;
        }

        int v13 = (_BYTE *)*((void *)this + 1);
        if ((unint64_t)v13 < *((void *)this + 2) && *v13 == 21)
        {
          *((void *)this + 1) = v13 + 1;
          goto LABEL_41;
        }

        continue;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_31;
        }
LABEL_41:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0) {
          return 0LL;
        }
        a1[3] = v24;
        a1[14] |= 2u;
        int v14 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v14 + 1;
LABEL_45:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0) {
          return 0LL;
        }
        a1[4] = v24;
        a1[14] |= 4u;
        int v15 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v15 + 1;
LABEL_49:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0) {
          return 0LL;
        }
        a1[5] = v24;
        a1[14] |= 8u;
        int v16 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v16 + 1;
LABEL_53:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0) {
          return 0LL;
        }
        a1[6] = v24;
        a1[14] |= 0x10u;
        int v17 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v17 + 1;
LABEL_57:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0) {
          return 0LL;
        }
        a1[7] = v24;
        a1[14] |= 0x20u;
        unsigned int v18 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v18 + 1;
LABEL_61:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0) {
          return 0LL;
        }
        a1[8] = v24;
        a1[14] |= 0x40u;
        int v19 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v19 + 1;
LABEL_65:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0) {
          return 0LL;
        }
        a1[9] = v24;
        a1[14] |= 0x80u;
        BOOL v20 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v20 + 1;
LABEL_69:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0) {
          return 0LL;
        }
        a1[10] = v24;
        a1[14] |= 0x100u;
        int v21 = (_BYTE *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        int v11 = v21 + 1;
        *((void *)this + 1) = v11;
LABEL_73:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v24);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v22 = v24;
        }

        else
        {
          unsigned int v22 = *v11;
          *((void *)this + 1) = v11 + 1;
        }

        if (v22 <= 7)
        {
          a1[14] |= 0x200u;
          a1[11] = v22;
        }

        unsigned int v23 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v23 + 1;
LABEL_83:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) != 0)
        {
          a1[12] = v24;
          a1[14] |= 0x400u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1LL;
            *((_BYTE *)this + 36) = 1;
            return result;
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_45;
        }
        goto LABEL_31;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_49;
        }
        goto LABEL_31;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_53;
        }
        goto LABEL_31;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_57;
        }
        goto LABEL_31;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_61;
        }
        goto LABEL_31;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_65;
        }
        goto LABEL_31;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_69;
        }
        goto LABEL_31;
      case 0xAu:
        int v7 = TagFallback & 7;
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_73;
      case 0xBu:
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_31;
        }
        goto LABEL_83;
      default:
        int v7 = TagFallback & 7;
LABEL_31:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001E6468( uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 56);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(_DWORD *)(result + 8),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  a2,  *(float *)(v5 + 12),  a3);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }

uint64_t sub_1001E65C0(unsigned int *a1, unsigned int a2)
{
  unsigned int v3 = a1[14];
  if ((_BYTE)v3)
  {
    if ((v3 & 1) != 0)
    {
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[2];
      if ((v6 & 0x80000000) != 0)
      {
        unsigned int v4 = 11;
      }

      else if (v6 >= 0x80)
      {
        unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
        unsigned int v3 = a1[14];
      }

      else
      {
        unsigned int v4 = 2;
      }
    }

    else
    {
      unsigned int v4 = 0;
    }

    if ((v3 & 2) != 0) {
      v4 += 5;
    }
    if ((v3 & 4) != 0) {
      v4 += 5;
    }
    if ((v3 & 8) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x40) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x80) != 0) {
      uint64_t result = v4 + 5;
    }
    else {
      uint64_t result = v4;
    }
  }

  else
  {
    uint64_t result = 0LL;
  }

  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0) {
      unsigned int v7 = result + 5;
    }
    else {
      unsigned int v7 = result;
    }
    if ((v3 & 0x200) != 0)
    {
      unsigned int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[11];
      if ((v8 & 0x80000000) != 0)
      {
        int v9 = 11;
      }

      else if (v8 >= 0x80)
      {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
        unsigned int v3 = a1[14];
      }

      else
      {
        int v9 = 2;
      }

      v7 += v9;
    }

    if ((v3 & 0x400) != 0) {
      uint64_t result = v7 + 5;
    }
    else {
      uint64_t result = v7;
    }
  }

  a1[13] = result;
  return result;
}

float sub_1001E66D4(uint64_t a1, void *lpsrc)
{
  return sub_1001E5D18(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001E6720()
{
  return 1LL;
}

void *sub_1001E6728@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.BodyMetrics");
}

float sub_1001E6738(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v14,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  13190LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v14,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v13, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 32);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    {
      *(_DWORD *)(a1 + 32) |= 1u;
      unsigned int v7 = *(char **)(a1 + 8);
      if (!v7)
      {
        unsigned int v7 = (char *)operator new(0x28uLL);
        *(void *)unsigned int v7 = off_101827B80;
        *(_OWORD *)(v7 + 8) = 0u;
        *(_OWORD *)(v7 + 24) = 0u;
        *(void *)(a1 + 8) = v7;
      }

      uint64_t v8 = *(void *)(a2 + 8);
      if (!v8) {
        uint64_t v8 = *(void *)(qword_1019A0C40 + 8);
      }
      double v5 = sub_1001D323C((uint64_t)v7, v8);
      int v6 = *(_DWORD *)(a2 + 32);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0) {
          return *(float *)&v5;
        }
LABEL_14:
        *(_DWORD *)(a1 + 32) |= 4u;
        unint64_t v10 = *(char **)(a1 + 16);
        if (!v10)
        {
          unint64_t v10 = (char *)operator new(0x40uLL);
          *(void *)unint64_t v10 = off_101828A08;
          *(_OWORD *)(v10 + 8) = 0u;
          *(_OWORD *)(v10 + 24) = 0u;
          *(_OWORD *)(v10 + 40) = 0u;
          *((_DWORD *)v10 + 14) = 0;
          *(void *)(a1 + 16) = v10;
        }

        uint64_t v11 = *(void *)(a2 + 16);
        if (!v11) {
          uint64_t v11 = *(void *)(qword_1019A0C40 + 16);
        }
        *(float *)&double v5 = sub_1001E5D18((uint64_t)v10, v11);
        return *(float *)&v5;
      }
    }

    else if ((*(_BYTE *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }

    int v9 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(_DWORD *)(a1 + 24) = v9;
    if ((*(_DWORD *)(a2 + 32) & 4) == 0) {
      return *(float *)&v5;
    }
    goto LABEL_14;
  }

  return *(float *)&v5;
}

void sub_1001E6888(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void *sub_1001E68A0(void *result)
{
  if ((void *)qword_1019A0C40 != result)
  {
    int v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    uint64_t result = (void *)v1[2];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_1001E68FC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101828A80;
  sub_1001E68A0(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001E692C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101828A80;
  sub_1001E68A0(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v2);
}

uint64_t sub_1001E6960(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0C40;
  if (!qword_1019A0C40)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0C40;
  }

  return result;
}

void *sub_1001E698C()
{
  uint64_t result = operator new(0x28uLL);
  *uint64_t result = off_101828A80;
  result[1] = 0LL;
  result[2] = 0LL;
  result[3] = 0LL;
  *((_DWORD *)result + 8) = 0;
  return result;
}

uint64_t sub_1001E69B8(uint64_t result)
{
  LOBYTE(v1) = *(_BYTE *)(result + 32);
  if ((_BYTE)v1)
  {
    if ((*(_BYTE *)(result + 32) & 1) != 0)
    {
      uint64_t v2 = *(void *)(result + 8);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 36))
        {
          *(void *)(v2 + 8) = 0LL;
          *(void *)(v2 + 16) = 0LL;
          *(void *)(v2 + 24) = 0LL;
        }

        *(_DWORD *)(v2 + 36) = 0;
        int v1 = *(_DWORD *)(result + 32);
      }
    }

    *(_DWORD *)(result + 24) = 0;
    if ((v1 & 4) != 0)
    {
      uint64_t v3 = *(void *)(result + 16);
      if (v3)
      {
        int v4 = *(_DWORD *)(v3 + 56);
        if ((_BYTE)v4)
        {
          *(_OWORD *)(v3 + 24) = 0u;
          *(_OWORD *)(v3 + 8) = 0u;
        }

        if ((v4 & 0xFF00) != 0)
        {
          *(void *)(v3 + 40) = 0LL;
          *(_DWORD *)(v3 + 48) = 0;
        }

        *(_DWORD *)(v3 + 56) = 0;
      }
    }
  }

  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1001E6A28( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    do
    {
      while (1)
      {
        while (1)
        {
          double v5 = (char *)*((void *)this + 1);
          if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
          {
            TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = (_DWORD)TagFallback;
            if (!(_DWORD)TagFallback) {
              return 1LL;
            }
          }

          else
          {
            TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
            *((_DWORD *)this + 8) = (_DWORD)TagFallback;
            *((void *)this + 1) = v5 + 1;
            if (!(_DWORD)TagFallback) {
              return 1LL;
            }
          }

          unsigned int v7 = TagFallback >> 3;
          int v8 = TagFallback & 7;
          if (v8 != 2) {
            goto LABEL_20;
          }
          *(_DWORD *)(a1 + 32) |= 1u;
          unint64_t v10 = *(char **)(a1 + 8);
          if (!v10)
          {
            unint64_t v10 = (char *)operator new(0x28uLL);
            *(void *)unint64_t v10 = off_101827B80;
            *(_OWORD *)(v10 + 8) = 0u;
            *(_OWORD *)(v10 + 24) = 0u;
            *(void *)(a1 + 8) = v10;
          }

          uint64_t v11 = (char *)*((void *)this + 1);
          if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v34)) {
              return 0LL;
            }
          }

          else
          {
            unsigned int v34 = *v11;
            *((void *)this + 1) = v11 + 1;
          }

          int v14 = *((_DWORD *)this + 14);
          int v15 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v14 + 1;
          if (v14 >= v15) {
            return 0LL;
          }
          int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34);
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
          int v18 = *((_DWORD *)this + 14);
          BOOL v19 = __OFSUB__(v18, 1);
          int v20 = v18 - 1;
          if (v20 < 0 == v19) {
            *((_DWORD *)this + 14) = v20;
          }
          int v21 = (_BYTE *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          if ((unint64_t)v21 < v12 && *v21 == 16)
          {
            char v13 = v21 + 1;
            *((void *)this + 1) = v13;
            goto LABEL_32;
          }
        }

        if (v7 == 2) {
          break;
        }
        if (v7 == 3)
        {
          int v8 = TagFallback & 7;
          if (v8 == 2)
          {
            int v9 = *(_DWORD *)(a1 + 32);
            goto LABEL_40;
          }
        }

        else
        {
          int v8 = TagFallback & 7;
        }

uint64_t sub_1001E6D68( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_8:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(_DWORD *)(v5 + 24),  (int)a2,  a4);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0) {
      return result;
    }
    goto LABEL_9;
  }

  uint64_t v7 = *(void *)(result + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_1019A0C40 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_9:
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_1019A0C40 + 16);
  }
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  v8,  a2,  a4);
}

uint64_t sub_1001E6E00(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 32);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0LL;
    goto LABEL_28;
  }

  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
  {
    uint64_t v5 = *(void *)(a1 + 8);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_1019A0C40 + 8);
    }
    int v6 = *(unsigned __int8 *)(v5 + 36);
    if (*(_BYTE *)(v5 + 36))
    {
      int v7 = (v6 << 31 >> 31) & 9;
      if ((v6 & 2) != 0) {
        v7 += 9;
      }
      if ((v6 & 4) != 0) {
        int v6 = v7 + 9;
      }
      else {
        int v6 = v7;
      }
    }

    *(_DWORD *)(v5 + 32) = v6;
    uint64_t v4 = (v6 + 2);
    int v3 = *(_DWORD *)(a1 + 32);
    if ((v3 & 2) == 0) {
      goto LABEL_21;
    }
  }

  else
  {
    uint64_t v4 = 0LL;
    if ((*(_BYTE *)(a1 + 32) & 2) == 0) {
      goto LABEL_21;
    }
  }

  uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if ((v8 & 0x80000000) != 0)
  {
    int v9 = 11;
  }

  else if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 32);
  }

  else
  {
    int v9 = 2;
  }

  uint64_t v4 = (v9 + v4);
LABEL_21:
  if ((v3 & 4) != 0)
  {
    unint64_t v10 = *(unsigned int **)(a1 + 16);
    if (!v10) {
      unint64_t v10 = *(unsigned int **)(qword_1019A0C40 + 16);
    }
    uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001E65C0(v10, a2);
    int v13 = (int)v11;
    else {
      int v14 = 1;
    }
    uint64_t v4 = (v4 + v13 + v14 + 1);
  }

float sub_1001E6F10(uint64_t a1, void *lpsrc)
{
  return sub_1001E6738(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001E6F5C()
{
  return 1LL;
}

void *sub_1001E6F64@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.Natalimetry");
}

double sub_1001E6F74(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  13373LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  if ((*(_BYTE *)(a2 + 20) & 1) != 0)
  {
    *(_DWORD *)(a1 + 20) |= 1u;
    int v6 = *(char **)(a1 + 8);
    if (!v6)
    {
      int v6 = (char *)operator new(0x28uLL);
      *(void *)int v6 = off_101827B80;
      *(_OWORD *)(v6 + 8) = 0u;
      *(_OWORD *)(v6 + 24) = 0u;
      *(void *)(a1 + 8) = v6;
    }

    uint64_t v7 = *(void *)(a2 + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0C48 + 8);
    }
    return sub_1001D323C((uint64_t)v6, v7);
  }

  return result;
}

void sub_1001E7038(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001E7050(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_101828AF8;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0C48 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1001E70A4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

uint64_t sub_1001E70B8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0C48;
  if (!qword_1019A0C48)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0C48;
  }

  return result;
}

void *sub_1001E70E4()
{
  uint64_t result = operator new(0x18uLL);
  result[1] = 0LL;
  result[2] = 0LL;
  *uint64_t result = &off_101828AF8;
  return result;
}

uint64_t sub_1001E710C(uint64_t result)
{
  if ((*(_BYTE *)(result + 20) & 1) != 0)
  {
    uint64_t v1 = *(void *)(result + 8);
    if (v1)
    {
      if (*(_BYTE *)(v1 + 36))
      {
        *(void *)(v1 + 8) = 0LL;
        *(void *)(v1 + 16) = 0LL;
        *(void *)(v1 + 24) = 0LL;
      }

      *(_DWORD *)(v1 + 36) = 0;
    }
  }

  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1001E7138( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      }

      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((void *)this + 1) = v5 + 1;
      }

      if ((_DWORD)TagFallback != 10) {
        break;
      }
      *(_DWORD *)(a1 + 20) |= 1u;
      uint64_t v7 = *(char **)(a1 + 8);
      if (!v7)
      {
        uint64_t v7 = (char *)operator new(0x28uLL);
        *(void *)uint64_t v7 = off_101827B80;
        *(_OWORD *)(v7 + 8) = 0u;
        *(_OWORD *)(v7 + 24) = 0u;
        *(void *)(a1 + 8) = v7;
      }

      char v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v17)) {
          return 0LL;
        }
      }

      else
      {
        unsigned int v17 = *v8;
        *((void *)this + 1) = v8 + 1;
      }

      int v9 = *((_DWORD *)this + 14);
      int v10 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v9 + 1;
      if (v9 >= v10) {
        return 0LL;
      }
      int v11 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v17);
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v11);
      int v13 = *((_DWORD *)this + 14);
      BOOL v14 = __OFSUB__(v13, 1);
      int v15 = v13 - 1;
      if (v15 < 0 == v14) {
        *((_DWORD *)this + 14) = v15;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
  }

  return 1LL;
}

uint64_t sub_1001E72DC( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if ((*(_BYTE *)(result + 20) & 1) != 0)
  {
    uint64_t v5 = *(void *)(result + 8);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_1019A0C48 + 8);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v5,  a2,  a4);
  }

  return result;
}

uint64_t sub_1001E7308(uint64_t a1)
{
  if ((*(_BYTE *)(a1 + 20) & 1) != 0)
  {
    uint64_t v2 = *(void *)(a1 + 8);
    if (!v2) {
      uint64_t v2 = *(void *)(qword_1019A0C48 + 8);
    }
    int v3 = *(unsigned __int8 *)(v2 + 36);
    if (*(_BYTE *)(v2 + 36))
    {
      int v4 = (v3 << 31 >> 31) & 9;
      if ((v3 & 2) != 0) {
        v4 += 9;
      }
      if ((v3 & 4) != 0) {
        int v3 = v4 + 9;
      }
      else {
        int v3 = v4;
      }
    }

    *(_DWORD *)(v2 + 32) = v3;
    uint64_t v1 = (v3 + 2);
  }

  else
  {
    uint64_t v1 = 0LL;
  }

  *(_DWORD *)(a1 + 16) = v1;
  return v1;
}

double sub_1001E736C(uint64_t a1, void *lpsrc)
{
  return sub_1001E6F74(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001E73B8()
{
  return 1LL;
}

void *sub_1001E73C0@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.Timer");
}

float sub_1001E73D0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v12,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  13724LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v12,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 52);
  if (!(_BYTE)v6) {
    return *(float *)&v5;
  }
  if ((*(_BYTE *)(a2 + 52) & 1) != 0)
  {
    *(_DWORD *)(a1 + 52) |= 1u;
    char v8 = *(char **)(a1 + 8);
    if (!v8)
    {
      char v8 = (char *)operator new(0x28uLL);
      *(void *)char v8 = off_101827B80;
      *(_OWORD *)(v8 + 8) = 0u;
      *(_OWORD *)(v8 + 24) = 0u;
      *(void *)(a1 + 8) = v8;
    }

    uint64_t v9 = *(void *)(a2 + 8);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_1019A0C50 + 8);
    }
    double v5 = sub_1001D323C((uint64_t)v8, v9);
    int v6 = *(_DWORD *)(a2 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_6:
      if ((v6 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_19;
    }
  }

  else if ((*(_BYTE *)(a2 + 52) & 2) == 0)
  {
    goto LABEL_6;
  }

  double v5 = *(double *)(a2 + 16);
  *(_DWORD *)(a1 + 52) |= 2u;
  *(double *)(a1 + 16) = v5;
  int v6 = *(_DWORD *)(a2 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_7:
    if ((v6 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }

void sub_1001E755C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001E7574(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_101828B70;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0C50 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1001E75C8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

uint64_t sub_1001E75DC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0C50;
  if (!qword_1019A0C50)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0C50;
  }

  return result;
}

double sub_1001E7608()
{
  unsigned __int8 v0 = (char *)operator new(0x38uLL);
  *(void *)unsigned __int8 v0 = &off_101828B70;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  return result;
}

uint64_t sub_1001E763C(uint64_t result)
{
  if (*(_BYTE *)(result + 52))
  {
    if ((*(_BYTE *)(result + 52) & 1) != 0)
    {
      uint64_t v1 = *(void *)(result + 8);
      if (v1)
      {
        if (*(_BYTE *)(v1 + 36))
        {
          *(void *)(v1 + 8) = 0LL;
          *(void *)(v1 + 16) = 0LL;
          *(void *)(v1 + 24) = 0LL;
        }

        *(_DWORD *)(v1 + 36) = 0;
      }
    }

    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
  }

  *(_DWORD *)(result + 52) = 0;
  return result;
}

uint64_t sub_1001E7674( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    double v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_25;
        }
        *(_DWORD *)(a1 + 52) |= 1u;
        char v8 = *(char **)(a1 + 8);
        if (!v8)
        {
          char v8 = (char *)operator new(0x28uLL);
          *(void *)char v8 = off_101827B80;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *(void *)(a1 + 8) = v8;
        }

        uint64_t v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v28)) {
            return 0LL;
          }
        }

        else
        {
          v28[0] = *v9;
          *((void *)this + 1) = v9 + 1;
        }

        int v12 = *((_DWORD *)this + 14);
        int v13 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v12 + 1;
        if (v12 >= v13) {
          return 0LL;
        }
        int v14 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v28[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v14);
        int v16 = *((_DWORD *)this + 14);
        BOOL v17 = __OFSUB__(v16, 1);
        int v18 = v16 - 1;
        if (v18 < 0 == v17) {
          *((_DWORD *)this + 14) = v18;
        }
        BOOL v19 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v19 + 1;
        goto LABEL_38;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_25;
        }
LABEL_38:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v28) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = *(void *)v28;
        *(_DWORD *)(a1 + 52) |= 2u;
        int v20 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v20 + 1;
LABEL_42:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v28) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 24) = *(void *)v28;
        *(_DWORD *)(a1 + 52) |= 4u;
        int v21 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v21 + 1;
LABEL_46:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v28) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 32) = v28[0];
        *(_DWORD *)(a1 + 52) |= 8u;
        unsigned int v22 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v22 + 1;
LABEL_50:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v28) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 36) = v28[0];
        *(_DWORD *)(a1 + 52) |= 0x10u;
        unsigned int v23 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v23 + 1;
LABEL_54:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v28) & 1) != 0)
        {
          *(_DWORD *)(a1 + 40) = v28[0];
          *(_DWORD *)(a1 + 52) |= 0x20u;
          unsigned int v24 = (_BYTE *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          if ((unint64_t)v24 < v10 && *v24 == 56)
          {
            char v11 = v24 + 1;
            *((void *)this + 1) = v11;
LABEL_58:
            if ((unint64_t)v11 >= v10 || *v11 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v28);
              if (!(_DWORD)result) {
                return result;
              }
              unsigned int v25 = v28[0];
              int v26 = (unsigned __int8 *)*((void *)this + 1);
              unint64_t v10 = *((void *)this + 2);
            }

            else
            {
              unsigned int v25 = *v11;
              int v26 = (unsigned __int8 *)(v11 + 1);
              *((void *)this + 1) = v26;
            }

            *(_DWORD *)(a1 + 44) = v25;
            *(_DWORD *)(a1 + 52) |= 0x40u;
            if (v26 == (unsigned __int8 *)v10
              && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              uint64_t result = 1LL;
              *((_BYTE *)this + 36) = 1;
              return result;
            }
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_42;
        }
        goto LABEL_25;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_46;
        }
        goto LABEL_25;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_50;
        }
        goto LABEL_25;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_54;
        }
        goto LABEL_25;
      case 7u:
        int v7 = TagFallback & 7;
        char v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_58;
      default:
        int v7 = TagFallback & 7;
LABEL_25:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001E7A64( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 52);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0C50 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  (int)a2,  *(double *)(v5 + 16),  a3);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }

uint64_t sub_1001E7B5C(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 52);
  if ((_BYTE)v3)
  {
    if ((*(_BYTE *)(a1 + 52) & 1) != 0)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_1019A0C50 + 8);
      }
      int v7 = *(unsigned __int8 *)(v6 + 36);
      if (*(_BYTE *)(v6 + 36))
      {
        int v8 = (v7 << 31 >> 31) & 9;
        if ((v7 & 2) != 0) {
          v8 += 9;
        }
        if ((v7 & 4) != 0) {
          int v7 = v8 + 9;
        }
        else {
          int v7 = v8;
        }
      }

      *(_DWORD *)(v6 + 32) = v7;
      unsigned int v4 = v7 + 2;
      int v3 = *(_DWORD *)(a1 + 52);
    }

    else
    {
      unsigned int v4 = 0;
    }

    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x20) != 0) {
      uint64_t v5 = v4 + 5;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 0x40) != 0)
    {
      uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 44);
      if ((v9 & 0x80000000) != 0)
      {
        int v10 = 11;
      }

      else if (v9 >= 0x80)
      {
        int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
      }

      else
      {
        int v10 = 2;
      }

      uint64_t v5 = (v10 + v5);
    }
  }

  else
  {
    uint64_t v5 = 0LL;
  }

  *(_DWORD *)(a1 + 48) = v5;
  return v5;
}

float sub_1001E7C54(uint64_t a1, void *lpsrc)
{
  return sub_1001E73D0(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001E7CA0()
{
  return 1LL;
}

void *sub_1001E7CA8@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.DigitalElevationModel");
}

void sub_1001E7CB8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v22,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  14304LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v22,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v21, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v22);
  }

  int v5 = *(_DWORD *)(a2 + 96);
  if (!(_BYTE)v5) {
    goto LABEL_13;
  }
  if ((v5 & 1) != 0)
  {
    *(_DWORD *)(a1 + 96) |= 1u;
    int v8 = *(char **)(a1 + 8);
    if (!v8)
    {
      int v8 = (char *)operator new(0x28uLL);
      *(void *)int v8 = off_101827B80;
      *(_OWORD *)(v8 + 8) = 0u;
      *(_OWORD *)(v8 + 24) = 0u;
      *(void *)(a1 + 8) = v8;
    }

    uint64_t v9 = *(void *)(a2 + 8);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_1019A0C58 + 8);
    }
    sub_1001D323C((uint64_t)v8, v9);
    int v5 = *(_DWORD *)(a2 + 96);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_28;
    }
  }

  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }

  uint64_t v10 = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 96) |= 2u;
  *(void *)(a1 + 16) = v10;
  int v5 = *(_DWORD *)(a2 + 96);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_29;
  }

void sub_1001E7F30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001E7F48(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_101828BE8;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0C58 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1001E7F9C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

double sub_1001E7FB0()
{
  unsigned __int8 v0 = (char *)operator new(0x68uLL);
  *(void *)unsigned __int8 v0 = &off_101828BE8;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_OWORD *)(v0 + 84) = 0u;
  return result;
}

uint64_t sub_1001E7FF0(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 96);
  if ((_BYTE)v1)
  {
    if ((v1 & 1) != 0)
    {
      uint64_t v2 = *(void *)(result + 8);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 36))
        {
          *(void *)(v2 + 8) = 0LL;
          *(void *)(v2 + 16) = 0LL;
          *(void *)(v2 + 24) = 0LL;
        }

        *(_DWORD *)(v2 + 36) = 0;
        int v1 = *(_DWORD *)(result + 96);
      }
    }

    *(void *)(result + 64) = 0LL;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 16) = 0u;
  }

  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(result + 72) = 0LL;
    *(void *)(result + 80) = 0LL;
    *(_DWORD *)(result + 88) = 0;
  }

  *(_DWORD *)(result + 96) = 0;
  return result;
}

uint64_t sub_1001E8048( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 96) |= 1u;
        int v8 = *(char **)(a1 + 8);
        if (!v8)
        {
          int v8 = (char *)operator new(0x28uLL);
          *(void *)int v8 = off_101827B80;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *(void *)(a1 + 8) = v8;
        }

        uint64_t v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v41)) {
            return 0LL;
          }
        }

        else
        {
          v41[0] = *v9;
          *((void *)this + 1) = v9 + 1;
        }

        int v15 = *((_DWORD *)this + 14);
        int v16 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v15 + 1;
        if (v15 >= v16) {
          return 0LL;
        }
        int v17 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v41[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v17);
        int v19 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v19, 1);
        int v21 = v19 - 1;
        if (v21 < 0 == v20) {
          *((_DWORD *)this + 14) = v21;
        }
        unsigned int v22 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v22 + 1;
        goto LABEL_52;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_39;
        }
LABEL_52:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v41) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = *(void *)v41;
        *(_DWORD *)(a1 + 96) |= 2u;
        unsigned int v23 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v23 + 1;
LABEL_56:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v41) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 24) = *(void *)v41;
        *(_DWORD *)(a1 + 96) |= 4u;
        unsigned int v24 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v24 + 1;
LABEL_60:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v41) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 32) = *(void *)v41;
        *(_DWORD *)(a1 + 96) |= 8u;
        unsigned int v25 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v25 + 1;
LABEL_64:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v41) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 40) = *(void *)v41;
        *(_DWORD *)(a1 + 96) |= 0x10u;
        int v26 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v26 + 1;
LABEL_68:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v41) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 48) = *(void *)v41;
        *(_DWORD *)(a1 + 96) |= 0x20u;
        int v27 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v27 + 1;
LABEL_72:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v41) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 56) = *(void *)v41;
        *(_DWORD *)(a1 + 96) |= 0x40u;
        int v28 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v28 + 1;
LABEL_76:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v41) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 64) = *(void *)v41;
        *(_DWORD *)(a1 + 96) |= 0x80u;
        int v29 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v29 + 1;
LABEL_80:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v41) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 72) = *(void *)v41;
        *(_DWORD *)(a1 + 96) |= 0x100u;
        unsigned int v30 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v30 + 1;
LABEL_84:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v41) & 1) != 0)
        {
          *(void *)(a1 + 80) = *(void *)v41;
          *(_DWORD *)(a1 + 96) |= 0x200u;
          int v31 = (_BYTE *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          if ((unint64_t)v31 < v10 && *v31 == 88)
          {
            uint64_t v11 = v31 + 1;
            *((void *)this + 1) = v11;
LABEL_88:
            if ((unint64_t)v11 >= v10 || *v11 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v41);
              if (!(_DWORD)result) {
                return result;
              }
              unsigned int v32 = v41[0];
              unsigned int v33 = (_BYTE *)*((void *)this + 1);
              unint64_t v10 = *((void *)this + 2);
            }

            else
            {
              unsigned int v32 = *v11;
              unsigned int v33 = v11 + 1;
              *((void *)this + 1) = v33;
            }

            *(_BYTE *)(a1 + 88) = v32 != 0;
            *(_DWORD *)(a1 + 96) |= 0x400u;
            if ((unint64_t)v33 < v10 && *v33 == 96)
            {
              uint64_t v12 = v33 + 1;
              *((void *)this + 1) = v12;
LABEL_96:
              if ((unint64_t)v12 >= v10 || *v12 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v41);
                if (!(_DWORD)result) {
                  return result;
                }
                unsigned int v35 = v41[0];
                int v36 = (_BYTE *)*((void *)this + 1);
                unint64_t v10 = *((void *)this + 2);
              }

              else
              {
                unsigned int v35 = *v12;
                int v36 = v12 + 1;
                *((void *)this + 1) = v36;
              }

              *(_BYTE *)(a1 + 89) = v35 != 0;
              *(_DWORD *)(a1 + 96) |= 0x800u;
              if ((unint64_t)v36 < v10 && *v36 == 104)
              {
                uint64_t v13 = v36 + 1;
                *((void *)this + 1) = v13;
LABEL_104:
                if ((unint64_t)v13 >= v10 || *v13 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v41);
                  if (!(_DWORD)result) {
                    return result;
                  }
                  unsigned int v37 = v41[0];
                  int v38 = (_BYTE *)*((void *)this + 1);
                  unint64_t v10 = *((void *)this + 2);
                }

                else
                {
                  unsigned int v37 = *v13;
                  int v38 = v13 + 1;
                  *((void *)this + 1) = v38;
                }

                *(_BYTE *)(a1 + 90) = v37 != 0;
                *(_DWORD *)(a1 + 96) |= 0x1000u;
                if ((unint64_t)v38 < v10 && *v38 == 112)
                {
                  uint64_t v14 = v38 + 1;
                  *((void *)this + 1) = v14;
LABEL_112:
                  if ((unint64_t)v14 >= v10 || *v14 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v41);
                    if (!(_DWORD)result) {
                      return result;
                    }
                    unsigned int v39 = v41[0];
                    uint64_t v40 = (unsigned __int8 *)*((void *)this + 1);
                    unint64_t v10 = *((void *)this + 2);
                  }

                  else
                  {
                    unsigned int v39 = *v14;
                    uint64_t v40 = (unsigned __int8 *)(v14 + 1);
                    *((void *)this + 1) = v40;
                  }

                  *(_BYTE *)(a1 + 91) = v39 != 0;
                  *(_DWORD *)(a1 + 96) |= 0x2000u;
                  if (v40 == (unsigned __int8 *)v10
                    && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                  {
                    *((_DWORD *)this + 8) = 0;
                    uint64_t result = 1LL;
                    *((_BYTE *)this + 36) = 1;
                    return result;
                  }
                }
              }
            }
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_56;
        }
        goto LABEL_39;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_60;
        }
        goto LABEL_39;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_64;
        }
        goto LABEL_39;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_68;
        }
        goto LABEL_39;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_72;
        }
        goto LABEL_39;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_76;
        }
        goto LABEL_39;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_80;
        }
        goto LABEL_39;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_84;
        }
        goto LABEL_39;
      case 0xBu:
        int v7 = TagFallback & 7;
        uint64_t v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_88;
      case 0xCu:
        int v7 = TagFallback & 7;
        uint64_t v12 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_96;
      case 0xDu:
        int v7 = TagFallback & 7;
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_104;
      case 0xEu:
        int v7 = TagFallback & 7;
        uint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_112;
      default:
        int v7 = TagFallback & 7;
LABEL_39:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001E8704( uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 96);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0C58 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 96);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  (int)a2,  *(double *)(v5 + 16),  a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }

uint64_t sub_1001E88C0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 96);
  if ((_BYTE)v1)
  {
    if ((v1 & 1) != 0)
    {
      uint64_t v2 = *(void *)(a1 + 8);
      if (!v2) {
        uint64_t v2 = *(void *)(qword_1019A0C58 + 8);
      }
      int v3 = *(unsigned __int8 *)(v2 + 36);
      if (*(_BYTE *)(v2 + 36))
      {
        int v4 = (v3 << 31 >> 31) & 9;
        if ((v3 & 2) != 0) {
          v4 += 9;
        }
        if ((v3 & 4) != 0) {
          int v3 = v4 + 9;
        }
        else {
          int v3 = v4;
        }
      }

      *(_DWORD *)(v2 + 32) = v3;
      LODWORD(v2) = v3 + 2;
      int v1 = *(_DWORD *)(a1 + 96);
    }

    else
    {
      LODWORD(v2) = 0;
    }

    if ((v1 & 2) != 0) {
      LODWORD(v2) = v2 + 9;
    }
    if ((v1 & 4) != 0) {
      LODWORD(v2) = v2 + 9;
    }
    if ((v1 & 8) != 0) {
      LODWORD(v2) = v2 + 9;
    }
    if ((v1 & 0x10) != 0) {
      LODWORD(v2) = v2 + 9;
    }
    if ((v1 & 0x20) != 0) {
      LODWORD(v2) = v2 + 9;
    }
    if ((v1 & 0x40) != 0) {
      LODWORD(v2) = v2 + 9;
    }
    if ((v1 & 0x80) != 0) {
      uint64_t v2 = (v2 + 9);
    }
    else {
      uint64_t v2 = v2;
    }
  }

  else
  {
    uint64_t v2 = 0LL;
  }

  if ((v1 & 0xFF00) != 0)
  {
    if ((v1 & 0x100) != 0) {
      LODWORD(v2) = v2 + 9;
    }
    if ((v1 & 0x200) != 0) {
      LODWORD(v2) = v2 + 9;
    }
    if ((v1 & 0x400) != 0) {
      LODWORD(v2) = v2 + 2;
    }
    if ((v1 & 0x800) != 0) {
      LODWORD(v2) = v2 + 2;
    }
    if ((v1 & 0x1000) != 0) {
      LODWORD(v2) = v2 + 2;
    }
    if ((v1 & 0x2000) != 0) {
      uint64_t v2 = (v2 + 2);
    }
    else {
      uint64_t v2 = v2;
    }
  }

  *(_DWORD *)(a1 + 92) = v2;
  return v2;
}

void sub_1001E89DC(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1001E8A28()
{
  return 1LL;
}

void *sub_1001E8A30@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.DirectionOfTravel");
}

void sub_1001E8A40(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v12,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  14603LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v12,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    {
      *(_DWORD *)(a1 + 32) |= 1u;
      int v6 = *(char **)(a1 + 8);
      if (!v6)
      {
        int v6 = (char *)operator new(0x28uLL);
        *(void *)int v6 = off_101827B80;
        *(_OWORD *)(v6 + 8) = 0u;
        *(_OWORD *)(v6 + 24) = 0u;
        *(void *)(a1 + 8) = v6;
      }

      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_1019A0C60 + 8);
      }
      sub_1001D323C((uint64_t)v6, v7);
      int v5 = *(_DWORD *)(a2 + 32);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return;
        }
        goto LABEL_14;
      }
    }

    else if ((*(_BYTE *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }

    int v8 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(_DWORD *)(a1 + 24) = v8;
    if ((*(_DWORD *)(a2 + 32) & 4) == 0) {
      return;
    }
LABEL_14:
    *(_DWORD *)(a1 + 32) |= 4u;
    uint64_t v9 = *(char **)(a1 + 16);
    if (!v9)
    {
      uint64_t v9 = (char *)operator new(0x68uLL);
      *(void *)uint64_t v9 = &off_101828BE8;
      *(_OWORD *)(v9 + 8) = 0u;
      *(_OWORD *)(v9 + 24) = 0u;
      *(_OWORD *)(v9 + 40) = 0u;
      *(_OWORD *)(v9 + 56) = 0u;
      *(_OWORD *)(v9 + 72) = 0u;
      *(_OWORD *)(v9 + 84) = 0u;
      *(void *)(a1 + 16) = v9;
    }

    uint64_t v10 = *(void *)(a2 + 16);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_1019A0C60 + 16);
    }
    sub_1001E7CB8((uint64_t)v9, v10);
  }

void sub_1001E8B98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void *sub_1001E8BB0(void *result)
{
  if ((void *)qword_1019A0C60 != result)
  {
    int v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    uint64_t result = (void *)v1[2];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_1001E8C0C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101828C60;
  sub_1001E8BB0(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001E8C3C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101828C60;
  sub_1001E8BB0(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v2);
}

uint64_t sub_1001E8C70(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0C60;
  if (!qword_1019A0C60)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0C60;
  }

  return result;
}

void *sub_1001E8C9C()
{
  uint64_t result = operator new(0x28uLL);
  *uint64_t result = off_101828C60;
  result[1] = 0LL;
  result[2] = 0LL;
  result[3] = 0LL;
  *((_DWORD *)result + 8) = 0;
  return result;
}

uint64_t sub_1001E8CC8(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(_BYTE *)(result + 32);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(result + 32) & 1) != 0)
    {
      uint64_t v3 = *(void *)(result + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0LL;
          *(void *)(v3 + 16) = 0LL;
          *(void *)(v3 + 24) = 0LL;
        }

        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(result + 32);
      }
    }

    *(_DWORD *)(result + 24) = 0;
    if ((v2 & 4) != 0)
    {
      uint64_t result = *(void *)(result + 16);
      if (result) {
        uint64_t result = sub_1001E7FF0(result);
      }
    }
  }

  *(_DWORD *)(v1 + 32) = 0;
  return result;
}

uint64_t sub_1001E8D28( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    do
    {
      while (1)
      {
        while (1)
        {
          int v5 = (char *)*((void *)this + 1);
          if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
          {
            TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = (_DWORD)TagFallback;
            if (!(_DWORD)TagFallback) {
              return 1LL;
            }
          }

          else
          {
            TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
            *((_DWORD *)this + 8) = (_DWORD)TagFallback;
            *((void *)this + 1) = v5 + 1;
            if (!(_DWORD)TagFallback) {
              return 1LL;
            }
          }

          unsigned int v7 = TagFallback >> 3;
          int v8 = TagFallback & 7;
          if (v8 != 2) {
            goto LABEL_20;
          }
          *(_DWORD *)(a1 + 32) |= 1u;
          uint64_t v10 = *(char **)(a1 + 8);
          if (!v10)
          {
            uint64_t v10 = (char *)operator new(0x28uLL);
            *(void *)uint64_t v10 = off_101827B80;
            *(_OWORD *)(v10 + 8) = 0u;
            *(_OWORD *)(v10 + 24) = 0u;
            *(void *)(a1 + 8) = v10;
          }

          char v11 = (char *)*((void *)this + 1);
          if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v34)) {
              return 0LL;
            }
          }

          else
          {
            unsigned int v34 = *v11;
            *((void *)this + 1) = v11 + 1;
          }

          int v14 = *((_DWORD *)this + 14);
          int v15 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v14 + 1;
          if (v14 >= v15) {
            return 0LL;
          }
          int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34);
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
          int v18 = *((_DWORD *)this + 14);
          BOOL v19 = __OFSUB__(v18, 1);
          int v20 = v18 - 1;
          if (v20 < 0 == v19) {
            *((_DWORD *)this + 14) = v20;
          }
          int v21 = (_BYTE *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          if ((unint64_t)v21 < v12 && *v21 == 16)
          {
            uint64_t v13 = v21 + 1;
            *((void *)this + 1) = v13;
            goto LABEL_32;
          }
        }

        if (v7 == 2) {
          break;
        }
        if (v7 == 3)
        {
          int v8 = TagFallback & 7;
          if (v8 == 2)
          {
            int v9 = *(_DWORD *)(a1 + 32);
            goto LABEL_40;
          }
        }

        else
        {
          int v8 = TagFallback & 7;
        }

uint64_t sub_1001E9070( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_8:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(_DWORD *)(v5 + 24),  (int)a2,  a4);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0) {
      return result;
    }
    goto LABEL_9;
  }

  uint64_t v7 = *(void *)(result + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_1019A0C60 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_9:
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_1019A0C60 + 16);
  }
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  v8,  a2,  a4);
}

uint64_t sub_1001E9108(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 32);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0LL;
    goto LABEL_28;
  }

  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
  {
    uint64_t v5 = *(void *)(a1 + 8);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_1019A0C60 + 8);
    }
    int v6 = *(unsigned __int8 *)(v5 + 36);
    if (*(_BYTE *)(v5 + 36))
    {
      int v7 = (v6 << 31 >> 31) & 9;
      if ((v6 & 2) != 0) {
        v7 += 9;
      }
      if ((v6 & 4) != 0) {
        int v6 = v7 + 9;
      }
      else {
        int v6 = v7;
      }
    }

    *(_DWORD *)(v5 + 32) = v6;
    uint64_t v4 = (v6 + 2);
    int v3 = *(_DWORD *)(a1 + 32);
    if ((v3 & 2) == 0) {
      goto LABEL_21;
    }
  }

  else
  {
    uint64_t v4 = 0LL;
    if ((*(_BYTE *)(a1 + 32) & 2) == 0) {
      goto LABEL_21;
    }
  }

  uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if ((v8 & 0x80000000) != 0)
  {
    int v9 = 11;
  }

  else if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 32);
  }

  else
  {
    int v9 = 2;
  }

  uint64_t v4 = (v9 + v4);
LABEL_21:
  if ((v3 & 4) != 0)
  {
    uint64_t v10 = *(void *)(a1 + 16);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_1019A0C60 + 16);
    }
    char v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001E88C0(v10);
    int v13 = (int)v11;
    else {
      int v14 = 1;
    }
    uint64_t v4 = (v4 + v13 + v14 + 1);
  }

void sub_1001E9218(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1001E9264()
{
  return 1LL;
}

void *sub_1001E926C@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.MapVector");
}

void sub_1001E927C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v16,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  14989LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v16,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v15, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 48);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 48) & 1) != 0)
    {
      *(_DWORD *)(a1 + 48) |= 1u;
      int v7 = *(char **)(a1 + 8);
      if (!v7)
      {
        int v7 = (char *)operator new(0x28uLL);
        *(void *)int v7 = off_101827B80;
        *(_OWORD *)(v7 + 8) = 0u;
        *(_OWORD *)(v7 + 24) = 0u;
        *(void *)(a1 + 8) = v7;
      }

      uint64_t v8 = *(void *)(a2 + 8);
      if (!v8) {
        uint64_t v8 = *(void *)(qword_1019A0C68 + 8);
      }
      sub_1001D323C((uint64_t)v7, v8);
      int v5 = *(_DWORD *)(a2 + 48);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_20;
      }
    }

    else if ((*(_BYTE *)(a2 + 48) & 2) == 0)
    {
      goto LABEL_6;
    }

    uint64_t v9 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 48) |= 2u;
    *(void *)(a1 + 16) = v9;
    int v5 = *(_DWORD *)(a2 + 48);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_21;
    }

void sub_1001E9428(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001E9440(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_101828CD8;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0C68 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1001E9494(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

double sub_1001E94A8()
{
  unsigned __int8 v0 = (char *)operator new(0x38uLL);
  *(void *)unsigned __int8 v0 = &off_101828CD8;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 36) = 0u;
  return result;
}

uint64_t sub_1001E94DC(uint64_t result)
{
  if (*(_BYTE *)(result + 48))
  {
    if ((*(_BYTE *)(result + 48) & 1) != 0)
    {
      uint64_t v1 = *(void *)(result + 8);
      if (v1)
      {
        if (*(_BYTE *)(v1 + 36))
        {
          *(void *)(v1 + 8) = 0LL;
          *(void *)(v1 + 16) = 0LL;
          *(void *)(v1 + 24) = 0LL;
        }

        *(_DWORD *)(v1 + 36) = 0;
      }
    }

    *(void *)(result + 16) = 0LL;
    *(void *)(result + 24) = 0LL;
    *(_DWORD *)(result + 40) = 0;
    *(void *)(result + 32) = 0LL;
  }

  *(_DWORD *)(result + 48) = 0;
  return result;
}

uint64_t sub_1001E9518( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_27;
        }
        *(_DWORD *)(a1 + 48) |= 1u;
        uint64_t v8 = *(char **)(a1 + 8);
        if (!v8)
        {
          uint64_t v8 = (char *)operator new(0x28uLL);
          *(void *)uint64_t v8 = off_101827B80;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *(void *)(a1 + 8) = v8;
        }

        uint64_t v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v35)) {
            return 0LL;
          }
        }

        else
        {
          v35[0] = *v9;
          *((void *)this + 1) = v9 + 1;
        }

        int v15 = *((_DWORD *)this + 14);
        int v16 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v15 + 1;
        if (v15 >= v16) {
          return 0LL;
        }
        int v17 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v35[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v17);
        int v19 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v19, 1);
        int v21 = v19 - 1;
        if (v21 < 0 == v20) {
          *((_DWORD *)this + 14) = v21;
        }
        unsigned int v22 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v22 + 1;
        goto LABEL_40;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_27;
        }
LABEL_40:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v35) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = *(void *)v35;
        *(_DWORD *)(a1 + 48) |= 2u;
        unsigned int v23 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v23 + 1;
LABEL_44:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v35) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 24) = *(void *)v35;
        *(_DWORD *)(a1 + 48) |= 4u;
        unsigned int v24 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v24 + 1;
LABEL_48:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v35) & 1) != 0)
        {
          *(void *)(a1 + 32) = *(void *)v35;
          *(_DWORD *)(a1 + 48) |= 8u;
          unsigned int v25 = (_BYTE *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          if ((unint64_t)v25 < v10 && *v25 == 40)
          {
            uint64_t v11 = v25 + 1;
            *((void *)this + 1) = v11;
LABEL_52:
            if ((unint64_t)v11 >= v10 || *v11 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v35);
              if (!(_DWORD)result) {
                return result;
              }
              unsigned int v26 = v35[0];
              int v27 = (_BYTE *)*((void *)this + 1);
              unint64_t v10 = *((void *)this + 2);
            }

            else
            {
              unsigned int v26 = *v11;
              int v27 = v11 + 1;
              *((void *)this + 1) = v27;
            }

            *(_BYTE *)(a1 + 40) = v26 != 0;
            *(_DWORD *)(a1 + 48) |= 0x10u;
            if ((unint64_t)v27 < v10 && *v27 == 48)
            {
              char v12 = v27 + 1;
              *((void *)this + 1) = v12;
LABEL_60:
              if ((unint64_t)v12 >= v10 || *v12 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v35);
                if (!(_DWORD)result) {
                  return result;
                }
                unsigned int v29 = v35[0];
                unsigned int v30 = (_BYTE *)*((void *)this + 1);
                unint64_t v10 = *((void *)this + 2);
              }

              else
              {
                unsigned int v29 = *v12;
                unsigned int v30 = v12 + 1;
                *((void *)this + 1) = v30;
              }

              *(_BYTE *)(a1 + 41) = v29 != 0;
              *(_DWORD *)(a1 + 48) |= 0x20u;
              if ((unint64_t)v30 < v10 && *v30 == 56)
              {
                char v13 = v30 + 1;
                *((void *)this + 1) = v13;
LABEL_68:
                if ((unint64_t)v13 >= v10 || *v13 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v35);
                  if (!(_DWORD)result) {
                    return result;
                  }
                  unsigned int v31 = v35[0];
                  int v32 = (_BYTE *)*((void *)this + 1);
                  unint64_t v10 = *((void *)this + 2);
                }

                else
                {
                  unsigned int v31 = *v13;
                  int v32 = v13 + 1;
                  *((void *)this + 1) = v32;
                }

                *(_BYTE *)(a1 + 42) = v31 != 0;
                *(_DWORD *)(a1 + 48) |= 0x40u;
                if ((unint64_t)v32 < v10 && *v32 == 64)
                {
                  char v14 = v32 + 1;
                  *((void *)this + 1) = v14;
LABEL_76:
                  if ((unint64_t)v14 >= v10 || *v14 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v35);
                    if (!(_DWORD)result) {
                      return result;
                    }
                    unsigned int v33 = v35[0];
                    unsigned int v34 = (unsigned __int8 *)*((void *)this + 1);
                    unint64_t v10 = *((void *)this + 2);
                  }

                  else
                  {
                    unsigned int v33 = *v14;
                    unsigned int v34 = (unsigned __int8 *)(v14 + 1);
                    *((void *)this + 1) = v34;
                  }

                  *(_BYTE *)(a1 + 43) = v33 != 0;
                  *(_DWORD *)(a1 + 48) |= 0x80u;
                  if (v34 == (unsigned __int8 *)v10
                    && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                  {
                    *((_DWORD *)this + 8) = 0;
                    uint64_t result = 1LL;
                    *((_BYTE *)this + 36) = 1;
                    return result;
                  }
                }
              }
            }
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_44;
        }
        goto LABEL_27;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_48;
        }
        goto LABEL_27;
      case 5u:
        int v7 = TagFallback & 7;
        uint64_t v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_52;
      case 6u:
        int v7 = TagFallback & 7;
        char v12 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_60;
      case 7u:
        int v7 = TagFallback & 7;
        char v13 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_68;
      case 8u:
        int v7 = TagFallback & 7;
        char v14 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_76;
      default:
        int v7 = TagFallback & 7;
LABEL_27:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001E99DC( uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 48);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0C68 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  (int)a2,  *(double *)(v5 + 16),  a3);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }

uint64_t sub_1001E9AF0(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 48);
  if (*(_BYTE *)(a1 + 48))
  {
    if ((v1 & 1) != 0)
    {
      uint64_t v1 = *(void *)(a1 + 8);
      if (!v1) {
        uint64_t v1 = *(void *)(qword_1019A0C68 + 8);
      }
      int v3 = *(unsigned __int8 *)(v1 + 36);
      if (*(_BYTE *)(v1 + 36))
      {
        int v4 = (v3 << 31 >> 31) & 9;
        if ((v3 & 2) != 0) {
          v4 += 9;
        }
        if ((v3 & 4) != 0) {
          int v3 = v4 + 9;
        }
        else {
          int v3 = v4;
        }
      }

      *(_DWORD *)(v1 + 32) = v3;
      unsigned int v2 = v3 + 2;
      LODWORD(v1) = *(_DWORD *)(a1 + 48);
    }

    else
    {
      unsigned int v2 = 0;
    }

    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      v2 += 9;
    }
    if ((v1 & 8) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x10) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x20) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x40) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x80) != 0) {
      uint64_t v1 = v2 + 2;
    }
    else {
      uint64_t v1 = v2;
    }
  }

  *(_DWORD *)(a1 + 44) = v1;
  return v1;
}

void sub_1001E9BB0(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1001E9BFC()
{
  return 1LL;
}

void *sub_1001E9C04@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.TunnelBridgeAssistance");
}

void sub_1001E9C14(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v12,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  15262LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v12,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    {
      *(_DWORD *)(a1 + 32) |= 1u;
      int v6 = *(char **)(a1 + 8);
      if (!v6)
      {
        int v6 = (char *)operator new(0x28uLL);
        *(void *)int v6 = off_101827B80;
        *(_OWORD *)(v6 + 8) = 0u;
        *(_OWORD *)(v6 + 24) = 0u;
        *(void *)(a1 + 8) = v6;
      }

      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_1019A0C70 + 8);
      }
      sub_1001D323C((uint64_t)v6, v7);
      int v5 = *(_DWORD *)(a2 + 32);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return;
        }
        goto LABEL_14;
      }
    }

    else if ((*(_BYTE *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }

    int v8 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(_DWORD *)(a1 + 24) = v8;
    if ((*(_DWORD *)(a2 + 32) & 4) == 0) {
      return;
    }
LABEL_14:
    *(_DWORD *)(a1 + 32) |= 4u;
    uint64_t v9 = *(char **)(a1 + 16);
    if (!v9)
    {
      uint64_t v9 = (char *)operator new(0x38uLL);
      *(void *)uint64_t v9 = &off_101828CD8;
      *(_OWORD *)(v9 + 8) = 0u;
      *(_OWORD *)(v9 + 24) = 0u;
      *(_OWORD *)(v9 + 36) = 0u;
      *(void *)(a1 + 16) = v9;
    }

    uint64_t v10 = *(void *)(a2 + 16);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_1019A0C70 + 16);
    }
    sub_1001E927C((uint64_t)v9, v10);
  }

void sub_1001E9D60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void *sub_1001E9D78(void *result)
{
  if ((void *)qword_1019A0C70 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    uint64_t result = (void *)v1[2];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_1001E9DD4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101828D50;
  sub_1001E9D78(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001E9E04(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101828D50;
  sub_1001E9D78(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v2);
}

uint64_t sub_1001E9E38(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0C70;
  if (!qword_1019A0C70)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0C70;
  }

  return result;
}

void *sub_1001E9E64()
{
  uint64_t result = operator new(0x28uLL);
  *uint64_t result = off_101828D50;
  result[1] = 0LL;
  result[2] = 0LL;
  result[3] = 0LL;
  *((_DWORD *)result + 8) = 0;
  return result;
}

uint64_t sub_1001E9E90(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(_BYTE *)(result + 32);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(result + 32) & 1) != 0)
    {
      uint64_t v3 = *(void *)(result + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0LL;
          *(void *)(v3 + 16) = 0LL;
          *(void *)(v3 + 24) = 0LL;
        }

        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(result + 32);
      }
    }

    *(_DWORD *)(result + 24) = 0;
    if ((v2 & 4) != 0)
    {
      uint64_t result = *(void *)(result + 16);
      if (result) {
        uint64_t result = sub_1001E94DC(result);
      }
    }
  }

  *(_DWORD *)(v1 + 32) = 0;
  return result;
}

uint64_t sub_1001E9EF0( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    do
    {
      while (1)
      {
        while (1)
        {
          int v5 = (char *)*((void *)this + 1);
          if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
          {
            TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = (_DWORD)TagFallback;
            if (!(_DWORD)TagFallback) {
              return 1LL;
            }
          }

          else
          {
            TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
            *((_DWORD *)this + 8) = (_DWORD)TagFallback;
            *((void *)this + 1) = v5 + 1;
            if (!(_DWORD)TagFallback) {
              return 1LL;
            }
          }

          unsigned int v7 = TagFallback >> 3;
          int v8 = TagFallback & 7;
          if (v8 != 2) {
            goto LABEL_20;
          }
          *(_DWORD *)(a1 + 32) |= 1u;
          uint64_t v10 = *(char **)(a1 + 8);
          if (!v10)
          {
            uint64_t v10 = (char *)operator new(0x28uLL);
            *(void *)uint64_t v10 = off_101827B80;
            *(_OWORD *)(v10 + 8) = 0u;
            *(_OWORD *)(v10 + 24) = 0u;
            *(void *)(a1 + 8) = v10;
          }

          char v11 = (char *)*((void *)this + 1);
          if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v34)) {
              return 0LL;
            }
          }

          else
          {
            unsigned int v34 = *v11;
            *((void *)this + 1) = v11 + 1;
          }

          int v14 = *((_DWORD *)this + 14);
          int v15 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v14 + 1;
          if (v14 >= v15) {
            return 0LL;
          }
          int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34);
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
          int v18 = *((_DWORD *)this + 14);
          BOOL v19 = __OFSUB__(v18, 1);
          int v20 = v18 - 1;
          if (v20 < 0 == v19) {
            *((_DWORD *)this + 14) = v20;
          }
          int v21 = (_BYTE *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          if ((unint64_t)v21 < v12 && *v21 == 16)
          {
            char v13 = v21 + 1;
            *((void *)this + 1) = v13;
            goto LABEL_32;
          }
        }

        if (v7 == 2) {
          break;
        }
        if (v7 == 3)
        {
          int v8 = TagFallback & 7;
          if (v8 == 2)
          {
            int v9 = *(_DWORD *)(a1 + 32);
            goto LABEL_40;
          }
        }

        else
        {
          int v8 = TagFallback & 7;
        }

uint64_t sub_1001EA22C( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_8:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(_DWORD *)(v5 + 24),  (int)a2,  a4);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0) {
      return result;
    }
    goto LABEL_9;
  }

  uint64_t v7 = *(void *)(result + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_1019A0C70 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_9:
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_1019A0C70 + 16);
  }
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  v8,  a2,  a4);
}

uint64_t sub_1001EA2C4(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 32);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0LL;
    goto LABEL_28;
  }

  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
  {
    uint64_t v5 = *(void *)(a1 + 8);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_1019A0C70 + 8);
    }
    int v6 = *(unsigned __int8 *)(v5 + 36);
    if (*(_BYTE *)(v5 + 36))
    {
      int v7 = (v6 << 31 >> 31) & 9;
      if ((v6 & 2) != 0) {
        v7 += 9;
      }
      if ((v6 & 4) != 0) {
        int v6 = v7 + 9;
      }
      else {
        int v6 = v7;
      }
    }

    *(_DWORD *)(v5 + 32) = v6;
    uint64_t v4 = (v6 + 2);
    int v3 = *(_DWORD *)(a1 + 32);
    if ((v3 & 2) == 0) {
      goto LABEL_21;
    }
  }

  else
  {
    uint64_t v4 = 0LL;
    if ((*(_BYTE *)(a1 + 32) & 2) == 0) {
      goto LABEL_21;
    }
  }

  uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if ((v8 & 0x80000000) != 0)
  {
    int v9 = 11;
  }

  else if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 32);
  }

  else
  {
    int v9 = 2;
  }

  uint64_t v4 = (v9 + v4);
LABEL_21:
  if ((v3 & 4) != 0)
  {
    uint64_t v10 = *(void *)(a1 + 16);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_1019A0C70 + 16);
    }
    char v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001E9AF0(v10);
    int v13 = (int)v11;
    else {
      int v14 = 1;
    }
    uint64_t v4 = (v4 + v13 + v14 + 1);
  }

void sub_1001EA3D4(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1001EA420()
{
  return 1LL;
}

void *sub_1001EA428@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.TunnelBridgeNotification");
}

double sub_1001EA438(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v12,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  15860LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v12,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }

  int v6 = *(_DWORD *)(a2 + 124);
  if (!(_BYTE)v6) {
    goto LABEL_13;
  }
  if ((v6 & 1) != 0)
  {
    *(_DWORD *)(a1 + 124) |= 1u;
    int v7 = *(char **)(a1 + 8);
    if (!v7)
    {
      int v7 = (char *)operator new(0x28uLL);
      *(void *)int v7 = off_101827B80;
      *(_OWORD *)(v7 + 8) = 0u;
      *(_OWORD *)(v7 + 24) = 0u;
      *(void *)(a1 + 8) = v7;
    }

    uint64_t v8 = *(void *)(a2 + 8);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1019A0C78 + 8);
    }
    double result = sub_1001D323C((uint64_t)v7, v8);
    int v6 = *(_DWORD *)(a2 + 124);
    if ((v6 & 2) == 0)
    {
LABEL_6:
      if ((v6 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_29;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_6;
  }

  double result = *(double *)(a2 + 16);
  *(_DWORD *)(a1 + 124) |= 2u;
  *(double *)(a1 + 16) = result;
  int v6 = *(_DWORD *)(a2 + 124);
  if ((v6 & 4) == 0)
  {
LABEL_7:
    if ((v6 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_30;
  }

void sub_1001EA6DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001EA6F4(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_101828DC8;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0C78 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1001EA748(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

double sub_1001EA75C()
{
  unsigned __int8 v0 = (char *)operator new(0x80uLL);
  *(void *)unsigned __int8 v0 = &off_101828DC8;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(void *)(v0 + 69) = 0LL;
  *((_OWORD *)v0 + 5) = 0u;
  *((_OWORD *)v0 + 6) = 0u;
  *((_OWORD *)v0 + 7) = 0u;
  return result;
}

uint64_t sub_1001EA7A0(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 124);
  if ((_BYTE)v1)
  {
    if ((v1 & 1) != 0)
    {
      uint64_t v2 = *(void *)(result + 8);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 36))
        {
          *(void *)(v2 + 8) = 0LL;
          *(void *)(v2 + 16) = 0LL;
          *(void *)(v2 + 24) = 0LL;
        }

        *(_DWORD *)(v2 + 36) = 0;
        int v1 = *(_DWORD *)(result + 124);
      }
    }

    *(_DWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
  }

  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(result + 64) = 0LL;
    *(_BYTE *)(result + 76) = 0;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(void *)(result + 112) = 0LL;
  }

  *(_DWORD *)(result + 124) = 0;
  return result;
}

uint64_t sub_1001EA804( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 124) |= 1u;
        uint64_t v8 = *(char **)(a1 + 8);
        if (!v8)
        {
          uint64_t v8 = (char *)operator new(0x28uLL);
          *(void *)uint64_t v8 = off_101827B80;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *(void *)(a1 + 8) = v8;
        }

        unsigned int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v38)) {
            return 0LL;
          }
        }

        else
        {
          v38[0] = *v9;
          *((void *)this + 1) = v9 + 1;
        }

        int v14 = *((_DWORD *)this + 14);
        int v15 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v14 + 1;
        if (v14 >= v15) {
          return 0LL;
        }
        int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v38[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
        int v18 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v18, 1);
        int v20 = v18 - 1;
        if (v20 < 0 == v19) {
          *((_DWORD *)this + 14) = v20;
        }
        int v21 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v21 + 1;
        goto LABEL_53;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_41;
        }
LABEL_53:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v38) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = *(void *)v38;
        *(_DWORD *)(a1 + 124) |= 2u;
        unsigned int v22 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v22 + 1;
LABEL_57:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v38) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 24) = *(void *)v38;
        *(_DWORD *)(a1 + 124) |= 4u;
        unsigned int v23 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v23 + 1;
LABEL_61:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v38) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 32) = *(void *)v38;
        *(_DWORD *)(a1 + 124) |= 8u;
        unsigned int v24 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v24 + 1;
LABEL_65:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v38) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 40) = *(void *)v38;
        *(_DWORD *)(a1 + 124) |= 0x10u;
        unsigned int v25 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v25 + 1;
LABEL_69:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v38) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 48) = *(void *)v38;
        *(_DWORD *)(a1 + 124) |= 0x20u;
        unsigned int v26 = (_BYTE *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        char v11 = v26 + 1;
        *((void *)this + 1) = v11;
LABEL_73:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v38);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v27 = v38[0];
        }

        else
        {
          unsigned int v27 = *v11;
          *((void *)this + 1) = v11 + 1;
        }

        if (v27 <= 2)
        {
          *(_DWORD *)(a1 + 124) |= 0x40u;
          *(_DWORD *)(a1 + 72) = v27;
        }

        int v29 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v29 + 1;
LABEL_83:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v38) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 56) = *(void *)v38;
        *(_DWORD *)(a1 + 124) |= 0x80u;
        unsigned int v30 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v30 + 1;
LABEL_87:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v38) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 64) = *(void *)v38;
        *(_DWORD *)(a1 + 124) |= 0x100u;
        int v31 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v31 + 1;
LABEL_91:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v38) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 80) = *(void *)v38;
        *(_DWORD *)(a1 + 124) |= 0x200u;
        int v32 = (_BYTE *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        int v13 = v32 + 1;
        *((void *)this + 1) = v13;
LABEL_95:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v38);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v33 = v38[0];
          unsigned int v34 = (_BYTE *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }

        else
        {
          unsigned int v33 = *v13;
          unsigned int v34 = v13 + 1;
          *((void *)this + 1) = v34;
        }

        *(_BYTE *)(a1 + 76) = v33 != 0;
        *(_DWORD *)(a1 + 124) |= 0x400u;
        *((void *)this + 1) = v34 + 1;
LABEL_103:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v38) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 88) = *(void *)v38;
        *(_DWORD *)(a1 + 124) |= 0x800u;
        unsigned int v35 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v35 + 1;
LABEL_107:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v38) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 96) = *(void *)v38;
        *(_DWORD *)(a1 + 124) |= 0x1000u;
        int v36 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v36 + 1;
LABEL_111:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v38) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 104) = *(void *)v38;
        *(_DWORD *)(a1 + 124) |= 0x2000u;
        unsigned int v37 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v37 + 1;
LABEL_115:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v38) & 1) != 0)
        {
          *(void *)(a1 + 112) = *(void *)v38;
          *(_DWORD *)(a1 + 124) |= 0x4000u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1LL;
            *((_BYTE *)this + 36) = 1;
            return result;
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_57;
        }
        goto LABEL_41;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_61;
        }
        goto LABEL_41;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_65;
        }
        goto LABEL_41;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_69;
        }
        goto LABEL_41;
      case 7u:
        int v7 = TagFallback & 7;
        char v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_73;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_83;
        }
        goto LABEL_41;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_87;
        }
        goto LABEL_41;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_91;
        }
        goto LABEL_41;
      case 0xBu:
        int v7 = TagFallback & 7;
        int v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_95;
      case 0xCu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_103;
        }
        goto LABEL_41;
      case 0xDu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_107;
        }
        goto LABEL_41;
      case 0xEu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_111;
        }
        goto LABEL_41;
      case 0xFu:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_41;
        }
        goto LABEL_115;
      default:
        int v7 = TagFallback & 7;
LABEL_41:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001EAEC0( uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 124);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0C78 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 124);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_21;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  (int)a2,  *(double *)(v5 + 16),  a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_22;
  }

uint64_t sub_1001EB098(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 124);
  if ((_BYTE)v3)
  {
    if ((v3 & 1) != 0)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_1019A0C78 + 8);
      }
      int v7 = *(unsigned __int8 *)(v6 + 36);
      if (*(_BYTE *)(v6 + 36))
      {
        int v8 = (v7 << 31 >> 31) & 9;
        if ((v7 & 2) != 0) {
          v8 += 9;
        }
        if ((v7 & 4) != 0) {
          int v7 = v8 + 9;
        }
        else {
          int v7 = v8;
        }
      }

      *(_DWORD *)(v6 + 32) = v7;
      int v4 = v7 + 2;
      int v3 = *(_DWORD *)(a1 + 124);
    }

    else
    {
      int v4 = 0;
    }

    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x20) != 0) {
      unsigned int v9 = v4 + 9;
    }
    else {
      unsigned int v9 = v4;
    }
    if ((v3 & 0x40) != 0)
    {
      unint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 72);
      if ((v10 & 0x80000000) != 0)
      {
        int v11 = 11;
      }

      else if (v10 >= 0x80)
      {
        int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 124);
      }

      else
      {
        int v11 = 2;
      }

      v9 += v11;
    }

    if ((v3 & 0x80) != 0) {
      uint64_t result = v9 + 9;
    }
    else {
      uint64_t result = v9;
    }
  }

  else
  {
    uint64_t result = 0LL;
  }

  if ((v3 & 0xFF00) != 0)
  {
    unsigned int v12 = result + 9;
    if ((v3 & 0x100) == 0) {
      unsigned int v12 = result;
    }
    if ((v3 & 0x200) != 0) {
      v12 += 9;
    }
    if ((v3 & 0x400) != 0) {
      v12 += 2;
    }
    if ((v3 & 0x800) != 0) {
      v12 += 9;
    }
    if ((v3 & 0x1000) != 0) {
      v12 += 9;
    }
    if ((v3 & 0x2000) != 0) {
      v12 += 9;
    }
    if ((v3 & 0x4000) != 0) {
      uint64_t result = v12 + 9;
    }
    else {
      uint64_t result = v12;
    }
  }

  *(_DWORD *)(a1 + 120) = result;
  return result;
}

double sub_1001EB1FC(uint64_t a1, void *lpsrc)
{
  return sub_1001EA438(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001EB248()
{
  return 1LL;
}

void *sub_1001EB250@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.TunnelEndPointAssistance");
}

double sub_1001EB260(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v13,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  16163LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v13,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v12, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 32);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    {
      *(_DWORD *)(a1 + 32) |= 1u;
      int v7 = *(char **)(a1 + 8);
      if (!v7)
      {
        int v7 = (char *)operator new(0x28uLL);
        *(void *)int v7 = off_101827B80;
        *(_OWORD *)(v7 + 8) = 0u;
        *(_OWORD *)(v7 + 24) = 0u;
        *(void *)(a1 + 8) = v7;
      }

      uint64_t v8 = *(void *)(a2 + 8);
      if (!v8) {
        uint64_t v8 = *(void *)(qword_1019A0C80 + 8);
      }
      double result = sub_1001D323C((uint64_t)v7, v8);
      int v6 = *(_DWORD *)(a2 + 32);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0) {
          return result;
        }
        goto LABEL_14;
      }
    }

    else if ((*(_BYTE *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }

    int v9 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(_DWORD *)(a1 + 24) = v9;
    if ((*(_DWORD *)(a2 + 32) & 4) == 0) {
      return result;
    }
LABEL_14:
    *(_DWORD *)(a1 + 32) |= 4u;
    unint64_t v10 = *(char **)(a1 + 16);
    if (!v10)
    {
      unint64_t v10 = (char *)operator new(0x80uLL);
      *(void *)unint64_t v10 = &off_101828DC8;
      *(_OWORD *)(v10 + 8) = 0u;
      *(_OWORD *)(v10 + 24) = 0u;
      *(_OWORD *)(v10 + 40) = 0u;
      *(_OWORD *)(v10 + 56) = 0u;
      *(void *)(v10 + 69) = 0LL;
      *((_OWORD *)v10 + 5) = 0u;
      *((_OWORD *)v10 + 6) = 0u;
      *((_OWORD *)v10 + 7) = 0u;
      *(void *)(a1 + 16) = v10;
    }

    uint64_t v11 = *(void *)(a2 + 16);
    if (!v11) {
      uint64_t v11 = *(void *)(qword_1019A0C80 + 16);
    }
    return sub_1001EA438((uint64_t)v10, v11);
  }

  return result;
}

void sub_1001EB3BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void *sub_1001EB3D4(void *result)
{
  if ((void *)qword_1019A0C80 != result)
  {
    int v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    double result = (void *)v1[2];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_1001EB430(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101828E40;
  sub_1001EB3D4(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001EB460(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101828E40;
  sub_1001EB3D4(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v2);
}

uint64_t sub_1001EB494(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0C80;
  if (!qword_1019A0C80)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0C80;
  }

  return result;
}

void *sub_1001EB4C0()
{
  uint64_t result = operator new(0x28uLL);
  *uint64_t result = off_101828E40;
  result[1] = 0LL;
  result[2] = 0LL;
  result[3] = 0LL;
  *((_DWORD *)result + 8) = 0;
  return result;
}

uint64_t sub_1001EB4EC(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(_BYTE *)(result + 32);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(result + 32) & 1) != 0)
    {
      uint64_t v3 = *(void *)(result + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0LL;
          *(void *)(v3 + 16) = 0LL;
          *(void *)(v3 + 24) = 0LL;
        }

        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(result + 32);
      }
    }

    *(_DWORD *)(result + 24) = 0;
    if ((v2 & 4) != 0)
    {
      uint64_t result = *(void *)(result + 16);
      if (result) {
        uint64_t result = sub_1001EA7A0(result);
      }
    }
  }

  *(_DWORD *)(v1 + 32) = 0;
  return result;
}

uint64_t sub_1001EB54C( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    do
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = (char *)*((void *)this + 1);
          if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
          {
            TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = (_DWORD)TagFallback;
            if (!(_DWORD)TagFallback) {
              return 1LL;
            }
          }

          else
          {
            TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
            *((_DWORD *)this + 8) = (_DWORD)TagFallback;
            *((void *)this + 1) = v5 + 1;
            if (!(_DWORD)TagFallback) {
              return 1LL;
            }
          }

          unsigned int v7 = TagFallback >> 3;
          int v8 = TagFallback & 7;
          if (v8 != 2) {
            goto LABEL_20;
          }
          *(_DWORD *)(a1 + 32) |= 1u;
          unint64_t v10 = *(char **)(a1 + 8);
          if (!v10)
          {
            unint64_t v10 = (char *)operator new(0x28uLL);
            *(void *)unint64_t v10 = off_101827B80;
            *(_OWORD *)(v10 + 8) = 0u;
            *(_OWORD *)(v10 + 24) = 0u;
            *(void *)(a1 + 8) = v10;
          }

          uint64_t v11 = (char *)*((void *)this + 1);
          if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v34)) {
              return 0LL;
            }
          }

          else
          {
            unsigned int v34 = *v11;
            *((void *)this + 1) = v11 + 1;
          }

          int v14 = *((_DWORD *)this + 14);
          int v15 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v14 + 1;
          if (v14 >= v15) {
            return 0LL;
          }
          int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34);
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
          int v18 = *((_DWORD *)this + 14);
          BOOL v19 = __OFSUB__(v18, 1);
          int v20 = v18 - 1;
          if (v20 < 0 == v19) {
            *((_DWORD *)this + 14) = v20;
          }
          int v21 = (_BYTE *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          if ((unint64_t)v21 < v12 && *v21 == 16)
          {
            int v13 = v21 + 1;
            *((void *)this + 1) = v13;
            goto LABEL_32;
          }
        }

        if (v7 == 2) {
          break;
        }
        if (v7 == 3)
        {
          int v8 = TagFallback & 7;
          if (v8 == 2)
          {
            int v9 = *(_DWORD *)(a1 + 32);
            goto LABEL_40;
          }
        }

        else
        {
          int v8 = TagFallback & 7;
        }

uint64_t sub_1001EB898( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_8:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(_DWORD *)(v5 + 24),  (int)a2,  a4);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0) {
      return result;
    }
    goto LABEL_9;
  }

  uint64_t v7 = *(void *)(result + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_1019A0C80 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_9:
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_1019A0C80 + 16);
  }
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  v8,  a2,  a4);
}

uint64_t sub_1001EB930(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 32);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0LL;
    goto LABEL_28;
  }

  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
  {
    uint64_t v5 = *(void *)(a1 + 8);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_1019A0C80 + 8);
    }
    int v6 = *(unsigned __int8 *)(v5 + 36);
    if (*(_BYTE *)(v5 + 36))
    {
      int v7 = (v6 << 31 >> 31) & 9;
      if ((v6 & 2) != 0) {
        v7 += 9;
      }
      if ((v6 & 4) != 0) {
        int v6 = v7 + 9;
      }
      else {
        int v6 = v7;
      }
    }

    *(_DWORD *)(v5 + 32) = v6;
    uint64_t v4 = (v6 + 2);
    int v3 = *(_DWORD *)(a1 + 32);
    if ((v3 & 2) == 0) {
      goto LABEL_21;
    }
  }

  else
  {
    uint64_t v4 = 0LL;
    if ((*(_BYTE *)(a1 + 32) & 2) == 0) {
      goto LABEL_21;
    }
  }

  uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if ((v8 & 0x80000000) != 0)
  {
    int v9 = 11;
  }

  else if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 32);
  }

  else
  {
    int v9 = 2;
  }

  uint64_t v4 = (v9 + v4);
LABEL_21:
  if ((v3 & 4) != 0)
  {
    uint64_t v10 = *(void *)(a1 + 16);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_1019A0C80 + 16);
    }
    uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001EB098(v10, a2);
    int v13 = (int)v11;
    else {
      int v14 = 1;
    }
    uint64_t v4 = (v4 + v13 + v14 + 1);
  }

double sub_1001EBA40(uint64_t a1, void *lpsrc)
{
  return sub_1001EB260(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001EBA8C()
{
  return 1LL;
}

void *sub_1001EBA94@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.TunnelEndPoint");
}

double sub_1001EBAA4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  16454LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 52);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 52) & 1) != 0)
    {
      uint64_t v7 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 52) |= 1u;
      *(void *)(a1 + 8) = v7;
      int v6 = *(_DWORD *)(a2 + 52);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_13;
      }
    }

    else if ((*(_BYTE *)(a2 + 52) & 2) == 0)
    {
      goto LABEL_6;
    }

    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 52) |= 2u;
    *(double *)(a1 + 16) = result;
    int v6 = *(_DWORD *)(a2 + 52);
    if ((v6 & 4) == 0)
    {
LABEL_7:
      if ((v6 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_14;
    }

void sub_1001EBBB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001EBBCC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101828EB8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001EBBDC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101828EB8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

double sub_1001EBBFC()
{
  unsigned __int8 v0 = (char *)operator new(0x38uLL);
  *(void *)unsigned __int8 v0 = off_101828EB8;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  return result;
}

uint64_t sub_1001EBC30(uint64_t result)
{
  if (*(_BYTE *)(result + 52))
  {
    *(void *)(result + 40) = 0LL;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }

  *(_DWORD *)(result + 52) = 0;
  return result;
}

uint64_t sub_1001EBC50( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        int v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, &v16);
          if (!(_DWORD)result) {
            return result;
          }
          unint64_t v10 = v16;
          uint64_t v11 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unint64_t v10 = *v9;
          uint64_t v11 = v9 + 1;
          *((void *)this + 1) = v11;
        }

        *(void *)(a1 + 8) = v10;
        *(_DWORD *)(a1 + 52) |= 1u;
        if ((unint64_t)v11 < v8 && *v11 == 17)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_27;
        }

        continue;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_19;
        }
LABEL_27:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v16) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = v16;
        *(_DWORD *)(a1 + 52) |= 2u;
        int v13 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v13 + 1;
LABEL_31:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v16) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 24) = v16;
        *(_DWORD *)(a1 + 52) |= 4u;
        int v14 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v14 + 1;
LABEL_35:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v16) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 32) = v16;
        *(_DWORD *)(a1 + 52) |= 8u;
        int v15 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v15 + 1;
LABEL_39:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v16) & 1) != 0)
        {
          *(void *)(a1 + 40) = v16;
          *(_DWORD *)(a1 + 52) |= 0x10u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1LL;
            *((_BYTE *)this + 36) = 1;
            return result;
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_31;
        }
        goto LABEL_19;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_35;
        }
        goto LABEL_19;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_19;
        }
        goto LABEL_39;
      default:
        int v7 = TagFallback & 7;
LABEL_19:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001EBEE4( uint64_t result, uint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = a2;
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 52);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(void *)(result + 8),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v4,  *(double *)(v5 + 16),  a3);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }

uint64_t sub_1001EBF94(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 52);
  if ((_BYTE)v3)
  {
    if ((*(_BYTE *)(a1 + 52) & 1) != 0)
    {
      unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8),  a2)
         + 1;
      int v3 = *(_DWORD *)(a1 + 52);
    }

    else
    {
      unsigned int v4 = 0;
    }

    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      uint64_t result = v4 + 9;
    }
    else {
      uint64_t result = v4;
    }
  }

  else
  {
    uint64_t result = 0LL;
  }

  *(_DWORD *)(a1 + 48) = result;
  return result;
}

double sub_1001EC010(uint64_t a1, void *lpsrc)
{
  return sub_1001EBAA4(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001EC05C()
{
  return 1LL;
}

void *sub_1001EC064@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.MapsRouteHintData");
}

void sub_1001EC074(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v21,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  16810LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v21,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v20, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v21);
  }

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 32),  *(_DWORD *)(a2 + 40) + *(_DWORD *)(a1 + 40));
  if (*(int *)(a2 + 40) >= 1)
  {
    uint64_t v5 = 0LL;
    do
    {
      uint64_t v6 = *(void *)(*(void *)(a2 + 32) + 8 * v5);
      int v7 = *(_DWORD *)(a1 + 44);
      uint64_t v8 = *(int *)(a1 + 40);
      if ((int)v8 >= v7)
      {
        if (v7 == *(_DWORD *)(a1 + 48))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 32),  v7 + 1);
          int v7 = *(_DWORD *)(a1 + 44);
        }

        *(_DWORD *)(a1 + 44) = v7 + 1;
        unint64_t v10 = (char *)operator new(0x38uLL);
        *(void *)unint64_t v10 = off_101828EB8;
        *(_OWORD *)(v10 + 8) = 0u;
        *(_OWORD *)(v10 + 24) = 0u;
        *(_OWORD *)(v10 + 40) = 0u;
        uint64_t v11 = *(void *)(a1 + 32);
        uint64_t v12 = *(int *)(a1 + 40);
        *(_DWORD *)(a1 + 40) = v12 + 1;
        *(void *)(v11 + 8 * v12) = v10;
      }

      else
      {
        uint64_t v9 = *(void *)(a1 + 32);
        *(_DWORD *)(a1 + 40) = v8 + 1;
        unint64_t v10 = *(char **)(v9 + 8 * v8);
      }

      sub_1001EBAA4((uint64_t)v10, v6);
      ++v5;
    }

    while (v5 < *(int *)(a2 + 40));
  }

  LOBYTE(v13) = *(_BYTE *)(a2 + 60);
  if (!(_BYTE)v13) {
    return;
  }
  if ((*(_BYTE *)(a2 + 60) & 1) == 0)
  {
    if ((*(_BYTE *)(a2 + 60) & 2) == 0) {
      goto LABEL_14;
    }
LABEL_22:
    *(_DWORD *)(a1 + 60) |= 2u;
    unint64_t v16 = *(char **)(a1 + 16);
    if (!v16)
    {
      unint64_t v16 = (char *)operator new(0x28uLL);
      *(void *)unint64_t v16 = off_101827B80;
      *(_OWORD *)(v16 + 8) = 0u;
      *(_OWORD *)(v16 + 24) = 0u;
      *(void *)(a1 + 16) = v16;
    }

    uint64_t v17 = *(void *)(a2 + 16);
    if (!v17) {
      uint64_t v17 = *(void *)(qword_1019A0C90 + 16);
    }
    sub_1001D323C((uint64_t)v16, v17);
    int v13 = *(_DWORD *)(a2 + 60);
    if ((v13 & 4) == 0)
    {
LABEL_15:
      if ((v13 & 8) == 0) {
        return;
      }
      goto LABEL_29;
    }

    goto LABEL_27;
  }

  *(_DWORD *)(a1 + 60) |= 1u;
  int v14 = *(char **)(a1 + 8);
  if (!v14)
  {
    int v14 = (char *)operator new(0x28uLL);
    *(void *)int v14 = off_101827B80;
    *(_OWORD *)(v14 + 8) = 0u;
    *(_OWORD *)(v14 + 24) = 0u;
    *(void *)(a1 + 8) = v14;
  }

  uint64_t v15 = *(void *)(a2 + 8);
  if (!v15) {
    uint64_t v15 = *(void *)(qword_1019A0C90 + 8);
  }
  sub_1001D323C((uint64_t)v14, v15);
  int v13 = *(_DWORD *)(a2 + 60);
  if ((v13 & 2) != 0) {
    goto LABEL_22;
  }
LABEL_14:
  if ((v13 & 4) == 0) {
    goto LABEL_15;
  }
LABEL_27:
  unsigned int v18 = *(_DWORD *)(a2 + 24);
  if (v18 >= 7) {
    sub_10122FF7C();
  }
  *(_DWORD *)(a1 + 60) |= 4u;
  *(_DWORD *)(a1 + 24) = v18;
  if ((*(_DWORD *)(a2 + 60) & 8) != 0)
  {
LABEL_29:
    unsigned int v19 = *(_DWORD *)(a2 + 28);
    if (v19 >= 7) {
      sub_10122FF54();
    }
    *(_DWORD *)(a1 + 60) |= 8u;
    *(_DWORD *)(a1 + 28) = v19;
  }

void sub_1001EC2CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001EC2E4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101828F30;
  uint64_t v2 = (uint64_t)a1 + 32;
  sub_1001EC324(a1);
  sub_10008D0EC(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void *sub_1001EC324(void *result)
{
  if ((void *)qword_1019A0C90 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    uint64_t result = (void *)v1[2];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_1001EC384(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

uint64_t sub_1001EC398(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0C90;
  if (!qword_1019A0C90)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0C90;
  }

  return result;
}

double sub_1001EC3C4()
{
  unsigned __int8 v0 = (char *)operator new(0x40uLL);
  *(void *)unsigned __int8 v0 = off_101828F30;
  *((void *)v0 + 7) = 0LL;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 36) = 0u;
  return result;
}

uint64_t sub_1001EC3FC(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(_BYTE *)(result + 60);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(result + 60) & 1) != 0)
    {
      uint64_t v3 = *(void *)(result + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0LL;
          *(void *)(v3 + 16) = 0LL;
          *(void *)(v3 + 24) = 0LL;
        }

        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(result + 60);
      }
    }

    if ((v2 & 2) != 0)
    {
      uint64_t v4 = *(void *)(result + 16);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 36))
        {
          *(void *)(v4 + 8) = 0LL;
          *(void *)(v4 + 16) = 0LL;
          *(void *)(v4 + 24) = 0LL;
        }

        *(_DWORD *)(v4 + 36) = 0;
      }
    }

    *(void *)(result + 24) = 0LL;
  }

  if (*(int *)(result + 40) >= 1)
  {
    uint64_t v5 = 0LL;
    do
    {
      uint64_t v6 = *(void *)(*(void *)(v1 + 32) + 8 * v5);
      double result = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 32LL))(v6);
      ++v5;
    }

    while (v5 < *(int *)(v1 + 40));
  }

  *(_DWORD *)(v1 + 40) = 0;
  *(_DWORD *)(v1 + 60) = 0;
  return result;
}

uint64_t sub_1001EC4A4( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 32);
  while (1)
  {
    uint64_t v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 < *((void *)this + 2) && (*v6 & 0x80000000) == 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
      goto LABEL_7;
    }

    TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = (_DWORD)TagFallback;
    if (!(_DWORD)TagFallback) {
      return 1LL;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_22;
        }
        *(_DWORD *)(a1 + 60) |= 1u;
        uint64_t v9 = *(char **)(a1 + 8);
        if (!v9)
        {
          uint64_t v9 = (char *)operator new(0x28uLL);
          *(void *)uint64_t v9 = off_101827B80;
          *(_OWORD *)(v9 + 8) = 0u;
          *(_OWORD *)(v9 + 24) = 0u;
          *(void *)(a1 + 8) = v9;
        }

        unint64_t v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v51)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v51 = *v10;
          *((void *)this + 1) = v10 + 1;
        }

        int v15 = *((_DWORD *)this + 14);
        int v16 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v15 + 1;
        if (v15 >= v16) {
          return 0LL;
        }
        int v17 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v51);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v17);
        int v19 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v19, 1);
        int v21 = v19 - 1;
        if (v21 < 0 == v20) {
          *((_DWORD *)this + 14) = v21;
        }
        unsigned int v22 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v22 + 1;
        goto LABEL_34;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_22;
        }
LABEL_34:
        *(_DWORD *)(a1 + 60) |= 2u;
        unsigned int v23 = *(char **)(a1 + 16);
        if (!v23)
        {
          unsigned int v23 = (char *)operator new(0x28uLL);
          *(void *)unsigned int v23 = off_101827B80;
          *(_OWORD *)(v23 + 8) = 0u;
          *(_OWORD *)(v23 + 24) = 0u;
          *(void *)(a1 + 16) = v23;
        }

        unsigned int v24 = (char *)*((void *)this + 1);
        if ((unint64_t)v24 >= *((void *)this + 2) || *v24 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v51)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v51 = *v24;
          *((void *)this + 1) = v24 + 1;
        }

        int v25 = *((_DWORD *)this + 14);
        int v26 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v25 + 1;
        if (v25 >= v26) {
          return 0LL;
        }
        int v27 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v51);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v27);
        int v29 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v29, 1);
        int v30 = v29 - 1;
        if (v30 < 0 == v20) {
          *((_DWORD *)this + 14) = v30;
        }
        int v31 = (_BYTE *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        if ((unint64_t)v31 < v11 && *v31 == 24)
        {
          uint64_t v12 = v31 + 1;
          *((void *)this + 1) = v12;
LABEL_48:
          if ((unint64_t)v12 >= v11 || *v12 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v51);
            if (!(_DWORD)result) {
              return result;
            }
            unsigned int v32 = v51;
          }

          else
          {
            unsigned int v32 = *v12;
            *((void *)this + 1) = v12 + 1;
          }

          if (v32 <= 6)
          {
            *(_DWORD *)(a1 + 60) |= 4u;
            *(_DWORD *)(a1 + 24) = v32;
          }

          unsigned int v34 = (_BYTE *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
          if ((unint64_t)v34 < v13 && *v34 == 32)
          {
            int v14 = v34 + 1;
            *((void *)this + 1) = v14;
LABEL_58:
            if ((unint64_t)v14 >= v13 || *v14 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v51);
              if (!(_DWORD)result) {
                return result;
              }
              unsigned int v35 = v51;
            }

            else
            {
              unsigned int v35 = *v14;
              *((void *)this + 1) = v14 + 1;
            }

            if (v35 <= 6)
            {
              *(_DWORD *)(a1 + 60) |= 8u;
              *(_DWORD *)(a1 + 28) = v35;
            }

            int v36 = (_BYTE *)*((void *)this + 1);
            if ((unint64_t)v36 < *((void *)this + 2) && *v36 == 42)
            {
              do
              {
                *((void *)this + 1) = v36 + 1;
LABEL_68:
                int v37 = *(_DWORD *)(a1 + 44);
                uint64_t v38 = *(int *)(a1 + 40);
                if ((int)v38 >= v37)
                {
                  if (v37 == *(_DWORD *)(a1 + 48))
                  {
                    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v37 + 1);
                    int v37 = *(_DWORD *)(a1 + 44);
                  }

                  *(_DWORD *)(a1 + 44) = v37 + 1;
                  uint64_t v40 = (char *)operator new(0x38uLL);
                  *(void *)uint64_t v40 = off_101828EB8;
                  *(_OWORD *)(v40 + 8) = 0u;
                  *(_OWORD *)(v40 + 24) = 0u;
                  *(_OWORD *)(v40 + 40) = 0u;
                  uint64_t v41 = *(void *)(a1 + 32);
                  uint64_t v42 = *(int *)(a1 + 40);
                  *(_DWORD *)(a1 + 40) = v42 + 1;
                  *(void *)(v41 + 8 * v42) = v40;
                }

                else
                {
                  uint64_t v39 = *(void *)(a1 + 32);
                  *(_DWORD *)(a1 + 40) = v38 + 1;
                  uint64_t v40 = *(char **)(v39 + 8 * v38);
                }

                int v43 = (char *)*((void *)this + 1);
                if ((unint64_t)v43 >= *((void *)this + 2) || *v43 < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v51)) {
                    return 0LL;
                  }
                }

                else
                {
                  unsigned int v51 = *v43;
                  *((void *)this + 1) = v43 + 1;
                }

                int v44 = *((_DWORD *)this + 14);
                int v45 = *((_DWORD *)this + 15);
                *((_DWORD *)this + 14) = v44 + 1;
                if (v44 >= v45) {
                  return 0LL;
                }
                int v46 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v51);
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v46);
                int v48 = *((_DWORD *)this + 14);
                BOOL v20 = __OFSUB__(v48, 1);
                int v49 = v48 - 1;
                if (v49 < 0 == v20) {
                  *((_DWORD *)this + 14) = v49;
                }
                int v36 = (_BYTE *)*((void *)this + 1);
                int v50 = (_BYTE *)*((void *)this + 2);
              }

              while (v36 < v50 && *v36 == 42);
              if (v36 == v50 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1LL;
                *((_BYTE *)this + 36) = 1;
                return result;
              }
            }
          }
        }

        break;
      case 3u:
        int v8 = TagFallback & 7;
        uint64_t v12 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_48;
      case 4u:
        int v8 = TagFallback & 7;
        int v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_58;
      case 5u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_22;
        }
        goto LABEL_68;
      default:
        int v8 = TagFallback & 7;
LABEL_22:
        if (v8 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001EC9C8( uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 60);
  if ((v6 & 1) != 0)
  {
    uint64_t v8 = *(void *)(result + 8);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1019A0C90 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v8,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t v9 = *(void *)(v5 + 16);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_1019A0C90 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v9,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }

uint64_t sub_1001ECAB4(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 60);
  if (!(_BYTE)v3)
  {
    int v4 = 0;
    goto LABEL_39;
  }

  if ((*(_BYTE *)(a1 + 60) & 1) == 0)
  {
    int v4 = 0;
    if ((*(_BYTE *)(a1 + 60) & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_15;
  }

  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_1019A0C90 + 8);
  }
  int v6 = *(unsigned __int8 *)(v5 + 36);
  if (*(_BYTE *)(v5 + 36))
  {
    int v7 = (v6 << 31 >> 31) & 9;
    if ((v6 & 2) != 0) {
      v7 += 9;
    }
    if ((v6 & 4) != 0) {
      int v6 = v7 + 9;
    }
    else {
      int v6 = v7;
    }
  }

  *(_DWORD *)(v5 + 32) = v6;
  int v4 = v6 + 2;
  int v3 = *(_DWORD *)(a1 + 60);
  if ((v3 & 2) != 0)
  {
LABEL_15:
    uint64_t v8 = *(void *)(a1 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1019A0C90 + 16);
    }
    int v9 = *(unsigned __int8 *)(v8 + 36);
    if (*(_BYTE *)(v8 + 36))
    {
      int v10 = (v9 << 31 >> 31) & 9;
      if ((v9 & 2) != 0) {
        v10 += 9;
      }
      if ((v9 & 4) != 0) {
        int v9 = v10 + 9;
      }
      else {
        int v9 = v10;
      }
    }

    *(_DWORD *)(v8 + 32) = v9;
    v4 += v9 + 2;
    int v3 = *(_DWORD *)(a1 + 60);
  }

void sub_1001ECC60(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1001ECCAC()
{
  return 1LL;
}

void *sub_1001ECCB4@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.MapMatchingRouteHint");
}

void sub_1001ECCC4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v18,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  17315LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v18,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v17, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }

  int v5 = *(_DWORD *)(a2 + 40);
  if (v5)
  {
    sub_10008D024(a1 + 32, *(_DWORD *)(a1 + 40) + v5);
    memcpy((void *)(*(void *)(a1 + 32) + 8LL * *(int *)(a1 + 40)), *(const void **)(a2 + 32), 8LL * *(int *)(a2 + 40));
    *(_DWORD *)(a1 + 40) += *(_DWORD *)(a2 + 40);
  }

  int v6 = *(_DWORD *)(a2 + 64);
  if (v6)
  {
    sub_10008D024(a1 + 56, *(_DWORD *)(a1 + 64) + v6);
    memcpy((void *)(*(void *)(a1 + 56) + 8LL * *(int *)(a1 + 64)), *(const void **)(a2 + 56), 8LL * *(int *)(a2 + 64));
    *(_DWORD *)(a1 + 64) += *(_DWORD *)(a2 + 64);
  }

  int v7 = *(_DWORD *)(a2 + 80);
  if ((_BYTE)v7)
  {
    if ((v7 & 1) != 0)
    {
      *(_DWORD *)(a1 + 80) |= 1u;
      unint64_t v11 = *(char **)(a1 + 8);
      if (!v11)
      {
        unint64_t v11 = (char *)operator new(0x28uLL);
        *(void *)unint64_t v11 = off_101827B80;
        *(_OWORD *)(v11 + 8) = 0u;
        *(_OWORD *)(v11 + 24) = 0u;
        *(void *)(a1 + 8) = v11;
      }

      uint64_t v12 = *(void *)(a2 + 8);
      if (!v12) {
        uint64_t v12 = *(void *)(qword_1019A0C98 + 8);
      }
      sub_1001D323C((uint64_t)v11, v12);
      int v7 = *(_DWORD *)(a2 + 80);
      if ((v7 & 2) == 0)
      {
LABEL_10:
        if ((v7 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_30;
      }
    }

    else if ((v7 & 2) == 0)
    {
      goto LABEL_10;
    }

    *(_DWORD *)(a1 + 80) |= 2u;
    unint64_t v13 = *(char **)(a1 + 16);
    if (!v13)
    {
      unint64_t v13 = (char *)operator new(0x28uLL);
      *(void *)unint64_t v13 = off_101827B80;
      *(_OWORD *)(v13 + 8) = 0u;
      *(_OWORD *)(v13 + 24) = 0u;
      *(void *)(a1 + 16) = v13;
    }

    uint64_t v14 = *(void *)(a2 + 16);
    if (!v14) {
      uint64_t v14 = *(void *)(qword_1019A0C98 + 16);
    }
    sub_1001D323C((uint64_t)v13, v14);
    int v7 = *(_DWORD *)(a2 + 80);
    if ((v7 & 4) == 0)
    {
LABEL_11:
      if ((v7 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_31;
    }

void sub_1001ECF28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001ECF40(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101828FA8;
  sub_1001ECF88(a1);
  int v2 = (void *)*((void *)a1 + 7);
  if (v2) {
    operator delete[](v2);
  }
  int v3 = (void *)*((void *)a1 + 4);
  if (v3) {
    operator delete[](v3);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void *sub_1001ECF88(void *result)
{
  if ((void *)qword_1019A0C98 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    uint64_t result = (void *)v1[2];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_1001ECFE8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

uint64_t sub_1001ECFFC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0C98;
  if (!qword_1019A0C98)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0C98;
  }

  return result;
}

double sub_1001ED028()
{
  unsigned __int8 v0 = (char *)operator new(0x58uLL);
  *(void *)unsigned __int8 v0 = off_101828FA8;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 37) = 0u;
  *((void *)v0 + 8) = 0LL;
  *((void *)v0 + 9) = 0LL;
  *((void *)v0 + 7) = 0LL;
  *((_DWORD *)v0 + 20) = 0;
  return result;
}

uint64_t sub_1001ED068(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 80);
  if ((_BYTE)v1)
  {
    if ((v1 & 1) != 0)
    {
      uint64_t v2 = *(void *)(result + 8);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 36))
        {
          *(void *)(v2 + 8) = 0LL;
          *(void *)(v2 + 16) = 0LL;
          *(void *)(v2 + 24) = 0LL;
        }

        *(_DWORD *)(v2 + 36) = 0;
        int v1 = *(_DWORD *)(result + 80);
      }
    }

    if ((v1 & 2) != 0)
    {
      uint64_t v3 = *(void *)(result + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0LL;
          *(void *)(v3 + 16) = 0LL;
          *(void *)(v3 + 24) = 0LL;
        }

        *(_DWORD *)(v3 + 36) = 0;
        int v1 = *(_DWORD *)(result + 80);
      }
    }

    *(void *)(result + 24) = 0LL;
    *(_DWORD *)(result + 48) = 0;
    *(_BYTE *)(result + 52) = 0;
  }

  if ((v1 & 0xFF00) != 0) {
    *(_DWORD *)(result + 72) = 0;
  }
  *(_DWORD *)(result + 40) = 0;
  *(_DWORD *)(result + 64) = 0;
  *(_DWORD *)(result + 80) = 0;
  return result;
}

uint64_t sub_1001ED0E4( uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unsigned int a3)
{
  uint64_t v5 = a1 + 56;
  uint64_t v70 = a1 + 32;
LABEL_2:
  while (2)
  {
    int v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_34;
        }
        *(_DWORD *)(a1 + 80) |= 1u;
        char v9 = *(char **)(a1 + 8);
        if (!v9)
        {
          char v9 = (char *)operator new(0x28uLL);
          *(void *)char v9 = off_101827B80;
          *(_OWORD *)(v9 + 8) = 0u;
          *(_OWORD *)(v9 + 24) = 0u;
          *(void *)(a1 + 8) = v9;
        }

        unsigned int v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v72)) {
            return 0LL;
          }
        }

        else
        {
          v72[0] = *v10;
          *((void *)this + 1) = v10 + 1;
        }

        int v20 = *((_DWORD *)this + 14);
        int v21 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v20 + 1;
        if (v20 >= v21) {
          return 0LL;
        }
        int v22 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v72[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v22);
        int v24 = *((_DWORD *)this + 14);
        BOOL v25 = __OFSUB__(v24, 1);
        int v26 = v24 - 1;
        if (v26 < 0 == v25) {
          *((_DWORD *)this + 14) = v26;
        }
        int v27 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v27 + 1;
        goto LABEL_47;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_34;
        }
LABEL_47:
        *(_DWORD *)(a1 + 80) |= 2u;
        unsigned int v28 = *(char **)(a1 + 16);
        if (!v28)
        {
          unsigned int v28 = (char *)operator new(0x28uLL);
          *(void *)unsigned int v28 = off_101827B80;
          *(_OWORD *)(v28 + 8) = 0u;
          *(_OWORD *)(v28 + 24) = 0u;
          *(void *)(a1 + 16) = v28;
        }

        int v29 = (char *)*((void *)this + 1);
        if ((unint64_t)v29 >= *((void *)this + 2) || *v29 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v72)) {
            return 0LL;
          }
        }

        else
        {
          v72[0] = *v29;
          *((void *)this + 1) = v29 + 1;
        }

        int v30 = *((_DWORD *)this + 14);
        int v31 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v30 + 1;
        if (v30 >= v31) {
          return 0LL;
        }
        int v32 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v72[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v32);
        int v34 = *((_DWORD *)this + 14);
        BOOL v25 = __OFSUB__(v34, 1);
        int v35 = v34 - 1;
        if (v35 < 0 == v25) {
          *((_DWORD *)this + 14) = v35;
        }
        int v36 = (_BYTE *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        uint64_t v12 = v36 + 1;
        *((void *)this + 1) = v12;
LABEL_61:
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v72);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v37 = v72[0];
          uint64_t v38 = (_BYTE *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }

        else
        {
          unsigned int v37 = *v12;
          uint64_t v38 = v12 + 1;
          *((void *)this + 1) = v38;
        }

        *(_DWORD *)(a1 + 24) = v37;
        *(_DWORD *)(a1 + 80) |= 4u;
        unint64_t v13 = v38 + 1;
        *((void *)this + 1) = v13;
LABEL_69:
        if ((unint64_t)v13 >= v11 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v72);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v39 = v72[0];
        }

        else
        {
          unsigned int v39 = *v13;
          *((void *)this + 1) = v13 + 1;
        }

        if (v39 <= 4)
        {
          *(_DWORD *)(a1 + 80) |= 8u;
          *(_DWORD *)(a1 + 28) = v39;
        }

        uint64_t v40 = (_BYTE *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        int v15 = v40 + 1;
        *((void *)this + 1) = v15;
LABEL_79:
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v72);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v41 = v72[0];
          uint64_t v42 = (_BYTE *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }

        else
        {
          unsigned int v41 = *v15;
          uint64_t v42 = v15 + 1;
          *((void *)this + 1) = v42;
        }

        *(_DWORD *)(a1 + 48) = v41;
        *(_DWORD *)(a1 + 80) |= 0x10u;
        do
        {
          *((void *)this + 1) = v42 + 1;
LABEL_87:
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v72) & 1) == 0) {
            return 0LL;
          }
          uint64_t v43 = *(void *)v72;
          int v44 = *(_DWORD *)(a1 + 40);
          if (v44 == *(_DWORD *)(a1 + 44))
          {
            sub_10008D024(v70, v44 + 1);
            int v44 = *(_DWORD *)(a1 + 40);
          }

          uint64_t v45 = *(void *)(a1 + 32);
          int v46 = v44 + 1;
          *(_DWORD *)(a1 + 40) = v44 + 1;
          *(void *)(v45 + 8LL * v44) = v43;
          uint64_t v47 = *((void *)this + 1);
          int v48 = *((_DWORD *)this + 4) - v47;
          if (v48 >= 1)
          {
            signed int v49 = v48 / 9u;
            int v50 = v49 >= *(_DWORD *)(a1 + 44) - v46 ? *(_DWORD *)(a1 + 44) - v46 : v49;
            if (v50 >= 1)
            {
              int v51 = 0;
              while (*(_BYTE *)v47 == 49)
              {
                uint64_t v52 = *(void *)(v47 + 1);
                if (v46 >= *(_DWORD *)(a1 + 44))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v72,  3LL,  "/AppleInternal/Library/BuildRoots/9fd3fc02-a7db-11ef-98ff-a6e88e557b55/Applications/Xcode.app/Conten ts/Developer/Platforms/AppleTVOS.platform/Developer/SDKs/AppleTVOS18.2.Internal.sdk/usr/local/includ e/google/protobuf/repeated_field.h",  602LL);
                  uint64_t v53 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v72,  "CHECK failed: (size()) < (Capacity()): ");
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v71, v53);
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v72);
                  int v46 = *(_DWORD *)(a1 + 40);
                  uint64_t v45 = *(void *)(a1 + 32);
                }

                *(_DWORD *)(a1 + 40) = v46 + 1;
                *(void *)(v45 + 8LL * v46) = v52;
                ++v51;
                v47 += 9LL;
                ++v46;
                if (v50 == v51)
                {
                  int v51 = v50;
                  break;
                }
              }

              if (v51) {
                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 9 * v51);
              }
            }
          }

void sub_1001ED908(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_1001ED928( uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 80);
  if ((v6 & 1) != 0)
  {
    uint64_t v10 = *(void *)(result + 8);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_1019A0C98 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v10,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 80);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_22;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t v11 = *(void *)(v5 + 16);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_1019A0C98 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v11,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_23;
  }

uint64_t sub_1001EDAA4(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 80);
  if (!(_BYTE)v3)
  {
    int v4 = 0;
    if ((v3 & 0x100) == 0) {
      goto LABEL_56;
    }
    goto LABEL_50;
  }

  if ((v3 & 1) == 0)
  {
    int v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_25;
    }
    goto LABEL_16;
  }

  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_1019A0C98 + 8);
  }
  int v6 = *(unsigned __int8 *)(v5 + 36);
  if (*(_BYTE *)(v5 + 36))
  {
    int v7 = (v6 << 31 >> 31) & 9;
    if ((v6 & 2) != 0) {
      v7 += 9;
    }
    if ((v6 & 4) != 0) {
      int v6 = v7 + 9;
    }
    else {
      int v6 = v7;
    }
  }

  *(_DWORD *)(v5 + 32) = v6;
  int v4 = v6 + 2;
  int v3 = *(_DWORD *)(a1 + 80);
  if ((v3 & 2) != 0)
  {
LABEL_16:
    uint64_t v8 = *(void *)(a1 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1019A0C98 + 16);
    }
    int v9 = *(unsigned __int8 *)(v8 + 36);
    if (*(_BYTE *)(v8 + 36))
    {
      int v10 = (v9 << 31 >> 31) & 9;
      if ((v9 & 2) != 0) {
        v10 += 9;
      }
      if ((v9 & 4) != 0) {
        int v9 = v10 + 9;
      }
      else {
        int v9 = v10;
      }
    }

    *(_DWORD *)(v8 + 32) = v9;
    v4 += v9 + 2;
    int v3 = *(_DWORD *)(a1 + 80);
  }

void sub_1001EDC84(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1001EDCD0()
{
  return 1LL;
}

void *sub_1001EDCD8@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.AccessoryVehicleSpeedNotification");
}

void sub_1001EDCE8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v11,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  17607LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v11,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 24);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      unsigned int v6 = *(_DWORD *)(a2 + 8);
      if (v6 >= 4 && v6 != 1001) {
        sub_10123001C();
      }
      *(_DWORD *)(a1 + 24) |= 1u;
      *(_DWORD *)(a1 + 8) = v6;
      int v5 = *(_DWORD *)(a2 + 24);
    }

    if ((v5 & 2) != 0)
    {
      unsigned int v7 = *(_DWORD *)(a2 + 12);
      if (v7 >= 4 && v7 != 1001) {
        sub_10122FFF4();
      }
      *(_DWORD *)(a1 + 24) |= 2u;
      *(_DWORD *)(a1 + 12) = v7;
      int v5 = *(_DWORD *)(a2 + 24);
    }

    if ((v5 & 4) != 0)
    {
      char v8 = *(_BYTE *)(a2 + 16);
      *(_DWORD *)(a1 + 24) |= 4u;
      *(_BYTE *)(a1 + 16) = v8;
      int v5 = *(_DWORD *)(a2 + 24);
    }

    if ((v5 & 8) != 0)
    {
      char v9 = *(_BYTE *)(a2 + 17);
      *(_DWORD *)(a1 + 24) |= 8u;
      *(_BYTE *)(a1 + 17) = v9;
    }
  }

void sub_1001EDDF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001EDE08(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101829020;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001EDE18(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101829020;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

uint64_t sub_1001EDE38(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0CA0;
  if (!qword_1019A0CA0)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0CA0;
  }

  return result;
}

_DWORD *sub_1001EDE64()
{
  uint64_t result = operator new(0x20uLL);
  result[5] = 0;
  result[6] = 0;
  *(void *)uint64_t result = off_101829020;
  *((void *)result + 1) = 0LL;
  *((_WORD *)result + 8) = 0;
  return result;
}

uint64_t sub_1001EDE90(uint64_t result)
{
  if (*(_BYTE *)(result + 24))
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)(result + 8) = 0LL;
  }

  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1001EDEA8( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        char v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 < *((void *)this + 2) && (*v8 & 0x80000000) == 0)
        {
          unsigned int v9 = *v8;
          *((void *)this + 1) = v8 + 1;
LABEL_23:
          if (v9 < 4 || v9 == 1001)
          {
            *(_DWORD *)(a1 + 24) |= 1u;
            *(_DWORD *)(a1 + 8) = v9;
          }

          int v15 = (_BYTE *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          if ((unint64_t)v15 < v10 && *v15 == 16)
          {
            uint64_t v11 = v15 + 1;
            *((void *)this + 1) = v11;
            goto LABEL_29;
          }

          continue;
        }

        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23);
        if ((_DWORD)result)
        {
          unsigned int v9 = v23;
          goto LABEL_23;
        }

        break;
      case 2u:
        int v7 = TagFallback & 7;
        uint64_t v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_29:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v16 = v23;
        }

        else
        {
          unsigned int v16 = *v11;
          *((void *)this + 1) = v11 + 1;
        }

        if (v16 < 4 || v16 == 1001)
        {
          *(_DWORD *)(a1 + 24) |= 2u;
          *(_DWORD *)(a1 + 12) = v16;
        }

        unint64_t v17 = (_BYTE *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        unint64_t v13 = v17 + 1;
        *((void *)this + 1) = v13;
LABEL_39:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v18 = v23;
          int v19 = (_BYTE *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }

        else
        {
          unsigned int v18 = *v13;
          int v19 = v13 + 1;
          *((void *)this + 1) = v19;
        }

        *(_BYTE *)(a1 + 16) = v18 != 0;
        *(_DWORD *)(a1 + 24) |= 4u;
        int v14 = v19 + 1;
        *((void *)this + 1) = v14;
LABEL_47:
        if ((unint64_t)v14 >= v12 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v20 = v23;
          int v21 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }

        else
        {
          unsigned int v20 = *v14;
          int v21 = (unsigned __int8 *)(v14 + 1);
          *((void *)this + 1) = v21;
        }

        *(_BYTE *)(a1 + 17) = v20 != 0;
        *(_DWORD *)(a1 + 24) |= 8u;
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        int v7 = TagFallback & 7;
        unint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_39;
      case 4u:
        int v7 = TagFallback & 7;
        int v14 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_47;
      default:
        int v7 = TagFallback & 7;
LABEL_17:
        if (v7 == 4) {
          return 1LL;
        }
        return 0LL;
    }

    return result;
  }

uint64_t sub_1001EE184( uint64_t result, int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(_DWORD *)(result + 8),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 24);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(_DWORD *)(v5 + 12),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 24);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      return result;
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  *(unsigned __int8 *)(v5 + 17),  a2,  a4);
  }

uint64_t sub_1001EE218(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 24);
  if (!(_BYTE)v3)
  {
    uint64_t result = 0LL;
    goto LABEL_24;
  }

  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v6 & 0x80000000) != 0)
    {
      int v4 = 11;
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
    }

    else if (v6 >= 0x80)
    {
      int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 24);
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
    }

    else
    {
      int v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
    }
  }

  else
  {
    int v4 = 0;
    if ((*(_BYTE *)(a1 + 24) & 2) == 0) {
      goto LABEL_19;
    }
  }

  int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if ((v7 & 0x80000000) != 0)
  {
    int v8 = 11;
  }

  else if (v7 >= 0x80)
  {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 24);
  }

  else
  {
    int v8 = 2;
  }

  v4 += v8;
LABEL_19:
  unsigned int v9 = v4 + 2;
  if ((v3 & 4) == 0) {
    unsigned int v9 = v4;
  }
  if ((v3 & 8) != 0) {
    uint64_t result = v9 + 2;
  }
  else {
    uint64_t result = v9;
  }
LABEL_24:
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_1001EE2D8(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1001EE324()
{
  return 1LL;
}

void *sub_1001EE32C@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.ReachabilityState");
}

void sub_1001EE33C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v13,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  17936LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v13,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v12, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    {
      uint64_t v8 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(void *)(a1 + 8) = v8;
      int v5 = *(_DWORD *)(a2 + 32);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_15;
      }
    }

    else if ((*(_BYTE *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }

    char v9 = *(_BYTE *)(a2 + 16);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(_BYTE *)(a1 + 16) = v9;
    int v5 = *(_DWORD *)(a2 + 32);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_16;
    }

void sub_1001EE474(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001EE48C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101829098;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001EE49C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101829098;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

uint64_t sub_1001EE4BC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0CA8;
  if (!qword_1019A0CA8)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0CA8;
  }

  return result;
}

void *sub_1001EE4E8()
{
  uint64_t result = operator new(0x28uLL);
  *uint64_t result = off_101829098;
  result[1] = 0xBFF0000000000000LL;
  *((_WORD *)result + 8) = 0;
  *((_BYTE *)result + 18) = 0;
  *((_DWORD *)result + 8) = 0;
  result[3] = 0LL;
  *((_DWORD *)result + 5) = 0;
  return result;
}

uint64_t sub_1001EE524(uint64_t result)
{
  if (*(_BYTE *)(result + 32))
  {
    *(void *)(result + 8) = 0xBFF0000000000000LL;
    *(_WORD *)(result + 16) = 0;
    *(_BYTE *)(result + 18) = 0;
    *(_DWORD *)(result + 20) = 0;
    *(_DWORD *)(result + 24) = 0;
  }

  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1001EE548( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_25;
        }
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 8) = *(void *)v27;
        *(_DWORD *)(a1 + 32) |= 1u;
        char v9 = (_BYTE *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        char v10 = v9 + 1;
        *((void *)this + 1) = v10;
        goto LABEL_15;
      case 2u:
        int v7 = TagFallback & 7;
        char v10 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
LABEL_15:
        if ((unint64_t)v10 >= v8 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v27);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v11 = v27[0];
          char v12 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v11 = *v10;
          char v12 = v10 + 1;
          *((void *)this + 1) = v12;
        }

        *(_BYTE *)(a1 + 16) = v11 != 0;
        *(_DWORD *)(a1 + 32) |= 2u;
        unint64_t v13 = v12 + 1;
        *((void *)this + 1) = v13;
LABEL_34:
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v27);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v19 = v27[0];
          unsigned int v20 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v19 = *v13;
          unsigned int v20 = v13 + 1;
          *((void *)this + 1) = v20;
        }

        *(_BYTE *)(a1 + 17) = v19 != 0;
        *(_DWORD *)(a1 + 32) |= 4u;
        int v14 = v20 + 1;
        *((void *)this + 1) = v14;
LABEL_42:
        if ((unint64_t)v14 >= v8 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v27);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v21 = v27[0];
        }

        else
        {
          unsigned int v21 = *v14;
          *((void *)this + 1) = v14 + 1;
        }

        if (v21 <= 4)
        {
          *(_DWORD *)(a1 + 32) |= 8u;
          *(_DWORD *)(a1 + 20) = v21;
        }

        int v22 = (_BYTE *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        unsigned int v16 = v22 + 1;
        *((void *)this + 1) = v16;
LABEL_52:
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v27);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v23 = v27[0];
          int v24 = (_BYTE *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }

        else
        {
          unsigned int v23 = *v16;
          int v24 = v16 + 1;
          *((void *)this + 1) = v24;
        }

        *(_BYTE *)(a1 + 18) = v23 != 0;
        *(_DWORD *)(a1 + 32) |= 0x10u;
        unint64_t v17 = v24 + 1;
        *((void *)this + 1) = v17;
LABEL_60:
        if ((unint64_t)v17 >= v15 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v27);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v25 = v27[0];
          int v26 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }

        else
        {
          unsigned int v25 = *v17;
          int v26 = (unsigned __int8 *)(v17 + 1);
          *((void *)this + 1) = v26;
        }

        *(_DWORD *)(a1 + 24) = v25;
        *(_DWORD *)(a1 + 32) |= 0x20u;
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        break;
      case 3u:
        int v7 = TagFallback & 7;
        unint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_34;
      case 4u:
        int v7 = TagFallback & 7;
        int v14 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_42;
      case 5u:
        int v7 = TagFallback & 7;
        unsigned int v16 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_52;
      case 6u:
        int v7 = TagFallback & 7;
        unint64_t v17 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_60;
      default:
        int v7 = TagFallback & 7;
LABEL_25:
        if (v7 == 4) {
          return 1LL;
        }
        return 0LL;
    }

    return result;
  }

uint64_t sub_1001EE8D4( uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  a2,  *(double *)(result + 8),  a3);
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(unsigned __int8 *)(v5 + 16),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }

uint64_t sub_1001EE9A0(uint64_t a1, unsigned int a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 32);
  if (*(_BYTE *)(a1 + 32))
  {
    if ((v3 & 4) != 0) {
      LODWORD(v4) = ((v3 << 31 >> 31) & 9 | v3 & 2) + 2;
    }
    else {
      LODWORD(v4) = (v3 << 31 >> 31) & 9 | v3 & 2;
    }
    if ((v3 & 8) != 0)
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
      if ((v5 & 0x80000000) != 0)
      {
        int v6 = 11;
      }

      else if (v5 >= 0x80)
      {
        int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 32);
      }

      else
      {
        int v6 = 2;
      }

      LODWORD(v4) = v6 + v4;
    }

    if ((v3 & 0x10) != 0) {
      uint64_t v4 = (v4 + 2);
    }
    else {
      uint64_t v4 = v4;
    }
    if ((v3 & 0x20) != 0)
    {
      int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
      if ((v7 & 0x80000000) != 0)
      {
        int v8 = 11;
      }

      else if (v7 >= 0x80)
      {
        int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
      }

      else
      {
        int v8 = 2;
      }

      uint64_t v4 = (v8 + v4);
    }
  }

  else
  {
    uint64_t v4 = 0LL;
  }

  *(_DWORD *)(a1 + 28) = v4;
  return v4;
}

void sub_1001EEA64(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1001EEAB0()
{
  return 1LL;
}

void *sub_1001EEAB8@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.Battery");
}

BOOL sub_1001EEAC8(unsigned int a1)
{
  return a1 < 0x14;
}

void sub_1001EEAD4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v23,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  18567LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v23,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v22, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v23);
  }

  int v5 = *(_DWORD *)(a2 + 60);
  if (!(_BYTE)v5) {
    goto LABEL_13;
  }
  if ((v5 & 1) != 0)
  {
    *(_DWORD *)(a1 + 60) |= 1u;
    int v8 = *(char **)(a1 + 8);
    if (!v8)
    {
      int v8 = (char *)operator new(0x28uLL);
      *(void *)int v8 = off_101827B80;
      *(_OWORD *)(v8 + 8) = 0u;
      *(_OWORD *)(v8 + 24) = 0u;
      *(void *)(a1 + 8) = v8;
    }

    uint64_t v9 = *(void *)(a2 + 8);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_1019A0CB0 + 8);
    }
    sub_1001D323C((uint64_t)v8, v9);
    int v5 = *(_DWORD *)(a2 + 60);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_27;
    }
  }

  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }

  int v10 = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 60) |= 2u;
  *(_DWORD *)(a1 + 16) = v10;
  int v5 = *(_DWORD *)(a2 + 60);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_29;
  }

void sub_1001EEDB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void *sub_1001EEDD0(void *result)
{
  if ((void *)qword_1019A0CB0 != result)
  {
    int v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    uint64_t v3 = v1[3];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
    }
    uint64_t result = (void *)v1[4];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_1001EEE40(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101829110;
  sub_1001EEDD0(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001EEE70(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101829110;
  sub_1001EEDD0(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v2);
}

uint64_t sub_1001EEEA4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0CB0;
  if (!qword_1019A0CB0)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0CB0;
  }

  return result;
}

double sub_1001EEED0()
{
  unsigned __int8 v0 = (char *)operator new(0x40uLL);
  *(void *)unsigned __int8 v0 = off_101829110;
  *((void *)v0 + 7) = 0LL;
  *((_DWORD *)v0 + 13) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 34) = 0u;
  return result;
}

uint64_t sub_1001EEF0C(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 60);
  if ((_BYTE)v1)
  {
    if ((v1 & 1) != 0)
    {
      uint64_t v2 = *(void *)(result + 8);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 36))
        {
          *(void *)(v2 + 8) = 0LL;
          *(void *)(v2 + 16) = 0LL;
          *(void *)(v2 + 24) = 0LL;
        }

        *(_DWORD *)(v2 + 36) = 0;
        int v1 = *(_DWORD *)(result + 60);
      }
    }

    *(void *)(result + 16) = 0LL;
    if ((v1 & 8) != 0)
    {
      uint64_t v3 = *(void *)(result + 24);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 24))
        {
          *(_WORD *)(v3 + 16) = 0;
          *(void *)(v3 + 8) = 0LL;
        }

        *(_DWORD *)(v3 + 24) = 0;
        int v1 = *(_DWORD *)(result + 60);
      }
    }

    if ((v1 & 0x10) != 0)
    {
      uint64_t v4 = *(void *)(result + 32);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 32))
        {
          *(void *)(v4 + 8) = 0xBFF0000000000000LL;
          *(_WORD *)(v4 + 16) = 0;
          *(_BYTE *)(v4 + 18) = 0;
          *(_DWORD *)(v4 + 20) = 0;
          *(_DWORD *)(v4 + 24) = 0;
        }

        *(_DWORD *)(v4 + 32) = 0;
        int v1 = *(_DWORD *)(result + 60);
      }
    }

    *(_WORD *)(result + 40) = 0;
    *(_BYTE *)(result + 42) = 0;
  }

  if ((v1 & 0xFF00) != 0)
  {
    *(_DWORD *)(result + 52) = 0;
    *(_DWORD *)(result + 43) = 0;
    *(_DWORD *)(result + 46) = 0;
  }

  *(_DWORD *)(result + 60) = 0;
  return result;
}

uint64_t sub_1001EEFB8( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 60) |= 1u;
        int v8 = *(char **)(a1 + 8);
        if (!v8)
        {
          int v8 = (char *)operator new(0x28uLL);
          *(void *)int v8 = off_101827B80;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *(void *)(a1 + 8) = v8;
        }

        uint64_t v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v69)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v69 = *v9;
          *((void *)this + 1) = v9 + 1;
        }

        int v22 = *((_DWORD *)this + 14);
        int v23 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v22 + 1;
        if (v22 >= v23) {
          return 0LL;
        }
        int v24 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v69);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v24);
        int v26 = *((_DWORD *)this + 14);
        BOOL v27 = __OFSUB__(v26, 1);
        int v28 = v26 - 1;
        if (v28 < 0 == v27) {
          *((_DWORD *)this + 14) = v28;
        }
        int v29 = (_BYTE *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        unsigned int v11 = v29 + 1;
        *((void *)this + 1) = v11;
        goto LABEL_50;
      case 2u:
        int v7 = TagFallback & 7;
        unsigned int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_50:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v69);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v30 = v69;
          int v31 = (_BYTE *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }

        else
        {
          unsigned int v30 = *v11;
          int v31 = v11 + 1;
          *((void *)this + 1) = v31;
        }

        *(_DWORD *)(a1 + 16) = v30;
        *(_DWORD *)(a1 + 60) |= 2u;
        char v12 = v31 + 1;
        *((void *)this + 1) = v12;
LABEL_58:
        if ((unint64_t)v12 >= v10 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v69);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v33 = v69;
        }

        else
        {
          unsigned int v33 = *v12;
          *((void *)this + 1) = v12 + 1;
        }

        if (v33 <= 0x13)
        {
          *(_DWORD *)(a1 + 60) |= 4u;
          *(_DWORD *)(a1 + 20) = v33;
        }

        int v34 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v34 + 1;
LABEL_68:
        *(_DWORD *)(a1 + 60) |= 8u;
        int v35 = *(_DWORD **)(a1 + 24);
        if (!v35)
        {
          int v35 = operator new(0x20uLL);
          v35[5] = 0;
          v35[6] = 0;
          *(void *)int v35 = off_101829020;
          *((void *)v35 + 1) = 0LL;
          *((_WORD *)v35 + 8) = 0;
          *(void *)(a1 + 24) = v35;
        }

        int v36 = (char *)*((void *)this + 1);
        if ((unint64_t)v36 >= *((void *)this + 2) || *v36 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v69)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v69 = *v36;
          *((void *)this + 1) = v36 + 1;
        }

        int v37 = *((_DWORD *)this + 14);
        int v38 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v37 + 1;
        if (v37 >= v38) {
          return 0LL;
        }
        int v39 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v69);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v39);
        int v41 = *((_DWORD *)this + 14);
        BOOL v27 = __OFSUB__(v41, 1);
        int v42 = v41 - 1;
        if (v42 < 0 == v27) {
          *((_DWORD *)this + 14) = v42;
        }
        uint64_t v43 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v43 + 1;
LABEL_82:
        *(_DWORD *)(a1 + 60) |= 0x10u;
        int v44 = *(void **)(a1 + 32);
        if (!v44)
        {
          int v44 = operator new(0x28uLL);
          void *v44 = off_101829098;
          v44[1] = 0xBFF0000000000000LL;
          *((_WORD *)v44 + 8) = 0;
          *((_BYTE *)v44 + 18) = 0;
          *((_DWORD *)v44 + 8) = 0;
          v44[3] = 0LL;
          *((_DWORD *)v44 + 5) = 0;
          *(void *)(a1 + 32) = v44;
        }

        uint64_t v45 = (char *)*((void *)this + 1);
        if ((unint64_t)v45 >= *((void *)this + 2) || *v45 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v69)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v69 = *v45;
          *((void *)this + 1) = v45 + 1;
        }

        int v46 = *((_DWORD *)this + 14);
        int v47 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v46 + 1;
        if (v46 < v47)
        {
          int v48 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v69);
          if (sub_1001EE548((uint64_t)v44, this, v49))
          {
            if (*((_BYTE *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v48);
              int v50 = *((_DWORD *)this + 14);
              BOOL v27 = __OFSUB__(v50, 1);
              int v51 = v50 - 1;
              if (v51 < 0 == v27) {
                *((_DWORD *)this + 14) = v51;
              }
              uint64_t v52 = (_BYTE *)*((void *)this + 1);
              unint64_t v13 = *((void *)this + 2);
              if ((unint64_t)v52 < v13 && *v52 == 48)
              {
                int v14 = v52 + 1;
                *((void *)this + 1) = v14;
LABEL_96:
                if ((unint64_t)v14 >= v13 || *v14 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v69);
                  if (!(_DWORD)result) {
                    return result;
                  }
                  unsigned int v53 = v69;
                  int v54 = (_BYTE *)*((void *)this + 1);
                  unint64_t v13 = *((void *)this + 2);
                }

                else
                {
                  unsigned int v53 = *v14;
                  int v54 = v14 + 1;
                  *((void *)this + 1) = v54;
                }

                *(_BYTE *)(a1 + 40) = v53 != 0;
                *(_DWORD *)(a1 + 60) |= 0x20u;
                if ((unint64_t)v54 < v13 && *v54 == 56)
                {
                  uint64_t v15 = v54 + 1;
                  *((void *)this + 1) = v15;
LABEL_104:
                  if ((unint64_t)v15 >= v13 || *v15 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v69);
                    if (!(_DWORD)result) {
                      return result;
                    }
                    unsigned int v55 = v69;
                    int v56 = (_BYTE *)*((void *)this + 1);
                    unint64_t v13 = *((void *)this + 2);
                  }

                  else
                  {
                    unsigned int v55 = *v15;
                    int v56 = v15 + 1;
                    *((void *)this + 1) = v56;
                  }

                  *(_BYTE *)(a1 + 41) = v55 != 0;
                  *(_DWORD *)(a1 + 60) |= 0x40u;
                  if ((unint64_t)v56 < v13 && *v56 == 64)
                  {
                    char v16 = v56 + 1;
                    *((void *)this + 1) = v16;
LABEL_112:
                    if ((unint64_t)v16 >= v13 || *v16 < 0)
                    {
                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v69);
                      if (!(_DWORD)result) {
                        return result;
                      }
                      unsigned int v57 = v69;
                      int v58 = (_BYTE *)*((void *)this + 1);
                      unint64_t v13 = *((void *)this + 2);
                    }

                    else
                    {
                      unsigned int v57 = *v16;
                      int v58 = v16 + 1;
                      *((void *)this + 1) = v58;
                    }

                    *(_BYTE *)(a1 + 42) = v57 != 0;
                    *(_DWORD *)(a1 + 60) |= 0x80u;
                    if ((unint64_t)v58 < v13 && *v58 == 72)
                    {
                      char v17 = v58 + 1;
                      *((void *)this + 1) = v17;
LABEL_120:
                      if ((unint64_t)v17 >= v13 || *v17 < 0)
                      {
                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v69);
                        if (!(_DWORD)result) {
                          return result;
                        }
                        unsigned int v59 = v69;
                        int v60 = (_BYTE *)*((void *)this + 1);
                        unint64_t v13 = *((void *)this + 2);
                      }

                      else
                      {
                        unsigned int v59 = *v17;
                        int v60 = v17 + 1;
                        *((void *)this + 1) = v60;
                      }

                      *(_BYTE *)(a1 + 43) = v59 != 0;
                      *(_DWORD *)(a1 + 60) |= 0x100u;
                      if ((unint64_t)v60 < v13 && *v60 == 80)
                      {
                        char v18 = v60 + 1;
                        *((void *)this + 1) = v18;
LABEL_128:
                        if ((unint64_t)v18 >= v13 || *v18 < 0)
                        {
                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v69);
                          if (!(_DWORD)result) {
                            return result;
                          }
                          unsigned int v61 = v69;
                          int v62 = (_BYTE *)*((void *)this + 1);
                          unint64_t v13 = *((void *)this + 2);
                        }

                        else
                        {
                          unsigned int v61 = *v18;
                          int v62 = v18 + 1;
                          *((void *)this + 1) = v62;
                        }

                        *(_BYTE *)(a1 + 48) = v61 != 0;
                        *(_DWORD *)(a1 + 60) |= 0x200u;
                        if ((unint64_t)v62 < v13 && *v62 == 88)
                        {
                          char v19 = v62 + 1;
                          *((void *)this + 1) = v19;
LABEL_136:
                          if ((unint64_t)v19 >= v13 || *v19 < 0)
                          {
                            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v69);
                            if (!(_DWORD)result) {
                              return result;
                            }
                            unsigned int v63 = v69;
                            uint64_t v64 = (_BYTE *)*((void *)this + 1);
                            unint64_t v13 = *((void *)this + 2);
                          }

                          else
                          {
                            unsigned int v63 = *v19;
                            uint64_t v64 = v19 + 1;
                            *((void *)this + 1) = v64;
                          }

                          *(_DWORD *)(a1 + 44) = v63;
                          *(_DWORD *)(a1 + 60) |= 0x400u;
                          if ((unint64_t)v64 < v13 && *v64 == 96)
                          {
                            int v20 = v64 + 1;
                            *((void *)this + 1) = v20;
LABEL_144:
                            if ((unint64_t)v20 >= v13 || *v20 < 0)
                            {
                              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v69);
                              if (!(_DWORD)result) {
                                return result;
                              }
                              unsigned int v65 = v69;
                              int v66 = (_BYTE *)*((void *)this + 1);
                              unint64_t v13 = *((void *)this + 2);
                            }

                            else
                            {
                              unsigned int v65 = *v20;
                              int v66 = v20 + 1;
                              *((void *)this + 1) = v66;
                            }

                            *(_DWORD *)(a1 + 52) = v65;
                            *(_DWORD *)(a1 + 60) |= 0x800u;
                            if ((unint64_t)v66 < v13 && *v66 == 104)
                            {
                              int v21 = v66 + 1;
                              *((void *)this + 1) = v21;
LABEL_152:
                              if ((unint64_t)v21 >= v13 || *v21 < 0)
                              {
                                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v69);
                                if (!(_DWORD)result) {
                                  return result;
                                }
                                unsigned int v67 = v69;
                                unsigned int v68 = (unsigned __int8 *)*((void *)this + 1);
                                unint64_t v13 = *((void *)this + 2);
                              }

                              else
                              {
                                unsigned int v67 = *v21;
                                unsigned int v68 = (unsigned __int8 *)(v21 + 1);
                                *((void *)this + 1) = v68;
                              }

                              *(_BYTE *)(a1 + 49) = v67 != 0;
                              *(_DWORD *)(a1 + 60) |= 0x1000u;
                              if (v68 == (unsigned __int8 *)v13
                                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                              {
                                *((_DWORD *)this + 8) = 0;
                                uint64_t result = 1LL;
                                *((_BYTE *)this + 36) = 1;
                                return result;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }

              continue;
            }
          }
        }

        return 0LL;
      case 3u:
        int v7 = TagFallback & 7;
        char v12 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_58;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_68;
        }
        goto LABEL_37;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_82;
        }
        goto LABEL_37;
      case 6u:
        int v7 = TagFallback & 7;
        int v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_96;
      case 7u:
        int v7 = TagFallback & 7;
        uint64_t v15 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_104;
      case 8u:
        int v7 = TagFallback & 7;
        char v16 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_112;
      case 9u:
        int v7 = TagFallback & 7;
        char v17 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_120;
      case 0xAu:
        int v7 = TagFallback & 7;
        char v18 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_128;
      case 0xBu:
        int v7 = TagFallback & 7;
        char v19 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_136;
      case 0xCu:
        int v7 = TagFallback & 7;
        int v20 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_144;
      case 0xDu:
        int v7 = TagFallback & 7;
        int v21 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_152;
      default:
        int v7 = TagFallback & 7;
LABEL_37:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001EF860( uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 60);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0CB0 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(_DWORD *)(v5 + 16),  (int)a2,  a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }

uint64_t sub_1001EFA20(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 60);
  if (!(_BYTE)v3)
  {
    uint64_t result = 0LL;
    goto LABEL_50;
  }

  if ((v3 & 1) == 0)
  {
    int v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }

  uint64_t v6 = *(void *)(a1 + 8);
  if (!v6) {
    uint64_t v6 = *(void *)(qword_1019A0CB0 + 8);
  }
  int v7 = *(unsigned __int8 *)(v6 + 36);
  if (*(_BYTE *)(v6 + 36))
  {
    int v8 = (v7 << 31 >> 31) & 9;
    if ((v7 & 2) != 0) {
      v8 += 9;
    }
    if ((v7 & 4) != 0) {
      int v7 = v8 + 9;
    }
    else {
      int v7 = v8;
    }
  }

  *(_DWORD *)(v6 + 32) = v7;
  int v4 = v7 + 2;
  int v3 = *(_DWORD *)(a1 + 60);
  if ((v3 & 2) != 0)
  {
LABEL_15:
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if ((v9 & 0x80000000) != 0)
    {
      int v10 = 10;
    }

    else if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
      int v3 = *(_DWORD *)(a1 + 60);
    }

    else
    {
      int v10 = 1;
    }

    v4 += v10 + 1;
  }

void sub_1001EFC74(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1001EFCC0()
{
  return 1LL;
}

void *sub_1001EFCC8@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.DeviceStatus");
}

void sub_1001EFCD8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v12,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  18920LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v12,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    {
      *(_DWORD *)(a1 + 32) |= 1u;
      uint64_t v6 = *(char **)(a1 + 8);
      if (!v6)
      {
        uint64_t v6 = (char *)operator new(0x28uLL);
        *(void *)uint64_t v6 = off_101827B80;
        *(_OWORD *)(v6 + 8) = 0u;
        *(_OWORD *)(v6 + 24) = 0u;
        *(void *)(a1 + 8) = v6;
      }

      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_1019A0CB8 + 8);
      }
      sub_1001D323C((uint64_t)v6, v7);
      int v5 = *(_DWORD *)(a2 + 32);
    }

    if ((v5 & 2) != 0)
    {
      int v8 = *(_DWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 32) |= 2u;
      *(_DWORD *)(a1 + 16) = v8;
      int v5 = *(_DWORD *)(a2 + 32);
    }

    if ((v5 & 4) != 0)
    {
      int v9 = *(_DWORD *)(a2 + 20);
      *(_DWORD *)(a1 + 32) |= 4u;
      *(_DWORD *)(a1 + 20) = v9;
      int v5 = *(_DWORD *)(a2 + 32);
    }

    if ((v5 & 8) != 0)
    {
      int v10 = *(_DWORD *)(a2 + 24);
      *(_DWORD *)(a1 + 32) |= 8u;
      *(_DWORD *)(a1 + 24) = v10;
    }
  }

void sub_1001EFE14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001EFE2C(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_101829188;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0CB8 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1001EFE80(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

uint64_t sub_1001EFE94(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0CB8;
  if (!qword_1019A0CB8)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0CB8;
  }

  return result;
}

double sub_1001EFEC0()
{
  unsigned __int8 v0 = operator new(0x28uLL);
  void *v0 = &off_101829188;
  v0[1] = 0LL;
  double result = NAN;
  *((_OWORD *)v0 + 1) = xmmword_1012E0BB0;
  *((_DWORD *)v0 + 8) = 0;
  return result;
}

uint64_t sub_1001EFEF4(uint64_t result)
{
  if (*(_BYTE *)(result + 32))
  {
    if ((*(_BYTE *)(result + 32) & 1) != 0)
    {
      uint64_t v1 = *(void *)(result + 8);
      if (v1)
      {
        if (*(_BYTE *)(v1 + 36))
        {
          *(void *)(v1 + 8) = 0LL;
          *(void *)(v1 + 16) = 0LL;
          *(void *)(v1 + 24) = 0LL;
        }

        *(_DWORD *)(v1 + 36) = 0;
      }
    }

    *(void *)(result + 16) = -1LL;
    *(_DWORD *)(result + 24) = 0;
  }

  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1001EFF30( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_19;
        }
        *(_DWORD *)(a1 + 32) |= 1u;
        int v8 = *(char **)(a1 + 8);
        if (!v8)
        {
          int v8 = (char *)operator new(0x28uLL);
          *(void *)int v8 = off_101827B80;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *(void *)(a1 + 8) = v8;
        }

        int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v31)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v31 = *v9;
          *((void *)this + 1) = v9 + 1;
        }

        int v16 = *((_DWORD *)this + 14);
        int v17 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v16 + 1;
        if (v16 >= v17) {
          return 0LL;
        }
        int v18 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v31);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v18);
        int v20 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v20, 1);
        int v22 = v20 - 1;
        if (v22 < 0 == v21) {
          *((_DWORD *)this + 14) = v22;
        }
        unsigned int v23 = (_BYTE *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        char v11 = v23 + 1;
        *((void *)this + 1) = v11;
        goto LABEL_32;
      case 2u:
        int v7 = TagFallback & 7;
        char v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_32:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v31);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v24 = v31;
        }

        else
        {
          unsigned int v24 = *v11;
          *((void *)this + 1) = v11 + 1;
        }

        if (v24 + 1 <= 7)
        {
          *(_DWORD *)(a1 + 32) |= 2u;
          *(_DWORD *)(a1 + 16) = v24;
        }

        int v26 = (_BYTE *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        uint64_t v13 = v26 + 1;
        *((void *)this + 1) = v13;
LABEL_42:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v31);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v27 = v31;
        }

        else
        {
          unsigned int v27 = *v13;
          *((void *)this + 1) = v13 + 1;
        }

        if (v27 + 1 <= 7)
        {
          *(_DWORD *)(a1 + 32) |= 4u;
          *(_DWORD *)(a1 + 20) = v27;
        }

        int v28 = (_BYTE *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        int v15 = v28 + 1;
        *((void *)this + 1) = v15;
LABEL_52:
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v31);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v29 = v31;
          unsigned int v30 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }

        else
        {
          unsigned int v29 = *v15;
          unsigned int v30 = (unsigned __int8 *)(v15 + 1);
          *((void *)this + 1) = v30;
        }

        *(_DWORD *)(a1 + 24) = v29;
        *(_DWORD *)(a1 + 32) |= 8u;
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        break;
      case 3u:
        int v7 = TagFallback & 7;
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_42;
      case 4u:
        int v7 = TagFallback & 7;
        int v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_52;
      default:
        int v7 = TagFallback & 7;
LABEL_19:
        if (v7 == 4) {
          return 1LL;
        }
        return 0LL;
    }

    return result;
  }

uint64_t sub_1001F027C( uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = (int *)result;
  int v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0CB8 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = v5[8];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v5[4],  (int)a2,  a4);
  int v6 = v5[8];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      return result;
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  v5[6],  (int)a2,  a4);
  }

uint64_t sub_1001F0320(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 32);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0LL;
    goto LABEL_36;
  }

  if ((*(_BYTE *)(a1 + 32) & 1) == 0)
  {
    uint64_t v4 = 0LL;
    if ((*(_BYTE *)(a1 + 32) & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }

  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_1019A0CB8 + 8);
  }
  int v6 = *(unsigned __int8 *)(v5 + 36);
  if (*(_BYTE *)(v5 + 36))
  {
    int v7 = (v6 << 31 >> 31) & 9;
    if ((v6 & 2) != 0) {
      v7 += 9;
    }
    if ((v6 & 4) != 0) {
      int v6 = v7 + 9;
    }
    else {
      int v6 = v7;
    }
  }

  *(_DWORD *)(v5 + 32) = v6;
  uint64_t v4 = (v6 + 2);
  int v3 = *(_DWORD *)(a1 + 32);
  if ((v3 & 2) != 0)
  {
LABEL_15:
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if ((v8 & 0x80000000) != 0)
    {
      int v9 = 11;
    }

    else if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 32);
    }

    else
    {
      int v9 = 2;
    }

    uint64_t v4 = (v9 + v4);
  }

void sub_1001F0450(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1001F049C()
{
  return 1LL;
}

void *sub_1001F04A4@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.SignalEnvironment");
}

void sub_1001F04B4(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  19136LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 20);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 20) & 1) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v6;
      int v5 = *(_DWORD *)(a2 + 20);
    }

    if ((v5 & 2) != 0)
    {
      unsigned int v7 = *(_DWORD *)(a2 + 12);
      if (v7 >= 4) {
        sub_1012300E4();
      }
      a1[5] |= 2u;
      a1[3] = v7;
    }
  }

void sub_1001F0578(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001F0590(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101829200;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001F05A0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101829200;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

uint64_t sub_1001F05C0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0CC0;
  if (!qword_1019A0CC0)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0CC0;
  }

  return result;
}

double sub_1001F05EC()
{
  unsigned __int8 v0 = (char *)operator new(0x18uLL);
  *(void *)unsigned __int8 v0 = off_101829200;
  *(void *)&double result = 0xFFFFFFFFLL;
  *(_OWORD *)(v0 + 8) = xmmword_1012E0BC0;
  return result;
}

uint64_t sub_1001F061C(uint64_t result)
{
  if (*(_BYTE *)(result + 20)) {
    *(void *)(result + 8) = 0xFFFFFFFFLL;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1001F0634( _DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      int v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback) {
          return 1LL;
        }
      }

      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((void *)this + 1) = v5 + 1;
        if (!(_DWORD)TagFallback) {
          return 1LL;
        }
      }

      int v7 = TagFallback & 7;
      unint64_t v10 = (char *)*((void *)this + 1);
      if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v16);
        if (!(_DWORD)result) {
          return result;
        }
        unsigned int v11 = v16;
      }

      else
      {
        unsigned int v11 = *v10;
        *((void *)this + 1) = v10 + 1;
      }

      if (v11 + 1 <= 7)
      {
        a1[5] |= 1u;
        a1[2] = v11;
      }

      unint64_t v12 = (_BYTE *)*((void *)this + 1);
      unint64_t v8 = *((void *)this + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        int v9 = v12 + 1;
        *((void *)this + 1) = v9;
LABEL_25:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v15);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v13 = v15;
        }

        else
        {
          unsigned int v13 = *v9;
          *((void *)this + 1) = v9 + 1;
        }

        if (v13 <= 3)
        {
          a1[5] |= 2u;
          a1[3] = v13;
        }

        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1LL;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }

    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_25;
      }
    }

    else
    {
      int v7 = TagFallback & 7;
    }

uint64_t sub_1001F07E4( uint64_t result, int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(_DWORD *)(result + 8),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }

  if ((v6 & 2) != 0) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(_DWORD *)(v5 + 12),  a2,  a4);
  }
  return result;
}

uint64_t sub_1001F083C(uint64_t a1, unsigned int a2)
{
  char v3 = *(_BYTE *)(a1 + 20);
  if (v3)
  {
    if ((*(_BYTE *)(a1 + 20) & 1) != 0)
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if ((v5 & 0x80000000) != 0)
      {
        uint64_t v4 = 11LL;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }

      else if (v5 >= 0x80)
      {
        if ((*(_DWORD *)(a1 + 20) & 2) == 0) {
          goto LABEL_19;
        }
      }

      else
      {
        uint64_t v4 = 2LL;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }
    }

    else
    {
      uint64_t v4 = 0LL;
      if ((*(_BYTE *)(a1 + 20) & 2) == 0) {
        goto LABEL_19;
      }
    }

    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if ((v6 & 0x80000000) != 0)
    {
      int v7 = 11;
    }

    else if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    }

    else
    {
      int v7 = 2;
    }

    uint64_t v4 = (v7 + v4);
  }

  else
  {
    uint64_t v4 = 0LL;
  }

void sub_1001F08E4(_DWORD *a1, void *lpsrc)
{
}

uint64_t sub_1001F0930()
{
  return 1LL;
}

void *sub_1001F0938@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.SignalEnvironmentInfo");
}

float sub_1001F0948(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v11,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  19402LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v11,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 32);
  if (!(_BYTE)v6) {
    return *(float *)&v5;
  }
  if ((*(_BYTE *)(a2 + 32) & 1) != 0)
  {
    *(_DWORD *)(a1 + 32) |= 1u;
    int v7 = *(char **)(a1 + 8);
    if (!v7)
    {
      int v7 = (char *)operator new(0x28uLL);
      *(void *)int v7 = off_101827B80;
      *(_OWORD *)(v7 + 8) = 0u;
      *(_OWORD *)(v7 + 24) = 0u;
      *(void *)(a1 + 8) = v7;
    }

    uint64_t v8 = *(void *)(a2 + 8);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1019A0CC8 + 8);
    }
    double v5 = sub_1001D323C((uint64_t)v7, v8);
    int v6 = *(_DWORD *)(a2 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_6:
      if ((v6 & 4) == 0) {
        goto LABEL_7;
      }
LABEL_16:
      LODWORD(sub_1012279C0(0LL, v4, v5) = *(_DWORD *)(a2 + 20);
      *(_DWORD *)(a1 + 32) |= 4u;
      *(_DWORD *)(a1 + 20) = LODWORD(v5);
      if ((*(_DWORD *)(a2 + 32) & 8) != 0) {
        goto LABEL_8;
      }
      return *(float *)&v5;
    }
  }

  else if ((*(_BYTE *)(a2 + 32) & 2) == 0)
  {
    goto LABEL_6;
  }

  LODWORD(sub_1012279C0(0LL, v4, v5) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) |= 2u;
  *(_DWORD *)(a1 + 16) = LODWORD(v5);
  int v6 = *(_DWORD *)(a2 + 32);
  if ((v6 & 4) != 0) {
    goto LABEL_16;
  }
LABEL_7:
  if ((v6 & 8) != 0)
  {
LABEL_8:
    LODWORD(sub_1012279C0(0LL, v4, v5) = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 8u;
    *(_DWORD *)(a1 + 24) = LODWORD(v5);
  }

  return *(float *)&v5;
}

void sub_1001F0A74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001F0A8C(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_101829278;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0CC8 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1001F0AE0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

void *sub_1001F0AF4()
{
  uint64_t result = operator new(0x28uLL);
  *uint64_t result = &off_101829278;
  result[1] = 0LL;
  result[2] = 0LL;
  result[3] = 0LL;
  *((_DWORD *)result + 8) = 0;
  return result;
}

uint64_t sub_1001F0B20(uint64_t result)
{
  if (*(_BYTE *)(result + 32))
  {
    if ((*(_BYTE *)(result + 32) & 1) != 0)
    {
      uint64_t v1 = *(void *)(result + 8);
      if (v1)
      {
        if (*(_BYTE *)(v1 + 36))
        {
          *(void *)(v1 + 8) = 0LL;
          *(void *)(v1 + 16) = 0LL;
          *(void *)(v1 + 24) = 0LL;
        }

        *(_DWORD *)(v1 + 36) = 0;
      }
    }

    *(void *)(result + 16) = 0LL;
    *(_DWORD *)(result + 24) = 0;
  }

  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1001F0B58( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    double v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_19;
        }
        *(_DWORD *)(a1 + 32) |= 1u;
        uint64_t v8 = *(char **)(a1 + 8);
        if (!v8)
        {
          uint64_t v8 = (char *)operator new(0x28uLL);
          *(void *)uint64_t v8 = off_101827B80;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *(void *)(a1 + 8) = v8;
        }

        int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v21)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v21 = *v9;
          *((void *)this + 1) = v9 + 1;
        }

        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0LL;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v21);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        int v17 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v17 + 1;
        goto LABEL_31;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_19;
        }
LABEL_31:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v21) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 16) = v21;
        *(_DWORD *)(a1 + 32) |= 2u;
        int v18 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v18 + 1;
LABEL_35:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v21) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 20) = v21;
        *(_DWORD *)(a1 + 32) |= 4u;
        unsigned int v19 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v19 + 1;
LABEL_39:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v21) & 1) != 0)
        {
          *(_DWORD *)(a1 + 24) = v21;
          *(_DWORD *)(a1 + 32) |= 8u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1LL;
            *((_BYTE *)this + 36) = 1;
            return result;
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_35;
        }
        goto LABEL_19;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_19;
        }
        goto LABEL_39;
      default:
        int v7 = TagFallback & 7;
LABEL_19:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001F0E28( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0CC8 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  (int)a2,  *(float *)(v5 + 16),  a3);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      return result;
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  (int)a2,  *(float *)(v5 + 24),  a3);
  }

uint64_t sub_1001F0ECC(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 32);
  if (*(_BYTE *)(a1 + 32))
  {
    if ((v1 & 1) != 0)
    {
      uint64_t v1 = *(void *)(a1 + 8);
      if (!v1) {
        uint64_t v1 = *(void *)(qword_1019A0CC8 + 8);
      }
      int v3 = *(unsigned __int8 *)(v1 + 36);
      if (*(_BYTE *)(v1 + 36))
      {
        int v4 = (v3 << 31 >> 31) & 9;
        if ((v3 & 2) != 0) {
          v4 += 9;
        }
        if ((v3 & 4) != 0) {
          int v3 = v4 + 9;
        }
        else {
          int v3 = v4;
        }
      }

      *(_DWORD *)(v1 + 32) = v3;
      unsigned int v2 = v3 + 2;
      LODWORD(v1) = *(_DWORD *)(a1 + 32);
    }

    else
    {
      unsigned int v2 = 0;
    }

    if ((v1 & 2) != 0) {
      v2 += 5;
    }
    if ((v1 & 4) != 0) {
      v2 += 5;
    }
    if ((v1 & 8) != 0) {
      uint64_t v1 = v2 + 5;
    }
    else {
      uint64_t v1 = v2;
    }
  }

  *(_DWORD *)(a1 + 28) = v1;
  return v1;
}

float sub_1001F0F5C(uint64_t a1, void *lpsrc)
{
  return sub_1001F0948(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001F0FA8()
{
  return 1LL;
}

void *sub_1001F0FB0@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.MagSample");
}

double sub_1001F0FC0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v17,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  19620LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v17,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v16, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16),  *(_DWORD *)(a2 + 24) + *(_DWORD *)(a1 + 24));
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v6 = 0LL;
    do
    {
      uint64_t v7 = *(void *)(*(void *)(a2 + 16) + 8 * v6);
      int v8 = *(_DWORD *)(a1 + 28);
      uint64_t v9 = *(int *)(a1 + 24);
      if ((int)v9 >= v8)
      {
        if (v8 == *(_DWORD *)(a1 + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16),  v8 + 1);
          int v8 = *(_DWORD *)(a1 + 28);
        }

        *(_DWORD *)(a1 + 28) = v8 + 1;
        int v11 = operator new(0x28uLL);
        *int v11 = &off_101829278;
        v11[1] = 0LL;
        void v11[2] = 0LL;
        v11[3] = 0LL;
        *((_DWORD *)v11 + 8) = 0;
        uint64_t v12 = *(void *)(a1 + 16);
        uint64_t v13 = *(int *)(a1 + 24);
        *(_DWORD *)(a1 + 24) = v13 + 1;
        *(void *)(v12 + 8 * v13) = v11;
      }

      else
      {
        uint64_t v10 = *(void *)(a1 + 16);
        *(_DWORD *)(a1 + 24) = v9 + 1;
        int v11 = *(void **)(v10 + 8 * v9);
      }

      *(float *)&double result = sub_1001F0948((uint64_t)v11, v7);
      ++v6;
    }

    while (v6 < *(int *)(a2 + 24));
  }

  if ((*(_BYTE *)(a2 + 44) & 1) != 0)
  {
    *(_DWORD *)(a1 + 44) |= 1u;
    int v14 = *(char **)(a1 + 8);
    if (!v14)
    {
      int v14 = (char *)operator new(0x28uLL);
      *(void *)int v14 = off_101827B80;
      *(_OWORD *)(v14 + 8) = 0u;
      *(_OWORD *)(v14 + 24) = 0u;
      *(void *)(a1 + 8) = v14;
    }

    uint64_t v15 = *(void *)(a2 + 8);
    if (!v15) {
      uint64_t v15 = *(void *)(qword_1019A0CD0 + 8);
    }
    return sub_1001D323C((uint64_t)v14, v15);
  }

  return result;
}

void sub_1001F1154(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001F116C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018292F0;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0CD0 != a1)
  {
    uint64_t v2 = *((void *)a1 + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  sub_10008D0EC((uint64_t)a1 + 16);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001F11CC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

uint64_t sub_1001F11E0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0CD0;
  if (!qword_1019A0CD0)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0CD0;
  }

  return result;
}

void *sub_1001F120C()
{
  uint64_t result = operator new(0x30uLL);
  result[5] = 0LL;
  *uint64_t result = off_1018292F0;
  result[1] = 0LL;
  result[2] = 0LL;
  result[3] = 0LL;
  *((_DWORD *)result + 8) = 0;
  return result;
}

uint64_t sub_1001F123C(uint64_t result)
{
  uint64_t v1 = result;
  if ((*(_BYTE *)(result + 44) & 1) != 0)
  {
    uint64_t v2 = *(void *)(result + 8);
    if (v2)
    {
      if (*(_BYTE *)(v2 + 36))
      {
        *(void *)(v2 + 8) = 0LL;
        *(void *)(v2 + 16) = 0LL;
        *(void *)(v2 + 24) = 0LL;
      }

      *(_DWORD *)(v2 + 36) = 0;
    }
  }

  if (*(int *)(result + 24) >= 1)
  {
    uint64_t v3 = 0LL;
    do
    {
      uint64_t v4 = *(void *)(*(void *)(v1 + 16) + 8 * v3);
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 32LL))(v4);
      ++v3;
    }

    while (v3 < *(int *)(v1 + 24));
  }

  *(_DWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 44) = 0;
  return result;
}

uint64_t sub_1001F12B8( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = (char *)*((void *)this + 1);
        if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((void *)this + 1) = v6 + 1;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_18;
        }
        *(_DWORD *)(a1 + 44) |= 1u;
        uint64_t v9 = *(char **)(a1 + 8);
        if (!v9)
        {
          uint64_t v9 = (char *)operator new(0x28uLL);
          *(void *)uint64_t v9 = off_101827B80;
          *(_OWORD *)(v9 + 8) = 0u;
          *(_OWORD *)(v9 + 24) = 0u;
          *(void *)(a1 + 8) = v9;
        }

        uint64_t v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v34)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v34 = *v10;
          *((void *)this + 1) = v10 + 1;
        }

        int v11 = *((_DWORD *)this + 14);
        int v12 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v11 + 1;
        if (v11 >= v12) {
          return 0LL;
        }
        int v13 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v13);
        int v15 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v15, 1);
        int v17 = v15 - 1;
        if (v17 < 0 == v16) {
          *((_DWORD *)this + 14) = v17;
        }
        int v18 = (_BYTE *)*((void *)this + 1);
      }

      int v8 = TagFallback & 7;
      if (v8 != 2) {
        goto LABEL_18;
      }
      while (1)
      {
        int v19 = *(_DWORD *)(a1 + 28);
        uint64_t v20 = *(int *)(a1 + 24);
        if ((int)v20 >= v19)
        {
          if (v19 == *(_DWORD *)(a1 + 32))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v19 + 1);
            int v19 = *(_DWORD *)(a1 + 28);
          }

          *(_DWORD *)(a1 + 28) = v19 + 1;
          int v22 = operator new(0x28uLL);
          *int v22 = &off_101829278;
          v22[1] = 0LL;
          v22[2] = 0LL;
          v22[3] = 0LL;
          *((_DWORD *)v22 + 8) = 0;
          uint64_t v23 = *(void *)(a1 + 16);
          uint64_t v24 = *(int *)(a1 + 24);
          *(_DWORD *)(a1 + 24) = v24 + 1;
          *(void *)(v23 + 8 * v24) = v22;
        }

        else
        {
          uint64_t v21 = *(void *)(a1 + 16);
          *(_DWORD *)(a1 + 24) = v20 + 1;
          int v22 = *(void **)(v21 + 8 * v20);
        }

        int v25 = (char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v35)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v35 = *v25;
          *((void *)this + 1) = v25 + 1;
        }

        int v26 = *((_DWORD *)this + 14);
        int v27 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v26 + 1;
        if (v26 >= v27) {
          return 0LL;
        }
        int v28 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v35);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v28);
        int v30 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v30, 1);
        int v31 = v30 - 1;
        if (v31 < 0 == v16) {
          *((_DWORD *)this + 14) = v31;
        }
        int v18 = (_BYTE *)*((void *)this + 1);
        int v32 = (_BYTE *)*((void *)this + 2);
        if (v18 >= v32 || *v18 != 18) {
          break;
        }
LABEL_29:
        *((void *)this + 1) = v18 + 1;
      }

      if (v18 == v32 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }

    int v8 = TagFallback & 7;
LABEL_18:
    if (v8 == 4) {
      return 1LL;
    }
  }

uint64_t sub_1001F15D4( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if ((*(_BYTE *)(result + 44) & 1) != 0)
  {
    uint64_t v6 = *(void *)(result + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1019A0CD0 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v6,  a2,  a4);
  }

  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0LL;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(void *)(*(void *)(v5 + 16) + 8 * v7++),  a2,  a4);
    while (v7 < *(int *)(v5 + 24));
  }

  return result;
}

uint64_t sub_1001F1658(uint64_t a1)
{
  if ((*(_BYTE *)(a1 + 44) & 1) != 0)
  {
    uint64_t v3 = *(void *)(a1 + 8);
    if (!v3) {
      uint64_t v3 = *(void *)(qword_1019A0CD0 + 8);
    }
    int v4 = *(unsigned __int8 *)(v3 + 36);
    if (*(_BYTE *)(v3 + 36))
    {
      int v5 = (v4 << 31 >> 31) & 9;
      if ((v4 & 2) != 0) {
        v5 += 9;
      }
      if ((v4 & 4) != 0) {
        int v4 = v5 + 9;
      }
      else {
        int v4 = v5;
      }
    }

    *(_DWORD *)(v3 + 32) = v4;
    int v2 = v4 + 2;
  }

  else
  {
    int v2 = 0;
  }

  int v6 = *(_DWORD *)(a1 + 24);
  uint64_t v7 = (v6 + v2);
  if (v6 >= 1)
  {
    uint64_t v8 = 0LL;
    do
    {
      uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001F0ECC(*(void *)(*(void *)(a1 + 16) + 8 * v8));
      int v11 = (int)v9;
      else {
        int v12 = 1;
      }
      uint64_t v7 = (v11 + v7 + v12);
      ++v8;
    }

    while (v8 < *(int *)(a1 + 24));
  }

  *(_DWORD *)(a1 + 40) = v7;
  return v7;
}

double sub_1001F1730(uint64_t a1, void *lpsrc)
{
  return sub_1001F0FC0(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001F177C()
{
  return 1LL;
}

void *sub_1001F1784@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.Magnetometer");
}

double sub_1001F1794(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  19797LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  if ((*(_BYTE *)(a2 + 20) & 1) != 0)
  {
    *(_DWORD *)(a1 + 20) |= 1u;
    int v6 = *(char **)(a1 + 8);
    if (!v6)
    {
      int v6 = (char *)operator new(0x28uLL);
      *(void *)int v6 = off_101827B80;
      *(_OWORD *)(v6 + 8) = 0u;
      *(_OWORD *)(v6 + 24) = 0u;
      *(void *)(a1 + 8) = v6;
    }

    uint64_t v7 = *(void *)(a2 + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0CD8 + 8);
    }
    return sub_1001D323C((uint64_t)v6, v7);
  }

  return result;
}

void sub_1001F1858(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001F1870(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_101829368;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0CD8 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1001F18C4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

uint64_t sub_1001F18D8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0CD8;
  if (!qword_1019A0CD8)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0CD8;
  }

  return result;
}

void *sub_1001F1904()
{
  uint64_t result = operator new(0x18uLL);
  result[1] = 0LL;
  result[2] = 0LL;
  *uint64_t result = &off_101829368;
  return result;
}

uint64_t sub_1001F192C(uint64_t result)
{
  if ((*(_BYTE *)(result + 20) & 1) != 0)
  {
    uint64_t v1 = *(void *)(result + 8);
    if (v1)
    {
      if (*(_BYTE *)(v1 + 36))
      {
        *(void *)(v1 + 8) = 0LL;
        *(void *)(v1 + 16) = 0LL;
        *(void *)(v1 + 24) = 0LL;
      }

      *(_DWORD *)(v1 + 36) = 0;
    }
  }

  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1001F1958( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      }

      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((void *)this + 1) = v5 + 1;
      }

      if ((_DWORD)TagFallback != 10) {
        break;
      }
      *(_DWORD *)(a1 + 20) |= 1u;
      uint64_t v7 = *(char **)(a1 + 8);
      if (!v7)
      {
        uint64_t v7 = (char *)operator new(0x28uLL);
        *(void *)uint64_t v7 = off_101827B80;
        *(_OWORD *)(v7 + 8) = 0u;
        *(_OWORD *)(v7 + 24) = 0u;
        *(void *)(a1 + 8) = v7;
      }

      char v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v17)) {
          return 0LL;
        }
      }

      else
      {
        unsigned int v17 = *v8;
        *((void *)this + 1) = v8 + 1;
      }

      int v9 = *((_DWORD *)this + 14);
      int v10 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v9 + 1;
      if (v9 >= v10) {
        return 0LL;
      }
      int v11 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v17);
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v11);
      int v13 = *((_DWORD *)this + 14);
      BOOL v14 = __OFSUB__(v13, 1);
      int v15 = v13 - 1;
      if (v15 < 0 == v14) {
        *((_DWORD *)this + 14) = v15;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
  }

  return 1LL;
}

uint64_t sub_1001F1AFC( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if ((*(_BYTE *)(result + 20) & 1) != 0)
  {
    uint64_t v5 = *(void *)(result + 8);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_1019A0CD8 + 8);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v5,  a2,  a4);
  }

  return result;
}

uint64_t sub_1001F1B28(uint64_t a1)
{
  if ((*(_BYTE *)(a1 + 20) & 1) != 0)
  {
    uint64_t v2 = *(void *)(a1 + 8);
    if (!v2) {
      uint64_t v2 = *(void *)(qword_1019A0CD8 + 8);
    }
    int v3 = *(unsigned __int8 *)(v2 + 36);
    if (*(_BYTE *)(v2 + 36))
    {
      int v4 = (v3 << 31 >> 31) & 9;
      if ((v3 & 2) != 0) {
        v4 += 9;
      }
      if ((v3 & 4) != 0) {
        int v3 = v4 + 9;
      }
      else {
        int v3 = v4;
      }
    }

    *(_DWORD *)(v2 + 32) = v3;
    uint64_t v1 = (v3 + 2);
  }

  else
  {
    uint64_t v1 = 0LL;
  }

  *(_DWORD *)(a1 + 16) = v1;
  return v1;
}

double sub_1001F1B8C(uint64_t a1, void *lpsrc)
{
  return sub_1001F1794(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001F1BD8()
{
  return 1LL;
}

void *sub_1001F1BE0@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.Reset");
}

double sub_1001F1BF0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v8,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  20020LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v8,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v7, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 36);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 36) & 1) != 0)
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(double *)(a1 + 8) = result;
      int v6 = *(_DWORD *)(a2 + 36);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }

    else if ((*(_BYTE *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }

    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(double *)(a1 + 16) = result;
    if ((*(_DWORD *)(a2 + 36) & 4) == 0) {
      return result;
    }
LABEL_7:
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 4u;
    *(double *)(a1 + 24) = result;
  }

  return result;
}

void sub_1001F1CC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001F1CD8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018293E0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001F1CE8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018293E0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

double sub_1001F1D08()
{
  unsigned __int8 v0 = (char *)operator new(0x28uLL);
  *(void *)unsigned __int8 v0 = off_1018293E0;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  return result;
}

uint64_t sub_1001F1D38(uint64_t result)
{
  if (*(_BYTE *)(result + 36))
  {
    *(void *)(result + 8) = 0LL;
    *(void *)(result + 16) = 0LL;
    *(void *)(result + 24) = 0LL;
  }

  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_1001F1D50( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        unsigned int v7 = TagFallback >> 3;
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_27;
        }
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 8) = v12;
        *(_DWORD *)(a1 + 36) |= 1u;
        int v9 = (_BYTE *)*((void *)this + 1);
        if ((unint64_t)v9 < *((void *)this + 2) && *v9 == 17)
        {
          *((void *)this + 1) = v9 + 1;
LABEL_17:
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
            return 0LL;
          }
          *(void *)(a1 + 16) = v12;
          *(_DWORD *)(a1 + 36) |= 2u;
          int v10 = (_BYTE *)*((void *)this + 1);
          if ((unint64_t)v10 < *((void *)this + 2) && *v10 == 25)
          {
            *((void *)this + 1) = v10 + 1;
            goto LABEL_21;
          }
        }
      }

      if (v7 == 2)
      {
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_27;
        }
        goto LABEL_17;
      }

      if (v7 != 3)
      {
        int v8 = TagFallback & 7;
        goto LABEL_27;
      }

      int v8 = TagFallback & 7;
      if (v8 == 1) {
        break;
      }
LABEL_27:
      if (v8 == 4) {
        return 1LL;
      }
    }

uint64_t sub_1001F1F08( uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 36);
  if ((v5 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  a2,  *(double *)(result + 8),  a3);
    int v5 = *(_DWORD *)(v4 + 36);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        return result;
      }
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  a2,  *(double *)(v4 + 24),  a3);
    }
  }

  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  a2,  *(double *)(v4 + 16),  a3);
  if ((*(_DWORD *)(v4 + 36) & 4) != 0) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  a2,  *(double *)(v4 + 24),  a3);
  }
  return result;
}

uint64_t sub_1001F1F80(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 36);
  if (*(_BYTE *)(a1 + 36))
  {
    unsigned int v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }

  *(_DWORD *)(a1 + 32) = v1;
  return v1;
}

double sub_1001F1FB8(uint64_t a1, void *lpsrc)
{
  return sub_1001F1BF0(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001F2004()
{
  return 1LL;
}

void *sub_1001F200C@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.AccelerometerPace");
}

void sub_1001F201C(uint64_t a1, _BYTE *a2)
{
  if (a2 == (_BYTE *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v15,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  20396LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v15,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v14, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = a2[20];
  if ((_BYTE)v5)
  {
    if ((a2[20] & 1) != 0)
    {
      char v7 = a2[8];
      *(_DWORD *)(a1 + 20) |= 1u;
      *(_BYTE *)(a1 + 8) = v7;
      int v5 = *((_DWORD *)a2 + 5);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_16;
      }
    }

    else if ((a2[20] & 2) == 0)
    {
      goto LABEL_6;
    }

    char v8 = a2[9];
    *(_DWORD *)(a1 + 20) |= 2u;
    *(_BYTE *)(a1 + 9) = v8;
    int v5 = *((_DWORD *)a2 + 5);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_17;
    }

void sub_1001F218C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001F21A4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101829458;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001F21B4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101829458;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

void *sub_1001F21D4()
{
  uint64_t result = operator new(0x18uLL);
  result[1] = 0LL;
  result[2] = 0LL;
  *uint64_t result = off_101829458;
  return result;
}

uint64_t sub_1001F21FC(uint64_t result)
{
  if (*(_BYTE *)(result + 20)) {
    *(void *)(result + 8) = 0LL;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1001F2210( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        char v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 < v8 && (*v9 & 0x80000000) == 0)
        {
          unsigned int v10 = *v9;
          char v11 = v9 + 1;
          *((void *)this + 1) = v11;
LABEL_31:
          *(_BYTE *)(a1 + 8) = v10 != 0;
          *(_DWORD *)(a1 + 20) |= 1u;
          if ((unint64_t)v11 < v8 && *v11 == 16)
          {
            char v12 = v11 + 1;
            *((void *)this + 1) = v12;
            goto LABEL_34;
          }

          continue;
        }

        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v34);
        if ((_DWORD)result)
        {
          unsigned int v10 = v34;
          char v11 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
          goto LABEL_31;
        }

        break;
      case 2u:
        int v7 = TagFallback & 7;
        char v12 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
LABEL_34:
        if ((unint64_t)v12 >= v8 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v34);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v19 = v34;
          uint64_t v20 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v19 = *v12;
          uint64_t v20 = v12 + 1;
          *((void *)this + 1) = v20;
        }

        *(_BYTE *)(a1 + 9) = v19 != 0;
        *(_DWORD *)(a1 + 20) |= 2u;
        char v13 = v20 + 1;
        *((void *)this + 1) = v13;
LABEL_42:
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v34);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v21 = v34;
          int v22 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v21 = *v13;
          int v22 = v13 + 1;
          *((void *)this + 1) = v22;
        }

        *(_BYTE *)(a1 + 10) = v21 != 0;
        *(_DWORD *)(a1 + 20) |= 4u;
        char v14 = v22 + 1;
        *((void *)this + 1) = v14;
LABEL_50:
        if ((unint64_t)v14 >= v8 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v34);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v23 = v34;
          uint64_t v24 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v23 = *v14;
          uint64_t v24 = v14 + 1;
          *((void *)this + 1) = v24;
        }

        *(_BYTE *)(a1 + 11) = v23 != 0;
        *(_DWORD *)(a1 + 20) |= 8u;
        int v15 = v24 + 1;
        *((void *)this + 1) = v15;
LABEL_58:
        if ((unint64_t)v15 >= v8 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v34);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v25 = v34;
          int v26 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v25 = *v15;
          int v26 = v15 + 1;
          *((void *)this + 1) = v26;
        }

        *(_BYTE *)(a1 + 12) = v25 != 0;
        *(_DWORD *)(a1 + 20) |= 0x10u;
        BOOL v16 = v26 + 1;
        *((void *)this + 1) = v16;
LABEL_66:
        if ((unint64_t)v16 >= v8 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v34);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v27 = v34;
          int v28 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v27 = *v16;
          int v28 = v16 + 1;
          *((void *)this + 1) = v28;
        }

        *(_BYTE *)(a1 + 13) = v27 != 0;
        *(_DWORD *)(a1 + 20) |= 0x20u;
        unsigned int v17 = v28 + 1;
        *((void *)this + 1) = v17;
LABEL_74:
        if ((unint64_t)v17 >= v8 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v34);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v29 = v34;
          int v30 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v29 = *v17;
          int v30 = v17 + 1;
          *((void *)this + 1) = v30;
        }

        *(_BYTE *)(a1 + 14) = v29 != 0;
        *(_DWORD *)(a1 + 20) |= 0x40u;
        int v18 = v30 + 1;
        *((void *)this + 1) = v18;
LABEL_82:
        if ((unint64_t)v18 >= v8 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v34);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v31 = v34;
          int v32 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v31 = *v18;
          int v32 = (unsigned __int8 *)(v18 + 1);
          *((void *)this + 1) = v32;
        }

        *(_BYTE *)(a1 + 15) = v31 != 0;
        *(_DWORD *)(a1 + 20) |= 0x80u;
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        int v7 = TagFallback & 7;
        char v13 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_42;
      case 4u:
        int v7 = TagFallback & 7;
        char v14 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_50;
      case 5u:
        int v7 = TagFallback & 7;
        int v15 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_58;
      case 6u:
        int v7 = TagFallback & 7;
        BOOL v16 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_66;
      case 7u:
        int v7 = TagFallback & 7;
        unsigned int v17 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_74;
      case 8u:
        int v7 = TagFallback & 7;
        int v18 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_82;
      default:
        int v7 = TagFallback & 7;
LABEL_25:
        if (v7 == 4) {
          return 1LL;
        }
        return 0LL;
    }

    return result;
  }

uint64_t sub_1001F26C4( uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(unsigned __int8 *)(result + 8),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 20);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(unsigned __int8 *)(v5 + 9),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }

uint64_t sub_1001F27C8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 20);
  if ((_BYTE)v1)
  {
    unsigned int v2 = 2 * (v1 & 1);
    if ((v1 & 2) != 0) {
      v2 += 2;
    }
    if ((v1 & 4) != 0) {
      v2 += 2;
    }
    if ((v1 & 8) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x10) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x20) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x40) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x80) != 0) {
      uint64_t v3 = v2 + 2;
    }
    else {
      uint64_t v3 = v2;
    }
  }

  else
  {
    uint64_t v3 = 0LL;
  }

  *(_DWORD *)(a1 + 16) = v3;
  return v3;
}

void sub_1001F2840(uint64_t a1, _BYTE *lpsrc)
{
}

uint64_t sub_1001F288C()
{
  return 1LL;
}

void *sub_1001F2894@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.FalseStepDetectorState");
}

void sub_1001F28A4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v37,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  21372LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v37,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v36, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v37);
  }

  int v5 = *(_DWORD *)(a2 + 148);
  if (!(_BYTE)v5) {
    goto LABEL_13;
  }
  if ((v5 & 1) != 0)
  {
    *(_DWORD *)(a1 + 148) |= 1u;
    int v7 = *(char **)(a1 + 8);
    if (!v7)
    {
      int v7 = (char *)operator new(0x28uLL);
      *(void *)int v7 = off_101827B80;
      *(_OWORD *)(v7 + 8) = 0u;
      *(_OWORD *)(v7 + 24) = 0u;
      *(void *)(a1 + 8) = v7;
    }

    uint64_t v8 = *(void *)(a2 + 8);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1019A0CF0 + 8);
    }
    sub_1001D323C((uint64_t)v7, v8);
    int v5 = *(_DWORD *)(a2 + 148);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_33;
    }
  }

  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }

  *(_DWORD *)(a1 + 148) |= 2u;
  char v9 = *(char **)(a1 + 16);
  if (!v9)
  {
    char v9 = (char *)operator new(0x28uLL);
    *(void *)char v9 = off_101827B80;
    *(_OWORD *)(v9 + 8) = 0u;
    *(_OWORD *)(v9 + 24) = 0u;
    *(void *)(a1 + 16) = v9;
  }

  uint64_t v10 = *(void *)(a2 + 16);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_1019A0CF0 + 16);
  }
  sub_1001D323C((uint64_t)v9, v10);
  int v5 = *(_DWORD *)(a2 + 148);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_38;
  }

void sub_1001F2D8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001F2DA4(void *a1)
{
  uint64_t v2 = a1[11];
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    operator delete((void *)v2);
  }

  if ((void *)qword_1019A0CF0 != a1)
  {
    uint64_t v4 = a1[1];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
    }
    uint64_t v5 = a1[2];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
    }
    uint64_t v6 = a1[3];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
    }
    uint64_t v7 = a1[13];
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
    }
    uint64_t v8 = a1[17];
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
    }
  }

void sub_1001F2E6C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018294D0;
  sub_1001F2DA4(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001F2E9C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018294D0;
  sub_1001F2DA4(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v2);
}

double sub_1001F2ED0()
{
  unsigned __int8 v0 = (char *)operator new(0x98uLL);
  *(void *)unsigned __int8 v0 = off_1018294D0;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *((void *)v0 + 11) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *((_WORD *)v0 + 48) = 0;
  *((void *)v0 + 18) = 0LL;
  *(_OWORD *)(v0 + 100) = 0u;
  *(_OWORD *)(v0 + 116) = 0u;
  *((_OWORD *)v0 + 8) = 0u;
  return result;
}

uint64_t sub_1001F2F2C(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 148);
  if ((_BYTE)v1)
  {
    if ((v1 & 1) != 0)
    {
      uint64_t v2 = *(void *)(result + 8);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 36))
        {
          *(void *)(v2 + 8) = 0LL;
          *(void *)(v2 + 16) = 0LL;
          *(void *)(v2 + 24) = 0LL;
        }

        *(_DWORD *)(v2 + 36) = 0;
        int v1 = *(_DWORD *)(result + 148);
      }
    }

    if ((v1 & 2) != 0)
    {
      uint64_t v3 = *(void *)(result + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0LL;
          *(void *)(v3 + 16) = 0LL;
          *(void *)(v3 + 24) = 0LL;
        }

        *(_DWORD *)(v3 + 36) = 0;
        int v1 = *(_DWORD *)(result + 148);
      }
    }

    if ((v1 & 4) != 0)
    {
      uint64_t v4 = *(void *)(result + 24);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 36))
        {
          *(void *)(v4 + 8) = 0LL;
          *(void *)(v4 + 16) = 0LL;
          *(void *)(v4 + 24) = 0LL;
        }

        *(_DWORD *)(v4 + 36) = 0;
        int v1 = *(_DWORD *)(result + 148);
      }
    }

    *(_DWORD *)(result + 72) = 0;
    *(void *)(result + 40) = 0LL;
    *(void *)(result + 48) = 0LL;
    *(void *)(result + 32) = 0LL;
  }

  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(result + 80) = 0LL;
    *(_DWORD *)(result + 76) = 0;
    *(void *)(result + 56) = 0LL;
    *(void *)(result + 64) = 0LL;
    if ((v1 & 0x1000) != 0)
    {
      uint64_t v5 = *(void *)(result + 88);
      if ((_UNKNOWN *)v5 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v5 + 23) < 0)
        {
          **(_BYTE **)uint64_t v5 = 0;
          *(void *)(v5 + 8) = 0LL;
        }

        else
        {
          *(_BYTE *)uint64_t v5 = 0;
          *(_BYTE *)(v5 + 23) = 0;
        }
      }
    }

    *(_WORD *)(result + 96) = 0;
    int v1 = *(_DWORD *)(result + 148);
    if ((v1 & 0x8000) != 0)
    {
      uint64_t v6 = *(void *)(result + 104);
      if (v6)
      {
        if (*(_BYTE *)(v6 + 36))
        {
          *(void *)(v6 + 8) = 0LL;
          *(void *)(v6 + 16) = 0LL;
          *(void *)(v6 + 24) = 0LL;
        }

        *(_DWORD *)(v6 + 36) = 0;
        int v1 = *(_DWORD *)(result + 148);
      }
    }
  }

  if ((v1 & 0xFF0000) != 0)
  {
    *(_DWORD *)(result + 100) = 0;
    *(void *)(result + 120) = 0LL;
    *(void *)(result + 128) = 0LL;
    *(void *)(result + 112) = 0LL;
    if ((v1 & 0x800000) != 0)
    {
      uint64_t v7 = *(void *)(result + 136);
      if (v7)
      {
        if (*(_BYTE *)(v7 + 20)) {
          *(void *)(v7 + 8) = 0LL;
        }
        *(_DWORD *)(v7 + 20) = 0;
      }
    }
  }

  *(_DWORD *)(result + 148) = 0;
  return result;
}

uint64_t sub_1001F3060( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)(a1 + 40);
  uint64_t v6 = (unsigned int *)(a1 + 44);
  uint64_t v7 = (unsigned int *)(a1 + 72);
  uint64_t v8 = (unsigned int *)(a1 + 100);
  uint64_t v105 = (unsigned int *)(a1 + 116);
  uint64_t v106 = (unsigned int *)(a1 + 112);
  unsigned int v103 = (unsigned int *)(a1 + 124);
  uint64_t v104 = (unsigned int *)(a1 + 120);
  char v9 = (unsigned int *)(a1 + 128);
  while (2)
  {
    uint64_t v10 = (char *)*((void *)this + 1);
    if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v10;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v10 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_65;
        }
        *(_DWORD *)(a1 + 148) |= 1u;
        int v13 = *(char **)(a1 + 8);
        if (!v13)
        {
          int v13 = (char *)operator new(0x28uLL);
          *(void *)int v13 = off_101827B80;
          *(_OWORD *)(v13 + 8) = 0u;
          *(_OWORD *)(v13 + 24) = 0u;
          *(void *)(a1 + 8) = v13;
        }

        uint64_t v14 = (char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v107)) {
            return 0LL;
          }
        }

        else
        {
          v107[0] = *v14;
          *((void *)this + 1) = v14 + 1;
        }

        int v44 = *((_DWORD *)this + 14);
        int v45 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v44 + 1;
        if (v44 >= v45) {
          return 0LL;
        }
        int v46 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v107[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v46);
        int v48 = *((_DWORD *)this + 14);
        BOOL v42 = __OFSUB__(v48, 1);
        int v49 = v48 - 1;
        if (v49 < 0 == v42) {
          *((_DWORD *)this + 14) = v49;
        }
        int v50 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v50 + 1;
        goto LABEL_87;
      case 2u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_65;
        }
LABEL_87:
        *(_DWORD *)(a1 + 148) |= 2u;
        int v51 = *(char **)(a1 + 16);
        if (!v51)
        {
          int v51 = (char *)operator new(0x28uLL);
          *(void *)int v51 = off_101827B80;
          *(_OWORD *)(v51 + 8) = 0u;
          *(_OWORD *)(v51 + 24) = 0u;
          *(void *)(a1 + 16) = v51;
        }

        uint64_t v52 = (char *)*((void *)this + 1);
        if ((unint64_t)v52 >= *((void *)this + 2) || *v52 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v107)) {
            return 0LL;
          }
        }

        else
        {
          v107[0] = *v52;
          *((void *)this + 1) = v52 + 1;
        }

        int v53 = *((_DWORD *)this + 14);
        int v54 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v53 + 1;
        if (v53 >= v54) {
          return 0LL;
        }
        int v55 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v107[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v55);
        int v57 = *((_DWORD *)this + 14);
        BOOL v42 = __OFSUB__(v57, 1);
        int v58 = v57 - 1;
        if (v58 < 0 == v42) {
          *((_DWORD *)this + 14) = v58;
        }
        unsigned int v59 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v59 + 1;
LABEL_101:
        *(_DWORD *)(a1 + 148) |= 4u;
        int v60 = *(char **)(a1 + 24);
        if (!v60)
        {
          int v60 = (char *)operator new(0x28uLL);
          *(void *)int v60 = off_101827B80;
          *(_OWORD *)(v60 + 8) = 0u;
          *(_OWORD *)(v60 + 24) = 0u;
          *(void *)(a1 + 24) = v60;
        }

        unsigned int v61 = (char *)*((void *)this + 1);
        if ((unint64_t)v61 >= *((void *)this + 2) || *v61 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v107)) {
            return 0LL;
          }
        }

        else
        {
          v107[0] = *v61;
          *((void *)this + 1) = v61 + 1;
        }

        int v62 = *((_DWORD *)this + 14);
        int v63 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v62 + 1;
        if (v62 >= v63) {
          return 0LL;
        }
        int v64 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v107[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v64);
        int v66 = *((_DWORD *)this + 14);
        BOOL v42 = __OFSUB__(v66, 1);
        int v67 = v66 - 1;
        if (v67 < 0 == v42) {
          *((_DWORD *)this + 14) = v67;
        }
        unsigned int v68 = (_BYTE *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        int v16 = v68 + 1;
        *((void *)this + 1) = v16;
LABEL_115:
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v69 = (_BYTE *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }

        else
        {
          *uint64_t v5 = *v16;
          unsigned int v69 = v16 + 1;
          *((void *)this + 1) = v69;
        }

        *(_DWORD *)(a1 + 148) |= 8u;
        *((void *)this + 1) = v69 + 1;
LABEL_123:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v107) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 32) = *(void *)v107;
        *(_DWORD *)(a1 + 148) |= 0x10u;
        char v71 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v71 + 1;
LABEL_127:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v107) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 48) = *(void *)v107;
        *(_DWORD *)(a1 + 148) |= 0x20u;
        unsigned int v72 = (_BYTE *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        uint64_t v18 = v72 + 1;
        *((void *)this + 1) = v18;
LABEL_131:
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result) {
            return result;
          }
          int v73 = (_BYTE *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }

        else
        {
          *uint64_t v6 = *v18;
          int v73 = v18 + 1;
          *((void *)this + 1) = v73;
        }

        *(_DWORD *)(a1 + 148) |= 0x40u;
        uint64_t v19 = v73 + 1;
        *((void *)this + 1) = v19;
LABEL_139:
        if ((unint64_t)v19 >= v17 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result) {
            return result;
          }
          int v74 = (_BYTE *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }

        else
        {
          *uint64_t v7 = *v19;
          int v74 = v19 + 1;
          *((void *)this + 1) = v74;
        }

        *(_DWORD *)(a1 + 148) |= 0x80u;
        *((void *)this + 1) = v74 + 1;
LABEL_147:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v107) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 56) = *(void *)v107;
        *(_DWORD *)(a1 + 148) |= 0x100u;
        int v75 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v75 + 1;
LABEL_151:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v107) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 64) = *(void *)v107;
        *(_DWORD *)(a1 + 148) |= 0x200u;
        unsigned int v76 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v76 + 1;
LABEL_155:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v107) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 80) = *(void *)v107;
        *(_DWORD *)(a1 + 148) |= 0x400u;
        int v77 = (_BYTE *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        unsigned int v21 = v77 + 1;
        *((void *)this + 1) = v21;
LABEL_159:
        if ((unint64_t)v21 >= v20 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v107);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v78 = v107[0];
          int v79 = (_BYTE *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
        }

        else
        {
          unsigned int v78 = *v21;
          int v79 = v21 + 1;
          *((void *)this + 1) = v79;
        }

        *(_DWORD *)(a1 + 76) = v78;
        int v22 = *(_DWORD *)(a1 + 148) | 0x800;
        *(_DWORD *)(a1 + 148) = v22;
        *((void *)this + 1) = v79 + 1;
LABEL_167:
        *(_DWORD *)(a1 + 148) = v22 | 0x1000;
        int v80 = *(void **)(a1 + 88);
        if (v80 == (void *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
        {
          int v80 = operator new(0x18uLL);
          v80[1] = 0LL;
          v80[2] = 0LL;
          *int v80 = 0LL;
          *(void *)(a1 + 88) = v80;
        }

        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString(this, v80);
        if (!(_DWORD)result) {
          return result;
        }
        int v81 = (_BYTE *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        char v24 = v81 + 1;
        *((void *)this + 1) = v24;
LABEL_173:
        if ((unint64_t)v24 >= v23 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v107);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v82 = v107[0];
          int v83 = (_BYTE *)*((void *)this + 1);
          unint64_t v23 = *((void *)this + 2);
        }

        else
        {
          unsigned int v82 = *v24;
          int v83 = v24 + 1;
          *((void *)this + 1) = v83;
        }

        *(_BYTE *)(a1 + 96) = v82 != 0;
        *(_DWORD *)(a1 + 148) |= 0x2000u;
        unsigned int v25 = v83 + 1;
        *((void *)this + 1) = v25;
LABEL_181:
        if ((unint64_t)v25 >= v23 || (char)*v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v107);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v84 = v107[0];
          unsigned int v85 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v23 = *((void *)this + 2);
        }

        else
        {
          unsigned int v84 = *v25;
          unsigned int v85 = v25 + 1;
          *((void *)this + 1) = v85;
        }

        *(_BYTE *)(a1 + 97) = v84 != 0;
        int v26 = *(_DWORD *)(a1 + 148) | 0x4000;
        *(_DWORD *)(a1 + 148) = v26;
        *((void *)this + 1) = v85 + 2;
LABEL_190:
        *(_DWORD *)(a1 + 148) = v26 | 0x8000;
        int v86 = *(char **)(a1 + 104);
        if (!v86)
        {
          int v86 = (char *)operator new(0x28uLL);
          *(void *)int v86 = off_1018293E0;
          *(_OWORD *)(v86 + 8) = 0u;
          *(_OWORD *)(v86 + 24) = 0u;
          *(void *)(a1 + 104) = v86;
        }

        int v87 = (char *)*((void *)this + 1);
        if ((unint64_t)v87 >= *((void *)this + 2) || *v87 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v107)) {
            return 0LL;
          }
        }

        else
        {
          v107[0] = *v87;
          *((void *)this + 1) = v87 + 1;
        }

        int v88 = *((_DWORD *)this + 14);
        int v89 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v88 + 1;
        if (v88 >= v89) {
          return 0LL;
        }
        int v90 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v107[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v90);
        int v92 = *((_DWORD *)this + 14);
        BOOL v42 = __OFSUB__(v92, 1);
        int v93 = v92 - 1;
        if (v93 < 0 == v42) {
          *((_DWORD *)this + 14) = v93;
        }
        int v94 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        int v28 = v94 + 2;
        *((void *)this + 1) = v28;
LABEL_205:
        if ((unint64_t)v28 >= v27 || (char)*v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result) {
            return result;
          }
          int v95 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v27 = *((void *)this + 2);
        }

        else
        {
          *uint64_t v8 = *v28;
          int v95 = v28 + 1;
          *((void *)this + 1) = v95;
        }

        *(_DWORD *)(a1 + 148) |= 0x10000u;
        int v29 = v95 + 2;
        *((void *)this + 1) = v29;
LABEL_214:
        if ((unint64_t)v29 >= v27 || (char)*v29 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v106);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v96 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v27 = *((void *)this + 2);
        }

        else
        {
          *uint64_t v106 = *v29;
          unsigned int v96 = v29 + 1;
          *((void *)this + 1) = v96;
        }

        *(_DWORD *)(a1 + 148) |= 0x20000u;
        int v30 = v96 + 2;
        *((void *)this + 1) = v30;
LABEL_223:
        if ((unint64_t)v30 >= v27 || (char)*v30 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v105);
          if (!(_DWORD)result) {
            return result;
          }
          int v97 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v27 = *((void *)this + 2);
        }

        else
        {
          *uint64_t v105 = *v30;
          int v97 = v30 + 1;
          *((void *)this + 1) = v97;
        }

        *(_DWORD *)(a1 + 148) |= 0x40000u;
        int v31 = v97 + 2;
        *((void *)this + 1) = v31;
LABEL_232:
        if ((unint64_t)v31 >= v27 || (char)*v31 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v104);
          if (!(_DWORD)result) {
            return result;
          }
          int v98 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v27 = *((void *)this + 2);
        }

        else
        {
          *uint64_t v104 = *v31;
          int v98 = v31 + 1;
          *((void *)this + 1) = v98;
        }

        *(_DWORD *)(a1 + 148) |= 0x80000u;
        int v32 = v98 + 2;
        *((void *)this + 1) = v32;
LABEL_241:
        if ((unint64_t)v32 >= v27 || (char)*v32 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v103);
          if (!(_DWORD)result) {
            return result;
          }
          uint64_t v99 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v27 = *((void *)this + 2);
        }

        else
        {
          *unsigned int v103 = *v32;
          uint64_t v99 = v32 + 1;
          *((void *)this + 1) = v99;
        }

        *(_DWORD *)(a1 + 148) |= 0x100000u;
        unsigned int v33 = v99 + 2;
        *((void *)this + 1) = v33;
LABEL_250:
        if ((unint64_t)v33 >= v27 || (char)*v33 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!(_DWORD)result) {
            return result;
          }
          uint64_t v100 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v27 = *((void *)this + 2);
        }

        else
        {
          *char v9 = *v33;
          uint64_t v100 = v33 + 1;
          *((void *)this + 1) = v100;
        }

        *(_DWORD *)(a1 + 148) |= 0x200000u;
        unsigned int v34 = (char *)(v100 + 2);
        *((void *)this + 1) = v34;
LABEL_259:
        if ((unint64_t)v34 >= v27 || *v34 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v107);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v101 = v107[0];
        }

        else
        {
          unsigned int v101 = *v34;
          *((void *)this + 1) = v34 + 1;
        }

        if (v101 <= 5)
        {
          *(_DWORD *)(a1 + 148) |= 0x400000u;
          *(_DWORD *)(a1 + 132) = v101;
        }

        uint64_t v102 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v102 + 2;
LABEL_60:
        *(_DWORD *)(a1 + 148) |= 0x800000u;
        unsigned int v35 = *(void **)(a1 + 136);
        if (!v35)
        {
          unsigned int v35 = operator new(0x18uLL);
          v35[1] = 0LL;
          unsigned int v35[2] = 0LL;
          void *v35 = off_101829458;
          *(void *)(a1 + 136) = v35;
        }

        char v36 = (char *)*((void *)this + 1);
        if ((unint64_t)v36 >= *((void *)this + 2) || *v36 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v107)) {
            return 0LL;
          }
        }

        else
        {
          v107[0] = *v36;
          *((void *)this + 1) = v36 + 1;
        }

        int v37 = *((_DWORD *)this + 14);
        int v38 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v37 + 1;
        if (v37 < v38)
        {
          int v39 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v107[0]);
          if (sub_1001F2210((uint64_t)v35, this, v40))
          {
            if (*((_BYTE *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v39);
              int v41 = *((_DWORD *)this + 14);
              BOOL v42 = __OFSUB__(v41, 1);
              int v43 = v41 - 1;
              if (v43 < 0 == v42) {
                *((_DWORD *)this + 14) = v43;
              }
              if (*((void *)this + 1) == *((void *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1LL;
                *((_BYTE *)this + 36) = 1;
                return result;
              }

              continue;
            }
          }
        }

        return 0LL;
      case 3u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_101;
        }
        goto LABEL_65;
      case 4u:
        int v12 = TagFallback & 7;
        int v16 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_115;
      case 5u:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_123;
        }
        goto LABEL_65;
      case 6u:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_127;
        }
        goto LABEL_65;
      case 7u:
        int v12 = TagFallback & 7;
        uint64_t v18 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_131;
      case 8u:
        int v12 = TagFallback & 7;
        uint64_t v19 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_139;
      case 9u:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_147;
        }
        goto LABEL_65;
      case 0xAu:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_151;
        }
        goto LABEL_65;
      case 0xBu:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_155;
        }
        goto LABEL_65;
      case 0xCu:
        int v12 = TagFallback & 7;
        unsigned int v21 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_159;
      case 0xDu:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_65;
        }
        int v22 = *(_DWORD *)(a1 + 148);
        goto LABEL_167;
      case 0xEu:
        int v12 = TagFallback & 7;
        char v24 = (char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        goto LABEL_173;
      case 0xFu:
        int v12 = TagFallback & 7;
        unsigned int v25 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        goto LABEL_181;
      case 0x10u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_65;
        }
        int v26 = *(_DWORD *)(a1 + 148);
        goto LABEL_190;
      case 0x11u:
        int v12 = TagFallback & 7;
        int v28 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        goto LABEL_205;
      case 0x12u:
        int v12 = TagFallback & 7;
        int v29 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        goto LABEL_214;
      case 0x13u:
        int v12 = TagFallback & 7;
        int v30 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        goto LABEL_223;
      case 0x14u:
        int v12 = TagFallback & 7;
        int v31 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        goto LABEL_232;
      case 0x15u:
        int v12 = TagFallback & 7;
        int v32 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        goto LABEL_241;
      case 0x16u:
        int v12 = TagFallback & 7;
        unsigned int v33 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        goto LABEL_250;
      case 0x17u:
        int v12 = TagFallback & 7;
        unsigned int v34 = (char *)*((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        goto LABEL_259;
      case 0x18u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_60;
        }
        goto LABEL_65;
      default:
        int v12 = TagFallback & 7;
LABEL_65:
        if (v12 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001F3EF4( uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 148);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0CF0 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 148);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_32;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_1019A0CF0 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v8,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_35;
  }

uint64_t sub_1001F4208(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 148);
  if (!(_BYTE)v3)
  {
    uint64_t v5 = 0LL;
    goto LABEL_55;
  }

  if ((v3 & 1) == 0)
  {
    int v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_15;
  }

  uint64_t v6 = *(void *)(a1 + 8);
  if (!v6) {
    uint64_t v6 = *(void *)(qword_1019A0CF0 + 8);
  }
  int v7 = *(unsigned __int8 *)(v6 + 36);
  if (*(_BYTE *)(v6 + 36))
  {
    int v8 = (v7 << 31 >> 31) & 9;
    if ((v7 & 2) != 0) {
      v8 += 9;
    }
    if ((v7 & 4) != 0) {
      int v7 = v8 + 9;
    }
    else {
      int v7 = v8;
    }
  }

  *(_DWORD *)(v6 + 32) = v7;
  int v4 = v7 + 2;
  int v3 = *(_DWORD *)(a1 + 148);
  if ((v3 & 2) != 0)
  {
LABEL_15:
    uint64_t v9 = *(void *)(a1 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_1019A0CF0 + 16);
    }
    int v10 = *(unsigned __int8 *)(v9 + 36);
    if (*(_BYTE *)(v9 + 36))
    {
      int v11 = (v10 << 31 >> 31) & 9;
      if ((v10 & 2) != 0) {
        v11 += 9;
      }
      if ((v10 & 4) != 0) {
        int v10 = v11 + 9;
      }
      else {
        int v10 = v11;
      }
    }

    *(_DWORD *)(v9 + 32) = v10;
    v4 += v10 + 2;
    int v3 = *(_DWORD *)(a1 + 148);
  }

void sub_1001F469C(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1001F46E8()
{
  return 1LL;
}

void *sub_1001F46F0@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.StepCountEntry");
}

void sub_1001F4700(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v12,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  21713LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v12,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    {
      *(_DWORD *)(a1 + 32) |= 1u;
      uint64_t v6 = *(char **)(a1 + 8);
      if (!v6)
      {
        uint64_t v6 = (char *)operator new(0x28uLL);
        *(void *)uint64_t v6 = off_101827B80;
        *(_OWORD *)(v6 + 8) = 0u;
        *(_OWORD *)(v6 + 24) = 0u;
        *(void *)(a1 + 8) = v6;
      }

      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_1019A0CF8 + 8);
      }
      sub_1001D323C((uint64_t)v6, v7);
      int v5 = *(_DWORD *)(a2 + 32);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return;
        }
        goto LABEL_14;
      }
    }

    else if ((*(_BYTE *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }

    int v8 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(_DWORD *)(a1 + 24) = v8;
    if ((*(_DWORD *)(a2 + 32) & 4) == 0) {
      return;
    }
LABEL_14:
    *(_DWORD *)(a1 + 32) |= 4u;
    uint64_t v9 = *(char **)(a1 + 16);
    if (!v9)
    {
      uint64_t v9 = (char *)operator new(0x98uLL);
      *(void *)uint64_t v9 = off_1018294D0;
      *(_OWORD *)(v9 + 8) = 0u;
      *(_OWORD *)(v9 + 24) = 0u;
      *(_OWORD *)(v9 + 40) = 0u;
      *(_OWORD *)(v9 + 56) = 0u;
      *(_OWORD *)(v9 + 72) = 0u;
      *((void *)v9 + 11) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
      *((_WORD *)v9 + 48) = 0;
      *((void *)v9 + 18) = 0LL;
      *(_OWORD *)(v9 + 100) = 0u;
      *(_OWORD *)(v9 + 116) = 0u;
      *((_OWORD *)v9 + 8) = 0u;
      *(void *)(a1 + 16) = v9;
    }

    uint64_t v10 = *(void *)(a2 + 16);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_1019A0CF8 + 16);
    }
    sub_1001F28A4((uint64_t)v9, v10);
  }

void sub_1001F4874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void *sub_1001F488C(void *result)
{
  if ((void *)qword_1019A0CF8 != result)
  {
    int v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    uint64_t result = (void *)v1[2];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_1001F48E8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101829548;
  sub_1001F488C(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001F4918(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101829548;
  sub_1001F488C(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v2);
}

uint64_t sub_1001F494C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0CF8;
  if (!qword_1019A0CF8)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0CF8;
  }

  return result;
}

void *sub_1001F4978()
{
  uint64_t result = operator new(0x28uLL);
  *uint64_t result = off_101829548;
  result[1] = 0LL;
  result[2] = 0LL;
  result[3] = 0LL;
  *((_DWORD *)result + 8) = 0;
  return result;
}

uint64_t sub_1001F49A4(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(_BYTE *)(result + 32);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(result + 32) & 1) != 0)
    {
      uint64_t v3 = *(void *)(result + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0LL;
          *(void *)(v3 + 16) = 0LL;
          *(void *)(v3 + 24) = 0LL;
        }

        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(result + 32);
      }
    }

    *(_DWORD *)(result + 24) = 0;
    if ((v2 & 4) != 0)
    {
      uint64_t result = *(void *)(result + 16);
      if (result) {
        uint64_t result = sub_1001F2F2C(result);
      }
    }
  }

  *(_DWORD *)(v1 + 32) = 0;
  return result;
}

uint64_t sub_1001F4A04( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    do
    {
      while (1)
      {
        while (1)
        {
          int v5 = (char *)*((void *)this + 1);
          if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
          {
            TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = (_DWORD)TagFallback;
            if (!(_DWORD)TagFallback) {
              return 1LL;
            }
          }

          else
          {
            TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
            *((_DWORD *)this + 8) = (_DWORD)TagFallback;
            *((void *)this + 1) = v5 + 1;
            if (!(_DWORD)TagFallback) {
              return 1LL;
            }
          }

          unsigned int v7 = TagFallback >> 3;
          int v8 = TagFallback & 7;
          if (v8 != 2) {
            goto LABEL_20;
          }
          *(_DWORD *)(a1 + 32) |= 1u;
          uint64_t v10 = *(char **)(a1 + 8);
          if (!v10)
          {
            uint64_t v10 = (char *)operator new(0x28uLL);
            *(void *)uint64_t v10 = off_101827B80;
            *(_OWORD *)(v10 + 8) = 0u;
            *(_OWORD *)(v10 + 24) = 0u;
            *(void *)(a1 + 8) = v10;
          }

          char v11 = (char *)*((void *)this + 1);
          if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v34)) {
              return 0LL;
            }
          }

          else
          {
            unsigned int v34 = *v11;
            *((void *)this + 1) = v11 + 1;
          }

          int v14 = *((_DWORD *)this + 14);
          int v15 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v14 + 1;
          if (v14 >= v15) {
            return 0LL;
          }
          int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34);
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
          int v18 = *((_DWORD *)this + 14);
          BOOL v19 = __OFSUB__(v18, 1);
          int v20 = v18 - 1;
          if (v20 < 0 == v19) {
            *((_DWORD *)this + 14) = v20;
          }
          int v21 = (_BYTE *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          if ((unint64_t)v21 < v12 && *v21 == 16)
          {
            int v13 = v21 + 1;
            *((void *)this + 1) = v13;
            goto LABEL_32;
          }
        }

        if (v7 == 2) {
          break;
        }
        if (v7 == 3)
        {
          int v8 = TagFallback & 7;
          if (v8 == 2)
          {
            int v9 = *(_DWORD *)(a1 + 32);
            goto LABEL_40;
          }
        }

        else
        {
          int v8 = TagFallback & 7;
        }

uint64_t sub_1001F4D70( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_8:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(_DWORD *)(v5 + 24),  (int)a2,  a4);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0) {
      return result;
    }
    goto LABEL_9;
  }

  uint64_t v7 = *(void *)(result + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_1019A0CF8 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_9:
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_1019A0CF8 + 16);
  }
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  v8,  a2,  a4);
}

uint64_t sub_1001F4E08(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 32);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0LL;
    goto LABEL_28;
  }

  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
  {
    uint64_t v5 = *(void *)(a1 + 8);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_1019A0CF8 + 8);
    }
    int v6 = *(unsigned __int8 *)(v5 + 36);
    if (*(_BYTE *)(v5 + 36))
    {
      int v7 = (v6 << 31 >> 31) & 9;
      if ((v6 & 2) != 0) {
        v7 += 9;
      }
      if ((v6 & 4) != 0) {
        int v6 = v7 + 9;
      }
      else {
        int v6 = v7;
      }
    }

    *(_DWORD *)(v5 + 32) = v6;
    uint64_t v4 = (v6 + 2);
    int v3 = *(_DWORD *)(a1 + 32);
    if ((v3 & 2) == 0) {
      goto LABEL_21;
    }
  }

  else
  {
    uint64_t v4 = 0LL;
    if ((*(_BYTE *)(a1 + 32) & 2) == 0) {
      goto LABEL_21;
    }
  }

  uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if ((v8 & 0x80000000) != 0)
  {
    int v9 = 11;
  }

  else if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 32);
  }

  else
  {
    int v9 = 2;
  }

  uint64_t v4 = (v9 + v4);
LABEL_21:
  if ((v3 & 4) != 0)
  {
    uint64_t v10 = *(void *)(a1 + 16);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_1019A0CF8 + 16);
    }
    char v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001F4208(v10, a2);
    int v13 = (int)v11;
    else {
      int v14 = 1;
    }
    uint64_t v4 = (v4 + v13 + v14 + 1);
  }

void sub_1001F4F18(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1001F4F64()
{
  return 1LL;
}

void *sub_1001F4F6C@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.StepCount");
}

float sub_1001F4F7C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v8,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  21944LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v8,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v7, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 24);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      float result = *(float *)(a2 + 8);
      *(_DWORD *)(a1 + 24) |= 1u;
      *(float *)(a1 + 8) = result;
      int v6 = *(_DWORD *)(a2 + 24);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }

    else if ((*(_BYTE *)(a2 + 24) & 2) == 0)
    {
      goto LABEL_6;
    }

    float result = *(float *)(a2 + 12);
    *(_DWORD *)(a1 + 24) |= 2u;
    *(float *)(a1 + 12) = result;
    if ((*(_DWORD *)(a2 + 24) & 4) == 0) {
      return result;
    }
LABEL_7:
    float result = *(float *)(a2 + 16);
    *(_DWORD *)(a1 + 24) |= 4u;
    *(float *)(a1 + 16) = result;
  }

  return result;
}

void sub_1001F504C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001F5064(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018295C0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001F5074(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018295C0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

void *sub_1001F5094()
{
  float result = operator new(0x20uLL);
  result[1] = 0LL;
  result[2] = 0LL;
  *float result = off_1018295C0;
  *((_DWORD *)result + 6) = 0;
  return result;
}

uint64_t sub_1001F50C0(uint64_t result)
{
  if (*(_BYTE *)(result + 24))
  {
    *(void *)(result + 8) = 0LL;
    *(_DWORD *)(result + 16) = 0;
  }

  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1001F50D8( _DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        unsigned int v7 = TagFallback >> 3;
        int v8 = TagFallback & 7;
        if (v8 != 5) {
          goto LABEL_27;
        }
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v14) & 1) == 0) {
          return 0LL;
        }
        a1[2] = v14;
        a1[6] |= 1u;
        int v9 = (_BYTE *)*((void *)this + 1);
        if ((unint64_t)v9 < *((void *)this + 2) && *v9 == 21)
        {
          *((void *)this + 1) = v9 + 1;
LABEL_17:
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v13) & 1) == 0) {
            return 0LL;
          }
          a1[3] = v13;
          a1[6] |= 2u;
          uint64_t v10 = (_BYTE *)*((void *)this + 1);
          if ((unint64_t)v10 < *((void *)this + 2) && *v10 == 29)
          {
            *((void *)this + 1) = v10 + 1;
            goto LABEL_21;
          }
        }
      }

      if (v7 == 2)
      {
        int v8 = TagFallback & 7;
        if (v8 != 5) {
          goto LABEL_27;
        }
        goto LABEL_17;
      }

      if (v7 != 3)
      {
        int v8 = TagFallback & 7;
        goto LABEL_27;
      }

      int v8 = TagFallback & 7;
      if (v8 == 5) {
        break;
      }
LABEL_27:
      if (v8 == 4) {
        return 1LL;
      }
    }

uint64_t sub_1001F5290( uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 24);
  if ((v5 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  a2,  *(float *)(result + 8),  a3);
    int v5 = *(_DWORD *)(v4 + 24);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        return result;
      }
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  a2,  *(float *)(v4 + 16),  a3);
    }
  }

  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  a2,  *(float *)(v4 + 12),  a3);
  if ((*(_DWORD *)(v4 + 24) & 4) != 0) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  a2,  *(float *)(v4 + 16),  a3);
  }
  return result;
}

uint64_t sub_1001F5308(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 24);
  if (*(_BYTE *)(a1 + 24))
  {
    unsigned int v2 = ((int)((_DWORD)v1 << 31) >> 31) & 5;
    if ((v1 & 2) != 0) {
      v2 += 5;
    }
    if ((v1 & 4) != 0) {
      uint64_t v1 = v2 + 5;
    }
    else {
      uint64_t v1 = v2;
    }
  }

  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

float sub_1001F5340(uint64_t a1, void *lpsrc)
{
  return sub_1001F4F7C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001F538C()
{
  return 1LL;
}

void *sub_1001F5394@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.MotionTypeVector3");
}

double sub_1001F53A4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v8,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  22204LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v8,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v7, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 44);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 44) & 1) != 0)
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 44) |= 1u;
      *(double *)(a1 + 8) = result;
      int v6 = *(_DWORD *)(a2 + 44);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }

    else if ((*(_BYTE *)(a2 + 44) & 2) == 0)
    {
      goto LABEL_6;
    }

    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 44) |= 2u;
    *(double *)(a1 + 16) = result;
    int v6 = *(_DWORD *)(a2 + 44);
    if ((v6 & 4) == 0)
    {
LABEL_7:
      if ((v6 & 8) == 0) {
        return result;
      }
      goto LABEL_8;
    }

void sub_1001F5494(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001F54AC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101829638;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001F54BC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101829638;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

double sub_1001F54DC()
{
  unsigned __int8 v0 = (char *)operator new(0x30uLL);
  *(void *)unsigned __int8 v0 = off_101829638;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *((void *)v0 + 5) = 0LL;
  return result;
}

uint64_t sub_1001F5510(uint64_t result)
{
  if (*(_BYTE *)(result + 44))
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }

  *(_DWORD *)(result + 44) = 0;
  return result;
}

uint64_t sub_1001F552C( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_29;
        }
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 8) = v12;
        *(_DWORD *)(a1 + 44) |= 1u;
        int v8 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v8 + 1;
        goto LABEL_14;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_29;
        }
LABEL_14:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = v12;
        *(_DWORD *)(a1 + 44) |= 2u;
        int v9 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v9 + 1;
LABEL_19:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 24) = v12;
        *(_DWORD *)(a1 + 44) |= 4u;
        uint64_t v10 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v10 + 1;
LABEL_24:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 32) = v12;
        *(_DWORD *)(a1 + 44) |= 8u;
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }

        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_19;
        }
        goto LABEL_29;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_24;
        }
        goto LABEL_29;
      default:
        int v7 = TagFallback & 7;
LABEL_29:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }

    return result;
  }

uint64_t sub_1001F5750( uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 44);
  if ((v5 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  a2,  *(double *)(result + 8),  a3);
    int v5 = *(_DWORD *)(v4 + 44);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }

  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  a2,  *(double *)(v4 + 16),  a3);
  int v5 = *(_DWORD *)(v4 + 44);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      return result;
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  a2,  *(double *)(v4 + 32),  a3);
  }

uint64_t sub_1001F57E4(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 44);
  if (*(_BYTE *)(a1 + 44))
  {
    unsigned int v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      v2 += 9;
    }
    if ((v1 & 8) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }

  *(_DWORD *)(a1 + 40) = v1;
  return v1;
}

double sub_1001F5828(uint64_t a1, void *lpsrc)
{
  return sub_1001F53A4(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001F5874()
{
  return 1LL;
}

void *sub_1001F587C@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.MotionTypeDoubleVector4");
}

double sub_1001F588C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v16,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  22710LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v16,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v15, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }

  int v6 = *(_DWORD *)(a2 + 68);
  if ((_BYTE)v6)
  {
    if ((v6 & 1) != 0)
    {
      *(_DWORD *)(a1 + 68) |= 1u;
      int v8 = *(void **)(a1 + 8);
      if (!v8)
      {
        int v8 = operator new(0x20uLL);
        v8[1] = 0LL;
        v8[2] = 0LL;
        *int v8 = off_1018295C0;
        *((_DWORD *)v8 + 6) = 0;
        *(void *)(a1 + 8) = v8;
      }

      uint64_t v9 = *(void *)(a2 + 8);
      if (!v9) {
        uint64_t v9 = *(void *)(qword_1019A0D10 + 8);
      }
      *(float *)&double result = sub_1001F4F7C((uint64_t)v8, v9);
      int v6 = *(_DWORD *)(a2 + 68);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_29;
      }
    }

    else if ((v6 & 2) == 0)
    {
      goto LABEL_6;
    }

    *(_DWORD *)(a1 + 68) |= 2u;
    uint64_t v10 = *(void **)(a1 + 16);
    if (!v10)
    {
      uint64_t v10 = operator new(0x20uLL);
      v10[1] = 0LL;
      v10[2] = 0LL;
      *uint64_t v10 = off_1018295C0;
      *((_DWORD *)v10 + 6) = 0;
      *(void *)(a1 + 16) = v10;
    }

    uint64_t v11 = *(void *)(a2 + 16);
    if (!v11) {
      uint64_t v11 = *(void *)(qword_1019A0D10 + 16);
    }
    *(float *)&double result = sub_1001F4F7C((uint64_t)v10, v11);
    int v6 = *(_DWORD *)(a2 + 68);
    if ((v6 & 4) == 0)
    {
LABEL_7:
      if ((v6 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_30;
    }

void sub_1001F5B24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void *sub_1001F5B3C(void *result)
{
  if ((void *)qword_1019A0D10 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
    }
    double result = (void *)v1[7];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_1001F5BAC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018296B0;
  sub_1001F5B3C(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001F5BDC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018296B0;
  sub_1001F5B3C(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v2);
}

void *sub_1001F5C10()
{
  double result = operator new(0x48uLL);
  *double result = off_1018296B0;
  result[1] = 0LL;
  result[2] = 0LL;
  result[3] = 0LL;
  result[4] = 0xFFFFFFFF00000000LL;
  *((_BYTE *)result + 40) = 0;
  result[8] = 0LL;
  *(void *)((char *)result + 52) = 0LL;
  *(void *)((char *)result + 44) = 0LL;
  *((_DWORD *)result + 15) = 0;
  return result;
}

uint64_t sub_1001F5C54(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 68);
  if ((_BYTE)v1)
  {
    if ((v1 & 1) != 0)
    {
      uint64_t v2 = *(void *)(result + 8);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 24))
        {
          *(void *)(v2 + 8) = 0LL;
          *(_DWORD *)(v2 + 16) = 0;
        }

        *(_DWORD *)(v2 + 24) = 0;
        int v1 = *(_DWORD *)(result + 68);
      }
    }

    if ((v1 & 2) != 0)
    {
      uint64_t v3 = *(void *)(result + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 24))
        {
          *(void *)(v3 + 8) = 0LL;
          *(_DWORD *)(v3 + 16) = 0;
        }

        *(_DWORD *)(v3 + 24) = 0;
        int v1 = *(_DWORD *)(result + 68);
      }
    }

    *(void *)(result + 24) = 0LL;
    *(void *)(result + 32) = 0xFFFFFFFF00000000LL;
    *(_BYTE *)(result + 40) = 0;
    *(_DWORD *)(result + 44) = 0;
  }

  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(result + 48) = 0LL;
    if ((v1 & 0x400) != 0)
    {
      uint64_t v4 = *(void *)(result + 56);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 44))
        {
          *(_OWORD *)(v4 + 24) = 0u;
          *(_OWORD *)(v4 + 8) = 0u;
        }

        *(_DWORD *)(v4 + 44) = 0;
      }
    }
  }

  *(_DWORD *)(result + 68) = 0;
  return result;
}

uint64_t sub_1001F5CF0( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_34;
        }
        *(_DWORD *)(a1 + 68) |= 1u;
        int v8 = *(void **)(a1 + 8);
        if (!v8)
        {
          int v8 = operator new(0x20uLL);
          v8[1] = 0LL;
          v8[2] = 0LL;
          *int v8 = off_1018295C0;
          *((_DWORD *)v8 + 6) = 0;
          *(void *)(a1 + 8) = v8;
        }

        uint64_t v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v51)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v51 = *v9;
          *((void *)this + 1) = v9 + 1;
        }

        int v15 = *((_DWORD *)this + 14);
        int v16 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v15 + 1;
        if (v15 >= v16) {
          return 0LL;
        }
        int v17 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v51);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v17);
        int v19 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v19, 1);
        int v21 = v19 - 1;
        if (v21 < 0 == v20) {
          *((_DWORD *)this + 14) = v21;
        }
        unsigned int v22 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v22 + 1;
        goto LABEL_46;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_34;
        }
LABEL_46:
        *(_DWORD *)(a1 + 68) |= 2u;
        unsigned int v23 = *(void **)(a1 + 16);
        if (!v23)
        {
          unsigned int v23 = operator new(0x20uLL);
          v23[1] = 0LL;
          unsigned int v23[2] = 0LL;
          *unsigned int v23 = off_1018295C0;
          *((_DWORD *)v23 + 6) = 0;
          *(void *)(a1 + 16) = v23;
        }

        char v24 = (char *)*((void *)this + 1);
        if ((unint64_t)v24 >= *((void *)this + 2) || *v24 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v51)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v51 = *v24;
          *((void *)this + 1) = v24 + 1;
        }

        int v25 = *((_DWORD *)this + 14);
        int v26 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v25 + 1;
        if (v25 >= v26) {
          return 0LL;
        }
        int v27 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v51);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v27);
        int v29 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v29, 1);
        int v30 = v29 - 1;
        if (v30 < 0 == v20) {
          *((_DWORD *)this + 14) = v30;
        }
        int v31 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v31 + 1;
LABEL_60:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v51) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 24) = v51;
        *(_DWORD *)(a1 + 68) |= 4u;
        int v32 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v32 + 1;
LABEL_64:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v51) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 28) = v51;
        *(_DWORD *)(a1 + 68) |= 8u;
        unsigned int v33 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v33 + 1;
LABEL_68:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v51) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 32) = v51;
        *(_DWORD *)(a1 + 68) |= 0x10u;
        unsigned int v34 = (_BYTE *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        uint64_t v11 = v34 + 1;
        *((void *)this + 1) = v11;
LABEL_72:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v51);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v35 = v51;
        }

        else
        {
          unsigned int v35 = *v11;
          *((void *)this + 1) = v11 + 1;
        }

        if (v35 + 1 <= 7)
        {
          *(_DWORD *)(a1 + 68) |= 0x20u;
          *(_DWORD *)(a1 + 36) = v35;
        }

        int v37 = (_BYTE *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        unsigned int v13 = v37 + 1;
        *((void *)this + 1) = v13;
LABEL_82:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v51);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v38 = v51;
          int v39 = (_BYTE *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }

        else
        {
          unsigned int v38 = *v13;
          int v39 = v13 + 1;
          *((void *)this + 1) = v39;
        }

        *(_BYTE *)(a1 + 40) = v38 != 0;
        *(_DWORD *)(a1 + 68) |= 0x40u;
        *((void *)this + 1) = v39 + 1;
LABEL_90:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v51) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 44) = v51;
        *(_DWORD *)(a1 + 68) |= 0x80u;
        int v40 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v40 + 1;
LABEL_94:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v51) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 48) = v51;
        *(_DWORD *)(a1 + 68) |= 0x100u;
        int v41 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v41 + 1;
LABEL_98:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v51) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 52) = v51;
        int v14 = *(_DWORD *)(a1 + 68) | 0x200;
        *(_DWORD *)(a1 + 68) = v14;
        int v42 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v42 + 1;
LABEL_102:
        *(_DWORD *)(a1 + 68) = v14 | 0x400;
        int v43 = *(char **)(a1 + 56);
        if (!v43)
        {
          int v43 = (char *)operator new(0x30uLL);
          *(void *)int v43 = off_101829638;
          *(_OWORD *)(v43 + 8) = 0u;
          *(_OWORD *)(v43 + 24) = 0u;
          *((void *)v43 + 5) = 0LL;
          *(void *)(a1 + 56) = v43;
        }

        int v44 = (char *)*((void *)this + 1);
        if ((unint64_t)v44 >= *((void *)this + 2) || *v44 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v51)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v51 = *v44;
          *((void *)this + 1) = v44 + 1;
        }

        int v45 = *((_DWORD *)this + 14);
        int v46 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v45 + 1;
        if (v45 < v46)
        {
          int v47 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v51);
          if (sub_1001F552C((uint64_t)v43, this, v48))
          {
            if (*((_BYTE *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v47);
              int v49 = *((_DWORD *)this + 14);
              BOOL v20 = __OFSUB__(v49, 1);
              int v50 = v49 - 1;
              if (v50 < 0 == v20) {
                *((_DWORD *)this + 14) = v50;
              }
              if (*((void *)this + 1) == *((void *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1LL;
                *((_BYTE *)this + 36) = 1;
                return result;
              }

              continue;
            }
          }
        }

        return 0LL;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_60;
        }
        goto LABEL_34;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_64;
        }
        goto LABEL_34;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_68;
        }
        goto LABEL_34;
      case 6u:
        int v7 = TagFallback & 7;
        uint64_t v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_72;
      case 7u:
        int v7 = TagFallback & 7;
        unsigned int v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_82;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_90;
        }
        goto LABEL_34;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_94;
        }
        goto LABEL_34;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_98;
        }
        goto LABEL_34;
      case 0xBu:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_34;
        }
        int v14 = *(_DWORD *)(a1 + 68);
        goto LABEL_102;
      default:
        int v7 = TagFallback & 7;
LABEL_34:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001F63B0( uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 68);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0D10 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 68);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_1019A0D10 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v8,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }

uint64_t sub_1001F6538(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 68);
  if (!(_BYTE)v3)
  {
    uint64_t v5 = 0LL;
    goto LABEL_43;
  }

  if ((v3 & 1) != 0)
  {
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1019A0D10 + 8);
    }
    int v7 = *(unsigned __int8 *)(v6 + 24);
    if (*(_BYTE *)(v6 + 24))
    {
      int v8 = (v7 << 31 >> 31) & 5;
      if ((v7 & 2) != 0) {
        v8 += 5;
      }
      if ((v7 & 4) != 0) {
        int v7 = v8 + 5;
      }
      else {
        int v7 = v8;
      }
    }

    *(_DWORD *)(v6 + 20) = v7;
    int v4 = v7 + 2;
    int v3 = *(_DWORD *)(a1 + 68);
    if ((v3 & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_15;
  }

  int v4 = 0;
  if ((v3 & 2) != 0)
  {
LABEL_15:
    uint64_t v9 = *(void *)(a1 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_1019A0D10 + 16);
    }
    int v10 = *(unsigned __int8 *)(v9 + 24);
    if (*(_BYTE *)(v9 + 24))
    {
      int v11 = (v10 << 31 >> 31) & 5;
      if ((v10 & 2) != 0) {
        v11 += 5;
      }
      if ((v10 & 4) != 0) {
        int v10 = v11 + 5;
      }
      else {
        int v10 = v11;
      }
    }

    *(_DWORD *)(v9 + 20) = v10;
    v4 += v10 + 2;
    int v3 = *(_DWORD *)(a1 + 68);
  }

double sub_1001F66FC(uint64_t a1, void *lpsrc)
{
  return sub_1001F588C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001F6748()
{
  return 1LL;
}

void *sub_1001F6750@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.MotionTypeCompass");
}

float sub_1001F6760(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v14,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  23053LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v14,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v13, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 40);
  if (!(_BYTE)v6) {
    return *(float *)&v5;
  }
  if ((*(_BYTE *)(a2 + 40) & 1) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 1u;
    int v8 = *(char **)(a1 + 8);
    if (!v8)
    {
      int v8 = (char *)operator new(0x28uLL);
      *(void *)int v8 = off_101827B80;
      *(_OWORD *)(v8 + 8) = 0u;
      *(_OWORD *)(v8 + 24) = 0u;
      *(void *)(a1 + 8) = v8;
    }

    uint64_t v9 = *(void *)(a2 + 8);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_1019A0D18 + 8);
    }
    double v5 = sub_1001D323C((uint64_t)v8, v9);
    int v6 = *(_DWORD *)(a2 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_6:
      if ((v6 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_21;
    }
  }

  else if ((*(_BYTE *)(a2 + 40) & 2) == 0)
  {
    goto LABEL_6;
  }

  *(_DWORD *)(a1 + 40) |= 2u;
  int v10 = *(void **)(a1 + 16);
  if (!v10)
  {
    int v10 = operator new(0x48uLL);
    *int v10 = off_1018296B0;
    v10[1] = 0LL;
    v10[2] = 0LL;
    v10[3] = 0LL;
    v10[4] = 0xFFFFFFFF00000000LL;
    *((_BYTE *)v10 + 40) = 0;
    v10[8] = 0LL;
    *(void *)((char *)v10 + 52) = 0LL;
    *(void *)((char *)v10 + 44) = 0LL;
    *((_DWORD *)v10 + 15) = 0;
    *(void *)(a1 + 16) = v10;
  }

  uint64_t v11 = *(void *)(a2 + 16);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_1019A0D18 + 16);
  }
  double v5 = sub_1001F588C((uint64_t)v10, v11);
  int v6 = *(_DWORD *)(a2 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_7:
    if ((v6 & 8) == 0) {
      goto LABEL_8;
    }
LABEL_22:
    LODWORD(sub_1012279C0(0LL, v4, v5) = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 40) |= 8u;
    *(_DWORD *)(a1 + 28) = LODWORD(v5);
    if ((*(_DWORD *)(a2 + 40) & 0x10) != 0) {
      goto LABEL_9;
    }
    return *(float *)&v5;
  }

void sub_1001F68FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void *sub_1001F6914(void *result)
{
  if ((void *)qword_1019A0D18 != result)
  {
    int v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    uint64_t result = (void *)v1[2];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_1001F6970(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101829728;
  sub_1001F6914(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001F69A0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101829728;
  sub_1001F6914(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v2);
}

uint64_t sub_1001F69D4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0D18;
  if (!qword_1019A0D18)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0D18;
  }

  return result;
}

_DWORD *sub_1001F6A00()
{
  uint64_t result = operator new(0x30uLL);
  result[9] = 0;
  result[10] = 0;
  *(void *)uint64_t result = off_101829728;
  *((void *)result + 1) = 0LL;
  *((void *)result + 2) = 0LL;
  *((void *)result + 3) = 0LL;
  *((_BYTE *)result + 32) = 0;
  return result;
}

uint64_t sub_1001F6A30(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(_BYTE *)(result + 40);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(result + 40) & 1) != 0)
    {
      uint64_t v3 = *(void *)(result + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0LL;
          *(void *)(v3 + 16) = 0LL;
          *(void *)(v3 + 24) = 0LL;
        }

        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(result + 40);
      }
    }

    if ((v2 & 2) != 0)
    {
      uint64_t result = *(void *)(result + 16);
      if (result) {
        uint64_t result = sub_1001F5C54(result);
      }
    }

    *(_BYTE *)(v1 + 32) = 0;
    *(void *)(v1 + 24) = 0LL;
  }

  *(_DWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t sub_1001F6A94( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    double v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_21;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        int v8 = *(char **)(a1 + 8);
        if (!v8)
        {
          int v8 = (char *)operator new(0x28uLL);
          *(void *)int v8 = off_101827B80;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *(void *)(a1 + 8) = v8;
        }

        uint64_t v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v34)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v34 = *v9;
          *((void *)this + 1) = v9 + 1;
        }

        int v12 = *((_DWORD *)this + 14);
        int v13 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v12 + 1;
        if (v12 >= v13) {
          return 0LL;
        }
        int v14 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v14);
        int v16 = *((_DWORD *)this + 14);
        BOOL v17 = __OFSUB__(v16, 1);
        int v18 = v16 - 1;
        if (v18 < 0 == v17) {
          *((_DWORD *)this + 14) = v18;
        }
        unsigned int v19 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v19 + 1;
        goto LABEL_34;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_21;
        }
LABEL_34:
        *(_DWORD *)(a1 + 40) |= 2u;
        int v20 = *(void **)(a1 + 16);
        if (!v20)
        {
          int v20 = operator new(0x48uLL);
          *int v20 = off_1018296B0;
          v20[1] = 0LL;
          v20[2] = 0LL;
          v20[3] = 0LL;
          v20[4] = 0xFFFFFFFF00000000LL;
          *((_BYTE *)v20 + 40) = 0;
          v20[8] = 0LL;
          *(void *)((char *)v20 + 52) = 0LL;
          *(void *)((char *)v20 + 44) = 0LL;
          *((_DWORD *)v20 + 15) = 0;
          *(void *)(a1 + 16) = v20;
        }

        int v21 = (char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v34)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v34 = *v21;
          *((void *)this + 1) = v21 + 1;
        }

        int v22 = *((_DWORD *)this + 14);
        int v23 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v22 + 1;
        if (v22 >= v23) {
          return 0LL;
        }
        int v24 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v24);
        int v26 = *((_DWORD *)this + 14);
        BOOL v17 = __OFSUB__(v26, 1);
        int v27 = v26 - 1;
        if (v27 < 0 == v17) {
          *((_DWORD *)this + 14) = v27;
        }
        unsigned int v28 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v28 + 1;
LABEL_48:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v34) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 24) = v34;
        *(_DWORD *)(a1 + 40) |= 4u;
        int v29 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v29 + 1;
LABEL_52:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v34) & 1) != 0)
        {
          *(_DWORD *)(a1 + 28) = v34;
          *(_DWORD *)(a1 + 40) |= 8u;
          int v30 = (_BYTE *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          if ((unint64_t)v30 < v10 && *v30 == 40)
          {
            uint64_t v11 = v30 + 1;
            *((void *)this + 1) = v11;
LABEL_56:
            if ((unint64_t)v11 >= v10 || *v11 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v34);
              if (!(_DWORD)result) {
                return result;
              }
              unsigned int v31 = v34;
              int v32 = (unsigned __int8 *)*((void *)this + 1);
              unint64_t v10 = *((void *)this + 2);
            }

            else
            {
              unsigned int v31 = *v11;
              int v32 = (unsigned __int8 *)(v11 + 1);
              *((void *)this + 1) = v32;
            }

            *(_BYTE *)(a1 + 32) = v31 != 0;
            *(_DWORD *)(a1 + 40) |= 0x10u;
            if (v32 == (unsigned __int8 *)v10
              && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              uint64_t result = 1LL;
              *((_BYTE *)this + 36) = 1;
              return result;
            }
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_48;
        }
        goto LABEL_21;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_52;
        }
        goto LABEL_21;
      case 5u:
        int v7 = TagFallback & 7;
        uint64_t v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_56;
      default:
        int v7 = TagFallback & 7;
LABEL_21:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001F6EA8( uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 40);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0D18 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_1019A0D18 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v8,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }

uint64_t sub_1001F6F78(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 40);
  if (!(_BYTE)v3)
  {
    uint64_t result = 0LL;
    goto LABEL_28;
  }

  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
  {
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1019A0D18 + 8);
    }
    int v7 = *(unsigned __int8 *)(v6 + 36);
    if (*(_BYTE *)(v6 + 36))
    {
      int v8 = (v7 << 31 >> 31) & 9;
      if ((v7 & 2) != 0) {
        v8 += 9;
      }
      if ((v7 & 4) != 0) {
        int v7 = v8 + 9;
      }
      else {
        int v7 = v8;
      }
    }

    *(_DWORD *)(v6 + 32) = v7;
    int v4 = v7 + 2;
    int v3 = *(_DWORD *)(a1 + 40);
    if ((v3 & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }

  int v4 = 0;
  if ((*(_BYTE *)(a1 + 40) & 2) != 0)
  {
LABEL_15:
    uint64_t v9 = *(void *)(a1 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_1019A0D18 + 16);
    }
    unint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001F6538(v9, a2);
    int v12 = (int)v10;
    else {
      int v13 = 1;
    }
    v4 += v12 + v13 + 1;
    int v3 = *(_DWORD *)(a1 + 40);
  }

float sub_1001F7078(uint64_t a1, void *lpsrc)
{
  return sub_1001F6760(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001F70C4()
{
  return 1LL;
}

void *sub_1001F70CC@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.CompassTypeSample");
}

double sub_1001F70DC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v17,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  23275LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v17,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v16, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16),  *(_DWORD *)(a2 + 24) + *(_DWORD *)(a1 + 24));
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v6 = 0LL;
    do
    {
      uint64_t v7 = *(void *)(*(void *)(a2 + 16) + 8 * v6);
      int v8 = *(_DWORD *)(a1 + 28);
      uint64_t v9 = *(int *)(a1 + 24);
      if ((int)v9 >= v8)
      {
        if (v8 == *(_DWORD *)(a1 + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16),  v8 + 1);
          int v8 = *(_DWORD *)(a1 + 28);
        }

        *(_DWORD *)(a1 + 28) = v8 + 1;
        unsigned int v11 = operator new(0x30uLL);
        v11[9] = 0;
        v11[10] = 0;
        *(void *)unsigned int v11 = off_101829728;
        *((void *)v11 + 1) = 0LL;
        *((void *)v11 + 2) = 0LL;
        *((void *)v11 + 3) = 0LL;
        *((_BYTE *)v11 + 32) = 0;
        uint64_t v12 = *(void *)(a1 + 16);
        uint64_t v13 = *(int *)(a1 + 24);
        *(_DWORD *)(a1 + 24) = v13 + 1;
        *(void *)(v12 + 8 * v13) = v11;
      }

      else
      {
        uint64_t v10 = *(void *)(a1 + 16);
        *(_DWORD *)(a1 + 24) = v9 + 1;
        unsigned int v11 = *(_DWORD **)(v10 + 8 * v9);
      }

      *(float *)&double result = sub_1001F6760((uint64_t)v11, v7);
      ++v6;
    }

    while (v6 < *(int *)(a2 + 24));
  }

  if ((*(_BYTE *)(a2 + 44) & 1) != 0)
  {
    *(_DWORD *)(a1 + 44) |= 1u;
    unsigned int v14 = *(char **)(a1 + 8);
    if (!v14)
    {
      unsigned int v14 = (char *)operator new(0x28uLL);
      *(void *)unsigned int v14 = off_101827B80;
      *(_OWORD *)(v14 + 8) = 0u;
      *(_OWORD *)(v14 + 24) = 0u;
      *(void *)(a1 + 8) = v14;
    }

    uint64_t v15 = *(void *)(a2 + 8);
    if (!v15) {
      uint64_t v15 = *(void *)(qword_1019A0D20 + 8);
    }
    return sub_1001D323C((uint64_t)v14, v15);
  }

  return result;
}

void sub_1001F7274(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001F728C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018297A0;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0D20 != a1)
  {
    uint64_t v2 = *((void *)a1 + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  sub_10008D0EC((uint64_t)a1 + 16);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001F72EC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

uint64_t sub_1001F7300(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0D20;
  if (!qword_1019A0D20)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0D20;
  }

  return result;
}

void *sub_1001F732C()
{
  uint64_t result = operator new(0x30uLL);
  result[5] = 0LL;
  *uint64_t result = off_1018297A0;
  result[1] = 0LL;
  result[2] = 0LL;
  result[3] = 0LL;
  *((_DWORD *)result + 8) = 0;
  return result;
}

uint64_t sub_1001F735C(uint64_t result)
{
  uint64_t v1 = result;
  if ((*(_BYTE *)(result + 44) & 1) != 0)
  {
    uint64_t v2 = *(void *)(result + 8);
    if (v2)
    {
      if (*(_BYTE *)(v2 + 36))
      {
        *(void *)(v2 + 8) = 0LL;
        *(void *)(v2 + 16) = 0LL;
        *(void *)(v2 + 24) = 0LL;
      }

      *(_DWORD *)(v2 + 36) = 0;
    }
  }

  if (*(int *)(result + 24) >= 1)
  {
    uint64_t v3 = 0LL;
    do
    {
      uint64_t v4 = *(void *)(*(void *)(v1 + 16) + 8 * v3);
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 32LL))(v4);
      ++v3;
    }

    while (v3 < *(int *)(v1 + 24));
  }

  *(_DWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 44) = 0;
  return result;
}

uint64_t sub_1001F73D8( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = (char *)*((void *)this + 1);
        if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((void *)this + 1) = v6 + 1;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_18;
        }
        *(_DWORD *)(a1 + 44) |= 1u;
        uint64_t v9 = *(char **)(a1 + 8);
        if (!v9)
        {
          uint64_t v9 = (char *)operator new(0x28uLL);
          *(void *)uint64_t v9 = off_101827B80;
          *(_OWORD *)(v9 + 8) = 0u;
          *(_OWORD *)(v9 + 24) = 0u;
          *(void *)(a1 + 8) = v9;
        }

        uint64_t v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v34)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v34 = *v10;
          *((void *)this + 1) = v10 + 1;
        }

        int v11 = *((_DWORD *)this + 14);
        int v12 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v11 + 1;
        if (v11 >= v12) {
          return 0LL;
        }
        int v13 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v13);
        int v15 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v15, 1);
        int v17 = v15 - 1;
        if (v17 < 0 == v16) {
          *((_DWORD *)this + 14) = v17;
        }
        int v18 = (_BYTE *)*((void *)this + 1);
      }

      int v8 = TagFallback & 7;
      if (v8 != 2) {
        goto LABEL_18;
      }
      while (1)
      {
        int v19 = *(_DWORD *)(a1 + 28);
        uint64_t v20 = *(int *)(a1 + 24);
        if ((int)v20 >= v19)
        {
          if (v19 == *(_DWORD *)(a1 + 32))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v19 + 1);
            int v19 = *(_DWORD *)(a1 + 28);
          }

          *(_DWORD *)(a1 + 28) = v19 + 1;
          int v22 = operator new(0x30uLL);
          v22[9] = 0;
          v22[10] = 0;
          *(void *)int v22 = off_101829728;
          *((void *)v22 + 1) = 0LL;
          *((void *)v22 + 2) = 0LL;
          *((void *)v22 + 3) = 0LL;
          *((_BYTE *)v22 + 32) = 0;
          uint64_t v23 = *(void *)(a1 + 16);
          uint64_t v24 = *(int *)(a1 + 24);
          *(_DWORD *)(a1 + 24) = v24 + 1;
          *(void *)(v23 + 8 * v24) = v22;
        }

        else
        {
          uint64_t v21 = *(void *)(a1 + 16);
          *(_DWORD *)(a1 + 24) = v20 + 1;
          int v22 = *(_DWORD **)(v21 + 8 * v20);
        }

        unsigned int v25 = (char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v35)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v35 = *v25;
          *((void *)this + 1) = v25 + 1;
        }

        int v26 = *((_DWORD *)this + 14);
        int v27 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v26 + 1;
        if (v26 >= v27) {
          return 0LL;
        }
        int v28 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v35);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v28);
        int v30 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v30, 1);
        int v31 = v30 - 1;
        if (v31 < 0 == v16) {
          *((_DWORD *)this + 14) = v31;
        }
        int v18 = (_BYTE *)*((void *)this + 1);
        int v32 = (_BYTE *)*((void *)this + 2);
        if (v18 >= v32 || *v18 != 18) {
          break;
        }
LABEL_29:
        *((void *)this + 1) = v18 + 1;
      }

      if (v18 == v32 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }

    int v8 = TagFallback & 7;
LABEL_18:
    if (v8 == 4) {
      return 1LL;
    }
  }

uint64_t sub_1001F76F8( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if ((*(_BYTE *)(result + 44) & 1) != 0)
  {
    uint64_t v6 = *(void *)(result + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1019A0D20 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v6,  a2,  a4);
  }

  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0LL;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(void *)(*(void *)(v5 + 16) + 8 * v7++),  a2,  a4);
    while (v7 < *(int *)(v5 + 24));
  }

  return result;
}

uint64_t sub_1001F777C(uint64_t a1, unsigned int a2)
{
  if ((*(_BYTE *)(a1 + 44) & 1) != 0)
  {
    uint64_t v4 = *(void *)(a1 + 8);
    if (!v4) {
      uint64_t v4 = *(void *)(qword_1019A0D20 + 8);
    }
    int v5 = *(unsigned __int8 *)(v4 + 36);
    if (*(_BYTE *)(v4 + 36))
    {
      int v6 = (v5 << 31 >> 31) & 9;
      if ((v5 & 2) != 0) {
        v6 += 9;
      }
      if ((v5 & 4) != 0) {
        int v5 = v6 + 9;
      }
      else {
        int v5 = v6;
      }
    }

    *(_DWORD *)(v4 + 32) = v5;
    int v3 = v5 + 2;
  }

  else
  {
    int v3 = 0;
  }

  int v7 = *(_DWORD *)(a1 + 24);
  uint64_t v8 = (v7 + v3);
  if (v7 >= 1)
  {
    uint64_t v9 = 0LL;
    do
    {
      uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001F6F78( *(void *)(*(void *)(a1 + 16) + 8 * v9),  a2);
      int v11 = (int)v10;
      else {
        int v12 = 1;
      }
      uint64_t v8 = (v11 + v8 + v12);
      ++v9;
    }

    while (v9 < *(int *)(a1 + 24));
  }

  *(_DWORD *)(a1 + 40) = v8;
  return v8;
}

double sub_1001F7854(uint64_t a1, void *lpsrc)
{
  return sub_1001F70DC(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001F78A0()
{
  return 1LL;
}

void *sub_1001F78A8@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.Compass");
}

float sub_1001F78B8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v21,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  23723LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v21,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v20, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v21);
  }

  int v6 = *(_DWORD *)(a2 + 56);
  if (!(_BYTE)v6) {
    goto LABEL_13;
  }
  if ((v6 & 1) != 0)
  {
    *(_DWORD *)(a1 + 56) |= 1u;
    uint64_t v8 = *(char **)(a1 + 8);
    if (!v8)
    {
      uint64_t v8 = (char *)operator new(0x30uLL);
      *(void *)uint64_t v8 = off_101829638;
      *(_OWORD *)(v8 + 8) = 0u;
      *(_OWORD *)(v8 + 24) = 0u;
      *((void *)v8 + 5) = 0LL;
      *(void *)(a1 + 8) = v8;
    }

    uint64_t v9 = *(void *)(a2 + 8);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_1019A0D28 + 8);
    }
    double v5 = sub_1001F53A4((uint64_t)v8, v9);
    int v6 = *(_DWORD *)(a2 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_6:
      if ((v6 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_26;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_6;
  }

  *(_DWORD *)(a1 + 56) |= 2u;
  uint64_t v10 = *(void **)(a1 + 16);
  if (!v10)
  {
    uint64_t v10 = operator new(0x20uLL);
    v10[1] = 0LL;
    v10[2] = 0LL;
    *uint64_t v10 = off_1018295C0;
    *((_DWORD *)v10 + 6) = 0;
    *(void *)(a1 + 16) = v10;
  }

  uint64_t v11 = *(void *)(a2 + 16);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_1019A0D28 + 16);
  }
  *(float *)&double v5 = sub_1001F4F7C((uint64_t)v10, v11);
  int v6 = *(_DWORD *)(a2 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_7:
    if ((v6 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_31;
  }

void sub_1001F7B40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void *sub_1001F7B58(void *result)
{
  if ((void *)qword_1019A0D28 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
    }
    uint64_t v4 = v1[3];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
    }
    uint64_t result = (void *)v1[4];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_1001F7BDC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101829818;
  sub_1001F7B58(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001F7C0C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101829818;
  sub_1001F7B58(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v2);
}

double sub_1001F7C40()
{
  unsigned __int8 v0 = (char *)operator new(0x40uLL);
  *(void *)unsigned __int8 v0 = off_101829818;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *((_DWORD *)v0 + 10) = -1;
  *((_WORD *)v0 + 22) = 0;
  v0[46] = 0;
  *((_DWORD *)v0 + 14) = 0;
  *((void *)v0 + 6) = 0LL;
  return result;
}

uint64_t sub_1001F7C88(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 56);
  if ((_BYTE)v1)
  {
    if ((v1 & 1) != 0)
    {
      uint64_t v2 = *(void *)(result + 8);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 44))
        {
          *(_OWORD *)(v2 + 24) = 0u;
          *(_OWORD *)(v2 + 8) = 0u;
        }

        *(_DWORD *)(v2 + 44) = 0;
        int v1 = *(_DWORD *)(result + 56);
      }
    }

    if ((v1 & 2) != 0)
    {
      uint64_t v3 = *(void *)(result + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 24))
        {
          *(void *)(v3 + 8) = 0LL;
          *(_DWORD *)(v3 + 16) = 0;
        }

        *(_DWORD *)(v3 + 24) = 0;
        int v1 = *(_DWORD *)(result + 56);
      }
    }

    if ((v1 & 4) != 0)
    {
      uint64_t v4 = *(void *)(result + 24);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 24))
        {
          *(void *)(v4 + 8) = 0LL;
          *(_DWORD *)(v4 + 16) = 0;
        }

        *(_DWORD *)(v4 + 24) = 0;
        int v1 = *(_DWORD *)(result + 56);
      }
    }

    if ((v1 & 8) != 0)
    {
      uint64_t v5 = *(void *)(result + 32);
      if (v5)
      {
        if (*(_BYTE *)(v5 + 24))
        {
          *(void *)(v5 + 8) = 0LL;
          *(_DWORD *)(v5 + 16) = 0;
        }

        *(_DWORD *)(v5 + 24) = 0;
        int v1 = *(_DWORD *)(result + 56);
      }
    }

    *(_DWORD *)(result + 40) = -1;
    *(_WORD *)(result + 44) = 0;
    *(_BYTE *)(result + 46) = 0;
  }

  if ((v1 & 0xFF00) != 0) {
    *(_DWORD *)(result + 48) = 0;
  }
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_1001F7D4C( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 56) |= 1u;
        uint64_t v8 = *(char **)(a1 + 8);
        if (!v8)
        {
          uint64_t v8 = (char *)operator new(0x30uLL);
          *(void *)uint64_t v8 = off_101829638;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *((void *)v8 + 5) = 0LL;
          *(void *)(a1 + 8) = v8;
        }

        uint64_t v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v60)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v60 = *v9;
          *((void *)this + 1) = v9 + 1;
        }

        int v16 = *((_DWORD *)this + 14);
        int v17 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v16 + 1;
        if (v16 >= v17) {
          return 0LL;
        }
        int v18 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v60);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v18);
        int v20 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v20, 1);
        int v22 = v20 - 1;
        if (v22 < 0 == v21) {
          *((_DWORD *)this + 14) = v22;
        }
        uint64_t v23 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v23 + 1;
        goto LABEL_41;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_29;
        }
LABEL_41:
        *(_DWORD *)(a1 + 56) |= 2u;
        uint64_t v24 = *(void **)(a1 + 16);
        if (!v24)
        {
          uint64_t v24 = operator new(0x20uLL);
          v24[1] = 0LL;
          v24[2] = 0LL;
          *uint64_t v24 = off_1018295C0;
          *((_DWORD *)v24 + 6) = 0;
          *(void *)(a1 + 16) = v24;
        }

        unsigned int v25 = (char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v60)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v60 = *v25;
          *((void *)this + 1) = v25 + 1;
        }

        int v26 = *((_DWORD *)this + 14);
        int v27 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v26 + 1;
        if (v26 >= v27) {
          return 0LL;
        }
        int v28 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v60);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v28);
        int v30 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v30, 1);
        int v31 = v30 - 1;
        if (v31 < 0 == v21) {
          *((_DWORD *)this + 14) = v31;
        }
        int v32 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v32 + 1;
LABEL_55:
        *(_DWORD *)(a1 + 56) |= 4u;
        unsigned int v33 = *(void **)(a1 + 24);
        if (!v33)
        {
          unsigned int v33 = operator new(0x20uLL);
          v33[1] = 0LL;
          v33[2] = 0LL;
          *unsigned int v33 = off_1018295C0;
          *((_DWORD *)v33 + 6) = 0;
          *(void *)(a1 + 24) = v33;
        }

        unsigned int v34 = (char *)*((void *)this + 1);
        if ((unint64_t)v34 >= *((void *)this + 2) || *v34 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v60)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v60 = *v34;
          *((void *)this + 1) = v34 + 1;
        }

        int v35 = *((_DWORD *)this + 14);
        int v36 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v35 + 1;
        if (v35 >= v36) {
          return 0LL;
        }
        int v37 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v60);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v37);
        int v39 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v39, 1);
        int v40 = v39 - 1;
        if (v40 < 0 == v21) {
          *((_DWORD *)this + 14) = v40;
        }
        int v41 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v41 + 1;
LABEL_69:
        *(_DWORD *)(a1 + 56) |= 8u;
        int v42 = *(void **)(a1 + 32);
        if (!v42)
        {
          int v42 = operator new(0x20uLL);
          v42[1] = 0LL;
          unsigned int v42[2] = 0LL;
          *int v42 = off_1018295C0;
          *((_DWORD *)v42 + 6) = 0;
          *(void *)(a1 + 32) = v42;
        }

        int v43 = (char *)*((void *)this + 1);
        if ((unint64_t)v43 >= *((void *)this + 2) || *v43 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v60)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v60 = *v43;
          *((void *)this + 1) = v43 + 1;
        }

        int v44 = *((_DWORD *)this + 14);
        int v45 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v44 + 1;
        if (v44 >= v45) {
          return 0LL;
        }
        int v46 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v60);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v46);
        int v48 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v48, 1);
        int v49 = v48 - 1;
        if (v49 < 0 == v21) {
          *((_DWORD *)this + 14) = v49;
        }
        int v50 = (_BYTE *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        uint64_t v11 = v50 + 1;
        *((void *)this + 1) = v11;
LABEL_83:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v60);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v51 = v60;
        }

        else
        {
          unsigned int v51 = *v11;
          *((void *)this + 1) = v11 + 1;
        }

        if (v51 + 1 <= 7)
        {
          *(_DWORD *)(a1 + 56) |= 0x10u;
          *(_DWORD *)(a1 + 40) = v51;
        }

        unsigned int v53 = (_BYTE *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        uint64_t v13 = v53 + 1;
        *((void *)this + 1) = v13;
LABEL_93:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v60);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v54 = v60;
          int v55 = (_BYTE *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }

        else
        {
          unsigned int v54 = *v13;
          int v55 = v13 + 1;
          *((void *)this + 1) = v55;
        }

        *(_BYTE *)(a1 + 44) = v54 != 0;
        *(_DWORD *)(a1 + 56) |= 0x20u;
        unsigned int v14 = v55 + 1;
        *((void *)this + 1) = v14;
LABEL_101:
        if ((unint64_t)v14 >= v12 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v60);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v56 = v60;
          int v57 = (_BYTE *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }

        else
        {
          unsigned int v56 = *v14;
          int v57 = v14 + 1;
          *((void *)this + 1) = v57;
        }

        *(_BYTE *)(a1 + 45) = v56 != 0;
        *(_DWORD *)(a1 + 56) |= 0x40u;
        uint64_t v15 = v57 + 1;
        *((void *)this + 1) = v15;
LABEL_109:
        if ((unint64_t)v15 >= v12 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v60);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v58 = v60;
          unsigned int v59 = (_BYTE *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }

        else
        {
          unsigned int v58 = *v15;
          unsigned int v59 = v15 + 1;
          *((void *)this + 1) = v59;
        }

        *(_BYTE *)(a1 + 46) = v58 != 0;
        *(_DWORD *)(a1 + 56) |= 0x80u;
        *((void *)this + 1) = v59 + 1;
LABEL_117:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v60) & 1) != 0)
        {
          *(_DWORD *)(a1 + 48) = v60;
          *(_DWORD *)(a1 + 56) |= 0x100u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1LL;
            *((_BYTE *)this + 36) = 1;
            return result;
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_55;
        }
        goto LABEL_29;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_69;
        }
        goto LABEL_29;
      case 5u:
        int v7 = TagFallback & 7;
        uint64_t v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_83;
      case 6u:
        int v7 = TagFallback & 7;
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_93;
      case 7u:
        int v7 = TagFallback & 7;
        unsigned int v14 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_101;
      case 8u:
        int v7 = TagFallback & 7;
        uint64_t v15 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_109;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_29;
        }
        goto LABEL_117;
      default:
        int v7 = TagFallback & 7;
LABEL_29:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001F844C( uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 56);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0D28 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_1019A0D28 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v8,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }

uint64_t sub_1001F85AC(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 56);
  if (!(_BYTE)v3)
  {
    unsigned int v5 = 0;
    goto LABEL_55;
  }

  if ((v3 & 1) == 0)
  {
    int v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_12;
  }

  uint64_t v6 = *(void *)(a1 + 8);
  if (!v6) {
    uint64_t v6 = *(void *)(qword_1019A0D28 + 8);
  }
  uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001F57E4(v6);
  int v8 = (int)v7;
  else {
    int v9 = 1;
  }
  int v4 = v8 + v9 + 1;
  int v3 = *(_DWORD *)(a1 + 56);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    uint64_t v10 = *(void *)(a1 + 16);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_1019A0D28 + 16);
    }
    int v11 = *(unsigned __int8 *)(v10 + 24);
    if (*(_BYTE *)(v10 + 24))
    {
      int v12 = (v11 << 31 >> 31) & 5;
      if ((v11 & 2) != 0) {
        v12 += 5;
      }
      if ((v11 & 4) != 0) {
        int v11 = v12 + 5;
      }
      else {
        int v11 = v12;
      }
    }

    *(_DWORD *)(v10 + 20) = v11;
    v4 += v11 + 2;
    int v3 = *(_DWORD *)(a1 + 56);
  }

float sub_1001F879C(uint64_t a1, void *lpsrc)
{
  return sub_1001F78B8(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001F87E8()
{
  return 1LL;
}

void *sub_1001F87F0@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.MotionTypeDeviceMotion");
}

void sub_1001F8800(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v7,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  23924LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v7,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v6, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }

  if ((*(_BYTE *)(a2 + 16) & 1) != 0)
  {
    int v5 = *(_DWORD *)(a2 + 8);
    *(_DWORD *)(a1 + 16) |= 1u;
    *(_DWORD *)(a1 + 8) = v5;
  }

void sub_1001F8888(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001F88A0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101829890;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001F88B0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101829890;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

void *sub_1001F88D0()
{
  uint64_t result = operator new(0x18uLL);
  *uint64_t result = off_101829890;
  result[1] = 0LL;
  *((_DWORD *)result + 4) = 0;
  return result;
}

uint64_t sub_1001F88F8(uint64_t result)
{
  if (*(_BYTE *)(result + 16)) {
    *(_DWORD *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1001F890C( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 8);
  while (1)
  {
    while (1)
    {
      char v6 = (char *)*((void *)this + 1);
      if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      }

      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((void *)this + 1) = v6 + 1;
      }

      if ((_DWORD)TagFallback != 8) {
        break;
      }
      int v9 = (char *)*((void *)this + 1);
      unint64_t v8 = *((void *)this + 2);
      if ((unint64_t)v9 >= v8 || *v9 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!(_DWORD)result) {
          return result;
        }
        uint64_t v10 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
      }

      else
      {
        *int v5 = *v9;
        uint64_t v10 = (unsigned __int8 *)(v9 + 1);
        *((void *)this + 1) = v10;
      }

      *(_DWORD *)(a1 + 16) |= 1u;
      if (v10 == (unsigned __int8 *)v8 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
  }

  return 1LL;
}

uint64_t sub_1001F8A1C( uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if ((*(_BYTE *)(result + 16) & 1) != 0) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(_DWORD *)(result + 8),  a2,  a4);
  }
  return result;
}

uint64_t sub_1001F8A38(uint64_t a1, unsigned int a2)
{
  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v4 >= 0x80) {
    else
    }
      uint64_t result = 2LL;
  }

  else
  {
    uint64_t result = 0LL;
  }

  *(_DWORD *)(a1 + 12) = result;
  return result;
}

void sub_1001F8A84(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1001F8AD0()
{
  return 1LL;
}

void *sub_1001F8AD8@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.SensorFusionStatus");
}

float sub_1001F8AE8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v18,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  24329LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v18,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v17, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 56);
  if (!(_BYTE)v6) {
    return *(float *)&v5;
  }
  if ((*(_BYTE *)(a2 + 56) & 1) != 0)
  {
    *(_DWORD *)(a1 + 56) |= 1u;
    uint64_t v7 = *(char **)(a1 + 8);
    if (!v7)
    {
      uint64_t v7 = (char *)operator new(0x28uLL);
      *(void *)uint64_t v7 = off_101827B80;
      *(_OWORD *)(v7 + 8) = 0u;
      *(_OWORD *)(v7 + 24) = 0u;
      *(void *)(a1 + 8) = v7;
    }

    uint64_t v8 = *(void *)(a2 + 8);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1019A0D38 + 8);
    }
    double v5 = sub_1001D323C((uint64_t)v7, v8);
    int v6 = *(_DWORD *)(a2 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_6:
      if ((v6 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_24;
    }
  }

  else if ((*(_BYTE *)(a2 + 56) & 2) == 0)
  {
    goto LABEL_6;
  }

  *(_DWORD *)(a1 + 56) |= 2u;
  int v9 = *(char **)(a1 + 16);
  if (!v9)
  {
    int v9 = (char *)operator new(0x40uLL);
    *(void *)int v9 = off_101829818;
    *(_OWORD *)(v9 + 8) = 0u;
    *(_OWORD *)(v9 + 24) = 0u;
    *((_DWORD *)v9 + 10) = -1;
    *((_WORD *)v9 + 22) = 0;
    v9[46] = 0;
    *((_DWORD *)v9 + 14) = 0;
    *((void *)v9 + 6) = 0LL;
    *(void *)(a1 + 16) = v9;
  }

  uint64_t v10 = *(void *)(a2 + 16);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_1019A0D38 + 16);
  }
  *(float *)&double v5 = sub_1001F78B8((uint64_t)v9, v10);
  int v6 = *(_DWORD *)(a2 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_7:
    if ((v6 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }

void sub_1001F8D28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void *sub_1001F8D40(void *result)
{
  if ((void *)qword_1019A0D38 != result)
  {
    int v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
    }
    uint64_t result = (void *)v1[4];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_1001F8DB0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101829908;
  sub_1001F8D40(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001F8DE0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101829908;
  sub_1001F8D40(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v2);
}

uint64_t sub_1001F8E14(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0D38;
  if (!qword_1019A0D38)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0D38;
  }

  return result;
}

double sub_1001F8E40()
{
  unsigned __int8 v0 = (char *)operator new(0x40uLL);
  *((void *)v0 + 1) = 0LL;
  *((void *)v0 + 2) = 0LL;
  *(void *)unsigned __int8 v0 = off_101829908;
  v0[24] = 0;
  double result = 0.0;
  *(_OWORD *)(v0 + 28) = 0u;
  *(_OWORD *)(v0 + 44) = 0u;
  return result;
}

uint64_t sub_1001F8E78(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(_BYTE *)(result + 56);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(result + 56) & 1) != 0)
    {
      uint64_t v3 = *(void *)(result + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0LL;
          *(void *)(v3 + 16) = 0LL;
          *(void *)(v3 + 24) = 0LL;
        }

        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(result + 56);
      }
    }

    if ((v2 & 2) != 0)
    {
      double result = *(void *)(result + 16);
      if (result)
      {
        double result = sub_1001F7C88(result);
        int v2 = *(_DWORD *)(v1 + 56);
      }
    }

    *(_BYTE *)(v1 + 24) = 0;
    *(_DWORD *)(v1 + 28) = 0;
    *(_DWORD *)(v1 + 40) = 0;
    if ((v2 & 0x20) != 0)
    {
      uint64_t v4 = *(void *)(v1 + 32);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 16)) {
          *(_DWORD *)(v4 + 8) = 0;
        }
        *(_DWORD *)(v4 + 16) = 0;
      }
    }

    *(_DWORD *)(v1 + 44) = 0;
    *(_DWORD *)(v1 + 48) = 0;
  }

  *(_DWORD *)(v1 + 56) = 0;
  return result;
}

uint64_t sub_1001F8F04( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  double v5 = (unsigned int *)(a1 + 28);
  while (2)
  {
    int v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_28;
        }
        *(_DWORD *)(a1 + 56) |= 1u;
        int v9 = *(char **)(a1 + 8);
        if (!v9)
        {
          int v9 = (char *)operator new(0x28uLL);
          *(void *)int v9 = off_101827B80;
          *(_OWORD *)(v9 + 8) = 0u;
          *(_OWORD *)(v9 + 24) = 0u;
          *(void *)(a1 + 8) = v9;
        }

        uint64_t v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v48)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v48 = *v10;
          *((void *)this + 1) = v10 + 1;
        }

        int v15 = *((_DWORD *)this + 14);
        int v16 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v15 + 1;
        if (v15 >= v16) {
          return 0LL;
        }
        int v17 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v48);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v17);
        int v19 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v19, 1);
        int v21 = v19 - 1;
        if (v21 < 0 == v20) {
          *((_DWORD *)this + 14) = v21;
        }
        int v22 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v22 + 1;
        goto LABEL_40;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_28;
        }
LABEL_40:
        *(_DWORD *)(a1 + 56) |= 2u;
        uint64_t v23 = *(char **)(a1 + 16);
        if (!v23)
        {
          uint64_t v23 = (char *)operator new(0x40uLL);
          *(void *)uint64_t v23 = off_101829818;
          *(_OWORD *)(v23 + 8) = 0u;
          *(_OWORD *)(v23 + 24) = 0u;
          *((_DWORD *)v23 + 10) = -1;
          *((_WORD *)v23 + 22) = 0;
          v23[46] = 0;
          *((_DWORD *)v23 + 14) = 0;
          *((void *)v23 + 6) = 0LL;
          *(void *)(a1 + 16) = v23;
        }

        uint64_t v24 = (char *)*((void *)this + 1);
        if ((unint64_t)v24 >= *((void *)this + 2) || *v24 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v48)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v48 = *v24;
          *((void *)this + 1) = v24 + 1;
        }

        int v25 = *((_DWORD *)this + 14);
        int v26 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v25 + 1;
        if (v25 >= v26) {
          return 0LL;
        }
        int v27 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v48);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v27);
        int v29 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v29, 1);
        int v30 = v29 - 1;
        if (v30 < 0 == v20) {
          *((_DWORD *)this + 14) = v30;
        }
        int v31 = (_BYTE *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        int v12 = v31 + 1;
        *((void *)this + 1) = v12;
LABEL_54:
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v48);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v32 = v48;
          unsigned int v33 = (_BYTE *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }

        else
        {
          unsigned int v32 = *v12;
          unsigned int v33 = v12 + 1;
          *((void *)this + 1) = v33;
        }

        *(_BYTE *)(a1 + 24) = v32 != 0;
        *(_DWORD *)(a1 + 56) |= 4u;
        unsigned int v13 = v33 + 1;
        *((void *)this + 1) = v13;
LABEL_62:
        if ((unint64_t)v13 >= v11 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result) {
            return result;
          }
          int v35 = (_BYTE *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }

        else
        {
          *double v5 = *v13;
          int v35 = v13 + 1;
          *((void *)this + 1) = v35;
        }

        *(_DWORD *)(a1 + 56) |= 8u;
        int v14 = v35 + 1;
        *((void *)this + 1) = v14;
LABEL_70:
        if ((unint64_t)v14 >= v11 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v48);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v36 = v48;
        }

        else
        {
          unsigned int v36 = *v14;
          *((void *)this + 1) = v14 + 1;
        }

        if (v36 <= 4)
        {
          *(_DWORD *)(a1 + 56) |= 0x10u;
          *(_DWORD *)(a1 + 40) = v36;
        }

        int v37 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v37 + 1;
LABEL_80:
        *(_DWORD *)(a1 + 56) |= 0x20u;
        unsigned int v38 = *(void **)(a1 + 32);
        if (!v38)
        {
          unsigned int v38 = operator new(0x18uLL);
          *unsigned int v38 = off_101829890;
          v38[1] = 0LL;
          *((_DWORD *)v38 + 4) = 0;
          *(void *)(a1 + 32) = v38;
        }

        int v39 = (char *)*((void *)this + 1);
        if ((unint64_t)v39 >= *((void *)this + 2) || *v39 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v48)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v48 = *v39;
          *((void *)this + 1) = v39 + 1;
        }

        int v40 = *((_DWORD *)this + 14);
        int v41 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v40 + 1;
        if (v40 >= v41) {
          return 0LL;
        }
        int v42 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v48);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v42);
        int v44 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v44, 1);
        int v45 = v44 - 1;
        if (v45 < 0 == v20) {
          *((_DWORD *)this + 14) = v45;
        }
        int v46 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v46 + 1;
LABEL_94:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v48) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 44) = v48;
        *(_DWORD *)(a1 + 56) |= 0x40u;
        unsigned int v47 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v47 + 1;
LABEL_98:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v48) & 1) != 0)
        {
          *(_DWORD *)(a1 + 48) = v48;
          *(_DWORD *)(a1 + 56) |= 0x80u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1LL;
            *((_BYTE *)this + 36) = 1;
            return result;
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v8 = TagFallback & 7;
        int v12 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_54;
      case 4u:
        int v8 = TagFallback & 7;
        unsigned int v13 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_62;
      case 5u:
        int v8 = TagFallback & 7;
        int v14 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_70;
      case 6u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_80;
        }
        goto LABEL_28;
      case 7u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_94;
        }
        goto LABEL_28;
      case 8u:
        int v8 = TagFallback & 7;
        if (v8 != 5) {
          goto LABEL_28;
        }
        goto LABEL_98;
      default:
        int v8 = TagFallback & 7;
LABEL_28:
        if (v8 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001F9504( uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 56);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0D38 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_1019A0D38 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v8,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }

uint64_t sub_1001F9638(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 56);
  if (!(_BYTE)v3)
  {
    uint64_t result = 0LL;
    goto LABEL_51;
  }

  if ((*(_BYTE *)(a1 + 56) & 1) == 0)
  {
    int v4 = 0;
    if ((*(_BYTE *)(a1 + 56) & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }

  uint64_t v6 = *(void *)(a1 + 8);
  if (!v6) {
    uint64_t v6 = *(void *)(qword_1019A0D38 + 8);
  }
  int v7 = *(unsigned __int8 *)(v6 + 36);
  if (*(_BYTE *)(v6 + 36))
  {
    int v8 = (v7 << 31 >> 31) & 9;
    if ((v7 & 2) != 0) {
      v8 += 9;
    }
    if ((v7 & 4) != 0) {
      int v7 = v8 + 9;
    }
    else {
      int v7 = v8;
    }
  }

  *(_DWORD *)(v6 + 32) = v7;
  int v4 = v7 + 2;
  int v3 = *(_DWORD *)(a1 + 56);
  if ((v3 & 2) != 0)
  {
LABEL_15:
    uint64_t v9 = *(void *)(a1 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_1019A0D38 + 16);
    }
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001F85AC(v9, a2);
    int v11 = (int)v10;
    else {
      int v12 = 1;
    }
    v4 += v11 + v12 + 1;
    int v3 = *(_DWORD *)(a1 + 56);
  }

float sub_1001F9810(uint64_t a1, void *lpsrc)
{
  return sub_1001F8AE8(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001F985C()
{
  return 1LL;
}

void *sub_1001F9864@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.DeviceMotionSample");
}

double sub_1001F9874(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v17,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  24563LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v17,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v16, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16),  *(_DWORD *)(a2 + 24) + *(_DWORD *)(a1 + 24));
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v6 = 0LL;
    do
    {
      uint64_t v7 = *(void *)(*(void *)(a2 + 16) + 8 * v6);
      int v8 = *(_DWORD *)(a1 + 28);
      uint64_t v9 = *(int *)(a1 + 24);
      if ((int)v9 >= v8)
      {
        if (v8 == *(_DWORD *)(a1 + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16),  v8 + 1);
          int v8 = *(_DWORD *)(a1 + 28);
        }

        *(_DWORD *)(a1 + 28) = v8 + 1;
        int v11 = (char *)operator new(0x40uLL);
        *((void *)v11 + 1) = 0LL;
        *((void *)v11 + 2) = 0LL;
        *(void *)int v11 = off_101829908;
        v11[24] = 0;
        *(_OWORD *)(v11 + 28) = 0u;
        *(_OWORD *)(v11 + 44) = 0u;
        uint64_t v12 = *(void *)(a1 + 16);
        uint64_t v13 = *(int *)(a1 + 24);
        *(_DWORD *)(a1 + 24) = v13 + 1;
        *(void *)(v12 + 8 * v13) = v11;
      }

      else
      {
        uint64_t v10 = *(void *)(a1 + 16);
        *(_DWORD *)(a1 + 24) = v9 + 1;
        int v11 = *(char **)(v10 + 8 * v9);
      }

      *(float *)&double result = sub_1001F8AE8((uint64_t)v11, v7);
      ++v6;
    }

    while (v6 < *(int *)(a2 + 24));
  }

  if ((*(_BYTE *)(a2 + 44) & 1) != 0)
  {
    *(_DWORD *)(a1 + 44) |= 1u;
    int v14 = *(char **)(a1 + 8);
    if (!v14)
    {
      int v14 = (char *)operator new(0x28uLL);
      *(void *)int v14 = off_101827B80;
      *(_OWORD *)(v14 + 8) = 0u;
      *(_OWORD *)(v14 + 24) = 0u;
      *(void *)(a1 + 8) = v14;
    }

    uint64_t v15 = *(void *)(a2 + 8);
    if (!v15) {
      uint64_t v15 = *(void *)(qword_1019A0D40 + 8);
    }
    return sub_1001D323C((uint64_t)v14, v15);
  }

  return result;
}

void sub_1001F9A14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001F9A2C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101829980;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0D40 != a1)
  {
    uint64_t v2 = *((void *)a1 + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  sub_10008D0EC((uint64_t)a1 + 16);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001F9A8C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

uint64_t sub_1001F9AA0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0D40;
  if (!qword_1019A0D40)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0D40;
  }

  return result;
}

void *sub_1001F9ACC()
{
  uint64_t result = operator new(0x30uLL);
  result[5] = 0LL;
  *uint64_t result = off_101829980;
  result[1] = 0LL;
  result[2] = 0LL;
  result[3] = 0LL;
  *((_DWORD *)result + 8) = 0;
  return result;
}

uint64_t sub_1001F9AFC(uint64_t result)
{
  uint64_t v1 = result;
  if ((*(_BYTE *)(result + 44) & 1) != 0)
  {
    uint64_t v2 = *(void *)(result + 8);
    if (v2)
    {
      if (*(_BYTE *)(v2 + 36))
      {
        *(void *)(v2 + 8) = 0LL;
        *(void *)(v2 + 16) = 0LL;
        *(void *)(v2 + 24) = 0LL;
      }

      *(_DWORD *)(v2 + 36) = 0;
    }
  }

  if (*(int *)(result + 24) >= 1)
  {
    uint64_t v3 = 0LL;
    do
    {
      uint64_t v4 = *(void *)(*(void *)(v1 + 16) + 8 * v3);
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 32LL))(v4);
      ++v3;
    }

    while (v3 < *(int *)(v1 + 24));
  }

  *(_DWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 44) = 0;
  return result;
}

uint64_t sub_1001F9B78( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = (char *)*((void *)this + 1);
        if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((void *)this + 1) = v6 + 1;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_18;
        }
        *(_DWORD *)(a1 + 44) |= 1u;
        uint64_t v9 = *(char **)(a1 + 8);
        if (!v9)
        {
          uint64_t v9 = (char *)operator new(0x28uLL);
          *(void *)uint64_t v9 = off_101827B80;
          *(_OWORD *)(v9 + 8) = 0u;
          *(_OWORD *)(v9 + 24) = 0u;
          *(void *)(a1 + 8) = v9;
        }

        uint64_t v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v34)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v34 = *v10;
          *((void *)this + 1) = v10 + 1;
        }

        int v11 = *((_DWORD *)this + 14);
        int v12 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v11 + 1;
        if (v11 >= v12) {
          return 0LL;
        }
        int v13 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v13);
        int v15 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v15, 1);
        int v17 = v15 - 1;
        if (v17 < 0 == v16) {
          *((_DWORD *)this + 14) = v17;
        }
        int v18 = (_BYTE *)*((void *)this + 1);
      }

      int v8 = TagFallback & 7;
      if (v8 != 2) {
        goto LABEL_18;
      }
      while (1)
      {
        int v19 = *(_DWORD *)(a1 + 28);
        uint64_t v20 = *(int *)(a1 + 24);
        if ((int)v20 >= v19)
        {
          if (v19 == *(_DWORD *)(a1 + 32))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v19 + 1);
            int v19 = *(_DWORD *)(a1 + 28);
          }

          *(_DWORD *)(a1 + 28) = v19 + 1;
          int v22 = (char *)operator new(0x40uLL);
          *((void *)v22 + 1) = 0LL;
          *((void *)v22 + 2) = 0LL;
          *(void *)int v22 = off_101829908;
          v22[24] = 0;
          *(_OWORD *)(v22 + 28) = 0u;
          *(_OWORD *)(v22 + 44) = 0u;
          uint64_t v23 = *(void *)(a1 + 16);
          uint64_t v24 = *(int *)(a1 + 24);
          *(_DWORD *)(a1 + 24) = v24 + 1;
          *(void *)(v23 + 8 * v24) = v22;
        }

        else
        {
          uint64_t v21 = *(void *)(a1 + 16);
          *(_DWORD *)(a1 + 24) = v20 + 1;
          int v22 = *(char **)(v21 + 8 * v20);
        }

        int v25 = (char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v35)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v35 = *v25;
          *((void *)this + 1) = v25 + 1;
        }

        int v26 = *((_DWORD *)this + 14);
        int v27 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v26 + 1;
        if (v26 >= v27) {
          return 0LL;
        }
        int v28 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v35);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v28);
        int v30 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v30, 1);
        int v31 = v30 - 1;
        if (v31 < 0 == v16) {
          *((_DWORD *)this + 14) = v31;
        }
        int v18 = (_BYTE *)*((void *)this + 1);
        unsigned int v32 = (_BYTE *)*((void *)this + 2);
        if (v18 >= v32 || *v18 != 18) {
          break;
        }
LABEL_29:
        *((void *)this + 1) = v18 + 1;
      }

      if (v18 == v32 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }

    int v8 = TagFallback & 7;
LABEL_18:
    if (v8 == 4) {
      return 1LL;
    }
  }

uint64_t sub_1001F9EA0( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if ((*(_BYTE *)(result + 44) & 1) != 0)
  {
    uint64_t v6 = *(void *)(result + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1019A0D40 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v6,  a2,  a4);
  }

  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0LL;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(void *)(*(void *)(v5 + 16) + 8 * v7++),  a2,  a4);
    while (v7 < *(int *)(v5 + 24));
  }

  return result;
}

uint64_t sub_1001F9F24(uint64_t a1, unsigned int a2)
{
  if ((*(_BYTE *)(a1 + 44) & 1) != 0)
  {
    uint64_t v4 = *(void *)(a1 + 8);
    if (!v4) {
      uint64_t v4 = *(void *)(qword_1019A0D40 + 8);
    }
    int v5 = *(unsigned __int8 *)(v4 + 36);
    if (*(_BYTE *)(v4 + 36))
    {
      int v6 = (v5 << 31 >> 31) & 9;
      if ((v5 & 2) != 0) {
        v6 += 9;
      }
      if ((v5 & 4) != 0) {
        int v5 = v6 + 9;
      }
      else {
        int v5 = v6;
      }
    }

    *(_DWORD *)(v4 + 32) = v5;
    int v3 = v5 + 2;
  }

  else
  {
    int v3 = 0;
  }

  int v7 = *(_DWORD *)(a1 + 24);
  uint64_t v8 = (v7 + v3);
  if (v7 >= 1)
  {
    uint64_t v9 = 0LL;
    do
    {
      uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001F9638( *(void *)(*(void *)(a1 + 16) + 8 * v9),  a2);
      int v11 = (int)v10;
      else {
        int v12 = 1;
      }
      uint64_t v8 = (v11 + v8 + v12);
      ++v9;
    }

    while (v9 < *(int *)(a1 + 24));
  }

  *(_DWORD *)(a1 + 40) = v8;
  return v8;
}

double sub_1001F9FFC(uint64_t a1, void *lpsrc)
{
  return sub_1001F9874(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001FA048()
{
  return 1LL;
}

void *sub_1001FA050@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.DeviceMotion");
}

double sub_1001FA060(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v10,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  24943LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v10,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 76);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 76) & 1) != 0)
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 76) |= 1u;
      *(double *)(a1 + 8) = result;
      int v6 = *(_DWORD *)(a2 + 76);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_15;
      }
    }

    else if ((*(_BYTE *)(a2 + 76) & 2) == 0)
    {
      goto LABEL_6;
    }

    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 76) |= 2u;
    *(double *)(a1 + 16) = result;
    int v6 = *(_DWORD *)(a2 + 76);
    if ((v6 & 4) == 0)
    {
LABEL_7:
      if ((v6 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_16;
    }

void sub_1001FA20C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001FA224(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1018299F8;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0D48 != this)
  {
    uint64_t v2 = *((void *)this + 8);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1001FA278(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

double sub_1001FA28C()
{
  unsigned __int8 v0 = (char *)operator new(0x50uLL);
  *(void *)unsigned __int8 v0 = &off_1018299F8;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *((void *)v0 + 9) = 0LL;
  return result;
}

uint64_t sub_1001FA2C8(uint64_t result)
{
  char v1 = *(_BYTE *)(result + 76);
  if (v1)
  {
    *(void *)(result + 56) = 0LL;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    if (v1 < 0)
    {
      uint64_t v2 = *(void *)(result + 64);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 36))
        {
          *(void *)(v2 + 8) = 0LL;
          *(void *)(v2 + 16) = 0LL;
          *(void *)(v2 + 24) = 0LL;
        }

        *(_DWORD *)(v2 + 36) = 0;
      }
    }
  }

  *(_DWORD *)(result + 76) = 0;
  return result;
}

uint64_t sub_1001FA30C( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_50;
        }
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v26) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 8) = *(void *)v26;
        *(_DWORD *)(a1 + 76) |= 1u;
        uint64_t v8 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v8 + 1;
        goto LABEL_14;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_50;
        }
LABEL_14:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v26) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = *(void *)v26;
        *(_DWORD *)(a1 + 76) |= 2u;
        char v9 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v9 + 1;
LABEL_19:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v26) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 24) = *(void *)v26;
        *(_DWORD *)(a1 + 76) |= 4u;
        uint64_t v10 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v10 + 1;
LABEL_24:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v26) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 32) = *(void *)v26;
        *(_DWORD *)(a1 + 76) |= 8u;
        int v11 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v11 + 1;
LABEL_29:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v26) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 40) = *(void *)v26;
        *(_DWORD *)(a1 + 76) |= 0x10u;
        int v12 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v12 + 1;
LABEL_34:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v26) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 48) = *(void *)v26;
        *(_DWORD *)(a1 + 76) |= 0x20u;
        int v13 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v13 + 1;
LABEL_39:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v26) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 56) = *(void *)v26;
        int v14 = *(_DWORD *)(a1 + 76) | 0x40;
        *(_DWORD *)(a1 + 76) = v14;
        int v15 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v15 + 1;
LABEL_45:
        *(_DWORD *)(a1 + 76) = v14 | 0x80;
        BOOL v16 = *(char **)(a1 + 64);
        if (!v16)
        {
          BOOL v16 = (char *)operator new(0x28uLL);
          *(void *)BOOL v16 = off_101827B80;
          *(_OWORD *)(v16 + 8) = 0u;
          *(_OWORD *)(v16 + 24) = 0u;
          *(void *)(a1 + 64) = v16;
        }

        int v17 = (char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v26)) {
            return 0LL;
          }
        }

        else
        {
          v26[0] = *v17;
          *((void *)this + 1) = v17 + 1;
        }

        int v18 = *((_DWORD *)this + 14);
        int v19 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v18 + 1;
        if (v18 < v19)
        {
          int v20 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v26[0]);
          if (sub_1001D33C8((uint64_t)v16, this, v21))
          {
            if (*((_BYTE *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v20);
              int v22 = *((_DWORD *)this + 14);
              BOOL v23 = __OFSUB__(v22, 1);
              int v24 = v22 - 1;
              if (v24 < 0 == v23) {
                *((_DWORD *)this + 14) = v24;
              }
              if (*((void *)this + 1) == *((void *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1LL;
                *((_BYTE *)this + 36) = 1;
                return result;
              }

              continue;
            }
          }
        }

        return 0LL;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_19;
        }
        goto LABEL_50;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_24;
        }
        goto LABEL_50;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_29;
        }
        goto LABEL_50;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_34;
        }
        goto LABEL_50;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_39;
        }
        goto LABEL_50;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_50;
        }
        int v14 = *(_DWORD *)(a1 + 76);
        goto LABEL_45;
      default:
        int v7 = TagFallback & 7;
LABEL_50:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001FA730( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 76);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  (int)a2,  *(double *)(result + 8),  a3);
    int v6 = *(_DWORD *)(v5 + 76);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  (int)a2,  *(double *)(v5 + 16),  a3);
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }

uint64_t sub_1001FA844(uint64_t a1)
{
  int v1 = *(unsigned __int8 *)(a1 + 76);
  if (*(_BYTE *)(a1 + 76))
  {
    LODWORD(v2) = (v1 << 31 >> 31) & 9;
    if ((v1 & 2) != 0) {
      LODWORD(v2) = v2 + 9;
    }
    if ((v1 & 4) != 0) {
      LODWORD(v2) = v2 + 9;
    }
    if ((v1 & 8) != 0) {
      LODWORD(v2) = v2 + 9;
    }
    if ((v1 & 0x10) != 0) {
      LODWORD(v2) = v2 + 9;
    }
    if ((v1 & 0x20) != 0) {
      LODWORD(v2) = v2 + 9;
    }
    if ((v1 & 0x40) != 0) {
      uint64_t v2 = (v2 + 9);
    }
    else {
      uint64_t v2 = v2;
    }
    if ((v1 & 0x80) != 0)
    {
      uint64_t v3 = *(void *)(a1 + 64);
      if (!v3) {
        uint64_t v3 = *(void *)(qword_1019A0D48 + 64);
      }
      int v4 = *(unsigned __int8 *)(v3 + 36);
      int v5 = (v4 << 31 >> 31) & 9;
      if ((v4 & 2) != 0) {
        v5 += 9;
      }
      if ((v4 & 4) != 0) {
        v5 += 9;
      }
      if (*(_BYTE *)(v3 + 36)) {
        int v6 = v5;
      }
      else {
        int v6 = 0;
      }
      *(_DWORD *)(v3 + 32) = v6;
      uint64_t v2 = (v2 + v6 + 2);
    }
  }

  else
  {
    uint64_t v2 = 0LL;
  }

  *(_DWORD *)(a1 + 72) = v2;
  return v2;
}

double sub_1001FA908(uint64_t a1, void *lpsrc)
{
  return sub_1001FA060(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001FA954()
{
  return 1LL;
}

void *sub_1001FA95C@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.MotionTypeGeomagneticModelData");
}

double sub_1001FA96C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  25146LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  if ((*(_BYTE *)(a2 + 20) & 1) != 0)
  {
    *(_DWORD *)(a1 + 20) |= 1u;
    int v6 = *(char **)(a1 + 8);
    if (!v6)
    {
      int v6 = (char *)operator new(0x50uLL);
      *(void *)int v6 = &off_1018299F8;
      *(_OWORD *)(v6 + 8) = 0u;
      *(_OWORD *)(v6 + 24) = 0u;
      *(_OWORD *)(v6 + 40) = 0u;
      *(_OWORD *)(v6 + 56) = 0u;
      *((void *)v6 + 9) = 0LL;
      *(void *)(a1 + 8) = v6;
    }

    uint64_t v7 = *(void *)(a2 + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0D50 + 8);
    }
    return sub_1001FA060((uint64_t)v6, v7);
  }

  return result;
}

void sub_1001FAA3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001FAA54(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_101829A70;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0D50 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1001FAAA8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

uint64_t sub_1001FAABC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0D50;
  if (!qword_1019A0D50)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0D50;
  }

  return result;
}

void *sub_1001FAAE8()
{
  uint64_t result = operator new(0x18uLL);
  result[1] = 0LL;
  result[2] = 0LL;
  *uint64_t result = &off_101829A70;
  return result;
}

uint64_t sub_1001FAB10(uint64_t result)
{
  uint64_t v1 = result;
  if ((*(_BYTE *)(result + 20) & 1) != 0)
  {
    uint64_t result = *(void *)(result + 8);
    if (result) {
      uint64_t result = sub_1001FA2C8(result);
    }
  }

  *(_DWORD *)(v1 + 20) = 0;
  return result;
}

uint64_t sub_1001FAB44( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      }

      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((void *)this + 1) = v5 + 1;
      }

      if ((_DWORD)TagFallback != 10) {
        break;
      }
      *(_DWORD *)(a1 + 20) |= 1u;
      uint64_t v7 = *(char **)(a1 + 8);
      if (!v7)
      {
        uint64_t v7 = (char *)operator new(0x50uLL);
        *(void *)uint64_t v7 = &off_1018299F8;
        *(_OWORD *)(v7 + 8) = 0u;
        *(_OWORD *)(v7 + 24) = 0u;
        *(_OWORD *)(v7 + 40) = 0u;
        *(_OWORD *)(v7 + 56) = 0u;
        *((void *)v7 + 9) = 0LL;
        *(void *)(a1 + 8) = v7;
      }

      char v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v17)) {
          return 0LL;
        }
      }

      else
      {
        unsigned int v17 = *v8;
        *((void *)this + 1) = v8 + 1;
      }

      int v9 = *((_DWORD *)this + 14);
      int v10 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v9 + 1;
      if (v9 >= v10) {
        return 0LL;
      }
      int v11 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v17);
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v11);
      int v13 = *((_DWORD *)this + 14);
      BOOL v14 = __OFSUB__(v13, 1);
      int v15 = v13 - 1;
      if (v15 < 0 == v14) {
        *((_DWORD *)this + 14) = v15;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }
  }

  return 1LL;
}

uint64_t sub_1001FACF4( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if ((*(_BYTE *)(result + 20) & 1) != 0)
  {
    uint64_t v5 = *(void *)(result + 8);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_1019A0D50 + 8);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v5,  a2,  a4);
  }

  return result;
}

uint64_t sub_1001FAD20(uint64_t a1)
{
  if ((*(_BYTE *)(a1 + 20) & 1) != 0)
  {
    uint64_t v3 = *(void *)(a1 + 8);
    if (!v3) {
      uint64_t v3 = *(void *)(qword_1019A0D50 + 8);
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001FA844(v3);
    int v6 = (int)v4;
    else {
      int v7 = 1;
    }
    uint64_t result = (v6 + v7 + 1);
  }

  else
  {
    uint64_t result = 0LL;
  }

  *(_DWORD *)(a1 + 16) = result;
  return result;
}

double sub_1001FAD8C(uint64_t a1, void *lpsrc)
{
  return sub_1001FA96C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001FADD8()
{
  return 1LL;
}

void *sub_1001FADE0@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.GeomagneticModelData");
}

void sub_1001FADF0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v18,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  25600LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v18,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v17, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }

  int v5 = *(_DWORD *)(a2 + 56);
  if (!(_BYTE)v5) {
    goto LABEL_13;
  }
  if ((v5 & 1) != 0)
  {
    uint64_t v9 = *(void *)(a2 + 8);
    *(_DWORD *)(a1 + 56) |= 1u;
    *(void *)(a1 + 8) = v9;
    int v5 = *(_DWORD *)(a2 + 56);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_24;
    }
  }

  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }

  int v10 = *(const std::string **)(a2 + 16);
  *(_DWORD *)(a1 + 56) |= 2u;
  int v11 = *(std::string **)(a1 + 16);
  if (v11 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    int v11 = (std::string *)operator new(0x18uLL);
    v11->__r_.__value_.__l.__size_ = 0LL;
    v11->__r_.__value_.__l.__cap_ = 0LL;
    v11->__r_.__value_.__r.__words[0] = 0LL;
    *(void *)(a1 + 16) = v11;
  }

  std::string::operator=(v11, v10);
  int v5 = *(_DWORD *)(a2 + 56);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }

void sub_1001FAFF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001FB008(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101829AE8;
  sub_100069200((uint64_t)a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001FB038(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101829AE8;
  sub_100069200((uint64_t)a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v2);
}

void *sub_1001FB06C()
{
  uint64_t result = operator new(0x40uLL);
  *uint64_t result = off_101829AE8;
  result[1] = 0LL;
  *((_DWORD *)result + 14) = 0;
  result[6] = 0LL;
  *((_DWORD *)result + 11) = 0;
  result[3] = 0LL;
  result[4] = 0LL;
  result[2] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *((_WORD *)result + 20) = 0;
  return result;
}

uint64_t sub_1001FB0B0(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 56);
  if ((_BYTE)v1)
  {
    *(void *)(result + 8) = 0LL;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(result + 16);
      if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(_BYTE **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0LL;
        }

        else
        {
          *(_BYTE *)uint64_t v2 = 0;
          *(_BYTE *)(v2 + 23) = 0;
        }
      }
    }

    *(void *)(result + 24) = 0LL;
    *(void *)(result + 32) = 0LL;
    *(_WORD *)(result + 40) = 0;
    int v1 = *(_DWORD *)(result + 56);
  }

  if ((v1 & 0xFF00) != 0)
  {
    *(_DWORD *)(result + 44) = 0;
    *(_DWORD *)(result + 48) = 0;
  }

  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_1001FB118( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unint64_t *)(a1 + 8);
  while (2)
  {
    char v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_40;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, v5);
        if ((_DWORD)result)
        {
          int v10 = *(_DWORD *)(a1 + 56) | 1;
          *(_DWORD *)(a1 + 56) = v10;
          int v11 = (_BYTE *)*((void *)this + 1);
          if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 18)
          {
            *((void *)this + 1) = v11 + 1;
            goto LABEL_16;
          }

          continue;
        }

        return result;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_40;
        }
        int v10 = *(_DWORD *)(a1 + 56);
LABEL_16:
        *(_DWORD *)(a1 + 56) = v10 | 2;
        int v12 = *(void **)(a1 + 16);
        if (v12 == (void *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
        {
          int v12 = operator new(0x18uLL);
          v12[1] = 0LL;
          v12[2] = 0LL;
          *int v12 = 0LL;
          *(void *)(a1 + 16) = v12;
        }

        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString(this, v12);
        if ((_DWORD)result)
        {
          int v14 = (_BYTE *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
          if ((unint64_t)v14 < v13 && *v14 == 24)
          {
            int v15 = v14 + 1;
            *((void *)this + 1) = v15;
            goto LABEL_24;
          }

          continue;
        }

        return result;
      case 3u:
        int v8 = TagFallback & 7;
        int v15 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
LABEL_24:
        if ((unint64_t)v15 >= v13 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v16 = v40;
          char v17 = (_BYTE *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }

        else
        {
          unsigned int v16 = *v15;
          char v17 = v15 + 1;
          *((void *)this + 1) = v17;
        }

        *(_DWORD *)(a1 + 24) = -(v16 & 1) ^ (v16 >> 1);
        *(_DWORD *)(a1 + 56) |= 4u;
        if ((unint64_t)v17 < v13 && *v17 == 32)
        {
          int v18 = v17 + 1;
          *((void *)this + 1) = v18;
          goto LABEL_49;
        }

        continue;
      case 4u:
        int v8 = TagFallback & 7;
        int v18 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
LABEL_49:
        if ((unint64_t)v18 >= v13 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v27 = v40;
        }

        else
        {
          unsigned int v27 = *v18;
          *((void *)this + 1) = v18 + 1;
        }

        if (v27 <= 3)
        {
          *(_DWORD *)(a1 + 56) |= 8u;
          *(_DWORD *)(a1 + 28) = v27;
        }

        int v28 = (_BYTE *)*((void *)this + 1);
        unint64_t v19 = *((void *)this + 2);
        int v20 = v28 + 1;
        *((void *)this + 1) = v20;
LABEL_59:
        if ((unint64_t)v20 >= v19 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v29 = v40;
          int v30 = (_BYTE *)*((void *)this + 1);
          unint64_t v19 = *((void *)this + 2);
        }

        else
        {
          unsigned int v29 = *v20;
          int v30 = v20 + 1;
          *((void *)this + 1) = v30;
        }

        *(_DWORD *)(a1 + 32) = v29;
        *(_DWORD *)(a1 + 56) |= 0x10u;
        *((void *)this + 1) = v30 + 1;
LABEL_67:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v40) & 1) != 0)
        {
          *(_DWORD *)(a1 + 36) = v40;
          *(_DWORD *)(a1 + 56) |= 0x20u;
          int v31 = (_BYTE *)*((void *)this + 1);
          unint64_t v21 = *((void *)this + 2);
          if ((unint64_t)v31 < v21 && *v31 == 56)
          {
            int v22 = v31 + 1;
            *((void *)this + 1) = v22;
LABEL_71:
            if ((unint64_t)v22 >= v21 || *v22 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
              if (!(_DWORD)result) {
                return result;
              }
              unsigned int v32 = v40;
              unsigned int v33 = (_BYTE *)*((void *)this + 1);
              unint64_t v21 = *((void *)this + 2);
            }

            else
            {
              unsigned int v32 = *v22;
              unsigned int v33 = v22 + 1;
              *((void *)this + 1) = v33;
            }

            *(_BYTE *)(a1 + 40) = v32 != 0;
            *(_DWORD *)(a1 + 56) |= 0x40u;
            if ((unint64_t)v33 < v21 && *v33 == 64)
            {
              BOOL v23 = v33 + 1;
              *((void *)this + 1) = v23;
LABEL_79:
              if ((unint64_t)v23 >= v21 || *v23 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
                if (!(_DWORD)result) {
                  return result;
                }
                unsigned int v34 = v40;
                unsigned int v35 = (_BYTE *)*((void *)this + 1);
                unint64_t v21 = *((void *)this + 2);
              }

              else
              {
                unsigned int v34 = *v23;
                unsigned int v35 = v23 + 1;
                *((void *)this + 1) = v35;
              }

              *(_BYTE *)(a1 + 41) = v34 != 0;
              *(_DWORD *)(a1 + 56) |= 0x80u;
              if ((unint64_t)v35 < v21 && *v35 == 72)
              {
                int v24 = v35 + 1;
                *((void *)this + 1) = v24;
LABEL_87:
                if ((unint64_t)v24 >= v21 || *v24 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v40);
                  if (!(_DWORD)result) {
                    return result;
                  }
                  unsigned int v36 = v40;
                }

                else
                {
                  unsigned int v36 = *v24;
                  *((void *)this + 1) = v24 + 1;
                }

                if (v36 <= 3)
                {
                  *(_DWORD *)(a1 + 56) |= 0x100u;
                  *(_DWORD *)(a1 + 44) = v36;
                }

                int v37 = (_BYTE *)*((void *)this + 1);
                unint64_t v25 = *((void *)this + 2);
                if ((unint64_t)v37 < v25 && *v37 == 80)
                {
                  int v26 = v37 + 1;
                  *((void *)this + 1) = v26;
LABEL_97:
                  if ((unint64_t)v26 >= v25 || *v26 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v40);
                    if (!(_DWORD)result) {
                      return result;
                    }
                    unsigned int v38 = v40;
                    int v39 = (unsigned __int8 *)*((void *)this + 1);
                    unint64_t v25 = *((void *)this + 2);
                  }

                  else
                  {
                    unsigned int v38 = *v26;
                    int v39 = (unsigned __int8 *)(v26 + 1);
                    *((void *)this + 1) = v39;
                  }

                  *(_DWORD *)(a1 + 48) = v38;
                  *(_DWORD *)(a1 + 56) |= 0x200u;
                  if (v39 == (unsigned __int8 *)v25
                    && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                  {
                    *((_DWORD *)this + 8) = 0;
                    uint64_t result = 1LL;
                    *((_BYTE *)this + 36) = 1;
                    return result;
                  }
                }
              }
            }
          }

          continue;
        }

        return 0LL;
      case 5u:
        int v8 = TagFallback & 7;
        int v20 = (char *)*((void *)this + 1);
        unint64_t v19 = *((void *)this + 2);
        goto LABEL_59;
      case 6u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_67;
        }
        goto LABEL_40;
      case 7u:
        int v8 = TagFallback & 7;
        int v22 = (char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        goto LABEL_71;
      case 8u:
        int v8 = TagFallback & 7;
        BOOL v23 = (char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        goto LABEL_79;
      case 9u:
        int v8 = TagFallback & 7;
        int v24 = (char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        goto LABEL_87;
      case 0xAu:
        int v8 = TagFallback & 7;
        int v26 = (char *)*((void *)this + 1);
        unint64_t v25 = *((void *)this + 2);
        goto LABEL_97;
      default:
        int v8 = TagFallback & 7;
LABEL_40:
        if (v8 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001FB664( uint64_t result, unint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 56);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFixed64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(void *)(result + 8),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString(2LL, *(void *)(v5 + 16), a2);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }

uint64_t sub_1001FB7A0(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 56);
  if (!(_BYTE)v3)
  {
    uint64_t v5 = 0LL;
    goto LABEL_40;
  }

  int v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) != 0)
  {
    uint64_t v6 = *(void *)(a1 + 16);
    int v7 = *(unsigned __int8 *)(v6 + 23);
    char v8 = v7;
    uint64_t v9 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      unint64_t v10 = *(unsigned __int8 *)(v6 + 23);
    }
    else {
      unint64_t v10 = v9;
    }
    if (v10 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback( (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10,  a2);
      int v7 = *(unsigned __int8 *)(v6 + 23);
      uint64_t v9 = *(void *)(v6 + 8);
      int v3 = *(_DWORD *)(a1 + 56);
      char v8 = *(_BYTE *)(v6 + 23);
    }

    else
    {
      int v11 = 1;
    }

    if (v8 < 0) {
      int v7 = v9;
    }
    v4 += v11 + v7 + 1;
    if ((v3 & 4) == 0)
    {
LABEL_4:
      if ((v3 & 8) == 0) {
        goto LABEL_5;
      }
LABEL_21:
      int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
      if ((v14 & 0x80000000) != 0)
      {
        int v15 = 11;
      }

      else if (v14 >= 0x80)
      {
        int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 56);
      }

      else
      {
        int v15 = 2;
      }

      v4 += v15;
      if ((v3 & 0x10) == 0) {
        goto LABEL_33;
      }
      goto LABEL_27;
    }
  }

  else if ((v3 & 4) == 0)
  {
    goto LABEL_4;
  }

  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * *(_DWORD *)(a1 + 24)) ^ (*(int *)(a1 + 24) >> 31));
  if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 56);
  }

  else
  {
    int v13 = 2;
  }

  v4 += v13;
  if ((v3 & 8) != 0) {
    goto LABEL_21;
  }
LABEL_5:
  if ((v3 & 0x10) != 0)
  {
LABEL_27:
    unsigned int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if ((v16 & 0x80000000) != 0)
    {
      int v17 = 11;
    }

    else if (v16 >= 0x80)
    {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 56);
    }

    else
    {
      int v17 = 2;
    }

    v4 += v17;
  }

void sub_1001FB97C(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1001FB9C8()
{
  return 1LL;
}

void *sub_1001FB9D0@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.WifiAccessPoint");
}

void sub_1001FB9E0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v10,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  25842LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v10,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 24);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      char v6 = *(_BYTE *)(a2 + 16);
      *(_DWORD *)(a1 + 24) |= 1u;
      *(_BYTE *)(a1 + 16) = v6;
      int v5 = *(_DWORD *)(a2 + 24);
    }

    if ((v5 & 2) != 0)
    {
      *(_DWORD *)(a1 + 24) |= 2u;
      int v7 = *(void **)(a1 + 8);
      if (!v7)
      {
        int v7 = operator new(0x40uLL);
        *int v7 = off_101829AE8;
        v7[1] = 0LL;
        *((_DWORD *)v7 + 14) = 0;
        v7[6] = 0LL;
        *((_DWORD *)v7 + 11) = 0;
        void v7[3] = 0LL;
        v7[4] = 0LL;
        void v7[2] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
        *((_WORD *)v7 + 20) = 0;
        *(void *)(a1 + 8) = v7;
      }

      uint64_t v8 = *(void *)(a2 + 8);
      if (!v8) {
        uint64_t v8 = *(void *)(qword_1019A0D60 + 8);
      }
      sub_1001FADF0((uint64_t)v7, v8);
    }
  }

void sub_1001FBAD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001FBAF0(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_101829B60;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0D60 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1001FBB44(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

uint64_t sub_1001FBB58(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0D60;
  if (!qword_1019A0D60)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0D60;
  }

  return result;
}

_BYTE *sub_1001FBB84()
{
  uint64_t result = operator new(0x20uLL);
  result[16] = 0;
  *(void *)uint64_t result = &off_101829B60;
  *((void *)result + 1) = 0LL;
  *((_DWORD *)result + 5) = 0;
  *((_DWORD *)result + 6) = 0;
  return result;
}

uint64_t sub_1001FBBB0(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(_BYTE *)(result + 24);
  if (v2)
  {
    *(_BYTE *)(result + 16) = 0;
    if ((v2 & 2) != 0)
    {
      uint64_t result = *(void *)(result + 8);
      if (result) {
        uint64_t result = sub_1001FB0B0(result);
      }
    }
  }

  *(_DWORD *)(v1 + 24) = 0;
  return result;
}

uint64_t sub_1001FBBEC( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    do
    {
      while (1)
      {
        int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        if (TagFallback >> 3 == 2)
        {
          int v7 = TagFallback & 7;
          if (v7 == 2)
          {
            int v8 = *(_DWORD *)(a1 + 24);
            goto LABEL_23;
          }
        }

        else
        {
          int v7 = TagFallback & 7;
        }

uint64_t sub_1001FBE3C( uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(unsigned __int8 *)(result + 16),  (BOOL)a2,  a4);
    if ((*(_DWORD *)(v5 + 24) & 2) == 0) {
      return result;
    }
  }

  else if ((v6 & 2) == 0)
  {
    return result;
  }

  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_1019A0D60 + 8);
  }
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v7,  a2,  a4);
}

uint64_t sub_1001FBEA8(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 24);
  if ((_BYTE)v3)
  {
    uint64_t v4 = 2 * (v3 & 1u);
    if ((v3 & 2) != 0)
    {
      uint64_t v5 = *(void *)(a1 + 8);
      if (!v5) {
        uint64_t v5 = *(void *)(qword_1019A0D60 + 8);
      }
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001FB7A0(v5, a2);
      int v8 = (int)v6;
      else {
        int v9 = 1;
      }
      uint64_t v4 = (v4 | 1) + v8 + v9;
    }
  }

  else
  {
    uint64_t v4 = 0LL;
  }

  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_1001FBF30(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1001FBF7C()
{
  return 1LL;
}

void *sub_1001FBF84@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.WifiAssociationState");
}

double sub_1001FBF94(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v17,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  26052LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v17,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v16, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16),  *(_DWORD *)(a2 + 24) + *(_DWORD *)(a1 + 24));
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v6 = 0LL;
    do
    {
      uint64_t v7 = *(void *)(*(void *)(a2 + 16) + 8 * v6);
      int v8 = *(_DWORD *)(a1 + 28);
      uint64_t v9 = *(int *)(a1 + 24);
      if ((int)v9 >= v8)
      {
        if (v8 == *(_DWORD *)(a1 + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16),  v8 + 1);
          int v8 = *(_DWORD *)(a1 + 28);
        }

        *(_DWORD *)(a1 + 28) = v8 + 1;
        unsigned int v11 = operator new(0x40uLL);
        *unsigned int v11 = off_101829AE8;
        v11[1] = 0LL;
        *((_DWORD *)v11 + 14) = 0;
        v11[6] = 0LL;
        *((_DWORD *)v11 + 11) = 0;
        v11[3] = 0LL;
        v11[4] = 0LL;
        void v11[2] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
        *((_WORD *)v11 + 20) = 0;
        uint64_t v12 = *(void *)(a1 + 16);
        uint64_t v13 = *(int *)(a1 + 24);
        *(_DWORD *)(a1 + 24) = v13 + 1;
        *(void *)(v12 + 8 * v13) = v11;
      }

      else
      {
        uint64_t v10 = *(void *)(a1 + 16);
        *(_DWORD *)(a1 + 24) = v9 + 1;
        unsigned int v11 = *(void **)(v10 + 8 * v9);
      }

      sub_1001FADF0((uint64_t)v11, v7);
      ++v6;
    }

    while (v6 < *(int *)(a2 + 24));
  }

  if ((*(_BYTE *)(a2 + 44) & 1) != 0)
  {
    *(_DWORD *)(a1 + 44) |= 1u;
    int v14 = *(char **)(a1 + 8);
    if (!v14)
    {
      int v14 = (char *)operator new(0x28uLL);
      *(void *)int v14 = off_101827B80;
      *(_OWORD *)(v14 + 8) = 0u;
      *(_OWORD *)(v14 + 24) = 0u;
      *(void *)(a1 + 8) = v14;
    }

    uint64_t v15 = *(void *)(a2 + 8);
    if (!v15) {
      uint64_t v15 = *(void *)(qword_1019A0D68 + 8);
    }
    return sub_1001D323C((uint64_t)v14, v15);
  }

  return result;
}

void sub_1001FC148(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001FC160(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101829BD8;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0D68 != a1)
  {
    uint64_t v2 = *((void *)a1 + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  sub_10008D0EC((uint64_t)a1 + 16);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001FC1C0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

uint64_t sub_1001FC1D4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0D68;
  if (!qword_1019A0D68)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0D68;
  }

  return result;
}

void *sub_1001FC200()
{
  uint64_t result = operator new(0x30uLL);
  result[5] = 0LL;
  *uint64_t result = off_101829BD8;
  result[1] = 0LL;
  result[2] = 0LL;
  result[3] = 0LL;
  *((_DWORD *)result + 8) = 0;
  return result;
}

uint64_t sub_1001FC230(uint64_t result)
{
  uint64_t v1 = result;
  if ((*(_BYTE *)(result + 44) & 1) != 0)
  {
    uint64_t v2 = *(void *)(result + 8);
    if (v2)
    {
      if (*(_BYTE *)(v2 + 36))
      {
        *(void *)(v2 + 8) = 0LL;
        *(void *)(v2 + 16) = 0LL;
        *(void *)(v2 + 24) = 0LL;
      }

      *(_DWORD *)(v2 + 36) = 0;
    }
  }

  if (*(int *)(result + 24) >= 1)
  {
    uint64_t v3 = 0LL;
    do
    {
      uint64_t v4 = *(void *)(*(void *)(v1 + 16) + 8 * v3);
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 32LL))(v4);
      ++v3;
    }

    while (v3 < *(int *)(v1 + 24));
  }

  *(_DWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 44) = 0;
  return result;
}

uint64_t sub_1001FC2AC( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = (char *)*((void *)this + 1);
        if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((void *)this + 1) = v6 + 1;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_18;
        }
        *(_DWORD *)(a1 + 44) |= 1u;
        uint64_t v9 = *(char **)(a1 + 8);
        if (!v9)
        {
          uint64_t v9 = (char *)operator new(0x28uLL);
          *(void *)uint64_t v9 = off_101827B80;
          *(_OWORD *)(v9 + 8) = 0u;
          *(_OWORD *)(v9 + 24) = 0u;
          *(void *)(a1 + 8) = v9;
        }

        uint64_t v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v34)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v34 = *v10;
          *((void *)this + 1) = v10 + 1;
        }

        int v11 = *((_DWORD *)this + 14);
        int v12 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v11 + 1;
        if (v11 >= v12) {
          return 0LL;
        }
        int v13 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v13);
        int v15 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v15, 1);
        int v17 = v15 - 1;
        if (v17 < 0 == v16) {
          *((_DWORD *)this + 14) = v17;
        }
        int v18 = (_BYTE *)*((void *)this + 1);
      }

      int v8 = TagFallback & 7;
      if (v8 != 2) {
        goto LABEL_18;
      }
      while (1)
      {
        int v19 = *(_DWORD *)(a1 + 28);
        uint64_t v20 = *(int *)(a1 + 24);
        if ((int)v20 >= v19)
        {
          if (v19 == *(_DWORD *)(a1 + 32))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v19 + 1);
            int v19 = *(_DWORD *)(a1 + 28);
          }

          *(_DWORD *)(a1 + 28) = v19 + 1;
          int v22 = operator new(0x40uLL);
          *int v22 = off_101829AE8;
          v22[1] = 0LL;
          *((_DWORD *)v22 + 14) = 0;
          v22[6] = 0LL;
          *((_DWORD *)v22 + 11) = 0;
          v22[3] = 0LL;
          v22[4] = 0LL;
          v22[2] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
          *((_WORD *)v22 + 20) = 0;
          uint64_t v23 = *(void *)(a1 + 16);
          uint64_t v24 = *(int *)(a1 + 24);
          *(_DWORD *)(a1 + 24) = v24 + 1;
          *(void *)(v23 + 8 * v24) = v22;
        }

        else
        {
          uint64_t v21 = *(void *)(a1 + 16);
          *(_DWORD *)(a1 + 24) = v20 + 1;
          int v22 = *(void **)(v21 + 8 * v20);
        }

        unint64_t v25 = (char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v35)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v35 = *v25;
          *((void *)this + 1) = v25 + 1;
        }

        int v26 = *((_DWORD *)this + 14);
        int v27 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v26 + 1;
        if (v26 >= v27) {
          return 0LL;
        }
        int v28 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v35);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v28);
        int v30 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v30, 1);
        int v31 = v30 - 1;
        if (v31 < 0 == v16) {
          *((_DWORD *)this + 14) = v31;
        }
        int v18 = (_BYTE *)*((void *)this + 1);
        unsigned int v32 = (_BYTE *)*((void *)this + 2);
        if (v18 >= v32 || *v18 != 18) {
          break;
        }
LABEL_29:
        *((void *)this + 1) = v18 + 1;
      }

      if (v18 == v32 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }

    int v8 = TagFallback & 7;
LABEL_18:
    if (v8 == 4) {
      return 1LL;
    }
  }

uint64_t sub_1001FC5E0( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if ((*(_BYTE *)(result + 44) & 1) != 0)
  {
    uint64_t v6 = *(void *)(result + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1019A0D68 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v6,  a2,  a4);
  }

  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0LL;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(void *)(*(void *)(v5 + 16) + 8 * v7++),  a2,  a4);
    while (v7 < *(int *)(v5 + 24));
  }

  return result;
}

uint64_t sub_1001FC664(uint64_t a1, unsigned int a2)
{
  if ((*(_BYTE *)(a1 + 44) & 1) != 0)
  {
    uint64_t v4 = *(void *)(a1 + 8);
    if (!v4) {
      uint64_t v4 = *(void *)(qword_1019A0D68 + 8);
    }
    int v5 = *(unsigned __int8 *)(v4 + 36);
    if (*(_BYTE *)(v4 + 36))
    {
      int v6 = (v5 << 31 >> 31) & 9;
      if ((v5 & 2) != 0) {
        v6 += 9;
      }
      if ((v5 & 4) != 0) {
        int v5 = v6 + 9;
      }
      else {
        int v5 = v6;
      }
    }

    *(_DWORD *)(v4 + 32) = v5;
    int v3 = v5 + 2;
  }

  else
  {
    int v3 = 0;
  }

  int v7 = *(_DWORD *)(a1 + 24);
  uint64_t v8 = (v7 + v3);
  if (v7 >= 1)
  {
    uint64_t v9 = 0LL;
    do
    {
      uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001FB7A0( *(void *)(*(void *)(a1 + 16) + 8 * v9),  a2);
      int v11 = (int)v10;
      else {
        int v12 = 1;
      }
      uint64_t v8 = (v11 + v8 + v12);
      ++v9;
    }

    while (v9 < *(int *)(a1 + 24));
  }

  *(_DWORD *)(a1 + 40) = v8;
  return v8;
}

double sub_1001FC73C(uint64_t a1, void *lpsrc)
{
  return sub_1001FBF94(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001FC788()
{
  return 1LL;
}

void *sub_1001FC790@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.WifiScanResult");
}

void sub_1001FC7A0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v21,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  26555LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v21,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v20, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v21);
  }

  int v5 = *(_DWORD *)(a2 + 56);
  if (!(_BYTE)v5) {
    goto LABEL_13;
  }
  if ((v5 & 1) != 0)
  {
    *(_DWORD *)(a1 + 56) |= 1u;
    uint64_t v8 = *(char **)(a1 + 8);
    if (!v8)
    {
      uint64_t v8 = (char *)operator new(0x28uLL);
      *(void *)uint64_t v8 = off_101827B80;
      *(_OWORD *)(v8 + 8) = 0u;
      *(_OWORD *)(v8 + 24) = 0u;
      *(void *)(a1 + 8) = v8;
    }

    uint64_t v9 = *(void *)(a2 + 8);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_1019A0D70 + 8);
    }
    sub_1001D323C((uint64_t)v8, v9);
    int v5 = *(_DWORD *)(a2 + 56);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_25;
    }
  }

  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }

  int v10 = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 56) |= 2u;
  *(_DWORD *)(a1 + 16) = v10;
  int v5 = *(_DWORD *)(a2 + 56);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_27;
  }

void sub_1001FCA44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void *sub_1001FCA5C(void *result)
{
  if ((void *)qword_1019A0D70 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    uint64_t v3 = v1[3];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
    }
    uint64_t result = (void *)v1[4];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_1001FCACC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101829C50;
  sub_1001FCA5C(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001FCAFC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101829C50;
  sub_1001FCA5C(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v2);
}

uint64_t sub_1001FCB30(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0D70;
  if (!qword_1019A0D70)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0D70;
  }

  return result;
}

double sub_1001FCB5C()
{
  unsigned __int8 v0 = (char *)operator new(0x40uLL);
  *(void *)unsigned __int8 v0 = off_101829C50;
  *((_DWORD *)v0 + 13) = 0;
  *((_DWORD *)v0 + 14) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 33) = 0u;
  return result;
}

uint64_t sub_1001FCB94(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 56);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      uint64_t v3 = *(void *)(result + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0LL;
          *(void *)(v3 + 16) = 0LL;
          *(void *)(v3 + 24) = 0LL;
        }

        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(result + 56);
      }
    }

    *(void *)(result + 16) = 0LL;
    *(_DWORD *)(result + 40) = 0;
    *(_BYTE *)(result + 44) = 0;
    if ((v2 & 0x20) != 0)
    {
      double result = *(void *)(result + 24);
      if (result)
      {
        double result = sub_1001FBBB0(result);
        int v2 = *(_DWORD *)(v1 + 56);
      }
    }

    if ((v2 & 0x40) != 0)
    {
      double result = *(void *)(v1 + 32);
      if (result)
      {
        double result = sub_1001FC230(result);
        int v2 = *(_DWORD *)(v1 + 56);
      }
    }

    *(_BYTE *)(v1 + 45) = 0;
  }

  if ((v2 & 0xFF00) != 0)
  {
    *(_WORD *)(v1 + 46) = 0;
    *(_BYTE *)(v1 + 48) = 0;
  }

  *(_DWORD *)(v1 + 56) = 0;
  return result;
}

uint64_t sub_1001FCC2C( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 56) |= 1u;
        uint64_t v8 = *(char **)(a1 + 8);
        if (!v8)
        {
          uint64_t v8 = (char *)operator new(0x28uLL);
          *(void *)uint64_t v8 = off_101827B80;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *(void *)(a1 + 8) = v8;
        }

        uint64_t v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v66)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v66 = *v9;
          *((void *)this + 1) = v9 + 1;
        }

        int v23 = *((_DWORD *)this + 14);
        int v24 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v23 + 1;
        if (v23 >= v24) {
          return 0LL;
        }
        int v25 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v66);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v25);
        int v27 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v27, 1);
        int v29 = v27 - 1;
        if (v29 < 0 == v28) {
          *((_DWORD *)this + 14) = v29;
        }
        int v30 = (_BYTE *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        unsigned int v11 = v30 + 1;
        *((void *)this + 1) = v11;
        goto LABEL_46;
      case 2u:
        int v7 = TagFallback & 7;
        unsigned int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_46:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v66);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v31 = v66;
          unsigned int v32 = (_BYTE *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }

        else
        {
          unsigned int v31 = *v11;
          unsigned int v32 = v11 + 1;
          *((void *)this + 1) = v32;
        }

        *(_DWORD *)(a1 + 16) = v31;
        *(_DWORD *)(a1 + 56) |= 2u;
        unsigned int v12 = v32 + 1;
        *((void *)this + 1) = v12;
LABEL_54:
        if ((unint64_t)v12 >= v10 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v66);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v34 = v66;
        }

        else
        {
          unsigned int v34 = *v12;
          *((void *)this + 1) = v12 + 1;
        }

        if (v34 <= 0xE)
        {
          *(_DWORD *)(a1 + 56) |= 4u;
          *(_DWORD *)(a1 + 20) = v34;
        }

        unsigned int v35 = (_BYTE *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        unsigned int v14 = v35 + 1;
        *((void *)this + 1) = v14;
LABEL_64:
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v66);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v36 = v66;
        }

        else
        {
          unsigned int v36 = *v14;
          *((void *)this + 1) = v14 + 1;
        }

        if (v36 <= 0xE)
        {
          *(_DWORD *)(a1 + 56) |= 8u;
          *(_DWORD *)(a1 + 40) = v36;
        }

        int v37 = (_BYTE *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        BOOL v16 = v37 + 1;
        *((void *)this + 1) = v16;
LABEL_74:
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v66);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v38 = v66;
          int v39 = (_BYTE *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }

        else
        {
          unsigned int v38 = *v16;
          int v39 = v16 + 1;
          *((void *)this + 1) = v39;
        }

        *(_BYTE *)(a1 + 44) = v38 != 0;
        int v17 = *(_DWORD *)(a1 + 56) | 0x10;
        *(_DWORD *)(a1 + 56) = v17;
        *((void *)this + 1) = v39 + 1;
LABEL_82:
        *(_DWORD *)(a1 + 56) = v17 | 0x20;
        unsigned int v40 = *(_BYTE **)(a1 + 24);
        if (!v40)
        {
          unsigned int v40 = operator new(0x20uLL);
          v40[16] = 0;
          *(void *)unsigned int v40 = &off_101829B60;
          *((void *)v40 + 1) = 0LL;
          *((_DWORD *)v40 + 5) = 0;
          *((_DWORD *)v40 + 6) = 0;
          *(void *)(a1 + 24) = v40;
        }

        int v41 = (char *)*((void *)this + 1);
        if ((unint64_t)v41 >= *((void *)this + 2) || *v41 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v66)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v66 = *v41;
          *((void *)this + 1) = v41 + 1;
        }

        int v42 = *((_DWORD *)this + 14);
        int v43 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v42 + 1;
        if (v42 >= v43) {
          return 0LL;
        }
        int v44 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v66);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v44);
        int v46 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v46, 1);
        int v47 = v46 - 1;
        if (v47 < 0 == v28) {
          *((_DWORD *)this + 14) = v47;
        }
        unsigned int v48 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v48 + 1;
LABEL_96:
        *(_DWORD *)(a1 + 56) |= 0x40u;
        int v49 = *(void **)(a1 + 32);
        if (!v49)
        {
          int v49 = operator new(0x30uLL);
          v49[5] = 0LL;
          *int v49 = off_101829BD8;
          v49[1] = 0LL;
          v49[2] = 0LL;
          v49[3] = 0LL;
          *((_DWORD *)v49 + 8) = 0;
          *(void *)(a1 + 32) = v49;
        }

        int v50 = (char *)*((void *)this + 1);
        if ((unint64_t)v50 >= *((void *)this + 2) || *v50 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v66)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v66 = *v50;
          *((void *)this + 1) = v50 + 1;
        }

        int v51 = *((_DWORD *)this + 14);
        int v52 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v51 + 1;
        if (v51 < v52)
        {
          int v53 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v66);
          if (sub_1001FC2AC((uint64_t)v49, this, v54))
          {
            if (*((_BYTE *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v53);
              int v55 = *((_DWORD *)this + 14);
              BOOL v28 = __OFSUB__(v55, 1);
              int v56 = v55 - 1;
              if (v56 < 0 == v28) {
                *((_DWORD *)this + 14) = v56;
              }
              int v57 = (_BYTE *)*((void *)this + 1);
              unint64_t v18 = *((void *)this + 2);
              if ((unint64_t)v57 < v18 && *v57 == 64)
              {
                char v19 = v57 + 1;
                *((void *)this + 1) = v19;
LABEL_110:
                if ((unint64_t)v19 >= v18 || *v19 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v66);
                  if (!(_DWORD)result) {
                    return result;
                  }
                  unsigned int v58 = v66;
                  unsigned int v59 = (_BYTE *)*((void *)this + 1);
                  unint64_t v18 = *((void *)this + 2);
                }

                else
                {
                  unsigned int v58 = *v19;
                  unsigned int v59 = v19 + 1;
                  *((void *)this + 1) = v59;
                }

                *(_BYTE *)(a1 + 45) = v58 != 0;
                *(_DWORD *)(a1 + 56) |= 0x80u;
                if ((unint64_t)v59 < v18 && *v59 == 72)
                {
                  char v20 = v59 + 1;
                  *((void *)this + 1) = v20;
LABEL_118:
                  if ((unint64_t)v20 >= v18 || *v20 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v66);
                    if (!(_DWORD)result) {
                      return result;
                    }
                    unsigned int v60 = v66;
                    unsigned int v61 = (_BYTE *)*((void *)this + 1);
                    unint64_t v18 = *((void *)this + 2);
                  }

                  else
                  {
                    unsigned int v60 = *v20;
                    unsigned int v61 = v20 + 1;
                    *((void *)this + 1) = v61;
                  }

                  *(_BYTE *)(a1 + 46) = v60 != 0;
                  *(_DWORD *)(a1 + 56) |= 0x100u;
                  if ((unint64_t)v61 < v18 && *v61 == 80)
                  {
                    uint64_t v21 = v61 + 1;
                    *((void *)this + 1) = v21;
LABEL_126:
                    if ((unint64_t)v21 >= v18 || *v21 < 0)
                    {
                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v66);
                      if (!(_DWORD)result) {
                        return result;
                      }
                      unsigned int v62 = v66;
                      int v63 = (_BYTE *)*((void *)this + 1);
                      unint64_t v18 = *((void *)this + 2);
                    }

                    else
                    {
                      unsigned int v62 = *v21;
                      int v63 = v21 + 1;
                      *((void *)this + 1) = v63;
                    }

                    *(_BYTE *)(a1 + 47) = v62 != 0;
                    *(_DWORD *)(a1 + 56) |= 0x200u;
                    if ((unint64_t)v63 < v18 && *v63 == 88)
                    {
                      int v22 = v63 + 1;
                      *((void *)this + 1) = v22;
LABEL_134:
                      if ((unint64_t)v22 >= v18 || *v22 < 0)
                      {
                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v66);
                        if (!(_DWORD)result) {
                          return result;
                        }
                        unsigned int v64 = v66;
                        unsigned int v65 = (unsigned __int8 *)*((void *)this + 1);
                        unint64_t v18 = *((void *)this + 2);
                      }

                      else
                      {
                        unsigned int v64 = *v22;
                        unsigned int v65 = (unsigned __int8 *)(v22 + 1);
                        *((void *)this + 1) = v65;
                      }

                      *(_BYTE *)(a1 + 48) = v64 != 0;
                      *(_DWORD *)(a1 + 56) |= 0x400u;
                      if (v65 == (unsigned __int8 *)v18
                        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                      {
                        *((_DWORD *)this + 8) = 0;
                        uint64_t result = 1LL;
                        *((_BYTE *)this + 36) = 1;
                        return result;
                      }
                    }
                  }
                }
              }

              continue;
            }
          }
        }

        return 0LL;
      case 3u:
        int v7 = TagFallback & 7;
        unsigned int v12 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_54;
      case 4u:
        int v7 = TagFallback & 7;
        unsigned int v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_64;
      case 5u:
        int v7 = TagFallback & 7;
        BOOL v16 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_74;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_33;
        }
        int v17 = *(_DWORD *)(a1 + 56);
        goto LABEL_82;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_96;
        }
        goto LABEL_33;
      case 8u:
        int v7 = TagFallback & 7;
        char v19 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_110;
      case 9u:
        int v7 = TagFallback & 7;
        char v20 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_118;
      case 0xAu:
        int v7 = TagFallback & 7;
        uint64_t v21 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_126;
      case 0xBu:
        int v7 = TagFallback & 7;
        int v22 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_134;
      default:
        int v7 = TagFallback & 7;
LABEL_33:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001FD3D8( uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 56);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0D70 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(_DWORD *)(v5 + 16),  (int)a2,  a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }

uint64_t sub_1001FD560(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 56);
  if (!(_BYTE)v3)
  {
    unsigned int v5 = 0;
    goto LABEL_55;
  }

  if ((v3 & 1) == 0)
  {
    int v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }

  uint64_t v6 = *(void *)(a1 + 8);
  if (!v6) {
    uint64_t v6 = *(void *)(qword_1019A0D70 + 8);
  }
  int v7 = *(unsigned __int8 *)(v6 + 36);
  if (*(_BYTE *)(v6 + 36))
  {
    int v8 = (v7 << 31 >> 31) & 9;
    if ((v7 & 2) != 0) {
      v8 += 9;
    }
    if ((v7 & 4) != 0) {
      int v7 = v8 + 9;
    }
    else {
      int v7 = v8;
    }
  }

  *(_DWORD *)(v6 + 32) = v7;
  int v4 = v7 + 2;
  int v3 = *(_DWORD *)(a1 + 56);
  if ((v3 & 2) != 0)
  {
LABEL_15:
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if ((v9 & 0x80000000) != 0)
    {
      int v10 = 11;
    }

    else if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 56);
    }

    else
    {
      int v10 = 2;
    }

    v4 += v10;
  }

void sub_1001FD770(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1001FD7BC()
{
  return 1LL;
}

void *sub_1001FD7C4@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.WifiNotification");
}

void sub_1001FD7D4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v12,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  26911LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v12,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 36) & 1) != 0)
    {
      *(_DWORD *)(a1 + 36) |= 1u;
      uint64_t v6 = *(char **)(a1 + 8);
      if (!v6)
      {
        uint64_t v6 = (char *)operator new(0x28uLL);
        *(void *)uint64_t v6 = off_101827B80;
        *(_OWORD *)(v6 + 8) = 0u;
        *(_OWORD *)(v6 + 24) = 0u;
        *(void *)(a1 + 8) = v6;
      }

      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_1019A0D78 + 8);
      }
      sub_1001D323C((uint64_t)v6, v7);
      int v5 = *(_DWORD *)(a2 + 36);
    }

    if ((v5 & 2) != 0)
    {
      unsigned int v8 = *(_DWORD *)(a2 + 24);
      if (v8 >= 4) {
        sub_10123029C();
      }
      *(_DWORD *)(a1 + 36) |= 2u;
      *(_DWORD *)(a1 + 24) = v8;
      int v5 = *(_DWORD *)(a2 + 36);
    }

    if ((v5 & 4) != 0)
    {
      uint64_t v9 = *(void *)(a2 + 16);
      *(_DWORD *)(a1 + 36) |= 4u;
      *(void *)(a1 + 16) = v9;
      int v5 = *(_DWORD *)(a2 + 36);
    }

    if ((v5 & 8) != 0)
    {
      unsigned int v10 = *(_DWORD *)(a2 + 28);
      if (v10 >= 4) {
        sub_101230274();
      }
      *(_DWORD *)(a1 + 36) |= 8u;
      *(_DWORD *)(a1 + 28) = v10;
    }
  }

void sub_1001FD908(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001FD920(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_101829CC8;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0D78 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1001FD974(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

uint64_t sub_1001FD988(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0D78;
  if (!qword_1019A0D78)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0D78;
  }

  return result;
}

double sub_1001FD9B4()
{
  unsigned __int8 v0 = (char *)operator new(0x28uLL);
  *(void *)unsigned __int8 v0 = &off_101829CC8;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  return result;
}

uint64_t sub_1001FD9E4(uint64_t result)
{
  if (*(_BYTE *)(result + 36))
  {
    if ((*(_BYTE *)(result + 36) & 1) != 0)
    {
      uint64_t v1 = *(void *)(result + 8);
      if (v1)
      {
        if (*(_BYTE *)(v1 + 36))
        {
          *(void *)(v1 + 8) = 0LL;
          *(void *)(v1 + 16) = 0LL;
          *(void *)(v1 + 24) = 0LL;
        }

        *(_DWORD *)(v1 + 36) = 0;
      }
    }

    *(void *)(result + 16) = 0LL;
    *(void *)(result + 24) = 0LL;
  }

  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_1001FDA18( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_19;
        }
        *(_DWORD *)(a1 + 36) |= 1u;
        unsigned int v8 = *(char **)(a1 + 8);
        if (!v8)
        {
          unsigned int v8 = (char *)operator new(0x28uLL);
          *(void *)unsigned int v8 = off_101827B80;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *(void *)(a1 + 8) = v8;
        }

        uint64_t v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v27)) {
            return 0LL;
          }
        }

        else
        {
          v27[0] = *v9;
          *((void *)this + 1) = v9 + 1;
        }

        int v14 = *((_DWORD *)this + 14);
        int v15 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v14 + 1;
        if (v14 >= v15) {
          return 0LL;
        }
        int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
        int v18 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v18, 1);
        int v20 = v18 - 1;
        if (v20 < 0 == v19) {
          *((_DWORD *)this + 14) = v20;
        }
        uint64_t v21 = (_BYTE *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        char v11 = v21 + 1;
        *((void *)this + 1) = v11;
        goto LABEL_32;
      case 2u:
        int v7 = TagFallback & 7;
        char v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_32:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v27);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v22 = v27[0];
        }

        else
        {
          unsigned int v22 = *v11;
          *((void *)this + 1) = v11 + 1;
        }

        if (v22 <= 3)
        {
          *(_DWORD *)(a1 + 36) |= 2u;
          *(_DWORD *)(a1 + 24) = v22;
        }

        int v24 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v24 + 1;
LABEL_42:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v27) & 1) != 0)
        {
          *(void *)(a1 + 16) = *(void *)v27;
          *(_DWORD *)(a1 + 36) |= 4u;
          unsigned int v25 = (_BYTE *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          if ((unint64_t)v25 < v12 && *v25 == 32)
          {
            unint64_t v13 = v25 + 1;
            *((void *)this + 1) = v13;
LABEL_46:
            if ((unint64_t)v13 >= v12 || *v13 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v27);
              if (!(_DWORD)result) {
                return result;
              }
              unsigned int v26 = v27[0];
            }

            else
            {
              unsigned int v26 = *v13;
              *((void *)this + 1) = v13 + 1;
            }

            if (v26 <= 3)
            {
              *(_DWORD *)(a1 + 36) |= 8u;
              *(_DWORD *)(a1 + 28) = v26;
            }

            if (*((void *)this + 1) == *((void *)this + 2)
              && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              uint64_t result = 1LL;
              *((_BYTE *)this + 36) = 1;
              return result;
            }
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_42;
        }
        goto LABEL_19;
      case 4u:
        int v7 = TagFallback & 7;
        unint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_46;
      default:
        int v7 = TagFallback & 7;
LABEL_19:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1001FDD3C( uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0D78 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(_DWORD *)(v5 + 24),  (int)a2,  a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      return result;
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  *(_DWORD *)(v5 + 28),  (int)a2,  a4);
  }

uint64_t sub_1001FDDE0(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 36);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0LL;
    goto LABEL_31;
  }

  if ((*(_BYTE *)(a1 + 36) & 1) != 0)
  {
    uint64_t v5 = *(void *)(a1 + 8);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_1019A0D78 + 8);
    }
    int v6 = *(unsigned __int8 *)(v5 + 36);
    if (*(_BYTE *)(v5 + 36))
    {
      int v7 = (v6 << 31 >> 31) & 9;
      if ((v6 & 2) != 0) {
        v7 += 9;
      }
      if ((v6 & 4) != 0) {
        int v6 = v7 + 9;
      }
      else {
        int v6 = v7;
      }
    }

    *(_DWORD *)(v5 + 32) = v6;
    LODWORD(v4) = v6 + 2;
    int v3 = *(_DWORD *)(a1 + 36);
    if ((v3 & 2) == 0) {
      goto LABEL_21;
    }
  }

  else
  {
    LODWORD(v4) = 0;
    if ((*(_BYTE *)(a1 + 36) & 2) == 0) {
      goto LABEL_21;
    }
  }

  unsigned int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if ((v8 & 0x80000000) != 0)
  {
    int v9 = 11;
  }

  else if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 36);
  }

  else
  {
    int v9 = 2;
  }

  LODWORD(v4) = v9 + v4;
LABEL_21:
  if ((v3 & 4) != 0) {
    uint64_t v4 = (v4 + 9);
  }
  else {
    uint64_t v4 = v4;
  }
  if ((v3 & 8) != 0)
  {
    unint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if ((v10 & 0x80000000) != 0)
    {
      int v11 = 11;
    }

    else if (v10 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    }

    else
    {
      int v11 = 2;
    }

    uint64_t v4 = (v11 + v4);
  }

void sub_1001FDEE0(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1001FDF2C()
{
  return 1LL;
}

void *sub_1001FDF34@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.GnssAvailabilityPrediction");
}

double sub_1001FDF44(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v8,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  27117LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v8,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v7, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 28);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 28) & 1) != 0)
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 28) |= 1u;
      *(double *)(a1 + 8) = result;
      int v6 = *(_DWORD *)(a2 + 28);
    }

    if ((v6 & 2) != 0)
    {
      double result = *(double *)(a2 + 16);
      *(_DWORD *)(a1 + 28) |= 2u;
      *(double *)(a1 + 16) = result;
    }
  }

  return result;
}

void sub_1001FDFEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001FE004(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101829D40;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001FE014(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101829D40;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

void *sub_1001FE034()
{
  double result = operator new(0x20uLL);
  *double result = off_101829D40;
  result[1] = 0LL;
  result[2] = 0LL;
  result[3] = 0LL;
  return result;
}

uint64_t sub_1001FE05C(uint64_t result)
{
  if (*(_BYTE *)(result + 28))
  {
    *(void *)(result + 8) = 0LL;
    *(void *)(result + 16) = 0LL;
  }

  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_1001FE070( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
          *((_DWORD *)this + 8) = (_DWORD)TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_21;
        }
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v10) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 8) = v10;
        *(_DWORD *)(a1 + 28) |= 1u;
        unsigned int v8 = (_BYTE *)*((void *)this + 1);
        if ((unint64_t)v8 < *((void *)this + 2) && *v8 == 17)
        {
          *((void *)this + 1) = v8 + 1;
          goto LABEL_15;
        }
      }

      if (TagFallback >> 3 != 2)
      {
        int v7 = TagFallback & 7;
        goto LABEL_21;
      }

      int v7 = TagFallback & 7;
      if (v7 == 1) {
        break;
      }
LABEL_21:
      if (v7 == 4) {
        return 1LL;
      }
    }

uint64_t sub_1001FE1CC( uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 28);
  if ((v5 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  a2,  *(double *)(result + 8),  a3);
    int v5 = *(_DWORD *)(v4 + 28);
  }

  if ((v5 & 2) != 0) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  a2,  *(double *)(v4 + 16),  a3);
  }
  return result;
}

uint64_t sub_1001FE224(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 28);
  if (*(_BYTE *)(a1 + 28))
  {
    unsigned int v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }

  *(_DWORD *)(a1 + 24) = v1;
  return v1;
}

double sub_1001FE250(uint64_t a1, void *lpsrc)
{
  return sub_1001FDF44(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001FE29C()
{
  return 1LL;
}

void *sub_1001FE2A4@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.GEOLocationCoordinate2D");
}

double sub_1001FE2B4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v17,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  27492LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v17,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v16, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 8),  *(_DWORD *)(a2 + 16) + *(_DWORD *)(a1 + 16));
  if (*(int *)(a2 + 16) >= 1)
  {
    uint64_t v6 = 0LL;
    do
    {
      uint64_t v7 = *(void *)(*(void *)(a2 + 8) + 8 * v6);
      int v8 = *(_DWORD *)(a1 + 20);
      uint64_t v9 = *(int *)(a1 + 16);
      if ((int)v9 >= v8)
      {
        if (v8 == *(_DWORD *)(a1 + 24))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 8),  v8 + 1);
          int v8 = *(_DWORD *)(a1 + 20);
        }

        *(_DWORD *)(a1 + 20) = v8 + 1;
        int v11 = operator new(0x20uLL);
        *int v11 = off_101829D40;
        v11[1] = 0LL;
        void v11[2] = 0LL;
        v11[3] = 0LL;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = *(int *)(a1 + 16);
        *(_DWORD *)(a1 + 16) = v13 + 1;
        *(void *)(v12 + 8 * v13) = v11;
      }

      else
      {
        uint64_t v10 = *(void *)(a1 + 8);
        *(_DWORD *)(a1 + 16) = v9 + 1;
        int v11 = *(void **)(v10 + 8 * v9);
      }

      double result = sub_1001FDF44((uint64_t)v11, v7);
      ++v6;
    }

    while (v6 < *(int *)(a2 + 16));
  }

  int v14 = *(_DWORD *)(a2 + 88);
  if ((v14 & 0x1FE) != 0)
  {
    if ((v14 & 2) != 0)
    {
      double result = *(double *)(a2 + 32);
      *(_DWORD *)(a1 + 88) |= 2u;
      *(double *)(a1 + 32) = result;
      int v14 = *(_DWORD *)(a2 + 88);
      if ((v14 & 4) == 0)
      {
LABEL_14:
        if ((v14 & 8) == 0) {
          goto LABEL_15;
        }
        goto LABEL_23;
      }
    }

    else if ((v14 & 4) == 0)
    {
      goto LABEL_14;
    }

    double result = *(double *)(a2 + 40);
    *(_DWORD *)(a1 + 88) |= 4u;
    *(double *)(a1 + 40) = result;
    int v14 = *(_DWORD *)(a2 + 88);
    if ((v14 & 8) == 0)
    {
LABEL_15:
      if ((v14 & 0x10) == 0) {
        goto LABEL_16;
      }
      goto LABEL_24;
    }

void sub_1001FE4D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001FE4EC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101829DB8;
  sub_10008D0EC((uint64_t)a1 + 8);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001FE524(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

double sub_1001FE538()
{
  unsigned __int8 v0 = operator new(0x60uLL);
  v0[1] = 0LL;
  v0[2] = 0LL;
  void *v0 = off_101829DB8;
  *((_DWORD *)v0 + 6) = 0;
  *((_DWORD *)v0 + 21) = 0;
  *((_DWORD *)v0 + 22) = 0;
  double result = 0.0;
  *((_OWORD *)v0 + 2) = 0u;
  *((_OWORD *)v0 + 3) = 0u;
  *((_OWORD *)v0 + 4) = 0u;
  *((_BYTE *)v0 + 80) = 0;
  return result;
}

uint64_t sub_1001FE578(uint64_t result)
{
  uint64_t v1 = result;
  if ((*(_WORD *)(result + 88) & 0x1FE) != 0)
  {
    *(_BYTE *)(result + 80) = 0;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 32) = 0u;
  }

  if (*(int *)(result + 16) >= 1)
  {
    uint64_t v2 = 0LL;
    do
    {
      uint64_t v3 = *(void *)(*(void *)(v1 + 8) + 8 * v2);
      double result = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 32LL))(v3);
      ++v2;
    }

    while (v2 < *(int *)(v1 + 16));
  }

  *(_DWORD *)(v1 + 16) = 0;
  *(_DWORD *)(v1 + 88) = 0;
  return result;
}

uint64_t sub_1001FE5EC( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 8);
LABEL_2:
  while (2)
  {
    uint64_t v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_49;
        }
        while (1)
        {
          int v9 = *(_DWORD *)(a1 + 20);
          uint64_t v10 = *(int *)(a1 + 16);
          if ((int)v10 >= v9)
          {
            if (v9 == *(_DWORD *)(a1 + 24))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v9 + 1);
              int v9 = *(_DWORD *)(a1 + 20);
            }

            *(_DWORD *)(a1 + 20) = v9 + 1;
            uint64_t v12 = operator new(0x20uLL);
            *uint64_t v12 = off_101829D40;
            v12[1] = 0LL;
            v12[2] = 0LL;
            v12[3] = 0LL;
            uint64_t v13 = *(void *)(a1 + 8);
            uint64_t v14 = *(int *)(a1 + 16);
            *(_DWORD *)(a1 + 16) = v14 + 1;
            *(void *)(v13 + 8 * v14) = v12;
          }

          else
          {
            uint64_t v11 = *(void *)(a1 + 8);
            *(_DWORD *)(a1 + 16) = v10 + 1;
            uint64_t v12 = *(void **)(v11 + 8 * v10);
          }

          char v15 = (char *)*((void *)this + 1);
          if ((unint64_t)v15 >= *((void *)this + 2) || *v15 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v35)) {
              return 0LL;
            }
          }

          else
          {
            v35[0] = *v15;
            *((void *)this + 1) = v15 + 1;
          }

          int v16 = *((_DWORD *)this + 14);
          int v17 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v16 + 1;
          if (v16 >= v17) {
            return 0LL;
          }
          int v18 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v35[0]);
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v18);
          int v20 = *((_DWORD *)this + 14);
          BOOL v21 = __OFSUB__(v20, 1);
          int v22 = v20 - 1;
          if (v22 < 0 == v21) {
            *((_DWORD *)this + 14) = v22;
          }
          int v23 = (unsigned __int8 *)*((void *)this + 1);
          int v24 = *v23;
          if (v24 != 10) {
            break;
          }
          *((void *)this + 1) = v23 + 1;
        }

        if (v24 != 17) {
          continue;
        }
        *((void *)this + 1) = v23 + 1;
        goto LABEL_28;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_49;
        }
LABEL_28:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v35) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 32) = *(void *)v35;
        *(_DWORD *)(a1 + 88) |= 2u;
        unsigned int v25 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v25 + 1;
LABEL_33:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v35) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 40) = *(void *)v35;
        *(_DWORD *)(a1 + 88) |= 4u;
        int v27 = (_BYTE *)*((void *)this + 1);
        unint64_t v26 = *((void *)this + 2);
        BOOL v28 = v27 + 1;
        *((void *)this + 1) = v28;
LABEL_39:
        if ((unint64_t)v28 >= v26 || *v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v35);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v29 = v35[0];
          int v30 = (_BYTE *)*((void *)this + 1);
          unint64_t v26 = *((void *)this + 2);
        }

        else
        {
          unsigned int v29 = *v28;
          int v30 = v28 + 1;
          *((void *)this + 1) = v30;
        }

        *(_BYTE *)(a1 + 80) = v29 != 0;
        *(_DWORD *)(a1 + 88) |= 8u;
        *((void *)this + 1) = v30 + 1;
LABEL_57:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v35) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 48) = *(void *)v35;
        *(_DWORD *)(a1 + 88) |= 0x10u;
        unsigned int v32 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v32 + 1;
LABEL_61:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v35) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 56) = *(void *)v35;
        *(_DWORD *)(a1 + 88) |= 0x20u;
        unsigned int v33 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v33 + 1;
LABEL_65:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v35) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 64) = *(void *)v35;
        *(_DWORD *)(a1 + 88) |= 0x40u;
        unsigned int v34 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v34 + 1;
LABEL_69:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v35) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 72) = *(void *)v35;
        *(_DWORD *)(a1 + 88) |= 0x80u;
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }

        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        break;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_33;
        }
        goto LABEL_49;
      case 4u:
        int v8 = TagFallback & 7;
        BOOL v28 = (char *)*((void *)this + 1);
        unint64_t v26 = *((void *)this + 2);
        goto LABEL_39;
      case 5u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_57;
        }
        goto LABEL_49;
      case 6u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_61;
        }
        goto LABEL_49;
      case 7u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_65;
        }
        goto LABEL_49;
      case 8u:
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_49;
        }
        goto LABEL_69;
      default:
        int v8 = TagFallback & 7;
LABEL_49:
        if (v8 == 4) {
          return 1LL;
        }
        continue;
    }

    return result;
  }

uint64_t sub_1001FEA94( uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(int *)(result + 16) >= 1)
  {
    uint64_t v6 = 0LL;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(void *)(*(void *)(v5 + 8) + 8 * v6++),  a2,  a4);
    while (v6 < *(int *)(v5 + 16));
  }

  int v7 = *(_DWORD *)(v5 + 88);
  if ((v7 & 2) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  (int)a2,  *(double *)(v5 + 32),  a3);
    int v7 = *(_DWORD *)(v5 + 88);
    if ((v7 & 4) == 0)
    {
LABEL_6:
      if ((v7 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_14;
    }
  }

  else if ((v7 & 4) == 0)
  {
    goto LABEL_6;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  (int)a2,  *(double *)(v5 + 40),  a3);
  int v7 = *(_DWORD *)(v5 + 88);
  if ((v7 & 8) == 0)
  {
LABEL_7:
    if ((v7 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_15;
  }

uint64_t sub_1001FEBBC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 88);
  if ((v1 & 0x1FE) != 0)
  {
    int v2 = (v1 << 30 >> 31) & 9;
    if ((v1 & 4) != 0) {
      v2 += 9;
    }
    if ((v1 & 8) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x10) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x20) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x40) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x80) != 0) {
      int v3 = v2 + 9;
    }
    else {
      int v3 = v2;
    }
  }

  else
  {
    int v3 = 0;
  }

  uint64_t v4 = *(unsigned int *)(a1 + 16);
  uint64_t v5 = (v4 + v3);
  if ((int)v4 >= 1)
  {
    uint64_t v6 = *(void *)(a1 + 8);
    do
    {
      int v7 = *(unsigned __int8 *)(*(void *)v6 + 28LL);
      if (*(_BYTE *)(*(void *)v6 + 28LL))
      {
        if ((v7 & 2) != 0) {
          int v7 = ((v7 << 31 >> 31) & 9) + 9;
        }
        else {
          int v7 = (v7 << 31 >> 31) & 9;
        }
      }

      *(_DWORD *)(*(void *)v6 + 24LL) = v7;
      uint64_t v5 = (v5 + v7 + 1);
      v6 += 8LL;
      --v4;
    }

    while (v4);
  }

  *(_DWORD *)(a1 + 84) = v5;
  return v5;
}

double sub_1001FEC80(uint64_t a1, void *lpsrc)
{
  return sub_1001FE2B4(a1, (uint64_t)lpsrc);
}

uint64_t sub_1001FECCC()
{
  return 1LL;
}

void *sub_1001FECD4@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.GEOMapFeatureBuildingSection");
}

void sub_1001FECE4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v17,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  27748LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v17,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v16, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 8),  *(_DWORD *)(a2 + 16) + *(_DWORD *)(a1 + 16));
  if (*(int *)(a2 + 16) >= 1)
  {
    uint64_t v5 = 0LL;
    do
    {
      uint64_t v6 = *(void *)(*(void *)(a2 + 8) + 8 * v5);
      int v7 = *(_DWORD *)(a1 + 20);
      uint64_t v8 = *(int *)(a1 + 16);
      if ((int)v8 >= v7)
      {
        if (v7 == *(_DWORD *)(a1 + 24))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 8),  v7 + 1);
          int v7 = *(_DWORD *)(a1 + 20);
        }

        *(_DWORD *)(a1 + 20) = v7 + 1;
        uint64_t v10 = operator new(0x60uLL);
        v10[1] = 0LL;
        v10[2] = 0LL;
        *uint64_t v10 = off_101829DB8;
        *((_DWORD *)v10 + 6) = 0;
        *((_DWORD *)v10 + 21) = 0;
        *((_DWORD *)v10 + 22) = 0;
        *((_OWORD *)v10 + 2) = 0u;
        *((_OWORD *)v10 + 3) = 0u;
        *((_OWORD *)v10 + 4) = 0u;
        *((_BYTE *)v10 + 80) = 0;
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = *(int *)(a1 + 16);
        *(_DWORD *)(a1 + 16) = v12 + 1;
        *(void *)(v11 + 8 * v12) = v10;
      }

      else
      {
        uint64_t v9 = *(void *)(a1 + 8);
        *(_DWORD *)(a1 + 16) = v8 + 1;
        uint64_t v10 = *(void **)(v9 + 8 * v8);
      }

      sub_1001FE2B4((uint64_t)v10, v6);
      ++v5;
    }

    while (v5 < *(int *)(a2 + 16));
  }

  int v13 = *(_DWORD *)(a2 + 52);
  if ((v13 & 0x1FE) != 0)
  {
    if ((v13 & 2) != 0)
    {
      uint64_t v14 = *(void *)(a2 + 32);
      *(_DWORD *)(a1 + 52) |= 2u;
      *(void *)(a1 + 32) = v14;
      int v13 = *(_DWORD *)(a2 + 52);
    }

    if ((v13 & 4) != 0)
    {
      uint64_t v15 = *(void *)(a2 + 40);
      *(_DWORD *)(a1 + 52) |= 4u;
      *(void *)(a1 + 40) = v15;
    }
  }

void sub_1001FEE74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001FEE8C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101829E30;
  sub_10008D0EC((uint64_t)a1 + 8);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1001FEEC4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

void *sub_1001FEED8()
{
  uint64_t result = operator new(0x38uLL);
  result[1] = 0LL;
  result[2] = 0LL;
  *uint64_t result = off_101829E30;
  *((_DWORD *)result + 6) = 0;
  result[5] = 0LL;
  result[6] = 0LL;
  result[4] = 0LL;
  return result;
}

uint64_t sub_1001FEF0C(uint64_t result)
{
  uint64_t v1 = result;
  if ((*(_WORD *)(result + 52) & 0x1FE) != 0)
  {
    *(void *)(result + 32) = 0LL;
    *(void *)(result + 40) = 0LL;
  }

  if (*(int *)(result + 16) >= 1)
  {
    uint64_t v2 = 0LL;
    do
    {
      uint64_t v3 = *(void *)(*(void *)(v1 + 8) + 8 * v2);
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 32LL))(v3);
      ++v2;
    }

    while (v2 < *(int *)(v1 + 16));
  }

  *(_DWORD *)(v1 + 16) = 0;
  *(_DWORD *)(v1 + 52) = 0;
  return result;
}

uint64_t sub_1001FEF74( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 8);
  uint64_t v6 = (unint64_t *)(a1 + 32);
  int v7 = (unint64_t *)(a1 + 40);
  while (1)
  {
    while (1)
    {
LABEL_2:
      uint64_t v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback) {
          return 1LL;
        }
      }

      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((void *)this + 1) = v8 + 1;
        if (!(_DWORD)TagFallback) {
          return 1LL;
        }
      }

      unsigned int v10 = TagFallback >> 3;
      if (TagFallback >> 3 == 1)
      {
        int v11 = TagFallback & 7;
        if (v11 == 2)
        {
          while (1)
          {
            int v14 = *(_DWORD *)(a1 + 20);
            uint64_t v15 = *(int *)(a1 + 16);
            if ((int)v15 >= v14)
            {
              if (v14 == *(_DWORD *)(a1 + 24))
              {
                wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v14 + 1);
                int v14 = *(_DWORD *)(a1 + 20);
              }

              *(_DWORD *)(a1 + 20) = v14 + 1;
              int v17 = operator new(0x60uLL);
              v17[1] = 0LL;
              v17[2] = 0LL;
              void *v17 = off_101829DB8;
              *((_DWORD *)v17 + 6) = 0;
              *((_DWORD *)v17 + 21) = 0;
              *((_DWORD *)v17 + 22) = 0;
              *((_OWORD *)v17 + 2) = 0u;
              *((_OWORD *)v17 + 3) = 0u;
              *((_OWORD *)v17 + 4) = 0u;
              *((_BYTE *)v17 + 80) = 0;
              uint64_t v18 = *(void *)(a1 + 8);
              uint64_t v19 = *(int *)(a1 + 16);
              *(_DWORD *)(a1 + 16) = v19 + 1;
              *(void *)(v18 + 8 * v19) = v17;
            }

            else
            {
              uint64_t v16 = *(void *)(a1 + 8);
              *(_DWORD *)(a1 + 16) = v15 + 1;
              int v17 = *(void **)(v16 + 8 * v15);
            }

            int v20 = (char *)*((void *)this + 1);
            if ((unint64_t)v20 >= *((void *)this + 2) || *v20 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v34)) {
                return 0LL;
              }
            }

            else
            {
              unsigned int v34 = *v20;
              *((void *)this + 1) = v20 + 1;
            }

            int v21 = *((_DWORD *)this + 14);
            int v22 = *((_DWORD *)this + 15);
            *((_DWORD *)this + 14) = v21 + 1;
            if (v21 >= v22) {
              return 0LL;
            }
            int v23 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34);
            wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v23);
            int v25 = *((_DWORD *)this + 14);
            BOOL v26 = __OFSUB__(v25, 1);
            int v27 = v25 - 1;
            if (v27 < 0 == v26) {
              *((_DWORD *)this + 14) = v27;
            }
            BOOL v28 = (unsigned __int8 *)*((void *)this + 1);
            unint64_t v12 = *((void *)this + 2);
            int v29 = *v28;
            if (v29 != 10)
            {
              if (v29 != 16) {
                goto LABEL_2;
              }
              int v30 = (char *)(v28 + 1);
              *((void *)this + 1) = v30;
              goto LABEL_32;
            }

            *((void *)this + 1) = v28 + 1;
          }
        }

        goto LABEL_36;
      }

      if (v10 != 2) {
        break;
      }
      int v11 = TagFallback & 7;
      int v30 = (char *)*((void *)this + 1);
      unint64_t v12 = *((void *)this + 2);
LABEL_32:
      if ((unint64_t)v30 >= v12 || *v30 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
        if (!(_DWORD)result) {
          return result;
        }
        unsigned int v31 = (_BYTE *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
      }

      else
      {
        *uint64_t v6 = *v30;
        unsigned int v31 = v30 + 1;
        *((void *)this + 1) = v31;
      }

      *(_DWORD *)(a1 + 52) |= 2u;
      if ((unint64_t)v31 < v12 && *v31 == 24)
      {
        int v13 = v31 + 1;
        *((void *)this + 1) = v13;
LABEL_46:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v7);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v33 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }

        else
        {
          *int v7 = *v13;
          unsigned int v33 = (unsigned __int8 *)(v13 + 1);
          *((void *)this + 1) = v33;
        }

        *(_DWORD *)(a1 + 52) |= 4u;
        if (v33 == (unsigned __int8 *)v12
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1LL;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }

    if (v10 == 3)
    {
      int v11 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_46;
      }
    }

    else
    {
      int v11 = TagFallback & 7;
    }

uint64_t sub_1001FF298( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(int *)(result + 16) >= 1)
  {
    uint64_t v6 = 0LL;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(void *)(*(void *)(v5 + 8) + 8 * v6++),  a2,  a4);
    while (v6 < *(int *)(v5 + 16));
  }

  int v7 = *(_DWORD *)(v5 + 52);
  if ((v7 & 2) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(void *)(v5 + 32),  (unint64_t)a2,  a4);
    int v7 = *(_DWORD *)(v5 + 52);
  }

  if ((v7 & 4) != 0) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(void *)(v5 + 40),  (unint64_t)a2,  a4);
  }
  return result;
}

uint64_t sub_1001FF330(uint64_t a1, unint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 52);
  if ((v3 & 0x1FE) == 0)
  {
    int v4 = 0;
    goto LABEL_8;
  }

  if ((v3 & 2) != 0)
  {
    int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 32),  a2)
       + 1;
    if ((*(_DWORD *)(a1 + 52) & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }

  int v4 = 0;
  if ((v3 & 4) != 0) {
LABEL_7:
  }
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 40),  a2)
        + 1;
LABEL_8:
  int v5 = *(_DWORD *)(a1 + 16);
  uint64_t v6 = (v5 + v4);
  if (v5 >= 1)
  {
    uint64_t v7 = 0LL;
    do
    {
      uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001FEBBC(*(void *)(*(void *)(a1 + 8) + 8 * v7));
      int v10 = (int)v8;
      else {
        int v11 = 1;
      }
      uint64_t v6 = (v10 + v6 + v11);
      ++v7;
    }

    while (v7 < *(int *)(a1 + 16));
  }

  *(_DWORD *)(a1 + 48) = v6;
  return v6;
}

void sub_1001FF3F8(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1001FF444()
{
  return 1LL;
}

void *sub_1001FF44C@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.GEOMapFeatureBuilding");
}

double sub_1001FF45C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v21,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  28039LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v21,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v20, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v21);
  }

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16),  *(_DWORD *)(a2 + 24) + *(_DWORD *)(a1 + 24));
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v6 = 0LL;
    do
    {
      uint64_t v7 = *(void *)(*(void *)(a2 + 16) + 8 * v6);
      int v8 = *(_DWORD *)(a1 + 28);
      uint64_t v9 = *(int *)(a1 + 24);
      if ((int)v9 >= v8)
      {
        if (v8 == *(_DWORD *)(a1 + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16),  v8 + 1);
          int v8 = *(_DWORD *)(a1 + 28);
        }

        *(_DWORD *)(a1 + 28) = v8 + 1;
        int v11 = operator new(0x38uLL);
        v11[1] = 0LL;
        void v11[2] = 0LL;
        *int v11 = off_101829E30;
        *((_DWORD *)v11 + 6) = 0;
        v11[5] = 0LL;
        v11[6] = 0LL;
        v11[4] = 0LL;
        uint64_t v12 = *(void *)(a1 + 16);
        uint64_t v13 = *(int *)(a1 + 24);
        *(_DWORD *)(a1 + 24) = v13 + 1;
        *(void *)(v12 + 8 * v13) = v11;
      }

      else
      {
        uint64_t v10 = *(void *)(a1 + 16);
        *(_DWORD *)(a1 + 24) = v9 + 1;
        int v11 = *(void **)(v10 + 8 * v9);
      }

      sub_1001FECE4((uint64_t)v11, v7);
      ++v6;
    }

    while (v6 < *(int *)(a2 + 24));
  }

  int v14 = *(_DWORD *)(a2 + 48);
  if (v14)
  {
    sub_10008D024(a1 + 40, *(_DWORD *)(a1 + 48) + v14);
    memcpy((void *)(*(void *)(a1 + 40) + 8LL * *(int *)(a1 + 48)), *(const void **)(a2 + 40), 8LL * *(int *)(a2 + 48));
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
  }

  LOBYTE(v15) = *(_BYTE *)(a2 + 68);
  if ((_BYTE)v15)
  {
    if ((*(_BYTE *)(a2 + 68) & 1) != 0)
    {
      *(_DWORD *)(a1 + 68) |= 1u;
      uint64_t v16 = *(char **)(a1 + 8);
      if (!v16)
      {
        uint64_t v16 = (char *)operator new(0x28uLL);
        *(void *)uint64_t v16 = off_101827B80;
        *(_OWORD *)(v16 + 8) = 0u;
        *(_OWORD *)(v16 + 24) = 0u;
        *(void *)(a1 + 8) = v16;
      }

      uint64_t v17 = *(void *)(a2 + 8);
      if (!v17) {
        uint64_t v17 = *(void *)(qword_1019A0D98 + 8);
      }
      double result = sub_1001D323C((uint64_t)v16, v17);
      int v15 = *(_DWORD *)(a2 + 68);
    }

    if ((v15 & 8) != 0)
    {
      *(_DWORD *)(a1 + 68) |= 8u;
      uint64_t v18 = *(void **)(a1 + 56);
      if (!v18)
      {
        uint64_t v18 = operator new(0x20uLL);
        void *v18 = off_101829D40;
        v18[1] = 0LL;
        unsigned int v18[2] = 0LL;
        v18[3] = 0LL;
        *(void *)(a1 + 56) = v18;
      }

      uint64_t v19 = *(void *)(a2 + 56);
      if (!v19) {
        uint64_t v19 = *(void *)(qword_1019A0D98 + 56);
      }
      return sub_1001FDF44((uint64_t)v18, v19);
    }
  }

  return result;
}

void sub_1001FF690(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1001FF6A8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101829EA8;
  sub_1001FF6F0(a1);
  uint64_t v2 = (void *)*((void *)a1 + 5);
  if (v2) {
    operator delete[](v2);
  }
  sub_10008D0EC((uint64_t)a1 + 16);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void *sub_1001FF6F0(void *result)
{
  if ((void *)qword_1019A0D98 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    double result = (void *)v1[7];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_1001FF750(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

uint64_t sub_1001FF764(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0D98;
  if (!qword_1019A0D98)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0D98;
  }

  return result;
}

double sub_1001FF790()
{
  unsigned __int8 v0 = (char *)operator new(0x48uLL);
  *(void *)unsigned __int8 v0 = off_101829EA8;
  *((void *)v0 + 1) = 0LL;
  *((void *)v0 + 2) = 0LL;
  *((void *)v0 + 3) = 0LL;
  *((_DWORD *)v0 + 8) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  return result;
}

uint64_t sub_1001FF7C8(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(_BYTE *)(result + 68);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(result + 68) & 1) != 0)
    {
      uint64_t v3 = *(void *)(result + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0LL;
          *(void *)(v3 + 16) = 0LL;
          *(void *)(v3 + 24) = 0LL;
        }

        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(result + 68);
      }
    }

    if ((v2 & 8) != 0)
    {
      uint64_t v4 = *(void *)(result + 56);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 28))
        {
          *(void *)(v4 + 8) = 0LL;
          *(void *)(v4 + 16) = 0LL;
        }

        *(_DWORD *)(v4 + 28) = 0;
      }
    }
  }

  if (*(int *)(result + 24) >= 1)
  {
    uint64_t v5 = 0LL;
    do
    {
      uint64_t v6 = *(void *)(*(void *)(v1 + 16) + 8 * v5);
      double result = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 32LL))(v6);
      ++v5;
    }

    while (v5 < *(int *)(v1 + 24));
  }

  *(_DWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 48) = 0;
  *(_DWORD *)(v1 + 68) = 0;
  return result;
}

uint64_t sub_1001FF86C( uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unsigned int a3)
{
  uint64_t v5 = a1 + 40;
  uint64_t v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16);
LABEL_2:
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_21;
        }
        *(_DWORD *)(a1 + 68) |= 1u;
        uint64_t v10 = *(char **)(a1 + 8);
        if (!v10)
        {
          uint64_t v10 = (char *)operator new(0x28uLL);
          *(void *)uint64_t v10 = off_101827B80;
          *(_OWORD *)(v10 + 8) = 0u;
          *(_OWORD *)(v10 + 24) = 0u;
          *(void *)(a1 + 8) = v10;
        }

        int v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v58)) {
            return 0LL;
          }
        }

        else
        {
          v58[0] = *v11;
          *((void *)this + 1) = v11 + 1;
        }

        int v15 = *((_DWORD *)this + 14);
        int v16 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v15 + 1;
        if (v15 >= v16) {
          return 0LL;
        }
        int v17 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v58[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v17);
        int v19 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v19, 1);
        int v21 = v19 - 1;
        if (v21 < 0 == v20) {
          *((_DWORD *)this + 14) = v21;
        }
        int v22 = (_BYTE *)*((void *)this + 1);
        goto LABEL_34;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_21;
        }
        while (2)
        {
          int v23 = *(_DWORD *)(a1 + 28);
          uint64_t v24 = *(int *)(a1 + 24);
          if ((int)v24 >= v23)
          {
            if (v23 == *(_DWORD *)(a1 + 32))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v23 + 1);
              int v23 = *(_DWORD *)(a1 + 28);
            }

            *(_DWORD *)(a1 + 28) = v23 + 1;
            BOOL v26 = operator new(0x38uLL);
            v26[1] = 0LL;
            unsigned int v26[2] = 0LL;
            void *v26 = off_101829E30;
            *((_DWORD *)v26 + 6) = 0;
            v26[5] = 0LL;
            v26[6] = 0LL;
            v26[4] = 0LL;
            uint64_t v27 = *(void *)(a1 + 16);
            uint64_t v28 = *(int *)(a1 + 24);
            *(_DWORD *)(a1 + 24) = v28 + 1;
            *(void *)(v27 + 8 * v28) = v26;
          }

          else
          {
            uint64_t v25 = *(void *)(a1 + 16);
            *(_DWORD *)(a1 + 24) = v24 + 1;
            BOOL v26 = *(void **)(v25 + 8 * v24);
          }

          int v29 = (char *)*((void *)this + 1);
          if ((unint64_t)v29 >= *((void *)this + 2) || *v29 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v58)) {
              return 0LL;
            }
          }

          else
          {
            v58[0] = *v29;
            *((void *)this + 1) = v29 + 1;
          }

          int v30 = *((_DWORD *)this + 14);
          int v31 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v30 + 1;
          if (v30 >= v31) {
            return 0LL;
          }
          int v32 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v58[0]);
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v32);
          int v34 = *((_DWORD *)this + 14);
          BOOL v20 = __OFSUB__(v34, 1);
          int v35 = v34 - 1;
          if (v35 < 0 == v20) {
            *((_DWORD *)this + 14) = v35;
          }
          int v22 = (_BYTE *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          if ((unint64_t)v22 < v12)
          {
            int v36 = *v22;
            if (v36 == 18)
            {
LABEL_34:
              *((void *)this + 1) = v22 + 1;
              continue;
            }

            goto LABEL_51;
          }

          goto LABEL_2;
        }

      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 2)
        {
          uint64_t result = sub_1001FFE40(this, v5);
          if (!(_DWORD)result) {
            return result;
          }
          while (1)
          {
            int v22 = (_BYTE *)*((void *)this + 1);
            unint64_t v12 = *((void *)this + 2);
            int v36 = *v22;
            if (v36 == 34) {
              break;
            }
LABEL_51:
            if (v36 != 24) {
              goto LABEL_2;
            }
            uint64_t v13 = v22 + 1;
            *((void *)this + 1) = v13;
LABEL_53:
            if ((unint64_t)v13 >= v12 || *v13 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback( this,  &v56)) {
                return 0LL;
              }
            }

            else
            {
              unint64_t v56 = *v13;
              *((void *)this + 1) = v13 + 1;
            }

            int v37 = *(_DWORD *)(a1 + 48);
            int v38 = *(_DWORD *)(a1 + 52);
            if (v37 == v38)
            {
              sub_10008D024(v5, v37 + 1);
              int v37 = *(_DWORD *)(a1 + 48);
              int v38 = *(_DWORD *)(a1 + 52);
            }

            unint64_t v39 = v56;
            uint64_t v40 = *(void *)(a1 + 40);
            int v41 = v37 + 1;
            *(_DWORD *)(a1 + 48) = v37 + 1;
            *(void *)(v40 + 8LL * v37) = v39;
            if (v38 - (v37 + 1) >= 1)
            {
              int v42 = v38 - v37;
              do
              {
                int v43 = (_BYTE *)*((void *)this + 1);
                unint64_t v44 = *((void *)this + 2);
                *((void *)this + 1) = v43 + 1;
                if ((unint64_t)(v43 + 1) >= v44 || (char)v43[1] < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback( this,  &v56)) {
                    return 0LL;
                  }
                  int v41 = *(_DWORD *)(a1 + 48);
                }

                else
                {
                  unint64_t v56 = v43[1];
                  *((void *)this + 1) = v43 + 2;
                }

                if (v41 >= *(_DWORD *)(a1 + 52))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v58,  3LL,  "/AppleInternal/Library/BuildRoots/9fd3fc02-a7db-11ef-98ff-a6e88e557b55/Applications/Xcode.app/Conten ts/Developer/Platforms/AppleTVOS.platform/Developer/SDKs/AppleTVOS18.2.Internal.sdk/usr/local/includ e/google/protobuf/repeated_field.h",  602LL);
                  uint64_t v45 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v58,  "CHECK failed: (size()) < (Capacity()): ");
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v57, v45);
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v58);
                  int v41 = *(_DWORD *)(a1 + 48);
                }

                unint64_t v46 = v56;
                uint64_t v47 = *(void *)(a1 + 40);
                *(_DWORD *)(a1 + 48) = v41 + 1;
                *(void *)(v47 + 8LL * v41) = v46;
                --v42;
                ++v41;
              }

              while (v42 > 1);
            }
          }

          *((void *)this + 1) = v22 + 1;
LABEL_74:
          *(_DWORD *)(a1 + 68) |= 8u;
          unsigned int v48 = *(void **)(a1 + 56);
          if (!v48)
          {
            unsigned int v48 = operator new(0x20uLL);
            *unsigned int v48 = off_101829D40;
            v48[1] = 0LL;
            v48[2] = 0LL;
            v48[3] = 0LL;
            *(void *)(a1 + 56) = v48;
          }

          int v49 = (char *)*((void *)this + 1);
          if ((unint64_t)v49 >= *((void *)this + 2) || *v49 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v58)) {
              return 0LL;
            }
          }

          else
          {
            v58[0] = *v49;
            *((void *)this + 1) = v49 + 1;
          }

          int v50 = *((_DWORD *)this + 14);
          int v51 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v50 + 1;
          if (v50 >= v51) {
            return 0LL;
          }
          int v52 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v58[0]);
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v52);
          int v54 = *((_DWORD *)this + 14);
          BOOL v20 = __OFSUB__(v54, 1);
          int v55 = v54 - 1;
          if (v55 < 0 == v20) {
            *((_DWORD *)this + 14) = v55;
          }
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1LL;
            *((_BYTE *)this + 36) = 1;
            return result;
          }

          continue;
        }

        if ((TagFallback & 7) == 0)
        {
          uint64_t v13 = (char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          goto LABEL_53;
        }

void sub_1001FFE28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_1001FFE40(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a2)
{
  uint64_t v4 = (char *)*((void *)this + 1);
  if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v13);
    if (!(_DWORD)result) {
      return result;
    }
    unsigned int v5 = v13;
  }

  else
  {
    unsigned int v5 = *v4;
    unsigned int v13 = v5;
    *((void *)this + 1) = v4 + 1;
  }

  int v7 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v5);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
  {
    do
    {
      int v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, &v12);
        if (!(_DWORD)result) {
          return result;
        }
      }

      else
      {
        unint64_t v12 = *v8;
        *((void *)this + 1) = v8 + 1;
      }

      int v9 = *(_DWORD *)(a2 + 8);
      if (v9 == *(_DWORD *)(a2 + 12))
      {
        sub_10008D024(a2, v9 + 1);
        int v9 = *(_DWORD *)(a2 + 8);
      }

      unint64_t v10 = v12;
      uint64_t v11 = *(void *)a2;
      *(_DWORD *)(a2 + 8) = v9 + 1;
      *(void *)(v11 + 8LL * v9) = v10;
    }

    while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) > 0);
  }

  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v7);
  return 1LL;
}

uint64_t sub_1001FFF50( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if ((*(_BYTE *)(result + 68) & 1) != 0)
  {
    uint64_t v6 = *(void *)(result + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1019A0D98 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v6,  a2,  a4);
  }

  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0LL;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(void *)(*(void *)(v5 + 16) + 8 * v7++),  a2,  a4);
    while (v7 < *(int *)(v5 + 24));
  }

  if (*(int *)(v5 + 48) >= 1)
  {
    uint64_t v8 = 0LL;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(void *)(*(void *)(v5 + 40) + 8 * v8++),  (unint64_t)a2,  a4);
    while (v8 < *(int *)(v5 + 48));
  }

  if ((*(_BYTE *)(v5 + 68) & 8) != 0)
  {
    uint64_t v9 = *(void *)(v5 + 56);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_1019A0D98 + 56);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  v9,  a2,  a4);
  }

  return result;
}

uint64_t sub_10020003C(uint64_t a1, unint64_t a2)
{
  if (!*(_BYTE *)(a1 + 68))
  {
    int v3 = 0;
    goto LABEL_22;
  }

  if ((*(_BYTE *)(a1 + 68) & 1) == 0)
  {
    int v3 = 0;
    if ((*(_BYTE *)(a1 + 68) & 8) == 0) {
      goto LABEL_22;
    }
    goto LABEL_15;
  }

  uint64_t v4 = *(void *)(a1 + 8);
  if (!v4) {
    uint64_t v4 = *(void *)(qword_1019A0D98 + 8);
  }
  int v5 = *(unsigned __int8 *)(v4 + 36);
  if (*(_BYTE *)(v4 + 36))
  {
    int v6 = (v5 << 31 >> 31) & 9;
    if ((v5 & 2) != 0) {
      v6 += 9;
    }
    if ((v5 & 4) != 0) {
      int v5 = v6 + 9;
    }
    else {
      int v5 = v6;
    }
  }

  *(_DWORD *)(v4 + 32) = v5;
  int v3 = v5 + 2;
  if ((*(_DWORD *)(a1 + 68) & 8) != 0)
  {
LABEL_15:
    uint64_t v7 = *(void *)(a1 + 56);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0D98 + 56);
    }
    int v8 = *(unsigned __int8 *)(v7 + 28);
    if (*(_BYTE *)(v7 + 28))
    {
      if ((v8 & 2) != 0) {
        int v8 = ((v8 << 31 >> 31) & 9) + 9;
      }
      else {
        int v8 = (v8 << 31 >> 31) & 9;
      }
    }

    *(_DWORD *)(v7 + 24) = v8;
    v3 += v8 + 2;
  }

double sub_1002001AC(uint64_t a1, void *lpsrc)
{
  return sub_1001FF45C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1002001F8()
{
  return 1LL;
}

void *sub_100200200@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.GEOMapBuildingData");
}

void sub_100200210(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v19,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  28363LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v19,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v18, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
  }

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2),  *(_DWORD *)(a2 + 16) + a1[4]);
  if (*(int *)(a2 + 16) >= 1)
  {
    uint64_t v5 = 0LL;
    do
    {
      uint64_t v6 = *(void *)(*(void *)(a2 + 8) + 8 * v5);
      int v7 = a1[5];
      uint64_t v8 = (int)a1[4];
      if ((int)v8 >= v7)
      {
        if (v7 == a1[6])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2),  v7 + 1);
          int v7 = a1[5];
        }

        a1[5] = v7 + 1;
        int v10 = operator new(0x20uLL);
        *int v10 = off_101829D40;
        v10[1] = 0LL;
        v10[2] = 0LL;
        v10[3] = 0LL;
        uint64_t v11 = *((void *)a1 + 1);
        uint64_t v12 = (int)a1[4];
        a1[4] = v12 + 1;
        *(void *)(v11 + 8 * v12) = v10;
      }

      else
      {
        uint64_t v9 = *((void *)a1 + 1);
        a1[4] = v8 + 1;
        int v10 = *(void **)(v9 + 8 * v8);
      }

      sub_1001FDF44((uint64_t)v10, v6);
      ++v5;
    }

    while (v5 < *(int *)(a2 + 16));
  }

  int v13 = *(_DWORD *)(a2 + 52);
  if ((v13 & 0x1FE) != 0)
  {
    if ((v13 & 2) != 0)
    {
      unsigned int v14 = *(_DWORD *)(a2 + 32);
      if (v14 >= 4) {
        sub_1012302C4();
      }
      a1[13] |= 2u;
      a1[8] = v14;
      int v13 = *(_DWORD *)(a2 + 52);
    }

    if ((v13 & 4) != 0)
    {
      int v16 = *(_DWORD *)(a2 + 36);
      a1[13] |= 4u;
      a1[9] = v16;
      int v13 = *(_DWORD *)(a2 + 52);
      if ((v13 & 8) == 0)
      {
LABEL_17:
        if ((v13 & 0x10) == 0) {
          return;
        }
        goto LABEL_18;
      }
    }

    else if ((v13 & 8) == 0)
    {
      goto LABEL_17;
    }

    int v17 = *(_DWORD *)(a2 + 40);
    a1[13] |= 8u;
    a1[10] = v17;
    if ((*(_DWORD *)(a2 + 52) & 0x10) != 0)
    {
LABEL_18:
      int v15 = *(_DWORD *)(a2 + 44);
      a1[13] |= 0x10u;
      a1[11] = v15;
    }
  }

void sub_1002003D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1002003F0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101829F20;
  sub_10008D0EC((uint64_t)a1 + 8);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100200428(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

void *sub_10020043C()
{
  uint64_t result = operator new(0x38uLL);
  result[1] = 0LL;
  result[2] = 0LL;
  *uint64_t result = off_101829F20;
  *((_DWORD *)result + 6) = 0;
  result[5] = 0LL;
  result[6] = 0LL;
  result[4] = 0LL;
  return result;
}

uint64_t sub_100200470(uint64_t result)
{
  uint64_t v1 = result;
  if ((*(_WORD *)(result + 52) & 0x1FE) != 0)
  {
    *(void *)(result + 32) = 0LL;
    *(void *)(result + 40) = 0LL;
  }

  if (*(int *)(result + 16) >= 1)
  {
    uint64_t v2 = 0LL;
    do
    {
      uint64_t v3 = *(void *)(*(void *)(v1 + 8) + 8 * v2);
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 32LL))(v3);
      ++v2;
    }

    while (v2 < *(int *)(v1 + 16));
  }

  *(_DWORD *)(v1 + 16) = 0;
  *(_DWORD *)(v1 + 52) = 0;
  return result;
}

uint64_t sub_1002004D8( _DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2);
  uint64_t v6 = a1 + 9;
  int v7 = a1 + 10;
  uint64_t v8 = a1 + 11;
LABEL_2:
  while (2)
  {
    uint64_t v9 = (char *)*((void *)this + 1);
    if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v9;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v9 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if (v11 != 2) {
          goto LABEL_37;
        }
        while (1)
        {
          int v12 = a1[5];
          uint64_t v13 = (int)a1[4];
          if ((int)v13 >= v12)
          {
            if (v12 == a1[6])
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v12 + 1);
              int v12 = a1[5];
            }

            a1[5] = v12 + 1;
            int v15 = operator new(0x20uLL);
            *int v15 = off_101829D40;
            v15[1] = 0LL;
            unsigned int v15[2] = 0LL;
            v15[3] = 0LL;
            uint64_t v16 = *((void *)a1 + 1);
            uint64_t v17 = (int)a1[4];
            a1[4] = v17 + 1;
            *(void *)(v16 + 8 * v17) = v15;
          }

          else
          {
            uint64_t v14 = *((void *)a1 + 1);
            a1[4] = v13 + 1;
            int v15 = *(void **)(v14 + 8 * v13);
          }

          char v18 = (char *)*((void *)this + 1);
          if ((unint64_t)v18 >= *((void *)this + 2) || *v18 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v41)) {
              return 0LL;
            }
          }

          else
          {
            unsigned int v41 = *v18;
            *((void *)this + 1) = v18 + 1;
          }

          int v19 = *((_DWORD *)this + 14);
          int v20 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v19 + 1;
          if (v19 >= v20) {
            return 0LL;
          }
          int v21 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v41);
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v21);
          int v23 = *((_DWORD *)this + 14);
          BOOL v24 = __OFSUB__(v23, 1);
          int v25 = v23 - 1;
          if (v25 < 0 == v24) {
            *((_DWORD *)this + 14) = v25;
          }
          uint64_t v27 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v26 = *((void *)this + 2);
          int v28 = *v27;
          if (v28 != 10) {
            break;
          }
          *((void *)this + 1) = v27 + 1;
        }

        if (v28 != 16) {
          continue;
        }
        int v29 = (char *)(v27 + 1);
        *((void *)this + 1) = v29;
        goto LABEL_29;
      case 2u:
        int v11 = TagFallback & 7;
        int v29 = (char *)*((void *)this + 1);
        unint64_t v26 = *((void *)this + 2);
LABEL_29:
        if ((unint64_t)v29 >= v26 || *v29 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v30 = v40;
        }

        else
        {
          unsigned int v30 = *v29;
          *((void *)this + 1) = v29 + 1;
        }

        if (v30 <= 3)
        {
          a1[13] |= 2u;
          a1[8] = v30;
        }

        int v36 = (_BYTE *)*((void *)this + 1);
        unint64_t v31 = *((void *)this + 2);
        int v32 = v36 + 1;
        *((void *)this + 1) = v32;
LABEL_50:
        if ((unint64_t)v32 >= v31 || *v32 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result) {
            return result;
          }
          int v37 = (_BYTE *)*((void *)this + 1);
          unint64_t v31 = *((void *)this + 2);
        }

        else
        {
          *uint64_t v6 = *v32;
          int v37 = v32 + 1;
          *((void *)this + 1) = v37;
        }

        a1[13] |= 4u;
        unsigned int v33 = v37 + 1;
        *((void *)this + 1) = v33;
LABEL_58:
        if ((unint64_t)v33 >= v31 || *v33 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result) {
            return result;
          }
          int v38 = (_BYTE *)*((void *)this + 1);
          unint64_t v31 = *((void *)this + 2);
        }

        else
        {
          *int v7 = *v33;
          int v38 = v33 + 1;
          *((void *)this + 1) = v38;
        }

        a1[13] |= 8u;
        int v34 = v38 + 1;
        *((void *)this + 1) = v34;
LABEL_66:
        if ((unint64_t)v34 >= v31 || *v34 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!(_DWORD)result) {
            return result;
          }
          unint64_t v39 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v31 = *((void *)this + 2);
        }

        else
        {
          *uint64_t v8 = *v34;
          unint64_t v39 = (unsigned __int8 *)(v34 + 1);
          *((void *)this + 1) = v39;
        }

        a1[13] |= 0x10u;
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        break;
      case 3u:
        int v11 = TagFallback & 7;
        int v32 = (char *)*((void *)this + 1);
        unint64_t v31 = *((void *)this + 2);
        goto LABEL_50;
      case 4u:
        int v11 = TagFallback & 7;
        unsigned int v33 = (char *)*((void *)this + 1);
        unint64_t v31 = *((void *)this + 2);
        goto LABEL_58;
      case 5u:
        int v11 = TagFallback & 7;
        int v34 = (char *)*((void *)this + 1);
        unint64_t v31 = *((void *)this + 2);
        goto LABEL_66;
      default:
        int v11 = TagFallback & 7;
LABEL_37:
        if (v11 == 4) {
          return 1LL;
        }
        return 0LL;
    }

    return result;
  }

uint64_t sub_1002008EC( uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(int *)(result + 16) >= 1)
  {
    uint64_t v6 = 0LL;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(void *)(*(void *)(v5 + 8) + 8 * v6++),  a2,  a4);
    while (v6 < *(int *)(v5 + 16));
  }

  int v7 = *(_DWORD *)(v5 + 52);
  if ((v7 & 2) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(_DWORD *)(v5 + 32),  (int)a2,  a4);
    int v7 = *(_DWORD *)(v5 + 52);
    if ((v7 & 4) == 0)
    {
LABEL_6:
      if ((v7 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_11;
    }
  }

  else if ((v7 & 4) == 0)
  {
    goto LABEL_6;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(_DWORD *)(v5 + 36),  a2,  a4);
  int v7 = *(_DWORD *)(v5 + 52);
  if ((v7 & 8) == 0)
  {
LABEL_7:
    if ((v7 & 0x10) == 0) {
      return result;
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  *(_DWORD *)(v5 + 44),  a2,  a4);
  }

uint64_t sub_1002009C0(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 52);
  if ((v3 & 0x1FE) == 0)
  {
    int v4 = 0;
    goto LABEL_28;
  }

  if ((v3 & 2) != 0)
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if ((v5 & 0x80000000) != 0)
    {
      int v4 = 11;
      if ((v3 & 4) == 0) {
        goto LABEL_17;
      }
    }

    else if (v5 >= 0x80)
    {
      int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 52);
      if ((v3 & 4) == 0) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = 2;
      if ((v3 & 4) == 0) {
        goto LABEL_17;
      }
    }
  }

  else
  {
    int v4 = 0;
    if ((v3 & 4) == 0) {
      goto LABEL_17;
    }
  }

  uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 52);
  }

  else
  {
    int v7 = 2;
  }

  v4 += v7;
LABEL_17:
  if ((v3 & 8) == 0)
  {
    if ((v3 & 0x10) == 0) {
      goto LABEL_28;
    }
    goto LABEL_24;
  }

  uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
  if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 52);
  }

  else
  {
    int v9 = 2;
  }

  v4 += v9;
  if ((v3 & 0x10) != 0)
  {
LABEL_24:
    int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 44);
    else {
      int v11 = 2;
    }
    v4 += v11;
  }

void sub_100200B04(_DWORD *a1, void *lpsrc)
{
}

uint64_t sub_100200B50()
{
  return 1LL;
}

void *sub_100200B58@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.GEOMapFeatureTropicalSavannaBranch");
}

double sub_100200B68(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v16,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  28660LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v16,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v15, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 40),  *(_DWORD *)(a2 + 48) + *(_DWORD *)(a1 + 48));
  if (*(int *)(a2 + 48) >= 1)
  {
    uint64_t v6 = 0LL;
    do
    {
      uint64_t v7 = *(void *)(*(void *)(a2 + 40) + 8 * v6);
      int v8 = *(_DWORD *)(a1 + 52);
      uint64_t v9 = *(int *)(a1 + 48);
      if ((int)v9 >= v8)
      {
        if (v8 == *(_DWORD *)(a1 + 56))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 40),  v8 + 1);
          int v8 = *(_DWORD *)(a1 + 52);
        }

        *(_DWORD *)(a1 + 52) = v8 + 1;
        int v11 = operator new(0x20uLL);
        *int v11 = off_101829D40;
        v11[1] = 0LL;
        void v11[2] = 0LL;
        v11[3] = 0LL;
        uint64_t v12 = *(void *)(a1 + 40);
        uint64_t v13 = *(int *)(a1 + 48);
        *(_DWORD *)(a1 + 48) = v13 + 1;
        *(void *)(v12 + 8 * v13) = v11;
      }

      else
      {
        uint64_t v10 = *(void *)(a1 + 40);
        *(_DWORD *)(a1 + 48) = v9 + 1;
        int v11 = *(void **)(v10 + 8 * v9);
      }

      double result = sub_1001FDF44((uint64_t)v11, v7);
      ++v6;
    }

    while (v6 < *(int *)(a2 + 48));
  }

  LOBYTE(v14) = *(_BYTE *)(a2 + 68);
  if ((_BYTE)v14)
  {
    if ((*(_BYTE *)(a2 + 68) & 1) != 0)
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 68) |= 1u;
      *(double *)(a1 + 8) = result;
      int v14 = *(_DWORD *)(a2 + 68);
      if ((v14 & 2) == 0)
      {
LABEL_14:
        if ((v14 & 4) == 0) {
          goto LABEL_15;
        }
        goto LABEL_20;
      }
    }

    else if ((*(_BYTE *)(a2 + 68) & 2) == 0)
    {
      goto LABEL_14;
    }

    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 68) |= 2u;
    *(double *)(a1 + 16) = result;
    int v14 = *(_DWORD *)(a2 + 68);
    if ((v14 & 4) == 0)
    {
LABEL_15:
      if ((v14 & 8) == 0) {
        return result;
      }
      goto LABEL_16;
    }

void sub_100200D24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100200D3C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101829F98;
  sub_10008D0EC((uint64_t)a1 + 40);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100200D74(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

double sub_100200D88()
{
  unsigned __int8 v0 = (char *)operator new(0x48uLL);
  *(void *)unsigned __int8 v0 = off_101829F98;
  *((void *)v0 + 8) = 0LL;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *((_DWORD *)v0 + 14) = 0;
  return result;
}

uint64_t sub_100200DC4(uint64_t result)
{
  uint64_t v1 = result;
  if (*(_BYTE *)(result + 68))
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }

  if (*(int *)(result + 48) >= 1)
  {
    uint64_t v2 = 0LL;
    do
    {
      uint64_t v3 = *(void *)(*(void *)(v1 + 40) + 8 * v2);
      double result = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 32LL))(v3);
      ++v2;
    }

    while (v2 < *(int *)(v1 + 48));
  }

  *(_DWORD *)(v1 + 48) = 0;
  *(_DWORD *)(v1 + 68) = 0;
  return result;
}

uint64_t sub_100200E30( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 40);
  while (1)
  {
    uint64_t v6 = (unsigned __int8 *)*((void *)this + 1);
    TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
    *((_DWORD *)this + 8) = (_DWORD)TagFallback;
    *((void *)this + 1) = v6 + 1;
    if (!(_DWORD)TagFallback) {
      return 1LL;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_30;
        }
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v29) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 8) = *(void *)v29;
        *(_DWORD *)(a1 + 68) |= 1u;
        uint64_t v9 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v9 + 1;
        goto LABEL_15;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_30;
        }
LABEL_15:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v29) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = *(void *)v29;
        *(_DWORD *)(a1 + 68) |= 2u;
        uint64_t v10 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v10 + 1;
LABEL_20:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v29) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 24) = *(void *)v29;
        *(_DWORD *)(a1 + 68) |= 4u;
        int v11 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v11 + 1;
LABEL_25:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v29) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 32) = *(void *)v29;
        *(_DWORD *)(a1 + 68) |= 8u;
        uint64_t v12 = (_BYTE *)*((void *)this + 1);
        break;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_20;
        }
        goto LABEL_30;
      case 4u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_25;
        }
        goto LABEL_30;
      case 5u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_30;
        }
        goto LABEL_34;
      default:
        int v8 = TagFallback & 7;
LABEL_30:
        if (v8 == 4) {
          return 1LL;
        }
        continue;
    }

    do
    {
      *((void *)this + 1) = v12 + 1;
LABEL_34:
      int v13 = *(_DWORD *)(a1 + 52);
      uint64_t v14 = *(int *)(a1 + 48);
      if ((int)v14 >= v13)
      {
        if (v13 == *(_DWORD *)(a1 + 56))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v13 + 1);
          int v13 = *(_DWORD *)(a1 + 52);
        }

        *(_DWORD *)(a1 + 52) = v13 + 1;
        uint64_t v16 = operator new(0x20uLL);
        *uint64_t v16 = off_101829D40;
        v16[1] = 0LL;
        v16[2] = 0LL;
        v16[3] = 0LL;
        uint64_t v17 = *(void *)(a1 + 40);
        uint64_t v18 = *(int *)(a1 + 48);
        *(_DWORD *)(a1 + 48) = v18 + 1;
        *(void *)(v17 + 8 * v18) = v16;
      }

      else
      {
        uint64_t v15 = *(void *)(a1 + 40);
        *(_DWORD *)(a1 + 48) = v14 + 1;
        uint64_t v16 = *(void **)(v15 + 8 * v14);
      }

      int v19 = (char *)*((void *)this + 1);
      if ((unint64_t)v19 >= *((void *)this + 2) || *v19 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v29)) {
          return 0LL;
        }
      }

      else
      {
        v29[0] = *v19;
        *((void *)this + 1) = v19 + 1;
      }

      int v20 = *((_DWORD *)this + 14);
      int v21 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v20 + 1;
      if (v20 >= v21) {
        return 0LL;
      }
      int v22 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v29[0]);
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v22);
      int v24 = *((_DWORD *)this + 14);
      BOOL v25 = __OFSUB__(v24, 1);
      int v26 = v24 - 1;
      if (v26 < 0 == v25) {
        *((_DWORD *)this + 14) = v26;
      }
      uint64_t v12 = (_BYTE *)*((void *)this + 1);
      uint64_t v27 = (_BYTE *)*((void *)this + 2);
    }

    while (v12 < v27 && *v12 == 42);
    if (v12 == v27 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1LL;
      *((_BYTE *)this + 36) = 1;
      return result;
    }
  }

  TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
  *((_DWORD *)this + 8) = (_DWORD)TagFallback;
  if ((_DWORD)TagFallback) {
    goto LABEL_7;
  }
  return 1LL;
}

uint64_t sub_1002011B4( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 68);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  (int)a2,  *(double *)(result + 8),  a3);
    int v6 = *(_DWORD *)(v5 + 68);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  (int)a2,  *(double *)(v5 + 16),  a3);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }

uint64_t sub_100201280(uint64_t a1)
{
  int v1 = *(unsigned __int8 *)(a1 + 68);
  if (*(_BYTE *)(a1 + 68))
  {
    int v2 = (v1 << 31 >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      v2 += 9;
    }
    if ((v1 & 8) != 0) {
      int v1 = v2 + 9;
    }
    else {
      int v1 = v2;
    }
  }

  uint64_t v3 = *(unsigned int *)(a1 + 48);
  uint64_t v4 = (v3 + v1);
  if ((int)v3 >= 1)
  {
    uint64_t v5 = *(void *)(a1 + 40);
    do
    {
      int v6 = *(unsigned __int8 *)(*(void *)v5 + 28LL);
      if (*(_BYTE *)(*(void *)v5 + 28LL))
      {
        if ((v6 & 2) != 0) {
          int v6 = ((v6 << 31 >> 31) & 9) + 9;
        }
        else {
          int v6 = (v6 << 31 >> 31) & 9;
        }
      }

      *(_DWORD *)(*(void *)v5 + 24LL) = v6;
      uint64_t v4 = (v4 + v6 + 1);
      v5 += 8LL;
      --v3;
    }

    while (v3);
  }

  *(_DWORD *)(a1 + 64) = v4;
  return v4;
}

double sub_100201314(uint64_t a1, void *lpsrc)
{
  return sub_100200B68(a1, (uint64_t)lpsrc);
}

uint64_t sub_100201360()
{
  return 1LL;
}

void *sub_100201368@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.GEOMapFeatureTropicalSavannaBoundingBox");
}

void sub_100201378(uint64_t a1, _BYTE *a2)
{
  if (a2 == (_BYTE *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  28889LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = a2[16];
  if ((_BYTE)v5)
  {
    if ((a2[16] & 1) != 0)
    {
      char v6 = a2[8];
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_BYTE *)(a1 + 8) = v6;
      int v5 = *((_DWORD *)a2 + 4);
    }

    if ((v5 & 2) != 0)
    {
      char v7 = a2[9];
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_BYTE *)(a1 + 9) = v7;
    }
  }

void sub_100201420(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100201438(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10182A010;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100201448(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10182A010;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

_WORD *sub_100201468()
{
  uint64_t result = operator new(0x18uLL);
  *(void *)uint64_t result = off_10182A010;
  result[4] = 0;
  *((_DWORD *)result + 3) = 0;
  *((_DWORD *)result + 4) = 0;
  return result;
}

uint64_t sub_100201494(uint64_t result)
{
  if (*(_BYTE *)(result + 16)) {
    *(_WORD *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1002014A8( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      int v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback) {
          return 1LL;
        }
      }

      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((void *)this + 1) = v5 + 1;
        if (!(_DWORD)TagFallback) {
          return 1LL;
        }
      }

      int v7 = TagFallback & 7;
      uint64_t v10 = (char *)*((void *)this + 1);
      unint64_t v8 = *((void *)this + 2);
      if ((unint64_t)v10 >= v8 || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v17);
        if (!(_DWORD)result) {
          return result;
        }
        unsigned int v11 = v17;
        uint64_t v12 = (_BYTE *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
      }

      else
      {
        unsigned int v11 = *v10;
        uint64_t v12 = v10 + 1;
        *((void *)this + 1) = v12;
      }

      *(_BYTE *)(a1 + 8) = v11 != 0;
      *(_DWORD *)(a1 + 16) |= 1u;
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        uint64_t v9 = v12 + 1;
        *((void *)this + 1) = v9;
LABEL_23:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v16);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v13 = v16;
          uint64_t v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v13 = *v9;
          uint64_t v14 = (unsigned __int8 *)(v9 + 1);
          *((void *)this + 1) = v14;
        }

        *(_BYTE *)(a1 + 9) = v13 != 0;
        *(_DWORD *)(a1 + 16) |= 2u;
        if (v14 == (unsigned __int8 *)v8 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1LL;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }

    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        uint64_t v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_23;
      }
    }

    else
    {
      int v7 = TagFallback & 7;
    }

uint64_t sub_100201654( uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 16);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(unsigned __int8 *)(result + 8),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 16);
  }

  if ((v6 & 2) != 0) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(unsigned __int8 *)(v5 + 9),  a2,  a4);
  }
  return result;
}

uint64_t sub_1002016AC(uint64_t a1)
{
  unsigned int v1 = 2 * (*(_DWORD *)(a1 + 16) & 1);
  if ((*(_DWORD *)(a1 + 16) & 2) != 0) {
    v1 += 2;
  }
  else {
    uint64_t v2 = 0LL;
  }
  *(_DWORD *)(a1 + 12) = v2;
  return v2;
}

void sub_1002016D4(uint64_t a1, _BYTE *lpsrc)
{
}

uint64_t sub_100201720()
{
  return 1LL;
}

void *sub_100201728@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.GEOMapFeatureTropicalSavanna.TreeFeatures");
}

void sub_100201738(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v23,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  29265LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v23,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v22, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v23);
  }

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16),  *(_DWORD *)(a2 + 24) + *(_DWORD *)(a1 + 24));
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v5 = 0LL;
    do
    {
      uint64_t v6 = *(void *)(*(void *)(a2 + 16) + 8 * v5);
      int v7 = *(_DWORD *)(a1 + 28);
      uint64_t v8 = *(int *)(a1 + 24);
      if ((int)v8 >= v7)
      {
        if (v7 == *(_DWORD *)(a1 + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16),  v7 + 1);
          int v7 = *(_DWORD *)(a1 + 28);
        }

        *(_DWORD *)(a1 + 28) = v7 + 1;
        uint64_t v10 = operator new(0x38uLL);
        v10[1] = 0LL;
        v10[2] = 0LL;
        *uint64_t v10 = off_101829F20;
        *((_DWORD *)v10 + 6) = 0;
        v10[5] = 0LL;
        v10[6] = 0LL;
        v10[4] = 0LL;
        uint64_t v11 = *(void *)(a1 + 16);
        uint64_t v12 = *(int *)(a1 + 24);
        *(_DWORD *)(a1 + 24) = v12 + 1;
        *(void *)(v11 + 8 * v12) = v10;
      }

      else
      {
        uint64_t v9 = *(void *)(a1 + 16);
        *(_DWORD *)(a1 + 24) = v8 + 1;
        uint64_t v10 = *(void **)(v9 + 8 * v8);
      }

      sub_100200210(v10, v6);
      ++v5;
    }

    while (v5 < *(int *)(a2 + 24));
  }

  LOBYTE(v13) = *(_BYTE *)(a2 + 76);
  if (!(_BYTE)v13) {
    return;
  }
  if ((*(_BYTE *)(a2 + 76) & 1) != 0)
  {
    *(_DWORD *)(a1 + 76) |= 1u;
    uint64_t v15 = *(char **)(a1 + 8);
    if (!v15)
    {
      uint64_t v15 = (char *)operator new(0x48uLL);
      *(void *)uint64_t v15 = off_101829F98;
      *((void *)v15 + 8) = 0LL;
      *(_OWORD *)(v15 + 8) = 0u;
      *(_OWORD *)(v15 + 24) = 0u;
      *(_OWORD *)(v15 + 40) = 0u;
      *((_DWORD *)v15 + 14) = 0;
      *(void *)(a1 + 8) = v15;
    }

    uint64_t v16 = *(void *)(a2 + 8);
    if (!v16) {
      uint64_t v16 = *(void *)(qword_1019A0DB0 + 8);
    }
    sub_100200B68((uint64_t)v15, v16);
    int v13 = *(_DWORD *)(a2 + 76);
    if ((v13 & 4) == 0)
    {
LABEL_14:
      if ((v13 & 8) == 0) {
        goto LABEL_15;
      }
      goto LABEL_26;
    }
  }

  else if ((*(_BYTE *)(a2 + 76) & 4) == 0)
  {
    goto LABEL_14;
  }

  uint64_t v17 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 76) |= 4u;
  *(void *)(a1 + 40) = v17;
  int v13 = *(_DWORD *)(a2 + 76);
  if ((v13 & 8) == 0)
  {
LABEL_15:
    if ((v13 & 0x10) == 0) {
      goto LABEL_16;
    }
LABEL_28:
    int v19 = *(_DWORD *)(a2 + 52);
    *(_DWORD *)(a1 + 76) |= 0x10u;
    *(_DWORD *)(a1 + 52) = v19;
    int v13 = *(_DWORD *)(a2 + 76);
    if ((v13 & 0x20) == 0)
    {
LABEL_17:
      if ((v13 & 0x40) == 0) {
        return;
      }
      goto LABEL_18;
    }

    goto LABEL_29;
  }

void sub_1002019CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1002019E4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10182A088;
  uint64_t v2 = (uint64_t)a1 + 16;
  sub_100201A24(a1);
  sub_10008D0EC(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void *sub_100201A24(void *result)
{
  if ((void *)qword_1019A0DB0 != result)
  {
    unsigned int v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    uint64_t result = (void *)v1[7];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_100201A84(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

double sub_100201A98()
{
  unsigned __int8 v0 = (char *)operator new(0x50uLL);
  double result = 0.0;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *((void *)v0 + 9) = 0LL;
  *(void *)unsigned __int8 v0 = off_10182A088;
  *((void *)v0 + 1) = 0LL;
  *((void *)v0 + 2) = 0LL;
  *((void *)v0 + 3) = 0LL;
  *((_DWORD *)v0 + 8) = 0;
  return result;
}

uint64_t sub_100201AD4(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(_BYTE *)(result + 76);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(result + 76) & 1) != 0)
    {
      double result = *(void *)(result + 8);
      if (result)
      {
        double result = sub_100200DC4(result);
        int v2 = *(_DWORD *)(v1 + 76);
      }
    }

    *(void *)(v1 + 40) = 0LL;
    *(void *)(v1 + 48) = 0LL;
    if ((v2 & 0x20) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 56);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 16)) {
          *(_WORD *)(v3 + 8) = 0;
        }
        *(_DWORD *)(v3 + 16) = 0;
      }
    }

    *(void *)(v1 + 64) = 0LL;
  }

  if (*(int *)(v1 + 24) >= 1)
  {
    uint64_t v4 = 0LL;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(v1 + 16) + 8 * v4);
      double result = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 32LL))(v5);
      ++v4;
    }

    while (v4 < *(int *)(v1 + 24));
  }

  *(_DWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 76) = 0;
  return result;
}

uint64_t sub_100201B6C( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16);
  uint64_t v6 = (unint64_t *)(a1 + 40);
  int v7 = (unsigned int *)(a1 + 52);
  uint64_t v8 = (unint64_t *)(a1 + 64);
  while (1)
  {
LABEL_2:
    uint64_t v9 = (char *)*((void *)this + 1);
    if ((unint64_t)v9 < *((void *)this + 2) && (*v9 & 0x80000000) == 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v9;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v9 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
      goto LABEL_7;
    }

    TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = (_DWORD)TagFallback;
    if (!(_DWORD)TagFallback) {
      return 1LL;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if (v11 != 2) {
          goto LABEL_26;
        }
        *(_DWORD *)(a1 + 76) |= 1u;
        uint64_t v12 = *(char **)(a1 + 8);
        if (!v12)
        {
          uint64_t v12 = (char *)operator new(0x48uLL);
          *(void *)uint64_t v12 = off_101829F98;
          *((void *)v12 + 8) = 0LL;
          *(_OWORD *)(v12 + 8) = 0u;
          *(_OWORD *)(v12 + 24) = 0u;
          *(_OWORD *)(v12 + 40) = 0u;
          *((_DWORD *)v12 + 14) = 0;
          *(void *)(a1 + 8) = v12;
        }

        int v13 = (char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v59)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v59 = *v13;
          *((void *)this + 1) = v13 + 1;
        }

        int v22 = *((_DWORD *)this + 14);
        int v23 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v22 + 1;
        if (v22 >= v23) {
          return 0LL;
        }
        int v24 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v59);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v24);
        int v26 = *((_DWORD *)this + 14);
        BOOL v27 = __OFSUB__(v26, 1);
        int v28 = v26 - 1;
        if (v28 < 0 == v27) {
          *((_DWORD *)this + 14) = v28;
        }
        int v29 = (_BYTE *)*((void *)this + 1);
        goto LABEL_38;
      case 2u:
        int v11 = TagFallback & 7;
        if (v11 != 2) {
          goto LABEL_26;
        }
        break;
      case 3u:
        int v11 = TagFallback & 7;
        uint64_t v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_57;
      case 4u:
        int v11 = TagFallback & 7;
        uint64_t v16 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_65;
      case 5u:
        int v11 = TagFallback & 7;
        unsigned int v18 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_75;
      case 6u:
        int v11 = TagFallback & 7;
        if (v11 != 2) {
          goto LABEL_26;
        }
        int v19 = *(_DWORD *)(a1 + 76);
        goto LABEL_83;
      case 7u:
        int v11 = TagFallback & 7;
        int v21 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_97;
      default:
        int v11 = TagFallback & 7;
LABEL_26:
        if (v11 == 4) {
          return 1LL;
        }
        continue;
    }

    while (1)
    {
      int v30 = *(_DWORD *)(a1 + 28);
      uint64_t v31 = *(int *)(a1 + 24);
      if ((int)v31 >= v30)
      {
        if (v30 == *(_DWORD *)(a1 + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v30 + 1);
          int v30 = *(_DWORD *)(a1 + 28);
        }

        *(_DWORD *)(a1 + 28) = v30 + 1;
        unsigned int v33 = operator new(0x38uLL);
        v33[1] = 0LL;
        v33[2] = 0LL;
        *unsigned int v33 = off_101829F20;
        *((_DWORD *)v33 + 6) = 0;
        v33[5] = 0LL;
        v33[6] = 0LL;
        v33[4] = 0LL;
        uint64_t v34 = *(void *)(a1 + 16);
        uint64_t v35 = *(int *)(a1 + 24);
        *(_DWORD *)(a1 + 24) = v35 + 1;
        *(void *)(v34 + 8 * v35) = v33;
      }

      else
      {
        uint64_t v32 = *(void *)(a1 + 16);
        *(_DWORD *)(a1 + 24) = v31 + 1;
        unsigned int v33 = *(void **)(v32 + 8 * v31);
      }

      int v36 = (char *)*((void *)this + 1);
      if ((unint64_t)v36 >= *((void *)this + 2) || *v36 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v59)) {
          return 0LL;
        }
      }

      else
      {
        unsigned int v59 = *v36;
        *((void *)this + 1) = v36 + 1;
      }

      int v37 = *((_DWORD *)this + 14);
      int v38 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v37 + 1;
      if (v37 >= v38) {
        return 0LL;
      }
      int v39 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v59);
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v39);
      int v41 = *((_DWORD *)this + 14);
      BOOL v27 = __OFSUB__(v41, 1);
      int v42 = v41 - 1;
      if (v42 < 0 == v27) {
        *((_DWORD *)this + 14) = v42;
      }
      int v29 = (_BYTE *)*((void *)this + 1);
      unint64_t v14 = *((void *)this + 2);
      int v43 = *v29;
      if (v43 != 18) {
        break;
      }
LABEL_38:
      *((void *)this + 1) = v29 + 1;
    }

    if (v43 != 24) {
      continue;
    }
    uint64_t v15 = v29 + 1;
    *((void *)this + 1) = v15;
LABEL_57:
    if ((unint64_t)v15 >= v14 || *v15 < 0)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
      if (!(_DWORD)result) {
        return result;
      }
      unint64_t v44 = (_BYTE *)*((void *)this + 1);
      unint64_t v14 = *((void *)this + 2);
    }

    else
    {
      *uint64_t v6 = *v15;
      unint64_t v44 = v15 + 1;
      *((void *)this + 1) = v44;
    }

    *(_DWORD *)(a1 + 76) |= 4u;
    if ((unint64_t)v44 < v14 && *v44 == 32)
    {
      uint64_t v16 = v44 + 1;
      *((void *)this + 1) = v16;
LABEL_65:
      if ((unint64_t)v16 >= v14 || *v16 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v59);
        if (!(_DWORD)result) {
          return result;
        }
        unsigned int v46 = v59;
      }

      else
      {
        unsigned int v46 = *v16;
        *((void *)this + 1) = v16 + 1;
      }

      if (v46 <= 3)
      {
        *(_DWORD *)(a1 + 76) |= 8u;
        *(_DWORD *)(a1 + 48) = v46;
      }

      uint64_t v47 = (_BYTE *)*((void *)this + 1);
      unint64_t v17 = *((void *)this + 2);
      if ((unint64_t)v47 < v17 && *v47 == 40)
      {
        unsigned int v18 = v47 + 1;
        *((void *)this + 1) = v18;
LABEL_75:
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v48 = (_BYTE *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }

        else
        {
          *int v7 = *v18;
          unsigned int v48 = v18 + 1;
          *((void *)this + 1) = v48;
        }

        int v19 = *(_DWORD *)(a1 + 76) | 0x10;
        *(_DWORD *)(a1 + 76) = v19;
        if ((unint64_t)v48 < v17 && *v48 == 50)
        {
          *((void *)this + 1) = v48 + 1;
LABEL_83:
          *(_DWORD *)(a1 + 76) = v19 | 0x20;
          int v49 = *(_WORD **)(a1 + 56);
          if (!v49)
          {
            int v49 = operator new(0x18uLL);
            *(void *)int v49 = off_10182A010;
            v49[4] = 0;
            *((_DWORD *)v49 + 3) = 0;
            *((_DWORD *)v49 + 4) = 0;
            *(void *)(a1 + 56) = v49;
          }

          int v50 = (char *)*((void *)this + 1);
          if ((unint64_t)v50 >= *((void *)this + 2) || *v50 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v59)) {
              return 0LL;
            }
          }

          else
          {
            unsigned int v59 = *v50;
            *((void *)this + 1) = v50 + 1;
          }

          int v51 = *((_DWORD *)this + 14);
          int v52 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v51 + 1;
          if (v51 >= v52) {
            return 0LL;
          }
          int v53 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v59);
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v53);
          int v55 = *((_DWORD *)this + 14);
          BOOL v27 = __OFSUB__(v55, 1);
          int v56 = v55 - 1;
          if (v56 < 0 == v27) {
            *((_DWORD *)this + 14) = v56;
          }
          char v57 = (_BYTE *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
          if ((unint64_t)v57 < v20 && *v57 == 56)
          {
            int v21 = v57 + 1;
            *((void *)this + 1) = v21;
LABEL_97:
            if ((unint64_t)v21 >= v20 || *v21 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v8);
              if (!(_DWORD)result) {
                return result;
              }
              unsigned int v58 = (unsigned __int8 *)*((void *)this + 1);
              unint64_t v20 = *((void *)this + 2);
            }

            else
            {
              *uint64_t v8 = *v21;
              unsigned int v58 = (unsigned __int8 *)(v21 + 1);
              *((void *)this + 1) = v58;
            }

            *(_DWORD *)(a1 + 76) |= 0x40u;
            if (v58 == (unsigned __int8 *)v20
              && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              uint64_t result = 1LL;
              *((_BYTE *)this + 36) = 1;
              return result;
            }
          }
        }
      }
    }
  }

uint64_t sub_100202180( uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if ((*(_BYTE *)(result + 76) & 1) != 0)
  {
    uint64_t v6 = *(void *)(result + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1019A0DB0 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v6,  a2,  a4);
  }

  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0LL;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(void *)(*(void *)(v5 + 16) + 8 * v7++),  a2,  a4);
    while (v7 < *(int *)(v5 + 24));
  }

  int v8 = *(_DWORD *)(v5 + 76);
  if ((v8 & 4) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(void *)(v5 + 40),  (unint64_t)a2,  a4);
    int v8 = *(_DWORD *)(v5 + 76);
    if ((v8 & 8) == 0)
    {
LABEL_10:
      if ((v8 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_16;
    }
  }

  else if ((v8 & 8) == 0)
  {
    goto LABEL_10;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  *(_DWORD *)(v5 + 48),  (int)a2,  a4);
  int v8 = *(_DWORD *)(v5 + 76);
  if ((v8 & 0x10) == 0)
  {
LABEL_11:
    if ((v8 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_17;
  }

uint64_t sub_1002022A8(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 76);
  if (!(_BYTE)v3)
  {
    int v4 = 0;
    goto LABEL_18;
  }

  if ((*(_BYTE *)(a1 + 76) & 1) == 0)
  {
    int v4 = 0;
    if ((*(_BYTE *)(a1 + 76) & 4) == 0) {
      goto LABEL_13;
    }
LABEL_12:
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 40),  a2)
        + 1;
    int v3 = *(_DWORD *)(a1 + 76);
    goto LABEL_13;
  }

  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_1019A0DB0 + 8);
  }
  uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100201280(v5);
  int v7 = (int)v6;
  else {
    int v8 = 1;
  }
  int v4 = v7 + v8 + 1;
  int v3 = *(_DWORD *)(a1 + 76);
  if ((v3 & 4) != 0) {
    goto LABEL_12;
  }
LABEL_13:
  if ((v3 & 8) != 0)
  {
    uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
    if ((v16 & 0x80000000) != 0)
    {
      int v17 = 11;
    }

    else if (v16 >= 0x80)
    {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 76);
    }

    else
    {
      int v17 = 2;
    }

    v4 += v17;
    if ((v3 & 0x10) == 0)
    {
LABEL_15:
      if ((v3 & 0x20) == 0) {
        goto LABEL_16;
      }
      goto LABEL_35;
    }
  }

  else if ((v3 & 0x10) == 0)
  {
    goto LABEL_15;
  }

  unsigned int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
  if (v18 >= 0x80)
  {
    int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 76);
  }

  else
  {
    int v19 = 2;
  }

  v4 += v19;
  if ((v3 & 0x20) == 0)
  {
LABEL_16:
    if ((v3 & 0x40) == 0) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }

void sub_100202464(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1002024B0()
{
  return 1LL;
}

void *sub_1002024B8@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.GEOMapFeatureTropicalSavanna");
}

void sub_1002024C8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v18,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  29522LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v18,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v17, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16),  *(_DWORD *)(a2 + 24) + *(_DWORD *)(a1 + 24));
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v5 = 0LL;
    do
    {
      uint64_t v6 = *(void *)(*(void *)(a2 + 16) + 8 * v5);
      int v7 = *(_DWORD *)(a1 + 28);
      uint64_t v8 = *(int *)(a1 + 24);
      if ((int)v8 >= v7)
      {
        if (v7 == *(_DWORD *)(a1 + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16),  v7 + 1);
          int v7 = *(_DWORD *)(a1 + 28);
        }

        *(_DWORD *)(a1 + 28) = v7 + 1;
        uint64_t v10 = (char *)operator new(0x50uLL);
        *(_OWORD *)(v10 + 40) = 0u;
        *(_OWORD *)(v10 + 56) = 0u;
        *((void *)v10 + 9) = 0LL;
        *(void *)uint64_t v10 = off_10182A088;
        *((void *)v10 + 1) = 0LL;
        *((void *)v10 + 2) = 0LL;
        *((void *)v10 + 3) = 0LL;
        *((_DWORD *)v10 + 8) = 0;
        uint64_t v11 = *(void *)(a1 + 16);
        uint64_t v12 = *(int *)(a1 + 24);
        *(_DWORD *)(a1 + 24) = v12 + 1;
        *(void *)(v11 + 8 * v12) = v10;
      }

      else
      {
        uint64_t v9 = *(void *)(a1 + 16);
        *(_DWORD *)(a1 + 24) = v8 + 1;
        uint64_t v10 = *(char **)(v9 + 8 * v8);
      }

      sub_100201738((uint64_t)v10, v6);
      ++v5;
    }

    while (v5 < *(int *)(a2 + 24));
  }

  LOBYTE(v13) = *(_BYTE *)(a2 + 48);
  if ((_BYTE)v13)
  {
    if ((*(_BYTE *)(a2 + 48) & 1) != 0)
    {
      *(_DWORD *)(a1 + 48) |= 1u;
      int v14 = *(char **)(a1 + 8);
      if (!v14)
      {
        int v14 = (char *)operator new(0x28uLL);
        *(void *)int v14 = off_101827B80;
        *(_OWORD *)(v14 + 8) = 0u;
        *(_OWORD *)(v14 + 24) = 0u;
        *(void *)(a1 + 8) = v14;
      }

      uint64_t v15 = *(void *)(a2 + 8);
      if (!v15) {
        uint64_t v15 = *(void *)(qword_1019A0DC0 + 8);
      }
      sub_1001D323C((uint64_t)v14, v15);
      int v13 = *(_DWORD *)(a2 + 48);
    }

    if ((v13 & 4) != 0)
    {
      char v16 = *(_BYTE *)(a2 + 40);
      *(_DWORD *)(a1 + 48) |= 4u;
      *(_BYTE *)(a1 + 40) = v16;
    }
  }

void sub_10020268C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1002026A4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10182A100;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0DC0 != a1)
  {
    uint64_t v2 = *((void *)a1 + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  sub_10008D0EC((uint64_t)a1 + 16);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100202704(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

uint64_t sub_100202718(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0DC0;
  if (!qword_1019A0DC0)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0DC0;
  }

  return result;
}

_BYTE *sub_100202744()
{
  uint64_t result = operator new(0x38uLL);
  result[40] = 0;
  *((_DWORD *)result + 11) = 0;
  *((_DWORD *)result + 12) = 0;
  *(void *)uint64_t result = off_10182A100;
  *((void *)result + 1) = 0LL;
  *((void *)result + 2) = 0LL;
  *((void *)result + 3) = 0LL;
  *((_DWORD *)result + 8) = 0;
  return result;
}

uint64_t sub_100202778(uint64_t result)
{
  uint64_t v1 = result;
  if (*(_BYTE *)(result + 48))
  {
    if ((*(_BYTE *)(result + 48) & 1) != 0)
    {
      uint64_t v2 = *(void *)(result + 8);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 36))
        {
          *(void *)(v2 + 8) = 0LL;
          *(void *)(v2 + 16) = 0LL;
          *(void *)(v2 + 24) = 0LL;
        }

        *(_DWORD *)(v2 + 36) = 0;
      }
    }

    *(_BYTE *)(result + 40) = 0;
  }

  if (*(int *)(result + 24) >= 1)
  {
    uint64_t v3 = 0LL;
    do
    {
      uint64_t v4 = *(void *)(*(void *)(v1 + 16) + 8 * v3);
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 32LL))(v4);
      ++v3;
    }

    while (v3 < *(int *)(v1 + 24));
  }

  *(_DWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 48) = 0;
  return result;
}

uint64_t sub_1002027FC( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16);
  while (1)
  {
    while (1)
    {
LABEL_2:
      uint64_t v6 = (char *)*((void *)this + 1);
      if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback) {
          return 1LL;
        }
      }

      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((void *)this + 1) = v6 + 1;
        if (!(_DWORD)TagFallback) {
          return 1LL;
        }
      }

      unsigned int v8 = TagFallback >> 3;
      int v9 = TagFallback & 7;
      if (v9 != 2) {
        goto LABEL_21;
      }
      *(_DWORD *)(a1 + 48) |= 1u;
      uint64_t v12 = *(char **)(a1 + 8);
      if (!v12)
      {
        uint64_t v12 = (char *)operator new(0x28uLL);
        *(void *)uint64_t v12 = off_101827B80;
        *(_OWORD *)(v12 + 8) = 0u;
        *(_OWORD *)(v12 + 24) = 0u;
        *(void *)(a1 + 8) = v12;
      }

      int v13 = (char *)*((void *)this + 1);
      if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v40)) {
          return 0LL;
        }
      }

      else
      {
        unsigned int v40 = *v13;
        *((void *)this + 1) = v13 + 1;
      }

      int v14 = *((_DWORD *)this + 14);
      int v15 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v14 + 1;
      if (v14 >= v15) {
        return 0LL;
      }
      int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v40);
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
      int v18 = *((_DWORD *)this + 14);
      BOOL v19 = __OFSUB__(v18, 1);
      int v20 = v18 - 1;
      if (v20 < 0 == v19) {
        *((_DWORD *)this + 14) = v20;
      }
      int v21 = (_BYTE *)*((void *)this + 1);
      if ((unint64_t)v21 < *((void *)this + 2) && *v21 == 18)
      {
        while (1)
        {
          *((void *)this + 1) = v21 + 1;
LABEL_33:
          int v22 = *(_DWORD *)(a1 + 28);
          uint64_t v23 = *(int *)(a1 + 24);
          if ((int)v23 >= v22)
          {
            if (v22 == *(_DWORD *)(a1 + 32))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v22 + 1);
              int v22 = *(_DWORD *)(a1 + 28);
            }

            *(_DWORD *)(a1 + 28) = v22 + 1;
            unsigned int v25 = (char *)operator new(0x50uLL);
            *(_OWORD *)(v25 + 40) = 0u;
            *(_OWORD *)(v25 + 56) = 0u;
            *((void *)v25 + 9) = 0LL;
            *(void *)unsigned int v25 = off_10182A088;
            *((void *)v25 + 1) = 0LL;
            *((void *)v25 + 2) = 0LL;
            *((void *)v25 + 3) = 0LL;
            *((_DWORD *)v25 + 8) = 0;
            uint64_t v26 = *(void *)(a1 + 16);
            uint64_t v27 = *(int *)(a1 + 24);
            *(_DWORD *)(a1 + 24) = v27 + 1;
            *(void *)(v26 + 8 * v27) = v25;
          }

          else
          {
            uint64_t v24 = *(void *)(a1 + 16);
            *(_DWORD *)(a1 + 24) = v23 + 1;
            unsigned int v25 = *(char **)(v24 + 8 * v23);
          }

          int v28 = (char *)*((void *)this + 1);
          if ((unint64_t)v28 >= *((void *)this + 2) || *v28 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v41)) {
              return 0LL;
            }
          }

          else
          {
            unsigned int v41 = *v28;
            *((void *)this + 1) = v28 + 1;
          }

          int v29 = *((_DWORD *)this + 14);
          int v30 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v29 + 1;
          if (v29 >= v30) {
            return 0LL;
          }
          int v31 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v41);
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v31);
          int v33 = *((_DWORD *)this + 14);
          BOOL v19 = __OFSUB__(v33, 1);
          int v34 = v33 - 1;
          if (v34 < 0 == v19) {
            *((_DWORD *)this + 14) = v34;
          }
          int v21 = (_BYTE *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          int v35 = *v21;
          if (v35 != 18)
          {
            if (v35 == 24)
            {
              uint64_t v11 = v21 + 1;
              *((void *)this + 1) = v11;
LABEL_51:
              if ((unint64_t)v11 >= v10 || *v11 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v39);
                if (!(_DWORD)result) {
                  return result;
                }
                unsigned int v36 = v39;
                int v37 = (unsigned __int8 *)*((void *)this + 1);
                unint64_t v10 = *((void *)this + 2);
              }

              else
              {
                unsigned int v36 = *v11;
                int v37 = (unsigned __int8 *)(v11 + 1);
                *((void *)this + 1) = v37;
              }

              *(_BYTE *)(a1 + 40) = v36 != 0;
              *(_DWORD *)(a1 + 48) |= 4u;
              if (v37 == (unsigned __int8 *)v10
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1LL;
                *((_BYTE *)this + 36) = 1;
                return result;
              }
            }

            goto LABEL_2;
          }
        }
      }
    }

    if (v8 == 2)
    {
      int v9 = TagFallback & 7;
      if (v9 != 2) {
        goto LABEL_21;
      }
      goto LABEL_33;
    }

    if (v8 == 3)
    {
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        uint64_t v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_51;
      }
    }

    else
    {
      int v9 = TagFallback & 7;
    }

uint64_t sub_100202BA0( uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if ((*(_BYTE *)(result + 48) & 1) != 0)
  {
    uint64_t v6 = *(void *)(result + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1019A0DC0 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v6,  a2,  a4);
  }

  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0LL;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(void *)(*(void *)(v5 + 16) + 8 * v7++),  a2,  a4);
    while (v7 < *(int *)(v5 + 24));
  }

  if ((*(_BYTE *)(v5 + 48) & 4) != 0) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(unsigned __int8 *)(v5 + 40),  (BOOL)a2,  a4);
  }
  return result;
}

uint64_t sub_100202C48(uint64_t a1, unint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 48);
  if (*(_BYTE *)(a1 + 48))
  {
    if ((v3 & 1) != 0)
    {
      uint64_t v5 = *(void *)(a1 + 8);
      if (!v5) {
        uint64_t v5 = *(void *)(qword_1019A0DC0 + 8);
      }
      int v6 = *(unsigned __int8 *)(v5 + 36);
      if (*(_BYTE *)(v5 + 36))
      {
        int v7 = (v6 << 31 >> 31) & 9;
        if ((v6 & 2) != 0) {
          v7 += 9;
        }
        if ((v6 & 4) != 0) {
          int v6 = v7 + 9;
        }
        else {
          int v6 = v7;
        }
      }

      *(_DWORD *)(v5 + 32) = v6;
      int v4 = v6 + 2;
      int v3 = *(_DWORD *)(a1 + 48);
    }

    else
    {
      int v4 = 0;
    }

    if ((v3 & 4) != 0) {
      int v3 = v4 + 2;
    }
    else {
      int v3 = v4;
    }
  }

  int v8 = *(_DWORD *)(a1 + 24);
  uint64_t v9 = (v8 + v3);
  if (v8 >= 1)
  {
    uint64_t v10 = 0LL;
    do
    {
      uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1002022A8( *(void *)(*(void *)(a1 + 16) + 8 * v10),  a2);
      int v12 = (int)v11;
      else {
        int v13 = 1;
      }
      uint64_t v9 = (v12 + v9 + v13);
      ++v10;
    }

    while (v10 < *(int *)(a1 + 24));
  }

  *(_DWORD *)(a1 + 44) = v9;
  return v9;
}

void sub_100202D34(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_100202D80()
{
  return 1LL;
}

void *sub_100202D88@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.GEOMapTropicalSavannaData");
}

void sub_100202D98(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  29753LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 20);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 20) & 1) != 0)
    {
      unsigned int v6 = *(_DWORD *)(a2 + 8);
      if (v6 >= 4) {
        sub_10123033C();
      }
      a1[5] |= 1u;
      a1[2] = v6;
      int v5 = *(_DWORD *)(a2 + 20);
    }

    if ((v5 & 2) != 0)
    {
      unsigned int v7 = *(_DWORD *)(a2 + 12);
      if (v7 >= 4) {
        sub_101230314();
      }
      a1[5] |= 2u;
      a1[3] = v7;
    }
  }

void sub_100202E58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100202E70(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10182A178;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100202E80(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10182A178;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

void *sub_100202EA0()
{
  uint64_t result = operator new(0x18uLL);
  result[1] = 0LL;
  result[2] = 0LL;
  *uint64_t result = off_10182A178;
  return result;
}

uint64_t sub_100202EC8(uint64_t result)
{
  if (*(_BYTE *)(result + 20)) {
    *(void *)(result + 8) = 0LL;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_100202EDC( _DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      int v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback) {
          return 1LL;
        }
      }

      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
        *((_DWORD *)this + 8) = (_DWORD)TagFallback;
        *((void *)this + 1) = v5 + 1;
        if (!(_DWORD)TagFallback) {
          return 1LL;
        }
      }

      int v7 = TagFallback & 7;
      uint64_t v10 = (char *)*((void *)this + 1);
      if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v16);
        if (!(_DWORD)result) {
          return result;
        }
        unsigned int v11 = v16;
      }

      else
      {
        unsigned int v11 = *v10;
        *((void *)this + 1) = v10 + 1;
      }

      if (v11 <= 3)
      {
        a1[5] |= 1u;
        a1[2] = v11;
      }

      int v12 = (_BYTE *)*((void *)this + 1);
      unint64_t v8 = *((void *)this + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        uint64_t v9 = v12 + 1;
        *((void *)this + 1) = v9;
LABEL_25:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v15);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v13 = v15;
        }

        else
        {
          unsigned int v13 = *v9;
          *((void *)this + 1) = v9 + 1;
        }

        if (v13 <= 3)
        {
          a1[5] |= 2u;
          a1[3] = v13;
        }

        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1LL;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }

    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        uint64_t v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_25;
      }
    }

    else
    {
      int v7 = TagFallback & 7;
    }

uint64_t sub_100203088( uint64_t result, int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(_DWORD *)(result + 8),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }

  if ((v6 & 2) != 0) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(_DWORD *)(v5 + 12),  a2,  a4);
  }
  return result;
}

uint64_t sub_1002030E0(uint64_t a1, unsigned int a2)
{
  char v3 = *(_BYTE *)(a1 + 20);
  if (v3)
  {
    if ((*(_BYTE *)(a1 + 20) & 1) != 0)
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if ((v5 & 0x80000000) != 0)
      {
        uint64_t v4 = 11LL;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }

      else if (v5 >= 0x80)
      {
        if ((*(_DWORD *)(a1 + 20) & 2) == 0) {
          goto LABEL_19;
        }
      }

      else
      {
        uint64_t v4 = 2LL;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }
    }

    else
    {
      uint64_t v4 = 0LL;
      if ((*(_BYTE *)(a1 + 20) & 2) == 0) {
        goto LABEL_19;
      }
    }

    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if ((v6 & 0x80000000) != 0)
    {
      int v7 = 11;
    }

    else if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    }

    else
    {
      int v7 = 2;
    }

    uint64_t v4 = (v7 + v4);
  }

  else
  {
    uint64_t v4 = 0LL;
  }

void sub_100203188(_DWORD *a1, void *lpsrc)
{
}

uint64_t sub_1002031D4()
{
  return 1LL;
}

void *sub_1002031DC@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.WatchOrientation");
}

void sub_1002031EC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v15,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  30163LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v15,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v14, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 36) & 1) != 0)
    {
      *(_DWORD *)(a1 + 36) |= 1u;
      int v6 = *(char **)(a1 + 8);
      if (!v6)
      {
        int v6 = (char *)operator new(0x28uLL);
        *(void *)int v6 = off_101827B80;
        *(_OWORD *)(v6 + 8) = 0u;
        *(_OWORD *)(v6 + 24) = 0u;
        *(void *)(a1 + 8) = v6;
      }

      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_1019A0DD0 + 8);
      }
      sub_1001D323C((uint64_t)v6, v7);
      int v5 = *(_DWORD *)(a2 + 36);
    }

    if ((v5 & 2) != 0)
    {
      unsigned int v8 = *(_DWORD *)(a2 + 16);
      if (v8 >= 4) {
        sub_1012303B4();
      }
      *(_DWORD *)(a1 + 36) |= 2u;
      *(_DWORD *)(a1 + 16) = v8;
      int v5 = *(_DWORD *)(a2 + 36);
    }

    if ((v5 & 4) != 0)
    {
      unsigned int v9 = *(_DWORD *)(a2 + 20);
      if (v9 >= 4) {
        sub_10123038C();
      }
      *(_DWORD *)(a1 + 36) |= 4u;
      *(_DWORD *)(a1 + 20) = v9;
      int v5 = *(_DWORD *)(a2 + 36);
    }

    if ((v5 & 8) != 0)
    {
      unsigned int v10 = *(_DWORD *)(a2 + 24);
      if (v10 >= 4) {
        sub_101230364();
      }
      *(_DWORD *)(a1 + 36) |= 8u;
      *(_DWORD *)(a1 + 24) = v10;
      int v5 = *(_DWORD *)(a2 + 36);
    }

    if ((v5 & 0x10) != 0)
    {
      char v12 = *(_BYTE *)(a2 + 28);
      *(_DWORD *)(a1 + 36) |= 0x10u;
      *(_BYTE *)(a1 + 28) = v12;
      int v5 = *(_DWORD *)(a2 + 36);
      if ((v5 & 0x20) == 0)
      {
LABEL_21:
        if ((v5 & 0x40) == 0) {
          return;
        }
        goto LABEL_22;
      }
    }

    else if ((v5 & 0x20) == 0)
    {
      goto LABEL_21;
    }

    char v13 = *(_BYTE *)(a2 + 29);
    *(_DWORD *)(a1 + 36) |= 0x20u;
    *(_BYTE *)(a1 + 29) = v13;
    if ((*(_DWORD *)(a2 + 36) & 0x40) != 0)
    {
LABEL_22:
      char v11 = *(_BYTE *)(a2 + 30);
      *(_DWORD *)(a1 + 36) |= 0x40u;
      *(_BYTE *)(a1 + 30) = v11;
    }
  }

void sub_10020338C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1002033A4(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_10182A1F0;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A0DD0 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1002033F8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

void *sub_10020340C()
{
  uint64_t result = operator new(0x28uLL);
  result[4] = 0LL;
  result[1] = 0LL;
  result[2] = 0LL;
  *uint64_t result = &off_10182A1F0;
  *(void *)((char *)result + 23) = 0LL;
  return result;
}

uint64_t sub_10020343C(uint64_t result)
{
  if (*(_BYTE *)(result + 36))
  {
    if ((*(_BYTE *)(result + 36) & 1) != 0)
    {
      uint64_t v1 = *(void *)(result + 8);
      if (v1)
      {
        if (*(_BYTE *)(v1 + 36))
        {
          *(void *)(v1 + 8) = 0LL;
          *(void *)(v1 + 16) = 0LL;
          *(void *)(v1 + 24) = 0LL;
        }

        *(_DWORD *)(v1 + 36) = 0;
      }
    }

    *(void *)(result + 23) = 0LL;
    *(void *)(result + 16) = 0LL;
  }

  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_100203474( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_25;
        }
        *(_DWORD *)(a1 + 36) |= 1u;
        unsigned int v8 = *(char **)(a1 + 8);
        if (!v8)
        {
          unsigned int v8 = (char *)operator new(0x28uLL);
          *(void *)unsigned int v8 = off_101827B80;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *(void *)(a1 + 8) = v8;
        }

        unsigned int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v41)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v41 = *v9;
          *((void *)this + 1) = v9 + 1;
        }

        int v20 = *((_DWORD *)this + 14);
        int v21 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v20 + 1;
        if (v20 >= v21) {
          return 0LL;
        }
        int v22 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v41);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v22);
        int v24 = *((_DWORD *)this + 14);
        BOOL v25 = __OFSUB__(v24, 1);
        int v26 = v24 - 1;
        if (v26 < 0 == v25) {
          *((_DWORD *)this + 14) = v26;
        }
        uint64_t v27 = (_BYTE *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        char v11 = v27 + 1;
        *((void *)this + 1) = v11;
        goto LABEL_38;
      case 2u:
        int v7 = TagFallback & 7;
        char v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_38:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v41);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v28 = v41;
        }

        else
        {
          unsigned int v28 = *v11;
          *((void *)this + 1) = v11 + 1;
        }

        if (v28 <= 3)
        {
          *(_DWORD *)(a1 + 36) |= 2u;
          *(_DWORD *)(a1 + 16) = v28;
        }

        int v30 = (_BYTE *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        char v13 = v30 + 1;
        *((void *)this + 1) = v13;
LABEL_48:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v41);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v31 = v41;
        }

        else
        {
          unsigned int v31 = *v13;
          *((void *)this + 1) = v13 + 1;
        }

        if (v31 <= 3)
        {
          *(_DWORD *)(a1 + 36) |= 4u;
          *(_DWORD *)(a1 + 20) = v31;
        }

        unsigned int v32 = (_BYTE *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        unsigned int v15 = v32 + 1;
        *((void *)this + 1) = v15;
LABEL_58:
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v41);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v33 = v41;
        }

        else
        {
          unsigned int v33 = *v15;
          *((void *)this + 1) = v15 + 1;
        }

        if (v33 <= 3)
        {
          *(_DWORD *)(a1 + 36) |= 8u;
          *(_DWORD *)(a1 + 24) = v33;
        }

        int v34 = (_BYTE *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        unsigned int v17 = v34 + 1;
        *((void *)this + 1) = v17;
LABEL_68:
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v41);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v35 = v41;
          unsigned int v36 = (_BYTE *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }

        else
        {
          unsigned int v35 = *v17;
          unsigned int v36 = v17 + 1;
          *((void *)this + 1) = v36;
        }

        *(_BYTE *)(a1 + 28) = v35 != 0;
        *(_DWORD *)(a1 + 36) |= 0x10u;
        int v18 = v36 + 1;
        *((void *)this + 1) = v18;
LABEL_76:
        if ((unint64_t)v18 >= v16 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v41);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v37 = v41;
          int v38 = (_BYTE *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }

        else
        {
          unsigned int v37 = *v18;
          int v38 = v18 + 1;
          *((void *)this + 1) = v38;
        }

        *(_BYTE *)(a1 + 29) = v37 != 0;
        *(_DWORD *)(a1 + 36) |= 0x20u;
        BOOL v19 = v38 + 1;
        *((void *)this + 1) = v19;
LABEL_84:
        if ((unint64_t)v19 >= v16 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v41);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v39 = v41;
          unsigned int v40 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }

        else
        {
          unsigned int v39 = *v19;
          unsigned int v40 = (unsigned __int8 *)(v19 + 1);
          *((void *)this + 1) = v40;
        }

        *(_BYTE *)(a1 + 30) = v39 != 0;
        *(_DWORD *)(a1 + 36) |= 0x40u;
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        break;
      case 3u:
        int v7 = TagFallback & 7;
        char v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_48;
      case 4u:
        int v7 = TagFallback & 7;
        unsigned int v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_58;
      case 5u:
        int v7 = TagFallback & 7;
        unsigned int v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_68;
      case 6u:
        int v7 = TagFallback & 7;
        int v18 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_76;
      case 7u:
        int v7 = TagFallback & 7;
        BOOL v19 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_84;
      default:
        int v7 = TagFallback & 7;
LABEL_25:
        if (v7 == 4) {
          return 1LL;
        }
        return 0LL;
    }

    return result;
  }

uint64_t sub_100203934( uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0DD0 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(_DWORD *)(v5 + 16),  (int)a2,  a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }

uint64_t sub_100203A2C(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 36);
  if (!(_BYTE)v3)
  {
    uint64_t result = 0LL;
    goto LABEL_43;
  }

  if ((*(_BYTE *)(a1 + 36) & 1) == 0)
  {
    int v4 = 0;
    if ((*(_BYTE *)(a1 + 36) & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }

  uint64_t v6 = *(void *)(a1 + 8);
  if (!v6) {
    uint64_t v6 = *(void *)(qword_1019A0DD0 + 8);
  }
  int v7 = *(unsigned __int8 *)(v6 + 36);
  if (*(_BYTE *)(v6 + 36))
  {
    int v8 = (v7 << 31 >> 31) & 9;
    if ((v7 & 2) != 0) {
      v8 += 9;
    }
    if ((v7 & 4) != 0) {
      int v7 = v8 + 9;
    }
    else {
      int v7 = v8;
    }
  }

  *(_DWORD *)(v6 + 32) = v7;
  int v4 = v7 + 2;
  int v3 = *(_DWORD *)(a1 + 36);
  if ((v3 & 2) != 0)
  {
LABEL_15:
    unsigned int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if ((v9 & 0x80000000) != 0)
    {
      int v10 = 11;
    }

    else if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 36);
    }

    else
    {
      int v10 = 2;
    }

    v4 += v10;
  }

void sub_100203B80(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_100203BCC()
{
  return 1LL;
}

void *sub_100203BD4@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.WristState");
}

void sub_100203BE4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v14,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  30471LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v14,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v13, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 40);
  if (!(_BYTE)v5) {
    return;
  }
  if ((*(_BYTE *)(a2 + 40) & 1) == 0)
  {
    if ((*(_BYTE *)(a2 + 40) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_14:
    int v8 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 40) |= 2u;
    *(_DWORD *)(a1 + 32) = v8;
    int v5 = *(_DWORD *)(a2 + 40);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        return;
      }
      goto LABEL_20;
    }

    goto LABEL_15;
  }

  *(_DWORD *)(a1 + 40) |= 1u;
  uint64_t v6 = *(char **)(a1 + 8);
  if (!v6)
  {
    uint64_t v6 = (char *)operator new(0x28uLL);
    *(void *)uint64_t v6 = off_101827B80;
    *(_OWORD *)(v6 + 8) = 0u;
    *(_OWORD *)(v6 + 24) = 0u;
    *(void *)(a1 + 8) = v6;
  }

  uint64_t v7 = *(void *)(a2 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_1019A0DD8 + 8);
  }
  sub_1001D323C((uint64_t)v6, v7);
  int v5 = *(_DWORD *)(a2 + 40);
  if ((v5 & 2) != 0) {
    goto LABEL_14;
  }
LABEL_6:
  if ((v5 & 4) == 0) {
    goto LABEL_7;
  }
LABEL_15:
  *(_DWORD *)(a1 + 40) |= 4u;
  unsigned int v9 = *(void **)(a1 + 16);
  if (!v9)
  {
    unsigned int v9 = operator new(0x18uLL);
    v9[1] = 0LL;
    v9[2] = 0LL;
    *unsigned int v9 = off_10182A178;
    *(void *)(a1 + 16) = v9;
  }

  uint64_t v10 = *(void *)(a2 + 16);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_1019A0DD8 + 16);
  }
  sub_100202D98(v9, v10);
  if ((*(_DWORD *)(a2 + 40) & 8) != 0)
  {
LABEL_20:
    *(_DWORD *)(a1 + 40) |= 8u;
    char v11 = *(void **)(a1 + 24);
    if (!v11)
    {
      char v11 = operator new(0x28uLL);
      v11[4] = 0LL;
      v11[1] = 0LL;
      void v11[2] = 0LL;
      *char v11 = &off_10182A1F0;
      *(void *)((char *)v11 + 23) = 0LL;
      *(void *)(a1 + 24) = v11;
    }

    uint64_t v12 = *(void *)(a2 + 24);
    if (!v12) {
      uint64_t v12 = *(void *)(qword_1019A0DD8 + 24);
    }
    sub_1002031EC((uint64_t)v11, v12);
  }

void sub_100203D80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void *sub_100203D98(void *result)
{
  if ((void *)qword_1019A0DD8 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
    }
    uint64_t result = (void *)v1[3];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_100203E08(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10182A268;
  sub_100203D98(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100203E38(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10182A268;
  sub_100203D98(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v2);
}

uint64_t sub_100203E6C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0DD8;
  if (!qword_1019A0DD8)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0DD8;
  }

  return result;
}

double sub_100203E98()
{
  unsigned __int8 v0 = (char *)operator new(0x30uLL);
  *(void *)unsigned __int8 v0 = off_10182A268;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *((_DWORD *)v0 + 10) = 0;
  return result;
}

uint64_t sub_100203ECC(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(_BYTE *)(result + 40);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(result + 40) & 1) != 0)
    {
      uint64_t v3 = *(void *)(result + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0LL;
          *(void *)(v3 + 16) = 0LL;
          *(void *)(v3 + 24) = 0LL;
        }

        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(result + 40);
      }
    }

    *(_DWORD *)(result + 32) = 0;
    if ((v2 & 4) != 0)
    {
      uint64_t v4 = *(void *)(result + 16);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 20)) {
          *(void *)(v4 + 8) = 0LL;
        }
        *(_DWORD *)(v4 + 20) = 0;
        int v2 = *(_DWORD *)(result + 40);
      }
    }

    if ((v2 & 8) != 0)
    {
      double result = *(void *)(result + 24);
      if (result) {
        double result = sub_10020343C(result);
      }
    }
  }

  *(_DWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t sub_100203F4C( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 < *((void *)this + 2) && (*v5 & 0x80000000) == 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
      goto LABEL_6;
    }

    TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = (_DWORD)TagFallback;
    if (!(_DWORD)TagFallback) {
      return 1LL;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_19;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        int v8 = *(char **)(a1 + 8);
        if (!v8)
        {
          int v8 = (char *)operator new(0x28uLL);
          *(void *)int v8 = off_101827B80;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *(void *)(a1 + 8) = v8;
        }

        unsigned int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v41)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v41 = *v9;
          *((void *)this + 1) = v9 + 1;
        }

        int v13 = *((_DWORD *)this + 14);
        int v14 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v13 + 1;
        if (v13 >= v14) {
          return 0LL;
        }
        int v15 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v41);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v15);
        int v17 = *((_DWORD *)this + 14);
        BOOL v18 = __OFSUB__(v17, 1);
        int v19 = v17 - 1;
        if (v19 < 0 == v18) {
          *((_DWORD *)this + 14) = v19;
        }
        int v20 = (_BYTE *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        char v11 = v20 + 1;
        *((void *)this + 1) = v11;
        goto LABEL_31;
      case 2u:
        int v7 = TagFallback & 7;
        char v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_31:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v41);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v21 = v41;
          int v22 = (_BYTE *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }

        else
        {
          unsigned int v21 = *v11;
          int v22 = v11 + 1;
          *((void *)this + 1) = v22;
        }

        *(_DWORD *)(a1 + 32) = v21;
        int v12 = *(_DWORD *)(a1 + 40) | 2;
        *(_DWORD *)(a1 + 40) = v12;
        *((void *)this + 1) = v22 + 1;
LABEL_39:
        *(_DWORD *)(a1 + 40) = v12 | 4;
        int v24 = *(void **)(a1 + 16);
        if (!v24)
        {
          int v24 = operator new(0x18uLL);
          v24[1] = 0LL;
          v24[2] = 0LL;
          *int v24 = off_10182A178;
          *(void *)(a1 + 16) = v24;
        }

        BOOL v25 = (char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v41)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v41 = *v25;
          *((void *)this + 1) = v25 + 1;
        }

        int v26 = *((_DWORD *)this + 14);
        int v27 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v26 + 1;
        if (v26 >= v27) {
          return 0LL;
        }
        int v28 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v41);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v28);
        int v30 = *((_DWORD *)this + 14);
        BOOL v18 = __OFSUB__(v30, 1);
        int v31 = v30 - 1;
        if (v31 < 0 == v18) {
          *((_DWORD *)this + 14) = v31;
        }
        unsigned int v32 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v32 + 1;
LABEL_53:
        *(_DWORD *)(a1 + 40) |= 8u;
        unsigned int v33 = *(void **)(a1 + 24);
        if (!v33)
        {
          unsigned int v33 = operator new(0x28uLL);
          v33[4] = 0LL;
          v33[1] = 0LL;
          v33[2] = 0LL;
          *unsigned int v33 = &off_10182A1F0;
          *(void *)((char *)v33 + 23) = 0LL;
          *(void *)(a1 + 24) = v33;
        }

        int v34 = (char *)*((void *)this + 1);
        if ((unint64_t)v34 >= *((void *)this + 2) || *v34 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v41)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v41 = *v34;
          *((void *)this + 1) = v34 + 1;
        }

        int v35 = *((_DWORD *)this + 14);
        int v36 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v35 + 1;
        if (v35 >= v36) {
          return 0LL;
        }
        int v37 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v41);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v37);
        int v39 = *((_DWORD *)this + 14);
        BOOL v18 = __OFSUB__(v39, 1);
        int v40 = v39 - 1;
        if (v40 < 0 == v18) {
          *((_DWORD *)this + 14) = v40;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1LL;
          *((_BYTE *)this + 36) = 1;
          return result;
        }

        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_19;
        }
        int v12 = *(_DWORD *)(a1 + 40);
        goto LABEL_39;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_19;
        }
        goto LABEL_53;
      default:
        int v7 = TagFallback & 7;
LABEL_19:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_10020438C( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 40);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0DD8 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(_DWORD *)(v5 + 32),  (int)a2,  a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      return result;
    }
    goto LABEL_13;
  }

uint64_t sub_100204450(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 40);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0LL;
    goto LABEL_36;
  }

  if ((*(_BYTE *)(a1 + 40) & 1) == 0)
  {
    uint64_t v4 = 0LL;
    if ((*(_BYTE *)(a1 + 40) & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }

  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_1019A0DD8 + 8);
  }
  int v6 = *(unsigned __int8 *)(v5 + 36);
  if (*(_BYTE *)(v5 + 36))
  {
    int v7 = (v6 << 31 >> 31) & 9;
    if ((v6 & 2) != 0) {
      v7 += 9;
    }
    if ((v6 & 4) != 0) {
      int v6 = v7 + 9;
    }
    else {
      int v6 = v7;
    }
  }

  *(_DWORD *)(v5 + 32) = v6;
  uint64_t v4 = (v6 + 2);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 2) != 0)
  {
LABEL_15:
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if ((v8 & 0x80000000) != 0)
    {
      int v9 = 11;
    }

    else if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 40);
    }

    else
    {
      int v9 = 2;
    }

    uint64_t v4 = (v9 + v4);
  }

void sub_1002045B0(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1002045FC()
{
  return 1LL;
}

void *sub_100204604@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.WatchState");
}

void sub_100204614(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v13,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  30803LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v13,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v12, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 36) & 1) != 0)
    {
      unsigned int v6 = *(_DWORD *)(a2 + 8);
      if (v6 >= 5) {
        sub_101230404();
      }
      *(_DWORD *)(a1 + 36) |= 1u;
      *(_DWORD *)(a1 + 8) = v6;
      int v5 = *(_DWORD *)(a2 + 36);
    }

    if ((v5 & 2) != 0)
    {
      unsigned int v7 = *(_DWORD *)(a2 + 12);
      if (v7 >= 3) {
        sub_1012303DC();
      }
      *(_DWORD *)(a1 + 36) |= 2u;
      *(_DWORD *)(a1 + 12) = v7;
      int v5 = *(_DWORD *)(a2 + 36);
    }

    if ((v5 & 4) != 0)
    {
      uint64_t v8 = *(const std::string **)(a2 + 16);
      *(_DWORD *)(a1 + 36) |= 4u;
      int v9 = *(std::string **)(a1 + 16);
      if (v9 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        int v9 = (std::string *)operator new(0x18uLL);
        v9->__r_.__value_.__l.__size_ = 0LL;
        v9->__r_.__value_.__l.__cap_ = 0LL;
        v9->__r_.__value_.__r.__words[0] = 0LL;
        *(void *)(a1 + 16) = v9;
      }

      std::string::operator=(v9, v8);
      int v5 = *(_DWORD *)(a2 + 36);
    }

    if ((v5 & 8) != 0)
    {
      uint64_t v10 = *(const std::string **)(a2 + 24);
      *(_DWORD *)(a1 + 36) |= 8u;
      char v11 = *(std::string **)(a1 + 24);
      if (v11 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        char v11 = (std::string *)operator new(0x18uLL);
        v11->__r_.__value_.__l.__size_ = 0LL;
        v11->__r_.__value_.__l.__cap_ = 0LL;
        v11->__r_.__value_.__r.__words[0] = 0LL;
        *(void *)(a1 + 24) = v11;
      }

      std::string::operator=(v11, v10);
    }
  }

void sub_100204764(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_10020477C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    operator delete((void *)v2);
  }

  uint64_t v4 = *(void *)(a1 + 24);
  if ((_UNKNOWN *)v4 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v4 != 0)
  {
    operator delete((void *)v4);
  }

void sub_100204804(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10182A2E0;
  sub_10020477C((uint64_t)a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100204834(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10182A2E0;
  sub_10020477C((uint64_t)a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v2);
}

double sub_100204868()
{
  unsigned __int8 v0 = operator new(0x28uLL);
  void *v0 = off_10182A2E0;
  double result = 0.0;
  v0[1] = 0LL;
  v0[2] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  v0[3] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  v0[4] = 0LL;
  return result;
}

uint64_t sub_1002048A4(uint64_t result)
{
  char v1 = *(_BYTE *)(result + 36);
  if (v1)
  {
    *(void *)(result + 8) = 0LL;
    if ((v1 & 4) != 0)
    {
      uint64_t v2 = *(void *)(result + 16);
      if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(_BYTE **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0LL;
        }

        else
        {
          *(_BYTE *)uint64_t v2 = 0;
          *(_BYTE *)(v2 + 23) = 0;
        }
      }
    }

    if ((*(_BYTE *)(result + 36) & 8) != 0)
    {
      uint64_t v3 = *(void *)(result + 24);
      if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(_BYTE **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0LL;
        }

        else
        {
          *(_BYTE *)uint64_t v3 = 0;
          *(_BYTE *)(v3 + 23) = 0;
        }
      }
    }
  }

  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_100204924( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        uint64_t v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 < *((void *)this + 2) && (*v8 & 0x80000000) == 0)
        {
          unsigned int v9 = *v8;
          *((void *)this + 1) = v8 + 1;
          goto LABEL_22;
        }

        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v20);
        if ((_DWORD)result)
        {
          unsigned int v9 = v20;
LABEL_22:
          if (v9 <= 4)
          {
            *(_DWORD *)(a1 + 36) |= 1u;
            *(_DWORD *)(a1 + 8) = v9;
          }

          char v12 = (_BYTE *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          if ((unint64_t)v12 < v10 && *v12 == 16)
          {
            char v11 = v12 + 1;
            *((void *)this + 1) = v11;
            goto LABEL_27;
          }

          continue;
        }

        break;
      case 2u:
        int v7 = TagFallback & 7;
        char v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_27:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v19);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v13 = v19;
        }

        else
        {
          unsigned int v13 = *v11;
          *((void *)this + 1) = v11 + 1;
        }

        if (v13 <= 2)
        {
          *(_DWORD *)(a1 + 36) |= 2u;
          *(_DWORD *)(a1 + 12) = v13;
        }

        uint64_t v14 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v14 + 1;
LABEL_37:
        *(_DWORD *)(a1 + 36) |= 4u;
        int v15 = *(void **)(a1 + 16);
        if (v15 == (void *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
        {
          int v15 = operator new(0x18uLL);
          v15[1] = 0LL;
          unsigned int v15[2] = 0LL;
          *int v15 = 0LL;
          *(void *)(a1 + 16) = v15;
        }

        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString(this, v15);
        if (!(_DWORD)result) {
          return result;
        }
        unsigned int v16 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v16 + 1;
LABEL_43:
        *(_DWORD *)(a1 + 36) |= 8u;
        int v17 = *(void **)(a1 + 24);
        if (v17 == (void *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
        {
          int v17 = operator new(0x18uLL);
          v17[1] = 0LL;
          v17[2] = 0LL;
          void *v17 = 0LL;
          *(void *)(a1 + 24) = v17;
        }

        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString(this, v17);
        if (!(_DWORD)result) {
          return result;
        }
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }

        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_37;
        }
        goto LABEL_17;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_17;
        }
        goto LABEL_43;
      default:
        int v7 = TagFallback & 7;
LABEL_17:
        if (v7 == 4) {
          return 1LL;
        }
        return 0LL;
    }

    return result;
  }

uint64_t sub_100204BCC( uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(_DWORD *)(result + 8),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(_DWORD *)(v5 + 12),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      return result;
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString(4LL, *(void *)(v5 + 24), a2);
  }

uint64_t sub_100204C60(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 36);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0LL;
    goto LABEL_40;
  }

  if ((*(_BYTE *)(a1 + 36) & 1) != 0)
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v5 & 0x80000000) != 0)
    {
      uint64_t v4 = 11LL;
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
    }

    else if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 36);
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
    }

    else
    {
      uint64_t v4 = 2LL;
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
    }
  }

  else
  {
    uint64_t v4 = 0LL;
    if ((*(_BYTE *)(a1 + 36) & 2) == 0) {
      goto LABEL_19;
    }
  }

  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if ((v6 & 0x80000000) != 0)
  {
    int v7 = 11;
  }

  else if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 36);
  }

  else
  {
    int v7 = 2;
  }

  uint64_t v4 = (v7 + v4);
LABEL_19:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_40;
    }
    goto LABEL_31;
  }

  uint64_t v8 = *(void *)(a1 + 16);
  int v9 = *(unsigned __int8 *)(v8 + 23);
  char v10 = v9;
  uint64_t v11 = *(void *)(v8 + 8);
  if ((v9 & 0x80u) == 0) {
    unint64_t v12 = *(unsigned __int8 *)(v8 + 23);
  }
  else {
    unint64_t v12 = v11;
  }
  if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback( (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v12,  a2);
    int v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v11 = *(void *)(v8 + 8);
    int v3 = *(_DWORD *)(a1 + 36);
    char v10 = *(_BYTE *)(v8 + 23);
  }

  else
  {
    int v13 = 1;
  }

  if (v10 < 0) {
    int v9 = v11;
  }
  uint64_t v4 = (v4 + v13 + v9 + 1);
  if ((v3 & 8) != 0)
  {
LABEL_31:
    uint64_t v14 = *(void *)(a1 + 24);
    int v15 = *(unsigned __int8 *)(v14 + 23);
    char v16 = v15;
    uint64_t v17 = *(void *)(v14 + 8);
    if ((v15 & 0x80u) == 0) {
      unint64_t v18 = *(unsigned __int8 *)(v14 + 23);
    }
    else {
      unint64_t v18 = v17;
    }
    if (v18 >= 0x80)
    {
      int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback( (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v18,  a2);
      int v15 = *(unsigned __int8 *)(v14 + 23);
      uint64_t v17 = *(void *)(v14 + 8);
      char v16 = *(_BYTE *)(v14 + 23);
    }

    else
    {
      int v19 = 1;
    }

    if (v16 < 0) {
      int v15 = v17;
    }
    uint64_t v4 = (v4 + v19 + v15 + 1);
  }

void sub_100204DC8(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_100204E14()
{
  return 1LL;
}

void *sub_100204E1C@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.PlaceInference");
}

double sub_100204E2C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v20,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  31214LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v20,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v19, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 68);
  if (!(_BYTE)v6) {
    return result;
  }
  if ((*(_BYTE *)(a2 + 68) & 1) != 0)
  {
    *(_DWORD *)(a1 + 68) |= 1u;
    int v7 = *(char **)(a1 + 8);
    if (!v7)
    {
      int v7 = (char *)operator new(0x28uLL);
      *(void *)int v7 = off_101827B80;
      *(_OWORD *)(v7 + 8) = 0u;
      *(_OWORD *)(v7 + 24) = 0u;
      *(void *)(a1 + 8) = v7;
    }

    uint64_t v8 = *(void *)(a2 + 8);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1019A0DE8 + 8);
    }
    double result = sub_1001D323C((uint64_t)v7, v8);
    int v6 = *(_DWORD *)(a2 + 68);
    if ((v6 & 2) == 0)
    {
LABEL_6:
      if ((v6 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_23;
    }
  }

  else if ((*(_BYTE *)(a2 + 68) & 2) == 0)
  {
    goto LABEL_6;
  }

  *(_DWORD *)(a1 + 68) |= 2u;
  int v9 = *(char **)(a1 + 16);
  if (!v9)
  {
    int v9 = (char *)operator new(0x28uLL);
    *(void *)int v9 = off_101827B80;
    *(_OWORD *)(v9 + 8) = 0u;
    *(_OWORD *)(v9 + 24) = 0u;
    *(void *)(a1 + 16) = v9;
  }

  uint64_t v10 = *(void *)(a2 + 16);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_1019A0DE8 + 16);
  }
  double result = sub_1001D323C((uint64_t)v9, v10);
  int v6 = *(_DWORD *)(a2 + 68);
  if ((v6 & 4) == 0)
  {
LABEL_7:
    if ((v6 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_28;
  }

void sub_1002050E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void *sub_100205100(void *result)
{
  if ((void *)qword_1019A0DE8 != result)
  {
    char v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
    }
    uint64_t v4 = v1[3];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
    }
    uint64_t v5 = v1[4];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
    }
    uint64_t v6 = v1[5];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
    }
    double result = (void *)v1[6];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_1002051AC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10182A358;
  sub_100205100(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1002051DC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10182A358;
  sub_100205100(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v2);
}

uint64_t sub_100205210(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0DE8;
  if (!qword_1019A0DE8)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0DE8;
  }

  return result;
}

double sub_10020523C()
{
  unsigned __int8 v0 = (char *)operator new(0x48uLL);
  *(void *)unsigned __int8 v0 = off_10182A358;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  return result;
}

uint64_t sub_100205274(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(_BYTE *)(result + 68);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(result + 68) & 1) != 0)
    {
      uint64_t v3 = *(void *)(result + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0LL;
          *(void *)(v3 + 16) = 0LL;
          *(void *)(v3 + 24) = 0LL;
        }

        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(result + 68);
      }
    }

    if ((v2 & 2) != 0)
    {
      uint64_t v4 = *(void *)(result + 16);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 36))
        {
          *(void *)(v4 + 8) = 0LL;
          *(void *)(v4 + 16) = 0LL;
          *(void *)(v4 + 24) = 0LL;
        }

        *(_DWORD *)(v4 + 36) = 0;
        int v2 = *(_DWORD *)(result + 68);
      }
    }

    if ((v2 & 4) != 0)
    {
      uint64_t v5 = *(void *)(result + 24);
      if (v5)
      {
        if (*(_BYTE *)(v5 + 36))
        {
          *(void *)(v5 + 8) = 0LL;
          *(void *)(v5 + 16) = 0LL;
          *(void *)(v5 + 24) = 0LL;
        }

        *(_DWORD *)(v5 + 36) = 0;
        int v2 = *(_DWORD *)(result + 68);
      }
    }

    if ((v2 & 8) != 0)
    {
      uint64_t v6 = *(void *)(result + 32);
      if (v6)
      {
        if (*(_BYTE *)(v6 + 36))
        {
          *(void *)(v6 + 8) = 0LL;
          *(void *)(v6 + 16) = 0LL;
          *(void *)(v6 + 24) = 0LL;
        }

        *(_DWORD *)(v6 + 36) = 0;
        int v2 = *(_DWORD *)(result + 68);
      }
    }

    if ((v2 & 0x10) != 0)
    {
      double result = *(void *)(result + 40);
      if (result)
      {
        double result = sub_1002048A4(result);
        int v2 = *(_DWORD *)(v1 + 68);
      }
    }

    if ((v2 & 0x20) != 0)
    {
      uint64_t v7 = *(void *)(v1 + 48);
      if (v7)
      {
        if (*(_BYTE *)(v7 + 28))
        {
          *(void *)(v7 + 8) = 0LL;
          *(void *)(v7 + 16) = 0LL;
        }

        *(_DWORD *)(v7 + 28) = 0;
      }
    }

    *(void *)(v1 + 56) = 0LL;
  }

  *(_DWORD *)(v1 + 68) = 0;
  return result;
}

uint64_t sub_100205360( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 < *((void *)this + 2) && (*v5 & 0x80000000) == 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
      goto LABEL_6;
    }

    TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = (_DWORD)TagFallback;
    if (!(_DWORD)TagFallback) {
      return 1LL;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_25;
        }
        *(_DWORD *)(a1 + 68) |= 1u;
        uint64_t v8 = *(char **)(a1 + 8);
        if (!v8)
        {
          uint64_t v8 = (char *)operator new(0x28uLL);
          *(void *)uint64_t v8 = off_101827B80;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *(void *)(a1 + 8) = v8;
        }

        int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v64)) {
            return 0LL;
          }
        }

        else
        {
          v64[0] = *v9;
          *((void *)this + 1) = v9 + 1;
        }

        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0LL;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v64[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        uint64_t v17 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v17 + 1;
        goto LABEL_37;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_25;
        }
LABEL_37:
        *(_DWORD *)(a1 + 68) |= 2u;
        uint64_t v18 = *(char **)(a1 + 16);
        if (!v18)
        {
          uint64_t v18 = (char *)operator new(0x28uLL);
          *(void *)uint64_t v18 = off_101827B80;
          *(_OWORD *)(v18 + 8) = 0u;
          *(_OWORD *)(v18 + 24) = 0u;
          *(void *)(a1 + 16) = v18;
        }

        char v19 = (char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v64)) {
            return 0LL;
          }
        }

        else
        {
          v64[0] = *v19;
          *((void *)this + 1) = v19 + 1;
        }

        int v20 = *((_DWORD *)this + 14);
        int v21 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v20 + 1;
        if (v20 >= v21) {
          return 0LL;
        }
        int v22 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v64[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v22);
        int v24 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v24, 1);
        int v25 = v24 - 1;
        if (v25 < 0 == v15) {
          *((_DWORD *)this + 14) = v25;
        }
        int v26 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v26 + 1;
LABEL_51:
        *(_DWORD *)(a1 + 68) |= 4u;
        int v27 = *(char **)(a1 + 24);
        if (!v27)
        {
          int v27 = (char *)operator new(0x28uLL);
          *(void *)int v27 = off_101827B80;
          *(_OWORD *)(v27 + 8) = 0u;
          *(_OWORD *)(v27 + 24) = 0u;
          *(void *)(a1 + 24) = v27;
        }

        int v28 = (char *)*((void *)this + 1);
        if ((unint64_t)v28 >= *((void *)this + 2) || *v28 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v64)) {
            return 0LL;
          }
        }

        else
        {
          v64[0] = *v28;
          *((void *)this + 1) = v28 + 1;
        }

        int v29 = *((_DWORD *)this + 14);
        int v30 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v29 + 1;
        if (v29 >= v30) {
          return 0LL;
        }
        int v31 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v64[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v31);
        int v33 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v33, 1);
        int v34 = v33 - 1;
        if (v34 < 0 == v15) {
          *((_DWORD *)this + 14) = v34;
        }
        int v35 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v35 + 1;
LABEL_65:
        *(_DWORD *)(a1 + 68) |= 8u;
        int v36 = *(char **)(a1 + 32);
        if (!v36)
        {
          int v36 = (char *)operator new(0x28uLL);
          *(void *)int v36 = off_101827B80;
          *(_OWORD *)(v36 + 8) = 0u;
          *(_OWORD *)(v36 + 24) = 0u;
          *(void *)(a1 + 32) = v36;
        }

        int v37 = (char *)*((void *)this + 1);
        if ((unint64_t)v37 >= *((void *)this + 2) || *v37 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v64)) {
            return 0LL;
          }
        }

        else
        {
          v64[0] = *v37;
          *((void *)this + 1) = v37 + 1;
        }

        int v38 = *((_DWORD *)this + 14);
        int v39 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v38 + 1;
        if (v38 >= v39) {
          return 0LL;
        }
        int v40 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v64[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v40);
        int v42 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v42, 1);
        int v43 = v42 - 1;
        if (v43 < 0 == v15) {
          *((_DWORD *)this + 14) = v43;
        }
        unint64_t v44 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v44 + 1;
LABEL_79:
        *(_DWORD *)(a1 + 68) |= 0x10u;
        uint64_t v45 = *(void **)(a1 + 40);
        if (!v45)
        {
          uint64_t v45 = operator new(0x28uLL);
          void *v45 = off_10182A2E0;
          v45[1] = 0LL;
          v45[2] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
          v45[3] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
          v45[4] = 0LL;
          *(void *)(a1 + 40) = v45;
        }

        unsigned int v46 = (char *)*((void *)this + 1);
        if ((unint64_t)v46 >= *((void *)this + 2) || *v46 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v64)) {
            return 0LL;
          }
        }

        else
        {
          v64[0] = *v46;
          *((void *)this + 1) = v46 + 1;
        }

        int v47 = *((_DWORD *)this + 14);
        int v48 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v47 + 1;
        if (v47 >= v48) {
          return 0LL;
        }
        int v49 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v64[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v49);
        int v51 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v51, 1);
        int v52 = v51 - 1;
        if (v52 < 0 == v15) {
          *((_DWORD *)this + 14) = v52;
        }
        int v53 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v53 + 1;
LABEL_93:
        *(_DWORD *)(a1 + 68) |= 0x20u;
        unsigned int v54 = *(void **)(a1 + 48);
        if (!v54)
        {
          unsigned int v54 = operator new(0x20uLL);
          void *v54 = off_101827EC8;
          v54[1] = 0LL;
          v54[2] = 0LL;
          v54[3] = 0LL;
          *(void *)(a1 + 48) = v54;
        }

        int v55 = (char *)*((void *)this + 1);
        if ((unint64_t)v55 >= *((void *)this + 2) || *v55 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v64)) {
            return 0LL;
          }
        }

        else
        {
          v64[0] = *v55;
          *((void *)this + 1) = v55 + 1;
        }

        int v56 = *((_DWORD *)this + 14);
        int v57 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v56 + 1;
        if (v56 >= v57) {
          return 0LL;
        }
        int v58 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v64[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v58);
        int v60 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v60, 1);
        int v61 = v60 - 1;
        if (v61 < 0 == v15) {
          *((_DWORD *)this + 14) = v61;
        }
        unsigned int v62 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v62 + 1;
LABEL_107:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v64) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 56) = *(void *)v64;
        *(_DWORD *)(a1 + 68) |= 0x40u;
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1LL;
          *((_BYTE *)this + 36) = 1;
          return result;
        }

        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_51;
        }
        goto LABEL_25;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_65;
        }
        goto LABEL_25;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_79;
        }
        goto LABEL_25;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_93;
        }
        goto LABEL_25;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_25;
        }
        goto LABEL_107;
      default:
        int v7 = TagFallback & 7;
LABEL_25:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_100205A70( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 68);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A0DE8 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 68);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_1019A0DE8 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v8,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }

uint64_t sub_100205BB8(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 68);
  if (!(_BYTE)v3)
  {
    uint64_t result = 0LL;
    goto LABEL_63;
  }

  if ((*(_BYTE *)(a1 + 68) & 1) == 0)
  {
    unsigned int v4 = 0;
    if ((*(_BYTE *)(a1 + 68) & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_15;
  }

  uint64_t v6 = *(void *)(a1 + 8);
  if (!v6) {
    uint64_t v6 = *(void *)(qword_1019A0DE8 + 8);
  }
  int v7 = *(unsigned __int8 *)(v6 + 36);
  if (*(_BYTE *)(v6 + 36))
  {
    int v8 = (v7 << 31 >> 31) & 9;
    if ((v7 & 2) != 0) {
      v8 += 9;
    }
    if ((v7 & 4) != 0) {
      int v7 = v8 + 9;
    }
    else {
      int v7 = v8;
    }
  }

  *(_DWORD *)(v6 + 32) = v7;
  unsigned int v4 = v7 + 2;
  int v3 = *(_DWORD *)(a1 + 68);
  if ((v3 & 2) != 0)
  {
LABEL_15:
    uint64_t v9 = *(void *)(a1 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_1019A0DE8 + 16);
    }
    int v10 = *(unsigned __int8 *)(v9 + 36);
    if (*(_BYTE *)(v9 + 36))
    {
      int v11 = (v10 << 31 >> 31) & 9;
      if ((v10 & 2) != 0) {
        v11 += 9;
      }
      if ((v10 & 4) != 0) {
        int v10 = v11 + 9;
      }
      else {
        int v10 = v11;
      }
    }

    *(_DWORD *)(v9 + 32) = v10;
    v4 += v10 + 2;
    int v3 = *(_DWORD *)(a1 + 68);
  }

double sub_100205DF4(uint64_t a1, void *lpsrc)
{
  return sub_100204E2C(a1, (uint64_t)lpsrc);
}

uint64_t sub_100205E40()
{
  return 1LL;
}

void *sub_100205E48@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.RoutineVisit");
}

float sub_100205E58(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v13,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  31621LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v13,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v12, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 56);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 56) & 1) != 0)
    {
      uint64_t v5 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 56) |= 1u;
      *(void *)(a1 + 8) = v5;
      int v6 = *(_DWORD *)(a2 + 56);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_20;
      }
    }

    else if ((*(_BYTE *)(a2 + 56) & 2) == 0)
    {
      goto LABEL_6;
    }

    uint64_t v5 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 56) |= 2u;
    *(void *)(a1 + 16) = v5;
    int v6 = *(_DWORD *)(a2 + 56);
    if ((v6 & 4) == 0)
    {
LABEL_7:
      if ((v6 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_22;
    }

void sub_100205FE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100205FF8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10182A3D0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100206008(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10182A3D0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

uint64_t sub_100206028(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A0DF0;
  if (!qword_1019A0DF0)
  {
    sub_1001D0A48(0LL, a2, a3, a4);
    return qword_1019A0DF0;
  }

  return result;
}

double sub_100206054()
{
  unsigned __int8 v0 = (char *)operator new(0x40uLL);
  *(void *)unsigned __int8 v0 = off_10182A3D0;
  *((_DWORD *)v0 + 14) = 0;
  *((void *)v0 + 6) = 0LL;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(void *)(v0 + 37) = 0LL;
  return result;
}

uint64_t sub_100206090(uint64_t result)
{
  if (*(_BYTE *)(result + 56))
  {
    *(_DWORD *)(result + 48) = 0;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)(result + 37) = 0LL;
  }

  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_1002060B4( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_32;
        }
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v28) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 8) = *(void *)v28;
        *(_DWORD *)(a1 + 56) |= 1u;
        char v8 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v8 + 1;
        goto LABEL_14;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_32;
        }
LABEL_14:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v28) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = *(void *)v28;
        *(_DWORD *)(a1 + 56) |= 2u;
        unsigned int v10 = (_BYTE *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        int v11 = v10 + 1;
        *((void *)this + 1) = v11;
LABEL_20:
        if ((unint64_t)v11 >= v9 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v28);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v12 = v28[0];
        }

        else
        {
          unsigned int v12 = *v11;
          *((void *)this + 1) = v11 + 1;
        }

        if (v12 <= 2)
        {
          *(_DWORD *)(a1 + 56) |= 4u;
          *(_DWORD *)(a1 + 24) = v12;
        }

        unsigned int v20 = (_BYTE *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        int v14 = v20 + 1;
        *((void *)this + 1) = v14;
LABEL_42:
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v28);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v21 = v28[0];
        }

        else
        {
          unsigned int v21 = *v14;
          *((void *)this + 1) = v14 + 1;
        }

        if (v21 <= 3)
        {
          *(_DWORD *)(a1 + 56) |= 8u;
          *(_DWORD *)(a1 + 28) = v21;
        }

        int v22 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v22 + 1;
LABEL_52:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v28) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 32) = *(void *)v28;
        *(_DWORD *)(a1 + 56) |= 0x10u;
        uint64_t v23 = (_BYTE *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        int v16 = v23 + 1;
        *((void *)this + 1) = v16;
LABEL_56:
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v28);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v24 = v28[0];
        }

        else
        {
          unsigned int v24 = *v16;
          *((void *)this + 1) = v16 + 1;
        }

        if (v24 <= 3)
        {
          *(_DWORD *)(a1 + 56) |= 0x20u;
          *(_DWORD *)(a1 + 40) = v24;
        }

        int v25 = (_BYTE *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        uint64_t v18 = v25 + 1;
        *((void *)this + 1) = v18;
LABEL_66:
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v28);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v26 = v28[0];
          int v27 = (_BYTE *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }

        else
        {
          unsigned int v26 = *v18;
          int v27 = v18 + 1;
          *((void *)this + 1) = v27;
        }

        *(_BYTE *)(a1 + 44) = v26 != 0;
        *(_DWORD *)(a1 + 56) |= 0x40u;
        *((void *)this + 1) = v27 + 1;
LABEL_74:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v28) & 1) != 0)
        {
          *(_DWORD *)(a1 + 48) = v28[0];
          *(_DWORD *)(a1 + 56) |= 0x80u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1LL;
            *((_BYTE *)this + 36) = 1;
            return result;
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v7 = TagFallback & 7;
        int v11 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_20;
      case 4u:
        int v7 = TagFallback & 7;
        int v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_42;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_52;
        }
        goto LABEL_32;
      case 6u:
        int v7 = TagFallback & 7;
        int v16 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_56;
      case 7u:
        int v7 = TagFallback & 7;
        uint64_t v18 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_66;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_32;
        }
        goto LABEL_74;
      default:
        int v7 = TagFallback & 7;
LABEL_32:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1002064C4( uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 56);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  a2,  *(double *)(result + 8),  a3);
    int v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  a2,  *(double *)(v5 + 16),  a3);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }

uint64_t sub_1002065C8(uint64_t a1, unsigned int a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 56);
  if (*(_BYTE *)(a1 + 56))
  {
    if ((v3 & 2) != 0) {
      int v4 = ((v3 << 31 >> 31) & 9) + 9;
    }
    else {
      int v4 = (v3 << 31 >> 31) & 9;
    }
    if ((v3 & 4) != 0)
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
      if ((v5 & 0x80000000) != 0)
      {
        int v6 = 11;
      }

      else if (v5 >= 0x80)
      {
        int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 56);
      }

      else
      {
        int v6 = 2;
      }

      v4 += v6;
    }

    if ((v3 & 8) != 0)
    {
      char v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
      if ((v8 & 0x80000000) != 0)
      {
        int v9 = 11;
      }

      else if (v8 >= 0x80)
      {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 56);
      }

      else
      {
        int v9 = 2;
      }

      v4 += v9;
    }

    if ((v3 & 0x10) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x20) != 0)
    {
      unsigned int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
      if ((v10 & 0x80000000) != 0)
      {
        int v11 = 11;
      }

      else if (v10 >= 0x80)
      {
        int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 56);
      }

      else
      {
        int v11 = 2;
      }

      v4 += v11;
    }

    unsigned int v12 = v4 + 2;
    if ((v3 & 0x40) == 0) {
      unsigned int v12 = v4;
    }
    if ((v3 & 0x80) != 0) {
      uint64_t result = v12 + 5;
    }
    else {
      uint64_t result = v12;
    }
  }

  else
  {
    uint64_t result = 0LL;
  }

  *(_DWORD *)(a1 + 52) = result;
  return result;
}

float sub_1002066D0(uint64_t a1, void *lpsrc)
{
  return sub_100205E58(a1, (uint64_t)lpsrc);
}

uint64_t sub_10020671C()
{
  return 1LL;
}

void *sub_100206724@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.OutdoorUpdate");
}

void sub_100206734(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v25,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc",  32365LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v25,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v24, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v25);
  }

  int v5 = *(_DWORD *)(a2 + 84);
  if (!(_BYTE)v5) {
    goto LABEL_13;
  }
  if ((v5 & 1) != 0)
  {
    uint64_t v11 = *(void *)(a2 + 8);
    *(_DWORD *)(a1 + 84) |= 1u;
    *(void *)(a1 + 8) = v11;
    int v5 = *(_DWORD *)(a2 + 84);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_33;
    }
  }

  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }

  uint64_t v12 = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 84) |= 2u;
  *(void *)(a1 + 16) = v12;
  int v5 = *(_DWORD *)(a2 + 84);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_34;
  }

void sub_100206A04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100206A1C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10182A448;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100206A2C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10182A448;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

double sub_100206A4C()
{
  unsigned __int8 v0 = (char *)operator new(0x58uLL);
  *(void *)unsigned __int8 v0 = off_10182A448;
  *((void *)v0 + 10) = 0LL;
  *((_DWORD *)v0 + 19) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_DWORD *)(v0 + 71) = 0;
  return result;
}

uint64_t sub_100206A90(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 84);
  if ((_BYTE)v1)
  {
    *(void *)(result + 40) = 0LL;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }

  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(result + 48) = 0LL;
    *(void *)(result + 56) = 0LL;
    *(_WORD *)(result + 72) = 0;
    *(void *)(result + 64) = 0LL;
  }

  if ((v1 & 0xFF0000) != 0)
  {
    *(_BYTE *)(result + 74) = 0;
    *(_DWORD *)(result + 76) = 0;
  }

  *(_DWORD *)(result + 84) = 0;
  return result;
}

uint64_t sub_100206AD8( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_85;
        }
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v38) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 8) = *(void *)v38;
        *(_DWORD *)(a1 + 84) |= 1u;
        char v8 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v8 + 1;
        goto LABEL_14;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_85;
        }
LABEL_14:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v38) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = *(void *)v38;
        *(_DWORD *)(a1 + 84) |= 2u;
        char v9 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v9 + 1;
LABEL_19:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v38) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 24) = v38[0];
        *(_DWORD *)(a1 + 84) |= 4u;
        unsigned int v10 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v10 + 1;
LABEL_24:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v38) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 28) = v38[0];
        *(_DWORD *)(a1 + 84) |= 8u;
        uint64_t v11 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v11 + 1;
LABEL_29:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v38) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 32) = v38[0];
        *(_DWORD *)(a1 + 84) |= 0x10u;
        uint64_t v12 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v12 + 1;
LABEL_34:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v38) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 36) = v38[0];
        *(_DWORD *)(a1 + 84) |= 0x20u;
        int v13 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v13 + 1;
LABEL_39:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v38) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 40) = v38[0];
        *(_DWORD *)(a1 + 84) |= 0x40u;
        int v14 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v14 + 1;
LABEL_44:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v38) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 44) = v38[0];
        *(_DWORD *)(a1 + 84) |= 0x80u;
        int v15 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v15 + 1;
LABEL_49:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v38) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 48) = v38[0];
        *(_DWORD *)(a1 + 84) |= 0x100u;
        int v16 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v16 + 1;
LABEL_54:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v38) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 52) = v38[0];
        *(_DWORD *)(a1 + 84) |= 0x200u;
        int v17 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v17 + 1;
LABEL_59:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v38) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 56) = v38[0];
        *(_DWORD *)(a1 + 84) |= 0x400u;
        int v18 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v18 + 1;
LABEL_64:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v38) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 60) = v38[0];
        *(_DWORD *)(a1 + 84) |= 0x800u;
        int v19 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v19 + 1;
LABEL_69:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v38) & 1) != 0)
        {
          *(_DWORD *)(a1 + 64) = v38[0];
          *(_DWORD *)(a1 + 84) |= 0x1000u;
          int v21 = (_BYTE *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
          if ((unint64_t)v21 < v20 && *v21 == 112)
          {
            int v22 = v21 + 1;
            *((void *)this + 1) = v22;
LABEL_75:
            if ((unint64_t)v22 >= v20 || *v22 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v38);
              if (!(_DWORD)result) {
                return result;
              }
              unsigned int v23 = v38[0];
            }

            else
            {
              unsigned int v23 = *v22;
              *((void *)this + 1) = v22 + 1;
            }

            if (v23 <= 2)
            {
              *(_DWORD *)(a1 + 84) |= 0x2000u;
              *(_DWORD *)(a1 + 68) = v23;
            }

            int v30 = (_BYTE *)*((void *)this + 1);
            unint64_t v24 = *((void *)this + 2);
            if ((unint64_t)v30 < v24 && *v30 == 120)
            {
              int v25 = v30 + 1;
              *((void *)this + 1) = v25;
LABEL_96:
              if ((unint64_t)v25 >= v24 || (char)*v25 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v38);
                if (!(_DWORD)result) {
                  return result;
                }
                unsigned int v31 = v38[0];
                unsigned int v32 = (unsigned __int8 *)*((void *)this + 1);
                unint64_t v24 = *((void *)this + 2);
              }

              else
              {
                unsigned int v31 = *v25;
                unsigned int v32 = v25 + 1;
                *((void *)this + 1) = v32;
              }

              *(_BYTE *)(a1 + 72) = v31 != 0;
              *(_DWORD *)(a1 + 84) |= 0x4000u;
              if ((int)v24 - (int)v32 >= 2 && *v32 == 128 && v32[1] == 1)
              {
                unsigned int v26 = v32 + 2;
                *((void *)this + 1) = v26;
LABEL_105:
                if ((unint64_t)v26 >= v24 || (char)*v26 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v38);
                  if (!(_DWORD)result) {
                    return result;
                  }
                  unsigned int v33 = v38[0];
                  int v34 = (unsigned __int8 *)*((void *)this + 1);
                  unint64_t v24 = *((void *)this + 2);
                }

                else
                {
                  unsigned int v33 = *v26;
                  int v34 = v26 + 1;
                  *((void *)this + 1) = v34;
                }

                *(_BYTE *)(a1 + 73) = v33 != 0;
                *(_DWORD *)(a1 + 84) |= 0x8000u;
                if ((int)v24 - (int)v34 >= 2 && *v34 == 136 && v34[1] == 1)
                {
                  int v27 = v34 + 2;
                  *((void *)this + 1) = v27;
LABEL_114:
                  if ((unint64_t)v27 >= v24 || (char)*v27 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v38);
                    if (!(_DWORD)result) {
                      return result;
                    }
                    unsigned int v35 = v38[0];
                    int v36 = (unsigned __int8 *)*((void *)this + 1);
                    unint64_t v24 = *((void *)this + 2);
                  }

                  else
                  {
                    unsigned int v35 = *v27;
                    int v36 = v27 + 1;
                    *((void *)this + 1) = v36;
                  }

                  *(_BYTE *)(a1 + 74) = v35 != 0;
                  *(_DWORD *)(a1 + 84) |= 0x10000u;
                  if ((int)v24 - (int)v36 >= 2 && *v36 == 144 && v36[1] == 1)
                  {
                    int v28 = (char *)(v36 + 2);
                    *((void *)this + 1) = v28;
LABEL_123:
                    if ((unint64_t)v28 >= v24 || *v28 < 0)
                    {
                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v38);
                      if (!(_DWORD)result) {
                        return result;
                      }
                      unsigned int v37 = v38[0];
                    }

                    else
                    {
                      unsigned int v37 = *v28;
                      *((void *)this + 1) = v28 + 1;
                    }

                    if (v37 <= 3)
                    {
                      *(_DWORD *)(a1 + 84) |= 0x20000u;
                      *(_DWORD *)(a1 + 76) = v37;
                    }

                    if (*((void *)this + 1) == *((void *)this + 2)
                      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                    {
                      *((_DWORD *)this + 8) = 0;
                      uint64_t result = 1LL;
                      *((_BYTE *)this + 36) = 1;
                      return result;
                    }
                  }
                }
              }
            }
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_19;
        }
        goto LABEL_85;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_24;
        }
        goto LABEL_85;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_29;
        }
        goto LABEL_85;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_34;
        }
        goto LABEL_85;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_39;
        }
        goto LABEL_85;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_44;
        }
        goto LABEL_85;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_49;
        }
        goto LABEL_85;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_54;
        }
        goto LABEL_85;
      case 0xBu:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_59;
        }
        goto LABEL_85;
      case 0xCu:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_64;
        }
        goto LABEL_85;
      case 0xDu:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_69;
        }
        goto LABEL_85;
      case 0xEu:
        int v7 = TagFallback & 7;
        int v22 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_75;
      case 0xFu:
        int v7 = TagFallback & 7;
        int v25 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        goto LABEL_96;
      case 0x10u:
        int v7 = TagFallback & 7;
        unsigned int v26 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        goto LABEL_105;
      case 0x11u:
        int v7 = TagFallback & 7;
        int v27 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        goto LABEL_114;
      case 0x12u:
        int v7 = TagFallback & 7;
        int v28 = (char *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        goto LABEL_123;
      default:
        int v7 = TagFallback & 7;
LABEL_85:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_10020728C( uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 84);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  a2,  *(double *)(result + 8),  a3);
    int v6 = *(_DWORD *)(v5 + 84);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_22;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  a2,  *(double *)(v5 + 16),  a3);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_23;
  }

uint64_t sub_1002074A8(unsigned int *a1, unsigned int a2)
{
  unsigned int v3 = a1[21];
  if ((_BYTE)v3)
  {
    unsigned int v4 = ((int)(v3 << 31) >> 31) & 9;
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 5;
    }
    if ((v3 & 8) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x40) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x80) != 0) {
      uint64_t v5 = v4 + 5;
    }
    else {
      uint64_t v5 = v4;
    }
  }

  else
  {
    uint64_t v5 = 0LL;
  }

  if ((v3 & 0xFF00) != 0)
  {
    unsigned int v6 = v5 + 5;
    if ((v3 & 0x100) == 0) {
      unsigned int v6 = v5;
    }
    if ((v3 & 0x200) != 0) {
      v6 += 5;
    }
    if ((v3 & 0x400) != 0) {
      v6 += 5;
    }
    if ((v3 & 0x800) != 0) {
      v6 += 5;
    }
    if ((v3 & 0x1000) != 0) {
      unsigned int v7 = v6 + 5;
    }
    else {
      unsigned int v7 = v6;
    }
    if ((v3 & 0x2000) != 0)
    {
      char v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[17];
      if ((v8 & 0x80000000) != 0)
      {
        int v9 = 11;
      }

      else if (v8 >= 0x80)
      {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
        unsigned int v3 = a1[21];
      }

      else
      {
        int v9 = 2;
      }

      v7 += v9;
    }

    unsigned int v10 = v7 + 2;
    if ((v3 & 0x4000) == 0) {
      unsigned int v10 = v7;
    }
    if ((v3 & 0x8000) != 0) {
      uint64_t v5 = v10 + 3;
    }
    else {
      uint64_t v5 = v10;
    }
  }

  if ((v3 & 0xFF0000) != 0)
  {
    uint64_t v5 = (v3 & 0x10000) != 0 ? (v5 + 3) : v5;
    if ((v3 & 0x20000) != 0)
    {
      uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[19];
      if ((v11 & 0x80000000) != 0)
      {
        int v12 = 12;
      }

      else if (v11 >= 0x80)
      {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 2;
      }

      else
      {
        int v12 = 3;
      }

      uint64_t v5 = (v12 + v5);
    }
  }

  a1[20] = v5;
  return v5;
}

void sub_100207614(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_100207660()
{
  return 1LL;
}

void *sub_100207668@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.InertialOdometrySample");
}

uint64_t sub_100207678(uint64_t a1)
{
  return *(unsigned int *)(a1 + 148);
}

uint64_t sub_100207680(uint64_t a1)
{
  return *(unsigned int *)(a1 + 360);
}

uint64_t sub_100207688(uint64_t a1)
{
  return *(unsigned int *)(a1 + 96);
}

uint64_t sub_100207690(uint64_t a1)
{
  return *(unsigned int *)(a1 + 120);
}

uint64_t sub_100207698(uint64_t a1)
{
  return *(unsigned int *)(a1 + 144);
}

uint64_t sub_1002076A0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 84);
}

void sub_1002076A8(wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *a1, uint64_t a2)
{
  if (*(int *)(a2 + 8) >= 1)
  {
    uint64_t v4 = 0LL;
    do
    {
      uint64_t v5 = *(void *)(*(void *)a2 + 8 * v4);
      int v6 = *((_DWORD *)a1 + 3);
      uint64_t v7 = *((int *)a1 + 2);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)a1 + 4))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, v6 + 1);
          int v6 = *((_DWORD *)a1 + 3);
        }

        *((_DWORD *)a1 + 3) = v6 + 1;
        int v9 = (char *)operator new(0xA0uLL);
        *(void *)int v9 = off_101827F40;
        *(_OWORD *)(v9 + 8) = 0u;
        *(_OWORD *)(v9 + 24) = 0u;
        *(_OWORD *)(v9 + 40) = 0u;
        *(_OWORD *)(v9 + 56) = 0u;
        *(_OWORD *)(v9 + 72) = 0u;
        *(_OWORD *)(v9 + 88) = 0u;
        *(_OWORD *)(v9 + 104) = 0u;
        *(_OWORD *)(v9 + 120) = xmmword_1012E0BA0;
        *((void *)v9 + 17) = 0LL;
        v9[144] = 0;
        *((_DWORD *)v9 + 37) = 0;
        *((_DWORD *)v9 + 38) = 0;
        uint64_t v10 = *(void *)a1;
        uint64_t v11 = *((int *)a1 + 2);
        *((_DWORD *)a1 + 2) = v11 + 1;
        *(void *)(v10 + 8 * v11) = v9;
      }

      else
      {
        uint64_t v8 = *(void *)a1;
        *((_DWORD *)a1 + 2) = v7 + 1;
        int v9 = *(char **)(v8 + 8 * v7);
      }

      sub_1001D6490((uint64_t)v9, v5);
      ++v4;
    }

    while (v4 < *(int *)(a2 + 8));
  }

void sub_1002077D0(wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *a1, uint64_t a2)
{
  if (*(int *)(a2 + 8) >= 1)
  {
    uint64_t v4 = 0LL;
    do
    {
      uint64_t v5 = *(void *)(*(void *)a2 + 8 * v4);
      int v6 = *((_DWORD *)a1 + 3);
      uint64_t v7 = *((int *)a1 + 2);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)a1 + 4))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, v6 + 1);
          int v6 = *((_DWORD *)a1 + 3);
        }

        *((_DWORD *)a1 + 3) = v6 + 1;
        int v9 = (char *)operator new(0x178uLL);
        *(void *)int v9 = off_101828198;
        *((void *)v9 + 36) = 0LL;
        *((void *)v9 + 37) = 0LL;
        *((_DWORD *)v9 + 76) = 0;
        *((_DWORD *)v9 + 90) = 0;
        *((_WORD *)v9 + 56) = 0;
        *(_OWORD *)(v9 + 8) = 0u;
        *(_OWORD *)(v9 + 24) = 0u;
        *(_OWORD *)(v9 + 40) = 0u;
        *(_OWORD *)(v9 + 56) = 0u;
        *(_OWORD *)(v9 + 72) = 0u;
        *((void *)v9 + 11) = 0LL;
        *((void *)v9 + 12) = 0xFFFFFFFFLL;
        *((void *)v9 + 13) = 0LL;
        *(void *)(v9 + 364) = 0LL;
        *(_OWORD *)(v9 + 130) = 0u;
        *(_OWORD *)(v9 + 146) = 0u;
        *(_OWORD *)(v9 + 162) = 0u;
        *(_OWORD *)(v9 + 178) = 0u;
        *(_OWORD *)(v9 + 194) = 0u;
        *(_OWORD *)(v9 + 210) = 0u;
        *(_OWORD *)(v9 + 226) = 0u;
        *(_OWORD *)(v9 + 242) = 0u;
        *((_OWORD *)v9 + 17) = 0u;
        *(_OWORD *)(v9 + 114) = 0u;
        *(_OWORD *)(v9 + 258) = 0u;
        *(_OWORD *)(v9 + 341) = 0u;
        *(_OWORD *)(v9 + 312) = 0u;
        *(_OWORD *)(v9 + 328) = 0u;
        uint64_t v10 = *(void *)a1;
        uint64_t v11 = *((int *)a1 + 2);
        *((_DWORD *)a1 + 2) = v11 + 1;
        *(void *)(v10 + 8 * v11) = v9;
      }

      else
      {
        uint64_t v8 = *(void *)a1;
        *((_DWORD *)a1 + 2) = v7 + 1;
        int v9 = *(char **)(v8 + 8 * v7);
      }

      sub_1001D92D4((uint64_t)v9, v5);
      ++v4;
    }

    while (v4 < *(int *)(a2 + 8));
  }

uint64_t sub_10020792C(uint64_t a1, float *a2)
{
  if (a1) {
    uint64_t v2 = a1 - 8;
  }
  else {
    uint64_t v2 = 0LL;
  }
  return sub_1002083C4(v2, a2);
}

uint64_t sub_10020793C(uint64_t result)
{
  uint64_t v1 = result - 8;
  if (!result) {
    uint64_t v1 = 0LL;
  }
  *(void *)(v1 + 104) = 0LL;
  *(_DWORD *)(v1 + 100) = 0;
  *(void *)(v1 + 564) = 0LL;
  return result;
}

BOOL sub_10020795C(uint64_t a1, uint64_t a2)
{
  return *(float *)(a2 + 4) > 15.0;
}

double sub_100207970(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a1 - 8;
  }
  else {
    uint64_t v2 = 0LL;
  }
  *(void *)&double result = sub_1002089D8(v2, a2).n128_u64[0];
  return result;
}

uint64_t sub_100207980(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a1 - 8;
  }
  else {
    uint64_t v2 = 0LL;
  }
  return sub_1002087F4(v2, a2);
}

uint64_t sub_100207990(uint64_t result)
{
  uint64_t v1 = result - 8;
  if (!result) {
    uint64_t v1 = 0LL;
  }
  *(void *)(v1 + 104) = 0LL;
  *(_DWORD *)(v1 + 100) = 0;
  *(void *)(v1 + 564) = 0LL;
  return result;
}

uint64_t sub_1002079B4(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a1 - 8;
  }
  else {
    uint64_t v2 = 0LL;
  }
  return sub_100208860(v2, a2);
}

double sub_1002079C4(uint64_t a1)
{
  *(void *)(a1 + 16) = 9LL;
  *(_WORD *)(a1 + 24) = 512;
  *(void *)a1 = off_10182ADD8;
  *(void *)(a1 + 8) = &unk_10182ACF0;
  *(_BYTE *)(a1 + 28) = 1;
  *(void *)(a1 + 44) = 0xC00000000LL;
  *(_DWORD *)(a1 + 40) = 1031798784;
  *(void *)(a1 + 100) = 0LL;
  *(_DWORD *)(a1 + 108) = 0;
  *(void *)(a1 + 112) = off_101848F08;
  *(_OWORD *)(a1 + 120) = xmmword_1012E1E80;
  *(void *)(a1 + 136) = 0xFFEFFFFFFFFFFFFFLL;
  *(_DWORD *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0LL;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_BYTE *)(a1 + 176) = 1;
  *(_DWORD *)(a1 + 196) = 75;
  *(void *)(a1 + 188) = 0LL;
  *(_OWORD *)(a1 + 504) = 0u;
  *(void *)(a1 + 520) = 0xC08F380000000000LL;
  *(void *)(a1 + 528) = 0xC08F380000000000LL;
  *(_BYTE *)(a1 + 536) = 0;
  *(void *)(a1 + 544) = 0LL;
  *(_BYTE *)(a1 + 552) = 0;
  *(void *)(a1 + 576) = 0LL;
  *(_OWORD *)(a1 + 560) = 0u;
  *(void *)(a1 + 584) = 0xC08F380000000000LL;
  *(void *)(a1 + 592) = 0xC08F380000000000LL;
  *(_BYTE *)(a1 + 600) = 0;
  *(void *)(a1 + 608) = 0LL;
  *(_BYTE *)(a1 + 616) = 0;
  *(void *)&double result = 0x3C00000000LL;
  *(void *)(a1 + 624) = 0x3C00000000LL;
  *(void *)(a1 + 872) = 0x3C00000000LL;
  return result;
}

uint64_t sub_100207AAC(uint64_t a1, double *a2)
{
  uint64_t v4 = operator new(0xCuLL);
  unsigned int v46 = v4 + 3;
  int v47 = (char *)(v4 + 3);
  *(void *)uint64_t v4 = 7LL;
  void v4[2] = 8;
  std::stringbuf::string_type __p = v4;
  uint64_t v5 = sub_1006A7E04(a1 + 112, (uint64_t)a2);
  if ((_DWORD)v5)
  {
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_10182AE50);
    }
    int v6 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
    {
      int v7 = *(unsigned __int8 *)(a1 + 24);
      *(_DWORD *)buf = 67240192;
      *(_DWORD *)&uint8_t buf[4] = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "HRStop detect in indoor cycle model during state,%{public}d",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_10182AE50);
      }
      int v8 = *(unsigned __int8 *)(a1 + 24);
      LODWORD(v71[0]) = 67240192;
      DWORD1(v71[0]) = v8;
      int v9 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "HRStop detect in indoor cycle model during state,%{public}d",  v71,  8);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual CLWorkoutPredictor_Type::WorkoutStopDetectionEvent CLStationaryCycleStopModel::update(const CLWorkoutPredictorInputs &)",  "%s\n",  v9);
    }
  }

  else
  {
    __int16 v74 = 0;
    v71[0] = xmmword_1012E1E90;
    memset(&v71[1], 0, 96);
    __int128 v72 = 0u;
    memset(v73, 0, sizeof(v73));
    __int128 v75 = xmmword_1012E1E90;
    uint64_t v76 = 0LL;
    int v77 = 0;
    uint64_t v78 = 0LL;
    v79[0] = 0LL;
    *(void *)((char *)v79 + 5) = 0LL;
    *(void *)((char *)&v79[1] + 6) = 0LL;
    char v80 = 0;
    memset(&v79[3], 0, 24);
    __int128 v81 = xmmword_1012E1E90;
    uint64_t v82 = 0LL;
    int v83 = 0;
    unint64_t v84 = 0xFFEFFFFFFFFFFFFFLL;
    int v95 = 0;
    __int128 v85 = 0u;
    __int128 v86 = 0u;
    __int128 v87 = 0u;
    __int128 v88 = 0u;
    __int128 v89 = 0u;
    int v90 = 0;
    __int128 v91 = 0u;
    __int128 v92 = 0u;
    __int128 v93 = 0u;
    memset(v94, 0, sizeof(v94));
    uint64_t v96 = 0LL;
    uint64_t v97 = 0LL;
    unint64_t v98 = 0xFFEFFFFFFFFFFFFFLL;
    uint64_t v99 = 0LL;
    int v100 = 0;
    uint64_t v106 = 0LL;
    __int16 v107 = 0;
    int v112 = 0;
    int v105 = 0;
    __int128 v103 = 0u;
    __int128 v104 = 0u;
    __int128 v101 = 0u;
    __int128 v102 = 0u;
    __int128 v109 = 0u;
    __int128 v108 = 0u;
    char v110 = 0;
    memset(v111, 0, sizeof(v111));
    unint64_t v113 = 0xFFEFFFFFFFFFFFFFLL;
    __int128 v132 = 0u;
    __int128 v131 = 0u;
    __int128 v130 = 0u;
    __int128 v129 = 0u;
    __int128 v128 = 0u;
    __int128 v127 = 0u;
    __int128 v126 = 0u;
    __int128 v125 = 0u;
    __int128 v124 = 0u;
    __int128 v123 = 0u;
    __int128 v122 = 0u;
    __int128 v121 = 0u;
    __int128 v120 = 0u;
    __int128 v119 = 0u;
    __int128 v118 = 0u;
    __int128 v117 = 0u;
    __int128 v116 = 0u;
    __int128 v115 = 0u;
    __int128 v114 = 0u;
    uint64_t v133 = 0LL;
    unint64_t v134 = 0xFFEFFFFFFFFFFFFFLL;
    __int128 v135 = 0u;
    __int128 v136 = 0u;
    __int128 v137 = 0u;
    __int128 v138 = 0u;
    unint64_t v139 = 0xFFEFFFFFFFFFFFFFLL;
    uint64_t v140 = 0LL;
    int v141 = 0;
    uint64_t v142 = 0LL;
    char v143 = 0;
    unint64_t v144 = 0xFFEFFFFFFFFFFFFFLL;
    uint64_t v146 = 0LL;
    uint64_t v145 = 0LL;
    uint64_t v147 = 0x80000000800000LL;
    uint64_t v149 = 0LL;
    uint64_t v148 = 0LL;
    __int128 v150 = xmmword_1012E1EA0;
    uint64_t v151 = 0x80000000800000LL;
    __int128 v152 = 0u;
    __int128 v153 = 0u;
    uint64_t v154 = 0LL;
    unint64_t v155 = 0xFFEFFFFFFFFFFFFFLL;
    __int128 v156 = 0u;
    __int128 v157 = 0u;
    __int128 v158 = 0u;
    __int128 v159 = 0u;
    __int128 v160 = 0u;
    __int128 v161 = 0u;
    int v162 = 0;
    unint64_t v163 = 0xFFEFFFFFFFFFFFFFLL;
    __int16 v164 = 0;
    int v165 = 0;
    unint64_t v166 = 0xFFEFFFFFFFFFFFFFLL;
    uint64_t v167 = 7LL;
    unint64_t v168 = 0xFFEFFFFFFFFFFFFFLL;
    char v169 = 0;
    uint64_t v171 = 0LL;
    uint64_t v170 = 0LL;
    uint64_t v172 = 0LL;
    if ((sub_100CDB578(a2, &__p, (uint64_t)v71) & 1) != 0)
    {
      uint64_t v10 = *(unsigned __int16 *)(a1 + 44);
      uint64_t v11 = (_BYTE *)(a1 + 28);
      float v12 = *((float *)&v145 + 1) * 57.296;
      uint64_t v13 = *(unsigned __int16 *)(a1 + 46);
      unint64_t v14 = *(unsigned int *)(a1 + 48);
      if (v10 + v13 >= v14) {
        uint64_t v15 = *(unsigned int *)(a1 + 48);
      }
      else {
        uint64_t v15 = 0LL;
      }
      *(float *)(a1 + 44 + 4 * (v10 + v13 - v15) + 8) = v12;
      if (v14 <= v13)
      {
        unint64_t v16 = v10 + 1;
        if (v16 >= v14) {
          __int16 v17 = v14;
        }
        else {
          __int16 v17 = 0;
        }
        *(_WORD *)(a1 + 44) = v16 - v17;
      }

      else
      {
        LOWORD(v13) = v13 + 1;
        *(_WORD *)(a1 + 46) = v13;
        LODWORD(v13) = (unsigned __int16)v13;
      }

      *uint64_t v11 = 1;
      if ((_DWORD)v14 == (_DWORD)v13)
      {
        int v18 = v127;
        if ((_DWORD)v127) {
          int v18 = *(_DWORD *)(a1 + 572) + 1;
        }
        *(_DWORD *)(a1 + 572) = v18;
        if (sub_100E3F5D8((unsigned __int16 *)(a1 + 624), a1 + 512, v12))
        {
          uint64_t v5 = 12LL;
          goto LABEL_45;
        }

        double v41 = 0.0;
        *(void *)int v42 = 0LL;
        *(int64x2_t *)&v42[8] = vdupq_n_s64(0xC08F380000000000LL);
        v42[24] = 0;
        *(void *)&v42[32] = 0LL;
        v42[40] = 0;
        uint64_t v43 = 0LL;
        float v44 = 0.0;
        if (*v11) {
          sub_100208C68(a1 + 28);
        }
        float v19 = *(float *)(a1 + 36);
        float v20 = sqrtf(v19);
        BOOL v21 = v19 <= 0.0;
        float v22 = 0.0;
        if (!v21) {
          float v22 = v20;
        }
        float v23 = *(float *)&v148;
        *(float *)&double v41 = v22;
        *((float *)&v41 + 1) = v23 * 57.296;
        __int128 v24 = *(_OWORD *)(a1 + 528);
        *(_OWORD *)int v42 = *(_OWORD *)(a1 + 512);
        *(_OWORD *)&v42[16] = v24;
        *(_OWORD *)&v42[25] = *(_OWORD *)(a1 + 537);
        LODWORD(v43) = DWORD1(v72);
        HIDWORD(v43) = *(_DWORD *)(a1 + 572);
        float v44 = *((float *)&v150 + 2) * 57.296;
        sub_100CCCC8C(a1 + 8, 0, (uint64_t)&v41);
        int v25 = *(unsigned __int8 *)(a1 + 24);
        if (qword_101934680 != -1) {
          dispatch_once(&qword_101934680, &stru_10182AE50);
        }
        unsigned int v26 = (os_log_s *)qword_101934688;
        if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_INFO))
        {
          double v27 = -999.0;
          int v28 = *(_DWORD *)(a1 + 104);
          int v29 = *(_DWORD *)(a1 + 100);
          int v30 = *(_DWORD *)(a1 + 572);
          int v31 = *(_DWORD *)(a1 + 568);
          double v32 = *(float *)(a1 + 564);
          *(_DWORD *)buf = 67111936;
          *(_DWORD *)&uint8_t buf[4] = v25;
          __int16 v174 = 1024;
          int v175 = v28;
          __int16 v176 = 2048;
          double v177 = *(float *)&v41;
          __int16 v178 = 2048;
          double v179 = *((float *)&v41 + 1);
          __int16 v180 = 2048;
          uint64_t v181 = *(void *)v42;
          __int16 v182 = 1024;
          int v183 = v42[24];
          __int16 v184 = 2048;
          double v185 = *(float *)&v43;
          __int16 v186 = 2048;
          double v187 = v27;
          __int16 v188 = 1024;
          int v189 = v29;
          __int16 v190 = 1024;
          int v191 = v30;
          __int16 v192 = 1024;
          int v193 = v31;
          __int16 v194 = 2048;
          double v195 = v32;
          _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_INFO,  "IndoorCycleStop,state,%d,headingCnt,%d,longStd,%f,shortStd,%f,exertionDelta,%f,exertionLow,%d,vm,%f,fromBase line,%f,inLikely,%d,steps,%d,combinedCnt,%d,deltaH,%f",  buf,  0x62u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934680 != -1) {
            dispatch_once(&qword_101934680, &stru_10182AE50);
          }
          double v34 = -999.0;
          int v35 = *(_DWORD *)(a1 + 104);
          int v36 = *(_DWORD *)(a1 + 100);
          int v37 = *(_DWORD *)(a1 + 572);
          int v38 = *(_DWORD *)(a1 + 568);
          double v39 = *(float *)(a1 + 564);
          v48[0] = 67111936;
          v48[1] = v25;
          __int16 v49 = 1024;
          int v50 = v35;
          __int16 v51 = 2048;
          double v52 = *(float *)&v41;
          __int16 v53 = 2048;
          double v54 = *((float *)&v41 + 1);
          __int16 v55 = 2048;
          uint64_t v56 = *(void *)v42;
          __int16 v57 = 1024;
          int v58 = v42[24];
          __int16 v59 = 2048;
          double v60 = *(float *)&v43;
          __int16 v61 = 2048;
          double v62 = v34;
          __int16 v63 = 1024;
          int v64 = v36;
          __int16 v65 = 1024;
          int v66 = v37;
          __int16 v67 = 1024;
          int v68 = v38;
          __int16 v69 = 2048;
          double v70 = v39;
          int v40 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  1LL,  "IndoorCycleStop,state,%d,headingCnt,%d,longStd,%f,shortStd,%f,exertionDelta,%f,exertionLow,%d, vm,%f,fromBaseline,%f,inLikely,%d,steps,%d,combinedCnt,%d,deltaH,%f",  v48,  98,  v41,  *(double *)v42,  *(double *)&v42[8],  *(_DWORD *)&v42[16],  *(double *)&v42[24],  *(double *)&v42[32],  *(_DWORD *)&v42[40],  v43,  LODWORD(v44),  *(double *)&__p);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual CLWorkoutPredictor_Type::WorkoutStopDetectionEvent CLStationaryCycleStopModel::update(const CLWorkou tPredictorInputs &)",  "%s\n",  v40);
        }

        if (*(_BYTE *)(a1 + 24) == 4)
        {
          uint64_t v5 = 1LL;
          goto LABEL_45;
        }
      }
    }

    else
    {
      sub_1010DDBC0(buf, "IndoorCycleStop");
      sub_100CDC2CC(a2, (uint64_t *)buf, (uint64_t)&__p);
      if (SHIBYTE(v177) < 0) {
        operator delete(*(void **)buf);
      }
    }

    uint64_t v5 = 0LL;
  }

void sub_100208370( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1002083C4(uint64_t result, float *a2)
{
  if (*a2 <= 30.0)
  {
    int v2 = *(_DWORD *)(result + 108);
    *(_DWORD *)(result + 108) = v2 + 1;
    if (v2 >= 70) {
      return sub_100CCCC8C(result + 8, 1, (uint64_t)&v3);
    }
  }

  else
  {
    *(_DWORD *)(result + 108) = 0;
  }

  return result;
}

uint64_t sub_100208418(uint64_t a1, uint64_t a2)
{
  BOOL v2 = *(float *)a2 > 30.0 && *(float *)(a2 + 4) > 5.0;
  double v3 = *(double *)(a2 + 16);
  BOOL v4 = 0;
  if (v3 != -999.0)
  {
    double v5 = *(double *)(a2 + 24);
    if (v5 != -999.0)
    {
      double v6 = v5 - v3;
      if (v6 != -999.0 && v6 <= -5.0) {
        BOOL v4 = *(double *)(a2 + 8) <= -0.75 || *(_BYTE *)(a2 + 32) != 0;
      }
    }
  }

  int v8 = v2 || v4;
  int v9 = *(_DWORD *)(a1 + 568) + v8;
  int v10 = *(_DWORD *)(a1 + 100);
  int v11 = *(_DWORD *)(a1 + 104) + v2;
  *(_DWORD *)(a1 + 568) = v9;
  *(_DWORD *)(a1 + 104) = v11;
  float v12 = *(float *)(a1 + 564);
  float v13 = (float)(180.0 / v12) * 11.719;
  BOOL v15 = fminf(v13, 46.875) < (float)v9 && v10 > 23;
  if (v11 > 0 || v12 > 180.0)
  {
    int v18 = !v15;
    if (v3 == -999.0) {
      goto LABEL_41;
    }
    double v16 = *(double *)(a2 + 24);
  }

  else
  {
    if (v3 == -999.0 || (double v16 = *(double *)(a2 + 24), v16 == -999.0))
    {
      int v18 = 1;
      goto LABEL_41;
    }

    BOOL v17 = v16 - v3 != -999.0;
    if (v16 - v3 > -20.0) {
      BOOL v17 = 0;
    }
    int v18 = !v15 || !v17;
  }

  if (v16 == -999.0 || (double v19 = v16 - v3, v19 == -999.0))
  {
LABEL_41:
    if (v10 >= 24)
    {
      BOOL v21 = 0;
      double v16 = *(double *)(a2 + 24);
      goto LABEL_43;
    }

BOOL sub_100208644(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a2 + 16);
  if (v2 == -999.0)
  {
    BOOL v4 = 0;
  }

  else
  {
    double v3 = *(double *)(a2 + 24);
    BOOL v4 = v3 != -999.0;
    double v5 = v3 - v2;
    if (v5 == -999.0) {
      BOOL v4 = 0;
    }
    if (v5 > -40.0) {
      BOOL v4 = 0;
    }
  }

  int v6 = *(_DWORD *)(a1 + 100);
  if (v6 >= 71)
  {
    if (!v4)
    {
      BOOL v7 = *(_BYTE *)(a1 + 24) != 3;
LABEL_16:
      float v8 = *(float *)(a2 + 4);
      goto LABEL_17;
    }

uint64_t sub_10020875C(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  float v4 = *(float *)(result + 560);
  if (*(_WORD *)(result + 46))
  {
    double result = sub_100208A44((unsigned __int16 *)(result + 44), *(unsigned __int16 *)(result + 46) - 1LL);
    float v5 = *(float *)result;
  }

  else
  {
    float v5 = 0.0;
  }

  float v6 = vabds_f32(v4, v5);
  *(float *)(v3 + 564) = v6;
  ++*(_DWORD *)(v3 + 100);
  if (*(double *)(v3 + 592) == -999.0)
  {
    __int128 v7 = *(_OWORD *)(a2 + 8);
    __int128 v8 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(v3 + 601) = *(_OWORD *)(a2 + 33);
    *(_OWORD *)(v3 + 576) = v7;
    *(_OWORD *)(v3 + 592) = v8;
  }

  return result;
}

uint64_t sub_1002087F4(uint64_t a1, uint64_t a2)
{
  if (sub_100208418(a1, a2))
  {
    uint64_t v4 = a1 + 8;
    float v5 = &v9;
    int v6 = 3;
  }

  else
  {
    uint64_t result = sub_100208644(a1, a2);
    if (!(_DWORD)result) {
      return result;
    }
    uint64_t v4 = a1 + 8;
    float v5 = &v8;
    int v6 = 2;
  }

  return sub_100CCCC8C(v4, v6, (uint64_t)v5);
}

uint64_t sub_100208860(uint64_t a1, uint64_t a2)
{
  if (*(int *)(a1 + 100) >= 51)
  {
    uint64_t v4 = a1 + 8;
    float v5 = &v14;
    int v6 = 4;
    return sub_100CCCC8C(v4, v6, (uint64_t)v5);
  }

  double v7 = *(double *)(a2 + 16);
  if (v7 == -999.0)
  {
    BOOL v11 = 0;
  }

  else
  {
    double v8 = *(double *)(a2 + 24);
    BOOL v9 = v8 != -999.0;
    double v10 = v8 - v7;
    if (v10 == -999.0) {
      BOOL v9 = 0;
    }
    BOOL v11 = v10 <= -20.0 && v9;
  }

  uint64_t result = sub_100208644(a1, a2);
  if (!v11 && (_DWORD)result)
  {
    uint64_t v4 = a1 + 8;
    float v5 = &v13;
    int v6 = 2;
    return sub_100CCCC8C(v4, v6, (uint64_t)v5);
  }

  return result;
}

void *sub_100208914(void *a1)
{
  *a1 = off_10182ADD8;
  a1[14] = off_101848F08;
  double v2 = (void *)a1[19];
  if (v2)
  {
    a1[20] = v2;
    operator delete(v2);
  }

  return a1;
}

void sub_100208960(void *__p)
{
  *std::stringbuf::string_type __p = off_10182ADD8;
  __p[14] = off_101848F08;
  double v2 = (void *)__p[19];
  if (v2)
  {
    __p[20] = v2;
    operator delete(v2);
  }

  operator delete(__p);
}

void sub_1002089AC(id a1)
{
  qword_101934688 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Workout");
}

__n128 sub_1002089D8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 104) = 0LL;
  *(_DWORD *)(a1 + 100) = 0;
  *(void *)(a1 + 564) = 0LL;
  if (*(_WORD *)(a1 + 46)) {
    int v4 = *(_DWORD *)sub_100208A44((unsigned __int16 *)(a1 + 44), 0LL);
  }
  else {
    int v4 = 0;
  }
  *(_DWORD *)(a1 + 560) = v4;
  __n128 result = *(__n128 *)(a2 + 8);
  __int128 v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 601) = *(_OWORD *)(a2 + 33);
  *(__n128 *)(a1 + 576) = result;
  *(_OWORD *)(a1 + 592) = v6;
  return result;
}

uint64_t sub_100208A44(unsigned __int16 *a1, unint64_t a2)
{
  if (*((unsigned int *)a1 + 1) <= a2)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10182AE70);
    }
    double v7 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      int v8 = *((_DWORD *)a1 + 1);
      *(_DWORD *)buf = 134218240;
      unint64_t v16 = a2;
      __int16 v17 = 1024;
      int v18 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "Assertion failed: i < fCapacity, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/CMQueue.h, line 2 33,i,%zu,capacity,%u.",  buf,  0x12u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10182AE70);
      }
      int v9 = *((_DWORD *)a1 + 1);
      int v11 = 134218240;
      unint64_t v12 = a2;
      __int16 v13 = 1024;
      int v14 = v9;
      double v10 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assertion failed: i < fCapacity, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/CMQ ueue.h, line 233,i,%zu,capacity,%u.",  (size_t)&v11,  18);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "const T &CMQueue<float>::operator[](const size_t) const [T = float]",  "%s\n",  v10);
    }
  }

  unint64_t v4 = *a1 + a2;
  unint64_t v5 = *((unsigned int *)a1 + 1);
  if (v4 < v5) {
    unint64_t v5 = 0LL;
  }
  return (uint64_t)&a1[2 * (v4 - v5) + 4];
}

void sub_100208C3C(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

uint64_t sub_100208C68(uint64_t result)
{
  uint64_t v1 = result;
  if (*(_WORD *)(result + 18))
  {
    unint64_t v2 = 0LL;
    float v3 = 0.0;
    do
    {
      __n128 result = sub_100208A44((unsigned __int16 *)(v1 + 16), v2);
      float v3 = v3 + *(float *)result;
      ++v2;
      unint64_t v4 = *(unsigned __int16 *)(v1 + 18);
    }

    while (v2 < v4);
    *(float *)(v1 + 4) = v3 / (float)v4;
    float v5 = 0.0;
    if (v4 >= 3)
    {
      unint64_t v6 = 0LL;
      float v7 = 0.0;
      do
      {
        __n128 result = sub_100208A44((unsigned __int16 *)(v1 + 16), v6);
        float v7 = v7
           + (float)((float)(*(float *)result - *(float *)(v1 + 4)) * (float)(*(float *)result - *(float *)(v1 + 4)));
        ++v6;
        unint64_t v8 = *(unsigned __int16 *)(v1 + 18);
      }

      while (v6 < v8);
      float v5 = v7 / (float)v8;
    }
  }

  else
  {
    *(_DWORD *)(result + 4) = 0;
    float v5 = 0.0;
  }

  *(float *)(v1 + 8) = v5;
  *(_BYTE *)uint64_t v1 = 0;
  return result;
}

uint64_t sub_100208D34(uint64_t a1)
{
  uint64_t v2 = sub_100FBF548(a1);
  *(void *)uint64_t v2 = &off_10182AEA0;
  *(_DWORD *)(v2 + 16) = 1065353216;
  float v3 = (float *)(v2 + 16);
  uint64_t v4 = sub_1006E27E8();
  sub_100413284(v4, &v9);
  sub_1002A81F8(v9, "WalkModelMetsScale", v3);
  float v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      unint64_t v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }

  return a1;
}

void sub_100208DD4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100208DEC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
}

void sub_100208E00(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>, float a4@<S0>)
{
  *(float *)&double v51 = a4;
  *(void *)a3 = 0LL;
  *(void *)(a3 + 8) = 0LL;
  *(void *)(a3 + 16) = 0LL;
  *(void *)(a3 + 24) = 3LL;
  *(void *)(a3 + 32) = 3LL;
  double v8 = *(double *)(a1 + 128) - *(double *)(a1 + 120);
  float v9 = 0.0;
  if (v8 > 0.0) {
    float v9 = *(double *)(a1 + 408) * 2.23693991 / v8;
  }
  float v7 = *(double *)(a1 + 840);
  *((float *)&v53 + 1) = v7 * 2.2369;
  float v10 = *(double *)(a1 + 448);
  double v52 = *(double *)(a1 + 408);
  *((float *)&v51 + 1) = v10;
  if (*(_BYTE *)(a1 + 352))
  {
    if (v10 <= 0.14 || v10 > 2.2369)
    {
      uint64_t v11 = a1 + 808;
      float v9 = 0.0;
LABEL_12:
      float v13 = 0.0;
      if (*(_BYTE *)(a1 + 352)) {
        float v12 = 2.1;
      }
      else {
        float v12 = 0.0;
      }
      goto LABEL_15;
    }

    float v9 = 2.2369 / v10;
  }

  uint64_t v11 = a1 + 808;
  if (v9 < 1.0) {
    goto LABEL_12;
  }
  float v12 = 8.0;
  float v13 = v12;
LABEL_15:
  if (*(_BYTE *)(a1 + 528) == 1) {
    float v14 = 1.1;
  }
  else {
    float v14 = 1.0;
  }
  float v15 = v12;
  float v16 = v12 * v14;
  if (v16 <= 20.0) {
    float v17 = v16;
  }
  else {
    float v17 = 20.0;
  }
  if (a2) {
    int v18 = 2;
  }
  else {
    int v18 = *(_DWORD *)(v11 + 24);
  }
  sub_100FBF75C(v18, *((float *)&v53 + 1), v9, 2.5);
  float v20 = v19 * v17;
  if (v20 <= 20.0) {
    float v21 = v20;
  }
  else {
    float v21 = 20.0;
  }
  *(float *)(a3 + 20) = v21;
  if (a2) {
    int v22 = 2;
  }
  else {
    int v22 = *(_DWORD *)(v11 + 24);
  }
  if (*(_BYTE *)(a1 + 528) == 1) {
    float v23 = 1.1;
  }
  else {
    float v23 = 1.0;
  }
  float v24 = v13 * v23;
  if (v24 <= 20.0) {
    float v25 = v24;
  }
  else {
    float v25 = 20.0;
  }
  float v26 = v21;
  *(float *)&double v53 = v9;
  sub_100FBF75C(v22, *((float *)&v53 + 1), v9, 2.5);
  float v28 = v27 * v25;
  if (v28 <= 20.0) {
    float v29 = v28;
  }
  else {
    float v29 = 20.0;
  }
  *(float *)(a3 + 28) = v29;
  float v30 = 0.0;
  if (v13 <= 2.1)
  {
    int v31 = 0;
  }

  else
  {
    float v30 = v29;
    int v31 = 12;
  }

  *(float *)(a3 + 12) = v30;
  *(_DWORD *)(a3 + 36) = v31;
  uint64_t v32 = sub_100F5A080();
  sub_100F5D268(v32, (uint64_t)(float)(v26 - v17));
  if (qword_1019344D0 != -1) {
    dispatch_once(&qword_1019344D0, &stru_10182AEF0);
  }
  unsigned int v33 = (os_log_s *)qword_1019344D8;
  if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_DEBUG))
  {
    double v34 = *(double *)(a1 + 128);
    double v35 = v34 - *(double *)(a1 + 120);
    BOOL v36 = *(unsigned __int8 *)(a1 + 528) == 1;
    *(_DWORD *)buf = 134220544;
    *(double *)double v62 = v9;
    *(_WORD *)&v62[8] = 2048;
    *(double *)&v62[10] = v52;
    *(_WORD *)&v62[18] = 2048;
    *(double *)&v62[20] = v35;
    *(_WORD *)&v62[28] = 2048;
    *(double *)&v62[30] = v15;
    *(_WORD *)&v62[38] = 2048;
    *(double *)&v62[40] = *(float *)&v51;
    *(_WORD *)&v62[48] = 2048;
    *(double *)&v62[50] = v34;
    *(_WORD *)&v62[58] = 2048;
    *(double *)&v62[60] = *((float *)&v51 + 1);
    *(_WORD *)&v62[68] = 1024;
    *(_DWORD *)&v62[70] = v36;
    __int16 v63 = 2048;
    double v64 = v17;
    __int16 v65 = 2048;
    double v66 = v13;
    __int16 v67 = 2048;
    double v68 = v25;
    _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEBUG,  "Walk, WorkRate, %f, distance(m), %f, duration(s), %f, userMets, %f, fMetsScaling, %f, endTime, %f, currentPace, %f , isStroller, %d, userMetsStrollerCorrected, %f, truthMets, %f, truthMetsStrollerCorrected, %f",  buf,  0x6Cu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_10182AEF0);
    }
    double v41 = *(double *)(a1 + 128);
    double v42 = v41 - *(double *)(a1 + 120);
    BOOL v43 = *(unsigned __int8 *)(a1 + 528) == 1;
    *(_DWORD *)double v54 = 134220544;
    *(double *)&v54[4] = v9;
    *(_WORD *)&v54[12] = 2048;
    *(double *)&v54[14] = v52;
    *(_WORD *)&v54[22] = 2048;
    *(double *)&v54[24] = v42;
    *(_WORD *)&v54[32] = 2048;
    *(double *)&v54[34] = v15;
    *(_WORD *)&v54[42] = 2048;
    *(double *)&v54[44] = *(float *)&v51;
    *(_WORD *)&v54[52] = 2048;
    *(double *)&v54[54] = v41;
    *(_WORD *)&v54[62] = 2048;
    *(double *)&v54[64] = *((float *)&v51 + 1);
    *(_WORD *)&v54[72] = 1024;
    *(_DWORD *)&v54[74] = v43;
    __int16 v55 = 2048;
    double v56 = v17;
    __int16 v57 = 2048;
    double v58 = v13;
    __int16 v59 = 2048;
    double v60 = v25;
    LODWORD(v49) = 108;
    float v44 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  2LL,  "Walk, WorkRate, %f, distance(m), %f, duration(s), %f, userMets, %f, fMetsScaling, %f, endTime, %f, c urrentPace, %f, isStroller, %d, userMetsStrollerCorrected, %f, truthMets, %f, truthMetsStrollerCorrected, %f",  COERCE_DOUBLE(v54),  v49,  v50,  v51,  v52,  v53);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static CLMetsInfo CLCalorieWalkModel::calculateWorkRateMETS(const CLNatalieModelInput &, const float, const BOOL)",  "%s\n",  v44);
  }

  if (qword_1019344D0 != -1) {
    dispatch_once(&qword_1019344D0, &stru_10182AEF0);
  }
  int v37 = (os_log_s *)qword_1019344D8;
  if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_DEBUG))
  {
    int v38 = *(_DWORD *)(v11 + 24);
    double v39 = *(double *)(a1 + 128) - *(double *)(a1 + 120);
    *(_DWORD *)buf = 67111168;
    *(_DWORD *)double v62 = v38;
    *(_WORD *)&v62[4] = 2048;
    *(double *)&v62[6] = *((float *)&v53 + 1);
    *(_WORD *)&v62[14] = 2048;
    *(double *)&v62[16] = v39;
    *(_WORD *)&v62[24] = 2048;
    *(double *)&v62[26] = *(float *)&v53;
    float v40 = 0.0;
    *(_WORD *)&v62[34] = 2048;
    *(double *)&v62[36] = v15;
    *(_WORD *)&v62[44] = 2048;
    *(double *)&v62[46] = v26;
    *(_WORD *)&v62[54] = 2048;
    *(double *)&v62[56] = v40;
    *(_WORD *)&v62[64] = 2048;
    *(double *)&v62[66] = v13;
    __int16 v63 = 2048;
    double v64 = v29;
    _os_log_impl( (void *)&_mh_execute_header,  v37,  OS_LOG_TYPE_DEBUG,  "Walk, WorkRate, Grade type, %d, vertical speed %f, interval %f, workrate %f, userMets %f, userMets + grade, %f, pe rcent grade, %f, truthMets, %f, truthMets + grade, %f",  buf,  0x58u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_10182AEF0);
    }
    int v45 = *(_DWORD *)(v11 + 24);
    double v46 = *(double *)(a1 + 128) - *(double *)(a1 + 120);
    *(_DWORD *)double v54 = 67111168;
    *(_DWORD *)&v54[4] = v45;
    *(_WORD *)&v54[8] = 2048;
    *(double *)&v54[10] = *((float *)&v53 + 1);
    *(_WORD *)&v54[18] = 2048;
    *(double *)&v54[20] = v46;
    *(_WORD *)&v54[28] = 2048;
    *(double *)&v54[30] = *(float *)&v53;
    float v47 = 0.0;
    *(_WORD *)&v54[38] = 2048;
    *(double *)&v54[40] = v15;
    *(_WORD *)&v54[48] = 2048;
    *(double *)&v54[50] = v26;
    *(_WORD *)&v54[58] = 2048;
    *(double *)&v54[60] = v47;
    *(_WORD *)&v54[68] = 2048;
    *(double *)&v54[70] = v13;
    __int16 v55 = 2048;
    double v56 = v29;
    LODWORD(v49) = 88;
    int v48 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  2LL,  "Walk, WorkRate, Grade type, %d, vertical speed %f, interval %f, workrate %f, userMets %f, userMets + grade, %f, percent grade, %f, truthMets, %f, truthMets + grade, %f",  v54,  v49,  v50,  v51,  v52,  v53,  *(double *)v54,  *(double *)&v54[8],  *(double *)&v54[16]);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static CLMetsInfo CLCalorieWalkModel::calculateWorkRateMETS(const CLNatalieModelInput &, const float, const BOOL)",  "%s\n",  v48);
  }

void sub_10020955C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

float sub_100209568(float a1)
{
  return (float)((float)(a1 * -0.793) + (float)((float)(a1 * 0.3564) * a1)) + 3.142;
}

void sub_100209594(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = 0LL;
  *(void *)(a3 + 8) = 0LL;
  *(void *)(a3 + 16) = 0LL;
  *(void *)(a3 + 24) = 3LL;
  *(void *)(a3 + 32) = 3LL;
  if (*(_BYTE *)(a2 + 352) && CLMotionActivity::isTypeIndoorPedestrian(*(unsigned int *)(a2 + 152)))
  {
    double v6 = *(double *)(a2 + 1040);
    double v7 = *(double *)(a2 + 1104);
    BOOL v8 = v7 <= 0.447039278 || v7 > 7.14285711;
    float v9 = v7 * 2.23693991;
    float v10 = 0.0;
    if (v8) {
      float v11 = 0.0;
    }
    else {
      float v11 = v9;
    }
    float v12 = *(double *)(a2 + 1192) * 2.23693991;
    double v13 = 0.0;
    double v14 = 0.0;
    if (v6 > 0.0)
    {
      if (v11 >= 1.0)
      {
        if ((float)((float)((float)((float)(v11 * -0.793) + (float)((float)(v11 * 0.3564) * v11)) + 3.142)
                   * *(float *)(a1 + 16)) <= 8.0)
        else {
          float v15 = 8.0;
        }
        float v10 = v15;
      }

      else
      {
        float v15 = 2.1;
      }

      *(void *)a3 = 0LL;
      *(void *)(a3 + 8) = 0LL;
      *(_DWORD *)(a3 + 16) = 0;
      *(float *)(a3 + 20) = v15;
      *(_DWORD *)(a3 + 24) = 3;
      *(float *)(a3 + 28) = v10;
      *(void *)(a3 + 32) = 3LL;
      if (v12 > 0.0) {
        int v16 = 1;
      }
      else {
        int v16 = 2;
      }
      sub_100FBF75C(v16, v12, v11, 2.5);
      float v18 = v15 * v17;
      if (v18 <= 20.0) {
        float v19 = v18;
      }
      else {
        float v19 = 20.0;
      }
      *(float *)(a3 + 20) = v19;
      sub_100FBF75C(v16, v12, v11, 2.5);
      float v21 = v10 * v20;
      if (v21 > 20.0) {
        float v21 = 20.0;
      }
      *(float *)(a3 + 28) = v21;
      double v14 = v19;
      double v13 = v21;
    }

    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_10182AEF0);
    }
    int v22 = (os_log_s *)qword_1019344D8;
    if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v23 = *(void *)(a2 + 112);
      *(_DWORD *)buf = 134219264;
      uint64_t v40 = v23;
      __int16 v41 = 2048;
      double v42 = v6;
      __int16 v43 = 2048;
      double v44 = v11;
      __int16 v45 = 2048;
      double v46 = v12;
      __int16 v47 = 2048;
      double v48 = v14;
      __int16 v49 = 2048;
      double v50 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEBUG,  "Walk,fitness machine,computeTime,%.3f,startTime,%.3f,wr,%f,vertSpeed,%f,userMets,%f,truthMets,%f",  buf,  0x3Eu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344D0 != -1) {
        dispatch_once(&qword_1019344D0, &stru_10182AEF0);
      }
      uint64_t v24 = *(void *)(a2 + 112);
      int v27 = 134219264;
      uint64_t v28 = v24;
      __int16 v29 = 2048;
      double v30 = v6;
      __int16 v31 = 2048;
      double v32 = v11;
      __int16 v33 = 2048;
      double v34 = v12;
      __int16 v35 = 2048;
      double v36 = v14;
      __int16 v37 = 2048;
      double v38 = v13;
      LODWORD(v26) = 62;
      float v25 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  2LL,  "Walk,fitness machine,computeTime,%.3f,startTime,%.3f,wr,%f,vertSpeed,%f,userMets,%f,truthMets,%f",  COERCE_DOUBLE(&v27),  v26);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual CLMetsInfo CLCalorieWalkModel::computeFitnessMachineMETS(const CLNatalieModelInput &)",  "%s\n",  v25);
    }
  }

void sub_100209938(id a1)
{
  qword_1019344D8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Calorimetry");
}

void *sub_100209964(void *a1, uint64_t a2, uint64_t a3)
{
  float v5 = v9;
  if (v9 == v8)
  {
    uint64_t v6 = 4LL;
    float v5 = v8;
    goto LABEL_5;
  }

  if (v9)
  {
    uint64_t v6 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v5 + 8 * v6))();
  }

  *a1 = &off_10182AF20;
  return a1;
}

void sub_100209A1C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char *a13)
{
  float v15 = a13;
  if (a13 == v13)
  {
    uint64_t v16 = 4LL;
    float v15 = &a10;
  }

  else
  {
    if (!a13) {
      goto LABEL_6;
    }
    uint64_t v16 = 5LL;
  }

  (*(void (**)(void))(*(void *)v15 + 8 * v16))();
LABEL_6:
  _Unwind_Resume(exception_object);
}

uint64_t sub_100209A60(uint64_t result, double a2)
{
  double v2 = a2 + -240.0 + 60.0;
  *(double *)(result + 40) = v2;
  return result;
}

void *sub_100209A8C(uint64_t a1)
{
  char v19 = 0;
  double v17 = 0.0;
  double v18 = 0.0;
  uint64_t v16 = 0LL;
  double v2 = (double *)(a1 + 40);
  float v3 = operator new(0x20uLL);
  *float v3 = &off_10182AFB8;
  v3[1] = &v17;
  v3[2] = &v18;
  v3[3] = &v19;
  float v21 = v3;
  v4.n128_u64[0] = 0x406E000000000000LL;
  char v5 = sub_1004CA418(a1, v2, &v16, (uint64_t)v20, v4);
  __n128 result = v21;
  if (v21 == v20)
  {
    uint64_t v7 = 4LL;
    __n128 result = v20;
  }

  else
  {
    if (!v21) {
      goto LABEL_6;
    }
    uint64_t v7 = 5LL;
  }

  __n128 result = (void *)(*(uint64_t (**)(void))(*result + 8 * v7))();
LABEL_6:
  if ((v5 & 1) != 0)
  {
    if (v18 < 210.0 || (double v8 = v17 / 240.0, v17 / 240.0 < 4.40208912))
    {
      *double v2 = *(double *)(v16 + 8);
    }

    else
    {
      double v9 = *v2;
      double v10 = *v2 + 240.0;
      for (*double v2 = *v2 + 60.0;
            v9 < v10;
            __n128 result = (void *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v11 + 48LL))(v11, v12))
      {
        *(double *)float v12 = v9;
        double v9 = v9 + 60.0;
        *(double *)&v12[1] = v9;
        *(double *)&v12[2] = v8;
        __int16 v13 = 4;
        char v14 = 1;
        char v15 = v19;
        uint64_t v11 = *(void *)(a1 + 32);
        if (!v11) {
          sub_100008BDC();
        }
      }
    }
  }

  return result;
}

void sub_100209C40( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, char *a21)
{
  uint64_t v23 = a21;
  if (a21 == v21)
  {
    uint64_t v24 = 4LL;
    uint64_t v23 = &a18;
  }

  else
  {
    if (!a21) {
      goto LABEL_6;
    }
    uint64_t v24 = 5LL;
  }

  (*(void (**)(void))(*(void *)v23 + 8 * v24))();
LABEL_6:
  _Unwind_Resume(exception_object);
}

void *sub_100209C80(void *a1)
{
  *a1 = off_10182AF80;
  double v2 = a1 + 1;
  float v3 = (void *)a1[4];
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    float v3 = v2;
    goto LABEL_5;
  }

  if (v3)
  {
    uint64_t v4 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }

  return a1;
}

void sub_100209CE0(char *__p)
{
  *(void *)std::stringbuf::string_type __p = off_10182AF80;
  double v2 = __p + 8;
  float v3 = (char *)*((void *)__p + 4);
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    float v3 = v2;
    goto LABEL_5;
  }

  if (v3)
  {
    uint64_t v4 = 5LL;
LABEL_5:
    (*(void (**)(void))(*(void *)v3 + 8 * v4))();
  }

  operator delete(__p);
}

uint64_t sub_100209D40(uint64_t result)
{
  *(void *)(result + 40) = 0LL;
  return result;
}

__n128 sub_100209D50(uint64_t a1)
{
  double v2 = (char *)operator new(0x20uLL);
  *(void *)double v2 = &off_10182AFB8;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((void *)v2 + 3) = *(void *)(a1 + 24);
  return result;
}

__n128 sub_100209D90(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &off_10182AFB8;
  __n128 result = *(__n128 *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_100209DB8(uint64_t result, uint64_t a2, double *a3)
{
  double v3 = *a3;
  uint64_t v4 = *(double **)(result + 16);
  **(double **)(result + 8) = **(double **)(result + 8) + *(double *)(a2 + 16) * *a3;
  if (!*(_BYTE *)(a2 + 28)) {
    double v3 = 0.0;
  }
  *uint64_t v4 = *v4 + v3;
  **(_BYTE **)(result + 24) = (**(unsigned __int8 **)(result + 24) | *(unsigned __int8 *)(a2 + 29)) != 0;
  return result;
}

uint64_t sub_100209E0C(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_100209E48()
{
}

BOOL sub_100209E54(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 128);
  if (*(void *)(a1 + 2120) == v2) {
    return 0LL;
  }
  BOOL v4 = v2 == 1 || *(double *)(a2 + 136) > 0.0 && v2 == 0;
  BOOL v6 = v2 < 2 && v4;
  if (*(void *)(a2 + 16)) {
    BOOL v7 = 0;
  }
  else {
    BOOL v7 = *(void *)(a2 + 112) == 19LL;
  }
  return v7 && v6;
}

BOOL sub_100209EAC(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a1 + 2120);
  if (v2 != *(void *)(a2 + 128)) {
    return 0LL;
  }
  BOOL v3 = v2 == 1 || *(double *)(a2 + 136) > 0.0 && v2 == 0;
  BOOL v6 = v2 < 2 && v3;
  if (*(void *)(a2 + 16)) {
    BOOL v7 = 0;
  }
  else {
    BOOL v7 = *(void *)(a2 + 112) == 19LL;
  }
  return v7 && v6;
}

BOOL sub_100209F04(uint64_t a1, const unsigned __int8 *a2, uint64_t a3, char a4, float a5, double a6)
{
  *(float *)(a1 + 1008) = a5;
  *(void *)(a1 + 2120) = a3;
  *(_BYTE *)(a1 + 1012) = a4;
  *(_BYTE *)(a1 + 1013) = 0;
  sub_100DADF3C((_OWORD *)(a1 + 2128));
  uuid_copy((unsigned __int8 *)(a1 + 1014), a2);
  *(double *)(a1 + 992) = a6;
  if (*(double *)(a1 + 1048) + 60.0 < a6)
  {
    uuid_parse("00000000-0000-0000-0000-000000000000", (unsigned __int8 *)(a1 + 1030));
    *(void *)(a1 + 1048) = 0LL;
  }

  if (*(void *)(a1 + 2120) != 1LL)
  {
    unint64_t v9 = 0xFFFFFFFFFFFFFCF0LL;
    uint64_t v10 = 984LL;
    do
    {
      *(_BYTE *)(a1 + v10) = 0;
      unint64_t v11 = a1 + 984 + v9;
      *(_OWORD *)(v11 + 48) = *(_OWORD *)((char *)&unk_1012E2128 + v9 + 832);
      *(_OWORD *)(v11 + 64) = *(_OWORD *)((char *)&unk_1012E2128 + v9 + 848);
      *(_OWORD *)(v11 + 80) = *(_OWORD *)((char *)&unk_1012E2128 + v9 + 864);
      *(_OWORD *)(v11 + 96) = *(_OWORD *)((char *)&unk_1012E2128 + v9 + 880);
      *(_OWORD *)unint64_t v11 = *(_OWORD *)((char *)&unk_1012E2128 + v9 + 784);
      *(_OWORD *)(v11 + 16) = *(_OWORD *)((char *)&unk_1012E2128 + v9 + 800);
      *(_OWORD *)(v11 + 32) = *(_OWORD *)((char *)&unk_1012E2128 + v9 + 816);
      *(double *)(v11 + 32) = *(float *)(a1 + 1008);
      uuid_copy((unsigned __int8 *)v11, (const unsigned __int8 *)(a1 + 1030));
      uuid_copy((unsigned __int8 *)(a1 + v9 + 1000), (const unsigned __int8 *)(a1 + 1014));
      ++v10;
      v9 += 112LL;
    }

    while (v9);
  }

  *(_BYTE *)(a1 + 1068) = 0;
  return sub_10020C8AC(a1);
}

BOOL sub_10020A058(int64x2_t *a1, uint64_t a2)
{
  if (!a1[132].i64[1]) {
    sub_10020D650((uint64_t)a1);
  }
  a1[62] = vdupq_n_s64(0xFFEFFFFFFFFFFFFFLL);
  a1[63].i32[0] = 1102504264;
  a1[63].i16[2] = 0;
  a1[136].i64[0] = 0x7FEFFFFFFFFFFFFFLL;
  float v4 = *(double *)(a2 + 136);
  BOOL result = sub_100209F04( (uint64_t)a1,  (const unsigned __int8 *)(a2 + 64),  *(void *)(a2 + 128),  1,  v4,  *(double *)(a2 + 232));
  a1[135].i32[0] = 3;
  return result;
}

void sub_10020A0D4(uint64_t a1, const unsigned __int8 *a2, uint64_t a3, float a4)
{
  if (!*(_BYTE *)(a1 + 1012))
  {
    *(float *)(a1 + 1008) = a4;
    *(void *)(a1 + 2120) = a3;
    char v5 = (const unsigned __int8 *)(a1 + 1014);
    uuid_copy((unsigned __int8 *)(a1 + 1014), a2);
    uint64_t v6 = 0LL;
    *(_BYTE *)(a1 + 1012) = 1;
    do
    {
      *(double *)(a1 + v6 + 232) = *(float *)(a1 + 1008);
      uuid_copy((unsigned __int8 *)(a1 + v6 + 216), v5);
      v6 += 112LL;
    }

    while (v6 != 784);
    uint64_t v7 = *(void *)(a1 + 192);
    if (v7)
    {
      __int128 v34 = 0u;
      __int128 v35 = 0u;
      __int128 v33 = 0u;
      unint64_t v8 = *(void *)(a1 + 184);
      uint64_t v9 = *(void *)(a1 + 160);
      uint64_t v10 = (uint64_t *)(v9 + 8 * (v8 / 0x1A));
      if (*(void *)(a1 + 168) == v9)
      {
        unint64_t v11 = 0LL;
        uint64_t v17 = 0LL;
        __int16 v13 = (uint64_t *)(v9 + ((((v8 + v7) * (unsigned __int128)0x4EC4EC4EC4EC4EC5uLL) >> 64) & 0x7FFFFFFFFFFFFFF8LL));
      }

      else
      {
        unint64_t v11 = (char *)(*(void *)(v9 + 8 * (v8 / 0x1A)) + 152 * (v8 % 0x1A));
        unint64_t v12 = v8 + v7;
        __int16 v13 = (uint64_t *)(v9 + 8 * (v12 / 0x1A));
        unint64_t v14 = v12 % 0x1A;
        uint64_t v15 = *v13 + 152 * v14;
        if (v11 != (char *)v15)
        {
          while (*(void *)v11 != 0x7FFFFFFFFFFFFFFFLL)
          {
            v11 += 152;
            if (&v11[-*v10] == (char *)3952)
            {
              uint64_t v16 = (char *)v10[1];
              ++v10;
              unint64_t v11 = v16;
            }

            if (v11 == (char *)v15)
            {
              unint64_t v11 = (char *)(*v13 + 152 * v14);
              break;
            }
          }
        }

        uint64_t v17 = *v13 + 152 * v14;
      }

      *(void *)&__int128 v48 = &v33;
      sub_100210BC8(v10, (uint64_t)v11, v13, v17, (void **)&v48);
      unint64_t v18 = *(void *)(a1 + 184) + *(void *)(a1 + 192);
      uint64_t v19 = *(void *)(a1 + 160);
      float v20 = (void *)(v19 + 8 * (v18 / 0x1A));
      if (*(void *)(a1 + 168) == v19) {
        float v21 = 0LL;
      }
      else {
        float v21 = (char *)(*v20 + 152 * (v18 % 0x1A));
      }
      sub_10020CA7C((void *)(a1 + 152), v10, v11, v20, v21);
      uint64_t v57 = 0LL;
      __int128 v55 = 0u;
      __int128 v56 = 0u;
      __int128 v53 = 0u;
      __int128 v54 = 0u;
      __int128 v51 = 0u;
      __int128 v52 = 0u;
      __int128 v49 = 0u;
      __int128 v50 = 0u;
      __int128 v48 = 0u;
      double v22 = 0.0;
      if (sub_100A70C7C((void *)(a1 + 1072), (uint64_t)&v48) == 100)
      {
        double v23 = *(double *)&v51 + 2.22044605e-16;
        __int128 v44 = v54;
        __int128 v45 = v55;
        __int128 v46 = (unint64_t)v56;
        uint64_t v38 = v50;
        uint64_t v41 = *((void *)&v51 + 1);
        uint64_t v47 = v57;
        __int128 v42 = v52;
        __int128 v43 = v53;
        *(void *)buf_8 = *((void *)&v48 + 1);
        *(_OWORD *)&buf_8[8] = v49;
        uint64_t buf = 0x7FFFFFFFFFFFFFFFLL;
        double v39 = v23;
        double v40 = v23;
        uint64_t v41 = *(void *)(a1 + 1000);
        LODWORD(v44) = 4;
        *((double *)&v43 + 1) = *(float *)(a1 + 1008);
        *(void *)&__int128 v46 = 0LL;
        uuid_copy(buf_8, v5);
        sub_10020BF34(a1, (uint64_t)&buf);
        double v22 = *((double *)&v52 + 1);
        if (*((void *)&v35 + 1))
        {
          *(void *)&__int128 v35 = v35 + 1;
          --*((void *)&v35 + 1);
          if ((unint64_t)v35 >= 0x34)
          {
            operator delete(**((void ***)&v33 + 1));
            *((void *)&v33 + 1) += 8LL;
            *(void *)&__int128 v35 = v35 - 26;
          }
        }
      }

      if (*((void *)&v35 + 1))
      {
        uint64_t v24 = (void *)(*((void *)&v33 + 1) + 8 * ((unint64_t)v35 / 0x1A));
        uint64_t v25 = *v24 + 152 * ((unint64_t)v35 % 0x1A);
        if (SHIDWORD(v54) <= *(_DWORD *)(v25 + 108))
        {
          if ((void)v34 != *((void *)&v33 + 1))
          {
            unint64_t v30 = *(void *)(*((void *)&v33 + 1) + 8 * (((void)v35 + *((void *)&v35 + 1)) / 0x1AuLL))
                + 152 * (((void)v35 + *((void *)&v35 + 1)) % 0x1AuLL);
            while (v25 != v30)
            {
              if (!*(void *)(a1 + 2120) && (*(_DWORD *)(v25 + 96) - 1) <= 1)
              {
                double v31 = *(float *)(a1 + 1008);
                *(double *)(v25 + 88) = v31;
                double v22 = v22 + v31;
                *(double *)(v25 + 72) = v22;
              }

              uuid_copy((unsigned __int8 *)(v25 + 8), v5);
              sub_10020BF34(a1, v25);
              v25 += 152LL;
              if (v25 - *v24 == 3952)
              {
                uint64_t v32 = v24[1];
                ++v24;
                uint64_t v25 = v32;
              }
            }
          }
        }

        else
        {
          if (qword_1019344E0 != -1) {
            dispatch_once(&qword_1019344E0, &stru_10182B200);
          }
          double v26 = (os_log_s *)qword_1019344E8;
          if (os_log_type_enabled((os_log_t)qword_1019344E8, OS_LOG_TYPE_FAULT))
          {
            int v27 = *(_DWORD *)(*(void *)(*((void *)&v33 + 1) + 8 * ((unint64_t)v35 / 0x1A))
            uint64_t buf = 68289538LL;
            *(_WORD *)buf_8 = 2082;
            *(void *)&buf_8[2] = "";
            *(_WORD *)&buf_8[10] = 1026;
            *(_DWORD *)&buf_8[12] = HIDWORD(v54);
            *(_WORD *)&buf_8[16] = 1026;
            *(_DWORD *)&buf_8[18] = v27;
            _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Unexpected lap counts, skipping in-memory laps., persisted laps:%{public}d,  in-memory laps:%{public}d}",  (uint8_t *)&buf,  0x1Eu);
            if (qword_1019344E0 != -1) {
              dispatch_once(&qword_1019344E0, &stru_10182B200);
            }
          }

          uint64_t v28 = (os_log_s *)qword_1019344E8;
          if (os_signpost_enabled((os_log_t)qword_1019344E8))
          {
            int v29 = *(_DWORD *)(*(void *)(*((void *)&v33 + 1) + 8 * ((unint64_t)v35 / 0x1A))
            uint64_t buf = 68289538LL;
            *(_WORD *)buf_8 = 2082;
            *(void *)&buf_8[2] = "";
            *(_WORD *)&buf_8[10] = 1026;
            *(_DWORD *)&buf_8[12] = HIDWORD(v54);
            *(_WORD *)&buf_8[16] = 1026;
            *(_DWORD *)&buf_8[18] = v29;
            _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v28,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Unexpected lap counts, skipping in-memory laps.",  "{msg%{public}.0s:Unexpected lap counts, skipping in-memory laps., persisted laps:%{public}d,  in-memory laps:%{public}d}",  (uint8_t *)&buf,  0x1Eu);
          }
        }
      }

      sub_100210A94(&v33);
    }
  }

void sub_10020A690( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10020A6B4(int64x2_t *a1)
{
  if (!a1[132].i64[1]) {
    sub_10020D650((uint64_t)a1);
  }
  a1[62] = vdupq_n_s64(0xFFEFFFFFFFFFFFFFLL);
  a1[63].i32[0] = 1102504264;
  a1[63].i16[2] = 0;
  a1[136].i64[0] = 0x7FEFFFFFFFFFFFFFLL;
  a1[135].i32[0] = 6;
  unint64_t v2 = (void **)a1[10].i64[0];
  uint64_t v3 = a1[10].i64[1];
  a1[12].i64[0] = 0LL;
  unint64_t v4 = v3 - (void)v2;
  if (v4 >= 0x11)
  {
    do
    {
      operator delete(*v2);
      uint64_t v5 = a1[10].i64[1];
      unint64_t v2 = (void **)(a1[10].i64[0] + 8);
      a1[10].i64[0] = (uint64_t)v2;
      unint64_t v4 = v5 - (void)v2;
    }

    while (v4 > 0x10);
  }

  if (v4 >> 3 == 1)
  {
    uint64_t v6 = 13LL;
    goto LABEL_9;
  }

  if (v4 >> 3 == 2)
  {
    uint64_t v6 = 26LL;
LABEL_9:
    a1[11].i64[1] = v6;
  }

  sub_10020A768(a1);
}

void sub_10020A768(void *a1)
{
  unint64_t v2 = (void **)a1[8];
  uint64_t v3 = a1[9];
  a1[12] = 0LL;
  unint64_t v4 = v3 - (void)v2;
  if (v4 >= 0x11)
  {
    do
    {
      operator delete(*v2);
      uint64_t v5 = a1[9];
      unint64_t v2 = (void **)(a1[8] + 8LL);
      a1[8] = v2;
      unint64_t v4 = v5 - (void)v2;
    }

    while (v4 > 0x10);
  }

  if (v4 >> 3 == 1)
  {
    uint64_t v6 = 85LL;
  }

  else
  {
    if (v4 >> 3 != 2) {
      goto LABEL_8;
    }
    uint64_t v6 = 170LL;
  }

  a1[11] = v6;
LABEL_8:
  a1[132] = 0LL;
  uint64_t v7 = (void **)a1[14];
  uint64_t v8 = a1[15];
  a1[18] = 0LL;
  unint64_t v9 = v8 - (void)v7;
  if (v9 >= 0x11)
  {
    do
    {
      operator delete(*v7);
      uint64_t v10 = a1[15];
      uint64_t v7 = (void **)(a1[14] + 8LL);
      a1[14] = v7;
      unint64_t v9 = v10 - (void)v7;
    }

    while (v9 > 0x10);
  }

  if (v9 >> 3 == 1)
  {
    uint64_t v11 = 85LL;
    goto LABEL_14;
  }

  if (v9 >> 3 == 2)
  {
    uint64_t v11 = 170LL;
LABEL_14:
    a1[17] = v11;
  }

  a1[5] = a1[4];
}

uint64_t sub_10020A844(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(_DWORD *)(a1 + 2160) = 0;
  *(double *)(a1 + 2168) = a3;
  __int128 v6 = *(_OWORD *)(a2 + 208);
  v81[12] = *(_OWORD *)(a2 + 192);
  v81[13] = v6;
  uint64_t v82 = *(void *)(a2 + 224);
  __int128 v7 = *(_OWORD *)(a2 + 144);
  v81[8] = *(_OWORD *)(a2 + 128);
  v81[9] = v7;
  __int128 v8 = *(_OWORD *)(a2 + 160);
  v81[11] = *(_OWORD *)(a2 + 176);
  v81[10] = v8;
  __int128 v9 = *(_OWORD *)(a2 + 80);
  v81[4] = *(_OWORD *)(a2 + 64);
  v81[5] = v9;
  __int128 v10 = *(_OWORD *)(a2 + 96);
  v81[7] = *(_OWORD *)(a2 + 112);
  v81[6] = v10;
  __int128 v11 = *(_OWORD *)(a2 + 16);
  v81[0] = *(_OWORD *)a2;
  v81[1] = v11;
  __int128 v12 = *(_OWORD *)(a2 + 32);
  v81[3] = *(_OWORD *)(a2 + 48);
  v81[2] = v12;
  double v84 = a4;
  double v83 = a3;
  sub_100CCCC8C(a1 + 8, 1, (uint64_t)v81);
  if (*(void *)(a2 + 112) != 19LL && !*(_DWORD *)(a1 + 2160)) {
    return 0LL;
  }
  uuid_unparse((const unsigned __int8 *)(a2 + 64), out);
  uuid_unparse((const unsigned __int8 *)(a2 + 80), v79);
  if (qword_1019344E0 != -1) {
    dispatch_once(&qword_1019344E0, &stru_10182B200);
  }
  __int16 v13 = (os_log_s *)qword_1019344E8;
  if (os_log_type_enabled((os_log_t)qword_1019344E8, OS_LOG_TYPE_DEFAULT))
  {
    int v14 = *(_DWORD *)(a1 + 2160);
    else {
      uint64_t v15 = off_10182B2F0[v14 - 1];
    }
    uint64_t v16 = *(void *)(a1 + 2120);
    double v17 = *(float *)(a1 + 1008);
    uint64_t v18 = *(void *)(a2 + 128);
    uint64_t v19 = *(void *)(a2 + 136);
    int v20 = *(unsigned __int8 *)(a1 + 24);
    uint64_t v21 = *(void *)(a2 + 16);
    uint64_t v22 = *(void *)(a2 + 112);
    *(_DWORD *)uint64_t buf = 136448770;
    double v58 = v15;
    __int16 v59 = 2082;
    double v60 = out;
    __int16 v61 = 2082;
    double v62 = v79;
    __int16 v63 = 1026;
    int v64 = v14;
    __int16 v65 = 2050;
    uint64_t v66 = v16;
    __int16 v67 = 2050;
    uint64_t v68 = v18;
    __int16 v69 = 2050;
    double v70 = v17;
    __int16 v71 = 2050;
    uint64_t v72 = v19;
    __int16 v73 = 1024;
    int v74 = v20;
    __int16 v75 = 2048;
    uint64_t v76 = v21;
    __int16 v77 = 2048;
    uint64_t v78 = v22;
    _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "SwimDataStoreEvent,%{public}s,sessionId,%{public}s,overviewId,%{public}s,updateType,%{public}d,swimLocation,%{publ ic}ld,swimLocationEvent,%{public}ld,poolLength,%{public}f,poolLengthEvent,%{public}f,state,%d,workoutEvent,%ld,workoutType,%ld",  buf,  0x68u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344E0 != -1) {
      dispatch_once(&qword_1019344E0, &stru_10182B200);
    }
    int v24 = *(_DWORD *)(a1 + 2160);
    else {
      uint64_t v25 = off_10182B2F0[v24 - 1];
    }
    uint64_t v26 = *(void *)(a1 + 2120);
    double v27 = *(float *)(a1 + 1008);
    uint64_t v28 = *(void *)(a2 + 128);
    uint64_t v29 = *(void *)(a2 + 136);
    int v30 = *(unsigned __int8 *)(a1 + 24);
    uint64_t v31 = *(void *)(a2 + 16);
    uint64_t v32 = *(void *)(a2 + 112);
    int v35 = 136448770;
    double v36 = v25;
    __int16 v37 = 2082;
    uint64_t v38 = out;
    __int16 v39 = 2082;
    double v40 = v79;
    __int16 v41 = 1026;
    int v42 = v24;
    __int16 v43 = 2050;
    uint64_t v44 = v26;
    __int16 v45 = 2050;
    uint64_t v46 = v28;
    __int16 v47 = 2050;
    double v48 = v27;
    __int16 v49 = 2050;
    uint64_t v50 = v29;
    __int16 v51 = 1024;
    int v52 = v30;
    __int16 v53 = 2048;
    uint64_t v54 = v31;
    __int16 v55 = 2048;
    uint64_t v56 = v32;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344E8,  0LL,  "SwimDataStoreEvent,%{public}s,sessionId,%{public}s,overviewId,%{public}s,updateType,%{public}d,swimLocation,%{publ ic}ld,swimLocationEvent,%{public}ld,poolLength,%{public}f,poolLengthEvent,%{public}f,state,%d,workoutEvent,%ld,workoutType,%ld",  &v35,  104);
    __int128 v34 = (uint8_t *)v33;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLSwimDataStore::SessionUpdate CLSwimDataStore::feedWorkoutEvent(const CLMotionStateMediator_Type::WorkoutEvent &, CFAbsoluteTime, CLMotionTypeTimestamp)",  "%s\n",  v33);
    if (v34 != buf) {
      free(v34);
    }
  }

  return *(unsigned int *)(a1 + 2160);
}

BOOL sub_10020AC08(uint64_t a1, void *a2)
{
  return a2[2] == 20LL && a2[14] == 19LL && a2[16] < 2uLL;
}

BOOL sub_10020AC38(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a1 - 8;
  }
  else {
    uint64_t v2 = 0LL;
  }
  float v3 = *(double *)(a2 + 136);
  BOOL result = sub_100209F04(v2, (const unsigned __int8 *)(a2 + 64), *(void *)(a2 + 128), 0, v3, *(double *)(a2 + 232));
  *(_DWORD *)(v2 + 2160) = 1;
  return result;
}

BOOL sub_10020AC88(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 128);
  BOOL v3 = v2 == 1 || *(double *)(a2 + 136) > 0.0 && v2 == 0;
  BOOL v5 = v2 < 2 && v3;
  if (*(void *)(a2 + 16)) {
    BOOL v6 = 0;
  }
  else {
    BOOL v6 = *(void *)(a2 + 112) == 19LL;
  }
  return v6 && v5;
}

BOOL sub_10020ACCC(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a1 - 8;
  }
  else {
    uint64_t v2 = 0LL;
  }
  float v3 = *(double *)(a2 + 136);
  BOOL result = sub_100209F04(v2, (const unsigned __int8 *)(a2 + 64), *(void *)(a2 + 128), 1, v3, *(double *)(a2 + 232));
  *(_DWORD *)(v2 + 2160) = 2;
  return result;
}

BOOL sub_10020AD1C(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a1 - 8;
  }
  else {
    uint64_t v2 = 0LL;
  }
  return sub_100209E54(v2, a2);
}

BOOL sub_10020AD2C(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = (int64x2_t *)(a1 - 8);
  }
  else {
    uint64_t v2 = 0LL;
  }
  return sub_10020A058(v2, a2);
}

BOOL sub_10020AD3C(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a1 - 8;
  }
  else {
    uint64_t v2 = 0LL;
  }
  return sub_100209EAC(v2, a2);
}

void sub_10020AD4C(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a1 - 8;
  }
  else {
    uint64_t v2 = 0LL;
  }
  float v3 = *(double *)(a2 + 136);
  sub_10020A0D4(v2, (const unsigned __int8 *)(a2 + 64), *(void *)(a2 + 128), v3);
  *(_DWORD *)(v2 + 2160) = 4;
}

BOOL sub_10020AD94(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 16) == 1LL && *(void *)(a2 + 112) == 19LL;
}

int64x2_t sub_10020ADB8(uint64_t a1)
{
  if (a1) {
    uint64_t v1 = (int64x2_t *)(a1 - 8);
  }
  else {
    uint64_t v1 = 0LL;
  }
  if (!v1[132].i64[1]) {
    sub_10020D650((uint64_t)v1);
  }
  int64x2_t result = vdupq_n_s64(0xFFEFFFFFFFFFFFFFLL);
  v1[62] = result;
  v1[63].i32[0] = 1102504264;
  v1[63].i16[2] = 0;
  v1[136].i64[0] = 0x7FEFFFFFFFFFFFFFLL;
  v1[135].i32[0] = 5;
  return result;
}

BOOL sub_10020AE18(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 16) == 21LL && *(void *)(a2 + 112) == 19LL;
}

void sub_10020AE3C(uint64_t a1)
{
  if (a1) {
    sub_10020A6B4((int64x2_t *)(a1 - 8));
  }
  else {
    sub_10020A6B4(0LL);
  }
}

uint64_t sub_10020AE4C(uint64_t a1)
{
  *(void *)(a1 + 16) = 7LL;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_WORD *)(a1 + 24) = 512;
  *(void *)a1 = off_10182B0F0;
  *(void *)(a1 + 8) = &unk_10182B038;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(void *)(a1 + 192) = 0LL;
  *(int64x2_t *)(a1 + 992) = vdupq_n_s64(0xFFEFFFFFFFFFFFFFLL);
  *(_DWORD *)(a1 + 1008) = 1102504264;
  *(_WORD *)(a1 + 1012) = 0;
  *(_OWORD *)(a1 + 1048) = 0u;
  *(_DWORD *)(a1 + 1064) = -1082130432;
  *(_WORD *)(a1 + 1068) = 0;
  sub_100A6F348(a1 + 1072);
  sub_1009A04C4(a1 + 1544);
  sub_100F34358(a1 + 1648, a1);
  *(_OWORD *)(a1 + 2104) = 0u;
  sub_100DADF3C((_OWORD *)(a1 + 2128));
  *(void *)(a1 + 2176) = 0x7FEFFFFFFFFFFFFFLL;
  memcpy((void *)(a1 + 200), &unk_1012E2128, 0x310uLL);
  for (uint64_t i = 984LL; i != 991; ++i)
    *(_BYTE *)(a1 + i) = 0;
  uuid_parse("00000000-0000-0000-0000-000000000000", (unsigned __int8 *)(a1 + 1030));
  uuid_parse("00000000-0000-0000-0000-000000000000", (unsigned __int8 *)(a1 + 1014));
  return a1;
}

void sub_10020AF7C(_Unwind_Exception *a1)
{
  BOOL v5 = *v3;
  if (*v3)
  {
    v1[5] = v5;
    operator delete(v5);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_10020AFD8(uint64_t a1)
{
  *(void *)a1 = off_10182B230;
  sub_100008390(a1 + 64, *(void **)(a1 + 72));
  sub_100210578((void *)(a1 + 16));
  return a1;
}

uint64_t sub_10020B01C(uint64_t a1)
{
  *(void *)a1 = off_10182B0F0;
  *(void *)(a1 + 1544) = off_10182B230;
  sub_100008390(a1 + 1608, *(void **)(a1 + 1616));
  sub_100210578((void *)(a1 + 1560));
  sub_100A6F34C(a1 + 1072);
  sub_100210A94((void *)(a1 + 152));
  sub_100210A00((void *)(a1 + 104));
  sub_100210A00((void *)(a1 + 56));
  uint64_t v2 = *(void **)(a1 + 32);
  if (v2)
  {
    *(void *)(a1 + 40) = v2;
    operator delete(v2);
  }

  return a1;
}

void sub_10020B0A0(uint64_t a1)
{
  uint64_t v1 = (void *)sub_10020B01C(a1);
  operator delete(v1);
}

float sub_10020B0B4(uint64_t a1)
{
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)a1 + 160LL))(v2, a1, 6LL);
  return 38.0 / *(double *)&v2[6];
}

__n128 sub_10020B120@<Q0>(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v2 = (char *)&unk_1012E2128 + 112 * a1;
  __int128 v3 = *((_OWORD *)v2 + 5);
  *(_OWORD *)(a2 + 64) = *((_OWORD *)v2 + 4);
  *(_OWORD *)(a2 + 80) = v3;
  *(_OWORD *)(a2 + 96) = *((_OWORD *)v2 + 6);
  __int128 v4 = *((_OWORD *)v2 + 1);
  *(_OWORD *)a2 = *(_OWORD *)v2;
  *(_OWORD *)(a2 + 16) = v4;
  __n128 result = *((__n128 *)v2 + 3);
  *(_OWORD *)(a2 + 32) = *((_OWORD *)v2 + 2);
  *(__n128 *)(a2 + 48) = result;
  return result;
}

BOOL sub_10020B154(uint64_t a1)
{
  int v74 = 0LL;
  __int16 v75 = 0LL;
  uint64_t v76 = 0LL;
  uint64_t v2 = a1 + 1072;
  int v3 = sub_100A70160(a1 + 1072, 200, &v74);
  __int128 v4 = *(void ***)(a1 + 160);
  uint64_t v5 = *(void *)(a1 + 168);
  *(void *)(a1 + 192) = 0LL;
  unint64_t v6 = v5 - (void)v4;
  if (v6 >= 0x11)
  {
    do
    {
      operator delete(*v4);
      uint64_t v7 = *(void *)(a1 + 168);
      __int128 v4 = (void **)(*(void *)(a1 + 160) + 8LL);
      *(void *)(a1 + 160) = v4;
      unint64_t v6 = v7 - (void)v4;
    }

    while (v6 > 0x10);
  }

  if (v6 >> 3 == 1)
  {
    uint64_t v8 = 13LL;
  }

  else
  {
    if (v6 >> 3 != 2) {
      goto LABEL_8;
    }
    uint64_t v8 = 26LL;
  }

  *(void *)(a1 + 184) = v8;
LABEL_8:
  *(_BYTE *)(a1 + 1069) = 0;
  __int128 v10 = (char *)v74;
  __int128 v9 = v75;
  if (v74 != v75)
  {
    do
    {
      sub_10020FFB4((void *)(a1 + 152), (uint64_t)v10);
      v10 += 152;
    }

    while (v10 != v9);
  }

  if (v3 == 100)
  {
    if (v74 == v75)
    {
      int v11 = 0;
      int v12 = 0;
    }

    else
    {
      int v11 = *((_DWORD *)v75 - 12);
      int v12 = *((_DWORD *)v75 - 2);
    }

    *(_DWORD *)(a1 + 1056) = v11;
    *(_DWORD *)(a1 + 1060) = v12;
    sub_100A6F384(v2, (char **)buf);
    uint64_t v15 = *(void **)(a1 + 32);
    if (v15)
    {
      *(void *)(a1 + 40) = v15;
      operator delete(v15);
      *(void *)(a1 + 32) = 0LL;
      *(void *)(a1 + 40) = 0LL;
      *(void *)(a1 + 48) = 0LL;
    }

    uint64_t v16 = *(const unsigned __int8 **)buf;
    *(void *)(a1 + 32) = *(void *)buf;
    __int128 v17 = *(_OWORD *)&buf[8];
    *(_OWORD *)(a1 + 40) = *(_OWORD *)&buf[8];
    if (v16 == (const unsigned __int8 *)v17)
    {
      memset(out, 0, 24);
      uint64_t v72 = 0LL;
      uint64_t v73 = 0LL;
      __int16 v71 = &v72;
    }

    else
    {
      uint64_t v68 = (uint64_t *)(a1 + 32);
      HIDWORD(v69) = 100;
      *(void *)&__int128 v17 = 136317954LL;
      __int128 v70 = v17;
      do
      {
        uint64_t v18 = v16;
        uuid_unparse(v16, out);
        uuid_unparse(v18 + 16, v108);
        if (qword_1019344E0 != -1) {
          dispatch_once(&qword_1019344E0, &stru_10182B200);
        }
        uint64_t v19 = (os_log_s *)qword_1019344E8;
        if (os_log_type_enabled((os_log_t)qword_1019344E8, OS_LOG_TYPE_DEBUG))
        {
          int v20 = *((_DWORD *)v18 + 10);
          uint64_t v21 = *((void *)v18 + 4);
          uint64_t v23 = *((void *)v18 + 6);
          uint64_t v22 = *((void *)v18 + 7);
          uint64_t v24 = *((void *)v18 + 9);
          uint64_t v25 = *((void *)v18 + 10);
          int v26 = *((_DWORD *)v18 + 16);
          uint64_t v27 = *((void *)v18 + 11);
          uint64_t v28 = *((void *)v18 + 12);
          uint64_t v29 = *((void *)v18 + 13);
          *(_DWORD *)uint64_t buf = v70;
          *(void *)&uint8_t buf[4] = out;
          *(_WORD *)&buf[12] = 1024;
          *(_DWORD *)&buf[14] = v20;
          *(_WORD *)&buf[18] = 2048;
          *(void *)&buf[20] = v21;
          *(_WORD *)&buf[28] = 2048;
          *(void *)&buf[30] = v22;
          *(_WORD *)&buf[38] = 2048;
          *(void *)&buf[40] = v23;
          *(_WORD *)&buf[48] = 2048;
          *(void *)&buf[50] = v24;
          __int16 v95 = 2048;
          uint64_t v96 = v25;
          __int16 v97 = 2048;
          uint64_t v98 = v27;
          __int16 v99 = 1024;
          int v100 = v26;
          __int16 v101 = 2048;
          uint64_t v102 = v28;
          __int16 v103 = 2048;
          uint64_t v104 = v29;
          __int16 v105 = 2080;
          uint64_t v106 = v108;
          _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEBUG,  "Historical-Distributions, loiUuid, %s, style, %d, poolLength, %f, median, %f, mean, %f, stddev, %f, min, %f, max, %f, samples, %d, prctile10, %f, prctile90, %f, uuid, %s",  buf,  0x72u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019344E0 != -1) {
            dispatch_once(&qword_1019344E0, &stru_10182B200);
          }
          int v30 = *((_DWORD *)v18 + 10);
          uint64_t v31 = *((void *)v18 + 4);
          uint64_t v33 = *((void *)v18 + 6);
          uint64_t v32 = *((void *)v18 + 7);
          uint64_t v34 = *((void *)v18 + 9);
          uint64_t v35 = *((void *)v18 + 10);
          int v36 = *((_DWORD *)v18 + 16);
          uint64_t v37 = *((void *)v18 + 11);
          uint64_t v38 = *((void *)v18 + 12);
          uint64_t v39 = *((void *)v18 + 13);
          *(_DWORD *)std::stringbuf::string_type __p = v70;
          *(void *)&__p[4] = out;
          *(_WORD *)&__p[12] = 1024;
          *(_DWORD *)&__p[14] = v30;
          *(_WORD *)&__p[18] = 2048;
          *(void *)&__p[20] = v31;
          *(_WORD *)&__p[28] = 2048;
          *(void *)&__p[30] = v32;
          __int16 v78 = 2048;
          uint64_t v79 = v33;
          __int16 v80 = 2048;
          uint64_t v81 = v34;
          __int16 v82 = 2048;
          uint64_t v83 = v35;
          __int16 v84 = 2048;
          uint64_t v85 = v37;
          __int16 v86 = 1024;
          int v87 = v36;
          __int16 v88 = 2048;
          uint64_t v89 = v38;
          __int16 v90 = 2048;
          uint64_t v91 = v39;
          __int16 v92 = 2080;
          __int128 v93 = v108;
          double v40 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344E8,  2LL,  "Historical-Distributions, loiUuid, %s, style, %d, poolLength, %f, median, %f, mean, %f, stddev , %f, min, %f, max, %f, samples, %d, prctile10, %f, prctile90, %f, uuid, %s",  __p,  114,  *(double *)&v68,  v69,  *(double *)&v70,  *((double *)&v70 + 1),  *(double *)&v71,  *(double *)&v72,  v73,  *(double *)&v74,  *(double *)&v75,  v76);
          sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLSwimDataStore::reloadStateFromPersistentStore()", "%s\n", v40);
          if (v40 != buf) {
            free(v40);
          }
        }

        uint64_t v16 = v18 + 112;
      }

      while (v18 + 112 != *(const unsigned __int8 **)(a1 + 40));
      uint64_t v41 = *v68;
      memset(out, 0, 24);
      uint64_t v72 = 0LL;
      uint64_t v73 = 0LL;
      __int16 v71 = &v72;
      int v3 = HIDWORD(v69);
      if (v18 + 112 != (const unsigned __int8 *)v41)
      {
        do
        {
          uuid_unparse((const unsigned __int8 *)(v41 + 16), __p);
          sub_1010DDBC0(buf, __p);
          if (out[23] < 0) {
            operator delete(*(void **)out);
          }
          *(_OWORD *)uuid_string_t out = *(_OWORD *)buf;
          *(void *)&out[16] = *(void *)&buf[16];
          int v42 = (char **)sub_10008E8D0((uint64_t)&v71, (const void **)out);
          if (&v72 == v42)
          {
            memset(v108, 0, 28);
            *(_DWORD *)&v108[4 * *(int *)(v41 + 40)] = *(_DWORD *)(v41 + 64);
            if (out[23] < 0)
            {
              sub_1010DD48C(buf, *(void **)out, *(unint64_t *)&out[8]);
            }

            else
            {
              *(_OWORD *)uint64_t buf = *(_OWORD *)out;
              *(void *)&buf[16] = *(void *)&out[16];
            }

            *(_OWORD *)&buf[24] = *(_OWORD *)v108;
            *(_OWORD *)&buf[36] = *(_OWORD *)&v108[12];
            sub_100210B28((uint64_t **)&v71, (const void **)buf, (uint64_t)buf);
            if ((buf[23] & 0x80000000) != 0) {
              operator delete(*(void **)buf);
            }
          }

          else
          {
            __int16 v43 = (char *)v42 + 4 * *(int *)(v41 + 40);
            int v44 = *(_DWORD *)(v41 + 64);
            if (v44 <= *((_DWORD *)v43 + 14)) {
              int v44 = *((_DWORD *)v43 + 14);
            }
            *((_DWORD *)v43 + 14) = v44;
          }

          v41 += 112LL;
        }

        while (v41 != *(void *)(a1 + 40));
        __int16 v45 = (uint64_t *)v71;
        memset(__p, 0, 24);
        if (v71 != &v72)
        {
          uint64_t v46 = 0LL;
          do
          {
            int v47 = 0;
            for (uint64_t i = 56LL; i != 84; i += 4LL)
              v47 += *(_DWORD *)((char *)v45 + i);
            float v49 = (float)v47;
            if ((unint64_t)v46 >= *(void *)&__p[16])
            {
              uint64_t v50 = *(float **)__p;
              uint64_t v51 = ((uint64_t)v46 - *(void *)__p) >> 2;
              unint64_t v52 = v51 + 1;
              uint64_t v53 = *(void *)&__p[16] - *(void *)__p;
              else {
                unint64_t v54 = v52;
              }
              if (v54)
              {
                __int16 v55 = (char *)sub_10000956C((uint64_t)&__p[16], v54);
                uint64_t v50 = *(float **)__p;
                uint64_t v46 = *(float **)&__p[8];
              }

              else
              {
                __int16 v55 = 0LL;
              }

              uint64_t v56 = (float *)&v55[4 * v51];
              *uint64_t v56 = v49;
              uint64_t v57 = v56 + 1;
              while (v46 != v50)
              {
                int v58 = *((_DWORD *)v46-- - 1);
                *((_DWORD *)v56-- - 1) = v58;
              }

              *(void *)std::stringbuf::string_type __p = v56;
              *(void *)&__p[8] = v57;
              *(void *)&__p[16] = &v55[4 * v54];
              if (v50) {
                operator delete(v50);
              }
              uint64_t v46 = v57;
            }

            else
            {
              *v46++ = v49;
            }

            *(void *)&__p[8] = v46;
            __int16 v59 = (char *)v45[1];
            if (v59)
            {
              do
              {
                double v60 = (char **)v59;
                __int16 v59 = *(char **)v59;
              }

              while (v59);
            }

            else
            {
              do
              {
                double v60 = (char **)v45[2];
                BOOL v61 = *v60 == (char *)v45;
                __int16 v45 = (uint64_t *)v60;
              }

              while (!v61);
            }

            __int16 v45 = (uint64_t *)v60;
          }

          while (v60 != &v72);
          if (*(float **)__p != v46)
          {
            sub_100A370A8(buf, __p);
            *(float *)(a1 + 1064) = sub_100A370A0((uint64_t)buf);
            if (*(void *)&buf[24])
            {
              *(void *)&buf[32] = *(void *)&buf[24];
              operator delete(*(void **)&buf[24]);
            }

            goto LABEL_84;
          }
        }