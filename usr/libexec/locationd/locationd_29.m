uint64_t sub_100E9D820(uint64_t a1)
{
  return sub_100E9C924(a1 - 72);
}

void sub_100E9D828(id a1)
{
  qword_101934828 = (uint64_t)os_log_create("com.apple.locationd.Position", "Spring");
}

uint64_t sub_100E9D854(uint64_t *a1, char **a2)
{
  v4 = (*(void *(**)(void **__return_ptr))(*a1 + 64))(v39);
  if ((SHIBYTE(v40) & 0x80000000) == 0)
  {
    if (HIBYTE(v40)) {
      goto LABEL_3;
    }
LABEL_43:
    sub_101275A78(v4);
    __break(1u);
  }

  v36 = v39[1];
  operator delete(v39[0]);
  if (!v36) {
    goto LABEL_43;
  }
LABEL_3:
  uint64_t result = sub_100D8A92C(a1 + 9);
  if ((_DWORD)result)
  {
    a2[1] = *a2;
    sub_10000CE18((uint64_t)v39);
    v6 = sub_10000CF44(&v40, (uint64_t)"SELECT * from ", 14LL);
    (*(void (**)(_BYTE *__return_ptr, uint64_t *))(*a1 + 64))(v43, a1);
    if (v43[23] >= 0) {
      v7 = v43;
    }
    else {
      v7 = *(_BYTE **)v43;
    }
    if (v43[23] >= 0) {
      uint64_t v8 = v43[23];
    }
    else {
      uint64_t v8 = *(void *)&v43[8];
    }
    v9 = sub_10000CF44(v6, (uint64_t)v7, v8);
    sub_10000CF44(v9, (uint64_t)" ORDER BY id ASC", 16LL);
    if ((v43[23] & 0x80000000) != 0) {
      operator delete(*(void **)v43);
    }
    uint64_t v10 = a1[10];
    std::stringbuf::str((std::stringbuf::string_type *)v43, &v41);
    if (v43[23] >= 0) {
      v11 = v43;
    }
    else {
      v11 = *(char **)v43;
    }
    sub_1003C0D54(v10, v11, &v37);
    uint64_t v12 = v37;
    uint64_t v37 = 0LL;
    uint64_t v38 = v12;
    if ((v43[23] & 0x80000000) != 0) {
      operator delete(*(void **)v43);
    }
    sub_1003C0454(a1[10]);
    while (!sub_1001BA11C((uint64_t)a1, &v38, (uint64_t)v43))
    {
      unint64_t v13 = (unint64_t)a2[1];
      unint64_t v14 = (unint64_t)a2[2];
      if (v13 >= v14)
      {
        uint64_t v19 = 0x6DB6DB6DB6DB6DB7LL * ((uint64_t)(v13 - (void)*a2) >> 3);
        unint64_t v20 = v19 + 1;
        unint64_t v21 = 0x6DB6DB6DB6DB6DB7LL * ((uint64_t)(v14 - (void)*a2) >> 3);
        if (2 * v21 > v20) {
          unint64_t v20 = 2 * v21;
        }
        if (v21 >= 0x249249249249249LL) {
          unint64_t v22 = 0x492492492492492LL;
        }
        else {
          unint64_t v22 = v20;
        }
        if (v22) {
          v23 = (char *)sub_1000AC8F0((uint64_t)(a2 + 2), v22);
        }
        else {
          v23 = 0LL;
        }
        v24 = &v23[56 * v19];
        __int128 v25 = *(_OWORD *)v43;
        __int128 v26 = *(_OWORD *)&v43[16];
        __int128 v27 = v44;
        *((void *)v24 + 6) = v45;
        *((_OWORD *)v24 + 1) = v26;
        *((_OWORD *)v24 + 2) = v27;
        *(_OWORD *)v24 = v25;
        v29 = *a2;
        v28 = a2[1];
        v30 = v24;
        if (v28 != *a2)
        {
          do
          {
            __int128 v31 = *(_OWORD *)(v28 - 56);
            __int128 v32 = *(_OWORD *)(v28 - 40);
            __int128 v33 = *(_OWORD *)(v28 - 24);
            *((void *)v30 - 1) = *((void *)v28 - 1);
            *(_OWORD *)(v30 - 24) = v33;
            *(_OWORD *)(v30 - 40) = v32;
            *(_OWORD *)(v30 - 56) = v31;
            v30 -= 56;
            v28 -= 56;
          }

          while (v28 != v29);
          v28 = *a2;
        }

        v18 = v24 + 56;
        *a2 = v30;
        a2[1] = v24 + 56;
        a2[2] = &v23[56 * v22];
        if (v28) {
          operator delete(v28);
        }
      }

      else
      {
        __int128 v15 = *(_OWORD *)v43;
        __int128 v16 = *(_OWORD *)&v43[16];
        __int128 v17 = v44;
        *(void *)(v13 + 48) = v45;
        *(_OWORD *)(v13 + 16) = v16;
        *(_OWORD *)(v13 + 32) = v17;
        *(_OWORD *)unint64_t v13 = v15;
        v18 = (char *)(v13 + 56);
      }

      a2[1] = v18;
    }

    sub_1003C05BC(a1[10]);
    uint64_t v34 = v38;
    uint64_t v38 = 0LL;
    if (v34) {
      (*(void (**)(uint64_t))(*(void *)v34 + 8LL))(v34);
    }
    *(void **)((char *)v39
    uint64_t v40 = v35;
    std::streambuf::~streambuf(&v41);
    return std::ios::~ios(&v42);
  }

  return result;
}

void sub_100E9DBB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  sub_1011F8850((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100E9DC28(void *a1, uint64_t a2)
{
  v4 = (*(void *(**)(void **__return_ptr))(*a1 + 64LL))(v23);
  if ((SHIBYTE(v24) & 0x80000000) == 0)
  {
    if (HIBYTE(v24)) {
      goto LABEL_3;
    }
LABEL_29:
    unint64_t v20 = (_Unwind_Exception *)sub_101275BE4(v4);
    sub_1011F8850((uint64_t)v23);
    _Unwind_Resume(v20);
  }

  uint64_t v19 = v23[1];
  operator delete(v23[0]);
  if (!v19) {
    goto LABEL_29;
  }
LABEL_3:
  uint64_t result = sub_100D8A92C(a1 + 9);
  if ((_DWORD)result)
  {
    (*(void (**)(void *, uint64_t, uint64_t))(*a1 + 120LL))(a1, a2, 1LL);
    sub_10000CE18((uint64_t)v23);
    v6 = sub_10000CF44(&v24, (uint64_t)"DELETE FROM ", 12LL);
    (*(void (**)(std::stringbuf::string_type *__return_ptr, void *))(*a1 + 64LL))(&__p, a1);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t size = __p.__r_.__value_.__s.__size_;
    }
    else {
      uint64_t size = __p.__r_.__value_.__l.__size_;
    }
    v9 = sub_10000CF44(v6, (uint64_t)p_p, size);
    sub_10000CF44(v9, (uint64_t)" WHERE startTime > ?", 20LL);
    uint64_t v10 = a1[10];
    std::stringbuf::str(&__p, &v25);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      v11 = &__p;
    }
    else {
      v11 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(v10, (char *)v11, &v21);
    uint64_t v12 = v21;
    uint64_t v21 = 0LL;
    unint64_t v13 = (sqlite3_stmt *)sub_100019240(v12);
    if (sub_1003B7480(v13, 1, *(double *)(a2 + 40)))
    {
      uint64_t v14 = a1[10];
      __int128 v15 = (sqlite3_stmt *)sub_100019240(v12);
      sub_1003BB2BC(v14, v15);
    }

    uint64_t v16 = a1[10];
    else {
      uint64_t v17 = *(void *)(v16 + 88);
    }
    sub_1003C1EC0(v16, v17);
    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
    }
    *(void **)((char *)v23
    uint64_t v24 = v18;
    std::streambuf::~streambuf(&v25);
    return std::ios::~ios(&v26);
  }

  return result;
}

uint64_t sub_100E9DE88(void *a1, double a2)
{
  v4 = (*(void *(**)(void **__return_ptr))(*a1 + 64LL))(v21);
  if ((SHIBYTE(v22) & 0x80000000) == 0)
  {
    if (HIBYTE(v22)) {
      goto LABEL_3;
    }
LABEL_26:
    uint64_t v18 = (_Unwind_Exception *)sub_101275D50(v4);
    sub_1011F8850((uint64_t)v21);
    _Unwind_Resume(v18);
  }

  uint64_t v17 = v21[1];
  operator delete(v21[0]);
  if (!v17) {
    goto LABEL_26;
  }
LABEL_3:
  uint64_t result = sub_100D8A92C(a1 + 9);
  if ((_DWORD)result)
  {
    sub_10000CE18((uint64_t)v21);
    v6 = sub_10000CF44(&v22, (uint64_t)"UPDATE ", 7LL);
    (*(void (**)(std::stringbuf::string_type *__return_ptr, void *))(*a1 + 64LL))(&__p, a1);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t size = __p.__r_.__value_.__s.__size_;
    }
    else {
      uint64_t size = __p.__r_.__value_.__l.__size_;
    }
    v9 = sub_10000CF44(v6, (uint64_t)p_p, size);
    sub_10000CF44(v9, (uint64_t)" SET startTime = startTime + ?", 30LL);
    uint64_t v10 = a1[10];
    std::stringbuf::str(&__p, &v23);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      v11 = &__p;
    }
    else {
      v11 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(v10, (char *)v11, &v19);
    uint64_t v12 = v19;
    uint64_t v19 = 0LL;
    unint64_t v13 = (sqlite3_stmt *)sub_100019240(v12);
    if (sub_1003B7480(v13, 1, a2))
    {
      uint64_t v14 = a1[10];
      __int128 v15 = (sqlite3_stmt *)sub_100019240(v12);
      sub_1003BB2BC(v14, v15);
    }

    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
    }
    *(void **)((char *)v21
    uint64_t v22 = v16;
    std::streambuf::~streambuf(&v23);
    return std::ios::~ios(&v24);
  }

  return result;
}

uint64_t sub_100E9E0C0(void *a1, uint64_t a2)
{
  v4 = (*(void *(**)(void **__return_ptr))(*a1 + 64LL))(v22);
  if ((SHIBYTE(v23) & 0x80000000) == 0)
  {
    if (HIBYTE(v23)) {
      goto LABEL_3;
    }
LABEL_25:
    uint64_t v17 = (_Unwind_Exception *)sub_101275EBC(v4);
    uint64_t v18 = v20;
    uint64_t v20 = 0LL;
    if (v18) {
      (*(void (**)(uint64_t))(*(void *)v18 + 8LL))(v18);
    }
    sub_1011F8850((uint64_t)v22);
    _Unwind_Resume(v17);
  }

  uint64_t v16 = v22[1];
  operator delete(v22[0]);
  if (!v16) {
    goto LABEL_25;
  }
LABEL_3:
  sub_10000CE18((uint64_t)v22);
  v5 = sub_10000CF44(&v23, (uint64_t)"SELECT * FROM ", 14LL);
  (*(void (**)(std::stringbuf::string_type *__return_ptr, void *))(*a1 + 64LL))(&__p, a1);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t size = __p.__r_.__value_.__s.__size_;
  }
  else {
    uint64_t size = __p.__r_.__value_.__l.__size_;
  }
  uint64_t v8 = sub_10000CF44(v5, (uint64_t)p_p, size);
  sub_10000CF44(v8, (uint64_t)" ORDER BY ROWID DESC LIMIT 1", 28LL);
  uint64_t v9 = a1[10];
  std::stringbuf::str(&__p, &v24);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t v10 = &__p;
  }
  else {
    uint64_t v10 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
  }
  sub_1003C0D54(v9, (char *)v10, &v19);
  uint64_t v11 = v19;
  uint64_t v19 = 0LL;
  uint64_t v20 = v11;
  uint64_t v12 = sub_1001BA11C((uint64_t)a1, &v20, a2);
  uint64_t v13 = v20;
  uint64_t v20 = 0LL;
  if (v13) {
    (*(void (**)(uint64_t))(*(void *)v13 + 8LL))(v13);
  }
  *(void **)((char *)v22
  uint64_t v23 = v14;
  std::streambuf::~streambuf(&v24);
  std::ios::~ios(&v25);
  return v12;
}

void sub_100E9E2E8(id a1)
{
  qword_1019344B8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Motion");
}

void sub_100E9E314(id a1)
{
  qword_101934518 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Pedometer");
}

BOOL sub_100E9E340(char *a1, std::string *a2)
{
  if (a1[23] < 0) {
    a1 = *(char **)a1;
  }
  uint64_t v3 = sub_1002A6F04(a1);
  if (!v3) {
    return 0LL;
  }
  v4 = v3;
  v5 = CFUUIDCreateFromString(kCFAllocatorDefault, v3);
  CFRelease(v4);
  if (!v5) {
    return 0LL;
  }
  v6 = CFUUIDCreateString(kCFAllocatorDefault, v5);
  CFRelease(v5);
  if (!v6) {
    return 0LL;
  }
  BOOL v7 = sub_1002AA05C(v6, a2);
  CFRelease(v6);
  return v7;
}

BOOL sub_100E9E3E8(char *a1, char *a2)
{
  if (!sub_100E9E340(a1, &__s1))
  {
    BOOL v15 = 0LL;
    goto LABEL_29;
  }

  if (!sub_100E9E340(a2, &__p))
  {
    BOOL v15 = 0LL;
    if ((__p.__r_.__value_.__s.__size_ & 0x80) == 0) {
      goto LABEL_29;
    }
    goto LABEL_28;
  }

  if ((__s1.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    std::string::size_type size = __s1.__r_.__value_.__s.__size_;
  }
  else {
    std::string::size_type size = __s1.__r_.__value_.__l.__size_;
  }
  std::string::size_type v4 = __p.__r_.__value_.__s.__size_;
  unsigned __int8 v5 = __p.__r_.__value_.__s.__size_;
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
    std::string::size_type v4 = __p.__r_.__value_.__l.__size_;
  }
  if (size != v4)
  {
    BOOL v15 = 0LL;
    if ((__p.__r_.__value_.__s.__size_ & 0x80) == 0) {
      goto LABEL_29;
    }
    goto LABEL_28;
  }

  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__s1.__r_.__value_.__s.__size_ & 0x80) != 0)
  {
    BOOL v15 = memcmp(__s1.__r_.__value_.__l.__data_, p_p, __s1.__r_.__value_.__l.__size_) == 0;
    goto LABEL_27;
  }

  if (__s1.__r_.__value_.__s.__size_)
  {
    uint64_t v7 = __s1.__r_.__value_.__s.__size_ - 1LL;
    p_s1 = &__s1;
    do
    {
      int v10 = p_s1->__r_.__value_.__s.__data_[0];
      p_s1 = (std::string *)((char *)p_s1 + 1);
      int v9 = v10;
      int v12 = p_p->__r_.__value_.__s.__data_[0];
      p_p = (std::string *)((char *)p_p + 1);
      int v11 = v12;
      BOOL v14 = v7-- != 0;
      BOOL v15 = v9 == v11;
    }

    while (v9 == v11 && v14);
LABEL_27:
    if ((v5 & 0x80) == 0) {
      goto LABEL_29;
    }
    goto LABEL_28;
  }

  BOOL v15 = 1LL;
  if ((__p.__r_.__value_.__s.__size_ & 0x80) != 0) {
LABEL_28:
  }
    operator delete(__p.__r_.__value_.__l.__data_);
LABEL_29:
  return v15;
}

void sub_100E9E50C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_100E9E538(uint64_t *a1)
{
  v2 = objc_alloc(&OBJC_CLASS___NSString);
  else {
    uint64_t v3 = (uint64_t *)*a1;
  }
  std::string::size_type v4 = -[NSString initWithUTF8String:](v2, "initWithUTF8String:", v3);
  unsigned __int8 v5 = -[NSUUID initWithUUIDString:](objc_alloc(&OBJC_CLASS___NSUUID), "initWithUUIDString:", v4);

  if (v5) {
  return v5 != 0LL;
  }
}

uint64_t sub_100E9E5A4(uint64_t a1)
{
  return sub_100E9E538((uint64_t *)(a1 + 8)) & *(_BYTE *)(a1 + 36);
}

uint64_t sub_100E9E5D0(uint64_t a1, uint64_t a2, double a3)
{
  if ((*(unsigned int (**)(void))(**(void **)(a2 + 48) + 48LL))(*(void *)(a2 + 48)))
  {
    (*(void (**)(void, _BYTE *, double))(**(void **)(a2 + 48) + 24LL))(*(void *)(a2 + 48), v7, a3);
    if (v7[208])
    {
      sub_100253308(*(void *)(a2 + 8));
      sub_100253308(*(void *)(a2 + 96));
    }
  }

  return nullsub_1227(a1 + 8, a2, a3);
}

uint64_t sub_100E9E68C(double a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)(a3 + 8) + 48LL))(*(void *)(a3 + 8));
  if ((_DWORD)result) {
    return (*(uint64_t (**)(void, double))(**(void **)(a3 + 96) + 48LL))(*(void *)(a3 + 96), a1);
  }
  return result;
}

void sub_100E9E6E8(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  float v4 = *(float *)(a1 + 1292);
  float v5 = *(float *)(a1 + 296);
  float v6 = *(float *)(a1 + 1288);
  BOOL v7 = v4 <= 0.05 && v5 < 4.0;
  if (v7 && v6 < 0.4)
  {
    unsigned int v8 = 0;
  }

  else
  {
    unsigned int v8 = 1;
    BOOL v9 = v4 <= 0.05 || v5 < 4.0;
    if (!v9 && v6 >= 0.4)
    {
      if (v6 <= 5.8 && v5 <= 132.0 && v4 < 1.15) {
        unsigned int v8 = 2;
      }
      else {
        unsigned int v8 = 3;
      }
    }
  }

  float v12 = *(double *)(a1 + 560);
  int v13 = sub_1003DBFB4(a1);
  else {
    int v14 = 0;
  }
  float v15 = *(float *)(a1 + 1368);
  float v16 = *(float *)(a1 + 1372);
  float v17 = *(float *)(a1 + 1376);
  float v18 = *(float *)(a1 + 1380);
  *(void *)a2 = 0LL;
  *(void *)(a2 + 8) = 0LL;
  *(void *)(a2 + 16) = 0LL;
  *(void *)(a2 + 24) = 3LL;
  *(void *)(a2 + 32) = 3LL;
  double v39 = v12;
  float v19 = (v18 - v12) / (v18 - v17);
  float v20 = v15 * sub_100D086F8(v19, v16);
  *(float *)a2 = v20;
  float v22 = sub_100E9EC58(v21, (float *)a1);
  if (v8 == 3)
  {
    sub_1004493F4();
    if (v22 < v23) {
      float v22 = v23;
    }
  }

  float v24 = 12.0;
  if (v22 <= 12.0) {
    float v24 = v22;
  }
  *(float *)(a2 + 4) = v24;
  *(_DWORD *)(a2 + 24) = 0;
  *(_DWORD *)(a2 + 32) = 0;
  if ((v14 & 1) != 0) {
    __asm { BR              X10 }
  }

  int v25 = 0;
  float v26 = flt_101363AC0[v8 < 2];
  double v27 = dbl_101363AD0[v8 < 2];
  double v28 = v20;
  double v29 = v24;
  float v30 = 1.0 * v24 + (1.0 - 1.0) * v28;
  *(float *)(a2 + 20) = v30;
  *(float *)(a2 + 28) = v30;
  float v31 = v30;
  if (v27 > v30)
  {
    float v31 = v27;
    *(float *)(a2 + 20) = v31;
    int v25 = 3;
    *(_DWORD *)(a2 + 24) = 3;
  }

  if (v27 >= v30)
  {
    *(float *)(a2 + 28) = v26;
    *(_DWORD *)(a2 + 32) = 3;
    float v30 = v26;
  }

  *(float *)(a2 + 12) = v24;
  *(_DWORD *)(a2 + 36) = 16;
  if (qword_1019344D0 != -1) {
    dispatch_once(&qword_1019344D0, &stru_10188A5A8);
  }
  __int128 v32 = (os_log_s *)qword_1019344D8;
  if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v33 = *(void *)(a1 + 128);
    *(_DWORD *)buf = 134221056;
    double v67 = v29;
    __int16 v68 = 2048;
    double v69 = v28;
    __int16 v70 = 2048;
    double v71 = v30;
    __int16 v72 = 2048;
    double v73 = v31;
    __int16 v74 = 2048;
    uint64_t v75 = v33;
    __int16 v76 = 1024;
    unsigned int v77 = v8;
    __int16 v78 = 2048;
    double v79 = 1.0;
    __int16 v80 = 1024;
    int v81 = v25;
    __int16 v82 = 2048;
    double v83 = v4;
    __int16 v84 = 2048;
    double v85 = v5;
    __int16 v86 = 2048;
    double v87 = v39;
    __int16 v88 = 1024;
    int v89 = v14;
    __int16 v90 = 2048;
    double v91 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEBUG,  "Kickboxing,metsWR,%f,metsHR,%f,truthMets,%f,userMets,%f,endTime,%f,motionIntensity,%d,wrWeight,%f,metsSource,%d,ac celZ,%f,vm,%f,hr,%f,hrReliability,%d,rotationRate,%f",  buf,  0x78u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_10188A5A8);
    }
    uint64_t v34 = *(void *)(a1 + 128);
    int v40 = 134221056;
    double v41 = v29;
    __int16 v42 = 2048;
    double v43 = v28;
    __int16 v44 = 2048;
    double v45 = v30;
    __int16 v46 = 2048;
    double v47 = v31;
    __int16 v48 = 2048;
    uint64_t v49 = v34;
    __int16 v50 = 1024;
    unsigned int v51 = v8;
    __int16 v52 = 2048;
    double v53 = 1.0;
    __int16 v54 = 1024;
    int v55 = v25;
    __int16 v56 = 2048;
    double v57 = v4;
    __int16 v58 = 2048;
    double v59 = v5;
    __int16 v60 = 2048;
    double v61 = v39;
    __int16 v62 = 1024;
    int v63 = v14;
    __int16 v64 = 2048;
    double v65 = v6;
    LODWORD(v37) = 120;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  2LL,  "Kickboxing,metsWR,%f,metsHR,%f,truthMets,%f,userMets,%f,endTime,%f,motionIntensity,%d,wrWeight,%f,metsSource,%d,ac celZ,%f,vm,%f,hr,%f,hrReliability,%d,rotationRate,%f",  COERCE_DOUBLE(&v40),  v37,  v38,  v39);
    v36 = (uint8_t *)v35;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual CLMetsInfo CLCalorieKickboxingModel::computeMETS(const CLNatalieModelInput &)",  "%s\n",  v35);
    if (v36 != buf) {
      free(v36);
    }
  }

float sub_100E9EC58(uint64_t a1, float *a2)
{
  uint64_t v2 = 0LL;
  float v3 = a2[322];
  float v4 = a2[323];
  float v5 = a2[324];
  float v6 = a2[341];
  float v7 = a2[340] * 100.0;
  unint64_t v15 = __PAIR64__(LODWORD(v3), LODWORD(v4));
  *(float *)&double v16 = v3 * v4;
  *((float *)&v16 + 1) = v6;
  unint64_t v17 = __PAIR64__(LODWORD(v5), LODWORD(v7));
  float v8 = 0.27451;
  do
  {
    float v8 = v8 + (float)(*(float *)((char *)&v15 + v2 * 4) * *(float *)&dword_101363AE0[v2]);
    ++v2;
  }

  while (v2 != 6);
  if (qword_1019344D0 != -1) {
    dispatch_once(&qword_1019344D0, &stru_10188A5A8);
  }
  BOOL v9 = (os_log_s *)qword_1019344D8;
  if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 134219264;
    double v31 = v4;
    __int16 v32 = 2048;
    double v33 = v3;
    __int16 v34 = 2048;
    double v35 = v5;
    __int16 v36 = 2048;
    double v37 = v6;
    __int16 v38 = 2048;
    double v39 = v7;
    __int16 v40 = 2048;
    double v41 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "iz,%f,w,%f,hw,%f,weight,%f,height,%f,wr,%f",  buf,  0x3Eu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_10188A5A8);
    }
    int v18 = 134219264;
    double v19 = v4;
    __int16 v20 = 2048;
    double v21 = v3;
    __int16 v22 = 2048;
    double v23 = v5;
    __int16 v24 = 2048;
    double v25 = v6;
    __int16 v26 = 2048;
    double v27 = v7;
    __int16 v28 = 2048;
    double v29 = v8;
    LODWORD(v13) = 62;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  2LL,  "iz,%f,w,%f,hw,%f,weight,%f,height,%f,wr,%f",  COERCE_DOUBLE(&v18),  v13,  v14,  *(double *)&v15,  v16,  *(double *)&v17);
    float v12 = (uint8_t *)v11;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "float CLCalorieKickboxingModel::computeWRRegression(const CLNatalieModelInput &) const",  "%s\n",  v11);
    if (v12 != buf) {
      free(v12);
    }
  }

  return v8;
}

void sub_100E9EF04(id a1)
{
  qword_1019344D8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Calorimetry");
}

uint64_t sub_100E9EF30(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_100E86D4C(a1, "CLBTLEBeaconProviderConcrete-Notifier", a2);
  *(void *)uint64_t v3 = off_10188A5D8;
  sub_1002E5358((pthread_cond_t **)(v3 + 112));
  *(void *)(a1 + 120) = 0LL;
  *(_BYTE *)(a1 + 128) = 0;
  *(_DWORD *)(a1 + 132) = 0;
  *(void *)(a1 + 144) = 0LL;
  uint64_t v4 = a1 + 144;
  *(void *)(a1 + 152) = 0LL;
  sub_100AD558C(a1 + 160, (uint64_t)"BTLEBeaconProvider", a1, 10.3);
  *(_DWORD *)(a1 + 208) = 0;
  sub_1004F2598();
  uint64_t v5 = sub_1004F64FC();
  *(void *)(a1 + 216) = 0x408C200000000000LL;
  float v6 = (uint64_t *)(a1 + 216);
  *(_BYTE *)(a1 + 212) = (v5 & 0x200000) != 0;
  *(_BYTE *)(a1 + 224) = 1;
  float v7 = (unsigned __int8 *)(a1 + 224);
  *(void *)(a1 + 232) = 0LL;
  *(void *)(a1 + 240) = 0LL;
  *(void *)(a1 + 248) = a1 + 248;
  *(void *)(a1 + 256) = a1 + 248;
  *(void *)(a1 + 264) = 0LL;
  *(void *)(a1 + 280) = 0LL;
  *(void *)(a1 + 272) = a1 + 280;
  *(void *)(a1 + 288) = 0LL;
  *(void *)(a1 + 296) = 0LL;
  *(void *)(a1 + 304) = 0LL;
  *(void *)(a1 + 312) = 0LL;
  *(_DWORD *)(a1 + 320) = -1;
  sub_1002F0B04(&buf);
  int v8 = sub_1002A6F64(buf, "BeaconFenceBestEffortScheduleEnabled", (BOOL *)(a1 + 224));
  int v9 = v8;
  int v10 = (std::__shared_weak_count *)*((void *)&buf + 1);
  if (!*((void *)&buf + 1)) {
    goto LABEL_5;
  }
  int v11 = (unint64_t *)(*((void *)&buf + 1) + 8LL);
  do
    unint64_t v12 = __ldaxr(v11);
  while (__stlxr(v12 - 1, v11));
  if (!v12)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
    if (!v9) {
      goto LABEL_11;
    }
  }

  else
  {
LABEL_5:
    if (!v8) {
      goto LABEL_11;
    }
  }

  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10188A778);
  }
  double v13 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEFAULT))
  {
    int v14 = *v7;
    LODWORD(buf) = 67174657;
    DWORD1(buf) = v14;
    _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "#Warning Overriding BeaconFenceBestEffortScheduleEnabled,%{private}d",  (uint8_t *)&buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188A778);
    }
    int v28 = *v7;
    int v36 = 67174657;
    LODWORD(v37) = v28;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934848,  0LL,  "#Warning Overriding BeaconFenceBestEffortScheduleEnabled,%{private}d",  &v36,  8);
    float v30 = (char *)v29;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLBTLEBeaconProviderConcrete::CLBTLEBeaconProviderConcrete(id<CLIntersiloUniverse>)",  "%s\n",  v29);
  }

void sub_100E9F5D0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, void *__p, uint64_t a22, int a23, __int16 a24, char a25, char a26)
{
  uint64_t v32 = *v30;
  uint64_t *v30 = 0LL;
  if (v32) {
    (*(void (**)(uint64_t))(*(void *)v32 + 8LL))(v32);
  }
  sub_1002E53C0(v27);
  sub_100E86F28(v26);
  _Unwind_Resume(a1);
}

void sub_100E9F6A4(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10188A798);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v10 = 1;
    float v7 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLBTLEBeaconProviderConcrete::onDaemonStatusNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v7, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10188A798);
    }
    int v8 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)__int128 buf = 68289538;
      int v12 = 0;
      __int16 v13 = 2082;
      int v14 = "";
      __int16 v15 = 2082;
      int v16 = "activity";
      __int16 v17 = 2050;
      uint64_t v18 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLBTLEBeaconProviderConcrete::onDaemonStatusNotification, event:%{public, location: escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v10 = 0;
  }

  sub_100EA338C(a4, v6, a2);
  if (v10) {
    os_activity_scope_leave(&state);
  }
}

void sub_100E9F854( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100E9F874(uint64_t a1, uint64_t a2)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10188A798);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v6 = 1;
    uint64_t v3 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLBTLEBeaconProviderConcrete::onZoneDetectionTimer",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v3, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10188A798);
    }
    uint64_t v4 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)__int128 buf = 68289538;
      int v8 = 0;
      __int16 v9 = 2082;
      char v10 = "";
      __int16 v11 = 2082;
      int v12 = "activity";
      __int16 v13 = 2050;
      uint64_t v14 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLBTLEBeaconProviderConcrete::onZoneDetectionTimer, event:%{public, location:escape _only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v6 = 0;
  }

  sub_100EA31F0(a2);
  if (v6) {
    os_activity_scope_leave(&state);
  }
}

void sub_100E9FA14( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100E9FA34(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10188A778);
  }
  uint64_t v4 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)__int128 buf = 68289282;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)int v8 = 2082;
    *(void *)&v8[2] = "";
    *(_WORD *)&v8[10] = 2050;
    *(void *)&v8[12] = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:iB: Bluetooth power changed, BT power:%{public}ld}",  buf,  0x1Cu);
  }

  *(void *)__int128 buf = buf;
  *(void *)int v8 = buf;
  *(void *)&v8[8] = 0LL;
  *(void *)&v8[16] = &off_10182CE18;
  *(_OWORD *)__int16 v9 = 0u;
  __int128 v10 = 0u;
  __int16 v11 = &off_10182CE18;
  *(_OWORD *)__int128 __p = 0u;
  __int128 v13 = 0u;
  int v14 = 1;
  char v15 = 1;
  if (a2 == 1)
  {
    sub_100E9FC08(v3, 0);
    char v5 = 1;
  }

  else
  {
    *(void *)(v3 + 232) = 0LL;
    sub_1006B6294(*(void *)(v3 + 152));
    char v5 = 0;
  }

  *(_BYTE *)(v3 + 128) = v5;
  char v15 = v5;
  int v6 = 2;
  (*(void (**)(uint64_t, int *, uint8_t *, uint64_t, uint64_t, void))(*(void *)v3 + 152LL))( v3,  &v6,  buf,  1LL,  0xFFFFFFFFLL,  0LL);
  __int16 v11 = &off_10182CE18;
  if (SBYTE7(v13) < 0) {
    operator delete(__p[0]);
  }
  *(void *)&v8[16] = &off_10182CE18;
  if (SBYTE7(v10) < 0) {
    operator delete(v9[0]);
  }
  sub_100527BBC((uint64_t *)buf);
}

void sub_100E9FBF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100E9FC08(uint64_t a1, int a2)
{
  if (*(_BYTE *)(a1 + 128))
  {
    if (*(int *)(a1 + 208) >= 1)
    {
      double Current = CFAbsoluteTimeGetCurrent();
      double v5 = Current;
      if (a2 != 2 || vabdd_f64(Current, *(double *)(a1 + 240)) >= 15.0)
      {
        if (qword_101934840 != -1) {
          dispatch_once(&qword_101934840, &stru_10188A778);
        }
        int v6 = (os_log_s *)qword_101934848;
        if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_INFO))
        {
          int v7 = *(_DWORD *)(a1 + 208);
          uint64_t v8 = *(void *)(a1 + 288);
          *(_DWORD *)__int128 buf = 68289538;
          *(_DWORD *)&uint8_t buf[4] = 0;
          *(_WORD *)&uint8_t buf[8] = 2082;
          *(void *)&buf[10] = "";
          *(_WORD *)&buf[18] = 1026;
          *(_DWORD *)&buf[20] = v7;
          __int16 v14 = 2050;
          uint64_t v15 = v8;
          _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:iB: Detecting state transitions for BE zones, numZones:%{public}d, totalZones:%{public}lu}",  buf,  0x22u);
        }

        sub_1010DDBC0(__p, "BestEffortScan");
        if (*(int *)(a1 + 168) <= 0)
        {
          if (SHIBYTE(v12) < 0)
          {
            sub_1010DD48C(buf, __p[0], (unint64_t)__p[1]);
          }

          else
          {
            *(_OWORD *)__int128 buf = *(_OWORD *)__p;
            *(void *)&buf[16] = v12;
          }

          sub_100AD5668(a1 + 160, (uint64_t *)buf);
          if ((buf[23] & 0x80000000) != 0) {
            operator delete(*(void **)buf);
          }
        }

        if (SHIBYTE(v12) < 0) {
          operator delete(__p[0]);
        }
        sub_100EA2A80(a1);
        *(double *)(a1 + 240) = v5;
        __int16 v9 = *(void **)(a1 + 40);
        v10[0] = _NSConcreteStackBlock;
        v10[1] = 3221225472LL;
        v10[2] = sub_100EA4898;
        v10[3] = &unk_10181D3D0;
        v10[4] = a1;
        [v9 afterInterval:v10 async:6.29999995];
        sub_100EA4830(a1, a2 == 3);
      }
    }
  }

void sub_100E9FE1C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *a20, uint64_t a21, int a22, __int16 a23, char a24, char a25)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100E9FE58(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 312);
  if (v2)
  {

    *(void *)(a1 + 312) = 0LL;
  }

  sub_1002A5370(v37);
  sub_1002F0B04(buf);
  BOOL v3 = sub_1002A8F8C(*(uint64_t *)&buf[0], "BeaconAdvertiserData", v37);
  BOOL v4 = v3;
  double v5 = (std::__shared_weak_count *)*((void *)&buf[0] + 1);
  if (!*((void *)&buf[0] + 1)) {
    goto LABEL_7;
  }
  int v6 = (unint64_t *)(*((void *)&buf[0] + 1) + 8LL);
  do
    unint64_t v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (v7)
  {
LABEL_7:
    if (v3) {
      goto LABEL_8;
    }
LABEL_60:
    if (*(void *)(a1 + 312)) {
      (*(void (**)(uint64_t))(*(void *)a1 + 264LL))(a1);
    }
    return sub_1002A5590(v37);
  }

  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  if (!v4) {
    goto LABEL_60;
  }
LABEL_8:
  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10188A778);
  }
  uint64_t v8 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(buf[0]) = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "iB: Read iBeacon Advertiser data",  (uint8_t *)buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188A778);
    }
    LOWORD(__p.__r_.__value_.__l.__data_) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "iB: Read iBeacon Advertiser data",  &__p,  2);
    uint64_t v26 = (char *)v25;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLBTLEBeaconProviderConcrete::beaconAdvertiseFromDefaults()",  "%s\n",  v25);
  }

  memset(&__p, 0, sizeof(__p));
  unsigned int v34 = -1;
  unsigned int v35 = -1;
  if (!sub_1002A8560((uint64_t)v37, "UUID", &__p))
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188A778);
    }
    uint64_t v18 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_FAULT))
    {
      LOWORD(buf[0]) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_FAULT,  "Can't enable beacon advertising as requested, no uuid",  (uint8_t *)buf,  2u);
    }

    if (!sub_1002921D0(115, 0)) {
      goto LABEL_47;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188A778);
    }
    LOWORD(v38) = 0;
    LODWORD(v33) = 2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  17LL,  "Can't enable beacon advertising as requested, no uuid",  &v38,  v33);
    __int16 v20 = (char *)v19;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLBTLEBeaconProviderConcrete::beaconAdvertiseFromDefaults()",  "%s\n",  v19);
    goto LABEL_72;
  }

  sub_1002A7CB0((uint64_t)v37, "major", &v35);
  sub_1002A7CB0((uint64_t)v37, "minor", &v34);
  *(_DWORD *)(a1 + 320) = -1;
  sub_1002A7CB0((uint64_t)v37, "power", (_DWORD *)(a1 + 320));
  __int16 v9 = objc_alloc(&OBJC_CLASS___NSUUID);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  __int16 v11 = -[NSUUID initWithUUIDString:]( v9,  "initWithUUIDString:",  +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", p_p));
  if (v11)
  {
    if ((v35 & 0x80000000) == 0)
    {
      uint64_t v12 = objc_alloc(&OBJC_CLASS___NSNumber);
      __int128 v13 = -[NSNumber initWithInt:](v12, "initWithInt:", v35);
      if (v13) {
        goto LABEL_26;
      }
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188A778);
      }
      __int16 v14 = (os_log_s *)qword_101934848;
      if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_FAULT))
      {
        LODWORD(buf[0]) = 67174657;
        DWORD1(buf[0]) = v35;
        _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "problem with major ID generation %{private}d",  (uint8_t *)buf,  8u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934840 != -1) {
          dispatch_once(&qword_101934840, &stru_10188A778);
        }
        int v38 = 67174657;
        LODWORD(v39) = v35;
        LODWORD(v33) = 8;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  17LL,  "problem with major ID generation %{private}d",  &v38,  v33);
        float v30 = (char *)v29;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLBTLEBeaconProviderConcrete::beaconAdvertiseFromDefaults()",  "%s\n",  v29);
      }
    }

    __int128 v13 = 0LL;
LABEL_26:
    if ((v34 & 0x80000000) == 0)
    {
      uint64_t v15 = objc_alloc(&OBJC_CLASS___NSNumber);
      int v16 = -[NSNumber initWithInt:](v15, "initWithInt:", v34);
      if (v16)
      {
        if (v13)
        {
          __int16 v17 = -[CLBeaconRegion initWithProximityUUID:major:minor:identifier:]( objc_alloc(&OBJC_CLASS___CLBeaconRegion),  "initWithProximityUUID:major:minor:identifier:",  v11,  (unsigned __int16)-[NSNumber shortValue](v13, "shortValue"),  (unsigned __int16)-[NSNumber shortValue](v16, "shortValue"),  @"com.apple.locationd.demo");
          goto LABEL_58;
        }

        goto LABEL_57;
      }

      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188A778);
      }
      uint64_t v23 = (os_log_s *)qword_101934848;
      if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_FAULT))
      {
        LODWORD(buf[0]) = 67174657;
        DWORD1(buf[0]) = v34;
        _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_FAULT,  "problem with minor ID generation %{private}d",  (uint8_t *)buf,  8u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934840 != -1) {
          dispatch_once(&qword_101934840, &stru_10188A778);
        }
        int v38 = 67174657;
        LODWORD(v39) = v34;
        LODWORD(v33) = 8;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  17LL,  "problem with minor ID generation %{private}d",  &v38,  v33);
        uint64_t v32 = (char *)v31;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLBTLEBeaconProviderConcrete::beaconAdvertiseFromDefaults()",  "%s\n",  v31);
      }
    }

    if (v13)
    {
      __int16 v17 = -[CLBeaconRegion initWithProximityUUID:major:identifier:]( objc_alloc(&OBJC_CLASS___CLBeaconRegion),  "initWithProximityUUID:major:identifier:",  v11,  (unsigned __int16)-[NSNumber shortValue](v13, "shortValue"),  @"com.apple.locationd.demo");
      int v16 = 0LL;
      goto LABEL_58;
    }

    int v16 = 0LL;
LABEL_57:
    __int16 v17 = -[CLBeaconRegion initWithProximityUUID:identifier:]( objc_alloc(&OBJC_CLASS___CLBeaconRegion),  "initWithProximityUUID:identifier:",  v11,  @"com.apple.locationd.demo");
LABEL_58:
    *(void *)(a1 + 312) = v17;

    goto LABEL_60;
  }

  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10188A778);
  }
  uint64_t v21 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_FAULT))
  {
    uint64_t v22 = &__p;
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      uint64_t v22 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    LODWORD(buf[0]) = 136380675;
    *(void *)((char *)buf + 4) = v22;
    _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_FAULT,  "problem with UUID generation %{private}s",  (uint8_t *)buf,  0xCu);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188A778);
    }
    double v27 = &__p;
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      double v27 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    int v38 = 136380675;
    uint64_t v39 = v27;
    LODWORD(v33) = 12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  17LL,  "problem with UUID generation %{private}s",  &v38,  v33);
    __int16 v20 = (char *)v28;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLBTLEBeaconProviderConcrete::beaconAdvertiseFromDefaults()",  "%s\n",  v28);
LABEL_72:
  }

void sub_100EA0780( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, char a20, uint64_t a21, uint64_t a22, uint64_t a23, char a24)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  sub_1002A5590(&a20);
  _Unwind_Resume(a1);
}

uint64_t sub_100EA07E0(uint64_t a1)
{
  *(void *)a1 = off_10188A5D8;
  sub_100EA0868(a1);
  sub_100E87324(a1 + 272, *(char **)(a1 + 280));
  sub_100527BBC((uint64_t *)(a1 + 248));
  sub_100AD5650(a1 + 160);
  uint64_t v2 = *(void *)(a1 + 144);
  *(void *)(a1 + 144) = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  sub_1002E53C0((pthread_cond_t **)(a1 + 112));
  return sub_100E86F28(a1);
}

void sub_100EA0854(uint64_t a1)
{
  v1 = (void *)sub_100EA07E0(a1);
  operator delete(v1);
}

void sub_100EA0868(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 152);
  if (v2)
  {
    sub_1006B6294(v2);
    uint64_t v3 = *(void *)(a1 + 152);
    if (v3)
    {
      BOOL v4 = (void *)sub_1006B6010(v3);
      operator delete(v4);
    }

    *(void *)(a1 + 152) = 0LL;
  }

  uint64_t v5 = *(void *)(a1 + 144);
  *(void *)(a1 + 144) = 0LL;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
  }
  dispatch_source_cancel(*(dispatch_source_t *)(a1 + 136));
  dispatch_release(*(dispatch_object_t *)(a1 + 136));
  int v6 = *(void **)(a1 + 120);
  if (v6)
  {

    *(void *)(a1 + 120) = 0LL;
  }

uint64_t sub_100EA08F8(uint64_t a1, uint64_t a2)
{
  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10188A778);
  }
  BOOL v4 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
  {
    sub_100271E94(a2, (std::stringbuf::string_type *)&__p);
    uint64_t v5 = v46[15] >= 0 ? &__p : (void **)__p;
    LODWORD(buf.__r_.__value_.__l.__data_) = 136380675;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "iB: Adding zone,%{private}s",  (uint8_t *)&buf,  0xCu);
    if ((v46[15] & 0x80000000) != 0) {
      operator delete(__p);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&__p, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188A778);
    }
    uint64_t v25 = qword_101934848;
    sub_100271E94(a2, &buf);
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_std::stringbuf::string_type buf = &buf;
    }
    else {
      p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    int v43 = 136380675;
    __int16 v44 = p_buf;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &__p,  1628LL,  &_mh_execute_header,  v25,  2LL,  "iB: Adding zone,%{private}s",  &v43,  12);
    int v28 = v27;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLBTLEBeaconProviderConcrete::addProximityZone(const CLBTLEBeaconProvider_Type::ProximityZone &)",  "%s\n",  v28);
  }

  uint64_t v6 = sub_100E9E5A4(a2);
  if ((v6 & 1) != 0)
  {
    unint64_t v7 = sub_100528D38(a1 + 272, a2);
    uint64_t v8 = v7;
    if ((void *)(a1 + 280) == v7)
    {
      int v15 = *(unsigned __int8 *)(a1 + 212);
      std::string __p = (void *)a2;
      int v16 = sub_100EA5CC4((uint64_t **)(a1 + 272), a2, (uint64_t)&unk_1012CF090, (uint64_t *)&__p);
      *(_WORD *)((char *)v16 + 73) = 0;
      v16[10] = 0LL;
      v16[11] = 0x100000001LL;
      uint64_t v17 = qword_101934840;
      *((_BYTE *)v16 + 72) = v15 ^ 1;
      if (v15 != 1)
      {
        if (v17 != -1) {
          dispatch_once(&qword_101934840, &stru_10188A778);
        }
        uint64_t v18 = (os_log_s *)qword_101934848;
        if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_INFO))
        {
          std::string __p = (void *)68289026;
          *(_WORD *)int v46 = 2082;
          *(void *)&v46[2] = "";
          _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:iB: Device doesn't support background monitoring, performing BE zone detection}",  (uint8_t *)&__p,  0x12u);
        }

        ++*(_DWORD *)(a1 + 208);
        sub_100E9FC08(a1, 1);
      }

      else
      {
        if (v17 != -1) {
          dispatch_once(&qword_101934840, &stru_10188A778);
        }
        unint64_t v19 = (os_log_s *)qword_101934848;
        if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
        {
          sub_100271E94(a2, (std::stringbuf::string_type *)&__p);
          __int16 v20 = v46[15] >= 0 ? &__p : (void **)__p;
          LODWORD(buf.__r_.__value_.__l.__data_) = 136380675;
          *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v20;
          _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEBUG,  "iB: Registering zone,%{private}s, with Bluetooth",  (uint8_t *)&buf,  0xCu);
          if ((v46[15] & 0x80000000) != 0) {
            operator delete(__p);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(&__p, 0x65CuLL);
          if (qword_101934840 != -1) {
            dispatch_once(&qword_101934840, &stru_10188A778);
          }
          uint64_t v31 = qword_101934848;
          sub_100271E94(a2, &buf);
          if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
            uint64_t v32 = &buf;
          }
          else {
            uint64_t v32 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
          }
          int v43 = 136380675;
          __int16 v44 = v32;
          LODWORD(v35) = 12;
          _os_log_send_and_compose_impl( 2LL,  0LL,  &__p,  1628LL,  &_mh_execute_header,  v31,  2LL,  "iB: Registering zone,%{private}s, with Bluetooth",  &v43,  v35);
          unsigned int v34 = v33;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLBTLEBeaconProviderConcrete::addProximityZone(const CLBTLEBeaconProvider_Type::ProximityZone &)",  "%s\n",  v34);
        }

        uint64_t v21 = sub_100EA1180(a2);
        std::string __p = (void *)a2;
        *((_BYTE *)sub_100EA5CC4((uint64_t **)(a1 + 272), a2, (uint64_t)&unk_1012CF090, (uint64_t *)&__p) + 73) = 1;
        uint64_t v22 = *(void **)(a1 + 120);
        v41[0] = _NSConcreteStackBlock;
        v41[1] = 3221225472LL;
        v41[2] = sub_100EA12B0;
        v41[3] = &unk_10188A6F0;
        v41[4] = a1;
        [v22 startTrackingZone:v21 forStates:3 transitionHandler:v41];

        std::string __p = &off_10182CE18;
        if (*(char *)(a2 + 31) < 0)
        {
          sub_1010DD48C(v46, *(void **)(a2 + 8), *(void *)(a2 + 16));
        }

        else
        {
          *(_OWORD *)int v46 = *(_OWORD *)(a2 + 8);
          *(void *)&v46[16] = *(void *)(a2 + 24);
        }

        uint64_t v23 = *(void *)(a2 + 32);
        *(void *)&v46[24] = v23;
        uint64_t v24 = *(void **)(a1 + 40);
        v36[0] = _NSConcreteStackBlock;
        v36[1] = 3321888768LL;
        v36[2] = sub_100EA1F88;
        v36[3] = &unk_10188A710;
        v36[4] = a1;
        uint64_t v37 = &off_10182CE18;
        if ((v46[23] & 0x80000000) != 0)
        {
          sub_1010DD48C(&v38, *(void **)v46, *(unint64_t *)&v46[8]);
          uint64_t v23 = *(void *)&v46[24];
        }

        else
        {
          __int128 v38 = *(_OWORD *)v46;
          uint64_t v39 = *(void *)&v46[16];
        }

        uint64_t v40 = v23;
        [v24 afterInterval:v36 async:8.0];
        uint64_t v37 = &off_10182CE18;
        if (SHIBYTE(v39) < 0) {
          operator delete((void *)v38);
        }
        std::string __p = &off_10182CE18;
        if ((v46[23] & 0x80000000) != 0)
        {
          uint64_t v12 = *(void **)v46;
          goto LABEL_51;
        }
      }
    }

    else
    {
      ++*((_DWORD *)v7 + 23);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188A778);
      }
      __int16 v9 = (os_log_s *)qword_101934848;
      if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_INFO))
      {
        sub_100271E94((uint64_t)(v8 + 4), &buf);
        __int128 v10 = (buf.__r_.__value_.__s.__size_ & 0x80u) == 0
            ? &buf
            : (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
        int v11 = *((_DWORD *)v8 + 23);
        std::string __p = (void *)68289539;
        *(_WORD *)int v46 = 2082;
        *(void *)&v46[2] = "";
        *(_WORD *)&v46[10] = 2081;
        *(void *)&v46[12] = v10;
        *(_WORD *)&v46[20] = 1026;
        *(_DWORD *)&v46[22] = v11;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:iB: Zone already registered, zone:%{private, location:escape_only}s, refCount:%{public}d}",  (uint8_t *)&__p,  0x22u);
        if ((char)buf.__r_.__value_.__s.__size_ < 0)
        {
          uint64_t v12 = (void *)buf.__r_.__value_.__r.__words[0];
LABEL_51:
          operator delete(v12);
        }
      }
    }
  }

  else
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188A778);
    }
    __int128 v13 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_FAULT))
    {
      LOWORD(__p) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_FAULT,  "Invalid region definition for zone monitoring",  (uint8_t *)&__p,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(&__p, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188A778);
      }
      LOWORD(buf.__r_.__value_.__l.__data_) = 0;
      LODWORD(v35) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  &__p,  1628LL,  &_mh_execute_header,  qword_101934848,  17LL,  "Invalid region definition for zone monitoring",  &buf,  v35);
      float v30 = (void **)v29;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLBTLEBeaconProviderConcrete::addProximityZone(const CLBTLEBeaconProvider_Type::ProximityZone &)",  "%s\n",  v29);
      if (v30 != &__p) {
        free(v30);
      }
    }
  }

  return v6;
}

void sub_100EA1134( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, void *__p, uint64_t a38, int a39, __int16 a40, char a41, char a42)
{
  if (a42 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

CLWPZone *sub_100EA1180(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 36);
  if ((v2 & 1) != 0)
  {
    BOOL v4 = objc_alloc(&OBJC_CLASS___NSUUID);
    else {
      uint64_t v5 = *(void *)(a1 + 8);
    }
    uint64_t v3 = -[NSUUID initWithUUIDString:]( v4,  "initWithUUIDString:",  +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v5));
    int v2 = *(_DWORD *)(a1 + 36);
  }

  else
  {
    uint64_t v3 = 0LL;
  }

  if ((v2 & 2) != 0)
  {
    uint64_t v6 = -[NSNumber initWithUnsignedShort:]( objc_alloc(&OBJC_CLASS___NSNumber),  "initWithUnsignedShort:",  *(unsigned __int16 *)(a1 + 32));
    if ((*(_DWORD *)(a1 + 36) & 4) != 0) {
      goto LABEL_9;
    }
LABEL_11:
    unint64_t v7 = 0LL;
    goto LABEL_12;
  }

  uint64_t v6 = 0LL;
  if ((v2 & 4) == 0) {
    goto LABEL_11;
  }
LABEL_9:
  unint64_t v7 = -[NSNumber initWithUnsignedShort:]( objc_alloc(&OBJC_CLASS___NSNumber),  "initWithUnsignedShort:",  *(unsigned __int16 *)(a1 + 34));
LABEL_12:
  uint64_t v8 = -[CLWPZone initWithProximityUUID:major:minor:identifier:]( objc_alloc(&OBJC_CLASS___CLWPZone),  "initWithProximityUUID:major:minor:identifier:",  v3,  v6,  v7,  +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@.%@.%@",  -[NSUUID UUIDString](v3, "UUIDString"),  v6,  v7));

  return v8;
}

void sub_100EA12B0(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  __int16 v9 = *(_DWORD **)(a1 + 32);
  __int16 v54 = &off_10182CE18;
  *(_OWORD *)int v55 = 0u;
  __int128 v56 = 0u;
  if (sub_100EA3AF0( [a2 proximityUUID],  objc_msgSend(a2, "major"),  objc_msgSend(a2, "minor"),  (uint64_t)&v54))
  {
    if (a5)
    {
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188A778);
      }
      __int128 v10 = (os_log_s *)qword_101934848;
      if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEFAULT))
      {
        id v11 = objc_msgSend(objc_msgSend(a5, "description"), "UTF8String");
        id v12 = objc_msgSend(objc_msgSend(a2, "description"), "UTF8String");
        *(_DWORD *)std::stringbuf::string_type buf = 136380931;
        *(void *)__int16 v72 = v11;
        *(_WORD *)&v72[8] = 2081;
        *(void *)&v72[10] = v12;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "#Warning An error,%{private}s, was encountered when tracking zone,%{private}s",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934840 != -1) {
          dispatch_once(&qword_101934840, &stru_10188A778);
        }
        uint64_t v40 = qword_101934848;
        id v41 = objc_msgSend(objc_msgSend(a5, "description"), "UTF8String");
        id v42 = objc_msgSend(objc_msgSend(a2, "description"), "UTF8String");
        *(_DWORD *)double v61 = 136380931;
        *(void *)&v61[4] = v41;
        *(_WORD *)&v61[12] = 2081;
        *(void *)&v61[14] = v42;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v40,  0LL,  "#Warning An error,%{private}s, was encountered when tracking zone,%{private}s",  v61,  22);
        __int16 v44 = (uint8_t *)v43;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLBTLEBeaconProviderConcrete::addProximityZone(const CLBTLEBeaconProvider_Type::ProximityZone &)_block_invoke",  "%s\n",  v43);
        if (v44 != buf) {
          free(v44);
        }
      }

      __int128 v13 = sub_100528D38((uint64_t)(v9 + 68), (uint64_t)&v54);
      __int16 v14 = v13;
      if (v9 + 70 != (_DWORD *)v13 && !*((_BYTE *)v13 + 72))
      {
        if (qword_101934840 != -1) {
          dispatch_once(&qword_101934840, &stru_10188A778);
        }
        int v15 = (os_log_s *)qword_101934848;
        if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
        {
          id v16 = objc_msgSend(objc_msgSend(a2, "description"), "UTF8String");
          *(_DWORD *)std::stringbuf::string_type buf = 136380675;
          *(void *)__int16 v72 = v16;
          _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "iB: Unable to background monitor zone,%{private}s, performing best effort detection",  buf,  0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934840 != -1) {
            dispatch_once(&qword_101934840, &stru_10188A778);
          }
          uint64_t v45 = qword_101934848;
          id v46 = objc_msgSend(objc_msgSend(a2, "description"), "UTF8String");
          *(_DWORD *)double v61 = 136380675;
          *(void *)&v61[4] = v46;
          LODWORD(v53) = 12;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v45,  2LL,  "iB: Unable to background monitor zone,%{private}s, performing best effort detection",  v61,  v53);
          __int16 v48 = (uint8_t *)v47;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLBTLEBeaconProviderConcrete::addProximityZone(const CLBTLEBeaconProvider_Type::ProximityZone &)_block_invoke",  "%s\n",  v47);
          if (v48 != buf) {
            free(v48);
          }
        }

        *((_WORD *)v14 + 36) = 1;
        ++v9[52];
        sub_100E9FC08((uint64_t)v9, 1);
      }

      goto LABEL_59;
    }

    *(void *)double v61 = v61;
    *(void *)&v61[8] = v61;
    *(void *)&v61[16] = 0LL;
    __int16 v62 = &off_10182CE18;
    __int128 v63 = 0u;
    __int128 v64 = 0u;
    double v65 = &off_10182CE18;
    __int128 __p = 0u;
    __int128 v67 = 0u;
    int v68 = 1;
    char v70 = 1;
    std::string::operator=((std::string *)&v63, (const std::string *)v55);
    *((void *)&v64 + 1) = *((void *)&v56 + 1);
    if (a3 != 1)
    {
      if (a3 == 2) {
        int v23 = 4;
      }
      else {
        int v23 = 1;
      }
      int v68 = v23;
      goto LABEL_33;
    }

    int v68 = 2;
    if (!a4) {
      goto LABEL_33;
    }
    *(void *)double v59 = &off_10182CE18;
    *(_OWORD *)&v59[8] = 0u;
    __int128 v60 = 0u;
    if (sub_100EA3AF0( [a4 proximityUUID],  objc_msgSend(a4, "major"),  objc_msgSend(a4, "minor"),  (uint64_t)v59))
    {
      std::string::operator=((std::string *)&__p, (const std::string *)&v59[8]);
      *((void *)&v67 + 1) = *((void *)&v60 + 1);
      goto LABEL_70;
    }

    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188A778);
    }
    __int128 v38 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_FAULT))
    {
      id v39 = objc_msgSend(objc_msgSend(a4, "description"), "UTF8String");
      *(_DWORD *)std::stringbuf::string_type buf = 136380675;
      *(void *)__int16 v72 = v39;
      _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_FAULT,  "Unable to convert entry beacon,%{private}s",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188A778);
      }
      uint64_t v49 = qword_101934848;
      id v50 = objc_msgSend(objc_msgSend(a4, "description"), "UTF8String");
      int v57 = 136380675;
      id v58 = v50;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v49,  17LL,  "Unable to convert entry beacon,%{private}s",  &v57,  12);
      __int16 v52 = (uint8_t *)v51;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLBTLEBeaconProviderConcrete::addProximityZone(const CLBTLEBeaconProvider_Type::ProximityZone &)_block_invoke",  "%s\n",  v51);
      if (v52 != buf) {
        free(v52);
      }
    }

    if (WORD4(v67))
    {
      sub_1012762D8(buf);
    }

    else if (WORD5(v67))
    {
      sub_101276180(buf);
    }

    else
    {
      if (!HIDWORD(v67))
      {
LABEL_70:
        *(void *)double v59 = &off_10182CE18;
        if (SBYTE7(v60) < 0) {
          operator delete(*(void **)&v59[8]);
        }
LABEL_33:
        uint64_t v24 = sub_100528D38((uint64_t)(v9 + 68), (uint64_t)&v62);
        if (v9 + 70 == (_DWORD *)v24)
        {
          if (qword_101934840 != -1) {
            dispatch_once(&qword_101934840, &stru_10188A778);
          }
          uint64_t v33 = (os_log_s *)qword_101934848;
          if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
          {
            id v34 = objc_msgSend(objc_msgSend(a2, "description"), "UTF8String");
            *(_DWORD *)std::stringbuf::string_type buf = 136380675;
            *(void *)__int16 v72 = v34;
            _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEBUG,  "iB: Could not find a match to zone tracker zone, %{private}s",  buf,  0xCu);
          }

          if (!sub_1002921D0(115, 2)) {
            goto LABEL_54;
          }
          bzero(buf, 0x65CuLL);
          if (qword_101934840 != -1) {
            dispatch_once(&qword_101934840, &stru_10188A778);
          }
          uint64_t v35 = qword_101934848;
          id v36 = objc_msgSend(objc_msgSend(a2, "description"), "UTF8String");
          *(_DWORD *)double v59 = 136380675;
          *(void *)&v59[4] = v36;
          LODWORD(v53) = 12;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v35,  2LL,  "iB: Could not find a match to zone tracker zone, %{private}s",  v59,  v53);
          uint64_t v32 = (uint8_t *)v37;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLBTLEBeaconProviderConcrete::addProximityZone(const CLBTLEBeaconProvider_Type::ProximityZone &)_block_invoke",  "%s\n",  v37);
        }

        else
        {
          if (*((_DWORD *)v24 + 22) != v68)
          {
            *((_DWORD *)v24 + 22) = v68;
            int v69 = sub_100EA1F24((uint64_t)v9);
            *(_DWORD *)std::stringbuf::string_type buf = 1;
            (*(void (**)(_DWORD *, uint8_t *, _BYTE *, void, uint64_t, void))(*(void *)v9 + 152LL))( v9,  buf,  v61,  0LL,  0xFFFFFFFFLL,  0LL);
LABEL_54:
            double v65 = &off_10182CE18;
            if (SBYTE7(v67) < 0) {
              operator delete((void *)__p);
            }
            __int16 v62 = &off_10182CE18;
            if (SBYTE7(v64) < 0) {
              operator delete((void *)v63);
            }
            sub_100527BBC((uint64_t *)v61);
            goto LABEL_59;
          }

          if (qword_101934840 != -1) {
            dispatch_once(&qword_101934840, &stru_10188A778);
          }
          uint64_t v25 = (os_log_s *)qword_101934848;
          if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
          {
            int v26 = v68;
            id v27 = objc_msgSend(objc_msgSend(a2, "description"), "UTF8String");
            *(_DWORD *)std::stringbuf::string_type buf = 67174915;
            *(_DWORD *)__int16 v72 = v26;
            *(_WORD *)&v72[4] = 2081;
            *(void *)&v72[6] = v27;
            _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEBUG,  "iB: Zone did not change state, %{private}d, %{private}s",  buf,  0x12u);
          }

          if (!sub_1002921D0(115, 2)) {
            goto LABEL_54;
          }
          bzero(buf, 0x65CuLL);
          if (qword_101934840 != -1) {
            dispatch_once(&qword_101934840, &stru_10188A778);
          }
          uint64_t v28 = qword_101934848;
          int v29 = v68;
          id v30 = objc_msgSend(objc_msgSend(a2, "description"), "UTF8String");
          *(_DWORD *)double v59 = 67174915;
          *(_DWORD *)&v59[4] = v29;
          *(_WORD *)&v59[8] = 2081;
          *(void *)&v59[10] = v30;
          LODWORD(v53) = 18;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v28,  2LL,  "iB: Zone did not change state, %{private}d, %{private}s",  v59,  v53);
          uint64_t v32 = (uint8_t *)v31;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLBTLEBeaconProviderConcrete::addProximityZone(const CLBTLEBeaconProvider_Type::ProximityZone &)_block_invoke",  "%s\n",  v31);
        }

        if (v32 != buf) {
          free(v32);
        }
        goto LABEL_54;
      }

      sub_101276028(buf);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/BTLEBeaconProvider/CLBTLEBeaconProviderConcrete.mm",  *(_DWORD *)buf,  "addProximityZone_block_invoke");
    __break(1u);
  }

  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10188A778);
  }
  uint64_t v17 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_FAULT))
  {
    id v18 = objc_msgSend(objc_msgSend(a2, "description"), "UTF8String");
    *(_DWORD *)std::stringbuf::string_type buf = 136380675;
    *(void *)__int16 v72 = v18;
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_FAULT, "Unable to convert zone,%{private}s", buf, 0xCu);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188A778);
    }
    uint64_t v19 = qword_101934848;
    id v20 = objc_msgSend(objc_msgSend(a2, "description"), "UTF8String");
    *(_DWORD *)double v61 = 136380675;
    *(void *)&v61[4] = v20;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v19,  17LL,  "Unable to convert zone,%{private}s",  v61,  12);
    uint64_t v22 = (uint8_t *)v21;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLBTLEBeaconProviderConcrete::addProximityZone(const CLBTLEBeaconProvider_Type::ProximityZone &)_block_invoke",  "%s\n",  v21);
    if (v22 != buf) {
      free(v22);
    }
  }

void sub_100EA1E74( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, void *__p, uint64_t a24, int a25, __int16 a26, char a27, char a28, uint64_t a29, uint64_t a30, char a31)
{
  if (a28 < 0) {
    operator delete(__p);
  }
  sub_100523424((uint64_t)&a31);
  if (a18 < 0) {
    operator delete(a13);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100EA1F24(uint64_t a1)
{
  v1 = *(void **)(a1 + 272);
  int v2 = (void *)(a1 + 280);
  if (v1 == (void *)(a1 + 280)) {
    return 0LL;
  }
  LODWORD(result) = 0;
  do
  {
    BOOL v4 = (void *)v1[1];
    uint64_t v5 = v1;
    if (v4)
    {
      do
      {
        uint64_t v6 = v4;
        BOOL v4 = (void *)*v4;
      }

      while (v4);
    }

    else
    {
      do
      {
        uint64_t v6 = (void *)v5[2];
        BOOL v7 = *v6 == (void)v5;
        uint64_t v5 = v6;
      }

      while (!v7);
    }

    uint64_t result = result + *((unsigned __int8 *)v1 + 73);
    v1 = v6;
  }

  while (v6 != v2);
  return result;
}

void sub_100EA1F88(const std::string *a1)
{
  uint64_t size = a1[1].__r_.__value_.__l.__size_;
  uint64_t p_cap = (uint64_t)&a1[1].__r_.__value_.__l.__cap_;
  BOOL v4 = sub_100528D38(size + 272, (uint64_t)&a1[1].__r_.__value_.__l.__cap_);
  if ((void *)(size + 280) == v4)
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188A778);
    }
    uint64_t v8 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_INFO))
    {
      sub_100271E94(p_cap, &__p);
      if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        p_p = &__p;
      }
      else {
        p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)std::stringbuf::string_type buf = 68289283;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)__int16 v14 = 2082;
      *(void *)&v14[2] = "";
      *(_WORD *)&v14[10] = 2081;
      *(void *)&v14[12] = p_p;
      __int128 v10 = "{msg%{public}.0s:iB: Zone removed before the region entry timeout expired, zone:%{private, locat"
            "ion:escape_only}s}";
LABEL_30:
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, v10, buf, 0x1Cu);
    }
  }

  else
  {
    uint64_t v5 = v4;
    if (*((_DWORD *)v4 + 22) == 1)
    {
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188A778);
      }
      uint64_t v6 = (os_log_s *)qword_101934848;
      if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_INFO))
      {
        sub_100271E94((uint64_t)&a1[1].__r_.__value_.__l.__cap_, &__p);
        BOOL v7 = (__p.__r_.__value_.__s.__size_ & 0x80u) == 0
           ? &__p
           : (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
        *(_DWORD *)std::stringbuf::string_type buf = 68289283;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)__int16 v14 = 2082;
        *(void *)&v14[2] = "";
        *(_WORD *)&v14[10] = 2081;
        *(void *)&v14[12] = v7;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:iB: Zone was not seen and will be marked as exited, zone:%{private, location:escape_only}s}",  buf,  0x1Cu);
      }

      *((_DWORD *)v5 + 22) = 4;
      *(void *)std::stringbuf::string_type buf = buf;
      *(void *)__int16 v14 = buf;
      *(void *)&v14[8] = 0LL;
      *(void *)&v14[16] = &off_10182CE18;
      *(_OWORD *)int v15 = 0u;
      __int128 v16 = 0u;
      uint64_t v17 = &off_10182CE18;
      *(_OWORD *)id v18 = 0u;
      __int128 v19 = 0u;
      int v20 = 1;
      char v22 = 1;
      std::string::operator=((std::string *)v15, a1 + 2);
      *((void *)&v16 + 1) = a1[3].__r_.__value_.__l.__data_;
      int v20 = 4;
      int v21 = sub_100EA1F24(size);
      LODWORD(__p.__r_.__value_.__l.__data_) = 1;
      (*(void (**)(uint64_t, std::stringbuf::string_type *, uint8_t *, void, uint64_t, void))(*(void *)size + 152LL))( size,  &__p,  buf,  0LL,  0xFFFFFFFFLL,  0LL);
      uint64_t v17 = &off_10182CE18;
      if (SBYTE7(v19) < 0) {
        operator delete(v18[0]);
      }
      *(void *)&v14[16] = &off_10182CE18;
      if (SBYTE7(v16) < 0) {
        operator delete(v15[0]);
      }
      sub_100527BBC((uint64_t *)buf);
      return;
    }

    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188A778);
    }
    uint64_t v8 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_INFO))
    {
      sub_100271E94(p_cap, &__p);
      if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        id v11 = &__p;
      }
      else {
        id v11 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)std::stringbuf::string_type buf = 68289283;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)__int16 v14 = 2082;
      *(void *)&v14[2] = "";
      *(_WORD *)&v14[10] = 2081;
      *(void *)&v14[12] = v11;
      __int128 v10 = "{msg%{public}.0s:iB: State for zone was already determined, zone:%{private, location:escape_only}s}";
      goto LABEL_30;
    }
  }

void sub_100EA230C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
}

void *sub_100EA232C(void *a1, uint64_t a2)
{
  a1[5] = &off_10182CE18;
  uint64_t result = a1 + 6;
  if (*(char *)(a2 + 71) < 0)
  {
    uint64_t result = sub_1010DD48C(result, *(void **)(a2 + 48), *(void *)(a2 + 56));
  }

  else
  {
    __int128 v5 = *(_OWORD *)(a2 + 48);
    result[2] = *(void *)(a2 + 64);
    *(_OWORD *)uint64_t result = v5;
  }

  a1[9] = *(void *)(a2 + 72);
  return result;
}

void sub_100EA2390(uint64_t a1)
{
  *(void *)(a1 + 40) = &off_10182CE18;
}

BOOL sub_100EA23B4(uint64_t a1, uint64_t a2)
{
  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10188A778);
  }
  BOOL v4 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
  {
    sub_100271E94(a2, (std::stringbuf::string_type *)&__p);
    __int128 v5 = SBYTE3(v40) >= 0 ? &__p : (void **)__p;
    LODWORD(buf.__r_.__value_.__l.__data_) = 136380675;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "iB: Removing zone,%{private}s",  (uint8_t *)&buf,  0xCu);
    if (SBYTE3(v40) < 0) {
      operator delete(__p);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&__p, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188A778);
    }
    uint64_t v28 = qword_101934848;
    sub_100271E94(a2, &buf);
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_std::stringbuf::string_type buf = &buf;
    }
    else {
      p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    int v34 = 136380675;
    uint64_t v35 = p_buf;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &__p,  1628LL,  &_mh_execute_header,  v28,  2LL,  "iB: Removing zone,%{private}s",  &v34,  12);
    uint64_t v31 = v30;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLBTLEBeaconProviderConcrete::removeProximityZone(const CLBTLEBeaconProvider_Type::ProximityZone &)",  "%s\n",  v31);
  }

  uint64_t v6 = sub_100528D38(a1 + 272, a2);
  uint64_t v7 = (uint64_t)v6;
  uint64_t v8 = a1 + 280;
  if ((void *)(a1 + 280) == v6)
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188A778);
    }
    uint64_t v17 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEFAULT))
    {
      sub_100271E94(a2, (std::stringbuf::string_type *)&__p);
      id v18 = SBYTE3(v40) >= 0 ? &__p : (void **)__p;
      LODWORD(buf.__r_.__value_.__l.__data_) = 136380675;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v18;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "#Warning Unable to remove zone,%{private}s, it wasn't found.",  (uint8_t *)&buf,  0xCu);
      if (SBYTE3(v40) < 0) {
        operator delete(__p);
      }
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(&__p, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188A778);
      }
      uint64_t v19 = qword_101934848;
      sub_100271E94(a2, &buf);
      if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        int v20 = &buf;
      }
      else {
        int v20 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
      }
      int v34 = 136380675;
      uint64_t v35 = v20;
      LODWORD(v32) = 12;
      _os_log_send_and_compose_impl( 2LL,  0LL,  &__p,  1628LL,  &_mh_execute_header,  v19,  0LL,  "#Warning Unable to remove zone,%{private}s, it wasn't found.",  &v34,  v32);
      char v22 = v21;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLBTLEBeaconProviderConcrete::removeProximityZone(const CLBTLEBeaconProvider_Type::ProximityZone &)",  "%s\n",  v22);
    }
  }

  else
  {
    int v9 = *((_DWORD *)v6 + 23);
    BOOL v10 = v9 != 0;
    int v11 = v9 - 1;
    if (v11 == 0 || !v10)
    {
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188A778);
      }
      id v12 = (os_log_s *)qword_101934848;
      if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_INFO))
      {
        sub_100271E94(a2, &buf);
        __int128 v13 = (buf.__r_.__value_.__s.__size_ & 0x80u) == 0
            ? &buf
            : (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
        std::stringbuf::string_type __p = (void *)68289283;
        __int16 v37 = 2082;
        __int128 v38 = "";
        __int16 v39 = 2081;
        uint64_t v40 = v13;
        _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:iB: Unregistering zone with Bluetooth, last client, zone:%{private, location:escape_only}s}",  (uint8_t *)&__p,  0x1Cu);
      }

      if (*(_BYTE *)(v7 + 72))
      {
        int v14 = *(_DWORD *)(a1 + 208);
        BOOL v15 = __OFSUB__(v14--, 1);
        *(_DWORD *)(a1 + 208) = v14;
        if ((v14 < 0) ^ v15 | (v14 == 0))
        {
          *(void *)(a1 + 232) = 0LL;
          sub_1006B6294(*(void *)(a1 + 152));
        }

        BOOL v16 = *(_BYTE *)(v7 + 73) == 0;
        sub_100E8755C((uint64_t **)(a1 + 272), v7);
        if (v16) {
          return v8 != v7;
        }
      }

      else
      {
        sub_100E8755C((uint64_t **)(a1 + 272), v7);
      }

      int v26 = sub_100EA1180(a2);
      [*(id *)(a1 + 120) stopTrackingZone:v26];

      return v8 != v7;
    }

    *((_DWORD *)v6 + 23) = v11;
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188A778);
    }
    int v23 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_INFO))
    {
      sub_100271E94(a2, &buf);
      uint64_t v24 = (buf.__r_.__value_.__s.__size_ & 0x80u) == 0
          ? &buf
          : (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
      int v25 = *(_DWORD *)(v7 + 92);
      std::stringbuf::string_type __p = (void *)68289539;
      __int16 v37 = 2082;
      __int128 v38 = "";
      __int16 v39 = 2081;
      uint64_t v40 = v24;
      __int16 v41 = 1026;
      int v42 = v25;
      _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:iB: Decremented zone reference count, still clients, zone:%{private, location:escap e_only}s, refCount:%{public}d}",  (uint8_t *)&__p,  0x22u);
    }
  }

  return v8 != v7;
}

id sub_100EA29A4(uint64_t a1)
{
  *(void *)(a1 + 280) = 0LL;
  *(void *)(a1 + 288) = 0LL;
  *(void *)(a1 + 272) = a1 + 280;
  *(void *)(a1 + 232) = 0LL;
  id result = sub_1006B6294(*(void *)(a1 + 152));
  *(_DWORD *)(a1 + 208) = 0;
  return result;
}

id sub_100EA29F0(void *a1, double a2)
{
  BOOL v4 = (void *)a1[5];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_100EA2A6C;
  v6[3] = &unk_10181D3D0;
  v6[4] = a1;
  return [v4 afterInterval:v6 async:a2];
}

uint64_t sub_100EA2A6C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 32) + 248LL))(*(void *)(a1 + 32));
}

void sub_100EA2A80(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 132);
  if (v2 <= 0)
  {
    *(_DWORD *)(a1 + 132) = 1;
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188A778);
    }
    id v12 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
    {
      int v13 = *(_DWORD *)(a1 + 132);
      uint64_t v15 = *(void *)(a1 + 232);
      uint64_t v14 = *(void *)(a1 + 240);
      *(_DWORD *)std::stringbuf::string_type buf = 67240705;
      int v35 = v13;
      __int16 v36 = 2049;
      uint64_t v37 = v14;
      __int16 v38 = 2049;
      uint64_t v39 = v15;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "iB: Resuming scan, reference count,%{public}d,lastScan,%{private}.0lf,lastScheduled,%{private}.0lf",  buf,  0x1Cu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188A778);
      }
      int v21 = *(_DWORD *)(a1 + 132);
      uint64_t v23 = *(void *)(a1 + 232);
      uint64_t v22 = *(void *)(a1 + 240);
      int v28 = 67240705;
      int v29 = v21;
      __int16 v30 = 2049;
      uint64_t v31 = v22;
      __int16 v32 = 2049;
      uint64_t v33 = v23;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "iB: Resuming scan, reference count,%{public}d,lastScan,%{private}.0lf,lastScheduled,%{private}.0lf",  &v28,  28);
      int v25 = (uint8_t *)v24;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLBTLEBeaconProviderConcrete::unlockedStartScan()", "%s\n", v24);
      if (v25 != buf) {
        free(v25);
      }
    }

    sub_1004F2598();
    else {
      uint64_t v16 = 1LL;
    }
    uint64_t v17 = *(void **)(a1 + 120);
    v27[0] = _NSConcreteStackBlock;
    v27[1] = 3221225472LL;
    v27[2] = sub_100EA35BC;
    v27[3] = &unk_10188A740;
    v27[4] = a1;
    [v17 startScanForBeaconTypes:v16 updateHandler:v27];
    id v18 = *(dispatch_source_s **)(a1 + 136);
    handler[0] = _NSConcreteStackBlock;
    handler[1] = 3221225472LL;
    handler[2] = sub_100EA3BE8;
    handler[3] = &unk_10181D3D0;
    handler[4] = a1;
    dispatch_source_set_event_handler(v18, handler);
    uint64_t v19 = *(dispatch_source_s **)(a1 + 136);
    dispatch_time_t v20 = dispatch_time(0LL, 1000000000LL);
    dispatch_source_set_timer(v19, v20, 0x3B9ACA00uLL, 0LL);
    dispatch_resume(*(dispatch_object_t *)(a1 + 136));
  }

  else
  {
    *(_DWORD *)(a1 + 132) = v2 + 1;
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188A778);
    }
    uint64_t v3 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
    {
      int v4 = *(_DWORD *)(a1 + 132);
      uint64_t v6 = *(void *)(a1 + 232);
      uint64_t v5 = *(void *)(a1 + 240);
      *(_DWORD *)std::stringbuf::string_type buf = 67240705;
      int v35 = v4;
      __int16 v36 = 2049;
      uint64_t v37 = v5;
      __int16 v38 = 2049;
      uint64_t v39 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "iB: Scan is already resumed, reference count,%{public}d,lastScan,%{private}.0lf,lastScheduled,%{private}.0lf",  buf,  0x1Cu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188A778);
      }
      int v7 = *(_DWORD *)(a1 + 132);
      uint64_t v9 = *(void *)(a1 + 232);
      uint64_t v8 = *(void *)(a1 + 240);
      int v28 = 67240705;
      int v29 = v7;
      __int16 v30 = 2049;
      uint64_t v31 = v8;
      __int16 v32 = 2049;
      uint64_t v33 = v9;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "iB: Scan is already resumed, reference count,%{public}d,lastScan,%{private}.0lf,lastScheduled,%{private}.0lf",  &v28,  28);
      int v11 = (uint8_t *)v10;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLBTLEBeaconProviderConcrete::unlockedStartScan()", "%s\n", v10);
      if (v11 != buf) {
        free(v11);
      }
    }
  }

void sub_100EA2EBC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 132);
  uint64_t v3 = qword_101934840;
  BOOL v4 = __OFSUB__(v2--, 1);
  *(_DWORD *)(a1 + 132) = v2;
  if ((v2 < 0) ^ v4 | (v2 == 0))
  {
    if (v3 != -1) {
      dispatch_once(&qword_101934840, &stru_10188A778);
    }
    uint64_t v5 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
    {
      int v6 = *(_DWORD *)(a1 + 132);
      *(_DWORD *)std::stringbuf::string_type buf = 67240192;
      int v18 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "iB: Suspending scan, reference count,%{public}d",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188A778);
      }
      int v9 = *(_DWORD *)(a1 + 132);
      int v15 = 67240192;
      int v16 = v9;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "iB: Suspending scan, reference count,%{public}d",  &v15,  8);
      int v11 = (uint8_t *)v10;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLBTLEBeaconProviderConcrete::unlockedStopScan()", "%s\n", v10);
      if (v11 != buf) {
        free(v11);
      }
    }

    sub_100EA3C10(a1);
    sub_100EA43F4(a1);
    sub_100EA467C(a1);
    dispatch_suspend(*(dispatch_object_t *)(a1 + 136));
    [*(id *)(a1 + 120) stopScan];
  }

  else
  {
    if (v3 != -1) {
      dispatch_once(&qword_101934840, &stru_10188A778);
    }
    int v7 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
    {
      int v8 = *(_DWORD *)(a1 + 132);
      *(_DWORD *)std::stringbuf::string_type buf = 67240192;
      int v18 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "iB: Scan is already suspended, reference count,%{public}d",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188A778);
      }
      int v12 = *(_DWORD *)(a1 + 132);
      int v15 = 67240192;
      int v16 = v12;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "iB: Scan is already suspended, reference count,%{public}d",  &v15,  8);
      uint64_t v14 = (uint8_t *)v13;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLBTLEBeaconProviderConcrete::unlockedStopScan()", "%s\n", v13);
      if (v14 != buf) {
        free(v14);
      }
    }
  }

void sub_100EA31F0(uint64_t a1)
{
  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10188A778);
  }
  int v2 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "iB: Zone detection timer woke up", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188A778);
    }
    v5[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "iB: Zone detection timer woke up",  v5,  2);
    BOOL v4 = (uint8_t *)v3;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLBTLEBeaconProviderConcrete::onZoneDetectionTimer(CLPersistentTimer *)",  "%s\n",  v3);
    if (v4 != buf) {
      free(v4);
    }
  }

  sub_100E9FC08(a1, 3);
}

void sub_100EA338C(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  if (*a3 == 3)
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188A778);
    }
    BOOL v4 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "iB: Received a wake event", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188A778);
      }
      v7[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "iB: Received a wake event",  v7,  2);
      int v6 = (uint8_t *)v5;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLBTLEBeaconProviderConcrete::onDaemonStatusNotification(int, const CLDaemonStatus_Type::Notification &, co nst CLDaemonStatus_Type::NotificationData &)",  "%s\n",  v5);
      if (v6 != buf) {
        free(v6);
      }
    }

    sub_100E9FC08(a1, 2);
  }

void *sub_100EA3534@<X0>(_DWORD *a1@<X1>, void *a2@<X8>)
{
  return sub_1010DDBC0(a2, __str);
}

uint64_t sub_100EA35AC()
{
  return 1LL;
}

uint64_t sub_100EA35B4()
{
  return 1LL;
}

void sub_100EA35BC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void *)(a1 + 32);
  unsigned __int8 v6 = objc_msgSend(objc_msgSend(a2, "objectForKey:", @"typeMask"), "integerValue");
  if (a3)
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188A778);
    }
    int v7 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 136446210;
      id v27 = (std::string *)objc_msgSend(objc_msgSend(a3, "description"), "UTF8String");
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "An error,%{public}s, was received for a scan",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188A778);
      }
      uint64_t v13 = qword_101934848;
      LODWORD(v21.__r_.__value_.__l.__data_) = 136446210;
      *(std::string::size_type *)((char *)v21.__r_.__value_.__r.__words + 4) = (std::string::size_type)objc_msgSend(objc_msgSend(a3, "description"), "UTF8String");
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v13,  17LL,  "An error,%{public}s, was received for a scan",  &v21,  12);
      int v15 = (uint8_t *)v14;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLBTLEBeaconProviderConcrete::unlockedStartScan()_block_invoke",  "%s\n",  v14);
      if (v15 != buf) {
        free(v15);
      }
    }
  }

  else if ((v6 & 3) != 0)
  {
    memset(&v21, 0, sizeof(v21));
    int v22 = 0;
    uint64_t v23 = &off_10182CE18;
    *(_OWORD *)std::stringbuf::string_type __p = 0u;
    memset(v25, 0, 26);
    if ([a2 objectForKey:@"beaconID"]) {
      std::string::assign( &v21,  (const std::string::value_type *)objc_msgSend( objc_msgSend( objc_msgSend(a2, "objectForKey:", @"beaconID"),  "UUIDString"),  "UTF8String"));
    }
    if (sub_100EA3AF0( [a2 objectForKey:@"proximityUUID"],  objc_msgSend(a2, "objectForKey:", @"major"),  objc_msgSend(a2, "objectForKey:", @"minor"),  (uint64_t)&v23))
    {
      LOWORD(v22) = (unsigned __int16)objc_msgSend(objc_msgSend(a2, "objectForKey:", @"rssi"), "shortValue");
      HIWORD(v22) = (unsigned __int16)objc_msgSend(objc_msgSend(a2, "objectForKey:", @"tx"), "shortValue");
      if ([a2 objectForKey:@"discovered"])
      {
        objc_msgSend(objc_msgSend(a2, "objectForKey:", @"discovered"), "timeIntervalSinceReferenceDate");
        *(void *)&v25[1] = v8;
      }

      WORD4(v25[1]) = (unsigned __int16)objc_msgSend(objc_msgSend(a2, "objectForKey:", @"channel"), "shortValue");
      int v9 = sub_100E871F4((int)v5 + 248, 0LL, 0LL, (__int128 *)&v21);
      v9[1] = v5 + 248;
      uint64_t v10 = *(void *)(v5 + 248);
      void *v9 = v10;
      *(void *)(v10 + 8) = v9;
      *(void *)(v5 + 248) = v9;
      ++*(void *)(v5 + 264);
    }

    else
    {
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188A778);
      }
      int v11 = (os_log_s *)qword_101934848;
      if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_FAULT))
      {
        int v12 = &v21;
        if ((v21.__r_.__value_.__s.__size_ & 0x80u) != 0) {
          int v12 = (std::string *)v21.__r_.__value_.__r.__words[0];
        }
        *(_DWORD *)std::stringbuf::string_type buf = 136380675;
        id v27 = v12;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_FAULT,  "Unable to convert advertisement region from bridge to native for device,%{private}s",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934840 != -1) {
          dispatch_once(&qword_101934840, &stru_10188A778);
        }
        int v16 = &v21;
        if ((v21.__r_.__value_.__s.__size_ & 0x80u) != 0) {
          int v16 = (std::string *)v21.__r_.__value_.__r.__words[0];
        }
        int v19 = 136380675;
        dispatch_time_t v20 = v16;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  17LL,  "Unable to convert advertisement region from bridge to native for device,%{private}s",  &v19,  12);
        int v18 = (uint8_t *)v17;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLBTLEBeaconProviderConcrete::unlockedStartScan()_block_invoke",  "%s\n",  v17);
        if (v18 != buf) {
          free(v18);
        }
      }
    }

    uint64_t v23 = &off_10182CE18;
    if (SBYTE7(v25[0]) < 0) {
      operator delete(__p[0]);
    }
  }

void sub_100EA3AD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
}

uint64_t sub_100EA3AF0(void *a1, void *a2, void *a3, uint64_t a4)
{
  *(_DWORD *)(a4 + 36) = 0;
  uint64_t v7 = a1 != 0LL;
  if (a1)
  {
    *(_DWORD *)(a4 + 36) = 1;
    std::string::assign( (std::string *)(a4 + 8),  (const std::string::value_type *)objc_msgSend(objc_msgSend(a1, "UUIDString"), "UTF8String"));
  }

  if (a2)
  {
    *(_DWORD *)(a4 + 36) |= 2u;
    *(_WORD *)(a4 + 32) = (unsigned __int16)[a2 unsignedShortValue];
    if (!a3) {
      return v7;
    }
  }

  else
  {
    uint64_t v7 = 1LL;
    if (!a3) {
      return v7;
    }
  }

  if (a2) {
    uint64_t v7 = v7;
  }
  else {
    uint64_t v7 = 0LL;
  }
  *(_DWORD *)(a4 + 36) |= 4u;
  *(_WORD *)(a4 + 34) = (unsigned __int16)[a3 unsignedShortValue];
  return v7;
}

uint64_t sub_100EA3B98(uint64_t a1)
{
  *(void *)(a1 + 32) = &off_10182CE18;
  return a1;
}

void sub_100EA3BE8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  sub_100EA3C10(v1);
  sub_100EA43F4(v1);
}

void sub_100EA3C10(uint64_t a1)
{
  double v2 = sub_101171D38();
  if (*(int *)(a1 + 208) >= 1)
  {
    uint64_t v3 = *(void **)(a1 + 272);
    if (v3 != (void *)(a1 + 280))
    {
      double v4 = v2;
      do
      {
        if (*((_BYTE *)v3 + 72))
        {
          __int128 v30 = 0u;
          __int128 v31 = 0u;
          for (uint64_t i = *(void *)(a1 + 256); i != a1 + 248; uint64_t i = *(void *)(i + 8))
          {
            if (sub_10091D194((uint64_t)(v3 + 4), i + 48))
            {
              std::string::operator=((std::string *)&v30, (const std::string *)(i + 56));
              *((void *)&v31 + 1) = *(void *)(i + 80);
              unsigned __int8 v6 = (int *)(v3 + 11);
              if (*((_DWORD *)v3 + 22) == 2)
              {
LABEL_29:
                if (*((_BYTE *)v3 + 74))
                {
                  *((_BYTE *)v3 + 74) = 0;
                  v3[10] = 0LL;
                }

                goto LABEL_56;
              }

              int v15 = 2;
              if (!*((_BYTE *)v3 + 74)) {
                goto LABEL_44;
              }
              goto LABEL_43;
            }
          }

          unsigned __int8 v6 = (int *)(v3 + 11);
          if (*((_DWORD *)v3 + 22) == 4) {
            goto LABEL_29;
          }
          if (*((_BYTE *)v3 + 74))
          {
            if (v4 - *((double *)v3 + 10) >= 5.0)
            {
              int v15 = 4;
LABEL_43:
              *((_BYTE *)v3 + 74) = 0;
              v3[10] = 0LL;
LABEL_44:
              int *v6 = v15;
              if (qword_101934840 != -1) {
                dispatch_once(&qword_101934840, &stru_10188A778);
              }
              int v18 = (os_log_s *)qword_101934848;
              if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEFAULT))
              {
                sub_100271E94((uint64_t)(v3 + 4), &__p);
                p_p = &__p;
                if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
                  p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
                }
                int v20 = *v6;
                uint64_t v21 = *(void *)(a1 + 288);
                *(_DWORD *)std::stringbuf::string_type buf = 68289795;
                *(_DWORD *)&uint8_t buf[4] = 0;
                *(_WORD *)&uint8_t buf[8] = 2082;
                *(void *)&buf[10] = "";
                *(_WORD *)&buf[18] = 2081;
                *(void *)&buf[20] = p_p;
                *(_WORD *)&buf[28] = 1025;
                *(_DWORD *)&buf[30] = v20;
                *(_WORD *)&buf[34] = 2050;
                *(void *)&buf[36] = v21;
                _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:@iB: BE zone state transition, zone:%{private, location:escape_only}s,  state:%{private}d, totalZones:%{public}lu}",  buf,  0x2Cu);
              }

              *(void *)std::stringbuf::string_type buf = buf;
              *(void *)&uint8_t buf[8] = buf;
              *(void *)&buf[16] = 0LL;
              *(void *)&_BYTE buf[24] = &off_10182CE18;
              *(_OWORD *)&buf[32] = 0u;
              __int128 v38 = 0u;
              uint64_t v39 = &off_10182CE18;
              __int128 v40 = 0u;
              __int128 v41 = 0u;
              int v42 = 1;
              char v44 = 1;
              std::string::operator=((std::string *)&buf[32], (const std::string *)(v3 + 5));
              *((void *)&v38 + 1) = v3[8];
              std::string::operator=((std::string *)&v40, (const std::string *)&v30);
              *((void *)&v41 + 1) = *((void *)&v31 + 1);
              int v42 = *v6;
              int v43 = sub_100EA1F24(a1);
              LODWORD(__p.__r_.__value_.__l.__data_) = 1;
              (*(void (**)(uint64_t, std::stringbuf::string_type *, _BYTE *, void, uint64_t, void))(*(void *)a1 + 152LL))( a1,  &__p,  buf,  0LL,  0xFFFFFFFFLL,  0LL);
              uint64_t v39 = &off_10182CE18;
              if (SBYTE7(v41) < 0) {
                operator delete((void *)v40);
              }
              *(void *)&_BYTE buf[24] = &off_10182CE18;
              if (SBYTE7(v38) < 0) {
                operator delete(*(void **)&buf[32]);
              }
              sub_100527BBC((uint64_t *)buf);
              goto LABEL_56;
            }

            if (qword_101934840 != -1) {
              dispatch_once(&qword_101934840, &stru_10188A778);
            }
            uint64_t v7 = (os_log_s *)qword_101934848;
            if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
            {
              sub_100271E94((uint64_t)(v3 + 4), &__p);
              uint64_t v8 = &__p;
              if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
                uint64_t v8 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
              }
              uint64_t v9 = v3[10];
              *(_DWORD *)std::stringbuf::string_type buf = 136381443;
              *(void *)&uint8_t buf[4] = v8;
              *(_WORD *)&buf[12] = 2049;
              *(void *)&buf[14] = v9;
              *(_WORD *)&buf[22] = 2049;
              *(double *)&_BYTE buf[24] = v4;
              *(_WORD *)&buf[32] = 2049;
              *(void *)&buf[34] = 0x4014000000000000LL;
              _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "iB: Best effort zone,%{private}s, firstExit,%{private}f, now,%{private}f, has not reached exitThreshold,%{private}f",  buf,  0x2Au);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_101934840 != -1) {
                dispatch_once(&qword_101934840, &stru_10188A778);
              }
              uint64_t v10 = qword_101934848;
              sub_100271E94((uint64_t)(v3 + 4), &v32);
              int v11 = &v32;
              if ((v32.__r_.__value_.__s.__size_ & 0x80u) != 0) {
                int v11 = (std::stringbuf::string_type *)v32.__r_.__value_.__r.__words[0];
              }
              std::string::size_type v12 = v3[10];
              LODWORD(__p.__r_.__value_.__l.__data_) = 136381443;
              *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + 4) = (std::string::size_type)v11;
              WORD2(__p.__r_.__value_.__r.__words[1]) = 2049;
              *(std::string::size_type *)((char *)&__p.__r_.__value_.__r.__words[1] + 6) = v12;
              HIWORD(__p.__r_.__value_.__r.__words[2]) = 2049;
              double v34 = v4;
              __int16 v35 = 2049;
              uint64_t v36 = 0x4014000000000000LL;
              LODWORD(v29) = 42;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v10,  2LL,  "iB: Best effort zone,%{private}s, firstExit,%{private}f, now,%{private}f, has not reached exitThreshold,%{private}f",  &__p,  v29);
              uint64_t v14 = v13;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLBTLEBeaconProviderConcrete::unlockedPerformZoneDetectionWithCache()",  "%s\n",  v14);
              if (v14 != buf) {
                free(v14);
              }
            }
          }

          else
          {
            if (qword_101934840 != -1) {
              dispatch_once(&qword_101934840, &stru_10188A778);
            }
            int v16 = (os_log_s *)qword_101934848;
            if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
            {
              sub_100271E94((uint64_t)(v3 + 4), (std::stringbuf::string_type *)buf);
              uint64_t v17 = buf;
              if (buf[23] < 0) {
                uint64_t v17 = *(_BYTE **)buf;
              }
              LODWORD(__p.__r_.__value_.__l.__data_) = 136380675;
              *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + 4) = (std::string::size_type)v17;
              _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEBUG,  "iB: Best effort zone,%{private}s, subject to exit",  (uint8_t *)&__p,  0xCu);
              if ((buf[23] & 0x80000000) != 0) {
                operator delete(*(void **)buf);
              }
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_101934840 != -1) {
                dispatch_once(&qword_101934840, &stru_10188A778);
              }
              uint64_t v25 = qword_101934848;
              sub_100271E94((uint64_t)(v3 + 4), &__p);
              int v26 = &__p;
              if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
                int v26 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
              }
              LODWORD(v32.__r_.__value_.__l.__data_) = 136380675;
              *(std::string::size_type *)((char *)v32.__r_.__value_.__r.__words + 4) = (std::string::size_type)v26;
              LODWORD(v29) = 12;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v25,  2LL,  "iB: Best effort zone,%{private}s, subject to exit",  &v32,  v29);
              int v28 = v27;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLBTLEBeaconProviderConcrete::unlockedPerformZoneDetectionWithCache()",  "%s\n",  v28);
              if (v28 != buf) {
                free(v28);
              }
            }

            *((_BYTE *)v3 + 74) = 1;
            *((double *)v3 + 10) = v4;
          }

void sub_100EA4390( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, void *__p, uint64_t a22, int a23, __int16 a24, char a25, char a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, char a38)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100EA43F4(uint64_t a1)
{
  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10188A778);
  }
  double v2 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v3 = *(void *)(a1 + 264);
    LODWORD(buf) = 134349056;
    *(void *)((char *)&buf + 4) = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "iB: Posting notification with proximity devices,%{public}lu",  (uint8_t *)&buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188A778);
    }
    uint64_t v4 = *(void *)(a1 + 264);
    int v7 = 134349056;
    uint64_t v8 = v4;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "iB: Posting notification with proximity devices,%{public}lu",  &v7,  12);
    unsigned __int8 v6 = (char *)v5;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLBTLEBeaconProviderConcrete::unlockedPostAndClearScanCache()",  "%s\n",  v5);
  }

  *(void *)&__int128 buf = &buf;
  *((void *)&buf + 1) = &buf;
  uint64_t v10 = 0LL;
  int v11 = &off_10182CE18;
  *(_OWORD *)std::string::size_type v12 = 0u;
  __int128 v13 = 0u;
  uint64_t v14 = &off_10182CE18;
  *(_OWORD *)std::stringbuf::string_type __p = 0u;
  __int128 v16 = 0u;
  int v17 = 1;
  char v18 = 1;
  int v7 = 0;
  (*(void (**)(uint64_t, int *, __int128 *, void, uint64_t, void))(*(void *)a1 + 152LL))( a1,  &v7,  &buf,  0LL,  0xFFFFFFFFLL,  0LL);
  sub_100527BBC((uint64_t *)(a1 + 248));
  uint64_t v14 = &off_10182CE18;
  if (SBYTE7(v16) < 0) {
    operator delete(__p[0]);
  }
  int v11 = &off_10182CE18;
  if (SBYTE7(v13) < 0) {
    operator delete(v12[0]);
  }
  sub_100527BBC((uint64_t *)&buf);
}

void sub_100EA465C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
}

void sub_100EA467C(uint64_t a1)
{
  if (*(int *)(a1 + 208) >= 1)
  {
    uint64_t v1 = *(void **)(a1 + 272);
    double v2 = (void *)(a1 + 280);
    if (v1 != (void *)(a1 + 280))
    {
      do
      {
        if (*((_BYTE *)v1 + 72) && *((_BYTE *)v1 + 74))
        {
          if (qword_101934840 != -1) {
            dispatch_once(&qword_101934840, &stru_10188A778);
          }
          uint64_t v3 = (os_log_s *)qword_101934848;
          if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_INFO))
          {
            sub_100271E94((uint64_t)(v1 + 4), &__p);
            p_p = &__p;
            if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
              p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
            }
            *(_DWORD *)__int128 buf = 68289283;
            int v10 = 0;
            __int16 v11 = 2082;
            std::string::size_type v12 = "";
            __int16 v13 = 2081;
            uint64_t v14 = p_p;
            _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:iB: Resetting best effort zone exit state, zone:%{private, location:escape_only}s}",  buf,  0x1Cu);
          }

          *((_BYTE *)v1 + 74) = 0;
          v1[10] = 0LL;
        }

        uint64_t v5 = (void *)v1[1];
        if (v5)
        {
          do
          {
            unsigned __int8 v6 = v5;
            uint64_t v5 = (void *)*v5;
          }

          while (v5);
        }

        else
        {
          do
          {
            unsigned __int8 v6 = (void *)v1[2];
            BOOL v7 = *v6 == (void)v1;
            uint64_t v1 = v6;
          }

          while (!v7);
        }

        uint64_t v1 = v6;
      }

      while (v6 != v2);
    }
  }

void sub_100EA4830(uint64_t a1, char a2)
{
  if (*(_BYTE *)(a1 + 224))
  {
    double Current = CFAbsoluteTimeGetCurrent();
    double v5 = Current;
    if ((a2 & 1) != 0 || vabdd_f64(Current, *(double *)(a1 + 232)) >= 120.0)
    {
      sub_1006B6014(*(void *)(a1 + 152), Current + *(double *)(a1 + 216));
      *(double *)(a1 + 232) = v5;
    }
  }

BOOL sub_100EA4898(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  sub_100EA2EBC(v1);
  return sub_100AD5D38(v1 + 160);
}

uint64_t sub_100EA4EB8(uint64_t a1, void *a2, int a3)
{
  int v23 = a3;
  double v5 = *(void **)(a1 + 312);
  if (v5)
  {

    *(void *)(a1 + 312) = 0LL;
  }

  if (a2)
  {
    sub_1002A5370(v22);
    sub_1002ACDE0((uint64_t)v22, "UUID", (uint64_t)objc_msgSend(objc_msgSend(a2, "proximityUUID"), "UUIDString"));
    if ([a2 major])
    {
      *(_DWORD *)__int128 buf = objc_msgSend(objc_msgSend(a2, "major"), "intValue");
      sub_1002AC220((uint64_t)v22, "major", buf);
    }

    if ([a2 minor])
    {
      *(_DWORD *)__int128 buf = objc_msgSend(objc_msgSend(a2, "minor"), "intValue");
      sub_1002AC220((uint64_t)v22, "minor", buf);
    }

    *(_DWORD *)(a1 + 320) = -1;
    if (v23 != -1)
    {
      sub_1002AC220((uint64_t)v22, "power", &v23);
      *(_DWORD *)(a1 + 320) = v23;
    }

    sub_1002F0B04(buf);
    sub_1002ACE6C(*(uint64_t *)buf, "BeaconAdvertiserData", (uint64_t)v22);
    unsigned __int8 v6 = *(std::__shared_weak_count **)v25;
    if (*(void *)v25)
    {
      BOOL v7 = (unint64_t *)(*(void *)v25 + 8LL);
      do
        unint64_t v8 = __ldaxr(v7);
      while (__stlxr(v8 - 1, v7));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }

    sub_1002F0B04(buf);
    sub_1002F13B4(*(uint64_t *)buf);
    uint64_t v9 = *(std::__shared_weak_count **)v25;
    if (*(void *)v25)
    {
      int v10 = (unint64_t *)(*(void *)v25 + 8LL);
      do
        unint64_t v11 = __ldaxr(v10);
      while (__stlxr(v11 - 1, v10));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
    }

    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188A778);
    }
    std::string::size_type v12 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_INFO))
    {
      id v13 = objc_msgSend(objc_msgSend(a2, "description"), "UTF8String");
      *(_DWORD *)__int128 buf = 68289539;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)uint64_t v25 = 2082;
      *(void *)&_OWORD v25[2] = "";
      __int16 v26 = 2081;
      id v27 = v13;
      __int16 v28 = 1026;
      int v29 = v23;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:iB: Storing beacon advertisement data, beacon:%{private, location:escape_only}s,  power:%{public}d}",  buf,  0x22u);
    }

    *(void *)(a1 + 312) = [a2 copy];
    uint64_t v14 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 264LL))(a1);
    sub_1002A5590(v22);
  }

  else
  {
    sub_1002F0B04(buf);
    sub_1002A667C(*(uint64_t *)buf, "BeaconAdvertiserData", 0xFFFFFFFFLL);
    int v15 = *(std::__shared_weak_count **)v25;
    if (*(void *)v25)
    {
      __int128 v16 = (unint64_t *)(*(void *)v25 + 8LL);
      do
        unint64_t v17 = __ldaxr(v16);
      while (__stlxr(v17 - 1, v16));
      if (!v17)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }

    sub_1002F0B04(buf);
    sub_1002F13B4(*(uint64_t *)buf);
    char v18 = *(std::__shared_weak_count **)v25;
    if (*(void *)v25)
    {
      int v19 = (unint64_t *)(*(void *)v25 + 8LL);
      do
        unint64_t v20 = __ldaxr(v19);
      while (__stlxr(v20 - 1, v19));
      if (!v20)
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }

    *(_DWORD *)(a1 + 320) = -1;
    (*(void (**)(uint64_t))(*(void *)a1 + 272LL))(a1);
    return 1LL;
  }

  return v14;
}

void sub_100EA5218(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
}

void sub_100EA5270(uint64_t a1)
{
  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10188A778);
  }
  double v2 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_INFO))
  {
    v4[0] = 68289026;
    v4[1] = 0;
    __int16 v5 = 2082;
    unsigned __int8 v6 = "";
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:iB: shutdown beacons and peripheral manager}",  (uint8_t *)v4,  0x12u);
  }

  uint64_t v3 = *(void **)(a1 + 296);
  if (v3)
  {
    [v3 stopAdvertising];

    *(void *)(a1 + 296) = 0LL;
    *(void *)(a1 + 304) = 0LL;
  }

uint64_t sub_100EA536C(uint64_t a1)
{
  if (!*(void *)(a1 + 312))
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188A778);
    }
    BOOL v7 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "Start advertising called when we have no region",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188A778);
      }
      LOWORD(v36) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  17LL,  "Start advertising called when we have no region",  &v36,  2);
      std::stringbuf::string_type v32 = (uint8_t *)v31;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLBTLEBeaconProviderConcrete::startBeaconAdvertising()",  "%s\n",  v31);
      if (v32 != buf) {
        free(v32);
      }
    }

    (*(void (**)(uint64_t))(*(void *)a1 + 272LL))(a1);
    return 0LL;
  }

  double v2 = *(CBPeripheralManager **)(a1 + 296);
  if (v2
    || (*(void *)(a1 + 304) = -[CLPeripheralManagerDelegate initWithSilo:provider:]( [CLPeripheralManagerDelegate alloc],  "initWithSilo:provider:",  *(void *)(a1 + 40),  a1),  double v2 = -[CBPeripheralManager initWithDelegate:queue:]( [CBPeripheralManager alloc],  "initWithDelegate:queue:",  *(void *)(a1 + 304),  [*(id *)(a1 + 40) queue]),  (*(void *)(a1 + 296) = v2) != 0))
  {
    if (-[CBPeripheralManager state](v2, "state") != (id)5)
    {
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188A778);
      }
      uint64_t v9 = (os_log_s *)qword_101934848;
      if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEFAULT))
      {
        unsigned int v10 = [*(id *)(a1 + 296) state];
        *(_DWORD *)__int128 buf = 67240192;
        *(_DWORD *)__int128 v41 = v10;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "#Warning BT state not yet powered %{public}d",  buf,  8u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934840 != -1) {
          dispatch_once(&qword_101934840, &stru_10188A778);
        }
        uint64_t v11 = qword_101934848;
        unsigned int v12 = [*(id *)(a1 + 296) state];
        int v36 = 67240192;
        LODWORD(v37) = v12;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v11,  0LL,  "#Warning BT state not yet powered %{public}d",  &v36,  8);
        uint64_t v14 = (uint8_t *)v13;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLBTLEBeaconProviderConcrete::startBeaconAdvertising()",  "%s\n",  v13);
        if (v14 != buf) {
          free(v14);
        }
      }

      return 1LL;
    }

    if ([*(id *)(a1 + 296) isAdvertising])
    {
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188A778);
      }
      uint64_t v3 = (os_log_s *)qword_101934848;
      if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "iB: Stopping previous advertising", buf, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934840 != -1) {
          dispatch_once(&qword_101934840, &stru_10188A778);
        }
        LOWORD(v36) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "iB: Stopping previous advertising",  &v36,  2);
        double v34 = (uint8_t *)v33;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLBTLEBeaconProviderConcrete::startBeaconAdvertising()",  "%s\n",  v33);
        if (v34 != buf) {
          free(v34);
        }
      }

      [*(id *)(a1 + 296) stopAdvertising];
    }

    if (*(_DWORD *)(a1 + 320) == -1)
    {
      uint64_t v4 = 0LL;
    }

    else
    {
      uint64_t v4 = -[NSNumber initWithInt:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithInt:", *(unsigned int *)(a1 + 320));
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188A778);
      }
      __int16 v5 = (os_log_s *)qword_101934848;
      if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_INFO))
      {
        int v6 = *(_DWORD *)(a1 + 320);
        *(_DWORD *)__int128 buf = 68289282;
        *(_DWORD *)__int128 v41 = 0;
        *(_WORD *)&v41[4] = 2082;
        *(void *)&v41[6] = "";
        __int16 v42 = 1026;
        LODWORD(v43) = v6;
        _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:iB: Setting beacon power, power:%{public}d}",  buf,  0x18u);
      }
    }

    id v15 = [*(id *)(a1 + 312) peripheralDataWithMeasuredPower:v4];

    if (v15)
    {
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188A778);
      }
      __int128 v16 = (os_log_s *)qword_101934848;
      if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_INFO))
      {
        id v17 = objc_msgSend(objc_msgSend(*(id *)(a1 + 312), "description"), "UTF8String");
        int v18 = *(_DWORD *)(a1 + 320);
        *(_DWORD *)__int128 buf = 68289539;
        *(_DWORD *)__int128 v41 = 0;
        *(_WORD *)&v41[4] = 2082;
        *(void *)&v41[6] = "";
        __int16 v42 = 2081;
        id v43 = v17;
        __int16 v44 = 1026;
        int v45 = v18;
        _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:iB: Starting beacon advertising, beacon:%{private, location:escape_only}s, power:%{public}d}",  buf,  0x22u);
      }

      [*(id *)(a1 + 296) startAdvertising:v15];
      return 1LL;
    }

    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188A778);
    }
    int v19 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_FAULT))
    {
      id v20 = objc_msgSend(objc_msgSend(*(id *)(a1 + 312), "description"), "UTF8String");
      int v21 = *(_DWORD *)(a1 + 320);
      *(_DWORD *)__int128 buf = 136380931;
      *(void *)__int128 v41 = v20;
      *(_WORD *)&v41[8] = 1026;
      *(_DWORD *)&v41[10] = v21;
      _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_FAULT,  "Error starting beacon advertising %{private}s, power %{public}d",  buf,  0x12u);
    }

    BOOL v22 = sub_1002921D0(115, 0);
    uint64_t result = 0LL;
    if (v22)
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188A778);
      }
      uint64_t v23 = qword_101934848;
      id v24 = objc_msgSend(objc_msgSend(*(id *)(a1 + 312), "description"), "UTF8String");
      int v25 = *(_DWORD *)(a1 + 320);
      int v36 = 136380931;
      id v37 = v24;
      __int16 v38 = 1026;
      int v39 = v25;
      LODWORD(v35) = 18;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v23,  17LL,  "Error starting beacon advertising %{private}s, power %{public}d",  &v36,  v35);
      id v27 = (uint8_t *)v26;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLBTLEBeaconProviderConcrete::startBeaconAdvertising()",  "%s\n",  v26);
      if (v27 == buf) {
        return 0LL;
      }
      goto LABEL_59;
    }
  }

  else
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188A778);
    }
    __int16 v28 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_FAULT, "Can't allocate peripheral manager", buf, 2u);
    }

    BOOL v29 = sub_1002921D0(115, 0);
    uint64_t result = 0LL;
    if (v29)
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188A778);
      }
      LOWORD(v36) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  17LL,  "Can't allocate peripheral manager",  &v36,  2);
      id v27 = (uint8_t *)v30;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLBTLEBeaconProviderConcrete::startBeaconAdvertising()",  "%s\n",  v30);
      if (v27 == buf) {
        return 0LL;
      }
LABEL_59:
      free(v27);
      return 0LL;
    }
  }

  return result;
}

void sub_100EA5C6C(id a1)
{
  qword_101934848 = (uint64_t)os_log_create("com.apple.locationd.Position", "Proximity");
}

void sub_100EA5C98(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

uint64_t *sub_100EA5CC4(uint64_t **a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  int v6 = (uint64_t **)sub_100529238((uint64_t)a1, &v9, a2);
  uint64_t result = *v6;
  if (!*v6)
  {
    sub_100EA5D58((uint64_t)a1, a4, (uint64_t)&v8);
    sub_1000085FC(a1, v9, v6, v8);
    return v8;
  }

  return result;
}

uint64_t sub_100EA5D58@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  int v6 = operator new(0x60uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  uint64_t result = sub_100EA5DD8((uint64_t)v6 + 32, *a2);
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_100EA5DBC(_Unwind_Exception *a1)
{
  void *v1 = 0LL;
  sub_100E87500(v3, v2);
  _Unwind_Resume(a1);
}

uint64_t sub_100EA5DD8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_10182CE18;
  uint64_t v4 = a1 + 8;
  if (*(char *)(a2 + 31) < 0)
  {
    sub_1010DD48C((_BYTE *)v4, *(void **)(a2 + 8), *(void *)(a2 + 16));
  }

  else
  {
    __int128 v5 = *(_OWORD *)(a2 + 8);
    *(void *)(v4 + 16) = *(void *)(a2 + 24);
    *(_OWORD *)uint64_t v4 = v5;
  }

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_WORD *)(a1 + 40) = 0;
  *(_BYTE *)(a1 + 42) = 0;
  *(void *)(a1 + 48) = 0LL;
  *(void *)(a1 + 56) = 1LL;
  return a1;
}

BOOL sub_100EA5E54()
{
  return os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_FAULT);
}

  ;
}

BOOL sub_100EA5E74()
{
  return os_log_type_enabled(*(os_log_t *)(v0 + 2120), OS_LOG_TYPE_INFO);
}

BOOL sub_100EA5E84()
{
  return os_signpost_enabled(*(os_log_t *)(v0 + 2120));
}

id sub_100EA6298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((objc_opt_isKindOfClass(a2, v6) & 1) == 0) {
    sub_10127659C();
  }
  objc_opt_class(&OBJC_CLASS___NSString);
  if ((objc_opt_isKindOfClass(a3, v7) & 1) == 0) {
    sub_101276430();
  }
  return [*(id *)(a1 + 32) setValue:a3 forHTTPHeaderField:a2];
}

void sub_100EA6F94(id a1)
{
  qword_1019349B8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Harvester");
}

_BYTE *sub_100EA6FC0(_BYTE *a1)
{
  *(void *)(v2 + 256) = 0LL;
  sub_1004F2598();
  if (sub_1001B9A1C())
  {
    sub_1002F0B04(&v61);
    int v3 = sub_1002A6F64(v61, "CLOutdoorEstimatorKeepOnGnssMeasurement", &v63) ^ 1;
    if (v63) {
      LOBYTE(v3) = 1;
    }
    a1[256] = v3;
    uint64_t v4 = v62;
    if (v62)
    {
      p_shared_owners = (unint64_t *)&v62->__shared_owners_;
      do
        unint64_t v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }

    sub_1002F0B04(&v61);
    int v7 = sub_1002A6F64(v61, "CLOutdoorEstimatorKeepOnMotionActivity", &v63) ^ 1;
    if (v63) {
      LOBYTE(v7) = 1;
    }
    a1[257] = v7;
    unint64_t v8 = v62;
    if (v62)
    {
      uint64_t v9 = (unint64_t *)&v62->__shared_owners_;
      do
        unint64_t v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }

    sub_1002F0B04(&v61);
    int v11 = sub_1002A6F64(v61, "CLOutdoorEstimatorKeepOnAlsEvidence", &v63) ^ 1;
    if (v63) {
      LOBYTE(v11) = 1;
    }
    a1[263] = v11;
    unsigned int v12 = v62;
    if (v62)
    {
      id v13 = (unint64_t *)&v62->__shared_owners_;
      do
        unint64_t v14 = __ldaxr(v13);
      while (__stlxr(v14 - 1, v13));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }

    sub_1002F0B04(&v61);
    char v15 = sub_1002A6F64(v61, "CLOutdoorEstimatorKeepOnCMGpsModelOutput", &v63);
    if (v63) {
      char v16 = v15;
    }
    else {
      char v16 = 0;
    }
    a1[260] = v16;
    id v17 = v62;
    if (v62)
    {
      int v18 = (unint64_t *)&v62->__shared_owners_;
      do
        unint64_t v19 = __ldaxr(v18);
      while (__stlxr(v19 - 1, v18));
      if (!v19)
      {
        ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
        std::__shared_weak_count::__release_weak(v17);
      }
    }

    sub_1002F0B04(&v61);
    char v20 = sub_1002A6F64(v61, "CLOutdoorEstimatorKeepOnCMWifiModelOutput", &v63);
    if (v63) {
      char v21 = v20;
    }
    else {
      char v21 = 0;
    }
    a1[261] = v21;
    BOOL v22 = v62;
    if (v62)
    {
      uint64_t v23 = (unint64_t *)&v62->__shared_owners_;
      do
        unint64_t v24 = __ldaxr(v23);
      while (__stlxr(v24 - 1, v23));
      if (!v24)
      {
        ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
        std::__shared_weak_count::__release_weak(v22);
      }
    }

    sub_1002F0B04(&v61);
    char v25 = sub_1002A6F64(v61, "CLOutdoorEstimatorKeepOnCMAlsModelOutput", &v63);
    if (v63) {
      char v26 = v25;
    }
    else {
      char v26 = 0;
    }
    a1[262] = v26;
    id v27 = v62;
    if (v62)
    {
      __int16 v28 = (unint64_t *)&v62->__shared_owners_;
      do
        unint64_t v29 = __ldaxr(v28);
      while (__stlxr(v29 - 1, v28));
      goto LABEL_97;
    }
  }

  else
  {
    sub_1002F0B04(&v61);
    int v30 = sub_1002A6F64(v61, "CLOutdoorEstimatorKeepOnGnssMeasurement", &v63) ^ 1;
    if (v63) {
      LOBYTE(v30) = 1;
    }
    a1[256] = v30;
    __int128 v31 = v62;
    if (v62)
    {
      std::stringbuf::string_type v32 = (unint64_t *)&v62->__shared_owners_;
      do
        unint64_t v33 = __ldaxr(v32);
      while (__stlxr(v33 - 1, v32));
      if (!v33)
      {
        ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
        std::__shared_weak_count::__release_weak(v31);
      }
    }

    sub_1002F0B04(&v61);
    int v34 = sub_1002A6F64(v61, "CLOutdoorEstimatorKeepOnMotionActivity", &v63) ^ 1;
    if (v63) {
      LOBYTE(v34) = 1;
    }
    a1[257] = v34;
    uint64_t v35 = v62;
    if (v62)
    {
      int v36 = (unint64_t *)&v62->__shared_owners_;
      do
        unint64_t v37 = __ldaxr(v36);
      while (__stlxr(v37 - 1, v36));
      if (!v37)
      {
        ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
        std::__shared_weak_count::__release_weak(v35);
      }
    }

    sub_1002F0B04(&v61);
    int v38 = sub_1002A6F64(v61, "CLOutdoorEstimatorKeepOnAlsEvidence", &v63) ^ 1;
    if (v63) {
      LOBYTE(v38) = 1;
    }
    a1[263] = v38;
    int v39 = v62;
    if (v62)
    {
      __int128 v40 = (unint64_t *)&v62->__shared_owners_;
      do
        unint64_t v41 = __ldaxr(v40);
      while (__stlxr(v41 - 1, v40));
      if (!v41)
      {
        ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
        std::__shared_weak_count::__release_weak(v39);
      }
    }

    sub_1002F0B04(&v61);
    char v42 = sub_1002A6F64(v61, "CLOutdoorEstimatorKeepOnCMGpsModelOutput", &v63);
    if (v63) {
      char v43 = v42;
    }
    else {
      char v43 = 0;
    }
    a1[260] = v43;
    __int16 v44 = v62;
    if (v62)
    {
      int v45 = (unint64_t *)&v62->__shared_owners_;
      do
        unint64_t v46 = __ldaxr(v45);
      while (__stlxr(v46 - 1, v45));
      if (!v46)
      {
        ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
        std::__shared_weak_count::__release_weak(v44);
      }
    }

    sub_1002F0B04(&v61);
    char v47 = sub_1002A6F64(v61, "CLOutdoorEstimatorKeepOnCMWifiModelOutput", &v63);
    if (v63) {
      char v48 = v47;
    }
    else {
      char v48 = 0;
    }
    a1[261] = v48;
    uint64_t v49 = v62;
    if (v62)
    {
      id v50 = (unint64_t *)&v62->__shared_owners_;
      do
        unint64_t v51 = __ldaxr(v50);
      while (__stlxr(v51 - 1, v50));
      if (!v51)
      {
        ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
        std::__shared_weak_count::__release_weak(v49);
      }
    }

    sub_1002F0B04(&v61);
    char v52 = sub_1002A6F64(v61, "CLOutdoorEstimatorKeepOnCMAlsModelOutput", &v63);
    if (v63) {
      char v53 = v52;
    }
    else {
      char v53 = 0;
    }
    a1[262] = v53;
    __int16 v54 = v62;
    if (v62)
    {
      int v55 = (unint64_t *)&v62->__shared_owners_;
      do
        unint64_t v56 = __ldaxr(v55);
      while (__stlxr(v56 - 1, v55));
      if (!v56)
      {
        ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
        std::__shared_weak_count::__release_weak(v54);
      }
    }

    sub_1002F0B04(&v61);
    char v57 = sub_1002A6F64(v61, "CLOutdoorEstimatorKeepOnGnssAvailability", &v63);
    if (v63) {
      char v58 = v57;
    }
    else {
      char v58 = 0;
    }
    a1[258] = v58;
    id v27 = v62;
    if (v62)
    {
      double v59 = (unint64_t *)&v62->__shared_owners_;
      do
        unint64_t v29 = __ldaxr(v59);
      while (__stlxr(v29 - 1, v59));
LABEL_97:
      if (!v29)
      {
        ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
        std::__shared_weak_count::__release_weak(v27);
      }
    }
  }

  return a1;
}

void sub_100EA7544(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_100EA75D8(uint64_t a1, int *a2)
{
}

void sub_100EA75E4(uint64_t a1, uint64_t a2, double a3)
{
  if (*(_BYTE *)(a1 + 256))
  {
    unint64_t v34 = 0LL;
    double v35 = 0.0;
    int v36 = 0;
    double v37 = 0.0;
    int v38 = 0;
    std::stringbuf::string_type __p = 0LL;
    unint64_t v33 = 0LL;
    uint64_t v3 = *(void *)(a2 + 24);
    uint64_t v4 = *(void *)(a2 + 32);
    if (v3 != v4)
    {
      int v7 = 0;
      unint64_t v8 = 0LL;
      do
      {
        double v9 = *(float *)(v3 + 16);
        if (fabs(v9) >= 2.22044605e-16)
        {
          if ((unint64_t)v8 >= v34)
          {
            int v11 = __p;
            uint64_t v12 = v8 - __p;
            unint64_t v13 = v12 + 1;
            uint64_t v14 = v34 - (void)__p;
            else {
              unint64_t v15 = v13;
            }
            if (v15)
            {
              unint64_t v15 = (unint64_t)sub_1000071BC((uint64_t)&v34, v15);
              uint64_t v17 = v16;
              int v11 = __p;
              unint64_t v8 = v33;
            }

            else
            {
              uint64_t v17 = 0LL;
            }

            int v18 = (double *)(v15 + 8 * v12);
            double *v18 = v9;
            unint64_t v10 = v18 + 1;
            while (v8 != v11)
            {
              uint64_t v19 = *((void *)v8-- - 1);
              *((void *)v18-- - 1) = v19;
            }

            std::stringbuf::string_type __p = v18;
            unint64_t v34 = v15 + 8 * v17;
            if (v11) {
              operator delete(v11);
            }
          }

          else
          {
            *unint64_t v8 = v9;
            unint64_t v10 = v8 + 1;
          }

          unint64_t v33 = v10;
          unint64_t v8 = v10;
        }

        v3 += 28LL;
      }

      while (v3 != v4);
      if (__p != v8)
      {
        sub_100D093B8(__p, v8, (uint64_t)buf, 126 - 2 * __clz(v8 - __p), 1);
        double v35 = a3;
        int v36 = 3;
        sub_1004F2598();
        if (sub_1001B9A1C())
        {
          double v20 = *__p;
        }

        else
        {
          unint64_t v24 = __p;
          unint64_t v25 = v33 - __p;
          double v26 = 0.0;
          if (v25 >= 8) {
            unint64_t v25 = 8LL;
          }
          if (v25)
          {
            unint64_t v27 = v25;
            do
            {
              double v28 = *v24++;
              double v26 = v26 + v28;
              --v27;
            }

            while (v27);
          }

          double v20 = v26 / (double)v25;
        }

        double v37 = v20;
        sub_100FDB6F8(a1, &v35);
        if (qword_101934940 != -1) {
          dispatch_once(&qword_101934940, &stru_10188A800);
        }
        unint64_t v29 = (os_log_s *)qword_101934948;
        if (os_log_type_enabled((os_log_t)qword_101934948, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)__int128 buf = 134284033;
          double v46 = v37;
          __int16 v47 = 1025;
          int v48 = v38;
          __int16 v49 = 2048;
          double v50 = a3;
          _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEBUG,  "CLOutdoorEstimatorController_feedGnssMeasurement,cn0dBHz,%{private}f,numTrackedSatellitesAboveElevationMask, %{private}d,currentTime,%f",  buf,  0x1Cu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934940 != -1) {
            dispatch_once(&qword_101934940, &stru_10188A800);
          }
          int v39 = 134284033;
          double v40 = v37;
          __int16 v41 = 1025;
          int v42 = v38;
          __int16 v43 = 2048;
          double v44 = a3;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934948,  2LL,  "CLOutdoorEstimatorController_feedGnssMeasurement,cn0dBHz,%{private}f,numTrackedSatellitesAboveElevationMask, %{private}d,currentTime,%f",  &v39,  28);
          __int128 v31 = (uint8_t *)v30;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLOutdoorEstimatorController::feedGnssMeasurement(const CLOutdoorGnssLeechLocation &, const CFAbsoluteTime)",  "%s\n",  v30);
          if (v31 != buf) {
            free(v31);
          }
        }

        unint64_t v8 = __p;
      }

      if (v8) {
        operator delete(v8);
      }
    }
  }

  else
  {
    if (qword_101934940 != -1) {
      dispatch_once(&qword_101934940, &stru_10188A800);
    }
    char v21 = (os_log_s *)qword_101934948;
    if (os_log_type_enabled((os_log_t)qword_101934948, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEBUG,  "CLOutdoorEstimatorController,CLOutdoorEstimatorTurnOffGnssMeasurement",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934940 != -1) {
        dispatch_once(&qword_101934940, &stru_10188A800);
      }
      LOWORD(v35) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934948,  2LL,  "CLOutdoorEstimatorController,CLOutdoorEstimatorTurnOffGnssMeasurement",  &v35,  2);
      uint64_t v23 = (uint8_t *)v22;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLOutdoorEstimatorController::feedGnssMeasurement(const CLOutdoorGnssLeechLocation &, const CFAbsoluteTime)",  "%s\n",  v22);
      if (v23 != buf) {
        free(v23);
      }
    }
  }

void sub_100EA7B04( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100EA7B34(uint64_t a1, _DWORD *a2, double a3)
{
  if (*(_BYTE *)(a1 + 259))
  {
    if (qword_101934940 != -1) {
      dispatch_once(&qword_101934940, &stru_10188A800);
    }
    __int128 v5 = (os_log_s *)qword_101934948;
    if (os_log_type_enabled((os_log_t)qword_101934948, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "CLOutdoorEstimatorController,feedMapMatchingRouteHint",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934940 != -1) {
        dispatch_once(&qword_101934940, &stru_10188A800);
      }
      v15[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934948,  2LL,  "CLOutdoorEstimatorController,feedMapMatchingRouteHint",  v15,  2);
      uint64_t v12 = (uint8_t *)v11;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLOutdoorEstimatorController::feedMapMatchingRouteHint(const CLMapsRouteHintData &, const CFAbsoluteTime)",  "%s\n",  v11);
      if (v12 != buf) {
        free(v12);
      }
    }

    double v6 = sub_101171D4C();
    if (!sub_100ECF4A4((uint64_t)a2, v6, 6.0))
    {
      v7.i64[0] = *(void *)a2;
      int32x4_t v8 = vzip1q_s32(v7, v7);
      v8.i32[2] = *(void *)a2;
      int16x8_t v9 = (int16x8_t)vceqq_s32(v8, (int32x4_t)xmmword_101363B50);
      *(int8x8_t *)v9.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v9), (int8x8_t)0x1000100010001LL);
      unsigned __int32 v18 = vmovn_s16(v9).u32[0];
      BOOL v19 = v7.i32[1] == 0;
      char v20 = (*a2 == 0) & ~sub_100ECF4A4((uint64_t)a2, v6, 6.0);
      char v21 = (*a2 == 1) & ~sub_100ECF4A4((uint64_t)a2, v6, 6.0);
      char v22 = (*a2 == 3) & ~sub_100ECF4A4((uint64_t)a2, v6, 6.0);
      BOOL v23 = sub_1005F5294(a2, v6);
      *(double *)__int128 buf = a3;
      int v17 = 4;
      sub_100FE161C();
    }
  }

  else
  {
    if (qword_101934940 != -1) {
      dispatch_once(&qword_101934940, &stru_10188A800);
    }
    unint64_t v10 = (os_log_s *)qword_101934948;
    if (os_log_type_enabled((os_log_t)qword_101934948, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "CLOutdoorEstimatorController,CLOutdoorEstimatorTurnOffMapMatchingRouteHint",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934940 != -1) {
        dispatch_once(&qword_101934940, &stru_10188A800);
      }
      v15[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934948,  2LL,  "CLOutdoorEstimatorController,CLOutdoorEstimatorTurnOffMapMatchingRouteHint",  v15,  2);
      uint64_t v14 = (uint8_t *)v13;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLOutdoorEstimatorController::feedMapMatchingRouteHint(const CLMapsRouteHintData &, const CFAbsoluteTime)",  "%s\n",  v13);
      if (v14 != buf) {
        free(v14);
      }
    }
  }

void sub_100EA7EF0(uint64_t a1, int a2, double a3)
{
  if (*(_BYTE *)(a1 + 257))
  {
    double v8 = a3;
    int v9 = 1;
    int v10 = a2;
    sub_100FDDE30(a1, (uint64_t *)&v8);
    if (qword_101934940 != -1) {
      dispatch_once(&qword_101934940, &stru_10188A800);
    }
    uint64_t v4 = (os_log_s *)qword_101934948;
    if (os_log_type_enabled((os_log_t)qword_101934948, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)__int128 buf = 67174913;
      int v15 = v10;
      __int16 v16 = 2048;
      double v17 = a3;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "CLOutdoorEstimatorController_feedMotionActivity,activityStateEvidence,%{private}d,currentTime,%f",  buf,  0x12u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934940 != -1) {
        dispatch_once(&qword_101934940, &stru_10188A800);
      }
      v11[0] = 67174913;
      v11[1] = v10;
      __int16 v12 = 2048;
      double v13 = a3;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934948,  2LL,  "CLOutdoorEstimatorController_feedMotionActivity,activityStateEvidence,%{private}d,currentTime,%f",  v11,  18);
LABEL_19:
      int32x4_t v7 = (uint8_t *)v5;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLOutdoorEstimatorController::feedMotionActivity(const CMMotionContext::MotionType, const CFAbsoluteTime)",  "%s\n",  v5);
      if (v7 != buf) {
        free(v7);
      }
    }
  }

  else
  {
    if (qword_101934940 != -1) {
      dispatch_once(&qword_101934940, &stru_10188A800);
    }
    double v6 = (os_log_s *)qword_101934948;
    if (os_log_type_enabled((os_log_t)qword_101934948, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "CLOutdoorEstimatorController,CLOutdoorEstimatorTurnOffMotionActivity",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934940 != -1) {
        dispatch_once(&qword_101934940, &stru_10188A800);
      }
      LOWORD(v11[0]) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934948,  2LL,  "CLOutdoorEstimatorController,CLOutdoorEstimatorTurnOffMotionActivity",  v11,  2);
      goto LABEL_19;
    }
  }

void sub_100EA81A8(uint64_t a1, uint64_t a2, double a3)
{
  if (*(_BYTE *)(a1 + 258))
  {
    uint64_t v10 = *(void *)(a2 + 8);
    int v11 = *(_DWORD *)(a2 + 4);
    uint64_t v8 = *(void *)&a3;
    int v9 = 2;
    sub_100FDE9EC(a1, &v8);
    if (qword_101934940 != -1) {
      dispatch_once(&qword_101934940, &stru_10188A800);
    }
    uint64_t v4 = (os_log_s *)qword_101934948;
    if (os_log_type_enabled((os_log_t)qword_101934948, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)__int128 buf = 67174913;
      int v16 = v11;
      __int16 v17 = 2048;
      double v18 = a3;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "CLOutdoorEstimatorController_feedGnssAvailability,gnssAvailabilityEvidence,%{private}d,currentTime,%f",  buf,  0x12u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934940 != -1) {
        dispatch_once(&qword_101934940, &stru_10188A800);
      }
      v12[0] = 67174913;
      v12[1] = v11;
      __int16 v13 = 2048;
      double v14 = a3;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934948,  2LL,  "CLOutdoorEstimatorController_feedGnssAvailability,gnssAvailabilityEvidence,%{private}d,currentTime,%f",  v12,  18,  v8);
LABEL_19:
      int32x4_t v7 = (uint8_t *)v5;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLOutdoorEstimatorController::feedGnssAvailability(const CLLocationProvider_Type::PredictedGnssAvailability &, const CFAbsoluteTime)",  "%s\n",  v5);
      if (v7 != buf) {
        free(v7);
      }
    }
  }

  else
  {
    if (qword_101934940 != -1) {
      dispatch_once(&qword_101934940, &stru_10188A800);
    }
    double v6 = (os_log_s *)qword_101934948;
    if (os_log_type_enabled((os_log_t)qword_101934948, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "CLOutdoorEstimatorController,CLOutdoorEstimatorTurnOffGnssAvailability",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934940 != -1) {
        dispatch_once(&qword_101934940, &stru_10188A800);
      }
      LOWORD(v8) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934948,  2LL,  "CLOutdoorEstimatorController,CLOutdoorEstimatorTurnOffGnssAvailability",  &v8,  2,  v8);
      goto LABEL_19;
    }
  }

void sub_100EA8470(uint64_t a1, __int128 *a2, double a3)
{
  if (*(_BYTE *)(a1 + 260))
  {
    __int128 v4 = a2[1];
    __int128 v11 = *a2;
    __int128 v12 = v4;
    double v9 = a3;
    int v10 = 6;
    sub_100FDF590(a1, &v9);
    if (qword_101934940 != -1) {
      dispatch_once(&qword_101934940, &stru_10188A800);
    }
    __int128 v5 = (os_log_s *)qword_101934948;
    if (os_log_type_enabled((os_log_t)qword_101934948, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)__int128 buf = 134283777;
      uint64_t v18 = *((void *)&v11 + 1);
      __int16 v19 = 2048;
      double v20 = a3;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "CLOutdoorEstimatorController_feedCMGpsModelOutput,gpsModelOutputEvidence,%{private}f,currentTime,%f",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934940 != -1) {
        dispatch_once(&qword_101934940, &stru_10188A800);
      }
      int v13 = 134283777;
      uint64_t v14 = *((void *)&v11 + 1);
      __int16 v15 = 2048;
      double v16 = a3;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934948,  2LL,  "CLOutdoorEstimatorController_feedCMGpsModelOutput,gpsModelOutputEvidence,%{private}f,currentTime,%f",  &v13,  22,  *(void *)&v9);
LABEL_19:
      uint64_t v8 = (uint8_t *)v6;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLOutdoorEstimatorController::feedCMGpsModelOutput(const CLOutdoorEstimator_Type::CMGpsModelOutput &, const CFAbsoluteTime)",  "%s\n",  v6);
      if (v8 != buf) {
        free(v8);
      }
    }
  }

  else
  {
    if (qword_101934940 != -1) {
      dispatch_once(&qword_101934940, &stru_10188A800);
    }
    int32x4_t v7 = (os_log_s *)qword_101934948;
    if (os_log_type_enabled((os_log_t)qword_101934948, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "CLOutdoorEstimatorController,CLOutdoorEstimatorTurnOffCMGpsModelOutput",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934940 != -1) {
        dispatch_once(&qword_101934940, &stru_10188A800);
      }
      LOWORD(v9) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934948,  2LL,  "CLOutdoorEstimatorController,CLOutdoorEstimatorTurnOffCMGpsModelOutput",  &v9,  2,  *(void *)&v9);
      goto LABEL_19;
    }
  }

void sub_100EA8730(uint64_t a1, __int128 *a2, double a3)
{
  if (*(_BYTE *)(a1 + 261))
  {
    __int128 v10 = *a2;
    double v8 = a3;
    int v9 = 7;
    sub_100FDFC2C(a1, &v8);
    if (qword_101934940 != -1) {
      dispatch_once(&qword_101934940, &stru_10188A800);
    }
    __int128 v4 = (os_log_s *)qword_101934948;
    if (os_log_type_enabled((os_log_t)qword_101934948, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)__int128 buf = 134283777;
      uint64_t v16 = *((void *)&v10 + 1);
      __int16 v17 = 2048;
      double v18 = a3;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "CLOutdoorEstimatorController_feedCMWifiModelOutput,wifiModelOutputEvidence,%{private}f,currentTime,%f",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934940 != -1) {
        dispatch_once(&qword_101934940, &stru_10188A800);
      }
      int v11 = 134283777;
      uint64_t v12 = *((void *)&v10 + 1);
      __int16 v13 = 2048;
      double v14 = a3;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934948,  2LL,  "CLOutdoorEstimatorController_feedCMWifiModelOutput,wifiModelOutputEvidence,%{private}f,currentTime,%f",  &v11,  22,  *(void *)&v8);
LABEL_19:
      int32x4_t v7 = (uint8_t *)v5;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLOutdoorEstimatorController::feedCMWifiModelOutput(const CLOutdoorEstimator_Type::CMWiFiModelOutput &, con st CFAbsoluteTime)",  "%s\n",  v5);
      if (v7 != buf) {
        free(v7);
      }
    }
  }

  else
  {
    if (qword_101934940 != -1) {
      dispatch_once(&qword_101934940, &stru_10188A800);
    }
    double v6 = (os_log_s *)qword_101934948;
    if (os_log_type_enabled((os_log_t)qword_101934948, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "CLOutdoorEstimatorController,CLOutdoorEstimatorTurnOffCMWifiModelOutput",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934940 != -1) {
        dispatch_once(&qword_101934940, &stru_10188A800);
      }
      LOWORD(v8) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934948,  2LL,  "CLOutdoorEstimatorController,CLOutdoorEstimatorTurnOffCMWifiModelOutput",  &v8,  2,  *(void *)&v8);
      goto LABEL_19;
    }
  }

void sub_100EA89F0(uint64_t a1, __int128 *a2, double a3)
{
  if (*(_BYTE *)(a1 + 262))
  {
    __int128 v10 = *a2;
    double v8 = a3;
    int v9 = 5;
    sub_100FE02C8(a1, &v8);
    if (qword_101934940 != -1) {
      dispatch_once(&qword_101934940, &stru_10188A800);
    }
    __int128 v4 = (os_log_s *)qword_101934948;
    if (os_log_type_enabled((os_log_t)qword_101934948, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)__int128 buf = 134283777;
      uint64_t v16 = *((void *)&v10 + 1);
      __int16 v17 = 2048;
      double v18 = a3;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "CLOutdoorEstimatorController_feedCMAlsModelOutput,alsModelOutputEvidence,%{private}f,currentTime,%f",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934940 != -1) {
        dispatch_once(&qword_101934940, &stru_10188A800);
      }
      int v11 = 134283777;
      uint64_t v12 = *((void *)&v10 + 1);
      __int16 v13 = 2048;
      double v14 = a3;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934948,  2LL,  "CLOutdoorEstimatorController_feedCMAlsModelOutput,alsModelOutputEvidence,%{private}f,currentTime,%f",  &v11,  22,  *(void *)&v8);
LABEL_19:
      int32x4_t v7 = (uint8_t *)v5;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLOutdoorEstimatorController::feedCMAlsModelOutput(const CLOutdoorEstimator_Type::CMALSModelOutput &, const CFAbsoluteTime)",  "%s\n",  v5);
      if (v7 != buf) {
        free(v7);
      }
    }
  }

  else
  {
    if (qword_101934940 != -1) {
      dispatch_once(&qword_101934940, &stru_10188A800);
    }
    double v6 = (os_log_s *)qword_101934948;
    if (os_log_type_enabled((os_log_t)qword_101934948, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "CLOutdoorEstimatorController,CLOutdoorEstimatorTurnOffCMAlsModelOutput",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934940 != -1) {
        dispatch_once(&qword_101934940, &stru_10188A800);
      }
      LOWORD(v8) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934948,  2LL,  "CLOutdoorEstimatorController,CLOutdoorEstimatorTurnOffCMAlsModelOutput",  &v8,  2,  *(void *)&v8);
      goto LABEL_19;
    }
  }

void sub_100EA8CB0(uint64_t a1, uint64_t a2, double a3)
{
  if (*(_BYTE *)(a1 + 263))
  {
    sub_100FDD244(a1, (double *)a2);
    if (qword_101934940 != -1) {
      dispatch_once(&qword_101934940, &stru_10188A800);
    }
    __int128 v5 = (os_log_s *)qword_101934948;
    if (os_log_type_enabled((os_log_t)qword_101934948, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v6 = *(void *)(a2 + 16);
      uint64_t v7 = *(void *)(a2 + 24);
      int v8 = *(unsigned __int8 *)(a2 + 32);
      uint64_t v9 = *(void *)(a2 + 40);
      *(_DWORD *)__int128 buf = 134284545;
      uint64_t v20 = v6;
      __int16 v21 = 2049;
      uint64_t v22 = v7;
      __int16 v23 = 1025;
      int v24 = v8;
      __int16 v25 = 1025;
      int v26 = v9;
      __int16 v27 = 2048;
      double v28 = a3;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "CLOutdoorEstimatorController_feedAlsEvidence,alsTrustedLux,%{private}f,sunElevationAngleDegrees,%{private}f,isAs tronomicalDaytime,%{private}d,daylightConfidence,%{private}d,currentTime,%f",  buf,  0x2Cu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934940 != -1) {
        dispatch_once(&qword_101934940, &stru_10188A800);
      }
      uint64_t v10 = *(void *)(a2 + 16);
      uint64_t v11 = *(void *)(a2 + 24);
      int v12 = *(unsigned __int8 *)(a2 + 32);
      uint64_t v13 = *(void *)(a2 + 40);
      *(_DWORD *)__int16 v17 = 134284545;
      *(void *)&v17[4] = v10;
      *(_WORD *)&v17[12] = 2049;
      *(void *)&v17[14] = v11;
      *(_WORD *)&v17[22] = 1025;
      *(_DWORD *)double v18 = v12;
      *(_WORD *)&v18[4] = 1025;
      *(_DWORD *)&v18[6] = v13;
      *(_WORD *)&v18[10] = 2048;
      *(double *)&v18[12] = a3;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934948,  2LL,  "CLOutdoorEstimatorController_feedAlsEvidence,alsTrustedLux,%{private}f,sunElevationAngleDegrees,%{private}f,isAs tronomicalDaytime,%{private}d,daylightConfidence,%{private}d,currentTime,%f",  v17,  44,  *(_OWORD *)v17,  *(void *)&v17[16],  *(_OWORD *)v18,  *(void *)&v18[16]);
LABEL_19:
      uint64_t v16 = (uint8_t *)v14;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLOutdoorEstimatorController::feedAlsEvidence(const CLOutdoorEstimator_Type::AlsEvidence &, const CFAbsoluteTime)",  "%s\n",  v14);
      if (v16 != buf) {
        free(v16);
      }
    }
  }

  else
  {
    if (qword_101934940 != -1) {
      dispatch_once(&qword_101934940, &stru_10188A800);
    }
    __int16 v15 = (os_log_s *)qword_101934948;
    if (os_log_type_enabled((os_log_t)qword_101934948, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "CLOutdoorEstimatorController,CLOutdoorEstimatorTurnOffAlsEvidence",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934940 != -1) {
        dispatch_once(&qword_101934940, &stru_10188A800);
      }
      *(_WORD *)__int16 v17 = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934948,  2LL,  "CLOutdoorEstimatorController,CLOutdoorEstimatorTurnOffAlsEvidence",  v17,  2,  *(_OWORD *)v17,  *(void *)&v17[16],  *(_OWORD *)v18,  *(void *)&v18[16]);
      goto LABEL_19;
    }
  }

void sub_100EA8FB4(id a1)
{
  qword_101934948 = (uint64_t)os_log_create("com.apple.locationd.Position", "Outdoor");
}

BOOL sub_100EA8FE0()
{
  HIDWORD(v0) = -1030792151 * rand() + 85899344;
  LODWORD(v0) = HIDWORD(v0);
  return (v0 >> 2) < 0x28F5C29;
}

uint64_t sub_100EA901C(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v20[0] = @"numAssociatedApCentroids";
  v21[0] = +[NSNumber numberWithUnsignedLong:](&OBJC_CLASS___NSNumber, "numberWithUnsignedLong:", a4);
  v20[1] = @"averageCentroidAgeInHours";
  LODWORD(v8) = llround(a1);
  v21[1] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v8);
  v20[2] = @"oldestCentroidAgeInHours";
  LODWORD(v9) = llround(a2);
  v21[2] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v9);
  v20[3] = @"isAssociated";
  v21[3] = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", a5);
  uint64_t v10 = +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v21,  v20,  4LL);
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_10188A820);
  }
  uint64_t v11 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)__int128 buf = 138543362;
    __int16 v19 = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "Submitting CoreAnalytics event for the associated AP centroid database, %{public}@",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10188A820);
    }
    int v16 = 138543362;
    __int16 v17 = v10;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "Submitting CoreAnalytics event for the associated AP centroid database, %{public}@",  &v16,  12);
    double v14 = (uint8_t *)v13;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiAssociatedApCentroidDatabaseAnalytics::submitMetrics(const size_t, const double, const double, const BOOL)",  "%s\n",  v13);
    if (v14 != buf) {
      free(v14);
    }
  }

  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472LL;
  v15[2] = sub_100EA92A4;
  v15[3] = &unk_101820740;
  v15[4] = v10;
  return AnalyticsSendEventLazy(@"com.apple.wifiAssociatedApCentroidDatabase.analytics", v15);
}

uint64_t sub_100EA92A4(uint64_t a1)
{
  return *(void *)(a1 + 32);
}

void sub_100EA92AC(id a1)
{
  qword_101934858 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

BOOL sub_100EA92D8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 120);
  if (!v2)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    uint64_t v6 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      std::string::size_type v7 = *(void *)(a1 + 248);
      LODWORD(buf[0].__r_.__value_.__l.__data_) = 134349056;
      *(std::string::size_type *)((char *)buf[0].__r_.__value_.__r.__words + 4) = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,Unexpected,invalid bestParticle road",  (uint8_t *)buf,  0xCu);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    uint64_t v8 = *(void *)(a1 + 248);
    int v38 = 134349056;
    uint64_t v39 = v8;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,Unexpected,invalid bestParticle road",  &v38,  12);
    uint64_t v10 = (std::string *)v9;
    sub_10029211C("Generic", 1LL, 0, 0LL, "BOOL CLParticleMM::MMSnapData::fillCrumb()", "%s\n", v9);
    goto LABEL_57;
  }

  *(_DWORD *)(a1 + 520) = 1;
  uint64_t v3 = *(void *)(a1 + 152);
  uint64_t v4 = *(void *)(a1 + 160);
  *(void *)(a1 + 392) = v3;
  *(void *)(a1 + 400) = v4;
  double v5 = *(float *)(a1 + 144);
  *(double *)(a1 + 408) = v5;
  *(void *)(a1 + 528) = v3;
  *(void *)(a1 + 536) = v4;
  *(double *)(a1 + 544) = v5;
  *(void *)(a1 + 360) = *(void *)(v2 + 20);
  else {
    buf[0] = *(std::string *)(v2 + 48);
  }
  std::string::operator=((std::string *)(a1 + 368), buf);
  uint64_t v11 = *(void *)(a1 + 120);
  *(void *)(a1 + 352) = *(void *)v11;
  *(_BYTE *)(a1 + 601) = *(_BYTE *)(v11 + 19);
  LOBYTE(v11) = *(_BYTE *)(v11 + 18);
  uint64_t v12 = *(void *)(a1 + 168);
  float v13 = *(double *)(a1 + 176);
  *(float *)(a1 + 416) = v13;
  *(_BYTE *)(a1 + 602) = v11;
  *(void *)(a1 + 512) = v12;
  for (uint64_t i = *(void *)(a1 + 208); i != *(void *)(a1 + 216); i += 72LL)
  {
    if (*(_DWORD *)(i + 64) == 1)
    {
      *(void *)(a1 + 472) = *(void *)(i + 16);
      *(void *)(a1 + 480) = *(void *)(i + 56);
      if (*(_BYTE *)(a1 + 712)) {
        *(void *)(a1 + 408) = *(void *)(a1 + 344);
      }
      *(_BYTE *)(a1 + 505) = *(_BYTE *)(a1 + 745);
      uint64_t v36 = 0LL;
      double v37 = 0.0;
      sub_100D2E36C( (double *)(a1 + 672),  &v37,  (double *)&v36,  *(double *)(a1 + 152),  *(double *)(a1 + 160),  *(double *)(a1 + 312),  *(float *)(a1 + 144),  *(double *)(a1 + 296),  *(double *)(a1 + 304));
      uint64_t v19 = *(void *)(a1 + 120);
      BOOL v17 = v19 != 0;
      if (v19)
      {
        uint64_t v20 = *(int *)(v19 + 20);
        double v21 = 0.5;
        double v22 = 1.0;
        if ((_DWORD)v20 == 9 || (int v23 = *(_DWORD *)(v19 + 72), v23 == 6))
        {
          double v24 = 1.0;
        }

        else
        {
          double v24 = 1.0;
          if (v23 != 255)
          {
            double v25 = *(double *)(v19 + 96);
            if (v25 < 0.000001)
            {
              double v25 = 1.0;
              if ((v20 & 0xFFFFFFFE) != 8)
              {
                int v26 = *(unsigned __int8 *)(v19 + 16);
                if (v20 > 7)
                {
                  double v25 = dbl_1012E00F0[v26 == 0];
                }

                else
                {
                  if (v26) {
                    __int16 v27 = (double *)&unk_101363BE8;
                  }
                  else {
                    __int16 v27 = (double *)&unk_101363C28;
                  }
                  double v25 = v27[v20];
                }
              }
            }

            double v24 = v25 + 1.0;
            double v21 = v25 * 0.5 + 1.0;
          }
        }

        *(double *)(a1 + 664) = v24;
        if (v37 >= 0.0) {
          double v22 = -1.0;
        }
        double v33 = v37 + v22 * v21;
        *(void *)(a1 + 488) = v36;
        *(double *)(a1 + 496) = v33;
      }

      else
      {
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188A8E0);
        }
        double v28 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
        {
          std::string::size_type v29 = *(void *)(a1 + 248);
          LODWORD(buf[0].__r_.__value_.__l.__data_) = 134349056;
          *(std::string::size_type *)((char *)buf[0].__r_.__value_.__r.__words + 4) = v29;
          _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,Unexpected,unable to determine roadWidth when filling crumb",  (uint8_t *)buf,  0xCu);
        }

        if (sub_1002921D0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10188A8E0);
          }
          uint64_t v30 = *(void *)(a1 + 248);
          int v38 = 134349056;
          uint64_t v39 = v30;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,Unexpected,unable to determine roadWidth when filling crumb",  &v38,  12);
          std::stringbuf::string_type v32 = (std::string *)v31;
          sub_10029211C("Generic", 1LL, 0, 0LL, "BOOL CLParticleMM::MMSnapData::fillCrumb()", "%s\n", v31);
          if (v32 != buf) {
            free(v32);
          }
        }
      }

      return v17;
    }
  }

  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_10188A8E0);
  }
  __int16 v15 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
  {
    std::string::size_type v16 = *(void *)(a1 + 248);
    LODWORD(buf[0].__r_.__value_.__l.__data_) = 134349056;
    *(std::string::size_type *)((char *)buf[0].__r_.__value_.__r.__words + 4) = v16;
    _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,Unexpected,RawGPSScore not available",  (uint8_t *)buf,  0xCu);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    uint64_t v34 = *(void *)(a1 + 248);
    int v38 = 134349056;
    uint64_t v39 = v34;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,Unexpected,RawGPSScore not available",  &v38,  12);
    uint64_t v10 = (std::string *)v35;
    sub_10029211C("Generic", 1LL, 0, 0LL, "BOOL CLParticleMM::MMSnapData::fillCrumb()", "%s\n", v35);
LABEL_57:
    if (v10 != buf) {
      free(v10);
    }
  }

  return 0LL;
}

void sub_100EA9918( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_100EA993C(uint64_t *a1, double *a2, double *a3, int a4)
{
  uint64_t v4 = *a1;
  if (!*a1)
  {
    *a2 = 0.0;
    double v9 = 0.0;
    goto LABEL_12;
  }

  uint64_t v5 = *(int *)(v4 + 20);
  if ((_DWORD)v5 == 9 || ((v6 = *(_DWORD *)(v4 + 72), v6 != 255) ? (BOOL v7 = v6 == 6) : (BOOL v7 = 1), v7))
  {
    double v8 = dbl_10135D5D0[*(_BYTE *)(v4 + 16) == 0];
    if (a4) {
      double v8 = 1.0;
    }
    *a2 = v8;
    double v9 = v8 * 0.5;
    goto LABEL_12;
  }

  double v11 = *(double *)(v4 + 96);
  *a2 = v11;
  if (v11 < 0.000001)
  {
    if ((v5 & 0xFFFFFFFE) == 8)
    {
      double v11 = dbl_1012E00F0[*(_BYTE *)(v4 + 16) == 0];
      if (a4) {
        double v11 = 1.0;
      }
      goto LABEL_27;
    }

    if (*(_BYTE *)(v4 + 16))
    {
      if (v5 >= 8)
      {
        double v11 = 5.55000019;
        goto LABEL_27;
      }

      uint64_t v12 = (double *)&unk_101363BE8;
    }

    else
    {
      if (v5 >= 8)
      {
        double v11 = 7.4000001;
        goto LABEL_27;
      }

      uint64_t v12 = (double *)&unk_101363C28;
    }

    double v11 = v12[v5];
LABEL_27:
    *a2 = v11;
  }

  *a3 = v11 * 0.5;
  if (!a4) {
    return v4 != 0;
  }
  *a2 = *a2 + 1.0;
  double v9 = *a3 + 1.0;
LABEL_12:
  *a3 = v9;
  return v4 != 0;
}

void sub_100EA9A68(double *a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(unsigned __int8 *)(a2 + 504);
  if (*(_BYTE *)(a2 + 504))
  {
    if (!*(_BYTE *)(a3 + 504))
    {
      *a1 = 0.0;
      a1[1] = 0.0;
      a1[2] = 1.0;
    }
  }

  else if (*(_BYTE *)(a3 + 504))
  {
    *(_OWORD *)a1 = xmmword_1013394A0;
    a1[2] = 0.0;
  }

  double v6 = *(double *)(a2 + 264);
  double v7 = -0.1;
  if (v6 >= 0.0)
  {
    double v8 = *(double *)(a3 + 264);
    if (v8 >= 0.0) {
      double v7 = vabdd_f64(v6, v8) * 0.1;
    }
  }

  if (v5) {
    BOOL v9 = *(_BYTE *)(a2 + 505) == 0;
  }
  else {
    BOOL v9 = 0;
  }
  if (v9) {
    double v10 = v7;
  }
  else {
    double v10 = -v7;
  }
  double v11 = *a1;
  double v12 = a1[1] + v10;
  if (v9) {
    double v7 = -v7;
  }
  double v13 = fmin(fmax(a1[2] + v7, 0.0), 1.0);
  double v14 = fmin(fmax(v12, 0.0), 1.0);
  a1[1] = v14;
  a1[2] = v13;
  double v15 = v13 * *(double *)(a2 + 296) + v14 * *(double *)(a2 + 392);
  double v16 = v13 * *(double *)(a2 + 304) + v14 * *(double *)(a2 + 400);
  *a1 = v11 + 1.0;
  *(double *)(a2 + 392) = v15;
  *(double *)(a2 + 400) = v16;
  *(double *)(a2 + 568) = v15;
  *(double *)(a2 + 576) = v16;
  *(_DWORD *)(a2 + 520) = 3;
  if (v13 >= 1.0)
  {
    int v17 = 0;
  }

  else
  {
    if (v14 < 1.0) {
      goto LABEL_23;
    }
    int v17 = 1;
  }

  *(_DWORD *)(a2 + 520) = v17;
LABEL_23:
  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_10188A8E0);
  }
  double v18 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v19 = *(void *)(a2 + 248);
    uint64_t v21 = *((void *)a1 + 1);
    uint64_t v20 = *((void *)a1 + 2);
    double v22 = *a1;
    int v23 = *(_DWORD *)(a2 + 520);
    *(_DWORD *)__int128 buf = 134350080;
    uint64_t v42 = v19;
    __int16 v43 = 2050;
    uint64_t v44 = v20;
    __int16 v45 = 2050;
    uint64_t v46 = v21;
    __int16 v47 = 2050;
    double v48 = v22;
    __int16 v49 = 1026;
    int v50 = v23;
    _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,fRawWeight,%{public}.2lf,fSnapWeight,%{public}.2lf,fTimeInMode,%{public}.2lf,snapType,%{public}d",  buf,  0x30u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    uint64_t v24 = *(void *)(a2 + 248);
    uint64_t v26 = *((void *)a1 + 1);
    uint64_t v25 = *((void *)a1 + 2);
    double v27 = *a1;
    int v28 = *(_DWORD *)(a2 + 520);
    int v31 = 134350080;
    uint64_t v32 = v24;
    __int16 v33 = 2050;
    uint64_t v34 = v25;
    __int16 v35 = 2050;
    uint64_t v36 = v26;
    __int16 v37 = 2050;
    double v38 = v27;
    __int16 v39 = 1026;
    int v40 = v28;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,fRawWeight,%{public}.2lf,fSnapWeight,%{public}.2lf,fTimeInMode,%{public}.2lf,snapType,%{public}d",  &v31,  48);
    uint64_t v30 = (uint8_t *)v29;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLParticleMM::MMPartialMatcher::getPartialMatchedSolution(MMSnapData &, const MMSnapData &)",  "%s\n",  v29);
    if (v30 != buf) {
      free(v30);
    }
  }

BOOL sub_100EA9D80(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  if (*(void *)a2)
  {
    if (!a1[136]) {
      sub_1000F2F30(a1 + 136, (uint64_t *)a2);
    }
    unint64_t v5 = a1[134];
    if (v5 >= a1[135])
    {
      uint64_t v6 = sub_100D73E7C(a1 + 133, a2);
    }

    else
    {
      sub_100D73FA0((uint64_t)(a1 + 135), a1[134], a2);
      uint64_t v6 = v5 + 112;
      a1[134] = v5 + 112;
    }

    a1[134] = v6;
    double v12 = *(double *)(a2 + 48);
  }

  else
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    double v7 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      double v8 = *(double *)a1;
      *(_DWORD *)__int128 buf = 134349056;
      double v17 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,Unexpected, null road when trying to add particles into candidate",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      double v9 = *(double *)a1;
      int v14 = 134349056;
      double v15 = v9;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,Unexpected, null road when trying to add particles into candidate",  &v14,  12);
      double v11 = (uint8_t *)v10;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLParticleMM::MMCandidate::addParticle(const CLParticleMapMatcherCommon::Particle &)",  "%s\n",  v10);
      if (v11 != buf) {
        free(v11);
      }
    }
  }

  return v3 != 0;
}

void sub_100EA9FB8(_Unwind_Exception *a1)
{
  *(void *)(v1 + 1072) = v2;
  _Unwind_Resume(a1);
}

BOOL sub_100EA9FC4(uint64_t a1, double a2)
{
  uint64_t v2 = *(void *)(a1 + 1072);
  uint64_t v3 = *(void *)(a1 + 1064);
  if (v2 != v3)
  {
    uint64_t v6 = *(void *)(a1 + 1088);
    sub_1001AC068((void *)v6);
    if (*(double *)(v6 + 40) <= 0.0)
    {
      double v14 = 0.0;
      double v16 = 1.0;
    }

    else
    {
      uint64_t v7 = *(void *)(a1 + 1072);
      uint64_t v8 = *(void *)(a1 + 1064);
      double v9 = 0.0;
      if (v7 != v8)
      {
        uint64_t v10 = 0x6DB6DB6DB6DB6DB7LL * ((v7 - v8) >> 4);
        double v11 = 0.0;
        do
        {
          double v11 = v11 + *(double *)(v8 + 48);
          v8 += 112LL;
        }

        while (v8 != v7);
        double v9 = v11 / (double)(unint64_t)v10;
      }

      uint64_t v12 = *(void *)(a1 + 1088);
      sub_1001AC068((void *)v12);
      double v13 = a2 / *(double *)(v12 + 40);
      if (v13 > 1.0) {
        double v13 = 1.0;
      }
      if (v9 - v13 >= 0.0) {
        double v14 = v9 - v13;
      }
      else {
        double v14 = 0.0;
      }
      double v15 = v9 + v13;
      if (v15 <= 1.0) {
        double v16 = v15;
      }
      else {
        double v16 = 1.0;
      }
    }

    uint64_t v17 = *(void *)(a1 + 1064);
    uint64_t v18 = *(void *)(a1 + 1072);
    if (v17 == v18)
    {
      uint64_t v24 = *(void *)(a1 + 1064);
    }

    else
    {
      do
      {
        double v19 = *(double *)(v17 + 48);
        if (v19 >= v14 && v19 <= v16)
        {
          ++*(_DWORD *)(a1 + 120);
          if (*(double *)(v17 + 56) > *(double *)(a1 + 64))
          {
            sub_1000F2F30((void *)(a1 + 8), (uint64_t *)v17);
            uint64_t v21 = *(void *)(v17 + 48);
            __int128 v22 = *(_OWORD *)(v17 + 32);
            *(_OWORD *)(a1 + 24) = *(_OWORD *)(v17 + 16);
            *(_OWORD *)(a1 + 40) = v22;
            *(void *)(a1 + 56) = v21;
            __int128 v23 = *(_OWORD *)(v17 + 56);
            *(_OWORD *)(a1 + 73) = *(_OWORD *)(v17 + 65);
            *(_OWORD *)(a1 + 64) = v23;
            if (v17 != a1 + 8) {
              sub_100BDD0F8( (char *)(a1 + 96),  *(char **)(v17 + 88),  *(void *)(v17 + 96),  0x8E38E38E38E38E39LL * ((uint64_t)(*(void *)(v17 + 96) - *(void *)(v17 + 88)) >> 3));
            }
          }
        }

        v17 += 112LL;
      }

      while (v17 != v18);
      uint64_t v24 = *(void *)(a1 + 1072);
      uint64_t v17 = *(void *)(a1 + 1064);
    }

    *(_DWORD *)(a1 + 124) = -1227133513 * ((unint64_t)(v24 - v17) >> 4);
  }

  return v2 != v3;
}

BOOL sub_100EAA1B8(uint64_t a1, int *a2)
{
  BOOL v2 = *(_BYTE *)(a1 + 152) == 0;
  if (*(_BYTE *)(a1 + 152)) {
    BOOL v3 = *(_BYTE *)(a1 + 153) == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3) {
    return v2;
  }
  if (*(_DWORD *)(a1 + 124) == *(_DWORD *)(a1 + 1104))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    uint64_t v6 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v7 = *(void *)(a1 + 176);
      int v8 = *(_DWORD *)(a1 + 124);
      int v9 = *(_DWORD *)(a1 + 1104);
      int v10 = *a2;
      *(_DWORD *)__int128 buf = 134349824;
      uint64_t v108 = v7;
      __int16 v109 = 1026;
      *(_DWORD *)v110 = v8;
      *(_WORD *)&v110[4] = 1026;
      *(_DWORD *)&v110[6] = v9;
      LOWORD(v111) = 1026;
      *(_DWORD *)((char *)&v111 + 2) = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,shallConsiderOutgoingCandidate,ambiguityCase,combined,%{public}d,secondBestCombined,%{publ ic}d,sigEnv,%{public}d",  buf,  0x1Eu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      uint64_t v11 = *(void *)(a1 + 176);
      int v12 = *(_DWORD *)(a1 + 124);
      int v13 = *(_DWORD *)(a1 + 1104);
      int v14 = *a2;
      int v91 = 134349824;
      uint64_t v92 = v11;
      __int16 v93 = 1026;
      *(_DWORD *)v94 = v12;
      *(_WORD *)&v94[4] = 1026;
      *(_DWORD *)&v94[6] = v13;
      LOWORD(v95) = 1026;
      *(_DWORD *)((char *)&v95 + 2) = v14;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,shallConsiderOutgoingCandidate,ambiguityCase,combined,%{public}d,secondBestCombined,%{publ ic}d,sigEnv,%{public}d",  &v91,  30);
      double v16 = (uint8_t *)v15;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::MMCandidate::shallConsiderOutgoingCandidate(const CLSignalEnvironmentProvider_Type::SignalEnv ironmentInfo &) const",  "%s\n",  v15);
      if (v16 != buf) {
        free(v16);
      }
    }

    return 0LL;
  }

  if (*(_DWORD *)(a1 + 1044) <= (signed int)(-1227133513 * ((*(void *)(a1 + 1072) - *(void *)(a1 + 1064)) >> 4)))
  {
    double v26 = *(double *)(a1 + 272);
    double v27 = *(double *)(a1 + 768);
    double v28 = *(double *)(a1 + 336);
    double v29 = fmod(v27 - v28, 360.0);
    if (v29 < 0.0) {
      double v29 = v29 + 360.0;
    }
    if (v29 > 180.0) {
      double v29 = v29 + -360.0;
    }
    if (v29 > 75.0)
    {
      sub_100292890(v28 + v29 * 0.5);
      double v31 = v30;
      double v32 = fmod(*(double *)(a1 + 272) - v30, 360.0);
      if (v32 < 0.0) {
        double v32 = v32 + 360.0;
      }
      if (v32 <= 180.0) {
        double v33 = v32;
      }
      else {
        double v33 = v32 + -360.0;
      }
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      double v34 = fabs(v33);
      __int16 v35 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v36 = *(void *)(a1 + 176);
        uint64_t v37 = *(void *)(a1 + 272);
        uint64_t v38 = *(void *)(a1 + 336);
        uint64_t v39 = *(void *)(a1 + 768);
        *(_DWORD *)__int128 buf = 134350592;
        uint64_t v108 = v36;
        __int16 v109 = 2050;
        *(void *)v110 = v37;
        *(_WORD *)&v110[8] = 2050;
        uint64_t v111 = v38;
        __int16 v112 = 2050;
        uint64_t v113 = v39;
        __int16 v114 = 2050;
        *(double *)v115 = v31;
        *(_WORD *)&v115[8] = 2050;
        *(double *)v116 = v34;
        *(_WORD *)&v116[8] = 1026;
        *(_DWORD *)&v116[10] = v34 < 10.0;
        _os_log_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,shallConsiderOutgoingCandidate,lowerOutgoingCountCase,course,%{public}.2lf,snapCourse,%{ public}.2lf,outgoingSnapCourse,%{public}.2lf,approxCourseOfTurningRoad,%{public}.2lf,turningCourseDiff,%{publi c}.2lf,outgoingCondition,%{public}d",  buf,  0x44u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188A8E0);
        }
        uint64_t v84 = *(void *)(a1 + 176);
        uint64_t v85 = *(void *)(a1 + 272);
        uint64_t v86 = *(void *)(a1 + 336);
        uint64_t v87 = *(void *)(a1 + 768);
        int v91 = 134350592;
        uint64_t v92 = v84;
        __int16 v93 = 2050;
        *(void *)v94 = v85;
        *(_WORD *)&v94[8] = 2050;
        uint64_t v95 = v86;
        __int16 v96 = 2050;
        uint64_t v97 = v87;
        __int16 v98 = 2050;
        *(double *)v99 = v31;
        *(_WORD *)&v99[8] = 2050;
        *(double *)v100 = v34;
        *(_WORD *)&v100[8] = 1026;
        *(_DWORD *)&v100[10] = v34 < 10.0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,shallConsiderOutgoingCandidate,lowerOutgoingCountCase,course,%{public}.2lf,snapCourse,%{ public}.2lf,outgoingSnapCourse,%{public}.2lf,approxCourseOfTurningRoad,%{public}.2lf,turningCourseDiff,%{publi c}.2lf,outgoingCondition,%{public}d",  &v91,  68);
        int v89 = (uint8_t *)v88;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::MMCandidate::shallConsiderOutgoingCandidate(const CLSignalEnvironmentProvider_Type::SignalE nvironmentInfo &) const",  "%s\n",  v88);
        if (v89 != buf) {
          free(v89);
        }
      }

      if (v34 < 10.0) {
        return 1LL;
      }
      double v26 = *(double *)(a1 + 272);
      double v27 = *(double *)(a1 + 768);
      double v28 = *(double *)(a1 + 336);
    }

    double v40 = fmod(v26 - v27, 360.0);
    if (v40 < 0.0) {
      double v40 = v40 + 360.0;
    }
    if (v40 > 180.0) {
      double v40 = v40 + -360.0;
    }
    double v41 = fabs(v40);
    double v42 = fmod(v26 - v28, 360.0);
    if (v42 < 0.0) {
      double v42 = v42 + 360.0;
    }
    if (v42 > 180.0) {
      double v42 = v42 + -360.0;
    }
    double v43 = fabs(v42);
    BOOL v44 = v43 >= 15.0 && v41 < 15.0;
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    __int16 v45 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v46 = *(void *)(a1 + 176);
      uint64_t v47 = *(void *)(a1 + 272);
      uint64_t v48 = *(void *)(a1 + 336);
      uint64_t v49 = *(void *)(a1 + 768);
      int v50 = *a2;
      *(_DWORD *)__int128 buf = 134350848;
      uint64_t v108 = v46;
      __int16 v109 = 2050;
      *(void *)v110 = v47;
      *(_WORD *)&v110[8] = 2050;
      uint64_t v111 = v48;
      __int16 v112 = 2050;
      uint64_t v113 = v49;
      __int16 v114 = 1026;
      *(_DWORD *)v115 = v41 < 15.0;
      *(_WORD *)&v115[4] = 1026;
      *(_DWORD *)&v115[6] = v43 < 15.0;
      *(_WORD *)v116 = 1026;
      *(_DWORD *)&v116[2] = v50;
      *(_WORD *)&v116[6] = 1026;
      *(_DWORD *)&v116[8] = v44;
      _os_log_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,shallConsiderOutgoingCandidate,lowerOutgoingCountCase,course,%{public}.2lf,snapCourse,%{pu blic}.2lf,outgoingSnapCourse,%{public}.2lf,isCrumbCourseAlignedWithOutgoing,%{public}d,isCrumbCourseAlignedWithI ncoming,%{public}d,sigEnv,%{public}d,outgoingCondition,%{public}d",  buf,  0x42u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      uint64_t v77 = *(void *)(a1 + 176);
      uint64_t v78 = *(void *)(a1 + 272);
      uint64_t v79 = *(void *)(a1 + 336);
      uint64_t v80 = *(void *)(a1 + 768);
      int v81 = *a2;
      int v91 = 134350848;
      uint64_t v92 = v77;
      __int16 v93 = 2050;
      *(void *)v94 = v78;
      *(_WORD *)&v94[8] = 2050;
      uint64_t v95 = v79;
      __int16 v96 = 2050;
      uint64_t v97 = v80;
      __int16 v98 = 1026;
      *(_DWORD *)v99 = v41 < 15.0;
      *(_WORD *)&v99[4] = 1026;
      *(_DWORD *)&v99[6] = v43 < 15.0;
      *(_WORD *)v100 = 1026;
      *(_DWORD *)&v100[2] = v81;
      *(_WORD *)&v100[6] = 1026;
      *(_DWORD *)&v100[8] = v44;
      LODWORD(v90) = 66;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,shallConsiderOutgoingCandidate,lowerOutgoingCountCase,course,%{public}.2lf,snapCourse,%{pu blic}.2lf,outgoingSnapCourse,%{public}.2lf,isCrumbCourseAlignedWithOutgoing,%{public}d,isCrumbCourseAlignedWithI ncoming,%{public}d,sigEnv,%{public}d,outgoingCondition,%{public}d",  &v91,  v90);
      double v83 = (uint8_t *)v82;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::MMCandidate::shallConsiderOutgoingCandidate(const CLSignalEnvironmentProvider_Type::SignalEnv ironmentInfo &) const",  "%s\n",  v82);
      if (v83 != buf) {
        free(v83);
      }
    }

    return v44;
  }

  double v17 = *(double *)(a1 + 336);
  double v18 = *(double *)(a1 + 768);
  double v19 = fmod(v17 - v18, 360.0);
  if (v19 < 0.0) {
    double v19 = v19 + 360.0;
  }
  if (v19 > 180.0) {
    double v19 = v19 + -360.0;
  }
  double v20 = fabs(v19);
  double v21 = *(double *)(a1 + 360);
  if (v21 <= 0.0 || (double v22 = *(double *)(a1 + 272), v22 < 0.0))
  {
    BOOL v23 = 0;
    goto LABEL_23;
  }

  double v51 = fmod(v22 - v18, 360.0);
  if (v51 < 0.0) {
    double v51 = v51 + 360.0;
  }
  if (v51 > 180.0) {
    double v51 = v51 + -360.0;
  }
  double v52 = fabs(v51);
  BOOL v53 = *(double *)(a1 + 1048) >= 7.5;
  BOOL v23 = v52 < 25.0;
  if (v52 < 25.0) {
    BOOL v53 = 1;
  }
  if (v53 && v20 >= 45.0 && v52 >= 25.0)
  {
    if (v21 < 20.0)
    {
      double v55 = fmod(v22 - v17, 360.0);
      BOOL v23 = 0;
      if (v55 < 0.0) {
        double v55 = v55 + 360.0;
      }
      if (v55 > 180.0) {
        double v55 = v55 + -360.0;
      }
      if (fabs(v55) < 10.0)
      {
        int v25 = 1;
        goto LABEL_88;
      }

      goto LABEL_23;
    }

    BOOL v23 = 0;
  }

  if (!v53)
  {
LABEL_87:
    int v25 = 0;
    goto LABEL_88;
  }

uint64_t sub_100EAAEA0(uint64_t a1, uint64_t *a2, __int128 *a3)
{
  uint64_t v3 = *((void *)a3 + 1);
  if (!*a2)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    uint64_t v85 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)__int128 buf = 134349056;
      *(void *)&uint8_t buf[4] = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v85,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,Unexpected, geometry is null",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    *(_DWORD *)BOOL v118 = 134349056;
    *(void *)&v118[4] = v3;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,Unexpected, geometry is null",  v118,  12);
    uint64_t v87 = (char *)v86;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLParticleMM::MMCandidateVector::assessCandidates(CLMapGeometryPtr, const CLMapCrumb &)",  "%s\n",  v86);
    goto LABEL_108;
  }

  if (!*(void *)(a1 + 24))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    __int16 v88 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)__int128 buf = 134349056;
      *(void *)&uint8_t buf[4] = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v88,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,Unexpected, zero candidates,assessCandidates",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    *(_DWORD *)BOOL v118 = 134349056;
    *(void *)&v118[4] = v3;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,Unexpected, zero candidates,assessCandidates",  v118,  12);
    uint64_t v87 = (char *)v89;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLParticleMM::MMCandidateVector::assessCandidates(CLMapGeometryPtr, const CLMapCrumb &)",  "%s\n",  v89);
LABEL_108:
    if (v87 != buf) {
      free(v87);
    }
    return 0;
  }

  uint64_t v4 = *(void **)(a1 + 8);
  unsigned int v104 = 1;
  __int16 v103 = (void *)(a1 + 16);
  if (v4 != (void *)(a1 + 16))
  {
    v110 = (uint64_t **)(a1 + 8);
    __src = (char *)a3 + 152;
    __str = (std::string *)(a3 + 8);
    while (sub_100EA9FC4((uint64_t)(v4 + 7), 40.0))
    {
      __int128 v6 = *a3;
      __int128 v7 = a3[1];
      __int128 v8 = a3[3];
      *((_OWORD *)v4 + 16) = a3[2];
      *((_OWORD *)v4 + 17) = v8;
      *((_OWORD *)v4 + 14) = v6;
      *((_OWORD *)v4 + 15) = v7;
      __int128 v9 = a3[4];
      __int128 v10 = a3[5];
      __int128 v11 = a3[7];
      *((_OWORD *)v4 + 20) = a3[6];
      *((_OWORD *)v4 + 21) = v11;
      *((_OWORD *)v4 + 18) = v9;
      *((_OWORD *)v4 + 19) = v10;
      std::string::operator=((std::string *)(v4 + 44), __str);
      memcpy(v4 + 47, __src, 0x118uLL);
      uint64_t v12 = v4[141];
      uint64_t v13 = v4[140];
      if (v12 == v13)
      {
        double v16 = 0.0;
      }

      else
      {
        uint64_t v14 = 0x6DB6DB6DB6DB6DB7LL * ((v12 - v13) >> 4);
        double v15 = 0.0;
        do
        {
          double v15 = v15 + *(double *)(v13 + 48);
          v13 += 112LL;
        }

        while (v13 != v12);
        double v16 = v15 / (double)(unint64_t)v14;
      }

      double v117 = v16;
      if (!sub_100D3F3A8(*a2, (uint64_t)(v4 + 28), (double **)v4 + 143, *((_BYTE *)v4 + 48), &v117, 1))
      {
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188A8E0);
        }
        uint64_t v92 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)__int128 buf = 134349056;
          *(void *)&uint8_t buf[4] = v3;
          _os_log_impl( (void *)&_mh_execute_header,  v92,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,interpolateOnRoad returned false, determining mean road position",  buf,  0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10188A8E0);
          }
          *(_DWORD *)BOOL v118 = 134349056;
          *(void *)&v118[4] = v3;
          LODWORD(v100) = 12;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,interpolateOnRoad returned false, determining mean road position",  v118,  v100);
          uint64_t v87 = (char *)v93;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::MMCandidateVector::assessCandidates(CLMapGeometryPtr, const CLMapCrumb &)",  "%s\n",  v93);
          goto LABEL_108;
        }

        return 0;
      }

      double v17 = *((double *)v4 + 136);
      if (*((_BYTE *)v4 + 48)) {
        double v18 = 1.0 - v17;
      }
      else {
        double v18 = *((double *)v4 + 136);
      }
      uint64_t v19 = v4[143];
      sub_1001AC068((void *)v19);
      double v20 = v18 * *(double *)(v19 + 40);
      uint64_t v114 = (uint64_t)&v114;
      v115 = &v114;
      uint64_t v116 = 0LL;
      if (v20 <= 40.0)
      {
        if (((*(uint64_t (**)(uint64_t, uint64_t *, void *, void, uint64_t, double, double))(*(void *)*a2 + 72LL))( *a2,  &v114,  v4 + 143,  *((unsigned __int8 *)v4 + 48),  1LL,  v17,  v20 + 1.0) & 1) == 0)
        {
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10188A8E0);
          }
          uint64_t v97 = (os_log_s *)qword_1019348B8;
          if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)__int128 buf = 134349056;
            *(void *)&uint8_t buf[4] = v3;
            _os_log_impl( (void *)&_mh_execute_header,  v97,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,roadsConnected returned false, searching for connected candidates",  buf,  0xCu);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1019348B0 != -1) {
              dispatch_once(&qword_1019348B0, &stru_10188A8E0);
            }
            *(_DWORD *)BOOL v118 = 134349056;
            *(void *)&v118[4] = v3;
            LODWORD(v100) = 12;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,roadsConnected returned false, searching for connected candidates",  v118,  v100);
            __int16 v96 = (char *)v99;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::MMCandidateVector::assessCandidates(CLMapGeometryPtr, const CLMapCrumb &)",  "%s\n",  v99);
LABEL_129:
            if (v96 != buf) {
              free(v96);
            }
          }

void sub_100EABECC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29)
{
}

uint64_t sub_100EABF28(uint64_t *a1)
{
  uint64_t v30 = 0LL;
  uint64_t v31 = 0LL;
  if ((sub_100EAC500(a1, (uint64_t)&v31, &v30) & 1) == 0)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    __int128 v10 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v11 = *a1;
      *(_DWORD *)__int128 buf = 134349056;
      uint64_t v45 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,unexpectedly unable to find candidates,getSolutionCandidate",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    uint64_t v12 = *a1;
    int v32 = 134349056;
    uint64_t v33 = v12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,unexpectedly unable to find candidates,getSolutionCandidate",  &v32,  12);
    goto LABEL_38;
  }

  uint64_t v2 = v31;
  if (!v31 || !*(void *)(v31 + 8))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    uint64_t v14 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v15 = *a1;
      *(_DWORD *)__int128 buf = 134349056;
      uint64_t v45 = v15;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,unexpectedly, best candidate is nullptr",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    uint64_t v17 = *a1;
    int v32 = 134349056;
    uint64_t v33 = v17;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,unexpectedly, best candidate is nullptr",  &v32,  12);
LABEL_38:
    double v18 = (uint8_t *)v13;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "const MMCandidate *const CLParticleMM::MMCandidateVector::getSolutionCandidate() const",  "%s\n",  v13);
    if (v18 != buf) {
      free(v18);
    }
    return 0LL;
  }

  uint64_t v3 = v30;
  if (v30)
  {
    if (*(void *)(v30 + 8))
    {
      sub_100D5DAC4((uint64_t *)(v31 + 8), (uint64_t)v28);
      sub_100D5DAC4((uint64_t *)(v3 + 8), (uint64_t)v26);
      if (v26[0] == v28[0]
        && v27 != v29
        && *(_BYTE *)(v3 + 153)
        && *(_BYTE *)(v2 + 153)
        && *(_DWORD *)(v3 + 124) == *(_DWORD *)(v2 + 124)
        && sub_100BDA328(v3 + 128, (uint64_t)v28)
        && sub_100BDA328(v2 + 128, (uint64_t)v26)
        && 0x6DB6DB6DB6DB6DB7LL * ((uint64_t)(*(void *)(v3 + 1072) - *(void *)(v3 + 1064)) >> 4) > (unint64_t)(0x6DB6DB6DB6DB6DB7LL * ((uint64_t)(*(void *)(v2 + 1072) - *(void *)(v2 + 1064)) >> 4)))
      {
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188A8E0);
        }
        uint64_t v4 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v5 = *a1;
          int v6 = -1227133513 * ((*(void *)(v2 + 1072) - *(void *)(v2 + 1064)) >> 4);
          int v7 = -1227133513 * ((*(void *)(v3 + 1072) - *(void *)(v3 + 1064)) >> 4);
          int v8 = *(_DWORD *)(v2 + 124);
          int v9 = *(_DWORD *)(v3 + 124);
          *(_DWORD *)__int128 buf = 134350336;
          uint64_t v45 = v5;
          __int16 v46 = 2050;
          uint64_t v47 = v28[0];
          __int16 v48 = 1026;
          int v49 = v6;
          __int16 v50 = 1026;
          int v51 = v7;
          __int16 v52 = 1026;
          int v53 = v8;
          __int16 v54 = 1026;
          int v55 = v9;
          _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,overrode bestCandidate with alternate,roadID,%{public}lld,bestIncoming,%{public}d,altB estIncoming,%{public}d,bestCombined,%{public}d,altBestCombined,%{public}d",  buf,  0x2Eu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10188A8E0);
          }
          uint64_t v19 = *a1;
          int v20 = -1227133513 * ((*(void *)(v2 + 1072) - *(void *)(v2 + 1064)) >> 4);
          int v21 = -1227133513 * ((*(void *)(v3 + 1072) - *(void *)(v3 + 1064)) >> 4);
          int v22 = *(_DWORD *)(v2 + 124);
          int v23 = *(_DWORD *)(v3 + 124);
          int v32 = 134350336;
          uint64_t v33 = v19;
          __int16 v34 = 2050;
          uint64_t v35 = v28[0];
          __int16 v36 = 1026;
          int v37 = v20;
          __int16 v38 = 1026;
          int v39 = v21;
          __int16 v40 = 1026;
          int v41 = v22;
          __int16 v42 = 1026;
          int v43 = v23;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,overrode bestCandidate with alternate,roadID,%{public}lld,bestIncoming,%{public}d,altB estIncoming,%{public}d,bestCombined,%{public}d,altBestCombined,%{public}d",  &v32,  46);
          unint64_t v25 = (uint8_t *)v24;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "const MMCandidate *const CLParticleMM::MMCandidateVector::getSolutionCandidate() const",  "%s\n",  v24);
          if (v25 != buf) {
            free(v25);
          }
        }

        return v3;
      }
    }
  }

  return v2;
}

void *sub_100EAC500(uint64_t *a1, uint64_t a2, void *a3)
{
  if (a1[3])
  {
    uint64_t result = sub_100EAC784(a1);
    *(void *)a2 = result;
    if (!result) {
      return result;
    }
    if (result[1])
    {
      *a3 = 0LL;
      int v7 = (uint64_t *)a1[1];
      if (v7 != a1 + 2)
      {
        int v8 = 0;
        do
        {
          sub_100D5DAC4((uint64_t *)(*(void *)a2 + 8LL), (uint64_t)buf);
          if (!sub_100BDA328((uint64_t)(v7 + 4), (uint64_t)buf))
          {
            int v9 = *((_DWORD *)v7 + 45);
            if (v9 > v8)
            {
              *a3 = v7 + 7;
              int v8 = v9;
            }
          }

          __int128 v10 = (uint64_t *)v7[1];
          if (v10)
          {
            do
            {
              uint64_t v11 = v10;
              __int128 v10 = (uint64_t *)*v10;
            }

            while (v10);
          }

          else
          {
            do
            {
              uint64_t v11 = (uint64_t *)v7[2];
              BOOL v12 = *v11 == (void)v7;
              int v7 = v11;
            }

            while (!v12);
          }

          int v7 = v11;
        }

        while (v11 != a1 + 2);
      }

      return (void *)(*(void *)a2 != 0LL);
    }

    return 0LL;
  }

  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_10188A8E0);
  }
  uint64_t v13 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
  {
    uint64_t v14 = *a1;
    *(_DWORD *)__int128 buf = 134349056;
    uint64_t v22 = v14;
    _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,unexpectedly zero candidates,getAlternateBestCandidate",  buf,  0xCu);
  }

  BOOL v15 = sub_1002921D0(115, 0);
  uint64_t result = 0LL;
  if (v15)
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    uint64_t v16 = *a1;
    int v19 = 134349056;
    uint64_t v20 = v16;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,unexpectedly zero candidates,getAlternateBestCandidate",  &v19,  12);
    double v18 = (uint8_t *)v17;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLParticleMM::MMCandidateVector::getBestAndAlternateBestCandidate(const MMCandidate *&, const MMCandidate *&) const",  "%s\n",  v17);
    if (v18 != buf) {
      free(v18);
    }
    return 0LL;
  }

  return result;
}

void *sub_100EAC784(uint64_t *a1)
{
  if (!a1[3])
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    int v9 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v10 = *a1;
      *(_DWORD *)__int128 buf = 134349056;
      uint64_t v17 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,unexpectedly zero candidates,getBestCandidate",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      uint64_t v11 = *a1;
      int v14 = 134349056;
      uint64_t v15 = v11;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,unexpectedly zero candidates,getBestCandidate",  &v14,  12);
      uint64_t v13 = (uint8_t *)v12;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "const MMCandidate *const CLParticleMM::MMCandidateVector::getBestCandidate() const",  "%s\n",  v12);
      if (v13 != buf) {
        free(v13);
      }
    }

    return 0LL;
  }

  uint64_t v2 = (uint64_t *)a1[1];
  uint64_t v3 = a1 + 2;
  if (v2 == a1 + 2) {
    return 0LL;
  }
  uint64_t result = 0LL;
  int v5 = 0;
  do
  {
    if (*((_DWORD *)v2 + 45) > v5)
    {
      int v5 = *((_DWORD *)v2 + 45);
      uint64_t result = v2 + 7;
    }

    int v6 = (uint64_t *)v2[1];
    if (v6)
    {
      do
      {
        int v7 = v6;
        int v6 = (uint64_t *)*v6;
      }

      while (v6);
    }

    else
    {
      do
      {
        int v7 = (uint64_t *)v2[2];
        BOOL v8 = *v7 == (void)v2;
        uint64_t v2 = v7;
      }

      while (!v8);
    }

    uint64_t v2 = v7;
  }

  while (v7 != v3);
  return result;
}

double sub_100EAC9A8(uint64_t *a1)
{
  if (a1[3])
  {
    uint64_t v2 = sub_100EABF28(a1);
    double v3 = 0.0;
    if (v2)
    {
      uint64_t v4 = (uint64_t *)(v2 + 8);
      if (*(void *)(v2 + 8))
      {
        int v5 = (uint64_t *)a1[1];
        if (v5 != a1 + 2)
        {
          do
          {
            sub_100D5DAC4(v4, (uint64_t)buf);
            BOOL v6 = sub_100BDA328((uint64_t)(v5 + 4), (uint64_t)buf);
            double v7 = *((double *)v5 + 15);
            if (v7 <= v3) {
              double v7 = v3;
            }
            if (!v6) {
              double v3 = v7;
            }
            BOOL v8 = (uint64_t *)v5[1];
            if (v8)
            {
              do
              {
                int v9 = v8;
                BOOL v8 = (uint64_t *)*v8;
              }

              while (v8);
            }

            else
            {
              do
              {
                int v9 = (uint64_t *)v5[2];
                BOOL v10 = *v9 == (void)v5;
                int v5 = v9;
              }

              while (!v10);
            }

            int v5 = v9;
          }

          while (v9 != a1 + 2);
        }
      }
    }
  }

  else
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    uint64_t v11 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v12 = *a1;
      *(_DWORD *)__int128 buf = 134349056;
      uint64_t v20 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,unexpectedly zero candidates,getSecondBestCandidate",  buf,  0xCu);
    }

    double v3 = 0.0;
    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      uint64_t v14 = *a1;
      int v17 = 134349056;
      uint64_t v18 = v14;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,unexpectedly zero candidates,getSecondBestCandidate",  &v17,  12);
      uint64_t v16 = (uint8_t *)v15;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "double CLParticleMM::MMCandidateVector::getBestParticleScoreForAlternateCandidate() const",  "%s\n",  v15);
      if (v16 != buf) {
        free(v16);
      }
    }
  }

  return v3;
}

uint64_t sub_100EACC08(double *a1, uint64_t *a2, double a3)
{
  uint64_t v5 = *a2;
  uint64_t v35 = a2[1];
  if (*a2 == v35)
  {
LABEL_32:
    *a1 = a3;
    return 1LL;
  }

  BOOL v6 = (uint64_t **)(a1 + 1);
  __asm { FMOV            V0.2D, #-1.0 }

  __int128 v34 = _Q0;
  while (1)
  {
    uint64_t v12 = *(std::__shared_weak_count **)(v5 + 8);
    uint64_t v110 = *(void *)v5;
    double v111 = v12;
    if (v12)
    {
      p_shared_owners = (unint64_t *)&v12->__shared_owners_;
      do
        unint64_t v14 = __ldxr(p_shared_owners);
      while (__stxr(v14 + 1, p_shared_owners));
    }

    sub_100BDA324((uint64_t)v112, (uint64_t)&v110, *(_BYTE *)(v5 + 20));
    uint64_t v15 = v111;
    if (v111)
    {
      uint64_t v16 = (unint64_t *)&v111->__shared_owners_;
      do
        unint64_t v17 = __ldaxr(v16);
      while (__stlxr(v17 - 1, v16));
      if (!v17)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }

    v36[0] = (__int128 *)v112;
    uint64_t v18 = sub_100ECB1EC(v6, (uint64_t)v112, (uint64_t)&unk_1012CF090, v36);
    if (!sub_100EA9D80(v18 + 7, v5)) {
      return 0LL;
    }
LABEL_13:
    v5 += 112LL;
    if (v5 == v35) {
      goto LABEL_32;
    }
  }

  v36[0] = (__int128 *)0xBFF0000000000000LL;
  v36[1] = 0LL;
  int v37 = 0LL;
  int v38 = 0;
  __int16 v39 = 1;
  int v40 = 0;
  __int128 v41 = 0u;
  __int128 v42 = 0u;
  __int128 v43 = 0u;
  char v44 = 0;
  __int128 v45 = 0u;
  __int128 v46 = 0u;
  __int128 v47 = 0u;
  char v48 = 1;
  __int16 v49 = 0;
  uint64_t v51 = 0LL;
  uint64_t v52 = 0LL;
  uint64_t v50 = 0LL;
  __int128 v53 = v34;
  uint64_t v54 = 0LL;
  uint64_t v55 = 0LL;
  unint64_t v56 = 0xBFF0000000000000LL;
  uint64_t v68 = 0LL;
  int v69 = 0;
  memset(&v66[32], 0, 32);
  __int16 v67 = 0;
  __int128 v70 = 0u;
  __int128 v71 = 0u;
  __int128 v72 = 0u;
  memset(v73, 0, 27);
  memset(&v73[32], 0, 48);
  __int128 v65 = 0u;
  memset(v66, 0, 30);
  __int128 v63 = 0u;
  __int128 v64 = 0u;
  __int128 v61 = 0u;
  __int128 v62 = 0u;
  __int128 v59 = 0u;
  __int128 v60 = 0u;
  __int128 v57 = 0u;
  __int128 v58 = 0u;
  unint64_t v75 = 0xBFF0000000000000LL;
  uint64_t v74 = 0LL;
  uint64_t v76 = 0LL;
  uint64_t v77 = 0LL;
  unint64_t v78 = 0xBFF0000000000000LL;
  unint64_t v79 = 0xBFF0000000000000LL;
  uint64_t v80 = 0LL;
  uint64_t v81 = 0LL;
  unint64_t v82 = 0xBFF0000000000000LL;
  uint64_t v94 = 0LL;
  int v95 = 0;
  __int16 v93 = 0;
  memset(&v92[32], 0, 32);
  __int128 v98 = 0u;
  memset(v99, 0, 27);
  __int128 v96 = 0u;
  __int128 v97 = 0u;
  memset(&v99[32], 0, 48);
  __int128 v91 = 0u;
  memset(v92, 0, 30);
  __int128 v89 = 0u;
  __int128 v90 = 0u;
  __int128 v87 = 0u;
  __int128 v88 = 0u;
  __int128 v85 = 0u;
  __int128 v86 = 0u;
  __int128 v83 = 0u;
  __int128 v84 = 0u;
  uint64_t v100 = 0LL;
  __int128 v101 = xmmword_101363B80;
  uint64_t v106 = 0LL;
  uint64_t v107 = 0LL;
  int v105 = 0;
  __int128 v104 = 0u;
  __int128 v102 = 0u;
  memset(v103, 0, sizeof(v103));
  char v108 = 1;
  int v109 = -1;
  if (sub_100EA9D80((uint64_t *)v36, v5))
  {
    v36[0] = *(__int128 **)&a3;
    v113[0] = (__int128 *)v112;
    int v19 = sub_100ECB1EC(v6, (uint64_t)v112, (uint64_t)&unk_1012CF090, v113);
    sub_100EAD158((uint64_t)(v19 + 7), (uint64_t)v36);
    uint64_t v20 = (std::__shared_weak_count *)*((void *)&v104 + 1);
    if (*((void *)&v104 + 1))
    {
      int v21 = (unint64_t *)(*((void *)&v104 + 1) + 8LL);
      do
        unint64_t v22 = __ldaxr(v21);
      while (__stlxr(v22 - 1, v21));
      if (!v22)
      {
        ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
        std::__shared_weak_count::__release_weak(v20);
      }
    }

    v113[0] = (__int128 *)&v103[8];
    sub_100D73874((void ***)v113);
    if (SHIBYTE(v88) < 0) {
      operator delete(*((void **)&v87 + 1));
    }
    if (SHIBYTE(v62) < 0) {
      operator delete(*((void **)&v61 + 1));
    }
    if ((void)v45)
    {
      *((void *)&v45 + 1) = v45;
      operator delete((void *)v45);
    }

    int v23 = v37;
    if (v37)
    {
      double v24 = (unint64_t *)&v37->__shared_owners_;
      do
        unint64_t v25 = __ldaxr(v24);
      while (__stlxr(v25 - 1, v24));
      if (!v25)
      {
        ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
        std::__shared_weak_count::__release_weak(v23);
      }
    }

    goto LABEL_13;
  }

  char v27 = (std::__shared_weak_count *)*((void *)&v104 + 1);
  if (*((void *)&v104 + 1))
  {
    unint64_t v28 = (unint64_t *)(*((void *)&v104 + 1) + 8LL);
    do
      unint64_t v29 = __ldaxr(v28);
    while (__stlxr(v29 - 1, v28));
    if (!v29)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
    }
  }

  v113[0] = (__int128 *)&v103[8];
  sub_100D73874((void ***)v113);
  if (SHIBYTE(v88) < 0) {
    operator delete(*((void **)&v87 + 1));
  }
  if (SHIBYTE(v62) < 0) {
    operator delete(*((void **)&v61 + 1));
  }
  if ((void)v45)
  {
    *((void *)&v45 + 1) = v45;
    operator delete((void *)v45);
  }

  uint64_t v30 = v37;
  if (v37)
  {
    uint64_t v31 = (unint64_t *)&v37->__shared_owners_;
    do
      unint64_t v32 = __ldaxr(v31);
    while (__stlxr(v32 - 1, v31));
    if (!v32)
    {
      ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
      std::__shared_weak_count::__release_weak(v30);
    }
  }

  return 0LL;
}

void sub_100EAD0B4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, char a28)
{
}

void sub_100EAD0D8(uint64_t a1)
{
  BOOL v6 = 0LL;
  uint64_t v7 = 0LL;
  uint64_t v5 = &v6;
  uint64_t v1 = (void *)(a1 + 16);
  uint64_t v2 = (void *)(a1 + 8);
  sub_100ECA190(a1 + 8, *(void **)(a1 + 16));
  double v3 = v6;
  *(v1 - 1) = &v6;
  void *v1 = v3;
  uint64_t v4 = v7;
  v1[1] = v7;
  if (v4)
  {
    v3[2] = v1;
    uint64_t v5 = &v6;
    BOOL v6 = 0LL;
    uint64_t v7 = 0LL;
    double v3 = 0LL;
  }

  else
  {
    void *v2 = v1;
  }

  sub_100ECA190((uint64_t)&v5, v3);
}

uint64_t sub_100EAD158(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  sub_1000F2F30((void *)(a1 + 8), (uint64_t *)(a2 + 8));
  uint64_t v4 = *(void *)(a2 + 56);
  __int128 v5 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v5;
  *(void *)(a1 + 56) = v4;
  __int128 v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_OWORD *)(a1 + 64) = v6;
  if (a1 != a2) {
    sub_100BDD0F8( (char *)(a1 + 96),  *(char **)(a2 + 96),  *(void *)(a2 + 104),  0x8E38E38E38E38E39LL * ((uint64_t)(*(void *)(a2 + 104) - *(void *)(a2 + 96)) >> 3));
  }
  __int128 v7 = *(_OWORD *)(a2 + 120);
  __int128 v8 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = v8;
  *(_OWORD *)(a1 + 120) = v7;
  __int128 v9 = *(_OWORD *)(a2 + 248);
  __int128 v10 = *(_OWORD *)(a2 + 264);
  __int128 v11 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 264) = v10;
  *(_OWORD *)(a1 + 280) = v11;
  *(_OWORD *)(a1 + 248) = v9;
  __int128 v12 = *(_OWORD *)(a2 + 168);
  __int128 v13 = *(_OWORD *)(a2 + 184);
  __int128 v14 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 200) = v14;
  *(_OWORD *)(a1 + 184) = v13;
  *(_OWORD *)(a1 + 168) = v12;
  std::string::operator=((std::string *)(a1 + 296), (const std::string *)(a2 + 296));
  memcpy((void *)(a1 + 320), (const void *)(a2 + 320), 0x118uLL);
  __int128 v15 = *(_OWORD *)(a2 + 648);
  __int128 v17 = *(_OWORD *)(a2 + 600);
  __int128 v16 = *(_OWORD *)(a2 + 616);
  *(_OWORD *)(a1 + 632) = *(_OWORD *)(a2 + 632);
  *(_OWORD *)(a1 + 648) = v15;
  *(_OWORD *)(a1 + 600) = v17;
  *(_OWORD *)(a1 + 616) = v16;
  __int128 v18 = *(_OWORD *)(a2 + 712);
  __int128 v20 = *(_OWORD *)(a2 + 664);
  __int128 v19 = *(_OWORD *)(a2 + 680);
  *(_OWORD *)(a1 + 696) = *(_OWORD *)(a2 + 696);
  *(_OWORD *)(a1 + 712) = v18;
  *(_OWORD *)(a1 + 664) = v20;
  *(_OWORD *)(a1 + 680) = v19;
  std::string::operator=((std::string *)(a1 + 728), (const std::string *)(a2 + 728));
  memcpy((void *)(a1 + 752), (const void *)(a2 + 752), 0x118uLL);
  __int128 v21 = *(_OWORD *)(a2 + 1048);
  *(_OWORD *)(a1 + 1032) = *(_OWORD *)(a2 + 1032);
  *(_OWORD *)(a1 + 1048) = v21;
  if (a1 != a2) {
    sub_100ECB440( a1 + 1064,  *(void *)(a2 + 1064),  *(void *)(a2 + 1072),  0x6DB6DB6DB6DB6DB7LL * ((uint64_t)(*(void *)(a2 + 1072) - *(void *)(a2 + 1064)) >> 4));
  }
  sub_1000F2F30((void *)(a1 + 1088), (uint64_t *)(a2 + 1088));
  int v22 = *(_DWORD *)(a2 + 1136);
  __int128 v23 = *(_OWORD *)(a2 + 1120);
  *(_OWORD *)(a1 + 1104) = *(_OWORD *)(a2 + 1104);
  *(_OWORD *)(a1 + 1120) = v23;
  *(_DWORD *)(a1 + 1136) = v22;
  return a1;
}

uint64_t sub_100EAD300(uint64_t a1)
{
  uint64_t v4 = (void **)(a1 + 1064);
  sub_100D73874(&v4);
  uint64_t v2 = *(void **)(a1 + 96);
  if (v2)
  {
    *(void *)(a1 + 104) = v2;
    operator delete(v2);
  }

  sub_10000AE14(a1 + 8);
  return a1;
}

uint64_t *sub_100EAD378@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0LL;
  *(void *)(a2 + 8) = 0LL;
  *(_DWORD *)(a2 + 16) = 0;
  *(_WORD *)(a2 + 20) = 1;
  *(_DWORD *)(a2 + 24) = 0;
  *(void *)(a2 + 88) = 0LL;
  *(void *)(a2 + 96) = 0LL;
  *(void *)(a2 + 104) = 0LL;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)(a2 + 48) = 0u;
  *(_OWORD *)(a2 + 64) = 0u;
  *(_BYTE *)(a2 + 80) = 0;
  uint64_t v3 = *result;
  uint64_t v4 = result[1];
  if (*result != v4)
  {
    double v5 = 0.0;
    do
    {
      double v6 = *(double *)(v3 + 56);
      if (v6 > v5)
      {
        uint64_t result = sub_1000F2F30((void *)a2, (uint64_t *)v3);
        uint64_t v7 = *(void *)(v3 + 48);
        __int128 v8 = *(_OWORD *)(v3 + 32);
        *(_OWORD *)(a2 + 16) = *(_OWORD *)(v3 + 16);
        *(_OWORD *)(a2 + 32) = v8;
        *(void *)(a2 + 48) = v7;
        __int128 v9 = *(_OWORD *)(v3 + 56);
        *(_OWORD *)(a2 + 65) = *(_OWORD *)(v3 + 65);
        *(_OWORD *)(a2 + 56) = v9;
        if (v3 != a2) {
          uint64_t result = (uint64_t *)sub_100BDD0F8( (char *)(a2 + 88),  *(char **)(v3 + 88),  *(void *)(v3 + 96),  0x8E38E38E38E38E39LL * ((uint64_t)(*(void *)(v3 + 96) - *(void *)(v3 + 88)) >> 3));
        }
        double v5 = v6;
      }

      v3 += 112LL;
    }

    while (v3 != v4);
  }

  return result;
}

void sub_100EAD480(_Unwind_Exception *a1)
{
}

uint64_t sub_100EAD494(uint64_t **a1, uint64_t a2, double a3)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1 == v4)
  {
    __int128 v18 = a1[1];
    __int128 v11 = v18;
  }

  uint64_t v8 = (uint64_t)(a1 + 2);
  __int128 v9 = *a1;
  do
  {
    if (!*v9)
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      __int128 v13 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)__int128 buf = 134349056;
        double v24 = a3;
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,Unexpected,particle road is null while eliminateParticlesWithRoadKey",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188A8E0);
        }
        int v21 = 134349056;
        double v22 = a3;
        LODWORD(v20) = 12;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,Unexpected,particle road is null while eliminateParticlesWithRoadKey",  &v21,  v20);
        __int128 v17 = (uint8_t *)v16;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "int CLParticleMM::MMParticleVector::eliminateParticlesWithRoadKey(const CFAbsoluteTime, const CLParticleMapMat cherCommon::RoadKey)",  "%s\n",  v16);
        if (v17 != buf) {
          free(v17);
        }
      }

      sub_100ECB690((uint64_t)buf, (uint64_t)(v9 + 14), (uint64_t)a1[1], (uint64_t)v9);
      __int128 v11 = v14;
      goto LABEL_16;
    }

    sub_100D5DAC4(v9, (uint64_t)buf);
    if (sub_100BDA328((uint64_t)buf, a2))
    {
      sub_100ECB690((uint64_t)buf, (uint64_t)(v9 + 14), (uint64_t)a1[1], (uint64_t)v9);
      __int128 v11 = v10;
LABEL_16:
      a1[1] = v11;
      continue;
    }

    v9 += 14;
    __int128 v11 = a1[1];
  }

  while (v9 != v11);
  __int128 v18 = *a1;
}

BOOL sub_100EAD768(uint64_t *a1, double a2)
{
  uint64_t v3 = (double *)*a1;
  uint64_t v4 = (double *)a1[1];
  if ((double *)*a1 == v4)
  {
    double v6 = 0.0;
  }

  else
  {
    double v6 = 0.0;
    do
    {
      v3[7] = 0.0;
      v3[8] = 0.0;
      v3[9] = 0.0;
      uint64_t v7 = *((void *)v3 + 11);
      uint64_t v8 = *((void *)v3 + 12);
      double v9 = 0.0;
      if (v7 != v8)
      {
        double v10 = 0.0;
        do
        {
          if (*(_DWORD *)(v7 + 64) != 2)
          {
            double v11 = *(double *)(v7 + 24);
            double v12 = *(double *)v7 * v11;
            if (v9 > 0.0)
            {
              double v13 = log(v9);
              double v14 = log(v12);
              double v12 = exp(v13 + v14);
            }

            v3[7] = v12;
            double v10 = v10 + *(double *)(v7 + 16) * v11;
            v3[9] = v10;
            double v9 = v12;
          }

          v7 += 72LL;
        }

        while (v7 != v8);
      }

      double v6 = v6 + v9;
      v3 += 14;
    }

    while (v3 != v4);
    if (v6 > 0.0)
    {
      uint64_t v15 = *a1;
      uint64_t v16 = a1[1];
      if (*a1 != v16)
      {
        uint64_t v17 = *a1;
        do
        {
          *(double *)(v17 + 64) = *(double *)(v17 + 56) / v6;
          v17 += 112LL;
        }

        while (v17 != v16);
        if (v15 != v16)
        {
          double v18 = 0.0;
          do
          {
            sub_100EADAEC(v15);
            uint64_t v19 = *(void *)(v15 + 88);
            uint64_t v20 = *(void *)(v15 + 96);
            if (v19 == v20) {
              goto LABEL_26;
            }
            double v21 = 0.0;
            double v22 = 0.0;
            do
            {
              if (*(_DWORD *)(v19 + 64) == 2)
              {
                double v23 = *(double *)(v19 + 24);
                double v22 = v22 + *(double *)v19 * v23;
                double v21 = v21 + *(double *)(v19 + 16) * v23;
              }

              v19 += 72LL;
            }

            while (v19 != v20);
            if (v22 <= 0.0)
            {
LABEL_26:
              double v22 = *(double *)(v15 + 56);
            }

            else
            {
              double v24 = *(double *)(v15 + 56);
              if (v24 > 0.0)
              {
                double v25 = log(v24);
                double v26 = log(v22);
                double v22 = exp(v26 + v25);
              }

              *(double *)(v15 + 56) = v22;
              *(double *)(v15 + 72) = v21 + *(double *)(v15 + 72);
            }

            double v18 = v18 + v22;
            v15 += 112LL;
          }

          while (v15 != v16);
          if (v18 > 0.0)
          {
            uint64_t v27 = *a1;
            uint64_t v28 = a1[1];
            while (v27 != v28)
            {
              *(double *)(v27 + 64) = *(double *)(v27 + 56) / v18;
              v27 += 112LL;
            }

            return 1LL;
          }
        }
      }

      return 0LL;
    }
  }

  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_10188A8E0);
  }
  unint64_t v29 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)__int128 buf = 134349312;
    double v38 = a2;
    __int16 v39 = 2050;
    double v40 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,unable to normalizeLikelihoods, negative/zero totalScore after regular update,%{public}.8lf",  buf,  0x16u);
  }

  BOOL result = sub_1002921D0(115, 0);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    int v33 = 134349312;
    double v34 = a2;
    __int16 v35 = 2050;
    double v36 = v6;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,unable to normalizeLikelihoods, negative/zero totalScore after regular update,%{public}.8lf",  &v33,  22);
    unint64_t v32 = (uint8_t *)v31;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLParticleMM::MMParticleVector::computeLikelihoods(const CFAbsoluteTime, BOOL)",  "%s\n",  v31);
    if (v32 != buf) {
      free(v32);
    }
    return 0LL;
  }

  return result;
}

uint64_t sub_100EADAEC(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 88);
  uint64_t v2 = *(void *)(result + 96);
  if (v1 != v2)
  {
    double v3 = 0.0;
    uint64_t v4 = *(void *)(result + 88);
    do
    {
      double v5 = *(double *)(v4 + 24);
      if (*(_DWORD *)(v4 + 64) != 2) {
        double v5 = -0.0;
      }
      double v3 = v3 + v5;
      v4 += 72LL;
    }

    while (v4 != v2);
    BOOL v6 = (*(void *)&v3 & 0x7FFFFFFFFFFFFFFFuLL) - 1 < 0xFFFFFFFFFFFFFLL;
    BOOL v7 = ((*(void *)&v3 & 0x7FFFFFFFFFFFFFFFuLL) - 0x10000000000000LL) >> 53 < 0x3FF;
    if (v3 >= 0.0)
    {
      BOOL v7 = 0;
      BOOL v6 = 0;
    }

    if ((*(void *)&v3 & 0x7FFFFFFFFFFFFFFFLL) == 0) {
      BOOL v6 = 1;
    }
    int v8 = (*(void *)&v3 & 0x7FFFFFFFFFFFFFFFLL) == 0x7FF0000000000000LL || v6;
    if ((*(void *)&v3 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FF0000000000000LL) {
      int v8 = 1;
    }
    if (((v8 | v7) & 1) == 0)
    {
      while (v1 != v2)
      {
        if (*(_DWORD *)(v1 + 64) == 2) {
          *(double *)(v1 + 24) = *(double *)(v1 + 24) / v3;
        }
        v1 += 72LL;
      }
    }
  }

  return result;
}

BOOL sub_100EADBAC(uint64_t *a1, double a2)
{
  double v5 = a1 + 3;
  uint64_t v4 = (void *)a1[3];
  if (v4)
  {
    a1[4] = (uint64_t)v4;
    operator delete(v4);
  }

  uint64_t *v5 = 0LL;
  v5[1] = 0LL;
  v5[2] = 0LL;
  sub_100139A60((void **)v5, 0x6DB6DB6DB6DB6DB7LL * ((a1[1] - *a1) >> 4));
  a1[7] = 0xBFF0000000000000LL;
  if (!sub_100EAD768(a1, a2))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    double v24 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)__int128 buf = 134349056;
      double v34 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,unable to computeLikelihoods",  buf,  0xCu);
    }

    BOOL result = sub_1002921D0(115, 0);
    if (!result) {
      return result;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    int v29 = 134349056;
    double v30 = a2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,unable to computeLikelihoods",  &v29,  12);
    double v26 = (uint8_t *)v25;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLParticleMM::MMParticleVector::computeLikelihoodsAndCSWVector(const CFAbsoluteTime)",  "%s\n",  v25);
LABEL_43:
    if (v26 != buf) {
      free(v26);
    }
    return 0LL;
  }

  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  if (*a1 == v7)
  {
    double v11 = 0.0;
  }

  else
  {
    int v8 = a1 + 5;
    double v9 = (float *)a1[4];
    double v10 = 0.0;
    double v11 = 0.0;
    do
    {
      double v12 = *(double *)(v6 + 64);
      double v10 = v10 + v12;
      float v13 = v10;
      if ((unint64_t)v9 >= *v8)
      {
        uint64_t v15 = (float *)*v5;
        uint64_t v16 = ((uint64_t)v9 - *v5) >> 2;
        unint64_t v17 = v16 + 1;
        uint64_t v18 = *v8 - (void)v15;
        if (v18 >> 1 > v17) {
          unint64_t v17 = v18 >> 1;
        }
        else {
          unint64_t v19 = v17;
        }
        if (v19)
        {
          uint64_t v20 = (char *)sub_10000956C((uint64_t)(a1 + 5), v19);
          uint64_t v15 = (float *)a1[3];
          double v9 = (float *)a1[4];
        }

        else
        {
          uint64_t v20 = 0LL;
        }

        double v21 = (float *)&v20[4 * v16];
        *double v21 = v13;
        double v14 = v21 + 1;
        while (v9 != v15)
        {
          int v22 = *((_DWORD *)v9-- - 1);
          *((_DWORD *)v21-- - 1) = v22;
        }

        a1[3] = (uint64_t)v21;
        a1[4] = (uint64_t)v14;
        a1[5] = (uint64_t)&v20[4 * v19];
        if (v15) {
          operator delete(v15);
        }
      }

      else
      {
        float *v9 = v13;
        double v14 = v9 + 1;
      }

      double v11 = v11 + v12 * v12;
      a1[4] = (uint64_t)v14;
      v6 += 112LL;
      double v9 = v14;
    }

    while (v6 != v7);
    if (v11 > 0.0)
    {
      *((double *)a1 + 7) = 1.0 / v11;
      return 1LL;
    }
  }

  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_10188A8E0);
  }
  uint64_t v27 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)__int128 buf = 134349312;
    double v34 = a2;
    __int16 v35 = 2050;
    double v36 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,invalid Neffsum,%{public}.3lf",  buf,  0x16u);
  }

  BOOL result = sub_1002921D0(115, 0);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    int v29 = 134349312;
    double v30 = a2;
    __int16 v31 = 2050;
    double v32 = v11;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,invalid Neffsum,%{public}.3lf",  &v29,  22);
    double v26 = (uint8_t *)v28;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLParticleMM::MMParticleVector::computeLikelihoodsAndCSWVector(const CFAbsoluteTime)",  "%s\n",  v28);
    goto LABEL_43;
  }

  return result;
}

uint64_t sub_100EAE040(uint64_t a1, int a2, uint64_t *a3, double a4)
{
  *(_BYTE *)(a1 + 48) = 0;
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = v4 - *(void *)a1;
  if (v4 == *(void *)a1) {
    return 1LL;
  }
  if (sub_100EADBAC((uint64_t *)a1, a4))
  {
    unint64_t v10 = 0x6DB6DB6DB6DB6DB7LL * (v5 >> 4);
    uint64_t v12 = *a3;
    uint64_t v11 = a3[1];
    *(_DWORD *)__int128 buf = 0;
    sub_100963694(__p, v10, buf);
    unint64_t v13 = 0x9249249249249249LL * ((v11 - v12) >> 4) + a2;
    if (v13)
    {
      for (uint64_t i = 0LL; i != v13; ++i)
      {
        uint64_t v15 = random();
        uint64_t v16 = *(float **)(a1 + 24);
        unint64_t v17 = *(float **)(a1 + 32);
        if (v17 != v16)
        {
          unint64_t v18 = v17 - v16;
          unint64_t v17 = *(float **)(a1 + 24);
          do
          {
            unint64_t v19 = v18 >> 1;
            uint64_t v20 = &v17[v18 >> 1];
            float v22 = *v20;
            double v21 = v20 + 1;
            v18 += ~(v18 >> 1);
            else {
              unint64_t v18 = v19;
            }
          }

          while (v18);
        }

        ++*(_DWORD *)(*(void *)&__p[0] + (((char *)v17 - (char *)v16) << 30 >> 30));
      }
    }

    uint64_t v24 = *(void *)a1;
    uint64_t v23 = *(void *)(a1 + 8);
    if (*(void *)a1 != v23)
    {
      unint64_t v25 = 0LL;
      uint64_t v26 = *(void *)&__p[0];
      do
      {
        if (v25 >= (*((void *)&__p[0] + 1) - v26) >> 2) {
          break;
        }
        if (*(int *)(v26 + 4 * v25) >= 1)
        {
          int v27 = 0;
          unint64_t v28 = a3[1];
          do
          {
            if (v28 >= a3[2])
            {
              unint64_t v28 = sub_100D73E7C(a3, v24);
            }

            else
            {
              sub_100D73FA0((uint64_t)(a3 + 2), v28, v24);
              v28 += 112LL;
              a3[1] = v28;
            }

            a3[1] = v28;
            ++v27;
            uint64_t v26 = *(void *)&__p[0];
          }

          while (v27 < *(_DWORD *)(*(void *)&__p[0] + 4 * v25));
          uint64_t v23 = *(void *)(a1 + 8);
        }

        v24 += 112LL;
        ++v25;
      }

      while (v24 != v23);
    }

    unint64_t v29 = 0x6DB6DB6DB6DB6DB7LL * ((a3[1] - *a3) >> 4);
    BOOL v30 = v29 > a2;
    BOOL v31 = v29 <= a2;
    if (v30)
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      __int128 v41 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)__int128 buf = 134349312;
        double v52 = a4;
        __int16 v53 = 1026;
        LODWORD(v54) = v29;
        _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,Unexpected number of particles after resampling,%{public}d",  buf,  0x12u);
      }

      if (!sub_1002921D0(115, 0)) {
        goto LABEL_44;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      int v46 = 134349312;
      double v47 = a4;
      __int16 v48 = 1026;
      LODWORD(v49) = v29;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,Unexpected number of particles after resampling,%{public}d",  &v46,  18);
      __int16 v39 = (uint8_t *)v45;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLParticleMM::MMParticleVector::resample(const CFAbsoluteTime, const int, CLParticleMapMatcherCommon::ParticleVector &)",  "%s\n",  v45);
    }

    else
    {
      uint64_t v32 = *(void *)a1;
      *(void *)a1 = *a3;
      *a3 = v32;
      uint64_t v33 = *(void *)(a1 + 8);
      *(void *)(a1 + 8) = a3[1];
      a3[1] = v33;
      uint64_t v34 = *(void *)(a1 + 16);
      *(void *)(a1 + 16) = a3[2];
      a3[2] = v34;
      *(_BYTE *)(a1 + 48) = 1;
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      __int16 v35 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v36 = *(void *)(a1 + 56);
        *(_DWORD *)__int128 buf = 134349312;
        double v52 = a4;
        __int16 v53 = 2050;
        uint64_t v54 = v36;
        _os_log_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,Resampled,Neff,%{public}lf",  buf,  0x16u);
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_44;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      uint64_t v37 = *(void *)(a1 + 56);
      int v46 = 134349312;
      double v47 = a4;
      __int16 v48 = 2050;
      uint64_t v49 = v37;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,Resampled,Neff,%{public}lf",  &v46,  22);
      __int16 v39 = (uint8_t *)v38;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::MMParticleVector::resample(const CFAbsoluteTime, const int, CLParticleMapMatcherCommon::ParticleVector &)",  "%s\n",  v38);
    }

    if (v39 != buf) {
      free(v39);
    }
LABEL_44:
    if (*(void *)&__p[0])
    {
      *((void *)&__p[0] + 1) = *(void *)&__p[0];
      operator delete(*(void **)&__p[0]);
    }

    return v31;
  }

  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_10188A8E0);
  }
  double v40 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)__int128 buf = 134349056;
    double v52 = a4;
    _os_log_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,unable to compute likelihoods and csw vector",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    LODWORD(__p[0]) = 134349056;
    *(double *)((char *)__p + 4) = a4;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,unable to compute likelihoods and csw vector",  __p,  12);
    char v44 = (uint8_t *)v43;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLParticleMM::MMParticleVector::resample(const CFAbsoluteTime, const int, CLParticleMapMatcherCommon::ParticleVector &)",  "%s\n",  v43);
    if (v44 != buf) {
      free(v44);
    }
  }

  return 0LL;
}

void sub_100EAE6C8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_100EAE708(double *a1, uint64_t a2, double *a3, uint64_t a4)
{
  if (*(void *)a3)
  {
    *(void *)a4 = 0LL;
    *(void *)(a4 + 16) = 0LL;
    *(void *)__int128 buf = 0LL;
    *(void *)unint64_t v28 = 0LL;
    sub_100D2E36C( a1,  (double *)buf,  (double *)v28,  a3[4],  a3[5],  *(double *)(a2 + 96),  *((float *)a3 + 6),  *(double *)(a2 + 80),  *(double *)(a2 + 88));
    double v8 = *a3;
    BOOL v9 = *(void *)a3 != 0LL;
    if (*(void *)a3)
    {
      uint64_t v10 = *(int *)(*(void *)&v8 + 20LL);
      double v11 = 0.5;
      if ((_DWORD)v10 != 9)
      {
        int v12 = *(_DWORD *)(*(void *)&v8 + 72LL);
        if (v12 != 6 && v12 != 255)
        {
          double v13 = *(double *)(*(void *)&v8 + 96LL);
          if (v13 < 0.000001)
          {
            double v13 = 1.0;
            if ((v10 & 0xFFFFFFFE) != 8)
            {
              int v14 = *(unsigned __int8 *)(*(void *)&v8 + 16LL);
              if (v10 > 7)
              {
                double v13 = dbl_1012E00F0[v14 == 0];
              }

              else
              {
                if (v14) {
                  uint64_t v15 = (double *)&unk_101363BE8;
                }
                else {
                  uint64_t v15 = (double *)&unk_101363C28;
                }
                double v13 = v15[v10];
              }
            }
          }

          double v11 = v13 * 0.5 + 1.0;
        }
      }

      double v21 = a3[4];
      double v22 = a3[5];
      double v26 = v22;
      double v27 = v21;
      sub_100D2E0A8(a1, &v27, &v26, v21, v22, *(double *)(a2 + 96), *((float *)a3 + 6), v11);
      sub_100D2DA44( a1,  (double *)(a4 + 40),  (double *)(a4 + 32),  (double *)(a4 + 48),  v27,  v26,  *(double *)(a2 + 96),  *(double *)(a2 + 80),  *(double *)(a2 + 88),  *(double *)(a2 + 96));
      if (*(_BYTE *)(a2 + 40))
      {
        double v23 = *(double *)(a2 + 104);
        if (v23 >= 0.0 && *(double *)(a2 + 120) > 0.0)
        {
          double v24 = fmod(v23 - *((float *)a3 + 6), 360.0);
          if (v24 < 0.0) {
            double v24 = v24 + 360.0;
          }
          if (v24 > 180.0) {
            double v24 = v24 + -360.0;
          }
          *(double *)(a4 + 56) = fabs(v24);
        }
      }

      sub_1003094FC(a2, a4);
    }
  }

  else
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    uint64_t v16 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v17 = *(void *)(a2 + 200);
      *(_DWORD *)__int128 buf = 134349056;
      *(void *)&uint8_t buf[4] = v17;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,Unexpected,NULL road when computing score",  buf,  0xCu);
    }

    BOOL v9 = 0LL;
    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      uint64_t v18 = *(void *)(a2 + 200);
      *(_DWORD *)unint64_t v28 = 134349056;
      *(void *)&v28[4] = v18;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,Unexpected,NULL road when computing score",  v28,  12);
      uint64_t v20 = (char *)v19;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLParticleMM::MMFilterData::calculateScoreAndVarFactor(const CLParticleMapMatcherCommon::CLMMMeasurementDat a &, const CLMapGeometry::DistanceQueryResult &, CLMapDataUtil::MapMatcherScore &)",  "%s\n",  v19);
      if (v20 != buf) {
        free(v20);
      }
      return 0LL;
    }
  }

  return v9;
}

BOOL sub_100EAEA88(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  if (v4 == v3) {
    return 0LL;
  }
  while (1)
  {
    __int128 v31 = 0uLL;
    *(void *)&__int128 v32 = 0LL;
    *((void *)&v32 + 1) = 0x3FF0000000000000LL;
    __int128 v33 = 0u;
    __int128 v34 = 0u;
    LODWORD(v35) = 0;
    BOOL result = sub_100EAE708((double *)a1, a3, (double *)v3, (uint64_t)&v31);
    if (!result) {
      break;
    }
    LODWORD(v35) = a2;
    *((void *)&v32 + 1) = *(void *)(a3 + 128);
    unint64_t v9 = *(void *)(v3 + 104);
    unint64_t v10 = *(void *)(v3 + 96);
    if (v10 >= v9)
    {
      uint64_t v15 = *(void *)(v3 + 88);
      unint64_t v16 = 0x8E38E38E38E38E39LL * ((uint64_t)(v10 - v15) >> 3);
      unint64_t v17 = v16 + 1;
      if (v16 + 1 > 0x38E38E38E38E38ELL) {
        sub_100007008();
      }
      unint64_t v18 = 0x8E38E38E38E38E39LL * ((uint64_t)(v9 - v15) >> 3);
      if (2 * v18 > v17) {
        unint64_t v17 = 2 * v18;
      }
      if (v18 >= 0x1C71C71C71C71C7LL) {
        unint64_t v19 = 0x38E38E38E38E38ELL;
      }
      else {
        unint64_t v19 = v17;
      }
      if (v19) {
        uint64_t v20 = (char *)sub_100046304(v3 + 104, v19);
      }
      else {
        uint64_t v20 = 0LL;
      }
      double v21 = &v20[72 * v16];
      *(_OWORD *)double v21 = v31;
      __int128 v22 = v32;
      __int128 v23 = v33;
      __int128 v24 = v34;
      *((void *)v21 + 8) = v35;
      *((_OWORD *)v21 + 2) = v23;
      *((_OWORD *)v21 + 3) = v24;
      *((_OWORD *)v21 + 1) = v22;
      double v26 = *(char **)(v3 + 88);
      unint64_t v25 = *(char **)(v3 + 96);
      double v27 = v21;
      if (v25 != v26)
      {
        do
        {
          *(_OWORD *)(v27 - 72) = *(_OWORD *)(v25 - 72);
          __int128 v28 = *(_OWORD *)(v25 - 56);
          __int128 v29 = *(_OWORD *)(v25 - 40);
          __int128 v30 = *(_OWORD *)(v25 - 24);
          *((_DWORD *)v27 - 2) = *((_DWORD *)v25 - 2);
          *(_OWORD *)(v27 - 24) = v30;
          *(_OWORD *)(v27 - 40) = v29;
          *(_OWORD *)(v27 - 56) = v28;
          v27 -= 72;
          v25 -= 72;
        }

        while (v25 != v26);
        unint64_t v25 = *(char **)(v3 + 88);
      }

      int v14 = v21 + 72;
      *(void *)(v3 + 88) = v27;
      *(void *)(v3 + 96) = v21 + 72;
      *(void *)(v3 + 104) = &v20[72 * v19];
      if (v25) {
        operator delete(v25);
      }
    }

    else
    {
      *(_OWORD *)unint64_t v10 = v31;
      __int128 v11 = v32;
      __int128 v12 = v33;
      __int128 v13 = v34;
      *(void *)(v10 + 64) = v35;
      *(_OWORD *)(v10 + 32) = v12;
      *(_OWORD *)(v10 + 48) = v13;
      *(_OWORD *)(v10 + 16) = v11;
      int v14 = (char *)(v10 + 72);
    }

    *(void *)(v3 + 96) = v14;
    sub_100D72794((double *)v3);
    v3 += 112LL;
    if (v3 == v4) {
      return 1LL;
    }
  }

  return result;
}

uint64_t sub_100EAECA8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  double v3 = *(double *)(a1 + 384);
  if (*a2)
  {
    uint64_t v57 = 0LL;
    unint64_t v58 = 0LL;
    unint64_t v59 = 0LL;
    sub_100D60EF0(&v57, 0x60uLL);
    if (*(double *)(a3 + 264) <= 0.0)
    {
      uint64_t v15 = *(void *)(a1 + 40);
      int v11 = 96;
      if (&v57 != (uint64_t *)(a1 + 40))
      {
        uint64_t v16 = *(void *)(a1 + 48);
        unint64_t v17 = 0x6DB6DB6DB6DB6DB7LL * ((v16 - v15) >> 4);
        if (v17 <= 0x5F) {
          sub_100ECB440((uint64_t)&v57, v15, v16, v17);
        }
      }

void sub_100EAF8B0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, void **a21)
{
  a21 = (void **)&a14;
  sub_100D73874(&a21);
  _Unwind_Resume(a1);
}

uint64_t sub_100EAF910(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a1 + 384);
  if (*(void *)(a1 + 48) == *(void *)(a1 + 40))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    uint64_t v8 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)__int128 buf = 134349056;
      *(double *)&uint8_t buf[4] = v2;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,Unexpected,particle count,0",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    *(_DWORD *)v216 = 134349056;
    *(double *)&v216[4] = v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,Unexpected,particle count,0",  v216,  12);
    int v10 = (uint8_t *)v9;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLParticleMM::MMFilterData::extractSolution(const MMSnapData &)",  "%s\n",  v9);
    goto LABEL_253;
  }

  if (!*(void *)(a1 + 128))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    int v11 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)__int128 buf = 134349056;
      *(double *)&uint8_t buf[4] = v2;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,Unexpected,candidate count,0",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    *(_DWORD *)v216 = 134349056;
    *(double *)&v216[4] = v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,Unexpected,candidate count,0",  v216,  12);
    int v10 = (uint8_t *)v12;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLParticleMM::MMFilterData::extractSolution(const MMSnapData &)",  "%s\n",  v12);
    goto LABEL_253;
  }

  uint64_t v5 = sub_100EABF28((uint64_t *)(a1 + 104));
  if (!v5)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    __int128 v13 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)__int128 buf = 134349056;
      *(double *)&uint8_t buf[4] = v2;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,Unexpected,bestCandidate is nullptr",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    *(_DWORD *)v216 = 134349056;
    *(double *)&v216[4] = v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,Unexpected,bestCandidate is nullptr",  v216,  12);
    int v10 = (uint8_t *)v14;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLParticleMM::MMFilterData::extractSolution(const MMSnapData &)",  "%s\n",  v14);
    goto LABEL_253;
  }

  uint64_t v6 = v5;
  if (*(int *)(v5 + 124) <= 0)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    uint64_t v15 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)__int128 buf = 134349056;
      *(double *)&uint8_t buf[4] = v2;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,Unexpected,particles in candidate,0",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    *(_DWORD *)v216 = 134349056;
    *(double *)&v216[4] = v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,Unexpected,particles in candidate,0",  v216,  12);
    int v10 = (uint8_t *)v16;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLParticleMM::MMFilterData::extractSolution(const MMSnapData &)",  "%s\n",  v16);
    goto LABEL_253;
  }

  __int16 v172 = (uint64_t *)(v5 + 8);
  if (!*(void *)(v5 + 8))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    unint64_t v17 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)__int128 buf = 134349056;
      *(double *)&uint8_t buf[4] = v2;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,Unexpected,best particle road in best candidate is nullptr",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    *(_DWORD *)v216 = 134349056;
    *(double *)&v216[4] = v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,Unexpected,best particle road in best candidate is nullptr",  v216,  12);
    int v10 = (uint8_t *)v124;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLParticleMM::MMFilterData::extractSolution(const MMSnapData &)",  "%s\n",  v124);
LABEL_253:
    if (v10 != buf) {
      free(v10);
    }
    return 0LL;
  }

  if (*(void *)(a1 + 864))
  {
    sub_1000F0D38((void *)(a1 + 864));
    *(_BYTE *)(a1 + 880) = 0;
  }

  int v171 = (uint64_t **)(a1 + 864);
  char v192 = 0;
  __int128 v190 = 0u;
  __int128 v191 = 0u;
  __int128 v189 = 0u;
  unint64_t v193 = 0xBFF0000000000000LL;
  if (&v189 != (__int128 *)(v6 + 1064)) {
    sub_100ECB440( (uint64_t)&v189,  *(void *)(v6 + 1064),  *(void *)(v6 + 1072),  0x6DB6DB6DB6DB6DB7LL * ((uint64_t)(*(void *)(v6 + 1072) - *(void *)(v6 + 1064)) >> 4));
  }
  if (*(_BYTE *)(v6 + 153))
  {
    if (*(void *)(a2 + 120) && *(_BYTE *)(a2 + 504))
    {
      sub_100D5DAC4((uint64_t *)(a2 + 120), (uint64_t)buf);
      BOOL v7 = sub_100BDA328((uint64_t)buf, v6 + 128);
    }

    else
    {
      BOOL v7 = 0;
    }

    if (sub_100D734E8(a1 + 112, v6 + 128) && (v7 || sub_100EAA1B8(v6, (int *)(a1 + 792))))
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      uint64_t v20 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)__int128 buf = 134349312;
        *(double *)&uint8_t buf[4] = v2;
        *(_WORD *)&_BYTE buf[12] = 1026;
        *(_DWORD *)&buf[14] = v7;
        _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,extractSolution,using outgoing particles,previous,%{public}d",  buf,  0x12u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188A8E0);
        }
        *(_DWORD *)v216 = 134349312;
        *(double *)&v216[4] = v2;
        *(_WORD *)&v216[12] = 1026;
        *(_DWORD *)&v216[14] = v7;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,extractSolution,using outgoing particles,previous,%{public}d",  v216,  18);
        int v140 = (uint8_t *)v139;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::MMFilterData::extractSolution(const MMSnapData &)",  "%s\n",  v139);
        if (v140 != buf) {
          free(v140);
        }
      }

      *(_BYTE *)(a1 + 896) = 1;
      *(void *)__int128 buf = v6 + 128;
      double v21 = sub_100ECB1EC((uint64_t **)(a1 + 112), v6 + 128, (uint64_t)&unk_1012CF090, (__int128 **)buf);
      sub_100ECB71C( (uint64_t *)&v189,  *((uint64_t *)&v189 + 1),  v21[140],  v21[141],  0x6DB6DB6DB6DB6DB7LL * ((v21[141] - v21[140]) >> 4));
    }
  }

  if (*((void *)&v189 + 1) == (void)v189)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    uint64_t v26 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)__int128 buf = 134349056;
      *(double *)&uint8_t buf[4] = v2;
      _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,Unexpected,solutionParticleVector has zero particles",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      *(_DWORD *)v216 = 134349056;
      *(double *)&v216[4] = v2;
      LODWORD(v169) = 12;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,Unexpected,solutionParticleVector has zero particles",  v216,  v169);
      __int16 v135 = (uint8_t *)v134;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLParticleMM::MMFilterData::extractSolution(const MMSnapData &)",  "%s\n",  v134);
      if (v135 != buf) {
        free(v135);
      }
    }

    uint64_t v18 = 0LL;
    goto LABEL_226;
  }

  __int128 v22 = *(_OWORD *)(v6 + 248);
  __int128 v219 = *(_OWORD *)(v6 + 232);
  __int128 v220 = v22;
  __int128 v23 = *(_OWORD *)(v6 + 184);
  *(_OWORD *)v216 = *(_OWORD *)(v6 + 168);
  *(_OWORD *)&v216[16] = v23;
  __int128 v24 = *(_OWORD *)(v6 + 216);
  __int128 v217 = *(_OWORD *)(v6 + 200);
  __int128 v218 = v24;
  __int128 v25 = *(_OWORD *)(v6 + 280);
  __int128 v221 = *(_OWORD *)(v6 + 264);
  __int128 v222 = v25;
  if (*(char *)(v6 + 319) < 0)
  {
    sub_1010DD48C(&v223, *(void **)(v6 + 296), *(void *)(v6 + 304));
  }

  else
  {
    __int128 v223 = *(_OWORD *)(v6 + 296);
    uint64_t v224 = *(void *)(v6 + 312);
  }

  memcpy(v225, (const void *)(v6 + 320), sizeof(v225));
  double v27 = *(double *)(v6 + 360);
  BOOL v28 = v27 < 19.0 && v27 > 0.0;
  if (v28)
  {
    v225[5] = 0x4033000000000000LL;
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    unint64_t v29 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v30 = *(void *)(v6 + 360);
      *(_DWORD *)__int128 buf = 134349568;
      *(double *)&uint8_t buf[4] = v2;
      *(_WORD *)&_BYTE buf[12] = 2050;
      *(void *)&buf[14] = v30;
      *(_WORD *)&buf[22] = 2050;
      *(void *)&_BYTE buf[24] = 0x4033000000000000LL;
      _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,deweightCourse,courseUnc,%{public}.1lf,deweightUnc,%{public}.1lf",  buf,  0x20u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      uint64_t v136 = *(void *)(v6 + 360);
      LODWORD(v200[0]) = 134349568;
      *(double *)((char *)v200 + 4) = v2;
      WORD2(v200[1]) = 2050;
      *(void *)((char *)&v200[1] + 6) = v136;
      HIWORD(v200[2]) = 2050;
      *(void *)v201 = 0x4033000000000000LL;
      LODWORD(v169) = 32;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,deweightCourse,courseUnc,%{public}.1lf,deweightUnc,%{public}.1lf",  v200,  v169);
      int v138 = (uint8_t *)v137;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::MMFilterData::extractSolution(const MMSnapData &)",  "%s\n",  v137);
      if (v138 != buf) {
        free(v138);
      }
    }
  }

  if ((*(_DWORD *)(*v172 + 20) & 0xFFFFFFFE) != 8) {
    goto LABEL_102;
  }
  if (*(void *)(a2 + 120)
    && ((sub_100D5DAC4(v172, (uint64_t)buf),
         sub_100D5DAC4((uint64_t *)(a2 + 120), (uint64_t)v200),
         sub_100BDA328((uint64_t)buf, (uint64_t)v200))
     || *(_BYTE *)(a1 + 896)
     && (sub_100D5DAC4((uint64_t *)(a2 + 120), (uint64_t)&v181), sub_100BDA328(v6 + 128, (uint64_t)&v181))))
  {
    int v38 = 1;
    BOOL v39 = sub_1001ACC84(*(void *)(v6 + 8), 1, *(double *)(v6 + 56), 3.75);
  }

  else
  {
    int v38 = 0;
    BOOL v39 = 0;
  }

  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_10188A8E0);
  }
  double v40 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)__int128 buf = 134349568;
    *(double *)&uint8_t buf[4] = v2;
    *(_WORD *)&_BYTE buf[12] = 1026;
    *(_DWORD *)&buf[14] = v39;
    *(_WORD *)&buf[18] = 1026;
    *(_DWORD *)&buf[20] = v38;
    _os_log_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,invalidateCourse,particleIsOnSegmentsThatHasSmallCurves,%{public}d,particleInOnSameRoadAsPri orSnap,%{public}d",  buf,  0x18u);
  }

  int v41 = v38 & v39;
  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    LODWORD(v200[0]) = 134349568;
    *(double *)((char *)v200 + 4) = v2;
    WORD2(v200[1]) = 1026;
    *(_DWORD *)((char *)&v200[1] + 6) = v39;
    WORD1(v200[2]) = 1026;
    HIDWORD(v200[2]) = v38;
    LODWORD(v169) = 24;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,invalidateCourse,particleIsOnSegmentsThatHasSmallCurves,%{public}d,particleInOnSameRoadAsPri orSnap,%{public}d",  v200,  v169);
    int v142 = (uint8_t *)v141;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::MMFilterData::extractSolution(const MMSnapData &)",  "%s\n",  v141);
    if (v142 != buf) {
      free(v142);
    }
    if ((v41 & 1) != 0) {
      goto LABEL_83;
    }
LABEL_102:
    char v37 = 0;
    if (!v28) {
      goto LABEL_105;
    }
    goto LABEL_103;
  }

  if (!v41) {
    goto LABEL_102;
  }
LABEL_83:
  *((void *)&v221 + 1) = 0xBFF0000000000000LL;
  v225[5] = 0xBFF0000000000000LL;
  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_10188A8E0);
  }
  char v31 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
  {
    __int128 v32 = *(double **)(v6 + 1088);
    double v33 = *v32;
    double v34 = *(double *)(v6 + 56);
    sub_1001AC068(v32);
    double v35 = v32[5];
    int v36 = sub_1001ACB94(*(uint64_t **)(v6 + 1088));
    *(_DWORD *)__int128 buf = 134349825;
    *(double *)&uint8_t buf[4] = v2;
    *(_WORD *)&_BYTE buf[12] = 2049;
    *(double *)&buf[14] = v33;
    *(_WORD *)&buf[22] = 2050;
    *(double *)&_BYTE buf[24] = v34 * v35;
    *(_WORD *)&buf[32] = 1026;
    *(_DWORD *)&buf[34] = v36;
    _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,Particle is on a curved section of road,%{private}lld,projection,%{public}.2lf,deweightCourse,%{public}d",  buf,  0x26u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    uint64_t v126 = qword_1019348B8;
    __int16 v127 = *(double **)(v6 + 1088);
    double v128 = *v127;
    double v129 = *(double *)(v6 + 56);
    sub_1001AC068(v127);
    double v130 = v127[5];
    int v131 = sub_1001ACB94(*(uint64_t **)(v6 + 1088));
    LODWORD(v200[0]) = 134349825;
    *(double *)((char *)v200 + 4) = v2;
    WORD2(v200[1]) = 2049;
    *(double *)((char *)&v200[1] + 6) = v128;
    HIWORD(v200[2]) = 2050;
    *(double *)v201 = v129 * v130;
    *(_WORD *)&v201[8] = 1026;
    *(_DWORD *)&v201[10] = v131;
    LODWORD(v169) = 38;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v126,  2LL,  "CLMMPED,%{public}.1lf,Particle is on a curved section of road,%{private}lld,projection,%{public}.2lf,deweightCourse,%{public}d",  v200,  v169);
    __int16 v133 = (uint8_t *)v132;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::MMFilterData::extractSolution(const MMSnapData &)",  "%s\n",  v132);
    if (v133 != buf) {
      free(v133);
    }
  }

  char v37 = 1;
LABEL_103:
  memset(buf, 0, 24);
  *(_OWORD *)&_BYTE buf[24] = xmmword_1012E0070;
  buf[40] = 0;
  memset(v227, 0, 32);
  __asm { FMOV            V0.2D, #-1.0 }

  v227[2] = _Q0;
  v227[3] = _Q0;
  v227[4] = _Q0;
  v227[5] = _Q0;
  unint64_t v228 = 0xBFF0000000000000LL;
  char v229 = 0;
  __int128 v230 = _Q0;
  __int128 v231 = _Q0;
  __int128 v232 = _Q0;
  sub_100EB27E0((uint64_t)buf, (uint64_t)v216, 0, 1.0);
  int v47 = (double *)*((void *)&v189 + 1);
  for (uint64_t i = (double *)v189; i != v47; i += 14)
  {
    memset(v200, 0, sizeof(v200));
    *(void *)v201 = 0x3FF0000000000000LL;
    *(_OWORD *)&v201[8] = 0u;
    __int128 v202 = 0u;
    LODWORD(v203) = 0;
    sub_100EAE708((double *)a1, (uint64_t)buf, i, (uint64_t)v200);
    LODWORD(v203) = 1;
    *(void *)v201 = 0x3FF0000000000000LL;
    sub_100EB2834(i, (uint64_t)v200);
    sub_100D72794(i);
  }

void sub_100EB267C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, char a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, char a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, char a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61)
{
  if (SLOBYTE(STACK[0x347]) < 0) {
    operator delete((void *)STACK[0x330]);
  }
  sub_100EB2B00((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_100EB27E0(uint64_t a1, uint64_t a2, int a3, double a4)
{
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 56);
  uint64_t v4 = *(void *)(a2 + 80);
  uint64_t v6 = *(void *)(a2 + 96);
  uint64_t v5 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 72);
  *(void *)(a1 + 104) = v5;
  uint64_t v8 = *(void *)(a2 + 184);
  uint64_t v7 = *(void *)(a2 + 192);
  *(void *)(a1 + 112) = v4;
  *(void *)(a1 + 120) = v7;
  *(double *)(a1 + 128) = a4;
  *(void *)(a1 + 136) = v6;
  *(void *)(a1 + 144) = v8;
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 228);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 200);
  *(void *)(a1 + 176) = *(void *)(a2 + 216);
  *(int8x16_t *)(a1 + 184) = vextq_s8(*(int8x16_t *)(a2 + 16), *(int8x16_t *)(a2 + 16), 8uLL);
  *(void *)(a1 + 200) = *(void *)(a2 + 8);
  sub_100308AAC(a1, a2, a3);
}

void sub_100EB2834(void *a1, uint64_t a2)
{
  uint64_t v5 = a1[11];
  unint64_t v4 = a1[12];
  uint64_t v6 = (void **)(a1 + 11);
  if (v5 == v4)
  {
LABEL_5:
    uint64_t v8 = (uint64_t)(a1 + 13);
    unint64_t v9 = a1[13];
    if (v4 >= v9)
    {
      unint64_t v14 = 0x8E38E38E38E38E39LL * ((uint64_t)(v4 - v5) >> 3);
      unint64_t v15 = v14 + 1;
      if (v14 + 1 > 0x38E38E38E38E38ELL) {
        sub_100007008();
      }
      unint64_t v16 = 0x8E38E38E38E38E39LL * ((uint64_t)(v9 - v5) >> 3);
      if (2 * v16 > v15) {
        unint64_t v15 = 2 * v16;
      }
      if (v16 >= 0x1C71C71C71C71C7LL) {
        unint64_t v17 = 0x38E38E38E38E38ELL;
      }
      else {
        unint64_t v17 = v15;
      }
      if (v17) {
        uint64_t v18 = (char *)sub_100046304(v8, v17);
      }
      else {
        uint64_t v18 = 0LL;
      }
      __int128 v22 = &v18[72 * v14];
      __int128 v23 = &v18[72 * v17];
      *(_OWORD *)__int128 v22 = *(_OWORD *)a2;
      __int128 v24 = *(_OWORD *)(a2 + 16);
      __int128 v25 = *(_OWORD *)(a2 + 32);
      __int128 v26 = *(_OWORD *)(a2 + 48);
      *((void *)v22 + 8) = *(void *)(a2 + 64);
      *((_OWORD *)v22 + 2) = v25;
      *((_OWORD *)v22 + 3) = v26;
      *((_OWORD *)v22 + 1) = v24;
      __int128 v13 = v22 + 72;
      BOOL v28 = (char *)a1[11];
      double v27 = (char *)a1[12];
      if (v27 != v28)
      {
        do
        {
          *(_OWORD *)(v22 - 72) = *(_OWORD *)(v27 - 72);
          __int128 v29 = *(_OWORD *)(v27 - 56);
          __int128 v30 = *(_OWORD *)(v27 - 40);
          __int128 v31 = *(_OWORD *)(v27 - 24);
          *((_DWORD *)v22 - 2) = *((_DWORD *)v27 - 2);
          *(_OWORD *)(v22 - 24) = v31;
          *(_OWORD *)(v22 - 40) = v30;
          *(_OWORD *)(v22 - 56) = v29;
          v22 -= 72;
          v27 -= 72;
        }

        while (v27 != v28);
        double v27 = (char *)*v6;
      }

      a1[11] = v22;
      a1[12] = v13;
      a1[13] = v23;
      if (v27) {
        operator delete(v27);
      }
    }

    else
    {
      *(_OWORD *)unint64_t v4 = *(_OWORD *)a2;
      __int128 v10 = *(_OWORD *)(a2 + 16);
      __int128 v11 = *(_OWORD *)(a2 + 32);
      __int128 v12 = *(_OWORD *)(a2 + 48);
      *(void *)(v4 + 64) = *(void *)(a2 + 64);
      *(_OWORD *)(v4 + 32) = v11;
      *(_OWORD *)(v4 + 48) = v12;
      *(_OWORD *)(v4 + 16) = v10;
      __int128 v13 = (char *)(v4 + 72);
    }

    a1[12] = v13;
  }

  else
  {
    uint64_t v7 = a1[11];
    while (*(_DWORD *)(v7 + 64) != *(_DWORD *)(a2 + 64))
    {
      v7 += 72LL;
      if (v7 == v4) {
        goto LABEL_5;
      }
    }

    *(_OWORD *)uint64_t v7 = *(_OWORD *)a2;
    __int128 v19 = *(_OWORD *)(a2 + 16);
    __int128 v20 = *(_OWORD *)(a2 + 32);
    __int128 v21 = *(_OWORD *)(a2 + 48);
    *(_DWORD *)(v7 + 64) = *(_DWORD *)(a2 + 64);
    *(_OWORD *)(v7 + 32) = v20;
    *(_OWORD *)(v7 + 48) = v21;
    *(_OWORD *)(v7 + 16) = v19;
  }

uint64_t sub_100EB29F8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = 0LL;
  *(void *)(a1 + 8) = 0LL;
  *(void *)(a1 + 16) = 0LL;
  sub_100ECA24C( (void *)a1,  *(void *)a2,  *(void *)(a2 + 8),  0x6DB6DB6DB6DB6DB7LL * ((uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 4));
  *(void *)(a1 + 24) = 0LL;
  *(void *)(a1 + 32) = 0LL;
  *(void *)(a1 + 40) = 0LL;
  sub_10001B72C( (void *)(a1 + 24),  *(const void **)(a2 + 24),  *(void *)(a2 + 32),  (uint64_t)(*(void *)(a2 + 32) - *(void *)(a2 + 24)) >> 2);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  return a1;
}

void sub_100EB2A78(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100EB2A90(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_100ECB440( a1,  *(void *)a2,  *(void *)(a2 + 8),  0x6DB6DB6DB6DB6DB7LL * ((uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 4));
    sub_10004C5F8( (char *)(a1 + 24),  *(char **)(a2 + 24),  *(void *)(a2 + 32),  (uint64_t)(*(void *)(a2 + 32) - *(void *)(a2 + 24)) >> 2);
  }

  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  return a1;
}

uint64_t sub_100EB2B00(uint64_t a1)
{
  double v2 = *(void **)(a1 + 24);
  if (v2)
  {
    *(void *)(a1 + 32) = v2;
    operator delete(v2);
  }

  unint64_t v4 = (void **)a1;
  sub_100D73874(&v4);
  return a1;
}

double sub_100EB2B44(uint64_t a1, double *a2, uint64_t a3)
{
  if (*(void *)a3 && *(void *)a1) {
    return sub_100D2DBDC( a2,  *(double *)(a1 + 32),  *(double *)(a1 + 40),  *(double *)(a3 + 32),  *(double *)(a3 + 40),  0.0);
  }
  else {
    return -1.0;
  }
}

uint64_t sub_100EB2B70(uint64_t a1, double *a2)
{
  uint64_t v6 = *(void *)(a1 + 384);
  if (*(_BYTE *)(a1 + 276)) {
    double v7 = 1.0 - *(double *)(a1 + 304);
  }
  else {
    double v7 = *(double *)(a1 + 304);
  }
  uint64_t v8 = *(void *)(a1 + 256);
  sub_1001AC068((void *)v8);
  double v9 = *(double *)(v8 + 40);
  double v10 = sub_100D2DBDC((double *)a1, *(double *)(a1 + 432), *(double *)(a1 + 440), a2[37], a2[38], *(double *)(a1 + 448));
  double v11 = a2[68];
  double v12 = *(double *)(a1 + 480);
  double v13 = -1.0;
  if (v11 >= 0.0)
  {
    double v14 = fmod(v12 - v11, 360.0);
    if (v14 < 0.0) {
      double v14 = v14 + 360.0;
    }
    if (v14 > 180.0) {
      double v14 = v14 + -360.0;
    }
    double v13 = fabs(v14);
  }

  double v15 = v7 * v9;
  double v16 = fmod(v12 - *(float *)(a1 + 280), 360.0);
  if (v16 < 0.0) {
    double v16 = v16 + 360.0;
  }
  if (v16 > 180.0) {
    double v16 = v16 + -360.0;
  }
  double v17 = fabs(v16);
  double v18 = *(double *)(a1 + 568);
  if (v18 > 0.0 && v18 < 45.0 && v17 > 30.0)
  {
    BOOL v19 = 0;
LABEL_26:
    uint64_t v3 = 1LL;
    if (v15 >= 0.0 && v15 < 35.0 && !v19)
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      __int128 v21 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)__int128 buf = 134349312;
        uint64_t v39 = v6;
        __int16 v40 = 2050;
        double v41 = v15;
        _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,not snapping course,reason,distanceToIntersection,%{public}.1lf",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188A8E0);
        }
        int v28 = 134349312;
        uint64_t v29 = v6;
        __int16 v30 = 2050;
        double v31 = v15;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,not snapping course,reason,distanceToIntersection,%{public}.1lf",  &v28,  22);
        __int128 v26 = (uint8_t *)v25;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::MMFilterData::shallUseSnapCourse(const MMSnapData &)",  "%s\n",  v25);
        if (v26 != buf) {
          free(v26);
        }
      }

      uint64_t v3 = 0LL;
    }

    goto LABEL_35;
  }

  double v20 = a2[54];
  uint64_t v3 = 1LL;
  if (v20 > 0.0 && v20 < 45.0)
  {
    BOOL v19 = v13 <= 30.0;
    goto LABEL_26;
  }

uint64_t sub_100EB3058(uint64_t a1, void *a2)
{
  *(void *)a1 = off_101882030;
  *(_DWORD *)(a1 + 8) = 257;
  *(_BYTE *)(a1 + 12) = 0;
  *(_OWORD *)(a1 + 16) = xmmword_1012E6890;
  sub_100D2D9A4(a1 + 168);
  *(void *)(a1 + 208) = *a2;
  uint64_t v4 = a2[1];
  *(void *)(a1 + 216) = v4;
  if (v4)
  {
    uint64_t v5 = (unint64_t *)(v4 + 8);
    do
      unint64_t v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }

  *(void *)(a1 + 240) = 0LL;
  __asm { FMOV            V0.2D, #-1.0 }

  __int128 v13 = _Q0;
  *(_OWORD *)(a1 + 224) = _Q0;
  *(void *)(a1 + 248) = 0LL;
  *(void *)(a1 + 256) = 0LL;
  sub_100EB3338(a1 + 264);
  *(_BYTE *)(a1 + 1032) = 0;
  *(void *)(a1 + 1040) = a1 + 1040;
  *(void *)(a1 + 1048) = a1 + 1040;
  *(void *)(a1 + 1056) = 0LL;
  *(_BYTE *)(a1 + 1064) = 0;
  *(_OWORD *)(a1 + 1072) = 0u;
  *(_OWORD *)(a1 + 1088) = 0u;
  *(_DWORD *)(a1 + 1104) = 0;
  *(_WORD *)(a1 + 1108) = 1;
  *(_DWORD *)(a1 + 1112) = 0;
  *(_OWORD *)(a1 + 1120) = 0u;
  *(_OWORD *)(a1 + 1136) = 0u;
  *(_OWORD *)(a1 + 1152) = 0u;
  *(_BYTE *)(a1 + 1168) = 0;
  *(void *)(a1 + 1176) = 0LL;
  *(void *)(a1 + 1192) = 0LL;
  *(void *)(a1 + 1184) = 0LL;
  *(_DWORD *)(a1 + 1200) = 0;
  *(_DWORD *)(a1 + 1208) = 0;
  *(_BYTE *)(a1 + 1212) = 0;
  sub_100D729A0(a1 + 1216);
  *(_DWORD *)(a1 + 1752) = -1;
  *(_OWORD *)(a1 + 1760) = 0u;
  *(_DWORD *)(a1 + 1776) = 0;
  *(void *)(a1 + 1784) = a1 + 1784;
  *(void *)(a1 + 1792) = a1 + 1784;
  *(void *)(a1 + 1800) = 0LL;
  *(void *)(a1 + 1808) = a1 + 1808;
  *(void *)(a1 + 1816) = a1 + 1808;
  *(void *)(a1 + 1824) = 0LL;
  *(void *)(a1 + 1832) = 0x600000006LL;
  *(void *)(a1 + 1840) = 0LL;
  *(void *)(a1 + 1856) = 0LL;
  *(void *)(a1 + 1848) = 0LL;
  *(void *)(a1 + 1864) = 0xBFF0000000000000LL;
  *(void *)(a1 + 1872) = 0xBFF0000000000000LL;
  *(void *)(a1 + 1944) = 0LL;
  *(_OWORD *)(a1 + 1880) = 0u;
  *(_OWORD *)(a1 + 1896) = 0u;
  *(_OWORD *)(a1 + 1912) = 0u;
  *(_OWORD *)(a1 + 1928) = 0u;
  *(_OWORD *)(a1 + 1952) = v13;
  *(_DWORD *)(a1 + 2072) = 0;
  *(_OWORD *)(a1 + 2080) = 0u;
  *(_OWORD *)(a1 + 2096) = 0u;
  *(void *)(a1 + 2112) = 0x3FF0000000000000LL;
  *(_DWORD *)(a1 + 2120) = 180;
  *(_DWORD *)(a1 + 2144) = 0;
  *(void *)(a1 + 2128) = 0LL;
  *(void *)(a1 + 2136) = 0LL;
  *(void *)(a1 + 2200) = 0LL;
  *(_OWORD *)(a1 + 2168) = 0u;
  *(_OWORD *)(a1 + 2184) = 0u;
  *(_OWORD *)(a1 + 2152) = 0u;
  sub_100EB34B4(a1);
  return a1;
}

void sub_100EB3248( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, _Unwind_Exception *exception_object, uint64_t a16, uint64_t a17, uint64_t a18)
{
  __int128 v26 = *(void **)(v19 + 2176);
  if (v26)
  {
    *(void *)(v19 + 2184) = v26;
    operator delete(v26);
  }

  uint64_t v27 = *(void *)(v19 + 2088);
  *(void *)(v19 + 2088) = 0LL;
  if (v27) {
    (*(void (**)(uint64_t))(*(void *)v27 + 8LL))(v27);
  }
  uint64_t v28 = *v21;
  *__int128 v21 = 0LL;
  if (v28) {
    sub_100D831B4((uint64_t)v21, v28);
  }
  a18 = v24;
  sub_100D73A50((void ***)&a18);
  a18 = v20;
  sub_100D73A50((void ***)&a18);
  sub_100D739E0((void ***)&a18);
  uint64_t v29 = *v25;
  if (*v25)
  {
    *(void *)(v19 + 1848) = v29;
    operator delete(v29);
  }

  sub_100890314(v23);
  sub_100890314(v22);
  sub_100D5B130(v19 + 1064);
  sub_1001B4C40(a13);
  sub_100EB3A08(a14);
  sub_100D73874((void ***)&a18);
  sub_10000AE14(v18);
  _Unwind_Resume(a1);
}

uint64_t sub_100EB3338(uint64_t a1)
{
  *(void *)a1 = 0LL;
  *(void *)(a1 + 8) = 0LL;
  *(_DWORD *)(a1 + 16) = 0;
  *(_WORD *)(a1 + 20) = 1;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 88) = 0LL;
  *(void *)(a1 + 96) = 0LL;
  *(void *)(a1 + 104) = 0LL;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_BYTE *)(a1 + 80) = 0;
  *(void *)(a1 + 112) = 0xBFF0000000000000LL;
  *(void *)(a1 + 120) = 0LL;
  *(void *)(a1 + 128) = 0LL;
  *(_DWORD *)(a1 + 136) = 0;
  *(_WORD *)(a1 + 140) = 1;
  *(_DWORD *)(a1 + 144) = 0;
  *(void *)(a1 + 208) = 0LL;
  *(_BYTE *)(a1 + 200) = 0;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(void *)(a1 + 216) = 0LL;
  *(void *)(a1 + 224) = 0LL;
  *(_BYTE *)(a1 + 232) = 0;
  *(void *)(a1 + 248) = 0LL;
  *(void *)(a1 + 240) = 0LL;
  __asm { FMOV            V1.2D, #-1.0 }

  *(_OWORD *)(a1 + 256) = _Q1;
  *(void *)(a1 + 272) = 0LL;
  *(void *)(a1 + 280) = 0LL;
  *(void *)(a1 + 288) = 0xBFF0000000000000LL;
  *(void *)(a1 + 512) = 0LL;
  *(_DWORD *)(a1 + 520) = 0;
  *(_WORD *)(a1 + 504) = 0;
  *(_OWORD *)(a1 + 472) = 0u;
  *(_OWORD *)(a1 + 488) = 0u;
  *(_OWORD *)(a1 + 587) = 0u;
  *(_OWORD *)(a1 + 560) = 0u;
  *(_OWORD *)(a1 + 576) = 0u;
  *(_OWORD *)(a1 + 528) = 0u;
  *(_OWORD *)(a1 + 544) = 0u;
  *(_OWORD *)(a1 + 624) = 0u;
  *(_OWORD *)(a1 + 640) = 0u;
  *(_OWORD *)(a1 + 608) = 0u;
  *(_OWORD *)(a1 + 454) = 0u;
  *(_OWORD *)(a1 + 440) = 0u;
  *(_OWORD *)(a1 + 424) = 0u;
  *(_OWORD *)(a1 + 408) = 0u;
  *(_OWORD *)(a1 + 392) = 0u;
  *(_OWORD *)(a1 + 376) = 0u;
  *(_OWORD *)(a1 + 360) = 0u;
  *(_OWORD *)(a1 + 344) = 0u;
  *(_OWORD *)(a1 + 328) = 0u;
  *(_OWORD *)(a1 + 312) = 0u;
  *(_OWORD *)(a1 + 296) = 0u;
  *(void *)(a1 + 656) = 0LL;
  *(void *)(a1 + 664) = 0xBFF0000000000000LL;
  sub_100D2D9A4(a1 + 672);
  *(_BYTE *)(a1 + 712) = 0;
  *(void *)(a1 + 720) = 0LL;
  *(void *)(a1 + 736) = 0LL;
  *(void *)(a1 + 728) = 0LL;
  *(_DWORD *)(a1 + 743) = 0;
  *(void *)(a1 + 752) = 0LL;
  *(_DWORD *)(a1 + 759) = 0;
  return a1;
}

void sub_100EB347C(_Unwind_Exception *a1)
{
}

double sub_100EB34B4(uint64_t a1)
{
  *(void *)(a1 + 224) = 0xBFF0000000000000LL;
  sub_100ECB180((void **)(a1 + 240));
  *(void *)(a1 + 240) = 0LL;
  *(void *)(a1 + 248) = 0LL;
  *(void *)(a1 + 256) = 0LL;
  memset(v29, 0, 24);
  unint64_t v56 = (void **)v29;
  sub_100D73874(&v56);
  bzero(v29, 0x300uLL);
  sub_100EB3338((uint64_t)v29);
  sub_10005F550(a1 + 264, (__int128 *)v29);
  __int128 v2 = *(_OWORD *)&v29[32];
  *(_OWORD *)(a1 + 280) = *(_OWORD *)&v29[16];
  *(_OWORD *)(a1 + 296) = v2;
  *(void *)(a1 + 312) = *(void *)&v29[48];
  *(_OWORD *)(a1 + 320) = *(_OWORD *)&v29[56];
  *(_OWORD *)(a1 + 329) = *(_OWORD *)&v29[65];
  uint64_t v3 = *(void **)(a1 + 352);
  if (v3)
  {
    *(void *)(a1 + 360) = v3;
    operator delete(v3);
  }

  *(_OWORD *)(a1 + 352) = *(_OWORD *)&v29[88];
  *(void *)(a1 + 368) = *(void *)&v29[104];
  memset(&v29[88], 0, 24);
  *(void *)(a1 + 376) = v30;
  sub_10005F550(a1 + 384, (__int128 *)((char *)&v30 + 8));
  __int128 v4 = v33;
  *(_OWORD *)(a1 + 400) = v32;
  *(_OWORD *)(a1 + 416) = v4;
  *(void *)(a1 + 432) = v34;
  *(_OWORD *)(a1 + 440) = v35[0];
  *(_OWORD *)(a1 + 449) = *(_OWORD *)((char *)v35 + 9);
  uint64_t v5 = *(void **)(a1 + 472);
  if (v5)
  {
    *(void *)(a1 + 480) = v5;
    operator delete(v5);
  }

  *(_OWORD *)(a1 + 472) = *(_OWORD *)v36;
  *(void *)(a1 + 488) = v37;
  v36[1] = 0LL;
  uint64_t v37 = 0LL;
  v36[0] = 0LL;
  *(_BYTE *)(a1 + 496) = v38;
  __int128 v6 = v44;
  *(_OWORD *)(a1 + 568) = v43;
  *(_OWORD *)(a1 + 584) = v6;
  __int128 v7 = v46;
  *(_OWORD *)(a1 + 600) = v45;
  *(_OWORD *)(a1 + 616) = v7;
  __int128 v8 = v40;
  *(_OWORD *)(a1 + 504) = v39;
  *(_OWORD *)(a1 + 520) = v8;
  __int128 v9 = v42;
  *(_OWORD *)(a1 + 536) = v41;
  *(_OWORD *)(a1 + 552) = v9;
  double v10 = (void **)(a1 + 632);
  *(_OWORD *)double v10 = __p;
  *(void *)(a1 + 648) = v48;
  HIBYTE(v48) = 0;
  LOBYTE(__p) = 0;
  memcpy((void *)(a1 + 656), v49, 0x118uLL);
  __int128 v11 = v51;
  *(_OWORD *)(a1 + 936) = v50;
  *(_OWORD *)(a1 + 952) = v11;
  *(_OWORD *)(a1 + 968) = v52;
  *(void *)(a1 + 984) = v53;
  sub_10005F550(a1 + 992, &v54);
  *(_OWORD *)(a1 + 1008) = *(_OWORD *)v55;
  *(_DWORD *)(a1 + 1023) = *(_DWORD *)&v55[15];
  double v12 = (std::__shared_weak_count *)*((void *)&v54 + 1);
  if (*((void *)&v54 + 1))
  {
    __int128 v13 = (unint64_t *)(*((void *)&v54 + 1) + 8LL);
    do
      unint64_t v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }

  if (SHIBYTE(v48) < 0) {
    operator delete((void *)__p);
  }
  if (v36[0])
  {
    v36[1] = v36[0];
    operator delete(v36[0]);
  }

  double v15 = v31;
  if (v31)
  {
    p_shared_owners = (unint64_t *)&v31->__shared_owners_;
    do
      unint64_t v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }

  if (*(void *)&v29[88])
  {
    *(void *)&v29[96] = *(void *)&v29[88];
    operator delete(*(void **)&v29[88]);
  }

  uint64_t v18 = *(std::__shared_weak_count **)&v29[8];
  if (*(void *)&v29[8])
  {
    uint64_t v19 = (unint64_t *)(*(void *)&v29[8] + 8LL);
    do
      unint64_t v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }

  *(_BYTE *)(a1 + 1032) = 0;
  sub_1001B4C40((void *)(a1 + 1040));
  *(_DWORD *)(a1 + 1208) = 0;
  v29[0] = 0;
  memset(&v29[8], 0, 36);
  *(_WORD *)&v29[44] = 1;
  *(_DWORD *)&v29[48] = 0;
  memset(&v29[56], 0, 49);
  double v31 = 0LL;
  __int128 v30 = 0uLL;
  LODWORD(v32) = 0;
  *(void *)(a1 + 1080) = 0LL;
  *(_OWORD *)(a1 + 1064) = *(_OWORD *)v29;
  sub_10005F550(a1 + 1088, (__int128 *)&v29[24]);
  *(_OWORD *)(a1 + 1104) = *(_OWORD *)&v29[40];
  *(_OWORD *)(a1 + 1120) = *(_OWORD *)&v29[56];
  *(void *)(a1 + 1136) = *(void *)&v29[72];
  *(_OWORD *)(a1 + 1144) = *(_OWORD *)&v29[80];
  *(_OWORD *)(a1 + 1153) = *(_OWORD *)&v29[89];
  __int128 v21 = *(void **)(a1 + 1176);
  if (v21)
  {
    *(void *)(a1 + 1184) = v21;
    operator delete(v21);
  }

  *(_OWORD *)(a1 + 1176) = v30;
  *(void *)(a1 + 1192) = v31;
  double v31 = 0LL;
  __int128 v30 = 0uLL;
  *(_DWORD *)(a1 + 1200) = v32;
  __int128 v22 = *(std::__shared_weak_count **)&v29[32];
  if (*(void *)&v29[32])
  {
    __int128 v23 = (unint64_t *)(*(void *)&v29[32] + 8LL);
    do
      unint64_t v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
    }
  }

  *(_BYTE *)(a1 + 1212) = 0;
  *(void *)(a1 + 1216) = 0LL;
  *(_DWORD *)(a1 + 1224) = 0;
  *(_OWORD *)(a1 + 1232) = 0u;
  *(_OWORD *)(a1 + 1248) = 0u;
  *(_OWORD *)(a1 + 1257) = 0u;
  sub_100BDD258(a1 + 1280);
  *(_DWORD *)(a1 + 1752) = -1;
  *(_OWORD *)(a1 + 1760) = 0u;
  *(_DWORD *)(a1 + 1776) = 0;
  *(void *)uint64_t v29 = v29;
  *(void *)&v29[8] = v29;
  *(void *)&v29[16] = 0LL;
  sub_100ECBC80((uint64_t *)(a1 + 1784), v29);
  sub_100890314((uint64_t *)v29);
  *(void *)uint64_t v29 = v29;
  *(void *)&v29[8] = v29;
  *(void *)&v29[16] = 0LL;
  sub_100ECBC80((uint64_t *)(a1 + 1808), v29);
  sub_100890314((uint64_t *)v29);
  *(void *)(a1 + 1832) = 0x600000006LL;
  __int128 v25 = *(void **)(a1 + 1840);
  if (v25)
  {
    *(void *)(a1 + 1848) = v25;
    operator delete(v25);
  }

  *(void *)(a1 + 1840) = 0LL;
  *(void *)(a1 + 1848) = 0LL;
  *(void *)(a1 + 1856) = 0LL;
  *(void *)(a1 + 1864) = 0xBFF0000000000000LL;
  *(void *)(a1 + 1872) = 0xBFF0000000000000LL;
  uint64_t v26 = *(void *)(a1 + 1888);
  uint64_t v27 = *(void *)(a1 + 1880);
  while (v26 != v27)
    uint64_t v26 = sub_10000AE14(v26 - 56);
  *(void *)(a1 + 1888) = v27;
  sub_100D744C0((void **)(a1 + 1904));
  *(void *)(a1 + 1920) = 0LL;
  *(_OWORD *)(a1 + 1904) = 0u;
  memset(v29, 0, 24);
  unint64_t v56 = (void **)v29;
  sub_100D73A50(&v56);
  sub_100D744C0((void **)(a1 + 1928));
  *(void *)(a1 + 1944) = 0LL;
  *(_OWORD *)(a1 + 1928) = 0u;
  memset(v29, 0, 24);
  unint64_t v56 = (void **)v29;
  sub_100D73A50(&v56);
  *(_DWORD *)(a1 + 2072) = 0;
  *(void *)(a1 + 2200) = 0LL;
  *(void *)(a1 + 1968) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 2048) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 1976) = 0u;
  *(_OWORD *)(a1 + 1992) = 0u;
  *(_OWORD *)(a1 + 2008) = 0u;
  *(_OWORD *)(a1 + 2024) = 0u;
  *(void *)(a1 + 2037) = 0LL;
  *(void *)(a1 + 2056) = 0xBFF0000000000000LL;
  *(void *)(a1 + 2064) = 0xBFF0000000000000LL;
  return result;
}

uint64_t sub_100EB3A08(uint64_t a1)
{
  __int128 v2 = *(void **)(a1 + 208);
  if (v2)
  {
    *(void *)(a1 + 216) = v2;
    operator delete(v2);
  }

  sub_10000AE14(a1 + 120);
  uint64_t v3 = *(void **)(a1 + 88);
  if (v3)
  {
    *(void *)(a1 + 96) = v3;
    operator delete(v3);
  }

  return sub_10000AE14(a1);
}

uint64_t sub_100EB3A6C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  a1[246] = 0xBFF0000000000000LL;
  *((_DWORD *)a1 + 512) = 0;
  *(_OWORD *)(a1 + 247) = 0u;
  *(_OWORD *)(a1 + 249) = 0u;
  *(_OWORD *)(a1 + 251) = 0u;
  *(_OWORD *)(a1 + 253) = 0u;
  *(uint64_t *)((char *)a1 + 2037) = 0LL;
  a1[257] = 0xBFF0000000000000LL;
  a1[258] = 0xBFF0000000000000LL;
  __int128 v6 = (void *)a1[26];
  uint64_t v5 = (std::__shared_weak_count *)a1[27];
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      unint64_t v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }

  if (!v6)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    double v15 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v16 = *(void *)(a2 + 8);
      *(_DWORD *)__int128 buf = 134349056;
      uint64_t v105 = v16;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,Unexpected,invalid geometry pointer, mapMatch",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      uint64_t v58 = *(void *)(a2 + 8);
      int v81 = 134349056;
      uint64_t v82 = v58;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,Unexpected,invalid geometry pointer, mapMatch",  &v81,  12);
      unint64_t v14 = (uint8_t *)v59;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::mapMatch(CLMapCrumb &)",  "%s\n",  v59);
      goto LABEL_120;
    }

    goto LABEL_21;
  }

  sub_100D3EC08((uint64_t)v6);
  v6[1] = *(void *)(a2 + 8);
  (*(void (**)(void *))(*v6 + 96LL))(v6);
  sub_100F1F620(a2);
  double v9 = 0.0;
  if (*((double *)a1 + 64) > 0.0)
  {
    double v10 = *(double *)(a2 + 24);
    if (v10 < 0.0 || (double v11 = *((double *)a1 + 66), v11 < 0.0))
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      double v12 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)__int128 buf = 134349056;
        uint64_t v105 = v4;
        _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,unable to compute timeDiff",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188A8E0);
        }
        int v81 = 134349056;
        uint64_t v82 = v4;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,unable to compute timeDiff",  &v81,  12);
        unint64_t v14 = (uint8_t *)v13;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::mapMatch(CLMapCrumb &)",  "%s\n",  v13);
LABEL_120:
        if (v14 != buf) {
          free(v14);
        }
        goto LABEL_21;
      }

      goto LABEL_21;
    }

    if (v10 - v11 == 0.0)
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      uint64_t v18 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)__int128 buf = 134349056;
        uint64_t v105 = v4;
        _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,not matching, time betwen updates is 0.0",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188A8E0);
        }
        int v81 = 134349056;
        uint64_t v82 = v4;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,not matching, time betwen updates is 0.0",  &v81,  12);
        unint64_t v14 = (uint8_t *)v19;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::mapMatch(CLMapCrumb &)",  "%s\n",  v19);
        goto LABEL_120;
      }

void sub_100EB4D58( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

BOOL sub_100EB4DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 1888);
  uint64_t v5 = *(void *)(a1 + 1880);
  while (v4 != v5)
    uint64_t v4 = sub_10000AE14(v4 - 56);
  *(void *)(a1 + 1888) = v5;
  if (!*(_BYTE *)(a1 + 9)) {
    return 0LL;
  }
  uint64_t v6 = *(void *)(a1 + 208);
  __int128 v7 = *(std::__shared_weak_count **)(a1 + 216);
  uint64_t v21 = v6;
  uint64_t v22 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      unint64_t v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    uint64_t v19 = v6;
    unint64_t v20 = v7;
    do
      unint64_t v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
  }

  else
  {
    uint64_t v19 = v6;
    unint64_t v20 = 0LL;
  }

  BOOL v11 = sub_100D6E9D8(a2, &v19, (double *)(a1 + 168), (void *)(a1 + 1832), (uint64_t *)(a1 + 1880), 0, 100.0);
  double v12 = v20;
  if (v20)
  {
    __int128 v13 = (unint64_t *)&v20->__shared_owners_;
    do
      unint64_t v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }

  double v15 = v22;
  if (v22)
  {
    uint64_t v16 = (unint64_t *)&v22->__shared_owners_;
    do
      unint64_t v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }

  return v11;
}

void sub_100EB4F28( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
}

uint64_t sub_100EB4F44(uint64_t a1)
{
  *(_OWORD *)(v2 + 40) = 0u;
  *(_BYTE *)(v2 + 88) = 0;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  __asm { FMOV            V0.2D, #-1.0 }

  *(void *)(v2 + 120) = 0LL;
  *(_OWORD *)(v2 + 96) = _Q0;
  *(void *)(v2 + 112) = v2 + 120;
  *(void *)(v2 + 128) = 0LL;
  sub_100EB3338(v2 + 136);
  *(_BYTE *)(a1 + 904) = 0;
  return a1;
}

void sub_100EB4FB4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v4 = v3;
  sub_100ECA190(v4, *(void **)(v2 + 120));
  uint64_t v6 = *(void **)(v2 + 64);
  if (v6)
  {
    *(void *)(v2 + 72) = v6;
    operator delete(v6);
  }

  sub_100D73874((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100EB4FEC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7)
{
  uint64_t v14 = *(void *)(a1 + 208);
  __int128 v13 = *(std::__shared_weak_count **)(a1 + 216);
  uint64_t v57 = v14;
  uint64_t v58 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      unint64_t v16 = __ldxr(p_shared_owners);
    while (__stxr(v16 + 1, p_shared_owners));
  }

  if (!v14)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    __int128 v25 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v26 = *(void *)(a4 + 8);
      *(_DWORD *)__int128 buf = 134349056;
      uint64_t v66 = v26;
      _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,Unexpected,invalid geometry pointer, prepareSolution",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 0)) {
      goto LABEL_58;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    uint64_t v27 = *(void *)(a4 + 8);
    int v61 = 134349056;
    uint64_t v62 = v27;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,Unexpected,invalid geometry pointer, prepareSolution",  &v61,  12);
    uint64_t v29 = (uint8_t *)v28;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::prepareSolution(const std::vector<CLParticleMapMatcherCommon::P article> &, const MMSnapData &, CLMapCrumb &, BOOL, BOOL, MMFilterData &)",  "%s\n",  v28);
LABEL_89:
    if (v29 != buf) {
      free(v29);
    }
    goto LABEL_58;
  }

  uint64_t v17 = *(void *)(a4 + 8);
  __int128 v18 = *(_OWORD *)a4;
  __int128 v19 = *(_OWORD *)(a4 + 16);
  __int128 v20 = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(a7 + 408) = *(_OWORD *)(a4 + 32);
  *(_OWORD *)(a7 + 424) = v20;
  *(_OWORD *)(a7 + 376) = v18;
  *(_OWORD *)(a7 + 392) = v19;
  __int128 v21 = *(_OWORD *)(a4 + 64);
  __int128 v22 = *(_OWORD *)(a4 + 80);
  __int128 v23 = *(_OWORD *)(a4 + 112);
  *(_OWORD *)(a7 + 472) = *(_OWORD *)(a4 + 96);
  *(_OWORD *)(a7 + 488) = v23;
  *(_OWORD *)(a7 + 440) = v21;
  *(_OWORD *)(a7 + 456) = v22;
  std::string::operator=((std::string *)(a7 + 504), (const std::string *)(a4 + 128));
  memcpy((void *)(a7 + 528), (const void *)(a4 + 152), 0x118uLL);
  if (*(void *)(a7 + 48) != *(void *)(a7 + 40)
    || ((*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 24LL))(a1, a7) & 1) != 0)
  {
    sub_100ECA7B4((uint64_t)&v61, a4, *(unsigned __int8 *)(a1 + 1032), 1.0);
    *(_BYTE *)(a7 + 904) = *(_BYTE *)(a1 + 1032);
    if (a6)
    {
      unint64_t v63 = 0xBFF0000000000000LL;
      unint64_t v64 = 0xBFF0000000000000LL;
    }

    if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 40LL))(a1, a4, a7, a3) & 1) != 0)
    {
      if (sub_100EAEA88(a7, 1, (uint64_t)&v61))
      {
        char v24 = 0;
LABEL_36:
        *(_BYTE *)(a7 + 897) = 0;
        if (a5)
        {
          int v34 = sub_100EBA550(a1, a7);
          *(_BYTE *)(a7 + 897) = v34;
          if (v34)
          {
            if (qword_1019348B0 != -1) {
              dispatch_once(&qword_1019348B0, &stru_10188A8E0);
            }
            BOOL v35 = (os_log_s *)qword_1019348B8;
            if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
            {
              *(_DWORD *)__int128 buf = 134349056;
              uint64_t v66 = v17;
              _os_log_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,using route hints",  buf,  0xCu);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1019348B0 != -1) {
                dispatch_once(&qword_1019348B0, &stru_10188A8E0);
              }
              int v59 = 134349056;
              uint64_t v60 = v17;
              LODWORD(v54) = 12;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,using route hints",  &v59,  v54);
              __int128 v50 = (uint8_t *)v49;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::prepareSolution(const std::vector<CLParticleMapMatche rCommon::Particle> &, const MMSnapData &, CLMapCrumb &, BOOL, BOOL, MMFilterData &)",  "%s\n",  v49);
              if (v50 != buf) {
                free(v50);
              }
            }
          }
        }

        if ((v24 & 1) == 0)
        {
          uint64_t v55 = v14;
          unint64_t v56 = v13;
          if (v13)
          {
            int v36 = (unint64_t *)&v13->__shared_owners_;
            do
              unint64_t v37 = __ldxr(v36);
            while (__stxr(v37 + 1, v36));
          }

          char v38 = sub_100EAECA8(a7, &v55, a3);
          char v39 = v38;
          if (!v13) {
            goto LABEL_51;
          }
          uint64_t v40 = (unint64_t *)&v13->__shared_owners_;
          do
            unint64_t v41 = __ldaxr(v40);
          while (__stlxr(v41 - 1, v40));
          if (!v41)
          {
            ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
            std::__shared_weak_count::__release_weak(v13);
            if ((v39 & 1) != 0) {
              goto LABEL_52;
            }
          }

          else
          {
LABEL_51:
            if ((v38 & 1) != 0)
            {
LABEL_52:
              uint64_t v42 = 0LL;
              goto LABEL_67;
            }
          }

          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10188A8E0);
          }
          __int128 v44 = (os_log_s *)qword_1019348B8;
          if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)__int128 buf = 134349056;
            uint64_t v66 = v17;
            _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,filterReset, prepareCandidates failed",  buf,  0xCu);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1019348B0 != -1) {
              dispatch_once(&qword_1019348B0, &stru_10188A8E0);
            }
            int v59 = 134349056;
            uint64_t v60 = v17;
            LODWORD(v54) = 12;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,filterReset, prepareCandidates failed",  &v59,  v54,  v55,  v56,  v57);
            __int128 v52 = (uint8_t *)v51;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::prepareSolution(const std::vector<CLParticleMapMatcherC ommon::Particle> &, const MMSnapData &, CLMapCrumb &, BOOL, BOOL, MMFilterData &)",  "%s\n",  v51);
            if (v52 != buf) {
              free(v52);
            }
          }
        }

        uint64_t v42 = 1LL;
LABEL_67:
        __int128 v13 = v58;
        if (!v58) {
          return v42;
        }
        goto LABEL_68;
      }

      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      __int128 v33 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)__int128 buf = 134349056;
        uint64_t v66 = v17;
        _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,filterReset, update failed",  buf,  0xCu);
      }

      if (!sub_1002921D0(115, 2))
      {
LABEL_35:
        char v24 = 1;
        goto LABEL_36;
      }

      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      int v59 = 134349056;
      uint64_t v60 = v17;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,filterReset, update failed",  &v59,  12);
      __int128 v32 = (uint8_t *)v48;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::prepareSolution(const std::vector<CLParticleMapMatcherCommon: :Particle> &, const MMSnapData &, CLMapCrumb &, BOOL, BOOL, MMFilterData &)",  "%s\n",  v48);
    }

    else
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      __int128 v30 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)__int128 buf = 134349056;
        uint64_t v66 = v17;
        _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,filterReset, prediction failed",  buf,  0xCu);
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_35;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      int v59 = 134349056;
      uint64_t v60 = v17;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,filterReset, prediction failed",  &v59,  12);
      __int128 v32 = (uint8_t *)v31;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::prepareSolution(const std::vector<CLParticleMapMatcherCommon: :Particle> &, const MMSnapData &, CLMapCrumb &, BOOL, BOOL, MMFilterData &)",  "%s\n",  v31);
    }

    if (v32 != buf) {
      free(v32);
    }
    goto LABEL_35;
  }

  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_10188A8E0);
  }
  uint64_t v43 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)__int128 buf = 134349056;
    uint64_t v66 = v17;
    _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,unable to initialize filter",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    int v61 = 134349056;
    uint64_t v62 = v17;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,unable to initialize filter",  &v61,  12);
    uint64_t v29 = (uint8_t *)v53;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::prepareSolution(const std::vector<CLParticleMapMatcherCommon::P article> &, const MMSnapData &, CLMapCrumb &, BOOL, BOOL, MMFilterData &)",  "%s\n",  v53);
    goto LABEL_89;
  }

void sub_100EB5A24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
}

void sub_100EB5A6C(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = a1[26];
  if (v6)
  {
    if ((*(unsigned int (**)(uint64_t))(*(void *)v6 + 104LL))(v6)
      && *(_BYTE *)(a4 + 897) != 0
      && a1[239] != a1[238]
      && *(_BYTE *)(a4 + 882) != 0)
    {
      if (*(void *)(a4 + 256))
      {
        if (*(_BYTE *)(a3 + 504))
        {
          uint64_t v13 = a3 + 120;
          if (*(void *)(a3 + 120))
          {
            double v14 = *(double *)(a5 + 192);
            if (v14 > 25.0 || v14 <= 0.0 || *(double *)(a5 + 104) < 0.0)
            {
              if (qword_1019348B0 != -1) {
                dispatch_once(&qword_1019348B0, &stru_10188A8E0);
              }
              __int128 v19 = (os_log_s *)qword_1019348B8;
              if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
              {
                uint64_t v20 = *(void *)(a5 + 8);
                double v21 = *(double *)(a5 + 192);
                *(_DWORD *)__int128 buf = 134349312;
                uint64_t v93 = v20;
                __int16 v94 = 2050;
                double v95 = v21;
                _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,checkForUserDeviationFromRoute skipped,courseUnc,%{public}.2lf",  buf,  0x16u);
              }

              if (sub_1002921D0(115, 2))
              {
                bzero(buf, 0x65CuLL);
                if (qword_1019348B0 != -1) {
                  dispatch_once(&qword_1019348B0, &stru_10188A8E0);
                }
                uint64_t v22 = *(void *)(a5 + 8);
                uint64_t v23 = *(void *)(a5 + 192);
                int v81 = 134349312;
                uint64_t v82 = v22;
                __int16 v83 = 2050;
                uint64_t v84 = v23;
                _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,checkForUserDeviationFromRoute skipped,courseUnc,%{public}.2lf",  &v81,  22);
                __int128 v25 = (uint8_t *)v24;
                sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLParticleMM::CLParticleMapMatcherFilterBase::checkForUserDeviationFromRoute(const std::vector<CL ParticleMapMatcherCommon::Particle> &, const MMSnapData &, MMFilterData &, CLMapCrumb &)",  "%s\n",  v24);
                if (v25 != buf) {
                  free(v25);
                }
              }
            }

            else
            {
              uint64_t v15 = *(void *)(a5 + 8);
              sub_100EB4F44((uint64_t)&v81);
              char v16 = sub_100EB4FEC((uint64_t)a1, a2, a3, a5, 0, 0, (uint64_t)&v81);
              if (v91) {
                char v17 = v16;
              }
              else {
                char v17 = 1;
              }
              if ((v17 & 1) == 0 && v85)
              {
                for (uint64_t i = *(void *)(a4 + 344); i != *(void *)(a4 + 352); i += 72LL)
                {
                  if (*(_DWORD *)(i + 64) == 1) {
                    goto LABEL_37;
                  }
                }

                uint64_t i = 0LL;
LABEL_37:
                uint64_t v26 = v89;
                if (v89 != v90)
                {
                  while (*(_DWORD *)(v26 + 64) != 1)
                  {
                    v26 += 72LL;
                    if (v26 == v90) {
                      goto LABEL_62;
                    }
                  }

                  if (i)
                  {
                    double v27 = *(double *)i;
                    if (*(double *)i > 0.0)
                    {
                      double v28 = *(double *)v26;
                      uint64_t v29 = (double *)(a1 + 21);
                      double v30 = sub_100EB2B44(a4 + 256, v29, v13);
                      double v31 = sub_100EB2B44((uint64_t)&v85, v29, v13);
                      double v32 = v28 / v27;
                      double v33 = fmod(*(double *)(a5 + 104) - v86, 360.0);
                      if (v33 < 0.0) {
                        double v33 = v33 + 360.0;
                      }
                      if (v33 > 180.0) {
                        double v33 = v33 + -360.0;
                      }
                      if (qword_1019348B0 != -1)
                      {
                        double v44 = v33;
                        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
                        double v33 = v44;
                      }

                      double v34 = fabs(v32);
                      double v35 = fabs(v33);
                      int v36 = (os_log_s *)qword_1019348B8;
                      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
                      {
                        uint64_t v37 = *(void *)(a4 + 288);
                        uint64_t v38 = *(void *)(a4 + 296);
                        double v39 = *(float *)(a4 + 280);
                        uint64_t v40 = **(void **)(a4 + 256);
                        uint64_t v41 = *v85;
                        *(_DWORD *)__int128 buf = 134352129;
                        uint64_t v93 = v15;
                        __int16 v94 = 2050;
                        double v95 = v30;
                        __int16 v96 = 2050;
                        double v97 = v31;
                        __int16 v98 = 2050;
                        double v99 = v35;
                        __int16 v100 = 2050;
                        double v101 = v34;
                        __int16 v102 = 2049;
                        uint64_t v103 = v37;
                        __int16 v104 = 2049;
                        uint64_t v105 = v38;
                        __int16 v106 = 2050;
                        double v107 = v39;
                        __int16 v108 = 2049;
                        uint64_t v109 = v40;
                        __int16 v110 = 2049;
                        uint64_t v111 = v87;
                        __int16 v112 = 2049;
                        uint64_t v113 = v88;
                        __int16 v114 = 2050;
                        double v115 = v86;
                        __int16 v116 = 2049;
                        uint64_t v117 = v41;
                        _os_log_impl( (void *)&_mh_execute_header,  v36,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,routeHints,solutionDiff,%{public}.2lf,newSolutionDiff,%{public}.2lf,cour seDiffNewAndRawSolution,%{public}.2lf,factor,%{public}.5lf,bestParticle,%{private}.8lf,%{priva te}.8lf,%{public}.3lf,%{private}lld,newBestParticle,%{private}.8lf,%{private}.8lf,%{public}.3lf,%{private}lld",  buf,  0x84u);
                      }

                      if (sub_1002921D0(115, 2))
                      {
                        bzero(buf, 0x65CuLL);
                        if (qword_1019348B0 != -1) {
                          dispatch_once(&qword_1019348B0, &stru_10188A8E0);
                        }
                        uint64_t v45 = *(void *)(a4 + 288);
                        uint64_t v46 = *(void *)(a4 + 296);
                        double v47 = *(float *)(a4 + 280);
                        uint64_t v48 = **(void **)(a4 + 256);
                        uint64_t v49 = *v85;
                        int v55 = 134352129;
                        uint64_t v56 = v15;
                        __int16 v57 = 2050;
                        double v58 = v30;
                        __int16 v59 = 2050;
                        double v60 = v31;
                        __int16 v61 = 2050;
                        double v62 = v35;
                        __int16 v63 = 2050;
                        double v64 = v34;
                        __int16 v65 = 2049;
                        uint64_t v66 = v45;
                        __int16 v67 = 2049;
                        uint64_t v68 = v46;
                        __int16 v69 = 2050;
                        double v70 = v47;
                        __int16 v71 = 2049;
                        uint64_t v72 = v48;
                        __int16 v73 = 2049;
                        uint64_t v74 = v87;
                        __int16 v75 = 2049;
                        uint64_t v76 = v88;
                        __int16 v77 = 2050;
                        double v78 = v86;
                        __int16 v79 = 2049;
                        uint64_t v80 = v49;
                        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,routeHints,solutionDiff,%{public}.2lf,newSolutionDiff,%{public}.2lf,cour seDiffNewAndRawSolution,%{public}.2lf,factor,%{public}.5lf,bestParticle,%{private}.8lf,%{priva te}.8lf,%{public}.3lf,%{private}lld,newBestParticle,%{private}.8lf,%{private}.8lf,%{public}.3lf,%{private}lld",  &v55,  132);
                        __int128 v51 = (uint8_t *)v50;
                        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLParticleMM::CLParticleMapMatcherFilterBase::checkForUserDeviationFromRoute(const std::v ector<CLParticleMapMatcherCommon::Particle> &, const MMSnapData &, MMFilterData &, CLMapCrumb &)",  "%s\n",  v50);
                        if (v51 != buf) {
                          free(v51);
                        }
                      }

                      if (v35 < 25.0 && v34 >= 2.0)
                      {
                        if (qword_1019348B0 != -1) {
                          dispatch_once(&qword_1019348B0, &stru_10188A8E0);
                        }
                        uint64_t v43 = (os_log_s *)qword_1019348B8;
                        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
                        {
                          *(_DWORD *)__int128 buf = 134349568;
                          uint64_t v93 = v15;
                          __int16 v94 = 2050;
                          double v95 = v34;
                          __int16 v96 = 2050;
                          double v97 = v35;
                          _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,filter swapped with local filter without routeHints,local,factor,%{pub lic}.5lf,courseDiffNewAndRawSolution,%{public}.2lf",  buf,  0x20u);
                        }

                        if (sub_1002921D0(115, 2))
                        {
                          bzero(buf, 0x65CuLL);
                          if (qword_1019348B0 != -1) {
                            dispatch_once(&qword_1019348B0, &stru_10188A8E0);
                          }
                          int v55 = 134349568;
                          uint64_t v56 = v15;
                          __int16 v57 = 2050;
                          double v58 = v34;
                          __int16 v59 = 2050;
                          double v60 = v35;
                          LODWORD(v54) = 32;
                          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,filter swapped with local filter without routeHints,local,factor,%{pub lic}.5lf,courseDiffNewAndRawSolution,%{public}.2lf",  &v55,  v54);
                          __int128 v53 = (uint8_t *)v52;
                          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLParticleMM::CLParticleMapMatcherFilterBase::checkForUserDeviationFromRoute(const std: :vector<CLParticleMapMatcherCommon::Particle> &, const MMSnapData &, MMFilterData &, CLMapCrumb &)",  "%s\n",  v52);
                          if (v53 != buf) {
                            free(v53);
                          }
                        }

                        sub_100EBA65C(a4, (__int128 *)&v81);
                      }
                    }
                  }
                }
              }

void sub_100EB6220( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, char a29)
{
}

void sub_100EB6254(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (*(_BYTE *)(a4 + 882)) {
    BOOL v5 = *(_BYTE *)(a3 + 504) == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (v5) {
    return;
  }
  uint64_t v7 = a3 + 120;
  if (!*(void *)(a3 + 120)) {
    return;
  }
  uint64_t v12 = *(void *)(a1 + 208);
  if (v12)
  {
    else {
      double v13 = 10.0;
    }
  }

  else
  {
    double v13 = 10.0;
  }

  double v14 = *(double *)(a5 + 24);
  double v15 = -1.0;
  if (v14 >= 0.0)
  {
    double v16 = *(double *)(a3 + 264);
    double v17 = vabdd_f64(v14, v16);
    if (v16 >= 0.0) {
      double v15 = v17;
    }
    else {
      double v15 = -1.0;
    }
  }

  uint64_t v18 = *(void *)(a5 + 8);
  double v19 = sub_100EB2B44(a4 + 256, (double *)(a1 + 168), v7);
  double v20 = *(double *)(a4 + 856) * 0.2;
  if (v20 < 0.1) {
    double v20 = 0.1;
  }
  if (v20 > 0.4) {
    double v20 = 0.4;
  }
  if (v19 < v20) {
    return;
  }
  if (sub_100ECF4A4(a1 + 1832, *(double *)(a4 + 400), 6.0))
  {
    double v21 = *(double *)(a4 + 856) * 3.0;
    BOOL v22 = v19 <= v21 || *(void *)(a4 + 256) == 0LL;
    if (!v22 && !*(_BYTE *)(a4 + 881))
    {
      float v23 = *(float *)(a3 + 144);
      double v24 = fmod((float)(v23 - *(float *)(a4 + 280)), 360.0);
      if (v24 < 0.0) {
        double v24 = v24 + 360.0;
      }
      if (v24 <= 180.0) {
        double v25 = v24;
      }
      else {
        double v25 = v24 + -360.0;
      }
      uint64_t v110 = 0LL;
      double v111 = 0.0;
      sub_100D2E36C( (double *)(a1 + 168),  &v111,  (double *)&v110,  *(double *)(a4 + 288),  *(double *)(a4 + 296),  0.0,  v23,  *(double *)(a3 + 152),  *(double *)(a3 + 160));
      double v26 = fabs(v25);
      double v27 = *(double *)(a1 + 2200);
      if (v27 <= 5.0)
      {
        if (v27 >= 10.0)
        {
          BOOL v28 = 1;
          goto LABEL_40;
        }
      }

      else
      {
        BOOL v28 = 1;
        if (v27 >= 10.0 || fabs(*(double *)(a4 + 616)) < 7.0)
        {
LABEL_40:
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10188A8E0);
          }
          uint64_t v29 = (os_log_s *)qword_1019348B8;
          if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v30 = *(void *)(a1 + 2200);
            double v31 = fabs(*(double *)(a4 + 616));
            uint64_t v32 = *(void *)(a4 + 288);
            uint64_t v33 = *(void *)(a4 + 296);
            *(_DWORD *)__int128 buf = 134350849;
            *(void *)&uint8_t buf[4] = v18;
            *(_WORD *)&_BYTE buf[12] = 1026;
            *(_DWORD *)&buf[14] = v28;
            *(_WORD *)&buf[18] = 2050;
            *(void *)&buf[20] = v30;
            *(_WORD *)&buf[28] = 2050;
            *(double *)&buf[30] = v31;
            *(_WORD *)&buf[38] = 2050;
            *(double *)&buf[40] = v26;
            *(_WORD *)&uint8_t buf[48] = 2050;
            *(double *)&buf[50] = v111;
            *(_WORD *)&buf[58] = 2049;
            *(void *)&buf[60] = v32;
            __int16 v140 = 2049;
            uint64_t v141 = v33;
            _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,solutionJumpCheck,shouldNotPropagateFromLastSnap,%{public}d,consecutiveAmbiguityEpoc hCount,%{public}.1lf,deltaAz,%{public}.2lf,courseDiffWithPriorSolution,%{public}.2lf,acrossTrack,%{public} .2lf,bestLL,%{private}.7lf,%{private}.7lf",  buf,  0x4Eu);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1019348B0 != -1) {
              dispatch_once(&qword_1019348B0, &stru_10188A8E0);
            }
            uint64_t v91 = *(void *)(a1 + 2200);
            double v92 = fabs(*(double *)(a4 + 616));
            uint64_t v93 = *(void *)(a4 + 288);
            uint64_t v94 = *(void *)(a4 + 296);
            *(_DWORD *)__int16 v112 = 134350849;
            *(void *)&v112[4] = v18;
            __int16 v113 = 1026;
            *(_DWORD *)__int16 v114 = v28;
            *(_WORD *)&v114[4] = 2050;
            *(void *)&v114[6] = v91;
            *(_WORD *)&v114[14] = 2050;
            *(double *)&v114[16] = v92;
            *(_WORD *)&v114[24] = 2050;
            double v115 = v26;
            *(_WORD *)__int16 v116 = 2050;
            *(double *)&v116[2] = v111;
            __int16 v117 = 2049;
            uint64_t v118 = v93;
            __int16 v119 = 2049;
            uint64_t v120 = v94;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,solutionJumpCheck,shouldNotPropagateFromLastSnap,%{public}d,consecutiveAmbiguityEpoc hCount,%{public}.1lf,deltaAz,%{public}.2lf,courseDiffWithPriorSolution,%{public}.2lf,acrossTrack,%{public} .2lf,bestLL,%{private}.7lf,%{private}.7lf",  v112,  78);
            __int16 v96 = (char *)v95;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLParticleMM::CLParticleMapMatcherFilterBase::checkForSolutionJumpsAndRecomputeSolution(const std::ve ctor<CLParticleMapMatcherCommon::Particle> &, const MMSnapData &, MMFilterData &, CLMapCrumb &)",  "%s\n",  v95);
            if (v96 != buf) {
              free(v96);
            }
          }

          if (!v28)
          {
            sub_100BDC7E0((uint64_t)v112, v7);
            uint64_t v61 = *(void *)(a1 + 208);
            uint64_t v62 = *(void *)(a1 + 216);
            v109[0] = v61;
            v109[1] = v62;
            if (v62)
            {
              __int16 v63 = (unint64_t *)(v62 + 8);
              do
                unint64_t v64 = __ldxr(v63);
              while (__stxr(v64 + 1, v63));
            }

            p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
            if (v61)
            {
              int v127 = 0;
              *(void *)__int128 buf = buf;
              *(void *)&uint8_t buf[8] = buf;
              *(void *)&buf[16] = 0LL;
              (*(void (**)(uint64_t, _BYTE *, _BYTE *, int *, double, double))(*(void *)v61 + 56LL))( v61,  v112,  buf,  &v127,  *(double *)v116,  *(double *)(a4 + 856));
              sub_100890314((uint64_t *)buf);
            }

            if (*(void *)v112)
            {
              uint64_t v66 = v18;
              if (qword_1019348B0 != -1) {
                dispatch_once(&qword_1019348B0, &stru_10188A8E0);
              }
              __int16 v67 = (os_log_s *)qword_1019348B8;
              if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
              {
                uint64_t v68 = *(void *)(a4 + 288);
                uint64_t v69 = *(void *)(a4 + 296);
                *(_DWORD *)__int128 buf = 134350337;
                *(void *)&uint8_t buf[4] = v18;
                *(_WORD *)&_BYTE buf[12] = 2050;
                *(double *)&buf[14] = v19;
                *(_WORD *)&buf[22] = 2049;
                *(void *)&_BYTE buf[24] = v68;
                *(_WORD *)&buf[32] = 2049;
                *(void *)&buf[34] = v69;
                *(_WORD *)&buf[42] = 2049;
                *(void *)&buf[44] = *(void *)&v114[18];
                *(_WORD *)&buf[52] = 2049;
                *(double *)&buf[54] = v115;
                _os_log_impl( (void *)&_mh_execute_header,  v67,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,solutionJumpCheck,solution replaced with previous propagated solution,%{public}. 2lf,bestLL,%{private}.7lf,%{private}.7lf,newLL,%{private}.7lf,%{private}.7lf",  buf,  0x3Eu);
              }

              if (sub_1002921D0(115, 2))
              {
                bzero(buf, 0x65CuLL);
                if (qword_1019348B0 != -1) {
                  dispatch_once(&qword_1019348B0, &stru_10188A8E0);
                }
                double v101 = *(double *)(a4 + 288);
                uint64_t v102 = *(void *)(a4 + 296);
                int v127 = 134350337;
                uint64_t v128 = v18;
                __int16 v129 = 2050;
                double v130 = v19;
                __int16 v131 = 2049;
                double v132 = v101;
                __int16 v133 = 2049;
                uint64_t v134 = v102;
                __int16 v135 = 2049;
                uint64_t v136 = *(void *)&v114[18];
                __int16 v137 = 2049;
                double v138 = v115;
                LODWORD(v108) = 62;
                _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,solutionJumpCheck,solution replaced with previous propagated solution,%{public}. 2lf,bestLL,%{private}.7lf,%{private}.7lf,newLL,%{private}.7lf,%{private}.7lf",  &v127,  v108);
                __int16 v104 = (char *)v103;
                sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLParticleMM::CLParticleMapMatcherFilterBase::checkForSolutionJumpsAndRecomputeSolution(const std ::vector<CLParticleMapMatcherCommon::Particle> &, const MMSnapData &, MMFilterData &, CLMapCrumb &)",  "%s\n",  v103);
                if (v104 != buf) {
                  free(v104);
                }
                uint64_t v66 = v18;
                p_vtable = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
              }

              sub_100BDC7E0((uint64_t)&v127, a4 + 256);
              sub_100D5DB64(a4 + 256, (uint64_t)v112);
              if (sub_100EA92D8(a4 + 136))
              {
                *(_BYTE *)(a4 + 881) = 1;
                *(_BYTE *)(a4 + 848) = 1;
              }

              else
              {
                sub_100D5DB64(a4 + 256, (uint64_t)&v127);
                if (qword_1019348B0 != -1) {
                  dispatch_once(&qword_1019348B0, &stru_10188A8E0);
                }
                uint64_t v84 = (os_log_s *)p_vtable[279];
                if (os_log_type_enabled(v84, OS_LOG_TYPE_ERROR))
                {
                  *(_DWORD *)__int128 buf = 134349056;
                  *(void *)&uint8_t buf[4] = v66;
                  _os_log_impl( (void *)&_mh_execute_header,  v84,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,solutionJumpCheck,solution replacement failed as unable to fillCrumb",  buf,  0xCu);
                }

                if (sub_1002921D0(115, 0))
                {
                  bzero(buf, 0x65CuLL);
                  if (qword_1019348B0 != -1) {
                    dispatch_once(&qword_1019348B0, &stru_10188A8E0);
                  }
                  int v125 = 134349056;
                  uint64_t v126 = v18;
                  LODWORD(v108) = 12;
                  _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,solutionJumpCheck,solution replacement failed as unable to fillCrumb",  &v125,  v108);
                  double v107 = (char *)v106;
                  sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLParticleMM::CLParticleMapMatcherFilterBase::checkForSolutionJumpsAndRecomputeSolution(const s td::vector<CLParticleMapMatcherCommon::Particle> &, const MMSnapData &, MMFilterData &, CLMapCrumb &)",  "%s\n",  v106);
                  if (v107 != buf) {
                    free(v107);
                  }
                }
              }

              sub_100BDC958((uint64_t)&v127);
            }

            else
            {
              if (qword_1019348B0 != -1) {
                dispatch_once(&qword_1019348B0, &stru_10188A8E0);
              }
              int v81 = (os_log_s *)qword_1019348B8;
              if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)__int128 buf = 134349056;
                *(void *)&uint8_t buf[4] = v18;
                _os_log_impl( (void *)&_mh_execute_header,  v81,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,solutionJumpCheck,solution replacement failed as returned particle has invalid road",  buf,  0xCu);
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(buf, 0x65CuLL);
                if (qword_1019348B0 != -1) {
                  dispatch_once(&qword_1019348B0, &stru_10188A8E0);
                }
                int v127 = 134349056;
                uint64_t v128 = v18;
                LODWORD(v108) = 12;
                _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,solutionJumpCheck,solution replacement failed as returned particle has invalid road",  &v127,  v108);
                __int16 v83 = (char *)v82;
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLParticleMM::CLParticleMapMatcherFilterBase::checkForSolutionJumpsAndRecomputeSolution(const std ::vector<CLParticleMapMatcherCommon::Particle> &, const MMSnapData &, MMFilterData &, CLMapCrumb &)",  "%s\n",  v82);
                if (v83 != buf) {
                  free(v83);
                }
              }
            }

            sub_10000AE14((uint64_t)v109);
            sub_100BDC958((uint64_t)v112);
            return;
          }

          goto LABEL_46;
        }
      }

      BOOL v28 = fabs(v111) < v21 && v26 < 30.0;
      goto LABEL_40;
    }
  }

void sub_100EB7D28( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

uint64_t sub_100EB7DB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a2 + 48) == *(void *)(a2 + 40)) {
    return 0LL;
  }
  double v4 = *(double *)(a2 + 384);
  if (*(_BYTE *)(a2 + 881))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    BOOL v5 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)__int128 buf = 134349056;
      *(double *)&uint8_t buf[4] = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,isSolutionAmbiguous check,already ambiguous",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 2)) {
      return 1LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    *(_DWORD *)uint64_t v177 = 134349056;
    *(double *)&v177[4] = v4;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,isSolutionAmbiguous check,already ambiguous",  v177,  12);
    double v47 = (char *)v139;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::isSolutionAmbiguous(MMFilterData &, const MMSnapData &)",  "%s\n",  v139);
LABEL_225:
    if (v47 != buf) {
      free(v47);
    }
    return 1LL;
  }

  int v9 = *(_DWORD *)(a2 + 792) - 2;
  double v10 = 10.0;
  double v11 = *(double *)(a2 + 456) + *(double *)(a2 + 456);
  if (v11 >= v10) {
    double v11 = v10;
  }
  if (v11 >= 7.0) {
    double v12 = v11;
  }
  else {
    double v12 = 7.0;
  }
  double v13 = fabs(*(double *)(a2 + 632));
  if (*(_BYTE *)(a2 + 882))
  {
    sub_100EBE164((char *)(a1 + 2120), *(double *)(a2 + 608));
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    double v14 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      int v15 = *(_DWORD *)(a1 + 2144);
      uint64_t v16 = *(void *)(a2 + 608);
      uint64_t v17 = *(void *)(a1 + 2152);
      uint64_t v18 = *(double **)(a1 + 2184);
      double v19 = *(double **)(a1 + 2176);
      unint64_t v20 = v18 - v19;
      double v21 = 0.0;
      if (v18 == v19)
      {
        double v32 = 0.0;
        double v33 = 0.0;
      }

      else
      {
        BOOL v22 = *(double **)(a1 + 2176);
        do
        {
          double v23 = *v22++;
          double v21 = v21 + v23;
        }

        while (v22 != v18);
        uint64_t v24 = 60LL;
        if (v20 < 0x3C) {
          uint64_t v24 = v20;
        }
        double v25 = 0.0;
        double v26 = 0.0;
        if (v24)
        {
          double v27 = *(double **)(a1 + 2176);
          do
          {
            double v28 = *v27++;
            double v26 = v26 + v28;
            --v24;
          }

          while (v24);
        }

        double v29 = (double)v20;
        uint64_t v30 = 30LL;
        if (v20 < 0x1E) {
          uint64_t v30 = v20;
        }
        if (v30)
        {
          double v25 = 0.0;
          do
          {
            double v31 = *v19++;
            double v25 = v25 + v31;
            --v30;
          }

          while (v30);
        }

        double v32 = v21 / v29;
        double v21 = v26 / v29;
        double v33 = v25 / v29;
      }

      int v34 = *(unsigned __int8 *)(a2 + 640);
      double v35 = fabs(*(double *)(a2 + 616));
      BOOL v36 = *(void *)(a1 + 2088) != 0LL;
      BOOL v37 = *(void *)(a1 + 2080) != 0LL;
      *(_DWORD *)__int128 buf = 134352384;
      *(double *)&uint8_t buf[4] = v4;
      *(_WORD *)&_BYTE buf[12] = 1026;
      *(_DWORD *)&buf[14] = v15;
      *(_WORD *)&buf[18] = 2050;
      *(void *)&buf[20] = v16;
      *(_WORD *)&buf[28] = 2050;
      *(void *)&buf[30] = v17;
      *(_WORD *)&buf[38] = 2050;
      *(double *)&buf[40] = v32;
      *(_WORD *)&uint8_t buf[48] = 2050;
      *(void *)&buf[50] = v20;
      *(_WORD *)&buf[58] = 2050;
      *(double *)int v194 = v21;
      *(_WORD *)&v194[8] = 2050;
      *(double *)double v195 = v33;
      *(_WORD *)&v195[8] = 1026;
      int v196 = v34;
      __int16 v197 = 2050;
      double v198 = v35;
      __int16 v199 = 2050;
      double v200 = v13;
      __int16 v201 = 2050;
      double v202 = v12;
      __int16 v203 = 1026;
      BOOL v204 = v36;
      __int16 v205 = 1026;
      BOOL v206 = v37;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,AverageVarianceFactor,count,%{public}d,vf,%{public}.4lf,avf,%{public}.4lf,avfBuffer,%{publ ic}.4lf,avfBufferCnt,%{public}zu,avfBuffer60,%{public}.4lf,avfBuffer30,%{public}.4lf,isUsable,%{public}d,deltaAz ,%{public}.2lf,fabsAT,%{public}.2lf,threshold,%{public}.2lf,usingAPI,%{public}d,usingBuffer,%{public}d",  buf,  0x7Eu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      int v140 = *(_DWORD *)(a1 + 2144);
      uint64_t v141 = *(void *)(a2 + 608);
      uint64_t v142 = *(void *)(a1 + 2152);
      double v143 = *(double **)(a1 + 2184);
      double v144 = *(double **)(a1 + 2176);
      unint64_t v145 = v143 - v144;
      double v146 = 0.0;
      if (v143 == v144)
      {
        double v157 = 0.0;
        double v158 = 0.0;
      }

      else
      {
        double v147 = *(double **)(a1 + 2176);
        do
        {
          double v148 = *v147++;
          double v146 = v146 + v148;
        }

        while (v147 != v143);
        uint64_t v149 = 60LL;
        if (v145 < 0x3C) {
          uint64_t v149 = v145;
        }
        double v150 = 0.0;
        double v151 = 0.0;
        if (v149)
        {
          __int16 v152 = *(double **)(a1 + 2176);
          do
          {
            double v153 = *v152++;
            double v151 = v151 + v153;
            --v149;
          }

          while (v149);
        }

        double v154 = (double)v145;
        uint64_t v155 = 30LL;
        if (v145 < 0x1E) {
          uint64_t v155 = v145;
        }
        if (v155)
        {
          double v150 = 0.0;
          do
          {
            double v156 = *v144++;
            double v150 = v150 + v156;
            --v155;
          }

          while (v155);
        }

        double v157 = v146 / v154;
        double v146 = v151 / v154;
        double v158 = v150 / v154;
      }

      int v159 = *(unsigned __int8 *)(a2 + 640);
      double v160 = fabs(*(double *)(a2 + 616));
      BOOL v161 = *(void *)(a1 + 2088) != 0LL;
      BOOL v162 = *(void *)(a1 + 2080) != 0LL;
      *(_DWORD *)uint64_t v177 = 134352384;
      *(double *)&v177[4] = v4;
      __int16 v178 = 1026;
      *(_DWORD *)__int128 v179 = v140;
      *(_WORD *)&v179[4] = 2050;
      *(void *)&v179[6] = v141;
      *(_WORD *)&v179[14] = 2050;
      *(void *)&v179[16] = v142;
      *(_WORD *)&v179[24] = 2050;
      *(double *)&v179[26] = v157;
      *(_WORD *)&v179[34] = 2050;
      *(void *)&v179[36] = v145;
      *(_WORD *)&v179[44] = 2050;
      *(double *)int v180 = v146;
      *(_WORD *)&v180[8] = 2050;
      *(double *)v181 = v158;
      *(_WORD *)&v181[8] = 1026;
      int v182 = v159;
      __int16 v183 = 2050;
      double v184 = v160;
      __int16 v185 = 2050;
      double v186 = v13;
      __int16 v187 = 2050;
      double v188 = v12;
      __int16 v189 = 1026;
      BOOL v190 = v161;
      __int16 v191 = 1026;
      BOOL v192 = v162;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,AverageVarianceFactor,count,%{public}d,vf,%{public}.4lf,avf,%{public}.4lf,avfBuffer,%{publ ic}.4lf,avfBufferCnt,%{public}zu,avfBuffer60,%{public}.4lf,avfBuffer30,%{public}.4lf,isUsable,%{public}d,deltaAz ,%{public}.2lf,fabsAT,%{public}.2lf,threshold,%{public}.2lf,usingAPI,%{public}d,usingBuffer,%{public}d",  v177,  126);
      __int16 v164 = (char *)v163;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::isSolutionAmbiguous(MMFilterData &, const MMSnapData &)",  "%s\n",  v163);
      if (v164 != buf) {
        free(v164);
      }
    }
  }

  if (!*(void *)(a1 + 2088) && !*(void *)(a1 + 2080)) {
    return 0LL;
  }
  if (!sub_100ECF4A4(a1 + 1832, *(double *)(a2 + 400), 6.0))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    double v41 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)__int128 buf = 134349056;
      *(double *)&uint8_t buf[4] = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,isSolutionAmbiguous,0,routeHintsAvailable,1",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    *(_DWORD *)uint64_t v177 = 134349056;
    *(double *)&v177[4] = v4;
    LODWORD(v172) = 12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,isSolutionAmbiguous,0,routeHintsAvailable,1",  v177,  v172);
    double v40 = (char *)v42;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::isSolutionAmbiguous(MMFilterData &, const MMSnapData &)",  "%s\n",  v42);
LABEL_249:
    if (v40 != buf) {
      free(v40);
    }
    return 0LL;
  }

  if (!*(_BYTE *)(a2 + 640))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    double v43 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)__int128 buf = 134349056;
      *(double *)&uint8_t buf[4] = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,isSolutionAmbiguous,0,isSnapUsable,0",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    *(_DWORD *)uint64_t v177 = 134349056;
    *(double *)&v177[4] = v4;
    LODWORD(v172) = 12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,isSolutionAmbiguous,0,isSnapUsable,0",  v177,  v172);
    double v40 = (char *)v165;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::isSolutionAmbiguous(MMFilterData &, const MMSnapData &)",  "%s\n",  v165);
    goto LABEL_249;
  }

  if (sub_100292850( *(double *)(a2 + 432),  *(double *)(a2 + 440),  *(double *)(a2 + 528),  *(double *)(a2 + 536),  0.0000001))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    uint64_t v38 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)__int128 buf = 134349056;
      *(double *)&uint8_t buf[4] = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,isSolutionAmbiguous,0,sameAsRawGPS,1",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    *(_DWORD *)uint64_t v177 = 134349056;
    *(double *)&v177[4] = v4;
    LODWORD(v172) = 12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,isSolutionAmbiguous,0,sameAsRawGPS,1",  v177,  v172);
    double v40 = (char *)v39;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::isSolutionAmbiguous(MMFilterData &, const MMSnapData &)",  "%s\n",  v39);
    goto LABEL_249;
  }

  if (sub_100EBD360(a1, a2, a3))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    uint64_t v45 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)__int128 buf = 134349056;
      *(double *)&uint8_t buf[4] = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,isSolutionAmbiguous,1,isHarshDigitizationCaseAtTurns,1",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 2)) {
      return 1LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    *(_DWORD *)uint64_t v177 = 134349056;
    *(double *)&v177[4] = v4;
    LODWORD(v172) = 12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,isSolutionAmbiguous,1,isHarshDigitizationCaseAtTurns,1",  v177,  v172);
    double v47 = (char *)v46;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::isSolutionAmbiguous(MMFilterData &, const MMSnapData &)",  "%s\n",  v46);
    goto LABEL_225;
  }

  if (v13 > v12) {
    goto LABEL_75;
  }
  double v56 = *(double *)(a1 + 2200);
  if (v56 > 3.0 && v56 < 20.0 && *(_BYTE *)(a3 + 505) && v13 > v12 * 0.85)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    __int16 v57 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v58 = *(void *)(a1 + 2200);
      *(_DWORD *)__int128 buf = 134349824;
      *(double *)&uint8_t buf[4] = v4;
      *(_WORD *)&_BYTE buf[12] = 2050;
      *(double *)&buf[14] = v13;
      *(_WORD *)&buf[22] = 2050;
      *(double *)&_BYTE buf[24] = v12 * 0.85;
      *(_WORD *)&buf[32] = 2050;
      *(void *)&buf[34] = v58;
      _os_log_impl( (void *)&_mh_execute_header,  v57,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,isSolutionAmbiguous,1, previous solution was ambiguous and AT,%{public}.1lf,is over scaled threshold,%{public}.1lf,consecutiveAmbCnt,%{public}1lf",  buf,  0x2Au);
    }

    if (!sub_1002921D0(115, 2)) {
      return 1LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    uint64_t v59 = *(void *)(a1 + 2200);
    *(_DWORD *)uint64_t v177 = 134349824;
    *(double *)&v177[4] = v4;
    __int16 v178 = 2050;
    *(double *)__int128 v179 = v13;
    *(_WORD *)&v179[8] = 2050;
    *(double *)&v179[10] = v12 * 0.85;
    *(_WORD *)&v179[18] = 2050;
    *(void *)&v179[20] = v59;
    LODWORD(v172) = 42;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,isSolutionAmbiguous,1, previous solution was ambiguous and AT,%{public}.1lf,is over scaled t hreshold,%{public}.1lf,consecutiveAmbCnt,%{public}1lf",  v177,  v172);
    double v47 = (char *)v60;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::isSolutionAmbiguous(MMFilterData &, const MMSnapData &)",  "%s\n",  v60);
    goto LABEL_225;
  }

  if (!*(_BYTE *)(a2 + 640)) {
    goto LABEL_132;
  }
  uint64_t v66 = *(double **)(a1 + 2184);
  __int16 v67 = *(double **)(a1 + 2176);
  if (v66 == v67) {
    goto LABEL_132;
  }
  uint64_t v68 = v66 - v67;
  double v69 = 0.0;
  do
  {
    double v70 = *v67++;
    double v69 = v69 + v70;
  }

  while (v67 != v66);
  if (v69 / (double)(unint64_t)v68 <= 1.2)
  {
LABEL_132:
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    char v75 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)__int128 buf = 134349568;
      *(double *)&uint8_t buf[4] = v4;
      *(_WORD *)&_BYTE buf[12] = 2050;
      *(double *)&buf[14] = v13;
      *(_WORD *)&buf[22] = 2050;
      *(double *)&_BYTE buf[24] = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v75,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,isSolutionAmbiguous,0,lowAcrossTrack,%{public}.1lf,threshold,%{public}.2lf",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    *(_DWORD *)uint64_t v177 = 134349568;
    *(double *)&v177[4] = v4;
    __int16 v178 = 2050;
    *(double *)__int128 v179 = v13;
    *(_WORD *)&v179[8] = 2050;
    *(double *)&v179[10] = v12;
    LODWORD(v172) = 32;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,isSolutionAmbiguous,0,lowAcrossTrack,%{public}.1lf,threshold,%{public}.2lf",  v177,  v172);
    double v40 = (char *)v76;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::isSolutionAmbiguous(MMFilterData &, const MMSnapData &)",  "%s\n",  v76);
    goto LABEL_249;
  }

  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_10188A8E0);
  }
  BOOL v71 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
  {
    int v72 = *(_DWORD *)(a1 + 2144);
    uint64_t v73 = *(void *)(a2 + 608);
    uint64_t v74 = *(void *)(a1 + 2152);
    *(_DWORD *)__int128 buf = 134349824;
    *(double *)&uint8_t buf[4] = v4;
    *(_WORD *)&_BYTE buf[12] = 1026;
    *(_DWORD *)&buf[14] = v72;
    *(_WORD *)&buf[18] = 2050;
    *(void *)&buf[20] = v73;
    *(_WORD *)&buf[28] = 2050;
    *(void *)&buf[30] = v74;
    _os_log_impl( (void *)&_mh_execute_header,  v71,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,isSolutionAmbiguous,1,averageVarianceFactor,count,%{public}d,vf,%{public}.4lf,avf,%{public}.4lf",  buf,  0x26u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    int v167 = *(_DWORD *)(a1 + 2144);
    uint64_t v168 = *(void *)(a2 + 608);
    uint64_t v169 = *(void *)(a1 + 2152);
    *(_DWORD *)uint64_t v177 = 134349824;
    *(double *)&v177[4] = v4;
    __int16 v178 = 1026;
    *(_DWORD *)__int128 v179 = v167;
    *(_WORD *)&v179[4] = 2050;
    *(void *)&v179[6] = v168;
    *(_WORD *)&v179[14] = 2050;
    *(void *)&v179[16] = v169;
    LODWORD(v172) = 38;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,isSolutionAmbiguous,1,averageVarianceFactor,count,%{public}d,vf,%{public}.4lf,avf,%{public}.4lf",  v177,  v172);
    int v171 = (char *)v170;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::isSolutionAmbiguous(MMFilterData &, const MMSnapData &)",  "%s\n",  v170);
    if (v171 != buf) {
      free(v171);
    }
  }

  uint64_t v6 = 1LL;
  if (!*(_BYTE *)(a3 + 504) || *(_BYTE *)(a3 + 505)) {
    return v6;
  }
LABEL_75:
  if (*(double *)(a2 + 568) > 0.0)
  {
    double v48 = *(double *)(a2 + 480);
    if (v48 >= 0.0)
    {
      double v49 = fmod(*(double *)(a2 + 680) - v48, 360.0);
      if (v49 < 0.0) {
        double v49 = v49 + 360.0;
      }
      if (v49 > 180.0) {
        double v49 = v49 + -360.0;
      }
      if ((!*(_BYTE *)(a3 + 505) || *(double *)(a1 + 2200) < 5.0) && *(double *)(a2 + 456) < 10.0)
      {
        double v50 = fabs(v49);
        if (v50 < 18.0 && v13 <= v12 * 1.5)
        {
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10188A8E0);
          }
          __int128 v52 = (os_log_s *)qword_1019348B8;
          if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v53 = *(void *)(a2 + 456);
            *(_DWORD *)__int128 buf = 134350080;
            *(double *)&uint8_t buf[4] = v4;
            *(_WORD *)&_BYTE buf[12] = 2050;
            *(double *)&buf[14] = v50;
            *(_WORD *)&buf[22] = 2050;
            *(double *)&_BYTE buf[24] = v13;
            *(_WORD *)&buf[32] = 2050;
            *(void *)&buf[34] = v53;
            *(_WORD *)&buf[42] = 2050;
            *(double *)&buf[44] = v12 * 1.5;
            _os_log_impl( (void *)&_mh_execute_header,  v52,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,isSolutionAmbiguous,0,overridden based on course matching,%{public}.2lf,AT,%{public} .2lf,hunc,%{public}.2lf,threshold,%{public}.2lf",  buf,  0x34u);
          }

          if (!sub_1002921D0(115, 2)) {
            return 0LL;
          }
          bzero(buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10188A8E0);
          }
          uint64_t v54 = *(void *)(a2 + 456);
          *(_DWORD *)uint64_t v177 = 134350080;
          *(double *)&v177[4] = v4;
          __int16 v178 = 2050;
          *(double *)__int128 v179 = v50;
          *(_WORD *)&v179[8] = 2050;
          *(double *)&v179[10] = v13;
          *(_WORD *)&v179[18] = 2050;
          *(void *)&v179[20] = v54;
          *(_WORD *)&v179[28] = 2050;
          *(double *)&v179[30] = v12 * 1.5;
          LODWORD(v172) = 52;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,isSolutionAmbiguous,0,overridden based on course matching,%{public}.2lf,AT,%{public}.2 lf,hunc,%{public}.2lf,threshold,%{public}.2lf",  v177,  v172);
          double v40 = (char *)v55;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::isSolutionAmbiguous(MMFilterData &, const MMSnapData &)",  "%s\n",  v55);
          goto LABEL_249;
        }
      }
    }
  }

  uint64_t v61 = *(void *)(a2 + 256);
  if (v61 && (*(_BYTE *)(a1 + 12) || (*(_DWORD *)(v61 + 20) & 0xFFFFFFFE) == 8))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    uint64_t v62 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      int v63 = *(_DWORD *)(*(void *)(a2 + 256) + 20LL);
      *(_DWORD *)__int128 buf = 134349312;
      *(double *)&uint8_t buf[4] = v4;
      *(_WORD *)&_BYTE buf[12] = 1026;
      *(_DWORD *)&buf[14] = v63;
      _os_log_impl( (void *)&_mh_execute_header,  v62,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,skipping building checks for unknown roads,%{public}d",  buf,  0x12u);
    }

    if (!sub_1002921D0(115, 2)) {
      return 1LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    int v64 = *(_DWORD *)(*(void *)(a2 + 256) + 20LL);
    *(_DWORD *)uint64_t v177 = 134349312;
    *(double *)&v177[4] = v4;
    __int16 v178 = 1026;
    *(_DWORD *)__int128 v179 = v64;
    LODWORD(v172) = 18;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,skipping building checks for unknown roads,%{public}d",  v177,  v172);
    double v47 = (char *)v65;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::isSolutionAmbiguous(MMFilterData &, const MMSnapData &)",  "%s\n",  v65);
    goto LABEL_225;
  }

  else {
    double v77 = 45.0;
  }
  uint64_t v174 = 0LL;
  uint64_t v175 = 0LL;
  uint64_t v176 = 0LL;
  double v78 = *(double **)(a1 + 2080);
  if (v78)
  {
    memset(buf, 0, 24);
    sub_100979E40(v78, (uint64_t *)buf, *(double *)(a2 + 432), *(double *)(a2 + 440), v77);
    sub_100ECBFC0( &v174,  v174,  *(uint64_t *)buf,  *(uint64_t *)&buf[8],  (uint64_t)(*(void *)&buf[8] - *(void *)buf) >> 6);
    sub_100979974( *(void *)(a1 + 2080),  0,  1LL,  v4,  *(CLLocationDegrees *)(a2 + 432),  *(CLLocationDegrees *)(a2 + 440),  *(double *)(*(void *)(a1 + 2080) + 176LL));
    *(void *)uint64_t v177 = buf;
    sub_100ECBF34((void ***)v177);
  }

  else
  {
    sub_100AE9944(*(void *)(a1 + 2088), &v174, a2 + 376, v77);
  }

  uint64_t v79 = v174;
  uint64_t v80 = v175;
  if ((unint64_t)(v175 - v174) < 0x80)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    int v81 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)__int128 buf = 134349312;
      *(double *)&uint8_t buf[4] = v4;
      *(_WORD *)&_BYTE buf[12] = 1026;
      *(_DWORD *)&buf[14] = (unint64_t)(v175 - v174) >> 6;
      _os_log_impl( (void *)&_mh_execute_header,  v81,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,isSolutionAmbiguous,1,fewerThan2Buildings,%{public}d",  buf,  0x12u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      *(_DWORD *)uint64_t v177 = 134349312;
      *(double *)&v177[4] = v4;
      __int16 v178 = 1026;
      *(_DWORD *)__int128 v179 = (unint64_t)(v175 - v174) >> 6;
      LODWORD(v172) = 18;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,isSolutionAmbiguous,1,fewerThan2Buildings,%{public}d",  v177,  v172);
      __int16 v83 = (char *)v82;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::isSolutionAmbiguous(MMFilterData &, const MMSnapData &)",  "%s\n",  v82);
      goto LABEL_254;
    }

    goto LABEL_210;
  }

  if (v174 == v175)
  {
    int v84 = 0;
    int v85 = 0;
    goto LABEL_205;
  }

  double v173 = v13;
  int v84 = 0;
  int v85 = 0;
  do
  {
    uint64_t v87 = *(double **)(v79 + 8);
    float v86 = *(double **)(v79 + 16);
    double v88 = -1.0;
    if (v87 != v86)
    {
      double v89 = 0.0;
      double v90 = 0.0;
      double v91 = 0.0;
      do
      {
        double v92 = *v87;
        double v93 = v87[1];
        v87 += 2;
        double v94 = atan2(v92, v93);
        if (v94 < 0.0) {
          double v94 = v94 + 6.28318531;
        }
        __double2 v95 = __sincos_stret(v94);
        double v89 = v89 + v95.__cosval;
        double v90 = v90 + v95.__sinval;
        double v91 = v91 + 1.0;
      }

      while (v87 != v86);
      if (v91 > 0.0)
      {
        double v96 = atan2(v90 / v91, v89 / v91);
        sub_100292890(v96 * 57.2957795);
        double v88 = v97;
      }
    }

    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    __int16 v98 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v99 = *(void *)(a2 + 432);
      uint64_t v100 = *(void *)(a2 + 440);
      uint64_t v101 = *(void *)(a2 + 480);
      *(_DWORD *)__int128 buf = 134351105;
      *(double *)&uint8_t buf[4] = v4;
      *(_WORD *)&_BYTE buf[12] = 1026;
      *(_DWORD *)&buf[14] = (unint64_t)(v175 - v174) >> 6;
      *(_WORD *)&buf[18] = 2049;
      *(void *)&buf[20] = v99;
      *(_WORD *)&buf[28] = 2049;
      *(void *)&buf[30] = v100;
      *(_WORD *)&buf[38] = 2050;
      *(void *)&buf[40] = v101;
      *(_WORD *)&uint8_t buf[48] = 1026;
      *(_DWORD *)&buf[50] = v85;
      *(_WORD *)&buf[54] = 1026;
      *(_DWORD *)&buf[56] = v84;
      *(_WORD *)int v194 = 2050;
      *(double *)&v194[2] = v77;
      *(_WORD *)double v195 = 2050;
      *(double *)&v195[2] = v88;
      _os_log_impl( (void *)&_mh_execute_header,  v98,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,isSolutionAmbiguous,-1,buildingCount,%{public}d,latitude,%{private}.7lf,longitude,%{privat e}.7lf,course,%{public}.2lf,rightSideCount,%{public}d,leftSideCount,%{public}d,searchDistance,%{public}.2lf,aver ageBuildingDirection,%{public}.2lf",  buf,  0x50u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      uint64_t v130 = *(void *)(a2 + 432);
      uint64_t v131 = *(void *)(a2 + 440);
      uint64_t v132 = *(void *)(a2 + 480);
      *(_DWORD *)uint64_t v177 = 134351105;
      *(double *)&v177[4] = v4;
      __int16 v178 = 1026;
      *(_DWORD *)__int128 v179 = (unint64_t)(v175 - v174) >> 6;
      *(_WORD *)&v179[4] = 2049;
      *(void *)&v179[6] = v130;
      *(_WORD *)&v179[14] = 2049;
      *(void *)&v179[16] = v131;
      *(_WORD *)&v179[24] = 2050;
      *(void *)&v179[26] = v132;
      *(_WORD *)&v179[34] = 1026;
      *(_DWORD *)&v179[36] = v85;
      *(_WORD *)&v179[40] = 1026;
      *(_DWORD *)&v179[42] = v84;
      *(_WORD *)int v180 = 2050;
      *(double *)&v180[2] = v77;
      *(_WORD *)v181 = 2050;
      *(double *)&v181[2] = v88;
      LODWORD(v172) = 80;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,isSolutionAmbiguous,-1,buildingCount,%{public}d,latitude,%{private}.7lf,longitude,%{privat e}.7lf,course,%{public}.2lf,rightSideCount,%{public}d,leftSideCount,%{public}d,searchDistance,%{public}.2lf,aver ageBuildingDirection,%{public}.2lf",  v177,  v172);
      uint64_t v134 = (char *)v133;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::isSolutionAmbiguous(MMFilterData &, const MMSnapData &)",  "%s\n",  v133);
      if (v134 != buf) {
        free(v134);
      }
    }

    double v102 = *(double *)(a2 + 480);
    sub_100292890(v88);
    double v104 = v103;
    sub_100292890(v102);
    double v106 = v105;
    sub_100292890(v102 + 90.0);
    if (v106 >= v107)
    {
      int v108 = 1;
      if (v106 <= v104 || v104 <= v107) {
        goto LABEL_182;
      }
    }

    else if (v106 <= v104 && v104 <= v107)
    {
      int v108 = 1;
      goto LABEL_182;
    }

    double v109 = *(double *)(a2 + 480);
    sub_100292890(v88);
    double v111 = v110;
    sub_100292890(v109 + 90.0);
    double v113 = v112;
    sub_100292890(v109 + 180.0);
    BOOL v115 = v113 <= v111;
    if (v111 <= v114) {
      BOOL v115 = 1;
    }
    BOOL v116 = v113 <= v111;
    if (v111 > v114) {
      BOOL v116 = 0;
    }
    if (v113 < v114) {
      int v108 = v116;
    }
    else {
      int v108 = v115;
    }
LABEL_182:
    double v117 = *(double *)(a2 + 480);
    sub_100292890(v88);
    double v119 = v118;
    sub_100292890(v117 + 180.0);
    double v121 = v120;
    sub_100292890(v117 + 270.0);
    if (v121 >= v122)
    {
      int v123 = 1;
      if (v121 <= v119 || v119 <= v122) {
        goto LABEL_194;
      }
    }

    else if (v121 <= v119 && v119 <= v122)
    {
      int v123 = 1;
      goto LABEL_194;
    }

    double v124 = *(double *)(a2 + 480);
    sub_100292890(v88);
    double v126 = v125;
    sub_100292890(v124 + 270.0);
    double v128 = v127;
    sub_100292890(v124);
    if (v128 >= v129)
    {
      int v123 = v128 <= v126;
      if (v126 <= v129) {
        int v123 = 1;
      }
    }

    else
    {
      int v123 = v128 <= v126;
      if (v126 > v129) {
        int v123 = 0;
      }
    }

void sub_100EB9BA0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, void **a39)
{
  a39 = (void **)&a20;
  sub_100ECBF34(&a39);
  _Unwind_Resume(a1);
}

void sub_100EB9C0C(uint64_t a1, uint64_t a2, uint64_t **a3)
{
  if (*(_BYTE *)(a2 + 882))
  {
    uint64_t v3 = *(uint64_t **)(a2 + 256);
    if (v3)
    {
      uint64_t v5 = *v3;
      int v6 = *(unsigned __int8 *)(a2 + 276);
      unint64_t v8 = a3[1];
      uint64_t v7 = a3[2];
      if (!v7 || v5 != v8[2] || v6 != *((unsigned __int8 *)v8 + 24))
      {
        int v9 = operator new(0x20uLL);
        v9[1] = v8;
        v9[2] = v5;
        *((_BYTE *)v9 + 24) = v6;
        void *v9 = a3;
        *unint64_t v8 = (uint64_t)v9;
        a3[1] = v9;
        a3[2] = (uint64_t *)((char *)v7 + 1);
        if ((int)v7 + 1 >= 51)
        {
          double v10 = *a3;
          uint64_t v11 = **a3;
          *(void *)(v11 + 8) = (*a3)[1];
          *(void *)v10[1] = v11;
          a3[2] = v7;
          operator delete(v10);
        }
      }
    }
  }

void sub_100EB9CC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(_BYTE *)(a3 + 746)) {
    BOOL v5 = *(void *)(a3 + 120) == 0LL;
  }
  else {
    BOOL v5 = 0;
  }
  if (!v5)
  {
    if (!*(_BYTE *)(a2 + 882))
    {
LABEL_22:
      if (*(_BYTE *)a4)
      {
        if (!*(_BYTE *)(a2 + 882)
          || (double v20 = sub_100D2DBDC( (double *)(a1 + 168),  *(double *)(a4 + 56),  *(double *)(a4 + 64),  *(double *)(a2 + 528),  *(double *)(a2 + 536),  *(double *)(a2 + 448)),  *(double *)(a4 + 8) = v20,  v20 > 450.0))
        {
          *(_BYTE *)a4 = 0;
        }
      }

      return;
    }

    if (*(void *)(a2 + 256))
    {
      if (*(_BYTE *)(a3 + 746))
      {
        double v9 = sub_100D2DBDC( (double *)(a1 + 168),  *(double *)(a3 + 152),  *(double *)(a3 + 160),  *(double *)(a2 + 288),  *(double *)(a2 + 296),  *(double *)(a2 + 448));
        uint64_t v10 = *(void *)(a3 + 128);
        *(void *)&__int128 buf = *(void *)(a3 + 120);
        *((void *)&buf + 1) = v10;
        if (v10)
        {
          uint64_t v11 = (unint64_t *)(v10 + 8);
          do
            unint64_t v12 = __ldxr(v11);
          while (__stxr(v12 + 1, v11));
        }

        __int128 v13 = *(_OWORD *)(a3 + 152);
        __int128 v29 = *(_OWORD *)(a3 + 136);
        __int128 v30 = v13;
        uint64_t v31 = *(void *)(a3 + 168);
        v32[0] = *(_OWORD *)(a3 + 176);
        *(_OWORD *)((char *)v32 + 9) = *(_OWORD *)(a3 + 185);
        int v34 = 0LL;
        uint64_t v35 = 0LL;
        double v14 = *(const void **)(a3 + 208);
        uint64_t v15 = *(void *)(a3 + 216);
        __int128 __p = 0LL;
        sub_100BDD080(&__p, v14, v15, 0x8E38E38E38E38E39LL * ((v15 - (uint64_t)v14) >> 3));
        int v26 = 0;
        if (sub_100EBACC4(a1, (uint64_t)&buf, &v26, v9))
        {
          *(_BYTE *)a4 = 1;
          *(_DWORD *)(a4 + 136) = v26;
          sub_1000F2F30((void *)(a4 + 24), (uint64_t *)&buf);
          __int128 v16 = v30;
          *(_OWORD *)(a4 + 40) = v29;
          *(_OWORD *)(a4 + 56) = v16;
          *(void *)(a4 + 72) = v31;
          *(_OWORD *)(a4 + 80) = v32[0];
          *(_OWORD *)(a4 + 89) = *(_OWORD *)((char *)v32 + 9);
          if ((__int128 *)(a4 + 24) != &buf) {
            sub_100BDD0F8( (char *)(a4 + 112),  (char *)__p,  (uint64_t)v34,  0x8E38E38E38E38E39LL * ((v34 - (_BYTE *)__p) >> 3));
          }
          *(void *)(a4 + 16) = *(void *)(a3 + 248);
        }

        if (__p)
        {
          int v34 = __p;
          operator delete(__p);
        }

        uint64_t v17 = (std::__shared_weak_count *)*((void *)&buf + 1);
        if (*((void *)&buf + 1))
        {
          uint64_t v18 = (unint64_t *)(*((void *)&buf + 1) + 8LL);
          do
            unint64_t v19 = __ldaxr(v18);
          while (__stlxr(v19 - 1, v18));
          if (!v19)
          {
            ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
            std::__shared_weak_count::__release_weak(v17);
          }
        }
      }

      goto LABEL_22;
    }
  }

  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_10188A8E0);
  }
  double v21 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
  {
    uint64_t v22 = *(void *)(a2 + 384);
    LODWORD(buf) = 134349056;
    *(void *)((char *)&buf + 4) = v22;
    _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,Unexpected, prior or current snap is valid but bestparticle road is null",  (uint8_t *)&buf,  0xCu);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    uint64_t v23 = *(void *)(a2 + 384);
    int v26 = 134349056;
    uint64_t v27 = v23;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,Unexpected, prior or current snap is valid but bestparticle road is null",  &v26,  12);
    double v25 = (char *)v24;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLParticleMM::CLParticleMapMatcherFilterBase::updateIntersectionInfo(const MMFilterData &, const MMSnapData & , CLParticleMapMatcherCommon::IntersectionInfo &)",  "%s\n",  v24);
  }

void sub_100EBA080(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
}

uint64_t sub_100EBA0AC(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(a2 + 640)) {
    BOOL v2 = *(_BYTE *)(a2 + 641) == 0;
  }
  else {
    BOOL v2 = 0;
  }
  if (!v2) {
    return 0LL;
  }
  uint64_t result = 0LL;
  double v6 = *(double *)(a2 + 456);
  if (v6 < 400.0 && v6 > 0.0)
  {
    if (*(_BYTE *)(a2 + 368) && !*(_BYTE *)(a2 + 896)) {
      return 0LL;
    }
    double v7 = sub_100D2DBDC( (double *)(a1 + 168),  *(double *)(a2 + 432),  *(double *)(a2 + 440),  *(double *)(a2 + 528),  *(double *)(a2 + 536),  0.0);
    double v8 = v7 / *(double *)(a2 + 456);
    if (v8 > 1.5)
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      double v9 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v10 = *(void *)(a2 + 384);
        uint64_t v11 = *(void *)(a2 + 432);
        uint64_t v12 = *(void *)(a2 + 440);
        uint64_t v13 = *(void *)(a2 + 480);
        uint64_t v14 = *(void *)(a2 + 528);
        uint64_t v15 = *(void *)(a2 + 536);
        uint64_t v16 = *(void *)(a2 + 544);
        uint64_t v17 = *(void *)(a2 + 448);
        uint64_t v18 = *(void *)(a2 + 456);
        *(_DWORD *)__int128 buf = 134351617;
        uint64_t v54 = v10;
        __int16 v55 = 2049;
        uint64_t v56 = v11;
        __int16 v57 = 2049;
        uint64_t v58 = v12;
        __int16 v59 = 2050;
        uint64_t v60 = v17;
        __int16 v61 = 2050;
        uint64_t v62 = v13;
        __int16 v63 = 2049;
        uint64_t v64 = v14;
        __int16 v65 = 2049;
        uint64_t v66 = v15;
        __int16 v67 = 2050;
        uint64_t v68 = v16;
        __int16 v69 = 2050;
        double v70 = v7;
        __int16 v71 = 2050;
        uint64_t v72 = v18;
        __int16 v73 = 2050;
        double v74 = v8;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,lat,%{private}.8lf,lon,%{private}.8lf,alt,%{public}.2lf,course,%{public}.1lf,snapLat,%{p rivate}.8lf,snapLon,%{private}.8lf,snapCourse,%{public}.1lf,horizontalError,%{public}.2lf,hunc,%{public}.2lf,r atio,%{public}.2lf",  buf,  0x70u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188A8E0);
        }
        uint64_t v20 = *(void *)(a2 + 384);
        uint64_t v21 = *(void *)(a2 + 432);
        uint64_t v22 = *(void *)(a2 + 440);
        uint64_t v23 = *(void *)(a2 + 480);
        uint64_t v24 = *(void *)(a2 + 528);
        uint64_t v25 = *(void *)(a2 + 536);
        uint64_t v26 = *(void *)(a2 + 544);
        uint64_t v27 = *(void *)(a2 + 448);
        uint64_t v28 = *(void *)(a2 + 456);
        int v31 = 134351617;
        uint64_t v32 = v20;
        __int16 v33 = 2049;
        uint64_t v34 = v21;
        __int16 v35 = 2049;
        uint64_t v36 = v22;
        __int16 v37 = 2050;
        uint64_t v38 = v27;
        __int16 v39 = 2050;
        uint64_t v40 = v23;
        __int16 v41 = 2049;
        uint64_t v42 = v24;
        __int16 v43 = 2049;
        uint64_t v44 = v25;
        __int16 v45 = 2050;
        uint64_t v46 = v26;
        __int16 v47 = 2050;
        double v48 = v7;
        __int16 v49 = 2050;
        uint64_t v50 = v28;
        __int16 v51 = 2050;
        double v52 = v8;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,lat,%{private}.8lf,lon,%{private}.8lf,alt,%{public}.2lf,course,%{public}.1lf,snapLat,%{p rivate}.8lf,snapLon,%{private}.8lf,snapCourse,%{public}.1lf,horizontalError,%{public}.2lf,hunc,%{public}.2lf,r atio,%{public}.2lf",  &v31,  112);
        __int128 v30 = (uint8_t *)v29;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::modifyHorizontalUncertainty(MMFilterData &)",  "%s\n",  v29);
        if (v30 != buf) {
          free(v30);
        }
      }

      double v19 = v7 * 1.05;
      if (v7 * 1.05 > 400.0) {
        double v19 = 400.0;
      }
      *(double *)(a2 + 456) = v19;
    }

    return 1LL;
  }

  return result;
}

uint64_t sub_100EBA3EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 48);
  __int128 v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = v4;
  __int128 v6 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
  *(_OWORD *)(a1 + 56) = v6;
  if (a1 != a2) {
    sub_100BDD0F8( (char *)(a1 + 88),  *(char **)(a2 + 88),  *(void *)(a2 + 96),  0x8E38E38E38E38E39LL * ((uint64_t)(*(void *)(a2 + 96) - *(void *)(a2 + 88)) >> 3));
  }
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  sub_1000F2F30((void *)(a1 + 120), (uint64_t *)(a2 + 120));
  uint64_t v7 = *(void *)(a2 + 168);
  __int128 v8 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = v8;
  *(void *)(a1 + 168) = v7;
  __int128 v9 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 185) = *(_OWORD *)(a2 + 185);
  *(_OWORD *)(a1 + 176) = v9;
  if (a1 != a2) {
    sub_100BDD0F8( (char *)(a1 + 208),  *(char **)(a2 + 208),  *(void *)(a2 + 216),  0x8E38E38E38E38E39LL * ((uint64_t)(*(void *)(a2 + 216) - *(void *)(a2 + 208)) >> 3));
  }
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  __int128 v10 = *(_OWORD *)(a2 + 240);
  __int128 v11 = *(_OWORD *)(a2 + 256);
  __int128 v12 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v12;
  *(_OWORD *)(a1 + 240) = v10;
  *(_OWORD *)(a1 + 256) = v11;
  __int128 v13 = *(_OWORD *)(a2 + 304);
  __int128 v14 = *(_OWORD *)(a2 + 320);
  __int128 v15 = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 352) = v15;
  *(_OWORD *)(a1 + 304) = v13;
  *(_OWORD *)(a1 + 320) = v14;
  std::string::operator=((std::string *)(a1 + 368), (const std::string *)(a2 + 368));
  memcpy((void *)(a1 + 392), (const void *)(a2 + 392), 0x118uLL);
  __int128 v17 = *(_OWORD *)(a2 + 688);
  __int128 v16 = *(_OWORD *)(a2 + 704);
  __int128 v18 = *(_OWORD *)(a2 + 672);
  *(void *)(a1 + 720) = *(void *)(a2 + 720);
  *(_OWORD *)(a1 + 688) = v17;
  *(_OWORD *)(a1 + 704) = v16;
  *(_OWORD *)(a1 + 672) = v18;
  sub_1000F2F30((void *)(a1 + 728), (uint64_t *)(a2 + 728));
  int v19 = *(_DWORD *)(a2 + 759);
  *(_OWORD *)(a1 + 744) = *(_OWORD *)(a2 + 744);
  *(_DWORD *)(a1 + 759) = v19;
  return a1;
}

uint64_t sub_100EBA550(uint64_t a1, uint64_t a2)
{
  if (!*(_BYTE *)(a1 + 9)) {
    goto LABEL_8;
  }
  if (((*(uint64_t (**)(uint64_t))(*(void *)a1 + 104LL))(a1) & 1) == 0)
  {
    uint64_t v7 = *(void *)(a1 + 1912);
    uint64_t v8 = *(void *)(a1 + 1904);
    if (v7 != v8)
    {
      do
      {
        uint64_t v9 = v7 - 264;
        sub_10000AE14(v7 - 56);
        uint64_t v7 = v9;
      }

      while (v9 != v8);
    }

    LOBYTE(v6) = 0;
    goto LABEL_12;
  }

  uint64_t v4 = *(void *)(a1 + 1904);
  uint64_t v5 = *(void *)(a1 + 1912);
  if (v4 == v5)
  {
LABEL_8:
    LOBYTE(v6) = 0;
  }

  else
  {
    int v6 = 0;
    while (vabdd_f64(*(double *)(v4 + 184), *(double *)(a2 + 400)) <= 0.01)
    {
      v6 |= sub_100EAEA88(a2, 2, v4);
      v4 += 264LL;
      if (v4 == v5) {
        return v6 & 1;
      }
    }

    uint64_t v11 = *(void *)(a1 + 1912);
    uint64_t v8 = *(void *)(a1 + 1904);
    if (v11 != v8)
    {
      do
      {
        uint64_t v12 = v11 - 264;
        sub_10000AE14(v11 - 56);
        uint64_t v11 = v12;
      }

      while (v12 != v8);
LABEL_12:
      *(void *)(a1 + 1912) = v8;
    }
  }

  return v6 & 1;
}

uint64_t sub_100EBA65C(uint64_t a1, __int128 *a2)
{
  __int128 v4 = *a2;
  __int128 v5 = a2[1];
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  *(_OWORD *)a1 = v4;
  *(_OWORD *)(a1 + 16) = v5;
  if ((__int128 *)a1 == a2)
  {
    *(_OWORD *)(a1 + 88) = *(__int128 *)((char *)a2 + 88);
    *(void *)(a1 + 104) = *((void *)a2 + 13);
  }

  else
  {
    sub_100ECB440( a1 + 40,  *((void *)a2 + 5),  *((void *)a2 + 6),  0x6DB6DB6DB6DB6DB7LL * ((uint64_t)(*((void *)a2 + 6) - *((void *)a2 + 5)) >> 4));
    sub_10004C5F8( (char *)(a1 + 64),  *((char **)a2 + 8),  *((void *)a2 + 9),  (uint64_t)(*((void *)a2 + 9) - *((void *)a2 + 8)) >> 2);
    *(_OWORD *)(a1 + 88) = *(__int128 *)((char *)a2 + 88);
    *(void *)(a1 + 104) = *((void *)a2 + 13);
    sub_100ECA818((uint64_t **)(a1 + 112), *((void **)a2 + 14), (void *)a2 + 15);
  }

  sub_100EBA3EC(a1 + 136, (uint64_t)a2 + 136);
  *(_BYTE *)(a1 + 904) = *((_BYTE *)a2 + 904);
  return a1;
}

double sub_100EBA71C(uint64_t a1, uint64_t a2, double *a3)
{
  double v4 = *(double *)(a2 + 24);
  if (v4 < 0.0 || (double v5 = a3[33], v5 < 0.0))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    int v6 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v7 = *(void *)(a2 + 8);
      *(_DWORD *)__int128 buf = 134349312;
      uint64_t v34 = v7;
      __int16 v35 = 2050;
      unint64_t v36 = 0xBFF0000000000000LL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,unexpected, negtive dT,%{public}.1lf",  buf,  0x16u);
    }

    double v8 = 0.0;
    if (!sub_1002921D0(115, 0)) {
      return v8;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    uint64_t v28 = *(void *)(a2 + 8);
    *(_DWORD *)int v31 = 134349312;
    *(void *)&v31[4] = v28;
    *(_WORD *)&v31[12] = 2050;
    *(void *)&v31[14] = 0xBFF0000000000000LL;
    double v29 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,unexpected, negtive dT,%{public}.1lf",  v31,  22);
    uint64_t v27 = v30;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "double CLParticleMM::CLParticleMapMatcherFilterBase::getDistanceTravelled(const CLMapCrumb &, const MMSnapData &)",  "%s\n",  v29);
LABEL_54:
    if (v27 != buf) {
      free(v27);
    }
    return v8;
  }

  double v10 = vabdd_f64(v4, v5);
  double v11 = -1.0;
  double v12 = -1.0;
  if (*(double *)(a2 + 184) > 0.0)
  {
    double v13 = *(double *)(a2 + 96);
    if (v13 >= 0.0)
    {
      if (v10 >= 2.2 || a3[53] <= 0.0)
      {
        double v12 = *(double *)(a2 + 96);
      }

      else
      {
        double v14 = a3[42];
        BOOL v15 = v14 < 0.0;
        double v16 = (v13 + v14) * 0.5;
        if (v15) {
          double v12 = *(double *)(a2 + 96);
        }
        else {
          double v12 = v16;
        }
      }
    }
  }

  if (v12 < 0.0) {
    double v17 = 0.0;
  }
  else {
    double v17 = v10 * v12;
  }
  if (v10 >= 2.2)
  {
    double v8 = v17;
  }

  else
  {
    double v8 = v17;
    if (a3[40] > 0.0)
    {
      double v11 = sub_100D2DBDC( (double *)(a1 + 168),  *(double *)(a2 + 56),  *(double *)(a2 + 64),  a3[37],  a3[38],  *(double *)(a2 + 72));
      if (v11 > 300.0)
      {
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188A8E0);
        }
        __int128 v18 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_INFO))
        {
          uint64_t v19 = *(void *)(a2 + 8);
          *(_DWORD *)__int128 buf = 134349568;
          uint64_t v34 = v19;
          __int16 v35 = 2050;
          unint64_t v36 = *(void *)&v11;
          __int16 v37 = 2050;
          double v38 = v10;
          _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_INFO,  "#Warning,CLMMPED,%{public}.1lf,Position jump,%{public}.1lf,dT,%{public}.1lf",  buf,  0x20u);
        }

        double v8 = -1.0;
        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10188A8E0);
          }
          uint64_t v20 = *(void *)(a2 + 8);
          *(_DWORD *)int v31 = 134349568;
          *(void *)&v31[4] = v20;
          *(_WORD *)&v31[12] = 2050;
          *(double *)&v31[14] = v11;
          *(_WORD *)&v31[22] = 2050;
          double v22 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  1LL,  "#Warning,CLMMPED,%{public}.1lf,Position jump,%{public}.1lf,dT,%{public}.1lf",  v31,  32,  *(_OWORD *)v31,  *(void *)&v31[16],  *(void *)&v10,  v32);
LABEL_50:
          uint64_t v27 = v21;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "double CLParticleMM::CLParticleMapMatcherFilterBase::getDistanceTravelled(const CLMapCrumb &, const MMSnapData &)",  "%s\n",  v22);
          goto LABEL_54;
        }

        return v8;
      }

      if (v12 <= 0.0 || v11 < 0.0 || *(_BYTE *)(a2 + 228))
      {
        if (*(_BYTE *)(a2 + 228)) {
          double v23 = v17;
        }
        else {
          double v23 = v11;
        }
        if (v11 >= 0.0) {
          double v8 = v23;
        }
        else {
          double v8 = v17;
        }
      }

      else
      {
        double v8 = (v17 + v11) * 0.5;
      }
    }
  }

  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_10188A8E0);
  }
  uint64_t v24 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v25 = *(void *)(a2 + 8);
    *(_DWORD *)__int128 buf = 134349824;
    uint64_t v34 = v25;
    __int16 v35 = 2050;
    unint64_t v36 = *(void *)&v8;
    __int16 v37 = 2050;
    double v38 = v17;
    __int16 v39 = 2050;
    double v40 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,predictionAndUpdate, distance,%{public}.1lf,distBasedOnSpeed,%{public}.1lf,distBasedOnPos,%{public}.1lf",  buf,  0x2Au);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    uint64_t v26 = *(void *)(a2 + 8);
    *(_DWORD *)int v31 = 134349824;
    *(void *)&v31[4] = v26;
    *(_WORD *)&v31[12] = 2050;
    *(double *)&v31[14] = v8;
    *(_WORD *)&v31[22] = 2050;
    LOWORD(v32) = 2050;
    *(double *)((char *)&v32 + 2) = v11;
    double v22 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,predictionAndUpdate, distance,%{public}.1lf,distBasedOnSpeed,%{public}.1lf,distBasedOn Pos,%{public}.1lf",  v31,  42,  *(void *)v31,  *(_OWORD *)&v31[8],  *(void *)&v17,  v32);
    goto LABEL_50;
  }

  return v8;
}

uint64_t sub_100EBACC4(uint64_t a1, uint64_t a2, int *a3, double a4)
{
  uint64_t v20 = 0LL;
  uint64_t v21 = 0LL;
  LODWORD(v22) = 0;
  WORD2(v22) = 1;
  DWORD2(v22) = 0;
  uint64_t v24 = 0LL;
  __int128 v23 = 0uLL;
  sub_1000F2F30(&v20, (uint64_t *)a2);
  BYTE4(v22) = *(_BYTE *)(a2 + 20);
  uint64_t v24 = *(void *)(a2 + 48);
  uint64_t v18 = 0LL;
  uint64_t v19 = 0LL;
  v17[0] = (uint64_t)v17;
  v17[1] = (uint64_t)v17;
  v17[2] = 0LL;
  v16[0] = (uint64_t)v16;
  v16[1] = (uint64_t)v16;
  v16[2] = 0LL;
  *a3 = 0;
  unsigned int v8 = (*(uint64_t (**)(uint64_t, uint64_t *, int *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, double))(*(void *)a1 + 88LL))( a1,  &v20,  a3,  v17,  v16,  &v19,  &v18,  a4);
  if (*a3 > 1) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0LL;
  }
  if ((v9 & 1) != 0)
  {
    sub_1000F2F30((void *)a2, &v20);
    __int128 v10 = v23;
    *(_OWORD *)(a2 + 16) = v22;
    *(_OWORD *)(a2 + 32) = v10;
    *(void *)(a2 + 48) = v24;
    uint64_t v11 = v18;
    *(void *)(a2 + 32) = v19;
    *(void *)(a2 + 40) = v11;
  }

  sub_100890314(v16);
  sub_100890314(v17);
  double v12 = v21;
  if (v21)
  {
    p_shared_owners = (unint64_t *)&v21->__shared_owners_;
    do
      unint64_t v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }

  return v9;
}

void sub_100EBAE08(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  va_copy(va2, va1);
  uint64_t v7 = va_arg(va2, void);
  uint64_t v9 = va_arg(va2, void);
  uint64_t v10 = va_arg(va2, void);
  uint64_t v11 = va_arg(va2, void);
  uint64_t v12 = va_arg(va2, void);
  sub_100890314((uint64_t *)va);
  sub_100890314((uint64_t *)va1);
  sub_10000AE14((uint64_t)va2);
  _Unwind_Resume(a1);
}

BOOL sub_100EBAE2C(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4, double *a5, double *a6, double a7)
{
  double v14 = a5[1];
  uint64_t v22 = *(void *)&v14;
  if ((sub_100EBB1BC(a1, (double *)a4, v14, a7) & 1) == 0)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    double v16 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      double v17 = a2;
      *(_DWORD *)__int128 buf = 134349570;
      uint64_t v30 = *(void *)&v14;
      __int16 v31 = 2082;
      __int128 v32 = v17;
      __int16 v33 = 2050;
      double v34 = a7;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,moveParticle,failed,%{public}s,moveDistance,%{public}.1lf",  buf,  0x20u);
    }

    BOOL result = sub_1002921D0(115, 2);
    if (!result) {
      return result;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    int v23 = 134349570;
    uint64_t v24 = *(void *)&v14;
    __int16 v25 = 2082;
    uint64_t v26 = a2;
    __int16 v27 = 2050;
    double v28 = a7;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,moveParticle,failed,%{public}s,moveDistance,%{public}.1lf",  &v23,  32);
LABEL_29:
    uint64_t v21 = (uint8_t *)v18;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::moveParticleAndCheckDivergence(const std::string, const std::st ring, CLParticleMapMatcherCommon::Particle &, const double, const CLMapCrumb &, double &)",  "%s\n",  v18);
    if (v21 != buf) {
      free(v21);
    }
    return 0LL;
  }

  if (sub_100EBB9F4( &v22,  a5,  (double *)(a1 + 168),  a6,  *(double *)(a4 + 32),  *(double *)(a4 + 40),  *(float *)(a4 + 24)))
  {
    return 1LL;
  }

  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_10188A8E0);
  }
  uint64_t v19 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v20 = a3;
    *(_DWORD *)__int128 buf = 134349314;
    uint64_t v30 = v22;
    __int16 v31 = 2082;
    __int128 v32 = v20;
    _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf, no DOT,%{public}s,location or course diverged",  buf,  0x16u);
  }

  BOOL result = sub_1002921D0(115, 2);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    int v23 = 134349314;
    uint64_t v24 = v22;
    __int16 v25 = 2082;
    uint64_t v26 = a3;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf, no DOT,%{public}s,location or course diverged",  &v23,  22);
    goto LABEL_29;
  }

  return result;
}

uint64_t sub_100EBB1BC(uint64_t a1, double *a2, double a3, double a4)
{
  uint64_t v8 = *(void *)(a1 + 208);
  uint64_t v9 = *(std::__shared_weak_count **)(a1 + 216);
  uint64_t v38 = v8;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      unint64_t v11 = __ldxr(p_shared_owners);
    while (__stxr(v11 + 1, p_shared_owners));
  }

  if (!v8)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    BOOL v15 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)__int128 buf = 134349056;
      double v50 = a3;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,Unexpected,invalid geometry pointer, moveParticle",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 0)) {
      goto LABEL_48;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    int v39 = 134349056;
    double v40 = a3;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,Unexpected,invalid geometry pointer, moveParticle",  &v39,  12,  v38,  v9);
    double v14 = (uint8_t *)v16;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::moveParticle(CFAbsoluteTime, CLParticleMapMatcherCommon::Partic le &, double) const",  "%s\n",  v16);
    goto LABEL_58;
  }

  if (((*(uint64_t (**)(uint64_t, double *, uint64_t, double))(*(void *)v8 + 88LL))(v8, a2, a1 + 1040, a4) & 1) == 0)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    double v17 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v18 = **(void ***)a2;
      uint64_t v19 = (void *)*((void *)a2 + 6);
      int v20 = *((unsigned __int8 *)a2 + 20);
      *(_DWORD *)__int128 buf = 134350081;
      double v50 = a3;
      __int16 v51 = 2049;
      double v52 = v18;
      __int16 v53 = 2050;
      uint64_t v54 = v19;
      __int16 v55 = 1026;
      int v56 = v20;
      __int16 v57 = 2050;
      double v58 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,moveParticle,moveOnRoad returned false,roadID,%{private}lld,projection,%{public}.3lf,fwd,% {public}d,moveDistance,%{public}.2lf",  buf,  0x30u);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_48;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    uint64_t v21 = **(void ***)a2;
    uint64_t v22 = (void *)*((void *)a2 + 6);
    int v23 = *((unsigned __int8 *)a2 + 20);
    int v39 = 134350081;
    double v40 = a3;
    __int16 v41 = 2049;
    uint64_t v42 = v21;
    __int16 v43 = 2050;
    uint64_t v44 = v22;
    __int16 v45 = 1026;
    int v46 = v23;
    __int16 v47 = 2050;
    double v48 = a4;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,moveParticle,moveOnRoad returned false,roadID,%{private}lld,projection,%{public}.3lf,fwd,%{p ublic}d,moveDistance,%{public}.2lf",  &v39,  48,  v38,  v9);
    double v14 = (uint8_t *)v24;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::moveParticle(CFAbsoluteTime, CLParticleMapMatcherCommon::Partic le &, double) const",  "%s\n",  v24);
    goto LABEL_58;
  }

  if (!*(void *)a2)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    __int16 v25 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)__int128 buf = 134349056;
      double v50 = a3;
      _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,moveParticle,null road",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 0)) {
      goto LABEL_48;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    int v39 = 134349056;
    double v40 = a3;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,moveParticle,null road",  &v39,  12,  v38,  v9);
    double v14 = (uint8_t *)v26;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::moveParticle(CFAbsoluteTime, CLParticleMapMatcherCommon::Partic le &, double) const",  "%s\n",  v26);
    goto LABEL_58;
  }

  if (sub_10029286C(a2[4], a2[5]))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    uint64_t v12 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)__int128 buf = 134349056;
      double v50 = a3;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,moveParticle,unexpected particle with snapLat == snapLon == 0",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 0)) {
      goto LABEL_48;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    int v39 = 134349056;
    double v40 = a3;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,moveParticle,unexpected particle with snapLat == snapLon == 0",  &v39,  12,  v38,  v9);
    double v14 = (uint8_t *)v13;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::moveParticle(CFAbsoluteTime, CLParticleMapMatcherCommon::Partic le &, double) const",  "%s\n",  v13);
LABEL_58:
    if (v14 != buf) {
      free(v14);
    }
LABEL_48:
    uint64_t v28 = 0LL;
    goto LABEL_49;
  }

  double v27 = a2[6];
  if (v27 < 0.0 || v27 > 1.0)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    double v29 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v30 = (void *)*((void *)a2 + 6);
      __int16 v31 = **(void ***)a2;
      *(_DWORD *)__int128 buf = 134349569;
      double v50 = a3;
      __int16 v51 = 2050;
      double v52 = v30;
      __int16 v53 = 2049;
      uint64_t v54 = v31;
      _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,moveParticle,invalidProjection,%{public}.3lf,roadID,%{private}lld",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      goto LABEL_48;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    __int16 v35 = (void *)*((void *)a2 + 6);
    unint64_t v36 = **(void ***)a2;
    int v39 = 134349569;
    double v40 = a3;
    __int16 v41 = 2050;
    uint64_t v42 = v35;
    __int16 v43 = 2049;
    uint64_t v44 = v36;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,moveParticle,invalidProjection,%{public}.3lf,roadID,%{private}lld",  &v39,  32,  v38,  v9);
    double v14 = (uint8_t *)v37;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::moveParticle(CFAbsoluteTime, CLParticleMapMatcherCommon::Partic le &, double) const",  "%s\n",  v37);
    goto LABEL_58;
  }

  uint64_t v28 = 1LL;
LABEL_49:
  if (v9)
  {
    __int128 v32 = (unint64_t *)&v9->__shared_owners_;
    do
      unint64_t v33 = __ldaxr(v32);
    while (__stlxr(v33 - 1, v32));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }

  return v28;
}

void sub_100EBB9CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

BOOL sub_100EBB9F4(uint64_t *a1, double *a2, double *a3, double *a4, double a5, double a6, double a7)
{
  double v13 = a2[38];
  double v14 = fmod(v13 - a7, 360.0);
  if (v14 < 0.0) {
    double v14 = v14 + 360.0;
  }
  if (v14 > 180.0) {
    double v14 = v14 + -360.0;
  }
  double v15 = fabs(v14);
  if (v15 <= 8.0)
  {
    if (v15 > *a4)
    {
      *a4 = v15;
      double v13 = a2[38];
    }

    double v28 = 0.0;
    double v29 = 0.0;
    sub_100D2E36C(a3, &v29, &v28, a2[36], a2[37], a2[9], v13, a5, a6);
    if (fabs(v29) <= 5.0)
    {
      if (fabs(v28) <= 45.0) {
        return 1LL;
      }
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      uint64_t v24 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v25 = *a1;
        *(_DWORD *)__int128 buf = 134349056;
        uint64_t v33 = v25;
        _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}.1lf, along track too large, not suitable DOT assistance",  buf,  0xCu);
      }

      BOOL result = sub_1002921D0(115, 2);
      if (result)
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188A8E0);
        }
        uint64_t v26 = *a1;
        int v30 = 134349056;
        uint64_t v31 = v26;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}.1lf, along track too large, not suitable DOT assistance",  &v30,  12);
        goto LABEL_34;
      }
    }

    else
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      uint64_t v21 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v22 = *a1;
        *(_DWORD *)__int128 buf = 134349056;
        uint64_t v33 = v22;
        _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}.1lf, across track too large, not suitable DOT assistance",  buf,  0xCu);
      }

      BOOL result = sub_1002921D0(115, 2);
      if (result)
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188A8E0);
        }
        uint64_t v23 = *a1;
        int v30 = 134349056;
        uint64_t v31 = v23;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}.1lf, across track too large, not suitable DOT assistance",  &v30,  12);
        goto LABEL_34;
      }
    }
  }

  else
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    double v16 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v17 = *a1;
      *(_DWORD *)__int128 buf = 134349056;
      uint64_t v33 = v17;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}.1lf, no DOT, course is not aligned",  buf,  0xCu);
    }

    BOOL result = sub_1002921D0(115, 2);
    if (result)
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      uint64_t v19 = *a1;
      int v30 = 134349056;
      uint64_t v31 = v19;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}.1lf, no DOT, course is not aligned",  &v30,  12);
LABEL_34:
      double v27 = (uint8_t *)v20;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMapMatcherCommon::checkDivergence(const CFAbsoluteTime &, double, double, double, const CLMapCrum b &, CLDistanceCalc &, double &)",  "%s\n",  v20);
      if (v27 != buf) {
        free(v27);
      }
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_100EBBE70(uint64_t a1, uint64_t a2)
{
  if (*(double *)(a1 + 1968) <= 0.0
    || *(double *)(a1 + 2056) <= 0.0
    || *(double *)(a1 + 2064) <= 0.0
    || !*(_DWORD *)(a1 + 2048))
  {
    return 0LL;
  }

  __int128 v2 = *(_OWORD *)(a1 + 1968);
  __int128 v3 = *(_OWORD *)(a1 + 2000);
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 1984);
  *(_OWORD *)(a2 + 32) = v3;
  *(_OWORD *)a2 = v2;
  __int128 v4 = *(_OWORD *)(a1 + 2016);
  __int128 v5 = *(_OWORD *)(a1 + 2032);
  __int128 v6 = *(_OWORD *)(a1 + 2048);
  *(void *)(a2 + 96) = *(void *)(a1 + 2064);
  *(_OWORD *)(a2 + 64) = v5;
  *(_OWORD *)(a2 + 80) = v6;
  *(_OWORD *)(a2 + 48) = v4;
  return 1LL;
}

double *sub_100EBBED8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 1832) = *(void *)a2;
  if (a1 + 1832 != a2) {
    sub_1005F6B84( (char *)(a1 + 1840),  *(char **)(a2 + 8),  *(void *)(a2 + 16),  0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3));
  }
  *(_OWORD *)(a1 + 1864) = *(_OWORD *)(a2 + 32);
  return sub_100BDD018((double *)(a1 + 1952), *(double *)(a1 + 1872));
}

double sub_100EBBF40(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  double v4 = -1.0;
  if (*(_BYTE *)(a3 + 264)) {
    BOOL v5 = *(void *)a2 == 0LL;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5)
  {
    uint64_t v34 = 0LL;
    __int16 v35 = 0LL;
    int v36 = 0;
    __int16 v37 = 1;
    int v38 = 0;
    uint64_t v40 = 0LL;
    uint64_t v41 = 0LL;
    uint64_t v39 = 0LL;
    sub_1000F2F30(&v34, (uint64_t *)a2);
    LOBYTE(v37) = *(_BYTE *)(a2 + 20);
    uint64_t v41 = *(void *)(a2 + 48);
    v31[0] = (uint64_t)v31;
    v31[1] = (uint64_t)v31;
    v31[2] = 0LL;
    uint64_t v28 = (uint64_t)&v28;
    double v29 = &v28;
    uint64_t v30 = 0LL;
    int v27 = 0;
    int v9 = (*(uint64_t (**)(uint64_t, uint64_t *, int *, uint64_t *, uint64_t *, _BYTE *, _BYTE *, double))(*(void *)a1 + 88LL))( a1,  &v34,  &v27,  v31,  &v28,  v33,  v32,  a4);
    if (v27 > 0) {
      int v10 = v9;
    }
    else {
      int v10 = 0;
    }
    if (v10 == 1)
    {
      int v11 = *(unsigned __int8 *)(a2 + 20);
      double v12 = *(double *)(a2 + 48);
      uint64_t v13 = *(void *)a2;
      sub_1001AC068((void *)v13);
      double v14 = 1.0 - v12;
      if (!v11) {
        double v14 = v12;
      }
      double v4 = v14 * *(double *)(v13 + 40);
      for (uint64_t i = v29; i != &v28; uint64_t i = (uint64_t *)i[1])
      {
        uint64_t v17 = i[2];
        double v16 = (std::__shared_weak_count *)i[3];
        if (v16)
        {
          p_shared_owners = (unint64_t *)&v16->__shared_owners_;
          do
            unint64_t v19 = __ldxr(p_shared_owners);
          while (__stxr(v19 + 1, p_shared_owners));
        }

        sub_1001AC068((void *)v17);
        double v20 = *(double *)(v17 + 40);
        if (v16)
        {
          uint64_t v21 = (unint64_t *)&v16->__shared_owners_;
          do
            unint64_t v22 = __ldaxr(v21);
          while (__stlxr(v22 - 1, v21));
          if (!v22)
          {
            ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
            std::__shared_weak_count::__release_weak(v16);
          }
        }

        double v4 = v4 + v20;
      }
    }

    sub_100890314(&v28);
    sub_100890314(v31);
    uint64_t v23 = v35;
    if (v35)
    {
      uint64_t v24 = (unint64_t *)&v35->__shared_owners_;
      do
        unint64_t v25 = __ldaxr(v24);
      while (__stlxr(v25 - 1, v24));
      if (!v25)
      {
        ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
        std::__shared_weak_count::__release_weak(v23);
      }
    }
  }

  return v4;
}

void sub_100EBC13C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v9 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  va_copy(va2, va1);
  uint64_t v13 = va_arg(va2, void);
  uint64_t v15 = va_arg(va2, void);
  uint64_t v16 = va_arg(va2, void);
  uint64_t v17 = va_arg(va2, void);
  uint64_t v18 = va_arg(va2, void);
  sub_100890314((uint64_t *)va);
  sub_100890314((uint64_t *)va1);
  sub_10000AE14((uint64_t)va2);
  _Unwind_Resume(a1);
}

uint64_t sub_100EBC170(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, double *a5)
{
  uint64_t v5 = (uint64_t)*a2;
  if (!*a2) {
    return 0LL;
  }
  double v10 = *((_BYTE *)a2 + 20) ? 1.0 - *((double *)a2 + 6) : *((double *)a2 + 6);
  sub_1001AC068(*a2);
  if (v10 * *(double *)(v5 + 40) > 18.0)
  {
    double v11 = *((_BYTE *)a2 + 20) ? *((double *)a2 + 6) : 1.0 - *((double *)a2 + 6);
    uint64_t v12 = (uint64_t)*a2;
    sub_1001AC068(*a2);
  }

  double v14 = (std::__shared_weak_count *)a2[1];
  uint64_t v45 = (uint64_t)*a2;
  int v46 = v14;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      unint64_t v16 = __ldxr(p_shared_owners);
    while (__stxr(v16 + 1, p_shared_owners));
  }

  __int128 v17 = *((_OWORD *)a2 + 2);
  __int128 v47 = *((_OWORD *)a2 + 1);
  __int128 v48 = v17;
  uint64_t v18 = a2[6];
  v50[0] = *(_OWORD *)(a2 + 7);
  *(_OWORD *)((char *)v50 + 9) = *(_OWORD *)((char *)a2 + 65);
  __int16 v49 = v18;
  __int128 __p = 0LL;
  double v52 = 0LL;
  unint64_t v19 = a2[11];
  uint64_t v20 = (uint64_t)a2[12];
  uint64_t v53 = 0LL;
  sub_100BDD080(&__p, v19, v20, 0x8E38E38E38E38E39LL * ((v20 - (uint64_t)v19) >> 3));
  char v21 = sub_100EBC450(a1, (uint64_t)&v45, a3, 1, a5);
  if (__p)
  {
    double v52 = __p;
    operator delete(__p);
  }

  unint64_t v22 = v46;
  if (!v46) {
    goto LABEL_20;
  }
  uint64_t v23 = (unint64_t *)&v46->__shared_owners_;
  do
    unint64_t v24 = __ldaxr(v23);
  while (__stlxr(v24 - 1, v23));
  if (!v24)
  {
    ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
    std::__shared_weak_count::__release_weak(v22);
    if ((v21 & 1) != 0) {
      return 1LL;
    }
  }

  else
  {
LABEL_20:
    if ((v21 & 1) != 0) {
      return 1LL;
    }
  }

  uint64_t v44 = 0x4051800000000000LL;
  unint64_t v25 = (std::__shared_weak_count *)a2[1];
  uint64_t v35 = (uint64_t)*a2;
  int v36 = v25;
  if (v25)
  {
    uint64_t v26 = (unint64_t *)&v25->__shared_owners_;
    do
      unint64_t v27 = __ldxr(v26);
    while (__stxr(v27 + 1, v26));
  }

  __int128 v28 = *((_OWORD *)a2 + 2);
  __int128 v37 = *((_OWORD *)a2 + 1);
  __int128 v38 = v28;
  uint64_t v39 = a2[6];
  v40[0] = *(_OWORD *)(a2 + 7);
  *(_OWORD *)((char *)v40 + 9) = *(_OWORD *)((char *)a2 + 65);
  uint64_t v42 = 0LL;
  uint64_t v43 = 0LL;
  double v29 = a2[11];
  uint64_t v30 = (uint64_t)a2[12];
  uint64_t v41 = 0LL;
  sub_100BDD080(&v41, v29, v30, 0x8E38E38E38E38E39LL * ((v30 - (uint64_t)v29) >> 3));
  uint64_t v13 = sub_100EBC450(a1, (uint64_t)&v35, a3, 0, (double *)&v44);
  if (v41)
  {
    uint64_t v42 = v41;
    operator delete(v41);
  }

  uint64_t v31 = v36;
  if (v36)
  {
    __int128 v32 = (unint64_t *)&v36->__shared_owners_;
    do
      unint64_t v33 = __ldaxr(v32);
    while (__stlxr(v33 - 1, v32));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }

  return v13;
}

void sub_100EBC414(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100EBC450(uint64_t a1, uint64_t a2, uint64_t a3, int a4, double *a5)
{
  if (!*(void *)a2) {
    return 0LL;
  }
  BOOL v10 = *(_BYTE *)(a2 + 20) == 0;
  if (a4) {
    double v11 = "next";
  }
  else {
    double v11 = "prior";
  }
  if (a4) {
    BOOL v10 = *(_BYTE *)(a2 + 20) != 0;
  }
  *(_BYTE *)(a2 + 20) = v10;
  double v12 = sub_100EBBF40(a1, a2, a3, *a5);
  double v13 = *(double *)(a3 + 96);
  sub_1010DDBC0(v49, v11);
  double v14 = *(double *)(a3 + 8);
  if (v12 < 0.0)
  {
    uint64_t v15 = *(void *)(a2 + 8);
    *(void *)__int16 v57 = *(void *)a2;
    *(void *)&v57[8] = v15;
    if (v15)
    {
      unint64_t v16 = (unint64_t *)(v15 + 8);
      do
        unint64_t v17 = __ldxr(v16);
      while (__stxr(v17 + 1, v16));
    }

    __int128 v18 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)&v57[16] = *(_OWORD *)(a2 + 16);
    __int128 v58 = v18;
    uint64_t v59 = *(void *)(a2 + 48);
    v60[0] = *(_OWORD *)(a2 + 56);
    *(_OWORD *)((char *)v60 + 9) = *(_OWORD *)(a2 + 65);
    uint64_t v62 = 0LL;
    uint64_t v63 = 0LL;
    unint64_t v19 = *(const void **)(a2 + 88);
    uint64_t v20 = *(void *)(a2 + 96);
    __int128 __p = 0LL;
    sub_100BDD080(&__p, v19, v20, 0x8E38E38E38E38E39LL * ((v20 - (uint64_t)v19) >> 3));
    if ((sub_100EBB1BC(a1, (double *)v57, v14, 24.0) & 1) != 0)
    {
      double v21 = fmod(*(float *)&v57[24] - *(double *)(a3 + 104), 360.0);
      if (v21 < 0.0) {
        double v21 = v21 + 360.0;
      }
      if (v21 > 180.0) {
        double v21 = v21 + -360.0;
      }
      if (fabs(v21) <= 8.0)
      {
        if (__p)
        {
          uint64_t v62 = __p;
          operator delete(__p);
        }

        uint64_t v44 = *(std::__shared_weak_count **)&v57[8];
        if (*(void *)&v57[8])
        {
          uint64_t v45 = (unint64_t *)(*(void *)&v57[8] + 8LL);
          do
            unint64_t v46 = __ldaxr(v45);
          while (__stlxr(v46 - 1, v45));
          if (!v46)
          {
            ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
            std::__shared_weak_count::__release_weak(v44);
          }
        }

        uint64_t v27 = 0LL;
        goto LABEL_64;
      }

      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      unint64_t v22 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v23 = v49;
        if (v50 < 0) {
          uint64_t v23 = (void **)v49[0];
        }
        *(_DWORD *)__int128 buf = 134349314;
        double v65 = v14;
        __int16 v66 = 2082;
        __int16 v67 = v23;
        _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,no DOT, too close to a %{public}s road with large direction change",  buf,  0x16u);
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_56;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      unint64_t v24 = v49;
      if (v50 < 0) {
        unint64_t v24 = (void **)v49[0];
      }
      int v51 = 134349314;
      double v52 = v14;
      __int16 v53 = 2082;
      uint64_t v54 = v24;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,no DOT, too close to a %{public}s road with large direction change",  &v51,  22);
      uint64_t v26 = (uint8_t *)v25;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::isCloseToMultiOutboundIntersection(CLParticleMapMatcherCommon ::Particle, const CLMapCrumb &, const BOOL, double &) const",  "%s\n",  v25);
    }

    else
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      __int128 v38 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v39 = v49;
        if (v50 < 0) {
          uint64_t v39 = (void **)v49[0];
        }
        *(_DWORD *)__int128 buf = 134349570;
        double v65 = v14;
        __int16 v66 = 2082;
        __int16 v67 = v39;
        __int16 v68 = 2050;
        uint64_t v69 = 0x4038000000000000LL;
        _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,moveParticle failed for %{public}s particle,distance,%{public}.1lf",  buf,  0x20u);
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_56;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      __int128 v47 = v49;
      if (v50 < 0) {
        __int128 v47 = (void **)v49[0];
      }
      int v51 = 134349570;
      double v52 = v14;
      __int16 v53 = 2082;
      uint64_t v54 = v47;
      __int16 v55 = 2050;
      uint64_t v56 = 0x4038000000000000LL;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,moveParticle failed for %{public}s particle,distance,%{public}.1lf",  &v51,  32);
      uint64_t v26 = (uint8_t *)v48;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::isCloseToMultiOutboundIntersection(CLParticleMapMatcherCommon ::Particle, const CLMapCrumb &, const BOOL, double &) const",  "%s\n",  v48);
    }

    if (v26 != buf) {
      free(v26);
    }
LABEL_56:
    if (__p)
    {
      uint64_t v62 = __p;
      operator delete(__p);
    }

    uint64_t v40 = *(std::__shared_weak_count **)&v57[8];
    if (*(void *)&v57[8])
    {
      uint64_t v41 = (unint64_t *)(*(void *)&v57[8] + 8LL);
      do
        unint64_t v42 = __ldaxr(v41);
      while (__stlxr(v42 - 1, v41));
      if (!v42)
      {
        ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
        std::__shared_weak_count::__release_weak(v40);
      }
    }

    goto LABEL_63;
  }

  double v28 = fabs(v13);
  if (v13 < 0.0) {
    double v28 = 3.0;
  }
  double v29 = v12 - v28;
  double v30 = 36.0;
  if (a4) {
    double v30 = 18.0;
  }
  if (v29 >= v30)
  {
    uint64_t v27 = 0LL;
    *a5 = v12 + -1.0;
    goto LABEL_64;
  }

  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_10188A8E0);
  }
  uint64_t v31 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
  {
    __int128 v32 = v49;
    if (v50 < 0) {
      __int128 v32 = (void **)v49[0];
    }
    uint64_t v33 = *(void *)(a3 + 96);
    *(_DWORD *)__int128 buf = 134349826;
    double v65 = v14;
    __int16 v66 = 2082;
    __int16 v67 = v32;
    __int16 v68 = 2050;
    uint64_t v69 = *(void *)&v29;
    __int16 v70 = 2050;
    uint64_t v71 = v33;
    _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,no DOT,too close to %{public}s intersection,dist,%{public}.2lf,speed,%{public}.2lf",  buf,  0x2Au);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    uint64_t v34 = v49;
    if (v50 < 0) {
      uint64_t v34 = (void **)v49[0];
    }
    uint64_t v35 = *(void *)(a3 + 96);
    *(_DWORD *)__int16 v57 = 134349826;
    *(double *)&v57[4] = v14;
    *(_WORD *)&v57[12] = 2082;
    *(void *)&v57[14] = v34;
    *(_WORD *)&v57[22] = 2050;
    *(double *)&v57[24] = v29;
    LOWORD(v58) = 2050;
    *(void *)((char *)&v58 + 2) = v35;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,no DOT,too close to %{public}s intersection,dist,%{public}.2lf,speed,%{public}.2lf",  v57,  42);
    __int128 v37 = (uint8_t *)v36;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::isCloseToMultiOutboundIntersection(CLParticleMapMatcherCommon:: Particle, const CLMapCrumb &, const BOOL, double &) const",  "%s\n",  v36);
    if (v37 != buf) {
      free(v37);
    }
  }

void sub_100EBCBF4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, char a22)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100EBCC44(uint64_t a1, double *a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a1 + 208);
  uint64_t v5 = *(std::__shared_weak_count **)(a1 + 216);
  uint64_t v23 = v6;
  unint64_t v24 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      unint64_t v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }

  if (!v6)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    double v14 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_ERROR,  "CLMMPED,Unexpected,invalid geometry pointer, getRoadsAtIntersection",  buf,  2u);
    }

    if (!sub_1002921D0(115, 0))
    {
LABEL_23:
      uint64_t v13 = 0LL;
      if (!v5) {
        return v13;
      }
      goto LABEL_24;
    }

    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    v22[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,Unexpected,invalid geometry pointer, getRoadsAtIntersection",  v22,  2);
    unint64_t v16 = (uint8_t *)v15;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::getRoadsAtIntersection(const CFAbsoluteTime, const CLMapGeometr y::DistanceQueryResult &, CLMapGeometry::ConnectedQueryResultList &)",  "%s\n",  v15);
LABEL_32:
    if (v16 != buf) {
      free(v16);
    }
    goto LABEL_23;
  }

  double v9 = *a2;
  if (!*(void *)a2)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    unint64_t v17 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_ERROR,  "CLMMPED,Unexpected,null road, getRoadsAtIntersection",  buf,  2u);
    }

    if (!sub_1002921D0(115, 0)) {
      goto LABEL_23;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    v22[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,Unexpected,null road, getRoadsAtIntersection",  v22,  2);
    unint64_t v16 = (uint8_t *)v21;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::getRoadsAtIntersection(const CFAbsoluteTime, const CLMapGeometr y::DistanceQueryResult &, CLMapGeometry::ConnectedQueryResultList &)",  "%s\n",  v21);
    goto LABEL_32;
  }

  int v10 = *((unsigned __int8 *)a2 + 20);
  double v11 = a2[6];
  sub_1001AC068(*(void **)a2);
  double v12 = 1.0 - v11;
  if (!v10) {
    double v12 = v11;
  }
  uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t, double *, BOOL, void, double, double))(*(void *)v6 + 72LL))( v6,  a3,  a2,  v10 != 0,  0LL,  v11,  v12 * *(double *)(*(void *)&v9 + 40LL) + 5.0);
  if (v5)
  {
LABEL_24:
    __int128 v18 = (unint64_t *)&v5->__shared_owners_;
    do
      unint64_t v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }

  return v13;
}

void sub_100EBCFD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
}

uint64_t sub_100EBCFEC(void *a1, uint64_t *a2, char a3, uint64_t *a4, double a5)
{
  if (*a1)
  {
    *(void *)__int128 buf = 0LL;
    double v30 = 0LL;
    int v31 = 0;
    __int16 v32 = 1;
    int v33 = 0;
    uint64_t v35 = 0LL;
    uint64_t v36 = 0LL;
    uint64_t v34 = 0LL;
    sub_1000F2F30(buf, a2);
    LOBYTE(v32) = a3;
    uint64_t v36 = a2[6];
    int v10 = 30;
    while (1)
    {
      int v11 = v32;
      double v12 = *(double *)&v36;
      uint64_t v13 = *(void *)buf;
      sub_1001AC068(*(void **)buf);
      double v14 = 1.0 - v12;
      if (!v11) {
        double v14 = v12;
      }
      double v15 = v14 * *(double *)(v13 + 40);
      if (v15 > a5)
      {
LABEL_16:
        uint64_t v18 = 1LL;
        goto LABEL_26;
      }

      a5 = a5 - v15;
      if ((_BYTE)v32) {
        double v16 = 1.0;
      }
      else {
        double v16 = 0.0;
      }
      sub_100D53CE4(a4);
      if ((_BYTE)v32) {
        double v17 = 1.0;
      }
      else {
        double v17 = 0.0;
      }
      uint64_t v36 = *(void *)&v17;
      uint64_t v26 = (uint64_t)&v26;
      uint64_t v27 = &v26;
      unint64_t v28 = 0LL;
      uint64_t v18 = (*(uint64_t (**)(void, uint64_t *, uint8_t *, double, double))(*(void *)*a1 + 72LL))( *a1,  &v26,  buf,  v16,  a5);
      if ((v18 & 1) == 0) {
        goto LABEL_25;
      }
      if (v28 >= 2) {
        break;
      }
      if (v28 != 1) {
        goto LABEL_25;
      }
      sub_1000F2F30(buf, v27 + 4);
      LOBYTE(v32) = *((_BYTE *)v27 + 24);
      uint64_t v36 = v27[6];
      sub_100D53CE4(&v26);
      if (!--v10) {
        goto LABEL_16;
      }
    }

    if (&v26 != a4) {
      sub_100ECBCB8(a4, (uint64_t)v27, (uint64_t)&v26);
    }
LABEL_25:
    sub_100D53CE4(&v26);
LABEL_26:
    uint64_t v20 = v30;
    if (v30)
    {
      p_shared_owners = (unint64_t *)&v30->__shared_owners_;
      do
        unint64_t v22 = __ldaxr(p_shared_owners);
      while (__stlxr(v22 - 1, p_shared_owners));
      if (!v22)
      {
        ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
        std::__shared_weak_count::__release_weak(v20);
      }
    }
  }

  else
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    unint64_t v19 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_ERROR,  "CLMMPED,Unexpected,invalid geometry pointer, findMultiOutboundIntersection",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      LOWORD(v26) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,Unexpected,invalid geometry pointer, findMultiOutboundIntersection",  &v26,  2);
      unint64_t v25 = (uint8_t *)v24;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLParticleMM::findMultiOutboundIntersection(CLMapGeometryPtr, const CLMapGeometry::DistanceQueryResult &, b ool, double, CLMapGeometry::ConnectedQueryResultList &)",  "%s\n",  v24);
      if (v25 != buf) {
        free(v25);
      }
    }

    return 0LL;
  }

  return v18;
}

void sub_100EBD330(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  sub_100D53CE4((uint64_t *)va);
  sub_10000AE14((uint64_t)va1);
  _Unwind_Resume(a1);
}

BOOL sub_100EBD360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 384);
  *(_BYTE *)(a2 + 898) = 0;
  double v7 = fmod(*(double *)(a2 + 480) - *(float *)(a2 + 280), 360.0);
  if (v7 < 0.0) {
    double v7 = v7 + 360.0;
  }
  if (v7 > 180.0) {
    double v7 = v7 + -360.0;
  }
  if ((*(_DWORD *)(a2 + 792) - 1) >= 2)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    double v12 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      int v13 = *(_DWORD *)(a2 + 792);
      *(_DWORD *)__int128 buf = 134349312;
      uint64_t v99 = v6;
      __int16 v100 = 1026;
      LODWORD(v101) = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,harshDigitizationCheck skipped,signalEnv,%{public}d",  buf,  0x12u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      int v50 = *(_DWORD *)(a2 + 792);
      int v78 = 134349312;
      uint64_t v79 = v6;
      __int16 v80 = 1026;
      LODWORD(v81) = v50;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,harshDigitizationCheck skipped,signalEnv,%{public}d",  &v78,  18);
      double v52 = (uint8_t *)v51;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::isHarshDigitizationCaseAtTurns(MMFilterData &, const MMSnapData &)",  "%s\n",  v51);
      if (v52 != buf) {
        free(v52);
      }
    }

    return *(_BYTE *)(a2 + 898) != 0;
  }

  else
  {
    double v8 = fabs(v7);
    if (v8 <= 15.0 || fabs(*(double *)(a2 + 632)) < 1.0)
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      double v9 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v10 = *(void *)(a2 + 632);
        *(_DWORD *)__int128 buf = 134349568;
        uint64_t v99 = v6;
        __int16 v100 = 2050;
        double v101 = v8;
        __int16 v102 = 2050;
        *(void *)double v103 = v10;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,harshDigitizationCheck skipped,courseDiff,%{public}.3lf,acrossTrack,%{public}.3lf",  buf,  0x20u);
      }

      if (!sub_1002921D0(115, 2)) {
        return 0LL;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      uint64_t v53 = *(void *)(a2 + 632);
      int v78 = 134349568;
      uint64_t v79 = v6;
      __int16 v80 = 2050;
      double v81 = v8;
      __int16 v82 = 2050;
      *(void *)__int16 v83 = v53;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,harshDigitizationCheck skipped,courseDiff,%{public}.3lf,acrossTrack,%{public}.3lf",  &v78,  32);
      uint64_t v36 = (uint8_t *)v54;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::isHarshDigitizationCaseAtTurns(MMFilterData &, const MMSnapData &)",  "%s\n",  v54);
LABEL_99:
      if (v36 != buf) {
        free(v36);
      }
      return 0LL;
    }

    if (!*(void *)(a2 + 256))
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      uint64_t v34 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)__int128 buf = 134349056;
        uint64_t v99 = v6;
        _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,Unexpected,invalid road pointer,isHarshDigitizationCaseAtTurns",  buf,  0xCu);
      }

      if (!sub_1002921D0(115, 0)) {
        return 0LL;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      int v78 = 134349056;
      uint64_t v79 = v6;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,Unexpected,invalid road pointer,isHarshDigitizationCaseAtTurns",  &v78,  12);
      uint64_t v36 = (uint8_t *)v35;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::isHarshDigitizationCaseAtTurns(MMFilterData &, const MMSnapData &)",  "%s\n",  v35);
      goto LABEL_99;
    }

    uint64_t v15 = *(void *)(a1 + 208);
    double v16 = *(std::__shared_weak_count **)(a1 + 216);
    uint64_t v76 = v15;
    double v77 = v16;
    if (v16)
    {
      p_shared_owners = (unint64_t *)&v16->__shared_owners_;
      do
        unint64_t v18 = __ldxr(p_shared_owners);
      while (__stxr(v18 + 1, p_shared_owners));
    }

    if (v15)
    {
      double v19 = fmin( fmax(*(double *)(*(void *)(a2 + 256) + 96LL) + *(double *)(*(void *)(a2 + 256) + 96LL), 15.0),  45.0);
      v74[0] = (uint64_t)v74;
      v74[1] = (uint64_t)v74;
      unint64_t v75 = 0LL;
      v73[0] = v15;
      v73[1] = v16;
      if (v16)
      {
        uint64_t v20 = (unint64_t *)&v16->__shared_owners_;
        do
          unint64_t v21 = __ldxr(v20);
        while (__stxr(v21 + 1, v20));
      }

      char v22 = sub_100EBCFEC(v73, (uint64_t *)(a2 + 256), *(_BYTE *)(a2 + 276), v74, v19 + 0.5);
      if (v16)
      {
        uint64_t v23 = (unint64_t *)&v16->__shared_owners_;
        do
          unint64_t v24 = __ldaxr(v23);
        while (__stlxr(v24 - 1, v23));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }

      if ((v22 & 1) != 0)
      {
        uint64_t v70 = (uint64_t)&v70;
        uint64_t v71 = &v70;
        unint64_t v72 = 0LL;
        unint64_t v25 = v77;
        uint64_t v68 = v76;
        uint64_t v69 = v77;
        if (v77)
        {
          uint64_t v26 = (unint64_t *)&v77->__shared_owners_;
          do
            unint64_t v27 = __ldxr(v26);
          while (__stxr(v27 + 1, v26));
        }

        char v28 = sub_100EBCFEC(&v68, (uint64_t *)(a2 + 256), *(_BYTE *)(a2 + 276) == 0, &v70, v19 + 0.5);
        if (v25)
        {
          double v29 = (unint64_t *)&v25->__shared_owners_;
          do
            unint64_t v30 = __ldaxr(v29);
          while (__stlxr(v30 - 1, v29));
          if (!v30)
          {
            ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
            std::__shared_weak_count::__release_weak(v25);
          }
        }

        if ((v28 & 1) != 0)
        {
          unint64_t v31 = v75;
          unint64_t v32 = v72;
          BOOL v33 = v75 > 1 || v72 > 1;
          if (v33
            || *(_BYTE *)(a3 + 762)
            && (v41 = *(void *)(a3 + 120), uint64_t v40 = (uint64_t *)(a3 + 120), v41)
            && (sub_100D5DAC4((uint64_t *)(a2 + 256), (uint64_t)buf),
                sub_100D5DAC4(v40, (uint64_t)&v78),
                sub_100BDA328((uint64_t)buf, (uint64_t)&v78)))
          {
            *(_BYTE *)(a2 + 898) = 1;
          }

          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10188A8E0);
          }
          unint64_t v42 = (os_log_s *)qword_1019348B8;
          if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v43 = *(double **)(a2 + 256);
            double v44 = *v43;
            uint64_t v45 = *((void *)v43 + 12);
            uint64_t v46 = *(void *)(a2 + 632);
            int v47 = *(unsigned __int8 *)(a2 + 898);
            *(_DWORD *)__int128 buf = 134351617;
            uint64_t v99 = v6;
            __int16 v100 = 2049;
            double v101 = v44;
            __int16 v102 = 1026;
            *(_DWORD *)double v103 = v31 > 1;
            *(_WORD *)&v103[4] = 1026;
            *(_DWORD *)&v103[6] = v32 > 1;
            __int16 v104 = 2050;
            unint64_t v105 = v75;
            __int16 v106 = 2050;
            unint64_t v107 = v72;
            __int16 v108 = 2050;
            double v109 = v19;
            __int16 v110 = 2050;
            uint64_t v111 = v45;
            __int16 v112 = 2050;
            double v113 = v8;
            __int16 v114 = 2050;
            uint64_t v115 = v46;
            __int16 v116 = 1026;
            int v117 = v47;
            _os_log_impl( (void *)&_mh_execute_header,  v42,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,harshDigitizationCheck,road,%{private}lld,isApproachingMulti,%{public}d,justCrossedM ulti,%{public}d,nextList,%{public}lu,priorList,%{public}lu,threshold,%{public}.1lf,roadWidth,%{public}.1lf ,courseDiff,%{public}.3lf,AT,%{public}.3lf,harshAmb,%{public}d",  buf,  0x64u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1019348B0 != -1) {
              dispatch_once(&qword_1019348B0, &stru_10188A8E0);
            }
            __int16 v61 = *(double **)(a2 + 256);
            double v62 = *v61;
            uint64_t v63 = *((void *)v61 + 12);
            uint64_t v64 = *(void *)(a2 + 632);
            int v65 = *(unsigned __int8 *)(a2 + 898);
            int v78 = 134351617;
            uint64_t v79 = v6;
            __int16 v80 = 2049;
            double v81 = v62;
            __int16 v82 = 1026;
            *(_DWORD *)__int16 v83 = v31 > 1;
            *(_WORD *)&v83[4] = 1026;
            *(_DWORD *)&v83[6] = v32 > 1;
            __int16 v84 = 2050;
            unint64_t v85 = v75;
            __int16 v86 = 2050;
            unint64_t v87 = v72;
            __int16 v88 = 2050;
            double v89 = v19;
            __int16 v90 = 2050;
            uint64_t v91 = v63;
            __int16 v92 = 2050;
            double v93 = v8;
            __int16 v94 = 2050;
            uint64_t v95 = v64;
            __int16 v96 = 1026;
            int v97 = v65;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,harshDigitizationCheck,road,%{private}lld,isApproachingMulti,%{public}d,justCrossedM ulti,%{public}d,nextList,%{public}lu,priorList,%{public}lu,threshold,%{public}.1lf,roadWidth,%{public}.1lf ,courseDiff,%{public}.3lf,AT,%{public}.3lf,harshAmb,%{public}d",  &v78,  100,  v68,  v69,  v70,  v71);
            __int16 v67 = (uint8_t *)v66;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::isHarshDigitizationCaseAtTurns(MMFilterData &, const MMSnapData &)",  "%s\n",  v66);
            if (v67 != buf) {
              free(v67);
            }
          }

          BOOL v11 = *(_BYTE *)(a2 + 898) != 0;
        }

        else
        {
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10188A8E0);
          }
          uint64_t v39 = (os_log_s *)qword_1019348B8;
          if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)__int128 buf = 134349056;
            uint64_t v99 = v6;
            _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,findMultiOutboundIntersection returned false, searching for prior connected candidates",  buf,  0xCu);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1019348B0 != -1) {
              dispatch_once(&qword_1019348B0, &stru_10188A8E0);
            }
            int v78 = 134349056;
            uint64_t v79 = v6;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,findMultiOutboundIntersection returned false, searching for prior connected candidates",  &v78,  12,  v68,  v69,  v70,  v71);
            uint64_t v60 = (uint8_t *)v59;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::isHarshDigitizationCaseAtTurns(MMFilterData &, const MMSnapData &)",  "%s\n",  v59);
            if (v60 != buf) {
              free(v60);
            }
          }

          BOOL v11 = 0LL;
        }

        sub_100D53CE4(&v70);
      }

      else
      {
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188A8E0);
        }
        __int128 v38 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)__int128 buf = 134349056;
          uint64_t v99 = v6;
          _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,findMultiOutboundIntersection returned false, searching for next connected candidates",  buf,  0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10188A8E0);
          }
          int v78 = 134349056;
          uint64_t v79 = v6;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,findMultiOutboundIntersection returned false, searching for next connected candidates",  &v78,  12);
          __int128 v58 = (uint8_t *)v57;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::isHarshDigitizationCaseAtTurns(MMFilterData &, const MMSnapData &)",  "%s\n",  v57);
          if (v58 != buf) {
            free(v58);
          }
        }

        BOOL v11 = 0LL;
      }

      sub_100D53CE4(v74);
      double v16 = v77;
    }

    else
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      __int128 v37 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)__int128 buf = 134349056;
        uint64_t v99 = v6;
        _os_log_impl( (void *)&_mh_execute_header,  v37,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,Unexpected,invalid geometry pointer,isHarshDigitizationCaseAtTurns",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188A8E0);
        }
        int v78 = 134349056;
        uint64_t v79 = v6;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,Unexpected,invalid geometry pointer,isHarshDigitizationCaseAtTurns",  &v78,  12);
        uint64_t v56 = (uint8_t *)v55;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLParticleMM::CLParticleMapMatcherFilterBase::isHarshDigitizationCaseAtTurns(MMFilterData &, const MMSnapData &)",  "%s\n",  v55);
        if (v56 != buf) {
          free(v56);
        }
      }

      BOOL v11 = 0LL;
    }

    if (v16)
    {
      __int128 v48 = (unint64_t *)&v16->__shared_owners_;
      do
        unint64_t v49 = __ldaxr(v48);
      while (__stlxr(v49 - 1, v48));
      if (!v49)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
  }

  return v11;
}

void sub_100EBE0EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t v6 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  va_copy(va2, va1);
  uint64_t v12 = va_arg(va2, void);
  uint64_t v14 = va_arg(va2, void);
  uint64_t v15 = va_arg(va2, void);
  sub_100D53CE4((uint64_t *)va);
  sub_100D53CE4((uint64_t *)va1);
  sub_10000AE14((uint64_t)va2);
  _Unwind_Resume(a1);
}

char *sub_100EBE164(char *result, double a2)
{
  __int128 v2 = result;
  double v12 = a2;
  int v3 = *((_DWORD *)result + 6);
  if (v3)
  {
    double v4 = *((double *)result + 1);
  }

  else
  {
    *((double *)result + 1) = a2;
    *((double *)result + 2) = a2;
    double v4 = a2;
  }

  double v5 = fabs(a2);
  if (v5 > fabs(v4)) {
    *((double *)result + 1) = a2;
  }
  unsigned int v6 = v3 + 1;
  *((_DWORD *)result + 6) = v6;
  double v7 = *((double *)result + 4);
  double v8 = a2 - v7;
  double v9 = v7 + (a2 - v7) / (double)v6;
  double v10 = *((double *)result + 5) + (a2 - v9) * v8;
  *((double *)result + 4) = v9;
  *((double *)result + 5) = v10;
  *((double *)result + 6) = a2 * a2 / (double)v6 + *((double *)result + 6) - *((double *)result + 6) / (double)v6;
  if (*(int *)result >= 1)
  {
    BOOL result = sub_100ECAE7C((uint64_t)(result + 56), *((char **)result + 7), (char *)&v12);
    uint64_t v11 = *((void *)v2 + 8);
  }

  return result;
}

uint64_t sub_100EBE250(void *a1, uint64_t a2)
{
  uint64_t v3 = a2 + 40;
  uint64_t v2 = *(void *)(a2 + 40);
  a1[28] = *(void *)(a2 + 400);
  uint64_t v4 = *(void *)(a2 + 384);
  if (*(void *)(a2 + 48) != v2)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    double v5 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      LODWORD(buf) = 134349056;
      *(void *)((char *)&buf + 4) = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,initialized called on already initialized filter",  (uint8_t *)&buf,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      LODWORD(v58) = 134349056;
      *(void *)((char *)&v58 + 4) = v4;
      _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,initialized called on already initialized filter",  &v58,  12);
      uint64_t v46 = (char *)v45;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLParticleMM::CLPedestrianMapMatcherFilter::initialize(MMFilterData &)",  "%s\n",  v45);
    }

    return 0LL;
  }

  sub_100ECB180((void **)(a2 + 40));
  *(void *)uint64_t v3 = 0LL;
  *(void *)(v3 + 8) = 0LL;
  *(void *)(v3 + 16) = 0LL;
  uint64_t v68 = 0LL;
  __int128 buf = 0uLL;
  *(void *)&__int128 v58 = &buf;
  sub_100D73874((void ***)&v58);
  v9.n128_f64[0] = sub_100F1F594((double *)(v3 + 336));
  uint64_t v53 = (uint64_t)&v53;
  uint64_t v54 = &v53;
  uint64_t v55 = 0LL;
  double v10 = (_DWORD *)a1[26];
  uint64_t v11 = (std::__shared_weak_count *)a1[27];
  double v52 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      unint64_t v13 = __ldxr(p_shared_owners);
    while (__stxr(v13 + 1, p_shared_owners));
  }

  if (!v10)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    BOOL v33 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      LODWORD(buf) = 134349056;
      *(void *)((char *)&buf + 4) = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,Unexpected,invalid geometry pointer, initialize",  (uint8_t *)&buf,  0xCu);
    }

    if (!sub_1002921D0(115, 0)) {
      goto LABEL_92;
    }
    bzero(&buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    LODWORD(v58) = 134349056;
    *(void *)((char *)&v58 + 4) = v4;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,Unexpected,invalid geometry pointer, initialize",  &v58,  12);
    uint64_t v35 = (char *)v34;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLParticleMM::CLPedestrianMapMatcherFilter::initialize(MMFilterData &)",  "%s\n",  v34);
    goto LABEL_111;
  }

  v9.n128_f64[0] = v9.n128_f64[0] * 4.0;
  if (v9.n128_f64[0] < 75.0) {
    v9.n128_f64[0] = 75.0;
  }
  if (v9.n128_f64[0] > 250.0) {
    v9.n128_f64[0] = 250.0;
  }
  v10[9] = 0;
  if (((*(uint64_t (**)(_DWORD *, uint64_t *, uint64_t, uint64_t, __n128))(*(void *)v10 + 64LL))( v10,  &v53,  v3 + 336,  1LL,  v9) & 1) == 0)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    uint64_t v36 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      LODWORD(buf) = 134349056;
      *(void *)((char *)&buf + 4) = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v36,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,roadsWithinDistance returned false",  (uint8_t *)&buf,  0xCu);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_92;
    }
    bzero(&buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    LODWORD(v58) = 134349056;
    *(void *)((char *)&v58 + 4) = v4;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,roadsWithinDistance returned false",  &v58,  12);
    uint64_t v35 = (char *)v37;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMM::CLPedestrianMapMatcherFilter::initialize(MMFilterData &)",  "%s\n",  v37);
    goto LABEL_111;
  }

  if (!v55)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    uint64_t v39 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      LODWORD(buf) = 134349056;
      *(void *)((char *)&buf + 4) = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,roadsWithinDistance returned 0 roads",  (uint8_t *)&buf,  0xCu);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_92;
    }
    bzero(&buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    LODWORD(v58) = 134349056;
    *(void *)((char *)&v58 + 4) = v4;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,roadsWithinDistance returned 0 roads",  &v58,  12);
    uint64_t v35 = (char *)v40;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMM::CLPedestrianMapMatcherFilter::initialize(MMFilterData &)",  "%s\n",  v40);
    goto LABEL_111;
  }

  uint64_t v14 = v54;
  if (v54 != &v53)
  {
    uint64_t v51 = a2 + 56;
    while (1)
    {
      __int128 v58 = 0uLL;
      LODWORD(v59) = 0;
      WORD2(v59) = 1;
      DWORD2(v59) = 0;
      int v65 = 0LL;
      uint64_t v66 = 0LL;
      __int128 __p = 0LL;
      __int128 v60 = 0u;
      __int128 v61 = 0u;
      __int128 v62 = 0u;
      char v63 = 0;
      sub_1000F2F30(&v58, v14 + 2);
      __int128 v15 = *((_OWORD *)v14 + 2);
      __int128 v16 = *((_OWORD *)v14 + 3);
      *(void *)&__int128 v61 = v14[8];
      __int128 v59 = v15;
      __int128 v60 = v16;
      uint64_t v17 = v58;
      if ((void)v58) {
        break;
      }
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      uint64_t v20 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
      {
        LODWORD(buf) = 134349056;
        *(void *)((char *)&buf + 4) = v4;
        _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,Unexpected, NULL road at initialization",  (uint8_t *)&buf,  0xCu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188A8E0);
        }
        int v56 = 134349056;
        uint64_t v57 = v4;
        LODWORD(v50) = 12;
        _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,Unexpected, NULL road at initialization",  &v56,  v50);
        char v22 = (char *)v21;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLParticleMM::CLPedestrianMapMatcherFilter::initialize(MMFilterData &)",  "%s\n",  v21);
      }

void sub_100EBEEB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v7 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  sub_10000AE14((uint64_t)va);
  sub_100890314((uint64_t *)va1);
  _Unwind_Resume(a1);
}

BOOL sub_100EBEF14(uint64_t a1, double *a2, uint64_t a3, __n128 a4)
{
  double v5 = a2[12];
  a4.n128_u64[0] = *(void *)(a1 + 24);
  if (a4.n128_f64[0] >= 0.0) {
    goto LABEL_20;
  }
  uint64_t v8 = *(void *)(a1 + 208);
  if (v8)
  {
    int v9 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 104LL))(v8);
    a4.n128_u64[0] = 0.75;
    if (v9) {
      a4.n128_f64[0] = 2.5;
    }
  }

  else
  {
    a4.n128_u64[0] = 0.75;
  }

  if (a2[3] - *(double *)(a1 + 232) < 900.0)
  {
    uint64_t v10 = *(void *)(a1 + 208);
    if (v10)
    {
      int v11 = (*(uint64_t (**)(uint64_t, __n128))(*(void *)v10 + 104LL))(v10, a4);
      a4.n128_u64[0] = 0.375;
      if (v11) {
        a4.n128_f64[0] = 1.25;
      }
    }

    else
    {
      a4.n128_u64[0] = 0.375;
    }
  }

  if (a2[23] > 0.0 && a2[12] >= 0.0
    || *(double *)(a3 + 424) <= 0.0
    || (double v12 = *(double *)(a3 + 336), v12 < 0.0)
    || (double v13 = a2[3], v13 >= 0.0) && (v14 = *(double *)(a3 + 264), v14 >= 0.0) && vabdd_f64(v13, v14) > 2.2)
  {
LABEL_20:
    double v12 = v5;
  }

  return v12 > a4.n128_f64[0] || *(_BYTE *)(a3 + 504) != 0;
}

BOOL sub_100EBF03C(uint64_t a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 8);
  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_10188A8E0);
  }
  uint64_t v4 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v5 = *(void *)(a2 + 8);
    *(_DWORD *)__int128 buf = 134349312;
    uint64_t v15 = v5;
    __int16 v16 = 1026;
    int v17 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,allowsNetworkUsage,%{public}d",  buf,  0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    uint64_t v7 = *(void *)(a2 + 8);
    int v10 = 134349312;
    uint64_t v11 = v7;
    __int16 v12 = 1026;
    int v13 = v3;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,allowsNetworkUsage,%{public}d",  &v10,  18);
    int v9 = (uint8_t *)v8;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMM::CLPedestrianMapMatcherFilter::shallUseNetwork(const CLMapCrumb &)",  "%s\n",  v8);
    if (v9 != buf) {
      free(v9);
    }
  }

  return v3 != 0;
}

void sub_100EBF210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v6 = *(double *)(a2 + 104);
  if (v6 > 0.0 && *(double *)(a2 + 192) <= 0.0)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    uint64_t v7 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v8 = *(void *)(a2 + 8);
      uint64_t v9 = *(void *)(a2 + 104);
      uint64_t v10 = *(void *)(a2 + 192);
      *(_DWORD *)__int128 buf = 134349568;
      uint64_t v89 = v8;
      __int16 v90 = 2050;
      uint64_t v91 = v9;
      __int16 v92 = 2050;
      uint64_t v93 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "CLMMPED,match,%{public}.1lf,course invalidated as courseUnc was invalid,course,%{public}.2lf,courseUnc,%{public}.2lf",  buf,  0x20u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      uint64_t v61 = *(void *)(a2 + 8);
      uint64_t v62 = *(void *)(a2 + 104);
      uint64_t v63 = *(void *)(a2 + 192);
      int v82 = 134349568;
      uint64_t v83 = v61;
      __int16 v84 = 2050;
      uint64_t v85 = v62;
      __int16 v86 = 2050;
      uint64_t v87 = v63;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,match,%{public}.1lf,course invalidated as courseUnc was invalid,course,%{public}.2lf,courseUnc,%{public}.2lf",  &v82,  32);
      int v65 = (uint8_t *)v64;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLParticleMM::CLPedestrianMapMatcherFilter::prefilterCourse(CLMapCrumb &, const MMSnapData &)",  "%s\n",  v64);
      if (v65 != buf) {
        free(v65);
      }
    }

    *(void *)(a2 + 104) = 0xBFF0000000000000LL;
    *(void *)(a2 + 192) = 0xBFF0000000000000LL;
    double v6 = -1.0;
  }

  double v11 = *(double *)(a3 + 264);
  if (v11 <= 0.0) {
    return;
  }
  double v12 = *(double *)(a2 + 24);
  BOOL v13 = v12 < 0.0 || v11 < 0.0;
  double v14 = vabdd_f64(v12, v11);
  if (v13) {
    double v15 = -1.0;
  }
  else {
    double v15 = v14;
  }
  v17 = *(double *)(a2 + 184) > 0.0 && (double v16 = *(double *)(a2 + 96), v16 >= 0.0) && v16 < 0.001
     || *(_BYTE *)(a2 + 228) != 0;
  double v18 = *(double *)(a2 + 192);
  BOOL v19 = v18 <= 0.0;
  if (v6 < 0.0) {
    BOOL v19 = 1;
  }
  if (v17 && v19 && v15 < 2.2)
  {
    double v20 = *(double *)(a3 + 432);
    if (v20 < 90.0 && v20 > 0.0)
    {
      double v21 = *(double *)(a3 + 344);
      if (v21 >= 0.0)
      {
        *(double *)(a2 + 104) = v21;
        *(double *)(a2 + 192) = v20;
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188A8E0);
        }
        char v22 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v23 = *(void *)(a2 + 8);
          uint64_t v24 = *(void *)(a2 + 104);
          uint64_t v25 = *(void *)(a2 + 192);
          *(_DWORD *)__int128 buf = 134349568;
          uint64_t v89 = v23;
          __int16 v90 = 2050;
          uint64_t v91 = v24;
          __int16 v92 = 2050;
          uint64_t v93 = v25;
          _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEBUG,  "CLMMPED,match,%{public}.1lf,invalidCourseInfoUpdatedUsingPreviousEpochInfo,course,%{public}.2lf,courseUnc,%{public}.2lf",  buf,  0x20u);
        }

        if (!sub_1002921D0(115, 2)) {
          goto LABEL_63;
        }
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188A8E0);
        }
        uint64_t v26 = *(void *)(a2 + 8);
        uint64_t v27 = *(void *)(a2 + 104);
        uint64_t v28 = *(void *)(a2 + 192);
        int v82 = 134349568;
        uint64_t v83 = v26;
        __int16 v84 = 2050;
        uint64_t v85 = v27;
        __int16 v86 = 2050;
        uint64_t v87 = v28;
        LODWORD(v79) = 32;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,match,%{public}.1lf,invalidCourseInfoUpdatedUsingPreviousEpochInfo,course,%{public}.2lf,courseUnc,%{public}.2lf",  &v82,  v79);
        unint64_t v30 = (uint8_t *)v29;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLParticleMM::CLPedestrianMapMatcherFilter::prefilterCourse(CLMapCrumb &, const MMSnapData &)",  "%s\n",  v29);
        goto LABEL_101;
      }
    }
  }

  if (v18 > 179.9 && v6 >= 0.0)
  {
    if (v15 >= 2.2
      || (double v31 = *(double *)(a3 + 432), v31 >= 90.0)
      || v31 <= 0.0
      || *(double *)(a3 + 344) < 0.0
      || !*(_BYTE *)(a3 + 504)
      || !*(void *)(a3 + 120))
    {
      *(void *)(a2 + 104) = 0xBFF0000000000000LL;
      *(void *)(a2 + 192) = 0xBFF0000000000000LL;
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      unint64_t v43 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v44 = *(void *)(a2 + 8);
        uint64_t v45 = *(void *)(a2 + 104);
        uint64_t v46 = *(void *)(a2 + 192);
        *(_DWORD *)__int128 buf = 134349568;
        uint64_t v89 = v44;
        __int16 v90 = 2050;
        uint64_t v91 = v45;
        __int16 v92 = 2050;
        uint64_t v93 = v46;
        _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,courseInvalidated,course,%{public}.2lf,courseUnc,%{public}.2lf",  buf,  0x20u);
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_63;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      uint64_t v66 = *(void *)(a2 + 8);
      uint64_t v67 = *(void *)(a2 + 104);
      uint64_t v68 = *(void *)(a2 + 192);
      int v82 = 134349568;
      uint64_t v83 = v66;
      __int16 v84 = 2050;
      uint64_t v85 = v67;
      __int16 v86 = 2050;
      uint64_t v87 = v68;
      LODWORD(v79) = 32;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,courseInvalidated,course,%{public}.2lf,courseUnc,%{public}.2lf",  &v82,  v79);
      unint64_t v30 = (uint8_t *)v69;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLParticleMM::CLPedestrianMapMatcherFilter::prefilterCourse(CLMapCrumb &, const MMSnapData &)",  "%s\n",  v69);
LABEL_101:
      if (v30 != buf) {
        free(v30);
      }
      goto LABEL_63;
    }

    v80[0] = (uint64_t)v80;
    v80[1] = (uint64_t)v80;
    unint64_t v81 = 0LL;
    sub_100EBCC44(a1, (double *)(a3 + 120), (uint64_t)v80);
    double v32 = *(double *)(a3 + 168);
    BOOL v33 = v32 >= 0.07 && v32 <= 0.93;
    if (v33 || v81 < 2)
    {
      *(void *)(a2 + 104) = *(void *)(a3 + 344);
      double v56 = *(double *)(a3 + 432);
      if (v56 < 29.9) {
        double v56 = 29.9;
      }
      *(double *)(a2 + 192) = v56;
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      uint64_t v57 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v58 = *(void *)(a2 + 8);
        uint64_t v59 = *(void *)(a2 + 104);
        uint64_t v60 = *(void *)(a2 + 192);
        *(_DWORD *)__int128 buf = 134349568;
        uint64_t v89 = v58;
        __int16 v90 = 2050;
        uint64_t v91 = v59;
        __int16 v92 = 2050;
        uint64_t v93 = v60;
        _os_log_impl( (void *)&_mh_execute_header,  v57,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,highCourseUncDataReplacedWithPreviousEpochInfo,course,%{public}.2lf,courseUnc,%{public}.2lf",  buf,  0x20u);
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_93;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      uint64_t v75 = *(void *)(a2 + 8);
      uint64_t v76 = *(void *)(a2 + 104);
      uint64_t v77 = *(void *)(a2 + 192);
      int v82 = 134349568;
      uint64_t v83 = v75;
      __int16 v84 = 2050;
      uint64_t v85 = v76;
      __int16 v86 = 2050;
      uint64_t v87 = v77;
      LODWORD(v79) = 32;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,highCourseUncDataReplacedWithPreviousEpochInfo,course,%{public}.2lf,courseUnc,%{public}.2lf",  &v82,  v79);
      unint64_t v42 = (uint8_t *)v78;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLParticleMM::CLPedestrianMapMatcherFilter::prefilterCourse(CLMapCrumb &, const MMSnapData &)",  "%s\n",  v78);
    }

    else
    {
      *(void *)(a2 + 104) = 0xBFF0000000000000LL;
      *(void *)(a2 + 192) = 0xBFF0000000000000LL;
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      uint64_t v34 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v35 = *(void *)(a2 + 8);
        uint64_t v36 = *(void *)(a2 + 104);
        uint64_t v37 = *(void *)(a2 + 192);
        *(_DWORD *)__int128 buf = 134349568;
        uint64_t v89 = v35;
        __int16 v90 = 2050;
        uint64_t v91 = v36;
        __int16 v92 = 2050;
        uint64_t v93 = v37;
        _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,courseInvalidated,particle near multioutbound intersection,course,%{public}.2lf,courseUnc,%{public}.2lf",  buf,  0x20u);
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_93;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      uint64_t v38 = *(void *)(a2 + 8);
      uint64_t v39 = *(void *)(a2 + 104);
      uint64_t v40 = *(void *)(a2 + 192);
      int v82 = 134349568;
      uint64_t v83 = v38;
      __int16 v84 = 2050;
      uint64_t v85 = v39;
      __int16 v86 = 2050;
      uint64_t v87 = v40;
      LODWORD(v79) = 32;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,courseInvalidated,particle near multioutbound intersection,course,%{public}.2lf,courseUnc,%{public}.2lf",  &v82,  v79);
      unint64_t v42 = (uint8_t *)v41;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLParticleMM::CLPedestrianMapMatcherFilter::prefilterCourse(CLMapCrumb &, const MMSnapData &)",  "%s\n",  v41);
    }

    if (v42 != buf) {
      free(v42);
    }
LABEL_93:
    sub_100D53CE4(v80);
  }

void sub_100EBFE3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

double sub_100EBFE64(uint64_t a1, uint64_t a2, double *a3)
{
  double v4 = *(double *)(a2 + 24);
  if (v4 >= 0.0 && (double v5 = a3[33], v5 >= 0.0))
  {
    double v9 = (v4 - v5) * (v4 - v5);
    double v10 = *(double *)(a2 + 184);
    double v11 = 0.0;
    if (v10 <= 0.0 || (double v12 = *(double *)(a2 + 96), v12 < 0.0) || (v13 = a3[53], v13 <= 0.0))
    {
      double v15 = 0.0;
    }

    else
    {
      double v14 = a3[42];
      double v15 = 0.0;
      if (v14 >= 0.0)
      {
        double v11 = v9 * ((v13 * v13 + v10 * v10) * 0.25);
        double v15 = v9 * ((v12 + v14) * 0.5 * ((v12 + v14) * 0.5 * 0.25));
      }
    }

    return sqrt(v9 * 3.0 + v11 + v15);
  }

  else
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    double v6 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v7 = *(void *)(a2 + 8);
      *(_DWORD *)__int128 buf = 134349312;
      uint64_t v24 = v7;
      __int16 v25 = 2050;
      unint64_t v26 = 0xBFF0000000000000LL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,unexpected, negtive dT,%{public}.1lf",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      uint64_t v16 = *(void *)(a2 + 8);
      int v19 = 134349312;
      uint64_t v20 = v16;
      __int16 v21 = 2050;
      unint64_t v22 = 0xBFF0000000000000LL;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,unexpected, negtive dT,%{public}.1lf",  &v19,  22);
      double v18 = (uint8_t *)v17;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual double CLParticleMM::CLPedestrianMapMatcherFilter::getProcessNoise(const CLMapCrumb &, const MMSnapData &)",  "%s\n",  v17);
      if (v18 != buf) {
        free(v18);
      }
    }

    return 0.0;
  }

uint64_t sub_100EC00F4(uint64_t a1, uint64_t *a2, uint64_t a3, double a4, double a5)
{
  if (!*(_BYTE *)(a3 + 504)) {
    return 0LL;
  }
  if (*(void *)(a3 + 120))
  {
    int v9 = 0;
    double v10 = (__int128 *)(a3 + 136);
    double v11 = (_OWORD *)(a3 + 176);
    uint64_t v32 = (uint64_t)(a2 + 7);
    BOOL v33 = a2 + 5;
    while (1)
    {
      double v12 = *(std::__shared_weak_count **)(a3 + 128);
      uint64_t v35 = *(void *)(a3 + 120);
      uint64_t v36 = v12;
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          unint64_t v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
      }

      __int128 v15 = *(_OWORD *)(a3 + 152);
      __int128 v37 = *v10;
      __int128 v38 = v15;
      uint64_t v39 = *(void *)(a3 + 168);
      v40[0] = *v11;
      *(_OWORD *)((char *)v40 + 9) = *(_OWORD *)(a3 + 185);
      unint64_t v42 = 0LL;
      uint64_t v43 = 0LL;
      uint64_t v16 = *(const void **)(a3 + 208);
      uint64_t v17 = *(void *)(a3 + 216);
      __int128 __p = 0LL;
      sub_100BDD080(&__p, v16, v17, 0x8E38E38E38E38E39LL * ((v17 - (uint64_t)v16) >> 3));
      if (byte_101990A48)
      {
        byte_101990A48 = 0;
        float v18 = *(float *)&dword_101990A4C;
      }

      else
      {
        do
        {
          float v19 = (float)((float)((float)random() * 4.6566e-10) * 2.0) + -1.0;
          float v20 = (float)((float)((float)random() * 4.6566e-10) * 2.0) + -1.0;
          float v21 = (float)(v20 * v20) + (float)(v19 * v19);
        }

        while (v21 >= 1.0);
        float v18 = 0.0;
        if (v21 != 0.0)
        {
          float v22 = sqrtf((float)(logf((float)(v20 * v20) + (float)(v19 * v19)) * -2.0) / v21);
          *(float *)&dword_101990A4C = v20 * v22;
          byte_101990A48 = 1;
          float v18 = v19 * v22;
        }
      }

      unint64_t v23 = a2[6];
      if (v23 >= a2[7])
      {
        uint64_t v24 = sub_100D73E7C(v33, (uint64_t)&v35);
      }

      else
      {
        sub_100D73FA0(v32, a2[6], (uint64_t)&v35);
        uint64_t v24 = v23 + 112;
        a2[6] = v23 + 112;
      }

      a2[6] = v24;
      if (__p)
      {
        unint64_t v42 = __p;
        operator delete(__p);
      }

      __int16 v25 = v36;
      if (v36)
      {
        unint64_t v26 = (unint64_t *)&v36->__shared_owners_;
        do
          unint64_t v27 = __ldaxr(v26);
        while (__stlxr(v27 - 1, v26));
        if (!v27)
        {
          ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
          std::__shared_weak_count::__release_weak(v25);
        }
      }

      if (++v9 == 12) {
        return 12LL;
      }
    }

    if (__p)
    {
      unint64_t v42 = __p;
      operator delete(__p);
    }

    uint64_t v29 = v36;
    if (v36)
    {
      unint64_t v30 = (unint64_t *)&v36->__shared_owners_;
      do
        unint64_t v31 = __ldaxr(v30);
      while (__stlxr(v31 - 1, v30));
      if (!v31)
      {
        ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
        std::__shared_weak_count::__release_weak(v29);
      }
    }
  }

  return 0xFFFFFFFFLL;
}

void sub_100EC03D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  *(void *)(v4 + 48) = v5;
  sub_100BDC958((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100EC040C(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  if (*(_BYTE *)(a3 + 746))
  {
    unsigned int v34 = 0;
    int v8 = 0;
    int v9 = (__int128 *)(a3 + 136);
    double v10 = (_OWORD *)(a3 + 176);
    uint64_t v30 = a2 + 56;
    unint64_t v31 = (uint64_t *)(a2 + 40);
    while (1)
    {
      double v11 = *(std::__shared_weak_count **)(a3 + 128);
      uint64_t v35 = *(void *)(a3 + 120);
      uint64_t v36 = v11;
      if (v11)
      {
        p_shared_owners = (unint64_t *)&v11->__shared_owners_;
        do
          unint64_t v13 = __ldxr(p_shared_owners);
        while (__stxr(v13 + 1, p_shared_owners));
      }

      __int128 v14 = v9[1];
      __int128 v37 = *v9;
      __int128 v38 = v14;
      uint64_t v39 = *((void *)v9 + 4);
      v40[0] = *v10;
      *(_OWORD *)((char *)v40 + 9) = *(_OWORD *)((char *)v10 + 9);
      unint64_t v42 = 0LL;
      uint64_t v43 = 0LL;
      __int128 v15 = *(const void **)(a3 + 208);
      uint64_t v16 = *(void *)(a3 + 216);
      __int128 __p = 0LL;
      sub_100BDD080(&__p, v15, v16, 0x8E38E38E38E38E39LL * ((v16 - (uint64_t)v15) >> 3));
      if (v35)
      {
        BYTE4(v37) ^= 1u;
        *((float *)&v37 + 2) = *((float *)&v37 + 2) + 180.0;
        sub_100292890(*((float *)&v37 + 2));
        *(float *)&double v17 = v17;
        DWORD2(v37) = LODWORD(v17);
        if (byte_101990A48)
        {
          byte_101990A48 = 0;
          float v18 = *(float *)&dword_101990A4C;
        }

        else
        {
          do
          {
            float v19 = (float)((float)((float)random() * 4.6566e-10) * 2.0) + -1.0;
            float v20 = (float)((float)((float)random() * 4.6566e-10) * 2.0) + -1.0;
            float v21 = (float)(v20 * v20) + (float)(v19 * v19);
          }

          while (v21 >= 1.0);
          float v18 = 0.0;
          if (v21 != 0.0)
          {
            float v22 = sqrtf((float)(logf((float)(v20 * v20) + (float)(v19 * v19)) * -2.0) / v21);
            *(float *)&dword_101990A4C = v20 * v22;
            byte_101990A48 = 1;
            float v18 = v19 * v22;
          }
        }

        if ((sub_100EBB1BC(a1, (double *)&v35, *(double *)(a2 + 384), v18 * a4 + a5) & 1) != 0)
        {
          unint64_t v23 = *(void *)(a2 + 48);
          if (v23 >= *(void *)(a2 + 56))
          {
            uint64_t v24 = sub_100D73E7C(v31, (uint64_t)&v35);
          }

          else
          {
            sub_100D73FA0(v30, *(void *)(a2 + 48), (uint64_t)&v35);
            uint64_t v24 = v23 + 112;
            *(void *)(a2 + 48) = v23 + 112;
          }

          int v25 = 0;
          *(void *)(a2 + 48) = v24;
          ++v34;
        }

        else
        {
          int v25 = 1;
        }
      }

      else
      {
        int v25 = 4;
      }

      if (__p)
      {
        unint64_t v42 = __p;
        operator delete(__p);
      }

      unint64_t v26 = v36;
      if (v36)
      {
        unint64_t v27 = (unint64_t *)&v36->__shared_owners_;
        do
          unint64_t v28 = __ldaxr(v27);
        while (__stlxr(v28 - 1, v27));
        if (!v28)
        {
          ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
          std::__shared_weak_count::__release_weak(v26);
        }
      }

      if ((v25 | 4) != 4) {
        break;
      }
      if (++v8 == 3) {
        return v34;
      }
    }

    return -1;
  }

  else
  {
    return 0;
  }

void sub_100EC0708(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  *(void *)(v6 + 48) = v7;
  sub_100BDC958((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100EC0740(uint64_t a1, void *a2, uint64_t a3)
{
  if (*(_BYTE *)(a3 + 745)) {
    BOOL v3 = *(void *)a3 == 0LL;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3) {
    return 0LL;
  }
  uint64_t v7 = a2 + 5;
  int v8 = a2 + 7;
  unint64_t v9 = a2[6];
  int v10 = 4;
  do
  {
    if (v9 >= *v8)
    {
      unint64_t v9 = sub_100D73E7C(v7, a3);
    }

    else
    {
      sub_100D73FA0((uint64_t)v8, v9, a3);
      v9 += 112LL;
      a2[6] = v9;
    }

    a2[6] = v9;
    --v10;
  }

  while (v10);
  return 4LL;
}

void sub_100EC07E4(_Unwind_Exception *a1)
{
  *(void *)(v1 + 48) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_100EC07EC(uint64_t a1, uint64_t *a2, uint64_t a3, double a4, double a5)
{
  if (*(_BYTE *)(a1 + 1064)) {
    BOOL v5 = *(_BYTE *)(a3 + 504) == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (v5) {
    return 0LL;
  }
  double v10 = sub_100D2DBDC( (double *)(a1 + 168),  *(double *)(a3 + 392),  *(double *)(a3 + 400),  *(double *)(a1 + 1120),  *(double *)(a1 + 1128),  *(double *)(a3 + 312));
  LODWORD(result) = 0;
  int v12 = 0;
  double v13 = v10 + a5 + 0.0;
  if (v13 <= 0.0) {
    double v14 = 0.1;
  }
  else {
    double v14 = v13;
  }
  while (2)
  {
    int v28 = v12;
    unsigned int v29 = result;
    for (int i = 0; i != 4; ++i)
    {
      uint64_t v16 = *(std::__shared_weak_count **)(a1 + 1096);
      uint64_t v30 = *(void **)(a1 + 1088);
      unint64_t v31 = v16;
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          unint64_t v18 = __ldxr(p_shared_owners);
        while (__stxr(v18 + 1, p_shared_owners));
      }

      __int128 v19 = *(_OWORD *)(a1 + 1120);
      __int128 v32 = *(_OWORD *)(a1 + 1104);
      __int128 v33 = v19;
      uint64_t v34 = *(void *)(a1 + 1136);
      v35[0] = *(_OWORD *)(a1 + 1144);
      *(_OWORD *)((char *)v35 + 9) = *(_OWORD *)(a1 + 1153);
      __int128 v37 = 0LL;
      uint64_t v38 = 0LL;
      float v20 = *(const void **)(a1 + 1176);
      uint64_t v21 = *(void *)(a1 + 1184);
      __int128 __p = 0LL;
      sub_100BDD080(&__p, v20, v21, 0x8E38E38E38E38E39LL * ((v21 - (uint64_t)v20) >> 3));
      if (v30)
      {
        if ((sub_100EBB1BC(a1, (double *)&v30, a4, v14) & 1) != 0)
        {
          if (**(void **)(a1 + 1088) == *v30 && *(unsigned __int8 *)(a1 + 1108) != BYTE4(v32))
          {
            int v24 = 0;
          }

          else
          {
            unint64_t v22 = a2[6];
            if (v22 >= a2[7])
            {
              uint64_t v23 = sub_100D73E7C(a2 + 5, (uint64_t)&v30);
            }

            else
            {
              sub_100D73FA0((uint64_t)(a2 + 7), a2[6], (uint64_t)&v30);
              uint64_t v23 = v22 + 112;
              a2[6] = v22 + 112;
            }

            int v24 = 0;
            a2[6] = v23;
            ++v29;
          }
        }

        else
        {
          int v24 = 1;
        }
      }

      else
      {
        int v24 = 7;
      }

      if (__p)
      {
        __int128 v37 = __p;
        operator delete(__p);
      }

      int v25 = v31;
      if (v31)
      {
        unint64_t v26 = (unint64_t *)&v31->__shared_owners_;
        do
          unint64_t v27 = __ldaxr(v26);
        while (__stlxr(v27 - 1, v26));
        if (!v27)
        {
          ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
          std::__shared_weak_count::__release_weak(v25);
        }
      }

      if (v24 != 7 && v24) {
        return 0xFFFFFFFFLL;
      }
    }

    int v12 = v28 + 1;
    uint64_t result = v29;
    if (v28 + 1 < *(_DWORD *)(a1 + 1200)) {
      continue;
    }
    break;
  }

  return result;
}

void sub_100EC0A7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
}

uint64_t sub_100EC0AB0(uint64_t a1, uint64_t *a2, uint64_t a3, double a4)
{
  if (!*(_BYTE *)(a3 + 504)) {
    return 0LL;
  }
  uint64_t v53 = 0LL;
  double v54 = 0LL;
  int v55 = 0;
  __int16 v56 = 1;
  int v57 = 0;
  uint64_t v59 = 0LL;
  uint64_t v60 = 0LL;
  uint64_t v58 = 0LL;
  sub_1000F2F30(&v53, (uint64_t *)(a3 + 120));
  LOBYTE(v56) = *(_BYTE *)(a3 + 140);
  uint64_t v60 = *(void *)(a3 + 168);
  if (v53)
  {
    uint64_t v51 = 0LL;
    uint64_t v52 = 0LL;
    int v50 = 0;
    double v47 = (__n128 *)&v47;
    double v48 = &v47;
    uint64_t v49 = 0LL;
    uint64_t v44 = (uint64_t)&v44;
    uint64_t v45 = &v44;
    uint64_t v46 = 0LL;
    sub_100EC0F48(a1, (double *)&v53, &v50, &v44, &v47, &v52, &v51, 80.0);
    if ((__n128 **)(a1 + 1784) != &v47) {
      sub_100C7DC2C((uint64_t *)(a1 + 1784), (uint64_t)v48, (uint64_t)&v47);
    }
    unint64_t v31 = a2 + 5;
    uint64_t v8 = (uint64_t)v48;
    if (v48 == &v47)
    {
      uint64_t v9 = 0LL;
LABEL_29:
      uint64_t v18 = (uint64_t)v45;
      if (v45 == &v44) {
        goto LABEL_48;
      }
LABEL_30:
      int v19 = 0;
      while (1)
      {
        uint64_t v32 = 0LL;
        __int128 v33 = 0LL;
        int v34 = 0;
        __int16 v35 = 1;
        int v36 = 0;
        unint64_t v42 = 0LL;
        uint64_t v43 = 0LL;
        __int128 __p = 0LL;
        __int128 v37 = 0u;
        __int128 v38 = 0u;
        __int128 v39 = 0u;
        char v40 = 0;
        sub_1000F2F30(&v32, (uint64_t *)(v18 + 16));
        *(void *)&__int128 v38 = *(void *)(v18 + 40);
        LOBYTE(v35) = *(_BYTE *)(v18 + 32);
        uint64_t v20 = (v9 + 1);
        char v21 = sub_100EBB1BC(a1, (double *)&v32, a4, (double)((int)v20 % 6) * 3.5);
        if ((v21 & 1) != 0)
        {
          unint64_t v22 = a2[6];
          if (v22 >= a2[7])
          {
            uint64_t v23 = sub_100D73E7C(v31, (uint64_t)&v32);
          }

          else
          {
            sub_100D73FA0((uint64_t)(a2 + 7), a2[6], (uint64_t)&v32);
            uint64_t v23 = v22 + 112;
            a2[6] = v22 + 112;
          }

          a2[6] = v23;
          uint64_t v9 = v20;
        }

        if (__p)
        {
          unint64_t v42 = __p;
          operator delete(__p);
        }

        int v24 = v33;
        if (v33)
        {
          p_shared_owners = (unint64_t *)&v33->__shared_owners_;
          do
            unint64_t v26 = __ldaxr(p_shared_owners);
          while (__stlxr(v26 - 1, p_shared_owners));
          if (!v26)
          {
            ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
            std::__shared_weak_count::__release_weak(v24);
          }
        }

        if ((v21 & 1) == 0) {
          break;
        }
        if (++v19 == 6)
        {
          uint64_t v18 = *(void *)(v18 + 8);
          goto LABEL_48;
        }
      }
    }

    else
    {
      uint64_t v9 = 0LL;
LABEL_9:
      int v10 = 0;
      while (1)
      {
        uint64_t v32 = 0LL;
        __int128 v33 = 0LL;
        int v34 = 0;
        __int16 v35 = 1;
        int v36 = 0;
        unint64_t v42 = 0LL;
        uint64_t v43 = 0LL;
        __int128 __p = 0LL;
        __int128 v37 = 0u;
        __int128 v38 = 0u;
        __int128 v39 = 0u;
        char v40 = 0;
        sub_1000F2F30(&v32, (uint64_t *)(v8 + 16));
        *(void *)&__int128 v38 = *(void *)(v8 + 40);
        LOBYTE(v35) = *(_BYTE *)(v8 + 32);
        uint64_t v11 = (v9 + 1);
        char v12 = sub_100EBB1BC(a1, (double *)&v32, a4, (double)((int)v11 % 6) * 3.5);
        if ((v12 & 1) != 0)
        {
          unint64_t v13 = a2[6];
          if (v13 >= a2[7])
          {
            uint64_t v14 = sub_100D73E7C(v31, (uint64_t)&v32);
          }

          else
          {
            sub_100D73FA0((uint64_t)(a2 + 7), a2[6], (uint64_t)&v32);
            uint64_t v14 = v13 + 112;
            a2[6] = v13 + 112;
          }

          a2[6] = v14;
          uint64_t v9 = v11;
        }

        if (__p)
        {
          unint64_t v42 = __p;
          operator delete(__p);
        }

        __int128 v15 = v33;
        if (v33)
        {
          uint64_t v16 = (unint64_t *)&v33->__shared_owners_;
          do
            unint64_t v17 = __ldaxr(v16);
          while (__stlxr(v17 - 1, v16));
          if (!v17)
          {
            ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
            std::__shared_weak_count::__release_weak(v15);
          }
        }

        if ((v12 & 1) == 0) {
          break;
        }
        if (++v10 == 6)
        {
          uint64_t v8 = *(void *)(v8 + 8);
          if ((__n128 **)v8 != &v47) {
            goto LABEL_9;
          }
          goto LABEL_29;
        }
      }
    }

    uint64_t v9 = 0xFFFFFFFFLL;
LABEL_48:
    sub_100890314(&v44);
    sub_100890314((uint64_t *)&v47);
    goto LABEL_49;
  }

  uint64_t v9 = 0xFFFFFFFFLL;
LABEL_49:
  unint64_t v27 = v54;
  if (v54)
  {
    int v28 = (unint64_t *)&v54->__shared_owners_;
    do
      unint64_t v29 = __ldaxr(v28);
    while (__stlxr(v29 - 1, v28));
    if (!v29)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
    }
  }

  return v9;
}

void sub_100EC0F00( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29)
{
  *(void *)(v29 + 48) = v30;
  sub_100BDC958((uint64_t)&a12);
  sub_100890314(&a26);
  sub_100890314(&a29);
  sub_10000AE14(v31 - 160);
  _Unwind_Resume(a1);
}

uint64_t sub_100EC0F48( uint64_t a1, double *a2, _DWORD *a3, uint64_t *a4, __n128 **a5, void *a6, void *a7, double a8)
{
  uint64_t v15 = *(void *)(a1 + 208);
  uint64_t v16 = *(std::__shared_weak_count **)(a1 + 216);
  uint64_t v51 = v15;
  uint64_t v52 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      unint64_t v18 = __ldxr(p_shared_owners);
    while (__stxr(v18 + 1, p_shared_owners));
  }

  if (v15)
  {
    *a6 = 0LL;
    *a7 = 0LL;
    *a3 = 0;
    int v19 = *((unsigned __int8 *)a2 + 20);
    double v20 = a2[6];
    double v21 = *a2;
    sub_1001AC068(*(void **)a2);
    double v22 = 1.0 - v20;
    if (!v19) {
      double v22 = v20;
    }
    double v23 = v22 * *(double *)(*(void *)&v21 + 40LL);
    uint64_t v24 = 1LL;
    if (v23 <= a8)
    {
      int v25 = 0;
      double v26 = a8 - v23;
      if (*((_BYTE *)a2 + 20)) {
        double v27 = 1.0;
      }
      else {
        double v27 = 0.0;
      }
      while (1)
      {
        sub_100890314(a4);
        *a3 = 0;
        uint64_t v29 = *(void **)(*(void *)a2 + 136LL);
        int v28 = *(void **)(*(void *)a2 + 144LL);
        if (*((_BYTE *)a2 + 20))
        {
          if (v28 == v29)
          {
            *a6 = 0LL;
            uint64_t v30 = 0LL;
          }

          else
          {
            *a6 = *(v28 - 2);
            uint64_t v30 = *(v28 - 1);
          }

          double v31 = 1.0;
        }

        else if (v28 == v29)
        {
          *a6 = 0LL;
          double v31 = 0.0;
          uint64_t v30 = 0LL;
        }

        else
        {
          *a6 = *v29;
          uint64_t v30 = v29[1];
          double v31 = 0.0;
        }

        *a7 = v30;
        a2[6] = v31;
        uint64_t v48 = (uint64_t)&v48;
        uint64_t v49 = &v48;
        unint64_t v50 = 0LL;
        uint64_t v24 = (*(uint64_t (**)(double, double))(*(void *)v51 + 72LL))(v27, v26);
        if ((v24 & 1) == 0) {
          break;
        }
        if (v50 >= 2)
        {
          __n128 buf = 0uLL;
          char v56 = 0;
          __int128 v37 = v49;
          if (v49 != &v48)
          {
            do
            {
              char v54 = *((_BYTE *)v37 + 24);
              uint64_t v55 = v37[6];
              sub_1000F2F30(&buf, v37 + 4);
              char v56 = 1;
              __n128 v38 = sub_100C7A00C((__n128 **)a4, &buf);
              ++*a3;
              __int128 v37 = (uint64_t *)v37[1];
            }

            while (v37 != &v48);
            __int128 v39 = (std::__shared_weak_count *)buf.n128_u64[1];
            if (buf.n128_u64[1])
            {
              char v40 = (unint64_t *)(buf.n128_u64[1] + 8);
              do
                unint64_t v41 = __ldaxr(v40);
              while (__stlxr(v41 - 1, v40));
              if (!v41)
              {
                ((void (*)(std::__shared_weak_count *, __n128))v39->__on_zero_shared)(v39, v38);
                std::__shared_weak_count::__release_weak(v39);
              }
            }
          }

          break;
        }

        if (v50 != 1) {
          break;
        }
        __n128 buf = 0uLL;
        char v56 = 0;
        char v54 = *((_BYTE *)v49 + 24);
        uint64_t v55 = v49[6];
        sub_1000F2F30(&buf, v49 + 4);
        char v56 = 1;
        sub_100C7A00C(a5, &buf);
        sub_1000F2F30(a2, v49 + 4);
        uint64_t v32 = v49;
        *((_BYTE *)a2 + 20) = *((_BYTE *)v49 + 24);
        *((void *)a2 + 6) = v32[6];
        __int128 v33 = (std::__shared_weak_count *)buf.n128_u64[1];
        if (buf.n128_u64[1])
        {
          int v34 = (unint64_t *)(buf.n128_u64[1] + 8);
          do
            unint64_t v35 = __ldaxr(v34);
          while (__stlxr(v35 - 1, v34));
          if (!v35)
          {
            ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
            std::__shared_weak_count::__release_weak(v33);
          }
        }

        sub_100D53CE4(&v48);
        if (++v25 == 30)
        {
          uint64_t v24 = 1LL;
          goto LABEL_43;
        }
      }

      sub_100D53CE4(&v48);
    }
  }

  else
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    int v36 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      buf.n128_u16[0] = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v36,  OS_LOG_TYPE_ERROR,  "CLMMPED,Unexpected,invalid geometry pointer, multiOutboundHelper",  (uint8_t *)&buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      LOWORD(v48) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,Unexpected,invalid geometry pointer, multiOutboundHelper",  &v48,  2);
      double v47 = (__n128 *)v46;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLParticleMM::CLPedestrianMapMatcherFilter::multiOutboundHelper(CLMapGeometry::DistanceQueryResult &, int &, double, CLMapGeometry::IntersectionQueryResultList &, CLMapGeometry::IntersectionQueryResultList &, do uble &, double &) const",  "%s\n",  v46);
      if (v47 != &buf) {
        free(v47);
      }
    }

    uint64_t v24 = 0LL;
  }

void sub_100EC13EC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_100EC142C(uint64_t a1, uint64_t a2)
{
  if (!*(_BYTE *)(a1 + 9)) {
    return 0LL;
  }
  if (*(void *)(a1 + 1880) == *(void *)(a1 + 1888)) {
    return 0LL;
  }
  uint64_t v4 = *(void *)(a2 + 384);
  uint64_t v5 = *(void *)(a1 + 1880);
  uint64_t v39 = *(void *)(a1 + 1888);
  if (v5 == v39) {
    return 0LL;
  }
  uint64_t v6 = 0LL;
  while (2)
  {
    uint64_t v7 = *(std::__shared_weak_count **)(v5 + 8);
    unint64_t v41 = *(uint64_t **)v5;
    unint64_t v42 = v7;
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        unint64_t v9 = __ldxr(p_shared_owners);
      while (__stxr(v9 + 1, p_shared_owners));
    }

    __int128 v10 = *(_OWORD *)(v5 + 16);
    __int128 v11 = *(_OWORD *)(v5 + 32);
    uint64_t v40 = v5;
    uint64_t v45 = *(void *)(v5 + 48);
    __int128 v43 = v10;
    __int128 v44 = v11;
    char v12 = 1;
    do
    {
      char v13 = v12;
      memset(buf, 0, 20);
      *(_WORD *)&buf[20] = 1;
      *(_DWORD *)&_BYTE buf[24] = 0;
      uint64_t v62 = 0LL;
      uint64_t v63 = 0LL;
      __int128 __p = 0LL;
      memset(&buf[32], 0, 32);
      __int128 v59 = 0u;
      char v60 = 0;
      sub_1000F2F30(buf, (uint64_t *)&v41);
      *(_OWORD *)&buf[16] = v43;
      *(_OWORD *)&buf[32] = v44;
      *(void *)&uint8_t buf[48] = v45;
      if (byte_101990A48)
      {
        byte_101990A48 = 0;
        float v14 = *(float *)&dword_101990A4C;
      }

      else
      {
        do
        {
          float v15 = (float)((float)((float)random() * 4.6566e-10) * 2.0) + -1.0;
          float v16 = (float)((float)((float)random() * 4.6566e-10) * 2.0) + -1.0;
          float v17 = (float)(v16 * v16) + (float)(v15 * v15);
        }

        while (v17 >= 1.0);
        float v14 = 0.0;
        if (v17 != 0.0)
        {
          float v18 = sqrtf((float)(logf((float)(v16 * v16) + (float)(v15 * v15)) * -2.0) / v17);
          *(float *)&dword_101990A4C = v16 * v18;
          byte_101990A48 = 1;
          float v14 = v15 * v18;
        }
      }

      char v19 = sub_100EBB1BC(a1, (double *)buf, *(double *)(a2 + 384), v14);
      if ((v19 & 1) != 0)
      {
        unint64_t v20 = *(void *)(a2 + 48);
        if (v20 >= *(void *)(a2 + 56))
        {
          uint64_t v21 = sub_100D73E7C((uint64_t *)(a2 + 40), (uint64_t)buf);
        }

        else
        {
          sub_100D73FA0(a2 + 56, *(void *)(a2 + 48), (uint64_t)buf);
          uint64_t v21 = v20 + 112;
          *(void *)(a2 + 48) = v20 + 112;
        }

        *(void *)(a2 + 48) = v21;
        uint64_t v6 = (v6 + 1);
      }

      if (__p)
      {
        uint64_t v62 = __p;
        operator delete(__p);
      }

      double v22 = *(std::__shared_weak_count **)&buf[8];
      if (*(void *)&buf[8])
      {
        double v23 = (unint64_t *)(*(void *)&buf[8] + 8LL);
        do
          unint64_t v24 = __ldaxr(v23);
        while (__stlxr(v24 - 1, v23));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
      }

      if ((v19 & 1) == 0)
      {
        unint64_t v35 = v42;
        if (v42)
        {
          int v36 = (unint64_t *)&v42->__shared_owners_;
          do
            unint64_t v37 = __ldaxr(v36);
          while (__stlxr(v37 - 1, v36));
          if (!v37)
          {
            ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
            std::__shared_weak_count::__release_weak(v35);
          }
        }

        return 0xFFFFFFFFLL;
      }

      char v12 = 0;
    }

    while ((v13 & 1) != 0);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    int v25 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v26 = *v41;
      *(_DWORD *)__n128 buf = 134350337;
      *(void *)&uint8_t buf[4] = v4;
      *(_WORD *)&_BYTE buf[12] = 2049;
      *(void *)&buf[14] = v44;
      *(_WORD *)&buf[22] = 2049;
      *(void *)&_BYTE buf[24] = *((void *)&v44 + 1);
      *(_WORD *)&buf[32] = 2050;
      *(double *)&buf[34] = *((float *)&v43 + 2);
      *(_WORD *)&buf[42] = 2049;
      *(void *)&buf[44] = v26;
      *(_WORD *)&buf[52] = 1026;
      *(_DWORD *)&buf[54] = BYTE4(v43);
      _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,routeHint,lat,%{private}.8lf,lon,%{private}.8lf,course,%{public}.3lf,rseg,%{private}lld,fwd,%{public}d",  buf,  0x3Au);
    }

    uint64_t v27 = v40;
    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      uint64_t v31 = *v41;
      int v46 = 134350337;
      uint64_t v47 = v4;
      __int16 v48 = 2049;
      uint64_t v49 = v44;
      __int16 v50 = 2049;
      uint64_t v51 = *((void *)&v44 + 1);
      __int16 v52 = 2050;
      double v53 = *((float *)&v43 + 2);
      __int16 v54 = 2049;
      uint64_t v55 = v31;
      __int16 v56 = 1026;
      int v57 = BYTE4(v43);
      LODWORD(v38) = 58;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,routeHint,lat,%{private}.8lf,lon,%{private}.8lf,course,%{public}.3lf,rseg,%{private}lld,fwd,%{public}d",  &v46,  v38);
      __int128 v33 = (uint8_t *)v32;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "int CLParticleMM::CLPedestrianMapMatcherFilter::addRouteHintParticles(MMFilterData &, const MMSnapData &)",  "%s\n",  v32);
      if (v33 != buf) {
        free(v33);
      }
      uint64_t v27 = v40;
    }

    int v28 = v42;
    if (v42)
    {
      uint64_t v29 = (unint64_t *)&v42->__shared_owners_;
      do
        unint64_t v30 = __ldaxr(v29);
      while (__stlxr(v30 - 1, v29));
      if (!v30)
      {
        ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
        std::__shared_weak_count::__release_weak(v28);
      }
    }

    uint64_t v5 = v27 + 56;
    if (v5 != v39) {
      continue;
    }
    break;
  }

  return v6;
}

void sub_100EC19A0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
}

uint64_t sub_100EC19D8(uint64_t a1, uint64_t a2, uint64_t a3, double *a4)
{
  if (a4[33] <= 0.0) {
    return 1LL;
  }
  uint64_t v8 = *(void *)(a1 + 208);
  unint64_t v9 = *(std::__shared_weak_count **)(a1 + 216);
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      unint64_t v11 = __ldxr(p_shared_owners);
    while (__stxr(v11 + 1, p_shared_owners));
  }

  if (!v8)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    uint64_t v38 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)__n128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_ERROR,  "CLMMPED,Unexpected,invalid geometry pointer, predict",  buf,  2u);
    }

    if (!sub_1002921D0(115, 0)) {
      goto LABEL_46;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    LOWORD(v56) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,Unexpected,invalid geometry pointer, predict",  &v56,  2);
    uint64_t v40 = (uint8_t *)v39;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLParticleMM::CLPedestrianMapMatcherFilter::predict(CLMapCrumb &, MMFilterData &, const MMSnapData &)",  "%s\n",  v39);
LABEL_64:
    if (v40 != buf) {
      free(v40);
    }
    goto LABEL_46;
  }

  double v55 = *(double *)(a2 + 8);
  double v13 = sub_100EBA71C(a1, a2, a4);
  double v14 = v13;
  if (v13 < 0.0) {
    goto LABEL_46;
  }
  *(double *)(a3 + 856) = v13;
  if (*(void *)(a3 + 48) == *(void *)(a3 + 40))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    unint64_t v41 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)__n128 buf = 134349056;
      double v75 = v55;
      _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,predict called with 0 particles",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 0)) {
      goto LABEL_46;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    int v56 = 134349056;
    double v57 = v55;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,predict called with 0 particles",  &v56,  12);
    uint64_t v40 = (uint8_t *)v48;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLParticleMM::CLPedestrianMapMatcherFilter::predict(CLMapCrumb &, MMFilterData &, const MMSnapData &)",  "%s\n",  v48);
    goto LABEL_64;
  }

  uint64_t v52 = *(void *)(a3 + 48) - *(void *)(a3 + 40);
  double v53 = v9;
  double v54 = sub_100EBFE64(v12, a2, a4);
  float v15 = *(double **)(a3 + 40);
  float v16 = *(double **)(a3 + 48);
  if (v15 != v16)
  {
    int v17 = 0;
    while (1)
    {
      if (byte_101990A48)
      {
        byte_101990A48 = 0;
        float v18 = *(float *)&dword_101990A4C;
      }

      else
      {
        do
        {
          float v19 = (float)((float)((float)random() * 4.6566e-10) * 2.0) + -1.0;
          float v20 = (float)((float)((float)random() * 4.6566e-10) * 2.0) + -1.0;
          float v21 = (float)(v20 * v20) + (float)(v19 * v19);
        }

        while (v21 >= 1.0);
        float v18 = 0.0;
        if (v21 != 0.0)
        {
          float v22 = sqrtf((float)(logf((float)(v20 * v20) + (float)(v19 * v19)) * -2.0) / v21);
          *(float *)&dword_101990A4C = v20 * v22;
          byte_101990A48 = 1;
          float v18 = v19 * v22;
        }
      }

      double v23 = v18;
      double v24 = v54 * v23;
      double v25 = fabs(v23);
      double v26 = v25 * 8.0;
      if ((sub_100EBB1BC(a1, v15, v55, v14 + v26) & 1) == 0) {
        break;
      }
      ++v17;
      v15 += 14;
      if (v15 == v16) {
        goto LABEL_24;
      }
    }

    uint64_t v37 = 0LL;
LABEL_54:
    unint64_t v9 = v53;
    goto LABEL_47;
  }

void sub_100EC2200( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_100EC224C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  uint64_t v6 = *(void *)(a1 + 1912);
  uint64_t v7 = *(void *)(a1 + 1904);
  if (v6 != v7)
  {
    sub_100D74278(a1 + 1928, v7, v6, 0xF83E0F83E0F83E1LL * ((v6 - v7) >> 3));
    uint64_t v8 = *(void *)(v5 + 1912);
    uint64_t v6 = *(void *)(v5 + 1904);
    if (v8 != v6)
    {
      do
      {
        uint64_t v9 = v8 - 264;
        sub_10000AE14(v8 - 56);
        uint64_t v8 = v9;
      }

      while (v9 != v6);
    }
  }

  *(void *)(v5 + 1912) = v6;
  if (!*(_BYTE *)(v5 + 9)) {
    return 0LL;
  }
  if (*(void *)(v5 + 1880) == *(void *)(v5 + 1888)) {
    return 0LL;
  }
  uint64_t v10 = *(void *)(a2 + 384);
  if (sub_100ECF4A4(v5 + 1832, *(double *)(a2 + 400), 2.5)
    || !sub_100BDD004((double *)(v5 + 1952), *(double *)(v5 + 1872), 60.0))
  {
    return 0LL;
  }

  uint64_t v11 = *(void *)(v5 + 208);
  uint64_t v12 = *(std::__shared_weak_count **)(v5 + 216);
  uint64_t v234 = v11;
  v235 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      unint64_t v14 = __ldxr(p_shared_owners);
    while (__stxr(v14 + 1, p_shared_owners));
  }

  if (!v11)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    double v25 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)__n128 buf = 134349056;
      *(void *)&uint8_t buf[4] = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,Unexpected,invalid geometry pointer, generateRouteHint",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      *(_DWORD *)v250 = 134349056;
      *(void *)&v250[4] = v10;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,Unexpected,invalid geometry pointer, generateRouteHint",  v250,  12);
      __int128 v207 = (char *)v206;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLParticleMM::CLPedestrianMapMatcherFilter::generateRouteHintMeasurement(const MMFilterData &, const MMSnapData &)",  "%s\n",  v206);
      if (v207 != buf) {
        free(v207);
      }
    }

    uint64_t v23 = 0LL;
    goto LABEL_302;
  }

  __int128 v231 = 0LL;
  __int128 v232 = 0LL;
  unint64_t v233 = 0LL;
  uint64_t v221 = v5;
  if (!*(_BYTE *)(a3 + 504)) {
    goto LABEL_184;
  }
  sub_100D5DAC4((uint64_t *)(a3 + 120), (uint64_t)v230);
  for (int i = *(__n128 **)(v5 + 1880); ; int i = (__n128 *)((char *)i + 56))
  {
    if (i == *(__n128 **)(v5 + 1888)) {
      goto LABEL_184;
    }
    unint64_t v16 = i->n128_u64[1];
    unint64_t v228 = i->n128_u64[0];
    char v229 = (std::__shared_weak_count *)v16;
    if (v16)
    {
      int v17 = (unint64_t *)(v16 + 8);
      do
        unint64_t v18 = __ldxr(v17);
      while (__stxr(v18 + 1, v17));
    }

    sub_100BDA324((uint64_t)buf, (uint64_t)&v228, i[1].n128_i8[4]);
    BOOL v19 = sub_100BDA328((uint64_t)v230, (uint64_t)buf);
    float v20 = v229;
    if (v229)
    {
      float v21 = (unint64_t *)&v229->__shared_owners_;
      do
        unint64_t v22 = __ldaxr(v21);
      while (__stlxr(v22 - 1, v21));
      if (!v22)
      {
        ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
        std::__shared_weak_count::__release_weak(v20);
      }
    }

    if (v19) {
      break;
    }
  }

  double v26 = *(double *)(a2 + 400);
  double v27 = -1.0;
  if (v26 >= 0.0)
  {
    double v28 = *(double *)(a3 + 264);
    double v29 = vabdd_f64(v26, v28);
    if (v28 >= 0.0) {
      double v27 = v29;
    }
    else {
      double v27 = -1.0;
    }
  }

  double v30 = fmax(*(double *)(a2 + 856), 0.0) + (float)((float)random() * 4.6566e-10) * 0.25;
  if (v30 <= v27 * 6.0) {
    double v31 = v30;
  }
  else {
    double v31 = v27 * 6.0;
  }
  sub_100BDC7E0((uint64_t)v262, a3 + 120);
  v225 = (__n128 *)&v225;
  v226 = &v225;
  int v224 = 0;
  if (((*(uint64_t (**)(uint64_t, _BYTE *, __n128 **, int *, double, double))(*(void *)v234 + 56LL))( v234,  v262,  &v225,  &v224,  *(double *)&v263[16],  v31) & 1) == 0)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    uint64_t v45 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)__n128 buf = 134349056;
      *(void *)&uint8_t buf[4] = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,routeHints,no meas,moveOnRouteRoads,failed as not enough route roads are available",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_82;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    *(_DWORD *)v250 = 134349056;
    *(void *)&v250[4] = v10;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,routeHints,no meas,moveOnRouteRoads,failed as not enough route roads are available",  v250,  12);
    int v47 = (char *)v46;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMM::CLPedestrianMapMatcherFilter::generateRouteHintMeasurement(const MMFilterData &, const MMSnapData &)",  "%s\n",  v46);
    goto LABEL_327;
  }

  if (j <= v224)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    __int16 v48 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)__n128 buf = 134349568;
      *(void *)&uint8_t buf[4] = v10;
      __int16 v269 = 1026;
      *(_DWORD *)v270 = v224;
      *(_WORD *)&v270[4] = 2050;
      *(void *)&v270[6] = j;
      _os_log_impl( (void *)&_mh_execute_header,  v48,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,routeHints,no meas,moveOnRouteRoads,route index,%{public}d,is more than number of route roads,%{public}ld",  buf,  0x1Cu);
    }

    if (!sub_1002921D0(115, 0)) {
      goto LABEL_82;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    *(_DWORD *)v250 = 134349568;
    *(void *)&v250[4] = v10;
    *(_WORD *)&v250[12] = 1026;
    *(_DWORD *)&v250[14] = v224;
    *(_WORD *)&v250[18] = 2050;
    *(void *)&v250[20] = j;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,routeHints,no meas,moveOnRouteRoads,route index,%{public}d,is more than number of route roads,%{public}ld",  v250,  28);
    int v47 = (char *)v210;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLParticleMM::CLPedestrianMapMatcherFilter::generateRouteHintMeasurement(const MMFilterData &, const MMSnapData &)",  "%s\n",  v210);
    goto LABEL_327;
  }

  double v32 = *(float *)&v262[24];
  double v33 = 5.0;
  if (*(double *)&v263[16] <= 0.97 && *(double *)&v263[16] >= 0.03)
  {
    if (*(double *)(a2 + 568) <= 0.0 || (double v34 = *(double *)(a2 + 480), v34 < 0.0))
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      int v49 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)__n128 buf = 134349312;
        *(void *)&uint8_t buf[4] = v10;
        __int16 v269 = 2050;
        *(void *)v270 = 0x403E000000000000LL;
        _os_log_impl( (void *)&_mh_execute_header,  v49,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,routeHints,no meas,moveOnRouteRoads,course deweighted,unc,%{public}.2lf",  buf,  0x16u);
      }

      double v33 = 30.0;
      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188A8E0);
        }
        *(_DWORD *)v250 = 134349312;
        *(void *)&v250[4] = v10;
        *(_WORD *)&v250[12] = 2050;
        *(void *)&v250[14] = 0x403E000000000000LL;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,routeHints,no meas,moveOnRouteRoads,course deweighted,unc,%{public}.2lf",  v250,  22);
        double v215 = (char *)v214;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMM::CLPedestrianMapMatcherFilter::generateRouteHintMeasurement(const MMFilterData &, co nst MMSnapData &)",  "%s\n",  v214);
        if (v215 != buf) {
          free(v215);
        }
      }
    }

    else
    {
      double v35 = fmod(v34 - v32, 360.0);
      if (v35 < 0.0) {
        double v35 = v35 + 360.0;
      }
      if (v35 > 180.0) {
        double v35 = v35 + -360.0;
      }
      double v36 = fabs(v35);
      int v37 = *(_DWORD *)(v5 + 2072);
      if (v36 >= 135.0)
      {
        *(_DWORD *)(v5 + 2072) = v37 + 1;
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188A8E0);
        }
        int v91 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v92 = *(void *)(a2 + 480);
          int v93 = *(_DWORD *)(v5 + 2072);
          *(_DWORD *)__n128 buf = 134349824;
          *(void *)&uint8_t buf[4] = v10;
          __int16 v269 = 2050;
          *(double *)v270 = v32;
          *(_WORD *)&v270[8] = 2050;
          *(void *)&v270[10] = v92;
          *(_WORD *)&v270[18] = 1026;
          *(_DWORD *)&v270[20] = v93;
          _os_log_impl( (void *)&_mh_execute_header,  v91,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,routeHints,no meas,moveOnRouteRoads,routeCourse,%{public}.1lf,is very different than c rumb course,%{public}.1lf,rejection,%{public}d",  buf,  0x26u);
        }

        if (!sub_1002921D0(115, 2)) {
          goto LABEL_82;
        }
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188A8E0);
        }
        uint64_t v94 = *(void *)(a2 + 480);
        int v95 = *(_DWORD *)(v5 + 2072);
        *(_DWORD *)v250 = 134349824;
        *(void *)&v250[4] = v10;
        *(_WORD *)&v250[12] = 2050;
        *(double *)&v250[14] = v32;
        *(_WORD *)&v250[22] = 2050;
        *(void *)&v250[24] = v94;
        *(_WORD *)&v250[32] = 1026;
        *(_DWORD *)&v250[34] = v95;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,routeHints,no meas,moveOnRouteRoads,routeCourse,%{public}.1lf,is very different than cru mb course,%{public}.1lf,rejection,%{public}d",  v250,  38);
        int v47 = (char *)v96;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMM::CLPedestrianMapMatcherFilter::generateRouteHintMeasurement(const MMFilterData &, co nst MMSnapData &)",  "%s\n",  v96);
        goto LABEL_327;
      }

      if (v36 > 60.0 && v37 >= 1)
      {
        *(_DWORD *)(v5 + 2072) = v37 + 1;
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188A8E0);
        }
        double v200 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v201 = *(void *)(a2 + 480);
          int v202 = *(_DWORD *)(v5 + 2072);
          *(_DWORD *)__n128 buf = 134349824;
          *(void *)&uint8_t buf[4] = v10;
          __int16 v269 = 2050;
          *(double *)v270 = v32;
          *(_WORD *)&v270[8] = 2050;
          *(void *)&v270[10] = v201;
          *(_WORD *)&v270[18] = 1026;
          *(_DWORD *)&v270[20] = v202;
          _os_log_impl( (void *)&_mh_execute_header,  v200,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,routeHints,no meas,moveOnRouteRoads,routeCourse,%{public}.1lf,is different than crumb course,%{public}.1lf, and rejections are high,rejection,%{public}d",  buf,  0x26u);
        }

        if (!sub_1002921D0(115, 2)) {
          goto LABEL_82;
        }
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188A8E0);
        }
        uint64_t v203 = *(void *)(a2 + 480);
        int v204 = *(_DWORD *)(v5 + 2072);
        *(_DWORD *)v250 = 134349824;
        *(void *)&v250[4] = v10;
        *(_WORD *)&v250[12] = 2050;
        *(double *)&v250[14] = v32;
        *(_WORD *)&v250[22] = 2050;
        *(void *)&v250[24] = v203;
        *(_WORD *)&v250[32] = 1026;
        *(_DWORD *)&v250[34] = v204;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,routeHints,no meas,moveOnRouteRoads,routeCourse,%{public}.1lf,is different than crumb co urse,%{public}.1lf, and rejections are high,rejection,%{public}d",  v250,  38);
        int v47 = (char *)v205;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMM::CLPedestrianMapMatcherFilter::generateRouteHintMeasurement(const MMFilterData &, co nst MMSnapData &)",  "%s\n",  v205);
LABEL_327:
        if (v47 != buf) {
          free(v47);
        }
LABEL_82:
        sub_100890314((uint64_t *)&v225);
        sub_100BDC958((uint64_t)v262);
LABEL_295:
        uint64_t v23 = 0LL;
        goto LABEL_301;
      }

      if (v36 > 80.0)
      {
        uint64_t v39 = a3;
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188A8E0);
        }
        uint64_t v40 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v41 = *(void *)(a2 + 480);
          *(_DWORD *)__n128 buf = 134349568;
          *(void *)&uint8_t buf[4] = v10;
          __int16 v269 = 2050;
          *(double *)v270 = v32;
          *(_WORD *)&v270[8] = 2050;
          *(void *)&v270[10] = v41;
          _os_log_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,routeHints,skipping,moveOnRouteRoads meas,routeCourse,%{public}.1lf,is somewhat differ ent than crumb course,%{public}.1lf",  buf,  0x20u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10188A8E0);
          }
          uint64_t v42 = *(void *)(a2 + 480);
          *(_DWORD *)v250 = 134349568;
          *(void *)&v250[4] = v10;
          *(_WORD *)&v250[12] = 2050;
          *(double *)&v250[14] = v32;
          *(_WORD *)&v250[22] = 2050;
          *(void *)&v250[24] = v42;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,routeHints,skipping,moveOnRouteRoads meas,routeCourse,%{public}.1lf,is somewhat differ ent than crumb course,%{public}.1lf",  v250,  32);
          __int128 v44 = (char *)v43;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMM::CLPedestrianMapMatcherFilter::generateRouteHintMeasurement(const MMFilterData &, const MMSnapData &)",  "%s\n",  v43);
          if (v44 != buf) {
            free(v44);
          }
        }

        goto LABEL_183;
      }
    }

    int v50 = v262[20];
    double v51 = *(double *)&v263[16];
    uint64_t v52 = *(void *)v262;
    sub_1001AC068(*(void **)v262);
    double v53 = 1.0 - v51;
    if (!v50) {
      double v53 = v51;
    }
  }

  double v54 = *(double *)(a2 + 480);
  if (v54 < 0.0) {
    goto LABEL_168;
  }
  double v222 = v33;
  double v55 = fmod(v54 - v32, 360.0);
  if (v55 < 0.0) {
    double v55 = v55 + 360.0;
  }
  if (v55 > 180.0) {
    double v55 = v55 + -360.0;
  }
  double v219 = fabs(v55);
  if (v219 <= 50.0)
  {
LABEL_167:
    double v33 = v222;
    goto LABEL_168;
  }

  uint64_t v56 = a3;
  int v57 = 1;
  uint64_t v58 = 2LL;
  while (1)
  {
    unint64_t v59 = v224 + (uint64_t)v57;
    if (j > v59) {
      break;
    }
LABEL_143:
    ++v57;
    ++v58;
    if (v57 == 3)
    {
      a3 = v56;
      goto LABEL_167;
    }
  }

  __int16 v60 = (__n128 *)v226;
  if ((v59 & 0x80000000) != 0)
  {
    uint64_t v62 = v224 + (uint64_t)v57;
    do
    {
      __int16 v60 = (__n128 *)v60->n128_u64[0];
      _CF = __CFADD__(v62++, 1LL);
    }

    while (!_CF);
  }

  else if ((_DWORD)v59)
  {
    unint64_t v61 = v58 + v224;
    do
    {
      __int16 v60 = (__n128 *)v60->n128_u64[1];
      --v61;
    }

    while (v61 > 1);
  }

  if (v60 != (__n128 *)&v225)
  {
    int v63 = v60 + 1;
    unint64_t v64 = v60[1].n128_u64[0];
    if (v64)
    {
      double v65 = fmod(v60[2].n128_f32[2] - v32, 360.0);
      if (v65 < 0.0) {
        double v65 = v65 + 360.0;
      }
      if (v65 <= 180.0) {
        double v66 = v65;
      }
      else {
        double v66 = v65 + -360.0;
      }
      if (v66 >= 10.0 || (sub_1001AC068((void *)v64), *(double *)(v64 + 40) >= 7.0))
      {
        sub_100292890(v32 + v66 * 0.5);
        double v76 = v75;
        double v77 = *(double *)(a2 + 480);
        double v78 = fmod(v77 - v60[2].n128_f32[2], 360.0);
        if (v78 < 0.0) {
          double v78 = v78 + 360.0;
        }
        if (v78 > 180.0) {
          double v78 = v78 + -360.0;
        }
        double v79 = fabs(v78);
        double v80 = fmod(v77 - v76, 360.0);
        if (v80 < 0.0) {
          double v80 = v80 + 360.0;
        }
        if (v80 > 180.0) {
          double v80 = v80 + -360.0;
        }
        double v81 = fabs(v80);
        if (v79 < 25.0 || v81 < 15.0)
        {
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10188A8E0);
          }
          __int16 v82 = (os_log_s *)qword_1019348B8;
          if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v83 = *(void *)(a2 + 480);
            double v84 = v60[2].n128_f32[2];
            *(_DWORD *)__n128 buf = 134350848;
            *(void *)&uint8_t buf[4] = v10;
            __int16 v269 = 2050;
            *(void *)v270 = v83;
            *(_WORD *)&v270[8] = 2050;
            *(double *)&v270[10] = v84;
            *(_WORD *)&v270[18] = 2050;
            *(double *)&v270[20] = v32;
            __int16 v271 = 2050;
            double v272 = v79;
            __int16 v273 = 2050;
            double v274 = v76;
            __int16 v275 = 2050;
            double v276 = v81;
            __int16 v277 = 2050;
            double v278 = v219;
            _os_log_impl( (void *)&_mh_execute_header,  v82,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,routeHints,skipping,moveOnRouteRoads meas,crumb close to intersection and gpsCourse, %{public}.1lf,is matching with next road on route,%{public}.1lf,course,%{public}.1lf,nextCourseDiff,%{publ ic}.1lf,approxCourseOfTurningRoad,%{public}.1lf,turningCourseDiff,%{public}.1lf,courseDiff,%{public}.1lf",  buf,  0x52u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1019348B0 != -1) {
              dispatch_once(&qword_1019348B0, &stru_10188A8E0);
            }
            uint64_t v87 = *(void *)(a2 + 480);
            double v88 = v60[2].n128_f32[2];
            *(_DWORD *)v250 = 134350848;
            *(void *)&v250[4] = v10;
            *(_WORD *)&v250[12] = 2050;
            *(void *)&v250[14] = v87;
            *(_WORD *)&v250[22] = 2050;
            *(double *)&v250[24] = v88;
            *(_WORD *)&v250[32] = 2050;
            *(double *)&v250[34] = v32;
            *(_WORD *)&v250[42] = 2050;
            *(double *)&v250[44] = v79;
            *(_WORD *)&v250[52] = 2050;
            *(double *)&v250[54] = v76;
            *(_WORD *)&v250[62] = 2050;
            *(double *)v251 = v81;
            *(_WORD *)&v251[8] = 2050;
            *(double *)&v251[10] = v219;
            LODWORD(v216) = 82;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,routeHints,skipping,moveOnRouteRoads meas,crumb close to intersection and gpsCourse, %{public}.1lf,is matching with next road on route,%{public}.1lf,course,%{public}.1lf,nextCourseDiff,%{publ ic}.1lf,approxCourseOfTurningRoad,%{public}.1lf,turningCourseDiff,%{public}.1lf,courseDiff,%{public}.1lf",  v250,  v216);
            __int16 v90 = (char *)v89;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMM::CLPedestrianMapMatcherFilter::generateRouteHintMeasurement(const MMFilterData & , const MMSnapData &)",  "%s\n",  v89);
            if (v90 != buf) {
              free(v90);
            }
          }

          sub_1000F2F30(v262, (uint64_t *)&v60[1]);
          __n128 v85 = v60[2];
          __n128 v86 = v60[3];
          *(void *)&v263[16] = v60[4].n128_u64[0];
          *(__n128 *)&v262[16] = v85;
          *(__n128 *)v263 = v86;
          double v32 = v60[2].n128_f32[2];
          int v224 = v59;
        }
      }

      else
      {
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188A8E0);
        }
        int v67 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
        {
          unint64_t v68 = v63->n128_u64[0];
          sub_1001AC068(v63->n128_u64[0]);
          uint64_t v69 = *(void *)(v68 + 40);
          *(_DWORD *)__n128 buf = 134349824;
          *(void *)&uint8_t buf[4] = v10;
          __int16 v269 = 1026;
          *(_DWORD *)v270 = v59;
          *(_WORD *)&v270[4] = 2050;
          *(double *)&v270[6] = v66;
          *(_WORD *)&v270[14] = 2050;
          *(void *)&v270[16] = v69;
          _os_log_impl( (void *)&_mh_execute_header,  v67,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,routeHints,moving on to next route road,nextRouteRoadIndex,%{public}d,angleBetweenTwoR oads,%{public}.2lf,length,%{public}.2lf",  buf,  0x26u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10188A8E0);
          }
          uint64_t v70 = qword_1019348B8;
          unint64_t v71 = v63->n128_u64[0];
          sub_1001AC068(v63->n128_u64[0]);
          uint64_t v72 = *(void *)(v71 + 40);
          *(_DWORD *)v250 = 134349824;
          *(void *)&v250[4] = v10;
          *(_WORD *)&v250[12] = 1026;
          *(_DWORD *)&v250[14] = v59;
          *(_WORD *)&v250[18] = 2050;
          *(double *)&v250[20] = v66;
          *(_WORD *)&v250[28] = 2050;
          *(void *)&v250[30] = v72;
          LODWORD(v216) = 38;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v70,  2LL,  "CLMMPED,%{public}.1lf,routeHints,moving on to next route road,nextRouteRoadIndex,%{public}d,angleBetweenTwoR oads,%{public}.2lf,length,%{public}.2lf",  v250,  v216);
          double v74 = (char *)v73;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMM::CLPedestrianMapMatcherFilter::generateRouteHintMeasurement(const MMFilterData &, const MMSnapData &)",  "%s\n",  v73);
          if (v74 != buf) {
            free(v74);
          }
        }
      }

      uint64_t v5 = v221;
      goto LABEL_143;
    }
  }

  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_10188A8E0);
  }
  uint64_t v5 = v221;
  a3 = v56;
  double v33 = v222;
  int v97 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)__n128 buf = 134349056;
    *(void *)&uint8_t buf[4] = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v97,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,unexpected,routeHints,moving on to next route road,nullptr",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    *(_DWORD *)v250 = 134349056;
    *(void *)&v250[4] = v10;
    LODWORD(v216) = 12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,unexpected,routeHints,moving on to next route road,nullptr",  v250,  v216);
    uint64_t v99 = (char *)v98;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLParticleMM::CLPedestrianMapMatcherFilter::generateRouteHintMeasurement(const MMFilterData &, const MMSnapData &)",  "%s\n",  v98);
    if (v99 != buf) {
      free(v99);
    }
    uint64_t v5 = v221;
    a3 = v56;
    goto LABEL_167;
  }

LABEL_249:
  if (v220 == (_OWORD *)v111) {
    goto LABEL_295;
  }
  __int128 v218 = (uint64_t *)(v5 + 1904);
  int v159 = (double *)(v5 + 168);
  *(_DWORD *)(v5 + 2072) = 0;
  double v160 = -1.0;
  double v161 = 0.0;
  double v162 = -1.0;
  do
  {
    int v163 = *(double **)(v5 + 1928);
    __int16 v164 = *(double **)(v5 + 1936);
    if (v163 == v164) {
      goto LABEL_275;
    }
    BOOL v165 = 1;
    do
    {
      double v166 = vabdd_f64(v163[23], *(double *)(v111 + 184));
      if (v160 < 0.0) {
        double v160 = v166;
      }
      double v167 = sub_100D2DBDC(v159, *(double *)(v111 + 80), *(double *)(v111 + 88), v163[10], v163[11], 0.0);
      if (v167 < v162 || v162 < 0.0) {
        double v162 = v167;
      }
      if (v167 < 0.001)
      {
        BOOL v169 = *(double *)(v111 + 256) >= 0.2;
        *(void *)v262 = v262;
        *(void *)&v262[8] = v262;
        *(void *)&v262[16] = 0LL;
        if ((*(unsigned int (**)(uint64_t, _BYTE *, uint64_t, BOOL, void))(*(void *)v234 + 72LL))( v234,  v262,  v111 + 208,  v169,  0LL))
        {
          unint64_t v170 = *(void *)&v262[16];
          BOOL v165 = *(void *)&v262[16] > 1uLL;
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10188A8E0);
          }
          int v171 = (os_log_s *)qword_1019348B8;
          if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)__n128 buf = 134349568;
            *(void *)&uint8_t buf[4] = v10;
            __int16 v269 = 1026;
            *(_DWORD *)v270 = v170 > 1;
            *(_WORD *)&v270[4] = 2050;
            *(void *)&v270[6] = *(void *)&v262[16];
            _os_log_impl( (void *)&_mh_execute_header,  v171,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,routeHints,duplicate measurement check,measurementGood,%{public}d,vector,%{public}lu",  buf,  0x1Cu);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1019348B0 != -1) {
              dispatch_once(&qword_1019348B0, &stru_10188A8E0);
            }
            *(_DWORD *)v250 = 134349568;
            *(void *)&v250[4] = v10;
            *(_WORD *)&v250[12] = 1026;
            *(_DWORD *)&v250[14] = v170 > 1;
            *(_WORD *)&v250[18] = 2050;
            *(void *)&v250[20] = *(void *)&v262[16];
            LODWORD(v216) = 28;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,routeHints,duplicate measurement check,measurementGood,%{public}d,vector,%{public}lu",  v250,  v216);
            double v173 = (char *)v172;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMM::CLPedestrianMapMatcherFilter::generateRouteHintMeasurement(const MMFilterData & , const MMSnapData &)",  "%s\n",  v172);
            if (v173 != buf) {
              free(v173);
            }
          }
        }

        sub_100D53CE4((uint64_t *)v262);
      }

      v163 += 33;
    }

    while (v163 != v164);
    uint64_t v5 = v221;
    if (v165)
    {
LABEL_275:
      double v174 = *(double *)(v111 + 128);
      unint64_t v175 = *(void *)(v5 + 1912);
      if (v175 >= *(void *)(v5 + 1920))
      {
        uint64_t v190 = sub_100D7466C(v218, v111);
      }

      else
      {
        *(_OWORD *)unint64_t v175 = *(_OWORD *)v111;
        __int128 v176 = *(_OWORD *)(v111 + 16);
        __int128 v177 = *(_OWORD *)(v111 + 32);
        __int128 v178 = *(_OWORD *)(v111 + 64);
        *(_OWORD *)(v175 + 48) = *(_OWORD *)(v111 + 48);
        *(_OWORD *)(v175 + 64) = v178;
        *(_OWORD *)(v175 + 16) = v176;
        *(_OWORD *)(v175 + 32) = v177;
        __int128 v179 = *(_OWORD *)(v111 + 80);
        __int128 v180 = *(_OWORD *)(v111 + 96);
        __int128 v181 = *(_OWORD *)(v111 + 128);
        *(_OWORD *)(v175 + 112) = *(_OWORD *)(v111 + 112);
        *(_OWORD *)(v175 + 128) = v181;
        *(_OWORD *)(v175 + 80) = v179;
        *(_OWORD *)(v175 + 96) = v180;
        __int128 v182 = *(_OWORD *)(v111 + 144);
        __int128 v183 = *(_OWORD *)(v111 + 160);
        __int128 v184 = *(_OWORD *)(v111 + 192);
        *(_OWORD *)(v175 + 176) = *(_OWORD *)(v111 + 176);
        *(_OWORD *)(v175 + 192) = v184;
        *(_OWORD *)(v175 + 144) = v182;
        *(_OWORD *)(v175 + 160) = v183;
        *(void *)(v175 + 208) = *(void *)(v111 + 208);
        uint64_t v185 = *(void *)(v111 + 216);
        *(void *)(v175 + 216) = v185;
        if (v185)
        {
          double v186 = (unint64_t *)(v185 + 8);
          do
            unint64_t v187 = __ldxr(v186);
          while (__stxr(v187 + 1, v186));
        }

        __int128 v188 = *(_OWORD *)(v111 + 224);
        __int128 v189 = *(_OWORD *)(v111 + 240);
        *(void *)(v175 + 256) = *(void *)(v111 + 256);
        *(_OWORD *)(v175 + 224) = v188;
        *(_OWORD *)(v175 + 240) = v189;
        uint64_t v190 = v175 + 264;
      }

      double v161 = v161 + v174;
      *(void *)(v5 + 1912) = v190;
    }

    v111 += 264LL;
  }

  while ((_OWORD *)v111 != v220);
  if (v162 < 0.0 || v160 <= 0.0 || v160 >= 5.0 || v162 <= v160 * 6.0)
  {
    if (v161 > 0.0)
    {
      uint64_t v195 = *(void *)(v5 + 1904);
      uint64_t v196 = *(void *)(v5 + 1912);
      while (v195 != v196)
      {
        *(double *)(v195 + 128) = *(double *)(v195 + 128) / v161;
        v195 += 264LL;
      }
    }

    uint64_t v23 = 1LL;
  }

  else
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    __int16 v191 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)__n128 buf = 134349312;
      *(void *)&uint8_t buf[4] = v10;
      __int16 v269 = 2050;
      *(double *)v270 = v162;
      _os_log_impl( (void *)&_mh_execute_header,  v191,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,routeHints,jump in route hint measurement,%{public}.3lf,rejecting",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      *(_DWORD *)v250 = 134349312;
      *(void *)&v250[4] = v10;
      *(_WORD *)&v250[12] = 2050;
      *(double *)&v250[14] = v162;
      LODWORD(v216) = 22;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,routeHints,jump in route hint measurement,%{public}.3lf,rejecting",  v250,  v216);
      char v209 = (char *)v208;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMM::CLPedestrianMapMatcherFilter::generateRouteHintMeasurement(const MMFilterData &, const MMSnapData &)",  "%s\n",  v208);
      if (v209 != buf) {
        free(v209);
      }
      uint64_t v5 = v221;
    }

    uint64_t v192 = *(void *)(v5 + 1912);
    uint64_t v193 = *(void *)(v5 + 1904);
    if (v192 != v193)
    {
      do
      {
        uint64_t v194 = v192 - 264;
        sub_10000AE14(v192 - 56);
        uint64_t v192 = v194;
      }

      while (v194 != v193);
    }

    uint64_t v23 = 0LL;
    *(void *)(v5 + 1912) = v193;
  }

void sub_100EC4914( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, char a38, uint64_t a39, uint64_t a40, char a41)
{
  STACK[0x2E0] = (unint64_t)&a38;
  sub_100D73A50((void ***)&STACK[0x2E0]);
  sub_10000AE14((uint64_t)&a41);
  _Unwind_Resume(a1);
}

BOOL sub_100EC4A1C(uint64_t a1, uint64_t a2, uint64_t a3, BOOL *a4)
{
  uint64_t v8 = *(void *)(a2 + 248);
  *a4 = 0;
  uint64_t v10 = *(void *)(a1 + 208);
  uint64_t v9 = *(std::__shared_weak_count **)(a1 + 216);
  uint64_t v195 = v10;
  uint64_t v196 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      unint64_t v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
  }

  if (v10)
  {
    BOOL v13 = sub_100ECF4A4(a1 + 1832, *(double *)(a2 + 264), 6.0);
    if (!v13 || (unint64_t v14 = (void **)(a2 + 120), (v15 = *(void *)(a2 + 120)) == 0))
    {
      BOOL v25 = 0;
      BOOL v27 = 0;
      goto LABEL_47;
    }

    double v16 = 15.0;
    double v17 = 25.0;
    if (*(_BYTE *)(a1 + 12))
    {
      double v17 = 15.0;
      double v16 = 5.0;
    }

    if (v17 >= v16) {
      double v18 = v16;
    }
    else {
      double v18 = v17;
    }
    int v19 = *(unsigned __int8 *)(a2 + 140);
    double v20 = *(double *)(a2 + 168);
    sub_1001AC068(*(void **)(a2 + 120));
    double v21 = 1.0 - v20;
    if (!v19) {
      double v21 = v20;
    }
    int v22 = *(unsigned __int8 *)(a2 + 140);
    double v23 = *(double *)(a2 + 168);
    if (v21 * *(double *)(v15 + 40) >= v18)
    {
      double v24 = 1.0 - v23;
      if (*(_BYTE *)(a2 + 140)) {
        double v24 = *(double *)(a2 + 168);
      }
      if (v24 < 0.99)
      {
        BOOL v25 = 0;
        int v26 = 0;
LABEL_41:
        if (*(_BYTE *)(a1 + 12))
        {
          int v35 = *(unsigned __int8 *)(a2 + 140);
          double v36 = *(double *)(a2 + 168);
          uint64_t v37 = *(void *)(a2 + 120);
          sub_1001AC068((void *)v37);
          double v38 = 1.0 - v36;
          if (!v35) {
            double v38 = v36;
          }
          if (v38 * *(double *)(v37 + 40) < v18)
          {
            int v26 = 1;
            *a4 = 1;
          }
        }

        BOOL v27 = v26 != 0;
LABEL_47:
        *a4 = v27;
        double v39 = *(double *)(a2 + 480);
        if (*(_BYTE *)(a2 + 760)) {
          BOOL v40 = 1;
        }
        else {
          BOOL v40 = *(_BYTE *)(a2 + 232) == 0;
        }
        int v41 = !v40;
        double v42 = fabs(*(double *)(a3 + 480));
        if (*(_BYTE *)(a3 + 504)) {
          double v43 = v42;
        }
        else {
          double v43 = -1.0;
        }
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188A8E0);
        }
        __int128 v44 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v45 = *(void *)(a2 + 248);
          uint64_t v46 = *(void *)(a2 + 472);
          uint64_t v47 = *(void *)(a2 + 496);
          BOOL v48 = *a4;
          *(_DWORD *)__n128 buf = 134350592;
          *(void *)&uint8_t buf[4] = v45;
          *(_WORD *)&_BYTE buf[12] = 2050;
          *(double *)&buf[14] = v39;
          *(_WORD *)&buf[22] = 2050;
          *(double *)&_BYTE buf[24] = v43;
          *(_WORD *)&buf[32] = 1026;
          *(_DWORD *)uint64_t v211 = v41;
          *(_WORD *)&v211[4] = 2050;
          *(void *)&v211[6] = v46;
          *(_WORD *)&v211[14] = 2050;
          *(void *)&v211[16] = v47;
          *(_WORD *)&v211[24] = 1026;
          *(_DWORD *)&v211[26] = v48;
          _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,evaluateMatch,oldOffRoadCount,fabsDeltaAz,%{public}.2lf,priorFabsDeltaAz,%{public}.2lf ,atIntersection,%{public}d,varFactor,%{public}.2lf,acrossTrack,%{public}.2lf,isAmbiguous,%{public}d",  buf,  0x40u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10188A8E0);
          }
          uint64_t v139 = *(void *)(a2 + 248);
          uint64_t v140 = *(void *)(a2 + 472);
          uint64_t v141 = *(void *)(a2 + 496);
          BOOL v142 = *a4;
          *(_DWORD *)__int128 __p = 134350592;
          *(void *)&__p[4] = v139;
          *(_WORD *)&__p[12] = 2050;
          *(double *)&__p[14] = v39;
          *(_WORD *)&__p[22] = 2050;
          *(double *)&__p[24] = v43;
          *(_WORD *)&__p[32] = 1026;
          *(_DWORD *)double v198 = v41;
          *(_WORD *)&v198[4] = 2050;
          *(void *)&v198[6] = v140;
          *(_WORD *)&v198[14] = 2050;
          *(void *)&v198[16] = v141;
          *(_WORD *)&v198[24] = 1026;
          *(_DWORD *)&v198[26] = v142;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,evaluateMatch,oldOffRoadCount,fabsDeltaAz,%{public}.2lf,priorFabsDeltaAz,%{public}.2lf ,atIntersection,%{public}d,varFactor,%{public}.2lf,acrossTrack,%{public}.2lf,isAmbiguous,%{public}d",  __p,  64);
          double v144 = (char *)v143;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLPedestrianMapMatcherFilter::evaluateMatch(const MMSnapData &, const MMSnapData &, BOOL &)",  "%s\n",  v143);
          if (v144 != buf) {
            free(v144);
          }
        }

        int v49 = (int)*(double *)(a2 + 472);
        if (v39 < 25.0) {
          int v50 = 1;
        }
        else {
          int v50 = v41;
        }
        if (v50 == 1)
        {
          char v51 = 0;
          int v52 = 0;
          switch(v49)
          {
            case 0:
            case 1:
            case 2:
              goto LABEL_69;
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
            case 10:
            case 11:
            case 12:
              break;
            case 13:
              goto LABEL_70;
            case 14:
              goto LABEL_71;
            case 15:
            case 16:
              goto LABEL_67;
            case 17:
            case 18:
            case 19:
            case 20:
              goto LABEL_68;
            default:
              goto LABEL_72;
          }
        }

        else
        {
          char v51 = 0;
          int v52 = 0;
          switch(v49)
          {
            case 0:
            case 1:
            case 2:
LABEL_69:
              char v51 = 0;
              int v52 = -1;
              break;
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
              break;
            case 8:
            case 9:
            case 10:
LABEL_70:
              char v51 = 1;
              int v52 = 1;
              break;
            case 11:
            case 12:
LABEL_71:
              int v52 = 2;
              goto LABEL_73;
            case 13:
            case 14:
            case 15:
            case 16:
LABEL_67:
              int v52 = 3;
              goto LABEL_73;
            case 17:
            case 18:
            case 19:
            case 20:
LABEL_68:
              int v52 = 4;
              goto LABEL_73;
            default:
LABEL_72:
              int v52 = 10;
LABEL_73:
              char v51 = 1;
              break;
          }
        }

        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188A8E0);
        }
        double v53 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v54 = *(void *)(a2 + 248);
          int v55 = *(_DWORD *)(a1 + 1208);
          *(_DWORD *)__n128 buf = 134349568;
          *(void *)&uint8_t buf[4] = v54;
          *(_WORD *)&_BYTE buf[12] = 1026;
          *(_DWORD *)&buf[14] = v55;
          *(_WORD *)&buf[18] = 1026;
          *(_DWORD *)&buf[20] = v55 + v52;
          _os_log_impl( (void *)&_mh_execute_header,  v53,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,varFactorCheck,oldOffRoadCount,%{public}d,newOffRoadCount,%{public}d",  buf,  0x18u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10188A8E0);
          }
          uint64_t v145 = *(void *)(a2 + 248);
          int v146 = *(_DWORD *)(a1 + 1208);
          *(_DWORD *)__int128 __p = 134349568;
          *(void *)&__p[4] = v145;
          *(_WORD *)&__p[12] = 1026;
          *(_DWORD *)&__p[14] = v146;
          *(_WORD *)&__p[18] = 1026;
          *(_DWORD *)&__p[20] = v146 + v52;
          LODWORD(v192) = 24;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,varFactorCheck,oldOffRoadCount,%{public}d,newOffRoadCount,%{public}d",  __p,  v192);
          uint64_t v148 = (char *)v147;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLPedestrianMapMatcherFilter::evaluateMatch(const MMSnapData &, const MMSnapData &, BOOL &)",  "%s\n",  v147);
          if (v148 != buf) {
            free(v148);
          }
        }

        *(_DWORD *)(a1 + 1208) = (*(_DWORD *)(a1 + 1208) + v52) & ~((*(_DWORD *)(a1 + 1208) + v52) >> 31);
        double v56 = *(double *)(a2 + 432);
        if (v56 <= 0.0
          || *(double *)(a2 + 344) < 0.0
          || *(double *)(a2 + 424) > 0.0
          && ((double v57 = *(double *)(a2 + 336), v57 < 0.001) ? (v58 = v57 < 0.0) : (v58 = 1), !v58)
          || *(_BYTE *)(a2 + 468)
          || fabs(*(double *)(a2 + 496)) <= 25.0)
        {
LABEL_113:
          double v64 = sub_100F1F594((double *)(a2 + 240));
          if (v64 >= 10.0) {
            double v65 = v64;
          }
          else {
            double v65 = 10.0;
          }
          if (v65 >= 50.0) {
            char v66 = 1;
          }
          else {
            char v66 = v51;
          }
          if ((v66 & 1) == 0)
          {
            if (fabs(*(double *)(a2 + 496)) <= 75.0 && fabs(*(double *)(a2 + 488)) <= 150.0)
            {
              char v51 = 0;
            }

            else
            {
              if (qword_1019348B0 != -1) {
                dispatch_once(&qword_1019348B0, &stru_10188A8E0);
              }
              int v67 = (os_log_s *)qword_1019348B8;
              if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
              {
                uint64_t v68 = *(void *)(a2 + 248);
                int v69 = *(_DWORD *)(a1 + 1208);
                *(_DWORD *)__n128 buf = 134349568;
                *(void *)&uint8_t buf[4] = v68;
                *(_WORD *)&_BYTE buf[12] = 1026;
                *(_DWORD *)&buf[14] = v69;
                *(_WORD *)&buf[18] = 1026;
                *(_DWORD *)&buf[20] = v69 + 1;
                _os_log_impl( (void *)&_mh_execute_header,  v67,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,courseCheck,oldOffRoadCount,%{public}d,newOffRoadCount,%{public}d",  buf,  0x18u);
              }

              if (sub_1002921D0(115, 2))
              {
                bzero(buf, 0x65CuLL);
                if (qword_1019348B0 != -1) {
                  dispatch_once(&qword_1019348B0, &stru_10188A8E0);
                }
                uint64_t v154 = *(void *)(a2 + 248);
                int v155 = *(_DWORD *)(a1 + 1208);
                *(_DWORD *)__int128 __p = 134349568;
                *(void *)&__p[4] = v154;
                *(_WORD *)&__p[12] = 1026;
                *(_DWORD *)&__p[14] = v155;
                *(_WORD *)&__p[18] = 1026;
                *(_DWORD *)&__p[20] = v155 + 1;
                LODWORD(v192) = 24;
                _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,courseCheck,oldOffRoadCount,%{public}d,newOffRoadCount,%{public}d",  __p,  v192);
                double v157 = (char *)v156;
                sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLPedestrianMapMatcherFilter::evaluateMatch(const MMSnapData &, const MMSnapData &, BOOL &)",  "%s\n",  v156);
                if (v157 != buf) {
                  free(v157);
                }
              }

              ++*(_DWORD *)(a1 + 1208);
              char v51 = 1;
            }
          }

          if (*(_BYTE *)(a2 + 601)) {
            int v70 = v41;
          }
          else {
            int v70 = 1;
          }
          double v71 = 40000.0;
          if (v70) {
            double v71 = 10000.0;
          }
          if (*(_BYTE *)(a3 + 601)) {
            BOOL v72 = *(_BYTE *)(a3 + 504) == 0;
          }
          else {
            BOOL v72 = 1;
          }
          if (v72) {
            double v73 = 10000.0;
          }
          else {
            double v73 = v71;
          }
          double v74 = *(double *)(a2 + 496) * *(double *)(a2 + 496) + *(double *)(a2 + 488) * *(double *)(a2 + 488);
          if (v74 > v73)
          {
            if (qword_1019348B0 != -1) {
              dispatch_once(&qword_1019348B0, &stru_10188A8E0);
            }
            double v75 = (os_log_s *)qword_1019348B8;
            if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v76 = *(void *)(a2 + 248);
              *(_DWORD *)__n128 buf = 134349568;
              *(void *)&uint8_t buf[4] = v76;
              *(_WORD *)&_BYTE buf[12] = 2050;
              *(void *)&buf[14] = sqrt(v73);
              *(_WORD *)&buf[22] = 1026;
              *(_DWORD *)&_BYTE buf[24] = v41;
              _os_log_impl( (void *)&_mh_execute_header,  v75,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,stopSnapping,distance > %{public}.0lfm,Intersection,%{public}d",  buf,  0x1Cu);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1019348B0 != -1) {
                dispatch_once(&qword_1019348B0, &stru_10188A8E0);
              }
              uint64_t v151 = *(void *)(a2 + 248);
              *(_DWORD *)__int128 __p = 134349568;
              *(void *)&__p[4] = v151;
              *(_WORD *)&__p[12] = 2050;
              *(void *)&__p[14] = sqrt(v73);
              *(_WORD *)&__p[22] = 1026;
              *(_DWORD *)&__p[24] = v41;
              LODWORD(v192) = 28;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,stopSnapping,distance > %{public}.0lfm,Intersection,%{public}d",  __p,  v192);
              double v153 = (char *)v152;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLPedestrianMapMatcherFilter::evaluateMatch(const MMSnapData &, const MMSnapData &, BOOL &)",  "%s\n",  v152);
              if (v153 != buf) {
                free(v153);
              }
            }

            BOOL v29 = 0LL;
            *(_BYTE *)(a1 + 1212) = 0;
            goto LABEL_247;
          }

          double v77 = *(double *)(a2 + 336);
          else {
            double v79 = (v77 + *(double *)(a3 + 336)) * 0.5;
          }
          double v80 = *(double *)(a2 + 264);
          double v81 = -1.0;
          if (v80 >= 0.0)
          {
            double v82 = *(double *)(a3 + 264);
            if (v82 >= 0.0) {
              double v81 = vabdd_f64(v80, v82);
            }
          }

          if (*(_BYTE *)(a3 + 504))
          {
            if (*(_BYTE *)(a1 + 1212))
            {
              if (*(double *)(a2 + 472) > 13.0)
              {
                double v83 = v79 * v81;
                double v84 = sub_100D2DBDC( (double *)(a1 + 168),  *(double *)(a3 + 392),  *(double *)(a3 + 400),  *(double *)(a2 + 392),  *(double *)(a2 + 400),  *(double *)(a2 + 312))
                    - v83;
                if (v84 > 100.0)
                {
                  if (qword_1019348B0 != -1) {
                    dispatch_once(&qword_1019348B0, &stru_10188A8E0);
                  }
                  __n128 v85 = (os_log_s *)qword_1019348B8;
                  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
                  {
                    uint64_t v86 = *(void *)(a2 + 248);
                    int v87 = *(_DWORD *)(a1 + 1208);
                    *(_DWORD *)__n128 buf = 134350080;
                    *(void *)&uint8_t buf[4] = v86;
                    *(_WORD *)&_BYTE buf[12] = 2050;
                    *(double *)&buf[14] = v84;
                    *(_WORD *)&buf[22] = 2050;
                    *(double *)&_BYTE buf[24] = v83;
                    *(_WORD *)&buf[32] = 1026;
                    *(_DWORD *)uint64_t v211 = v87;
                    *(_WORD *)&v211[4] = 1026;
                    *(_DWORD *)&v211[6] = v87 + 18;
                    _os_log_impl( (void *)&_mh_execute_header,  v85,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,jumpDistanceCheck,%{public}.1lf,expectedDistanceTravelled,%{public}.1lf,oldO ffRoadCount,%{public}d,newOffRoadCount,%{public}d",  buf,  0x2Cu);
                  }

                  if (sub_1002921D0(115, 2))
                  {
                    bzero(buf, 0x65CuLL);
                    if (qword_1019348B0 != -1) {
                      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
                    }
                    uint64_t v162 = *(void *)(a2 + 248);
                    int v163 = *(_DWORD *)(a1 + 1208);
                    *(_DWORD *)__int128 __p = 134350080;
                    *(void *)&__p[4] = v162;
                    *(_WORD *)&__p[12] = 2050;
                    *(double *)&__p[14] = v84;
                    *(_WORD *)&__p[22] = 2050;
                    *(double *)&__p[24] = v83;
                    *(_WORD *)&__p[32] = 1026;
                    *(_DWORD *)double v198 = v163;
                    *(_WORD *)&v198[4] = 1026;
                    *(_DWORD *)&v198[6] = v163 + 18;
                    LODWORD(v192) = 44;
                    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,jumpDistanceCheck,%{public}.1lf,expectedDistanceTravelled,%{public}.1lf,oldO ffRoadCount,%{public}d,newOffRoadCount,%{public}d",  __p,  v192);
                    BOOL v165 = (char *)v164;
                    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLPedestrianMapMatcherFilter::evaluateMatch(const MMSnapData &, const MMSnapData &, BOOL &)",  "%s\n",  v164);
                    if (v165 != buf) {
                      free(v165);
                    }
                  }

                  *(_DWORD *)(a1 + 1208) += 18;
                  char v51 = 1;
                }
              }
            }
          }

          if (v25 && v13)
          {
            double v88 = *(_BYTE *)(a2 + 140) ? *(double *)(a2 + 168) : 1.0 - *(double *)(a2 + 168);
            if (v88 >= 0.99)
            {
              *(_DWORD *)(a1 + 1208) += (int)(v88 * 10.0);
              if (qword_1019348B0 != -1) {
                dispatch_once(&qword_1019348B0, &stru_10188A8E0);
              }
              int v89 = (os_log_s *)qword_1019348B8;
              if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
              {
                uint64_t v90 = *(void *)(a2 + 248);
                int v91 = *(_DWORD *)(a1 + 1208);
                *(_DWORD *)__n128 buf = 134349824;
                *(void *)&uint8_t buf[4] = v90;
                *(_WORD *)&_BYTE buf[12] = 1026;
                *(_DWORD *)&buf[14] = v91;
                *(_WORD *)&buf[18] = 2050;
                *(double *)&buf[20] = v88;
                *(_WORD *)&buf[28] = 1026;
                *(_DWORD *)&buf[30] = (int)(v88 * 10.0);
                _os_log_impl( (void *)&_mh_execute_header,  v89,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,evalauteMatch,offRoadCount,%{public}d,projection,%{public}.2lf,delta,%{public}d",  buf,  0x22u);
              }

              if (sub_1002921D0(115, 2))
              {
                bzero(buf, 0x65CuLL);
                if (qword_1019348B0 != -1) {
                  dispatch_once(&qword_1019348B0, &stru_10188A8E0);
                }
                uint64_t v158 = *(void *)(a2 + 248);
                int v159 = *(_DWORD *)(a1 + 1208);
                *(_DWORD *)__int128 __p = 134349824;
                *(void *)&__p[4] = v158;
                *(_WORD *)&__p[12] = 1026;
                *(_DWORD *)&__p[14] = v159;
                *(_WORD *)&__p[18] = 2050;
                *(double *)&__p[20] = v88;
                *(_WORD *)&__p[28] = 1026;
                *(_DWORD *)&__p[30] = (int)(v88 * 10.0);
                LODWORD(v192) = 34;
                _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,evalauteMatch,offRoadCount,%{public}d,projection,%{public}.2lf,delta,%{public}d",  __p,  v192);
                double v161 = (char *)v160;
                sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLPedestrianMapMatcherFilter::evaluateMatch(const MMSnapData &, const MMSnapData &, BOOL &)",  "%s\n",  v160);
                if (v161 != buf) {
                  free(v161);
                }
              }

              char v51 = 1;
            }
          }

          if (*(_BYTE *)(a1 + 1212))
          {
            double v92 = *(double *)(a2 + 472);
            if (v92 <= 70.0)
            {
              if (*(int *)(a1 + 1208) < 18)
              {
                if (v92 >= 6.5) {
                  char v109 = 1;
                }
                else {
                  char v109 = v51;
                }
                if ((v109 & 1) == 0)
                {
                  *(_DWORD *)(a1 + 1208) = 0;
                  if (qword_1019348B0 != -1) {
                    dispatch_once(&qword_1019348B0, &stru_10188A8E0);
                  }
                  uint64_t v110 = (os_log_s *)qword_1019348B8;
                  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
                  {
                    uint64_t v111 = *(void *)(a2 + 248);
                    int v112 = *(_DWORD *)(a1 + 1208);
                    *(_DWORD *)__n128 buf = 134349312;
                    *(void *)&uint8_t buf[4] = v111;
                    *(_WORD *)&_BYTE buf[12] = 1026;
                    *(_DWORD *)&buf[14] = v112;
                    _os_log_impl( (void *)&_mh_execute_header,  v110,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,reseting offRoadCount,%{public}d",  buf,  0x12u);
                  }

                  if (sub_1002921D0(115, 2))
                  {
                    bzero(buf, 0x65CuLL);
                    if (qword_1019348B0 != -1) {
                      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
                    }
                    uint64_t v113 = *(void *)(a2 + 248);
                    int v114 = *(_DWORD *)(a1 + 1208);
                    *(_DWORD *)__int128 __p = 134349312;
                    *(void *)&__p[4] = v113;
                    *(_WORD *)&__p[12] = 1026;
                    *(_DWORD *)&__p[14] = v114;
                    LODWORD(v192) = 18;
                    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,reseting offRoadCount,%{public}d",  __p,  v192);
                    uint64_t v116 = (char *)v115;
                    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLPedestrianMapMatcherFilter::evaluateMatch(const MMSnapData &, const MMSnapData &, BOOL &)",  "%s\n",  v115);
                    if (v116 != buf) {
                      free(v116);
                    }
                  }
                }

                goto LABEL_246;
              }

              if (qword_1019348B0 != -1) {
                dispatch_once(&qword_1019348B0, &stru_10188A8E0);
              }
              __int16 v106 = (os_log_s *)qword_1019348B8;
              if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
              {
                uint64_t v107 = *(void *)(a2 + 248);
                int v108 = *(_DWORD *)(a1 + 1208);
                *(_DWORD *)__n128 buf = 134349568;
                *(void *)&uint8_t buf[4] = v107;
                *(_WORD *)&_BYTE buf[12] = 1026;
                *(_DWORD *)&buf[14] = v108;
                *(_WORD *)&buf[18] = 1026;
                *(_DWORD *)&buf[20] = 18;
                _os_log_impl( (void *)&_mh_execute_header,  v106,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,stopSnapping,offRoadCount,%{public}d,threshold,%{public}d",  buf,  0x18u);
              }

              if (!sub_1002921D0(115, 2)) {
                goto LABEL_206;
              }
              bzero(buf, 0x65CuLL);
              if (qword_1019348B0 != -1) {
                dispatch_once(&qword_1019348B0, &stru_10188A8E0);
              }
              uint64_t v176 = *(void *)(a2 + 248);
              int v177 = *(_DWORD *)(a1 + 1208);
              *(_DWORD *)__int128 __p = 134349568;
              *(void *)&__p[4] = v176;
              *(_WORD *)&__p[12] = 1026;
              *(_DWORD *)&__p[14] = v177;
              *(_WORD *)&__p[18] = 1026;
              *(_DWORD *)&__p[20] = 18;
              LODWORD(v192) = 24;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,stopSnapping,offRoadCount,%{public}d,threshold,%{public}d",  __p,  v192);
              uint64_t v99 = (char *)v178;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLPedestrianMapMatcherFilter::evaluateMatch(const MMSnapData &, const MMSnapData &, BOOL &)",  "%s\n",  v178);
            }

            else
            {
              if (qword_1019348B0 != -1) {
                dispatch_once(&qword_1019348B0, &stru_10188A8E0);
              }
              int v93 = (os_log_s *)qword_1019348B8;
              if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
              {
                uint64_t v94 = *(void *)(a2 + 248);
                uint64_t v95 = *(void *)(a2 + 472);
                *(_DWORD *)__n128 buf = 134349568;
                *(void *)&uint8_t buf[4] = v94;
                *(_WORD *)&_BYTE buf[12] = 2050;
                *(void *)&buf[14] = v95;
                *(_WORD *)&buf[22] = 2050;
                *(void *)&_BYTE buf[24] = 0x4051800000000000LL;
                _os_log_impl( (void *)&_mh_execute_header,  v93,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,stopSnapping,varFactor,%{public}.1lf,threshold,%{public}.1lf",  buf,  0x20u);
              }

              if (!sub_1002921D0(115, 2)) {
                goto LABEL_206;
              }
              bzero(buf, 0x65CuLL);
              if (qword_1019348B0 != -1) {
                dispatch_once(&qword_1019348B0, &stru_10188A8E0);
              }
              uint64_t v96 = *(void *)(a2 + 248);
              uint64_t v97 = *(void *)(a2 + 472);
              *(_DWORD *)__int128 __p = 134349568;
              *(void *)&__p[4] = v96;
              *(_WORD *)&__p[12] = 2050;
              *(void *)&__p[14] = v97;
              *(_WORD *)&__p[22] = 2050;
              *(void *)&__p[24] = 0x4051800000000000LL;
              LODWORD(v192) = 32;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,stopSnapping,varFactor,%{public}.1lf,threshold,%{public}.1lf",  __p,  v192);
              uint64_t v99 = (char *)v98;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLPedestrianMapMatcherFilter::evaluateMatch(const MMSnapData &, const MMSnapData &, BOOL &)",  "%s\n",  v98);
            }

            if (v99 != buf) {
              free(v99);
            }
LABEL_206:
            *(_BYTE *)(a1 + 1212) = 0;
            goto LABEL_246;
          }

          if ((v51 & 1) != 0)
          {
LABEL_246:
            BOOL v29 = *(_BYTE *)(a1 + 1212) != 0;
            goto LABEL_247;
          }

          double v100 = 13.5;
          if (*(_BYTE *)(a2 + 588)) {
            double v100 = 7.5;
          }
          if (v64 > 7.5) {
            double v101 = 20.0;
          }
          else {
            double v101 = v100;
          }
          double v102 = 30.0;
          if (v13)
          {
            if (*(_DWORD *)(a2 + 360) == 9)
            {
              if (qword_1019348B0 != -1) {
                dispatch_once(&qword_1019348B0, &stru_10188A8E0);
              }
              uint64_t v103 = (os_log_s *)qword_1019348B8;
              if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
              {
                uint64_t v104 = *(void *)(a2 + 248);
                int v105 = *(_DWORD *)(a2 + 360);
                if (*(char *)(a2 + 391) < 0)
                {
                  sub_1010DD48C(__p, *(void **)(a2 + 368), *(void *)(a2 + 376));
                }

                else
                {
                  *(_OWORD *)__int128 __p = *(_OWORD *)(a2 + 368);
                  *(void *)&__p[16] = *(void *)(a2 + 384);
                }

                __int128 v118 = __p;
                if (__p[23] < 0) {
                  __int128 v118 = *(_BYTE **)__p;
                }
                *(_DWORD *)__n128 buf = 134349570;
                *(void *)&uint8_t buf[4] = v104;
                *(_WORD *)&_BYTE buf[12] = 1026;
                *(_DWORD *)&buf[14] = v105;
                *(_WORD *)&buf[18] = 2082;
                *(void *)&buf[20] = v118;
                _os_log_impl( (void *)&_mh_execute_header,  v103,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,startSnapping,shouldStartSnappingOnfrc,frc,%{public}d,name,%{public}s,using tighter-threshold",  buf,  0x1Cu);
                if ((__p[23] & 0x80000000) != 0) {
                  operator delete(*(void **)__p);
                }
              }

              double v101 = 5.0;
              double v102 = 8.0;
              if (sub_1002921D0(115, 2))
              {
                bzero(buf, 0x65CuLL);
                if (qword_1019348B0 != -1) {
                  dispatch_once(&qword_1019348B0, &stru_10188A8E0);
                }
                uint64_t v186 = qword_1019348B8;
                uint64_t v187 = *(void *)(a2 + 248);
                int v188 = *(_DWORD *)(a2 + 360);
                if (*(char *)(a2 + 391) < 0)
                {
                  sub_1010DD48C(__dst, *(void **)(a2 + 368), *(void *)(a2 + 376));
                }

                else
                {
                  *(_OWORD *)__dst = *(_OWORD *)(a2 + 368);
                  uint64_t v194 = *(void *)(a2 + 384);
                }

                __int128 v189 = __dst;
                if (v194 < 0) {
                  __int128 v189 = (void **)__dst[0];
                }
                *(_DWORD *)__int128 __p = 134349570;
                *(void *)&__p[4] = v187;
                *(_WORD *)&__p[12] = 1026;
                *(_DWORD *)&__p[14] = v188;
                *(_WORD *)&__p[18] = 2082;
                *(void *)&__p[20] = v189;
                LODWORD(v192) = 28;
                _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v186,  2LL,  "CLMMPED,%{public}.1lf,startSnapping,shouldStartSnappingOnfrc,frc,%{public}d,name,%{public}s,using tighter-threshold",  __p,  v192);
                __int16 v191 = v190;
                if (SHIBYTE(v194) < 0) {
                  operator delete(__dst[0]);
                }
                sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLPedestrianMapMatcherFilter::evaluateMatch(const MMSnapData &, const MMSnapData &, BOOL &)",  "%s\n",  v191);
                if (v191 != buf) {
                  free(v191);
                }
              }
            }

            else
            {
              int v117 = *(_DWORD *)(a2 + 656);
              if (v117 != 3)
              {
                double v102 = v117 == 4 ? 30.0 : 18.0;
                if (v117 != 4) {
                  double v101 = 6.0;
                }
              }
            }
          }

          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10188A8E0);
          }
          double v119 = (os_log_s *)qword_1019348B8;
          if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v120 = *(void *)(a2 + 248);
            uint64_t v121 = *(void *)(a2 + 496);
            uint64_t v122 = *(void *)(a2 + 472);
            uint64_t v123 = *(void *)(a3 + 472);
            uint64_t v124 = *(void *)(a2 + 336);
            uint64_t v125 = *(void *)(a2 + 344);
            uint64_t v126 = *(void *)(a3 + 336);
            uint64_t v127 = *(void *)(a3 + 344);
            *(_DWORD *)__n128 buf = 134351872;
            *(void *)&uint8_t buf[4] = v120;
            *(_WORD *)&_BYTE buf[12] = 2050;
            *(double *)&buf[14] = v74;
            *(_WORD *)&buf[22] = 2050;
            *(void *)&_BYTE buf[24] = v121;
            *(_WORD *)&buf[32] = 2050;
            *(double *)uint64_t v211 = v65;
            *(_WORD *)&v211[8] = 2050;
            *(void *)&v211[10] = v122;
            *(_WORD *)&v211[18] = 2048;
            *(void *)&v211[20] = v123;
            *(_WORD *)&v211[28] = 2050;
            uint64_t v212 = v124;
            __int16 v213 = 2050;
            uint64_t v214 = v126;
            __int16 v215 = 2050;
            uint64_t v216 = v125;
            __int16 v217 = 2050;
            uint64_t v218 = v127;
            __int16 v219 = 2050;
            double v220 = v39;
            __int16 v221 = 2050;
            double v222 = v43;
            _os_log_impl( (void *)&_mh_execute_header,  v119,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,startSnapping criteria,distance2,%{public}.1lf,acrossTrack,%{public}.2lf,drms,%{publ ic}.1lf,currentVF,%{public}.3lf,prioVF{public},%.3lf,curSpeed,%{public}.2lf,priorSpeed,%{public}.2lf,curCo urse,%{public}.2lf,priorCourse,%{public}.2lf,fabsDeltaAz,%{public}.2lf,priorFabsDeltaAz,%{public}.2lf",  buf,  0x7Au);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1019348B0 != -1) {
              dispatch_once(&qword_1019348B0, &stru_10188A8E0);
            }
            uint64_t v166 = *(void *)(a2 + 248);
            uint64_t v167 = *(void *)(a2 + 496);
            uint64_t v168 = *(void *)(a2 + 472);
            uint64_t v169 = *(void *)(a3 + 472);
            uint64_t v170 = *(void *)(a2 + 336);
            uint64_t v171 = *(void *)(a2 + 344);
            uint64_t v172 = *(void *)(a3 + 336);
            uint64_t v173 = *(void *)(a3 + 344);
            *(_DWORD *)__int128 __p = 134351872;
            *(void *)&__p[4] = v166;
            *(_WORD *)&__p[12] = 2050;
            *(double *)&__p[14] = v74;
            *(_WORD *)&__p[22] = 2050;
            *(void *)&__p[24] = v167;
            *(_WORD *)&__p[32] = 2050;
            *(double *)double v198 = v65;
            *(_WORD *)&v198[8] = 2050;
            *(void *)&v198[10] = v168;
            *(_WORD *)&v198[18] = 2048;
            *(void *)&v198[20] = v169;
            *(_WORD *)&v198[28] = 2050;
            uint64_t v199 = v170;
            __int16 v200 = 2050;
            uint64_t v201 = v172;
            __int16 v202 = 2050;
            uint64_t v203 = v171;
            __int16 v204 = 2050;
            uint64_t v205 = v173;
            __int16 v206 = 2050;
            double v207 = v39;
            __int16 v208 = 2050;
            double v209 = v43;
            LODWORD(v192) = 122;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,startSnapping criteria,distance2,%{public}.1lf,acrossTrack,%{public}.2lf,drms,%{publ ic}.1lf,currentVF,%{public}.3lf,prioVF{public},%.3lf,curSpeed,%{public}.2lf,priorSpeed,%{public}.2lf,curCo urse,%{public}.2lf,priorCourse,%{public}.2lf,fabsDeltaAz,%{public}.2lf,priorFabsDeltaAz,%{public}.2lf",  __p,  v192);
            unint64_t v175 = (char *)v174;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLPedestrianMapMatcherFilter::evaluateMatch(const MMSnapData &, const MMSnapData &, BOOL &)",  "%s\n",  v174);
            if (v175 != buf) {
              free(v175);
            }
          }

          if (*(_BYTE *)(a2 + 505)) {
            goto LABEL_239;
          }
          if (v74 >= 400.0) {
            goto LABEL_239;
          }
          if (*(_BYTE *)(a3 + 505)) {
            goto LABEL_239;
          }
          if (v65 >= 101.0) {
            goto LABEL_239;
          }
          double v134 = *(double *)(a2 + 472);
          if (v134 >= 3.0) {
            goto LABEL_239;
          }
          double v135 = *(double *)(a3 + 472);
          if (v135 >= 3.0
            || *(double *)(a2 + 336) <= 0.25
            || *(double *)(a3 + 336) <= 0.25
            || *(double *)(a2 + 344) < 0.0
            || *(double *)(a3 + 344) < 0.0
            || v39 >= v102
            || v43 >= v102)
          {
            goto LABEL_239;
          }

          double v136 = *(double *)(a2 + 432);
          if (v136 >= 20.0 || v136 <= 0.0)
          {
            float v137 = *(float *)(a2 + 420);
            float v138 = 3.0;
          }

          else
          {
            if (v39 >= 40.0) {
              goto LABEL_239;
            }
            float v137 = *(float *)(a2 + 420);
            float v138 = 2.5;
          }

          if (v137 > v138 || v134 < 1.0 && v135 < 1.0 && (v137 == 0.0 || v137 > 1.1))
          {
            *(_BYTE *)(a1 + 1212) = 1;
            goto LABEL_240;
          }

LABEL_239:
          if (!*(_BYTE *)(a1 + 1212)) {
            goto LABEL_246;
          }
LABEL_240:
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10188A8E0);
          }
          uint64_t v128 = (os_log_s *)qword_1019348B8;
          if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v129 = *(void *)(a2 + 248);
            *(_DWORD *)__n128 buf = 134349056;
            *(void *)&uint8_t buf[4] = v129;
            _os_log_impl( (void *)&_mh_execute_header,  v128,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,startSnapping",  buf,  0xCu);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1019348B0 != -1) {
              dispatch_once(&qword_1019348B0, &stru_10188A8E0);
            }
            uint64_t v183 = *(void *)(a2 + 248);
            *(_DWORD *)__int128 __p = 134349056;
            *(void *)&__p[4] = v183;
            LODWORD(v192) = 12;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,startSnapping",  __p,  v192);
            uint64_t v185 = (char *)v184;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLPedestrianMapMatcherFilter::evaluateMatch(const MMSnapData &, const MMSnapData &, BOOL &)",  "%s\n",  v184);
            if (v185 != buf) {
              free(v185);
            }
          }

          *(_DWORD *)(a1 + 1208) = 0;
          goto LABEL_246;
        }

        if (v41)
        {
          if (v39 <= 67.5) {
            goto LABEL_113;
          }
          if (v56 >= 20.0)
          {
            int v59 = 4;
LABEL_107:
            if (qword_1019348B0 != -1) {
              dispatch_once(&qword_1019348B0, &stru_10188A8E0);
            }
            unint64_t v61 = (os_log_s *)qword_1019348B8;
            if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v62 = *(void *)(a2 + 248);
              int v63 = *(_DWORD *)(a1 + 1208);
              *(_DWORD *)__n128 buf = 134349568;
              *(void *)&uint8_t buf[4] = v62;
              *(_WORD *)&_BYTE buf[12] = 1026;
              *(_DWORD *)&buf[14] = v63;
              *(_WORD *)&buf[18] = 1026;
              *(_DWORD *)&buf[20] = v63 + v59;
              _os_log_impl( (void *)&_mh_execute_header,  v61,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,courseCheck,oldOffRoadCount,%{public}d,newOffRoadCount,%{public}d",  buf,  0x18u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1019348B0 != -1) {
                dispatch_once(&qword_1019348B0, &stru_10188A8E0);
              }
              uint64_t v179 = *(void *)(a2 + 248);
              int v180 = *(_DWORD *)(a1 + 1208);
              *(_DWORD *)__int128 __p = 134349568;
              *(void *)&__p[4] = v179;
              *(_WORD *)&__p[12] = 1026;
              *(_DWORD *)&__p[14] = v180;
              *(_WORD *)&__p[18] = 1026;
              *(_DWORD *)&__p[20] = v180 + v59;
              LODWORD(v192) = 24;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,courseCheck,oldOffRoadCount,%{public}d,newOffRoadCount,%{public}d",  __p,  v192);
              __int128 v182 = (char *)v181;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLPedestrianMapMatcherFilter::evaluateMatch(const MMSnapData &, const MMSnapData &, BOOL &)",  "%s\n",  v181);
              if (v182 != buf) {
                free(v182);
              }
            }

            *(_DWORD *)(a1 + 1208) += v59;
            char v51 = 1;
            goto LABEL_113;
          }

          goto LABEL_100;
        }

        if (v56 >= 20.0)
        {
          if (v39 > 67.5) {
            goto LABEL_100;
          }
          if (v39 > 45.0) {
            goto LABEL_103;
          }
          double v60 = 30.0;
        }

        else
        {
          if (v39 > 67.5)
          {
            int v59 = 18;
            goto LABEL_107;
          }

          if (v39 > 45.0)
          {
LABEL_100:
            int v59 = 6;
            goto LABEL_107;
          }

          if (v39 > 30.0)
          {
LABEL_103:
            int v59 = 2;
            goto LABEL_107;
          }

          double v60 = 20.0;
        }

        if (v39 <= v60) {
          goto LABEL_113;
        }
        int v59 = 1;
        goto LABEL_107;
      }
    }

    uint64_t v30 = (uint64_t)*v14;
    sub_1001AC068(*v14);
    double v31 = 1.0 - v23;
    if (!v22) {
      double v31 = v23;
    }
    double v32 = v31 * *(double *)(v30 + 40);
    *(void *)__n128 buf = buf;
    *(void *)&uint8_t buf[8] = buf;
    *(void *)&buf[16] = 0LL;
    if (!(*(unsigned int (**)(uint64_t, _BYTE *, uint64_t, void, uint64_t, double, double))(*(void *)v10 + 72LL))( v10,  buf,  a2 + 120,  *(unsigned __int8 *)(a2 + 140),  1LL,  *(double *)(a2 + 168),  v32 + 1.0)) {
      goto LABEL_35;
    }
    if (*(void *)&buf[16])
    {
      if (*(void *)&buf[16] != 1LL
        || **v14 != *(void *)(*(void *)&buf[8] + 16LL)
        || (int v33 = *(unsigned __int8 *)(a2 + 140), v33 == *(unsigned __int8 *)(*(void *)&buf[8] + 24LL)))
      {
LABEL_35:
        BOOL v25 = 0;
        int v26 = 0;
LABEL_40:
        sub_100D53CE4((uint64_t *)buf);
        goto LABEL_41;
      }

      double v34 = *(double *)(a2 + 168);
    }

    else
    {
      double v34 = *(double *)(a2 + 168);
      int v33 = *(unsigned __int8 *)(a2 + 140);
    }

    if (!v33) {
      double v34 = 1.0 - v34;
    }
    BOOL v25 = v34 >= 0.99;
    int v26 = 1;
    goto LABEL_40;
  }

  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_10188A8E0);
  }
  double v28 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)__n128 buf = 134349056;
    *(void *)&uint8_t buf[4] = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,Unexpected,invalid geometry pointer, mapMatch",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    *(_DWORD *)__int128 __p = 134349056;
    *(void *)&__p[4] = v8;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,Unexpected,invalid geometry pointer, mapMatch",  __p,  12);
    uint64_t v150 = (char *)v149;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLParticleMM::CLPedestrianMapMatcherFilter::evaluateMatch(const MMSnapData &, const MMSnapData &, BOOL &)",  "%s\n",  v149);
    if (v150 != buf) {
      free(v150);
    }
  }

  BOOL v29 = 0LL;
LABEL_247:
  uint64_t v130 = v196;
  if (v196)
  {
    uint64_t v131 = (unint64_t *)&v196->__shared_owners_;
    do
      unint64_t v132 = __ldaxr(v131);
    while (__stlxr(v132 - 1, v131));
    if (!v132)
    {
      ((void (*)(std::__shared_weak_count *))v130->__on_zero_shared)(v130);
      std::__shared_weak_count::__release_weak(v130);
    }
  }

  return v29;
}

void sub_100EC69D8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

double sub_100EC6B1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a2 + 48) != *(void *)(a2 + 40))
  {
    uint64_t v4 = (uint64_t *)a1;
    BOOL v9 = 0;
    BOOL v5 = sub_100EC4A1C(a1, a2 + 136, a3, &v9);
    *(_BYTE *)(a2 + 640) = v5;
    *(_BYTE *)(a2 + 881) = (*(unsigned __int8 *)(a2 + 881) | v9) != 0;
    v4 += 152;
    sub_100BDC988((uint64_t)v4, (__int128 *)(a2 + 376));
    if (sub_100BDCBC8(v4, 0))
    {
      *(_BYTE *)(a2 + 640) = 0;
    }

    else if (v5)
    {
      return result;
    }

    *(_DWORD *)(a2 + 656) = 0;
    double result = *(double *)(a2 + 432);
    uint64_t v7 = *(void *)(a2 + 440);
    *(double *)(a2 + 528) = result;
    *(void *)(a2 + 536) = v7;
    uint64_t v8 = *(void *)(a2 + 480);
    *(void *)(a2 + 544) = v8;
    *(double *)(a2 + 664) = result;
    *(void *)(a2 + 672) = v7;
    *(void *)(a2 + 680) = v8;
  }

  return result;
}

uint64_t sub_100EC6BEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(_BYTE *)(a2 + 640))
  {
    *(_DWORD *)(a1 + 1752) = 0;
    *(_OWORD *)(a1 + 1760) = 0u;
    if (sub_10029286C(*(double *)(a2 + 528), *(double *)(a2 + 536)))
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      uint64_t v6 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v7 = *(void *)(a2 + 384);
        *(_DWORD *)__n128 buf = 134349056;
        uint64_t v41 = v7;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,reset,snap coordinate is null island",  buf,  0xCu);
      }

      if (!sub_1002921D0(115, 2)) {
        return 1LL;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      uint64_t v8 = *(void *)(a2 + 384);
      *(_DWORD *)double v38 = 134349056;
      *(void *)&v38[4] = v8;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,reset,snap coordinate is null island",  v38,  12,  *(_OWORD *)v38,  *(void *)&v38[16],  v39);
LABEL_62:
      uint64_t v37 = (uint8_t *)v9;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMM::CLPedestrianMapMatcherFilter::shallReset(const MMFilterData &, const MMSnapData &)",  "%s\n",  v9);
      if (v37 != buf) {
        free(v37);
      }
      return 1LL;
    }

    if (sub_100EC7448(a1, a2, a3))
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      uint64_t v15 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v16 = *(void *)(a2 + 384);
        *(_DWORD *)__n128 buf = 134349056;
        uint64_t v41 = v16;
        _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,reset,solution hopping detected",  buf,  0xCu);
      }

      if (!sub_1002921D0(115, 2)) {
        return 1LL;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      uint64_t v17 = *(void *)(a2 + 384);
      *(_DWORD *)double v38 = 134349056;
      *(void *)&v38[4] = v17;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,reset,solution hopping detected",  v38,  12,  *(_OWORD *)v38,  *(void *)&v38[16],  v39);
      goto LABEL_62;
    }

    return 0LL;
  }

  if (*(double *)(a2 + 608) > 70.0)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    uint64_t v10 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v11 = *(void *)(a2 + 384);
      double v12 = *(double *)(a2 + 608);
      *(_DWORD *)__n128 buf = 134349568;
      uint64_t v41 = v11;
      __int16 v42 = 2050;
      double v43 = v12;
      __int16 v44 = 2050;
      uint64_t v45 = 0x4051800000000000LL;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,Reseeding due to varFactor,%{public}.1lf,max,%{public}.1lf",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 2)) {
      return 1LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    uint64_t v13 = *(void *)(a2 + 384);
    uint64_t v14 = *(void *)(a2 + 608);
    *(_DWORD *)double v38 = 134349568;
    *(void *)&v38[4] = v13;
    *(_WORD *)&v38[12] = 2050;
    *(void *)&v38[14] = v14;
    *(_WORD *)&v38[22] = 2050;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,Reseeding due to varFactor,%{public}.1lf,max,%{public}.1lf",  v38,  32,  *(_OWORD *)v38,  *(void *)&v38[16],  0x4051800000000000LL);
    goto LABEL_62;
  }

  unsigned int v18 = *(_DWORD *)(a1 + 1752);
  if ((v18 & 0x80000000) == 0)
  {
    *(_DWORD *)(a1 + 1752) = v18 + 1;
    if (v18 >= 0x1E)
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      int v19 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v20 = *(void *)(a2 + 384);
        *(_DWORD *)__n128 buf = 134349312;
        uint64_t v41 = v20;
        __int16 v42 = 1026;
        LODWORD(v43) = 30;
        _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,Reseeding as unable to match,max,%{public}d",  buf,  0x12u);
      }

      if (!sub_1002921D0(115, 2)) {
        return 1LL;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      uint64_t v21 = *(void *)(a2 + 384);
      *(_DWORD *)double v38 = 134349312;
      *(void *)&v38[4] = v21;
      *(_WORD *)&v38[12] = 1026;
      *(_DWORD *)&v38[14] = 30;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,Reseeding as unable to match,max,%{public}d",  v38,  18,  *(_OWORD *)v38,  *(void *)&v38[16],  v39);
      goto LABEL_62;
    }
  }

  if (!*(_BYTE *)(a3 + 746)) {
    return 0LL;
  }
  *(double *)(a1 + 1760) = *(double *)(a2 + 856) + *(double *)(a1 + 1760);
  double v22 = sub_100D2DBDC( (double *)(a1 + 168),  *(double *)(a3 + 392),  *(double *)(a3 + 400),  *(double *)(a2 + 528),  *(double *)(a2 + 536),  *(double *)(a2 + 448))
      + *(double *)(a1 + 1768);
  *(double *)(a1 + 1768) = v22;
  double v23 = *(double *)(a1 + 1760);
  if (v23 <= 80.0) {
    return 0LL;
  }
  if (v22 < 0.001)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    double v24 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v25 = *(void *)(a2 + 384);
      double v26 = *(double *)(a1 + 1768);
      *(_DWORD *)__n128 buf = 134349312;
      uint64_t v41 = v25;
      __int16 v42 = 2050;
      double v43 = v26;
      _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,accumulated snap distance is ~0, %{public}.3lf",  buf,  0x16u);
    }

    if (!sub_1002921D0(115, 2)) {
      return 1LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    uint64_t v35 = *(void *)(a2 + 384);
    uint64_t v36 = *(void *)(a1 + 1768);
    *(_DWORD *)double v38 = 134349312;
    *(void *)&v38[4] = v35;
    *(_WORD *)&v38[12] = 2050;
    *(void *)&v38[14] = v36;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,accumulated snap distance is ~0, %{public}.3lf",  v38,  22,  *(_OWORD *)v38,  *(void *)&v38[16],  v39);
    goto LABEL_62;
  }

  double v29 = v23 / v22;
  BOOL v27 = v23 / v22 > 5.0;
  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_10188A8E0);
  }
  uint64_t v30 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v31 = *(void *)(a2 + 384);
    *(_DWORD *)__n128 buf = 134349312;
    uint64_t v41 = v31;
    __int16 v42 = 2050;
    double v43 = v29;
    _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,Reseeding due to stuck at dead-end while observations move away, ratioDist, %{public}.3lf",  buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    uint64_t v32 = *(void *)(a2 + 384);
    *(_DWORD *)double v38 = 134349312;
    *(void *)&v38[4] = v32;
    *(_WORD *)&v38[12] = 2050;
    *(double *)&v38[14] = v29;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,Reseeding due to stuck at dead-end while observations move away, ratioDist, %{public}.3lf",  v38,  22);
    double v34 = (uint8_t *)v33;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMM::CLPedestrianMapMatcherFilter::shallReset(const MMFilterData &, const MMSnapData &)",  "%s\n",  v33);
    if (v34 != buf) {
      free(v34);
    }
  }

  return v27;
}

BOOL sub_100EC7448(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(_BYTE *)(a2 + 882)) {
    BOOL v6 = *(_BYTE *)(a3 + 746) == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (!v6
    && *(void *)(a3 + 120)
    && *(void *)(a2 + 256)
    && (sub_100D5DAC4((uint64_t *)(a3 + 120), (uint64_t)buf),
        sub_100D5DAC4((uint64_t *)(a2 + 256), (uint64_t)&v102),
        sub_100BDA328((uint64_t)buf, (uint64_t)&v102)))
  {
    ++*(_DWORD *)(a1 + 1776);
  }

  else
  {
    *(_DWORD *)(a1 + 1776) = 0;
  }

  if (*(_BYTE *)(a2 + 640)) {
    BOOL v7 = *(_BYTE *)(a3 + 504) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (v7) {
    goto LABEL_20;
  }
  uint64_t v8 = *(void *)(a2 + 488);
  if (v8 == *(void *)(a3 + 352)) {
    goto LABEL_20;
  }
  double v9 = fmod(*(double *)(a2 + 680) - *(double *)(a3 + 544), 360.0);
  if (v9 < 0.0) {
    double v9 = v9 + 360.0;
  }
  if (v9 > 180.0) {
    double v9 = v9 + -360.0;
  }
  if (fabs(v9) < 45.0)
  {
LABEL_20:
    sub_100890314((uint64_t *)(a1 + 1808));
    BOOL v10 = 0LL;
    uint64_t v11 = (uint64_t *)(a1 + 1784);
  }

  else
  {
    if (*(void *)(a1 + 1800) || (uint64_t v15 = *(void *)(a1 + 1816), v15 == a1 + 1808))
    {
      BOOL v13 = 0;
    }

    else
    {
      do
      {
        BOOL v13 = v8 == **(void **)(v15 + 16);
        if (v8 == **(void **)(v15 + 16)) {
          break;
        }
        uint64_t v15 = *(void *)(v15 + 8);
      }

      while (v15 != a1 + 1808);
    }

    for (uint64_t i = *(void *)(a1 + 1792); i != a1 + 1784; uint64_t i = *(void *)(i + 8))
    {
      if (v8 == **(void **)(i + 16)) {
        goto LABEL_29;
      }
    }

    if (v13) {
      goto LABEL_29;
    }
    uint64_t v16 = *(void *)(a2 + 256);
    if (v16)
    {
      uint64_t v17 = *(void *)(a3 + 120);
      if (v17)
      {
        uint64_t v18 = *(void *)(a2 + 264);
        double v100 = *(uint64_t **)(a2 + 256);
        uint64_t v101 = v18;
        if (v18)
        {
          int v19 = (unint64_t *)(v18 + 8);
          do
            unint64_t v20 = __ldxr(v19);
          while (__stxr(v20 + 1, v19));
          uint64_t v17 = *(void *)(a3 + 120);
        }

        uint64_t v21 = *(void *)(a3 + 128);
        v99[0] = v17;
        v99[1] = v21;
        if (v21)
        {
          double v22 = (unint64_t *)(v21 + 8);
          do
            unint64_t v23 = __ldxr(v22);
          while (__stxr(v23 + 1, v22));
        }

        uint64_t v25 = v16 + 136;
        double v24 = *(double **)(v16 + 136);
        double v26 = 0.0;
        double v27 = 0.0;
        double v28 = 0.0;
        if (*(double **)(v25 + 8) != v24)
        {
          double v27 = *v24;
          double v28 = v24[1];
        }

        uint64_t v30 = v17 + 136;
        double v29 = *(double **)(v17 + 136);
        double v31 = 0.0;
        if (*(double **)(v30 + 8) != v29)
        {
          double v26 = *v29;
          double v31 = v29[1];
        }

        if (sub_100292850(v27, v28, v26, v31, 0.0000001)) {
          goto LABEL_63;
        }
        uint64_t v32 = (double *)v100[17];
        double v33 = 0.0;
        double v34 = 0.0;
        double v35 = 0.0;
        if ((double *)v100[18] != v32)
        {
          double v34 = *v32;
          double v35 = v32[1];
        }

        uint64_t v36 = *(void *)(v99[0] + 144LL);
        double v37 = 0.0;
        if (v36 != *(void *)(v99[0] + 136LL))
        {
          double v33 = *(double *)(v36 - 16);
          double v37 = *(double *)(v36 - 8);
        }

        if (sub_100292850(v34, v35, v33, v37, 0.0000001)) {
          goto LABEL_63;
        }
        uint64_t v38 = v100[18];
        double v39 = 0.0;
        double v40 = 0.0;
        double v41 = 0.0;
        if (v38 != v100[17])
        {
          double v40 = *(double *)(v38 - 16);
          double v41 = *(double *)(v38 - 8);
        }

        __int16 v42 = *(double **)(v99[0] + 136LL);
        double v43 = 0.0;
        if (*(double **)(v99[0] + 144LL) != v42)
        {
          double v39 = *v42;
          double v43 = v42[1];
        }

        if (sub_100292850(v40, v41, v39, v43, 0.0000001)) {
          goto LABEL_63;
        }
        uint64_t v44 = v100[18];
        double v45 = 0.0;
        double v46 = 0.0;
        double v47 = 0.0;
        if (v44 != v100[17])
        {
          double v46 = *(double *)(v44 - 16);
          double v47 = *(double *)(v44 - 8);
        }

        uint64_t v48 = *(void *)(v99[0] + 144LL);
        double v49 = 0.0;
        if (v48 != *(void *)(v99[0] + 136LL))
        {
          double v45 = *(double *)(v48 - 16);
          double v49 = *(double *)(v48 - 8);
        }

        if (sub_100292850(v46, v47, v45, v49, 0.0000001)) {
LABEL_63:
        }
          int v50 = 1;
        else {
          int v50 = 0;
        }
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188A8E0);
        }
        char v51 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v52 = *(void *)(a2 + 384);
          uint64_t v53 = *v100;
          uint64_t v54 = *(void *)v99[0];
          *(_DWORD *)__n128 buf = 134349825;
          uint64_t v109 = v52;
          __int16 v110 = 1026;
          *(_DWORD *)uint64_t v111 = v50;
          *(_WORD *)&v111[4] = 2049;
          *(void *)&v111[6] = v53;
          *(_WORD *)&v111[14] = 2049;
          *(void *)&v111[16] = v54;
          _os_log_impl( (void *)&_mh_execute_header,  v51,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,hopping check,connecting roads,%{public}d, current road %{private}lld,prior road %{private}lld",  buf,  0x26u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10188A8E0);
          }
          uint64_t v87 = *(void *)(a2 + 384);
          uint64_t v88 = *v100;
          uint64_t v89 = *(void *)v99[0];
          int v102 = 134349825;
          uint64_t v103 = v87;
          __int16 v104 = 1026;
          *(_DWORD *)int v105 = v50;
          *(_WORD *)&v105[4] = 2049;
          *(void *)&v105[6] = v88;
          *(_WORD *)&v105[14] = 2049;
          *(void *)&v105[16] = v89;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,hopping check,connecting roads,%{public}d, current road %{private}lld,prior road %{private}lld",  &v102,  38);
          int v91 = (uint8_t *)v90;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLPedestrianMapMatcherFilter::checkForSolutionHopping(const MMFilterData &, const MMSnapData &)",  "%s\n",  v90);
          if (v91 != buf) {
            free(v91);
          }
        }

        sub_10000AE14((uint64_t)v99);
        sub_10000AE14((uint64_t)&v100);
        if ((v50 & 1) != 0) {
          goto LABEL_29;
        }
      }
    }

    uint64_t v55 = *(void *)(a3 + 120);
    if (v55)
    {
      uint64_t v56 = *(void *)(a2 + 864);
      if (v56)
      {
        uint64_t v57 = *(void *)(a3 + 128);
        double v100 = *(uint64_t **)(a3 + 120);
        uint64_t v101 = v57;
        if (v57)
        {
          BOOL v58 = (unint64_t *)(v57 + 8);
          do
            unint64_t v59 = __ldxr(v58);
          while (__stxr(v59 + 1, v58));
          uint64_t v56 = *(void *)(a2 + 864);
        }

        uint64_t v62 = v56 + 136;
        double v60 = *(__int128 **)(v56 + 136);
        unint64_t v61 = *(__int128 **)(v62 + 8);
        __int128 v63 = 0uLL;
        __int128 v64 = 0uLL;
        if (v61 != v60)
        {
          if (*(_BYTE *)(a2 + 880)) {
            __int128 v64 = *v60;
          }
          else {
            __int128 v64 = *(v61 - 1);
          }
        }

        uint64_t v67 = v55 + 136;
        double v65 = *(__int128 **)(v55 + 136);
        char v66 = *(__int128 **)(v67 + 8);
        if (v66 != v65)
        {
          if (*(_BYTE *)(a3 + 140)) {
            __int128 v63 = *(v66 - 1);
          }
          else {
            __int128 v63 = *v65;
          }
        }

        BOOL v68 = sub_100292850(*(double *)&v64, *((double *)&v64 + 1), *(double *)&v63, *((double *)&v63 + 1), 0.0000001);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188A8E0);
        }
        int v69 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v70 = *(void *)(a2 + 384);
          uint64_t v71 = *v100;
          uint64_t v72 = **(void **)(a2 + 864);
          uint64_t v73 = **(void **)(a2 + 256);
          *(_DWORD *)__n128 buf = 134349825;
          uint64_t v109 = v70;
          __int16 v110 = 2049;
          *(void *)uint64_t v111 = v71;
          *(_WORD *)&v111[8] = 2049;
          *(void *)&v111[10] = v72;
          *(_WORD *)&v111[18] = 2049;
          *(void *)&v111[20] = v73;
          _os_log_impl( (void *)&_mh_execute_header,  v69,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,hopping check,prior road, %{private}lld, connected to the incoming road, %{private}lld , of the current solution road, %{private}lld",  buf,  0x2Au);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10188A8E0);
          }
          uint64_t v92 = *(void *)(a2 + 384);
          uint64_t v93 = *v100;
          uint64_t v94 = **(void **)(a2 + 864);
          uint64_t v95 = **(void **)(a2 + 256);
          int v102 = 134349825;
          uint64_t v103 = v92;
          __int16 v104 = 2049;
          *(void *)int v105 = v93;
          *(_WORD *)&v105[8] = 2049;
          *(void *)&v105[10] = v94;
          *(_WORD *)&v105[18] = 2049;
          *(void *)&v105[20] = v95;
          LODWORD(v98) = 42;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,hopping check,prior road, %{private}lld, connected to the incoming road, %{private}lld , of the current solution road, %{private}lld",  &v102,  v98);
          uint64_t v97 = (uint8_t *)v96;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLPedestrianMapMatcherFilter::checkForSolutionHopping(const MMFilterData &, const MMSnapData &)",  "%s\n",  v96);
          if (v97 != buf) {
            free(v97);
          }
        }

        sub_10000AE14((uint64_t)&v100);
        if (v68)
        {
LABEL_29:
          BOOL v10 = 0LL;
          goto LABEL_98;
        }
      }
    }

    BOOL v10 = sub_100D2DBDC( (double *)(a1 + 168),  *(double *)(a3 + 528),  *(double *)(a3 + 536),  *(double *)(a2 + 664),  *(double *)(a2 + 672),  *(double *)(a2 + 448)) > 35.0 || *(_DWORD *)(a1 + 1776) > 15;
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    double v74 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v75 = *(void *)(a2 + 384);
      uint64_t v76 = *(void *)(a3 + 544);
      uint64_t v77 = *(void *)(a2 + 680);
      uint64_t v78 = *(void *)(a2 + 488);
      uint64_t v79 = *(void *)(a3 + 352);
      *(_DWORD *)__n128 buf = 134350081;
      uint64_t v109 = v75;
      __int16 v110 = 2050;
      *(void *)uint64_t v111 = v76;
      *(_WORD *)&v111[8] = 2050;
      *(void *)&v111[10] = v77;
      *(_WORD *)&v111[18] = 2049;
      *(void *)&v111[20] = v78;
      __int16 v112 = 2049;
      uint64_t v113 = v79;
      _os_log_impl( (void *)&_mh_execute_header,  v74,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,hopping between roads detected,priorfullSnapCourse,%{public}.1lf,currentFullSnapCourse,%{p ublic}.1lf,priorId,%{private}llu,currentId,%{private}llu",  buf,  0x34u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      uint64_t v80 = *(void *)(a2 + 384);
      uint64_t v81 = *(void *)(a3 + 544);
      uint64_t v82 = *(void *)(a2 + 680);
      uint64_t v83 = *(void *)(a2 + 488);
      uint64_t v84 = *(void *)(a3 + 352);
      int v102 = 134350081;
      uint64_t v103 = v80;
      __int16 v104 = 2050;
      *(void *)int v105 = v81;
      *(_WORD *)&v105[8] = 2050;
      *(void *)&v105[10] = v82;
      *(_WORD *)&v105[18] = 2049;
      *(void *)&v105[20] = v83;
      __int16 v106 = 2049;
      uint64_t v107 = v84;
      LODWORD(v98) = 52;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,hopping between roads detected,priorfullSnapCourse,%{public}.1lf,currentFullSnapCourse,%{p ublic}.1lf,priorId,%{private}llu,currentId,%{private}llu",  &v102,  v98);
      uint64_t v86 = (uint8_t *)v85;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLParticleMM::CLPedestrianMapMatcherFilter::checkForSolutionHopping(const MMFilterData &, const MMSnapData &)",  "%s\n",  v85);
      if (v86 != buf) {
        free(v86);
      }
    }

void sub_100EC7DC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
}

uint64_t sub_100EC7DF4(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 48) == *(void *)(a2 + 40))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188A8E0);
    }
    uint64_t v14 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      double v15 = *(double *)(a2 + 384);
      *(_DWORD *)__n128 buf = 134349056;
      double v62 = v15;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,roadWithAdustment,number of particles are 0",  buf,  0xCu);
    }

    BOOL v6 = 0LL;
    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      double v16 = *(double *)(a2 + 384);
      int v53 = 134349056;
      double v54 = v16;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,roadWithAdustment,number of particles are 0",  &v53,  12);
      goto LABEL_37;
    }
  }

  else
  {
    *(void *)(a2 + 696) = 0LL;
    *(void *)(a2 + 688) = 0LL;
    if (*(_BYTE *)(a2 + 640))
    {
      if (*(void *)(a2 + 256))
      {
        uint64_t v51 = 0LL;
        double v52 = 0.0;
        uint64_t v4 = (double *)(a1 + 168);
        sub_100D2E36C( (double *)(a1 + 168),  &v52,  (double *)&v51,  *(double *)(a2 + 664),  *(double *)(a2 + 672),  *(double *)(a2 + 448),  *(double *)(a2 + 680),  *(double *)(a2 + 432),  *(double *)(a2 + 440));
        uint64_t v5 = *(void *)(a2 + 256);
        BOOL v6 = v5 != 0;
        if (v5)
        {
          uint64_t v7 = *(int *)(v5 + 20);
          double v8 = 0.5;
          double v9 = 1.0;
          if ((_DWORD)v7 != 9)
          {
            int v10 = *(_DWORD *)(v5 + 72);
            if (v10 != 6 && v10 != 255)
            {
              double v11 = *(double *)(v5 + 96);
              if (v11 < 0.000001)
              {
                double v11 = 1.0;
                if ((v7 & 0xFFFFFFFE) != 8)
                {
                  int v12 = *(unsigned __int8 *)(v5 + 16);
                  if (v7 > 7)
                  {
                    double v11 = dbl_1012E00F0[v12 == 0];
                  }

                  else
                  {
                    if (v12) {
                      BOOL v13 = (double *)&unk_101363BE8;
                    }
                    else {
                      BOOL v13 = (double *)&unk_101363C28;
                    }
                    double v11 = v13[v7];
                  }
                }
              }

              double v9 = v11 + 1.0;
              double v8 = v11 * 0.5 + 1.0;
            }
          }

          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10188A8E0);
          }
          double v24 = (os_log_s *)qword_1019348B8;
          if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
          {
            double v25 = *(double *)(a2 + 384);
            uint64_t v26 = *(void *)(a2 + 256);
            int v27 = *(_DWORD *)(v26 + 20);
            LODWORD(v26) = *(unsigned __int8 *)(v26 + 16);
            *(_DWORD *)__n128 buf = 134350080;
            double v62 = v25;
            __int16 v63 = 1026;
            *(_DWORD *)__int128 v64 = v27;
            *(_WORD *)&v64[4] = 1026;
            *(_DWORD *)&v64[6] = v26;
            __int16 v65 = 2050;
            double v66 = v9;
            __int16 v67 = 2050;
            double v68 = v52;
            _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,frc,%{public}d,oneway,%{public}d,roadWidth,%{public}.1lf,acrossTrack,%{public}.3lf",  buf,  0x2Cu);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1019348B0 != -1) {
              dispatch_once(&qword_1019348B0, &stru_10188A8E0);
            }
            double v40 = *(double *)(a2 + 384);
            uint64_t v41 = *(void *)(a2 + 256);
            int v42 = *(_DWORD *)(v41 + 20);
            LODWORD(v41) = *(unsigned __int8 *)(v41 + 16);
            int v53 = 134350080;
            double v54 = v40;
            __int16 v55 = 1026;
            *(_DWORD *)uint64_t v56 = v42;
            *(_WORD *)&v56[4] = 1026;
            *(_DWORD *)&v56[6] = v41;
            __int16 v57 = 2050;
            double v58 = v9;
            __int16 v59 = 2050;
            double v60 = v52;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,frc,%{public}d,oneway,%{public}d,roadWidth,%{public}.1lf,acrossTrack,%{public}.3lf",  &v53,  44);
            uint64_t v44 = (uint8_t *)v43;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMM::CLPedestrianMapMatcherFilter::adjustSolutionforRoadWidth(MMFilterData &)",  "%s\n",  v43);
            if (v44 != buf) {
              free(v44);
            }
          }

          if (v9 >= 0.000001)
          {
            uint64_t v28 = *(void *)(a2 + 528);
            uint64_t v49 = *(void *)(a2 + 536);
            uint64_t v50 = v28;
            if (sub_100ECF4A4(a1 + 1832, *(double *)(a2 + 400), 6.0))
            {
              uint64_t v29 = *(void *)(a2 + 256);
              if (!v29 || (*(_DWORD *)(v29 + 20) & 0xFFFFFFFE) != 8)
              {
                if (qword_1019348B0 != -1) {
                  dispatch_once(&qword_1019348B0, &stru_10188A8E0);
                }
                uint64_t v30 = (os_log_s *)qword_1019348B8;
                if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
                {
                  double v31 = v9 + *(double *)(a1 + 16);
                  *(_DWORD *)__n128 buf = 134349312;
                  double v62 = v9;
                  __int16 v63 = 2050;
                  *(double *)__int128 v64 = v31;
                  _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEBUG,  "CLMMPED,Road width inflated from,%{public}.1lf,to,%{public}.1lf",  buf,  0x16u);
                }

                if (sub_1002921D0(115, 2))
                {
                  bzero(buf, 0x65CuLL);
                  if (qword_1019348B0 != -1) {
                    dispatch_once(&qword_1019348B0, &stru_10188A8E0);
                  }
                  double v45 = v9 + *(double *)(a1 + 16);
                  int v53 = 134349312;
                  double v54 = v9;
                  __int16 v55 = 2050;
                  *(double *)uint64_t v56 = v45;
                  LODWORD(v48) = 22;
                  _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,Road width inflated from,%{public}.1lf,to,%{public}.1lf",  &v53,  v48);
                  double v47 = (uint8_t *)v46;
                  sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMM::CLPedestrianMapMatcherFilter::adjustSolutionforRoadWidth(MMFilterData &)",  "%s\n",  v46);
                  if (v47 != buf) {
                    free(v47);
                  }
                }

                double v8 = v8 + *(double *)(a1 + 16) * 0.5;
              }
            }

            double v32 = fabs(v52);
            if (v32 >= v8)
            {
              if (v52 >= 0.0) {
                double v35 = -(v32 - v8);
              }
              else {
                double v35 = v32 - v8;
              }
              sub_100D2E0A8( v4,  (double *)&v50,  (double *)&v49,  *(double *)(a2 + 432),  *(double *)(a2 + 440),  *(double *)(a2 + 448),  *(double *)(a2 + 680),  v35);
              *(_DWORD *)(a2 + 656) = 2;
              uint64_t v34 = v49;
              uint64_t v33 = v50;
              *(void *)(a2 + 688) = v50;
              *(void *)(a2 + 696) = v34;
            }

            else
            {
              uint64_t v33 = *(void *)(a2 + 432);
              uint64_t v34 = *(void *)(a2 + 440);
            }

            *(void *)(a2 + 528) = v33;
            *(void *)(a2 + 536) = v34;
          }
        }

        return v6;
      }

      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      unint64_t v20 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
      {
        double v21 = *(double *)(a2 + 384);
        *(_DWORD *)__n128 buf = 134349056;
        double v62 = v21;
        _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,roadWithAdustment,road is nullptr",  buf,  0xCu);
      }

      BOOL v6 = 0LL;
      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188A8E0);
        }
        double v22 = *(double *)(a2 + 384);
        int v53 = 134349056;
        double v54 = v22;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,roadWithAdustment,road is nullptr",  &v53,  12);
LABEL_37:
        unint64_t v23 = (uint8_t *)v17;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLParticleMM::CLPedestrianMapMatcherFilter::adjustSolutionforRoadWidth(MMFilterData &)",  "%s\n",  v17);
        if (v23 != buf) {
          free(v23);
        }
        return 0LL;
      }
    }

    else
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      uint64_t v18 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        double v19 = *(double *)(a2 + 384);
        *(_DWORD *)__n128 buf = 134349056;
        double v62 = v19;
        _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,roadWithAdustment,snap invalid or frc = 9",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188A8E0);
        }
        double v37 = *(double *)(a2 + 384);
        int v53 = 134349056;
        double v54 = v37;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,roadWithAdustment,snap invalid or frc = 9",  &v53,  12);
        double v39 = (uint8_t *)v38;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMM::CLPedestrianMapMatcherFilter::adjustSolutionforRoadWidth(MMFilterData &)",  "%s\n",  v38);
        if (v39 != buf) {
          free(v39);
        }
      }

      return 1LL;
    }
  }

  return v6;
}

uint64_t sub_100EC86F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = 0LL;
  *(void *)(a1 + 1968) = 0xBFF0000000000000LL;
  *(void *)(a1 + 2056) = 0xBFF0000000000000LL;
  *(void *)(a1 + 2064) = 0xBFF0000000000000LL;
  *(void *)uint64_t v107 = 0xBFF0000000000000LL;
  uint64_t v4 = a1 + 1968;
  *(_DWORD *)(a1 + 2048) = 0;
  *(_OWORD *)(a1 + 1976) = 0u;
  *(_OWORD *)(a1 + 1992) = 0u;
  *(_OWORD *)(a1 + 2008) = 0u;
  *(_OWORD *)(a1 + 2024) = 0u;
  *(void *)(a1 + 2037) = 0LL;
  *(_DWORD *)int v108 = 0;
  memset(&v107[8], 0, 69);
  __asm { FMOV            V0.2D, #-1.0 }

  *(_OWORD *)&v108[8] = _Q0;
  if (*(double *)(a3 + 248) > 0.0)
  {
    BOOL v13 = (void *)(a2 + 256);
    uint64_t v14 = *(void *)(a2 + 384);
    uint64_t v106 = v14;
    double v15 = *(double *)(a2 + 400);
    double v16 = -1.0;
    if (v15 >= 0.0)
    {
      double v17 = *(double *)(a3 + 264);
      _NF = v17 < 0.0;
      double v16 = vabdd_f64(v15, v17);
      if (_NF) {
        double v16 = -1.0;
      }
    }

    if (*v13)
    {
      if (v16 <= 0.0)
      {
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188A8E0);
        }
        unint64_t v23 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)__n128 buf = 134349056;
          uint64_t v148 = v14;
          _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,Unexpected,invalid timeDiff,DOT",  buf,  0xCu);
        }

        if (!sub_1002921D0(115, 0)) {
          return 0LL;
        }
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188A8E0);
        }
        int v109 = 134349056;
        uint64_t v110 = v106;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,Unexpected,invalid timeDiff,DOT",  &v109,  12);
        unint64_t v20 = (uint8_t *)v51;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLParticleMM::CLPedestrianMapMatcherFilter::generateDirectionOfTravelAssistance(const MMFilterDat a &, const MMSnapData &)",  "%s\n",  v51);
      }

      else
      {
        if (v16 > 1.5)
        {
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10188A8E0);
          }
          uint64_t v18 = (os_log_s *)qword_1019348B8;
          if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)__n128 buf = 134349056;
            uint64_t v148 = v14;
            _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,timeDiff too large,DOT",  buf,  0xCu);
          }

          if (!sub_1002921D0(115, 2)) {
            return 0LL;
          }
          bzero(buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10188A8E0);
          }
          int v109 = 134349056;
          uint64_t v110 = v106;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,timeDiff too large,DOT",  &v109,  12);
          unint64_t v20 = (uint8_t *)v19;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMM::CLPedestrianMapMatcherFilter::generateDirectionOfTravelAssistance(const MMFilterD ata &, const MMSnapData &)",  "%s\n",  v19);
          goto LABEL_117;
        }

        if (!*(_BYTE *)(a2 + 640) || *(_BYTE *)(a2 + 641))
        {
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10188A8E0);
          }
          uint64_t v28 = (os_log_s *)qword_1019348B8;
          if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)__n128 buf = 134349056;
            uint64_t v148 = v14;
            _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf, no DOT, currentCrumb invalid",  buf,  0xCu);
          }

          if (!sub_1002921D0(115, 2)) {
            return 0LL;
          }
          bzero(buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10188A8E0);
          }
          int v109 = 134349056;
          uint64_t v110 = v106;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf, no DOT, currentCrumb invalid",  &v109,  12);
          unint64_t v20 = (uint8_t *)v29;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMM::CLPedestrianMapMatcherFilter::generateDirectionOfTravelAssistance(const MMFilterD ata &, const MMSnapData &)",  "%s\n",  v29);
        }

        else if (!*(_BYTE *)(a3 + 504) || *(_BYTE *)(a3 + 505))
        {
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10188A8E0);
          }
          uint64_t v30 = (os_log_s *)qword_1019348B8;
          if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)__n128 buf = 134349056;
            uint64_t v148 = v14;
            _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf, no DOT, priorCrumb invalid",  buf,  0xCu);
          }

          if (!sub_1002921D0(115, 2)) {
            return 0LL;
          }
          bzero(buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10188A8E0);
          }
          int v109 = 134349056;
          uint64_t v110 = v106;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf, no DOT, priorCrumb invalid",  &v109,  12);
          unint64_t v20 = (uint8_t *)v31;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMM::CLPedestrianMapMatcherFilter::generateDirectionOfTravelAssistance(const MMFilterD ata &, const MMSnapData &)",  "%s\n",  v31);
        }

        else
        {
          double v25 = *(double *)(a1 + 2272);
          if (v25 > 0.0 && vabdd_f64(v15, v25 + -1.0) < 0.9)
          {
            if (qword_1019348B0 != -1) {
              dispatch_once(&qword_1019348B0, &stru_10188A8E0);
            }
            uint64_t v26 = (os_log_s *)qword_1019348B8;
            if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
            {
              *(_DWORD *)__n128 buf = 134349056;
              uint64_t v148 = v14;
              _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf, no DOT,feedback interval check",  buf,  0xCu);
            }

            if (!sub_1002921D0(115, 2)) {
              return 0LL;
            }
            bzero(buf, 0x65CuLL);
            if (qword_1019348B0 != -1) {
              dispatch_once(&qword_1019348B0, &stru_10188A8E0);
            }
            int v109 = 134349056;
            uint64_t v110 = v106;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf, no DOT,feedback interval check",  &v109,  12);
            unint64_t v20 = (uint8_t *)v27;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMM::CLPedestrianMapMatcherFilter::generateDirectionOfTravelAssistance(const MMFilte rData &, const MMSnapData &)",  "%s\n",  v27);
            goto LABEL_117;
          }

          if (*(_BYTE *)(a1 + 1064) && *(double *)(a1 + 1072) < 36.0)
          {
            if (qword_1019348B0 != -1) {
              dispatch_once(&qword_1019348B0, &stru_10188A8E0);
            }
            double v32 = (os_log_s *)qword_1019348B8;
            if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
            {
              int v33 = *(unsigned __int8 *)(a1 + 1064);
              uint64_t v34 = *(void *)(a1 + 1072);
              *(_DWORD *)__n128 buf = 134349568;
              uint64_t v148 = v14;
              __int16 v149 = 1026;
              *(_DWORD *)uint64_t v150 = v33;
              *(_WORD *)&v150[4] = 2050;
              *(void *)&v150[6] = v34;
              _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf, no DOT, too close to prior intersection,transitiondetected,%{public}d,dist,%{public}.2lf",  buf,  0x1Cu);
            }

            if (!sub_1002921D0(115, 2)) {
              return 0LL;
            }
            bzero(buf, 0x65CuLL);
            if (qword_1019348B0 != -1) {
              dispatch_once(&qword_1019348B0, &stru_10188A8E0);
            }
            int v35 = *(unsigned __int8 *)(a1 + 1064);
            uint64_t v36 = *(void *)(a1 + 1072);
            int v109 = 134349568;
            uint64_t v110 = v106;
            __int16 v111 = 1026;
            *(_DWORD *)__int16 v112 = v35;
            *(_WORD *)&v112[4] = 2050;
            *(void *)&v112[6] = v36;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf, no DOT, too close to prior intersection,transitiondetected,%{public}d,dist,%{public}.2lf",  &v109,  28);
            unint64_t v20 = (uint8_t *)v37;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMM::CLPedestrianMapMatcherFilter::generateDirectionOfTravelAssistance(const MMFilte rData &, const MMSnapData &)",  "%s\n",  v37);
            goto LABEL_117;
          }

          double v38 = fmod(*(double *)(a2 + 544) - *(double *)(a2 + 680), 360.0);
          if (v38 < 0.0) {
            double v38 = v38 + 360.0;
          }
          if (v38 > 180.0) {
            double v38 = v38 + -360.0;
          }
          if (fabs(v38) > 1.0)
          {
            if (qword_1019348B0 != -1) {
              dispatch_once(&qword_1019348B0, &stru_10188A8E0);
            }
            double v39 = (os_log_s *)qword_1019348B8;
            if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
            {
              *(_DWORD *)__n128 buf = 134349056;
              uint64_t v148 = v14;
              _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf, no DOT, course not aligned to full snap",  buf,  0xCu);
            }

            if (!sub_1002921D0(115, 2)) {
              return 0LL;
            }
            bzero(buf, 0x65CuLL);
            if (qword_1019348B0 != -1) {
              dispatch_once(&qword_1019348B0, &stru_10188A8E0);
            }
            int v109 = 134349056;
            uint64_t v110 = v106;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf, no DOT, course not aligned to full snap",  &v109,  12);
            unint64_t v20 = (uint8_t *)v40;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMM::CLPedestrianMapMatcherFilter::generateDirectionOfTravelAssistance(const MMFilte rData &, const MMSnapData &)",  "%s\n",  v40);
            goto LABEL_117;
          }

          double v105 = -1.0;
          if (sub_100EBB9F4( &v106,  (double *)(a2 + 376),  (double *)(a1 + 168),  &v105,  *(double *)(a3 + 528),  *(double *)(a3 + 536),  *(double *)(a3 + 544)))
          {
            double v104 = 70.0;
            sub_100BDC7E0((uint64_t)v103, (uint64_t)v13);
            char v41 = sub_100EBC170(a1, v103, a2 + 376, 0LL, &v104);
            sub_100BDC958((uint64_t)v103);
            if ((v41 & 1) != 0) {
              return 0LL;
            }
            sub_100BDC7E0((uint64_t)v100, (uint64_t)v13);
            sub_1010DDBC0(v98, "lookBehindParticle");
            sub_1010DDBC0(__p, "currentCrumb");
            BOOL v42 = sub_100EBAE2C(a1, (uint64_t *)v98, (uint64_t *)__p, (uint64_t)v100, (double *)(a2 + 376), &v105, -15.0);
            if (v97 < 0) {
              operator delete(__p[0]);
            }
            if (v99 < 0) {
              operator delete(v98[0]);
            }
            if (v42)
            {
              sub_1010DDBC0(v94, "Start");
              BOOL v43 = sub_100F21150( a2 + 376,  (double *)(a1 + 168),  (uint64_t *)v94,  (double *)&v107[8],  (double *)&v107[16],  v101,  v102);
              if (v95 < 0) {
                operator delete(v94[0]);
              }
              if (v43)
              {
                double v44 = sub_100D2DBDC( (double *)(a1 + 168),  *(double *)(a2 + 288),  *(double *)(a2 + 296),  v101,  v102,  *(double *)(a2 + 448));
                sub_100BDC7E0((uint64_t)v91, (uint64_t)v13);
                double v45 = *(double *)(a2 + 472);
                if (v45 >= 0.0)
                {
                  double v47 = fabs(v45);
                }

                else
                {
                  uint64_t v46 = *(void *)(a1 + 208);
                  if (v46)
                  {
                    else {
                      double v47 = 3.0;
                    }
                  }

                  else
                  {
                    double v47 = 3.0;
                  }
                }

                double v52 = v104;
                double v53 = v104 - v47;
                if (v104 - v47 >= 18.0)
                {
                  sub_1010DDBC0(v89, "predictedParticle");
                  sub_1010DDBC0(v87, "currentCrumb");
                  BOOL v57 = sub_100EBAE2C( a1,  (uint64_t *)v89,  (uint64_t *)v87,  (uint64_t)v91,  (double *)(a2 + 376),  &v105,  v47);
                  if (v88 < 0) {
                    operator delete(v87[0]);
                  }
                  if (v90 < 0) {
                    operator delete(v89[0]);
                  }
                  if (!v57) {
                    goto LABEL_164;
                  }
                  *(_OWORD *)&v107[24] = v93;
                  unint64_t v86 = 0xBFF0000000000000LL;
                  sub_100EA993C(v91, (double *)&v107[64], (double *)&v86, 1);
                  double v58 = fmax(*(double *)&v107[64], 15.0);
                  if (v52 > v58 + 1.0)
                  {
                    sub_100BDC7E0((uint64_t)v85, (uint64_t)v13);
                    if (v52 - v58 >= v47 + 15.0) {
                      double v59 = v47 + 15.0;
                    }
                    else {
                      double v59 = v52 - v58;
                    }
                    sub_1010DDBC0(v83, "lookAheadParticle");
                    sub_1010DDBC0(v81, "currentCrumb");
                    BOOL v60 = sub_100EBAE2C( a1,  (uint64_t *)v83,  (uint64_t *)v81,  (uint64_t)v85,  (double *)(a2 + 376),  &v105,  v59);
                    if (v82 < 0) {
                      operator delete(v81[0]);
                    }
                    if (v84 < 0) {
                      operator delete(v83[0]);
                    }
                    if (!v60) {
                      goto LABEL_167;
                    }
                    double v61 = fmin(v44, 15.0);
                    double v62 = v105;
                    if (v105 < 3.0) {
                      double v62 = 3.0;
                    }
                    *(double *)&v107[40] = v61 + v59;
                    *(double *)&v107[56] = v62;
                    sub_1010DDBC0(v79, "Predicted");
                    BOOL v63 = sub_100F21150( a2 + 376,  (double *)(a1 + 168),  (uint64_t *)v79,  (double *)&v107[24],  (double *)&v107[32],  *(double *)&v107[24],  *(double *)&v107[32]);
                    if (v80 < 0) {
                      operator delete(v79[0]);
                    }
                    if (v63)
                    {
                      double v64 = *(double *)(a2 + 384) + 1.0;
                      *(double *)&v107[48] = v92;
                      *(double *)uint64_t v107 = v64;
                      __asm { FMOV            V1.2D, #1.0 }

                      *(float64x2_t *)&v108[8] = vaddq_f64(*(float64x2_t *)(a2 + 392), _Q1);
                      v107[73] = 0;
                      v107[74] = *(_BYTE *)(v91[0] + 17);
                      v107[72] = *(_BYTE *)(v91[0] + 18);
                      v107[75] = *(_BYTE *)(v91[0] + 19);
                      v107[76] = *(_DWORD *)(a2 + 496) == 0;
                      *(_DWORD *)int v108 = 2;
                      uint64_t v66 = *(void *)(a1 + 208);
                      __int128 v67 = *(_OWORD *)v108;
                      *(_OWORD *)(v4 + 64) = *(_OWORD *)&v107[64];
                      *(_OWORD *)(v4 + 80) = v67;
                      *(void *)(v4 + 96) = *(void *)&v108[16];
                      __int128 v68 = *(_OWORD *)&v107[16];
                      *(_OWORD *)uint64_t v4 = *(_OWORD *)v107;
                      *(_OWORD *)(v4 + 16) = v68;
                      __int128 v69 = *(_OWORD *)&v107[48];
                      *(_OWORD *)(v4 + 32) = *(_OWORD *)&v107[32];
                      *(_OWORD *)(v4 + 48) = v69;
                      *(void *)(a1 + 2272) = *(void *)&v108[16];
                      if (qword_1019348B0 != -1) {
                        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
                      }
                      uint64_t v70 = (os_log_s *)qword_1019348B8;
                      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
                      {
                        uint64_t v71 = *(void *)(a2 + 472);
                        *(_DWORD *)__n128 buf = 134353921;
                        uint64_t v148 = v106;
                        __int16 v149 = 2050;
                        *(void *)uint64_t v150 = *(void *)v107;
                        *(_WORD *)&v150[8] = 2049;
                        *(void *)&v150[10] = *(void *)&v107[24];
                        __int16 v151 = 2049;
                        uint64_t v152 = *(void *)&v107[32];
                        __int16 v153 = 2050;
                        uint64_t v154 = *(void *)&v107[48];
                        __int16 v155 = 2050;
                        uint64_t v156 = *(void *)&v107[56];
                        __int16 v157 = 2050;
                        uint64_t v158 = *(void *)&v107[64];
                        __int16 v159 = 2049;
                        uint64_t v160 = *(void *)&v107[8];
                        __int16 v161 = 2049;
                        uint64_t v162 = *(void *)&v107[16];
                        __int16 v163 = 2050;
                        uint64_t v164 = *(void *)&v107[40];
                        __int16 v165 = 2050;
                        uint64_t v166 = v71;
                        __int16 v167 = 1026;
                        int v168 = v107[73];
                        __int16 v169 = 1026;
                        int v170 = v107[74];
                        __int16 v171 = 1026;
                        int v172 = v107[72];
                        __int16 v173 = 1026;
                        int v174 = v107[75];
                        __int16 v175 = 2050;
                        double v176 = v58;
                        __int16 v177 = 1026;
                        int v178 = v107[76];
                        __int16 v179 = 2050;
                        uint64_t v180 = *(void *)&v108[16];
                        __int16 v181 = 2050;
                        double v182 = v61;
                        __int16 v183 = 1026;
                        int v184 = *(_DWORD *)v108;
                        _os_log_impl( (void *)&_mh_execute_header,  v70,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf,DOT,%{public}.1lf,lat,%{private}.7lf,lon,%{private}.7lf,course,%{public} .1lf,courseUnc,%{public}.1lf,rw,%{public}.1lf,startLat,%{private}.7lf,startLon,%{private}.7lf, length,%{public}.1lf,speed,%{public}.3lf,isOneWay,%{public}d,isRailWay,%{public}d,isTunnel,%{p ublic}d,isBridge,%{public}d,distFromIntersection,%{public}.1lf,isFreeway,%{public}d,machContTi me,%{public}.3lf,lookBehindDist,%{public}.2lf,type,%{public}d",  buf,  0xB2u);
                      }

                      if (sub_1002921D0(115, 2))
                      {
                        bzero(buf, 0x65CuLL);
                        if (qword_1019348B0 != -1) {
                          dispatch_once(&qword_1019348B0, &stru_10188A8E0);
                        }
                        uint64_t v76 = *(void *)(a2 + 472);
                        int v109 = 134353921;
                        uint64_t v110 = v106;
                        __int16 v111 = 2050;
                        *(void *)__int16 v112 = *(void *)v107;
                        *(_WORD *)&v112[8] = 2049;
                        *(void *)&v112[10] = *(void *)&v107[24];
                        __int16 v113 = 2049;
                        uint64_t v114 = *(void *)&v107[32];
                        __int16 v115 = 2050;
                        uint64_t v116 = *(void *)&v107[48];
                        __int16 v117 = 2050;
                        uint64_t v118 = *(void *)&v107[56];
                        __int16 v119 = 2050;
                        uint64_t v120 = *(void *)&v107[64];
                        __int16 v121 = 2049;
                        uint64_t v122 = *(void *)&v107[8];
                        __int16 v123 = 2049;
                        uint64_t v124 = *(void *)&v107[16];
                        __int16 v125 = 2050;
                        uint64_t v126 = *(void *)&v107[40];
                        __int16 v127 = 2050;
                        uint64_t v128 = v76;
                        __int16 v129 = 1026;
                        int v130 = v107[73];
                        __int16 v131 = 1026;
                        int v132 = v107[74];
                        __int16 v133 = 1026;
                        int v134 = v107[72];
                        __int16 v135 = 1026;
                        int v136 = v107[75];
                        __int16 v137 = 2050;
                        double v138 = v58;
                        __int16 v139 = 1026;
                        int v140 = v107[76];
                        __int16 v141 = 2050;
                        uint64_t v142 = *(void *)&v108[16];
                        __int16 v143 = 2050;
                        double v144 = v61;
                        __int16 v145 = 1026;
                        int v146 = *(_DWORD *)v108;
                        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf,DOT,%{public}.1lf,lat,%{private}.7lf,lon,%{private}.7lf,course,%{public} .1lf,courseUnc,%{public}.1lf,rw,%{public}.1lf,startLat,%{private}.7lf,startLon,%{private}.7lf, length,%{public}.1lf,speed,%{public}.3lf,isOneWay,%{public}d,isRailWay,%{public}d,isTunnel,%{p ublic}d,isBridge,%{public}d,distFromIntersection,%{public}.1lf,isFreeway,%{public}d,machContTi me,%{public}.3lf,lookBehindDist,%{public}.2lf,type,%{public}d",  &v109,  178);
                        uint64_t v78 = (uint8_t *)v77;
                        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMM::CLPedestrianMapMatcherFilter::generateDirectionOfTravelAssistance(c onst MMFilterData &, const MMSnapData &)",  "%s\n",  v77);
                        if (v78 != buf) {
                          free(v78);
                        }
                      }

                      uint64_t v3 = 1LL;
                    }

                    else
                    {
LABEL_167:
                      uint64_t v3 = 0LL;
                    }

                    sub_100BDC958((uint64_t)v85);
                    goto LABEL_165;
                  }

                  if (qword_1019348B0 != -1) {
                    dispatch_once(&qword_1019348B0, &stru_10188A8E0);
                  }
                  uint64_t v72 = (os_log_s *)qword_1019348B8;
                  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
                  {
                    *(_DWORD *)__n128 buf = 134349056;
                    uint64_t v148 = v106;
                    _os_log_impl( (void *)&_mh_execute_header,  v72,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf, no DOT, current particle within the stopDistanceFromIntersection",  buf,  0xCu);
                  }

                  if (!sub_1002921D0(115, 2))
                  {
LABEL_164:
                    uint64_t v3 = 0LL;
LABEL_165:
                    sub_100BDC958((uint64_t)v91);
                    goto LABEL_166;
                  }

                  bzero(buf, 0x65CuLL);
                  if (qword_1019348B0 != -1) {
                    dispatch_once(&qword_1019348B0, &stru_10188A8E0);
                  }
                  int v109 = 134349056;
                  uint64_t v110 = v106;
                  _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf, no DOT, current particle within the stopDistanceFromIntersection",  &v109,  12);
                  uint64_t v56 = (uint8_t *)v75;
                  sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMM::CLPedestrianMapMatcherFilter::generateDirectionOfTravelAssistance(const M MFilterData &, const MMSnapData &)",  "%s\n",  v75);
                }

                else
                {
                  if (qword_1019348B0 != -1) {
                    dispatch_once(&qword_1019348B0, &stru_10188A8E0);
                  }
                  double v54 = (os_log_s *)qword_1019348B8;
                  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
                  {
                    *(_DWORD *)__n128 buf = 134349312;
                    uint64_t v148 = v106;
                    __int16 v149 = 2050;
                    *(double *)uint64_t v150 = v53;
                    _os_log_impl( (void *)&_mh_execute_header,  v54,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf, no DOT, predicted point is too close to intersection,dist,%{public}.2lf",  buf,  0x16u);
                  }

                  if (!sub_1002921D0(115, 2)) {
                    goto LABEL_164;
                  }
                  bzero(buf, 0x65CuLL);
                  if (qword_1019348B0 != -1) {
                    dispatch_once(&qword_1019348B0, &stru_10188A8E0);
                  }
                  int v109 = 134349312;
                  uint64_t v110 = v106;
                  __int16 v111 = 2050;
                  *(double *)__int16 v112 = v53;
                  _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf, no DOT, predicted point is too close to intersection,dist,%{public}.2lf",  &v109,  22);
                  uint64_t v56 = (uint8_t *)v55;
                  sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMM::CLPedestrianMapMatcherFilter::generateDirectionOfTravelAssistance(const M MFilterData &, const MMSnapData &)",  "%s\n",  v55);
                }

                if (v56 != buf) {
                  free(v56);
                }
                goto LABEL_164;
              }

              if (qword_1019348B0 != -1) {
                dispatch_once(&qword_1019348B0, &stru_10188A8E0);
              }
              uint64_t v50 = (os_log_s *)qword_1019348B8;
              if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
              {
                *(_DWORD *)__n128 buf = 134349056;
                uint64_t v148 = v106;
                _os_log_impl( (void *)&_mh_execute_header,  v50,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf, no DOT, computeSnapCoordinatesFromRawGPSCoordinates lookBehind returned false",  buf,  0xCu);
              }

              if (sub_1002921D0(115, 2))
              {
                bzero(buf, 0x65CuLL);
                if (qword_1019348B0 != -1) {
                  dispatch_once(&qword_1019348B0, &stru_10188A8E0);
                }
                int v109 = 134349056;
                uint64_t v110 = v106;
                _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf, no DOT, computeSnapCoordinatesFromRawGPSCoordinates lookBehind returned false",  &v109,  12);
                double v74 = (uint8_t *)v73;
                sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMM::CLPedestrianMapMatcherFilter::generateDirectionOfTravelAssistance(const MMF ilterData &, const MMSnapData &)",  "%s\n",  v73);
                if (v74 != buf) {
                  free(v74);
                }
              }
            }

            uint64_t v3 = 0LL;
LABEL_166:
            sub_100BDC958((uint64_t)v100);
            return v3;
          }

          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10188A8E0);
          }
          uint64_t v48 = (os_log_s *)qword_1019348B8;
          if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)__n128 buf = 134349056;
            uint64_t v148 = v106;
            _os_log_impl( (void *)&_mh_execute_header,  v48,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%{public}.1lf, no DOT, priorCrumb location or course diverged",  buf,  0xCu);
          }

          if (!sub_1002921D0(115, 2)) {
            return 0LL;
          }
          bzero(buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10188A8E0);
          }
          int v109 = 134349056;
          uint64_t v110 = v106;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%{public}.1lf, no DOT, priorCrumb location or course diverged",  &v109,  12);
          unint64_t v20 = (uint8_t *)v49;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLParticleMM::CLPedestrianMapMatcherFilter::generateDirectionOfTravelAssistance(const MMFilterD ata &, const MMSnapData &)",  "%s\n",  v49);
        }
      }
    }

    else
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      double v21 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)__n128 buf = 134349056;
        uint64_t v148 = v14;
        _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_ERROR,  "CLMMPED,%{public}.1lf,Unexpected,invalid bestParticle road,DOT",  buf,  0xCu);
      }

      if (!sub_1002921D0(115, 0)) {
        return 0LL;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188A8E0);
      }
      int v109 = 134349056;
      uint64_t v110 = v106;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%{public}.1lf,Unexpected,invalid bestParticle road,DOT",  &v109,  12);
      unint64_t v20 = (uint8_t *)v22;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLParticleMM::CLPedestrianMapMatcherFilter::generateDirectionOfTravelAssistance(const MMFilterData &, const MMSnapData &)",  "%s\n",  v22);
    }

void sub_100EC9FDC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, char a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, void *a36, uint64_t a37, uint64_t a38, void *a39, uint64_t a40, uint64_t a41, char a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,void *a56,uint64_t a57,uint64_t a58,void *a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
}

uint64_t sub_100ECA100(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 2248);
  if (v2)
  {
    *(void *)(a1 + 2256) = v2;
    operator delete(v2);
  }

  return sub_100D83054(a1);
}

void sub_100ECA130(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 2248);
  if (v2)
  {
    *(void *)(a1 + 2256) = v2;
    operator delete(v2);
  }

  uint64_t v3 = (void *)sub_100D83054(a1);
  operator delete(v3);
}

void sub_100ECA164(id a1)
{
  qword_1019348B8 = (uint64_t)os_log_create("com.apple.locationd.Position", "MapMatcher");
}

void sub_100ECA190(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_100ECA190(a1, *a2);
    sub_100ECA190(a1, a2[1]);
    sub_100ECA1D8((uint64_t)(a2 + 4));
    operator delete(a2);
  }

uint64_t sub_100ECA1D8(uint64_t a1)
{
  uint64_t v4 = (void **)(a1 + 1088);
  sub_100D73874(&v4);
  uint64_t v2 = *(void **)(a1 + 120);
  if (v2)
  {
    *(void *)(a1 + 128) = v2;
    operator delete(v2);
  }

  return sub_10000AE14(a1 + 32);
}

void *sub_100ECA24C(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    BOOL v6 = result;
    sub_10021195C(result, a4);
    double result = (void *)sub_100ECA2D0((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }

  return result;
}

void sub_100ECA2B0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_100D73874(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_100ECA2D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v11 = a4;
  uint64_t v12 = a4;
  v9[0] = a1;
  v9[1] = &v11;
  v9[2] = &v12;
  char v10 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      sub_100D73FA0(a1, v4, v6);
      v6 += 112LL;
      uint64_t v4 = v12 + 112;
      v12 += 112LL;
    }

    while (v6 != a3);
  }

  char v10 = 1;
  sub_100ECA378((uint64_t)v9);
  return v4;
}

void sub_100ECA364( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100ECA378(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24)) {
    sub_100ECA3AC((uint64_t *)a1);
  }
  return a1;
}

uint64_t *sub_100ECA3AC(uint64_t *result)
{
  uint64_t v2 = (uint64_t *)result[1];
  uint64_t v1 = (uint64_t *)result[2];
  uint64_t v3 = *v1;
  uint64_t v4 = *v2;
  if (*v1 != *v2)
  {
    uint64_t v5 = *result;
    do
    {
      v3 -= 112LL;
      double result = (uint64_t *)sub_100D738F8(v5, v3);
    }

    while (v3 != v4);
  }

  return result;
}

void sub_100ECA3FC(uint64_t a1)
{
  *(_BYTE *)(a1 + 48) = 0;
  sub_100ECB180((void **)a1);
  *(void *)a1 = 0LL;
  *(void *)(a1 + 8) = 0LL;
  *(void *)(a1 + 16) = 0LL;
  memset(v3, 0, sizeof(v3));
  uint64_t v4 = (void **)v3;
  sub_100D73874(&v4);
  uint64_t v2 = *(void **)(a1 + 24);
  if (v2)
  {
    *(void *)(a1 + 32) = v2;
    operator delete(v2);
  }

  *(void *)(a1 + 24) = 0LL;
  *(void *)(a1 + 32) = 0LL;
  *(void *)(a1 + 40) = 0LL;
  *(void *)(a1 + 56) = 0xBFF0000000000000LL;
}

void sub_100ECA46C(uint64_t a1)
{
  __int128 v2 = v21[2];
  *(_OWORD *)(a1 + 152) = v21[1];
  *(_OWORD *)(a1 + 168) = v2;
  *(void *)(a1 + 184) = v22;
  *(_OWORD *)(a1 + 192) = v23[0];
  *(_OWORD *)(a1 + 201) = *(_OWORD *)((char *)v23 + 9);
  uint64_t v3 = *(void **)(a1 + 224);
  if (v3)
  {
    *(void *)(a1 + 232) = v3;
    operator delete(v3);
  }

  *(_OWORD *)(a1 + 224) = *(_OWORD *)v24;
  *(void *)(a1 + 240) = v25;
  v24[1] = 0LL;
  uint64_t v25 = 0LL;
  v24[0] = 0LL;
  *(void *)(a1 + 248) = v26;
  sub_10005F550(a1 + 256, v27);
  __int128 v4 = v27[2];
  *(_OWORD *)(a1 + 272) = v27[1];
  *(_OWORD *)(a1 + 288) = v4;
  *(void *)(a1 + 304) = v28;
  *(_OWORD *)(a1 + 312) = v29[0];
  *(_OWORD *)(a1 + 321) = *(_OWORD *)((char *)v29 + 9);
  uint64_t v5 = *(void **)(a1 + 344);
  if (v5)
  {
    *(void *)(a1 + 352) = v5;
    operator delete(v5);
  }

  *(_OWORD *)(a1 + 344) = *(_OWORD *)v30;
  *(void *)(a1 + 360) = v31;
  v30[1] = 0LL;
  uint64_t v31 = 0LL;
  v30[0] = 0LL;
  *(_BYTE *)(a1 + 368) = v32;
  __int128 v6 = v38;
  *(_OWORD *)(a1 + 440) = v37;
  *(_OWORD *)(a1 + 456) = v6;
  __int128 v7 = v40;
  *(_OWORD *)(a1 + 472) = v39;
  *(_OWORD *)(a1 + 488) = v7;
  __int128 v8 = v34;
  *(_OWORD *)(a1 + 376) = v33;
  *(_OWORD *)(a1 + 392) = v8;
  __int128 v9 = v36;
  *(_OWORD *)(a1 + 408) = v35;
  *(_OWORD *)(a1 + 424) = v9;
  char v10 = (void **)(a1 + 504);
  *(_OWORD *)char v10 = *(_OWORD *)__p;
  *(void *)(a1 + 520) = v42;
  HIBYTE(v42) = 0;
  LOBYTE(__p[0]) = 0;
  memcpy((void *)(a1 + 528), v43, 0x118uLL);
  __int128 v11 = v45;
  *(_OWORD *)(a1 + 808) = v44;
  *(_OWORD *)(a1 + 824) = v11;
  *(_OWORD *)(a1 + 840) = v46;
  *(void *)(a1 + 856) = v47;
  sub_10005F550(a1 + 864, &v48);
  *(_OWORD *)(a1 + 880) = *(_OWORD *)v49;
  *(_DWORD *)(a1 + 895) = *(_DWORD *)&v49[15];
  uint64_t v12 = (std::__shared_weak_count *)*((void *)&v48 + 1);
  if (*((void *)&v48 + 1))
  {
    BOOL v13 = (unint64_t *)(*((void *)&v48 + 1) + 8LL);
    do
      unint64_t v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }

  if (SHIBYTE(v42) < 0) {
    operator delete(__p[0]);
  }
  if (v30[0])
  {
    v30[1] = v30[0];
    operator delete(v30[0]);
  }

  double v15 = (std::__shared_weak_count *)*((void *)&v27[0] + 1);
  if (*((void *)&v27[0] + 1))
  {
    double v16 = (unint64_t *)(*((void *)&v27[0] + 1) + 8LL);
    do
      unint64_t v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }

  if (v24[0])
  {
    v24[1] = v24[0];
    operator delete(v24[0]);
  }

  uint64_t v18 = (std::__shared_weak_count *)*((void *)&v21[0] + 1);
  if (*((void *)&v21[0] + 1))
  {
    double v19 = (unint64_t *)(*((void *)&v21[0] + 1) + 8LL);
    do
      unint64_t v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }

uint64_t sub_100ECA708(uint64_t a1)
{
  __int128 v2 = *(void **)(a1 + 344);
  if (v2)
  {
    *(void *)(a1 + 352) = v2;
    operator delete(v2);
  }

  sub_10000AE14(a1 + 256);
  uint64_t v3 = *(void **)(a1 + 224);
  if (v3)
  {
    *(void *)(a1 + 232) = v3;
    operator delete(v3);
  }

  sub_10000AE14(a1 + 136);
  sub_100ECA190(a1 + 112, *(void **)(a1 + 120));
  __int128 v4 = *(void **)(a1 + 64);
  if (v4)
  {
    *(void *)(a1 + 72) = v4;
    operator delete(v4);
  }

  __int128 v6 = (void **)(a1 + 40);
  sub_100D73874(&v6);
  return a1;
}

uint64_t sub_100ECA7B4(uint64_t a1, uint64_t a2, int a3, double a4)
{
  *(void *)a1 = 0LL;
  *(void *)(a1 + 8) = 0LL;
  *(void *)(a1 + 16) = 0LL;
  *(_OWORD *)(a1 + 24) = xmmword_1012E0070;
  *(_BYTE *)(a1 + 40) = 0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  __asm { FMOV            V1.2D, #-1.0 }

  *(_OWORD *)(a1 + 80) = _Q1;
  *(_OWORD *)(a1 + 96) = _Q1;
  *(_OWORD *)(a1 + 112) = _Q1;
  *(_OWORD *)(a1 + 128) = _Q1;
  *(void *)(a1 + 144) = 0xBFF0000000000000LL;
  *(_BYTE *)(a1 + 152) = 0;
  *(_OWORD *)(a1 + 160) = _Q1;
  *(_OWORD *)(a1 + 176) = _Q1;
  *(_OWORD *)(a1 + 192) = _Q1;
  sub_100EB27E0(a1, a2, a3, a4);
  return a1;
}

uint64_t **sub_100ECA818(uint64_t **result, void *a2, void *a3)
{
  uint64_t v5 = result;
  if (result[2])
  {
    __int128 v6 = *result;
    __int128 v7 = result[1];
    *double result = (uint64_t *)(result + 1);
    v7[2] = 0LL;
    result[1] = 0LL;
    result[2] = 0LL;
    if (v6[1]) {
      __int128 v8 = (uint64_t *)v6[1];
    }
    else {
      __int128 v8 = v6;
    }
    double v15 = result;
    double v16 = v8;
    unint64_t v17 = v8;
    if (v8)
    {
      double v16 = sub_100115560((uint64_t)v8);
      if (a2 != a3)
      {
        __int128 v9 = a2;
        do
        {
          __int128 v10 = *((_OWORD *)v9 + 2);
          *((_BYTE *)v8 + 48) = *((_BYTE *)v9 + 48);
          *((_OWORD *)v8 + 2) = v10;
          sub_100EAD158((uint64_t)(v8 + 7), (uint64_t)(v9 + 7));
          sub_100ECA98C(v5, v17);
          __int128 v8 = v16;
          unint64_t v17 = v16;
          if (v16) {
            double v16 = sub_100115560((uint64_t)v16);
          }
          __int128 v11 = (void *)v9[1];
          if (v11)
          {
            do
            {
              a2 = v11;
              __int128 v11 = (void *)*v11;
            }

            while (v11);
          }

          else
          {
            do
            {
              a2 = (void *)v9[2];
              BOOL v12 = *a2 == (void)v9;
              __int128 v9 = a2;
            }

            while (!v12);
          }

          if (!v8) {
            break;
          }
          __int128 v9 = a2;
        }

        while (a2 != a3);
      }
    }

    double result = (uint64_t **)sub_100ECAA10((uint64_t)&v15);
  }

  if (a2 != a3)
  {
    do
    {
      double result = (uint64_t **)sub_100ECAA64((uint64_t)v5, (uint64_t)(a2 + 4));
      BOOL v13 = (void *)a2[1];
      if (v13)
      {
        do
        {
          unint64_t v14 = v13;
          BOOL v13 = (void *)*v13;
        }

        while (v13);
      }

      else
      {
        do
        {
          unint64_t v14 = (void *)a2[2];
          BOOL v12 = *v14 == (void)a2;
          a2 = v14;
        }

        while (!v12);
      }

      a2 = v14;
    }

    while (v14 != a3);
  }

  return result;
}

void sub_100ECA978(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t *sub_100ECA98C(uint64_t **a1, uint64_t *a2)
{
  uint64_t v5 = a1 + 1;
  __int128 v4 = a1[1];
  if (v4)
  {
    do
    {
      while (1)
      {
        uint64_t v5 = (uint64_t **)v4;
        __int128 v4 = *v5;
        __int128 v6 = v5;
        if (!*v5) {
          goto LABEL_8;
        }
      }

      __int128 v4 = v5[1];
    }

    while (v4);
    __int128 v6 = v5 + 1;
  }

  else
  {
    __int128 v6 = a1 + 1;
  }

uint64_t sub_100ECAA10(uint64_t a1)
{
  __int128 v2 = *(void **)(a1 + 8);
  if (v2)
  {
    uint64_t v3 = (void *)v2[2];
    if (v3)
    {
      do
      {
        __int128 v2 = v3;
        uint64_t v3 = (void *)v3[2];
      }

      while (v3);
      *(void *)(a1 + 8) = v2;
    }

    sub_100ECA190(*(void *)a1, v2);
  }

  return a1;
}

uint64_t *sub_100ECAA64(uint64_t a1, uint64_t a2)
{
  __int128 v4 = (uint64_t **)(a1 + 8);
  uint64_t v3 = *(uint64_t **)(a1 + 8);
  if (v3)
  {
    uint64_t v5 = v9[0] + 4;
    do
    {
      while (1)
      {
        __int128 v4 = (uint64_t **)v3;
        uint64_t v3 = *v4;
        __int128 v6 = v4;
        if (!*v4) {
          goto LABEL_9;
        }
      }

      uint64_t v3 = v4[1];
    }

    while (v3);
    __int128 v6 = v4 + 1;
  }

  else
  {
    __int128 v6 = (uint64_t **)(a1 + 8);
  }

void sub_100ECAB0C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100ECAB24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  __int128 v6 = operator new(0x4B0uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  v6[2] = *(_OWORD *)a2;
  *((void *)v6 + 6) = *(void *)(a2 + 16);
  uint64_t result = sub_100ECAB9C((uint64_t)v6 + 56, a2 + 24);
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_100ECAB84(_Unwind_Exception *a1)
{
}

uint64_t sub_100ECAB9C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  if (v4)
  {
    uint64_t v5 = (unint64_t *)(v4 + 8);
    do
      unint64_t v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }

  __int128 v7 = *(_OWORD *)(a2 + 24);
  __int128 v8 = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 24) = v7;
  __int128 v9 = *(_OWORD *)(a2 + 64);
  __int128 v10 = *(_OWORD *)(a2 + 73);
  *(void *)(a1 + 96) = 0LL;
  *(_OWORD *)(a1 + 73) = v10;
  *(_OWORD *)(a1 + 64) = v9;
  *(void *)(a1 + 104) = 0LL;
  *(void *)(a1 + 112) = 0LL;
  sub_100BDD080( (void *)(a1 + 96),  *(const void **)(a2 + 96),  *(void *)(a2 + 104),  0x8E38E38E38E38E39LL * ((uint64_t)(*(void *)(a2 + 104) - *(void *)(a2 + 96)) >> 3));
  __int128 v11 = *(_OWORD *)(a2 + 120);
  __int128 v12 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = v12;
  *(_OWORD *)(a1 + 120) = v11;
  __int128 v13 = *(_OWORD *)(a2 + 248);
  __int128 v14 = *(_OWORD *)(a2 + 264);
  __int128 v15 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 264) = v14;
  *(_OWORD *)(a1 + 280) = v15;
  *(_OWORD *)(a1 + 248) = v13;
  __int128 v16 = *(_OWORD *)(a2 + 168);
  __int128 v17 = *(_OWORD *)(a2 + 184);
  __int128 v18 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 200) = v18;
  *(_OWORD *)(a1 + 184) = v17;
  *(_OWORD *)(a1 + 168) = v16;
  if (*(char *)(a2 + 319) < 0)
  {
    sub_1010DD48C((_BYTE *)(a1 + 296), *(void **)(a2 + 296), *(void *)(a2 + 304));
  }

  else
  {
    __int128 v19 = *(_OWORD *)(a2 + 296);
    *(void *)(a1 + 312) = *(void *)(a2 + 312);
    *(_OWORD *)(a1 + 296) = v19;
  }

  memcpy((void *)(a1 + 320), (const void *)(a2 + 320), 0x118uLL);
  __int128 v20 = *(_OWORD *)(a2 + 600);
  __int128 v21 = *(_OWORD *)(a2 + 616);
  __int128 v22 = *(_OWORD *)(a2 + 648);
  *(_OWORD *)(a1 + 632) = *(_OWORD *)(a2 + 632);
  *(_OWORD *)(a1 + 648) = v22;
  *(_OWORD *)(a1 + 600) = v20;
  *(_OWORD *)(a1 + 616) = v21;
  __int128 v23 = *(_OWORD *)(a2 + 664);
  __int128 v24 = *(_OWORD *)(a2 + 680);
  __int128 v25 = *(_OWORD *)(a2 + 712);
  *(_OWORD *)(a1 + 696) = *(_OWORD *)(a2 + 696);
  *(_OWORD *)(a1 + 712) = v25;
  *(_OWORD *)(a1 + 664) = v23;
  *(_OWORD *)(a1 + 680) = v24;
  if (*(char *)(a2 + 751) < 0)
  {
    sub_1010DD48C((_BYTE *)(a1 + 728), *(void **)(a2 + 728), *(void *)(a2 + 736));
  }

  else
  {
    __int128 v26 = *(_OWORD *)(a2 + 728);
    *(void *)(a1 + 744) = *(void *)(a2 + 744);
    *(_OWORD *)(a1 + 728) = v26;
  }

  memcpy((void *)(a1 + 752), (const void *)(a2 + 752), 0x118uLL);
  __int128 v27 = *(_OWORD *)(a2 + 1048);
  *(_OWORD *)(a1 + 1032) = *(_OWORD *)(a2 + 1032);
  *(_OWORD *)(a1 + 1048) = v27;
  *(void *)(a1 + 1064) = 0LL;
  *(void *)(a1 + 1080) = 0LL;
  *(void *)(a1 + 1072) = 0LL;
  sub_100ECA24C( (void *)(a1 + 1064),  *(void *)(a2 + 1064),  *(void *)(a2 + 1072),  0x6DB6DB6DB6DB6DB7LL * ((uint64_t)(*(void *)(a2 + 1072) - *(void *)(a2 + 1064)) >> 4));
  *(void *)(a1 + 1088) = *(void *)(a2 + 1088);
  uint64_t v28 = *(void *)(a2 + 1096);
  *(void *)(a1 + 1096) = v28;
  if (v28)
  {
    uint64_t v29 = (unint64_t *)(v28 + 8);
    do
      unint64_t v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
  }

  __int128 v31 = *(_OWORD *)(a2 + 1104);
  __int128 v32 = *(_OWORD *)(a2 + 1120);
  *(_DWORD *)(a1 + 1136) = *(_DWORD *)(a2 + 1136);
  *(_OWORD *)(a1 + 1120) = v32;
  *(_OWORD *)(a1 + 1104) = v31;
  return a1;
}

void sub_100ECADE4(_Unwind_Exception *a1)
{
}

void sub_100ECAE38(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16)) {
      sub_100ECA1D8((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }

char *sub_100ECAE7C(uint64_t a1, char *__src, char *a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = __src;
  unint64_t v6 = *(char **)(a1 + 8);
  uint64_t v8 = a1 + 16;
  unint64_t v7 = *(void *)(a1 + 16);
  if ((unint64_t)v6 >= v7)
  {
    __int128 v13 = *(char **)a1;
    unint64_t v14 = ((uint64_t)&v6[-*(void *)a1] >> 3) + 1;
    if (v14 >> 61) {
      sub_100007008();
    }
    uint64_t v15 = __src - v13;
    uint64_t v16 = (__src - v13) >> 3;
    uint64_t v17 = v7 - (void)v13;
    if (v17 >> 2 > v14) {
      unint64_t v14 = v17 >> 2;
    }
    else {
      unint64_t v18 = v14;
    }
    uint64_t v30 = a1 + 16;
    if (v18) {
      __int128 v19 = (char *)sub_1000071BC(a1 + 16, v18);
    }
    else {
      __int128 v19 = 0LL;
    }
    __int128 v20 = &v19[8 * v16];
    __int128 __p = v19;
    __int128 v27 = v20;
    uint64_t v28 = v20;
    uint64_t v29 = &v19[8 * v18];
    if (v16 == v18)
    {
      if (v15 < 1)
      {
        if (v13 == v4) {
          unint64_t v22 = 1LL;
        }
        else {
          unint64_t v22 = v15 >> 2;
        }
        __int128 v23 = (char *)sub_1000071BC(v8, v22);
        __int128 v20 = &v23[8 * (v22 >> 2)];
        __int128 __p = v23;
        __int128 v27 = v20;
        uint64_t v29 = &v23[8 * v24];
        if (v19) {
          operator delete(v19);
        }
      }

      else
      {
        unint64_t v21 = v16 + 2;
        if (v16 >= -1) {
          unint64_t v21 = v16 + 1;
        }
        v20 -= 8 * (v21 >> 1);
        __int128 v27 = v20;
      }
    }

    *(void *)__int128 v20 = *(void *)v3;
    uint64_t v28 = v20 + 8;
    uint64_t v4 = sub_100ECB0BC((void **)a1, (uint64_t)&__p, v4);
    if (v28 != v27) {
      v28 += (v27 - v28 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    }
    if (__p) {
      operator delete(__p);
    }
  }

  else if (__src == v6)
  {
    *(void *)__src = *(void *)a3;
    *(void *)(a1 + 8) = __src + 8;
  }

  else
  {
    __int128 v9 = __src + 8;
    __int128 v10 = v6 - 8;
    __int128 v11 = *(void **)(a1 + 8);
    while (v10 < v6)
    {
      uint64_t v12 = *(void *)v10;
      v10 += 8;
      *v11++ = v12;
    }

    *(void *)(a1 + 8) = v11;
    if (v6 != v9) {
      memmove(&v6[-8 * ((v6 - v9) >> 3)], __src, v6 - v9);
    }
    if (v4 <= v3) {
      v3 += 8 * (*(void *)(a1 + 8) > (unint64_t)v3);
    }
    *(void *)uint64_t v4 = *(void *)v3;
  }

  return v4;
}

void sub_100ECB084( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

char *sub_100ECB0BC(void **a1, uint64_t a2, char *__src)
{
  uint64_t v5 = *(char **)(a2 + 8);
  unint64_t v6 = (char *)*a1;
  unint64_t v7 = v5;
  if (*a1 != __src)
  {
    uint64_t v8 = __src;
    unint64_t v7 = *(char **)(a2 + 8);
    do
    {
      uint64_t v9 = *((void *)v8 - 1);
      v8 -= 8;
      *((void *)v7 - 1) = v9;
      v7 -= 8;
    }

    while (v8 != v6);
  }

  *(void *)(a2 + 8) = v7;
  __int128 v10 = a1[1];
  uint64_t v11 = *(void *)(a2 + 16);
  int64_t v12 = v10 - __src;
  if (v10 != __src)
  {
    memmove(*(void **)(a2 + 16), __src, v10 - __src);
    unint64_t v7 = *(char **)(a2 + 8);
  }

  *(void *)(a2 + 16) = v11 + v12;
  __int128 v13 = (char *)*a1;
  *a1 = v7;
  *(void *)(a2 + 8) = v13;
  unint64_t v14 = a1[1];
  a1[1] = *(void **)(a2 + 16);
  *(void *)(a2 + 16) = v14;
  uint64_t v15 = a1[2];
  a1[2] = *(void **)(a2 + 24);
  *(void *)(a2 + 24) = v15;
  *(void *)a2 = *(void *)(a2 + 8);
  return v5;
}

void sub_100ECB180(void **a1)
{
  uint64_t v1 = *a1;
  if (*a1)
  {
    uint64_t v3 = (uint64_t)a1[1];
    uint64_t v4 = *a1;
    if ((void *)v3 != v1)
    {
      do
      {
        v3 -= 112LL;
        sub_100D738F8((uint64_t)(a1 + 2), v3);
      }

      while ((void *)v3 != v1);
      uint64_t v4 = *a1;
    }

    a1[1] = v1;
    operator delete(v4);
    *a1 = 0LL;
    a1[1] = 0LL;
    a1[2] = 0LL;
  }

uint64_t *sub_100ECB1EC(uint64_t **a1, uint64_t a2, uint64_t a3, __int128 **a4)
{
  unint64_t v6 = (uint64_t **)sub_100D735E0((uint64_t)a1, &v11, a2);
  unint64_t v7 = *v6;
  if (!*v6)
  {
    uint64_t v8 = v6;
    sub_100ECB294((uint64_t)a1, a4, (uint64_t)v10);
    sub_1000085FC(a1, v11, v8, v10[0]);
    unint64_t v7 = v10[0];
    v10[0] = 0LL;
    sub_100ECAE38((uint64_t)v10, 0LL);
  }

  return v7;
}

uint64_t sub_100ECB294@<X0>(uint64_t a1@<X0>, __int128 **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  unint64_t v6 = operator new(0x4B0uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  uint64_t result = sub_100ECB2FC((uint64_t)v6 + 32, *a2);
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_100ECB2E4(_Unwind_Exception *a1)
{
}

uint64_t sub_100ECB2FC(uint64_t a1, __int128 *a2)
{
  __int128 v3 = *a2;
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(_OWORD *)a1 = v3;
  bzero((void *)(a1 + 48), 0x460uLL);
  *(void *)(a1 + 24) = 0xBFF0000000000000LL;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_DWORD *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 52) = 1;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_BYTE *)(a1 + 112) = 0;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_BYTE *)(a1 + 168) = 1;
  *(void *)(a1 + 184) = 0LL;
  *(_OWORD *)(a1 + 192) = 0u;
  __asm { FMOV            V1.2D, #-1.0 }

  *(_OWORD *)(a1 + 208) = _Q1;
  *(_OWORD *)(a1 + 224) = 0u;
  *(void *)(a1 + 240) = 0xBFF0000000000000LL;
  *(_WORD *)(a1 + 456) = 0;
  *(_OWORD *)(a1 + 424) = 0u;
  *(_OWORD *)(a1 + 440) = 0u;
  *(_OWORD *)(a1 + 480) = 0u;
  *(_OWORD *)(a1 + 496) = 0u;
  *(_OWORD *)(a1 + 512) = 0u;
  *(_OWORD *)(a1 + 528) = 0u;
  *(_OWORD *)(a1 + 539) = 0u;
  *(_OWORD *)(a1 + 560) = 0u;
  *(_OWORD *)(a1 + 576) = 0u;
  *(_OWORD *)(a1 + 592) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 280) = 0u;
  *(_OWORD *)(a1 + 296) = 0u;
  *(_OWORD *)(a1 + 312) = 0u;
  *(_OWORD *)(a1 + 328) = 0u;
  *(_OWORD *)(a1 + 344) = 0u;
  *(_OWORD *)(a1 + 360) = 0u;
  *(_OWORD *)(a1 + 376) = 0u;
  *(_OWORD *)(a1 + 392) = 0u;
  *(_OWORD *)(a1 + 406) = 0u;
  *(void *)(a1 + 616) = 0xBFF0000000000000LL;
  *(_OWORD *)(a1 + 624) = 0u;
  *(_OWORD *)(a1 + 640) = _Q1;
  *(_OWORD *)(a1 + 656) = 0u;
  *(void *)(a1 + 672) = 0xBFF0000000000000LL;
  *(_WORD *)(a1 + 888) = 0;
  *(_OWORD *)(a1 + 856) = 0u;
  *(_OWORD *)(a1 + 872) = 0u;
  *(_OWORD *)(a1 + 971) = 0u;
  *(_OWORD *)(a1 + 944) = 0u;
  *(_OWORD *)(a1 + 960) = 0u;
  *(_OWORD *)(a1 + 912) = 0u;
  *(_OWORD *)(a1 + 928) = 0u;
  *(_OWORD *)(a1 + 1008) = 0u;
  *(_OWORD *)(a1 + 1024) = 0u;
  *(_OWORD *)(a1 + 992) = 0u;
  *(_OWORD *)(a1 + 680) = 0u;
  *(_OWORD *)(a1 + 696) = 0u;
  *(_OWORD *)(a1 + 712) = 0u;
  *(_OWORD *)(a1 + 728) = 0u;
  *(_OWORD *)(a1 + 744) = 0u;
  *(_OWORD *)(a1 + 760) = 0u;
  *(_OWORD *)(a1 + 776) = 0u;
  *(_OWORD *)(a1 + 792) = 0u;
  *(_OWORD *)(a1 + 808) = 0u;
  *(_OWORD *)(a1 + 824) = 0u;
  *(_OWORD *)(a1 + 838) = 0u;
  *(void *)(a1 + 1048) = 0xBFF0000000000000LL;
  *(void *)(a1 + 1056) = 0x3FF0000000000000LL;
  *(_OWORD *)(a1 + 1136) = 0u;
  *(_DWORD *)(a1 + 1128) = 0;
  *(_OWORD *)(a1 + 1112) = 0u;
  *(_OWORD *)(a1 + 1096) = 0u;
  *(_OWORD *)(a1 + 1080) = 0u;
  *(_OWORD *)(a1 + 1064) = 0u;
  *(_BYTE *)(a1 + 1152) = 1;
  *(_DWORD *)(a1 + 1160) = -1;
  return a1;
}

uint64_t sub_100ECB440(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = a1 + 16;
  uint64_t v9 = *(void **)a1;
  if (0x6DB6DB6DB6DB6DB7LL * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 4) < a4)
  {
    sub_100ECB180((void **)a1);
    if (a4 > 0x249249249249249LL) {
      sub_100007008();
    }
    unint64_t v10 = 0xDB6DB6DB6DB6DB6ELL * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 4);
    if (v10 <= a4) {
      unint64_t v10 = a4;
    }
    else {
      unint64_t v11 = v10;
    }
    sub_10021195C((void *)a1, v11);
    uint64_t result = sub_100ECA2D0(v8, a2, a3, *(void *)(a1 + 8));
    goto LABEL_11;
  }

  if (0x6DB6DB6DB6DB6DB7LL * ((uint64_t)(*(void *)(a1 + 8) - (void)v9) >> 4) < a4)
  {
    uint64_t v13 = a2 + 16 * ((uint64_t)(*(void *)(a1 + 8) - (void)v9) >> 4);
    sub_100ECB5E0((uint64_t)&v17, a2, v13, (uint64_t)v9);
    uint64_t result = sub_100ECA2D0(v8, v13, a3, *(void *)(a1 + 8));
LABEL_11:
    *(void *)(a1 + 8) = result;
    return result;
  }

  uint64_t result = sub_100ECB5E0((uint64_t)&v18, a2, a3, (uint64_t)v9);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16 != v14)
  {
    do
    {
      v16 -= 112LL;
      uint64_t result = sub_100D738F8(v8, v16);
    }

    while (v16 != v15);
  }

  *(void *)(a1 + 8) = v15;
  return result;
}

void sub_100ECB5D0(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_100ECB5D8(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_100ECB5E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a2;
  if (a2 == a3) {
    return a2;
  }
  uint64_t v6 = a3;
  do
  {
    sub_1000F2F30((void *)a4, (uint64_t *)v5);
    uint64_t v7 = *(void *)(v5 + 48);
    __int128 v8 = *(_OWORD *)(v5 + 32);
    *(_OWORD *)(a4 + 16) = *(_OWORD *)(v5 + 16);
    *(_OWORD *)(a4 + 32) = v8;
    *(void *)(a4 + 48) = v7;
    __int128 v9 = *(_OWORD *)(v5 + 56);
    *(_OWORD *)(a4 + 65) = *(_OWORD *)(v5 + 65);
    *(_OWORD *)(a4 + 56) = v9;
    if (a4 != v5) {
      sub_100BDD0F8( (char *)(a4 + 88),  *(char **)(v5 + 88),  *(void *)(v5 + 96),  0x8E38E38E38E38E39LL * ((uint64_t)(*(void *)(v5 + 96) - *(void *)(v5 + 88)) >> 3));
    }
    a4 += 112LL;
    v5 += 112LL;
  }

  while (v5 != v6);
  return v6;
}

uint64_t sub_100ECB690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a2;
  if (a2 == a3) {
    return a2;
  }
  uint64_t v6 = a3;
  do
  {
    sub_10005F550(a4, (__int128 *)v5);
    uint64_t v7 = *(void *)(v5 + 48);
    __int128 v8 = *(_OWORD *)(v5 + 32);
    *(_OWORD *)(a4 + 16) = *(_OWORD *)(v5 + 16);
    *(_OWORD *)(a4 + 32) = v8;
    *(void *)(a4 + 48) = v7;
    __int128 v9 = *(_OWORD *)(v5 + 56);
    *(_OWORD *)(a4 + 65) = *(_OWORD *)(v5 + 65);
    *(_OWORD *)(a4 + 56) = v9;
    sub_100007664(a4 + 88, (__n128 *)(v5 + 88));
    a4 += 112LL;
    v5 += 112LL;
  }

  while (v5 != v6);
  return v6;
}

uint64_t sub_100ECB71C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = a2;
  if (a5 >= 1)
  {
    uint64_t v7 = a3;
    uint64_t v11 = a1[2];
    uint64_t v9 = (uint64_t)(a1 + 2);
    uint64_t v10 = v11;
    unint64_t v12 = *(void *)(v9 - 8);
    if (0x6DB6DB6DB6DB6DB7LL * ((uint64_t)(v11 - v12) >> 4) >= a5)
    {
      uint64_t v20 = v12 - a2;
      if (0x6DB6DB6DB6DB6DB7LL * ((uint64_t)(v12 - a2) >> 4) >= a5)
      {
        uint64_t v21 = a3 + 112 * a5;
      }

      else
      {
        uint64_t v21 = a3 + 16 * ((uint64_t)(v12 - a2) >> 4);
        a1[1] = sub_100ECBA84(v9, v21, a4, *(void *)(v9 - 8));
        if (v20 < 1) {
          return v5;
        }
      }

      sub_100ECB92C((uint64_t)a1, v5, v12, v5 + 112 * a5);
      sub_100ECB5E0((uint64_t)v26, v7, v21, v5);
    }

    else
    {
      uint64_t v13 = *a1;
      unint64_t v14 = a5 + 0x6DB6DB6DB6DB6DB7LL * ((uint64_t)(v12 - *a1) >> 4);
      if (v14 > 0x249249249249249LL) {
        sub_100007008();
      }
      uint64_t v15 = 0x6DB6DB6DB6DB6DB7LL * ((a2 - v13) >> 4);
      unint64_t v16 = 0x6DB6DB6DB6DB6DB7LL * ((v10 - v13) >> 4);
      uint64_t v17 = 2 * v16;
      if (2 * v16 <= v14) {
        uint64_t v17 = v14;
      }
      if (v16 >= 0x124924924924924LL) {
        unint64_t v18 = 0x249249249249249LL;
      }
      else {
        unint64_t v18 = v17;
      }
      uint64_t v29 = v9;
      if (v18) {
        __int128 v19 = (char *)sub_10005057C(v9, v18);
      }
      else {
        __int128 v19 = 0LL;
      }
      unint64_t v22 = &v19[112 * v15];
      v26[0] = v19;
      v26[1] = v22;
      __int128 v27 = v22;
      uint64_t v28 = &v19[112 * v18];
      uint64_t v23 = 112 * a5;
      uint64_t v24 = &v22[112 * a5];
      do
      {
        sub_100D73FA0(v29, (uint64_t)v22, v7);
        v22 += 112;
        v7 += 112LL;
        v23 -= 112LL;
      }

      while (v23);
      __int128 v27 = v24;
      uint64_t v5 = sub_100ECB9D4(a1, v26, v5);
      sub_100D74204(v26);
    }
  }

  return v5;
}

void sub_100ECB900( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12)
{
  *(void *)(v12 + 8) = v13;
  _Unwind_Resume(exception_object);
}

uint64_t sub_100ECB92C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = a2 + v6 - a4;
  uint64_t v8 = v6;
  if (v7 < a3)
  {
    unint64_t v9 = v7;
    uint64_t v8 = *(void *)(a1 + 8);
    do
    {
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      *(void *)unint64_t v9 = 0LL;
      *(void *)(v9 + 8) = 0LL;
      __int128 v10 = *(_OWORD *)(v9 + 16);
      __int128 v11 = *(_OWORD *)(v9 + 32);
      *(void *)(v8 + 48) = *(void *)(v9 + 48);
      *(_OWORD *)(v8 + 16) = v10;
      *(_OWORD *)(v8 + 32) = v11;
      __int128 v12 = *(_OWORD *)(v9 + 56);
      *(_OWORD *)(v8 + 65) = *(_OWORD *)(v9 + 65);
      *(_OWORD *)(v8 + 56) = v12;
      *(void *)(v8 + 96) = 0LL;
      *(void *)(v8 + 104) = 0LL;
      *(void *)(v8 + 88) = 0LL;
      *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
      *(void *)(v8 + 104) = *(void *)(v9 + 104);
      *(void *)(v9 + 88) = 0LL;
      *(void *)(v9 + 96) = 0LL;
      *(void *)(v9 + 104) = 0LL;
      v8 += 112LL;
      v9 += 112LL;
    }

    while (v9 < a3);
  }

  *(void *)(a1 + 8) = v8;
  return sub_100ECBB2C((uint64_t)&v14, a2, v7, v6);
}

uint64_t sub_100ECB9D4(uint64_t *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  uint64_t v7 = (uint64_t)(a1 + 2);
  sub_100D740B4((uint64_t)(a1 + 2), a3, a3, *a1, *a1, v6, v6);
  a2[1] = v8;
  a2[2] = sub_100ECBBC8(v7, a3, a1[1], a2[2]);
  uint64_t v9 = *a1;
  *a1 = a2[1];
  a2[1] = v9;
  uint64_t v10 = a1[1];
  a1[1] = a2[2];
  a2[2] = v10;
  uint64_t v11 = a1[2];
  a1[2] = a2[3];
  a2[3] = v11;
  *a2 = a2[1];
  return v6;
}

uint64_t sub_100ECBA84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v11 = a4;
  uint64_t v12 = a4;
  v9[0] = a1;
  v9[1] = &v11;
  v9[2] = &v12;
  char v10 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      sub_100D73FA0(a1, v4, v6);
      v6 += 112LL;
      uint64_t v4 = v12 + 112;
      v12 += 112LL;
    }

    while (v6 != a3);
  }

  char v10 = 1;
  sub_100ECA378((uint64_t)v9);
  return v4;
}

void sub_100ECBB18( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100ECBB2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3 != a2)
  {
    uint64_t v7 = 0LL;
    do
    {
      uint64_t v8 = a4 + v7;
      sub_10005F550(a4 + v7 - 112, (__int128 *)(a3 + v7 - 112));
      uint64_t v9 = *(void *)(a3 + v7 - 64);
      __int128 v10 = *(_OWORD *)(a3 + v7 - 80);
      *(_OWORD *)(v8 - 96) = *(_OWORD *)(a3 + v7 - 96);
      *(_OWORD *)(v8 - 80) = v10;
      *(void *)(v8 - 64) = v9;
      __int128 v11 = *(_OWORD *)(a3 + v7 - 56);
      *(_OWORD *)(v8 - 47) = *(_OWORD *)(a3 + v7 - 47);
      *(_OWORD *)(v8 - 56) = v11;
      sub_100007664(a4 + v7 - 24, (__n128 *)(a3 + v7 - 24));
      v7 -= 112LL;
    }

    while (a3 + v7 != a2);
  }

  return a3;
}

uint64_t sub_100ECBBC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v12 = a4;
  uint64_t v11 = a4;
  v9[0] = a1;
  v9[1] = &v11;
  v9[2] = &v12;
  if (a2 != a3)
  {
    do
    {
      *(_OWORD *)uint64_t v4 = *(_OWORD *)a2;
      *(void *)a2 = 0LL;
      *(void *)(a2 + 8) = 0LL;
      __int128 v5 = *(_OWORD *)(a2 + 16);
      __int128 v6 = *(_OWORD *)(a2 + 32);
      *(void *)(v4 + 48) = *(void *)(a2 + 48);
      *(_OWORD *)(v4 + 16) = v5;
      *(_OWORD *)(v4 + 32) = v6;
      __int128 v7 = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(v4 + 65) = *(_OWORD *)(a2 + 65);
      *(_OWORD *)(v4 + 56) = v7;
      *(void *)(v4 + 96) = 0LL;
      *(void *)(v4 + 104) = 0LL;
      *(void *)(v4 + 88) = 0LL;
      *(_OWORD *)(v4 + 88) = *(_OWORD *)(a2 + 88);
      *(void *)(v4 + 104) = *(void *)(a2 + 104);
      *(void *)(a2 + 88) = 0LL;
      *(void *)(a2 + 96) = 0LL;
      *(void *)(a2 + 104) = 0LL;
      v4 += 112LL;
      a2 += 112LL;
    }

    while (a2 != a3);
    uint64_t v12 = v4;
  }

  char v10 = 1;
  sub_100ECA378((uint64_t)v9);
  return v4;
}

uint64_t sub_100ECBC80(uint64_t *a1, void *a2)
{
  return sub_100C37EE4((uint64_t)a1, a1, a2);
}

uint64_t *sub_100ECBCB8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2;
  __int128 v6 = (uint64_t *)a1[1];
  if (a2 != a3 && v6 != a1)
  {
    do
    {
      uint64_t v7 = *(void *)(v4 + 16);
      *((_WORD *)v6 + 12) = *(_WORD *)(v4 + 24);
      v6[2] = v7;
      sub_1000F2F30(v6 + 4, (uint64_t *)(v4 + 32));
      v6[6] = *(void *)(v4 + 48);
      uint64_t v4 = *(void *)(v4 + 8);
      __int128 v6 = (uint64_t *)v6[1];
    }

    while (v4 != a3 && v6 != a1);
  }

  if (v6 == a1) {
    return sub_100ECBD60((uint64_t)a1, a1, v4, a3);
  }
  else {
    return sub_100ECBEB8((uint64_t)a1, v6, a1);
  }
}

uint64_t *sub_100ECBD60(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  if (a3 != a4)
  {
    uint64_t v8 = operator new(0x38uLL);
    uint64_t v9 = v8;
    *uint64_t v8 = 0LL;
    v8[1] = 0LL;
    uint64_t v10 = *(void *)(a3 + 16);
    *((_WORD *)v8 + 12) = *(_WORD *)(a3 + 24);
    v8[2] = v10;
    uint64_t v11 = *(void *)(a3 + 40);
    v8[4] = *(void *)(a3 + 32);
    v8[5] = v11;
    if (v11)
    {
      uint64_t v12 = (unint64_t *)(v11 + 8);
      do
        unint64_t v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
    }

    v8[6] = *(void *)(a3 + 48);
    uint64_t v14 = *(void *)(a3 + 8);
    uint64_t v15 = 1LL;
    if (v14 != a4)
    {
      unint64_t v16 = v8;
      do
      {
        uint64_t v8 = operator new(0x38uLL);
        *uint64_t v8 = v16;
        v8[1] = 0LL;
        uint64_t v17 = *(void *)(v14 + 16);
        *((_WORD *)v8 + 12) = *(_WORD *)(v14 + 24);
        v8[2] = v17;
        uint64_t v18 = *(void *)(v14 + 40);
        v8[4] = *(void *)(v14 + 32);
        v8[5] = v18;
        if (v18)
        {
          __int128 v19 = (unint64_t *)(v18 + 8);
          do
            unint64_t v20 = __ldxr(v19);
          while (__stxr(v20 + 1, v19));
        }

        v8[6] = *(void *)(v14 + 48);
        v16[1] = v8;
        ++v15;
        uint64_t v14 = *(void *)(v14 + 8);
        unint64_t v16 = v8;
      }

      while (v14 != a4);
    }

    uint64_t v21 = *a2;
    *(void *)(v21 + 8) = v9;
    void *v9 = v21;
    *a2 = (uint64_t)v8;
    v8[1] = a2;
    *(void *)(a1 + 16) += v15;
    return v9;
  }

  return a2;
}

void sub_100ECBE90(void *a1)
{
}

void sub_100ECBEA4(_Unwind_Exception *a1)
{
}

void *sub_100ECBEB8(uint64_t a1, void *a2, void *a3)
{
  if (a2 != a3)
  {
    uint64_t v4 = a2;
    uint64_t v6 = *a3;
    uint64_t v7 = *a2;
    *(void *)(v7 + 8) = *(void *)(*a3 + 8LL);
    **(void **)(v6 + 8) = v7;
    do
    {
      uint64_t v8 = (void *)v4[1];
      --*(void *)(a1 + 16);
      sub_10000AE14((uint64_t)(v4 + 4));
      operator delete(v4);
      uint64_t v4 = v8;
    }

    while (v8 != a3);
  }

  return a3;
}

void sub_100ECBF34(void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    sub_100ECBF74((uint64_t *)v2);
    operator delete(**a1);
  }

void sub_100ECBF74(uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 64LL)
  {
    uint64_t v4 = *(void **)(i - 56);
    if (v4)
    {
      *(void *)(i - 48) = v4;
      operator delete(v4);
    }
  }

  a1[1] = v2;
}

uint64_t sub_100ECBFC0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = a2;
  if (a5 >= 1)
  {
    uint64_t v7 = a3;
    uint64_t v11 = a1[2];
    uint64_t v9 = (uint64_t)(a1 + 2);
    uint64_t v10 = v11;
    unint64_t v12 = *(void *)(v9 - 8);
    if (a5 <= (uint64_t)(v11 - v12) >> 6)
    {
      uint64_t v19 = v12 - a2;
      uint64_t v20 = (uint64_t)(v12 - a2) >> 6;
      if (v20 >= a5)
      {
        uint64_t v21 = a3 + (a5 << 6);
      }

      else
      {
        uint64_t v21 = a3 + (v20 << 6);
        a1[1] = sub_100ECC2AC(v9, v21, a4, *(void *)(v9 - 8));
        if (v19 < 1) {
          return v5;
        }
      }

      sub_100ECC168((uint64_t)a1, v5, v12, v5 + (a5 << 6));
      sub_100ECC454((uint64_t)v26, v7, v21, v5);
    }

    else
    {
      uint64_t v13 = *a1;
      unint64_t v14 = a5 + ((uint64_t)(v12 - *a1) >> 6);
      if (v14 >> 58) {
        sub_100007008();
      }
      uint64_t v15 = (a2 - v13) >> 6;
      uint64_t v16 = v10 - v13;
      if (v16 >> 5 > v14) {
        unint64_t v14 = v16 >> 5;
      }
      else {
        unint64_t v17 = v14;
      }
      uint64_t v29 = v9;
      if (v17) {
        uint64_t v18 = (char *)sub_10001275C(v9, v17);
      }
      else {
        uint64_t v18 = 0LL;
      }
      uint64_t v22 = (uint64_t)&v18[64 * v15];
      v26[0] = v18;
      v26[1] = v22;
      uint64_t v27 = v22;
      uint64_t v28 = &v18[64 * v17];
      uint64_t v23 = a5 << 6;
      uint64_t v24 = v22 + (a5 << 6);
      do
      {
        sub_10097E0CC(v29, v22, v7);
        v22 += 64LL;
        v7 += 64LL;
        v23 -= 64LL;
      }

      while (v23);
      uint64_t v27 = v24;
      uint64_t v5 = sub_100ECC1FC(a1, v26, v5);
      sub_10097E364((uint64_t)v26);
    }
  }

  return v5;
}

void sub_100ECC13C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12)
{
  *(void *)(v12 + 8) = v13;
  _Unwind_Resume(exception_object);
}

uint64_t sub_100ECC168(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = a2 + v6 - a4;
  uint64_t v8 = v6;
  if (v7 < a3)
  {
    unint64_t v9 = v7;
    uint64_t v8 = *(void *)(a1 + 8);
    do
    {
      *(void *)uint64_t v8 = *(void *)v9;
      *(void *)(v8 + 16) = 0LL;
      *(void *)(v8 + 24) = 0LL;
      *(void *)(v8 + 8) = 0LL;
      *(_OWORD *)(v8 + 8) = *(_OWORD *)(v9 + 8);
      *(void *)(v8 + 24) = *(void *)(v9 + 24);
      *(void *)(v9 + 8) = 0LL;
      *(void *)(v9 + 16) = 0LL;
      *(void *)(v9 + 24) = 0LL;
      *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
      *(_OWORD *)(v8 + 48) = *(_OWORD *)(v9 + 48);
      v8 += 64LL;
      v9 += 64LL;
    }

    while (v9 < a3);
  }

  *(void *)(a1 + 8) = v8;
  return sub_100ECC3CC((uint64_t)&v11, a2, v7, v6);
}

uint64_t sub_100ECC1FC(uint64_t *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  uint64_t v7 = (uint64_t)(a1 + 2);
  sub_10097E224((uint64_t)(a1 + 2), a3, a3, *a1, *a1, v6, v6);
  a2[1] = v8;
  a2[2] = sub_100ECC654(v7, a3, a1[1], a2[2]);
  uint64_t v9 = *a1;
  *a1 = a2[1];
  a2[1] = v9;
  uint64_t v10 = a1[1];
  a1[1] = a2[2];
  a2[2] = v10;
  uint64_t v11 = a1[2];
  a1[2] = a2[3];
  a2[3] = v11;
  *a2 = a2[1];
  return v6;
}

uint64_t sub_100ECC2AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v11 = a4;
  uint64_t v12 = a4;
  v9[0] = a1;
  v9[1] = &v11;
  v9[2] = &v12;
  char v10 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      sub_10097E0CC(a1, v4, v6);
      v6 += 64LL;
      uint64_t v4 = v12 + 64;
      v12 += 64LL;
    }

    while (v6 != a3);
  }

  char v10 = 1;
  sub_100ECC354((uint64_t)v9);
  return v4;
}

void sub_100ECC340( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100ECC354(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24)) {
    sub_100ECC388(a1);
  }
  return a1;
}

void sub_100ECC388(uint64_t a1)
{
  uint64_t v1 = **(void **)(a1 + 16);
  uint64_t v2 = **(void **)(a1 + 8);
  while (v1 != v2)
  {
    __int128 v3 = *(void **)(v1 - 56);
    if (v3)
    {
      *(void *)(v1 - 48) = v3;
      operator delete(v3);
    }

    v1 -= 64LL;
  }

uint64_t sub_100ECC3CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3 != a2)
  {
    uint64_t v7 = 0LL;
    do
    {
      uint64_t v8 = a4 + v7;
      *(void *)(a4 + v7 - 64) = *(void *)(a3 + v7 - 64);
      sub_100007664(a4 + v7 - 56, (__n128 *)(a3 + v7 - 56));
      *(_OWORD *)(v8 - 32) = *(_OWORD *)(a3 + v7 - 32);
      *(_OWORD *)(v8 - 16) = *(_OWORD *)(a3 + v7 - 16);
      v7 -= 64LL;
    }

    while (a3 + v7 != a2);
  }

  return a3;
}

uint64_t sub_100ECC454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 == a3) {
    return a2;
  }
  uint64_t v5 = a3;
  uint64_t v6 = a2 + 16;
  do
  {
    uint64_t v7 = v6 - 16;
    *(void *)a4 = *(void *)(v6 - 16);
    if (a4 != v6 - 16) {
      sub_100ECC4E4( (void *)(a4 + 8),  *(void **)(v6 - 8),  *(void **)v6,  (uint64_t)(*(void *)v6 - *(void *)(v6 - 8)) >> 4);
    }
    *(_OWORD *)(a4 + 32) = *(_OWORD *)(v6 + 16);
    *(_OWORD *)(a4 + 48) = *(_OWORD *)(v6 + 32);
    a4 += 64LL;
    v6 += 64LL;
  }

  while (v7 + 64 != v5);
  return v5;
}

char *sub_100ECC4E4(void *a1, void *a2, void *a3, unint64_t a4)
{
  uint64_t v6 = a2;
  uint64_t v8 = a1[2];
  uint64_t result = (char *)*a1;
  if (a4 <= (v8 - (uint64_t)result) >> 4)
  {
    unint64_t v17 = (char *)a1[1];
    uint64_t v13 = a1 + 1;
    uint64_t v12 = v17;
    unint64_t v18 = (v17 - result) >> 4;
    if (v18 >= a4)
    {
      uint64_t v24 = result;
      if (a2 != a3)
      {
        __int128 v25 = result;
        do
        {
          __int128 v26 = *(_OWORD *)v6;
          v6 += 2;
          *(_OWORD *)__int128 v25 = v26;
          v25 += 16;
          v24 += 16;
        }

        while (v6 != a3);
      }

      uint64_t v16 = (char *)(v24 - result);
      uint64_t v12 = result;
    }

    else
    {
      uint64_t v19 = &a2[2 * v18];
      if (v12 != result)
      {
        uint64_t v20 = 16 * v18;
        do
        {
          __int128 v21 = *(_OWORD *)v6;
          v6 += 2;
          *(_OWORD *)uint64_t result = v21;
          result += 16;
          v20 -= 16LL;
        }

        while (v20);
      }

      uint64_t v22 = v12;
      if (v19 != a3)
      {
        uint64_t v23 = v12;
        do
        {
          *(void *)uint64_t v23 = *v19;
          *((void *)v23 + 1) = v19[1];
          v22 += 16;
          v19 += 2;
          v23 += 16;
        }

        while (v19 != a3);
      }

      uint64_t v16 = (char *)(v22 - v12);
    }
  }

  else
  {
    if (result)
    {
      a1[1] = result;
      operator delete(result);
      uint64_t v8 = 0LL;
      *a1 = 0LL;
      a1[1] = 0LL;
      a1[2] = 0LL;
    }

    if (a4 >> 60) {
      sub_100007008();
    }
    uint64_t v10 = v8 >> 3;
    if (v8 >> 3 <= a4) {
      uint64_t v10 = a4;
    }
    else {
      unint64_t v11 = v10;
    }
    uint64_t result = sub_10005782C(a1, v11);
    unint64_t v14 = (char *)a1[1];
    uint64_t v13 = a1 + 1;
    uint64_t v12 = v14;
    uint64_t v15 = v14;
    if (v6 != a3)
    {
      uint64_t v15 = v12;
      do
      {
        *(void *)uint64_t v15 = *v6;
        *((void *)v15 + 1) = v6[1];
        v15 += 16;
        v6 += 2;
      }

      while (v6 != a3);
    }

    uint64_t v16 = (char *)(v15 - v12);
  }

  *uint64_t v13 = &v16[(void)v12];
  return result;
}

uint64_t sub_100ECC654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v11 = a4;
  uint64_t v12 = a4;
  v9[0] = a1;
  v9[1] = &v11;
  v9[2] = &v12;
  char v10 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      sub_10097E0CC(a1, v4, v6);
      v6 += 64LL;
      uint64_t v4 = v12 + 64;
      v12 += 64LL;
    }

    while (v6 != a3);
  }

  char v10 = 1;
  sub_100ECC354((uint64_t)v9);
  return v4;
}

void sub_100ECC6E8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t *sub_100ECC814(uint64_t *a1, unsigned int a2)
{
  *a1 = 0LL;
  if (a2)
  {
    uint64_t v4 = operator new(0x40uLL);
    sub_100973E40(v4, a2);
    uint64_t v5 = *a1;
    *a1 = (uint64_t)v4;
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
    }
  }

  else
  {
    uint64_t v6 = operator new(8uLL);
    void *v6 = &off_101862BD0;
    *a1 = (uint64_t)v6;
  }

  return a1;
}

void sub_100ECC894(_Unwind_Exception *exception_object)
{
  void *v1 = 0LL;
  _Unwind_Resume(exception_object);
}

uint64_t *sub_100ECC8D0(uint64_t *a1)
{
  return sub_100ECC814(a1, 0xC8u);
}

uint64_t *sub_100ECC8D8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  return a1;
}

void sub_100ECC910( void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, void *a5@<X8>, double a6@<D0>)
{
  uint64_t v7 = a2[1];
  if (*a2 == v7)
  {
    *a5 = 0LL;
    a5[1] = 0LL;
    a5[2] = 0LL;
  }

  else
  {
    sub_100ECD714(a5, (v7 - *a2) >> 3);
    char v84 = a1;
    (*(void (**)(uint64_t *__return_ptr, void, uint64_t *))(*(void *)*a1 + 16LL))(&v96, *a1, a2);
    uint64_t v12 = *a2;
    if (a2[1] != *a2)
    {
      uint64_t v13 = 0LL;
      uint64_t v14 = 0LL;
      unint64_t v15 = 0LL;
      do
      {
        uint64_t v16 = (void *)(v12 + v14);
        if (&v102 != sub_1002FB09C((uint64_t)&v101, (void *)(v12 + v14)))
        {
          uint64_t v17 = sub_1002FAEF4((uint64_t)&v101, v16);
          uint64_t v18 = *a5 + v13;
          if (*(_BYTE *)(v18 + 20))
          {
            uint64_t v19 = *(void *)v17;
            *(_WORD *)(v18 + 8) = *(_WORD *)(v17 + 8);
            *(void *)uint64_t v18 = v19;
            *(void *)(v18 + 12) = *(void *)(v17 + 12);
          }

          else
          {
            __int128 v20 = *(_OWORD *)v17;
            *(_DWORD *)(v18 + 16) = *(_DWORD *)(v17 + 16);
            *(_OWORD *)uint64_t v18 = v20;
            *(_BYTE *)(v18 + 20) = 1;
          }
        }

        ++v15;
        uint64_t v12 = *a2;
        v14 += 8LL;
        v13 += 24LL;
      }

      while (v15 < (a2[1] - *a2) >> 3);
    }

    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10188A900);
    }
    uint64_t p_vtable = (uint64_t)&OBJC_METACLASS___CLPrivacyManager.vtable;
    uint64_t v22 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
    {
      unint64_t v23 = (unint64_t)(a2[1] - *a2) >> 3;
      *(_DWORD *)__n128 buf = 67240960;
      *(_DWORD *)&uint8_t buf[4] = v23;
      __int16 v112 = 1026;
      int v113 = v103;
      __int16 v114 = 1026;
      int v115 = v100;
      __int16 v116 = 1026;
      int v117 = v98;
      _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEBUG,  "#wifitilecentroids, read cache, %{public}d, in_tiles, %{public}d, not_in_tiles, %{public}d, not_found, %{public}d",  buf,  0x1Au);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 == -1) {
        goto LABEL_101;
      }
      goto LABEL_116;
    }

    while (1)
    {
      __int128 __p = 0LL;
      int v109 = 0LL;
      v110[0] = 0LL;
      __int128 v93 = 0LL;
      uint64_t v94 = 0LL;
      char v95 = 0LL;
      uint64_t v24 = *a2;
      if (a2[1] == *a2) {
        break;
      }
      unint64_t v82 = a4;
      a4 = 0LL;
      uint64_t p_vtable = 0x7FFFFFFFFFFFFFF8LL;
      do
      {
        __int128 v25 = (void *)(v24 + 8 * a4);
        if (&v97 != sub_1002FB09C((uint64_t)&v96, v25))
        {
          __int128 v26 = v109;
          if ((unint64_t)v109 >= v110[0])
          {
            uint64_t v28 = (char *)__p;
            uint64_t v29 = (v109 - (_BYTE *)__p) >> 3;
            unint64_t v30 = v29 + 1;
            uint64_t v31 = v110[0] - (void)__p;
            else {
              unint64_t v32 = v30;
            }
            if (v32)
            {
              __int128 v33 = (char *)sub_1000071BC((uint64_t)v110, v32);
              uint64_t v28 = (char *)__p;
              __int128 v26 = v109;
            }

            else
            {
              __int128 v33 = 0LL;
            }

            __int128 v34 = &v33[8 * v29];
            *(void *)__int128 v34 = *v25;
            uint64_t v27 = v34 + 8;
            while (v26 != v28)
            {
              uint64_t v35 = *((void *)v26 - 1);
              v26 -= 8;
              *((void *)v34 - 1) = v35;
              v34 -= 8;
            }

            __int128 __p = v34;
            int v109 = v27;
            v110[0] = &v33[8 * v32];
            if (v28) {
              operator delete(v28);
            }
          }

          else
          {
            *(void *)int v109 = *v25;
            uint64_t v27 = v26 + 8;
          }

          int v109 = v27;
          __int128 v36 = v94;
          if (v94 >= v95)
          {
            __int128 v38 = (char *)v93;
            uint64_t v39 = (v94 - (_BYTE *)v93) >> 2;
            unint64_t v40 = v39 + 1;
            uint64_t v41 = v95 - (_BYTE *)v93;
            if ((v95 - (_BYTE *)v93) >> 1 > v40) {
              unint64_t v40 = v41 >> 1;
            }
            else {
              unint64_t v42 = v40;
            }
            if (v42)
            {
              BOOL v43 = (char *)sub_10000956C((uint64_t)&v95, v42);
              __int128 v38 = (char *)v93;
              __int128 v36 = v94;
            }

            else
            {
              BOOL v43 = 0LL;
            }

            __int128 v44 = &v43[4 * v39];
            *(_DWORD *)__int128 v44 = a4;
            __int128 v37 = v44 + 4;
            while (v36 != v38)
            {
              int v45 = *((_DWORD *)v36 - 1);
              v36 -= 4;
              *((_DWORD *)v44 - 1) = v45;
              v44 -= 4;
            }

            __int128 v93 = v44;
            uint64_t v94 = v37;
            char v95 = &v43[4 * v42];
            if (v38) {
              operator delete(v38);
            }
          }

          else
          {
            *(_DWORD *)uint64_t v94 = a4;
            __int128 v37 = v36 + 4;
          }

          uint64_t v94 = v37;
        }

        ++a4;
        uint64_t v24 = *a2;
      }

      while (a4 < (a2[1] - *a2) >> 3);
      if (__p == v109) {
        break;
      }
      (*(void (**)(void **__return_ptr, unint64_t, void **, uint64_t, void, double))(*(void *)v82 + 16LL))( &v91,  v82,  &__p,  a3,  v103,  a6);
      __int128 v46 = (char *)v91;
      if (0xAAAAAAAAAAAAAAABLL * ((v92 - (_BYTE *)v91) >> 3) == (v109 - (_BYTE *)__p) >> 3)
      {
        char v88 = 0LL;
        uint64_t v89 = 0LL;
        char v90 = 0LL;
        unint64_t v86 = 0LL;
        uint64_t v87 = 0LL;
        __n128 v85 = (uint64_t *)&v86;
        if (v92 != v91)
        {
          unint64_t v47 = 0LL;
          do
          {
            __int128 v48 = (char *)__p + 8 * v47;
            uint64_t v49 = &v46[24 * v47];
            if (v49[20])
            {
              uint64_t v50 = *a5 + 24LL * *((int *)v93 + v47);
              if (*(unsigned __int8 *)(v50 + 20) == v49[20])
              {
                uint64_t v51 = *(void *)v49;
                *(_WORD *)(v50 + 8) = *((_WORD *)v49 + 4);
                *(void *)uint64_t v50 = v51;
                *(void *)(v50 + 12) = *(void *)(v49 + 12);
              }

              else if (*(_BYTE *)(v50 + 20))
              {
                *(_BYTE *)(v50 + 20) = 0;
              }

              else
              {
                __int128 v60 = *(_OWORD *)v49;
                *(_DWORD *)(v50 + 16) = *((_DWORD *)v49 + 4);
                *(_OWORD *)uint64_t v50 = v60;
                *(_BYTE *)(v50 + 20) = 1;
              }

              *(void *)__n128 buf = v48;
              double v61 = sub_100ECD78C(&v85, v48, (uint64_t)&unk_1012CF090, (uint64_t **)buf);
              uint64_t v62 = *(void *)v49;
              _BYTE v61[24] = *((_WORD *)v49 + 4);
              *((void *)v61 + 5) = v62;
              *(void *)(v61 + 26) = *(void *)(v49 + 12);
            }

            else
            {
              double v52 = v89;
              if (v89 >= v90)
              {
                double v54 = (char *)v88;
                uint64_t v55 = (v89 - (_BYTE *)v88) >> 3;
                unint64_t v56 = v55 + 1;
                uint64_t v57 = v90 - (_BYTE *)v88;
                if ((v90 - (_BYTE *)v88) >> 2 > v56) {
                  unint64_t v56 = v57 >> 2;
                }
                else {
                  unint64_t v58 = v56;
                }
                if (v58)
                {
                  double v59 = (char *)sub_1000071BC((uint64_t)&v90, v58);
                  double v54 = (char *)v88;
                  double v52 = v89;
                }

                else
                {
                  double v59 = 0LL;
                }

                BOOL v63 = &v59[8 * v55];
                *(void *)BOOL v63 = *v48;
                double v53 = v63 + 8;
                while (v52 != v54)
                {
                  uint64_t v64 = *((void *)v52 - 1);
                  v52 -= 8;
                  *((void *)v63 - 1) = v64;
                  v63 -= 8;
                }

                char v88 = v63;
                uint64_t v89 = v53;
                char v90 = &v59[8 * v58];
                if (v54) {
                  operator delete(v54);
                }
              }

              else
              {
                *(void *)uint64_t v89 = *v48;
                double v53 = v52 + 8;
              }

              uint64_t v89 = v53;
            }

            ++v47;
            __int128 v46 = (char *)v91;
          }

          while (v47 < 0xAAAAAAAAAAAAAAABLL * ((v92 - (_BYTE *)v91) >> 3));
        }

        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_10188A900);
        }
        __int16 v65 = v84;
        uint64_t v66 = (os_log_s *)qword_101934868;
        if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)__n128 buf = 67240448;
          *(_DWORD *)&uint8_t buf[4] = (unint64_t)(v109 - (_BYTE *)__p) >> 3;
          __int16 v112 = 1026;
          int v113 = v87;
          _os_log_impl( (void *)&_mh_execute_header,  v66,  OS_LOG_TYPE_INFO,  "#wifitilecentroids, search tiles, searched, %{public}d, found, %{public}d",  buf,  0xEu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934860 != -1) {
            dispatch_once(&qword_101934860, &stru_10188A900);
          }
          int v104 = 67240448;
          int v105 = (unint64_t)(v109 - (_BYTE *)__p) >> 3;
          __int16 v106 = 1026;
          int v107 = v87;
          LODWORD(v81) = 14;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  1LL,  "#wifitilecentroids, search tiles, searched, %{public}d, found, %{public}d",  &v104,  v81);
          uint64_t v75 = (uint8_t *)v74;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "std::vector<std::optional<std::tuple<CLTilesManager_Type::AccessPointEntry, WifiTileXY>>> CLWifiTileCacheLog ic::findCentroids(const std::vector<CLMacAddress> &, const CLDaemonLocation &, cl::chrono::CFAbsoluteTimeClo ck::time_point, const CLIWifiTileSearchDelegate *) const",  "%s\n",  v74);
          if (v75 != buf) {
            free(v75);
          }
          __int16 v65 = v84;
        }

        (*(void (**)(void, void **))(*(void *)*v65 + 24LL))(*v65, &v88);
        (*(void (**)(void, uint64_t **))(*(void *)*v65 + 32LL))(*v65, &v85);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_10188A900);
        }
        __int128 v67 = (os_log_s *)qword_101934868;
        if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
        {
          int v68 = (*(uint64_t (**)(void))(*(void *)*v65 + 48LL))(*v65);
          int v69 = (*(uint64_t (**)(void))(*(void *)*v65 + 56LL))(*v65);
          *(_DWORD *)__n128 buf = 67240448;
          *(_DWORD *)&uint8_t buf[4] = v68;
          __int16 v112 = 1026;
          int v113 = v69;
          _os_log_impl( (void *)&_mh_execute_header,  v67,  OS_LOG_TYPE_DEBUG,  "#wifitilecentroids, write to cache, new size, %{public}du / %{public}du",  buf,  0xEu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934860 != -1) {
            dispatch_once(&qword_101934860, &stru_10188A900);
          }
          uint64_t v76 = qword_101934868;
          int v77 = (*(uint64_t (**)(void))(*(void *)*v84 + 48LL))(*v84);
          int v78 = (*(uint64_t (**)(void))(*(void *)*v84 + 56LL))(*v84);
          int v104 = 67240448;
          int v105 = v77;
          __int16 v106 = 1026;
          int v107 = v78;
          LODWORD(v81) = 14;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v76,  2LL,  "#wifitilecentroids, write to cache, new size, %{public}du / %{public}du",  &v104,  v81);
          char v80 = (uint8_t *)v79;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "std::vector<std::optional<std::tuple<CLTilesManager_Type::AccessPointEntry, WifiTileXY>>> CLWifiTileCacheLog ic::findCentroids(const std::vector<CLMacAddress> &, const CLDaemonLocation &, cl::chrono::CFAbsoluteTimeClo ck::time_point, const CLIWifiTileSearchDelegate *) const",  "%s\n",  v79);
          if (v80 != buf) {
            free(v80);
          }
        }

        sub_100008390((uint64_t)&v85, v86);
        if (v88)
        {
          uint64_t v89 = (char *)v88;
          operator delete(v88);
        }

        if (v91)
        {
          float v92 = v91;
          operator delete(v91);
        }

        break;
      }

      sub_1012767A0();
      abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/Wifi1/CLWifiTileCacheLogic.mm",  83,  "findCentroids");
      __break(1u);
LABEL_116:
      dispatch_once(&qword_101934860, &stru_10188A900);
LABEL_101:
      uint64_t v70 = *(void *)(p_vtable + 2152);
      unint64_t v71 = (unint64_t)(a2[1] - *a2) >> 3;
      LODWORD(__p) = 67240960;
      HIDWORD(__p) = v71;
      LOWORD(v109) = 1026;
      *(_DWORD *)((char *)&v109 + 2) = v103;
      HIWORD(v109) = 1026;
      LODWORD(v110[0]) = v100;
      WORD2(v110[0]) = 1026;
      *(_DWORD *)((char *)v110 + 6) = v98;
      LODWORD(v81) = 26;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v70,  2LL,  "#wifitilecentroids, read cache, %{public}d, in_tiles, %{public}d, not_in_tiles, %{public}d, not_found, %{public}d",  &__p,  v81);
      uint64_t v73 = (uint8_t *)v72;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "std::vector<std::optional<std::tuple<CLTilesManager_Type::AccessPointEntry, WifiTileXY>>> CLWifiTileCacheLogic:: findCentroids(const std::vector<CLMacAddress> &, const CLDaemonLocation &, cl::chrono::CFAbsoluteTimeClock::time _point, const CLIWifiTileSearchDelegate *) const",  "%s\n",  v72);
      if (v73 != buf) {
        free(v73);
      }
    }

    if (v93)
    {
      uint64_t v94 = (char *)v93;
      operator delete(v93);
    }

    if (__p)
    {
      int v109 = (char *)__p;
      operator delete(__p);
    }

    sub_100008390((uint64_t)&v101, v102);
    sub_100008390((uint64_t)v99, v99[1]);
    sub_100008390((uint64_t)&v96, v97);
  }

void sub_100ECD438( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, void *a17, uint64_t a18, void *__p, uint64_t a20, uint64_t a21, void *a22, uint64_t a23, uint64_t a24, void *a25, uint64_t a26, uint64_t a27, void *a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, void *a39, uint64_t a40)
{
  if (__p)
  {
    a20 = (uint64_t)__p;
    operator delete(__p);
  }

  if (a22)
  {
    a23 = (uint64_t)a22;
    operator delete(a22);
  }

  if (a25)
  {
    a26 = (uint64_t)a25;
    operator delete(a25);
  }

  if (a39)
  {
    a40 = (uint64_t)a39;
    operator delete(a39);
  }

  sub_100ECD504(&a28);
  unint64_t v42 = *(void **)v40;
  if (*(void *)v40)
  {
    *(void *)(v40 + 8) = v42;
    operator delete(v42);
  }

  _Unwind_Resume(a1);
}

void **sub_100ECD504(void **a1)
{
  return a1;
}

uint64_t sub_100ECD548(void *a1)
{
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_10188A900);
  }
  uint64_t v2 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)__n128 buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "#wifitilecentroids, clear cache", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10188A900);
    }
    v5[0] = 0;
    uint64_t v4 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  1LL,  "#wifitilecentroids, clear cache",  v5,  2);
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLWifiTileCacheLogic::clear()", "%s\n", v4);
  }

  return (*(uint64_t (**)(void))(*(void *)*a1 + 40LL))(*a1);
}

void sub_100ECD6E8(id a1)
{
  qword_101934868 = (uint64_t)os_log_create("com.apple.locationd.Position", "WifiPosition");
}

void *sub_100ECD714(void *a1, unint64_t a2)
{
  *a1 = 0LL;
  a1[1] = 0LL;
  a1[2] = 0LL;
  if (a2)
  {
    sub_100006E1C(a1, a2);
    uint64_t v4 = (_BYTE *)a1[1];
    uint64_t v5 = &v4[24 * a2];
    do
    {
      _BYTE *v4 = 0;
      v4[20] = 0;
      v4 += 24;
    }

    while (v4 != v5);
    a1[1] = v5;
  }

  return a1;
}

void sub_100ECD770(_Unwind_Exception *exception_object)
{
  __int128 v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }

  _Unwind_Resume(exception_object);
}

_WORD *sub_100ECD78C(uint64_t **a1, void *a2, uint64_t a3, uint64_t **a4)
{
  uint64_t v6 = (void **)sub_1002FB00C((uint64_t)a1, &v11, a2);
  uint64_t v7 = *v6;
  if (!*v6)
  {
    uint64_t v8 = (uint64_t **)v6;
    uint64_t v7 = operator new(0x40uLL);
    uint64_t v9 = **a4;
    v7[24] = 0;
    *((void *)v7 + 4) = v9;
    *((void *)v7 + 5) = 0LL;
    *((_DWORD *)v7 + 13) = 0;
    *((_DWORD *)v7 + 14) = 0;
    sub_1000085FC(a1, v11, v8, (uint64_t *)v7);
  }

  return v7;
}

void sub_100ECE198(_Unwind_Exception *a1)
{
}

id sub_100ECE1C0(uint64_t a1, void *a2)
{
  id result = [a2 isEqualToString:@"WPPuckBeaconNoRanging"];
  if ((_DWORD)result) {
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) |= 2uLL;
  }
  return result;
}

id sub_100ECE6CC(uint64_t a1, void *a2, uint64_t a3)
{
  id result = objc_msgSend(objc_msgSend(a2, "advertisementData"), "isEqualToData:", *(void *)(a1 + 32));
  if (a3 && (_DWORD)result)
  {
    uint64_t v7 = *(void *)(a1 + 56);
    if (v7 == 1)
    {
      if ([a2 major])
      {
        id v8 = objc_msgSend(objc_msgSend(a2, "major"), "integerValue");
      }

      if ([a2 minor])
      {
        id v9 = objc_msgSend(objc_msgSend(a2, "minor"), "integerValue");
      }

      char v10 =  -[CLWPZone initWithProximityUUID:major:minor:identifier:]( [CLWPZone alloc],  "initWithProximityUUID:major:minor:identifier:",  [a2 proximityUUID],  *(void *)(a1 + 40),  *(void *)(a1 + 48),  objc_msgSend(a2, "identifier"));
      uint64_t v7 = *(void *)(a1 + 56);
    }

    else
    {
      char v10 = 0LL;
    }

    return (id)(*(uint64_t (**)(uint64_t, void *, uint64_t, CLWPZone *, void))(a3 + 16))(a3, a2, v7, v10, 0LL);
  }

  return result;
}

id sub_100ECED38(uint64_t a1, uint64_t a2)
{
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_100ECED90;
  v5[3] = &unk_10188A998;
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  v5[4] = a2;
  v5[5] = v3;
  return [v2 enumerateKeysAndObjectsUsingBlock:v5];
}

id sub_100ECED90(uint64_t a1, void *a2, uint64_t a3)
{
  id result = objc_msgSend(objc_msgSend(a2, "advertisementData"), "isEqualToData:", *(void *)(a1 + 32));
  if (a3)
  {
    if ((_DWORD)result) {
      return (id)(*(uint64_t (**)(uint64_t, void *, void, void, void))(a3 + 16))( a3,  a2,  0LL,  0LL,  *(void *)(a1 + 40));
    }
  }

  return result;
}

void sub_100ECEF24(id a1)
{
  qword_101934848 = (uint64_t)os_log_create("com.apple.locationd.Position", "Proximity");
}

BOOL sub_100ECEF50()
{
  return os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_FAULT);
}

BOOL sub_100ECEF64()
{
  return os_log_type_enabled(*(os_log_t *)(v0 + 2120), OS_LOG_TYPE_INFO);
}

BOOL sub_100ECEF74()
{
  return os_signpost_enabled(*(os_log_t *)(v0 + 2120));
}

id sub_100ECEF88(uint64_t a1, void *a2)
{
  return _[a2 onWakeGesture:a1];
}

void sub_100ECEFD4(id a1)
{
}

void sub_100ECF0BC(_Unwind_Exception *a1)
{
}

void sub_100ECF400( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_100ECF478(id a1)
{
  qword_101934518 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Pedometer");
}

BOOL sub_100ECF4A4(uint64_t a1, double a2, double a3)
{
  double v3 = *(double *)(a1 + 40);
  return vabdd_f64(a2, v3) > a3 || v3 < 0.0;
}

uint64_t sub_100ECF4C0(double *a1)
{
  uint64_t v2 = v25;
  *(_DWORD *)((char *)&v25 + *(void *)(v25 - 24) + 8) |= 4u;
  *(std::locale::__imp **)((char *)&v26.__loc_.__locale_ + *(void *)(v2 - 24)) = (std::locale::__imp *)3;
  sub_10000CF44(&v25, (uint64_t)"time,", 5LL);
  double v3 = (void *)std::ostream::operator<<(a1[4]);
  *(void *)((char *)v3 + *(void *)(*v3 - 24LL) + 16) = 0LL;
  uint64_t v4 = sub_10000CF44(v3, (uint64_t)",type,", 6LL);
  uint64_t v5 = (void *)std::ostream::operator<<(v4, *(unsigned int *)a1);
  *(void *)((char *)v5 + *(void *)(*v5 - 24LL) + 16) = 0LL;
  uint64_t v6 = sub_10000CF44(v5, (uint64_t)",stepType,", 10LL);
  uint64_t v7 = (void *)std::ostream::operator<<(v6, *((unsigned int *)a1 + 1));
  *(void *)((char *)v7 + *(void *)(*v7 - 24LL) + 16) = 0LL;
  id v8 = sub_10000CF44(v7, (uint64_t)",count,", 7LL);
  std::ostream::operator<<(v8, 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*((void *)a1 + 2) - *((void *)a1 + 1)) >> 3));
  uint64_t v9 = *((void *)a1 + 1);
  for (uint64_t i = *((void *)a1 + 2); v9 != i; v9 += 40LL)
  {
    *(std::locale::__imp **)((char *)&v26.__loc_.__locale_ + *(void *)(v25 - 24)) = 0LL;
    uint64_t v11 = sub_10000CF44(&v25, (uint64_t)",id,", 4LL);
    uint64_t v12 = (void *)std::ostream::operator<<(v11, *(void *)v9);
    *(void *)((char *)v12 + *(void *)(*v12 - 24LL) + 16) = 7LL;
    sub_10000CF44(v12, (uint64_t)",startLL,", 9LL);
    uint64_t v13 = (void *)std::ostream::operator<<(*(double *)(v9 + 8));
    sub_10000CF44(v13, (uint64_t)",", 1LL);
    uint64_t v14 = (void *)std::ostream::operator<<(*(double *)(v9 + 16));
    *(void *)((char *)v14 + *(void *)(*v14 - 24LL) + 16) = 7LL;
    sub_10000CF44(v14, (uint64_t)",endLL,", 7LL);
    unint64_t v15 = (void *)std::ostream::operator<<(*(double *)(v9 + 24));
    sub_10000CF44(v15, (uint64_t)",", 1LL);
    std::ostream::operator<<(*(double *)(v9 + 32));
  }

  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_10188AA40);
  }
  uint64_t v16 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
  {
    std::stringbuf::str(&v31, &v26);
    uint64_t v17 = (v31.__r_.__value_.__s.__size_ & 0x80u) == 0
        ? &v31
        : (std::stringbuf::string_type *)v31.__r_.__value_.__r.__words[0];
    LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v17;
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEBUG, "CLMM,RouteHints,%s", (uint8_t *)&buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&v31, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188AA40);
    }
    uint64_t v20 = qword_1019348B8;
    std::stringbuf::str(&buf, &v26);
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_std::stringbuf::string_type buf = &buf;
    }
    else {
      p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    int v29 = 136315138;
    unint64_t v30 = p_buf;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &v31,  1628LL,  &_mh_execute_header,  v20,  2LL,  "CLMM,RouteHints,%s",  (const char *)&v29);
    unint64_t v23 = v22;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLMapsRouteHintData::debugOutput() const", "%s\n", (const char *)v23);
    if (v23 != &v31) {
      free(v23);
    }
  }

  *(void *)((char *)v24
  uint64_t v25 = v18;
  std::streambuf::~streambuf(&v26);
  return std::ios::~ios(&v27);
}

void sub_100ECF900(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

BOOL sub_100ECF944(void *a1)
{
  uint64_t v2 = 0LL;
  uint64_t v3 = -1LL;
  while (1)
  {
    uint64_t v4 = a1[1];
    int v5 = -1 - 858993459 * ((unint64_t)(a1[2] - v4) >> 3);
    if (++v3 >= v5) {
      break;
    }
    uint64_t v6 = (double *)(v4 + v2);
    BOOL v7 = sub_100292850( *(double *)(v4 + v2 + 24),  *(double *)(v4 + v2 + 32),  *(double *)(v4 + v2 + 48),  *(double *)(v4 + v2 + 56),  0.0000001)
      || sub_100292850(v6[3], v6[4], v6[8], v6[9], 0.0000001);
    BOOL v8 = sub_100292850(v6[1], v6[2], v6[6], v6[7], 0.0000001)
      || sub_100292850(v6[1], v6[2], *(double *)(v4 + v2 + 64), *(double *)(v4 + v2 + 72), 0.0000001);
    v2 += 40LL;
    if (!v7 && !v8)
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188AA40);
      }
      uint64_t v9 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v10 = a1[4];
        *(_DWORD *)std::stringbuf::string_type buf = 134217984;
        uint64_t v18 = v10;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "CLMM,%.3lf,RouteHints received without proper connections",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188AA40);
        }
        uint64_t v12 = a1[4];
        int v15 = 134217984;
        uint64_t v16 = v12;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%.3lf,RouteHints received without proper connections",  COERCE_DOUBLE(&v15));
        uint64_t v14 = (uint8_t *)v13;
        sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLMapsRouteHintData::isConnectivityGood() const", "%s\n", v13);
        if (v14 != buf) {
          free(v14);
        }
      }

      return v3 >= v5;
    }
  }

  return v3 >= v5;
}

uint64_t sub_100ECFBC0(void *a1)
{
  __int128 __p = 0LL;
  uint64_t v66 = 0LL;
  unint64_t v67 = 0LL;
  uint64_t v2 = a1[1];
  uint64_t v1 = a1[2];
  if ((int)(-858993459 * ((unint64_t)(v1 - v2) >> 3)) < 2)
  {
    uint64_t v50 = 0LL;
LABEL_45:
    BOOL v51 = v2 == v1;
  }

  else
  {
    uint64_t v4 = 0LL;
    uint64_t v5 = 0LL;
    *(void *)uint64_t v64 = a1 + 1;
    while (1)
    {
      uint64_t v6 = (__int128 *)(v2 + 40 * v5);
      if (__p == v4)
      {
        if ((unint64_t)v4 >= v67)
        {
          unint64_t v10 = 0x999999999999999ALL * ((uint64_t)(v67 - (void)v4) >> 3);
          if (v10 <= 1) {
            unint64_t v10 = 1LL;
          }
          else {
            unint64_t v11 = v10;
          }
          uint64_t v13 = sub_100100EF8((uint64_t)&v67, v11);
          uint64_t v14 = (char *)__p;
          int v15 = v66;
          __int128 v16 = *v6;
          __int128 v17 = v6[1];
          v13[4] = *((void *)v6 + 4);
          *(_OWORD *)uint64_t v13 = v16;
          *((_OWORD *)v13 + 1) = v17;
          if (v15 == v14)
          {
            __int128 v21 = v13;
          }

          else
          {
            uint64_t v18 = v13;
            do
            {
              __int128 v19 = *(_OWORD *)(v15 - 40);
              __int128 v20 = *(_OWORD *)(v15 - 24);
              __int128 v21 = v18 - 5;
              *(v18 - 1) = *((void *)v15 - 1);
              *(_OWORD *)(v18 - 3) = v20;
              *(_OWORD *)(v18 - 5) = v19;
              v15 -= 40;
              v18 -= 5;
            }

            while (v15 != v14);
          }

          uint64_t v9 = (char *)(v13 + 5);
          __int128 __p = v21;
          uint64_t v66 = (char *)(v13 + 5);
          unint64_t v67 = (unint64_t)&v13[5 * v12];
          if (v14) {
            operator delete(v14);
          }
        }

        else
        {
          __int128 v7 = *v6;
          __int128 v8 = v6[1];
          v4[4] = *((void *)v6 + 4);
          *(_OWORD *)uint64_t v4 = v7;
          *((_OWORD *)v4 + 1) = v8;
          uint64_t v9 = (char *)(v4 + 5);
        }

        uint64_t v66 = v9;
      }

      uint64_t v22 = v5 + 1;
      uint64_t v23 = v2 + 40 * v5;
      double v25 = *(double *)(v23 + 24);
      uint64_t v24 = (double *)(v23 + 24);
      double v26 = v25;
      uint64_t v27 = v2 + 40 * (v5 + 1);
      double v29 = *(double *)(v27 + 8);
      uint64_t v28 = (double *)(v27 + 8);
      BOOL v30 = sub_100292850(v26, v24[1], v29, v28[1], 0.0000001)
         || sub_100292850(*v24, v24[1], *(double *)(v2 + 40 * v22 + 24), *(double *)(v2 + 40 * v22 + 32), 0.0000001);
      uint64_t v31 = v2 + 40 * v5;
      double v33 = *(double *)(v31 + 8);
      unint64_t v32 = (double *)(v31 + 8);
      if (!sub_100292850(v33, v32[1], *v28, v28[1], 0.0000001)
        && ((v30 | sub_100292850( *v32,  v32[1],  *(double *)(v2 + 40 * v22 + 24),  *(double *)(v2 + 40 * v22 + 32),  0.0000001)) & 1) == 0)
      {
        break;
      }

      __int128 v34 = (__int128 *)((char *)v6 + 40);
      uint64_t v35 = v66;
      if ((unint64_t)v66 >= v67)
      {
        __int128 v38 = __p;
        unint64_t v39 = 0xCCCCCCCCCCCCCCCDLL * ((v66 - (_BYTE *)__p) >> 3);
        unint64_t v40 = v39 + 1;
        if (v39 + 1 > 0x666666666666666LL) {
          sub_100007008();
        }
        else {
          unint64_t v41 = v40;
        }
        if (v41)
        {
          unint64_t v42 = (char *)sub_100100EF8((uint64_t)&v67, v41);
          __int128 v38 = __p;
          uint64_t v35 = v66;
        }

        else
        {
          unint64_t v42 = 0LL;
        }

        BOOL v43 = &v42[8 * ((v66 - (_BYTE *)__p) >> 3)];
        __int128 v44 = *v34;
        __int128 v45 = *(__int128 *)((char *)v6 + 56);
        *((void *)v43 + 4) = *((void *)v6 + 9);
        *(_OWORD *)BOOL v43 = v44;
        *((_OWORD *)v43 + 1) = v45;
        if (v35 == v38)
        {
          uint64_t v49 = &v42[40 * v39];
        }

        else
        {
          __int128 v46 = &v42[40 * v39];
          do
          {
            __int128 v47 = *(_OWORD *)((char *)v35 - 40);
            __int128 v48 = *(_OWORD *)((char *)v35 - 24);
            uint64_t v49 = v46 - 40;
            *((void *)v46 - 1) = *((void *)v35 - 1);
            *(_OWORD *)(v46 - 24) = v48;
            *(_OWORD *)(v46 - 40) = v47;
            uint64_t v35 = (_OWORD *)((char *)v35 - 40);
            v46 -= 40;
          }

          while (v35 != v38);
        }

        uint64_t v4 = v43 + 40;
        __int128 __p = v49;
        uint64_t v66 = v43 + 40;
        unint64_t v67 = (unint64_t)&v42[40 * v41];
        if (v38) {
          operator delete(v38);
        }
      }

      else
      {
        __int128 v36 = *v34;
        __int128 v37 = *(__int128 *)((char *)v6 + 56);
        *((void *)v66 + 4) = *((void *)v6 + 9);
        *uint64_t v35 = v36;
        v35[1] = v37;
        uint64_t v4 = (void *)v35 + 5;
      }

      uint64_t v66 = (char *)v4;
      uint64_t v2 = a1[1];
      uint64_t v1 = a1[2];
      uint64_t v5 = v22;
      if (v22 >= (int)(-1 - 858993459 * ((unint64_t)(v1 - v2) >> 3)))
      {
        uint64_t v50 = (char *)__p;
        goto LABEL_45;
      }
    }

    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188AA40);
    }
    double v54 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v55 = a1[4];
      unint64_t v56 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a1[2] - a1[1]) >> 3);
      *(_DWORD *)std::stringbuf::string_type buf = 134218496;
      uint64_t v75 = v55;
      __int16 v76 = 2048;
      unint64_t v77 = v56;
      __int16 v78 = 2048;
      unint64_t v79 = 0xCCCCCCCCCCCCCCCDLL * ((v66 - (_BYTE *)__p) >> 3);
      _os_log_impl( (void *)&_mh_execute_header,  v54,  OS_LOG_TYPE_DEBUG,  "CLMM,%.3lf,RouteHints received without proper connections,changing segments from %lu,to,%lu",  buf,  0x20u);
    }

    BOOL v57 = sub_1002921D0(115, 2);
    unint64_t v58 = *(char **)v64;
    if (v57)
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188AA40);
      }
      uint64_t v59 = a1[4];
      unint64_t v60 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a1[2] - a1[1]) >> 3);
      int v68 = 134218496;
      uint64_t v69 = v59;
      __int16 v70 = 2048;
      unint64_t v71 = v60;
      __int16 v72 = 2048;
      unint64_t v73 = 0xCCCCCCCCCCCCCCCDLL * ((v66 - (_BYTE *)__p) >> 3);
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%.3lf,RouteHints received without proper connections,changing segments from %lu,to,%lu",  COERCE_DOUBLE(&v68),  32,  v63);
      uint64_t v62 = (uint8_t *)v61;
      sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLMapsRouteHintData::getConnectedRouteSegments() const", "%s\n", v61);
      if (v62 != buf) {
        free(v62);
      }
      unint64_t v58 = *(char **)v64;
    }

    uint64_t v50 = (char *)__p;
    BOOL v51 = v66 == __p;
  }

  uint64_t v52 = !v51;
  if (v50)
  {
    uint64_t v66 = v50;
    operator delete(v50);
  }

  return v52;
}

void sub_100ED0174( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100ED01A0(id a1)
{
  qword_1019348B8 = (uint64_t)os_log_create("com.apple.locationd.Position", "MapMatcher");
}

double sub_100ED01CC(uint64_t a1, double a2)
{
  *(double *)a1 = a2;
  double result = 0.0;
  *(_OWORD *)(a1 + _Block_object_dispose((const void *)(v1 - 112), 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_DWORD *)(a1 + 40) = 1065353216;
  return result;
}

void sub_100ED01E8(uint64_t a1)
{
}

void sub_100ED01F0(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6 = *(void *)(a2 + 16) - *(void *)(a2 + 8);
  __int128 v7 = (void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 32);
  if (*(double *)a1 > 0.0)
  {
    sub_100ED0504(a1, a3);
    uint64_t v9 = *(void *)(a2 + 8);
    uint64_t v10 = *(void *)(a2 + 16);
    if (v9 != v10)
    {
      uint64_t v11 = 0LL;
      while (1)
      {
        if (vabdd_f64(a3, *(double *)(v9 + 56)) <= *(double *)a1)
        {
          *(void *)std::stringbuf::string_type buf = *(void *)v9;
          uint64_t v12 = (double *)sub_100353A18(v7, buf);
          if (!v12) {
            goto LABEL_8;
          }
        }

void sub_100ED0504(uint64_t a1, double a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  for (i = *(void *)(a1 + 32); v3; uint64_t v3 = *(void *)v3)
  {
    while (vabdd_f64(a2, *(double *)(v3 + 80)) > *(double *)a1)
    {
      uint64_t v3 = sub_100ED09D4((void *)(a1 + 8), (uint64_t *)v3);
      if (!v3) {
        goto LABEL_6;
      }
    }
  }

void sub_100ED0714(uint64_t a1@<X0>, uint64_t *a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  *a2 = 0LL;
  a2[1] = 0LL;
  a2[2] = 0LL;
  uint64_t v8 = *(double **)(a1 + 24);
  if (v8)
  {
    unint64_t v9 = 0LL;
    do
    {
      double v10 = vabdd_f64(a3, v8[10]);
      if (a4 <= 0.0 || v10 <= a4)
      {
        uint64_t v12 = (uint64_t)(v8 + 3);
        if (v9 >= a2[2])
        {
          unint64_t v9 = sub_100023888(a2, v12);
        }

        else
        {
          sub_100023800((uint64_t)a2, v12);
          v9 += 88LL;
        }

        a2[1] = v9;
      }

      uint64_t v8 = *(double **)v8;
    }

    while (v8);
  }

  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_10188AA60);
  }
  __int16 v13 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v14 = 0x2E8BA2E8BA2E8BA3LL * ((a2[1] - *a2) >> 3);
    *(_DWORD *)std::stringbuf::string_type buf = 134349056;
    uint64_t v21 = v14;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "Returning %{public}zu APs", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_10188AA60);
    }
    uint64_t v15 = 0x2E8BA2E8BA2E8BA3LL * ((a2[1] - *a2) >> 3);
    int v18 = 134349056;
    uint64_t v19 = v15;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Returning %{public}zu APs",  &v18,  12);
    __int16 v17 = (uint8_t *)v16;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "std::vector<CLWifiService_Type::AccessPoint> CLWifiScanAggregator::getScannedAccessPoints(const CFAbsoluteTime, co nst CFTimeInterval)",  "%s\n",  v16);
    if (v17 != buf) {
      free(v17);
    }
  }

void sub_100ED0988(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
}

void sub_100ED09A8(id a1)
{
  qword_101934878 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeoFencing");
}

uint64_t sub_100ED09D4(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  sub_10005BEB8(a1, a2, (uint64_t)&__p);
  uint64_t v3 = (void **)__p;
  __int128 __p = 0LL;
  if (v3) {
    sub_100022988((uint64_t)&v6, v3);
  }
  return v2;
}

void sub_100ED0AC0(id a1)
{
  qword_10199F340 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLGpsAssistantSilo");
}

uint64_t sub_100ED0B74(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100ED18BC;
  block[3] = &unk_10181A288;
  block[4] = a1;
  if (qword_10199F350 != -1) {
    dispatch_once(&qword_10199F350, block);
  }
  return qword_1019A3D90;
}

void sub_100ED0D0C(unsigned __int8 *a1, double *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(a3 + 44);
  BOOL v4 = __OFSUB__(v3, 1);
  int v5 = v3 - 1;
  if (v5 < 0 == v4)
  {
    double v20 = 0.0;
    double v21 = 0.0;
    double v19 = *(double *)(a3 + 24) + *(double *)(a3 + 8LL * v5 + 48);
    int v9 = a1[352];
    a1[352] = sub_100FF93A0((uint64_t)(a1 + 112), a2, &v19, &v21, &v20);
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188ABD0);
    }
    double v10 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
    {
      int v11 = a1[352];
      double v12 = *a2;
      *(_DWORD *)std::stringbuf::string_type buf = 67110144;
      *(_DWORD *)&uint8_t buf[4] = v11;
      *(_WORD *)&uint8_t buf[8] = 2048;
      *(double *)&buf[10] = v20;
      *(_WORD *)&buf[18] = 2048;
      *(double *)&buf[20] = v21;
      *(_WORD *)&buf[28] = 2048;
      *(double *)&buf[30] = v12;
      *(_WORD *)&buf[38] = 2048;
      *(double *)&buf[40] = v19;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "STARK,SpeedTO,isOffsetValid,%d,offsetUncSecs,%.9g,filteredOffsetSecs,%.4lf,machTime,%.4lf,vehicleTime,%.4lf",  buf,  0x30u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_10188ABD0);
      }
      int v13 = a1[352];
      double v14 = *a2;
      v22[0] = 67110144;
      v22[1] = v13;
      __int16 v23 = 2048;
      double v24 = v20;
      __int16 v25 = 2048;
      double v26 = v21;
      __int16 v27 = 2048;
      double v28 = v14;
      __int16 v29 = 2048;
      double v30 = v19;
      LODWORD(v17) = 48;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "STARK,SpeedTO,isOffsetValid,%d,offsetUncSecs,%.9g,filteredOffsetSecs,%.4lf,machTime,%.4lf,vehicleTime,%.4lf",  v22,  v17,  v18,  v19,  v20);
      uint64_t v16 = (uint8_t *)v15;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLGpsAssistant::setVehicleSpeedAssistance(const double &, const CLNmeaSCD &)",  "%s\n",  v15);
      if (v16 != buf) {
        free(v16);
      }
    }

    if (a1[352])
    {
      if (v20 < 0.08)
      {
        *(_DWORD *)std::stringbuf::string_type buf = 2;
        if (sub_100247620((uint64_t)a1, (int *)buf, 1LL))
        {
          memcpy(buf, (const void *)a3, 0x350uLL);
          if (v9 != a1[352]) {
            *(_DWORD *)&buf[40] = 1;
          }
          *(double *)&_BYTE buf[24] = v21 + *(double *)&buf[24];
          v22[0] = 2;
          (*(void (**)(unsigned __int8 *, _DWORD *, uint8_t *, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  v22,  buf,  1LL,  0xFFFFFFFFLL,  0LL);
        }
      }
    }
  }

void sub_100ED103C(uint64_t a1, double *a2, double *a3)
{
  int v3 = *((_DWORD *)a3 + 2);
  BOOL v4 = __OFSUB__(v3, 1);
  uint64_t v5 = (v3 - 1);
  if ((int)v5 < 0 == v4)
  {
    double v19 = 0.0;
    double v20 = 0.0;
    double v18 = *a3 + a3[4 * v5 + 3];
    int v9 = sub_100FF93A0(a1 + 360, a2, &v18, &v20, &v19);
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188ABD0);
    }
    double v10 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
    {
      double v11 = *a2;
      *(_DWORD *)std::stringbuf::string_type buf = 67110144;
      *(_DWORD *)&uint8_t buf[4] = v9;
      *(_WORD *)&uint8_t buf[8] = 2048;
      *(double *)&buf[10] = v19;
      *(_WORD *)&buf[18] = 2048;
      *(double *)&buf[20] = v20;
      *(_WORD *)&buf[28] = 2048;
      *(double *)&buf[30] = v11;
      *(_WORD *)&buf[38] = 2048;
      *(double *)&buf[40] = v18;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "STARK,GyroTO,isOffsetValid,%d,offsetUncSecs,%.9g,filteredOffsetSecs,%.4lf,machTime,%.4lf,vehicleTime,%.4lf",  buf,  0x30u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_10188ABD0);
      }
      double v13 = *a2;
      v21[0] = 67110144;
      v21[1] = v9;
      __int16 v22 = 2048;
      double v23 = v19;
      __int16 v24 = 2048;
      double v25 = v20;
      __int16 v26 = 2048;
      double v27 = v13;
      __int16 v28 = 2048;
      double v29 = v18;
      LODWORD(v16) = 48;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "STARK,GyroTO,isOffsetValid,%d,offsetUncSecs,%.9g,filteredOffsetSecs,%.4lf,machTime,%.4lf,vehicleTime,%.4lf",  v21,  v16,  v17,  v18,  v19);
      uint64_t v15 = (uint8_t *)v14;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLGpsAssistant::setVehicleGyroAssistance(const double &, const CLNmeaGCD &)",  "%s\n",  v14);
      if (v15 != buf) {
        free(v15);
      }
    }

    if (v19 < 0.08) {
      int v12 = v9;
    }
    else {
      int v12 = 0;
    }
    if (v12 == 1)
    {
      *(_DWORD *)std::stringbuf::string_type buf = 3;
      if (sub_100247620(a1, (int *)buf, 1LL))
      {
        memcpy(buf, a3, 0x658uLL);
        *(double *)std::stringbuf::string_type buf = v20 + *(double *)buf;
        v21[0] = 3;
        (*(void (**)(uint64_t, _DWORD *, uint8_t *, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  v21,  buf,  1LL,  0xFFFFFFFFLL,  0LL);
      }
    }
  }

uint64_t sub_100ED1334(uint64_t a1, uint64_t a2)
{
  LODWORD(v9[0]) = 0;
  uint64_t result = sub_100247620(a1, (int *)v9, 1LL);
  if ((_DWORD)result)
  {
    __int128 v5 = *(_OWORD *)(a2 + 80);
    v9[4] = *(_OWORD *)(a2 + 64);
    v9[5] = v5;
    uint64_t v10 = *(void *)(a2 + 96);
    __int128 v6 = *(_OWORD *)(a2 + 16);
    v9[0] = *(_OWORD *)a2;
    v9[1] = v6;
    __int128 v7 = *(_OWORD *)(a2 + 48);
    v9[2] = *(_OWORD *)(a2 + 32);
    void v9[3] = v7;
    int v8 = 0;
    return (*(uint64_t (**)(uint64_t, int *, _OWORD *, void, uint64_t, void))(*(void *)a1 + 152LL))( a1,  &v8,  v9,  0LL,  0xFFFFFFFFLL,  0LL);
  }

  return result;
}

uint64_t sub_100ED13E4(uint64_t a1, _OWORD *a2)
{
  LODWORD(v7[0]) = 1;
  uint64_t result = sub_100247620(a1, (int *)v7, 1LL);
  if ((_DWORD)result)
  {
    __int128 v5 = a2[1];
    v7[0] = *a2;
    v7[1] = v5;
    v7[2] = a2[2];
    int v6 = 1;
    return (*(uint64_t (**)(uint64_t, int *, _OWORD *, void, uint64_t, void))(*(void *)a1 + 152LL))( a1,  &v6,  v7,  0LL,  0xFFFFFFFFLL,  0LL);
  }

  return result;
}

uint64_t sub_100ED1488(uint64_t a1, _OWORD *a2)
{
  LODWORD(v7[0]) = 4;
  uint64_t result = sub_100247620(a1, (int *)v7, 1LL);
  if ((_DWORD)result)
  {
    __int128 v5 = a2[1];
    v7[0] = *a2;
    v7[1] = v5;
    v7[2] = a2[2];
    int v6 = 4;
    return (*(uint64_t (**)(uint64_t, int *, _OWORD *, void, uint64_t, void))(*(void *)a1 + 152LL))( a1,  &v6,  v7,  0LL,  0xFFFFFFFFLL,  0LL);
  }

  return result;
}

uint64_t sub_100ED152C(uint64_t a1, uint64_t a2)
{
  LODWORD(v9[0]) = 5;
  uint64_t result = sub_100247620(a1, (int *)v9, 1LL);
  if ((_DWORD)result)
  {
    __int128 v5 = *(_OWORD *)(a2 + 80);
    v9[4] = *(_OWORD *)(a2 + 64);
    v9[5] = v5;
    _OWORD v9[6] = *(_OWORD *)(a2 + 96);
    uint64_t v10 = *(void *)(a2 + 112);
    __int128 v6 = *(_OWORD *)(a2 + 16);
    v9[0] = *(_OWORD *)a2;
    v9[1] = v6;
    __int128 v7 = *(_OWORD *)(a2 + 48);
    v9[2] = *(_OWORD *)(a2 + 32);
    void v9[3] = v7;
    int v8 = 5;
    return (*(uint64_t (**)(uint64_t, int *, _OWORD *, void, uint64_t, void))(*(void *)a1 + 152LL))( a1,  &v8,  v9,  0LL,  0xFFFFFFFFLL,  0LL);
  }

  return result;
}

uint64_t sub_100ED15C4(uint64_t a1, void *a2)
{
  int v3 = (void *)sub_100ED1698(a1, "CLGpsAssistant", a2);
  *int v3 = off_10188AAB0;
  uint64_t v5 = 0x4000000000000000LL;
  uint64_t v6 = 20LL;
  sub_100FF91E4((uint64_t)(v3 + 14), &qword_101363CC0, (int *)&v6, 1, (double *)&v5);
  *(_BYTE *)(a1 + 352) = 0;
  uint64_t v5 = 0x4000000000000000LL;
  uint64_t v6 = 20LL;
  sub_100FF91E4(a1 + 360, &qword_101363CC8, (int *)&v6, 1, (double *)&v5);
  *(void *)(a1 + 616) = 0LL;
  *(void *)(a1 + 60_Block_object_dispose((const void *)(v1 - 112), 8) = 0LL;
  *(void *)(a1 + 600) = a1 + 608;
  return a1;
}

void sub_100ED1674(_Unwind_Exception *a1)
{
}

uint64_t sub_100ED1698(uint64_t a1, char *a2, void *a3)
{
  *(void *)a1 = off_10188AC00;
  sub_1010DDBC0((void *)(a1 + 8), a2);
  *(void *)(a1 + 32) = a3;
  *(void *)(a1 + 40) = [a3 silo];
  *(void *)(a1 + 4_Block_object_dispose((const void *)(v1 - 112), 8) = 0LL;
  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + 56) = a1 + 64;
  *(void *)(a1 + 8_Block_object_dispose((const void *)(v1 - 112), 8) = 0LL;
  *(void *)(a1 + 96) = 0LL;
  *(void *)(a1 + 72) = 0LL;
  *(void *)(a1 + 80) = a1 + 88;
  *(_DWORD *)(a1 + 104) = 0;
  *(_BYTE *)(a1 + 10_Block_object_dispose((const void *)(v1 - 112), 8) = 0;
  return a1;
}

void sub_100ED1718(_Unwind_Exception *exception_object)
{
}

uint64_t sub_100ED1734(uint64_t a1)
{
  *(void *)(a1 + 144) = off_10182B230;
  sub_100008390(a1 + 208, *(void **)(a1 + 216));
  sub_100210578((void *)(a1 + 160));
  *(void *)(a1 + 56) = off_101850568;
  sub_100210578((void *)(a1 + 88));
  return a1;
}

uint64_t sub_100ED1790(uint64_t a1)
{
  *(void *)a1 = off_10188AC00;
  [*(id *)(a1 + 48) invalidate];

  sub_100231CA4(a1 + 80, *(void **)(a1 + 88));
  sub_100231CF0(a1 + 56, *(void **)(a1 + 64));
  return a1;
}

uint64_t sub_100ED1804(uint64_t a1)
{
  *(void *)a1 = off_10188AAB0;
  sub_100008390(a1 + 600, *(void **)(a1 + 608));
  *(void *)(a1 + 504) = off_10182B230;
  sub_100008390(a1 + 568, *(void **)(a1 + 576));
  sub_100210578((void *)(a1 + 520));
  *(void *)(a1 + 416) = off_101850568;
  sub_100210578((void *)(a1 + 448));
  *(void *)(a1 + 256) = off_10182B230;
  sub_100008390(a1 + 320, *(void **)(a1 + 328));
  sub_100210578((void *)(a1 + 272));
  *(void *)(a1 + 16_Block_object_dispose((const void *)(v1 - 112), 8) = off_101850568;
  sub_100210578((void *)(a1 + 200));
  return sub_100ED1790(a1);
}

void sub_100ED18A8(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100ED1804(a1);
  operator delete(v1);
}

uint64_t sub_100ED18BC(uint64_t a1)
{
  uint64_t v2 = operator new(0x270uLL);
  uint64_t result = sub_100ED15C4((uint64_t)v2, *(void **)(a1 + 32));
  qword_1019A3D90 = (uint64_t)v2;
  return result;
}

void sub_100ED18F4(_Unwind_Exception *a1)
{
}

void *sub_100ED1908@<X0>(_DWORD *a1@<X1>, void *a2@<X8>)
{
  return sub_1010DDBC0(a2, __str);
}

uint64_t sub_100ED1980(uint64_t a1)
{
  return 1LL;
}

id sub_100ED1998(uint64_t a1)
{
  id v2 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "vendor"), "proxyForService:", @"CLLocationController");
  int v4 = 0;
  objc_msgSend(v2, "setGpsAssistantHasClients:forNotification:", sub_100247620(a1, &v4, 1) != 0, 0);
  int v4 = 1;
  objc_msgSend(v2, "setGpsAssistantHasClients:forNotification:", sub_100247620(a1, &v4, 1) != 0, 1);
  int v4 = 5;
  objc_msgSend(v2, "setGpsAssistantHasClients:forNotification:", sub_100247620(a1, &v4, 1) != 0, 5);
  int v4 = 4;
  return objc_msgSend( v2,  "setGpsAssistantHasClients:forNotification:",  sub_100247620(a1, &v4, 1) != 0,  4);
}

uint64_t sub_100ED1A88(uint64_t a1)
{
  return 1LL;
}

void sub_100ED1AA0(uint64_t a1, uint64_t a2)
{
  HIDWORD(v15) = a2;
  if (!*(_BYTE *)(a1 + 108))
  {
    uint64_t v4 = *(void *)(a1 + 88);
    if (!v4) {
      goto LABEL_12;
    }
    uint64_t v5 = a1 + 80;
    uint64_t v6 = a1 + 88;
    do
    {
      int v7 = *(_DWORD *)(v4 + 32);
      BOOL v8 = v7 < (int)a2;
      else {
        int v9 = (uint64_t *)(v4 + 8);
      }
      if (!v8) {
        uint64_t v6 = v4;
      }
      uint64_t v4 = *v9;
    }

    while (*v9);
    if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= (int)a2)
    {
      while (*(void *)(v6 + 56))
      {
        *(_DWORD *)std::stringbuf::string_type buf = *(_DWORD *)(*(void *)(v6 + 40) + 28LL);
        (*(void (**)(uint64_t, uint64_t, uint8_t *))(*(void *)a1 + 112LL))(a1, a2, buf);
      }

      sub_100233254(v5, (int *)&v15 + 1);
    }

    else
    {
LABEL_12:
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_10188ABB0);
      }
      uint64_t v10 = (os_log_s *)qword_1019349D8;
      if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
      {
        double v11 = (void *)(a1 + 8);
        *(_DWORD *)std::stringbuf::string_type buf = 136446466;
        double v21 = v11;
        __int16 v22 = 1026;
        int v23 = a2;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
          buf,
          0x12u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_10188ABB0);
        }
        int v12 = (void *)(a1 + 8);
        int v16 = 136446466;
        double v17 = v12;
        __int16 v18 = 1026;
        int v19 = a2;
        LODWORD(v15) = 18;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
          &v16,
          v15);
        double v14 = (uint8_t *)v13;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLNotifier<CLGpsAssistant_Type::Notification, CLGpsAssistant_Type::NotificationData>::removeClien t(int) [Notification_T = CLGpsAssistant_Type::Notification, NotificationData_T = CLGpsAssistant_Type::Notifica tionData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v13);
        if (v14 != buf) {
          free(v14);
        }
      }
    }
  }

uint64_t sub_100ED1D14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void *))(*(void *)a1 + 96LL))( a1,  a2,  a3,  &unk_1019918F8);
}

uint64_t sub_100ED1D28(uint64_t a1, int a2, int *a3, char *a4)
{
  int v42 = a2;
  if (*(_BYTE *)(a1 + 108)) {
    return 0LL;
  }
  uint64_t v7 = *(void *)(a1 + 88);
  if (v7)
  {
    uint64_t v10 = a1 + 88;
    do
    {
      int v11 = *(_DWORD *)(v7 + 32);
      BOOL v12 = v11 < a2;
      if (v11 >= a2) {
        double v13 = (uint64_t *)v7;
      }
      else {
        double v13 = (uint64_t *)(v7 + 8);
      }
      if (!v12) {
        uint64_t v10 = v7;
      }
      uint64_t v7 = *v13;
    }

    while (*v13);
    if (v10 != a1 + 88 && *(_DWORD *)(v10 + 32) <= a2)
    {
      *(void *)BOOL v43 = v10;
      int v17 = *a3;
      uint64_t v20 = *(void *)(v10 + 48);
      uint64_t v19 = v10 + 48;
      uint64_t v18 = v20;
      if (!v20) {
        goto LABEL_31;
      }
      uint64_t v21 = v19;
      do
      {
        int v22 = *(_DWORD *)(v18 + 28);
        BOOL v23 = v22 < v17;
        if (v22 >= v17) {
          __int16 v24 = (uint64_t *)v18;
        }
        else {
          __int16 v24 = (uint64_t *)(v18 + 8);
        }
        if (!v23) {
          uint64_t v21 = v18;
        }
        uint64_t v18 = *v24;
      }

      while (*v24);
      if (v21 == v19 || v17 < *(_DWORD *)(v21 + 28)) {
LABEL_31:
      }
        uint64_t v21 = v19;
      uint64_t v25 = *(void *)(a1 + 64);
      if (!v25) {
        goto LABEL_42;
      }
      uint64_t v26 = a1 + 64;
      do
      {
        int v27 = *(_DWORD *)(v25 + 32);
        BOOL v28 = v27 < v17;
        if (v27 >= v17) {
          double v29 = (uint64_t *)v25;
        }
        else {
          double v29 = (uint64_t *)(v25 + 8);
        }
        if (!v28) {
          uint64_t v26 = v25;
        }
        uint64_t v25 = *v29;
      }

      while (*v29);
      if (v26 != a1 + 64 && v17 >= *(_DWORD *)(v26 + 32))
      {
        uint64_t v41 = v26;
        uint64_t v34 = *(void *)(v26 + 56);
        char v35 = *a4;
        *(void *)std::stringbuf::string_type buf = &v42;
        *((_BYTE *)sub_1004EF3D4((uint64_t **)(v26 + 40), &v42, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = v35;
        bzero(buf, 0x658uLL);
        if (v21 == v19
          && (*(unsigned int (**)(uint64_t, int *, _BYTE *))(*(void *)a1 + 128LL))(a1, a3, buf))
        {
          uint64_t v36 = sub_100ED43D4(buf);
          sub_100ED3A5C((_BYTE *)a1, (uint64_t)v43, (uint64_t)&v41, v36);
        }

        if (v34) {
          goto LABEL_44;
        }
      }

      else
      {
LABEL_42:
        uint64_t v41 = a1 + 64;
        char v30 = byte_1019918F9;
        HIDWORD(v40) = v17;
        *(void *)std::stringbuf::string_type buf = (char *)&v40 + 4;
        *((_BYTE *)sub_10023347C((uint64_t **)(a1 + 56), (int *)&v40 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 80) = v30;
        HIDWORD(v40) = *a3;
        *(void *)std::stringbuf::string_type buf = (char *)&v40 + 4;
        __int16 v31 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v40 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        sub_1000F0D38(v31 + 8);
        char v32 = *a4;
        HIDWORD(v40) = *a3;
        *(void *)std::stringbuf::string_type buf = (char *)&v40 + 4;
        __int16 v33 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v40 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        *(void *)std::stringbuf::string_type buf = &v42;
        *((_BYTE *)sub_1004EF3D4(v33 + 5, &v42, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = v32;
      }

      (*(void (**)(uint64_t, int *))(*(void *)a1 + 168LL))(a1, a3);
LABEL_44:
      if (v21 == v19)
      {
        *(_DWORD *)std::stringbuf::string_type buf = *a3;
        sub_10004A8FC((uint64_t **)(*(void *)v43 + 40LL), (int *)buf, buf);
      }

      return 1LL;
    }
  }

  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10188ABB0);
  }
  double v14 = (os_log_s *)qword_1019349D8;
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
  {
    uint64_t v15 = (void *)(a1 + 8);
    *(_DWORD *)std::stringbuf::string_type buf = 136446466;
    *(void *)&uint8_t buf[4] = v15;
    __int16 v47 = 1026;
    int v48 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
      buf,
      0x12u);
  }

  BOOL v16 = sub_1002921D0(115, 0);
  uint64_t result = 0LL;
  if (v16)
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10188ABB0);
    }
    __int128 v37 = (void *)(a1 + 8);
    *(_DWORD *)BOOL v43 = 136446466;
    *(void *)&v43[4] = v37;
    __int16 v44 = 1026;
    int v45 = a2;
    LODWORD(v40) = 18;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
      v43,
      v40);
    unint64_t v39 = (char *)v38;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLGpsAssistant_Type::Notification, CLGpsAssistant_Type::NotificationData>::registerForNoti fication(int, const Notification_T &, const RegistrationInfo_T &) [Notification_T = CLGpsAssistant_Type::Notificat ion, NotificationData_T = CLGpsAssistant_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v38);
    if (v39 != buf) {
      free(v39);
    }
    return 0LL;
  }

  return result;
}

BOOL sub_100ED218C(uint64_t a1, int a2, int *a3)
{
  uint64_t v5 = *(void *)(a1 + 88);
  if (!v5) {
    goto LABEL_11;
  }
  uint64_t v6 = a1 + 88;
  do
  {
    int v7 = *(_DWORD *)(v5 + 32);
    BOOL v8 = v7 < a2;
    if (v7 >= a2) {
      int v9 = (uint64_t *)v5;
    }
    else {
      int v9 = (uint64_t *)(v5 + 8);
    }
    if (!v8) {
      uint64_t v6 = v5;
    }
    uint64_t v5 = *v9;
  }

  while (*v9);
  if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= a2)
  {
    uint64_t v16 = *(void *)(v6 + 48);
    uint64_t v14 = v6 + 48;
    uint64_t v15 = v16;
    if (!v16) {
      goto LABEL_29;
    }
    int v17 = *a3;
    uint64_t v18 = v14;
    do
    {
      int v19 = *(_DWORD *)(v15 + 28);
      BOOL v20 = v19 < v17;
      if (v19 >= v17) {
        uint64_t v21 = (uint64_t *)v15;
      }
      else {
        uint64_t v21 = (uint64_t *)(v15 + 8);
      }
      if (!v20) {
        uint64_t v18 = v15;
      }
      uint64_t v15 = *v21;
    }

    while (*v21);
    if (v18 == v14 || v17 < *(_DWORD *)(v18 + 28)) {
LABEL_29:
    }
      uint64_t v18 = v14;
    return v18 != v14;
  }

  else
  {
LABEL_11:
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10188ABB0);
    }
    uint64_t v10 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
    {
      int v11 = (void *)(a1 + 8);
      *(_DWORD *)std::stringbuf::string_type buf = 136446466;
      char v30 = v11;
      __int16 v31 = 1026;
      int v32 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
        buf,
        0x12u);
    }

    BOOL v12 = sub_1002921D0(115, 0);
    BOOL result = 0LL;
    if (v12)
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_10188ABB0);
      }
      int v22 = (void *)(a1 + 8);
      int v25 = 136446466;
      uint64_t v26 = v22;
      __int16 v27 = 1026;
      int v28 = a2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
        &v25,
        18);
      __int16 v24 = (uint8_t *)v23;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLGpsAssistant_Type::Notification, CLGpsAssistant_Type::NotificationData>::clientRegiste red(int, const Notification_T &) [Notification_T = CLGpsAssistant_Type::Notification, NotificationData_T = CLGps Assistant_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v23);
      if (v24 != buf) {
        free(v24);
      }
      return 0LL;
    }
  }

  return result;
}

BOOL sub_100ED240C(char *a1, int a2, int *a3)
{
  HIDWORD(v34) = a2;
  int v3 = a1[108];
  if (!a1[108])
  {
    uint64_t v6 = *((void *)a1 + 11);
    if (v6)
    {
      BOOL v8 = a1 + 88;
      do
      {
        int v9 = *(_DWORD *)(v6 + 32);
        BOOL v10 = v9 < a2;
        if (v9 >= a2) {
          int v11 = (uint64_t *)v6;
        }
        else {
          int v11 = (uint64_t *)(v6 + 8);
        }
        if (!v10) {
          BOOL v8 = (char *)v6;
        }
        uint64_t v6 = *v11;
      }

      while (*v11);
      if (v8 != a1 + 88 && *((_DWORD *)v8 + 8) <= a2)
      {
        uint64_t v14 = (char *)*((void *)v8 + 6);
        BOOL v12 = v8 + 48;
        double v13 = v14;
        if (v14)
        {
          int v15 = *a3;
          uint64_t v16 = v12;
          do
          {
            int v17 = *((_DWORD *)v13 + 7);
            BOOL v18 = v17 < v15;
            if (v17 >= v15) {
              int v19 = (char **)v13;
            }
            else {
              int v19 = (char **)(v13 + 8);
            }
            if (!v18) {
              uint64_t v16 = v13;
            }
            double v13 = *v19;
          }

          while (*v19);
          if (v16 != v12 && v15 >= *((_DWORD *)v16 + 7))
          {
            LODWORD(__p[0]) = *a3;
            sub_1004EF494((uint64_t)(v12 - 8), (int *)__p);
            uint64_t v20 = *((void *)a1 + 8);
            if (!v20) {
              goto LABEL_33;
            }
            int v21 = *a3;
            int v22 = a1 + 64;
            do
            {
              int v23 = *(_DWORD *)(v20 + 32);
              BOOL v24 = v23 < v21;
              if (v23 >= v21) {
                int v25 = (uint64_t *)v20;
              }
              else {
                int v25 = (uint64_t *)(v20 + 8);
              }
              if (!v24) {
                int v22 = (char *)v20;
              }
              uint64_t v20 = *v25;
            }

            while (*v25);
            if (v22 != a1 + 64 && v21 >= *((_DWORD *)v22 + 8))
            {
              sub_1004EF494((uint64_t)(v22 + 40), (int *)&v34 + 1);
              if (!*((void *)v22 + 7)) {
                (*(void (**)(char *, int *))(*(void *)a1 + 176LL))(a1, a3);
              }
            }

            else
            {
LABEL_33:
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_10188ABB0);
              }
              uint64_t v26 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                __int16 v27 = a1 + 8;
                if (a1[31] < 0) {
                  __int16 v27 = (void *)*v27;
                }
                (*(void (**)(void **__return_ptr, char *, int *))(*(void *)a1 + 160LL))(__p, a1, a3);
                if (v44 >= 0) {
                  int v28 = __p;
                }
                else {
                  int v28 = (void **)__p[0];
                }
                *(_DWORD *)std::stringbuf::string_type buf = 136446466;
                *(void *)&uint8_t buf[4] = v27;
                __int16 v36 = 2082;
                __int128 v37 = v28;
                _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_FAULT,  "%{public}s; notification %{public}s not found",
                  buf,
                  0x16u);
                if (v44 < 0) {
                  operator delete(__p[0]);
                }
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(__p, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_10188ABB0);
                }
                double v29 = a1 + 8;
                if (a1[31] < 0) {
                  double v29 = (void *)*v29;
                }
                uint64_t v30 = qword_1019349D8;
                (*(void (**)(_BYTE *__return_ptr, char *, int *))(*(void *)a1 + 160LL))(buf, a1, a3);
                if (v38 >= 0) {
                  __int16 v31 = buf;
                }
                else {
                  __int16 v31 = *(_BYTE **)buf;
                }
                int v39 = 136446466;
                uint64_t v40 = v29;
                __int16 v41 = 2082;
                int v42 = v31;
                LODWORD(v34) = 22;
                _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v30,  17LL,  "%{public}s; notification %{public}s not found",
                  &v39,
                  v34);
                __int16 v33 = v32;
                if (v38 < 0) {
                  operator delete(*(void **)buf);
                }
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLGpsAssistant_Type::Notification, CLGpsAssistant_Type::NotificationData>::unr egisterForNotification(int, const Notification_T &) [Notification_T = CLGpsAssistant_Type::Notificatio n, NotificationData_T = CLGpsAssistant_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v33);
              }
            }
          }
        }
      }
    }
  }

  return v3 == 0;
}

uint64_t sub_100ED2794(uint64_t a1, int *a2, void *__dst)
{
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v3 = a1 + 64;
  uint64_t v4 = v5;
  if (!v5) {
    return 0LL;
  }
  int v6 = *a2;
  uint64_t v7 = v3;
  do
  {
    int v8 = *(_DWORD *)(v4 + 32);
    BOOL v9 = v8 < v6;
    if (v8 >= v6) {
      BOOL v10 = (uint64_t *)v4;
    }
    else {
      BOOL v10 = (uint64_t *)(v4 + 8);
    }
    if (!v9) {
      uint64_t v7 = v4;
    }
    uint64_t v4 = *v10;
  }

  while (*v10);
  if (v7 == v3) {
    return 0LL;
  }
  if (v6 < *(_DWORD *)(v7 + 32)) {
    return 0LL;
  }
  int v11 = *(const void **)(v7 + 64);
  if (!v11) {
    return 0LL;
  }
  memcpy(__dst, v11, 0x658uLL);
  return 1LL;
}

uint64_t sub_100ED2804(uint64_t a1, int *a2, const void *a3)
{
  int v6 = operator new(0x670uLL);
  v6[2] = 0LL;
  void *v6 = off_10188ACE0;
  v6[1] = 0LL;
  memcpy(v6 + 3, a3, 0x658uLL);
  *(void *)&__int128 v13 = v6 + 3;
  *((void *)&v13 + 1) = v6;
  int v12 = *a2;
  uint64_t v14 = &v12;
  uint64_t v7 = sub_10023347C((uint64_t **)(a1 + 56), &v12, (uint64_t)&unk_1012CF090, &v14);
  sub_10005F550((uint64_t)(v7 + 8), &v13);
  int v8 = (std::__shared_weak_count *)*((void *)&v13 + 1);
  if (*((void *)&v13 + 1))
  {
    BOOL v9 = (unint64_t *)(*((void *)&v13 + 1) + 8LL);
    do
      unint64_t v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }

  return 1LL;
}

void sub_100ED28EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_100ED2900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _BYTE *, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  a2,  v9,  a3,  a4,  0LL);
}

void sub_100ED2970(uint64_t a1, unsigned int *a2, const void *a3, int a4, int a5)
{
  if (!*(_BYTE *)(a1 + 108))
  {
    unint64_t v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: notifyClientsWithData (Fallback)",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_IF_NONE_PRESENT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10188ABB0);
    }
    int v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      int v12 = (void *)(a1 + 8);
      __int128 v13 = (std::__shared_weak_count *)*a2;
      *(_DWORD *)std::stringbuf::string_type buf = 68289794;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&buf[18] = 2082;
      *(void *)&buf[20] = "activity";
      __int16 v67 = 2082;
      int v68 = v12;
      __int16 v69 = 2050;
      __int16 v70 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:notifyClientsWithData, event:%{public, location:escape_only}s, name:%{public, l ocation:escape_only}s, notification:%{public}lld}",  buf,  0x30u);
    }

    int v15 = (__n128 *)(a1 + 64);
    uint64_t v14 = *(__n128 **)(a1 + 64);
    if (!v14) {
      goto LABEL_18;
    }
    signed __int32 v16 = *a2;
    int v17 = (__n128 *)(a1 + 64);
    do
    {
      signed __int32 v18 = v14[2].n128_i32[0];
      BOOL v19 = v18 < v16;
      if (v18 >= v16) {
        uint64_t v20 = (__n128 **)v14;
      }
      else {
        uint64_t v20 = (__n128 **)&v14->n128_u64[1];
      }
      if (!v19) {
        int v17 = v14;
      }
      uint64_t v14 = *v20;
    }

    while (*v20);
    if (v17 == v15 || v16 < (signed __int32)v17[2].n128_u32[0])
    {
LABEL_18:
      *(void *)unint64_t v71 = &v71[8];
      memset(&v71[8], 0, 24);
      __int16 v72 = 0LL;
      sub_1002343E4((uint64_t)buf, a2, (uint64_t)v71);
      int v17 = sub_1002342A4((uint64_t **)(a1 + 56), (__n128 *)buf);
      int v21 = v70;
      if (v70)
      {
        p_shared_owners = (unint64_t *)&v70->__shared_owners_;
        do
          unint64_t v23 = __ldaxr(p_shared_owners);
        while (__stlxr(v23 - 1, p_shared_owners));
        if (!v23)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }

      sub_100008390((uint64_t)&buf[8], *(void **)&buf[16]);
      BOOL v24 = v72;
      if (v72)
      {
        int v25 = (unint64_t *)&v72->__shared_owners_;
        do
          unint64_t v26 = __ldaxr(v25);
        while (__stlxr(v26 - 1, v25));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }

      sub_100008390((uint64_t)v71, *(void **)&v71[8]);
    }

    if (a4)
    {
      __int16 v27 = operator new(0x670uLL);
      v27[2] = 0LL;
      *__int16 v27 = off_10188ACE0;
      v27[1] = 0LL;
      memcpy(v27 + 3, a3, 0x658uLL);
      *(void *)std::stringbuf::string_type buf = v27 + 3;
      *(void *)&uint8_t buf[8] = v27;
      sub_10005F550((uint64_t)&v17[4], (__int128 *)buf);
      int v28 = *(std::__shared_weak_count **)&buf[8];
      if (*(void *)&buf[8])
      {
        double v29 = (unint64_t *)(*(void *)&buf[8] + 8LL);
        do
          unint64_t v30 = __ldaxr(v29);
        while (__stlxr(v30 - 1, v29));
        if (!v30)
        {
          ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
          std::__shared_weak_count::__release_weak(v28);
        }
      }
    }

    else
    {
      sub_1000F0D38((__n128 *)v17[4].n128_u64);
    }

    if (!v17[3].n128_u64[1]) {
      goto LABEL_83;
    }
    __int16 v31 = sub_100ED3600(a3);
    if (a5 == -1)
    {
      sub_100ED3688((void *)a1, (int *)a2, v31);
    }

    else
    {
      uint64_t v32 = a1 + 88;
      uint64_t v33 = *(void *)(a1 + 88);
      if (!v33) {
        goto LABEL_48;
      }
      uint64_t v34 = a1 + 88;
      do
      {
        int v35 = *(_DWORD *)(v33 + 32);
        BOOL v36 = v35 < a5;
        if (v35 >= a5) {
          __int128 v37 = (uint64_t *)v33;
        }
        else {
          __int128 v37 = (uint64_t *)(v33 + 8);
        }
        if (!v36) {
          uint64_t v34 = v33;
        }
        uint64_t v33 = *v37;
      }

      while (*v37);
      if (v34 == v32 || *(_DWORD *)(v34 + 32) > a5) {
LABEL_48:
      }
        uint64_t v34 = a1 + 88;
      uint64_t v64 = v34;
      unint64_t v38 = v15->n128_u64[0];
      if (!v15->n128_u64[0]) {
        goto LABEL_59;
      }
      int v39 = *a2;
      uint64_t v40 = (__n128 *)(a1 + 64);
      do
      {
        int v41 = *(_DWORD *)(v38 + 32);
        BOOL v42 = v41 < v39;
        if (v41 >= v39) {
          BOOL v43 = (unint64_t *)v38;
        }
        else {
          BOOL v43 = (unint64_t *)(v38 + 8);
        }
        if (!v42) {
          uint64_t v40 = (__n128 *)v38;
        }
        unint64_t v38 = *v43;
      }

      while (*v43);
      if (v40 == v15 || v39 < (signed __int32)v40[2].n128_u32[0])
      {
LABEL_59:
        uint64_t v63 = (__n128 *)(a1 + 64);
LABEL_60:
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_10188ABB0);
        }
        char v44 = (os_log_s *)qword_1019349D8;
        if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
        {
          int v45 = (void *)(a1 + 8);
          (*(void (**)(_BYTE *__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(v71, a1, a2);
          if (v71[23] >= 0) {
            __int128 v46 = v71;
          }
          else {
            __int128 v46 = *(_BYTE **)v71;
          }
          *(_DWORD *)std::stringbuf::string_type buf = 136315650;
          *(void *)&uint8_t buf[4] = v45;
          *(_WORD *)&_BYTE buf[12] = 1024;
          *(_DWORD *)&buf[14] = a5;
          *(_WORD *)&buf[18] = 2080;
          *(void *)&buf[20] = v46;
          _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_DEBUG,  "%s; client %d has deregistered, not notifying %s",
            buf,
            0x1Cu);
          if ((v71[23] & 0x80000000) != 0) {
            operator delete(*(void **)v71);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019349D0 != -1) {
            dispatch_once(&qword_1019349D0, &stru_10188ABB0);
          }
          __int16 v47 = (void *)(a1 + 8);
          uint64_t v48 = qword_1019349D8;
          (*(void (**)(void **__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(__p, a1, a2);
          if (v62 >= 0) {
            uint64_t v49 = __p;
          }
          else {
            uint64_t v49 = (void **)__p[0];
          }
          *(_DWORD *)unint64_t v71 = 136315650;
          *(void *)&v71[4] = v47;
          *(_WORD *)&v71[12] = 1024;
          *(_DWORD *)&v71[14] = a5;
          *(_WORD *)&v71[18] = 2080;
          *(void *)&v71[20] = v49;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v48,  2LL,  "%s; client %d has deregistered, not notifying %s",
            v71,
            28,
            v60);
          BOOL v51 = v50;
          if (v62 < 0) {
            operator delete(__p[0]);
          }
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLGpsAssistant_Type::Notification, CLGpsAssistant_Type::NotificationData>::notifyCli entsWithData(const Notification_T &, const NotificationData_T &, BOOL, int, BOOL) [Notification_T = CLGpsAss istant_Type::Notification, NotificationData_T = CLGpsAssistant_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v51);
          if (v51 != buf) {
            free(v51);
          }
        }

        goto LABEL_83;
      }

      uint64_t v63 = v40;
      if (v34 == v32) {
        goto LABEL_60;
      }
      uint64_t v54 = v40[3].n128_i64[0];
      uint64_t v52 = v40 + 3;
      double v53 = (__n128 *)v54;
      if (!v54) {
        goto LABEL_60;
      }
      int v55 = *(_DWORD *)(v34 + 32);
      unint64_t v56 = v52;
      do
      {
        int v57 = v53[1].n128_i32[3];
        BOOL v58 = v57 < v55;
        if (v57 >= v55) {
          uint64_t v59 = v53;
        }
        else {
          uint64_t v59 = (__n128 *)&v53->n128_i8[8];
        }
        if (!v58) {
          unint64_t v56 = v53;
        }
        double v53 = (__n128 *)v59->n128_u64[0];
      }

      while (v59->n128_u64[0]);
      sub_100ED3A5C((_BYTE *)a1, (uint64_t)&v64, (uint64_t)&v63, v31);
    }

void sub_100ED2FB4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_activity_scope_state_s state, char a18)
{
}

void sub_100ED3000(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 108))
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10188ABB0);
    }
    id v2 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v3 = (void *)(a1 + 8);
      *(_DWORD *)std::stringbuf::string_type buf = 136315138;
      __int128 v37 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "%s; already shutdown; not listing clients",
        buf,
        0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_10188ABB0);
      }
      uint64_t v4 = (void *)(a1 + 8);
      int v32 = 136315138;
      uint64_t v33 = v4;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; already shutdown; not listing clients",
        (const char *)&v32);
      int v6 = (uint8_t *)v5;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLGpsAssistant_Type::Notification, CLGpsAssistant_Type::NotificationData>::listClients() [Notification_T = CLGpsAssistant_Type::Notification, NotificationData_T = CLGpsAssistant_Type::NotificationData , NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v5);
      if (v6 != buf) {
        free(v6);
      }
    }
  }

  else
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10188ABB0);
    }
    uint64_t v7 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      int v8 = (void *)(a1 + 8);
      uint64_t v9 = *(void *)(a1 + 96);
      *(_DWORD *)std::stringbuf::string_type buf = 136315394;
      __int128 v37 = v8;
      __int16 v38 = 2048;
      v39[0] = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "%s; listing clients, num clients: %zu",
        buf,
        0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_10188ABB0);
      }
      __int16 v27 = (void *)(a1 + 8);
      uint64_t v28 = *(void *)(a1 + 96);
      int v32 = 136315394;
      uint64_t v33 = v27;
      __int16 v34 = 2048;
      v35[0] = v28;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; listing clients, num clients: %zu",
        (const char *)&v32,
        22);
      unint64_t v30 = (uint8_t *)v29;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLGpsAssistant_Type::Notification, CLGpsAssistant_Type::NotificationData>::listClients() [Notification_T = CLGpsAssistant_Type::Notification, NotificationData_T = CLGpsAssistant_Type::NotificationData , NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v29);
      if (v30 != buf) {
        free(v30);
      }
    }

    unint64_t v10 = *(void **)(a1 + 80);
    if (v10 != (void *)(a1 + 88))
    {
      int v11 = (void *)(a1 + 8);
      do
      {
        int v12 = (void *)v10[5];
        if (v12 != v10 + 6)
        {
          do
          {
            if (qword_1019349D0 != -1) {
              dispatch_once(&qword_1019349D0, &stru_10188ABB0);
            }
            __int128 v13 = (os_log_s *)qword_1019349D8;
            if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v14 = (void *)(a1 + 8);
              int v15 = *((_DWORD *)v10 + 8);
              int v16 = *((_DWORD *)v12 + 7);
              *(_DWORD *)std::stringbuf::string_type buf = 136315650;
              __int128 v37 = v14;
              __int16 v38 = 1024;
              LODWORD(v39[0]) = v15;
              WORD2(v39[0]) = 1024;
              *(_DWORD *)((char *)v39 + 6) = v16;
              _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "%s; clients, id: %d, notification: %d",
                buf,
                0x18u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_10188ABB0);
              }
              uint64_t v20 = (void *)(a1 + 8);
              int v21 = *((_DWORD *)v10 + 8);
              int v22 = *((_DWORD *)v12 + 7);
              int v32 = 136315650;
              uint64_t v33 = v20;
              __int16 v34 = 1024;
              LODWORD(v35[0]) = v21;
              WORD2(v35[0]) = 1024;
              *(_DWORD *)((char *)v35 + 6) = v22;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; clients, id: %d, notification: %d",
                (const char *)&v32,
                24,
                v31);
              BOOL v24 = (uint8_t *)v23;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLGpsAssistant_Type::Notification, CLGpsAssistant_Type::NotificationData>::listC lients() [Notification_T = CLGpsAssistant_Type::Notification, NotificationData_T = CLGpsAssistant_Type:: NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v23);
              if (v24 != buf) {
                free(v24);
              }
            }

            int v17 = (void *)v12[1];
            if (v17)
            {
              do
              {
                signed __int32 v18 = v17;
                int v17 = (void *)*v17;
              }

              while (v17);
            }

            else
            {
              do
              {
                signed __int32 v18 = (void *)v12[2];
                BOOL v19 = *v18 == (void)v12;
                int v12 = v18;
              }

              while (!v19);
            }

            int v12 = v18;
          }

          while (v18 != v10 + 6);
        }

        int v25 = (void *)v10[1];
        if (v25)
        {
          do
          {
            unint64_t v26 = v25;
            int v25 = (void *)*v25;
          }

          while (v25);
        }

        else
        {
          do
          {
            unint64_t v26 = (void *)v10[2];
            BOOL v19 = *v26 == (void)v10;
            unint64_t v10 = v26;
          }

          while (!v19);
        }

        unint64_t v10 = v26;
      }

      while (v26 != (void *)(a1 + 88));
    }
  }

void sub_100ED35A8(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_100ED35D4(id a1)
{
  qword_101934888 = (uint64_t)os_log_create("com.apple.locationd.Position", "Gnss");
}

CLCppContainer *sub_100ED3600(const void *a1)
{
  id v2 = operator new(0x658uLL);
  memcpy(v2, a1, 0x658uLL);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  _DWORD v4[2] = sub_100ED3B78;
  v4[3] = &unk_10181D3D0;
  v4[4] = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:",  v2,  v4,  0LL,  1624LL);
}

void sub_100ED3688(void *a1, int *a2, void *a3)
{
  if (!*((_BYTE *)a1 + 108))
  {
    uint64_t v5 = a1 + 8;
    uint64_t v4 = a1[8];
    if (v4)
    {
      int v8 = *a2;
      uint64_t v9 = a1 + 8;
      do
      {
        int v10 = *(_DWORD *)(v4 + 32);
        BOOL v11 = v10 < v8;
        if (v10 >= v8) {
          int v12 = (uint64_t *)v4;
        }
        else {
          int v12 = (uint64_t *)(v4 + 8);
        }
        if (!v11) {
          uint64_t v9 = (void *)v4;
        }
        uint64_t v4 = *v12;
      }

      while (*v12);
      if (v9 != v5 && v8 >= *((_DWORD *)v9 + 8))
      {
        BOOL v51 = v9;
        id v13 = sub_100ED3B88(a3);
        (*(void (**)(void *, int *, id, void *))(*a1 + 184LL))(a1, a2, v13, v9 + 10);
        uint64_t v14 = (void *)v9[5];
        if (v14 != v9 + 6)
        {
          int v15 = a1 + 11;
          int v16 = a1 + 1;
          do
          {
            uint64_t v17 = *v15;
            if (!*v15) {
              goto LABEL_25;
            }
            int v18 = *((_DWORD *)v14 + 7);
            BOOL v19 = a1 + 11;
            do
            {
              int v20 = *(_DWORD *)(v17 + 32);
              BOOL v21 = v20 < v18;
              if (v20 >= v18) {
                int v22 = (uint64_t *)v17;
              }
              else {
                int v22 = (uint64_t *)(v17 + 8);
              }
              if (!v21) {
                BOOL v19 = (uint64_t *)v17;
              }
              uint64_t v17 = *v22;
            }

            while (*v22);
            if (v19 != v15 && (int v23 = *((_DWORD *)v19 + 8), v18 >= v23))
            {
              uint64_t v50 = v19;
              sub_100ED3A5C(a1, (uint64_t)&v50, (uint64_t)&v51, a3);
              uint64_t v27 = a1[8];
              if (!v27) {
                return;
              }
              int v28 = *a2;
              double v29 = v5;
              do
              {
                int v30 = *(_DWORD *)(v27 + 32);
                BOOL v31 = v30 < v28;
                if (v30 >= v28) {
                  int v32 = (uint64_t *)v27;
                }
                else {
                  int v32 = (uint64_t *)(v27 + 8);
                }
                if (!v31) {
                  double v29 = (void *)v27;
                }
                uint64_t v27 = *v32;
              }

              while (*v32);
              if (v29 == v5 || v28 < *((_DWORD *)v29 + 8)) {
                return;
              }
              BOOL v51 = v29;
              uint64_t v34 = v29[6];
              uint64_t v14 = v29 + 6;
              uint64_t v33 = v34;
              if (v34)
              {
                int v35 = v14;
                uint64_t v36 = v33;
                do
                {
                  int v37 = *(_DWORD *)(v36 + 28);
                  BOOL v38 = v37 < v23;
                  if (v37 >= v23) {
                    int v39 = (uint64_t *)v36;
                  }
                  else {
                    int v39 = (uint64_t *)(v36 + 8);
                  }
                  if (!v38) {
                    int v35 = (void *)v36;
                  }
                  uint64_t v36 = *v39;
                }

                while (*v39);
                if (v35 == v14 || v23 < *((_DWORD *)v35 + 7))
                {
                  do
                  {
                    int v40 = *(_DWORD *)(v33 + 28);
                    BOOL v41 = v23 < v40;
                    if (v23 >= v40) {
                      BOOL v42 = (uint64_t *)(v33 + 8);
                    }
                    else {
                      BOOL v42 = (uint64_t *)v33;
                    }
                    if (v41) {
                      uint64_t v14 = (void *)v33;
                    }
                    uint64_t v33 = *v42;
                  }

                  while (*v42);
                }

                else
                {
                  BOOL v43 = (void *)v35[1];
                  if (v43)
                  {
                    do
                    {
                      uint64_t v14 = v43;
                      BOOL v43 = (void *)*v43;
                    }

                    while (v43);
                  }

                  else
                  {
                    do
                    {
                      uint64_t v14 = (void *)v35[2];
                      BOOL v44 = *v14 == (void)v35;
                      int v35 = v14;
                    }

                    while (!v44);
                  }
                }
              }
            }

            else
            {
LABEL_25:
              uint64_t v50 = a1 + 11;
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_10188ABB0);
              }
              BOOL v24 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                int v25 = a1 + 1;
                int v26 = *((_DWORD *)v14 + 7);
                *(_DWORD *)std::stringbuf::string_type buf = 136446466;
                int v57 = v25;
                __int16 v58 = 1026;
                int v59 = v26;
                _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_FAULT,  "%{public}s; unknown client %{public}d",
                  buf,
                  0x12u);
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(buf, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_10188ABB0);
                }
                int v45 = a1 + 1;
                int v46 = *((_DWORD *)v14 + 7);
                int v52 = 136446466;
                double v53 = v45;
                __int16 v54 = 1026;
                int v55 = v46;
                LODWORD(v49) = 18;
                _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; unknown client %{public}d",
                  &v52,
                  v49);
                uint64_t v48 = (uint8_t *)v47;
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLNotifier<CLGpsAssistant_Type::Notification, CLGpsAssistant_Type::NotificationData>::invokeClien tsWithData(const Notification_T &, CLCppContainer *) [Notification_T = CLGpsAssistant_Type::Notificati on, NotificationData_T = CLGpsAssistant_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v47);
                if (v48 != buf) {
                  free(v48);
                }
              }
            }
          }

          while (v14 != v51 + 6);
        }
      }
    }
  }

_BYTE *sub_100ED3A5C(_BYTE *result, uint64_t a2, uint64_t a3, void *a4)
{
  if (!result[108])
  {
    uint64_t v7 = result;
    uint64_t v8 = *(unsigned int *)(*(void *)a2 + 32LL);
    LODWORD(v13) = *(_DWORD *)(*(void *)a3 + 32LL);
    id v9 = sub_100ED3B88(a4);
    uint64_t v10 = *(void *)a3 + 80LL;
    BOOL v11 = (uint64_t **)(*(void *)a3 + 40LL);
    uint64_t v14 = (int *)(*(void *)a2 + 32LL);
    int v12 = sub_1004EF3D4(v11, v14, (uint64_t)&unk_1012CF090, &v14);
    BOOL result = (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t *, id, uint64_t, uint64_t **))(*(void *)v7 + 192LL))( v7,  v8,  &v13,  v9,  v10,  v12 + 4);
    if ((_DWORD)result) {
      return objc_msgSend( *(id *)(*(void *)a2 + 64),  "onNotification:withData:",  *(unsigned int *)(*(void *)a3 + 32),  a4,  v13);
    }
  }

  return result;
}

void sub_100ED3B38(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10188ACE0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100ED3B4C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10188ACE0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_100ED3B78(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1) {
    operator delete(v1);
  }
}

id sub_100ED3B88(void *a1)
{
  if ((objc_opt_isKindOfClass(a1, v2) & 1) != 0) {
    return sub_100ED3C00(a1);
  }
  objc_opt_class(&OBJC_CLASS___CLCppContainer);
  if ((objc_opt_isKindOfClass(a1, v4) & 1) != 0) {
    return sub_100ED3F88(a1);
  }
  else {
    return 0LL;
  }
}

id sub_100ED3C00(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return sub_100ED4334((uint64_t)&v8 + 7, a1);
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10188AD20);
    }
    uint64_t v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134218498;
      id v11 = v2;
      __int16 v12 = 2048;
      uint64_t v13 = 0LL;
      __int16 v14 = 2080;
      unint64_t v15 = 0x8000000101363D92LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10188AD20);
    }
    LODWORD(v9) = 134218498;
    HIDWORD(v9) = (_DWORD)v2;
    LODWORD(v_Block_object_dispose((const void *)(v1 - 112), 8) = 32;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v9,  v8,  v9);
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10188AD20);
    }
    int v6 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134218498;
      id v11 = v2;
      __int16 v12 = 2048;
      uint64_t v13 = 0LL;
      __int16 v14 = 2080;
      unint64_t v15 = 0x8000000101363D92LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10188AD20);
    }
    LODWORD(v9) = 134218498;
    HIDWORD(v9) = (_DWORD)v2;
    LODWORD(v_Block_object_dispose((const void *)(v1 - 112), 8) = 32;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v9,  v8,  v9);
  }

  uint64_t v7 = (uint8_t *)v4;
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLGpsAssistant_Type::NotificationData, Callback = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:241:46)]",  "%s\n",  v4);
  if (v7 != buf) {
    free(v7);
  }
  return 0LL;
}

id sub_100ED3F88(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return [a1 cppObjectPtr];
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10188AD20);
    }
    uint64_t v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x8000000101363D92LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10188AD20);
    }
    LODWORD(v_Block_object_dispose((const void *)(v1 - 112), 8) = 134218498;
    HIDWORD(v_Block_object_dispose((const void *)(v1 - 112), 8) = (_DWORD)v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10188AD20);
    }
    int v6 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x8000000101363D92LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10188AD20);
    }
    LODWORD(v_Block_object_dispose((const void *)(v1 - 112), 8) = 134218498;
    HIDWORD(v_Block_object_dispose((const void *)(v1 - 112), 8) = (_DWORD)v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  uint64_t v7 = (uint8_t *)v4;
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLGpsAssistant_Type::NotificationData, Callback = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:250:46)]",  "%s\n",  v4);
  if (v7 != buf) {
    free(v7);
  }
  return 0LL;
}

id sub_100ED4334(uint64_t a1, void *a2)
{
  if (![a2 cppObjectPtr]
    && objc_msgSend(objc_msgSend(a2, "compatibilityInfo"), "isEqual:", &off_1018D4850))
  {
    if (objc_msgSend(objc_msgSend(a2, "serialized"), "length") != (id)1624) {
      sub_101276DC4();
    }
    objc_msgSend(a2, "setCppObjectPtr:", objc_msgSend(objc_msgSend(a2, "serialized"), "bytes"));
  }

  return [a2 cppObjectPtr];
}

void sub_100ED43A8(id a1)
{
  qword_101934478 = (uint64_t)os_log_create("com.apple.locationd.Support", "Support");
}

CLCppContainer *sub_100ED43D4(const void *a1)
{
  id v2 = operator new(0x658uLL);
  memcpy(v2, a1, 0x658uLL);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  _DWORD v4[2] = sub_100ED445C;
  v4[3] = &unk_10181D3D0;
  v4[4] = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:",  v2,  v4,  0LL,  1624LL);
}

void sub_100ED445C(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1) {
    operator delete(v1);
  }
}

void sub_100ED446C()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936138);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936138))
    {
      uint64_t v2 = 0x7FFFFFFF00000000LL;
      v1[2] = xmmword_101363C88;
      v1[3] = unk_101363C98;
      v1[4] = xmmword_101363CA8;
      v1[0] = xmmword_101363C68;
      v1[1] = unk_101363C78;
      sub_1001BB3C4((uint64_t)&unk_101936120, (int *)v1, 11LL);
      __cxa_atexit((void (*)(void *))sub_1001BA444, &unk_101936120, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936138);
    }
  }

void sub_100ED4540(_Unwind_Exception *a1)
{
}

uint64_t sub_100ED4558()
{
  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_10199F328, (void *)&_mh_execute_header);
}

uint64_t sub_100ED4C8C(uint64_t a1, _BYTE *a2, int a3)
{
  uint64_t v3 = 0LL;
  switch(*a2)
  {
    case 1:
      if (a3 != 8) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 16LL);
      goto LABEL_162;
    case 2:
      if (a3 != 72) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 24LL);
      goto LABEL_162;
    case 3:
      if (a3 != 105) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 32LL);
      goto LABEL_162;
    case 4:
      if (a3 != 64) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 40LL);
      goto LABEL_162;
    case 5:
      if (a3 != 16) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 56LL);
      goto LABEL_162;
    case 6:
      if (a3 != 8) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 64LL);
      goto LABEL_162;
    case 7:
      if (a3 != 212) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 72LL);
      goto LABEL_162;
    case 8:
      if (a3 != 8) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 80LL);
      goto LABEL_162;
    case 9:
      if (a3 != 212) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 88LL);
      goto LABEL_162;
    case 0xA:
      if (a3 != 193) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 272LL);
      goto LABEL_162;
    case 0xC:
      if (a3 != 12) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 96LL);
      goto LABEL_162;
    case 0xD:
      if (a3 != 8) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 104LL);
      goto LABEL_162;
    case 0xE:
      if (a3 != 55) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 112LL);
      goto LABEL_162;
    case 0xF:
      if (a3 != 8) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 120LL);
      goto LABEL_162;
    case 0x11:
      if (a3 != 36) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 128LL);
      goto LABEL_162;
    case 0x14:
      if (a3 != 8) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 152LL);
      goto LABEL_162;
    case 0x15:
      if (a3 != 48) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 160LL);
      goto LABEL_162;
    case 0x17:
      if (a3 != 21) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 168LL);
      goto LABEL_162;
    case 0x18:
      if (a3 != 89) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 176LL);
      goto LABEL_162;
    case 0x19:
      if (a3 != 218) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 192LL);
      goto LABEL_162;
    case 0x1B:
      if (a3 != 132) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 200LL);
      goto LABEL_162;
    case 0x1C:
      if (a3 != 8) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 48LL);
      goto LABEL_162;
    case 0x1D:
      if (a3 != 32) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 136LL);
      goto LABEL_162;
    case 0x1F:
      if (a3 != 12) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 184LL);
      goto LABEL_162;
    case 0x20:
      if (a3 != 157) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 208LL);
      goto LABEL_162;
    case 0x21:
      if (a3 != 8) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 216LL);
      goto LABEL_162;
    case 0x22:
      if (a3 != 8) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 224LL);
      goto LABEL_162;
    case 0x23:
      if (a3 != 8) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 232LL);
      goto LABEL_162;
    case 0x24:
      if (a3 != 28) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 248LL);
      goto LABEL_162;
    case 0x25:
      if (a3 != 21) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 256LL);
      goto LABEL_162;
    case 0x26:
      if (a3 != 16) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 264LL);
      goto LABEL_162;
    case 0x27:
      if (a3 != 205) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 280LL);
      goto LABEL_162;
    case 0x28:
      if (a3 != 25) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 288LL);
      goto LABEL_162;
    case 0x29:
      if (a3 != 69) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 296LL);
      goto LABEL_162;
    case 0x2B:
      if (a3 != 28) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 240LL);
      goto LABEL_162;
    case 0x2C:
      if (a3 != 29) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 312LL);
      goto LABEL_162;
    case 0x2D:
      if (a3 != 37) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 320LL);
      goto LABEL_162;
    case 0x2E:
      if (a3 != 45) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 328LL);
      goto LABEL_162;
    case 0x2F:
      if (a3 != 113) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 336LL);
      goto LABEL_162;
    case 0x30:
      if (a3 != 8) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 304LL);
      goto LABEL_162;
    case 0x31:
      if (a3 != 68) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 352LL);
      goto LABEL_162;
    case 0x32:
      if (a3 != 43) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 360LL);
      goto LABEL_162;
    case 0x33:
      if (a3 != 8) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 368LL);
      goto LABEL_162;
    case 0x34:
      if (a3 != 49) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 384LL);
      goto LABEL_162;
    case 0x35:
      if (a3 != 20) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 392LL);
      goto LABEL_162;
    case 0x36:
      if (a3 != 12) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 400LL);
      goto LABEL_162;
    case 0x37:
      if (a3 != 30) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 408LL);
      goto LABEL_162;
    case 0x38:
      if (a3 != 28) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 416LL);
      goto LABEL_162;
    case 0x39:
      if (a3 != 57) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 344LL);
      goto LABEL_162;
    case 0x3A:
      if (a3 != 232) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 376LL);
      goto LABEL_162;
    case 0x3B:
      if (a3 != 44) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 472LL);
      goto LABEL_162;
    case 0x3C:
      if (a3 != 10) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 488LL);
      goto LABEL_162;
    case 0x40:
      if (a3 != 29) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 424LL);
      goto LABEL_162;
    case 0x41:
      if (a3 != 9) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 440LL);
      goto LABEL_162;
    case 0x42:
      if (a3 != 12) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 448LL);
      goto LABEL_162;
    case 0x43:
      if (a3 != 12) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 496LL);
      goto LABEL_162;
    case 0x44:
      if (a3 != 76) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 456LL);
      goto LABEL_162;
    case 0x45:
      if (a3 != 39) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 504LL);
      goto LABEL_162;
    case 0x47:
      if (a3 != 45) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 512LL);
      goto LABEL_162;
    case 0x48:
      if (a3 != 16) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 528LL);
      goto LABEL_162;
    case 0x49:
      if (a3 != 83) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 520LL);
      goto LABEL_162;
    case 0x4A:
      if (a3 != 51) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 544LL);
      goto LABEL_162;
    case 0x4B:
      if (a3 != 8) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 552LL);
      goto LABEL_162;
    case 0x4C:
      if (a3 != 10) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 536LL);
      goto LABEL_162;
    case 0x4D:
      if (a3 != 13) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 480LL);
      goto LABEL_162;
    case 0x4E:
      if (a3 != 58) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 464LL);
      goto LABEL_162;
    case 0x4F:
      if (a3 != 8) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 560LL);
      goto LABEL_162;
    case 0x50:
      if (a3 != 18) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 568LL);
      goto LABEL_162;
    case 0x52:
      if (a3 != 26) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 576LL);
      goto LABEL_162;
    case 0x53:
      if (a3 != 22) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 584LL);
      goto LABEL_162;
    case 0x54:
      if (a3 != 17) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 592LL);
      goto LABEL_162;
    case 0x55:
      if (a3 != 20) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 600LL);
      goto LABEL_162;
    case 0x56:
      if (a3 != 113) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 608LL);
      goto LABEL_162;
    case 0x57:
      if (a3 != 8) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 616LL);
      goto LABEL_162;
    case 0x58:
      if (a3 != 61) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 624LL);
      goto LABEL_162;
    case 0x59:
      if (a3 != 47) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 432LL);
      goto LABEL_162;
    case 0x5A:
      if (a3 != 210) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 632LL);
      goto LABEL_162;
    case 0x5B:
      if (a3 != 88) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 640LL);
      goto LABEL_162;
    case 0x5C:
      if (a3 != 17) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 648LL);
      goto LABEL_162;
    case 0xB0:
      if (a3 != 17) {
        return 0LL;
      }
      uint64_t v4 = *(void (**)(void))(*(void *)a1 + 144LL);
LABEL_162:
      v4();
      return 1LL;
    default:
      return v3;
  }

uint64_t sub_100ED5318()
{
  uint64_t result = sub_1008FA690();
  if ((_DWORD)result)
  {
    uint64_t v1 = operator new(0x2B0uLL);
    uint64_t result = sub_100ED53A8((uint64_t)v1);
    qword_1019A3D98 = (uint64_t)v1;
  }

  return result;
}

void sub_100ED5350(_Unwind_Exception *a1)
{
}

uint64_t sub_100ED5364()
{
  if (qword_10199F358 != -1) {
    dispatch_once(&qword_10199F358, &stru_10188AD40);
  }
  return qword_1019A3D98;
}

uint64_t sub_100ED53A8(uint64_t a1)
{
  for (uint64_t i = 0LL; i != 672; i += 24LL)
  {
    uint64_t v3 = a1 + i;
    *(void *)(v3 + 24) = 0LL;
    *(void *)(v3 + 32) = 0LL;
    *(void *)(a1 + i + 16) = a1 + i + 24;
  }

  dispatch_queue_global_t global_queue = dispatch_get_global_queue(0LL, 0LL);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100ED5444;
  block[3] = &unk_10181D3D0;
  block[4] = a1;
  dispatch_async(global_queue, block);
  return a1;
}

uint64_t sub_100ED5444(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = sub_1008FA854(0);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  _DWORD v4[2] = sub_100ED54B0;
  v4[3] = &unk_10188AD60;
  v4[4] = v1;
  return (*(uint64_t (**)(uint64_t, void *))(*(void *)(v2 + 40) + 16LL))(v2 + 40, v4);
}

double sub_100ED54B0(uint64_t a1, unsigned int a2, int a3, double a4)
{
  return sub_100ED54B8(*(void *)(a1 + 32), a2, a3, a4);
}

double sub_100ED54B8(uint64_t a1, unsigned int a2, int a3, double a4)
{
  if (a2 < 0x1C)
  {
    uint64_t v12 = a1 + 24LL * a2;
    unint64_t v15 = *(void **)(v12 + 16);
    uint64_t v13 = v12 + 16;
    unint64_t v14 = v15;
    if (v15 != (void *)(v13 + 8))
    {
      if (a3) {
        int v16 = @"Wake";
      }
      else {
        int v16 = @"Fire";
      }
      do
      {
        [(id)v14[4] duration];
        if (v17 > a4) {
          break;
        }
        [(id)v14[4] setActivityDuration:a4];
        sub_100ED58EC((uint64_t)[(id)v14[4] fire], (void *)v14[4], v16);
        int v18 = (void *)v14[1];
        BOOL v19 = v14;
        if (v18)
        {
          do
          {
            int v20 = v18;
            int v18 = (void *)*v18;
          }

          while (v18);
        }

        else
        {
          do
          {
            int v20 = (void *)v19[2];
            BOOL v21 = *v20 == (void)v19;
            BOOL v19 = v20;
          }

          while (!v21);
        }

        sub_1000087E8((uint64_t **)v13, v14);
        operator delete(v14);
        unint64_t v14 = v20;
      }

      while (v20 != (void *)(v13 + 8));
    }

    if (*(void *)(v13 + 16))
    {
      [*(id *)(*(void *)v13 + 32) duration];
      double v9 = v22;
    }

    else
    {
      double v9 = -1.0;
    }
  }

  else
  {
    if (qword_101934500 != -1) {
      dispatch_once(&qword_101934500, &stru_10188AD80);
    }
    uint64_t v8 = (os_log_s *)qword_101934508;
    if (os_log_type_enabled((os_log_t)qword_101934508, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 67109120;
      unsigned int v26 = a2;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#Warning Invalid trigger.trigger,%u", buf, 8u);
    }

    double v9 = -1.0;
    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934500 != -1) {
        dispatch_once(&qword_101934500, &stru_10188AD80);
      }
      v24[0] = 67109120;
      v24[1] = a2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934508,  0LL,  "#Warning Invalid trigger.trigger,%u",  v24);
      __int16 v11 = (uint8_t *)v10;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "NSTimeInterval CLActivityAlarmConcentrator::alarmHandler(CMActivityAlarmTrigger, NSTimeInterval, BOOL)",  "%s\n",  v10);
      if (v11 != buf) {
        free(v11);
      }
    }
  }

  (*(void (**)(uint64_t))(*(void *)a1 + 24LL))(a1);
  return v9;
}

void sub_100ED578C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

char *sub_100ED57C0(char *result, void *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    v13[1] = result;
    (*(void (**)(char *))(*(void *)result + 16LL))(result);
    __int16 v14 = 256;
    uint64_t v4 = (uint64_t)[a2 trigger];
    id v5 = (id)v4;
    int v6 = &v3[24 * v4];
    uint64_t v7 = (uint64_t **)(v6 + 16);
    if (*((void *)v6 + 4))
    {
      [a2 duration];
      double v9 = v8;
      uint64_t v4 = (uint64_t)[(id)(*v7)[4] duration];
      BOOL v11 = v9 < v10;
    }

    else
    {
      BOOL v11 = 1;
    }

    sub_100ED58EC(v4, a2, @"Add");
    v13[0] = a2;
    sub_100ED6104(v7, v13, (uint64_t *)v13);
    if (v11)
    {
      uint64_t v12 = sub_1008FA854(0);
      [a2 duration];
      (*(void (**)(uint64_t, id))(*(void *)(v12 + 40) + 24LL))(v12 + 40, v5);
    }

    return (char *)(*(uint64_t (**)(char *))(*(void *)v3 + 24LL))(v3);
  }

  return result;
}

void sub_100ED58C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100ED58EC(uint64_t a1, void *a2, void *a3)
{
  if (qword_101934500 != -1) {
    dispatch_once(&qword_101934500, &stru_10188AD80);
  }
  id v5 = (os_log_s *)qword_101934508;
  if (os_log_type_enabled((os_log_t)qword_101934508, OS_LOG_TYPE_DEFAULT))
  {
    id v6 = objc_msgSend(objc_msgSend(a2, "bundleId"), "UTF8String");
    id v7 = objc_msgSend(objc_msgSend(a2, "executable"), "UTF8String");
    uint64_t v8 = [a2 trigger];
    [a2 duration];
    int v10 = (int)v9;
    id v11 = [a3 UTF8String];
    [a2 activityDuration];
    uint64_t buf = 68290563LL;
    __int16 v25 = 2082;
    unsigned int v26 = "";
    __int16 v27 = 2081;
    id v28 = v6;
    __int16 v29 = 2081;
    id v30 = v7;
    __int16 v31 = 2049;
    uint64_t v32 = v8;
    __int16 v33 = 1025;
    int v34 = v10;
    __int16 v35 = 2081;
    id v36 = v11;
    __int16 v37 = 1025;
    int v38 = (int)v12;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:ActivityAlarm, BundleID:%{private, location:escape_only}s, Executable:%{private, location:escape_only}s, AlarmTrigger:%{private}lu, AlarmDuration:%{private}d, Action:%{private, locati on:escape_only}s, ActivityDuration:%{private}d}",  (uint8_t *)&buf,  0x46u);
  }

  uint64_t result = sub_100E575B0();
  if ((_DWORD)result)
  {
    __int16 v14 = sub_1002A5370(&buf);
    sub_1002AB370((uint64_t)v14, "Action", (uint64_t)a3);
    unint64_t v15 = sub_100ED5FEC(a2);
    __int128 v21 = 0u;
    __int128 v22 = 0u;
    __int128 v19 = 0u;
    __int128 v20 = 0u;
    id v16 = -[NSDictionary countByEnumeratingWithState:objects:count:]( v15,  "countByEnumeratingWithState:objects:count:",  &v19,  v23,  16LL);
    if (v16)
    {
      uint64_t v17 = *(void *)v20;
      do
      {
        for (uint64_t i = 0LL; i != v16; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v20 != v17) {
            objc_enumerationMutation(v15);
          }
          -[NSDictionary objectForKey:](v15, "objectForKey:", *(void *)(*((void *)&v19 + 1) + 8LL * (void)i));
          sub_1002AB3DC((uint64_t)&buf);
        }

        id v16 = -[NSDictionary countByEnumeratingWithState:objects:count:]( v15,  "countByEnumeratingWithState:objects:count:",  &v19,  v23,  16LL);
      }

      while (v16);
    }

    sub_100E57614((uint64_t)&buf, (uint64_t)"MotionActivityAlarm");
    return sub_1002A5590(&buf);
  }

  return result;
}

void sub_100ED5B50(_Unwind_Exception *a1)
{
}

uint64_t sub_100ED5B7C(uint64_t result, void *a2)
{
  uint64_t v17 = a2;
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t v15 = result;
    (*(void (**)(uint64_t))(*(void *)result + 16LL))(result);
    __int16 v16 = 256;
    id v4 = [a2 trigger];
    id v5 = (uint64_t **)(v3 + 24LL * v4 + 16);
    id v6 = sub_100ED6284((uint64_t)v5, &v17);
    id v7 = v6;
    if ((uint64_t *)(v3 + 24LL * v4 + 24) == v6)
    {
      if (qword_101934500 != -1) {
        dispatch_once(&qword_101934500, &stru_10188AD80);
      }
      int v10 = (os_log_s *)qword_101934508;
      if (os_log_type_enabled((os_log_t)qword_101934508, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_ERROR,  "Removing an alarm which has not been added.",  buf,  2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934500 != -1) {
          dispatch_once(&qword_101934500, &stru_10188AD80);
        }
        v14[0] = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934508,  16LL,  "Removing an alarm which has not been added.",  v14,  2);
        double v12 = (uint8_t *)v11;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLActivityAlarmConcentrator::removeAlarm(CMActivityAlarmLocal *)",  "%s\n",  v11);
        if (v12 != buf) {
          free(v12);
        }
      }
    }

    else
    {
      uint64_t v8 = *v5;
      sub_100ED58EC((uint64_t)v6, (void *)v6[4], @"Remove");

      sub_1000087E8(v5, v7);
      operator delete(v7);
      if (*(void *)(v3 + 24LL * v4 + 32))
      {
        if (v8 == v7)
        {
          uint64_t v9 = sub_1008FA854(0);
          [(id)(*v5)[4] duration];
          (*(void (**)(uint64_t, id))(*(void *)(v9 + 40) + 24LL))(v9 + 40, v4);
        }
      }

      else
      {
        uint64_t v13 = sub_1008FA854(0);
        (*(void (**)(uint64_t, id))(*(void *)(v13 + 40) + 32LL))(v13 + 40, v4);
      }
    }

    return (*(uint64_t (**)(uint64_t))(*(void *)v3 + 24LL))(v3);
  }

  return result;
}

void sub_100ED5DFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
}

uint64_t sub_100ED5E30(void *a1)
{
  uint64_t v2 = 0LL;
  uint64_t v3 = sub_1008FA854(0) + 40;
  id v4 = a1 + 4;
  do
  {
    if (*v4)
    {
      [*(id *)(*(v4 - 2) + 32) duration];
      (*(void (**)(uint64_t, uint64_t))(*(void *)v3 + 24LL))(v3, v2);
    }

    ++v2;
    v4 += 3;
  }

  while (v2 != 28);
  return (*(uint64_t (**)(void *))(*a1 + 24LL))(a1);
}

void sub_100ED5ED4(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

NSMutableArray *sub_100ED5EEC(uint64_t a1)
{
  uint64_t v2 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  for (uint64_t i = 0LL; i != 28; ++i)
  {
    uint64_t v4 = a1 + 24 * i;
    id v5 = *(void **)(v4 + 16);
    id v6 = (void *)(v4 + 24);
    if (v5 != (void *)(v4 + 24))
    {
      do
      {
        -[NSMutableArray addObject:](v2, "addObject:", sub_100ED5FEC((void *)v5[4]));
        id v7 = (void *)v5[1];
        if (v7)
        {
          do
          {
            uint64_t v8 = v7;
            id v7 = (void *)*v7;
          }

          while (v7);
        }

        else
        {
          do
          {
            uint64_t v8 = (void *)v5[2];
            BOOL v9 = *v8 == (void)v5;
            id v5 = v8;
          }

          while (!v9);
        }

        id v5 = v8;
      }

      while (v8 != v6);
    }
  }

  (*(void (**)(uint64_t))(*(void *)a1 + 24LL))(a1);
  return v2;
}

void sub_100ED5FD4(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

NSDictionary *sub_100ED5FEC(void *a1)
{
  v3[0] = @"BundleID";
  v4[0] = [a1 bundleId];
  v3[1] = @"Executable";
  v4[1] = [a1 executable];
  v3[2] = @"AlarmTrigger";
  _DWORD v4[2] = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", [a1 trigger]);
  void v3[3] = @"AlarmDuration";
  [a1 duration];
  v4[3] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:");
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v4,  v3,  4LL);
}

void sub_100ED60D8(id a1)
{
  qword_101934508 = (uint64_t)os_log_create("com.apple.locationd.Motion", "ActivityAlarm");
}

uint64_t *sub_100ED6104(uint64_t **a1, id *a2, uint64_t *a3)
{
  id v5 = (uint64_t **)sub_100ED6184((uint64_t)a1, &v9, a2);
  id v6 = *v5;
  if (!*v5)
  {
    id v7 = v5;
    id v6 = (uint64_t *)operator new(0x28uLL);
    v6[4] = *a3;
    sub_1000085FC(a1, v9, v7, v6);
  }

  return v6;
}

void *sub_100ED6184(uint64_t a1, void *a2, id *a3)
{
  id v5 = (void *)(a1 + 8);
  uint64_t v4 = *(void **)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        id v7 = v4;
        id v8 = *a3;
        id v9 = (id)v4[4];
        [*a3 duration];
        double v11 = v10;
        [v9 duration];
        if (v11 >= v12)
        {
          [v8 duration];
          double v14 = v13;
          [v9 duration];
          if (v8 >= v9 || v14 != v15) {
            break;
          }
        }

        uint64_t v4 = (void *)*v7;
        id v5 = v7;
        if (!*v7) {
          goto LABEL_15;
        }
      }

      id v17 = (id)v7[4];
      id v18 = *a3;
      [v17 duration];
      double v20 = v19;
      [v18 duration];
      if (v20 >= v21)
      {
        [v17 duration];
        double v23 = v22;
        [v18 duration];
        if (v17 >= v18 || v23 != v24) {
          break;
        }
      }

      id v5 = v7 + 1;
      uint64_t v4 = (void *)v7[1];
    }

    while (v4);
  }

  else
  {
    id v7 = (void *)(a1 + 8);
  }

void *sub_100ED6284(uint64_t a1, void **a2)
{
  uint64_t v3 = (void *)(a1 + 8);
  uint64_t v4 = sub_100ED6318(a1, a2, *(void **)(a1 + 8), (void *)(a1 + 8));
  if (v3 == v4) {
    return v3;
  }
  id v5 = v4;
  id v6 = *a2;
  id v7 = (void *)v4[4];
  [v6 duration];
  double v9 = v8;
  [v7 duration];
  if (v9 < v10) {
    return v3;
  }
  [v6 duration];
  double v12 = v11;
  [v7 duration];
  if (v6 < v7 && v12 == v13) {
    return v3;
  }
  return v5;
}

void *sub_100ED6318(uint64_t a1, void **a2, void *a3, void *a4)
{
  if (a3)
  {
    id v5 = a3;
    do
    {
      id v7 = (void *)v5[4];
      double v8 = *a2;
      [v7 duration];
      double v10 = v9;
      [v8 duration];
      if (v10 >= v11
        && (([v7 duration], double v13 = v12, objc_msgSend(v8, "duration"), v13 == v14)
          ? (BOOL v15 = v7 >= v8)
          : (BOOL v15 = 1),
            v15))
      {
        a4 = v5;
      }

      else
      {
        ++v5;
      }

      id v5 = (void *)*v5;
    }

    while (v5);
  }

  return a4;
}

void sub_100ED63B4(uint64_t a1, unsigned int *a2, __int16 *a3, void *a4)
{
  uint64_t v6 = *a2;
  __int16 v7 = *a3;
  sub_1000C6980(v8, (uint64_t)(a3 + 4));
  uint64_t v12 = *((void *)a3 + 13);
  memset(v13, 0, 24);
  sub_1002DE3C8( v13,  *((void *)a3 + 14),  *((void *)a3 + 15),  0x2E8BA2E8BA2E8BA3LL * ((uint64_t)(*((void *)a3 + 15) - *((void *)a3 + 14)) >> 3));
  id v13[3] = *((void *)a3 + 17);
  [a4 onWifiServiceNotification:v6 data:&v7];
  double v14 = (void **)v13;
  sub_100023498(&v14);
  if (v11)
  {
    if (v10 < 0) {
      operator delete(__p);
    }
  }

void sub_100ED6478( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, char a25)
{
}

void sub_100ED723C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20, __int16 a21, char a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, char a31, uint64_t a32, char a33, uint64_t a34, char a35, uint64_t a36, char a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, char *a46, void *a47, uint64_t a48, int a49, __int16 a50,char a51,char a52)
{
  a46 = &a37;
  sub_10004CC28((void ***)&a46);
  _Unwind_Resume(a1);
}

void sub_100ED72CC(uint64_t a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X8>)
{
  *(void *)a3 = 0LL;
  *(void *)(a3 + _Block_object_dispose((const void *)(v1 - 112), 8) = 0LL;
  *(void *)(a3 + 16) = 0LL;
  for (uint64_t i = (uint64_t *)(a1 + 16); ; sub_1000E8F38((char **)a3, (__int128 *)(i + 3)))
  {
    uint64_t i = (uint64_t *)*i;
    if (!i) {
      break;
    }
    *(_DWORD *)(i[3] + 24) = llroundf((float)*(int *)(i[3] + 24) / (float)*((unsigned int *)i + 10));
  }

  uint64_t v6 = *(uint64_t **)(a3 + 8);
  if (a2 < (unint64_t)(((uint64_t)v6 - *(void *)a3) >> 4))
  {
    if (a2) {
      sub_100ED7FC8(*(uint64_t **)a3, (uint64_t *)(*(void *)a3 + 16LL * a2), v6, (uint64_t)v7);
    }
    sub_100ED7F5C(a3, a2);
  }

void sub_100ED7370(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

BOOL sub_100ED7390(uint64_t a1)
{
  uint64_t v2 = *(unsigned __int8 *)(a1 + 31);
  else {
    unint64_t v3 = *(unsigned __int8 *)(a1 + 31);
  }
  if ((char)v15 < 0)
  {
    if (v3 < v14)
    {
      BOOL v4 = 0LL;
LABEL_17:
      operator delete(__p);
      return v4;
    }

    p_p = (char *)__p;
    uint64_t v6 = (char *)__p + v14;
    if ((v2 & 0x80) == 0) {
      goto LABEL_10;
    }
LABEL_12:
    uint64_t v7 = *(void *)(a1 + 8);
    uint64_t v2 = *(void *)(a1 + 16);
    goto LABEL_13;
  }

  if (v3 < v15) {
    return 0LL;
  }
  p_p = (char *)&__p;
  uint64_t v6 = (char *)&__p + v15;
  if ((v2 & 0x80) != 0) {
    goto LABEL_12;
  }
LABEL_10:
  uint64_t v7 = a1 + 8;
LABEL_13:
  double v8 = (unsigned __int8 *)(v2 + v7 - 1);
  do
  {
    BOOL v4 = v6 == p_p;
    if (v6 == p_p) {
      break;
    }
    int v10 = *--v6;
    int v9 = v10;
    int v11 = *v8--;
  }

  while (v9 == v11);
  if ((v15 & 0x80) != 0) {
    goto LABEL_17;
  }
  return v4;
}

void sub_100ED7464(void *a1, void *a2)
{
  BOOL v4 = sub_100353A18(a1, (void *)(*a2 + 8LL));
  if (v4)
  {
    *(_DWORD *)(v4[3] + 24LL) += *(_DWORD *)(*a2 + 24LL);
    ++*((_DWORD *)v4 + 10);
  }

  else
  {
    id v5 = (std::__shared_weak_count *)a2[1];
    uint64_t v6 = (void *)(*a2 + 8LL);
    uint64_t v12 = *a2;
    double v13 = v5;
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        unint64_t v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
    }

    int v14 = 1;
    sub_100ED8BC8((uint64_t)a1, v6, v6, (uint64_t)&v12);
    int v9 = v13;
    if (v13)
    {
      int v10 = (unint64_t *)&v13->__shared_owners_;
      do
        unint64_t v11 = __ldaxr(v10);
      while (__stlxr(v11 - 1, v10));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
    }
  }

void sub_100ED7538(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_100ED772C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, char a24, uint64_t a25, char a26, uint64_t a27, uint64_t a28, uint64_t a29, void *__p, uint64_t a31, int a32, __int16 a33, char a34, char a35)
{
  if (a35 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100ED7834(_Unwind_Exception *a1)
{
}

#error "100ED7E6C: call analysis failed (funcsize=85)"
void __cdecl -[CLBarometerCalibrationSourceWifi .cxx_destruct](CLBarometerCalibrationSourceWifi *self, SEL a2)
{
  Client *value;
  sub_1008906C8((uint64_t)&self->activeScanBuffer);
  value = self->_wifiServiceClient.__ptr_.__value_;
  self->_wifiServiceClient.__ptr_.__value_ = 0LL;
  if (value) {
    (*(void (**)(Client *))(*(void *)value + 8LL))(value);
  }
}

void sub_100ED7F30(id a1)
{
  qword_1019346A8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Altimeter");
}

void sub_100ED7F5C(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  unint64_t v4 = (v3 - *(void *)a1) >> 4;
  if (a2 <= v4)
  {
    if (a2 < v4)
    {
      uint64_t v5 = *(void *)a1 + 16 * a2;
      while (v3 != v5)
        uint64_t v3 = sub_10000AE14(v3 - 16);
      *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 112), 8) = v5;
    }
  }

  else
  {
    sub_100ED8AA4((char **)a1, a2 - v4);
  }

uint64_t *sub_100ED7FC8(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t a4)
{
  if (a1 != a2)
  {
    uint64_t v6 = (uint64_t)a2;
    uint64_t v8 = (char *)a2 - (char *)a1;
    uint64_t v9 = ((char *)a2 - (char *)a1) >> 4;
    if ((char *)a2 - (char *)a1 >= 17)
    {
      unint64_t v10 = (unint64_t)(v9 - 2) >> 1;
      unint64_t v11 = v10 + 1;
      uint64_t v12 = &a1[2 * v10];
      do
      {
        sub_100ED81AC((uint64_t)a1, a4, v9, v12);
        v12 -= 2;
        --v11;
      }

      while (v11);
    }

    if ((uint64_t *)v6 != a3)
    {
      double v13 = (uint64_t *)v6;
      while (1)
      {
        uint64_t v14 = *v13;
        unsigned __int8 v15 = (std::__shared_weak_count *)v13[1];
        if (v15)
        {
          p_shared_owners = (unint64_t *)&v15->__shared_owners_;
          do
            unint64_t v17 = __ldxr(p_shared_owners);
          while (__stxr(v17 + 1, p_shared_owners));
        }

        uint64_t v18 = *a1;
        double v19 = (std::__shared_weak_count *)a1[1];
        if (v19)
        {
          double v20 = (unint64_t *)&v19->__shared_owners_;
          do
            unint64_t v21 = __ldxr(v20);
          while (__stxr(v21 + 1, v20));
          BOOL v22 = *(_DWORD *)(v14 + 24) > *(_DWORD *)(v18 + 24);
          do
            unint64_t v23 = __ldaxr(v20);
          while (__stlxr(v23 - 1, v20));
          if (!v23)
          {
            ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
            std::__shared_weak_count::__release_weak(v19);
          }
        }

        else
        {
          BOOL v22 = *(_DWORD *)(v14 + 24) > *(_DWORD *)(v18 + 24);
        }

        if (v15)
        {
          double v24 = (unint64_t *)&v15->__shared_owners_;
          do
            unint64_t v25 = __ldaxr(v24);
          while (__stlxr(v25 - 1, v24));
          if (!v25) {
            break;
          }
        }

        if (v22) {
          goto LABEL_23;
        }
LABEL_24:
        v13 += 2;
        if (v13 == a3) {
          goto LABEL_29;
        }
      }

      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
      if (!v22) {
        goto LABEL_24;
      }
LABEL_23:
      uint64_t v26 = *v13;
      *double v13 = *a1;
      *a1 = v26;
      uint64_t v27 = v13[1];
      v13[1] = a1[1];
      a1[1] = v27;
      sub_100ED81AC((uint64_t)a1, a4, v9, a1);
      goto LABEL_24;
    }

    a3 = (uint64_t *)v6;
LABEL_29:
    if (v8 >= 17)
    {
      unint64_t v28 = (unint64_t)v8 >> 4;
      do
      {
        sub_100ED85F0((uint64_t)a1, v6, a4, v28);
        v6 -= 16LL;
      }

      while (v28-- > 2);
    }
  }

  return a3;
}

void sub_100ED81AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  unint64_t v6 = a3 - 2;
  if (a3 < 2) {
    return;
  }
  uint64_t v68 = v4;
  uint64_t v69 = v5;
  uint64_t v7 = a4;
  uint64_t v66 = v6 >> 1;
  uint64_t v10 = ((uint64_t)a4 - a1) >> 3;
  uint64_t v11 = v10 | 1;
  uint64_t v12 = (uint64_t *)(a1 + 16 * (v10 | 1));
  uint64_t v13 = v10 + 2;
  if (v10 + 2 < a3)
  {
    uint64_t v14 = *v12;
    unsigned __int8 v15 = (std::__shared_weak_count *)v12[1];
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        unint64_t v17 = __ldxr(p_shared_owners);
      while (__stxr(v17 + 1, p_shared_owners));
    }

    uint64_t v18 = v12[2];
    double v19 = (std::__shared_weak_count *)v12[3];
    if (v19)
    {
      double v20 = (unint64_t *)&v19->__shared_owners_;
      do
        unint64_t v21 = __ldxr(v20);
      while (__stxr(v21 + 1, v20));
      BOOL v22 = *(_DWORD *)(v14 + 24) > *(_DWORD *)(v18 + 24);
      do
        unint64_t v23 = __ldaxr(v20);
      while (__stlxr(v23 - 1, v20));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }

    else
    {
      BOOL v22 = *(_DWORD *)(v14 + 24) > *(_DWORD *)(v18 + 24);
    }

    if (!v15) {
      goto LABEL_19;
    }
    double v24 = (unint64_t *)&v15->__shared_owners_;
    do
      unint64_t v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (v25)
    {
LABEL_19:
      if (!v22) {
        goto LABEL_21;
      }
      goto LABEL_20;
    }

    ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
    std::__shared_weak_count::__release_weak(v15);
    if (v22)
    {
LABEL_20:
      v12 += 2;
      uint64_t v11 = v13;
    }
  }

void sub_100ED85F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4 >= 2)
  {
    __int128 v13 = *(_OWORD *)a1;
    *(void *)a1 = 0LL;
    *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 112), 8) = 0LL;
    uint64_t v7 = sub_100ED86E4(a1, a3, a4);
    uint64_t v8 = v7;
    uint64_t v9 = (__int128 *)(a2 - 16);
    if (v9 == (__int128 *)v7)
    {
      sub_10005F550(v7, &v13);
    }

    else
    {
      sub_10005F550(v7, v9);
      sub_10005F550((uint64_t)v9, &v13);
      sub_100ED8854(a1, v8 + 16, a3, (v8 + 16 - a1) >> 4);
    }

    uint64_t v10 = (std::__shared_weak_count *)*((void *)&v13 + 1);
    if (*((void *)&v13 + 1))
    {
      uint64_t v11 = (unint64_t *)(*((void *)&v13 + 1) + 8LL);
      do
        unint64_t v12 = __ldaxr(v11);
      while (__stlxr(v12 - 1, v11));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
  }

void sub_100ED86D0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100ED86E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = 0LL;
  uint64_t v6 = a3 - 2;
  if (a3 < 2) {
    uint64_t v6 = a3 - 1;
  }
  uint64_t v7 = v6 >> 1;
  do
  {
    uint64_t v8 = a1;
    a1 += 16 * (v5 + 1);
    uint64_t v9 = 2 * v5;
    uint64_t v5 = (2 * v5) | 1;
    uint64_t v10 = v9 + 2;
    if (v9 + 2 >= a3) {
      goto LABEL_23;
    }
    uint64_t v11 = *(void *)a1;
    unint64_t v12 = *(std::__shared_weak_count **)(a1 + 8);
    if (v12)
    {
      p_shared_owners = (unint64_t *)&v12->__shared_owners_;
      do
        unint64_t v14 = __ldxr(p_shared_owners);
      while (__stxr(v14 + 1, p_shared_owners));
    }

    uint64_t v15 = *(void *)(a1 + 16);
    __int16 v16 = *(std::__shared_weak_count **)(a1 + 24);
    if (v16)
    {
      unint64_t v17 = (unint64_t *)&v16->__shared_owners_;
      do
        unint64_t v18 = __ldxr(v17);
      while (__stxr(v18 + 1, v17));
      BOOL v19 = *(_DWORD *)(v11 + 24) > *(_DWORD *)(v15 + 24);
      do
        unint64_t v20 = __ldaxr(v17);
      while (__stlxr(v20 - 1, v17));
      if (!v20)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }

      if (!v12)
      {
LABEL_21:
        if (!v19) {
          goto LABEL_23;
        }
LABEL_22:
        a1 += 16LL;
        uint64_t v5 = v10;
        goto LABEL_23;
      }
    }

    else
    {
      BOOL v19 = *(_DWORD *)(v11 + 24) > *(_DWORD *)(v15 + 24);
      if (!v12) {
        goto LABEL_21;
      }
    }

    unint64_t v21 = (unint64_t *)&v12->__shared_owners_;
    do
      unint64_t v22 = __ldaxr(v21);
    while (__stlxr(v22 - 1, v21));
    if (v22) {
      goto LABEL_21;
    }
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
    if (v19) {
      goto LABEL_22;
    }
LABEL_23:
    sub_10005F550(v8, (__int128 *)a1);
  }

  while (v5 <= v7);
  return a1;
}

void sub_100ED8854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v6 = a4 - 2;
  if (a4 >= 2)
  {
    uint64_t v38 = v4;
    uint64_t v39 = v5;
    unint64_t v8 = v6 >> 1;
    uint64_t v9 = a1 + 16 * (v6 >> 1);
    uint64_t v10 = *(void *)v9;
    uint64_t v11 = *(std::__shared_weak_count **)(v9 + 8);
    if (v11)
    {
      p_shared_owners = (unint64_t *)&v11->__shared_owners_;
      do
        unint64_t v13 = __ldxr(p_shared_owners);
      while (__stxr(v13 + 1, p_shared_owners));
    }

    uint64_t v14 = *(void *)(a2 - 16);
    __int16 v16 = *(std::__shared_weak_count **)(a2 - 8);
    uint64_t v15 = a2 - 16;
    if (v16)
    {
      unint64_t v17 = (unint64_t *)&v16->__shared_owners_;
      do
        unint64_t v18 = __ldxr(v17);
      while (__stxr(v18 + 1, v17));
      BOOL v19 = *(_DWORD *)(v10 + 24) > *(_DWORD *)(v14 + 24);
      do
        unint64_t v20 = __ldaxr(v17);
      while (__stlxr(v20 - 1, v17));
      if (!v20)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }

    else
    {
      BOOL v19 = *(_DWORD *)(v10 + 24) > *(_DWORD *)(v14 + 24);
    }

    if (!v11) {
      goto LABEL_17;
    }
    unint64_t v21 = (unint64_t *)&v11->__shared_owners_;
    do
      unint64_t v22 = __ldaxr(v21);
    while (__stlxr(v22 - 1, v21));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
      if (!v19) {
        return;
      }
    }

    else
    {
LABEL_17:
      if (!v19) {
        return;
      }
    }

    __int128 v37 = *(_OWORD *)v15;
    *(void *)uint64_t v15 = 0LL;
    *(void *)(v15 + _Block_object_dispose((const void *)(v1 - 112), 8) = 0LL;
    while (1)
    {
      uint64_t v23 = v15;
      uint64_t v15 = v9;
      sub_10005F550(v23, (__int128 *)v9);
      if (!v8) {
        break;
      }
      unint64_t v8 = (v8 - 1) >> 1;
      uint64_t v9 = a1 + 16 * v8;
      uint64_t v24 = *(void *)v9;
      unint64_t v25 = *(std::__shared_weak_count **)(v9 + 8);
      if (v25)
      {
        uint64_t v26 = (unint64_t *)&v25->__shared_owners_;
        do
          unint64_t v27 = __ldxr(v26);
        while (__stxr(v27 + 1, v26));
      }

      if (*((void *)&v37 + 1))
      {
        unint64_t v28 = (unint64_t *)(*((void *)&v37 + 1) + 8LL);
        do
          unint64_t v29 = __ldxr(v28);
        while (__stxr(v29 + 1, v28));
        BOOL v30 = *(_DWORD *)(v24 + 24) > *(_DWORD *)(v37 + 24);
        do
          unint64_t v31 = __ldaxr(v28);
        while (__stlxr(v31 - 1, v28));
        if (!v31)
        {
          (*(void (**)(void))(**((void **)&v37 + 1) + 16LL))(*((void *)&v37 + 1));
          std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v37 + 1));
        }
      }

      else
      {
        BOOL v30 = *(_DWORD *)(v24 + 24) > *(_DWORD *)(v37 + 24);
      }

      if (!v25) {
        goto LABEL_37;
      }
      uint64_t v32 = (unint64_t *)&v25->__shared_owners_;
      do
        unint64_t v33 = __ldaxr(v32);
      while (__stlxr(v33 - 1, v32));
      if (!v33)
      {
        ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
        std::__shared_weak_count::__release_weak(v25);
        if (!v30) {
          break;
        }
      }

      else
      {
LABEL_37:
        if (!v30) {
          break;
        }
      }
    }

    sub_10005F550(v15, &v37);
    BOOL v34 = (std::__shared_weak_count *)*((void *)&v37 + 1);
    if (*((void *)&v37 + 1))
    {
      unint64_t v35 = (unint64_t *)(*((void *)&v37 + 1) + 8LL);
      do
        unint64_t v36 = __ldaxr(v35);
      while (__stlxr(v36 - 1, v35));
      if (!v36)
      {
        ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
        std::__shared_weak_count::__release_weak(v34);
      }
    }
  }

void sub_100ED8AA4(char **a1, unint64_t a2)
{
  unint64_t v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  uint64_t v5 = v6;
  uint64_t v7 = *(char **)(v4 - 8);
  if (a2 <= (v6 - v7) >> 4)
  {
    if (a2)
    {
      bzero(*(void **)(v4 - 8), 16 * a2);
      v7 += 16 * a2;
    }

    a1[1] = v7;
  }

  else
  {
    uint64_t v8 = v7 - *a1;
    unint64_t v9 = a2 + (v8 >> 4);
    if (v9 >> 60) {
      sub_100007008();
    }
    uint64_t v10 = v8 >> 4;
    uint64_t v11 = v5 - *a1;
    if (v11 >> 3 > v9) {
      unint64_t v9 = v11 >> 3;
    }
    else {
      unint64_t v12 = v9;
    }
    uint64_t v25 = v4;
    if (v12) {
      unint64_t v13 = (char *)sub_100037038(v4, v12);
    }
    else {
      unint64_t v13 = 0LL;
    }
    uint64_t v14 = &v13[16 * v10];
    uint64_t v15 = &v13[16 * v12];
    uint64_t v24 = v15;
    bzero(v14, 16 * a2);
    __int16 v16 = &v14[16 * a2];
    v23.i64[1] = (uint64_t)v16;
    unint64_t v18 = *a1;
    unint64_t v17 = a1[1];
    if (v17 == *a1)
    {
      int64x2_t v20 = vdupq_n_s64((unint64_t)v17);
    }

    else
    {
      do
      {
        __int128 v19 = *((_OWORD *)v17 - 1);
        v17 -= 16;
        *((_OWORD *)v14 - 1) = v19;
        v14 -= 16;
        *(void *)unint64_t v17 = 0LL;
        *((void *)v17 + 1) = 0LL;
      }

      while (v17 != v18);
      int64x2_t v20 = *(int64x2_t *)a1;
      __int16 v16 = (char *)v23.i64[1];
      uint64_t v15 = v24;
    }

    *a1 = v14;
    a1[1] = v16;
    int64x2_t v23 = v20;
    unint64_t v21 = a1[2];
    a1[2] = v15;
    uint64_t v24 = v21;
    uint64_t v22 = v20.i64[0];
    sub_1000EC3DC((uint64_t)&v22);
  }

void *sub_100ED8BC8(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  unint64_t v9 = sub_1005B46E8((uint64_t)a2);
  unint64_t v10 = v9;
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    unint64_t v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v4 = v9;
      if (v9 >= v11) {
        unint64_t v4 = v9 % v11;
      }
    }

    else
    {
      unint64_t v4 = (v11 - 1) & v9;
    }

    uint64_t v14 = *(void **)(*(void *)a1 + 8 * v4);
    if (v14)
    {
      uint64_t v15 = (void *)*v14;
      if (*v14)
      {
        do
        {
          unint64_t v16 = v15[1];
          if (v16 == v10)
          {
            if (sub_1007EC0B0(v15 + 2, a2)) {
              return v15;
            }
          }

          else
          {
            if (v13 > 1)
            {
              if (v16 >= v11) {
                v16 %= v11;
              }
            }

            else
            {
              v16 &= v11 - 1;
            }

            if (v16 != v4) {
              break;
            }
          }

          uint64_t v15 = (void *)*v15;
        }

        while (v15);
      }
    }
  }

  unint64_t v17 = (char *)operator new(0x30uLL);
  v27[0] = v17;
  v27[1] = a1 + 16;
  *(void *)unint64_t v17 = 0LL;
  *((void *)v17 + 1) = v10;
  *((void *)v17 + 2) = *a3;
  *(_OWORD *)(v17 + 24) = *(_OWORD *)a4;
  *(void *)a4 = 0LL;
  *(void *)(a4 + _Block_object_dispose((const void *)(v1 - 112), 8) = 0LL;
  *((_DWORD *)v17 + 10) = *(_DWORD *)(a4 + 16);
  char v28 = 1;
  float v18 = (float)(unint64_t)(*(void *)(a1 + 24) + 1LL);
  float v19 = *(float *)(a1 + 32);
  if (!v11 || (float)(v19 * (float)v11) < v18)
  {
    BOOL v20 = 1LL;
    if (v11 >= 3) {
      BOOL v20 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v21 = v20 | (2 * v11);
    unint64_t v22 = vcvtps_u32_f32(v18 / v19);
    if (v21 <= v22) {
      size_t v23 = v22;
    }
    else {
      size_t v23 = v21;
    }
    sub_100019E10(a1, v23);
    unint64_t v11 = *(void *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11) {
        unint64_t v4 = v10 % v11;
      }
      else {
        unint64_t v4 = v10;
      }
    }

    else
    {
      unint64_t v4 = (v11 - 1) & v10;
    }
  }

  uint64_t v24 = *(void **)(*(void *)a1 + 8 * v4);
  if (v24)
  {
    *(void *)v27[0] = *v24;
    void *v24 = v27[0];
  }

  else
  {
    *(void *)v27[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v27[0];
    *(void *)(*(void *)a1 + 8 * v4) = a1 + 16;
    if (*(void *)v27[0])
    {
      unint64_t v25 = *(void *)(*(void *)v27[0] + 8LL);
      if ((v11 & (v11 - 1)) != 0)
      {
        if (v25 >= v11) {
          v25 %= v11;
        }
      }

      else
      {
        v25 &= v11 - 1;
      }

      *(void *)(*(void *)a1 + 8 * v25) = v27[0];
    }
  }

  uint64_t v15 = (void *)v27[0];
  v27[0] = 0LL;
  ++*(void *)(a1 + 24);
  sub_100891830((uint64_t)v27, 0LL);
  return v15;
}

void sub_100ED8E3C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100ED8E54@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (char *)operator new(0x38uLL);
  uint64_t result = sub_100ED8E9C((uint64_t)v2);
  *a1 = v2 + 24;
  a1[1] = v2;
  return result;
}

void sub_100ED8E88(_Unwind_Exception *a1)
{
}

uint64_t sub_100ED8E9C(uint64_t a1)
{
  *(_OWORD *)(a1 + _Block_object_dispose((const void *)(v1 - 112), 8) = 0u;
  *(void *)a1 = off_10188ADD0;
  *(_OWORD *)(a1 + 40) = 0u;
  *(void *)(a1 + 24) = 0x7FEFFFFFFFFFFFFFLL;
  *(void *)(a1 + 32) = 0LL;
  *(void *)(a1 + 32) = nullsub_10(0LL);
  *(_DWORD *)(a1 + 40) = 0x7FFFFFFF;
  *(_BYTE *)(a1 + 44) = 0;
  *(_DWORD *)(a1 + 4_Block_object_dispose((const void *)(v1 - 112), 8) = 0x7FFFFFFF;
  return a1;
}

void sub_100ED8EFC(_Unwind_Exception *a1)
{
}

void sub_100ED8F10(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10188ADD0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100ED8F24(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10188ADD0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_100ED8FF4(id a1)
{
  qword_10199F378 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLWorkoutEffortServiceSilo");
}

void sub_100ED90D8(id a1)
{
}

id sub_100ED9168(uint64_t a1, void *a2)
{
  if (qword_1019347E0 != -1) {
    dispatch_once(&qword_1019347E0, &stru_10188AEA0);
  }
  unint64_t v4 = (os_log_s *)qword_1019347E8;
  if (os_log_type_enabled((os_log_t)qword_1019347E8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "CLWorkoutEffortService, In callback, calling the update function",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019347E0 != -1) {
      dispatch_once(&qword_1019347E0, &stru_10188AEA0);
    }
    v8[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019347E8,  2LL,  "CLWorkoutEffortService, In callback, calling the update function",  v8,  2);
    uint64_t v7 = (uint8_t *)v6;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void onWorkoutEffortScoreUpdate_bounce(const CLWorkoutEffort::Result &, void *)",  "%s\n",  v6);
    if (v7 != buf) {
      free(v7);
    }
  }

  return [a2 onWorkoutEffortScoreUpdate:a1];
}

void sub_100ED94E4(_Unwind_Exception *a1)
{
}

id sub_100ED9874(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return [a4 onMotionStateMediatorNotification:a2 data:a3];
}

id sub_100ED9884(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return _[a4 onNatalimetryNotification:a2 data:a3];
}

void sub_100EDA168(id a1)
{
  qword_1019347E8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "WorkoutEffort");
}

uint64_t sub_100EDA194(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 2320);
  *(void *)(a1 + 2320) = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  sub_10000AE14(a1 + 2304);
  sub_10000AE14(a1 + 2288);
  uint64_t v3 = *(void **)(a1 + 2160);
  if (v3)
  {
    *(void *)(a1 + 216_Block_object_dispose((const void *)(v1 - 112), 8) = v3;
    operator delete(v3);
  }

  unint64_t v4 = *(void **)(a1 + 1888);
  *(void *)(a1 + 188_Block_object_dispose((const void *)(v1 - 112), 8) = 0LL;
  if (v4) {
    operator delete(v4);
  }
  uint64_t v5 = *(void **)(a1 + 1640);
  if (v5 == (void *)(a1 + 1616))
  {
    uint64_t v6 = 4LL;
    uint64_t v5 = (void *)(a1 + 1616);
  }

  else
  {
    if (!v5) {
      goto LABEL_12;
    }
    uint64_t v6 = 5LL;
  }

  (*(void (**)(void))(*v5 + 8 * v6))();
LABEL_12:
  uint64_t v7 = *(void *)(a1 + 1584);
  *(void *)(a1 + 1584) = 0LL;
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
  }
  uint64_t v8 = *(void *)(a1 + 1544);
  *(void *)(a1 + 1544) = 0LL;
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
  }
  sub_100EDA268((void **)(a1 + 1528), 0LL);
  return a1;
}

void sub_100EDA268(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  *a1 = a2;
  if (v2)
  {
    sub_100231C10(v2 + 53);
    sub_100231C10(v2 + 47);
    operator delete(v2);
  }

void sub_100EDA2AC(id a1)
{
  qword_101934778 = (uint64_t)os_log_create("com.apple.locationd.Motion", "HRRecovery");
}

__n128 sub_100EDA2D8@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)(a1 + 32);
  __int128 v3 = *(_OWORD *)(a1 + 48);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_100EDA2E4()
{
  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_10199F360, (void *)&_mh_execute_header);
}

uint64_t sub_100EDA4D8(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    uint64_t v6 = 0LL;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        LODWORD(v6) = 0;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LODWORD(v6) = 0;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      break;
    }
    int v13 = (unsigned __int16)(v6 >> 3);
    if (v13 == 2)
    {
      *(_BYTE *)(a1 + 24) |= 1u;
      unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v15 <= 0xFFFFFFFFFFFFFFF7LL && v15 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
      {
        uint64_t v16 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 8;
      }

      else
      {
        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
        uint64_t v16 = 0LL;
      }

      *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 112), 8) = v16;
    }

    else if (v13 == 1)
    {
      String = (void *)PBReaderReadString(a2);

      *(void *)(a1 + 16) = String;
    }

    else
    {
      uint64_t result = PBReaderSkipValueWithTag(a2);
      if (!(_DWORD)result) {
        return result;
      }
    }
  }

  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_100EDB0D4(_Unwind_Exception *a1)
{
}

void sub_100EDB0E8(uint64_t a1)
{
}

void sub_100EDB250(_Unwind_Exception *a1)
{
}

void sub_100EDB26C(uint64_t a1)
{
}

void sub_100EDB2A0(uint64_t a1)
{
}

void sub_100EDB30C(id a1)
{
  qword_101934508 = (uint64_t)os_log_create("com.apple.locationd.Motion", "ActivityAlarm");
}

void *sub_100EDB338(void *a1, int a2)
{
  if (v6 < 0) {
    operator delete(__p[0]);
  }
  *a1 = off_10188AF30;
  a1[9] = off_10188AFD8;
  sub_100EDB8C0((uint64_t)a1);
  return a1;
}

void sub_100EDB3C4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
}

uint64_t sub_100EDB3F0(uint64_t a1, char *a2, int a3, uint64_t a4, int a5, float a6)
{
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + _Block_object_dispose((const void *)(v1 - 112), 8) = 0u;
  uint8x8_t v12 = (void *)(a1 + 8);
  *(void *)a1 = off_101826EC8;
  sub_1001B9AC4((void *)(a1 + 8));
  *uint8x8_t v12 = &off_101826EF8;
  *(void *)a1 = off_10188B2C8;
  *(void *)(a1 + 72) = off_10188B370;
  sub_100D8A584(a1 + 72, a2, a3, a1, a6, a4, a5, 0LL);
  *(void *)a1 = off_10188B2C8;
  *(void *)(a1 + 72) = off_10188B370;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 20_Block_object_dispose((const void *)(v1 - 112), 8) = 0u;
  *(_DWORD *)(a1 + 272) = 12000;
  *(void *)(a1 + 280) = off_101826EC8;
  sub_1001B9AC4((void *)(a1 + 288));
  *(void *)(a1 + 28_Block_object_dispose((const void *)(v1 - 112), 8) = &off_101826EF8;
  uint64_t v13 = *(void *)(a1 + 112);
  uint64_t v29 = a1 + 112;
  (*(void (**)(void))(v13 + 16))();
  __int16 v31 = 256;
  if (a3)
  {
    *(void *)(a1 + 224) = 0xBFF0000000000000LL;
LABEL_3:
    (*(void (**)(uint64_t))(*(void *)v29 + 24LL))(v29);
    return a1;
  }

  if (*(char *)(a4 + 23) < 0)
  {
    sub_1010DD48C(__p, *(void **)a4, *(void *)(a4 + 8));
  }

  else
  {
    *(_OWORD *)__int128 __p = *(_OWORD *)a4;
    uint64_t v28 = *(void *)(a4 + 16);
  }

  sub_100D8AF38(a1 + 72, (uint64_t)__p);
  if (SHIBYTE(v28) < 0) {
    operator delete(__p[0]);
  }
  uint64_t v14 = sub_1006E27E8();
  sub_100413284(v14, buf);
  unint64_t v15 = (int *)(a1 + 272);
  char v16 = sub_1002A7CB0(*(uint64_t *)buf, "ActivityInMemoryBufferSize", (_DWORD *)(a1 + 272));
  unint64_t v17 = v34;
  if (v34)
  {
    p_shared_owners = (unint64_t *)&v34->__shared_owners_;
    do
      unint64_t v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }

  if ((v16 & 1) == 0) {
    *unint64_t v15 = 12000;
  }
  if (qword_1019344B0 != -1) {
    dispatch_once(&qword_1019344B0, &stru_10188B298);
  }
  BOOL v20 = (os_log_s *)qword_1019344B8;
  if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
  {
    int v21 = *v15;
    *(_DWORD *)uint64_t buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = v21;
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEBUG, "Buffer size: %d", buf, 8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_10188B298);
    }
    int v24 = *v15;
    v32[0] = 67109120;
    v32[1] = v24;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  2LL,  "Buffer size: %d",  v32);
    uint64_t v26 = (uint8_t *)v25;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLActivityRecorderDb<ParkinsonsResult, CLActivityDB::ClassBDataProtectionPolicy>::CLActivityRecorderDb(const char *, BOOL, float, const std::string &, const CLSqliteDatabase::SqlitePropertyPersistence) [T = ParkinsonsResult, Dat aProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v25);
    if (v26 != buf) {
      free(v26);
    }
  }

  int v22 = HIBYTE(v31);
  *(void *)(a1 + 224) = 0xBFF0000000000000LL;
  if (v22)
  {
    if ((_BYTE)v31)
    {
      pthread_mutex_unlock(v30);
      return a1;
    }

    goto LABEL_3;
  }

  return a1;
}

void sub_100EDB798( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, char a24)
{
  v24[35] = off_101826EC8;
  sub_1001B9C98(v27);
  sub_1005A8D88(v26);
  sub_100D8A88C(a12);
  void *v24 = off_101826EC8;
  sub_1001B9C98(v25);
  _Unwind_Resume(a1);
}

void sub_100EDB83C()
{
}

void *sub_100EDB844(void *a1)
{
  a1[9] = off_10188B370;
  uint64_t v2 = (uint64_t)(a1 + 9);
  *a1 = off_10188B2C8;
  a1[35] = off_101826EC8;
  sub_1001B9C98(a1 + 36);
  sub_1005A8D88(a1 + 22);
  sub_100D8A88C(v2);
  *a1 = off_101826EC8;
  sub_1001B9C98(a1 + 1);
  return a1;
}

uint64_t sub_100EDB8C0(uint64_t a1)
{
  uint64_t result = sub_1003C1048(*(void *)(a1 + 80));
  if ((_DWORD)result)
  {
    sub_1003B59A0( *(void *)(a1 + 80),  "ParkinsonsResultPersistence",  (const char **)&off_10188B068,  (const std::string::value_type **)&off_1019919C0,  0);
    uint64_t v4 = *(void *)(a1 + 72);
    uint64_t v3 = a1 + 72;
    uint64_t result = (*(uint64_t (**)(uint64_t))(v4 + 48))(v3);
    *(_DWORD *)(v3 + 60) = result;
  }

  return result;
}

uint64_t sub_100EDB920(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_100D8A92C(a1 + 72);
  if ((_DWORD)result)
  {
    sub_10000CE18((uint64_t)v35);
    unsigned int v5 = sub_10000CF44(&v36, (uint64_t)"INSERT INTO ", 12LL);
    (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)a1 + 64LL))(v39, a1);
    if (v39[23] >= 0) {
      char v6 = v39;
    }
    else {
      char v6 = *(_BYTE **)v39;
    }
    if (v39[23] >= 0) {
      uint64_t v7 = v39[23];
    }
    else {
      uint64_t v7 = *(void *)&v39[8];
    }
    unint64_t v8 = sub_10000CF44(v5, (uint64_t)v6, v7);
    sub_10000CF44( v8,  (uint64_t)"(startTime, endTime, percentNoObservation, percentDyskinesiaLikely, percentTremorAbsent, percentTremorSli ght, percentTremorMild, percentTremorModerate, percentTremorStrong) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)",  207LL);
    if ((v39[23] & 0x80000000) != 0) {
      operator delete(*(void **)v39);
    }
    uint64_t v9 = *(void *)(a1 + 80);
    std::stringbuf::str((std::stringbuf::string_type *)v39, &v37);
    if (v39[23] >= 0) {
      unint64_t v10 = v39;
    }
    else {
      unint64_t v10 = *(char **)v39;
    }
    sub_1003C0D54(v9, v10, &v34);
    uint64_t v11 = v34;
    uint64_t v34 = 0LL;
    if ((v39[23] & 0x80000000) != 0) {
      operator delete(*(void **)v39);
    }
    uint8x8_t v12 = (sqlite3_stmt *)sub_100019240(v11);
    uint64_t v13 = (sqlite3_stmt *)sub_100019240(v11);
    uint64_t v14 = (sqlite3_stmt *)sub_100019240(v11);
    unint64_t v15 = (sqlite3_stmt *)sub_100019240(v11);
    char v16 = (sqlite3_stmt *)sub_100019240(v11);
    if (sub_1003B7480(v16, 5, *(float *)(a2 + 24))
      && (unint64_t v17 = (sqlite3_stmt *)sub_100019240(v11), sub_1003B7480(v17, 6, *(float *)(a2 + 28)))
      && (float v18 = (sqlite3_stmt *)sub_100019240(v11), sub_1003B7480(v18, 7, *(float *)(a2 + 32)))
      && (unint64_t v19 = (sqlite3_stmt *)sub_100019240(v11), sub_1003B7480(v19, 8, *(float *)(a2 + 36)))
      && (BOOL v20 = (sqlite3_stmt *)sub_100019240(v11), sub_1003B7480(v20, 9, *(float *)(a2 + 40)))
      && (uint64_t v21 = *(void *)(a1 + 80), v22 = (sqlite3_stmt *)sub_100019240(v11), sub_1003BB2BC(v21, v22)))
    {
      ++*(_DWORD *)(a1 + 132);
    }

    else
    {
LABEL_26:
      if (qword_101934650 != -1) {
        dispatch_once(&qword_101934650, &stru_10188B278);
      }
      size_t v23 = (os_log_s *)qword_101934658;
      if (os_log_type_enabled((os_log_t)qword_101934658, OS_LOG_TYPE_DEFAULT))
      {
        double v24 = *(double *)a2;
        uint64_t v25 = *(void *)(a2 + 8);
        double v26 = *(float *)(a2 + 16);
        double v27 = *(float *)(a2 + 20);
        double v28 = *(float *)(a2 + 24);
        double v29 = *(float *)(a2 + 28);
        double v30 = *(float *)(a2 + 32);
        double v31 = *(float *)(a2 + 36);
        double v32 = *(float *)(a2 + 40);
        *(void *)uint64_t v39 = 68291331LL;
        *(_WORD *)&v39[8] = 2082;
        *(void *)&v39[10] = "";
        *(_WORD *)&v39[18] = 2050;
        *(double *)&v39[20] = v24;
        __int16 v40 = 2050;
        uint64_t v41 = v25;
        __int16 v42 = 2049;
        double v43 = v26;
        __int16 v44 = 2049;
        double v45 = v27;
        __int16 v46 = 2049;
        double v47 = v28;
        __int16 v48 = 2049;
        double v49 = v29;
        __int16 v50 = 2049;
        double v51 = v30;
        __int16 v52 = 2049;
        double v53 = v31;
        __int16 v54 = 2049;
        double v55 = v32;
        _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:Unable to insert record!, startTime:%{public}f, endTime:%{public}f,  percentNoObservation:%{private}f, percentDyskinesiaLikely:%{private}f, percentTremorAbsent: %{private}f, percentTremorSlight:%{private}f, percentTremorMild:%{private}f, percentTremor Moderate:%{private}f, percentTremorStrong:%{private}f}",  v39,  0x6Cu);
      }
    }

    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8LL))(v11);
    }
    *(void *)((char *)v35
    uint64_t v36 = v33;
    std::streambuf::~streambuf(&v37);
    return std::ios::~ios(&v38);
  }

  return result;
}

void sub_100EDBCF8(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

float sub_100EDBD54(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v5 = (sqlite3_stmt *)sub_100019240(*a2);
  *(double *)a3 = sqlite3_column_double(v5, 1);
  char v6 = (sqlite3_stmt *)sub_100019240(*a2);
  *(double *)(a3 + _Block_object_dispose((const void *)(v1 - 112), 8) = sqlite3_column_double(v6, 2);
  uint64_t v7 = (sqlite3_stmt *)sub_100019240(*a2);
  float v8 = sqlite3_column_double(v7, 3);
  *(float *)(a3 + 16) = v8;
  uint64_t v9 = (sqlite3_stmt *)sub_100019240(*a2);
  float v10 = sqlite3_column_double(v9, 4);
  *(float *)(a3 + 20) = v10;
  uint64_t v11 = (sqlite3_stmt *)sub_100019240(*a2);
  float v12 = sqlite3_column_double(v11, 5);
  *(float *)(a3 + 24) = v12;
  uint64_t v13 = (sqlite3_stmt *)sub_100019240(*a2);
  float v14 = sqlite3_column_double(v13, 6);
  *(float *)(a3 + 2_Block_object_dispose((const void *)(v1 - 112), 8) = v14;
  unint64_t v15 = (sqlite3_stmt *)sub_100019240(*a2);
  float v16 = sqlite3_column_double(v15, 7);
  *(float *)(a3 + 32) = v16;
  unint64_t v17 = (sqlite3_stmt *)sub_100019240(*a2);
  float v18 = sqlite3_column_double(v17, 8);
  *(float *)(a3 + 36) = v18;
  unint64_t v19 = (sqlite3_stmt *)sub_100019240(*a2);
  float result = sqlite3_column_double(v19, 9);
  *(float *)(a3 + 40) = result;
  return result;
}

void *sub_100EDBE44@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "ParkinsonsResultPersistence");
}

void *sub_100EDBE54@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "ParkinsonsResultPersistence");
}

uint64_t sub_100EDBE64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 72;
  sub_1003C0454(*(void *)(a1 + 80));
  double Current = CFAbsoluteTimeGetCurrent();
  sub_10000CE18((uint64_t)v27);
  char v6 = sub_10000CF44(&v28, (uint64_t)"DELETE FROM ", 12LL);
  (*(void (**)(std::stringbuf::string_type *__return_ptr, uint64_t))(*(void *)a1 + 64LL))(__p, a1);
  if ((__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t v7 = __p;
  }
  else {
    uint64_t v7 = (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
  }
  if ((__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t size = __p[0].__r_.__value_.__s.__size_;
  }
  else {
    uint64_t size = __p[0].__r_.__value_.__l.__size_;
  }
  uint64_t v9 = sub_10000CF44(v6, (uint64_t)v7, size);
  sub_10000CF44(v9, (uint64_t)" WHERE startTime < ?", 20LL);
  uint64_t v10 = *(void *)(a1 + 80);
  std::stringbuf::str(__p, &v29);
  if ((__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t v11 = __p;
  }
  else {
    uint64_t v11 = (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
  }
  sub_1003C0D54(v10, (char *)v11, &v32);
  uint64_t v12 = v32;
  uint64_t v32 = 0LL;
  uint64_t v13 = (sqlite3_stmt *)sub_100019240(v12);
  if (sub_1003B7480(v13, 1, Current - *(double *)(*(void *)(a2 + 8) - 24LL)))
  {
    uint64_t v14 = *(void *)(a1 + 80);
    unint64_t v15 = (sqlite3_stmt *)sub_100019240(v12);
    sub_1003BB2BC(v14, v15);
    int v16 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 48LL))(v4);
    uint64_t v17 = v16;
    *(_DWORD *)(a1 + 132) = v16;
  }

  else
  {
    uint64_t v17 = -1LL;
  }

  sub_1003C05BC(*(void *)(a1 + 80));
  if (!*(_BYTE *)(*(void *)(a2 + 8) - 8LL))
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_10188B298);
    }
    float v18 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
    {
      int v19 = *(unsigned __int8 *)(*(void *)(a2 + 8) - 8LL);
      LODWORD(__p[0].__r_.__value_.__l.__data_) = 67109120;
      HIDWORD(__p[0].__r_.__value_.__r.__words[0]) = v19;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEBUG,  "Calling reduceFreePages() after aggregation, skipReduceFreePages, %d",  (uint8_t *)__p,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_10188B298);
      }
      int v24 = *(unsigned __int8 *)(*(void *)(a2 + 8) - 8LL);
      LODWORD(v32) = 67109120;
      HIDWORD(v32) = v24;
      _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_1019344B8,  2LL,  "Calling reduceFreePages() after aggregation, skipReduceFreePages, %d",  &v32);
      double v26 = (std::stringbuf::string_type *)v25;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual long CLParkinsonsResultRecorderDb::aggregateRecords(const CLAggregationRules &)",  "%s\n",  v25);
      if (v26 != __p) {
        free(v26);
      }
    }

    uint64_t v20 = *(void *)(a1 + 80);
    else {
      uint64_t v21 = *(void *)(v20 + 88);
    }
    sub_1003C1EC0(v20, v21);
  }

  if (v12) {
    (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
  }
  *(void *)((char *)v27
  uint64_t v28 = v22;
  std::streambuf::~streambuf(&v29);
  std::ios::~ios(&v30);
  return v17;
}

void sub_100EDC23C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, void *__p, uint64_t a48, int a49, __int16 a50,char a51,char a52)
{
  if (v52) {
    (*(void (**)(uint64_t))(*(void *)v52 + 8LL))(v52);
  }
  sub_1011F8850((uint64_t)&a12);
  _Unwind_Resume(a1);
}

uint64_t sub_100EDC29C(uint64_t a1, uint64_t a2)
{
  return sub_100EDBE64(a1 - 72, a2);
}

void sub_100EDC2A8(void *a1)
{
  uint64_t v1 = sub_100EDB844(a1);
  operator delete(v1);
}

uint64_t sub_100EDC2BC(uint64_t *a1, char **a2)
{
  uint64_t v4 = (*(void *(**)(void **__return_ptr))(*a1 + 64))(v39);
  if ((SHIBYTE(v40) & 0x80000000) == 0)
  {
    if (HIBYTE(v40)) {
      goto LABEL_3;
    }
LABEL_43:
    sub_1012773A0(v4);
LABEL_44:
    sub_100007008();
  }

  uint64_t v33 = v39[1];
  operator delete(v39[0]);
  if (!v33) {
    goto LABEL_43;
  }
LABEL_3:
  uint64_t result = sub_100D8A92C(a1 + 9);
  if ((_DWORD)result)
  {
    a2[1] = *a2;
    sub_10000CE18((uint64_t)v39);
    char v6 = sub_10000CF44(&v40, (uint64_t)"SELECT * from ", 14LL);
    (*(void (**)(void **__return_ptr, uint64_t *))(*a1 + 64))(__p, a1);
    if ((SBYTE7(v35) & 0x80u) == 0) {
      uint64_t v7 = __p;
    }
    else {
      uint64_t v7 = (void **)__p[0];
    }
    if ((SBYTE7(v35) & 0x80u) == 0) {
      uint64_t v8 = BYTE7(v35);
    }
    else {
      uint64_t v8 = (uint64_t)__p[1];
    }
    uint64_t v9 = sub_10000CF44(v6, (uint64_t)v7, v8);
    sub_10000CF44(v9, (uint64_t)" ORDER BY id ASC", 16LL);
    if (SBYTE7(v35) < 0) {
      operator delete(__p[0]);
    }
    uint64_t v10 = a1[10];
    std::stringbuf::str((std::stringbuf::string_type *)__p, &v41);
    if ((SBYTE7(v35) & 0x80u) == 0) {
      uint64_t v11 = (char *)__p;
    }
    else {
      uint64_t v11 = (char *)__p[0];
    }
    sub_1003C0D54(v10, v11, &v37);
    uint64_t v12 = v37;
    uint64_t v37 = 0LL;
    uint64_t v38 = v12;
    if (SBYTE7(v35) < 0) {
      operator delete(__p[0]);
    }
    sub_1003C0454(a1[10]);
    while (!sub_1001BA11C((uint64_t)a1, &v38, (uint64_t)__p))
    {
      uint64_t v13 = a2[1];
      unint64_t v14 = (unint64_t)a2[2];
      if ((unint64_t)v13 >= v14)
      {
        unint64_t v18 = 0xAAAAAAAAAAAAAAABLL * ((v13 - *a2) >> 4);
        unint64_t v19 = v18 + 1;
        if (v18 + 1 > 0x555555555555555LL) {
          goto LABEL_44;
        }
        unint64_t v20 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v14 - (void)*a2) >> 4);
        if (2 * v20 > v19) {
          unint64_t v19 = 2 * v20;
        }
        if (v20 >= 0x2AAAAAAAAAAAAAALL) {
          unint64_t v21 = 0x555555555555555LL;
        }
        else {
          unint64_t v21 = v19;
        }
        if (v21) {
          uint64_t v22 = (char *)sub_1000BB1F4((uint64_t)(a2 + 2), v21);
        }
        else {
          uint64_t v22 = 0LL;
        }
        size_t v23 = &v22[48 * v18];
        __int128 v24 = *(_OWORD *)__p;
        __int128 v25 = v36;
        *((_OWORD *)v23 + 1) = v35;
        *((_OWORD *)v23 + 2) = v25;
        *(_OWORD *)size_t v23 = v24;
        double v27 = *a2;
        double v26 = a2[1];
        uint64_t v28 = v23;
        if (v26 != *a2)
        {
          do
          {
            __int128 v29 = *((_OWORD *)v26 - 3);
            __int128 v30 = *((_OWORD *)v26 - 1);
            *((_OWORD *)v28 - 2) = *((_OWORD *)v26 - 2);
            *((_OWORD *)v28 - 1) = v30;
            *((_OWORD *)v28 - 3) = v29;
            v28 -= 48;
            v26 -= 48;
          }

          while (v26 != v27);
          double v26 = *a2;
        }

        uint64_t v17 = v23 + 48;
        *a2 = v28;
        a2[1] = v23 + 48;
        a2[2] = &v22[48 * v21];
        if (v26) {
          operator delete(v26);
        }
      }

      else
      {
        __int128 v15 = *(_OWORD *)__p;
        __int128 v16 = v36;
        *((_OWORD *)v13 + 1) = v35;
        *((_OWORD *)v13 + 2) = v16;
        *(_OWORD *)uint64_t v13 = v15;
        uint64_t v17 = v13 + 48;
      }

      a2[1] = v17;
    }

    sub_1003C05BC(a1[10]);
    uint64_t v31 = v38;
    uint64_t v38 = 0LL;
    if (v31) {
      (*(void (**)(uint64_t))(*(void *)v31 + 8LL))(v31);
    }
    *(void **)((char *)v39
    uint64_t v40 = v32;
    std::streambuf::~streambuf(&v41);
    return std::ios::~ios(&v42);
  }

  return result;
}

void sub_100EDC5C0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, char a21)
{
  if (v21) {
    (*(void (**)(uint64_t))(*(void *)v21 + 8LL))(v21);
  }
  sub_1011F8850((uint64_t)&a21);
  _Unwind_Resume(a1);
}

uint64_t sub_100EDC628(void *a1, void **a2, double a3, double a4)
{
  uint64_t v10 = (*(void *(**)(void **__return_ptr))(*a1 + 64LL))(v45);
  if ((SHIBYTE(v46) & 0x80000000) == 0)
  {
    if (HIBYTE(v46)) {
      goto LABEL_3;
    }
LABEL_39:
    sub_10127750C(v10);
    goto LABEL_40;
  }

  uint64_t v4 = (std::stringbuf *)v45[1];
  operator delete(v45[0]);
  if (!v4) {
    goto LABEL_39;
  }
LABEL_3:
  sub_10000CE18((uint64_t)v45);
  uint64_t v11 = sub_10000CF44(&v46, (uint64_t)"SELECT * FROM ", 14LL);
  (*(void (**)(void **__return_ptr, void *))(*a1 + 64LL))(__p, a1);
  if ((SBYTE7(v41) & 0x80u) == 0) {
    uint64_t v12 = __p;
  }
  else {
    uint64_t v12 = (void **)__p[0];
  }
  if ((SBYTE7(v41) & 0x80u) == 0) {
    uint64_t v13 = BYTE7(v41);
  }
  else {
    uint64_t v13 = (uint64_t)__p[1];
  }
  unint64_t v14 = sub_10000CF44(v11, (uint64_t)v12, v13);
  sub_10000CF44(v14, (uint64_t)" WHERE startTime > ? and startTime <= ? ORDER BY rowid ASC", 58LL);
  if (SBYTE7(v41) < 0) {
    operator delete(__p[0]);
  }
  uint64_t v15 = a1[10];
  uint64_t v4 = &v47;
  std::stringbuf::str((std::stringbuf::string_type *)__p, &v47);
  if ((SBYTE7(v41) & 0x80u) == 0) {
    __int128 v16 = (char *)__p;
  }
  else {
    __int128 v16 = (char *)__p[0];
  }
  sub_1003C0D54(v15, v16, &v43);
  uint64_t v5 = v43;
  uint64_t v43 = 0LL;
  uint64_t v44 = v5;
  if (SBYTE7(v41) < 0) {
    operator delete(__p[0]);
  }
  uint64_t v17 = (sqlite3_stmt *)sub_100019240(v5);
  if (sub_1003B7480(v17, 1, a3))
  {
    unint64_t v18 = (sqlite3_stmt *)sub_100019240(v5);
    if (sub_1003B7480(v18, 2, a4))
    {
      while (1)
      {
        uint64_t v19 = sub_1001BA11C((uint64_t)a1, &v44, (uint64_t)__p);
        if ((_DWORD)v19) {
          break;
        }
        unint64_t v20 = a2[1];
        unint64_t v21 = (unint64_t)a2[2];
        if ((unint64_t)v20 >= v21)
        {
          unint64_t v25 = 0xAAAAAAAAAAAAAAABLL * (((char *)v20 - (_BYTE *)*a2) >> 4);
          unint64_t v26 = v25 + 1;
          if (v25 + 1 > 0x555555555555555LL) {
            sub_100007008();
          }
          unint64_t v27 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v21 - (void)*a2) >> 4);
          if (2 * v27 > v26) {
            unint64_t v26 = 2 * v27;
          }
          if (v27 >= 0x2AAAAAAAAAAAAAALL) {
            unint64_t v28 = 0x555555555555555LL;
          }
          else {
            unint64_t v28 = v26;
          }
          if (v28) {
            __int128 v29 = (char *)sub_1000BB1F4((uint64_t)(a2 + 2), v28);
          }
          else {
            __int128 v29 = 0LL;
          }
          __int128 v30 = &v29[48 * v25];
          __int128 v31 = *(_OWORD *)__p;
          __int128 v32 = v42;
          *((_OWORD *)v30 + 1) = v41;
          *((_OWORD *)v30 + 2) = v32;
          *(_OWORD *)__int128 v30 = v31;
          uint64_t v34 = (char *)*a2;
          uint64_t v33 = (char *)a2[1];
          __int128 v35 = v30;
          if (v33 != *a2)
          {
            do
            {
              __int128 v36 = *((_OWORD *)v33 - 3);
              __int128 v37 = *((_OWORD *)v33 - 1);
              *((_OWORD *)v35 - 2) = *((_OWORD *)v33 - 2);
              *((_OWORD *)v35 - 1) = v37;
              *((_OWORD *)v35 - 3) = v36;
              v35 -= 48;
              v33 -= 48;
            }

            while (v33 != v34);
            uint64_t v33 = (char *)*a2;
          }

          __int128 v24 = v30 + 48;
          *a2 = v35;
          a2[1] = v30 + 48;
          a2[2] = &v29[48 * v28];
          if (v33) {
            operator delete(v33);
          }
        }

        else
        {
          __int128 v22 = *(_OWORD *)__p;
          __int128 v23 = v42;
          v20[1] = v41;
          v20[2] = v23;
          *unint64_t v20 = v22;
          __int128 v24 = v20 + 3;
        }

        a2[1] = v24;
      }

      uint64_t v5 = v44;
      goto LABEL_42;
    }
  }

void sub_100EDC970( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a21);
  _Unwind_Resume(a1);
}

uint64_t sub_100EDC9D8(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 112);
  uint64_t v2 = a1 + 112;
  uint64_t v4 = v2 - 40;
  uint64_t v40 = v2;
  (*(void (**)(void))(v3 + 16))();
  if (sub_100D8A92C(v4))
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_10188B298);
    }
    uint64_t v5 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
    {
      char v6 = (void *)(a1 + 88);
      *(_DWORD *)uint64_t buf = 68289282;
      *(_DWORD *)uint64_t v44 = 0;
      *(_WORD *)&v44[4] = 2082;
      *(void *)&v44[6] = "";
      __int16 v45 = 2082;
      uint64_t v46 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:Database is already opened., name:%{public, location:escape_only}s}",  buf,  0x1Cu);
    }

    if (*(void *)(a1 + 216))
    {
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_10188B298);
      }
      uint64_t v7 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_FAULT))
      {
        uint64_t v8 = *(void *)(a1 + 216);
        *(_DWORD *)uint64_t buf = 134349056;
        *(void *)uint64_t v44 = v8;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "In memory buffer should have been empty! Instead it had a size of %{public}lu.",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_10188B298);
        }
        uint64_t v35 = *(void *)(a1 + 216);
        int v41 = 134349056;
        uint64_t v42 = v35;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  17LL,  "In memory buffer should have been empty! Instead it had a size of %{public}lu.",  &v41,  12);
        __int128 v37 = (uint8_t *)v36;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLActivityRecorderDb<ParkinsonsResult, CLActivityDB::ClassBDataProtectionPolicy>::setDatabaseAcce ssible() [T = ParkinsonsResult, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v36);
        if (v37 != buf) {
          free(v37);
        }
      }
    }

    uint64_t v9 = 1LL;
    goto LABEL_63;
  }

  sub_1001BA070(a1);
  uint64_t v9 = sub_100D8A92C(v4);
  if ((_DWORD)v9)
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_10188B298);
    }
    uint64_t v10 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v11 = (void *)(a1 + 88);
      uint64_t v12 = *(void *)(a1 + 216);
      *(_DWORD *)uint64_t buf = 68289539;
      *(_DWORD *)uint64_t v44 = 0;
      *(_WORD *)&v44[4] = 2082;
      *(void *)&v44[6] = "";
      __int16 v45 = 2082;
      uint64_t v46 = v11;
      __int16 v47 = 2049;
      uint64_t v48 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:Inserting entries into database, name:%{public, location:escape_only}s, size:%{private}llu}",  buf,  0x26u);
    }

    sub_1003C0454(*(void *)(a1 + 80));
    unint64_t v13 = *(void *)(a1 + 208);
    uint64_t v14 = *(void *)(a1 + 184);
    uint64_t v15 = *(void *)(a1 + 192);
    __int128 v16 = (void *)(v14 + 8 * (v13 / 0x55));
    unsigned int v39 = v9;
    if (v15 == v14) {
      unint64_t v17 = 0LL;
    }
    else {
      unint64_t v17 = *v16 + 48 * (v13 % 0x55);
    }
    while (1)
    {
      if (v15 == v14)
      {
        unint64_t v23 = 0LL;
      }

      else
      {
        unint64_t v22 = *(void *)(a1 + 216) + *(void *)(a1 + 208);
        unint64_t v23 = *(void *)(v14 + 8 * (v22 / 0x55)) + 48 * (v22 % 0x55);
      }

      if (v17 == v23) {
        break;
      }
      if (qword_101934510 != -1) {
        dispatch_once(&qword_101934510, &stru_10188B3B0);
      }
      __int128 v24 = (os_log_s *)qword_101934518;
      if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEBUG, "Adding from buffer to db.", buf, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934510 != -1) {
          dispatch_once(&qword_101934510, &stru_10188B3B0);
        }
        LOWORD(v41) = 0;
        LODWORD(v3_Block_object_dispose((const void *)(v1 - 112), 8) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934518,  2LL,  "Adding from buffer to db.",  &v41,  v38);
        unint64_t v27 = (uint8_t *)v26;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLActivityRecorderDb<ParkinsonsResult, CLActivityDB::ClassBDataProtectionPolicy>::setDatabaseAcce ssible() [T = ParkinsonsResult, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v26);
        if (v27 != buf) {
          free(v27);
        }
      }

      (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)a1 + 80LL))(a1, v17, 1LL);
      v17 += 48LL;
      if (v17 - *v16 == 4080)
      {
        unint64_t v25 = v16[1];
        ++v16;
        unint64_t v17 = v25;
      }

      uint64_t v14 = *(void *)(a1 + 184);
      uint64_t v15 = *(void *)(a1 + 192);
    }

    sub_1003C05BC(*(void *)(a1 + 80));
    uint64_t v9 = v39;
  }

  else
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_10188B298);
    }
    unint64_t v18 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_FAULT))
    {
      uint64_t v19 = (void *)(a1 + 88);
      *(_DWORD *)uint64_t buf = 68289282;
      *(_DWORD *)uint64_t v44 = 0;
      *(_WORD *)&v44[4] = 2082;
      *(void *)&v44[6] = "";
      __int16 v45 = 2082;
      uint64_t v46 = v19;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Unexpected error condition! Device has been unlocked but database remains unreadable!, name:%{public, location:escape_only}s}",  buf,  0x1Cu);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_10188B298);
      }
    }

    unint64_t v20 = (os_log_s *)qword_1019344B8;
    if (os_signpost_enabled((os_log_t)qword_1019344B8))
    {
      unint64_t v21 = (void *)(a1 + 88);
      *(_DWORD *)uint64_t buf = 68289282;
      *(_DWORD *)uint64_t v44 = 0;
      *(_WORD *)&v44[4] = 2082;
      *(void *)&v44[6] = "";
      __int16 v45 = 2082;
      uint64_t v46 = v21;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v20,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Unexpected error condition! Device has been unlocked but database remains unreadable!",  "{msg%{public}.0s:Unexpected error condition! Device has been unlocked but database remains unreadable!, name:%{public, location:escape_only}s}",  buf,  0x1Cu);
    }

    *(_BYTE *)(a1 + 12_Block_object_dispose((const void *)(v1 - 112), 8) = 1;
  }

  unint64_t v28 = *(void ***)(a1 + 184);
  uint64_t v29 = *(void *)(a1 + 192);
  *(void *)(a1 + 216) = 0LL;
  unint64_t v30 = v29 - (void)v28;
  if (v30 >= 0x11)
  {
    do
    {
      operator delete(*v28);
      uint64_t v31 = *(void *)(a1 + 192);
      unint64_t v28 = (void **)(*(void *)(a1 + 184) + 8LL);
      *(void *)(a1 + 184) = v28;
      unint64_t v30 = v31 - (void)v28;
    }

    while (v30 > 0x10);
  }

  if (v30 >> 3 == 1)
  {
    uint64_t v32 = 42LL;
  }

  else
  {
    if (v30 >> 3 != 2) {
      goto LABEL_61;
    }
    uint64_t v32 = 85LL;
  }

  *(void *)(a1 + 20_Block_object_dispose((const void *)(v1 - 112), 8) = v32;
LABEL_61:
  uint64_t v33 = *(void **)(a1 + 144);
  if (v33)
  {

    *(void *)(a1 + 144) = 0LL;
  }

void sub_100EDD104(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

id *sub_100EDD138(uint64_t a1, __int128 *a2, char a3)
{
  v34[0] = (id)os_transaction_create("CLActivityRecorderDb::sanitizeAndStoreRecordUL");
  v34[1] = 0LL;
  if (*(double *)(a1 + 224) > 0.0
    && (*(unsigned int (**)(uint64_t, uint64_t, __int128 *))(*(void *)a1 + 136LL))(a1, a1 + 224, a2))
  {
    (*(void (**)(uint64_t, uint64_t, __int128 *))(*(void *)a1 + 72LL))(a1, a1 + 224, a2);
    return sub_1001BA1BC(v34);
  }

  if ((a3 & 1) == 0) {
    sub_1003C0454(*(void *)(a1 + 80));
  }
  int v6 = (*(uint64_t (**)(uint64_t, double *))(*(void *)a1 + 104LL))(a1, v33);
  if (v6 == 1)
  {
    (*(void (**)(uint64_t, __int128 *, uint64_t))(*(void *)a1 + 120LL))(a1, a2, 1LL);
  }

  else
  {
    if (v6)
    {
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_10188B298);
      }
      uint64_t v14 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "Failed to insert record due to failure from reading the most recent entry.",  buf,  2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_10188B298);
        }
        LOWORD(v35) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  17LL,  "Failed to insert record due to failure from reading the most recent entry.",  &v35,  2);
        __int128 v16 = (uint8_t *)v15;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLActivityRecorderDb<ParkinsonsResult, CLActivityDB::ClassBDataProtectionPolicy>::sanitizeAndStor eRecordUL(const T &, BOOL) [T = ParkinsonsResult, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v15);
        if (v16 != buf) {
          free(v16);
        }
      }

      goto LABEL_43;
    }

    double v7 = *(double *)a2;
    double v8 = v33[0];
    double v9 = *(double *)a2 - v33[0];
    if (v9 < 0.0) {
      double v9 = -v9;
    }
    if (v9 > 604800.0)
    {
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_10188B298);
      }
      uint64_t v10 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEFAULT))
      {
        double v11 = *(double *)a2;
        *(_DWORD *)uint64_t buf = 134349312;
        double v40 = v33[0];
        __int16 v41 = 2050;
        double v42 = v11;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "#Notice Potential CM database inconsistency, time jump %{public}lf %{public}lf",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_10188B298);
        }
        double v24 = *(double *)a2;
        int v35 = 134349312;
        double v36 = v33[0];
        __int16 v37 = 2050;
        double v38 = v24;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  0LL,  "#Notice Potential CM database inconsistency, time jump %{public}lf %{public}lf",  &v35,  22);
        unint64_t v26 = (uint8_t *)v25;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLActivityRecorderDb<ParkinsonsResult, CLActivityDB::ClassBDataProtectionPolicy>::sanitizeAndStor eRecordUL(const T &, BOOL) [T = ParkinsonsResult, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v25);
        if (v26 != buf) {
          free(v26);
        }
      }

      CLWriteStackshot("Potential CM database inconsistency, time jump", 0LL);
      double v7 = *(double *)a2;
      double v8 = v33[0];
    }

    if (v7 < v8)
    {
      if (v8 - v7 < 10.0)
      {
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_10188B298);
        }
        uint64_t v12 = (os_log_s *)qword_1019344B8;
        if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_INFO))
        {
          double v13 = *(double *)a2;
          *(_DWORD *)uint64_t buf = 134217984;
          double v40 = v13;
          _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_INFO,  "Entry being recorded has a startTime in the recent past.  Deleting records after %f.",  buf,  0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019344B0 != -1) {
            dispatch_once(&qword_1019344B0, &stru_10188B298);
          }
          double v27 = *(double *)a2;
          int v35 = 134217984;
          double v36 = v27;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  1LL,  "Entry being recorded has a startTime in the recent past.  Deleting records after %f.",  COERCE_DOUBLE(&v35));
          uint64_t v29 = (uint8_t *)v28;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLActivityRecorderDb<ParkinsonsResult, CLActivityDB::ClassBDataProtectionPolicy>::sanitizeAndSt oreRecordUL(const T &, BOOL) [T = ParkinsonsResult, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v28);
          if (v29 != buf) {
            free(v29);
          }
        }

        (*(void (**)(uint64_t, __int128 *))(*(void *)a1 + 88LL))(a1, a2);
        goto LABEL_42;
      }

      double v17 = v7 - v8;
      double v18 = *(float *)(a1 + 136);
      if (qword_1019344B0 != -1)
      {
        double v32 = *(float *)(a1 + 136);
        dispatch_once(&qword_1019344B0, &stru_10188B298);
        double v18 = v32;
      }

      double v19 = v17 - v18;
      unint64_t v20 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)uint64_t buf = 134217984;
        double v40 = v19;
        _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_INFO,  "Entry being recorded has a startTime in the substantial past.  Shift records by %f.",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_10188B298);
        }
        int v35 = 134217984;
        double v36 = v19;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  1LL,  "Entry being recorded has a startTime in the substantial past.  Shift records by %f.",  COERCE_DOUBLE(&v35));
        uint64_t v31 = (uint8_t *)v30;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLActivityRecorderDb<ParkinsonsResult, CLActivityDB::ClassBDataProtectionPolicy>::sanitizeAndStor eRecordUL(const T &, BOOL) [T = ParkinsonsResult, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v30);
        if (v31 != buf) {
          free(v31);
        }
      }

      (*(void (**)(uint64_t, double))(*(void *)a1 + 96LL))(a1, v19);
    }

    (*(void (**)(uint64_t, double *, uint64_t, __int128 *))(*(void *)a1 + 144LL))(a1, v33, a1 + 224, a2);
    (*(void (**)(uint64_t, __int128 *, uint64_t))(*(void *)a1 + 120LL))(a1, a2, 1LL);
  }

void sub_100EDD87C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
}

uint64_t sub_100EDD8A8(void *a1, double *a2)
{
  uint64_t v4 = (*(void *(**)(void **__return_ptr))(*a1 + 64LL))(v23);
  if ((SHIBYTE(v24) & 0x80000000) == 0)
  {
    if (HIBYTE(v24)) {
      goto LABEL_3;
    }
LABEL_29:
    unint64_t v20 = (_Unwind_Exception *)sub_101277678(v4);
    sub_1011F8850((uint64_t)v23);
    _Unwind_Resume(v20);
  }

  double v19 = v23[1];
  operator delete(v23[0]);
  if (!v19) {
    goto LABEL_29;
  }
LABEL_3:
  uint64_t result = sub_100D8A92C(a1 + 9);
  if ((_DWORD)result)
  {
    (*(void (**)(void *, double *, uint64_t))(*a1 + 120LL))(a1, a2, 1LL);
    sub_10000CE18((uint64_t)v23);
    int v6 = sub_10000CF44(&v24, (uint64_t)"DELETE FROM ", 12LL);
    (*(void (**)(std::stringbuf::string_type *__return_ptr, void *))(*a1 + 64LL))(&__p, a1);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t size = __p.__r_.__value_.__s.__size_;
    }
    else {
      uint64_t size = __p.__r_.__value_.__l.__size_;
    }
    double v9 = sub_10000CF44(v6, (uint64_t)p_p, size);
    sub_10000CF44(v9, (uint64_t)" WHERE startTime > ?", 20LL);
    uint64_t v10 = a1[10];
    std::stringbuf::str(&__p, &v25);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      double v11 = &__p;
    }
    else {
      double v11 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(v10, (char *)v11, &v21);
    uint64_t v12 = v21;
    uint64_t v21 = 0LL;
    double v13 = (sqlite3_stmt *)sub_100019240(v12);
    if (sub_1003B7480(v13, 1, *a2))
    {
      uint64_t v14 = a1[10];
      uint64_t v15 = (sqlite3_stmt *)sub_100019240(v12);
      sub_1003BB2BC(v14, v15);
    }

    uint64_t v16 = a1[10];
    else {
      uint64_t v17 = *(void *)(v16 + 88);
    }
    sub_1003C1EC0(v16, v17);
    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
    }
    *(void **)((char *)v23
    uint64_t v24 = v18;
    std::streambuf::~streambuf(&v25);
    return std::ios::~ios(&v26);
  }

  return result;
}

uint64_t sub_100EDDB08(void *a1, double a2)
{
  uint64_t v4 = (*(void *(**)(void **__return_ptr))(*a1 + 64LL))(v21);
  if ((SHIBYTE(v22) & 0x80000000) == 0)
  {
    if (HIBYTE(v22)) {
      goto LABEL_3;
    }
LABEL_26:
    uint64_t v18 = (_Unwind_Exception *)sub_1012777E4(v4);
    sub_1011F8850((uint64_t)v21);
    _Unwind_Resume(v18);
  }

  uint64_t v17 = v21[1];
  operator delete(v21[0]);
  if (!v17) {
    goto LABEL_26;
  }
LABEL_3:
  uint64_t result = sub_100D8A92C(a1 + 9);
  if ((_DWORD)result)
  {
    sub_10000CE18((uint64_t)v21);
    int v6 = sub_10000CF44(&v22, (uint64_t)"UPDATE ", 7LL);
    (*(void (**)(std::stringbuf::string_type *__return_ptr, void *))(*a1 + 64LL))(&__p, a1);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t size = __p.__r_.__value_.__s.__size_;
    }
    else {
      uint64_t size = __p.__r_.__value_.__l.__size_;
    }
    double v9 = sub_10000CF44(v6, (uint64_t)p_p, size);
    sub_10000CF44(v9, (uint64_t)" SET startTime = startTime + ?", 30LL);
    uint64_t v10 = a1[10];
    std::stringbuf::str(&__p, &v23);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      double v11 = &__p;
    }
    else {
      double v11 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(v10, (char *)v11, &v19);
    uint64_t v12 = v19;
    uint64_t v19 = 0LL;
    double v13 = (sqlite3_stmt *)sub_100019240(v12);
    if (sub_1003B7480(v13, 1, a2))
    {
      uint64_t v14 = a1[10];
      uint64_t v15 = (sqlite3_stmt *)sub_100019240(v12);
      sub_1003BB2BC(v14, v15);
    }

    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
    }
    *(void **)((char *)v21
    uint64_t v22 = v16;
    std::streambuf::~streambuf(&v23);
    return std::ios::~ios(&v24);
  }

  return result;
}

uint64_t sub_100EDDD40(void *a1, uint64_t a2)
{
  uint64_t v4 = (*(void *(**)(void **__return_ptr))(*a1 + 64LL))(v22);
  if ((SHIBYTE(v23) & 0x80000000) == 0)
  {
    if (HIBYTE(v23)) {
      goto LABEL_3;
    }
LABEL_25:
    uint64_t v17 = (_Unwind_Exception *)sub_101277950(v4);
    uint64_t v18 = v20;
    uint64_t v20 = 0LL;
    if (v18) {
      (*(void (**)(uint64_t))(*(void *)v18 + 8LL))(v18);
    }
    sub_1011F8850((uint64_t)v22);
    _Unwind_Resume(v17);
  }

  uint64_t v16 = v22[1];
  operator delete(v22[0]);
  if (!v16) {
    goto LABEL_25;
  }
LABEL_3:
  sub_10000CE18((uint64_t)v22);
  uint64_t v5 = sub_10000CF44(&v23, (uint64_t)"SELECT * FROM ", 14LL);
  (*(void (**)(std::stringbuf::string_type *__return_ptr, void *))(*a1 + 64LL))(&__p, a1);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t size = __p.__r_.__value_.__s.__size_;
  }
  else {
    uint64_t size = __p.__r_.__value_.__l.__size_;
  }
  double v8 = sub_10000CF44(v5, (uint64_t)p_p, size);
  sub_10000CF44(v8, (uint64_t)" ORDER BY ROWID DESC LIMIT 1", 28LL);
  uint64_t v9 = a1[10];
  std::stringbuf::str(&__p, &v24);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t v10 = &__p;
  }
  else {
    uint64_t v10 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
  }
  sub_1003C0D54(v9, (char *)v10, &v19);
  uint64_t v11 = v19;
  uint64_t v19 = 0LL;
  uint64_t v20 = v11;
  uint64_t v12 = sub_1001BA11C((uint64_t)a1, &v20, a2);
  uint64_t v13 = v20;
  uint64_t v20 = 0LL;
  if (v13) {
    (*(void (**)(uint64_t))(*(void *)v13 + 8LL))(v13);
  }
  *(void **)((char *)v22
  uint64_t v23 = v14;
  std::streambuf::~streambuf(&v24);
  std::ios::~ios(&v25);
  return v12;
}

void *sub_100EDDF68(uint64_t a1)
{
  return sub_100EDB844((void *)(a1 - 72));
}

void sub_100EDDF70(uint64_t a1)
{
  uint64_t v1 = sub_100EDB844((void *)(a1 - 72));
  operator delete(v1);
}

uint64_t sub_100EDDF88(uint64_t a1)
{
  return sub_100EDC9D8(a1 - 72);
}

void sub_100EDDF90(id a1)
{
  qword_101934658 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Health");
}

void sub_100EDDFBC(id a1)
{
  qword_1019344B8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Motion");
}

void sub_100EDDFE8(id a1)
{
  qword_101934518 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Pedometer");
}

uint64_t sub_100EDE014()
{
  if (qword_1019A3DA0) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A3DA0 + 8LL))(qword_1019A3DA0);
  }
  uint64_t result = qword_1019A3DA8;
  if (qword_1019A3DA8) {
    return (*(uint64_t (**)(uint64_t))(*(void *)qword_1019A3DA8 + 8LL))(qword_1019A3DA8);
  }
  return result;
}

void sub_100EDE058(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_10199F398 & 1) == 0)
  {
    byte_10199F398 = 1;
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::VerifyVersion( (wireless_diagnostics::google::protobuf::internal *)0x1E9808,  2005000,  (int)"/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPLogEntry.pb.cc",  a4);
    sub_1005E5E24(v4, v5, v6, v7);
    double v8 = operator new(0x38uLL);
    sub_100EDE670(v8);
    qword_1019A3DA0 = (uint64_t)v8;
    uint64_t v9 = (char *)operator new(0x30uLL);
    *(void *)uint64_t v9 = off_10188B3E0;
    *(_OWORD *)(v9 + _Block_object_dispose((const void *)(v1 - 112), 8) = 0u;
    *(_OWORD *)(v9 + 24) = 0u;
    *((void *)v9 + 5) = 0LL;
    qword_1019A3DA8 = (uint64_t)v9;
    v8[4] = v9;
    v8[5] = sub_1005E7A44((uint64_t)v9, v10, v11, v12);
    wireless_diagnostics::google::protobuf::internal::OnShutdown( (wireless_diagnostics::google::protobuf::internal *)sub_100EDE014,  v13);
  }

void sub_100EDE108(_Unwind_Exception *a1)
{
}

double sub_100EDE120(uint64_t a1)
{
  *(void *)a1 = off_10188B3E0;
  double result = 0.0;
  *(_OWORD *)(a1 + _Block_object_dispose((const void *)(v1 - 112), 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = 0LL;
  return result;
}

double sub_100EDE140(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPLogEntry.pb.cc",  280LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 44);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 44) & 1) != 0)
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 44) |= 1u;
      *(double *)(a1 + _Block_object_dispose((const void *)(v1 - 112), 8) = result;
      int v6 = *(_DWORD *)(a2 + 44);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }

    else if ((*(_BYTE *)(a2 + 44) & 2) == 0)
    {
      goto LABEL_6;
    }

    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 44) |= 2u;
    *(double *)(a1 + 16) = result;
    int v6 = *(_DWORD *)(a2 + 44);
    if ((v6 & 4) == 0)
    {
LABEL_7:
      if ((v6 & 8) == 0) {
        return result;
      }
      goto LABEL_8;
    }

void sub_100EDE230(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100EDE248(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10188B3E0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100EDE258(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10188B3E0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

double sub_100EDE278()
{
  unsigned __int8 v0 = (char *)operator new(0x30uLL);
  *(void *)unsigned __int8 v0 = off_10188B3E0;
  double result = 0.0;
  *(_OWORD *)(v0 + _Block_object_dispose((const void *)(v1 - 112), 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *((void *)v0 + 5) = 0LL;
  return result;
}

uint64_t sub_100EDE2AC(uint64_t result)
{
  if (*(_BYTE *)(result + 44))
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose((const void *)(v1 - 112), 8) = 0u;
  }

  *(_DWORD *)(result + 44) = 0;
  return result;
}

uint64_t sub_100EDE2C8( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 112), 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 112), 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_24;
        }
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v16) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 112), 8) = v16;
        *(_DWORD *)(a1 + 44) |= 1u;
        char v8 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v8 + 1;
        goto LABEL_14;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_24;
        }
LABEL_14:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v16) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = v16;
        *(_DWORD *)(a1 + 44) |= 2u;
        uint64_t v9 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v9 + 1;
LABEL_19:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v16) & 1) != 0)
        {
          *(void *)(a1 + 24) = v16;
          *(_DWORD *)(a1 + 44) |= 4u;
          uint64_t v11 = (_BYTE *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          if ((unint64_t)v11 < v10 && *v11 == 32)
          {
            uint64_t v12 = v11 + 1;
            *((void *)this + 1) = v12;
LABEL_28:
            if ((unint64_t)v12 >= v10 || *v12 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, &v16);
              if (!(_DWORD)result) {
                return result;
              }
              unint64_t v13 = v16;
              uint64_t v14 = (unsigned __int8 *)*((void *)this + 1);
              unint64_t v10 = *((void *)this + 2);
            }

            else
            {
              unint64_t v13 = *v12;
              uint64_t v14 = (unsigned __int8 *)(v12 + 1);
              *((void *)this + 1) = v14;
            }

            *(void *)(a1 + 32) = v13;
            *(_DWORD *)(a1 + 44) |= 8u;
            if (v14 == (unsigned __int8 *)v10
              && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 112), 8) = 0;
              uint64_t result = 1LL;
              *((_BYTE *)this + 36) = 1;
              return result;
            }
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_19;
        }
        goto LABEL_24;
      case 4u:
        int v7 = TagFallback & 7;
        uint64_t v12 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_28;
      default:
        int v7 = TagFallback & 7;
LABEL_24:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_100EDE50C( uint64_t result, uint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 44);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  a2,  *(double *)(result + 8),  a3);
    int v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  a2,  *(double *)(v5 + 16),  a3);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      return result;
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  *(void *)(v5 + 32),  a2,  a4);
  }

uint64_t sub_100EDE5A0(uint64_t a1, unint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 44);
  if (*(_BYTE *)(a1 + 44))
  {
    unsigned int v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 8) != 0) {
      uint64_t v5 = v5
    }
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 32),  a2)
         + 1;
  }

  else
  {
    uint64_t v5 = 0LL;
  }

  *(_DWORD *)(a1 + 40) = v5;
  return v5;
}

double sub_100EDE60C(uint64_t a1, void *lpsrc)
{
  return sub_100EDE140(a1, (uint64_t)lpsrc);
}

uint64_t sub_100EDE658()
{
  return 1LL;
}

void *sub_100EDE660@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.LogEntry.TimeStamp");
}

void *sub_100EDE670(void *a1)
{
  *a1 = off_10188B458;
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::ExtensionSet((wireless_diagnostics::google::protobuf::internal::ExtensionSet *)(a1 + 1));
  a1[4] = 0LL;
  a1[5] = 0LL;
  a1[6] = 0LL;
  return a1;
}

void sub_100EDE6A8(_Unwind_Exception *a1)
{
}

uint64_t sub_100EDE6BC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v12,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPLogEntry.pb.cc",  521LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v12,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }

  LOBYTE(v5) = *(_BYTE *)(a2 + 52);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 52) & 1) != 0)
    {
      *(_DWORD *)(a1 + 52) |= 1u;
      int v6 = *(char **)(a1 + 32);
      if (!v6)
      {
        int v6 = (char *)operator new(0x30uLL);
        *(void *)int v6 = off_10188B3E0;
        *(_OWORD *)(v6 + _Block_object_dispose((const void *)(v1 - 112), 8) = 0u;
        *(_OWORD *)(v6 + 24) = 0u;
        *((void *)v6 + 5) = 0LL;
        *(void *)(a1 + 32) = v6;
      }

      uint64_t v7 = *(void *)(a2 + 32);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_1019A3DA0 + 32);
      }
      sub_100EDE140((uint64_t)v6, v7);
      int v5 = *(_DWORD *)(a2 + 52);
    }

    if ((v5 & 2) != 0)
    {
      *(_DWORD *)(a1 + 52) |= 2u;
      char v8 = *(void **)(a1 + 40);
      if (!v8)
      {
        char v8 = operator new(0x1F0uLL);
        sub_1005E5F30((uint64_t)v8);
        *(void *)(a1 + 40) = v8;
      }

      uint64_t v9 = *(void *)(a2 + 40);
      if (!v9) {
        uint64_t v9 = *(void *)(qword_1019A3DA0 + 40);
      }
      sub_1005E619C((uint64_t)v8, v9);
    }
  }

  return wireless_diagnostics::google::protobuf::internal::ExtensionSet::MergeFrom( (wireless_diagnostics::google::protobuf::internal::ExtensionSet *)(a1 + 8),  (const wireless_diagnostics::google::protobuf::internal::ExtensionSet *)(a2 + 8));
}

void sub_100EDE7E8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
}

void sub_100EDE810(void *a1)
{
  *a1 = off_10188B458;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::internal::ExtensionSet *)(a1 + 1);
  sub_100EDE84C(a1);
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::~ExtensionSet(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void *sub_100EDE84C(void *result)
{
  if ((void *)qword_1019A3DA0 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[4];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    uint64_t result = (void *)v1[5];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_100EDE8AC(void *a1)
{
}

void *sub_100EDE8C0()
{
  unsigned __int8 v0 = operator new(0x38uLL);
  sub_100EDE670(v0);
  return v0;
}

void sub_100EDE8EC(_Unwind_Exception *a1)
{
}

uint64_t sub_100EDE900(uint64_t a1)
{
  uint64_t result = wireless_diagnostics::google::protobuf::internal::ExtensionSet::Clear((wireless_diagnostics::google::protobuf::internal::ExtensionSet *)(a1 + 8));
  LOBYTE(v3) = *(_BYTE *)(a1 + 52);
  if ((_BYTE)v3)
  {
    if ((*(_BYTE *)(a1 + 52) & 1) != 0)
    {
      uint64_t v4 = *(void *)(a1 + 32);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 44))
        {
          *(_OWORD *)(v4 + 24) = 0u;
          *(_OWORD *)(v4 + _Block_object_dispose((const void *)(v1 - 112), 8) = 0u;
        }

        *(_DWORD *)(v4 + 44) = 0;
        int v3 = *(_DWORD *)(a1 + 52);
      }
    }

    if ((v3 & 2) != 0)
    {
      uint64_t result = *(void *)(a1 + 40);
      if (result) {
        uint64_t result = sub_1005E7AFC(result);
      }
    }
  }

  *(_DWORD *)(a1 + 52) = 0;
  return result;
}

uint64_t sub_100EDE968( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (wireless_diagnostics::google::protobuf::internal::ExtensionSet *)(a1 + 8);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v6 = (char *)*((void *)this + 1);
        if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 112), 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
          *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 112), 8) = (_DWORD)TagFallback;
          *((void *)this + 1) = v6 + 1;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_18;
        }
        *(_DWORD *)(a1 + 52) |= 1u;
        uint64_t v9 = *(char **)(a1 + 32);
        if (!v9)
        {
          uint64_t v9 = (char *)operator new(0x30uLL);
          *(void *)uint64_t v9 = off_10188B3E0;
          *(_OWORD *)(v9 + _Block_object_dispose((const void *)(v1 - 112), 8) = 0u;
          *(_OWORD *)(v9 + 24) = 0u;
          *((void *)v9 + 5) = 0LL;
          *(void *)(a1 + 32) = v9;
        }

        unint64_t v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v28)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v28 = *v10;
          *((void *)this + 1) = v10 + 1;
        }

        int v11 = *((_DWORD *)this + 14);
        int v12 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v11 + 1;
        if (v11 >= v12) {
          return 0LL;
        }
        int v13 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v28);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v13);
        int v15 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v15, 1);
        int v17 = v15 - 1;
        if (v17 < 0 == v16) {
          *((_DWORD *)this + 14) = v17;
        }
        uint64_t v18 = (_BYTE *)*((void *)this + 1);
        if ((unint64_t)v18 < *((void *)this + 2) && *v18 == 34)
        {
          *((void *)this + 1) = v18 + 1;
          goto LABEL_33;
        }
      }

      int v8 = TagFallback & 7;
      if (v8 != 2) {
        goto LABEL_18;
      }
LABEL_33:
      *(_DWORD *)(a1 + 52) |= 2u;
      uint64_t v19 = *(void **)(a1 + 40);
      if (!v19)
      {
        uint64_t v19 = operator new(0x1F0uLL);
        sub_1005E5F30((uint64_t)v19);
        *(void *)(a1 + 40) = v19;
      }

      uint64_t v20 = (char *)*((void *)this + 1);
      if ((unint64_t)v20 >= *((void *)this + 2) || *v20 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v29)) {
          return 0LL;
        }
      }

      else
      {
        unsigned int v29 = *v20;
        *((void *)this + 1) = v20 + 1;
      }

      int v21 = *((_DWORD *)this + 14);
      int v22 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v21 + 1;
      if (v21 >= v22) {
        return 0LL;
      }
      int v23 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v29);
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v23);
      int v25 = *((_DWORD *)this + 14);
      BOOL v16 = __OFSUB__(v25, 1);
      int v26 = v25 - 1;
      if (v26 < 0 == v16) {
        *((_DWORD *)this + 14) = v26;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 112), 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }

    int v8 = TagFallback & 7;
LABEL_18:
    if (v8 == 4) {
      return 1LL;
    }
    if ((TagFallback & 0xFFFFFFF8) == 0x10)
    {
      if ((wireless_diagnostics::google::protobuf::internal::ExtensionSet::ParseField( v5,  TagFallback,  this,  (const wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A3DA0) & 1) == 0) {
        return 0LL;
      }
    }

    else if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) == 0)
    {
      return 0LL;
    }
  }

void sub_100EDEC48(_Unwind_Exception *a1)
{
}

uint64_t sub_100EDEC5C( uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if ((*(_BYTE *)(a1 + 52) & 1) != 0)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1019A3DA0 + 32);
    }
    wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v6,  a2,  a4);
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::ExtensionSet::SerializeWithCachedSizes( (wireless_diagnostics::google::protobuf::internal::ExtensionSet *)(a1 + 8),  2,  3,  a2);
  if ((*(_BYTE *)(a1 + 52) & 2) != 0)
  {
    uint64_t v9 = *(void *)(a1 + 40);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_1019A3DA0 + 40);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  v9,  a2,  v8);
  }

  return result;
}

uint64_t sub_100EDECE8(uint64_t a1, unint64_t a2)
{
  if (!*(_BYTE *)(a1 + 52))
  {
    int v3 = 0;
    goto LABEL_18;
  }

  if ((*(_BYTE *)(a1 + 52) & 1) == 0)
  {
    int v3 = 0;
    if ((*(_BYTE *)(a1 + 52) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }

  uint64_t v4 = *(void *)(a1 + 32);
  if (!v4) {
    uint64_t v4 = *(void *)(qword_1019A3DA0 + 32);
  }
  int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100EDE5A0(v4, a2);
  int v6 = (int)v5;
  else {
    int v7 = 1;
  }
  int v3 = v6 + v7 + 1;
  if ((*(_DWORD *)(a1 + 52) & 2) != 0)
  {
LABEL_12:
    uint64_t v8 = *(void *)(a1 + 40);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1019A3DA0 + 40);
    }
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1005EC750(v8, a2);
    int v11 = (int)v9;
    else {
      int v12 = 1;
    }
    v3 += v11 + v12 + 1;
  }

uint64_t sub_100EDEDC0(uint64_t a1, void *lpsrc)
{
  return sub_100EDE6BC(a1, (uint64_t)lpsrc);
}

uint64_t sub_100EDEE0C(uint64_t a1)
{
  return wireless_diagnostics::google::protobuf::internal::ExtensionSet::IsInitialized((wireless_diagnostics::google::protobuf::internal::ExtensionSet *)(a1 + 8));
}

void *sub_100EDEE14@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.LogEntry");
}

void sub_100EDEECC(id a1)
{
  qword_10199F3A0 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLBTLEBeaconProviderSilo");
}

uint64_t sub_100EDEF80(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100EDF1A4;
  block[3] = &unk_10181A288;
  block[4] = a1;
  if (qword_10199F3B8 != -1) {
    dispatch_once(&qword_10199F3B8, block);
  }
  return qword_10199F3B0;
}

uint64_t sub_100EDF1A4(uint64_t a1)
{
  uint64_t v2 = operator new(0x148uLL);
  uint64_t result = sub_100EA07DC((uint64_t)v2, *(void **)(a1 + 32));
  qword_10199F3B0 = (uint64_t)v2;
  return result;
}

void sub_100EDF1DC(_Unwind_Exception *a1)
{
}

void sub_100EDF1F0(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = operator new(0x30uLL);
  sub_1010DDBC0(__p, "CLBTLEBeaconProvider");
  sub_100EDF2B8((uint64_t)v8, 0LL, (uint64_t *)__p, a3, a1, a2);
  *uint64_t v8 = off_10188B520;
  *a4 = v8;
  if (v10 < 0) {
    operator delete(__p[0]);
  }
}

void sub_100EDF28C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_100EDF2B8(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4, uint64_t a5, uint64_t a6)
{
  *(void *)a1 = &off_10188B598;
  *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 112), 8) = -[CLNotifierClientAdapter initWithClient:]( objc_alloc(&OBJC_CLASS___CLNotifierClientAdapter),  "initWithClient:",  a1);
  *(void *)(a1 + 24) = a5;
  *(void *)(a1 + 32) = a6;
  else {
    int v12 = (uint64_t *)*a3;
  }
  id v13 = objc_msgSend( objc_msgSend(a4, "vendor"),  "proxyForService:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v12));
  *(void *)(a1 + 16) = v13;
  id v14 = v13;
  if (a2) {
    [*(id *)(a1 + 16) setDelegateEntityName:a2];
  }
  objc_msgSend(*(id *)(a1 + 16), "registerDelegate:inSilo:", *(void *)(a1 + 8), objc_msgSend(a4, "silo"));
  return a1;
}

void sub_100EDF390(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100EDF41C(a1);
  operator delete(v1);
}

id sub_100EDF3A4(uint64_t a1, int a2, void *a3)
{
  id result = sub_100E880B4(a3);
  if (result)
  {
    int v6 = a2;
    return (id)(*(uint64_t (**)(void, int *, id, void))(a1 + 24))(0LL, &v6, result, *(void *)(a1 + 32));
  }

  return result;
}

void sub_100EDF3F0(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

uint64_t sub_100EDF41C(uint64_t a1)
{
  *(void *)a1 = &off_10188B598;
  uint64_t v2 = (id *)(a1 + 8);
  [*(id *)(a1 + 16) forget:*(void *)(a1 + 8)];

  [*v2 invalidate];
  id *v2 = 0LL;
  *(void *)(a1 + 16) = 0LL;
  return a1;
}

void sub_100EDF520(id a1)
{
  qword_10199F3C0 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLDarwinNotifierSilo");
}

uint64_t sub_100EDF5D4(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100EDF734;
  block[3] = &unk_10181A288;
  block[4] = a1;
  if (qword_10199F3D0 != -1) {
    dispatch_once(&qword_10199F3D0, block);
  }
  return qword_1019A3DB0;
}

__n128 sub_100EDF734(uint64_t a1)
{
  uint64_t v2 = (__n128 *)operator new(0xA8uLL);
  sub_100EDF7A8((uint64_t)v2, "CLDarwinNotifier", *(void **)(a1 + 32));
  v2->n128_u64[0] = (unint64_t)off_10188B5E0;
  result.n128_u64[0] = -1LL;
  result.n128_u64[1] = -1LL;
  v2[7] = result;
  v2[8] = result;
  v2[9] = result;
  v2[10].n128_u64[0] = -1LL;
  qword_1019A3DB0 = (uint64_t)v2;
  return result;
}

void sub_100EDF794(_Unwind_Exception *a1)
{
}

uint64_t sub_100EDF7A8(uint64_t a1, char *a2, void *a3)
{
  *(void *)a1 = off_10188B7E8;
  sub_1010DDBC0((void *)(a1 + 8), a2);
  *(void *)(a1 + 32) = a3;
  *(void *)(a1 + 40) = [a3 silo];
  *(void *)(a1 + 4_Block_object_dispose((const void *)(v1 - 112), 8) = 0LL;
  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + 56) = a1 + 64;
  *(void *)(a1 + 8_Block_object_dispose((const void *)(v1 - 112), 8) = 0LL;
  *(void *)(a1 + 96) = 0LL;
  *(void *)(a1 + 72) = 0LL;
  *(void *)(a1 + 80) = a1 + 88;
  *(_DWORD *)(a1 + 104) = 0;
  *(_BYTE *)(a1 + 10_Block_object_dispose((const void *)(v1 - 112), 8) = 0;
  return a1;
}

void sub_100EDF828(_Unwind_Exception *exception_object)
{
}

uint64_t sub_100EDF844(void *a1)
{
  *a1 = off_10188B5E0;
  sub_100EDF9A4((uint64_t)a1);
  return sub_100EDF878((uint64_t)a1);
}

uint64_t sub_100EDF878(uint64_t a1)
{
  *(void *)a1 = off_10188B7E8;
  [*(id *)(a1 + 48) invalidate];

  sub_100231CA4(a1 + 80, *(void **)(a1 + 88));
  sub_100231CF0(a1 + 56, *(void **)(a1 + 64));
  return a1;
}

void sub_100EDF8F0(void *a1)
{
  uint64_t v1 = (void *)sub_100EDF844(a1);
  operator delete(v1);
}

uint64_t sub_100EDF904(uint64_t a1)
{
  uint64_t v2 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      unint64_t v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }

  LODWORD(v6) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t *, void, uint64_t))(*(void *)a1 + 144LL))( a1,  &v6,  0LL,  0xFFFFFFFFLL);
}

void sub_100EDF990( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100EDF9A4(uint64_t a1)
{
  *(_BYTE *)(a1 + 10_Block_object_dispose((const void *)(v1 - 112), 8) = 1;
  sub_100EDFA50(a1, 0);
  sub_100EDFDF8(a1, 0);
  sub_100EE0114(a1, 0);
  sub_100EE0444(a1, 0);
  sub_100EE0760(a1, 0);
  sub_100EE0A90(a1, 0);
  sub_100EE0DD0(a1, 0);
  sub_100EE10EC(a1, 0);
  sub_100EE13C0(a1, 0);
  sub_100EE1694(a1, 0);
  sub_100EE197C(a1, 0);
  sub_100EE1C70(a1, 0);
}

void sub_100EDFA50(uint64_t a1, int a2)
{
  unint64_t v4 = (int *)(a1 + 112);
  int v3 = *(_DWORD *)(a1 + 112);
  if (a2)
  {
    if (v3 < 0 && (*(_DWORD *)(a1 + 116) & 0x80000000) != 0)
    {
      char v10 = (const char *)[@"com.apple.locationd/Prefs" UTF8String];
      int v11 = (dispatch_queue_s *)[*(id *)(a1 + 40) queue];
      handler[0] = _NSConcreteStackBlock;
      handler[1] = 3221225472LL;
      handler[2] = sub_100EE255C;
      handler[3] = &unk_101832780;
      handler[4] = a1;
      notify_register_dispatch(v10, v4, v11, handler);
      int v12 = (const char *)[@"com.apple.ManagedConfiguration.profileListChanged" UTF8String];
      id v13 = (dispatch_queue_s *)[*(id *)(a1 + 40) queue];
      v16[0] = _NSConcreteStackBlock;
      v16[1] = 3221225472LL;
      v16[2] = sub_100EE2564;
      uint64_t v16[3] = &unk_101832780;
      v16[4] = a1;
      notify_register_dispatch(v12, (int *)(a1 + 116), v13, v16);
      return;
    }

    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10188B758);
    }
    int v5 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_FAULT,  "Attempted to re-register for daemon settings while already registered",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10188B758);
      }
      v18[0] = 0;
      double v6 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Attempted to re-register for daemon settings while already registered",  v18,  2);
      uint64_t v8 = v7;
      sub_10029211C("Generic", 1LL, 0, 0LL, "void CLDarwinNotifier::registerForDaemonSettings(BOOL)", "%s\n", v6);
LABEL_25:
      if (v8 != buf) {
        free(v8);
      }
    }
  }

  else
  {
    if ((v3 & 0x80000000) == 0 && (*(_DWORD *)(a1 + 116) & 0x80000000) == 0)
    {
      notify_cancel(v3);
      notify_cancel(*(_DWORD *)(a1 + 116));
      *(void *)(a1 + 112) = -1LL;
      return;
    }

    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10188B758);
    }
    uint64_t v9 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "#Warning Attempted to unregister for daemon settings while not registered",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10188B758);
      }
      v18[0] = 0;
      double v14 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning Attempted to unregister for daemon settings while not registered",  v18,  2);
      uint64_t v8 = v15;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLDarwinNotifier::registerForDaemonSettings(BOOL)", "%s\n", v14);
      goto LABEL_25;
    }
  }

void sub_100EDFDF8(uint64_t a1, int a2)
{
  unint64_t v4 = (int *)(a1 + 124);
  int v3 = *(_DWORD *)(a1 + 124);
  if (a2)
  {
    if (v3 < 0)
    {
      uint64_t v9 = (dispatch_queue_s *)[*(id *)(a1 + 40) queue];
      handler[0] = _NSConcreteStackBlock;
      handler[1] = 3221225472LL;
      handler[2] = sub_100EE256C;
      handler[3] = &unk_101832780;
      handler[4] = a1;
      notify_register_dispatch("com.apple.locationd.suggested-action-nudge", v4, v9, handler);
      return;
    }

    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10188B758);
    }
    int v5 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_FAULT,  "Attempted to re-register for daemon settings while already registered",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10188B758);
      }
      __int16 v13 = 0;
      double v6 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Attempted to re-register for daemon settings while already registered",  &v13,  2);
      uint64_t v8 = v7;
      sub_10029211C("Generic", 1LL, 0, 0LL, "void CLDarwinNotifier::registerForSuggestedActionNudge(BOOL)", "%s\n", v6);
LABEL_23:
      if (v8 != buf) {
        free(v8);
      }
    }
  }

  else
  {
    if ((v3 & 0x80000000) == 0)
    {
      notify_cancel(v3);
      int *v4 = -1;
      return;
    }

    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10188B758);
    }
    char v10 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "#Warning Attempted to unregister for daemon settings while not registered",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10188B758);
      }
      __int16 v13 = 0;
      double v11 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning Attempted to unregister for daemon settings while not registered",  &v13,  2);
      uint64_t v8 = v12;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLDarwinNotifier::registerForSuggestedActionNudge(BOOL)", "%s\n", v11);
      goto LABEL_23;
    }
  }

void sub_100EE0114(uint64_t a1, int a2)
{
  if (&MCCloudConfigurationDidChangeNotification)
  {
    unint64_t v4 = (int *)(a1 + 128);
    int v3 = *(_DWORD *)(a1 + 128);
    if (a2)
    {
      if (v3 < 0)
      {
        uint64_t v9 = (const char *)[MCCloudConfigurationDidChangeNotification UTF8String];
        char v10 = (dispatch_queue_s *)[*(id *)(a1 + 40) queue];
        handler[0] = _NSConcreteStackBlock;
        handler[1] = 3221225472LL;
        handler[2] = sub_100EE25A8;
        handler[3] = &unk_101832780;
        handler[4] = a1;
        notify_register_dispatch(v9, v4, v10, handler);
        return;
      }

      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10188B758);
      }
      int v5 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_FAULT,  "Attempted to re-register for CloudConfigurationDidChange while already registered",  buf,  2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10188B758);
        }
        __int16 v14 = 0;
        double v6 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Attempted to re-register for CloudConfigurationDidChange while already registered",  &v14,  2);
        uint64_t v8 = v7;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLDarwinNotifier::registerForCloudConfigurationDidChange(BOOL)",  "%s\n",  v6);
LABEL_24:
        if (v8 != buf) {
          free(v8);
        }
      }
    }

    else
    {
      if ((v3 & 0x80000000) == 0)
      {
        notify_cancel(v3);
        int *v4 = -1;
        return;
      }

      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10188B758);
      }
      double v11 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "#Warning Attempted to unregister for CloudConfigurationDidChange while not registered",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10188B758);
        }
        __int16 v14 = 0;
        double v12 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning Attempted to unregister for CloudConfigurationDidChange while not registered",  &v14,  2);
        uint64_t v8 = v13;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLDarwinNotifier::registerForCloudConfigurationDidChange(BOOL)",  "%s\n",  v12);
        goto LABEL_24;
      }
    }
  }

void sub_100EE0444(uint64_t a1, int a2)
{
  unint64_t v4 = (int *)(a1 + 120);
  int v3 = *(_DWORD *)(a1 + 120);
  if (a2)
  {
    if (v3 < 0)
    {
      uint64_t v9 = (dispatch_queue_s *)[*(id *)(a1 + 40) queue];
      handler[0] = _NSConcreteStackBlock;
      handler[1] = 3221225472LL;
      handler[2] = sub_100EE25E4;
      handler[3] = &unk_101832780;
      handler[4] = a1;
      notify_register_dispatch("com.apple.locationd.appleAccountDidChange", v4, v9, handler);
      return;
    }

    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10188B758);
    }
    int v5 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_FAULT,  "Attempted to re-register for AppleAccountDidChange while already registered",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10188B758);
      }
      __int16 v13 = 0;
      double v6 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Attempted to re-register for AppleAccountDidChange while already registered",  &v13,  2);
      uint64_t v8 = v7;
      sub_10029211C("Generic", 1LL, 0, 0LL, "void CLDarwinNotifier::registerForAppleAccountDidChange(BOOL)", "%s\n", v6);
LABEL_23:
      if (v8 != buf) {
        free(v8);
      }
    }
  }

  else
  {
    if ((v3 & 0x80000000) == 0)
    {
      notify_cancel(v3);
      int *v4 = -1;
      return;
    }

    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10188B758);
    }
    char v10 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "#Warning Attempted to unregister for AppleAccountDidChange while not registered",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10188B758);
      }
      __int16 v13 = 0;
      double v11 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning Attempted to unregister for AppleAccountDidChange while not registered",  &v13,  2);
      uint64_t v8 = v12;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLDarwinNotifier::registerForAppleAccountDidChange(BOOL)",  "%s\n",  v11);
      goto LABEL_23;
    }
  }

void sub_100EE0760(uint64_t a1, int a2)
{
  if (&MCProfileListChangedNotification)
  {
    unint64_t v4 = (int *)(a1 + 132);
    int v3 = *(_DWORD *)(a1 + 132);
    if (a2)
    {
      if (v3 < 0)
      {
        uint64_t v9 = (const char *)[MCProfileListChangedNotification UTF8String];
        char v10 = (dispatch_queue_s *)[*(id *)(a1 + 40) queue];
        handler[0] = _NSConcreteStackBlock;
        handler[1] = 3221225472LL;
        handler[2] = sub_100EE2620;
        handler[3] = &unk_101832780;
        handler[4] = a1;
        notify_register_dispatch(v9, v4, v10, handler);
        return;
      }

      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10188B758);
      }
      int v5 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_FAULT,  "Attempted to re-register for ProfileListChange while already registered",  buf,  2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10188B758);
        }
        __int16 v14 = 0;
        double v6 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Attempted to re-register for ProfileListChange while already registered",  &v14,  2);
        uint64_t v8 = v7;
        sub_10029211C("Generic", 1LL, 0, 0LL, "void CLDarwinNotifier::registerForProfileListChanged(BOOL)", "%s\n", v6);
LABEL_24:
        if (v8 != buf) {
          free(v8);
        }
      }
    }

    else
    {
      if ((v3 & 0x80000000) == 0)
      {
        notify_cancel(v3);
        int *v4 = -1;
        return;
      }

      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10188B758);
      }
      double v11 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "#Warning Attempted to unregister for ProfileListChange while not registered",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10188B758);
        }
        __int16 v14 = 0;
        double v12 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning Attempted to unregister for ProfileListChange while not registered",  &v14,  2);
        uint64_t v8 = v13;
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CLDarwinNotifier::registerForProfileListChanged(BOOL)", "%s\n", v12);
        goto LABEL_24;
      }
    }
  }

void sub_100EE0A90(uint64_t a1, int a2)
{
  *(void *)&double v4 = objc_opt_class(&OBJC_CLASS___SSAccountStore).n128_u64[0];
  if (v5)
  {
    int v6 = *(_DWORD *)(a1 + 136);
    if (a2)
    {
      if (v6 < 0)
      {
        double v11 = (const char *)objc_msgSend(SSAccountStoreChangedNotification, "UTF8String", v4);
        double v12 = (dispatch_queue_s *)[*(id *)(a1 + 40) queue];
        handler[0] = _NSConcreteStackBlock;
        handler[1] = 3221225472LL;
        handler[2] = sub_100EE265C;
        handler[3] = &unk_101832780;
        handler[4] = a1;
        notify_register_dispatch(v11, (int *)(a1 + 136), v12, handler);
        return;
      }

      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10188B758);
      }
      int v7 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "Attempted to re-register for AccountStoreChanged while already registered",  buf,  2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10188B758);
        }
        __int16 v16 = 0;
        double v8 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Attempted to re-register for AccountStoreChanged while already registered",  &v16,  2);
        char v10 = v9;
        sub_10029211C("Generic", 1LL, 0, 0LL, "void CLDarwinNotifier::registerForAccountStoreChanged(BOOL)", "%s\n", v8);
LABEL_24:
        if (v10 != buf) {
          free(v10);
        }
      }
    }

    else
    {
      if ((v6 & 0x80000000) == 0)
      {
        notify_cancel(v6);
        *(_DWORD *)(a1 + 136) = -1;
        return;
      }

      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10188B758);
      }
      __int16 v13 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "#Warning Attempted to unregister for AccountStoreChanged while not registered",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10188B758);
        }
        __int16 v16 = 0;
        double v14 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning Attempted to unregister for AccountStoreChanged while not registered",  &v16,  2);
        char v10 = v15;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLDarwinNotifier::registerForAccountStoreChanged(BOOL)",  "%s\n",  v14);
        goto LABEL_24;
      }
    }
  }

void sub_100EE0DD0(uint64_t a1, int a2)
{
  double v4 = (int *)(a1 + 140);
  int v3 = *(_DWORD *)(a1 + 140);
  if (a2)
  {
    if (v3 < 0)
    {
      uint64_t v9 = (dispatch_queue_s *)[*(id *)(a1 + 40) queue];
      handler[0] = _NSConcreteStackBlock;
      handler[1] = 3221225472LL;
      handler[2] = sub_100EE2698;
      handler[3] = &unk_101832780;
      handler[4] = a1;
      notify_register_dispatch("SignificantTimeChangeNotification", v4, v9, handler);
      return;
    }

    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10188B758);
    }
    uint64_t v5 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_FAULT,  "Attempted to re-register for SignificantTimeChange while already registered",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10188B758);
      }
      __int16 v13 = 0;
      double v6 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Attempted to re-register for SignificantTimeChange while already registered",  &v13,  2);
      double v8 = v7;
      sub_10029211C("Generic", 1LL, 0, 0LL, "void CLDarwinNotifier::registerForSignificantTimeChange(BOOL)", "%s\n", v6);
LABEL_23:
      if (v8 != buf) {
        free(v8);
      }
    }
  }

  else
  {
    if ((v3 & 0x80000000) == 0)
    {
      notify_cancel(v3);
      int *v4 = -1;
      return;
    }

    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10188B758);
    }
    char v10 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "#Warning Attempted to unregister for SignificantTimeChange while not registered",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10188B758);
      }
      __int16 v13 = 0;
      double v11 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning Attempted to unregister for SignificantTimeChange while not registered",  &v13,  2);
      double v8 = v12;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLDarwinNotifier::registerForSignificantTimeChange(BOOL)",  "%s\n",  v11);
      goto LABEL_23;
    }
  }

void sub_100EE10EC(uint64_t a1, int a2)
{
  double v4 = (int *)(a1 + 148);
  int v3 = *(_DWORD *)(a1 + 148);
  if (a2)
  {
    if (v3 < 0)
    {
      int v7 = (dispatch_queue_s *)[*(id *)(a1 + 40) queue];
      handler[0] = _NSConcreteStackBlock;
      handler[1] = 3221225472LL;
      handler[2] = sub_100EE26D4;
      handler[3] = &unk_101832780;
      handler[4] = a1;
      notify_register_dispatch("com.apple.GeoServices.navigation.stopped", v4, v7, handler);
      return;
    }

    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_10188B778);
    }
    uint64_t v5 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "#Warning Attempted to re-register for GEONavigationStopped while already registered",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_10188B778);
      }
      LOWORD(v10) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  0LL,  "#Warning Attempted to re-register for GEONavigationStopped while already registered",  &v10,  2,  v10);
LABEL_23:
      uint64_t v9 = (uint8_t *)v6;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLDarwinNotifier::registerForGEONavigationStopped(BOOL)", "%s\n", v6);
      if (v9 != buf) {
        free(v9);
      }
    }
  }

  else
  {
    if ((v3 & 0x80000000) == 0)
    {
      notify_cancel(v3);
      int *v4 = -1;
      return;
    }

    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_10188B778);
    }
    double v8 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "#Warning Attempted to unregister for GEONavigationStopped while not registered",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_10188B778);
      }
      LOWORD(v10) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  0LL,  "#Warning Attempted to unregister for GEONavigationStopped while not registered",  &v10,  2,  v10);
      goto LABEL_23;
    }
  }

void sub_100EE13C0(uint64_t a1, int a2)
{
  double v4 = (int *)(a1 + 152);
  int v3 = *(_DWORD *)(a1 + 152);
  if (a2)
  {
    if (v3 < 0)
    {
      int v7 = (dispatch_queue_s *)[*(id *)(a1 + 40) queue];
      handler[0] = _NSConcreteStackBlock;
      handler[1] = 3221225472LL;
      handler[2] = sub_100EE2710;
      handler[3] = &unk_101832780;
      handler[4] = a1;
      notify_register_dispatch("com.apple.sysdiagnose.sysdiagnoseStarted", v4, v7, handler);
      return;
    }

    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_10188B778);
    }
    uint64_t v5 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "#Warning Attempted to re-register for SysdiagnoseTrigger while already registered",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_10188B778);
      }
      LOWORD(v10) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  0LL,  "#Warning Attempted to re-register for SysdiagnoseTrigger while already registered",  &v10,  2,  v10);
LABEL_23:
      uint64_t v9 = (uint8_t *)v6;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLDarwinNotifier::registerForSysdiagnoseTrigger(BOOL)", "%s\n", v6);
      if (v9 != buf) {
        free(v9);
      }
    }
  }

  else
  {
    if ((v3 & 0x80000000) == 0)
    {
      notify_cancel(v3);
      int *v4 = -1;
      return;
    }

    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_10188B778);
    }
    double v8 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "#Warning Attempted to unregister for SysdiagnoseTrigger while not registered",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_10188B778);
      }
      LOWORD(v10) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  0LL,  "#Warning Attempted to unregister for SysdiagnoseTrigger while not registered",  &v10,  2,  v10);
      goto LABEL_23;
    }
  }

void sub_100EE1694(uint64_t a1, int a2)
{
  if (&MCEffectiveSettingsChangedNotification)
  {
    double v4 = (int *)(a1 + 156);
    int v3 = *(_DWORD *)(a1 + 156);
    if (a2)
    {
      if (v3 < 0)
      {
        int v7 = (const char *)[MCEffectiveSettingsChangedNotification UTF8String];
        double v8 = (dispatch_queue_s *)[*(id *)(a1 + 40) queue];
        handler[0] = _NSConcreteStackBlock;
        handler[1] = 3221225472LL;
        handler[2] = sub_100EE274C;
        handler[3] = &unk_101832780;
        handler[4] = a1;
        notify_register_dispatch(v7, v4, v8, handler);
        return;
      }

      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_10188B778);
      }
      uint64_t v5 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "#Warning Attempted to re-register for ManagedConfiguration while already registered",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_10188B778);
        }
        LOWORD(v11) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  0LL,  "#Warning Attempted to re-register for ManagedConfiguration while already registered",  &v11,  2,  v11);
LABEL_24:
        uint64_t v10 = (uint8_t *)v6;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLDarwinNotifier::registerForManagedConfigurationChange(BOOL)",  "%s\n",  v6);
        if (v10 != buf) {
          free(v10);
        }
      }
    }

    else
    {
      if ((v3 & 0x80000000) == 0)
      {
        notify_cancel(v3);
        int *v4 = -1;
        return;
      }

      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_10188B778);
      }
      uint64_t v9 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "#Warning Attempted to unregister for ManagedConfiguration while not registered",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_10188B778);
        }
        LOWORD(v11) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  0LL,  "#Warning Attempted to unregister for ManagedConfiguration while not registered",  &v11,  2,  v11);
        goto LABEL_24;
      }
    }
  }

void sub_100EE197C(uint64_t a1, int a2)
{
  if (&RTLocationsOfInterestDidChangeNotification)
  {
    double v4 = (const char *)[RTLocationsOfInterestDidChangeNotification UTF8String];
    int v5 = *(_DWORD *)(a1 + 160);
    if (a2)
    {
      if (v5 < 0)
      {
        double v8 = (dispatch_queue_s *)[*(id *)(a1 + 40) queue];
        handler[0] = _NSConcreteStackBlock;
        handler[1] = 3221225472LL;
        handler[2] = sub_100EE2788;
        handler[3] = &unk_101832780;
        handler[4] = a1;
        notify_register_dispatch(v4, (int *)(a1 + 160), v8, handler);
        return;
      }

      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_10188B798);
      }
      double v6 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "#Warning Attempted to re-register for loi did change while already registered",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_10188B798);
        }
        LOWORD(v11) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "#Warning Attempted to re-register for loi did change while already registered",  &v11,  2,  v11);
LABEL_24:
        uint64_t v10 = (uint8_t *)v7;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLDarwinNotifier::registerForLocationOfInterestDidChange(BOOL)",  "%s\n",  v7);
        if (v10 != buf) {
          free(v10);
        }
      }
    }

    else
    {
      if ((v5 & 0x80000000) == 0)
      {
        notify_cancel(v5);
        *(_DWORD *)(a1 + sub_1002A5590(v1 - 160) = -1;
        return;
      }

      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_10188B798);
      }
      uint64_t v9 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "#Warning Attempted to unregister for loi did change while not registered",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_10188B798);
        }
        LOWORD(v11) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "#Warning Attempted to unregister for loi did change while not registered",  &v11,  2,  v11);
        goto LABEL_24;
      }
    }
  }

void sub_100EE1C70(uint64_t a1, int a2)
{
  if (&RTLocationsOfInterestDidClearNotification)
  {
    double v4 = (const char *)[RTLocationsOfInterestDidClearNotification UTF8String];
    int v5 = *(_DWORD *)(a1 + 164);
    if (a2)
    {
      if (v5 < 0)
      {
        double v8 = (dispatch_queue_s *)[*(id *)(a1 + 40) queue];
        handler[0] = _NSConcreteStackBlock;
        handler[1] = 3221225472LL;
        handler[2] = sub_100EE27C4;
        handler[3] = &unk_101832780;
        handler[4] = a1;
        notify_register_dispatch(v4, (int *)(a1 + 164), v8, handler);
        return;
      }

      if (qword_1019348D0 != -1) {
        dispatch_once(&qword_1019348D0, &stru_10188B7B8);
      }
      double v6 = (os_log_s *)qword_1019348D8;
      if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "#Warning Attempted to re-register for loi did clear while already registered",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348D0 != -1) {
          dispatch_once(&qword_1019348D0, &stru_10188B7B8);
        }
        LOWORD(v11) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348D8,  0LL,  "#Warning Attempted to re-register for loi did clear while already registered",  &v11,  2,  v11);
LABEL_24:
        uint64_t v10 = (uint8_t *)v7;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLDarwinNotifier::registerForLocationOfInterestDidClear(BOOL)",  "%s\n",  v7);
        if (v10 != buf) {
          free(v10);
        }
      }
    }

    else
    {
      if ((v5 & 0x80000000) == 0)
      {
        notify_cancel(v5);
        *(_DWORD *)(a1 + 164) = -1;
        return;
      }

      if (qword_1019348D0 != -1) {
        dispatch_once(&qword_1019348D0, &stru_10188B7B8);
      }
      uint64_t v9 = (os_log_s *)qword_1019348D8;
      if (os_log_type_enabled((os_log_t)qword_1019348D8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "#Warning Attempted to unregister for loi did clear while not registered",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348D0 != -1) {
          dispatch_once(&qword_1019348D0, &stru_10188B7B8);
        }
        LOWORD(v11) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348D8,  0LL,  "#Warning Attempted to unregister for loi did clear while not registered",  &v11,  2,  v11);
        goto LABEL_24;
      }
    }
  }

void *sub_100EE1F64@<X0>(_DWORD *a1@<X1>, void *a2@<X8>)
{
  return sub_1010DDBC0(a2, __str);
}

uint64_t sub_100EE1FDC(uint64_t a1, int *a2)
{
  uint64_t v2 = 1LL;
  switch(*a2)
  {
    case 0:
      sub_100EDFA50(a1, 1);
      break;
    case 1:
      sub_100EDFDF8(a1, 1);
      break;
    case 2:
      sub_100EE0114(a1, 1);
      break;
    case 3:
      sub_100EE0444(a1, 1);
      break;
    case 4:
      sub_100EE0760(a1, 1);
      break;
    case 5:
      sub_100EE0A90(a1, 1);
      break;
    case 6:
      sub_100EE0DD0(a1, 1);
      break;
    case 7:
      return v2;
    case 8:
      sub_100EE10EC(a1, 1);
      break;
    case 9:
      sub_100EE13C0(a1, 1);
      break;
    case 10:
      sub_100EE1694(a1, 1);
      break;
    case 11:
      sub_100EE197C(a1, 1);
      break;
    case 12:
      sub_100EE1C70(a1, 1);
      break;
    default:
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10188B758);
      }
      double v4 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
      {
        int v5 = *a2;
        *(_DWORD *)uint64_t buf = 67240192;
        int v12 = v5;
        _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_FAULT,  "Unknown registration requested: %{public}d",  buf,  8u);
      }

      uint64_t v2 = 0LL;
      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10188B758);
        }
        int v6 = *a2;
        v10[0] = 67240192;
        v10[1] = v6;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Unknown registration requested: %{public}d",  v10,  8);
        double v8 = (uint8_t *)v7;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLDarwinNotifier::registerForNotificationInternal(const CLDarwinNotifier_Type::Notification &)",  "%s\n",  v7);
        if (v8 != buf) {
          free(v8);
        }
        uint64_t v2 = 0LL;
      }

      break;
  }

  return v2;
}

uint64_t sub_100EE2280(uint64_t a1, int *a2)
{
  uint64_t result = 1LL;
  switch(*a2)
  {
    case 0:
      sub_100EDFA50(a1, 0);
      goto LABEL_24;
    case 1:
      sub_100EDFDF8(a1, 0);
      goto LABEL_24;
    case 2:
      sub_100EE0114(a1, 0);
      goto LABEL_24;
    case 3:
      sub_100EE0444(a1, 0);
      goto LABEL_24;
    case 4:
      sub_100EE0760(a1, 0);
      goto LABEL_24;
    case 5:
      sub_100EE0A90(a1, 0);
      goto LABEL_24;
    case 6:
      sub_100EE0DD0(a1, 0);
      goto LABEL_24;
    case 7:
      return result;
    case 8:
      sub_100EE10EC(a1, 0);
      goto LABEL_24;
    case 9:
      sub_100EE13C0(a1, 0);
      goto LABEL_24;
    case 10:
      sub_100EE1694(a1, 0);
      goto LABEL_24;
    case 11:
      sub_100EE197C(a1, 0);
      goto LABEL_24;
    case 12:
      sub_100EE1C70(a1, 0);
LABEL_24:
      uint64_t result = 1LL;
      break;
    default:
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10188B758);
      }
      int v5 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
      {
        int v6 = *a2;
        *(_DWORD *)uint64_t buf = 67240192;
        int v13 = v6;
        _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_FAULT,  "Unknown unregistration requested: %{public}d",  buf,  8u);
      }

      BOOL v7 = sub_1002921D0(115, 0);
      uint64_t result = 0LL;
      if (v7)
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10188B758);
        }
        int v8 = *a2;
        v11[0] = 67240192;
        v11[1] = v8;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Unknown unregistration requested: %{public}d",  v11,  8);
        uint64_t v10 = (uint8_t *)v9;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLDarwinNotifier::unregisterForNotificationInternal(const CLDarwinNotifier_Type::Notification &)",  "%s\n",  v9);
        if (v10 != buf) {
          free(v10);
        }
        uint64_t result = 0LL;
      }

      break;
  }

  return result;
}

uint64_t sub_100EE255C(uint64_t a1)
{
  return sub_100EDF904(*(void *)(a1 + 32));
}

uint64_t sub_100EE2564(uint64_t a1)
{
  return sub_100EDF904(*(void *)(a1 + 32));
}

uint64_t sub_100EE256C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  int v3 = 1;
  return (*(uint64_t (**)(uint64_t, int *, void, uint64_t))(*(void *)v1 + 144LL))( v1,  &v3,  0LL,  0xFFFFFFFFLL);
}

uint64_t sub_100EE25A8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  int v3 = 2;
  return (*(uint64_t (**)(uint64_t, int *, void, uint64_t))(*(void *)v1 + 144LL))( v1,  &v3,  0LL,  0xFFFFFFFFLL);
}

uint64_t sub_100EE25E4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  int v3 = 3;
  return (*(uint64_t (**)(uint64_t, int *, void, uint64_t))(*(void *)v1 + 144LL))( v1,  &v3,  0LL,  0xFFFFFFFFLL);
}

uint64_t sub_100EE2620(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  int v3 = 4;
  return (*(uint64_t (**)(uint64_t, int *, void, uint64_t))(*(void *)v1 + 144LL))( v1,  &v3,  0LL,  0xFFFFFFFFLL);
}

uint64_t sub_100EE265C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  int v3 = 5;
  return (*(uint64_t (**)(uint64_t, int *, void, uint64_t))(*(void *)v1 + 144LL))( v1,  &v3,  0LL,  0xFFFFFFFFLL);
}

uint64_t sub_100EE2698(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  int v3 = 6;
  return (*(uint64_t (**)(uint64_t, int *, void, uint64_t))(*(void *)v1 + 144LL))( v1,  &v3,  0LL,  0xFFFFFFFFLL);
}

uint64_t sub_100EE26D4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  int v3 = 8;
  return (*(uint64_t (**)(uint64_t, int *, void, uint64_t))(*(void *)v1 + 144LL))( v1,  &v3,  0LL,  0xFFFFFFFFLL);
}

uint64_t sub_100EE2710(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  int v3 = 9;
  return (*(uint64_t (**)(uint64_t, int *, void, uint64_t))(*(void *)v1 + 144LL))( v1,  &v3,  0LL,  0xFFFFFFFFLL);
}

uint64_t sub_100EE274C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  int v3 = 10;
  return (*(uint64_t (**)(uint64_t, int *, void, uint64_t))(*(void *)v1 + 144LL))( v1,  &v3,  0LL,  0xFFFFFFFFLL);
}

uint64_t sub_100EE2788(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  int v3 = 11;
  return (*(uint64_t (**)(uint64_t, int *, void, uint64_t))(*(void *)v1 + 144LL))( v1,  &v3,  0LL,  0xFFFFFFFFLL);
}

uint64_t sub_100EE27C4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  int v3 = 12;
  return (*(uint64_t (**)(uint64_t, int *, void, uint64_t))(*(void *)v1 + 144LL))( v1,  &v3,  0LL,  0xFFFFFFFFLL);
}

void sub_100EE2800(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  int v8 = operator new(0x30uLL);
  sub_1010DDBC0(__p, "CLDarwinNotifier");
  sub_100EE28C8((uint64_t)v8, 0LL, (uint64_t *)__p, a3, a1, a2);
  *int v8 = off_10188B6C0;
  *a4 = v8;
  if (v10 < 0) {
    operator delete(__p[0]);
  }
}

void sub_100EE289C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_100EE28C8(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4, uint64_t a5, uint64_t a6)
{
  *(void *)a1 = &off_10188B8C8;
  *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 112), 8) = -[CLNotifierClientAdapter initWithClient:]( objc_alloc(&OBJC_CLASS___CLNotifierClientAdapter),  "initWithClient:",  a1);
  *(void *)(a1 + 24) = a5;
  *(void *)(a1 + 32) = a6;
  else {
    int v12 = (uint64_t *)*a3;
  }
  id v13 = objc_msgSend( objc_msgSend(a4, "vendor"),  "proxyForService:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v12));
  *(void *)(a1 + 16) = v13;
  id v14 = v13;
  if (a2) {
    [*(id *)(a1 + 16) setDelegateEntityName:a2];
  }
  objc_msgSend(*(id *)(a1 + 16), "registerDelegate:inSilo:", *(void *)(a1 + 8), objc_msgSend(a4, "silo"));
  return a1;
}

void sub_100EE299C(uint64_t a1, uint64_t a2)
{
  HIDWORD(v15) = a2;
  if (!*(_BYTE *)(a1 + 108))
  {
    uint64_t v4 = *(void *)(a1 + 88);
    if (!v4) {
      goto LABEL_12;
    }
    uint64_t v5 = a1 + 80;
    uint64_t v6 = a1 + 88;
    do
    {
      int v7 = *(_DWORD *)(v4 + 32);
      BOOL v8 = v7 < (int)a2;
      else {
        uint64_t v9 = (uint64_t *)(v4 + 8);
      }
      if (!v8) {
        uint64_t v6 = v4;
      }
      uint64_t v4 = *v9;
    }

    while (*v9);
    if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= (int)a2)
    {
      while (*(void *)(v6 + 56))
      {
        *(_DWORD *)uint64_t buf = *(_DWORD *)(*(void *)(v6 + 40) + 28LL);
        (*(void (**)(uint64_t, uint64_t, uint8_t *))(*(void *)a1 + 112LL))(a1, a2, buf);
      }

      sub_100233254(v5, (int *)&v15 + 1);
    }

    else
    {
LABEL_12:
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_10188B738);
      }
      char v10 = (os_log_s *)qword_1019349D8;
      if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
      {
        uint64_t v11 = (void *)(a1 + 8);
        *(_DWORD *)uint64_t buf = 136446466;
        int v21 = v11;
        __int16 v22 = 1026;
        int v23 = a2;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
          buf,
          0x12u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_10188B738);
        }
        int v12 = (void *)(a1 + 8);
        int v16 = 136446466;
        int v17 = v12;
        __int16 v18 = 1026;
        int v19 = a2;
        LODWORD(v15) = 18;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
          &v16,
          v15);
        id v14 = (uint8_t *)v13;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLNotifier<CLDarwinNotifier_Type::Notification, CLDarwinNotifier_Type::NotificationData>::removeC lient(int) [Notification_T = CLDarwinNotifier_Type::Notification, NotificationData_T = CLDarwinNotifier_Type:: NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v13);
        if (v14 != buf) {
          free(v14);
        }
      }
    }
  }

uint64_t sub_100EE2C10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void *))(*(void *)a1 + 96LL))( a1,  a2,  a3,  &unk_101991A90);
}

uint64_t sub_100EE2C24(uint64_t a1, int a2, int *a3, char *a4)
{
  int v42 = a2;
  if (*(_BYTE *)(a1 + 108)) {
    return 0LL;
  }
  uint64_t v7 = *(void *)(a1 + 88);
  if (v7)
  {
    uint64_t v10 = a1 + 88;
    do
    {
      int v11 = *(_DWORD *)(v7 + 32);
      BOOL v12 = v11 < a2;
      if (v11 >= a2) {
        id v13 = (uint64_t *)v7;
      }
      else {
        id v13 = (uint64_t *)(v7 + 8);
      }
      if (!v12) {
        uint64_t v10 = v7;
      }
      uint64_t v7 = *v13;
    }

    while (*v13);
    if (v10 != a1 + 88 && *(_DWORD *)(v10 + 32) <= a2)
    {
      *(void *)uint64_t v43 = v10;
      int v17 = *a3;
      uint64_t v20 = *(void *)(v10 + 48);
      uint64_t v19 = v10 + 48;
      uint64_t v18 = v20;
      if (!v20) {
        goto LABEL_31;
      }
      uint64_t v21 = v19;
      do
      {
        int v22 = *(_DWORD *)(v18 + 28);
        BOOL v23 = v22 < v17;
        if (v22 >= v17) {
          unsigned int v24 = (uint64_t *)v18;
        }
        else {
          unsigned int v24 = (uint64_t *)(v18 + 8);
        }
        if (!v23) {
          uint64_t v21 = v18;
        }
        uint64_t v18 = *v24;
      }

      while (*v24);
      if (v21 == v19 || v17 < *(_DWORD *)(v21 + 28)) {
LABEL_31:
      }
        uint64_t v21 = v19;
      uint64_t v25 = *(void *)(a1 + 64);
      if (!v25) {
        goto LABEL_42;
      }
      uint64_t v26 = a1 + 64;
      do
      {
        int v27 = *(_DWORD *)(v25 + 32);
        BOOL v28 = v27 < v17;
        if (v27 >= v17) {
          unsigned int v29 = (uint64_t *)v25;
        }
        else {
          unsigned int v29 = (uint64_t *)(v25 + 8);
        }
        if (!v28) {
          uint64_t v26 = v25;
        }
        uint64_t v25 = *v29;
      }

      while (*v29);
      if (v26 != a1 + 64 && v17 >= *(_DWORD *)(v26 + 32))
      {
        uint64_t v41 = v26;
        uint64_t v34 = *(void *)(v26 + 56);
        char v35 = *a4;
        *(void *)uint64_t buf = &v42;
        *((_BYTE *)sub_1004EF3D4((uint64_t **)(v26 + 40), &v42, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = v35;
        buf[0] = 0;
        if (v21 == v19
          && (*(unsigned int (**)(uint64_t, int *, _BYTE *))(*(void *)a1 + 128LL))(a1, a3, buf))
        {
          double v36 = sub_100EE4568(buf);
          sub_100EE45E8((_BYTE *)a1, (uint64_t)v43, (uint64_t)&v41, v36);
        }

        if (v34) {
          goto LABEL_44;
        }
      }

      else
      {
LABEL_42:
        uint64_t v41 = a1 + 64;
        char v30 = byte_101991A91;
        HIDWORD(v40) = v17;
        *(void *)uint64_t buf = (char *)&v40 + 4;
        *((_BYTE *)sub_10023347C((uint64_t **)(a1 + 56), (int *)&v40 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 80) = v30;
        HIDWORD(v40) = *a3;
        *(void *)uint64_t buf = (char *)&v40 + 4;
        uint64_t v31 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v40 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        sub_1000F0D38(v31 + 8);
        char v32 = *a4;
        HIDWORD(v40) = *a3;
        *(void *)uint64_t buf = (char *)&v40 + 4;
        uint64_t v33 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v40 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        *(void *)uint64_t buf = &v42;
        *((_BYTE *)sub_1004EF3D4(v33 + 5, &v42, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = v32;
      }

      (*(void (**)(uint64_t, int *))(*(void *)a1 + 168LL))(a1, a3);
LABEL_44:
      if (v21 == v19)
      {
        *(_DWORD *)uint64_t buf = *a3;
        sub_10004A8FC((uint64_t **)(*(void *)v43 + 40LL), (int *)buf, buf);
      }

      return 1LL;
    }
  }

  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10188B738);
  }
  id v14 = (os_log_s *)qword_1019349D8;
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
  {
    uint64_t v15 = (void *)(a1 + 8);
    *(_DWORD *)uint64_t buf = 136446466;
    *(void *)&uint8_t buf[4] = v15;
    __int16 v47 = 1026;
    int v48 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
      buf,
      0x12u);
  }

  BOOL v16 = sub_1002921D0(115, 0);
  uint64_t result = 0LL;
  if (v16)
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10188B738);
    }
    __int16 v37 = (void *)(a1 + 8);
    *(_DWORD *)uint64_t v43 = 136446466;
    *(void *)&v43[4] = v37;
    __int16 v44 = 1026;
    int v45 = a2;
    LODWORD(v40) = 18;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
      v43,
      v40);
    unsigned int v39 = (char *)v38;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLDarwinNotifier_Type::Notification, CLDarwinNotifier_Type::NotificationData>::registerFor Notification(int, const Notification_T &, const RegistrationInfo_T &) [Notification_T = CLDarwinNotifier_Type::Not ification, NotificationData_T = CLDarwinNotifier_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v38);
    if (v39 != buf) {
      free(v39);
    }
    return 0LL;
  }

  return result;
}

BOOL sub_100EE3080(uint64_t a1, int a2, int *a3)
{
  uint64_t v5 = *(void *)(a1 + 88);
  if (!v5) {
    goto LABEL_11;
  }
  uint64_t v6 = a1 + 88;
  do
  {
    int v7 = *(_DWORD *)(v5 + 32);
    BOOL v8 = v7 < a2;
    if (v7 >= a2) {
      uint64_t v9 = (uint64_t *)v5;
    }
    else {
      uint64_t v9 = (uint64_t *)(v5 + 8);
    }
    if (!v8) {
      uint64_t v6 = v5;
    }
    uint64_t v5 = *v9;
  }

  while (*v9);
  if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= a2)
  {
    uint64_t v16 = *(void *)(v6 + 48);
    uint64_t v14 = v6 + 48;
    uint64_t v15 = v16;
    if (!v16) {
      goto LABEL_29;
    }
    int v17 = *a3;
    uint64_t v18 = v14;
    do
    {
      int v19 = *(_DWORD *)(v15 + 28);
      BOOL v20 = v19 < v17;
      if (v19 >= v17) {
        uint64_t v21 = (uint64_t *)v15;
      }
      else {
        uint64_t v21 = (uint64_t *)(v15 + 8);
      }
      if (!v20) {
        uint64_t v18 = v15;
      }
      uint64_t v15 = *v21;
    }

    while (*v21);
    if (v18 == v14 || v17 < *(_DWORD *)(v18 + 28)) {
LABEL_29:
    }
      uint64_t v18 = v14;
    return v18 != v14;
  }

  else
  {
LABEL_11:
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10188B738);
    }
    uint64_t v10 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
    {
      int v11 = (void *)(a1 + 8);
      *(_DWORD *)uint64_t buf = 136446466;
      char v30 = v11;
      __int16 v31 = 1026;
      int v32 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
        buf,
        0x12u);
    }

    BOOL v12 = sub_1002921D0(115, 0);
    BOOL result = 0LL;
    if (v12)
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_10188B738);
      }
      int v22 = (void *)(a1 + 8);
      int v25 = 136446466;
      uint64_t v26 = v22;
      __int16 v27 = 1026;
      int v28 = a2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
        &v25,
        18);
      unsigned int v24 = (uint8_t *)v23;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLDarwinNotifier_Type::Notification, CLDarwinNotifier_Type::NotificationData>::clientReg istered(int, const Notification_T &) [Notification_T = CLDarwinNotifier_Type::Notification, NotificationData_T = CLDarwinNotifier_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v23);
      if (v24 != buf) {
        free(v24);
      }
      return 0LL;
    }
  }

  return result;
}

BOOL sub_100EE3300(char *a1, int a2, int *a3)
{
  HIDWORD(v34) = a2;
  int v3 = a1[108];
  if (!a1[108])
  {
    uint64_t v6 = *((void *)a1 + 11);
    if (v6)
    {
      BOOL v8 = a1 + 88;
      do
      {
        int v9 = *(_DWORD *)(v6 + 32);
        BOOL v10 = v9 < a2;
        if (v9 >= a2) {
          int v11 = (uint64_t *)v6;
        }
        else {
          int v11 = (uint64_t *)(v6 + 8);
        }
        if (!v10) {
          BOOL v8 = (char *)v6;
        }
        uint64_t v6 = *v11;
      }

      while (*v11);
      if (v8 != a1 + 88 && *((_DWORD *)v8 + 8) <= a2)
      {
        uint64_t v14 = (char *)*((void *)v8 + 6);
        BOOL v12 = v8 + 48;
        id v13 = v14;
        if (v14)
        {
          int v15 = *a3;
          uint64_t v16 = v12;
          do
          {
            int v17 = *((_DWORD *)v13 + 7);
            BOOL v18 = v17 < v15;
            if (v17 >= v15) {
              int v19 = (char **)v13;
            }
            else {
              int v19 = (char **)(v13 + 8);
            }
            if (!v18) {
              uint64_t v16 = v13;
            }
            id v13 = *v19;
          }

          while (*v19);
          if (v16 != v12 && v15 >= *((_DWORD *)v16 + 7))
          {
            LODWORD(__p[0]) = *a3;
            sub_1004EF494((uint64_t)(v12 - 8), (int *)__p);
            uint64_t v20 = *((void *)a1 + 8);
            if (!v20) {
              goto LABEL_33;
            }
            int v21 = *a3;
            int v22 = a1 + 64;
            do
            {
              int v23 = *(_DWORD *)(v20 + 32);
              BOOL v24 = v23 < v21;
              if (v23 >= v21) {
                int v25 = (uint64_t *)v20;
              }
              else {
                int v25 = (uint64_t *)(v20 + 8);
              }
              if (!v24) {
                int v22 = (char *)v20;
              }
              uint64_t v20 = *v25;
            }

            while (*v25);
            if (v22 != a1 + 64 && v21 >= *((_DWORD *)v22 + 8))
            {
              sub_1004EF494((uint64_t)(v22 + 40), (int *)&v34 + 1);
              if (!*((void *)v22 + 7)) {
                (*(void (**)(char *, int *))(*(void *)a1 + 176LL))(a1, a3);
              }
            }

            else
            {
LABEL_33:
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_10188B738);
              }
              uint64_t v26 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                __int16 v27 = a1 + 8;
                if (a1[31] < 0) {
                  __int16 v27 = (void *)*v27;
                }
                (*(void (**)(void **__return_ptr, char *, int *))(*(void *)a1 + 160LL))(__p, a1, a3);
                if (v44 >= 0) {
                  int v28 = __p;
                }
                else {
                  int v28 = (void **)__p[0];
                }
                *(_DWORD *)uint64_t buf = 136446466;
                *(void *)&uint8_t buf[4] = v27;
                __int16 v36 = 2082;
                __int16 v37 = v28;
                _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_FAULT,  "%{public}s; notification %{public}s not found",
                  buf,
                  0x16u);
                if (v44 < 0) {
                  operator delete(__p[0]);
                }
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(__p, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_10188B738);
                }
                unsigned int v29 = a1 + 8;
                if (a1[31] < 0) {
                  unsigned int v29 = (void *)*v29;
                }
                uint64_t v30 = qword_1019349D8;
                (*(void (**)(_BYTE *__return_ptr, char *, int *))(*(void *)a1 + 160LL))(buf, a1, a3);
                if (v38 >= 0) {
                  __int16 v31 = buf;
                }
                else {
                  __int16 v31 = *(_BYTE **)buf;
                }
                int v39 = 136446466;
                uint64_t v40 = v29;
                __int16 v41 = 2082;
                int v42 = v31;
                LODWORD(v34) = 22;
                _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v30,  17LL,  "%{public}s; notification %{public}s not found",
                  &v39,
                  v34);
                uint64_t v33 = v32;
                if (v38 < 0) {
                  operator delete(*(void **)buf);
                }
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLDarwinNotifier_Type::Notification, CLDarwinNotifier_Type::NotificationData>: :unregisterForNotification(int, const Notification_T &) [Notification_T = CLDarwinNotifier_Type::Notif ication, NotificationData_T = CLDarwinNotifier_Type::NotificationData, NotificationInfo_T = char, Regi strationInfo_T = char]",  "%s\n",  v33);
              }
            }
          }
        }
      }
    }
  }

  return v3 == 0;
}

uint64_t sub_100EE3688(uint64_t a1, int *a2, char *a3)
{
  uint64_t v6 = operator new(0x20uLL);
  v6[2] = 0LL;
  void *v6 = off_10188B910;
  v6[1] = 0LL;
  char v7 = *a3;
  *((void *)&v14 + 1) = v6;
  *((_BYTE *)v6 + 24) = v7;
  *(void *)&__int128 v14 = v6 + 3;
  int v13 = *a2;
  int v15 = &v13;
  BOOL v8 = sub_10023347C((uint64_t **)(a1 + 56), &v13, (uint64_t)&unk_1012CF090, &v15);
  sub_10005F550((uint64_t)(v8 + 8), &v14);
  int v9 = (std::__shared_weak_count *)*((void *)&v14 + 1);
  if (*((void *)&v14 + 1))
  {
    BOOL v10 = (unint64_t *)(*((void *)&v14 + 1) + 8LL);
    do
      unint64_t v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }

  return 1LL;
}

void sub_100EE375C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100EE3770(uint64_t a1, unsigned int *a2, _BYTE *a3, int a4, int a5)
{
  if (!*(_BYTE *)(a1 + 108))
  {
    BOOL v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: notifyClientsWithData (Fallback)",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_IF_NONE_PRESENT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10188B738);
    }
    unint64_t v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      BOOL v12 = (void *)(a1 + 8);
      int v13 = (std::__shared_weak_count *)*a2;
      *(_DWORD *)uint64_t buf = 68289794;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&buf[18] = 2082;
      *(void *)&buf[20] = "activity";
      __int16 v67 = 2082;
      uint64_t v68 = v12;
      __int16 v69 = 2050;
      __int16 v70 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:notifyClientsWithData, event:%{public, location:escape_only}s, name:%{public, l ocation:escape_only}s, notification:%{public}lld}",  buf,  0x30u);
    }

    int v15 = (__n128 *)(a1 + 64);
    __int128 v14 = *(__n128 **)(a1 + 64);
    if (!v14) {
      goto LABEL_18;
    }
    signed __int32 v16 = *a2;
    int v17 = (__n128 *)(a1 + 64);
    do
    {
      signed __int32 v18 = v14[2].n128_i32[0];
      BOOL v19 = v18 < v16;
      if (v18 >= v16) {
        uint64_t v20 = (__n128 **)v14;
      }
      else {
        uint64_t v20 = (__n128 **)&v14->n128_u64[1];
      }
      if (!v19) {
        int v17 = v14;
      }
      __int128 v14 = *v20;
    }

    while (*v20);
    if (v17 == v15 || v16 < (signed __int32)v17[2].n128_u32[0])
    {
LABEL_18:
      *(void *)unint64_t v71 = &v71[8];
      memset(&v71[8], 0, 24);
      __int16 v72 = 0LL;
      sub_1002343E4((uint64_t)buf, a2, (uint64_t)v71);
      int v17 = sub_1002342A4((uint64_t **)(a1 + 56), (__n128 *)buf);
      int v21 = v70;
      if (v70)
      {
        p_shared_owners = (unint64_t *)&v70->__shared_owners_;
        do
          unint64_t v23 = __ldaxr(p_shared_owners);
        while (__stlxr(v23 - 1, p_shared_owners));
        if (!v23)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }

      sub_100008390((uint64_t)&buf[8], *(void **)&buf[16]);
      BOOL v24 = v72;
      if (v72)
      {
        int v25 = (unint64_t *)&v72->__shared_owners_;
        do
          unint64_t v26 = __ldaxr(v25);
        while (__stlxr(v26 - 1, v25));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }

      sub_100008390((uint64_t)v71, *(void **)&v71[8]);
    }

    if (a4)
    {
      __int16 v27 = operator new(0x20uLL);
      void v27[2] = 0LL;
      *__int16 v27 = off_10188B910;
      v27[1] = 0LL;
      *((_BYTE *)v27 + 24) = *a3;
      *(void *)uint64_t buf = v27 + 3;
      *(void *)&uint8_t buf[8] = v27;
      sub_10005F550((uint64_t)&v17[4], (__int128 *)buf);
      int v28 = *(std::__shared_weak_count **)&buf[8];
      if (*(void *)&buf[8])
      {
        unsigned int v29 = (unint64_t *)(*(void *)&buf[8] + 8LL);
        do
          unint64_t v30 = __ldaxr(v29);
        while (__stlxr(v30 - 1, v29));
        if (!v30)
        {
          ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
          std::__shared_weak_count::__release_weak(v28);
        }
      }
    }

    else
    {
      sub_1000F0D38((__n128 *)v17[4].n128_u64);
    }

    if (!v17[3].n128_u64[1]) {
      goto LABEL_83;
    }
    __int16 v31 = sub_100EE4F34(a3);
    if (a5 == -1)
    {
      sub_100EE4FB4((void *)a1, (int *)a2, v31);
    }

    else
    {
      uint64_t v32 = a1 + 88;
      uint64_t v33 = *(void *)(a1 + 88);
      if (!v33) {
        goto LABEL_48;
      }
      uint64_t v34 = a1 + 88;
      do
      {
        int v35 = *(_DWORD *)(v33 + 32);
        BOOL v36 = v35 < a5;
        if (v35 >= a5) {
          __int16 v37 = (uint64_t *)v33;
        }
        else {
          __int16 v37 = (uint64_t *)(v33 + 8);
        }
        if (!v36) {
          uint64_t v34 = v33;
        }
        uint64_t v33 = *v37;
      }

      while (*v37);
      if (v34 == v32 || *(_DWORD *)(v34 + 32) > a5) {
LABEL_48:
      }
        uint64_t v34 = a1 + 88;
      uint64_t v64 = v34;
      unint64_t v38 = v15->n128_u64[0];
      if (!v15->n128_u64[0]) {
        goto LABEL_59;
      }
      int v39 = *a2;
      uint64_t v40 = (__n128 *)(a1 + 64);
      do
      {
        int v41 = *(_DWORD *)(v38 + 32);
        BOOL v42 = v41 < v39;
        if (v41 >= v39) {
          uint64_t v43 = (unint64_t *)v38;
        }
        else {
          uint64_t v43 = (unint64_t *)(v38 + 8);
        }
        if (!v42) {
          uint64_t v40 = (__n128 *)v38;
        }
        unint64_t v38 = *v43;
      }

      while (*v43);
      if (v40 == v15 || v39 < (signed __int32)v40[2].n128_u32[0])
      {
LABEL_59:
        uint64_t v63 = (__n128 *)(a1 + 64);
LABEL_60:
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_10188B738);
        }
        char v44 = (os_log_s *)qword_1019349D8;
        if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
        {
          int v45 = (void *)(a1 + 8);
          (*(void (**)(_BYTE *__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(v71, a1, a2);
          if (v71[23] >= 0) {
            uint64_t v46 = v71;
          }
          else {
            uint64_t v46 = *(_BYTE **)v71;
          }
          *(_DWORD *)uint64_t buf = 136315650;
          *(void *)&uint8_t buf[4] = v45;
          *(_WORD *)&_BYTE buf[12] = 1024;
          *(_DWORD *)&buf[14] = a5;
          *(_WORD *)&buf[18] = 2080;
          *(void *)&buf[20] = v46;
          _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_DEBUG,  "%s; client %d has deregistered, not notifying %s",
            buf,
            0x1Cu);
          if ((v71[23] & 0x80000000) != 0) {
            operator delete(*(void **)v71);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019349D0 != -1) {
            dispatch_once(&qword_1019349D0, &stru_10188B738);
          }
          __int16 v47 = (void *)(a1 + 8);
          uint64_t v48 = qword_1019349D8;
          (*(void (**)(void **__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(__p, a1, a2);
          if (v62 >= 0) {
            double v49 = __p;
          }
          else {
            double v49 = (void **)__p[0];
          }
          *(_DWORD *)unint64_t v71 = 136315650;
          *(void *)&v71[4] = v47;
          *(_WORD *)&v71[12] = 1024;
          *(_DWORD *)&v71[14] = a5;
          *(_WORD *)&v71[18] = 2080;
          *(void *)&v71[20] = v49;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v48,  2LL,  "%s; client %d has deregistered, not notifying %s",
            v71,
            28,
            v60);
          double v51 = v50;
          if (v62 < 0) {
            operator delete(__p[0]);
          }
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLDarwinNotifier_Type::Notification, CLDarwinNotifier_Type::NotificationData>::notif yClientsWithData(const Notification_T &, const NotificationData_T &, BOOL, int, BOOL) [Notification_T = CLDa rwinNotifier_Type::Notification, NotificationData_T = CLDarwinNotifier_Type::NotificationData, NotificationI nfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v51);
          if (v51 != buf) {
            free(v51);
          }
        }

        goto LABEL_83;
      }

      uint64_t v63 = v40;
      if (v34 == v32) {
        goto LABEL_60;
      }
      uint64_t v54 = v40[3].n128_i64[0];
      uint64_t v52 = v40 + 3;
      double v53 = (__n128 *)v54;
      if (!v54) {
        goto LABEL_60;
      }
      int v55 = *(_DWORD *)(v34 + 32);
      unint64_t v56 = v52;
      do
      {
        int v57 = v53[1].n128_i32[3];
        BOOL v58 = v57 < v55;
        if (v57 >= v55) {
          BOOL v59 = v53;
        }
        else {
          BOOL v59 = (__n128 *)&v53->n128_i8[8];
        }
        if (!v58) {
          unint64_t v56 = v53;
        }
        double v53 = (__n128 *)v59->n128_u64[0];
      }

      while (v59->n128_u64[0]);
      sub_100EE45E8((_BYTE *)a1, (uint64_t)&v64, (uint64_t)&v63, v31);
    }

void sub_100EE3DA8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_activity_scope_state_s state, char a18)
{
}

void sub_100EE3DF4(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 108))
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10188B738);
    }
    uint64_t v2 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      int v3 = (void *)(a1 + 8);
      *(_DWORD *)uint64_t buf = 136315138;
      __int16 v37 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "%s; already shutdown; not listing clients",
        buf,
        0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_10188B738);
      }
      uint64_t v4 = (void *)(a1 + 8);
      int v32 = 136315138;
      uint64_t v33 = v4;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; already shutdown; not listing clients",
        (const char *)&v32);
      uint64_t v6 = (uint8_t *)v5;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLDarwinNotifier_Type::Notification, CLDarwinNotifier_Type::NotificationData>::listClien ts() [Notification_T = CLDarwinNotifier_Type::Notification, NotificationData_T = CLDarwinNotifier_Type::Notifica tionData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v5);
      if (v6 != buf) {
        free(v6);
      }
    }
  }

  else
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10188B738);
    }
    char v7 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      BOOL v8 = (void *)(a1 + 8);
      uint64_t v9 = *(void *)(a1 + 96);
      *(_DWORD *)uint64_t buf = 136315394;
      __int16 v37 = v8;
      __int16 v38 = 2048;
      v39[0] = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "%s; listing clients, num clients: %zu",
        buf,
        0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_10188B738);
      }
      __int16 v27 = (void *)(a1 + 8);
      uint64_t v28 = *(void *)(a1 + 96);
      int v32 = 136315394;
      uint64_t v33 = v27;
      __int16 v34 = 2048;
      v35[0] = v28;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; listing clients, num clients: %zu",
        (const char *)&v32,
        22);
      unint64_t v30 = (uint8_t *)v29;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLDarwinNotifier_Type::Notification, CLDarwinNotifier_Type::NotificationData>::listClien ts() [Notification_T = CLDarwinNotifier_Type::Notification, NotificationData_T = CLDarwinNotifier_Type::Notifica tionData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v29);
      if (v30 != buf) {
        free(v30);
      }
    }

    BOOL v10 = *(void **)(a1 + 80);
    if (v10 != (void *)(a1 + 88))
    {
      unint64_t v11 = (void *)(a1 + 8);
      do
      {
        BOOL v12 = (void *)v10[5];
        if (v12 != v10 + 6)
        {
          do
          {
            if (qword_1019349D0 != -1) {
              dispatch_once(&qword_1019349D0, &stru_10188B738);
            }
            int v13 = (os_log_s *)qword_1019349D8;
            if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
            {
              __int128 v14 = (void *)(a1 + 8);
              int v15 = *((_DWORD *)v10 + 8);
              int v16 = *((_DWORD *)v12 + 7);
              *(_DWORD *)uint64_t buf = 136315650;
              __int16 v37 = v14;
              __int16 v38 = 1024;
              LODWORD(v39[0]) = v15;
              WORD2(v39[0]) = 1024;
              *(_DWORD *)((char *)v39 + 6) = v16;
              _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "%s; clients, id: %d, notification: %d",
                buf,
                0x18u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_10188B738);
              }
              uint64_t v20 = (void *)(a1 + 8);
              int v21 = *((_DWORD *)v10 + 8);
              int v22 = *((_DWORD *)v12 + 7);
              int v32 = 136315650;
              uint64_t v33 = v20;
              __int16 v34 = 1024;
              LODWORD(v35[0]) = v21;
              WORD2(v35[0]) = 1024;
              *(_DWORD *)((char *)v35 + 6) = v22;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; clients, id: %d, notification: %d",
                (const char *)&v32,
                24,
                v31);
              BOOL v24 = (uint8_t *)v23;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLDarwinNotifier_Type::Notification, CLDarwinNotifier_Type::NotificationData>::l istClients() [Notification_T = CLDarwinNotifier_Type::Notification, NotificationData_T = CLDarwinNotifie r_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v23);
              if (v24 != buf) {
                free(v24);
              }
            }

            int v17 = (void *)v12[1];
            if (v17)
            {
              do
              {
                signed __int32 v18 = v17;
                int v17 = (void *)*v17;
              }

              while (v17);
            }

            else
            {
              do
              {
                signed __int32 v18 = (void *)v12[2];
                BOOL v19 = *v18 == (void)v12;
                BOOL v12 = v18;
              }

              while (!v19);
            }

            BOOL v12 = v18;
          }

          while (v18 != v10 + 6);
        }

        int v25 = (void *)v10[1];
        if (v25)
        {
          do
          {
            unint64_t v26 = v25;
            int v25 = (void *)*v25;
          }

          while (v25);
        }

        else
        {
          do
          {
            unint64_t v26 = (void *)v10[2];
            BOOL v19 = *v26 == (void)v10;
            BOOL v10 = v26;
          }

          while (!v19);
        }

        BOOL v10 = v26;
      }

      while (v26 != (void *)(a1 + 88));
    }
  }

void sub_100EE43A0(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100EE44DC(a1);
  operator delete(v1);
}

id sub_100EE43B4(uint64_t a1, int a2, void *a3)
{
  id result = sub_100EE46D4(a3);
  if (result)
  {
    int v6 = a2;
    return (id)(*(uint64_t (**)(void, int *, id, void))(a1 + 24))(0LL, &v6, result, *(void *)(a1 + 32));
  }

  return result;
}

void sub_100EE4400(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_100EE442C(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

void sub_100EE4458(id a1)
{
  qword_1019344B8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Motion");
}

void sub_100EE4484(id a1)
{
  qword_101934878 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeoFencing");
}

void sub_100EE44B0(id a1)
{
  qword_1019348D8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

uint64_t sub_100EE44DC(uint64_t a1)
{
  *(void *)a1 = &off_10188B8C8;
  uint64_t v2 = (id *)(a1 + 8);
  [*(id *)(a1 + 16) forget:*(void *)(a1 + 8)];

  [*v2 invalidate];
  id *v2 = 0LL;
  *(void *)(a1 + 16) = 0LL;
  return a1;
}

void sub_100EE453C(id a1)
{
  qword_101934478 = (uint64_t)os_log_create("com.apple.locationd.Support", "Support");
}

CLCppContainer *sub_100EE4568(_BYTE *a1)
{
  uint64_t v2 = operator new(1uLL);
  _BYTE *v2 = *a1;
  uint64_t v4 = _NSConcreteStackBlock;
  uint64_t v5 = 3221225472LL;
  int v6 = sub_100EE46C4;
  char v7 = &unk_10181D3D0;
  BOOL v8 = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:");
}

_BYTE *sub_100EE45E8(_BYTE *result, uint64_t a2, uint64_t a3, void *a4)
{
  if (!result[108])
  {
    char v7 = result;
    uint64_t v8 = *(unsigned int *)(*(void *)a2 + 32LL);
    LODWORD(v13) = *(_DWORD *)(*(void *)a3 + 32LL);
    id v9 = sub_100EE46D4(a4);
    uint64_t v10 = *(void *)a3 + 80LL;
    unint64_t v11 = (uint64_t **)(*(void *)a3 + 40LL);
    __int128 v14 = (int *)(*(void *)a2 + 32LL);
    BOOL v12 = sub_1004EF3D4(v11, v14, (uint64_t)&unk_1012CF090, &v14);
    id result = (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t *, id, uint64_t, uint64_t **))(*(void *)v7 + 192LL))( v7,  v8,  &v13,  v9,  v10,  v12 + 4);
    if ((_DWORD)result) {
      return objc_msgSend( *(id *)(*(void *)a2 + 64),  "onNotification:withData:",  *(unsigned int *)(*(void *)a3 + 32),  a4,  v13);
    }
  }

  return result;
}

void sub_100EE46C4(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1) {
    operator delete(v1);
  }
}

id sub_100EE46D4(void *a1)
{
  if ((objc_opt_isKindOfClass(a1, v2) & 1) != 0) {
    return sub_100EE474C(a1);
  }
  objc_opt_class(&OBJC_CLASS___CLCppContainer);
  if ((objc_opt_isKindOfClass(a1, v4) & 1) != 0) {
    return sub_100EE4AD4(a1);
  }
  else {
    return 0LL;
  }
}

id sub_100EE474C(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return sub_100EE4E80((uint64_t)&v8 + 7, a1);
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10188B8E0);
    }
    int v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)uint64_t buf = 134218498;
      id v11 = v2;
      __int16 v12 = 2048;
      uint64_t v13 = 0LL;
      __int16 v14 = 2080;
      unint64_t v15 = 0x80000001013641FBLL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10188B8E0);
    }
    LODWORD(v9) = 134218498;
    HIDWORD(v9) = (_DWORD)v2;
    LODWORD(v_Block_object_dispose((const void *)(v1 - 112), 8) = 32;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v9,  v8,  v9);
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10188B8E0);
    }
    int v6 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134218498;
      id v11 = v2;
      __int16 v12 = 2048;
      uint64_t v13 = 0LL;
      __int16 v14 = 2080;
      unint64_t v15 = 0x80000001013641FBLL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10188B8E0);
    }
    LODWORD(v9) = 134218498;
    HIDWORD(v9) = (_DWORD)v2;
    LODWORD(v_Block_object_dispose((const void *)(v1 - 112), 8) = 32;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v9,  v8,  v9);
  }

  char v7 = (uint8_t *)v4;
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLDarwinNotifier_Type::NotificationData, Callbac k = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:241:46)]",  "%s\n",  v4);
  if (v7 != buf) {
    free(v7);
  }
  return 0LL;
}

id sub_100EE4AD4(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return [a1 cppObjectPtr];
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10188B8E0);
    }
    int v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)uint64_t buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001013641FBLL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10188B8E0);
    }
    LODWORD(v_Block_object_dispose((const void *)(v1 - 112), 8) = 134218498;
    HIDWORD(v_Block_object_dispose((const void *)(v1 - 112), 8) = (_DWORD)v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10188B8E0);
    }
    int v6 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001013641FBLL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10188B8E0);
    }
    LODWORD(v_Block_object_dispose((const void *)(v1 - 112), 8) = 134218498;
    HIDWORD(v_Block_object_dispose((const void *)(v1 - 112), 8) = (_DWORD)v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  char v7 = (uint8_t *)v4;
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLDarwinNotifier_Type::NotificationData, Callbac k = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:250:46)]",  "%s\n",  v4);
  if (v7 != buf) {
    free(v7);
  }
  return 0LL;
}

id sub_100EE4E80(uint64_t a1, void *a2)
{
  if (![a2 cppObjectPtr]
    && objc_msgSend(objc_msgSend(a2, "compatibilityInfo"), "isEqual:", &off_1018D4868))
  {
    if (objc_msgSend(objc_msgSend(a2, "serialized"), "length") != (id)1) {
      sub_101277E10();
    }
    objc_msgSend(a2, "setCppObjectPtr:", objc_msgSend(objc_msgSend(a2, "serialized"), "bytes"));
  }

  return [a2 cppObjectPtr];
}

void sub_100EE4EF4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10188B910;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100EE4F08(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10188B910;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

CLCppContainer *sub_100EE4F34(_BYTE *a1)
{
  id v2 = operator new(1uLL);
  _BYTE *v2 = *a1;
  uint64_t v4 = _NSConcreteStackBlock;
  uint64_t v5 = 3221225472LL;
  int v6 = sub_100EE5388;
  char v7 = &unk_10181D3D0;
  uint64_t v8 = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:");
}

void sub_100EE4FB4(void *a1, int *a2, void *a3)
{
  if (!*((_BYTE *)a1 + 108))
  {
    uint64_t v5 = a1 + 8;
    uint64_t v4 = a1[8];
    if (v4)
    {
      int v8 = *a2;
      uint64_t v9 = a1 + 8;
      do
      {
        int v10 = *(_DWORD *)(v4 + 32);
        BOOL v11 = v10 < v8;
        if (v10 >= v8) {
          uint64_t v12 = (uint64_t *)v4;
        }
        else {
          uint64_t v12 = (uint64_t *)(v4 + 8);
        }
        if (!v11) {
          uint64_t v9 = (void *)v4;
        }
        uint64_t v4 = *v12;
      }

      while (*v12);
      if (v9 != v5 && v8 >= *((_DWORD *)v9 + 8))
      {
        double v51 = v9;
        id v13 = sub_100EE46D4(a3);
        (*(void (**)(void *, int *, id, void *))(*a1 + 184LL))(a1, a2, v13, v9 + 10);
        unint64_t v14 = (void *)v9[5];
        if (v14 != v9 + 6)
        {
          unint64_t v15 = a1 + 11;
          int v16 = a1 + 1;
          do
          {
            uint64_t v17 = *v15;
            if (!*v15) {
              goto LABEL_25;
            }
            int v18 = *((_DWORD *)v14 + 7);
            BOOL v19 = a1 + 11;
            do
            {
              int v20 = *(_DWORD *)(v17 + 32);
              BOOL v21 = v20 < v18;
              if (v20 >= v18) {
                int v22 = (uint64_t *)v17;
              }
              else {
                int v22 = (uint64_t *)(v17 + 8);
              }
              if (!v21) {
                BOOL v19 = (uint64_t *)v17;
              }
              uint64_t v17 = *v22;
            }

            while (*v22);
            if (v19 != v15 && (int v23 = *((_DWORD *)v19 + 8), v18 >= v23))
            {
              __int16 v50 = v19;
              sub_100EE45E8(a1, (uint64_t)&v50, (uint64_t)&v51, a3);
              uint64_t v27 = a1[8];
              if (!v27) {
                return;
              }
              int v28 = *a2;
              unsigned int v29 = v5;
              do
              {
                int v30 = *(_DWORD *)(v27 + 32);
                BOOL v31 = v30 < v28;
                if (v30 >= v28) {
                  int v32 = (uint64_t *)v27;
                }
                else {
                  int v32 = (uint64_t *)(v27 + 8);
                }
                if (!v31) {
                  unsigned int v29 = (void *)v27;
                }
                uint64_t v27 = *v32;
              }

              while (*v32);
              if (v29 == v5 || v28 < *((_DWORD *)v29 + 8)) {
                return;
              }
              double v51 = v29;
              uint64_t v34 = v29[6];
              unint64_t v14 = v29 + 6;
              uint64_t v33 = v34;
              if (v34)
              {
                int v35 = v14;
                uint64_t v36 = v33;
                do
                {
                  int v37 = *(_DWORD *)(v36 + 28);
                  BOOL v38 = v37 < v23;
                  if (v37 >= v23) {
                    int v39 = (uint64_t *)v36;
                  }
                  else {
                    int v39 = (uint64_t *)(v36 + 8);
                  }
                  if (!v38) {
                    int v35 = (void *)v36;
                  }
                  uint64_t v36 = *v39;
                }

                while (*v39);
                if (v35 == v14 || v23 < *((_DWORD *)v35 + 7))
                {
                  do
                  {
                    int v40 = *(_DWORD *)(v33 + 28);
                    BOOL v41 = v23 < v40;
                    if (v23 >= v40) {
                      BOOL v42 = (uint64_t *)(v33 + 8);
                    }
                    else {
                      BOOL v42 = (uint64_t *)v33;
                    }
                    if (v41) {
                      unint64_t v14 = (void *)v33;
                    }
                    uint64_t v33 = *v42;
                  }

                  while (*v42);
                }

                else
                {
                  uint64_t v43 = (void *)v35[1];
                  if (v43)
                  {
                    do
                    {
                      unint64_t v14 = v43;
                      uint64_t v43 = (void *)*v43;
                    }

                    while (v43);
                  }

                  else
                  {
                    do
                    {
                      unint64_t v14 = (void *)v35[2];
                      BOOL v44 = *v14 == (void)v35;
                      int v35 = v14;
                    }

                    while (!v44);
                  }
                }
              }
            }

            else
            {
LABEL_25:
              __int16 v50 = a1 + 11;
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_10188B738);
              }
              BOOL v24 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                int v25 = a1 + 1;
                int v26 = *((_DWORD *)v14 + 7);
                *(_DWORD *)uint64_t buf = 136446466;
                int v57 = v25;
                __int16 v58 = 1026;
                int v59 = v26;
                _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_FAULT,  "%{public}s; unknown client %{public}d",
                  buf,
                  0x12u);
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(buf, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_10188B738);
                }
                int v45 = a1 + 1;
                int v46 = *((_DWORD *)v14 + 7);
                int v52 = 136446466;
                double v53 = v45;
                __int16 v54 = 1026;
                int v55 = v46;
                LODWORD(v49) = 18;
                _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; unknown client %{public}d",
                  &v52,
                  v49);
                uint64_t v48 = (uint8_t *)v47;
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLNotifier<CLDarwinNotifier_Type::Notification, CLDarwinNotifier_Type::NotificationData>::invokeC lientsWithData(const Notification_T &, CLCppContainer *) [Notification_T = CLDarwinNotifier_Type::Noti fication, NotificationData_T = CLDarwinNotifier_Type::NotificationData, NotificationInfo_T = char, Reg istrationInfo_T = char]",  "%s\n",  v47);
                if (v48 != buf) {
                  free(v48);
                }
              }
            }
          }

          while (v14 != v51 + 6);
        }
      }
    }
  }

void sub_100EE5388(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1) {
    operator delete(v1);
  }
}

void sub_100EE5398(uint64_t a1)
{
  if (*(void *)(a1 + 2600))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188BA18);
    }
    uint64_t v1 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v1,  OS_LOG_TYPE_INFO,  "CLMM,Pedestrian,Maps API already initialized",  buf,  2u);
    }

    if (!sub_1002921D0(115, 2)) {
      return;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188BA18);
    }
    LOWORD(v13) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  1LL,  "CLMM,Pedestrian,Maps API already initialized",  &v13,  2);
    int v3 = (uint8_t *)v2;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLGeoMapFeatureAccessGeometryPedestrian::initializeMapsAPI()",  "%s\n",  v2);
    if (v3 == buf) {
      return;
    }
LABEL_28:
    free(v3);
    return;
  }

  *(void *)(a1 + 260_Block_object_dispose((const void *)(v1 - 112), 8) = dispatch_queue_create("cl_geo_access_map_feature_geometry_pedestrian_queue", 0LL);
  id v5 = [[GEOMapFeatureAccess alloc] initWithQueue:*(void *)(a1 + 2608)];
  *(void *)(a1 + 2600) = v5;
  if (!v5) {
    sub_101277F80();
  }
  [v5 setAllowNetworkTileLoad:1];
  [*(id *)(a1 + 2600) setFlipNegativeTravelDirectionRoads:1];
  [*(id *)(a1 + 2600) setVisitDoubleTravelDirectionRoadsTwice:0];
  [*(id *)(a1 + 2600) setAllowStaleData:1];
  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_10188BA18);
  }
  int v6 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEFAULT))
  {
    else {
      char v7 = "Pedestrian";
    }
    unsigned int v8 = [*(id *)(a1 + 2600) allowStaleData];
    *(_DWORD *)uint64_t buf = 136446466;
    int v18 = v7;
    __int16 v19 = 1026;
    unsigned int v20 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "CLMMPED,%{public}s,using maps API,stale data,%{public}d",  buf,  0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188BA18);
    }
    uint64_t v9 = qword_1019348B8;
    int v10 = (*(unsigned int (**)(uint64_t))(*(void *)a1 + 104LL))(a1) ? "Cycling" : "Pedestrian";
    unsigned int v11 = [*(id *)(a1 + 2600) allowStaleData];
    int v13 = 136446466;
    unint64_t v14 = v10;
    __int16 v15 = 1026;
    unsigned int v16 = v11;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v9,  0LL,  "CLMMPED,%{public}s,using maps API,stale data,%{public}d",  &v13,  18);
    int v3 = (uint8_t *)v12;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLGeoMapFeatureAccessGeometryPedestrian::initializeMapsAPI()",  "%s\n",  v12);
    if (v3 != buf) {
      goto LABEL_28;
    }
  }

BOOL sub_100EE574C(uint64_t a1, uint64_t *a2, uint64_t a3, double a4)
{
  if (*(_BYTE *)(a1 + 32))
  {
    context = objc_autoreleasePoolPush();
    double v8 = *(double *)(a3 + 56);
    double v9 = *(double *)(a3 + 64);
    char v90 = 0LL;
    int v91 = 0LL;
    uint64_t v92 = 0LL;
    if (*(_BYTE *)(a1 + 33))
    {
      if (!*(void *)(a1 + 16))
      {
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188BA18);
        }
        __int16 v69 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)uint64_t buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v69,  OS_LOG_TYPE_ERROR,  "CLMMPED,roadsWithinDistance,fRoadGeometryBuffer is unexpectedly nullptr",  buf,  2u);
        }

        if (!sub_1002921D0(115, 0)) {
          goto LABEL_109;
        }
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188BA18);
        }
        LOWORD(v95[0]) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,roadsWithinDistance,fRoadGeometryBuffer is unexpectedly nullptr",  v95,  2);
        unint64_t v14 = (uint8_t *)v70;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLGeoMapFeatureAccessGeometryPedestrian::roadsWithinDistance(CLMapGeometry::DistanceQueryResultLi st &, const CLMapCrumb &, double, BOOL) const",  "%s\n",  v70);
        goto LABEL_125;
      }

      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188BA18);
      }
      int v10 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v11 = (uint64_t)(*(void *)(*(void *)(a1 + 16) + 336LL) - *(void *)(*(void *)(a1 + 16) + 328LL)) >> 4;
        *(_DWORD *)uint64_t buf = 134349056;
        *(void *)&uint8_t buf[4] = v11;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "CLMMPED,RoadBuffer,findRoadsNear fRoadBuffer.size,%{public}lu",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188BA18);
        }
        uint64_t v76 = (uint64_t)(*(void *)(*(void *)(a1 + 16) + 336LL) - *(void *)(*(void *)(a1 + 16) + 328LL)) >> 4;
        LODWORD(v95[0]) = 134349056;
        *(void *)((char *)v95 + 4) = v76;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,RoadBuffer,findRoadsNear fRoadBuffer.size,%{public}lu",  v95,  12);
        __int16 v78 = (uint8_t *)v77;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLGeoMapFeatureAccessGeometryPedestrian::roadsWithinDistance(CLMapGeometry::DistanceQueryResultLi st &, const CLMapCrumb &, double, BOOL) const",  "%s\n",  v77);
        if (v78 != buf) {
          free(v78);
        }
      }

      if ((sub_100975938(*(void *)(a1 + 16), (uint64_t)&v90, 1, *(double *)(a3 + 56), *(double *)(a3 + 64), a4) & 1) == 0)
      {
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188BA18);
        }
        uint64_t v12 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)uint64_t buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "CLMMPED,Warning,RoadBuffer,findRoadsNear returned false",  buf,  2u);
        }

        if (!sub_1002921D0(115, 2)) {
          goto LABEL_109;
        }
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188BA18);
        }
        LOWORD(v95[0]) = 0;
        LODWORD(v80) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,Warning,RoadBuffer,findRoadsNear returned false",  v95,  v80);
        unint64_t v14 = (uint8_t *)v13;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLGeoMapFeatureAccessGeometryPedestrian::roadsWithinDistance(CLMapGeometry::DistanceQueryResultLi st &, const CLMapCrumb &, double, BOOL) const",  "%s\n",  v13);
LABEL_125:
        if (v14 != buf) {
          free(v14);
        }
LABEL_109:
        BOOL v17 = 0LL;
        goto LABEL_110;
      }
    }

    else if (!sub_100EE6774(a1, (uint64_t)&v90, a3, a4))
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188BA18);
      }
      unint64_t v71 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v71,  OS_LOG_TYPE_DEBUG,  "CLMMPED,Warning,MapsAPI,findRoadsNear returned false",  buf,  2u);
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_109;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188BA18);
      }
      LOWORD(v95[0]) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,Warning,MapsAPI,findRoadsNear returned false",  v95,  2);
      unint64_t v14 = (uint8_t *)v79;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLGeoMapFeatureAccessGeometryPedestrian::roadsWithinDistance(CLMapGeometry::DistanceQueryResultList &, const CLMapCrumb &, double, BOOL) const",  "%s\n",  v79);
      goto LABEL_125;
    }

    int v18 = v90;
    __int16 v19 = v91;
    if (v90 == v91)
    {
      BOOL v17 = 1LL;
      goto LABEL_110;
    }

    unsigned int v20 = (double *)(a1 + 56);
    __asm { FMOV            V0.2D, #-1.0 }

    __int128 v82 = _Q0;
LABEL_27:
    __n128 v84 = 0uLL;
    float v85 = 0.0;
    __int16 v86 = 1;
    float v87 = 0.0;
    unint64_t v89 = 0LL;
    __int128 v88 = 0uLL;
    sub_1000F2F30(&v84, v18);
    unint64_t v26 = v84.n128_u64[0];
    if (!v84.n128_u64[0])
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188BA18);
      }
      double v51 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v51,  OS_LOG_TYPE_DEBUG,  "#Warning,CLMMPED,roadsWithinDistance returned nullptr",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188BA18);
        }
        LOWORD(v95[0]) = 0;
        LODWORD(v80) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "#Warning,CLMMPED,roadsWithinDistance returned nullptr",  v95,  v80);
        unint64_t v65 = (uint8_t *)v64;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLGeoMapFeatureAccessGeometryPedestrian::roadsWithinDistance(CLMapGeometry::DistanceQueryResultLi st &, const CLMapCrumb &, double, BOOL) const",  "%s\n",  v64);
        if (v65 != buf) {
          free(v65);
        }
      }

      sub_100890314(a2);
      int v52 = 1;
      goto LABEL_75;
    }

    v95[0] = 0uLL;
    v95[1] = v82;
    uint64_t v96 = 0LL;
    uint64_t v97 = 0LL;
    unint64_t v98 = 0xBFF0000000000000LL;
    uint64_t v110 = 0LL;
    int v111 = 0;
    memset(&v108[32], 0, 32);
    __int16 v109 = 0;
    __int128 v112 = 0u;
    __int128 v113 = 0u;
    __int128 v114 = 0u;
    memset(v115, 0, 27);
    memset(&v115[32], 0, 48);
    __int128 v107 = 0u;
    memset(v108, 0, 30);
    __int128 v105 = 0u;
    __int128 v106 = 0u;
    __int128 v103 = 0u;
    __int128 v104 = 0u;
    __int128 v101 = 0u;
    __int128 v102 = 0u;
    __int128 v99 = 0u;
    __int128 v100 = 0u;
    unint64_t v117 = 0xBFF0000000000000LL;
    uint64_t v116 = 0LL;
    uint64_t v27 = *(double **)(v84.n128_u64[0] + 136);
    unint64_t v28 = *(void *)(v84.n128_u64[0] + 144) - (void)v27;
    unint64_t v83 = 0xBFF0000000000000LL;
    if ((int)(v28 >> 4) <= 1)
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188BA18);
      }
      double v53 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v53,  OS_LOG_TYPE_DEBUG,  "CLMM,findClosestPointOnRoad,CoordinateCount is <= 1",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188BA18);
        }
        LOWORD(v93) = 0;
        LODWORD(v80) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,findClosestPointOnRoad,CoordinateCount is <= 1",  &v93,  v80);
        __int16 v67 = (uint8_t *)v66;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLGeoAccessCommon::findClosestPointOnRoad(CLDistanceCalc &, const int, const std::vector<Coordinate> &, c onst Coordinate &, double &, double &) [Coordinate = GEOLocationCoordinate2D]",  "%s\n",  v66);
        if (v67 != buf) {
          free(v67);
        }
      }

      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188BA18);
      }
      __int16 v54 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v54,  OS_LOG_TYPE_DEBUG,  "#Warning,CLMMPED,findClosestPointOnRoad returned false",  buf,  2u);
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_72;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188BA18);
      }
      LOWORD(v93) = 0;
      LODWORD(v80) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "#Warning,CLMMPED,findClosestPointOnRoad returned false",  &v93,  v80);
      unint64_t v56 = (uint8_t *)v55;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLGeoMapFeatureAccessGeometryPedestrian::roadsWithinDistance(CLMapGeometry::DistanceQueryResultList &, const CLMapCrumb &, double, BOOL) const",  "%s\n",  v55);
      goto LABEL_94;
    }

    double v29 = *v27;
    double v30 = v27[1];
    *(_OWORD *)uint64_t buf = 0uLL;
    *(void *)&__int128 v93 = 0LL;
    sub_100D2DA44(v20, (double *)buf, (double *)&buf[8], (double *)&v93, v8, v9, 0.0, v29, v30, 0.0);
    BOOL v31 = v19;
    int v32 = a2;
    uint64_t v33 = 0LL;
    uint64_t v34 = (v28 >> 4) - 1LL;
    double v35 = 0.0;
    double v36 = -1.0;
    double v37 = 0.0;
    while (1)
    {
      uint64_t v38 = *(void *)(v26 + 136) + v33;
      double v39 = *(double *)(v38 + 16);
      double v40 = *(double *)(v38 + 24);
      __int128 v93 = 0uLL;
      uint64_t v94 = 0LL;
      sub_100D2DA44(v20, (double *)&v93, (double *)&v93 + 1, (double *)&v94, v8, v9, 0.0, v39, v40, 0.0);
      double v42 = 0.0 - *(double *)buf;
      if (v41 >= 0.001)
      {
        double v44 = ((0.0 - *(double *)&buf[8]) * (*((double *)&v93 + 1) - *(double *)&buf[8])
        if (v44 < 0.0)
        {
          double v46 = v42 * v42 + (0.0 - *(double *)&buf[8]) * (0.0 - *(double *)&buf[8]);
          double v44 = 0.0;
          goto LABEL_37;
        }

        if (v44 > 1.0)
        {
          double v44 = 1.0;
          goto LABEL_37;
        }

        double v45 = 0.0 - (*(double *)&buf[8] + (*((double *)&v93 + 1) - *(double *)&buf[8]) * v44);
      }

      else
      {
        double v43 = v42 * v42;
        double v44 = 0.0;
        double v45 = 0.0 - *(double *)&buf[8];
      }

      double v46 = v43 + v45 * v45;
LABEL_37:
      double v47 = sqrt(v41);
      double v48 = sqrt(v46);
      BOOL v49 = v36 < 0.0;
      if (v48 < v36) {
        BOOL v49 = 1;
      }
      double v50 = v35 + v47 * v44;
      if (v49)
      {
        double v36 = v48;
        double v37 = v50;
      }

      double v35 = v35 + v47;
      *(_OWORD *)uint64_t buf = v93;
      v33 += 16LL;
      if (!--v34)
      {
        double v57 = v37 / v35;
        if (v35 < 0.001) {
          double v57 = 0.0;
        }
        unint64_t v83 = *(void *)&v57;
        a2 = v32;
        __int16 v19 = v31;
        if (!sub_100D3F3A8(a1, (uint64_t)v95, (double **)&v84, 1, (double *)&v83, 1))
        {
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10188BA18);
          }
          unint64_t v60 = (os_log_s *)qword_1019348B8;
          if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
          {
            *(_WORD *)uint64_t buf = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v60,  OS_LOG_TYPE_DEBUG,  "#Warning,CLMMPED,interpolateOnRoad returned false",  buf,  2u);
          }

          if (!sub_1002921D0(115, 2)) {
            goto LABEL_72;
          }
          bzero(buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10188BA18);
          }
          LOWORD(v93) = 0;
          LODWORD(v80) = 2;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "#Warning,CLMMPED,interpolateOnRoad returned false",  &v93,  v80);
          unint64_t v56 = (uint8_t *)v68;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLGeoMapFeatureAccessGeometryPedestrian::roadsWithinDistance(CLMapGeometry::DistanceQueryResult List &, const CLMapCrumb &, double, BOOL) const",  "%s\n",  v68);
LABEL_94:
          if (v56 != buf) {
            free(v56);
          }
LABEL_72:
          int v52 = 1;
          goto LABEL_73;
        }

        float v58 = v36;
        float v85 = v58;
        __int128 v88 = v105;
        float v59 = *(double *)&v106;
        float v87 = v59;
        unint64_t v89 = v83;
        __int16 v86 = 1;
        sub_100C7865C((__n128 **)a2, &v84);
        int v52 = 0;
LABEL_73:
        if (SHIBYTE(v104) < 0) {
          operator delete(*((void **)&v103 + 1));
        }
LABEL_75:
        double v61 = (std::__shared_weak_count *)v84.n128_u64[1];
        if (v84.n128_u64[1])
        {
          char v62 = (unint64_t *)(v84.n128_u64[1] + 8);
          do
            unint64_t v63 = __ldaxr(v62);
          while (__stlxr(v63 - 1, v62));
          if (!v63)
          {
            ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
            std::__shared_weak_count::__release_weak(v61);
          }
        }

        BOOL v17 = v52 == 0;
        if (v52 || (v18 += 2, v18 == v19))
        {
LABEL_110:
          *(void *)uint64_t buf = &v90;
          sub_10004CC28((void ***)buf);
          objc_autoreleasePoolPop(context);
          return v17;
        }

        goto LABEL_27;
      }
    }
  }

  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_10188BA18);
  }
  __int16 v15 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
  {
    uint64_t v16 = *(void *)(a1 + 8);
    *(_DWORD *)uint64_t buf = 134349056;
    *(void *)&uint8_t buf[4] = v16;
    _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_ERROR,  "CLMM,%{public}.1lf,CLGeoMapFeatureAccessGeometryPedestrian geometry is not initialized, use initialize() function",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188BA18);
    }
    uint64_t v73 = *(void *)(a1 + 8);
    LODWORD(v95[0]) = 134349056;
    *(void *)((char *)v95 + 4) = v73;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,%{public}.1lf,CLGeoMapFeatureAccessGeometryPedestrian geometry is not initialized, use initialize() function",  v95,  12);
    uint64_t v75 = (uint8_t *)v74;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLGeoMapFeatureAccessGeometryPedestrian::roadsWithinDistance(CLMapGeometry::DistanceQueryResultList & , const CLMapCrumb &, double, BOOL) const",  "%s\n",  v74);
    if (v75 != buf) {
      free(v75);
    }
  }

  return 0LL;
}

void sub_100EE6708( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, char a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, char *a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,void *__p,uint64_t a54,int a55,__int16 a56,char a57,char a58)
{
  a37 = &a30;
  sub_10004CC28((void ***)&a37);
  _Unwind_Resume(a1);
}

BOOL sub_100EE6774(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  double v73 = a4;
  if (!*(_BYTE *)(a1 + 32))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188BA18);
    }
    int v18 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v19 = *(void *)(a1 + 8);
      *(_DWORD *)uint64_t buf = 134349056;
      *(void *)&uint8_t buf[4] = v19;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_ERROR,  "CLMM,%{public}.1lf,CLGeoMapFeatureAccessGeometryPedestrian geometry is not initialized, use initialize() function",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188BA18);
    }
    uint64_t v20 = *(void *)(a1 + 8);
    LODWORD(v96) = 134349056;
    *(void *)((char *)&v96 + 4) = v20;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,%{public}.1lf,CLGeoMapFeatureAccessGeometryPedestrian geometry is not initialized, use initialize() function",  &v96,  12);
    int v22 = (char *)v21;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLGeoMapFeatureAccessGeometryPedestrian::roadsWithinDistanceLite(std::vector<CLMapRoadPtr> &, const CLMapCrum b &, double, BOOL) const",  "%s\n",  v21);
    goto LABEL_111;
  }

  if (*(void *)(a1 + 2600))
  {
    context = objc_autoreleasePoolPush();
    __int128 v72 = *(_OWORD *)(a3 + 56);
    id v7 = +[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array");
    v70[0] = _NSConcreteStackBlock;
    v70[1] = 3221225472LL;
    v70[2] = sub_100EE749C;
    v70[3] = &unk_10188B958;
    v70[4] = v7;
    v70[5] = a1;
    unint64_t v71 = v70;
    double v8 = operator new(0x28uLL);
    *double v8 = &off_10188BA48;
    v8[1] = a1;
    double v9 = v8 + 1;
    v8[2] = &v72;
    v8[3] = &v73;
    v8[4] = &v71;
    uint64_t v92 = v8;
    ++*(_DWORD *)(a1 + 36);
    int v10 = (char *)operator new(0x28uLL);
    *(void *)int v10 = &off_10188BA48;
    __int128 v11 = v9[1];
    *(_OWORD *)(v10 + _Block_object_dispose((const void *)(v1 - 112), 8) = *v9;
    *(_OWORD *)(v10 + 24) = v11;
    char v90 = v10;
    uint64_t v84 = 0LL;
    float v85 = &v84;
    uint64_t v86 = 0x2020000000LL;
    char v87 = 0;
    uint64_t v78 = 0LL;
    unint64_t v79 = &v78;
    uint64_t v80 = 0x3052000000LL;
    uint64_t v81 = sub_100EEC528;
    __int128 v82 = sub_100EEC538;
    dispatch_group_t v83 = dispatch_group_create();
    uint64_t v74 = 0LL;
    uint64_t v75 = &v74;
    uint64_t v76 = 0x2020000000LL;
    uint64_t v77 = 0LL;
    *(void *)&__int128 v96 = _NSConcreteStackBlock;
    *((void *)&v96 + 1) = 3221225472LL;
    uint64_t v97 = sub_100EEC544;
    unint64_t v98 = &unk_10186EEA0;
    __int128 v99 = &v84;
    __int128 v100 = &v78;
    __int128 v101 = &v74;
    dispatch_group_enter((dispatch_group_t)v79[5]);
    *(void *)uint64_t buf = &v96;
    if (!v90) {
      sub_100008BDC();
    }
    uint64_t v12 = (void *)(*(uint64_t (**)(_BYTE *, uint8_t *))(*(void *)v90 + 48LL))(v90, buf);
    int v13 = (dispatch_group_s *)v79[5];
    dispatch_time_t v14 = dispatch_time(0LL, 100000000LL);
    uint64_t v15 = dispatch_group_wait(v13, v14);
    v75[3] = v15;
    if (v15)
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188BA18);
      }
      uint64_t v16 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v17 = v75[3];
        *(_DWORD *)uint64_t buf = 134349056;
        *(void *)&uint8_t buf[4] = v17;
        _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEBUG,  "#Warning CLMM, GeoMapFeatureAccess query timed out,%{public}lu",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188BA18);
        }
        uint64_t v56 = v75[3];
        int v93 = 134349056;
        uint64_t v94 = v56;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "#Warning CLMM, GeoMapFeatureAccess query timed out,%{public}lu",  &v93,  12);
        float v58 = (char *)v57;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLGeoMapFeatureAccessGeometryCommon::performQuery(QueryFunction, dispatch_queue_t  _Nonnull const &)",  "%s\n",  v57);
      }

      [v12 cancel];
    }

    else if (v79[5])
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188BA18);
      }
      int v25 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEBUG, "CLMM,clearing dispatchGroup", buf, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188BA18);
        }
        LOWORD(v93) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,clearing dispatchGroup",  &v93,  2);
        unint64_t v63 = (char *)v62;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLGeoMapFeatureAccessGeometryCommon::performQuery(QueryFunction, dispatch_queue_t  _Nonnull const &)",  "%s\n",  v62);
      }

      v79[5] = 0LL;
    }

    if (v75[3]) {
      BOOL v26 = 0;
    }
    else {
      BOOL v26 = *((_BYTE *)v85 + 24) == 0;
    }
    _Block_object_dispose(&v74, 8);
    _Block_object_dispose(&v78, 8);
    _Block_object_dispose(&v84, 8);
    uint64_t v27 = v90;
    if (v90 == v89)
    {
      uint64_t v28 = 4LL;
      uint64_t v27 = v89;
    }

    else
    {
      if (!v90) {
        goto LABEL_40;
      }
      uint64_t v28 = 5LL;
    }

    (*(void (**)(void))(*v27 + 8 * v28))();
LABEL_40:
    if (v26)
    {
      *(_DWORD *)(a1 + 40) = 0;
      __int128 v66 = 0u;
      __int128 v67 = 0u;
      __int128 v68 = 0u;
      __int128 v69 = 0u;
      id v29 = [v7 countByEnumeratingWithState:&v66 objects:v88 count:16];
      if (v29)
      {
        uint64_t v30 = *(void *)v67;
LABEL_43:
        uint64_t v31 = 0LL;
        while (1)
        {
          if (*(void *)v67 != v30) {
            objc_enumerationMutation(v7);
          }
          int v32 = *(void **)(*((void *)&v66 + 1) + 8 * v31);
          if (v32)
          {
            unsigned __int8 v33 = [*(id *)(*((void *)&v66 + 1) + 8 * v31) isRoadPedestrianNavigable];
            unsigned int v34 = [v32 walkableSide];
            unsigned __int8 v35 = [v32 isRail];
            char v36 = v34 - 1 < 3 ? 1 : v33;
            char v37 = v36 & (v35 ^ 1);
          }

          else
          {
            char v37 = 0;
          }

          if (*(_BYTE *)(a1 + 2648) || (v37 & 1) != 0)
          {
            if (!*(_BYTE *)(a1 + 2648)) {
              char v37 = 1;
            }
            if ((v37 & 1) != 0
              || v32
              && ((unsigned int v38 = [v32 bikeableSide],
                   unsigned __int8 v39 = [v32 isRail],
                   v38 - 4 < 0xFFFFFFFD)
                ? (char v40 = 1)
                : (char v40 = v39),
                  (v40 & 1) == 0))
            {
              sub_100EE7554(v32, (std::string **)&v96);
              uint64_t v41 = v96;
              if ((void)v96)
              {
                int v42 = 0;
              }

              else
              {
                if (qword_1019348B0 != -1) {
                  dispatch_once(&qword_1019348B0, &stru_10188BA18);
                }
                double v43 = (os_log_s *)qword_1019348B8;
                if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
                {
                  *(_WORD *)uint64_t buf = 0;
                  _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_DEBUG,  "#Warning,CLMMPED,roadsWithinDistance returned nullptr",  buf,  2u);
                }

                if (sub_1002921D0(115, 2))
                {
                  bzero(buf, 0x65CuLL);
                  if (qword_1019348B0 != -1) {
                    dispatch_once(&qword_1019348B0, &stru_10188BA18);
                  }
                  LOWORD(v7_Block_object_dispose((const void *)(v1 - 112), 8) = 0;
                  LODWORD(v64) = 2;
                  _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "#Warning,CLMMPED,roadsWithinDistance returned nullptr",  &v78,  v64);
                  double v50 = (char *)v49;
                  sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLGeoMapFeatureAccessGeometryPedestrian::roadsWithinDistanceLite(std::vector<CLMapRoadPtr> &, c onst CLMapCrumb &, double, BOOL) const",  "%s\n",  v49);
                }

                double v45 = *(char **)a2;
                *(void *)(a2 + _Block_object_dispose((const void *)(v1 - 112), 8) = v45;
                int v42 = 1;
              }

              double v46 = (std::__shared_weak_count *)*((void *)&v96 + 1);
              if (*((void *)&v96 + 1))
              {
                double v47 = (unint64_t *)(*((void *)&v96 + 1) + 8LL);
                do
                  unint64_t v48 = __ldaxr(v47);
                while (__stlxr(v48 - 1, v47));
                if (!v48)
                {
                  ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
                  std::__shared_weak_count::__release_weak(v46);
                }
              }

              if (!v41) {
                break;
              }
            }
          }

          if ((id)++v31 == v29)
          {
            id v51 = [v7 countByEnumeratingWithState:&v66 objects:v88 count:16];
            id v29 = v51;
            if (v51) {
              goto LABEL_43;
            }
            goto LABEL_88;
          }
        }
      }

      else
      {
LABEL_88:
        int v42 = 0;
      }

      BOOL v24 = v42 == 0;
    }

    else
    {
      ++*(_DWORD *)(a1 + 40);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188BA18);
      }
      int v52 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v52,  OS_LOG_TYPE_DEBUG,  "#Warning,CLMMPED, query failed (roadsWithinDistance)",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188BA18);
        }
        LOWORD(v96) = 0;
        LODWORD(v64) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "#Warning,CLMMPED, query failed (roadsWithinDistance)",  &v96,  v64);
        double v61 = (char *)v60;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLGeoMapFeatureAccessGeometryPedestrian::roadsWithinDistanceLite(std::vector<CLMapRoadPtr> &, const CLMap Crumb &, double, BOOL) const",  "%s\n",  v60);
      }

      BOOL v24 = 0LL;
    }

    double v53 = v92;
    if (v92 == v91)
    {
      uint64_t v54 = 4LL;
      double v53 = v91;
    }

    else
    {
      if (!v92)
      {
LABEL_101:
        objc_autoreleasePoolPop(context);
        return v24;
      }

      uint64_t v54 = 5LL;
    }

    (*(void (**)(void))(*v53 + 8 * v54))();
    goto LABEL_101;
  }

  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_10188BA18);
  }
  int v23 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_ERROR,  "CLMMPED,roadsWithinDistanceLite,fGEOMapFeatureAccess is unexpectedly nil",  buf,  2u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188BA18);
    }
    LOWORD(v96) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,roadsWithinDistanceLite,fGEOMapFeatureAccess is unexpectedly nil",  &v96,  2);
    int v22 = (char *)v59;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLGeoMapFeatureAccessGeometryPedestrian::roadsWithinDistanceLite(std::vector<CLMapRoadPtr> &, const CLMapCrum b &, double, BOOL) const",  "%s\n",  v59);
LABEL_111:
  }

  return 0LL;
}

void sub_100EE73C8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, char a33, uint64_t a34, uint64_t a35, uint64_t a36, char a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, char a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  unint64_t v71 = a66;
  if (a66 == &a63)
  {
    uint64_t v72 = 4LL;
    unint64_t v71 = &a63;
  }

  else
  {
    if (!a66) {
      goto LABEL_6;
    }
    uint64_t v72 = 5LL;
  }

  (*(void (**)(void))(*(void *)v71 + 8 * v72))();
LABEL_6:
  double v73 = a70;
  if (a70 == &a67)
  {
    uint64_t v74 = 4LL;
    double v73 = &a67;
  }

  else
  {
    if (!a70) {
      goto LABEL_11;
    }
    uint64_t v74 = 5LL;
  }

  (*(void (**)(void))(*(void *)v73 + 8 * v74))();
LABEL_11:
  _Unwind_Resume(a1);
}

void *sub_100EE749C(void *result, void *a2)
{
  if (a2)
  {
    int v3 = result;
    uint64_t v4 = result[5];
    unsigned int v5 = [a2 isRoadPedestrianNavigable];
    unsigned int v6 = [a2 walkableSide];
    id result = [a2 isRail];
    if (((v6 - 1 > 2) & ~v5) == 0 && !(_DWORD)result) {
      return [(id)v3[4] addObject:a2];
    }
    if (*(_BYTE *)(v4 + 2648))
    {
      unsigned int v7 = [a2 bikeableSide];
      id result = [a2 isRail];
    }
  }

  return result;
}

double sub_100EE7554@<D0>(void *a1@<X2>, std::string **a2@<X8>)
{
  double result = sub_1009779E8(a1, 1, a2);
  uint64_t v4 = *a2;
  if (*a2)
  {
    int v5 = v4[4].__r_.__value_.__r.__words[1];
    if (v5 >= 1)
    {
      double result = 3.70000005 * (double)v5;
      *(double *)&v4[4].__r_.__value_.__l.__data_ = result;
    }
  }

  return result;
}

uint64_t sub_100EE75AC(uint64_t a1, uint64_t *a2, uint64_t **a3, int a4, int a5, double a6, double a7)
{
  if (*(_BYTE *)(a1 + 32))
  {
    double v9 = *a3;
    if (*a3)
    {
      double v12 = a6;
      if (a4)
      {
        double v15 = 1.0 - a6;
        sub_1001AC068(*a3);
        double v12 = *((double *)v9 + 5);
      }

      else
      {
        sub_1001AC068(*a3);
        double v15 = *((double *)v9 + 5);
      }

      if (v15 * v12 > a7) {
        return 1LL;
      }
      __int128 v42 = 0uLL;
      uint64_t v43 = 0LL;
      uint64_t v19 = *a3;
      uint64_t v20 = a3[1];
      v41[0] = v19;
      v41[1] = v20;
      if (v20)
      {
        BOOL v21 = (unint64_t *)(v20 + 1);
        do
          unint64_t v22 = __ldxr(v21);
        while (__stxr(v22 + 1, v21));
      }

      uint64_t v23 = sub_100EE7A94(a1, v41, a4, (uint64_t *)&v42, a5, a7 - v15 * v12);
      uint64_t v18 = v23;
      if (!v20) {
        goto LABEL_21;
      }
      BOOL v24 = (unint64_t *)(v20 + 1);
      do
        unint64_t v25 = __ldaxr(v24);
      while (__stlxr(v25 - 1, v24));
      if (!v25)
      {
        (*(void (**)(uint64_t *))(*v20 + 16))(v20);
        std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v20);
        if ((v18 & 1) != 0)
        {
LABEL_22:
          uint64_t v27 = (uint64_t *)*((void *)&v42 + 1);
          for (uint64_t i = (uint64_t *)v42; i != v27; i += 3)
          {
            *(_WORD *)&uint8_t buf[8] = 1;
            uint64_t v45 = 0LL;
            double v46 = 0LL;
            *(void *)uint64_t buf = *(void *)*i;
            sub_1000F2F30(&v45, i);
            uint8_t buf[8] = *((_BYTE *)i + 16);
            if (buf[8]) {
              double v28 = 0.0;
            }
            else {
              double v28 = 1.0;
            }
            double v47 = v28;
            v29.n128_f64[0] = sub_100EE8DE4(a2, (uint64_t)buf);
            uint64_t v30 = v46;
            if (v46)
            {
              p_shared_owners = (unint64_t *)&v46->__shared_owners_;
              do
                unint64_t v32 = __ldaxr(p_shared_owners);
              while (__stlxr(v32 - 1, p_shared_owners));
              if (!v32)
              {
                ((void (*)(std::__shared_weak_count *, __n128))v30->__on_zero_shared)(v30, v29);
                std::__shared_weak_count::__release_weak(v30);
              }
            }
          }

void sub_100EE7A50( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, void **a19)
{
  a19 = (void **)&a15;
  sub_100EECC8C(&a19);
  _Unwind_Resume(a1);
}

uint64_t sub_100EE7A94(uint64_t a1, uint64_t **a2, int a3, uint64_t *a4, int a5, double a6)
{
  if (!*(_BYTE *)(a1 + 32))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188BA18);
    }
    uint64_t v17 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v18 = *(void *)(a1 + 8);
      *(_DWORD *)uint64_t buf = 134349056;
      *(void *)&uint8_t buf[4] = v18;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_ERROR,  "CLMM,%{public}.1lf,CLGeoMapFeatureAccessGeometryPedestrian geometry is not initialized, use initialize() function",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188BA18);
      }
      uint64_t v161 = *(void *)(a1 + 8);
      LODWORD(v205[0]) = 134349056;
      *(void *)((char *)v205 + 4) = v161;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,%{public}.1lf,CLGeoMapFeatureAccessGeometryPedestrian geometry is not initialized, use initialize() function",  v205,  12);
      __int16 v163 = (char *)v162;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLGeoMapFeatureAccessGeometryPedestrian::findAllDigitizedRoads(const CLMapRoadPtr, BOOL, double, std::vecto r<CLMapRoadWithDirection> &, BOOL) const",  "%s\n",  v162);
      if (v163 != buf) {
        free(v163);
      }
    }

    return 0LL;
  }

  double v9 = *a2;
  if (*(_BYTE *)(a1 + 33))
  {
    int v10 = (std::__shared_weak_count *)a2[1];
    uint64_t v190 = *a2;
    __int16 v191 = v10;
    if (v10)
    {
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        unint64_t v12 = __ldxr(p_shared_owners);
      while (__stxr(v12 + 1, p_shared_owners));
    }

    uint64_t v13 = sub_100EE90E8(a1, (uint64_t *)&v190, a3, a4, a5);
    dispatch_time_t v14 = v191;
    if (v191)
    {
      double v15 = (unint64_t *)&v191->__shared_owners_;
      do
        unint64_t v16 = __ldaxr(v15);
      while (__stlxr(v16 - 1, v15));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
        std::__shared_weak_count::__release_weak(v14);
      }
    }

    return v13;
  }

  if (!v9) {
    return 0LL;
  }
  v205[0] = 0uLL;
  __asm { FMOV            V0.2D, #-1.0 }

  v205[1] = _Q0;
  uint64_t v206 = 0LL;
  uint64_t v207 = 0LL;
  unint64_t v208 = 0xBFF0000000000000LL;
  uint64_t v220 = 0LL;
  int v221 = 0;
  memset(&v218[32], 0, 32);
  __int16 v219 = 0;
  __int128 v222 = 0u;
  __int128 v223 = 0u;
  __int128 v224 = 0u;
  memset(v225, 0, 27);
  memset(&v225[32], 0, 48);
  memset(v218, 0, 30);
  __int128 v217 = 0u;
  __int128 v216 = 0u;
  __int128 v215 = 0u;
  __int128 v214 = 0u;
  __int128 v213 = 0u;
  __int128 v212 = 0u;
  __int128 v211 = 0u;
  __int128 v210 = 0u;
  __int128 v209 = 0u;
  unint64_t v227 = 0xBFF0000000000000LL;
  uint64_t v226 = 0LL;
  uint64_t v26 = v9[17];
  uint64_t v27 = v9[18];
  if (a3)
  {
    uint64_t v28 = v27 - v26;
    if (v28)
    {
      uint64_t v29 = (v28 >> 4) - 1;
      uint64_t v30 = (void *)(v26 + 16 * v29);
LABEL_24:
      *(void *)&__int128 v209 = *v30;
      uint64_t v31 = *(void *)(v26 + 16 * v29 + 8);
      goto LABEL_26;
    }
  }

  else if (v27 != v26)
  {
    uint64_t v29 = 0LL;
    uint64_t v30 = (void *)v9[17];
    goto LABEL_24;
  }

  uint64_t v31 = 0LL;
LABEL_26:
  *((void *)&v209 + 1) = v31;
  uint64_t v187 = &v187;
  int v188 = (uint64_t *)&v187;
  uint64_t v189 = 0LL;
  __int128 v186 = *(_OWORD *)v9;
  unint64_t v32 = sub_10097496C((uint64_t **)(a1 + 2616), &v186, 0);
  unsigned __int8 v33 = v32;
  __int16 v179 = (uint64_t **)(a1 + 2616);
  uint64_t v181 = a1;
  int v180 = a3;
  if (!v32)
  {
    if (v189)
    {
LABEL_74:
      char v54 = 0;
      goto LABEL_75;
    }

void sub_100EE8CE4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, char a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,void *__p,uint64_t a62,int a63)
{
  STACK[0x2D0] = (unint64_t)&a33;
  sub_10004CC28((void ***)&STACK[0x2D0]);
  sub_100890314(&a28);
  if (a66 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

double sub_100EE8DE4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = operator new(0x38uLL);
  _DWORD v4[2] = *(void *)a2;
  *((_WORD *)v4 + 12) = *(_WORD *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 24);
  void v4[4] = *(void *)(a2 + 16);
  void v4[5] = v5;
  if (v5)
  {
    unsigned int v6 = (unint64_t *)(v5 + 8);
    do
      unint64_t v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }

  double result = *(double *)(a2 + 32);
  *((double *)v4 + 6) = result;
  uint64_t v9 = *a1;
  void *v4 = *a1;
  v4[1] = a1;
  *(void *)(v9 + _Block_object_dispose((const void *)(v1 - 112), 8) = v4;
  *a1 = (uint64_t)v4;
  ++a1[2];
  return result;
}

uint64_t sub_100EE8E60(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 32))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188BA18);
    }
    uint64_t v1 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v1,  OS_LOG_TYPE_ERROR,  "CLGeoMapFeatureAccessGeometryPedestrian::roadsAtIntersection - Code not implemented",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188BA18);
      }
      LOWORD(v9) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLGeoMapFeatureAccessGeometryPedestrian::roadsAtIntersection - Code not implemented",  &v9,  2,  v9);
LABEL_19:
      double v8 = (uint8_t *)v2;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLGeoMapFeatureAccessGeometryPedestrian::roadsAtIntersection(CLMapCrumb &, CLMapGeometry::Intersect ionQueryResultList *, CLMapGeometry::IntersectionQueryResultList *, BOOL, const CLMapRoadPtr &, BOOL, double, do uble, double &) const",  "%s\n",  v2);
      if (v8 != buf) {
        free(v8);
      }
    }
  }

  else
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188BA18);
    }
    uint64_t v4 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v5 = *(void *)(a1 + 8);
      *(_DWORD *)uint64_t buf = 134349056;
      uint64_t v11 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_ERROR,  "CLMM,%{public}.1lf,CLGeoMapFeatureAccessGeometryPedestrian geometry is not initialized, use initialize() function",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188BA18);
      }
      uint64_t v7 = *(void *)(a1 + 8);
      LODWORD(v9) = 134349056;
      *(void *)((char *)&v9 + 4) = v7;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,%{public}.1lf,CLGeoMapFeatureAccessGeometryPedestrian geometry is not initialized, use initialize() function",  &v9,  12,  v9);
      goto LABEL_19;
    }
  }

  return 0LL;
}

uint64_t sub_100EE90E8(uint64_t a1, uint64_t *a2, int a3, uint64_t *a4, int a5)
{
  if (!*(_BYTE *)(a1 + 32))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188BA18);
    }
    double v15 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v16 = *(void *)(a1 + 8);
      *(_DWORD *)uint64_t buf = 134349056;
      *(void *)&uint8_t buf[4] = v16;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_ERROR,  "CLMM,%{public}.1lf,CLGeoMapFeatureAccessGeometryPedestrian geometry is not initialized, use initialize() function",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188BA18);
    }
    uint64_t v17 = *(void *)(a1 + 8);
    *(_DWORD *)unint64_t v148 = 134349056;
    *(void *)&v148[4] = v17;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,%{public}.1lf,CLGeoMapFeatureAccessGeometryPedestrian geometry is not initialized, use initialize() function",  v148,  12);
    uint64_t v19 = (uint8_t *)v18;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLGeoMapFeatureAccessGeometryPedestrian::findAllDigitizedRoadsUsingRoadBuffer(const CLMapRoadPtr, BOOL, doubl e, std::vector<CLMapRoadWithDirection> &, BOOL) const",  "%s\n",  v18);
    goto LABEL_191;
  }

  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188BA18);
    }
    uint64_t v20 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_ERROR,  "CLMMPED,findAllDigitizedRoadsUsingRoadBuffer,fRoadGeometryBuffer is unexpectedly nullptr",  buf,  2u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188BA18);
    }
    *(_WORD *)unint64_t v148 = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,findAllDigitizedRoadsUsingRoadBuffer,fRoadGeometryBuffer is unexpectedly nullptr",  v148,  2);
    uint64_t v19 = (uint8_t *)v21;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLGeoMapFeatureAccessGeometryPedestrian::findAllDigitizedRoadsUsingRoadBuffer(const CLMapRoadPtr, BOOL, doubl e, std::vector<CLMapRoadWithDirection> &, BOOL) const",  "%s\n",  v21);
    goto LABEL_191;
  }

  if (*a2)
  {
    __int16 v145 = &v145;
    int v146 = (uint64_t *)&v145;
    uint64_t v147 = 0LL;
    uint64_t v142 = 0LL;
    unint64_t v143 = 0LL;
    int v11 = a5 ^ 1;
    uint64_t v144 = 0LL;
    if (a3)
    {
      if ((sub_100975E78(v6, a2, &v142, v11) & 1) == 0)
      {
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188BA18);
        }
        unint64_t v12 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)uint64_t buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_ERROR,  "CLMMPED,findAllDigitizedRoadsUsingRoadBuffer,findRoadsConnectedToEndOfThisRoad returned false",  buf,  2u);
        }

        if (!sub_1002921D0(115, 0)) {
          goto LABEL_70;
        }
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188BA18);
        }
        *(_WORD *)unint64_t v148 = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,findAllDigitizedRoadsUsingRoadBuffer,findRoadsConnectedToEndOfThisRoad returned false",  v148,  2);
        dispatch_time_t v14 = (uint8_t *)v13;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLGeoMapFeatureAccessGeometryPedestrian::findAllDigitizedRoadsUsingRoadBuffer(const CLMapRoadPtr, BOOL, d ouble, std::vector<CLMapRoadWithDirection> &, BOOL) const",  "%s\n",  v13);
LABEL_196:
        if (v14 != buf) {
          free(v14);
        }
LABEL_70:
        uint64_t v23 = 0LL;
LABEL_186:
        *(void *)uint64_t buf = &v142;
        sub_10004CC28((void ***)buf);
        sub_100890314((uint64_t *)&v145);
        return v23;
      }
    }

    else if ((sub_100976638(v6, a2, &v142, v11) & 1) == 0)
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188BA18);
      }
      __int128 v47 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_ERROR,  "CLMMPED,findAllDigitizedRoadsUsingRoadBuffer,findRoadsConnectedToStartOfThisRoad returned false",  buf,  2u);
      }

      if (!sub_1002921D0(115, 0)) {
        goto LABEL_70;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188BA18);
      }
      *(_WORD *)unint64_t v148 = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,findAllDigitizedRoadsUsingRoadBuffer,findRoadsConnectedToStartOfThisRoad returned false",  v148,  2);
      dispatch_time_t v14 = (uint8_t *)v128;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLGeoMapFeatureAccessGeometryPedestrian::findAllDigitizedRoadsUsingRoadBuffer(const CLMapRoadPtr, BOOL, dou ble, std::vector<CLMapRoadWithDirection> &, BOOL) const",  "%s\n",  v128);
      goto LABEL_196;
    }

    int v140 = a5;
    uint64_t v139 = a1;
    BOOL v24 = v142;
    for (uint64_t i = v143; v24 != i; v24 += 16)
    {
      uint64_t v26 = *(void *)v24;
      uint64_t v27 = *((void *)v24 + 1);
      *(void *)unint64_t v148 = *(void *)v24;
      *(void *)&v148[8] = v27;
      if (v27)
      {
        uint64_t v28 = (unint64_t *)(v27 + 8);
        do
          unint64_t v29 = __ldxr(v28);
        while (__stxr(v29 + 1, v28));
      }

      if (v26)
      {
        memset(buf, 0, 20);
        *(_WORD *)&buf[20] = 1;
        *(_DWORD *)&_BYTE buf[24] = 0;
        memset(&buf[32], 0, 24);
        sub_1000F2F30(buf, (uint64_t *)v148);
        uint64_t v30 = operator new(0x48uLL);
        uint64_t v31 = *(void *)&buf[8];
        v30[2] = *(void *)buf;
        v30[3] = v31;
        if (v31)
        {
          unint64_t v32 = (unint64_t *)(v31 + 8);
          do
            unint64_t v33 = __ldxr(v32);
          while (__stxr(v33 + 1, v32));
          unsigned int v34 = *(std::__shared_weak_count **)&buf[8];
        }

        else
        {
          unsigned int v34 = 0LL;
        }

        __int128 v35 = *(_OWORD *)&buf[32];
        *((_OWORD *)v30 + 2) = *(_OWORD *)&buf[16];
        *((_OWORD *)v30 + 3) = v35;
        v30[8] = *(void *)&buf[48];
        uint64_t v36 = (uint64_t)v145;
        void *v30 = v145;
        v30[1] = &v145;
        *(void *)(v36 + _Block_object_dispose((const void *)(v1 - 112), 8) = v30;
        __int16 v145 = v30;
        ++v147;
        if (v34)
        {
          p_shared_owners = (unint64_t *)&v34->__shared_owners_;
          do
            unint64_t v38 = __ldaxr(p_shared_owners);
          while (__stlxr(v38 - 1, p_shared_owners));
          if (!v38)
          {
            ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
            std::__shared_weak_count::__release_weak(v34);
          }
        }
      }

      uint64_t v39 = *(std::__shared_weak_count **)&v148[8];
      if (*(void *)&v148[8])
      {
        char v40 = (unint64_t *)(*(void *)&v148[8] + 8LL);
        do
          unint64_t v41 = __ldaxr(v40);
        while (__stlxr(v41 - 1, v40));
        if (!v41)
        {
          ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
          std::__shared_weak_count::__release_weak(v39);
        }
      }
    }

    if ((a5 & 1) != 0)
    {
      uint64_t v42 = *a2;
      uint64_t v43 = (std::__shared_weak_count *)a2[1];
      uint64_t v141 = v43;
      if (v43)
      {
        double v44 = (unint64_t *)&v43->__shared_owners_;
        do
          unint64_t v45 = __ldxr(v44);
        while (__stxr(v45 + 1, v44));
        *(void *)uint64_t buf = v42;
        *(void *)&uint8_t buf[8] = v43;
        do
          unint64_t v46 = __ldxr(v44);
        while (__stxr(v46 + 1, v44));
      }

      else
      {
        *(void *)uint64_t buf = *a2;
        *(void *)&uint8_t buf[8] = 0LL;
      }

      uint8_t v48 = a3 ^ 1;
      buf[16] = a3 ^ 1;
      unint64_t v49 = a4[1];
      if (v49 >= a4[2])
      {
        uint64_t v53 = sub_100EECCFC(a4, (uint64_t)buf);
      }

      else
      {
        *(void *)unint64_t v49 = v42;
        uint64_t v50 = *(void *)&buf[8];
        *(void *)(v49 + _Block_object_dispose((const void *)(v1 - 112), 8) = *(void *)&buf[8];
        if (v50)
        {
          id v51 = (unint64_t *)(v50 + 8);
          do
            unint64_t v52 = __ldxr(v51);
          while (__stxr(v52 + 1, v51));
          uint8_t v48 = buf[16];
        }

        *(_BYTE *)(v49 + 16) = v48;
        uint64_t v53 = v49 + 24;
      }

      a4[1] = v53;
      char v54 = *(std::__shared_weak_count **)&buf[8];
      if (*(void *)&buf[8])
      {
        uint64_t v55 = (unint64_t *)(*(void *)&buf[8] + 8LL);
        do
          unint64_t v56 = __ldaxr(v55);
        while (__stlxr(v56 - 1, v55));
        if (!v56)
        {
          ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
          std::__shared_weak_count::__release_weak(v54);
        }
      }

      if (v141)
      {
        double v57 = (unint64_t *)&v141->__shared_owners_;
        do
          unint64_t v58 = __ldaxr(v57);
        while (__stlxr(v58 - 1, v57));
        if (!v58)
        {
          ((void (*)(std::__shared_weak_count *))v141->__on_zero_shared)(v141);
          std::__shared_weak_count::__release_weak(v141);
        }
      }
    }

    uint64_t v59 = *(void *)(*a2 + 136);
    uint64_t v60 = *(void *)(*a2 + 144);
    if (a3)
    {
      uint64_t v61 = v60 - v59;
      if (v61)
      {
        uint64_t v62 = (v61 >> 4) - 1;
        uint64_t v63 = (double *)(v59 + 16 * v62);
LABEL_94:
        double v64 = *v63;
        double v65 = *(double *)(v59 + 16 * v62 + 8);
        goto LABEL_96;
      }
    }

    else if (v60 != v59)
    {
      uint64_t v62 = 0LL;
      uint64_t v63 = *(double **)(*a2 + 136);
      goto LABEL_94;
    }

    double v64 = 0.0;
    double v65 = 0.0;
LABEL_96:
    double v66 = v146;
    if (v146 == (uint64_t *)&v145)
    {
LABEL_176:
      if (0xAAAAAAAAAAAAAAABLL * ((a4[1] - *a4) >> 3) == v140)
      {
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188BA18);
        }
        unint64_t v117 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v118 = *(void *)(v139 + 8);
          uint64_t v119 = *(void *)*a2;
          unint64_t v120 = *(uint64_t **)(*a2 + 136);
          unint64_t v121 = *(uint64_t **)(*a2 + 144);
          if (v121 == v120)
          {
            uint64_t v124 = 0LL;
            uint64_t v122 = 0LL;
            uint64_t v123 = 0LL;
            uint64_t v125 = 0LL;
          }

          else
          {
            uint64_t v122 = *v120;
            uint64_t v123 = v120[1];
            uint64_t v124 = *(v121 - 2);
            uint64_t v125 = *(v121 - 1);
          }

          *(_DWORD *)uint64_t buf = 134351105;
          *(void *)&uint8_t buf[4] = v118;
          *(_WORD *)&_BYTE buf[12] = 2049;
          *(void *)&buf[14] = v119;
          *(_WORD *)&buf[22] = 2050;
          *(void *)&_BYTE buf[24] = v147;
          *(_WORD *)&_BYTE buf[32] = 2049;
          *(void *)&_BYTE buf[34] = v122;
          *(_WORD *)&buf[42] = 2049;
          *(void *)&buf[44] = v123;
          *(_WORD *)&buf[52] = 2049;
          *(void *)&buf[54] = v124;
          __int16 v164 = 2049;
          uint64_t v165 = v125;
          __int16 v166 = 2049;
          double v167 = v64;
          __int16 v168 = 2049;
          double v169 = v65;
          _os_log_impl( (void *)&_mh_execute_header,  v117,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}.2lf,CLGeoMapFeatureAccessGeometryPedestrian,ConnectedRoads found 0 roads in buffer, %{private }lld, totalResults,%{public}lu,roadStartLL,%{private}.7lf,%{private}.7lf,roadEndLL,%{private}.7lf,%{private} .7lf,searchCoordinate,%{private}.7lf,%{private}.7lf",  buf,  0x5Cu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10188BA18);
          }
          uint64_t v129 = *(void *)(v139 + 8);
          uint64_t v130 = *(void *)*a2;
          __int16 v131 = *(uint64_t **)(*a2 + 136);
          unint64_t v132 = *(uint64_t **)(*a2 + 144);
          if (v132 == v131)
          {
            uint64_t v135 = 0LL;
            uint64_t v133 = 0LL;
            uint64_t v134 = 0LL;
            uint64_t v136 = 0LL;
          }

          else
          {
            uint64_t v133 = *v131;
            uint64_t v134 = v131[1];
            uint64_t v135 = *(v132 - 2);
            uint64_t v136 = *(v132 - 1);
          }

          *(_DWORD *)unint64_t v148 = 134351105;
          *(void *)&v148[4] = v129;
          *(_WORD *)&v148[12] = 2049;
          *(void *)&v148[14] = v130;
          __int16 v149 = 2050;
          uint64_t v150 = v147;
          __int16 v151 = 2049;
          uint64_t v152 = v133;
          __int16 v153 = 2049;
          uint64_t v154 = v134;
          __int16 v155 = 2049;
          uint64_t v156 = v135;
          __int16 v157 = 2049;
          uint64_t v158 = v136;
          __int16 v159 = 2049;
          double v160 = v64;
          __int16 v161 = 2049;
          double v162 = v65;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}.2lf,CLGeoMapFeatureAccessGeometryPedestrian,ConnectedRoads found 0 roads in buffer, %{private }lld, totalResults,%{public}lu,roadStartLL,%{private}.7lf,%{private}.7lf,roadEndLL,%{private}.7lf,%{private} .7lf,searchCoordinate,%{private}.7lf,%{private}.7lf",  v148,  92);
          uint64_t v138 = (uint8_t *)v137;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLGeoMapFeatureAccessGeometryPedestrian::findAllDigitizedRoadsUsingRoadBuffer(const CLMapRoadPtr, BOOL, double, std::vector<CLMapRoadWithDirection> &, BOOL) const",  "%s\n",  v137);
          if (v138 != buf) {
            free(v138);
          }
        }
      }

      uint64_t v23 = 1LL;
      goto LABEL_186;
    }

    while (1)
    {
      __int128 v67 = (void *)v66[2];
      if (*v67 != *(void *)*a2)
      {
        __int128 v69 = v67 + 17;
        __int128 v68 = (double *)v67[17];
        if ((double *)v69[1] == v68)
        {
          double v70 = 0.0;
          double v71 = 0.0;
        }

        else
        {
          double v70 = *v68;
          double v71 = v68[1];
        }

        if (sub_100292850(v64, v65, v70, v71, 0.0000001))
        {
          uint64_t v72 = v66[2];
          char v73 = (std::__shared_weak_count *)v66[3];
          if (v73)
          {
            unint64_t v74 = (unint64_t *)&v73->__shared_owners_;
            do
              unint64_t v75 = __ldxr(v74);
            while (__stxr(v75 + 1, v74));
            *(void *)unint64_t v148 = v72;
            *(void *)&v148[8] = v73;
            do
              unint64_t v76 = __ldxr(v74);
            while (__stxr(v76 + 1, v74));
          }

          else
          {
            *(void *)unint64_t v148 = v66[2];
            *(void *)&v148[8] = 0LL;
          }

          v148[16] = 1;
          unint64_t v80 = a4[1];
          unint64_t v81 = a4[2];
          if (v80 >= v81)
          {
            unint64_t v85 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v80 - *a4) >> 3);
            unint64_t v86 = v85 + 1;
            if (v85 + 1 > 0xAAAAAAAAAAAAAAALL) {
              sub_100007008();
            }
            unint64_t v87 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v81 - *a4) >> 3);
            if (2 * v87 > v86) {
              unint64_t v86 = 2 * v87;
            }
            if (v87 >= 0x555555555555555LL) {
              unint64_t v88 = 0xAAAAAAAAAAAAAAALL;
            }
            else {
              unint64_t v88 = v86;
            }
            *(void *)&_BYTE buf[32] = a4 + 2;
            if (v88) {
              double v89 = sub_10000701C((uint64_t)(a4 + 2), v88);
            }
            else {
              double v89 = 0LL;
            }
            unint64_t v94 = (uint64_t *)&v89[24 * v85];
            *(void *)uint64_t buf = v89;
            *(void *)&uint8_t buf[8] = v94;
            *(void *)&_BYTE buf[24] = &v89[24 * v88];
            uint64_t *v94 = v72;
            v94[1] = (uint64_t)v73;
            if (v73)
            {
              unint64_t v95 = (unint64_t *)&v73->__shared_owners_;
              do
                unint64_t v96 = __ldxr(v95);
              while (__stxr(v96 + 1, v95));
            }

            v89[24 * v85 + 16] = 1;
            *(void *)&buf[16] = v94 + 3;
            sub_100EECE28(a4, buf);
            uint64_t v84 = a4[1];
            sub_100EECEC4((uint64_t)buf);
          }

          else
          {
            *(void *)unint64_t v80 = v72;
            *(void *)(v80 + _Block_object_dispose((const void *)(v1 - 112), 8) = v73;
            if (v73)
            {
              __int128 v82 = (unint64_t *)&v73->__shared_owners_;
              do
                unint64_t v83 = __ldxr(v82);
              while (__stxr(v83 + 1, v82));
            }

            *(_BYTE *)(v80 + 16) = 1;
            uint64_t v84 = v80 + 24;
          }

          a4[1] = v84;
          if (v73)
          {
            double v97 = (unint64_t *)&v73->__shared_owners_;
            do
              unint64_t v98 = __ldaxr(v97);
            while (__stlxr(v98 - 1, v97));
            if (!v98)
            {
              ((void (*)(std::__shared_weak_count *))v73->__on_zero_shared)(v73);
              std::__shared_weak_count::__release_weak(v73);
            }
          }

          if (!v73) {
            goto LABEL_175;
          }
          unint64_t v99 = (unint64_t *)&v73->__shared_owners_;
          do
            unint64_t v100 = __ldaxr(v99);
          while (__stlxr(v100 - 1, v99));
        }

        else
        {
          uint64_t v77 = *(void *)(v66[2] + 144);
          if (v77 == *(void *)(v66[2] + 136))
          {
            double v78 = 0.0;
            double v79 = 0.0;
          }

          else
          {
            double v78 = *(double *)(v77 - 16);
            double v79 = *(double *)(v77 - 8);
          }

          if (!sub_100292850(v64, v65, v78, v79, 0.0000001)) {
            goto LABEL_175;
          }
          uint64_t v90 = v66[2];
          char v73 = (std::__shared_weak_count *)v66[3];
          if (v73)
          {
            uint64_t v91 = (unint64_t *)&v73->__shared_owners_;
            do
              unint64_t v92 = __ldxr(v91);
            while (__stxr(v92 + 1, v91));
            *(void *)unint64_t v148 = v90;
            *(void *)&v148[8] = v73;
            do
              unint64_t v93 = __ldxr(v91);
            while (__stxr(v93 + 1, v91));
          }

          else
          {
            *(void *)unint64_t v148 = v66[2];
            *(void *)&v148[8] = 0LL;
          }

          v148[16] = 0;
          unint64_t v101 = a4[1];
          unint64_t v102 = a4[2];
          if (v101 >= v102)
          {
            unint64_t v106 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v101 - *a4) >> 3);
            unint64_t v107 = v106 + 1;
            if (v106 + 1 > 0xAAAAAAAAAAAAAAALL) {
              sub_100007008();
            }
            unint64_t v108 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v102 - *a4) >> 3);
            if (2 * v108 > v107) {
              unint64_t v107 = 2 * v108;
            }
            if (v108 >= 0x555555555555555LL) {
              unint64_t v109 = 0xAAAAAAAAAAAAAAALL;
            }
            else {
              unint64_t v109 = v107;
            }
            *(void *)&_BYTE buf[32] = a4 + 2;
            if (v109) {
              uint64_t v110 = sub_10000701C((uint64_t)(a4 + 2), v109);
            }
            else {
              uint64_t v110 = 0LL;
            }
            unint64_t v111 = (uint64_t *)&v110[24 * v106];
            *(void *)uint64_t buf = v110;
            *(void *)&uint8_t buf[8] = v111;
            *(void *)&_BYTE buf[24] = &v110[24 * v109];
            *unint64_t v111 = v90;
            v111[1] = (uint64_t)v73;
            if (v73)
            {
              unint64_t v112 = (unint64_t *)&v73->__shared_owners_;
              do
                unint64_t v113 = __ldxr(v112);
              while (__stxr(v113 + 1, v112));
            }

            v110[24 * v106 + 16] = 0;
            *(void *)&buf[16] = v111 + 3;
            sub_100EECE28(a4, buf);
            uint64_t v105 = a4[1];
            sub_100EECEC4((uint64_t)buf);
          }

          else
          {
            *(void *)unint64_t v101 = v90;
            *(void *)(v101 + _Block_object_dispose((const void *)(v1 - 112), 8) = v73;
            if (v73)
            {
              uint64_t v103 = (unint64_t *)&v73->__shared_owners_;
              do
                unint64_t v104 = __ldxr(v103);
              while (__stxr(v104 + 1, v103));
            }

            *(_BYTE *)(v101 + 16) = 0;
            uint64_t v105 = v101 + 24;
          }

          a4[1] = v105;
          if (v73)
          {
            __int128 v114 = (unint64_t *)&v73->__shared_owners_;
            do
              unint64_t v115 = __ldaxr(v114);
            while (__stlxr(v115 - 1, v114));
            if (!v115)
            {
              ((void (*)(std::__shared_weak_count *))v73->__on_zero_shared)(v73);
              std::__shared_weak_count::__release_weak(v73);
            }
          }

          if (!v73) {
            goto LABEL_175;
          }
          uint64_t v116 = (unint64_t *)&v73->__shared_owners_;
          do
            unint64_t v100 = __ldaxr(v116);
          while (__stlxr(v100 - 1, v116));
        }

        if (!v100)
        {
          ((void (*)(std::__shared_weak_count *))v73->__on_zero_shared)(v73);
          std::__shared_weak_count::__release_weak(v73);
        }
      }

void sub_100EEA0F0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, void **a25)
{
  a25 = (void **)&a19;
  sub_10004CC28(&a25);
  sub_100890314(&a22);
  _Unwind_Resume(a1);
}

unint64_t sub_100EEA1AC(uint64_t a1, uint64_t a2, unint64_t *a3, int a4, double a5, double a6)
{
  unint64_t v12 = objc_autoreleasePoolPush();
  unint64_t v13 = *a3;
  if (!*a3)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188BA18);
    }
    uint64_t v23 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_ERROR,  "#Warning,CLMMPED,input road is nullptr",  buf,  2u);
    }

    if (!sub_1002921D0(115, 0)) {
      goto LABEL_25;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188BA18);
    }
    LOWORD(v80[0]) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "#Warning,CLMMPED,input road is nullptr",  v80,  2);
    unint64_t v22 = (char *)v24;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLGeoMapFeatureAccessGeometryPedestrian::moveOnRoadInternal(double, double, const CLMapGeometry::RoadInfoList &, CLMapGeometry::DistanceQueryResult &, int) const",  "%s\n",  v24);
    goto LABEL_128;
  }

  sub_1001AC068((void *)*a3);
  double v14 = *(double *)(v13 + 40);
  if (v14 <= 0.0)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188BA18);
    }
    unint64_t v25 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_ERROR, "#Warning,CLMMPED, road length is 0.0", buf, 2u);
    }

    if (!sub_1002921D0(115, 0)) {
      goto LABEL_25;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188BA18);
    }
    LOWORD(v80[0]) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "#Warning,CLMMPED, road length is 0.0",  v80,  2);
    unint64_t v22 = (char *)v70;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLGeoMapFeatureAccessGeometryPedestrian::moveOnRoadInternal(double, double, const CLMapGeometry::RoadInfoList &, CLMapGeometry::DistanceQueryResult &, int) const",  "%s\n",  v70);
    goto LABEL_128;
  }

  double v15 = (uint64_t *)*a3;
  if ((int)((*(void *)(*a3 + 144) - *(void *)(*a3 + 136)) >> 4) <= 1)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188BA18);
    }
    uint64_t v16 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v17 = *(void *)*a3;
      uint64_t v18 = (int)((uint64_t)(*(void *)(*a3 + 144) - *(void *)(*a3 + 136)) >> 4);
      *(_DWORD *)uint64_t buf = 134283777;
      *(void *)&uint8_t buf[4] = v17;
      __int16 v82 = 2050;
      uint64_t v83 = v18;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEBUG,  "#Warning,CLMMPED,GEOMapFeatureRoad id,%{private}lld,has less than two coordinate (moveOnRoadInternal),%{public}ld",  buf,  0x16u);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_25;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188BA18);
    }
    uint64_t v19 = *(void *)*a3;
    uint64_t v20 = (int)((uint64_t)(*(void *)(*a3 + 144) - *(void *)(*a3 + 136)) >> 4);
    LODWORD(v80[0]) = 134283777;
    *(uint64_t *)((char *)v80 + 4) = v19;
    WORD2(v80[1]) = 2050;
    *(uint64_t *)((char *)&v80[1] + 6) = v20;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "#Warning,CLMMPED,GEOMapFeatureRoad id,%{private}lld,has less than two coordinate (moveOnRoadInternal),%{public}ld",  v80,  22);
    unint64_t v22 = (char *)v21;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLGeoMapFeatureAccessGeometryPedestrian::moveOnRoadInternal(double, double, const CLMapGeometry::RoadInfoList &, CLMapGeometry::DistanceQueryResult &, int) const",  "%s\n",  v21);
LABEL_128:
    if (v22 != buf) {
      free(v22);
    }
LABEL_25:
    objc_autoreleasePoolPop(v12);
    LOBYTE(v13) = 0;
    return v13 & 1;
  }

  double v27 = fabs(a6);
  int v28 = *((unsigned __int8 *)a3 + 20);
  double v29 = 1.0 - a5;
  if (*((_BYTE *)a3 + 20))
  {
    if (a6 < 0.0) {
      double v29 = a5;
    }
    double v30 = v29 * v14;
    if (v29 * v14 <= v27)
    {
      HIDWORD(v74) = 0;
      if (a6 < 0.0) {
        double v31 = 0.0;
      }
      else {
        double v31 = 1.0;
      }
      goto LABEL_43;
    }
  }

  else
  {
    if (a6 >= 0.0) {
      double v29 = a5;
    }
    double v30 = v29 * v14;
    if (v29 * v14 <= v27)
    {
      HIDWORD(v74) = 0;
      if (a6 >= 0.0) {
        double v31 = 0.0;
      }
      else {
        double v31 = 1.0;
      }
      goto LABEL_43;
    }
  }

  double v32 = a6 / v14;
  if (!*((_BYTE *)a3 + 20)) {
    double v32 = -v32;
  }
  double v31 = v32 + a5;
  HIDWORD(v74) = 1;
LABEL_43:
  memset(v80, 0, 24);
  if ((a4 & 0x80000000) == 0 && v30 <= v27)
  {
    unint64_t v13 = a3[1];
    v79[0] = v15;
    v79[1] = (uint64_t *)v13;
    if (v13)
    {
      unint64_t v33 = (unint64_t *)(v13 + 8);
      do
        unint64_t v34 = __ldxr(v33);
      while (__stxr(v34 + 1, v33));
      int v28 = *((unsigned __int8 *)a3 + 20);
    }

    char v35 = sub_100EE7A94(a1, v79, v28 != 0, v80, 1, 10.0);
    if (v13)
    {
      uint64_t v36 = (unint64_t *)(v13 + 8);
      do
        unint64_t v37 = __ldaxr(v36);
      while (__stlxr(v37 - 1, v36));
      if (!v37)
      {
        (*(void (**)(unint64_t))(*(void *)v13 + 16LL))(v13);
        std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v13);
      }
    }

    if ((v35 & 1) == 0)
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188BA18);
      }
      unint64_t v13 = qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v13,  OS_LOG_TYPE_DEBUG,  "CLMMPED,Warning,moveOnRoad,findAllDigitizedRoads returned false",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188BA18);
        }
        LOWORD(v7_Block_object_dispose((const void *)(v1 - 112), 8) = 0;
        LODWORD(v74) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,Warning,moveOnRoad,findAllDigitizedRoads returned false",  &v78,  v74);
        unint64_t v13 = (unint64_t)v73;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLGeoMapFeatureAccessGeometryPedestrian::moveOnRoadInternal(double, double, const CLMapGeometry::RoadInfo List &, CLMapGeometry::DistanceQueryResult &, int) const",  "%s\n",  v73);
        if ((_BYTE *)v13 != buf) {
          free((void *)v13);
        }
      }
    }
  }

  if (a6 >= 0.0 || (uint64_t v38 = v80[0], v39 = v80[1], v80[0] == v80[1]))
  {
    unsigned int v41 = -1;
  }

  else
  {
    unsigned int v40 = 0;
    unsigned int v41 = -1;
    do
    {
      uint64_t v42 = *(void **)v38;
      unint64_t v13 = *(void *)(v38 + 8);
      if (v13)
      {
        uint64_t v43 = (unint64_t *)(v13 + 8);
        do
          unint64_t v44 = __ldxr(v43);
        while (__stxr(v44 + 1, v43));
      }

      uint64_t v45 = a2;
      while (1)
      {
        uint64_t v45 = *(void *)(v45 + 8);
        if (v45 == a2) {
          break;
        }
        if (*(void *)(v45 + 16) == *v42 && (*(_BYTE *)(v45 + 24) & 1) == *(_BYTE *)(v38 + 16))
        {
          unsigned int v41 = v40;
          break;
        }
      }

      if (v13)
      {
        __int128 v47 = (unint64_t *)(v13 + 8);
        do
          unint64_t v48 = __ldaxr(v47);
        while (__stlxr(v48 - 1, v47));
        if (!v48)
        {
          (*(void (**)(unint64_t))(*(void *)v13 + 16LL))(v13);
          std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v13);
        }
      }

      if ((v41 & 0x80000000) == 0) {
        break;
      }
      ++v40;
      v38 += 24LL;
    }

    while (v38 != v39);
  }

  if ((v74 & 0x100000000LL) != 0
    || (a6 < 0.0 ? (BOOL v57 = v41 == -1) : (BOOL v57 = 0),
        !v57 ? (int v58 = 0) : (int v58 = 1),
        a4 < 0 || (uint64_t v59 = v80[0], v80[1] == v80[0]) || v58))
  {
    unint64_t v49 = (std::__shared_weak_count *)a3[1];
    v76[0] = (void *)*a3;
    v76[1] = &v49->__vftable;
    if (v49)
    {
      p_shared_owners = (unint64_t *)&v49->__shared_owners_;
      do
        unint64_t v51 = __ldxr(p_shared_owners);
      while (__stxr(v51 + 1, p_shared_owners));
    }

    LOBYTE(v13) = sub_100EEACE8((double *)(a1 + 56), v76, (double *)&v78, &v77, v31);
    if (v49)
    {
      unint64_t v52 = (unint64_t *)&v49->__shared_owners_;
      do
        unint64_t v53 = __ldaxr(v52);
      while (__stlxr(v53 - 1, v52));
      if (!v53)
      {
        ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
        std::__shared_weak_count::__release_weak(v49);
      }
    }

    if ((v13 & 1) != 0)
    {
      *((double *)a3 + 6) = v31;
      *((_OWORD *)a3 + 2) = v78;
      float v54 = v77;
      *((float *)a3 + 6) = v54;
      if (!*((_BYTE *)a3 + 20))
      {
        float v55 = v54 + 180.0;
        *((float *)a3 + 6) = v55;
        sub_100292890(v55);
        *(float *)&double v56 = v56;
        *((_DWORD *)a3 + 6) = LODWORD(v56);
      }
    }

    else
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188BA18);
      }
      uint64_t v62 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v62,  OS_LOG_TYPE_DEBUG,  "#Warning CLMMPED,moveOnRoadInternal,interpolateProjections returned false",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188BA18);
        }
        __int16 v75 = 0;
        LODWORD(v74) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "#Warning CLMMPED,moveOnRoadInternal,interpolateProjections returned false",  &v75,  v74);
        uint64_t v72 = (char *)v71;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLGeoMapFeatureAccessGeometryPedestrian::moveOnRoadInternal(double, double, const CLMapGeometry::RoadInfo List &, CLMapGeometry::DistanceQueryResult &, int) const",  "%s\n",  v71);
        if (v72 != buf) {
          free(v72);
        }
      }
    }

    int v63 = 0;
    goto LABEL_123;
  }

  double v60 = -v30;
  if (a6 < 0.0) {
    double v60 = v30;
  }
  double v61 = v60 + a6;
  if ((v41 & 0x80000000) != 0)
  {
    unsigned int v64 = sub_1008E8D34(a1 + 96);
    uint64_t v59 = v80[0];
    unint64_t v13 = v64 % (0xAAAAAAAAAAAAAAABLL * ((v80[1] - v80[0]) >> 3));
  }

  else
  {
    if (0xAAAAAAAAAAAAAAABLL * ((v80[1] - v80[0]) >> 3) <= v41) {
      goto LABEL_122;
    }
    unint64_t v13 = v41;
  }

  unint64_t v65 = v59 + 24 * v13;
  int v66 = *(unsigned __int8 *)(v65 + 16);
  sub_1000F2F30(a3, (uint64_t *)v65);
  char v67 = *(_BYTE *)(v80[0] + 24 * v13 + 16);
  *((_BYTE *)a3 + 20) = v67;
  if (v66)
  {
    double v31 = 0.0;
    if (a6 >= 0.0) {
      goto LABEL_122;
    }
    goto LABEL_121;
  }

  float v68 = *((float *)a3 + 6) + 180.0;
  *((float *)a3 + 6) = v68;
  sub_100292890(v68);
  *(float *)&double v69 = v69;
  *((_DWORD *)a3 + 6) = LODWORD(v69);
  double v31 = 1.0;
  if (a6 < 0.0)
  {
    char v67 = *(_BYTE *)(v80[0] + 24 * v13 + 16);
LABEL_121:
    *((_BYTE *)a3 + 20) = v67 ^ 1;
  }

void sub_100EEAC98( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20, uint64_t a21, uint64_t a22, void **a23)
{
  a23 = (void **)&a19;
  sub_100EECC8C(&a23);
  _Unwind_Resume(a1);
}

BOOL sub_100EEACE8(double *a1, void **a2, double *a3, double *a4, double a5)
{
  *a3 = 0.0;
  a3[1] = 0.0;
  *a4 = 0.0;
  uint64_t v5 = *a2;
  if (*a2)
  {
    uint64_t v6 = (v5[18] - v5[17]) >> 4;
    if ((int)v6 <= 0)
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188BA18);
      }
      double v27 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEBUG,  "CLMM,interpolateProjections,CoordinateCount is 0",  buf,  2u);
      }

      BOOL result = sub_1002921D0(115, 2);
      if (!result) {
        return result;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188BA18);
      }
      LOWORD(v60[0]) = 0;
      double v29 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,interpolateProjections,CoordinateCount is 0",  v60,  2);
    }

    else
    {
      if ((_DWORD)v6 == 1) {
        return 1LL;
      }
      sub_1001AC068(*a2);
      uint64_t v12 = (uint64_t)(v5[21] - v5[20]) >> 3;
      if (v12 == (_DWORD)v6 - 1)
      {
        uint64_t v13 = (uint64_t)*a2;
        sub_1001AC068((void *)v13);
        if (a5 < 0.000001)
        {
          *(_OWORD *)a3 = *(_OWORD *)*(void *)(v13 + 136);
          double v14 = *a3;
          double v15 = a3[1];
          uint64_t v16 = *(double **)(v13 + 136);
LABEL_7:
          double v17 = v16[2];
          double v18 = v16[3];
          *(void *)uint64_t buf = 0LL;
          uint64_t v59 = 0LL;
          v60[0] = 0.0;
          sub_100D2DA44(a1, (double *)buf, v60, (double *)&v59, v14, v15, 0.0, v17, v18, 0.0);
          double v19 = atan2(v60[0], *(double *)buf);
          if (v19 < 0.0) {
            double v19 = v19 + 6.28318531;
          }
          double v20 = v19 * 57.2957795;
          goto LABEL_54;
        }

        if (a5 >= 0.999999)
        {
          *(_OWORD *)a3 = *(_OWORD *)(*(void *)(v13 + 136) + 16 * v12);
          double v20 = sub_1004DD7AC( a1,  *(double *)(*(void *)(v13 + 136) + 16 * v12 - 16),  *(double *)(*(void *)(v13 + 136) + 16 * v12 - 8),  *a3,  a3[1]);
LABEL_54:
          *a4 = v20;
          return 1LL;
        }

        double v31 = (double *)v5[20];
        double v32 = (double *)v5[21];
        if (v31 != v32)
        {
          uint64_t v33 = 0LL;
          double v34 = 0.0;
          int v35 = 2;
          while (1)
          {
            double v36 = *v31 / *(double *)(v13 + 40);
            if (vabdd_f64(a5, v34 + v36) < 0.000001) {
              break;
            }
            if (v34 + v36 > a5)
            {
              double v51 = (a5 - v34) / v36;
              unint64_t v52 = (double *)(*(void *)(v13 + 136) + v33);
              double v53 = v52[1];
              double v54 = v52[3];
              *a3 = *v52 + (v52[2] - *v52) * v51;
              double v55 = v53 + sub_100D2D3E0(v53, v54) * v51;
              a3[1] = v55;
              sub_100292950(v55);
              *((void *)a3 + 1) = v56;
              uint64_t v16 = (double *)(*(void *)(v13 + 136) + v33);
              double v14 = *v16;
              double v15 = v16[1];
              goto LABEL_7;
            }

            ++v31;
            v33 += 16LL;
            ++v35;
            double v34 = v34 + v36;
            if (v31 == v32) {
              goto LABEL_45;
            }
          }

          if (v35 < (int)v6)
          {
            *(_OWORD *)a3 = *(_OWORD *)(*(void *)(v13 + 136) + v33 + 16);
            uint64_t v38 = (double *)(*(void *)(v13 + 136) + v33);
            double v39 = *v38;
            double v40 = v38[1];
            double v41 = *a3;
            double v42 = a3[1];
            *(void *)uint64_t buf = 0LL;
            uint64_t v59 = 0LL;
            v60[0] = 0.0;
            sub_100D2DA44(a1, (double *)buf, v60, (double *)&v59, v39, v40, 0.0, v41, v42, 0.0);
            double v43 = atan2(v60[0], *(double *)buf);
            if (v43 < 0.0) {
              double v43 = v43 + 6.28318531;
            }
            double v44 = v43 * 57.2957795;
            double v45 = *a3;
            double v46 = a3[1];
            uint64_t v47 = *(void *)(v13 + 136) + v33;
            double v48 = *(double *)(v47 + 32);
            double v49 = *(double *)(v47 + 40);
            *(void *)uint64_t buf = 0LL;
            uint64_t v59 = 0LL;
            v60[0] = 0.0;
            sub_100D2DA44(a1, (double *)buf, v60, (double *)&v59, v45, v46, 0.0, v48, v49, 0.0);
            double v50 = atan2(v60[0], *(double *)buf);
            if (v50 < 0.0) {
              double v50 = v50 + 6.28318531;
            }
            sub_1002928C4(v44, v50 * 57.2957795);
            goto LABEL_54;
          }

          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10188BA18);
          }
          BOOL v57 = (os_log_s *)qword_1019348B8;
          if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
          {
            *(_WORD *)uint64_t buf = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v57,  OS_LOG_TYPE_ERROR,  "CLMM,interpolateProjections,Could not interpolate, incorrect coordinateCount",  buf,  2u);
          }

          BOOL v58 = sub_1002921D0(115, 0);
          BOOL result = 0LL;
          if (v58)
          {
            bzero(buf, 0x65CuLL);
            if (qword_1019348B0 != -1) {
              dispatch_once(&qword_1019348B0, &stru_10188BA18);
            }
            LOWORD(v60[0]) = 0;
            double v25 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,interpolateProjections,Could not interpolate, incorrect coordinateCount",  v60,  2);
LABEL_18:
            uint64_t v26 = v24;
            sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLGeoAccessCommon::interpolateProjections(CLDistanceCalc &, const RoadPtr, double, Coordinate &, doub le &) [Coordinate = GEOLocationCoordinate2D, RoadPtr = std::shared_ptr<CLMapRoad>]",  "%s\n",  v25);
LABEL_36:
            if (v26 != buf) {
              free(v26);
            }
            return 0LL;
          }

          return result;
        }

unint64_t sub_100EEB4D0(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  if (*(_BYTE *)(a1 + 32))
  {
    double v5 = 1050.0;
    if (a4 <= 1050.0)
    {
      double v5 = a4;
      if (a4 < -1050.0) {
        double v5 = -1050.0;
      }
    }

    return sub_100EEA1AC(a1, a3, (unint64_t *)a2, 30, *(double *)(a2 + 48), v5);
  }

  else
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188BA18);
    }
    uint64_t v7 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v8 = *(void *)(a1 + 8);
      *(_DWORD *)uint64_t buf = 134349056;
      uint64_t v15 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "CLMM,%{public}.1lf,CLGeoMapFeatureAccessGeometryPedestrian geometry is not initialized, use initialize() function",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188BA18);
      }
      uint64_t v9 = *(void *)(a1 + 8);
      int v12 = 134349056;
      uint64_t v13 = v9;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,%{public}.1lf,CLGeoMapFeatureAccessGeometryPedestrian geometry is not initialized, use initialize() function",  &v12,  12);
      int v11 = (uint8_t *)v10;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLGeoMapFeatureAccessGeometryPedestrian::moveOnRoad(struct CLMapGeometry::DistanceQueryResult &, do uble, const CLMapGeometry::RoadInfoList &) const",  "%s\n",  v10);
      if (v11 != buf) {
        free(v11);
      }
    }

    return 0LL;
  }

uint64_t sub_100EEB6FC(uint64_t a1, uint64_t **a2, uint64_t *a3, int *a4, double a5, double a6)
{
  if (!*(_BYTE *)(a1 + 32))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188BA18);
    }
    BOOL v21 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v22 = *(void *)(a1 + 8);
      *(_DWORD *)uint64_t buf = 134349056;
      uint64_t v71 = v22;
      _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_ERROR,  "CLMM,%{public}.1lf,CLGeoMapFeatureAccessGeometryPedestrian geometry is not initialized, use initialize() function",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188BA18);
    }
    uint64_t v23 = *(void *)(a1 + 8);
    *(_DWORD *)double v69 = 134349056;
    *(void *)&v69[4] = v23;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,%{public}.1lf,CLGeoMapFeatureAccessGeometryPedestrian geometry is not initialized, use initialize() function",  v69,  12);
    double v20 = (uint8_t *)v24;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLGeoMapFeatureAccessGeometryPedestrian::moveOnRouteRoads(double, CLMapGeometry::DistanceQueryResult &, CLMapGeometry::DistanceQueryResultList &, double, int &) const",  "%s\n",  v24);
    goto LABEL_93;
  }

  uint64_t v8 = (double *)*a2;
  if (!*a2)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188BA18);
    }
    double v25 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_ERROR,  "#Warning,CLMMPED,input road is nullptr",  buf,  2u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188BA18);
    }
    *(_WORD *)double v69 = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "#Warning,CLMMPED,input road is nullptr",  v69,  2);
    double v20 = (uint8_t *)v26;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLGeoMapFeatureAccessGeometryPedestrian::moveOnRouteRoads(double, CLMapGeometry::DistanceQueryResult &, CLMapGeometry::DistanceQueryResultList &, double, int &) const",  "%s\n",  v26);
    goto LABEL_93;
  }

  sub_1001AC068(*a2);
  double v13 = v8[5];
  if (v13 <= 0.0)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188BA18);
    }
    double v27 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_ERROR, "#Warning,CLMMPED, road length is 0.0", buf, 2u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188BA18);
    }
    *(_WORD *)double v69 = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "#Warning,CLMMPED, road length is 0.0",  v69,  2);
    double v20 = (uint8_t *)v65;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLGeoMapFeatureAccessGeometryPedestrian::moveOnRouteRoads(double, CLMapGeometry::DistanceQueryResult &, CLMapGeometry::DistanceQueryResultList &, double, int &) const",  "%s\n",  v65);
    goto LABEL_93;
  }

  if ((int)((unint64_t)((*a2)[18] - (*a2)[17]) >> 4) <= 1)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188BA18);
    }
    double v14 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v15 = **a2;
      uint64_t v16 = (int)(((*a2)[18] - (*a2)[17]) >> 4);
      *(_DWORD *)uint64_t buf = 134283777;
      uint64_t v71 = v15;
      __int16 v72 = 2050;
      v73[0] = v16;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "#Warning,CLMMPED,GEOMapFeatureRoad id,%{private}lld,has less than two coordinate (moveOnRoadInternal),%{public}ld",  buf,  0x16u);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188BA18);
    }
    uint64_t v17 = **a2;
    uint64_t v18 = (int)(((*a2)[18] - (*a2)[17]) >> 4);
    *(_DWORD *)double v69 = 134283777;
    *(void *)&v69[4] = v17;
    *(_WORD *)&v69[12] = 2050;
    *(void *)&v69[14] = v18;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "#Warning,CLMMPED,GEOMapFeatureRoad id,%{private}lld,has less than two coordinate (moveOnRoadInternal),%{public}ld",  v69,  22);
    double v20 = (uint8_t *)v19;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLGeoMapFeatureAccessGeometryPedestrian::moveOnRouteRoads(double, CLMapGeometry::DistanceQueryResult &, CLMapGeometry::DistanceQueryResultList &, double, int &) const",  "%s\n",  v19);
LABEL_93:
    if (v20 != buf) {
      free(v20);
    }
    return 0LL;
  }

  double v30 = 1.0 - a5;
  if (!*((_BYTE *)a2 + 20)) {
    double v30 = a5;
  }
  double v31 = v13 * v30;
  if (v13 * v30 > fabs(a6))
  {
    double v32 = a6 / v13;
    if (!*((_BYTE *)a2 + 20)) {
      double v32 = -v32;
    }
    uint64_t v33 = (std::__shared_weak_count *)a2[1];
    double v34 = v32 + a5;
    v67[0] = *a2;
    v67[1] = &v33->__vftable;
    if (v33)
    {
      p_shared_owners = (unint64_t *)&v33->__shared_owners_;
      do
        unint64_t v36 = __ldxr(p_shared_owners);
      while (__stxr(v36 + 1, p_shared_owners));
    }

    BOOL v28 = sub_100EEACE8((double *)(a1 + 56), v67, (double *)v69, &v68, v32 + a5);
    if (v33)
    {
      unint64_t v37 = (unint64_t *)&v33->__shared_owners_;
      do
        unint64_t v38 = __ldaxr(v37);
      while (__stlxr(v38 - 1, v37));
      if (!v38)
      {
        ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
        std::__shared_weak_count::__release_weak(v33);
      }
    }

    if (v28)
    {
      *((double *)a2 + 6) = v34;
      *((_OWORD *)a2 + 2) = *(_OWORD *)v69;
      float v39 = v68;
      *((float *)a2 + 6) = v39;
      if (!*((_BYTE *)a2 + 20))
      {
        float v40 = v39 + 180.0;
        *((float *)a2 + 6) = v40;
        sub_100292890(v40);
        *(float *)&double v41 = v41;
        *((_DWORD *)a2 + 6) = LODWORD(v41);
      }
    }

    else
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188BA18);
      }
      BOOL v58 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v58,  OS_LOG_TYPE_DEBUG,  "#Warning CLMMPED,moveOnRouteRoads,interpolateProjections returned false",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188BA18);
        }
        LOWORD(v66) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "#Warning CLMMPED,moveOnRouteRoads,interpolateProjections returned false",  &v66,  2);
        double v60 = (uint8_t *)v59;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLGeoMapFeatureAccessGeometryPedestrian::moveOnRouteRoads(double, CLMapGeometry::DistanceQueryRes ult &, CLMapGeometry::DistanceQueryResultList &, double, int &) const",  "%s\n",  v59);
        if (v60 != buf) {
          free(v60);
        }
      }
    }

    return v28;
  }

  uint64_t v42 = *a4;
  unint64_t v43 = v42 + 1;
  *a4 = v42 + 1;
  if ((int)v42 > 9 || a3[2] <= v43)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188BA18);
    }
    double v50 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v51 = *(void *)(a1 + 8);
      int v52 = *a4;
      uint64_t v53 = a3[2];
      *(_DWORD *)uint64_t buf = 134218496;
      uint64_t v71 = v51;
      __int16 v72 = 1024;
      LODWORD(v73[0]) = v52;
      WORD2(v73[0]) = 2048;
      *(void *)((char *)v73 + 6) = v53;
      _os_log_impl( (void *)&_mh_execute_header,  v50,  OS_LOG_TYPE_DEBUG,  "CLMMPED,%.3lf, no more route roads available to cover the distance travelled,index,%d,size,%lu",  buf,  0x1Cu);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188BA18);
    }
    uint64_t v54 = *(void *)(a1 + 8);
    int v55 = *a4;
    uint64_t v56 = a3[2];
    *(_DWORD *)double v69 = 134218496;
    *(void *)&v69[4] = v54;
    *(_WORD *)&v69[12] = 1024;
    *(_DWORD *)&v69[14] = v55;
    *(_WORD *)&v69[18] = 2048;
    *(void *)&v69[20] = v56;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMPED,%.3lf, no more route roads available to cover the distance travelled,index,%d,size,%lu",  COERCE_DOUBLE(v69),  28,  v66);
    double v20 = (uint8_t *)v57;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLGeoMapFeatureAccessGeometryPedestrian::moveOnRouteRoads(double, CLMapGeometry::DistanceQueryResult &, CLMapGeometry::DistanceQueryResultList &, double, int &) const",  "%s\n",  v57);
    goto LABEL_93;
  }

  double v44 = (uint64_t *)a3[1];
  if ((int)v42 <= -2)
  {
    do
      double v44 = (uint64_t *)*v44;
    while (!__CFADD__(v43++, 1LL));
  }

  else if ((_DWORD)v42 != -1)
  {
    unint64_t v45 = v42 + 2;
    do
    {
      double v44 = (uint64_t *)v44[1];
      --v45;
    }

    while (v45 > 1);
  }

  if (v44 == a3)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188BA18);
    }
    double v61 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v62 = *(void *)(a1 + 8);
      *(_DWORD *)uint64_t buf = 134217984;
      uint64_t v71 = v62;
      _os_log_impl( (void *)&_mh_execute_header,  v61,  OS_LOG_TYPE_ERROR,  "CLMMPED,%.3lf, unexpectedly reached to the end of routeRoadList",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188BA18);
    }
    uint64_t v63 = *(void *)(a1 + 8);
    *(_DWORD *)double v69 = 134217984;
    *(void *)&v69[4] = v63;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMMPED,%.3lf, unexpectedly reached to the end of routeRoadList",  COERCE_DOUBLE(v69));
    double v20 = (uint8_t *)v64;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLGeoMapFeatureAccessGeometryPedestrian::moveOnRouteRoads(double, CLMapGeometry::DistanceQueryResult &, CLMapGeometry::DistanceQueryResultList &, double, int &) const",  "%s\n",  v64);
    goto LABEL_93;
  }

  int v47 = *((unsigned __int8 *)v44 + 36);
  sub_1000F2F30(a2, v44 + 2);
  *((_BYTE *)a2 + 20) = *((_BYTE *)v44 + 36);
  v48.n128_u64[0] = 0LL;
  if (!v47)
  {
    float v49 = *((float *)a2 + 6) + 180.0;
    *((float *)a2 + 6) = v49;
    sub_100292890(v49);
    v48.n128_f32[0] = v48.n128_f64[0];
    *((_DWORD *)a2 + 6) = v48.n128_u32[0];
    v48.n128_u64[0] = 1.0;
  }

  return (*(uint64_t (**)(uint64_t, uint64_t **, uint64_t *, int *, __n128, double))(*(void *)a1 + 56LL))( a1,  a2,  a3,  a4,  v48,  a6 - v31);
}

void sub_100EEC2B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

void sub_100EEC2CC(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 32))
  {
    uint64_t v2 = *(void *)(a1 + 16);
    if (v2) {
      sub_100974B94(v2, 0.5, 0.5);
    }
    sub_100974BD0(a1 + 2616, *(double *)(a1 + 8), 60.0, 60.0);
  }

  else
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188BA18);
    }
    int v3 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v4 = *(void *)(a1 + 8);
      *(_DWORD *)uint64_t buf = 134349056;
      uint64_t v11 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "CLMM,%{public}.1lf,CLGeoMapFeatureAccessGeometryPedestrian geometry is not initialized, use initialize() function",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188BA18);
      }
      uint64_t v5 = *(void *)(a1 + 8);
      int v8 = 134349056;
      uint64_t v9 = v5;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,%{public}.1lf,CLGeoMapFeatureAccessGeometryPedestrian geometry is not initialized, use initialize() function",  &v8,  12);
      uint64_t v7 = (uint8_t *)v6;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLGeoMapFeatureAccessGeometryPedestrian::clearStoredStaleConnections()",  "%s\n",  v6);
      if (v7 != buf) {
        free(v7);
      }
    }
  }

uint64_t sub_100EEC4E0(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 2648)) {
    return 3LL;
  }
  else {
    return 2LL;
  }
}

uint64_t sub_100EEC4F4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 2648);
}

void sub_100EEC4FC(id a1)
{
  qword_1019348B8 = (uint64_t)os_log_create("com.apple.locationd.Position", "MapMatcher");
}

void sub_100EEC528(uint64_t a1, uint64_t a2)
{
}

void sub_100EEC538(uint64_t a1)
{
}

void sub_100EEC544(void *a1, void *a2)
{
  if (a2)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188BA18);
    }
    uint64_t v4 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 134349571;
      id v29 = [a2 code];
      __int16 v30 = 2114;
      id v31 = [a2 domain];
      __int16 v32 = 2113;
      id v33 = [a2 localizedDescription];
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#Warning CLMM,GEOMapFeatureAccessRequest reported errorcode,%{public}lld,domain,%{public}@,description,%{private}@",  buf,  0x20u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188BA18);
      }
      uint64_t v10 = qword_1019348B8;
      int v22 = 134349571;
      id v23 = [a2 code];
      __int16 v24 = 2114;
      id v25 = [a2 domain];
      __int16 v26 = 2113;
      id v27 = [a2 localizedDescription];
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v10,  0LL,  "#Warning CLMM,GEOMapFeatureAccessRequest reported errorcode,%{public}lld,domain,%{public}@,description,%{private}@",  &v22,  32);
      int v12 = (uint8_t *)v11;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLGeoMapFeatureAccessGeometryCommon::performQuery(QueryFunction, dispatch_queue_t  _Nonnull const &)_block_invoke",  "%s\n",  v11);
      if (v12 != buf) {
        free(v12);
      }
    }

    *(_BYTE *)(*(void *)(a1[4] + 8LL) + 24LL) = 1;
  }

  if (*(void *)(*(void *)(a1[5] + 8LL) + 40LL))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188BA18);
    }
    uint64_t v5 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v6 = *(void **)(*(void *)(a1[6] + 8LL) + 24LL);
      int v7 = *(unsigned __int8 *)(*(void *)(a1[4] + 8LL) + 24LL);
      *(_DWORD *)uint64_t buf = 134349312;
      id v29 = v6;
      __int16 v30 = 1026;
      LODWORD(v31) = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "CLMM,releasing dispatch_group,%{public}lu,errorReported,%{public}d",  buf,  0x12u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188BA18);
      }
      double v13 = *(void **)(*(void *)(a1[6] + 8LL) + 24LL);
      int v14 = *(unsigned __int8 *)(*(void *)(a1[4] + 8LL) + 24LL);
      int v22 = 134349312;
      id v23 = v13;
      __int16 v24 = 1026;
      LODWORD(v25) = v14;
      LODWORD(v21) = 18;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,releasing dispatch_group,%{public}lu,errorReported,%{public}d",  &v22,  v21);
      uint64_t v16 = (uint8_t *)v15;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLGeoMapFeatureAccessGeometryCommon::performQuery(QueryFunction, dispatch_queue_t  _Nonnull const &)_block_invoke",  "%s\n",  v15);
      if (v16 != buf) {
        free(v16);
      }
    }

    dispatch_group_leave(*(dispatch_group_t *)(*(void *)(a1[5] + 8LL) + 40LL));
  }

  if (*(void *)(*(void *)(a1[6] + 8LL) + 24LL))
  {
    if (*(void *)(*(void *)(a1[5] + 8LL) + 40LL))
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188BA18);
      }
      int v8 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "CLMM,clearing dispatchGroup when time-out has happened",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188BA18);
        }
        LOWORD(v22) = 0;
        LODWORD(v21) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,clearing dispatchGroup when time-out has happened",  &v22,  v21);
        uint64_t v18 = (uint8_t *)v17;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLGeoMapFeatureAccessGeometryCommon::performQuery(QueryFunction, dispatch_queue_t  _Nonnull const &)_block_invoke",  "%s\n",  v17);
        if (v18 != buf) {
          free(v18);
        }
      }

      *(void *)(*(void *)(a1[5] + 8LL) + 4sub_100891830((uint64_t)va, 0LL) = 0LL;
    }

    else
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188BA18);
      }
      uint64_t v9 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_ERROR,  "CLMM,dispatchGroup is unexpectedly nil",  buf,  2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10188BA18);
        }
        LOWORD(v22) = 0;
        LODWORD(v21) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,dispatchGroup is unexpectedly nil",  &v22,  v21);
        double v20 = (uint8_t *)v19;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLGeoMapFeatureAccessGeometryCommon::performQuery(QueryFunction, dispatch_queue_t  _Nonnull const &)_block_invoke",  "%s\n",  v19);
        if (v20 != buf) {
          free(v20);
        }
      }
    }
  }

__n128 sub_100EECBB8(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x28uLL);
  *(void *)uint64_t v2 = &off_10188BA48;
  *(_OWORD *)(v2 + _Block_object_dispose((const void *)(v1 - 112), 8) = *(_OWORD *)(a1 + 8);
  __n128 result = *(__n128 *)(a1 + 24);
  *(__n128 *)(v2 + 24) = result;
  return result;
}

__n128 sub_100EECBF8(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &off_10188BA48;
  __n128 result = *(__n128 *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(__n128 *)(a2 + _Block_object_dispose((const void *)(v1 - 112), 8) = result;
  return result;
}

id sub_100EECC20(uint64_t a1, void *a2)
{
  return objc_msgSend( *(id *)(*(void *)(a1 + 8) + 2600),  "findRoadsNear:radius:handler:completionHandler:",  **(void **)(a1 + 32),  *a2,  **(double **)(a1 + 16),  *(double *)(*(void *)(a1 + 16) + 8),  **(double **)(a1 + 24));
}

uint64_t sub_100EECC44(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_100EECC80()
{
}

void sub_100EECC8C(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    uint64_t v5 = v2;
    if ((void *)v4 != v2)
    {
      do
        uint64_t v4 = sub_10000AE14(v4 - 24);
      while ((void *)v4 != v2);
      uint64_t v5 = **a1;
    }

    v1[1] = v2;
    operator delete(v5);
  }

uint64_t sub_100EECCFC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_100007008();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x555555555555555LL) {
    unint64_t v9 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v5;
  }
  v17[4] = a1 + 2;
  if (v9) {
    uint64_t v10 = sub_10000701C(v7, v9);
  }
  else {
    uint64_t v10 = 0LL;
  }
  uint64_t v11 = &v10[24 * v4];
  v17[0] = v10;
  v17[1] = v11;
  uint64_t v17[3] = &v10[24 * v9];
  void *v11 = *(void *)a2;
  uint64_t v12 = *(void *)(a2 + 8);
  v11[1] = v12;
  if (v12)
  {
    double v13 = (unint64_t *)(v12 + 8);
    do
      unint64_t v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }

  v10[24 * v4 + 16] = *(_BYTE *)(a2 + 16);
  v17[2] = v11 + 3;
  sub_100EECE28(a1, v17);
  uint64_t v15 = a1[1];
  sub_100EECEC4((uint64_t)v17);
  return v15;
}

void sub_100EECE14(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t *sub_100EECE28(uint64_t *result, void *a2)
{
  uint64_t v2 = *result;
  uint64_t v3 = result[1];
  uint64_t v4 = a2[1];
  if (v3 == *result)
  {
    uint64_t v6 = a2[1];
  }

  else
  {
    uint64_t v5 = result[1];
    uint64_t v6 = a2[1];
    do
    {
      uint64_t v7 = *(void *)(v5 - 24);
      v5 -= 24LL;
      *(void *)(v6 - 24) = v7;
      v6 -= 24LL;
      uint64_t v8 = *(void *)(v5 + 8);
      *(void *)(v6 + _Block_object_dispose((const void *)(v1 - 112), 8) = v8;
      if (v8)
      {
        unint64_t v9 = (unint64_t *)(v8 + 8);
        do
          unint64_t v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
      }

      *(_BYTE *)(v4 - _Block_object_dispose((const void *)(v1 - 112), 8) = *(_BYTE *)(v3 - 8);
      uint64_t v3 = v5;
      uint64_t v4 = v6;
    }

    while (v5 != v2);
  }

  a2[1] = v6;
  uint64_t v11 = *result;
  *__n128 result = v6;
  a2[1] = v11;
  uint64_t v12 = result[1];
  result[1] = a2[2];
  a2[2] = v12;
  uint64_t v13 = result[2];
  result[2] = a2[3];
  a2[3] = v13;
  *a2 = a2[1];
  return result;
}

uint64_t sub_100EECEC4(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 24;
    sub_10000AE14(i - 24);
  }

  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_100EECF9C(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a1 + 192);
  if (v4)
  {
    sub_100EEE360(v4, a2, a3, a4);
  }

  else
  {
    if (qword_101934890 != -1) {
      dispatch_once(&qword_101934890, &stru_10188BAB8);
    }
    uint64_t v5 = (os_log_s *)qword_101934898;
    if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "#ADR,handleIDSBatchIDQueryResponse,EmergencyContactsMetric nil object",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934890 != -1) {
        dispatch_once(&qword_101934890, &stru_10188BAB8);
      }
      v8[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934898,  0LL,  "#ADR,handleIDSBatchIDQueryResponse,EmergencyContactsMetric nil object",  v8,  2);
      uint64_t v7 = (uint8_t *)v6;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLEmergencyADR::handleIDSBatchIDQueryResponse(NSDictionary<NSString *,NSNumber *> *, NSString *, NSError *)",  "%s\n",  v6);
      if (v7 != buf) {
        free(v7);
      }
    }
  }

uint64_t sub_100EED164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)a1 = a2;
  uint64_t v10 = a1 + 40;
  sub_10001A504(a1 + 8, a3);
  sub_10001A504(v10, a4);
  sub_10001A504(a1 + 72, a5);
  *(void *)(a1 + 192) = 0LL;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(void *)(a1 + 136) = a6;
  *(void *)(a1 + 144) = 0LL;
  *(_DWORD *)(a1 + 152) = 0;
  *(void *)(a1 + sub_1002A5590(v1 - 160) = 0LL;
  *(void *)(a1 + 16_Block_object_dispose((const void *)(v1 - 112), 8) = 0xBFF0000000000000LL;
  *(_WORD *)(a1 + 176) = 0;
  *(_DWORD *)(a1 + 180) = 0;
  *(_BYTE *)(a1 + 184) = 0;
  *(_DWORD *)(a1 + 18_Block_object_dispose((const void *)(v1 - 112), 8) = 0;
  *(_BYTE *)(a1 + 200) = 0;
  uint64_t v11 = +[NSURLSessionConfiguration defaultSessionConfiguration]( &OBJC_CLASS___NSURLSessionConfiguration,  "defaultSessionConfiguration");
  -[NSURLSessionConfiguration setAllowsCellularAccess:](v11, "setAllowsCellularAccess:", 1LL);
  *(void *)(a1 + 104) =  +[NSURLSession sessionWithConfiguration:]( &OBJC_CLASS___NSURLSession,  "sessionWithConfiguration:",  v11);
  return a1;
}

void sub_100EED23C(_Unwind_Exception *exception_object)
{
  uint64_t v5 = *(void **)(v2 + 64);
  if (v5 == v3)
  {
    uint64_t v6 = 4LL;
    uint64_t v5 = v3;
  }

  else
  {
    if (!v5) {
      goto LABEL_6;
    }
    uint64_t v6 = 5LL;
  }

  (*(void (**)(void))(*v5 + 8 * v6))();
LABEL_6:
  uint64_t v7 = *(void **)(v2 + 32);
  if (v7 == v1)
  {
    uint64_t v8 = 4LL;
    uint64_t v7 = v1;
  }

  else
  {
    if (!v7) {
      goto LABEL_11;
    }
    uint64_t v8 = 5LL;
  }

  (*(void (**)(void))(*v7 + 8 * v8))();
LABEL_11:
  _Unwind_Resume(exception_object);
}

uint64_t sub_100EED304(uint64_t a1)
{
  *(void *)(a1 + 104) = 0LL;
  *(void *)(a1 + sub_1002A5590(v1 - 160) = 0LL;
  sub_100EEEFFC((uint64_t *)(a1 + 192), 0LL);
  uint64_t v2 = *(void **)(a1 + 96);
  if (v2 == (void *)(a1 + 72))
  {
    uint64_t v3 = 4LL;
    uint64_t v2 = (void *)(a1 + 72);
  }

  else
  {
    if (!v2) {
      goto LABEL_8;
    }
    uint64_t v3 = 5LL;
  }

  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_8:
  uint64_t v4 = *(void **)(a1 + 64);
  if (v4 == (void *)(a1 + 40))
  {
    uint64_t v5 = 4LL;
    uint64_t v4 = (void *)(a1 + 40);
  }

  else
  {
    if (!v4) {
      goto LABEL_13;
    }
    uint64_t v5 = 5LL;
  }

  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_13:
  uint64_t v6 = *(void **)(a1 + 32);
  if (v6 == (void *)(a1 + 8))
  {
    uint64_t v7 = 4LL;
    uint64_t v6 = (void *)(a1 + 8);
    goto LABEL_17;
  }

  if (v6)
  {
    uint64_t v7 = 5LL;
LABEL_17:
    (*(void (**)(void))(*v6 + 8 * v7))();
  }

  return a1;
}

void sub_100EED3F0(uint64_t a1)
{
  else {
    int64_t v2 = 604800LL;
  }
  uint64_t v3 = *(std::__shared_weak_count **)&buf[8];
  if (*(void *)&buf[8])
  {
    uint64_t v4 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      unint64_t v5 = __ldaxr(v4);
    while (__stlxr(v5 - 1, v4));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }

  double v24 = 0.0;
  uint64_t v6 = sub_1002F8DDC();
  (*(void (**)(uint64_t))(*(void *)v6 + 936LL))(v6);
  uint64_t v7 = sub_1002F8DDC();
  if (sub_1002A832C(v7, (uint64_t)@"LastIDSQueryTime", &v24))
  {
    v2 -= (uint64_t)(CFAbsoluteTimeGetCurrent() - v24);
    if (v2 < 0)
    {
      if (qword_101934890 != -1) {
        dispatch_once(&qword_101934890, &stru_10188BAB8);
      }
      unint64_t v9 = (os_log_s *)qword_101934898;
      if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t buf = 134349056;
        *(void *)&uint8_t buf[4] = v2;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "#ADR,registerIDSBatchIDQueryActivity,Invalid interval value %{public}lld, reset to 0",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934890 != -1) {
          dispatch_once(&qword_101934890, &stru_10188BAB8);
        }
        *(_DWORD *)id v25 = 134349056;
        *(void *)&v25[4] = v2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934898,  0LL,  "#ADR,registerIDSBatchIDQueryActivity,Invalid interval value %{public}lld, reset to 0",  v25,  12);
        double v19 = (char *)v18;
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CLEmergencyADR::registerIDSBatchIDQueryActivity()", "%s\n", v18);
        if (v19 != buf) {
          free(v19);
        }
      }

      int64_t v2 = 0LL;
    }

    else if ((unint64_t)v2 > 0x93A80)
    {
      if (qword_101934890 != -1) {
        dispatch_once(&qword_101934890, &stru_10188BAB8);
      }
      uint64_t v8 = (os_log_s *)qword_101934898;
      if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t buf = 134349056;
        *(void *)&uint8_t buf[4] = v2;
        _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "#ADR,registerIDSBatchIDQueryActivity,Invalid interval value %{public}lld, reset to kIDSQueryInterval value",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934890 != -1) {
          dispatch_once(&qword_101934890, &stru_10188BAB8);
        }
        *(_DWORD *)id v25 = 134349056;
        *(void *)&v25[4] = v2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934898,  0LL,  "#ADR,registerIDSBatchIDQueryActivity,Invalid interval value %{public}lld, reset to kIDSQueryInterval value",  v25,  12);
        uint64_t v21 = (char *)v20;
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CLEmergencyADR::registerIDSBatchIDQueryActivity()", "%s\n", v20);
        if (v21 != buf) {
          free(v21);
        }
      }

      int64_t v2 = 604800LL;
    }
  }

  sub_1002F0B04(buf);
  else {
    int64_t v10 = 600LL;
  }
  uint64_t v11 = *(std::__shared_weak_count **)&buf[8];
  if (*(void *)&buf[8])
  {
    uint64_t v12 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      unint64_t v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }

  xpc_object_t v14 = xpc_dictionary_create(0LL, 0LL, 0LL);
  xpc_dictionary_set_BOOL(v14, XPC_ACTIVITY_ALLOW_BATTERY, 1);
  xpc_dictionary_set_BOOL(v14, XPC_ACTIVITY_REQUIRE_NETWORK_CONNECTIVITY, 1);
  xpc_dictionary_set_uint64(v14, XPC_ACTIVITY_NETWORK_DOWNLOAD_SIZE, 0x28uLL);
  xpc_dictionary_set_BOOL(v14, XPC_ACTIVITY_REQUIRE_INEXPENSIVE_NETWORK_CONNECTIVITY, 0);
  xpc_dictionary_set_string(v14, XPC_ACTIVITY_PRIORITY, XPC_ACTIVITY_PRIORITY_UTILITY);
  xpc_dictionary_set_BOOL(v14, XPC_ACTIVITY_REPEATING, 0);
  xpc_dictionary_set_int64(v14, XPC_ACTIVITY_DELAY, v2);
  xpc_dictionary_set_int64(v14, XPC_ACTIVITY_GRACE_PERIOD, v10);
  if (qword_101934890 != -1) {
    dispatch_once(&qword_101934890, &stru_10188BAB8);
  }
  uint64_t v15 = (os_log_s *)qword_101934898;
  if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 134349312;
    *(void *)&uint8_t buf[4] = v2;
    *(_WORD *)&_BYTE buf[12] = 2050;
    *(void *)&buf[14] = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "#ADR,#registerIDSBatchIDQueryActivity,registering IDS Query activity,interval,%{public}lld,gracePeriod,%{public}lld",  buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934890 != -1) {
      dispatch_once(&qword_101934890, &stru_10188BAB8);
    }
    *(_DWORD *)id v25 = 134349312;
    *(void *)&v25[4] = v2;
    __int16 v26 = 2050;
    int64_t v27 = v10;
    LODWORD(v22) = 22;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934898,  0LL,  "#ADR,#registerIDSBatchIDQueryActivity,registering IDS Query activity,interval,%{public}lld,gracePeriod,%{public}lld",  v25,  v22);
    uint64_t v17 = (char *)v16;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLEmergencyADR::registerIDSBatchIDQueryActivity()", "%s\n", v16);
    if (v17 != buf) {
      free(v17);
    }
  }

  *(_BYTE *)(a1 + 200) = 1;
  handler[0] = _NSConcreteStackBlock;
  handler[1] = 3221225472LL;
  handler[2] = sub_100EEDC6C;
  handler[3] = &unk_10184DDE0;
  handler[4] = a1;
  xpc_activity_register( (const char *)[@"com.apple.locationd.emergencyContacts" UTF8String],  v14,  handler);
  xpc_release(v14);
}

void sub_100EEDAA0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
}

void sub_100EEDAC0(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 200))
  {
    if (qword_101934890 != -1) {
      dispatch_once(&qword_101934890, &stru_10188BAB8);
    }
    int64_t v2 = (os_log_s *)qword_101934898;
    if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "#ADR,unregistering IDS batch query activity",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934890 != -1) {
        dispatch_once(&qword_101934890, &stru_10188BAB8);
      }
      v5[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934898,  0LL,  "#ADR,unregistering IDS batch query activity",  v5,  2);
      uint64_t v4 = (uint8_t *)v3;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLEmergencyADR::unregisterIDSBatchIDQueryActivity()", "%s\n", v3);
      if (v4 != buf) {
        free(v4);
      }
    }

    xpc_activity_unregister((const char *)[@"com.apple.locationd.emergencyContacts" UTF8String]);
    *(_BYTE *)(a1 + 200) = 0;
  }

void sub_100EEDC6C(uint64_t a1, xpc_activity_t activity)
{
  int64_t v2 = *(id **)(a1 + 32);
  xpc_activity_state_t state = xpc_activity_get_state(activity);
  if (state == 2)
  {
    if (qword_101934890 != -1) {
      dispatch_once(&qword_101934890, &stru_10188BAB8);
    }
    uint64_t v4 = (os_log_s *)qword_101934898;
    if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#ADR,registerIDSBatchIDQueryActivity,IDS query activity handler triggered",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934890 != -1) {
        dispatch_once(&qword_101934890, &stru_10188BAB8);
      }
      LOWORD(v13[0]) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934898,  0LL,  "#ADR,registerIDSBatchIDQueryActivity,IDS query activity handler triggered",  v13,  2);
      unint64_t v9 = (uint8_t *)v8;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLEmergencyADR::registerIDSBatchIDQueryActivity()_block_invoke",  "%s\n",  v8);
      if (v9 != buf) {
        free(v9);
      }
    }

    unint64_t v5 = (dispatch_queue_s *)objc_msgSend(objc_msgSend(*v2, "silo"), "queue");
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100EEDF98;
    block[3] = &unk_10181D3D0;
    block[4] = v2;
    dispatch_async(v5, block);
  }

  else
  {
    int v6 = state;
    if (qword_101934890 != -1) {
      dispatch_once(&qword_101934890, &stru_10188BAB8);
    }
    uint64_t v7 = (os_log_s *)qword_101934898;
    if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 67240192;
      int v15 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "#ADR,registerIDSBatchIDQueryActivity,IDS query activity handler triggered with unexpected state %{public}d",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934890 != -1) {
        dispatch_once(&qword_101934890, &stru_10188BAB8);
      }
      v13[0] = 67240192;
      v13[1] = v6;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934898,  0LL,  "#ADR,registerIDSBatchIDQueryActivity,IDS query activity handler triggered with unexpected state %{public}d",  v13,  8);
      uint64_t v11 = (uint8_t *)v10;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLEmergencyADR::registerIDSBatchIDQueryActivity()_block_invoke",  "%s\n",  v10);
      if (v11 != buf) {
        free(v11);
      }
    }
  }

uint64_t sub_100EEDF98(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  *(_BYTE *)(v1 + 200) = 0;
  sub_100EEDFC4(v1);
  uint64_t result = sub_1004F7000();
  if ((result & 1) == 0) {
    return sub_1001B9A1C();
  }
  return result;
}

void sub_100EEDFC4(uint64_t a1)
{
  uint64_t v2 = sub_1002F8DDC();
  *(void *)uint64_t buf = CFAbsoluteTimeGetCurrent();
  sub_1002AC820(v2, @"LastIDSQueryTime", buf);
  uint64_t v3 = sub_1002F8DDC();
  (*(void (**)(uint64_t))(*(void *)v3 + 944LL))(v3);
  *(void *)&double v4 = objc_opt_class(&OBJC_CLASS___MCProfileConnection).n128_u64[0];
  if (!v5
    || (objc_msgSend( +[MCProfileConnection sharedConnection]( MCProfileConnection,  "sharedConnection",  v4),  "isHealthDataSubmissionAllowed") & 1) == 0)
  {
    if (qword_101934890 != -1) {
      dispatch_once(&qword_101934890, &stru_10188BAB8);
    }
    unint64_t v9 = (os_log_s *)qword_101934898;
    if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "#ADR,issueIDSBatchQuery,MCProfileConnection class unavailable or Health Data Submission not allowed",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934890 != -1) {
        dispatch_once(&qword_101934890, &stru_10188BAB8);
      }
      v15[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934898,  0LL,  "#ADR,issueIDSBatchQuery,MCProfileConnection class unavailable or Health Data Submission not allowed",  v15,  2);
      uint64_t v12 = (uint8_t *)v11;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLEmergencyADR::issueIDSBatchIDQuery()", "%s\n", v11);
      if (v12 != buf) {
        free(v12);
      }
    }

void sub_100EEE344(_Unwind_Exception *a1)
{
}

void sub_100EEE360(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  if (a2 && a3)
  {
    if (a4)
    {
      if (qword_101934890 != -1) {
        dispatch_once(&qword_101934890, &stru_10188BAB8);
      }
      char v6 = (os_log_s *)qword_101934898;
      if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)uint64_t buf = 138543362;
        *(void *)&uint8_t buf[4] = a4;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_ERROR,  "#ADR,handleIDSBatchIDQueryResponse,Early return,error:%{public}@",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934890 != -1) {
          dispatch_once(&qword_101934890, &stru_10188BAB8);
        }
        *(_DWORD *)uint64_t v56 = 138543362;
        *(void *)&v56[4] = a4;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934898,  16LL,  "#ADR,handleIDSBatchIDQueryResponse,Early return,error:%{public}@",  v56,  12);
        uint64_t v8 = (char *)v7;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLEmergencyADR::EmergencyContactsMetric::handleIDSBatchIDQueryResponse(NSDictionary<NSString *,NSNumber * > *, NSString *, NSError *)",  "%s\n",  v7);
LABEL_72:
        if (v8 != buf) {
          free(v8);
        }
        return;
      }

      return;
    }

    if (qword_101934890 != -1) {
      dispatch_once(&qword_101934890, &stru_10188BAB8);
    }
    uint64_t v11 = (os_log_s *)qword_101934898;
    if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 67240450;
      *(_DWORD *)&uint8_t buf[4] = [a2 count];
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = [a3 UTF8String];
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "#ADR,handleIDSBatchIDQueryResponse,Received %{public}u responses for service %{public}s",  buf,  0x12u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934890 != -1) {
        dispatch_once(&qword_101934890, &stru_10188BAB8);
      }
      uint64_t v47 = qword_101934898;
      *(_DWORD *)uint64_t v56 = 67240450;
      *(_DWORD *)&v56[4] = [a2 count];
      *(_WORD *)&v56[8] = 2082;
      *(void *)&_BYTE v56[10] = [a3 UTF8String];
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v47,  0LL,  "#ADR,handleIDSBatchIDQueryResponse,Received %{public}u responses for service %{public}s",  v56,  18);
      float v49 = (char *)v48;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLEmergencyADR::EmergencyContactsMetric::handleIDSBatchIDQueryResponse(NSDictionary<NSString *,NSNumber *> *, NSString *, NSError *)",  "%s\n",  v48);
      if (v49 != buf) {
        free(v49);
      }
    }

    __int128 v54 = 0u;
    __int128 v55 = 0u;
    else {
      uint64_t v12 = 144LL;
    }
    __int128 v52 = 0uLL;
    __int128 v53 = 0uLL;
    id v13 = [a2 allKeys];
    id v14 = [v13 countByEnumeratingWithState:&v52 objects:v57 count:16];
    if (!v14)
    {
LABEL_67:
      return;
    }

    uint64_t v15 = a1 + v12;
    uint64_t v16 = *(void *)v53;
LABEL_28:
    uint64_t v17 = 0LL;
    while (1)
    {
      if (*(void *)v53 != v16) {
        objc_enumerationMutation(v13);
      }
      uint64_t v18 = *(void **)(*((void *)&v52 + 1) + 8 * v17);
      if (objc_msgSend(objc_msgSend(a2, "objectForKeyedSubscript:", v18), "integerValue") == (id)1)
      {
        if (qword_101934890 != -1) {
          dispatch_once(&qword_101934890, &stru_10188BAB8);
        }
        double v19 = (os_log_s *)qword_101934898;
        if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_DEFAULT))
        {
          id v20 = [v18 UTF8String];
          id v21 = [a3 UTF8String];
          *(_DWORD *)uint64_t buf = 136380931;
          *(void *)&uint8_t buf[4] = v20;
          *(_WORD *)&_BYTE buf[12] = 2082;
          *(void *)&buf[14] = v21;
          _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "#ADR,handleIDSBatchIDQueryResponse,Number %{private}s supports service %{public}s",  buf,  0x16u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934890 != -1) {
            dispatch_once(&qword_101934890, &stru_10188BAB8);
          }
          uint64_t v30 = qword_101934898;
          id v31 = [v18 UTF8String];
          id v32 = [a3 UTF8String];
          *(_DWORD *)uint64_t v56 = 136380931;
          *(void *)&v56[4] = v31;
          *(_WORD *)&v56[12] = 2082;
          *(void *)&v56[14] = v32;
          LODWORD(v50) = 22;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v30,  0LL,  "#ADR,handleIDSBatchIDQueryResponse,Number %{private}s supports service %{public}s",  v56,  v50);
          double v34 = (char *)v33;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLEmergencyADR::EmergencyContactsMetric::handleIDSBatchIDQueryResponse(NSDictionary<NSString *,NSNumber *> *, NSString *, NSError *)",  "%s\n",  v33);
          if (v34 != buf) {
            free(v34);
          }
        }

        sub_1010DDBC0(buf, (char *)[v18 UTF8String]);
        *(void *)uint64_t v56 = buf;
        uint64_t v22 = sub_100EF3A58(v15, buf, (uint64_t)&unk_1012CF090, (__int128 **)v56);
        int v23 = 1;
      }

      else
      {
        if (objc_msgSend(objc_msgSend(a2, "objectForKeyedSubscript:", v18), "integerValue") != (id)2)
        {
          if (qword_101934890 != -1) {
            dispatch_once(&qword_101934890, &stru_10188BAB8);
          }
          int64_t v27 = (os_log_s *)qword_101934898;
          if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_DEFAULT))
          {
            id v28 = [v18 UTF8String];
            id v29 = [a3 UTF8String];
            *(_DWORD *)uint64_t buf = 136380931;
            *(void *)&uint8_t buf[4] = v28;
            *(_WORD *)&_BYTE buf[12] = 2082;
            *(void *)&buf[14] = v29;
            _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEFAULT,  "#ADR,handleIDSBatchIDQueryResponse,Unhandled status response for number %{private}s for service %{public}s",  buf,  0x16u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934890 != -1) {
              dispatch_once(&qword_101934890, &stru_10188BAB8);
            }
            uint64_t v40 = qword_101934898;
            id v41 = [v18 UTF8String];
            id v42 = [a3 UTF8String];
            *(_DWORD *)uint64_t v56 = 136380931;
            *(void *)&v56[4] = v41;
            *(_WORD *)&v56[12] = 2082;
            *(void *)&v56[14] = v42;
            LODWORD(v50) = 22;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v40,  0LL,  "#ADR,handleIDSBatchIDQueryResponse,Unhandled status response for number %{private}s for service %{public}s",  v56,  v50);
            double v44 = (char *)v43;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLEmergencyADR::EmergencyContactsMetric::handleIDSBatchIDQueryResponse(NSDictionary<NSString *,NSNumb er *> *, NSString *, NSError *)",  "%s\n",  v43);
            if (v44 != buf) {
              free(v44);
            }
          }

          goto LABEL_52;
        }

        if (qword_101934890 != -1) {
          dispatch_once(&qword_101934890, &stru_10188BAB8);
        }
        double v24 = (os_log_s *)qword_101934898;
        if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_DEFAULT))
        {
          id v25 = [v18 UTF8String];
          id v26 = [a3 UTF8String];
          *(_DWORD *)uint64_t buf = 136380931;
          *(void *)&uint8_t buf[4] = v25;
          *(_WORD *)&_BYTE buf[12] = 2082;
          *(void *)&buf[14] = v26;
          _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "#ADR,handleIDSBatchIDQueryResponse,Number %{private}s does not support service %{public}s",  buf,  0x16u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934890 != -1) {
            dispatch_once(&qword_101934890, &stru_10188BAB8);
          }
          uint64_t v35 = qword_101934898;
          id v36 = [v18 UTF8String];
          id v37 = [a3 UTF8String];
          *(_DWORD *)uint64_t v56 = 136380931;
          *(void *)&v56[4] = v36;
          *(_WORD *)&v56[12] = 2082;
          *(void *)&v56[14] = v37;
          LODWORD(v50) = 22;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v35,  0LL,  "#ADR,handleIDSBatchIDQueryResponse,Number %{private}s does not support service %{public}s",  v56,  v50);
          float v39 = (char *)v38;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLEmergencyADR::EmergencyContactsMetric::handleIDSBatchIDQueryResponse(NSDictionary<NSString *,NSNumber *> *, NSString *, NSError *)",  "%s\n",  v38);
          if (v39 != buf) {
            free(v39);
          }
        }

        sub_1010DDBC0(buf, (char *)[v18 UTF8String]);
        *(void *)uint64_t v56 = buf;
        uint64_t v22 = sub_100EF3A58(v15, buf, (uint64_t)&unk_1012CF090, (__int128 **)v56);
        int v23 = 2;
      }

      v22[10] = v23;
      if (v59 < 0) {
        operator delete(*(void **)buf);
      }
LABEL_52:
      if (v14 == (id)++v17)
      {
        id v45 = [v13 countByEnumeratingWithState:&v52 objects:v57 count:16];
        id v14 = v45;
        if (!v45) {
          goto LABEL_67;
        }
        goto LABEL_28;
      }
    }
  }

  if (qword_101934890 != -1) {
    dispatch_once(&qword_101934890, &stru_10188BAB8);
  }
  unint64_t v9 = (os_log_s *)qword_101934898;
  if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_ERROR,  "#ADR,handleIDSBatchIDQueryResponse,query response is Empty. Early return",  buf,  2u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934890 != -1) {
      dispatch_once(&qword_101934890, &stru_10188BAB8);
    }
    *(_WORD *)uint64_t v56 = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934898,  16LL,  "#ADR,handleIDSBatchIDQueryResponse,query response is Empty. Early return",  v56,  2);
    uint64_t v8 = (char *)v46;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLEmergencyADR::EmergencyContactsMetric::handleIDSBatchIDQueryResponse(NSDictionary<NSString *,NSNumber *> *, NSString *, NSError *)",  "%s\n",  v46);
    goto LABEL_72;
  }

void sub_100EEEE28( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, void *__p, uint64_t a46, int a47, __int16 a48, char a49, char a50)
{
  if (a50 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100EEEE50(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 192);
  uint64_t v2 = (uint64_t *)(a1 + 192);
  if (v3)
  {
    sub_100EEEFFC(v2, 0LL);
  }

  else
  {
    if (qword_101934890 != -1) {
      dispatch_once(&qword_101934890, &stru_10188BAB8);
    }
    double v4 = (os_log_s *)qword_101934898;
    if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#ADR,cleanupEmergencyContactsMetrics,fEmergencyContactsMetric is nil",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934890 != -1) {
        dispatch_once(&qword_101934890, &stru_10188BAB8);
      }
      v7[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934898,  0LL,  "#ADR,cleanupEmergencyContactsMetrics,fEmergencyContactsMetric is nil",  v7,  2);
      char v6 = (uint8_t *)v5;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLEmergencyADR::cleanupEmergencyContactsMetrics()", "%s\n", v5);
      if (v6 != buf) {
        free(v6);
      }
    }
  }

  sub_100EED3F0(a1);
}

void sub_100EEEFFC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  *a1 = a2;
  if (v3)
  {
    double v4 = (void *)sub_100EF3644(v3);
    operator delete(v4);
  }

void sub_100EEF028(uint64_t a1, int a2)
{
  if (qword_101934890 != -1) {
    dispatch_once(&qword_101934890, &stru_10188BAB8);
  }
  uint64_t v3 = (os_log_s *)qword_101934898;
  if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)uint64_t buf = 67240192;
    int v8 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "#ADR,handlePhoneNumberChange,received phone number update for inst %{public}d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934890 != -1) {
      dispatch_once(&qword_101934890, &stru_10188BAB8);
    }
    v6[0] = 67240192;
    v6[1] = a2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934898,  2LL,  "#ADR,handlePhoneNumberChange,received phone number update for inst %{public}d",  v6,  8);
    uint64_t v5 = (uint8_t *)v4;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLEmergencyADR::handlePhoneNumberChange(SimInstance)", "%s\n", v4);
    if (v5 != buf) {
      free(v5);
    }
  }

std::string *sub_100EEF1D0(uint64_t a1, const std::string *a2)
{
  if (qword_101934890 != -1) {
    dispatch_once(&qword_101934890, &stru_10188BAB8);
  }
  double v4 = (os_log_s *)qword_101934898;
  if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_DEBUG))
  {
    if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v5 = a2;
    }
    else {
      uint64_t v5 = (const std::string *)a2->__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)uint64_t buf = 136380675;
    id v13 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "#ADR,handleCompanionNumberChange,companion phone number changed to %{private}s",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934890 != -1) {
      dispatch_once(&qword_101934890, &stru_10188BAB8);
    }
    if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
      char v7 = a2;
    }
    else {
      char v7 = (const std::string *)a2->__r_.__value_.__r.__words[0];
    }
    int v10 = 136380675;
    uint64_t v11 = v7;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934898,  2LL,  "#ADR,handleCompanionNumberChange,companion phone number changed to %{private}s",  &v10,  12);
    unint64_t v9 = (uint8_t *)v8;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLEmergencyADR::handleCompanionNumberChange(const std::string &)",  "%s\n",  v8);
    if (v9 != buf) {
      free(v9);
    }
  }

  return std::string::operator=((std::string *)(a1 + 112), a2);
}

uint64_t sub_100EEF3A8(uint64_t a1, uint64_t a2)
{
  if (qword_101934890 != -1) {
    dispatch_once(&qword_101934890, &stru_10188BAB8);
  }
  double v4 = (os_log_s *)qword_101934898;
  if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_DEFAULT))
  {
    double v5 = *(double *)a2;
    int v6 = *(unsigned __int8 *)(a2 + 8);
    int v7 = *(unsigned __int8 *)(a2 + 9);
    int v8 = *(unsigned __int8 *)(a2 + 16);
    v26[0] = 68290050;
    __int16 v27 = 2082;
    v26[1] = 0;
    id v28 = "";
    __int16 v29 = 2050;
    double v30 = v5;
    __int16 v31 = 1026;
    int v32 = v6;
    __int16 v33 = 1026;
    int v34 = v7;
    __int16 v35 = 1026;
    int v36 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#ADR,handleBatteryStatusChange, battery level:%{public}.1f, battery charged:% {public}d, battery connected:%{public}d, battery was connected:%{public}d}",  (uint8_t *)v26,  0x2Eu);
  }

  double v10 = *(double *)(a1 + 168);
  uint64_t v9 = a1 + 168;
  double v11 = v10;
  if (v10 <= 0.0 || v11 > 10.0)
  {
    if (v11 <= 10.0 || v11 > 30.0)
    {
      BOOL v14 = v11 > 100.0 || v11 <= 60.0;
      uint64_t v15 = @"61-100%";
      if (v14) {
        uint64_t v15 = @"Unknown";
      }
      if (v11 <= 30.0 || v11 > 60.0) {
        uint64_t v17 = (__CFString *)v15;
      }
      else {
        uint64_t v17 = @"31-60%";
      }
    }

    else
    {
      uint64_t v17 = @"11-30%";
    }
  }

  else
  {
    uint64_t v17 = @"10% or less";
  }

  double v18 = *(double *)a2;
  if (*(double *)a2 <= 0.0 || v18 > 10.0)
  {
    if (v18 <= 10.0 || v18 > 30.0)
    {
      if (v18 <= 30.0 || v18 > 60.0)
      {
        if (v18 > 100.0 || v18 <= 60.0) {
          id v21 = @"Unknown";
        }
        else {
          id v21 = @"61-100%";
        }
      }

      else
      {
        id v21 = @"31-60%";
      }
    }

    else
    {
      id v21 = @"11-30%";
    }
  }

  else
  {
    id v21 = @"10% or less";
  }

  unsigned int v23 = -[__CFString isEqualToString:](v17, "isEqualToString:", v21);
  uint64_t v24 = *(void *)(a2 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)a2;
  *(void *)(v9 + 16) = v24;
  return v23 ^ 1;
}

void sub_100EEF5E8(uint64_t a1, int a2)
{
  if (qword_101934890 != -1) {
    dispatch_once(&qword_101934890, &stru_10188BAB8);
  }
  double v4 = (os_log_s *)qword_101934898;
  if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_DEBUG))
  {
    sub_100775158(a2, __p);
    double v5 = v15 >= 0 ? __p : (void **)__p[0];
    *(_DWORD *)uint64_t buf = 136446210;
    *(void *)&uint8_t buf[4] = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "#ADR,handleCommTypeChange,comm type changed to %{public}s",  buf,  0xCu);
    if (v15 < 0) {
      operator delete(__p[0]);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934890 != -1) {
      dispatch_once(&qword_101934890, &stru_10188BAB8);
    }
    uint64_t v6 = qword_101934898;
    sub_100775158(a2, buf);
    if (v11 >= 0) {
      int v7 = buf;
    }
    else {
      int v7 = *(_BYTE **)buf;
    }
    int v12 = 136446210;
    id v13 = v7;
    _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v6,  2LL,  "#ADR,handleCommTypeChange,comm type changed to %{public}s",  &v12,  12);
    uint64_t v9 = v8;
    if (v11 < 0) {
      operator delete(*(void **)buf);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLEmergencyADR::handleCommTypeChange(Emergency::CommunicationType)",  "%s\n",  v9);
  }

  *(_DWORD *)(a1 + 144) = a2;
}

void sub_100EEF808(uint64_t a1, int a2)
{
  if (qword_101934890 != -1) {
    dispatch_once(&qword_101934890, &stru_10188BAB8);
  }
  double v4 = (os_log_s *)qword_101934898;
  if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_DEBUG))
  {
    sub_100BF2720(a2, __p);
    double v5 = v15 >= 0 ? __p : (void **)__p[0];
    *(_DWORD *)uint64_t buf = 136446210;
    *(void *)&uint8_t buf[4] = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "#ADR,handleTriggerTypeChange,call trigger type changed to %{public}s",  buf,  0xCu);
    if (v15 < 0) {
      operator delete(__p[0]);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934890 != -1) {
      dispatch_once(&qword_101934890, &stru_10188BAB8);
    }
    uint64_t v6 = qword_101934898;
    sub_100BF2720(a2, buf);
    if (v11 >= 0) {
      int v7 = buf;
    }
    else {
      int v7 = *(_BYTE **)buf;
    }
    int v12 = 136446210;
    id v13 = v7;
    _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v6,  2LL,  "#ADR,handleTriggerTypeChange,call trigger type changed to %{public}s",  &v12,  12);
    uint64_t v9 = v8;
    if (v11 < 0) {
      operator delete(*(void **)buf);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLEmergencyADR::handleTriggerTypeChange(EmergencyTriggerType)",  "%s\n",  v9);
  }

  *(_DWORD *)(a1 + 14_Block_object_dispose((const void *)(v1 - 112), 8) = a2;
}

void sub_100EEFA28(uint64_t a1)
{
  *(_DWORD *)(a1 + 152) = 0;

  *(void *)(a1 + sub_1002A5590(v1 - 160) = 0LL;
}

uint64_t sub_100EEFA54(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  if (a2 && *(void *)(a4 + 24))
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (!v6) {
      sub_100008BDC();
    }
    uint64_t v9 = (int *)(*(uint64_t (**)(uint64_t))(*(void *)v6 + 48LL))(v6);
    double v10 = sub_100756E48(v9);
    sub_100751F94((int *)v10, (uint64_t)v65);
    if (!v66)
    {
      if (qword_101934890 != -1) {
        dispatch_once(&qword_101934890, &stru_10188BAB8);
      }
      double v30 = (os_log_s *)qword_101934898;
      uint64_t v29 = 0LL;
      if (!os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_40;
      }
      *(_DWORD *)uint64_t buf = 68289026;
      int v72 = 0;
      __int16 v73 = 2082;
      uint64_t v74 = "";
      _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#ADR,sendAdr,no valid partner certs}",  buf,  0x12u);
      goto LABEL_39;
    }

    uint64_t v11 = *(void *)(a1 + 32);
    if (!v11) {
      sub_100008BDC();
    }
    uint64_t v12 = *(unsigned int *)(*(uint64_t (**)(uint64_t))(*(void *)v11 + 48LL))(v11);
    id v13 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    BOOL v14 = sub_100EF07F4(a1, v12, 0);
    if (v14)
    {
      -[NSMutableDictionary setValue:forKey:](v13, "setValue:forKey:", v14, @"call_information");
    }

    char v15 = sub_100EF0BEC(a1, a3);
    if (v15)
    {
      -[NSMutableDictionary setValue:forKey:](v13, "setValue:forKey:", v15, @"caller_location");
    }

    uint64_t v16 = sub_100775488((uint64_t)v13);
    if (v16)
    {
      id v64 = 0LL;
      uint64_t v17 = sub_100BCDEC8(v16, 0x20u, (NSMutableData **)&v64);
      id v18 = v64;
      double v19 = v17;
      if (v17 && v64)
      {
        signed int v20 = objc_msgSend(objc_msgSend(a2, "valueForKey:", @"timestamp"), "intValue");
        id v21 = -[NSMutableData initWithLength:](objc_alloc(&OBJC_CLASS___NSMutableData), "initWithLength:", 32LL);
        CC_SHA256( -[NSMutableData bytes](v17, "bytes"),  (CC_LONG)-[NSMutableData length](v17, "length"),  (unsigned __int8 *)-[NSMutableData mutableBytes](v21, "mutableBytes"));
        uint64_t v22 = sub_100BCEC3C((uint64_t)v65, v20, (uint64_t)v21, (uint64_t)v64);
        unsigned int v23 = v22;
        uint64_t v24 = sub_100EF195C(a1, v12, 0);
        id v25 = v24;
        *(_DWORD *)uint64_t buf = v12;
        uint64_t v26 = *(void *)(a1 + 64);
        if (!v26) {
          sub_100008BDC();
        }
        uint64_t v27 = (*(uint64_t (**)(uint64_t, uint8_t *))(*(void *)v26 + 48LL))(v26, buf);
        if (*(char *)(v27 + 159) < 0)
        {
          sub_1010DD48C(__p, *(void **)(v27 + 136), *(void *)(v27 + 144));
        }

        else
        {
          *(_OWORD *)std::stringbuf::string_type __p = *(_OWORD *)(v27 + 136);
          uint64_t v63 = *(void *)(v27 + 152);
        }

        if (v63 >= 0) {
          int v36 = (void *)HIBYTE(v63);
        }
        else {
          int v36 = __p[1];
        }
        if (!v36)
        {
          if (qword_101934890 != -1) {
            dispatch_once(&qword_101934890, &stru_10188BAB8);
          }
          id v41 = (os_log_s *)qword_101934898;
          if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)uint64_t buf = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_DEFAULT,  "#ADR,sendAdr,native number is empty, not sending ADR",  buf,  2u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934890 != -1) {
              dispatch_once(&qword_101934890, &stru_10188BAB8);
            }
            v61[0] = 0;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934898,  0LL,  "#ADR,sendAdr,native number is empty, not sending ADR",  v61,  2);
            char v59 = (uint8_t *)v58;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLEmergencyADR::sendAdr(CFAbsoluteTime, NSDictionary *, Emergency::CLEmergencySessionReport *, SendAD RResponse) const",  "%s\n",  v58);
            if (v59 != buf) {
              free(v59);
            }
          }

          HIDWORD(v60) = 0;
LABEL_64:
          else {
            uint64_t v42 = *(unsigned __int8 *)(a1 + 135);
          }
          if (!v42 || byte_1019A4098)
          {
            if (qword_101934890 != -1) {
              dispatch_once(&qword_101934890, &stru_10188BAB8);
            }
            __n128 v48 = (os_log_s *)qword_101934898;
            if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)uint64_t buf = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v48,  OS_LOG_TYPE_DEFAULT,  "#ADR,sendAdr,companion number is empty or device supports alternate account, not sending ADR",  buf,  2u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_101934890 != -1) {
                dispatch_once(&qword_101934890, &stru_10188BAB8);
              }
              v61[0] = 0;
              LODWORD(v60) = 2;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934898,  0LL,  "#ADR,sendAdr,companion number is empty or device supports alternate account, not sending ADR",  v61,  v60);
              __int128 v55 = (uint8_t *)v54;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLEmergencyADR::sendAdr(CFAbsoluteTime, NSDictionary *, Emergency::CLEmergencySessionReport *, Send ADRResponse) const",  "%s\n",  v54);
              if (v55 != buf) {
                free(v55);
              }
            }

            BOOL v45 = 0;
            goto LABEL_86;
          }

          if (qword_101934890 != -1) {
            dispatch_once(&qword_101934890, &stru_10188BAB8);
          }
          unint64_t v43 = (os_log_s *)qword_101934898;
          if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)uint64_t buf = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_DEFAULT,  "#ADR,sendAdr,sending ADR for companion number",  buf,  2u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934890 != -1) {
              dispatch_once(&qword_101934890, &stru_10188BAB8);
            }
            v61[0] = 0;
            LODWORD(v60) = 2;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934898,  0LL,  "#ADR,sendAdr,sending ADR for companion number",  v61,  v60);
            BOOL v57 = (uint8_t *)v56;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLEmergencyADR::sendAdr(CFAbsoluteTime, NSDictionary *, Emergency::CLEmergencySessionReport *, SendAD RResponse) const",  "%s\n",  v56);
            if (v57 != buf) {
              free(v57);
            }
          }

          double v44 = sub_100EF1F74(a1, (uint64_t *)(a1 + 112), v20, (uint64_t)a2, v17, (uint64_t)v22, (uint64_t)v24);
          sub_10001A504((uint64_t)v67, a4);
          BOOL v45 = sub_100EF2478(a1, 1, (uint64_t)v44, a3, (uint64_t)v67);
          double v46 = v68;
          if (v68 == v67)
          {
            uint64_t v47 = 4LL;
            double v46 = v67;
          }

          else
          {
            if (!v68)
            {
LABEL_85:

LABEL_86:
              uint64_t v29 = HIDWORD(v60) | v45;
              if (SHIBYTE(v63) < 0) {
                operator delete(__p[0]);
              }
              goto LABEL_40;
            }

            uint64_t v47 = 5LL;
          }

          (*(void (**)(void))(*v46 + 8 * v47))();
          goto LABEL_85;
        }

        if (qword_101934890 != -1) {
          dispatch_once(&qword_101934890, &stru_10188BAB8);
        }
        id v37 = (os_log_s *)qword_101934898;
        if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)uint64_t buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v37,  OS_LOG_TYPE_DEFAULT,  "#ADR,sendAdr,sending ADR for native number",  buf,  2u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934890 != -1) {
            dispatch_once(&qword_101934890, &stru_10188BAB8);
          }
          v61[0] = 0;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934898,  0LL,  "#ADR,sendAdr,sending ADR for native number",  v61,  2);
          __int128 v53 = (uint8_t *)v52;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLEmergencyADR::sendAdr(CFAbsoluteTime, NSDictionary *, Emergency::CLEmergencySessionReport *, SendADRResponse) const",  "%s\n",  v52);
          if (v53 != buf) {
            free(v53);
          }
        }

        unint64_t v38 = sub_100EF1F74(a1, (uint64_t *)__p, v20, (uint64_t)a2, v17, (uint64_t)v22, (uint64_t)v24);
        sub_10001A504((uint64_t)v69, a4);
        HIDWORD(v60) = sub_100EF2478(a1, 0, (uint64_t)v38, a3, (uint64_t)v69);
        float v39 = v70;
        if (v70 == v69)
        {
          uint64_t v40 = 4LL;
          float v39 = v69;
        }

        else
        {
          if (!v70)
          {
LABEL_63:

            goto LABEL_64;
          }

          uint64_t v40 = 5LL;
        }

        (*(void (**)(void))(*v39 + 8 * v40))();
        goto LABEL_63;
      }

      if (qword_101934890 != -1) {
        dispatch_once(&qword_101934890, &stru_10188BAB8);
      }
      int v34 = (os_log_s *)qword_101934898;
      if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_ERROR,  "#ADR,sendAdr,encrypted ADR data and/or key are nil",  buf,  2u);
      }

      if (!sub_1002921D0(115, 0))
      {
LABEL_39:
        uint64_t v29 = 0LL;
LABEL_40:
        sub_1007825DC((uint64_t)v65);
        return v29;
      }

      bzero(buf, 0x65CuLL);
      if (qword_101934890 != -1) {
        dispatch_once(&qword_101934890, &stru_10188BAB8);
      }
      LOWORD(__p[0]) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934898,  16LL,  "#ADR,sendAdr,encrypted ADR data and/or key are nil",  __p,  2);
      __int16 v33 = (uint8_t *)v51;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLEmergencyADR::sendAdr(CFAbsoluteTime, NSDictionary *, Emergency::CLEmergencySessionReport *, SendADRResponse) const",  "%s\n",  v51);
    }

    else
    {
      if (qword_101934890 != -1) {
        dispatch_once(&qword_101934890, &stru_10188BAB8);
      }
      __int16 v31 = (os_log_s *)qword_101934898;
      if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_ERROR,  "#ADR,sendAdr,failed to serialize ADR data dict into JSON",  buf,  2u);
      }

      if (!sub_1002921D0(115, 0)) {
        goto LABEL_39;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934890 != -1) {
        dispatch_once(&qword_101934890, &stru_10188BAB8);
      }
      LOWORD(__p[0]) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934898,  16LL,  "#ADR,sendAdr,failed to serialize ADR data dict into JSON",  __p,  2);
      __int16 v33 = (uint8_t *)v32;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLEmergencyADR::sendAdr(CFAbsoluteTime, NSDictionary *, Emergency::CLEmergencySessionReport *, SendADRResponse) const",  "%s\n",  v32);
    }

    if (v33 != buf) {
      free(v33);
    }
    goto LABEL_39;
  }

  if (qword_101934890 != -1) {
    dispatch_once(&qword_101934890, &stru_10188BAB8);
  }
  id v28 = (os_log_s *)qword_101934898;
  if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_ERROR, "#ADR,sendAdr,required input is missing", buf, 2u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934890 != -1) {
      dispatch_once(&qword_101934890, &stru_10188BAB8);
    }
    v65[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934898,  16LL,  "#ADR,sendAdr,required input is missing",  v65,  2);
    uint64_t v50 = (uint8_t *)v49;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLEmergencyADR::sendAdr(CFAbsoluteTime, NSDictionary *, Emergency::CLEmergencySessionReport *, SendADRResponse) const",  "%s\n",  v49);
    if (v50 != buf) {
      free(v50);
    }
  }

  return 0LL;
}

void sub_100EF0724( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, char a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26, uint64_t a27, uint64_t a28, uint64_t a29, char a30, uint64_t a31, uint64_t a32, uint64_t a33)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  sub_1007825DC((uint64_t)&a20);
  _Unwind_Resume(a1);
}

void sub_100EF07EC()
{
}

NSMutableDictionary *sub_100EF07F4(uint64_t a1, int a2, char a3)
{
  uint64_t v6 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  *(_DWORD *)uint64_t buf = a2;
  uint64_t v7 = *(void *)(a1 + 64);
  if (!v7) {
    sub_100008BDC();
  }
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint8_t *))(*(void *)v7 + 48LL))(v7, buf);
  if (*(char *)(v8 + 159) < 0)
  {
    sub_1010DD48C(__dst, *(void **)(v8 + 136), *(void *)(v8 + 144));
  }

  else
  {
    *(_OWORD *)__dst = *(_OWORD *)(v8 + 136);
    uint64_t v28 = *(void *)(v8 + 152);
  }

  sub_1004F2598();
  int v9 = sub_1001B9A1C();
  if (byte_1019A4098) {
    int v10 = 0;
  }
  else {
    int v10 = v9;
  }
  if (v10 != 1)
  {
    if (SHIBYTE(v28) < 0)
    {
      if (!__dst[1]) {
        goto LABEL_28;
      }
      uint64_t v12 = (void **)__dst[0];
    }

    else
    {
      if (!HIBYTE(v28)) {
        goto LABEL_28;
      }
      uint64_t v12 = __dst;
    }

    BOOL v14 = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v12);
    char v15 = @"tel";
    goto LABEL_27;
  }

  uint64_t v11 = (void *)(a1 + 112);
  if ((*(char *)(a1 + 135) & 0x80000000) == 0)
  {
    if (!*(_BYTE *)(a1 + 135)) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }

  if (*(void *)(a1 + 120))
  {
    uint64_t v11 = (void *)*v11;
LABEL_17:
    -[NSMutableDictionary setValue:forKey:]( v6,  "setValue:forKey:",  +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v11),  @"tel");
  }

void sub_100EF0B8C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20, char a21, uint64_t a22, void *__p, uint64_t a24, int a25, __int16 a26, char a27, char a28)
{
  if (a28 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

NSMutableDictionary *sub_100EF0BEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (!v3) {
    sub_100008BDC();
  }
  double v5 = (int *)(*(uint64_t (**)(uint64_t))(*(void *)v3 + 48LL))(v3);
  if (!*((_BYTE *)sub_100756E48(v5) + 58))
  {
    if (qword_101934890 != -1) {
      dispatch_once(&qword_101934890, &stru_10188BAB8);
    }
    char v15 = (os_log_s *)qword_101934898;
    if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "#ADR,createCallerLocationDict,ERA disabled",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934890 != -1) {
        dispatch_once(&qword_101934890, &stru_10188BAB8);
      }
      *(_WORD *)__int128 v55 = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934898,  0LL,  "#ADR,createCallerLocationDict,ERA disabled",  v55,  2);
      uint64_t v17 = (uint8_t *)v16;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "NSDictionary *CLEmergencyADR::createCallerLocationDict(Emergency::CLEmergencySessionReport *) const",  "%s\n",  v16);
      if (v17 != buf) {
        free(v17);
      }
    }

    return 0LL;
  }

  uint64_t v6 = *(void **)(a1 + 160);
  if (!v6)
  {
    if (qword_101934890 != -1) {
      dispatch_once(&qword_101934890, &stru_10188BAB8);
    }
    id v21 = (os_log_s *)qword_101934898;
    if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "#ADR,createCallerLocationDict,no data available for caller location dict so not sending",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934890 != -1) {
        dispatch_once(&qword_101934890, &stru_10188BAB8);
      }
      *(_WORD *)__int128 v55 = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934898,  0LL,  "#ADR,createCallerLocationDict,no data available for caller location dict so not sending",  v55,  2);
      uint64_t v42 = (uint8_t *)v41;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "NSDictionary *CLEmergencyADR::createCallerLocationDict(Emergency::CLEmergencySessionReport *) const",  "%s\n",  v41);
      if (v42 != buf) {
        free(v42);
      }
    }

    if (a2) {
      *(_DWORD *)(a2 + 1104) = 2;
    }
    *(_DWORD *)uint64_t buf = 115;
    *(_DWORD *)&uint8_t buf[8] = 2;
    *(_DWORD *)&_BYTE buf[32] = 0;
    memset(v55, 0, 24);
    __int128 v52 = v55;
    LOBYTE(v53) = 0;
    *(void *)__int128 v55 = operator new(0x28uLL);
    *(void *)&v55[8] = *(void *)v55;
    *(void *)&v55[16] = *(void *)v55 + 40LL;
    *(void *)&v55[8] = sub_100783D5C((uint64_t)&v55[16], (uint64_t)buf, (uint64_t)&buf[40], *(uint64_t *)v55);
    sub_10043AFF4((uint64_t)&buf[8]);
    id v22 = *(void **)(a1 + 136);
    memset(v62, 0, sizeof(v62));
    sub_10043BC44( v62,  *(uint64_t *)v55,  *(uint64_t *)&v55[8],  0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)&v55[8] - *(void *)v55) >> 3));
    [v22 setMeasurements:sub_100435878(v62)];
    id v20 = v62;
    goto LABEL_34;
  }

  id v7 = [v6 placemark];
  if (!v7 || (uint64_t v8 = v7, ![v7 mecardAddress]) || !objc_msgSend(v8, "location"))
  {
    if (qword_101934890 != -1) {
      dispatch_once(&qword_101934890, &stru_10188BAB8);
    }
    id v18 = (os_log_s *)qword_101934898;
    if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_ERROR,  "#ADR,createCallerLocationDict,invalid placemark",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934890 != -1) {
        dispatch_once(&qword_101934890, &stru_10188BAB8);
      }
      *(_WORD *)__int128 v55 = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934898,  16LL,  "#ADR,createCallerLocationDict,invalid placemark",  v55,  2);
      __int16 v40 = (uint8_t *)v39;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "NSDictionary *CLEmergencyADR::createCallerLocationDict(Emergency::CLEmergencySessionReport *) const",  "%s\n",  v39);
      if (v40 != buf) {
        free(v40);
      }
    }

    if (a2) {
      *(_DWORD *)(a2 + 1104) = 2;
    }
    *(_DWORD *)uint64_t buf = 115;
    *(_DWORD *)&uint8_t buf[8] = 2;
    *(_DWORD *)&_BYTE buf[32] = 0;
    memset(v55, 0, 24);
    __int128 v52 = v55;
    LOBYTE(v53) = 0;
    *(void *)__int128 v55 = operator new(0x28uLL);
    *(void *)&v55[8] = *(void *)v55;
    *(void *)&v55[16] = *(void *)v55 + 40LL;
    *(void *)&v55[8] = sub_100783D5C((uint64_t)&v55[16], (uint64_t)buf, (uint64_t)&buf[40], *(uint64_t *)v55);
    sub_10043AFF4((uint64_t)&buf[8]);
    id v19 = *(void **)(a1 + 136);
    memset(v61, 0, sizeof(v61));
    sub_10043BC44( v61,  *(uint64_t *)v55,  *(uint64_t *)&v55[8],  0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)&v55[8] - *(void *)v55) >> 3));
    [v19 setMeasurements:sub_100435878(v61)];
    id v20 = v61;
LABEL_34:
    *(void *)uint64_t buf = v20;
    sub_10043B844((void ***)buf);
    *(void *)uint64_t buf = v55;
    sub_10043B844((void ***)buf);
    return 0LL;
  }

  *(_OWORD *)&v55[4] = 0uLL;
  *(_OWORD *)&v55[20] = xmmword_1012E0070;
  __asm { FMOV            V0.2D, #-1.0 }

  *(_OWORD *)&v55[36] = _Q0;
  *(_OWORD *)&v55[52] = _Q0;
  *(_OWORD *)&v55[68] = _Q0;
  *(_DWORD *)__int128 v55 = 0xFFFF;
  *(_DWORD *)&v55[84] = 0;
  __int128 v56 = 0uLL;
  *(void *)&v55[88] = 0xBFF0000000000000LL;
  *(void *)((char *)&v57 + 4) = 0xBFF0000000000000LL;
  LODWORD(v57) = 0;
  HIDWORD(v57) = 0x7FFFFFFF;
  memset(v58, 0, 25);
  id v14 = objc_msgSend(v8, "location", sub_100869DC8(&v59).n128_f64[0]);
  if (v14)
  {
    [v14 clientLocation];
  }

  else
  {
    memset(v69, 0, 28);
    __int128 v68 = 0u;
    __int128 v67 = 0u;
    __int128 v66 = 0u;
    __int128 v65 = 0u;
    __int128 v64 = 0u;
    memset(buf, 0, sizeof(buf));
  }

  __int128 v56 = v67;
  __int128 v57 = v68;
  *(_OWORD *)BOOL v58 = v69[0];
  *(_OWORD *)&v58[12] = *(_OWORD *)((char *)v69 + 12);
  *(_OWORD *)&v55[32] = *(_OWORD *)&buf[32];
  *(_OWORD *)&v55[48] = v64;
  *(_OWORD *)&v55[64] = v65;
  *(_OWORD *)&v55[80] = v66;
  *(_OWORD *)__int128 v55 = *(_OWORD *)buf;
  *(_OWORD *)&v55[16] = *(_OWORD *)&buf[16];
  id v25 = sub_1007732CC((uint64_t)v55);
  if (v25)
  {
    char v26 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    -[NSMutableDictionary setValue:forKey:]( v26,  "setValue:forKey:",  sub_100F98F5C([v8 mecardAddress], 0x7D0u),  @"full_address");
    -[NSMutableDictionary setValue:forKey:]( v26,  "setValue:forKey:",  -[NSMutableDictionary valueForKey:](v25, "valueForKey:", @"hunc"),  @"hunc");
    id v27 = -[NSMutableDictionary valueForKey:](v25, "valueForKey:", @"vunc");
    if (v27) {
      -[NSMutableDictionary setValue:forKey:](v26, "setValue:forKey:", v27, @"vunc");
    }
    -[NSMutableDictionary setValue:forKey:]( v26,  "setValue:forKey:",  -[NSMutableDictionary valueForKey:](v25, "valueForKey:", @"confidence"),  @"confidence");
    id v23 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    -[NSMutableDictionary setValue:forKey:](v23, "setValue:forKey:", v25, @"location");
    -[NSMutableDictionary setValue:forKey:](v23, "setValue:forKey:", v26, @"address");
    if (a2) {
      *(_DWORD *)(a2 + 1104) = 1;
    }
    *(_DWORD *)uint64_t buf = 115;
    *(_DWORD *)&uint8_t buf[8] = 1;
    *(_DWORD *)&_BYTE buf[32] = 0;
    __int128 v53 = 0LL;
    v54[0] = 0LL;
    __int128 v52 = 0LL;
    uint64_t v47 = &v52;
    char v48 = 0;
    __int128 v52 = operator new(0x28uLL);
    __int128 v53 = v52;
    v54[0] = v52 + 40;
    __int128 v53 = (_BYTE *)sub_100783D5C((uint64_t)v54, (uint64_t)buf, (uint64_t)&buf[40], (uint64_t)v52);
    sub_10043AFF4((uint64_t)&buf[8]);
    uint64_t v28 = *(void **)(a1 + 136);
    memset(v50, 0, sizeof(v50));
    sub_10043BC44(v50, (uint64_t)v52, (uint64_t)v53, 0xCCCCCCCCCCCCCCCDLL * ((v53 - v52) >> 3));
    [v28 setMeasurements:sub_100435878(v50)];
    *(void *)uint64_t buf = v50;
    sub_10043B844((void ***)buf);
    if (qword_101934890 != -1) {
      dispatch_once(&qword_101934890, &stru_10188BAB8);
    }
    uint64_t v29 = (os_log_s *)qword_101934898;
    if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_DEFAULT))
    {
      __int16 v30 = &v47;
      sub_1010DDBC0(&v47, off_10188BAD8[(void)[*(id *)(a1 + 160) userType]]);
      if (v49 < 0) {
        __int16 v30 = v47;
      }
      sub_1010DDBC0(__p, off_10188BB00[(void)[*(id *)(a1 + 160) placeType]]);
      if (v46 >= 0) {
        __int16 v31 = __p;
      }
      else {
        __int16 v31 = (void **)__p[0];
      }
      id v32 = objc_msgSend(objc_msgSend(v8, "mecardAddress"), "UTF8String");
      id v33 = objc_msgSend(objc_msgSend(v8, "name"), "UTF8String");
      *(_DWORD *)uint64_t buf = 68290051;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&buf[18] = 2081;
      *(void *)&buf[20] = v30;
      *(_WORD *)&_BYTE buf[28] = 2082;
      *(void *)&buf[30] = v31;
      *(_WORD *)&buf[38] = 2081;
      *(void *)&buf[40] = v32;
      LOWORD(v64) = 2081;
      *(void *)((char *)&v64 + 2) = v33;
      _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#ADR,createCallerLocationDict,created caller location dict, label:%{private, locati on:escape_only}s, placeType:%{public, location:escape_only}s, mecardaddress:%{private, location:escape_o nly}s, name:%{private, location:escape_only}s}",  buf,  0x3Au);
      if (v46 < 0) {
        operator delete(__p[0]);
      }
      if (v49 < 0) {
        operator delete(v47);
      }
    }

    *(void *)uint64_t buf = &v52;
    sub_10043B844((void ***)buf);
  }

  else
  {
    if (qword_101934890 != -1) {
      dispatch_once(&qword_101934890, &stru_10188BAB8);
    }
    __int16 v34 = (os_log_s *)qword_101934898;
    if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_ERROR,  "#ADR,createCallerLocationDict,failed to create location dict",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934890 != -1) {
        dispatch_once(&qword_101934890, &stru_10188BAB8);
      }
      LOWORD(v52) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934898,  16LL,  "#ADR,createCallerLocationDict,failed to create location dict",  &v52,  2);
      double v44 = (uint8_t *)v43;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "NSDictionary *CLEmergencyADR::createCallerLocationDict(Emergency::CLEmergencySessionReport *) const",  "%s\n",  v43);
      if (v44 != buf) {
        free(v44);
      }
    }

    if (a2) {
      *(_DWORD *)(a2 + 1104) = 2;
    }
    *(_DWORD *)uint64_t buf = 115;
    *(_DWORD *)&uint8_t buf[8] = 2;
    *(_DWORD *)&_BYTE buf[32] = 0;
    __int128 v53 = 0LL;
    v54[0] = 0LL;
    __int128 v52 = 0LL;
    uint64_t v47 = &v52;
    char v48 = 0;
    __int128 v52 = operator new(0x28uLL);
    __int128 v53 = v52;
    v54[0] = v52 + 40;
    __int128 v53 = (_BYTE *)sub_100783D5C((uint64_t)v54, (uint64_t)buf, (uint64_t)&buf[40], (uint64_t)v52);
    sub_10043AFF4((uint64_t)&buf[8]);
    id v35 = *(void **)(a1 + 136);
    memset(v51, 0, sizeof(v51));
    sub_10043BC44(v51, (uint64_t)v52, (uint64_t)v53, 0xCCCCCCCCCCCCCCCDLL * ((v53 - v52) >> 3));
    [v35 setMeasurements:sub_100435878(v51)];
    *(void *)uint64_t buf = v51;
    sub_10043B844((void ***)buf);
    *(void *)uint64_t buf = &v52;
    sub_10043B844((void ***)buf);
    id v23 = 0LL;
  }

  __int16 v36 = v60;
  if (v60)
  {
    p_shared_owners = (unint64_t *)&v60->__shared_owners_;
    do
      unint64_t v38 = __ldaxr(p_shared_owners);
    while (__stlxr(v38 - 1, p_shared_owners));
    if (!v38)
    {
      ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
      std::__shared_weak_count::__release_weak(v36);
    }
  }

  return v23;
}

void sub_100EF1824(_Unwind_Exception *a1)
{
}

NSMutableDictionary *sub_100EF195C(uint64_t a1, uint64_t a2, char a3)
{
  *(_DWORD *)uint64_t buf = a2;
  uint64_t v4 = *(void *)(a1 + 64);
  if (!v4) {
    sub_100008BDC();
  }
  id v7 = (unsigned int *)(*(uint64_t (**)(uint64_t, uint8_t *))(*(void *)v4 + 48LL))(v4, buf);
  uint64_t v8 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  -[NSMutableDictionary setValue:forKey:]( v8,  "setValue:forKey:",  +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", a2),  @"sim");
  -[NSMutableDictionary setValue:forKey:]( v8,  "setValue:forKey:",  +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *v7),  @"rat");
  uint64_t v9 = *(void *)(a1 + 32);
  if (!v9) {
    sub_100008BDC();
  }
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 48LL))(v9);
  sub_1010DDBC0(__p, "carrier");
  uint64_t v11 = sub_100757034(v10, a2, (uint64_t *)__p);
  else {
    std::string __dst = *(std::string *)(v11 + 4);
  }
  if (v45 < 0) {
    operator delete(__p[0]);
  }
  std::string::size_type size = __dst.__r_.__value_.__s.__size_;
  signed __int8 v13 = __dst.__r_.__value_.__s.__size_;
  if ((__dst.__r_.__value_.__s.__size_ & 0x80u) != 0) {
    std::string::size_type size = __dst.__r_.__value_.__l.__size_;
  }
  if (!size)
  {
    std::string::assign(&__dst, "Unavailable");
    signed __int8 v13 = __dst.__r_.__value_.__s.__size_;
  }

  if (v13 >= 0) {
    p_dst = &__dst;
  }
  else {
    p_dst = (std::string *)__dst.__r_.__value_.__r.__words[0];
  }
  -[NSMutableDictionary setValue:forKey:]( v8,  "setValue:forKey:",  +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", p_dst),  @"sim_bundle_id");
  uint64_t v15 = *(void *)(a1 + 32);
  if (!v15) {
    sub_100008BDC();
  }
  uint64_t v16 = (*(uint64_t (**)(uint64_t))(*(void *)v15 + 48LL))(v15);
  sub_1010DDBC0(v41, "operator");
  uint64_t v17 = sub_100757034(v16, a2, (uint64_t *)v41);
  else {
    std::string v43 = *(std::string *)(v17 + 4);
  }
  if (v42 < 0) {
    operator delete(v41[0]);
  }
  std::string::size_type v18 = v43.__r_.__value_.__s.__size_;
  signed __int8 v19 = v43.__r_.__value_.__s.__size_;
  if ((v43.__r_.__value_.__s.__size_ & 0x80u) != 0) {
    std::string::size_type v18 = v43.__r_.__value_.__l.__size_;
  }
  if (!v18)
  {
    std::string::assign(&v43, "Unavailable");
    signed __int8 v19 = v43.__r_.__value_.__s.__size_;
  }

  if (v19 >= 0) {
    id v20 = &v43;
  }
  else {
    id v20 = (std::string *)v43.__r_.__value_.__r.__words[0];
  }
  -[NSMutableDictionary setValue:forKey:]( v8,  "setValue:forKey:",  +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v20),  @"operator_bundle_id");
  HIDWORD(v39) = a2;
  id v21 = (__CFString *)sub_100BF5BD8();
  -[NSMutableDictionary setValue:forKey:](v8, "setValue:forKey:", v21, @"sim_country");
  id v22 = (__CFString *)sub_100BF5BD8();
  -[NSMutableDictionary setValue:forKey:](v8, "setValue:forKey:", v22, @"operator_country");
  sub_1004F2598();
  uint64_t v23 = sub_1004F5C4C();
  -[NSMutableDictionary setValue:forKey:]( v8,  "setValue:forKey:",  +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v23),  @"release_type");
  sub_1004F2598();
  sub_1004F6370((uint64_t)buf);
  if (v51 >= 0) {
    uint64_t v24 = buf;
  }
  else {
    uint64_t v24 = *(uint8_t **)buf;
  }
  id v25 = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v24);
  if (SHIBYTE(v51) < 0) {
    operator delete(*(void **)buf);
  }
  -[NSMutableDictionary setValue:forKey:](v8, "setValue:forKey:", v25, @"product_type");
  if ((a3 & 1) != 0)
  {
    LODWORD(v26) = 2;
  }

  else
  {
    -[NSMutableDictionary setValue:forKey:]( v8,  "setValue:forKey:",  +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", sub_100BF294C(*(unsigned int *)(a1 + 148))),  @"trigger_type");
    id v27 = *(void **)(a1 + 160);
    if (v27)
    {
      if ([v27 placemark]) {
        uint64_t v26 = 1LL;
      }
      else {
        uint64_t v26 = 2LL;
      }
    }

    else
    {
      uint64_t v26 = 2LL;
    }

    -[NSMutableDictionary setValue:forKey:]( v8,  "setValue:forKey:",  +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v26),  @"dsa_availability");
    -[NSMutableDictionary setValue:forKey:]( v8,  "setValue:forKey:",  +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(_DWORD *)(a1 + 152) > 1),  @"did_dsa_change_within_call");
  }

  if (qword_101934890 != -1) {
    dispatch_once(&qword_101934890, &stru_10188BAB8);
  }
  uint64_t v28 = (os_log_s *)qword_101934898;
  if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_DEFAULT))
  {
    LODWORD(v39) = v26;
    int v29 = v23;
    unsigned int v30 = *v7;
    if ((__dst.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      __int16 v31 = &__dst;
    }
    else {
      __int16 v31 = (std::string *)__dst.__r_.__value_.__r.__words[0];
    }
    id v32 = -[__CFString UTF8String](v21, "UTF8String", v39);
    if ((v43.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      id v33 = &v43;
    }
    else {
      id v33 = (std::string *)v43.__r_.__value_.__r.__words[0];
    }
    id v34 = -[__CFString UTF8String](v22, "UTF8String");
    id v35 = -[NSString UTF8String](v25, "UTF8String");
    int v36 = *(_DWORD *)(a1 + 148);
    int v37 = *(_DWORD *)(a1 + 152);
    *(_DWORD *)uint64_t buf = 68291843;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v48 = 2082;
    char v49 = "";
    __int16 v50 = 1026;
    int v51 = HIDWORD(v40);
    __int16 v52 = 1026;
    unsigned int v53 = v30;
    __int16 v54 = 2082;
    __int128 v55 = v31;
    __int16 v56 = 2082;
    id v57 = v32;
    __int16 v58 = 2082;
    uint64_t v59 = v33;
    __int16 v60 = 2082;
    id v61 = v34;
    __int16 v62 = 1026;
    int v63 = v29;
    __int16 v64 = 2081;
    __int128 v65 = v35;
    __int16 v66 = 1026;
    int v67 = v36;
    __int16 v68 = 1025;
    int v69 = v40;
    __int16 v70 = 1025;
    int v71 = v37;
    _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#ADR,createAdrInternalDict, sim:%{public}d, rat:%{public}d, sim_bundle_id:%{p ublic, location:escape_only}s, sim_country:%{public, location:escape_only}s, operator_bundle_id:%{public, location:escape_only}s, operator_country:%{public, location:escape_only}s, release_type:%{public}d, prod uct_type:%{private, location:escape_only}s, trigger_type:%{public}d, dsa_availability:%{private}d, did _dsa_change_within_call_count:%{private}d}",  buf,  0x68u);
  }

  return v8;
}

void sub_100EF1ED4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21, char a22, uint64_t a23, int a24, __int16 a25, char a26, char a27, void *a28, uint64_t a29, int a30, __int16 a31, char a32, char a33, uint64_t a34, void *a35, uint64_t a36, int a37, __int16 a38, char a39, char a40)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a33 < 0) {
    operator delete(a28);
  }
  _Unwind_Resume(exception_object);
}

NSMutableDictionary *sub_100EF1F74( uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = *((unsigned __int8 *)a2 + 23);
  if ((v7 & 0x80u) != 0LL) {
    uint64_t v7 = a2[1];
  }
  if (a7 && a6 && a5 && a4 && v7)
  {
    unint64_t v34 = sub_100775134();
    sub_100775158(*(_DWORD *)(a1 + 144), __p);
    id v15 = [a5 base64EncodedStringWithOptions:0];
    uint64_t v16 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    else {
      uint64_t v17 = (uint64_t *)*a2;
    }
    -[NSMutableDictionary setValue:forKey:]( v16,  "setValue:forKey:",  +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v17),  @"call_ID");
    -[NSMutableDictionary setValue:forKey:]( v16,  "setValue:forKey:",  +[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v34),  @"session_start_time");
    if (v36 >= 0) {
      std::string::size_type v18 = __p;
    }
    else {
      std::string::size_type v18 = (void **)__p[0];
    }
    -[NSMutableDictionary setValue:forKey:]( v16,  "setValue:forKey:",  +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v18),  @"medium");
    -[NSMutableDictionary setValue:forKey:](v16, "setValue:forKey:", @"1", @"data_version");
    -[NSMutableDictionary setValue:forKey:]( v16,  "setValue:forKey:",  +[NSNumber numberWithUnsignedLongLong:](&OBJC_CLASS___NSNumber, "numberWithUnsignedLongLong:", a3),  @"encrypt_time");
    -[NSMutableDictionary setValue:forKey:](v16, "setValue:forKey:", a4, @"location");
    -[NSMutableDictionary setValue:forKey:](v16, "setValue:forKey:", v15, @"data");
    -[NSMutableDictionary setValue:forKey:](v16, "setValue:forKey:", a6, @"keys");
    -[NSMutableDictionary setValue:forKey:](v16, "setValue:forKey:", a7, @"internal");
    double v19 = *(double *)(a1 + 168);
    if (v19 <= 0.0 || v19 > 10.0)
    {
      if (v19 <= 10.0 || v19 > 30.0)
      {
        if (v19 <= 30.0 || v19 > 60.0)
        {
          if (v19 > 100.0 || v19 <= 60.0) {
            id v20 = @"Unknown";
          }
          else {
            id v20 = @"61-100%";
          }
        }

        else
        {
          id v20 = @"31-60%";
        }
      }

      else
      {
        id v20 = @"11-30%";
      }
    }

    else
    {
      id v20 = @"10% or less";
    }

    -[NSMutableDictionary setValue:forKey:](v16, "setValue:forKey:", v20, @"battery_level");
    if (qword_101934890 != -1) {
      dispatch_once(&qword_101934890, &stru_10188BAB8);
    }
    uint64_t v23 = (os_log_s *)qword_101934898;
    if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_DEFAULT))
    {
      int v24 = *((char *)a2 + 23);
      id v25 = (uint64_t *)*a2;
      int v26 = v36;
      id v27 = (void **)__p[0];
      id v28 = -[__CFString UTF8String](v20, "UTF8String");
      int v29 = __p;
      *(_DWORD *)uint64_t buf = 68290307;
      if (v26 < 0) {
        int v29 = v27;
      }
      int v38 = 0;
      if (v24 >= 0) {
        unsigned int v30 = a2;
      }
      else {
        unsigned int v30 = v25;
      }
      __int16 v39 = 2082;
      uint64_t v40 = "";
      __int16 v41 = 2081;
      char v42 = v30;
      __int16 v43 = 2050;
      unint64_t v44 = v34;
      __int16 v45 = 2082;
      char v46 = v29;
      __int16 v47 = 2050;
      uint64_t v48 = a3;
      __int16 v49 = 2082;
      id v50 = v28;
      _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#ADR,createAdrDict, phone number:%{private, location:escape_only}s, session start time:%{public}lld, medium:%{public, location:escape_only}s, encrypt time:%{public}lld, battery leve l:%{public, location:escape_only}s}",  buf,  0x44u);
    }

    if (v36 < 0) {
      operator delete(__p[0]);
    }
  }

  else
  {
    if (qword_101934890 != -1) {
      dispatch_once(&qword_101934890, &stru_10188BAB8);
    }
    id v21 = (os_log_s *)qword_101934898;
    if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_ERROR,  "#ADR,createAdrDict,missing required info for forming ADR POST dict",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934890 != -1) {
        dispatch_once(&qword_101934890, &stru_10188BAB8);
      }
      LOWORD(__p[0]) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934898,  16LL,  "#ADR,createAdrDict,missing required info for forming ADR POST dict",  __p,  2);
      id v33 = (uint8_t *)v32;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "NSDictionary *CLEmergencyADR::createAdrDict(const std::string &, CFAbsoluteTime, uint64_t, NSDictionary *, NSDat a *, NSArray *, NSDictionary *) const",  "%s\n",  v32);
      if (v33 != buf) {
        free(v33);
      }
    }

    return 0LL;
  }

  return v16;
}

void sub_100EF2448( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_100EF2478(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_100775488(a3);
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)(a1 + 32);
    if (!v11) {
      sub_100008BDC();
    }
    uint64_t v12 = (int *)(*(uint64_t (**)(uint64_t))(*(void *)v11 + 48LL))(v11);
    signed __int8 v13 = sub_100756E48(v12);
    if (*((char *)v13 + 111) < 0)
    {
      sub_1010DD48C(__p, (void *)v13[11], v13[12]);
    }

    else
    {
      *(_OWORD *)std::stringbuf::string_type __p = *(_OWORD *)(v13 + 11);
      uint64_t v36 = v13[13];
    }

    if (v36 >= 0) {
      uint64_t v16 = __p;
    }
    else {
      uint64_t v16 = (void **)__p[0];
    }
    unint64_t v34 = +[NSMutableURLRequest requestWithURL:]( &OBJC_CLASS___NSMutableURLRequest,  "requestWithURL:",  +[NSURL URLWithString:]( &OBJC_CLASS___NSURL,  "URLWithString:",  +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v16)));
    -[NSMutableURLRequest setHTTPMethod:](v34, "setHTTPMethod:", @"POST");
    sub_100CCC238(a1 + 72, (uint64_t)v10, (uint64_t)&v34);
    if (a4) {
      ++*(_DWORD *)(a4 + 1092);
    }
    uint64_t v17 = *(void *)(a1 + 104);
    BOOL v15 = v17 != 0;
    if (!v17)
    {
      if (qword_101934890 != -1) {
        dispatch_once(&qword_101934890, &stru_10188BAB8);
      }
      id v27 = (os_log_s *)qword_101934898;
      if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_FAULT, "#ADR,postADR,missing NSURLSession", buf, 2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934890 != -1) {
          dispatch_once(&qword_101934890, &stru_10188BAB8);
        }
        __int16 v33 = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934898,  17LL,  "#ADR,postADR,missing NSURLSession",  &v33,  2);
        int v29 = (uint8_t *)v28;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLEmergencyADR::postAdr(NumberType, NSDictionary *, Emergency::CLEmergencySessionReport *, SendADRResponse) const",  "%s\n",  v28);
        if (v29 != buf) {
          free(v29);
        }
      }

      goto LABEL_38;
    }

    if (qword_101934890 != -1) {
      dispatch_once(&qword_101934890, &stru_10188BAB8);
    }
    std::string::size_type v18 = (os_log_s *)qword_101934898;
    if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_DEFAULT))
    {
      int v19 = SHIBYTE(v36);
      id v20 = (void **)__p[0];
      id v21 = -[NSData length](v10, "length");
      *(_DWORD *)uint64_t buf = 68289539;
      id v22 = __p;
      if (v19 < 0) {
        id v22 = v20;
      }
      int v42 = 0;
      __int16 v43 = 2082;
      unint64_t v44 = "";
      __int16 v45 = 2081;
      char v46 = v22;
      __int16 v47 = 2049;
      id v48 = v21;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#ADR,postADR,sending ADR POST, URL:%{private, location:escape_only}s, length:%{private}lld}",  buf,  0x26u);
    }

    uint64_t v23 = *(void **)(a1 + 104);
    int v24 = v34;
    v37[0] = _NSConcreteStackBlock;
    v37[1] = 3321888768LL;
    void v37[2] = sub_100EF2B18;
    v37[3] = &unk_10187D6F0;
    v37[4] = a1;
    int v40 = a2;
    id v25 = v38;
    sub_10001A504((uint64_t)v38, a5);
    objc_msgSend(objc_msgSend(v23, "uploadTaskWithRequest:fromData:completionHandler:", v24, v10, v37), "resume");
    if (v39 == v38)
    {
      uint64_t v26 = 4LL;
    }

    else
    {
      if (!v39) {
        goto LABEL_38;
      }
      uint64_t v26 = 5LL;
      id v25 = v39;
    }

    (*(void (**)(void *))(*v25 + 8 * v26))(v25);
LABEL_38:
    if (SHIBYTE(v36) < 0) {
      operator delete(__p[0]);
    }
    return v15;
  }

  if (qword_101934890 != -1) {
    dispatch_once(&qword_101934890, &stru_10188BAB8);
  }
  id v14 = (os_log_s *)qword_101934898;
  if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_ERROR,  "#ADR,postAdr,failed to serialize ADR dict into JSON",  buf,  2u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934890 != -1) {
      dispatch_once(&qword_101934890, &stru_10188BAB8);
    }
    LOWORD(__p[0]) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934898,  16LL,  "#ADR,postAdr,failed to serialize ADR dict into JSON",  __p,  2);
    id v32 = (uint8_t *)v31;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLEmergencyADR::postAdr(NumberType, NSDictionary *, Emergency::CLEmergencySessionReport *, SendADRResponse) const",  "%s\n",  v31);
    if (v32 != buf) {
      free(v32);
    }
  }

  return 0LL;
}

void sub_100EF2998( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100EF2A08(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (!v2) {
    sub_100008BDC();
  }
  unsigned int v4 = *(_DWORD *)(a1 + 148);
  BOOL v5 = v4 > 0x13;
  unsigned int v6 = (0x68E80u >> v4) & 1;
  if (v5) {
    return 1LL;
  }
  else {
    return v6;
  }
}

void sub_100EF2A6C(uint64_t a1)
{
  __asm { BR              X10 }

void *sub_100EF2AA0( int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return sub_1010DDBC0(v12, "Dialer");
}

void *sub_100EF2B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (dispatch_queue_s *)objc_msgSend(objc_msgSend(**(id **)(a1 + 32), "silo"), "queue");
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3321888768LL;
  v13[2] = sub_100EF2C18;
  id v13[3] = &unk_10187D6C0;
  int v16 = *(_DWORD *)(a1 + 72);
  sub_10001A504((uint64_t)v14, a1 + 40);
  _DWORD v13[4] = a3;
  v13[5] = a4;
  dispatch_async(v7, v13);
  uint64_t result = v15;
  if (v15 == v14)
  {
    uint64_t v12 = 4LL;
    uint64_t result = v14;
  }

  else
  {
    if (!v15) {
      return result;
    }
    uint64_t v12 = 5LL;
  }

  return (void *)(*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*result + 8 * v12))( result,  v8,  v9,  v10);
}

uint64_t sub_100EF2C18(uint64_t a1)
{
  if (qword_101934890 != -1) {
    dispatch_once(&qword_101934890, &stru_10188BAB8);
  }
  uint64_t v2 = (os_log_s *)qword_101934898;
  if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_DEFAULT))
  {
    sub_100762530(*(_DWORD *)(a1 + 80), __p);
    uint64_t v3 = v14 >= 0 ? __p : (void **)__p[0];
    *(_DWORD *)uint64_t buf = 136446210;
    *(void *)&uint8_t buf[4] = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "#ADR,postADR,received response for %{public}s number",  buf,  0xCu);
    if (v14 < 0) {
      operator delete(__p[0]);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934890 != -1) {
      dispatch_once(&qword_101934890, &stru_10188BAB8);
    }
    uint64_t v5 = qword_101934898;
    sub_100762530(*(_DWORD *)(a1 + 80), buf);
    if (v10 >= 0) {
      unsigned int v6 = buf;
    }
    else {
      unsigned int v6 = *(_BYTE **)buf;
    }
    int v11 = 136446210;
    uint64_t v12 = v6;
    _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v5,  0LL,  "#ADR,postADR,received response for %{public}s number",  &v11,  12);
    uint64_t v8 = v7;
    if (v10 < 0) {
      operator delete(*(void **)buf);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLEmergencyADR::postAdr(NumberType, NSDictionary *, Emergency::CLEmergencySessionReport *, SendADRResponse) c onst_block_invoke",  "%s\n",  v8);
  }

  return sub_100CCC594(a1 + 48, *(_DWORD *)(a1 + 80), *(void *)(a1 + 32), *(void *)(a1 + 40));
}

char *sub_100EF2E38(char *__dst, uint64_t a2)
{
  if (byte_1019A3DCF < 0)
  {
    sub_1010DD48C(__dst, (void *)xmmword_1019A3DB8, *((unint64_t *)&xmmword_1019A3DB8 + 1));
  }

  else
  {
    __int128 v4 = xmmword_1019A3DB8;
    *((void *)__dst + 2) = unk_1019A3DC8;
    *(_OWORD *)std::string __dst = v4;
  }

  if (byte_1019A3DCF < 0)
  {
    sub_1010DD48C(__dst + 24, (void *)xmmword_1019A3DB8, *((unint64_t *)&xmmword_1019A3DB8 + 1));
  }

  else
  {
    *(_OWORD *)(__dst + 24) = xmmword_1019A3DB8;
    *((void *)__dst + 5) = unk_1019A3DC8;
  }

  *((_OWORD *)__dst + 9) = 0u;
  *((void *)__dst + 16) = 0LL;
  *((_OWORD *)__dst + 6) = 0u;
  *((_OWORD *)__dst + 7) = 0u;
  *((_OWORD *)__dst + 4) = 0u;
  *((_OWORD *)__dst + 5) = 0u;
  *((_OWORD *)__dst + 3) = 0u;
  *((_DWORD *)__dst + 34) = 1065353216;
  *((_OWORD *)__dst + 10) = 0u;
  *((_DWORD *)__dst + 44) = 1065353216;
  if (a2)
  {
    *((void *)__dst + _Block_object_dispose((const void *)(v1 - 112), 8) = a2;
    if (qword_101934890 != -1) {
      dispatch_once(&qword_101934890, &stru_10188BAB8);
    }
    uint64_t v5 = (os_log_s *)qword_101934898;
    if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "#ADR,EmergencyContactsMetric,medicalID unavailable or emergency contacts within medicalID unavailable",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934890 != -1) {
        dispatch_once(&qword_101934890, &stru_10188BAB8);
      }
      v12[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934898,  0LL,  "#ADR,EmergencyContactsMetric,medicalID unavailable or emergency contacts within medicalID unavailable",  v12,  2);
      uint64_t v9 = (uint8_t *)v8;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLEmergencyADR::EmergencyContactsMetric::EmergencyContactsMetric(CLEmergencyADR *)",  "%s\n",  v8);
      if (v9 != buf) {
        free(v9);
      }
    }

    *((_DWORD *)__dst + 12) = 0;
    sub_100EF31FC(__dst);
  }

  else
  {
    if (qword_101934890 != -1) {
      dispatch_once(&qword_101934890, &stru_10188BAB8);
    }
    unsigned int v6 = (os_log_s *)qword_101934898;
    if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_ERROR,  "#ADR,EmergencyContactsMetric,ADR pointer is null",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934890 != -1) {
        dispatch_once(&qword_101934890, &stru_10188BAB8);
      }
      v12[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934898,  16LL,  "#ADR,EmergencyContactsMetric,ADR pointer is null",  v12,  2);
      int v11 = (uint8_t *)v10;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "CLEmergencyADR::EmergencyContactsMetric::EmergencyContactsMetric(CLEmergencyADR *)",  "%s\n",  v10);
      if (v11 != buf) {
        free(v11);
      }
    }
  }

  return __dst;
}

void sub_100EF31AC(_Unwind_Exception *a1)
{
}

void sub_100EF31FC(uint64_t a1)
{
  *(_DWORD *)(a1 + 52) = 0;
  *(_DWORD *)(a1 + 56) = 0;
  uint64_t v2 = *(uint64_t **)(a1 + 120);
  if (v2)
  {
    while (1)
    {
      if (*((char *)v2 + 39) < 0)
      {
        sub_1010DD48C(__p, (void *)v2[2], v2[3]);
      }

      else
      {
        *(_OWORD *)std::stringbuf::string_type __p = *((_OWORD *)v2 + 1);
        uint64_t v19 = v2[4];
      }

      if (*((_DWORD *)v2 + 10) == 1) {
        break;
      }
      v17[0] = (__int128 *)__p;
LABEL_9:
      if (SHIBYTE(v19) < 0) {
        operator delete(__p[0]);
      }
      uint64_t v2 = (uint64_t *)*v2;
      if (!v2) {
        goto LABEL_12;
      }
    }

    ++*(_DWORD *)(a1 + 52);
LABEL_8:
    ++*(_DWORD *)(a1 + 56);
    goto LABEL_9;
  }

void sub_100EF3620( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20, int a21, __int16 a22, char a23, char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100EF3644(uint64_t a1)
{
  *(void *)(a1 + 8_Block_object_dispose((const void *)(v1 - 112), 8) = 0LL;

  *(void *)(a1 + 96) = 0LL;
  *(void *)(a1 + 80) = 0LL;
  sub_100EF36C4(a1);
  sub_10004AD90(a1 + 144);
  sub_10004AD90(a1 + 104);
  return a1;
}

void sub_100EF36C4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 72);
  if (v2)
  {
    [v2 invalidate];

    *(void *)(a1 + 72) = 0LL;
    if (qword_101934890 != -1) {
      dispatch_once(&qword_101934890, &stru_10188BAB8);
    }
    uint64_t v3 = (os_log_s *)qword_101934898;
    if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "#ADR,clearIDSQueryTimeout,timer cleared",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934890 != -1) {
        dispatch_once(&qword_101934890, &stru_10188BAB8);
      }
      LOWORD(v7[0]) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934898,  0LL,  "#ADR,clearIDSQueryTimeout,timer cleared",  v7,  2,  v7[0]);
LABEL_19:
      uint64_t v6 = (uint8_t *)v4;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLEmergencyADR::EmergencyContactsMetric::clearIDSQueryTimeout()",  "%s\n",  v4);
      if (v6 != buf) {
        free(v6);
      }
    }
  }

  else
  {
    if (qword_101934890 != -1) {
      dispatch_once(&qword_101934890, &stru_10188BAB8);
    }
    uint64_t v5 = (os_log_s *)qword_101934898;
    if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "#ADR,clearIDSQueryTimeout,no timer exists",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934890 != -1) {
        dispatch_once(&qword_101934890, &stru_10188BAB8);
      }
      LOWORD(v7[0]) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934898,  0LL,  "#ADR,clearIDSQueryTimeout,no timer exists",  v7,  2,  v7[0]);
      goto LABEL_19;
    }
  }

uint64_t sub_100EF3938(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(a1 + 120);
  if (!v1) {
    return 1LL;
  }
  uint64_t v2 = a1 + 144;
  while (1)
  {
    if (*((char *)v1 + 39) < 0)
    {
      sub_1010DD48C(__p, (void *)v1[2], v1[3]);
    }

    else
    {
      *(_OWORD *)std::stringbuf::string_type __p = *((_OWORD *)v1 + 1);
      uint64_t v5 = v1[4];
    }

    if (!*((_DWORD *)v1 + 10)) {
      break;
    }
    uint64_t v6 = __p;
    if (SHIBYTE(v5) < 0) {
      operator delete(__p[0]);
    }
    uint64_t v1 = (uint64_t *)*v1;
    if (!v1) {
      return 1LL;
    }
  }

  if (SHIBYTE(v5) < 0) {
    operator delete(__p[0]);
  }
  return 0LL;
}

void sub_100EF3A04( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100EF3A20(uint64_t a1)
{
}

void sub_100EF3A2C(id a1)
{
  qword_101934898 = (uint64_t)os_log_create("com.apple.locationd.Position", "Emergency");
}

void *sub_100EF3A58(uint64_t a1, unsigned __int8 *a2, uint64_t a3, __int128 **a4)
{
  uint64_t v8 = (void *)(a1 + 24);
  unint64_t v9 = sub_10004B1A4(a1 + 24, (uint64_t)a2);
  unint64_t v10 = v9;
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    unint64_t v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v4 = v9;
      if (v9 >= v11) {
        unint64_t v4 = v9 % v11;
      }
    }

    else
    {
      unint64_t v4 = (v11 - 1) & v9;
    }

    char v14 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v14)
    {
      for (uint64_t i = *v14; i; uint64_t i = *(void **)i)
      {
        unint64_t v16 = *((void *)i + 1);
        if (v16 == v10)
        {
        }

        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11) {
              v16 %= v11;
            }
          }

          else
          {
            v16 &= v11 - 1;
          }

          if (v16 != v4) {
            break;
          }
        }
      }
    }
  }

  uint64_t v17 = (void *)(a1 + 16);
  uint64_t i = operator new(0x30uLL);
  *(void *)uint64_t i = 0LL;
  *((void *)i + 1) = v10;
  std::string::size_type v18 = *a4;
  __int128 v19 = **a4;
  *((void *)i + 4) = *((void *)*a4 + 2);
  *((_OWORD *)i + 1) = v19;
  *((void *)v18 + 1) = 0LL;
  *((void *)v18 + 2) = 0LL;
  *(void *)std::string::size_type v18 = 0LL;
  *((_DWORD *)i + 10) = 0;
  float v20 = (float)(unint64_t)(*(void *)(a1 + 24) + 1LL);
  float v21 = *(float *)(a1 + 32);
  if (!v11 || (float)(v21 * (float)v11) < v20)
  {
    BOOL v22 = 1LL;
    if (v11 >= 3) {
      BOOL v22 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v23 = v22 | (2 * v11);
    unint64_t v24 = vcvtps_u32_f32(v20 / v21);
    if (v23 <= v24) {
      size_t v25 = v24;
    }
    else {
      size_t v25 = v23;
    }
    sub_100019E10(a1, v25);
    unint64_t v11 = *(void *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11) {
        unint64_t v4 = v10 % v11;
      }
      else {
        unint64_t v4 = v10;
      }
    }

    else
    {
      unint64_t v4 = (v11 - 1) & v10;
    }
  }

  uint64_t v26 = *(void *)a1;
  id v27 = *(void **)(*(void *)a1 + 8 * v4);
  if (v27)
  {
    *(void *)uint64_t i = *v27;
LABEL_38:
    *id v27 = i;
    goto LABEL_39;
  }

  *(void *)uint64_t i = *v17;
  *uint64_t v17 = i;
  *(void *)(v26 + 8 * v4) = v17;
  if (*(void *)i)
  {
    unint64_t v28 = *(void *)(*(void *)i + 8LL);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v28 >= v11) {
        v28 %= v11;
      }
    }

    else
    {
      v28 &= v11 - 1;
    }

    id v27 = (void *)(*(void *)a1 + 8 * v28);
    goto LABEL_38;
  }

void sub_100EF3CC4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
}

unsigned __int8 *sub_100EF3CE0(uint64_t a1, unsigned __int8 *a2, uint64_t a3, __int128 **a4)
{
  uint64_t v8 = (void *)(a1 + 24);
  unint64_t v9 = sub_10004B1A4(a1 + 24, (uint64_t)a2);
  unint64_t v10 = v9;
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    unint64_t v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v4 = v9;
      if (v9 >= v11) {
        unint64_t v4 = v9 % v11;
      }
    }

    else
    {
      unint64_t v4 = (v11 - 1) & v9;
    }

    char v14 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v4);
    if (v14)
    {
      for (uint64_t i = *v14; i; uint64_t i = *(unsigned __int8 **)i)
      {
        unint64_t v16 = *((void *)i + 1);
        if (v16 == v10)
        {
          if ((sub_100022A24(a1 + 32, i + 16, a2) & 1) != 0) {
            return i;
          }
        }

        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11) {
              v16 %= v11;
            }
          }

          else
          {
            v16 &= v11 - 1;
          }

          if (v16 != v4) {
            break;
          }
        }
      }
    }
  }

  sub_100EF3F74(a1, v10, a4, (uint64_t)v26);
  float v17 = (float)(unint64_t)(*(void *)(a1 + 24) + 1LL);
  float v18 = *(float *)(a1 + 32);
  if (!v11 || (float)(v18 * (float)v11) < v17)
  {
    BOOL v19 = 1LL;
    if (v11 >= 3) {
      BOOL v19 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v20 = v19 | (2 * v11);
    unint64_t v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21) {
      size_t v22 = v21;
    }
    else {
      size_t v22 = v20;
    }
    sub_100019E10(a1, v22);
    unint64_t v11 = *(void *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11) {
        unint64_t v4 = v10 % v11;
      }
      else {
        unint64_t v4 = v10;
      }
    }

    else
    {
      unint64_t v4 = (v11 - 1) & v10;
    }
  }

  unint64_t v23 = *(void **)(*(void *)a1 + 8 * v4);
  if (v23)
  {
    *(void *)v26[0] = *v23;
    void *v23 = v26[0];
  }

  else
  {
    *(void *)v26[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v26[0];
    *(void *)(*(void *)a1 + 8 * v4) = a1 + 16;
    if (*(void *)v26[0])
    {
      unint64_t v24 = *(void *)(*(void *)v26[0] + 8LL);
      if ((v11 & (v11 - 1)) != 0)
      {
        if (v24 >= v11) {
          v24 %= v11;
        }
      }

      else
      {
        v24 &= v11 - 1;
      }

      *(void *)(*(void *)a1 + 8 * v24) = v26[0];
    }
  }

  uint64_t i = (unsigned __int8 *)v26[0];
  ++*v8;
  return i;
}

void sub_100EF3F50( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void **__p, uint64_t a13)
{
  if (__p) {
    sub_10004B64C((uint64_t)&a13, __p);
  }
  _Unwind_Resume(exception_object);
}

_BYTE *sub_100EF3F74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 **a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  uint64_t v8 = (char *)operator new(0x30uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + _Block_object_dispose((const void *)(v1 - 112), 8) = v7;
  *(_BYTE *)(a4 + 16) = 0;
  *(void *)uint64_t v8 = 0LL;
  *((void *)v8 + 1) = a2;
  uint64_t result = v8 + 16;
  unint64_t v10 = *a3;
  if (*((char *)*a3 + 23) < 0)
  {
    uint64_t result = sub_1010DD48C(result, *(void **)v10, *((void *)v10 + 1));
  }

  else
  {
    __int128 v11 = *v10;
    *((void *)v8 + 4) = *((void *)v10 + 2);
    *(_OWORD *)uint64_t result = v11;
  }

  *((_DWORD *)v8 + 10) = 0;
  *(_BYTE *)(a4 + 16) = 1;
  return result;
}

void sub_100EF4000(_Unwind_Exception *a1)
{
  void *v1 = 0LL;
  sub_10004B64C(v3, v2);
  _Unwind_Resume(a1);
}

uint64_t sub_100EF401C()
{
  return __cxa_atexit( (void (*)(void *))&std::string::~string,  &xmmword_1019A3DB8,  (void *)&_mh_execute_header);
}

void *sub_100EF4060(void *a1)
{
  *a1 = off_10188BB28;
  uint64_t v2 = a1 + 3;
  uint64_t v3 = a1 + 1;
  unint64_t v4 = operator new(8uLL);
  void *v4 = &off_1018379F0;
  sub_100413CB0(v3, (uint64_t)v4);
  uint64_t v5 = operator new(0x78uLL);
  sub_100E269FC((uint64_t)v5);
  sub_1004139B0(v2, (uint64_t)v5);
  uint64_t v6 = operator new(0x28uLL);
  sub_100AF8A60(v6);
  void *v6 = off_101876D40;
  sub_100EF42A8(a1 + 5, (uint64_t)v6);
  uint64_t v7 = operator new(8uLL);
  void *v7 = &off_10182E320;
  sub_100EF4368(a1 + 7, (uint64_t)v7);
  return a1;
}

void sub_100EF4138(_Unwind_Exception *a1)
{
}

void *sub_100EF4190@<X0>(void *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, void *a4@<X8>)
{
  if (*(_BYTE *)(a3 + 352)) {
    BOOL v4 = *(void *)(a3 + 328) == 2LL;
  }
  else {
    BOOL v4 = 0;
  }
  if (v4)
  {
    uint64_t v6 = result[7];
    uint64_t v5 = result[8];
  }

  else if (*(_DWORD *)(a2 + 8) == 5)
  {
    uint64_t v6 = result[1];
    uint64_t v5 = result[2];
  }

  else
  {
    uint64_t v6 = result[5];
    uint64_t v5 = result[6];
  }

  *a4 = v6;
  a4[1] = v5;
  if (v5)
  {
    uint64_t v7 = (unint64_t *)(v5 + 8);
    do
      unint64_t v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }

  return result;
}

uint64_t sub_100EF41E4@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(result + 16);
  *a2 = *(void *)(result + 8);
  a2[1] = v2;
  if (v2)
  {
    uint64_t v3 = (unint64_t *)(v2 + 8);
    do
      unint64_t v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }

  return result;
}

void *sub_100EF4208(void *a1)
{
  *a1 = off_10188BB28;
  uint64_t v2 = (uint64_t)(a1 + 1);
  sub_10000AE14((uint64_t)(a1 + 7));
  sub_10000AE14((uint64_t)(a1 + 5));
  sub_10000AE14((uint64_t)(a1 + 3));
  sub_10000AE14(v2);
  return a1;
}

void sub_100EF4258(void *a1)
{
  *a1 = off_10188BB28;
  uint64_t v2 = (uint64_t)(a1 + 1);
  sub_10000AE14((uint64_t)(a1 + 7));
  sub_10000AE14((uint64_t)(a1 + 5));
  sub_10000AE14((uint64_t)(a1 + 3));
  sub_10000AE14(v2);
  operator delete(a1);
}

void *sub_100EF42A8(void *a1, uint64_t a2)
{
  *a1 = a2;
  unint64_t v4 = operator new(0x20uLL);
  void *v4 = &off_10188BB80;
  v4[1] = 0LL;
  _DWORD v4[2] = 0LL;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_100EF42F0(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100EF4310(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_100EF4328(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }

  else
  {
    return 0LL;
  }

void *sub_100EF4368(void *a1, uint64_t a2)
{
  *a1 = a2;
  unint64_t v4 = operator new(0x20uLL);
  void *v4 = &off_10188BBF8;
  v4[1] = 0LL;
  _DWORD v4[2] = 0LL;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_100EF43B0(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100EF43D0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_100EF43E8(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }

  else
  {
    return 0LL;
  }

void *sub_100EF4428(void *a1, uint64_t a2)
{
  *a1 = off_10188BC70;
  a1[1] = a2;
  a1[2] = 0LL;
  sub_100AEB404(a1 + 3, "Traffic", a2);
  return a1;
}

void sub_100EF446C(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void *)(v1 + 16);
  *(void *)(v1 + 16) = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100EF4494(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = 0LL;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

id sub_100EF44B4(uint64_t a1, uint64_t a2)
{
  return [*(id *)(*(void *)(a1 + 16) + 16) register:*(void *)(*(void *)(a1 + 16) + 8) forNotification:a2 registrationInfo:0];
}

id sub_100EF44C8(uint64_t a1, uint64_t a2)
{
  return [*(id *)(*(void *)(a1 + 16) + 16) unregister:*(void *)(*(void *)(a1 + 16) + 8) forNotification:a2];
}

uint64_t sub_100EF44D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v6;
  uint64_t v6 = 0LL;
  uint64_t result = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v4;
  if (result)
  {
    (*(void (**)(uint64_t))(*(void *)result + 8LL))(result);
    uint64_t result = v6;
    uint64_t v6 = 0LL;
    if (result) {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
    }
  }

  *(void *)(a1 + 216) = a2;
  return result;
}

void sub_100EF4558(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10188BD08);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v10 = 1;
    uint64_t v7 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLPolicyProactiveExternal::onProactiveHarvestingProviderNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v7, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10188BD08);
    }
    unint64_t v8 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v12 = 0;
      __int16 v13 = 2082;
      char v14 = "";
      __int16 v15 = 2082;
      unint64_t v16 = "activity";
      __int16 v17 = 2050;
      uint64_t v18 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLPolicyProactiveExternal::onProactiveHarvestingProviderNotification, event:%{publi c, location:escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v10 = 0;
  }

  sub_100CFB5A0(*(void *)(a4 + 216), a1, *a2);
  if (v10) {
    os_activity_scope_leave(&state);
  }
}

void sub_100EF4720( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100EF4740(uint64_t a1)
{
  return sub_1008B1A38(a1 + 24);
}

uint64_t sub_100EF4748(uint64_t a1, BOOL *a2)
{
  uint64_t v3 = sub_1002A6FD4(v8, (uint64_t)@"ProactiveHarvesting", a2);
  uint64_t v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      unint64_t v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }

  return v3;
}

void sub_100EF47CC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100EF47E0(uint64_t a1, BOOL *a2)
{
  uint64_t v3 = sub_1002A6FD4(v8, (uint64_t)@"ProactiveHarvestingIntervalBypass", a2);
  uint64_t v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      unint64_t v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }

  return v3;
}

void sub_100EF4864( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100EF4878(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_1002F8DDC();
  return sub_1002A832C(v3, (uint64_t)@"LastProactiveTime", a2);
}

BOOL sub_100EF48A8(double a1)
{
  double v3 = a1;
  uint64_t v1 = sub_1002F8DDC();
  return sub_1002AC820(v1, @"LastProactiveTime", &v3);
}

BOOL sub_100EF48D8(uint64_t a1, void *a2)
{
  id v3 = objc_msgSend( +[GEOCountryConfiguration sharedConfiguration](GEOCountryConfiguration, "sharedConfiguration"),  "defaultForKey:defaultValue:",  @"CLProactiveBatteryLevel",  0);
  id v4 = v3;
  if (v3)
  {
    [v3 doubleValue];
    *a2 = v5;
  }

  return v4 != 0LL;
}

double sub_100EF492C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X2>, _OWORD *a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  id v11 = objc_msgSend(objc_msgSend(*(id *)(a1 + 8), "silo"), "newTimer");
  [v11 setHandler:a2];
  [v11 setNextFireTime:a4 interval:a5];
  sub_100EF4A8C(&v11, &v10);
  double result = *(double *)&v10;
  *a3 = v10;
  return result;
}

uint64_t sub_100EF49B4()
{
  return sub_1004F75F8() ^ 1;
}

void *sub_100EF49D0(void *a1)
{
  *a1 = off_10188BC70;
  sub_1008AF1C4((uint64_t)(a1 + 3));
  uint64_t v2 = a1[2];
  a1[2] = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  return a1;
}

void sub_100EF4A18(void *a1)
{
  *a1 = off_10188BC70;
  sub_1008AF1C4((uint64_t)(a1 + 3));
  uint64_t v2 = a1[2];
  a1[2] = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  operator delete(a1);
}

void sub_100EF4A60(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void *sub_100EF4A8C@<X0>(void **a1@<X1>, void *a2@<X8>)
{
  id v4 = operator new(0x28uLL);
  double result = sub_100EF4AE4(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_100EF4AD0(_Unwind_Exception *a1)
{
}

void *sub_100EF4AE4(void *a1, void **a2)
{
  *a1 = off_10188BD38;
  a1[1] = 0LL;
  a1[2] = 0LL;
  id v3 = *a2;
  a1[3] = &off_10188BD88;
  a1[4] = v3;
  return a1;
}

void sub_100EF4B34(_Unwind_Exception *a1)
{
}

void sub_100EF4B48(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10188BD38;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100EF4B5C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10188BD38;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_100EF4B80(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_100EF4B90(uint64_t a1)
{
  *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 112), 8) = 0LL;
}

id sub_100EF4BC0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 8), "setNextFireTime:");
}

char *sub_100EF4BC8(char *__dst, uint64_t a2, __int16 a3, __int128 *a4)
{
  if (*((char *)a4 + 23) < 0)
  {
    sub_1010DD48C(__dst, *(void **)a4, *((void *)a4 + 1));
  }

  else
  {
    __int128 v7 = *a4;
    *((void *)__dst + 2) = *((void *)a4 + 2);
    *(_OWORD *)std::string __dst = v7;
  }

  *(_OWORD *)(__dst + 24) = *(_OWORD *)a2;
  __int128 v8 = *(_OWORD *)(a2 + 16);
  __int128 v9 = *(_OWORD *)(a2 + 32);
  __int128 v10 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(__dst + 84) = *(_OWORD *)(a2 + 60);
  *(_OWORD *)(__dst + 72) = v10;
  *(_OWORD *)(__dst + 56) = v9;
  *(_OWORD *)(__dst + sub_10004AD90(v3 - 40) = v8;
  LODWORD(v_Block_object_dispose((const void *)(v1 - 112), 8) = *(_DWORD *)(a2 + 24);
  float v11 = *(float *)(a2 + 28);
  float v12 = *(float *)(a2 + 32);
  *((void *)__dst + 14) = 0LL;
  float v13 = *((float *)__dst + 7);
  float v14 = *((float *)__dst + 8) * -10.0;
  float v15 = log10f(*(float *)&v8 / v13);
  float v16 = *((float *)__dst + 6);
  *((float *)__dst + 25) = v16 + (float)(v14 * v15);
  *((float *)__dst + 26) = v16 + (float)(v14 * log10f(v11 / v13));
  *((float *)__dst + 27) = v16 + (float)(v14 * log10f(v12 / v13));
  *((void *)__dst + 15) = 0LL;
  *((void *)__dst + 16) = 0LL;
  *((void *)__dst + 17) = 0xBFF0000000000000LL;
  *((CFAbsoluteTime *)__dst + 1_Block_object_dispose((const void *)(v1 - 112), 8) = CFAbsoluteTimeGetCurrent();
  *((_DWORD *)__dst + 3_Block_object_dispose((const void *)(v1 - 112), 8) = 0;
  __asm { FMOV            V0.2S, #1.0 }

  *(void *)(__dst + 156) = _D0;
  *((_WORD *)__dst + 82) = 0;
  *((void *)__dst + 21) = 0LL;
  sub_100AF2E24((uint64_t)(__dst + 176));
  *((_WORD *)__dst + 132) = a3;
  sub_1002E4C3C(__dst + 272, "CLBTLERSSIRangeCalculator-Mutex", 0LL, 1LL);
  return __dst;
}

void sub_100EF4CFC(_Unwind_Exception *a1)
{
  uint64_t v5 = *v3;
  if (*v3)
  {
    *(void *)(v1 + 120) = v5;
    operator delete(v5);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_100EF4D3C(uint64_t a1, int a2, __int16 a3, double a4)
{
  uint64_t v8 = a1 + 272;
  (*(void (**)(uint64_t))(*(void *)(a1 + 272) + 16LL))(a1 + 272);
  __int16 v9 = a2 - 126;
  if (a2 <= 126)
  {
    if (a2 <= 0) {
      __int16 v9 = a2;
    }
    int v10 = (__int16)(*(_WORD *)(a1 + 264) + v9);
    if (v10 > *(__int16 *)(a1 + 36))
    {
      unint64_t v11 = *(void *)(a1 + 128);
      float v12 = *(double **)(a1 + 120);
      if ((unint64_t)v12 >= v11)
      {
        float v14 = *(double **)(a1 + 112);
        uint64_t v15 = ((char *)v12 - (char *)v14) >> 4;
        unint64_t v16 = v15 + 1;
        uint64_t v17 = v11 - (void)v14;
        if (v17 >> 3 > v16) {
          unint64_t v16 = v17 >> 3;
        }
        else {
          unint64_t v18 = v16;
        }
        if (v18)
        {
          BOOL v19 = (char *)sub_100037038(a1 + 128, v18);
          float v14 = *(double **)(a1 + 112);
          float v12 = *(double **)(a1 + 120);
        }

        else
        {
          BOOL v19 = 0LL;
        }

        unint64_t v20 = &v19[16 * v15];
        *(double *)unint64_t v20 = a4;
        unint64_t v21 = &v19[16 * v18];
        *((_WORD *)v20 + 4) = v10;
        *((_WORD *)v20 + 5) = a3;
        float v13 = (double *)(v20 + 16);
        if (v12 != v14)
        {
          do
          {
            uint64_t v22 = *((void *)v12 - 2);
            v12 -= 2;
            int v23 = *((_DWORD *)v12 + 2);
            *((void *)v20 - 2) = v22;
            v20 -= 16;
            *((_DWORD *)v20 + 2) = v23;
          }

          while (v12 != v14);
          float v14 = *(double **)(a1 + 112);
        }

        *(void *)(a1 + 112) = v20;
        *(void *)(a1 + 120) = v13;
        *(void *)(a1 + 12_Block_object_dispose((const void *)(v1 - 112), 8) = v21;
        if (v14) {
          operator delete(v14);
        }
      }

      else
      {
        *float v12 = a4;
        *((_WORD *)v12 + 4) = v10;
        float v13 = v12 + 2;
        *((_WORD *)v12 + 5) = a3;
      }

      *(void *)(a1 + 120) = v13;
    }
  }

  return (*(uint64_t (**)(uint64_t))(*(void *)v8 + 24LL))(v8);
}

void sub_100EF4EB8(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100EF4ED0( uint64_t a1, unsigned int *a2, int *a3, uint64_t *a4, unsigned __int16 *a5, unsigned __int16 *a6, double a7)
{
  uint64_t v122 = a1 + 272;
  (*(void (**)(void))(*(void *)(a1 + 272) + 16LL))();
  __int16 v124 = 256;
  uint64_t v120 = 0LL;
  double v121 = -1.0;
  uint64_t v11 = *(void *)(a1 + 112);
  uint64_t v12 = *(void *)(a1 + 120);
  uint64_t v118 = 0LL;
  uint64_t v119 = 0LL;
  std::stringbuf::string_type __p = 0LL;
  uint64_t v116 = 0LL;
  unint64_t v117 = 0LL;
  unint64_t v13 = *(__int16 *)(a1 + 38) - (uint64_t)*(__int16 *)(a1 + 36) + 1;
  *(_WORD *)uint64_t buf = 0;
  sub_100EF5C20((uint64_t)&v118, v13, buf);
  if (v11 == v12 || (v15 = *(__int16 **)(a1 + 112), float v14 = *(__int16 **)(a1 + 120), v15 == v14))
  {
    uint64_t v39 = 0LL;
    uint64_t v40 = 0LL;
    uint64_t v41 = 0LL;
    float v30 = 0.0;
LABEL_63:
    float v54 = 0.0;
    float v52 = 0.0;
    float v51 = 0.0;
    goto LABEL_64;
  }

  do
  {
    if (a7 - *(double *)v15 <= *(float *)(a1 + 60))
    {
      int v18 = v15[4];
      if (v18 <= *(__int16 *)(a1 + 38) && v18 >= *(__int16 *)(a1 + 36))
      {
        ++*((_WORD *)v118 + v15[4] - (uint64_t)*(__int16 *)(a1 + 36));
        BOOL v19 = v116;
        if (v116 >= v117)
        {
          unint64_t v21 = __p;
          uint64_t v22 = v116 - __p;
          if (v116 - __p <= -3) {
            sub_100007008();
          }
          uint64_t v23 = v22 >> 1;
          else {
            uint64_t v24 = v117 - __p;
          }
          else {
            uint64_t v25 = v24;
          }
          if (v25)
          {
            uint64_t v26 = (char *)sub_1008DB604((uint64_t)&v117, v25);
            unint64_t v21 = __p;
            BOOL v19 = v116;
          }

          else
          {
            uint64_t v26 = 0LL;
          }

          id v27 = &v26[2 * v23];
          *(_WORD *)id v27 = v15[4];
          unint64_t v20 = v27 + 2;
          while (v19 != v21)
          {
            __int16 v28 = *((_WORD *)v19 - 1);
            v19 -= 2;
            *((_WORD *)v27 - 1) = v28;
            v27 -= 2;
          }

          std::stringbuf::string_type __p = v27;
          unint64_t v117 = &v26[2 * v25];
          if (v21) {
            operator delete(v21);
          }
        }

        else
        {
          *(_WORD *)uint64_t v116 = v15[4];
          unint64_t v20 = v116 + 2;
        }

        uint64_t v116 = v20;
        float v14 = *(__int16 **)(a1 + 120);
        char v17 = 1;
      }

      else
      {
        char v17 = 0;
      }

      v15 += 8;
    }

    else
    {
      int64_t v16 = (char *)v14 - (char *)(v15 + 8);
      if (v14 != v15 + 8) {
        memmove(v15, v15 + 8, v16 - 4);
      }
      float v14 = (__int16 *)((char *)v15 + v16);
      *(void *)(a1 + 120) = (char *)v15 + v16;
      char v17 = 1;
    }
  }

  while (v15 != v14 && (v17 & 1) != 0);
  char v29 = v17 ^ 1;
  float v30 = 0.0;
  if (__p == v116) {
    char v29 = 1;
  }
  if ((v29 & 1) != 0)
  {
    uint64_t v39 = 0LL;
    uint64_t v40 = 0LL;
    uint64_t v41 = 0LL;
    goto LABEL_63;
  }

  std::__sort<std::__less<short,short> &,short *>();
  __int16 v31 = __p;
  uint64_t v32 = (v116 - __p) >> 1;
  signed int v33 = vcvtpd_s64_f64((double)(unint64_t)v32 * 0.1);
  signed int v34 = vcvtpd_s64_f64((double)(unint64_t)v32 * 0.4);
  int v35 = v32 - (v34 + v33);
  if (v35 < 1)
  {
    float v37 = 0.0;
    while (v31 != v116)
    {
      int v43 = *(__int16 *)v31;
      v31 += 2;
      float v37 = v37 + (float)v43;
    }

    float v42 = (float)(unint64_t)v32;
  }

  else
  {
    uint64_t v36 = (__int16 *)&__p[2 * v34];
    float v37 = 0.0;
    while (v36 != (__int16 *)&v116[-2 * v33])
    {
      int v38 = *v36++;
      float v37 = v37 + (float)v38;
    }

    float v42 = (float)v35;
  }

  int v44 = (int)(float)(v37 / v42);
  double v121 = __exp10((float)((float)v44 - *(float *)(a1 + 24)) / -18.0);
  double v121 = sub_100AF2E6C(a1 + 176, &v121, a2, a7);
  int v45 = *(__int16 *)(a1 + 36);
  int v46 = *(__int16 *)(a1 + 38) - v45;
  if (v46 < 0)
  {
    uint64_t v41 = 0LL;
    uint64_t v40 = 0LL;
    uint64_t v39 = 0LL;
  }

  else
  {
    uint64_t v39 = 0LL;
    uint64_t v40 = 0LL;
    uint64_t v41 = 0LL;
    for (__int16 i = 0; i <= v46; ++i)
    {
      float v48 = (float)i + (float)(__int16)v45;
      if (v48 >= *(float *)(a1 + 108))
      {
        if (v48 >= *(float *)(a1 + 104))
        {
          int v49 = *((__int16 *)v118 + i);
          else {
            uint64_t v40 = (v40 + v49);
          }
        }

        else
        {
          uint64_t v39 = (v39 + *((__int16 *)v118 + i));
        }
      }
    }
  }

  int v50 = v40 + v41 + v39;
  if (!v50) {
    goto LABEL_63;
  }
  float v51 = (float)(int)v41 / (float)v50;
  float v52 = (float)(int)v40 / (float)v50;
  float v30 = (float)(int)v39 / (float)v50;
  float v53 = *(float *)(a1 + 40);
  float v54 = 0.0 / (float)v50;
  if (v30 > v53 || v51 > v53 || v52 > v53 || v54 > v53)
  {
    if (v52 <= v53) {
      uint64_t v66 = v51 > v53;
    }
    else {
      uint64_t v66 = 2LL;
    }
    BOOL v114 = v66;
    if (v30 > v53)
    {
      uint64_t v56 = 3LL;
      goto LABEL_93;
    }

    goto LABEL_94;
  }

  float v55 = *(float *)(a1 + 44);
  BOOL v114 = (float)(v51 + v52) > v55;
  if ((float)(v52 + v30) <= v55)
  {
LABEL_94:
    if (v114) {
      goto LABEL_95;
    }
LABEL_64:
    BOOL v114 = 0LL;
    uint64_t v57 = 0LL;
    *a3 = 0;
    *((void *)a3 + 1) = 0xBFF0000000000000LL;
    *((_WORD *)a3 + _Block_object_dispose((const void *)(v1 - 112), 8) = 0;
    float v58 = 0.0;
    goto LABEL_65;
  }

  uint64_t v56 = 2LL;
LABEL_93:
  BOOL v114 = v56;
LABEL_95:
  unsigned int v67 = *a2;
  if (*a2 - 1 < 2 || v67 == 7 || v67 == 3 && !a2[1])
  {
    double v68 = a7 - *(double *)(a1 + 144);
    double v69 = *(float *)(a1 + 76);
    float v58 = 1.0;
    if (v68 > v69)
    {
      float v58 = exp(-(v68 - v69) / *(float *)(a1 + 80));
    }
  }

  else
  {
    *(double *)(a1 + 144) = a7;
    float v58 = 1.0;
  }

  double v70 = *(double *)(a1 + 136);
  *(double *)(a1 + 136) = a7;
  float v71 = (float)v114;
  if (v114 || (double v72 = a7 - v70, a7 - v70 > *(float *)(a1 + 88)))
  {
    *(double *)(a1 + 144) = a7;
    *(_DWORD *)(a1 + 156) = *(_DWORD *)(a1 + 64);
    *(float *)(a1 + sub_1002A5590(v1 - 160) = v71;
    float v75 = (float)v114;
  }

  else
  {
    float v73 = *(float *)(a1 + 156);
    float v74 = v73 / (float)(v73 + *(float *)(a1 + 72));
    float v75 = *(float *)(a1 + 160) + (float)(v74 * (float)(v71 - *(float *)(a1 + 160)));
    float v76 = (float)(v73 * (float)(1.0 - v74)) + v72 * v72 * *(float *)(a1 + 68) * 0.5 * (v58 * v58);
    *(float *)(a1 + 156) = v76;
    *(float *)(a1 + sub_1002A5590(v1 - 160) = v75;
  }

  if (v75 >= 1.0 && v75 <= 3.0)
  {
    int v77 = llroundf(v75);
    int v78 = v77 - v114;
    if (v77 - v114 < 0) {
      int v78 = v114 - v77;
    }
    if (v78 <= *(_DWORD *)(a1 + 96))
    {
      *(_DWORD *)(a1 + 152) = 0;
    }

    else
    {
      int v79 = *(_DWORD *)(a1 + 152);
      *(_DWORD *)(a1 + 152) = v79 + 1;
      if (v79 >= *(_DWORD *)(a1 + 92))
      {
        *(double *)(a1 + 144) = a7;
        *(_DWORD *)(a1 + 156) = *(_DWORD *)(a1 + 64);
        *(float *)(a1 + sub_1002A5590(v1 - 160) = v71;
      }
    }

    if (*(_BYTE *)(a1 + 164))
    {
      if (v77 == 1)
      {
        *(_DWORD *)(a1 + 16_Block_object_dispose((const void *)(v1 - 112), 8) = 0;
        int v80 = 1;
        goto LABEL_127;
      }

      if (v77 < 2 || (int v81 = *(_DWORD *)(a1 + 168), *(_DWORD *)(a1 + 168) = v81 + 1, v81 < 1))
      {
        int v80 = 1;
        int v77 = 1;
        goto LABEL_127;
      }

      int v80 = 0;
      *(_BYTE *)(a1 + 164) = 0;
    }

    else
    {
      if (v77 != 1)
      {
        int v80 = 0;
        goto LABEL_127;
      }

      int v80 = 1;
      *(_WORD *)(a1 + 164) = 1;
      *(_DWORD *)(a1 + 172) = 0;
    }

    *(_DWORD *)(a1 + 16_Block_object_dispose((const void *)(v1 - 112), 8) = 0;
    goto LABEL_127;
  }

  *(void *)(a1 + 136) = 0xBFF0000000000000LL;
  *(double *)(a1 + 144) = a7;
  int v80 = *(unsigned __int8 *)(a1 + 164);
  int v77 = v80;
LABEL_127:
  uint64_t v109 = v41;
  uint64_t v110 = a2;
  if (!*(_BYTE *)(a1 + 165) || v80)
  {
    if (v77 != 2) {
      goto LABEL_140;
    }
    *(_BYTE *)(a1 + 165) = 1;
    __int16 v82 = (_DWORD *)(a1 + 172);
    int v77 = 2;
  }

  else
  {
    __int16 v82 = (_DWORD *)(a1 + 172);
    if (v77 != 2)
    {
      int v83 = (*v82)++;
      BOOL v84 = v83 > 0 && v58 == 1.0;
      if (!v84 && v83 < 2)
      {
        int v77 = 2;
        goto LABEL_140;
      }

      *(_BYTE *)(a1 + 165) = 0;
    }
  }

  *__int16 v82 = 0;
LABEL_140:
  *a3 = v77;
  *((double *)a3 + 1) = v121;
  *((_WORD *)a3 + _Block_object_dispose((const void *)(v1 - 112), 8) = v44;
  uint64_t v86 = *(void *)(a1 + 112);
  uint64_t v85 = *(void *)(a1 + 120);
  if (v86 == v85)
  {
    uint64_t v57 = 1LL;
    uint64_t v41 = v109;
    a2 = v110;
  }

  else
  {
    uint64_t v107 = v40;
    uint64_t v108 = v39;
    unint64_t v87 = (unint64_t *)(a3 + 6);
    unint64_t v88 = (_BYTE *)*((void *)a3 + 4);
    do
    {
      __int16 v89 = *(_WORD *)(v86 + 8);
      unint64_t v90 = *((void *)a3 + 5);
      if ((unint64_t)v88 >= v90)
      {
        unint64_t v92 = *v87;
        unint64_t v93 = &v88[-*v87];
        unint64_t v94 = (unint64_t)(v93 + 1);
        unint64_t v95 = v90 - v92;
        if (2 * v95 > v94) {
          unint64_t v94 = 2 * v95;
        }
        if (v95 >= 0x3FFFFFFFFFFFFFFFLL) {
          size_t v96 = 0x7FFFFFFFFFFFFFFFLL;
        }
        else {
          size_t v96 = v94;
        }
        if (v96) {
          double v97 = (char *)operator new(v96);
        }
        else {
          double v97 = 0LL;
        }
        unint64_t v98 = &v93[(void)v97];
        unint64_t v99 = &v93[(void)v97];
        _BYTE *v99 = v89;
        uint64_t v91 = v99 + 1;
        if (v88 != (_BYTE *)v92)
        {
          unint64_t v100 = &v88[~v92];
          do
          {
            char v101 = *--v88;
            (v100--)[(void)v97] = v101;
          }

          while (v88 != (_BYTE *)v92);
          unint64_t v88 = (_BYTE *)*v87;
          unint64_t v98 = v97;
        }

        *((void *)a3 + 3) = v98;
        *((void *)a3 + 4) = v91;
        *((void *)a3 + 5) = &v97[v96];
        if (v88) {
          operator delete(v88);
        }
      }

      else
      {
        *unint64_t v88 = v89;
        uint64_t v91 = v88 + 1;
      }

      *((void *)a3 + 4) = v91;
      v86 += 16LL;
      unint64_t v88 = v91;
    }

    while (v86 != v85);
    uint64_t v57 = 1LL;
    uint64_t v41 = v109;
    a2 = v110;
    uint64_t v40 = v107;
    uint64_t v39 = v108;
  }

void sub_100EF5BA4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, void *__p, uint64_t a22, uint64_t a23, void *a24, uint64_t a25, uint64_t a26, uint64_t a27, char a28)
{
  if (__p) {
    operator delete(__p);
  }
  if (a24) {
    operator delete(a24);
  }
  sub_1011C52D0((uint64_t)&a28);
  _Unwind_Resume(a1);
}

void sub_100EF5C20(uint64_t a1, unint64_t a2, _WORD *a3)
{
  unint64_t v3 = (uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 1;
  if (a2 <= v3)
  {
    if (a2 < v3) {
      *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 112), 8) = *(void *)a1 + 2 * a2;
    }
  }

  else
  {
    sub_100EF5FD4((void **)a1, a2 - v3, a3);
  }

void sub_100EF5C50(id a1)
{
  int v1 = sub_1002A6F64(*(uint64_t *)buf, "VerboseRangeLoggingEnabled", (BOOL *)&byte_101991AF8);
  int v2 = v1;
  unint64_t v3 = v11;
  if (!v11) {
    goto LABEL_5;
  }
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    unint64_t v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (!v5)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!v2) {
      return;
    }
  }

  else
  {
LABEL_5:
    if (!v1) {
      return;
    }
  }

  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10188BDF0);
  }
  unint64_t v6 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 67174657;
    *(_DWORD *)&uint8_t buf[4] = byte_101991AF8;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "#Warning Overriding VerboseRangeLoggingEnabled,%{private}d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188BDF0);
    }
    v9[0] = 67174657;
    v9[1] = byte_101991AF8;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  0LL,  "#Warning Overriding VerboseRangeLoggingEnabled,%{private}d",  v9,  8);
    uint64_t v8 = (uint8_t *)v7;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLBTLERSSIRangeCalculator::getRangeMeasurement(const CLMotionActivity &, CFTimeInterval, CLBTLERSSIRangeCalcu lator_Type::RangeMeasurement &, const std::string &, const uint16_t &, const uint16_t &)_block_invoke",  "%s\n",  v7);
    if (v8 != buf) {
      free(v8);
    }
  }

void sub_100EF5E68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
}

uint64_t sub_100EF5E84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1 + 272;
  (*(void (**)(uint64_t))(*(void *)(a1 + 272) + 16LL))(a1 + 272);
  if (*(char *)(a1 + 23) < 0)
  {
    sub_1010DD48C((_BYTE *)a2, *(void **)a1, *(void *)(a1 + 8));
  }

  else
  {
    *(_OWORD *)a2 = *(_OWORD *)a1;
    *(void *)(a2 + 16) = *(void *)(a1 + 16);
  }

  return (*(uint64_t (**)(uint64_t))(*(void *)v4 + 24LL))(v4);
}

void sub_100EF5F0C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100EF5F24(std::string *a1, const std::string *a2)
{
  uint64_t v4 = &a1[11].__r_.__value_.__s.__data_[8];
  (*(void (**)(std::string::size_type *))(a1[11].__r_.__value_.__l.__size_ + 16))(&a1[11].__r_.__value_.__l.__size_);
  std::string::operator=(a1, a2);
  return (*(uint64_t (**)(std::string::value_type *))(*(void *)v4 + 24LL))(v4);
}

void sub_100EF5F94(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_100EF5FA8(id a1)
{
  qword_101934848 = (uint64_t)os_log_create("com.apple.locationd.Position", "Proximity");
}

void sub_100EF5FD4(void **a1, unint64_t a2, _WORD *a3)
{
  uint64_t v8 = a1[2];
  uint64_t v6 = (uint64_t)(a1 + 2);
  __int128 v7 = v8;
  __int16 v9 = *(_WORD **)(v6 - 8);
  if (a2 <= (v8 - (_BYTE *)v9) >> 1)
  {
    if (a2)
    {
      uint64_t v16 = 2 * a2;
      char v17 = &v9[a2];
      do
      {
        *v9++ = *a3;
        v16 -= 2LL;
      }

      while (v16);
      __int16 v9 = v17;
    }

    a1[1] = v9;
  }

  else
  {
    uint64_t v10 = (char *)v9 - (_BYTE *)*a1;
    uint64_t v11 = a2 + (v10 >> 1);
    if (v11 < 0) {
      sub_100007008();
    }
    uint64_t v12 = v10 >> 1;
    unint64_t v13 = v7 - (_BYTE *)*a1;
    if (v13 > v11) {
      uint64_t v11 = v13;
    }
    if (v13 >= 0x7FFFFFFFFFFFFFFELL) {
      uint64_t v14 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v14 = v11;
    }
    if (v14) {
      uint64_t v15 = (char *)sub_1008DB604(v6, v14);
    }
    else {
      uint64_t v15 = 0LL;
    }
    int v18 = &v15[2 * v12];
    BOOL v19 = &v18[2 * a2];
    uint64_t v20 = 2 * a2;
    unint64_t v21 = v18;
    do
    {
      *(_WORD *)unint64_t v21 = *a3;
      v21 += 2;
      v20 -= 2LL;
    }

    while (v20);
    uint64_t v22 = &v15[2 * v14];
    uint64_t v23 = (char *)*a1;
    for (__int16 i = (char *)a1[1]; i != v23; i -= 2)
    {
      __int16 v25 = *((_WORD *)i - 1);
      *((_WORD *)v18 - 1) = v25;
      v18 -= 2;
    }

    *a1 = v18;
    a1[1] = v19;
    a1[2] = v22;
    if (v23) {
      operator delete(v23);
    }
  }

void sub_100EF6354( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_100EF636C(uint64_t a1, uint64_t a2)
{
}

void sub_100EF637C(uint64_t a1)
{
}

id sub_100EF6388(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _currentFilename];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 4sub_100891830((uint64_t)va, 0LL) = result;
  return result;
}

id sub_100EF6520(uint64_t a1)
{
  return [*(id *)(a1 + 32) _stopLoggingOnQueue];
}

id sub_100EF6580(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _stopLoggingOnQueue];
  if (*(void *)(*(void *)(a1 + 32) + 16LL)) {
    return (id)-[NSFileManager removeItemAtPath:error:]( +[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"),  "removeItemAtPath:error:",  *(void *)(*(void *)(a1 + 32) + 16LL),  0LL);
  }
  return result;
}

id sub_100EF662C(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _shouldRotate];
  if ((_DWORD)result) {
    return [*(id *)(a1 + 32) _stopLoggingOnQueue];
  }
  return result;
}

id sub_100EF66C0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (*(void *)(v2 + 16)) {
    id v3 = 0LL;
  }
  else {
    id v3 = [*(id *)(v2 + 40) propertyForKey:NSStreamDataWrittenToMemoryStreamKey];
  }
  uint64_t v4 = *(dispatch_queue_s **)(a1 + 40);
  if (v4)
  {
    uint64_t v5 = *(void *)(a1 + 48);
    if (v5)
    {
      v7[0] = _NSConcreteStackBlock;
      v7[1] = 3221225472LL;
      void v7[2] = sub_100EF6760;
      v7[3] = &unk_10182C230;
      v7[4] = v3;
      v7[5] = v5;
      dispatch_async(v4, v7);
    }
  }

  return [*(id *)(a1 + 32) _stopLoggingOnQueue];
}

uint64_t sub_100EF6760(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32));
}

id sub_100EF6CD0(uint64_t a1)
{
  return _objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "_outputStream"),  "write:maxLength:",  objc_msgSend(*(id *)(a1 + 40), "bytes"),  objc_msgSend(*(id *)(a1 + 40), "length"));
}

void sub_100EF6D20(id a1)
{
  qword_1019345D8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Fall");
}

uint64_t sub_100EF6D4C(uint64_t a1)
{
  *(void *)uint64_t buf = 0x200000000LL;
  __int16 v9 = 0;
  if (SHIBYTE(v7) < 0)
  {
    sub_1010DD48C(&v10, __p[0], (unint64_t)__p[1]);
    uint64_t v12 = 0LL;
    if (SHIBYTE(v7) < 0) {
      operator delete(__p[0]);
    }
  }

  else
  {
    __int128 v10 = *(_OWORD *)__p;
    uint64_t v11 = v7;
    uint64_t v12 = 0LL;
  }

  sub_1003B35F4(a1, buf);
  if (SHIBYTE(v11) < 0) {
    operator delete((void *)v10);
  }
  if (sub_1003C1048(a1))
  {
    sub_100EF6FEC(a1);
    sub_1003B59A0(a1, "BeaconFences", (const char **)&off_10188BE50, 0LL, 0);
    sub_100EF7764(a1);
  }

  else
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188BE30);
    }
    uint64_t v2 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_FAULT, "iB: No access to DB", buf, 2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188BE30);
      }
      LOWORD(__p[0]) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  17LL,  "iB: No access to DB",  __p,  2);
      uint64_t v5 = (uint8_t *)v4;
      sub_10029211C("Generic", 1LL, 0, 0LL, "CLBeaconFenceDatabase::CLBeaconFenceDatabase()", "%s\n", v4);
      if (v5 != buf) {
        free(v5);
      }
    }
  }

  return a1;
}

void sub_100EF6FA0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, int a22, __int16 a23, char a24, char a25)
{
}

id *sub_100EF6FEC(uint64_t a1)
{
  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10188BE30);
  }
  uint64_t v2 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "iB: addOnBehalfBundleIdColumnIfNotExists",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188BE30);
    }
    LOWORD(v35.__r_.__value_.__l.__data_) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "iB: addOnBehalfBundleIdColumnIfNotExists",  &v35,  2);
    uint64_t v32 = (uint8_t *)v31;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLBeaconFenceDatabase::addOnBehalfBundleIdColumnIfNotExists()",  "%s\n",  v31);
    if (v32 != buf) {
      free(v32);
    }
  }

  sub_100222B94(v43, (uint64_t)"CLBeaconFenceDatabase::addOnBehalfBundleIdColumnIfNotExists", 0);
  int v38 = "OnBehalfBundleIdentifier";
  int v39 = 5;
  __int16 v40 = 0;
  char v41 = 0;
  char v42 = 0;
  if ((sub_1003B747C(a1, "BeaconFences") & 1) != 0)
  {
    if ((sub_1003BC790(a1, "BeaconFences", "OnBehalfBundleIdentifier", (uint64_t)&v38) & 1) != 0)
    {
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188BE30);
      }
      id v3 = (os_log_s *)qword_101934848;
      int v4 = 1;
      if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)uint64_t buf = 68289026;
        *(_DWORD *)&uint8_t buf[4] = 0;
        __int16 v45 = 2082;
        *(void *)int v46 = "";
        _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:iB: addOnBehalfBundleIdColumnIfNotExists, OnBehalfBundleId already exists}",  buf,  0x12u);
      }
    }

    else
    {
      sub_1003C0454(a1);
      sub_10000CE18((uint64_t)buf);
      uint64_t v6 = sub_10000CF44(&v46[6], (uint64_t)"ALTER TABLE ", 12LL);
      uint64_t v7 = sub_10000CF44(v6, (uint64_t)"BeaconFences", 12LL);
      uint64_t v8 = sub_10000CF44(v7, (uint64_t)" ADD COLUMN ", 12LL);
      __int16 v9 = sub_10000CF44(v8, (uint64_t)"OnBehalfBundleIdentifier", 24LL);
      __int128 v10 = sub_10000CF44(v9, (uint64_t)" ", 1LL);
      uint64_t v11 = (const char *)sub_1003BCC40(3);
      size_t v12 = strlen(v11);
      unint64_t v13 = sub_10000CF44(v10, (uint64_t)v11, v12);
      sub_10000CF44(v13, (uint64_t)";", 1LL);
      std::stringbuf::str(&v35, &v47);
      if ((v35.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v14 = &v35;
      }
      else {
        uint64_t v14 = (std::stringbuf::string_type *)v35.__r_.__value_.__r.__words[0];
      }
      sub_1003C0D54(a1, (char *)v14, &v33);
      uint64_t v15 = v33.__r_.__value_.__r.__words[0];
      v33.__r_.__value_.__r.__words[0] = 0LL;
      uint64_t v16 = (sqlite3_stmt *)sub_100019240(v15);
      sub_1003BB2BC(a1, v16);
      sub_10000CE18((uint64_t)&v35);
      char v17 = sub_10000CF44(&v35.__r_.__value_.__l.__cap_, (uint64_t)"UPDATE ", 7LL);
      int v18 = sub_10000CF44(v17, (uint64_t)"BeaconFences", 12LL);
      BOOL v19 = sub_10000CF44(v18, (uint64_t)" SET ", 5LL);
      uint64_t v20 = sub_10000CF44(v19, (uint64_t)"OnBehalfBundleIdentifier", 24LL);
      unint64_t v21 = sub_10000CF44(v20, (uint64_t)" = ", 3LL);
      uint64_t v22 = sub_10000CF44(v21, (uint64_t)"''", 2LL);
      sub_10000CF44(v22, (uint64_t)";", 1LL);
      std::stringbuf::str(&v33, &v36);
      if ((v33.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v23 = &v33;
      }
      else {
        uint64_t v23 = (std::stringbuf::string_type *)v33.__r_.__value_.__r.__words[0];
      }
      sub_1003C0D54(a1, (char *)v23, &v34);
      uint64_t v24 = v34;
      uint64_t v34 = 0LL;
      uint64_t v25 = (sqlite3_stmt *)sub_100019240(v24);
      sub_1003BB2BC(a1, v25);
      sub_1003BF200(a1, "BeaconFences");
      sub_1003C05BC(a1);
      int v4 = sub_1003BC790(a1, "BeaconFences", "OnBehalfBundleIdentifier", (uint64_t)&v38);
      if (v24) {
        (*(void (**)(uint64_t))(*(void *)v24 + 8LL))(v24);
      }
      *(std::string::size_type *)((char *)v35.__r_.__value_.__r.__words
                                            - 24LL)) = v27;
      v35.__r_.__value_.__l.__cap_ = v28;
      std::streambuf::~streambuf(&v36);
      std::ios::~ios(&v37);
      if (v15) {
        (*(void (**)(uint64_t))(*(void *)v15 + 8LL))(v15);
      }
      *(void *)uint64_t buf = v26;
      *(void *)&buf[*(void *)(v26 - 24)] = v27;
      *(void *)&v46[6] = v28;
      std::streambuf::~streambuf(&v47);
      std::ios::~ios(&v48);
    }

    if (v4 && !(_BYTE)v40)
    {
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188BE30);
      }
      char v29 = (os_log_s *)qword_101934848;
      if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)uint64_t buf = 68289026;
        *(_DWORD *)&uint8_t buf[4] = 0;
        __int16 v45 = 2082;
        *(void *)int v46 = "";
        _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:iB: Re-create primary key to include OnBehalfBundleId}",  buf,  0x12u);
      }

      sub_1003C0454(a1);
      sub_1003BCC74(a1, "BeaconFences", (uint64_t)&off_10188BE50);
      sub_1003C05BC(a1);
    }
  }

  else
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188BE30);
    }
    uint64_t v5 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v45 = 2082;
      *(void *)int v46 = "";
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:iB: addOnBehalfBundleIdColumnIfNotExists, table doesn't even exist}",  buf,  0x12u);
    }
  }

  return sub_1001BA1BC(v43);
}

void sub_100EF76AC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,id a62,uint64_t a63)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a20);
  if (v64) {
    (*(void (**)(uint64_t))(*(void *)v64 + 8LL))(v64);
  }
  sub_1011F8850((uint64_t)&a64);
  sub_1001BA1BC(&a62);
  _Unwind_Resume(a1);
}

void sub_100EF7764(uint64_t a1)
{
  uint64_t v12 = (uint64_t)&v12;
  unint64_t v13 = &v12;
  uint64_t v14 = 0LL;
  sub_100222B94(v11, (uint64_t)"CLBeaconFenceDatabase::cleanDatabase", 0);
  sub_100EF7A5C(a1, &v12);
  for (__int16 i = v13; i != &v12; __int16 i = (uint64_t *)i[1])
  {
    sub_100272138((uint64_t)v10, (uint64_t)(i + 2));
    if ((sub_100E9E5A4((uint64_t)v10) & 1) == 0)
    {
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188BE30);
      }
      id v3 = (os_log_s *)qword_101934848;
      if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_FAULT))
      {
        sub_100271C40((uint64_t)v10, __p);
        int v4 = (__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0
           ? __p
           : (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
        LODWORD(buf.__r_.__value_.__l.__data_) = 136380675;
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v4;
        _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_FAULT,  "Cleaning DB: invalid proximity zone for fence, %{private}s",  (uint8_t *)&buf,  0xCu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(__p, 0x65CuLL);
        if (qword_101934840 != -1) {
          dispatch_once(&qword_101934840, &stru_10188BE30);
        }
        uint64_t v5 = qword_101934848;
        sub_100271C40((uint64_t)v10, &buf);
        p_std::stringbuf::string_type buf = &buf;
        if ((buf.__r_.__value_.__s.__size_ & 0x80u) != 0) {
          p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
        }
        int v16 = 136380675;
        char v17 = p_buf;
        LODWORD(v9) = 12;
        _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v5,  17LL,  "Cleaning DB: invalid proximity zone for fence, %{private}s",  &v16,  v9);
        uint64_t v8 = v7;
        sub_10029211C("Generic", 1LL, 0, 0LL, "void CLBeaconFenceDatabase::cleanDatabase()", "%s\n", (const char *)v8);
        if (v8 != __p) {
          free(v8);
        }
      }

      sub_100EF8290(a1, (uint64_t)v10);
    }

    sub_1002722AC((uint64_t)v10);
  }

  sub_1001BA1BC(v11);
  sub_100527B44(&v12);
}

void sub_100EF7A14( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, id a28, uint64_t a29, uint64_t a30)
{
}

uint64_t sub_100EF7A5C(uint64_t a1, uint64_t *a2)
{
  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10188BE30);
  }
  uint64_t p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
  uint64_t v5 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(buf.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "iB: Retrieving all fences", (uint8_t *)&buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188BE30);
    }
    LOWORD(v5_Block_object_dispose(va, 8) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "iB: Retrieving all fences",  &v58,  2);
    float v51 = (std::stringbuf::string_type *)v50;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLBeaconFenceDatabase::getAllFences(CLBTLEBeaconRegion_Type::MonitoredRegions &)",  "%s\n",  v50);
    if (v51 != &buf) {
      free(v51);
    }
  }

  uint64_t v6 = sub_10000CF44(&v61, (uint64_t)"SELECT ", 7LL);
  uint64_t v7 = sub_10000CF44(v6, (uint64_t)"BundleIdentifier", 16LL);
  uint64_t v8 = sub_10000CF44(v7, (uint64_t)", ", 2LL);
  uint64_t v9 = sub_10000CF44(v8, (uint64_t)"Identifier", 10LL);
  __int128 v10 = sub_10000CF44(v9, (uint64_t)", ", 2LL);
  uint64_t v11 = sub_10000CF44(v10, (uint64_t)"ProximityUUID", 13LL);
  uint64_t v12 = sub_10000CF44(v11, (uint64_t)", ", 2LL);
  unint64_t v13 = sub_10000CF44(v12, (uint64_t)"Major", 5LL);
  uint64_t v14 = sub_10000CF44(v13, (uint64_t)", ", 2LL);
  uint64_t v15 = sub_10000CF44(v14, (uint64_t)"Minor", 5LL);
  int v16 = sub_10000CF44(v15, (uint64_t)", ", 2LL);
  char v17 = sub_10000CF44(v16, (uint64_t)"DefinitionMask", 14LL);
  int v18 = sub_10000CF44(v17, (uint64_t)", ", 2LL);
  BOOL v19 = sub_10000CF44(v18, (uint64_t)"Options", 7LL);
  uint64_t v20 = sub_10000CF44(v19, (uint64_t)", ", 2LL);
  unint64_t v21 = sub_10000CF44(v20, (uint64_t)"OnBehalfBundleIdentifier", 24LL);
  uint64_t v22 = sub_10000CF44(v21, (uint64_t)" FROM ", 6LL);
  sub_10000CF44(v22, (uint64_t)"BeaconFences", 12LL);
  std::stringbuf::str(&buf, &v62);
  if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_std::stringbuf::string_type buf = &buf;
  }
  else {
    p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
  }
  sub_1003C0D54(a1, (char *)p_buf, &v58);
  uint64_t v24 = v58;
  uint64_t v58 = 0LL;
  sub_100527B44(a2);
  uint64_t v25 = (sqlite3_stmt *)sub_100019240(v24);
  int v26 = sqlite3_step(v25);
  if ((v26 - 102) < 0xFFFFFFFE)
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188BE30);
    }
    std::string::size_type v27 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_FAULT))
    {
      LOWORD(buf.__r_.__value_.__l.__data_) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_FAULT,  "Unable to get fences from the database",  (uint8_t *)&buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188BE30);
      }
      LOWORD(v5_Block_object_dispose(va, 8) = 0;
      LODWORD(v57) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934848,  17LL,  "Unable to get fences from the database",  &v58,  v57);
      float v53 = (std::stringbuf::string_type *)v52;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLBeaconFenceDatabase::getAllFences(CLBTLEBeaconRegion_Type::MonitoredRegions &)",  "%s\n",  v52);
      if (v53 != &buf) {
        free(v53);
      }
    }

    std::string::size_type v28 = (sqlite3_stmt *)sub_100019240(v24);
    sqlite3_reset(v28);
    goto LABEL_30;
  }

  if (v26 == 100)
  {
    do
    {
      *(_OWORD *)&buf.__r_.__value_.__r.__words[1] = 0u;
      __int128 v65 = 0u;
      buf.__r_.__value_.__r.__words[0] = (std::string::size_type)off_10182CDC8;
      memset(v66, 0, sizeof(v66));
      memset(&v67, 0, sizeof(v67));
      char v29 = (sqlite3_stmt *)sub_100019240(v24);
      float v30 = sqlite3_column_text(v29, 0);
      std::string::assign(v66, (const std::string::value_type *)v30);
      __int16 v31 = (sqlite3_stmt *)sub_100019240(v24);
      uint64_t v32 = sqlite3_column_text(v31, 1);
      std::string::assign(&v67, (const std::string::value_type *)v32);
      std::stringbuf::string_type v33 = (sqlite3_stmt *)sub_100019240(v24);
      uint64_t v34 = sqlite3_column_text(v33, 2);
      std::string::assign((std::string *)&buf.__r_.__value_.__r.__words[1], (const std::string::value_type *)v34);
      std::stringbuf::string_type v35 = (sqlite3_stmt *)sub_100019240(v24);
      WORD4(v65) = sqlite3_column_int(v35, 3);
      std::stringbuf v36 = (sqlite3_stmt *)sub_100019240(v24);
      WORD5(v65) = sqlite3_column_int(v36, 4);
      uint64_t v37 = (sqlite3_stmt *)sub_100019240(v24);
      HIDWORD(v65) = sqlite3_column_int(v37, 5);
      int v38 = (sqlite3_stmt *)sub_100019240(v24);
      int v68 = sqlite3_column_int(v38, 6);
      int v39 = (sqlite3_stmt *)sub_100019240(v24);
      __int16 v40 = sqlite3_column_text(v39, 7);
      std::string::assign(&v66[1], (const std::string::value_type *)v40);
      char v41 = sub_1007F14D0((uint64_t)a2, 0LL, 0LL, (uint64_t)&buf);
      v41[1] = a2;
      uint64_t v42 = *a2;
      *char v41 = *a2;
      *(void *)(v42 + _Block_object_dispose(va, 8) = v41;
      *a2 = (uint64_t)v41;
      ++a2[2];
      int v43 = (sqlite3_stmt *)sub_100019240(v24);
      int v44 = sqlite3_step(v43);
      sub_1002722AC((uint64_t)&buf);
    }

    while (v44 == 100);
    uint64_t p_vtable = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
  }

  else
  {
    int v44 = 101;
  }

  __int16 v45 = (sqlite3_stmt *)sub_100019240(v24);
  sqlite3_reset(v45);
  if (v44 != 101)
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188BE30);
    }
    std::stringbuf v47 = (os_log_s *)p_vtable[265];
    if (os_log_type_enabled(v47, OS_LOG_TYPE_FAULT))
    {
      LOWORD(buf.__r_.__value_.__l.__data_) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_FAULT,  "An error was encountered when retrieving fences from the database",  (uint8_t *)&buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188BE30);
      }
      float v54 = p_vtable[265];
      LOWORD(v5_Block_object_dispose(va, 8) = 0;
      LODWORD(v57) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v54,  17LL,  "An error was encountered when retrieving fences from the database",  &v58,  v57);
      uint64_t v56 = (std::stringbuf::string_type *)v55;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLBeaconFenceDatabase::getAllFences(CLBTLEBeaconRegion_Type::MonitoredRegions &)",  "%s\n",  v55);
      if (v56 != &buf) {
        free(v56);
      }
    }

void sub_100EF8210( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, void *__p, uint64_t a50,int a51,__int16 a52,char a53,char a54)
{
  if (v54) {
    (*(void (**)(uint64_t))(*(void *)v54 + 8LL))(v54);
  }
  sub_1001BA1BC(&a12);
  sub_1011F8850((uint64_t)&a14);
  _Unwind_Resume(a1);
}

uint64_t sub_100EF8290(uint64_t a1, uint64_t a2)
{
  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10188BE30);
  }
  int v4 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
  {
    (*(void (**)(std::stringbuf::string_type *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(__p, a2);
    uint64_t v5 = (__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0
       ? __p
       : (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
    *(_DWORD *)std::stringbuf::string_type buf = 136380675;
    *(void *)&uint8_t buf[4] = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "iB: Removing fence,%{private}s", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188BE30);
    }
    uint64_t v30 = qword_101934848;
    (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(buf, a2);
    if (v45 >= 0) {
      __int16 v31 = buf;
    }
    else {
      __int16 v31 = *(_BYTE **)buf;
    }
    int v46 = 136380675;
    std::stringbuf v47 = v31;
    _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v30,  2LL,  "iB: Removing fence,%{private}s",  &v46,  12);
    std::stringbuf::string_type v33 = v32;
    if (v45 < 0) {
      operator delete(*(void **)buf);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLBeaconFenceDatabase::removeFence(const CLBTLEBeaconRegion_Type::MonitoredRegion &)",  "%s\n",  (const char *)v33);
    if (v33 != __p) {
      free(v33);
    }
  }

  uint64_t v6 = sub_10000CF44(&v41, (uint64_t)"DELETE FROM ", 12LL);
  uint64_t v7 = sub_10000CF44(v6, (uint64_t)"BeaconFences", 12LL);
  uint64_t v8 = sub_10000CF44(v7, (uint64_t)" WHERE ", 7LL);
  uint64_t v9 = sub_10000CF44(v8, (uint64_t)"BundleIdentifier", 16LL);
  __int128 v10 = sub_10000CF44(v9, (uint64_t)"=? AND ", 7LL);
  uint64_t v11 = sub_10000CF44(v10, (uint64_t)"Identifier", 10LL);
  uint64_t v12 = sub_10000CF44(v11, (uint64_t)"=? AND ", 7LL);
  unint64_t v13 = sub_10000CF44(v12, (uint64_t)"OnBehalfBundleIdentifier", 24LL);
  sub_10000CF44(v13, (uint64_t)"=?", 2LL);
  std::stringbuf::str(__p, &v42);
  if ((__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t v14 = __p;
  }
  else {
    uint64_t v14 = (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
  }
  sub_1003C0D54(a1, (char *)v14, buf);
  uint64_t v15 = *(void *)buf;
  *(void *)std::stringbuf::string_type buf = 0LL;
  int v16 = (sqlite3_stmt *)sub_100019240(v15);
  else {
    char v17 = *(char **)(a2 + 40);
  }
  if (sub_1003BC1F0(v16, 1, v17))
  {
    int v18 = (sqlite3_stmt *)sub_100019240(v15);
    BOOL v19 = *(char *)(a2 + 111) >= 0 ? (char *)(a2 + 88) : *(char **)(a2 + 88);
    if (sub_1003BC1F0(v18, 2, v19))
    {
      uint64_t v20 = (sqlite3_stmt *)sub_100019240(v15);
      unint64_t v21 = *(char *)(a2 + 87) >= 0 ? (char *)(a2 + 64) : *(char **)(a2 + 64);
      if (sub_1003BC1F0(v20, 3, v21))
      {
        uint64_t v22 = (sqlite3_stmt *)sub_100019240(v15);
        sub_1003BB2BC(a1, v22);
        else {
          uint64_t v23 = *(void *)(a1 + 88);
        }
        sub_1003C1EC0(a1, v23);
        uint64_t v24 = 1LL;
        if (!v15) {
          goto LABEL_43;
        }
        goto LABEL_42;
      }
    }
  }

  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10188BE30);
  }
  uint64_t v25 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEFAULT))
  {
    (*(void (**)(std::stringbuf::string_type *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(__p, a2);
    int v26 = (__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0
        ? __p
        : (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
    *(_DWORD *)std::stringbuf::string_type buf = 136380675;
    *(void *)&uint8_t buf[4] = v26;
    _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEFAULT,  "#Warning Unable to bind SQL for removing fence,%{private}s",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188BE30);
    }
    uint64_t v34 = qword_101934848;
    (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(buf, a2);
    if (v45 >= 0) {
      std::stringbuf::string_type v35 = buf;
    }
    else {
      std::stringbuf::string_type v35 = *(_BYTE **)buf;
    }
    int v46 = 136380675;
    std::stringbuf v47 = v35;
    LODWORD(v3_Block_object_dispose(va, 8) = 12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v34,  0LL,  "#Warning Unable to bind SQL for removing fence,%{private}s",  &v46,  v38);
    uint64_t v37 = v36;
    if (v45 < 0) {
      operator delete(*(void **)buf);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLBeaconFenceDatabase::removeFence(const CLBTLEBeaconRegion_Type::MonitoredRegion &)",  "%s\n",  (const char *)v37);
    if (v37 != __p) {
      free(v37);
    }
  }

  std::string::size_type v27 = (sqlite3_stmt *)sub_100019240(v15);
  sqlite3_reset(v27);
  uint64_t v24 = 0LL;
  if (v15) {
LABEL_42:
  }
    (*(void (**)(uint64_t))(*(void *)v15 + 8LL))(v15);
LABEL_43:
  sub_1001BA1BC(v39);
  *(void *)((char *)v40
  uint64_t v41 = v28;
  std::streambuf::~streambuf(&v42);
  std::ios::~ios(&v43);
  return v24;
}

void sub_100EF88B4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,void *__p,uint64_t a57,int a58,__int16 a59,char a60,char a61)
{
  if (v61) {
    (*(void (**)(uint64_t))(*(void *)v61 + 8LL))(v61);
  }
  sub_1001BA1BC(&a12);
  sub_1011F8850((uint64_t)&a14);
  _Unwind_Resume(a1);
}

uint64_t sub_100EF8930(uint64_t a1, uint64_t a2)
{
  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10188BE30);
  }
  int v4 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
  {
    (*(void (**)(std::stringbuf::string_type *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(__p, a2);
    uint64_t v5 = (__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0
       ? __p
       : (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
    *(_DWORD *)std::stringbuf::string_type buf = 136380675;
    *(void *)&uint8_t buf[4] = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "iB: Adding fence,%{private}s", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188BE30);
    }
    uint64_t v47 = qword_101934848;
    (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(buf, a2);
    if (v66 >= 0) {
      uint64_t v48 = buf;
    }
    else {
      uint64_t v48 = *(_BYTE **)buf;
    }
    int v67 = 136380675;
    int v68 = v48;
    _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v47,  2LL,  "iB: Adding fence,%{private}s",  &v67,  12);
    int v50 = v49;
    if (v66 < 0) {
      operator delete(*(void **)buf);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLBeaconFenceDatabase::addFence(const CLBTLEBeaconRegion_Type::MonitoredRegion &)",  "%s\n",  (const char *)v50);
    if (v50 != __p) {
      free(v50);
    }
  }

  if ((sub_100E9E5A4(a2) & 1) != 0)
  {
    uint64_t v6 = sub_10000CF44(&v62, (uint64_t)"INSERT INTO ", 12LL);
    uint64_t v7 = sub_10000CF44(v6, (uint64_t)"BeaconFences", 12LL);
    uint64_t v8 = sub_10000CF44(v7, (uint64_t)" (", 2LL);
    uint64_t v9 = sub_10000CF44(v8, (uint64_t)"BundleIdentifier", 16LL);
    __int128 v10 = sub_10000CF44(v9, (uint64_t)", ", 2LL);
    uint64_t v11 = sub_10000CF44(v10, (uint64_t)"Identifier", 10LL);
    uint64_t v12 = sub_10000CF44(v11, (uint64_t)", ", 2LL);
    unint64_t v13 = sub_10000CF44(v12, (uint64_t)"ProximityUUID", 13LL);
    uint64_t v14 = sub_10000CF44(v13, (uint64_t)", ", 2LL);
    uint64_t v15 = sub_10000CF44(v14, (uint64_t)"Major", 5LL);
    int v16 = sub_10000CF44(v15, (uint64_t)", ", 2LL);
    char v17 = sub_10000CF44(v16, (uint64_t)"Minor", 5LL);
    int v18 = sub_10000CF44(v17, (uint64_t)", ", 2LL);
    BOOL v19 = sub_10000CF44(v18, (uint64_t)"DefinitionMask", 14LL);
    uint64_t v20 = sub_10000CF44(v19, (uint64_t)", ", 2LL);
    unint64_t v21 = sub_10000CF44(v20, (uint64_t)"Options", 7LL);
    uint64_t v22 = sub_10000CF44(v21, (uint64_t)", ", 2LL);
    uint64_t v23 = sub_10000CF44(v22, (uint64_t)"OnBehalfBundleIdentifier", 24LL);
    sub_10000CF44(v23, (uint64_t)") VALUES (?, ?, ?, ?, ?, ?, ?, ?)", 33LL);
    std::stringbuf::str(__p, &v63);
    if ((__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v24 = __p;
    }
    else {
      uint64_t v24 = (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(a1, (char *)v24, buf);
    uint64_t v25 = *(void *)buf;
    *(void *)std::stringbuf::string_type buf = 0LL;
    int v26 = (sqlite3_stmt *)sub_100019240(v25);
    else {
      std::string::size_type v27 = *(char **)(a2 + 40);
    }
    if (!sub_1003BC1F0(v26, 1, v27)) {
      goto LABEL_47;
    }
    uint64_t v28 = (sqlite3_stmt *)sub_100019240(v25);
    char v29 = *(char *)(a2 + 111) >= 0 ? (char *)(a2 + 88) : *(char **)(a2 + 88);
    if (!sub_1003BC1F0(v28, 2, v29)) {
      goto LABEL_47;
    }
    uint64_t v30 = (sqlite3_stmt *)sub_100019240(v25);
    __int16 v31 = *(char *)(a2 + 31) >= 0 ? (char *)(a2 + 8) : *(char **)(a2 + 8);
    if (sub_1003BC1F0(v30, 3, v31)
      && (uint64_t v32 = (sqlite3_stmt *)sub_100019240(v25), sub_1003C28BC(v32, 4, *(unsigned __int16 *)(a2 + 32)))
      && (std::stringbuf::string_type v33 = (sqlite3_stmt *)sub_100019240(v25), sub_1003C28BC(v33, 5, *(unsigned __int16 *)(a2 + 34)))
      && (uint64_t v34 = (sqlite3_stmt *)sub_100019240(v25), sub_1003C28BC(v34, 6, *(_DWORD *)(a2 + 36)))
      && (std::stringbuf::string_type v35 = (sqlite3_stmt *)sub_100019240(v25), sub_1003C28BC(v35, 7, *(_DWORD *)(a2 + 112)))
      && ((std::stringbuf v36 = (sqlite3_stmt *)sub_100019240(v25), *(char *)(a2 + 87) >= 0)
        ? (uint64_t v37 = (char *)(a2 + 64))
        : (uint64_t v37 = *(char **)(a2 + 64)),
          sub_1003BC1F0(v36, 8, v37)))
    {
      uint64_t v38 = (sqlite3_stmt *)sub_100019240(v25);
      sub_1003BB2BC(a1, v38);
      uint64_t v39 = 1LL;
    }

    else
    {
LABEL_47:
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188BE30);
      }
      std::stringbuf v42 = (os_log_s *)qword_101934848;
      if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEFAULT))
      {
        (*(void (**)(std::stringbuf::string_type *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(__p, a2);
        uint64_t v43 = (__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0
            ? __p
            : (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
        *(_DWORD *)std::stringbuf::string_type buf = 136380675;
        *(void *)&uint8_t buf[4] = v43;
        _os_log_impl( (void *)&_mh_execute_header,  v42,  OS_LOG_TYPE_DEFAULT,  "#Warning Unable to bind SQL for adding fence,%{private}s",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(__p, 0x65CuLL);
        if (qword_101934840 != -1) {
          dispatch_once(&qword_101934840, &stru_10188BE30);
        }
        uint64_t v55 = qword_101934848;
        (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(buf, a2);
        if (v66 >= 0) {
          uint64_t v56 = buf;
        }
        else {
          uint64_t v56 = *(_BYTE **)buf;
        }
        int v67 = 136380675;
        int v68 = v56;
        LODWORD(v59) = 12;
        _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v55,  0LL,  "#Warning Unable to bind SQL for adding fence,%{private}s",  &v67,  v59);
        uint64_t v58 = v57;
        if (v66 < 0) {
          operator delete(*(void **)buf);
        }
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLBeaconFenceDatabase::addFence(const CLBTLEBeaconRegion_Type::MonitoredRegion &)",  "%s\n",  (const char *)v58);
        if (v58 != __p) {
          free(v58);
        }
      }

      int v44 = (sqlite3_stmt *)sub_100019240(v25);
      sqlite3_reset(v44);
      uint64_t v39 = 0LL;
    }

    if (v25) {
      (*(void (**)(uint64_t))(*(void *)v25 + 8LL))(v25);
    }
  }

  else
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188BE30);
    }
    __int16 v40 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_FAULT))
    {
      (*(void (**)(std::stringbuf::string_type *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(__p, a2);
      uint64_t v41 = (__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0
          ? __p
          : (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
      *(_DWORD *)std::stringbuf::string_type buf = 136380675;
      *(void *)&uint8_t buf[4] = v41;
      _os_log_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_FAULT,  "Error, invalid proximity zone for fence,%{private}s",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(__p, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188BE30);
      }
      uint64_t v51 = qword_101934848;
      (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(buf, a2);
      if (v66 >= 0) {
        float v52 = buf;
      }
      else {
        float v52 = *(_BYTE **)buf;
      }
      int v67 = 136380675;
      int v68 = v52;
      LODWORD(v59) = 12;
      _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v51,  17LL,  "Error, invalid proximity zone for fence,%{private}s",  &v67,  v59);
      uint64_t v54 = v53;
      if (v66 < 0) {
        operator delete(*(void **)buf);
      }
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLBeaconFenceDatabase::addFence(const CLBTLEBeaconRegion_Type::MonitoredRegion &)",  "%s\n",  (const char *)v54);
      if (v54 != __p) {
        free(v54);
      }
    }

    uint64_t v39 = 0LL;
  }

  sub_1001BA1BC(v60);
  *(void *)((char *)v61
  uint64_t v62 = v45;
  std::streambuf::~streambuf(&v63);
  std::ios::~ios(&v64);
  return v39;
}

void sub_100EF9220( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,void *__p,uint64_t a57,int a58,__int16 a59,char a60,char a61)
{
  if (v61) {
    (*(void (**)(uint64_t))(*(void *)v61 + 8LL))(v61);
  }
  sub_1001BA1BC(&a12);
  sub_1011F8850((uint64_t)&a14);
  _Unwind_Resume(a1);
}

uint64_t sub_100EF92A8(uint64_t a1, std::string::size_type a2)
{
  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10188BE30);
  }
  int v4 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
  {
    else {
      std::string::size_type v5 = *(void *)a2;
    }
    LODWORD(buf[0].__r_.__value_.__l.__data_) = 136380675;
    *(std::string::size_type *)((char *)buf[0].__r_.__value_.__r.__words + 4) = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "iB: Removing all fences for bundle,%{private}s",  (uint8_t *)buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188BE30);
    }
    else {
      std::string::size_type v26 = *(void *)a2;
    }
    *(_DWORD *)uint64_t v38 = 136380675;
    *(void *)&v38[4] = v26;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "iB: Removing all fences for bundle,%{private}s",  v38,  12);
    uint64_t v28 = (std::stringbuf::string_type *)v27;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLBeaconFenceDatabase::removeAllFencesForBundleIncludingOnBehalf(const std::string &)",  "%s\n",  v27);
    if (v28 != buf) {
      free(v28);
    }
  }

  uint64_t v6 = sub_10000CF44(&v35, (uint64_t)"DELETE FROM ", 12LL);
  uint64_t v7 = sub_10000CF44(v6, (uint64_t)"BeaconFences", 12LL);
  uint64_t v8 = sub_10000CF44(v7, (uint64_t)" WHERE ", 7LL);
  uint64_t v9 = sub_10000CF44(v8, (uint64_t)"BundleIdentifier", 16LL);
  __int128 v10 = sub_10000CF44(v9, (uint64_t)"=? OR ", 6LL);
  uint64_t v11 = sub_10000CF44(v10, (uint64_t)"OnBehalfBundleIdentifier", 24LL);
  sub_10000CF44(v11, (uint64_t)"=?", 2LL);
  std::stringbuf::str(buf, &v36);
  if ((buf[0].__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t v12 = buf;
  }
  else {
    uint64_t v12 = (std::stringbuf::string_type *)buf[0].__r_.__value_.__r.__words[0];
  }
  sub_1003C0D54(a1, (char *)v12, v38);
  uint64_t v13 = *(void *)v38;
  *(void *)uint64_t v38 = 0LL;
  uint64_t v14 = (sqlite3_stmt *)sub_100019240(v13);
  else {
    uint64_t v15 = *(char **)a2;
  }
  if (sub_1003BC1F0(v14, 1, v15))
  {
    int v16 = (sqlite3_stmt *)sub_100019240(v13);
    char v17 = *(char *)(a2 + 23) >= 0 ? (char *)a2 : *(char **)a2;
    if (sub_1003BC1F0(v16, 2, v17))
    {
      int v18 = (sqlite3_stmt *)sub_100019240(v13);
      sub_1003BB2BC(a1, v18);
      else {
        uint64_t v19 = *(void *)(a1 + 88);
      }
      sub_1003C1EC0(a1, v19);
      uint64_t v20 = 1LL;
      if (!v13) {
        goto LABEL_37;
      }
      goto LABEL_36;
    }
  }

  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10188BE30);
  }
  unint64_t v21 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEFAULT))
  {
    else {
      std::string::size_type v22 = *(void *)a2;
    }
    LODWORD(buf[0].__r_.__value_.__l.__data_) = 136380675;
    *(std::string::size_type *)((char *)buf[0].__r_.__value_.__r.__words + 4) = v22;
    _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "#Warning Unable to bind SQL for removing all fences for bundle,%{private}s",  (uint8_t *)buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188BE30);
    }
    else {
      std::string::size_type v29 = *(void *)a2;
    }
    *(_DWORD *)uint64_t v38 = 136380675;
    *(void *)&v38[4] = v29;
    LODWORD(v32) = 12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  0LL,  "#Warning Unable to bind SQL for removing all fences for bundle,%{private}s",  v38,  v32);
    __int16 v31 = (std::stringbuf::string_type *)v30;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLBeaconFenceDatabase::removeAllFencesForBundleIncludingOnBehalf(const std::string &)",  "%s\n",  v30);
    if (v31 != buf) {
      free(v31);
    }
  }

  uint64_t v23 = (sqlite3_stmt *)sub_100019240(v13);
  sqlite3_reset(v23);
  uint64_t v20 = 0LL;
  if (v13) {
LABEL_36:
  }
    (*(void (**)(uint64_t))(*(void *)v13 + 8LL))(v13);
LABEL_37:
  sub_1001BA1BC(v33);
  *(void *)((char *)v34
  uint64_t v35 = v24;
  std::streambuf::~streambuf(&v36);
  std::ios::~ios(&v37);
  return v20;
}

void sub_100EF97CC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,void *__p,uint64_t a52,int a53,__int16 a54,char a55,char a56)
{
  if (v56) {
    (*(void (**)(uint64_t))(*(void *)v56 + 8LL))(v56);
  }
  sub_1001BA1BC(&a12);
  sub_1011F8850((uint64_t)&a14);
  _Unwind_Resume(a1);
}

uint64_t sub_100EF9838(uint64_t a1, std::string::size_type a2, uint64_t *a3)
{
  uint64_t p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10188BE30);
  }
  uint64_t v7 = &OBJC_METACLASS___CLPrivacyManager.vtable;
  uint64_t v8 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
  {
    else {
      std::string::size_type v9 = *(void *)a2;
    }
    LODWORD(buf.__r_.__value_.__l.__data_) = 136380675;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "iB: Retrieving fences for bundle,%{private}s",  (uint8_t *)&buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188BE30);
    }
    else {
      std::string::size_type v67 = *(void *)a2;
    }
    *(_DWORD *)int v81 = 136380675;
    *(void *)&v81[4] = v67;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "iB: Retrieving fences for bundle,%{private}s",  v81,  12);
    double v69 = (std::stringbuf::string_type *)v68;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLBeaconFenceDatabase::getFencesForBundle(const std::string &, CLBTLEBeaconRegion_Type::MonitoredRegions &)",  "%s\n",  v68);
    if (v69 != &buf) {
      free(v69);
    }
  }

  __int128 v10 = sub_10000CF44(&v78, (uint64_t)"SELECT ", 7LL);
  uint64_t v11 = sub_10000CF44(v10, (uint64_t)"BundleIdentifier", 16LL);
  uint64_t v12 = sub_10000CF44(v11, (uint64_t)", ", 2LL);
  uint64_t v13 = sub_10000CF44(v12, (uint64_t)"Identifier", 10LL);
  uint64_t v14 = sub_10000CF44(v13, (uint64_t)", ", 2LL);
  uint64_t v15 = sub_10000CF44(v14, (uint64_t)"ProximityUUID", 13LL);
  int v16 = sub_10000CF44(v15, (uint64_t)", ", 2LL);
  char v17 = sub_10000CF44(v16, (uint64_t)"Major", 5LL);
  int v18 = sub_10000CF44(v17, (uint64_t)", ", 2LL);
  uint64_t v19 = sub_10000CF44(v18, (uint64_t)"Minor", 5LL);
  uint64_t v20 = sub_10000CF44(v19, (uint64_t)", ", 2LL);
  unint64_t v21 = sub_10000CF44(v20, (uint64_t)"DefinitionMask", 14LL);
  std::string::size_type v22 = sub_10000CF44(v21, (uint64_t)", ", 2LL);
  uint64_t v23 = sub_10000CF44(v22, (uint64_t)"Options", 7LL);
  uint64_t v24 = sub_10000CF44(v23, (uint64_t)", ", 2LL);
  uint64_t v25 = sub_10000CF44(v24, (uint64_t)"OnBehalfBundleIdentifier", 24LL);
  std::string::size_type v26 = sub_10000CF44(v25, (uint64_t)" FROM ", 6LL);
  std::string::size_type v27 = sub_10000CF44(v26, (uint64_t)"BeaconFences", 12LL);
  uint64_t v28 = sub_10000CF44(v27, (uint64_t)" WHERE ", 7LL);
  std::string::size_type v29 = sub_10000CF44(v28, (uint64_t)"BundleIdentifier", 16LL);
  sub_10000CF44(v29, (uint64_t)"=?", 2LL);
  sub_100527B44(a3);
  std::stringbuf::str(&buf, &v79);
  if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_std::stringbuf::string_type buf = &buf;
  }
  else {
    p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
  }
  sub_1003C0D54(a1, (char *)p_buf, v81);
  uint64_t v31 = *(void *)v81;
  *(void *)int v81 = 0LL;
  uint64_t v32 = (sqlite3_stmt *)sub_100019240(v31);
  else {
    std::stringbuf::string_type v33 = *(char **)a2;
  }
  if (!sub_1003BC1F0(v32, 1, v33))
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188BE30);
    }
    uint64_t v38 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_FAULT))
    {
      else {
        std::string::size_type v39 = *(void *)a2;
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 136380675;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v39;
      _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_FAULT,  "Unable to bind SQL for retrieving fences for bundle,%{private}s",  (uint8_t *)&buf,  0xCu);
    }

    if (!sub_1002921D0(115, 0)) {
      goto LABEL_36;
    }
    bzero(&buf, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188BE30);
    }
    std::string::size_type v70 = *(char *)(a2 + 23) >= 0 ? a2 : *(void *)a2;
    *(_DWORD *)int v81 = 136380675;
    *(void *)&v81[4] = v70;
    LODWORD(v75) = 12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934848,  17LL,  "Unable to bind SQL for retrieving fences for bundle,%{private}s",  v81,  v75);
    double v72 = (std::stringbuf::string_type *)v71;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLBeaconFenceDatabase::getFencesForBundle(const std::string &, CLBTLEBeaconRegion_Type::MonitoredRegions &)",  "%s\n",  v71);
    if (v72 == &buf) {
      goto LABEL_36;
    }
LABEL_77:
    free(v72);
LABEL_36:
    __int16 v40 = (sqlite3_stmt *)sub_100019240(v31);
    sqlite3_reset(v40);
    goto LABEL_37;
  }

  uint64_t v34 = (sqlite3_stmt *)sub_100019240(v31);
  int v35 = sqlite3_step(v34);
  if ((v35 - 102) < 0xFFFFFFFE)
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188BE30);
    }
    std::stringbuf v36 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_FAULT))
    {
      else {
        std::string::size_type v37 = *(void *)a2;
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 136380675;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v37;
      _os_log_impl( (void *)&_mh_execute_header,  v36,  OS_LOG_TYPE_FAULT,  "Unable to get fences from database for bundle,%{private}s",  (uint8_t *)&buf,  0xCu);
    }

    if (!sub_1002921D0(115, 0)) {
      goto LABEL_36;
    }
    bzero(&buf, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188BE30);
    }
    std::string::size_type v73 = *(char *)(a2 + 23) >= 0 ? a2 : *(void *)a2;
    *(_DWORD *)int v81 = 136380675;
    *(void *)&v81[4] = v73;
    LODWORD(v75) = 12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934848,  17LL,  "Unable to get fences from database for bundle,%{private}s",  v81,  v75);
    double v72 = (std::stringbuf::string_type *)v74;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLBeaconFenceDatabase::getFencesForBundle(const std::string &, CLBTLEBeaconRegion_Type::MonitoredRegions &)",  "%s\n",  v74);
    if (v72 == &buf) {
      goto LABEL_36;
    }
    goto LABEL_77;
  }

  if (v35 == 100)
  {
    do
    {
      *(_OWORD *)&buf.__r_.__value_.__r.__words[1] = 0u;
      __int128 v83 = 0u;
      buf.__r_.__value_.__r.__words[0] = (std::string::size_type)off_10182CDC8;
      memset(v84, 0, sizeof(v84));
      memset(&v85, 0, sizeof(v85));
      int v44 = (sqlite3_stmt *)sub_100019240(v31);
      uint64_t v45 = sqlite3_column_text(v44, 0);
      std::string::assign(v84, (const std::string::value_type *)v45);
      int v46 = (sqlite3_stmt *)sub_100019240(v31);
      uint64_t v47 = sqlite3_column_text(v46, 1);
      std::string::assign(&v85, (const std::string::value_type *)v47);
      uint64_t v48 = (sqlite3_stmt *)sub_100019240(v31);
      int v49 = sqlite3_column_text(v48, 2);
      std::string::assign((std::string *)&buf.__r_.__value_.__r.__words[1], (const std::string::value_type *)v49);
      int v50 = (sqlite3_stmt *)sub_100019240(v31);
      WORD4(v83) = sqlite3_column_int(v50, 3);
      uint64_t v51 = (sqlite3_stmt *)sub_100019240(v31);
      WORD5(v83) = sqlite3_column_int(v51, 4);
      float v52 = (sqlite3_stmt *)sub_100019240(v31);
      HIDWORD(v83) = sqlite3_column_int(v52, 5);
      float v53 = (sqlite3_stmt *)sub_100019240(v31);
      int v86 = sqlite3_column_int(v53, 6);
      uint64_t v54 = (sqlite3_stmt *)sub_100019240(v31);
      uint64_t v55 = sqlite3_column_text(v54, 7);
      std::string::assign(&v84[1], (const std::string::value_type *)v55);
      uint64_t v56 = sub_1007F14D0((uint64_t)a3, 0LL, 0LL, (uint64_t)&buf);
      v56[1] = a3;
      uint64_t v57 = *a3;
      *uint64_t v56 = *a3;
      *(void *)(v57 + _Block_object_dispose(va, 8) = v56;
      *a3 = (uint64_t)v56;
      ++a3[2];
      uint64_t v58 = (sqlite3_stmt *)sub_100019240(v31);
      int v59 = sqlite3_step(v58);
      sub_1002722AC((uint64_t)&buf);
    }

    while (v59 == 100);
    uint64_t v7 = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
    uint64_t p_vtable = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
  }

  else
  {
    int v59 = 101;
  }

  id v60 = (sqlite3_stmt *)sub_100019240(v31);
  sqlite3_reset(v60);
  if (v59 != 101)
  {
    uint64_t v61 = (os_log_s *)v7[265];
    if (os_log_type_enabled(v61, OS_LOG_TYPE_FAULT))
    {
      else {
        std::string::size_type v62 = *(void *)a2;
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 136380675;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v62;
      _os_log_impl( (void *)&_mh_execute_header,  v61,  OS_LOG_TYPE_FAULT,  "An error was encountered when retrieving fences from the database for bundle,%{private}s",  (uint8_t *)&buf,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(&buf, 0x65CuLL);
      std::stringbuf v63 = v7[265];
      else {
        std::string::size_type v64 = *(void *)a2;
      }
      *(_DWORD *)int v81 = 136380675;
      *(void *)&v81[4] = v64;
      LODWORD(v75) = 12;
      _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v63,  17LL,  "An error was encountered when retrieving fences from the database for bundle,%{private}s",  v81,  v75);
      char v66 = (std::stringbuf::string_type *)v65;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLBeaconFenceDatabase::getFencesForBundle(const std::string &, CLBTLEBeaconRegion_Type::MonitoredRegions &)",  "%s\n",  v65);
      if (v66 != &buf) {
        free(v66);
      }
    }

void sub_100EFA268( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,void *__p,uint64_t a52,int a53,__int16 a54,char a55,char a56)
{
  if (v56) {
    (*(void (**)(uint64_t))(*(void *)v56 + 8LL))(v56);
  }
  sub_1001BA1BC(&a12);
  sub_1011F8850((uint64_t)&a14);
  _Unwind_Resume(a1);
}

uint64_t sub_100EFA2F0(uint64_t a1, std::string::size_type a2, uint64_t *a3)
{
  uint64_t p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10188BE30);
  }
  uint64_t v7 = &OBJC_METACLASS___CLPrivacyManager.vtable;
  uint64_t v8 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
  {
    else {
      std::string::size_type v9 = *(void *)a2;
    }
    LODWORD(buf.__r_.__value_.__l.__data_) = 136380675;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "iB: Retrieving fences for bundle,%{private}s",  (uint8_t *)&buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188BE30);
    }
    else {
      std::string::size_type v71 = *(void *)a2;
    }
    int v85 = 136380675;
    std::string::size_type v86 = v71;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "iB: Retrieving fences for bundle,%{private}s",  &v85,  12);
    std::string::size_type v73 = (std::stringbuf::string_type *)v72;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLBeaconFenceDatabase::getFencesForBundleIncludingOnBehalf(const std::string &, CLBTLEBeaconRegion_Type::MonitoredRegions &)",  "%s\n",  v72);
    if (v73 != &buf) {
      free(v73);
    }
  }

  sub_100222B94(&v85, (uint64_t)"CLBeaconFenceDatabase::getFencesForBundleIncludingOnBehalf", 0);
  __int128 v10 = sub_10000CF44(&v81, (uint64_t)"SELECT ", 7LL);
  uint64_t v11 = sub_10000CF44(v10, (uint64_t)"BundleIdentifier", 16LL);
  uint64_t v12 = sub_10000CF44(v11, (uint64_t)", ", 2LL);
  uint64_t v13 = sub_10000CF44(v12, (uint64_t)"Identifier", 10LL);
  uint64_t v14 = sub_10000CF44(v13, (uint64_t)", ", 2LL);
  uint64_t v15 = sub_10000CF44(v14, (uint64_t)"ProximityUUID", 13LL);
  int v16 = sub_10000CF44(v15, (uint64_t)", ", 2LL);
  char v17 = sub_10000CF44(v16, (uint64_t)"Major", 5LL);
  int v18 = sub_10000CF44(v17, (uint64_t)", ", 2LL);
  uint64_t v19 = sub_10000CF44(v18, (uint64_t)"Minor", 5LL);
  uint64_t v20 = sub_10000CF44(v19, (uint64_t)", ", 2LL);
  unint64_t v21 = sub_10000CF44(v20, (uint64_t)"DefinitionMask", 14LL);
  std::string::size_type v22 = sub_10000CF44(v21, (uint64_t)", ", 2LL);
  uint64_t v23 = sub_10000CF44(v22, (uint64_t)"Options", 7LL);
  uint64_t v24 = sub_10000CF44(v23, (uint64_t)", ", 2LL);
  uint64_t v25 = sub_10000CF44(v24, (uint64_t)"OnBehalfBundleIdentifier", 24LL);
  std::string::size_type v26 = sub_10000CF44(v25, (uint64_t)" FROM ", 6LL);
  std::string::size_type v27 = sub_10000CF44(v26, (uint64_t)"BeaconFences", 12LL);
  uint64_t v28 = sub_10000CF44(v27, (uint64_t)" WHERE ", 7LL);
  std::string::size_type v29 = sub_10000CF44(v28, (uint64_t)"BundleIdentifier", 16LL);
  uint64_t v30 = sub_10000CF44(v29, (uint64_t)"=? OR ", 6LL);
  uint64_t v31 = sub_10000CF44(v30, (uint64_t)"OnBehalfBundleIdentifier", 24LL);
  sub_10000CF44(v31, (uint64_t)"=?", 2LL);
  sub_100527B44(a3);
  std::stringbuf::str(&buf, &v82);
  if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_std::stringbuf::string_type buf = &buf;
  }
  else {
    p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
  }
  sub_1003C0D54(a1, (char *)p_buf, v84);
  uint64_t v33 = *(void *)v84;
  *(void *)BOOL v84 = 0LL;
  uint64_t v34 = (sqlite3_stmt *)sub_100019240(v33);
  else {
    int v35 = *(char **)a2;
  }
  if (!sub_1003BC1F0(v34, 1, v35)
    || ((v36 = (sqlite3_stmt *)sub_100019240(v33), *(char *)(a2 + 23) >= 0) ? (std::string::size_type v37 = (char *)a2) : (std::string::size_type v37 = *(char **)a2),
        !sub_1003BC1F0(v36, 2, v37)))
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188BE30);
    }
    uint64_t v42 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_FAULT))
    {
      else {
        std::string::size_type v43 = *(void *)a2;
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 136380675;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v43;
      _os_log_impl( (void *)&_mh_execute_header,  v42,  OS_LOG_TYPE_FAULT,  "Unable to bind SQL for retrieving fences for bundle,%{private}s",  (uint8_t *)&buf,  0xCu);
    }

    if (!sub_1002921D0(115, 0)) {
      goto LABEL_40;
    }
    bzero(&buf, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188BE30);
    }
    std::string::size_type v74 = *(char *)(a2 + 23) >= 0 ? a2 : *(void *)a2;
    *(_DWORD *)BOOL v84 = 136380675;
    *(void *)&v84[4] = v74;
    LODWORD(v79) = 12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934848,  17LL,  "Unable to bind SQL for retrieving fences for bundle,%{private}s",  v84,  v79);
    float v76 = (std::stringbuf::string_type *)v75;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLBeaconFenceDatabase::getFencesForBundleIncludingOnBehalf(const std::string &, CLBTLEBeaconRegion_Type::MonitoredRegions &)",  "%s\n",  v75);
    if (v76 == &buf) {
      goto LABEL_40;
    }
LABEL_81:
    free(v76);
LABEL_40:
    int v44 = (sqlite3_stmt *)sub_100019240(v33);
    sqlite3_reset(v44);
    goto LABEL_41;
  }

  uint64_t v38 = (sqlite3_stmt *)sub_100019240(v33);
  int v39 = sqlite3_step(v38);
  if ((v39 - 102) < 0xFFFFFFFE)
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188BE30);
    }
    __int16 v40 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_FAULT))
    {
      else {
        std::string::size_type v41 = *(void *)a2;
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 136380675;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v41;
      _os_log_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_FAULT,  "Unable to get fences from database for bundle,%{private}s",  (uint8_t *)&buf,  0xCu);
    }

    if (!sub_1002921D0(115, 0)) {
      goto LABEL_40;
    }
    bzero(&buf, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188BE30);
    }
    std::string::size_type v77 = *(char *)(a2 + 23) >= 0 ? a2 : *(void *)a2;
    *(_DWORD *)BOOL v84 = 136380675;
    *(void *)&v84[4] = v77;
    LODWORD(v79) = 12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934848,  17LL,  "Unable to get fences from database for bundle,%{private}s",  v84,  v79);
    float v76 = (std::stringbuf::string_type *)v78;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLBeaconFenceDatabase::getFencesForBundleIncludingOnBehalf(const std::string &, CLBTLEBeaconRegion_Type::MonitoredRegions &)",  "%s\n",  v78);
    if (v76 == &buf) {
      goto LABEL_40;
    }
    goto LABEL_81;
  }

  if (v39 == 100)
  {
    do
    {
      *(_OWORD *)&buf.__r_.__value_.__r.__words[1] = 0u;
      __int128 v88 = 0u;
      buf.__r_.__value_.__r.__words[0] = (std::string::size_type)off_10182CDC8;
      memset(v89, 0, sizeof(v89));
      memset(&v90, 0, sizeof(v90));
      uint64_t v48 = (sqlite3_stmt *)sub_100019240(v33);
      int v49 = sqlite3_column_text(v48, 0);
      std::string::assign(v89, (const std::string::value_type *)v49);
      int v50 = (sqlite3_stmt *)sub_100019240(v33);
      uint64_t v51 = sqlite3_column_text(v50, 1);
      std::string::assign(&v90, (const std::string::value_type *)v51);
      float v52 = (sqlite3_stmt *)sub_100019240(v33);
      float v53 = sqlite3_column_text(v52, 2);
      std::string::assign((std::string *)&buf.__r_.__value_.__r.__words[1], (const std::string::value_type *)v53);
      uint64_t v54 = (sqlite3_stmt *)sub_100019240(v33);
      WORD4(v8_Block_object_dispose(va, 8) = sqlite3_column_int(v54, 3);
      uint64_t v55 = (sqlite3_stmt *)sub_100019240(v33);
      WORD5(v8_Block_object_dispose(va, 8) = sqlite3_column_int(v55, 4);
      uint64_t v56 = (sqlite3_stmt *)sub_100019240(v33);
      HIDWORD(v8_Block_object_dispose(va, 8) = sqlite3_column_int(v56, 5);
      uint64_t v57 = (sqlite3_stmt *)sub_100019240(v33);
      int v91 = sqlite3_column_int(v57, 6);
      uint64_t v58 = (sqlite3_stmt *)sub_100019240(v33);
      int v59 = sqlite3_column_text(v58, 7);
      std::string::assign(&v89[1], (const std::string::value_type *)v59);
      id v60 = sub_1007F14D0((uint64_t)a3, 0LL, 0LL, (uint64_t)&buf);
      v60[1] = a3;
      uint64_t v61 = *a3;
      *id v60 = *a3;
      *(void *)(v61 + _Block_object_dispose(va, 8) = v60;
      *a3 = (uint64_t)v60;
      ++a3[2];
      std::string::size_type v62 = (sqlite3_stmt *)sub_100019240(v33);
      int v63 = sqlite3_step(v62);
      sub_1002722AC((uint64_t)&buf);
    }

    while (v63 == 100);
    uint64_t v7 = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
    uint64_t p_vtable = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
  }

  else
  {
    int v63 = 101;
  }

  std::string::size_type v64 = (sqlite3_stmt *)sub_100019240(v33);
  sqlite3_reset(v64);
  if (v63 != 101)
  {
    __int128 v65 = (os_log_s *)v7[265];
    if (os_log_type_enabled(v65, OS_LOG_TYPE_FAULT))
    {
      else {
        std::string::size_type v66 = *(void *)a2;
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 136380675;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v66;
      _os_log_impl( (void *)&_mh_execute_header,  v65,  OS_LOG_TYPE_FAULT,  "An error was encountered when retrieving fences from the database for bundle,%{private}s",  (uint8_t *)&buf,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(&buf, 0x65CuLL);
      std::string::size_type v67 = v7[265];
      else {
        std::string::size_type v68 = *(void *)a2;
      }
      *(_DWORD *)BOOL v84 = 136380675;
      *(void *)&v84[4] = v68;
      LODWORD(v79) = 12;
      _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v67,  17LL,  "An error was encountered when retrieving fences from the database for bundle,%{private}s",  v84,  v79);
      std::string::size_type v70 = (std::stringbuf::string_type *)v69;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLBeaconFenceDatabase::getFencesForBundleIncludingOnBehalf(const std::string &, CLBTLEBeaconRegion_Type::Mo nitoredRegions &)",  "%s\n",  v69);
      if (v70 != &buf) {
        free(v70);
      }
    }

void sub_100EFAD68( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, id a49, uint64_t a50,void *__p,uint64_t a52,int a53,__int16 a54,char a55,char a56)
{
  if (v56) {
    (*(void (**)(uint64_t))(*(void *)v56 + 8LL))(v56);
  }
  sub_1001BA1BC(&a49);
  sub_1011F8850((uint64_t)&a12);
  _Unwind_Resume(a1);
}

uint64_t sub_100EFADF4(uint64_t a1, const std::string *a2, const std::string *a3, uint64_t *a4)
{
  uint64_t p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10188BE30);
  }
  std::string::size_type v9 = &OBJC_METACLASS___CLPrivacyManager.vtable;
  __int128 v10 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
  {
    if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
      std::string::size_type v11 = (std::string::size_type)a2;
    }
    else {
      std::string::size_type v11 = a2->__r_.__value_.__r.__words[0];
    }
    LODWORD(buf.__r_.__value_.__l.__data_) = 136380675;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "iB: Retrieving fences for bundle,%{private}s",  (uint8_t *)&buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188BE30);
    }
    if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
      __int128 v65 = a2;
    }
    else {
      __int128 v65 = (const std::string *)a2->__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)uint64_t v79 = 136380675;
    *(void *)&v79[4] = v65;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "iB: Retrieving fences for bundle,%{private}s",  v79,  12);
    std::string::size_type v67 = (std::stringbuf::string_type *)v66;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLBeaconFenceDatabase::getFencesForBundleAndOnBehalf(const std::string &, const std::string &, CLBTLEBeaconRe gion_Type::MonitoredRegions &)",  "%s\n",  v66);
    if (v67 != &buf) {
      free(v67);
    }
  }

  uint64_t v12 = sub_10000CF44(&v76, (uint64_t)"SELECT ", 7LL);
  uint64_t v13 = sub_10000CF44(v12, (uint64_t)"Identifier", 10LL);
  uint64_t v14 = sub_10000CF44(v13, (uint64_t)", ", 2LL);
  uint64_t v15 = sub_10000CF44(v14, (uint64_t)"ProximityUUID", 13LL);
  int v16 = sub_10000CF44(v15, (uint64_t)", ", 2LL);
  char v17 = sub_10000CF44(v16, (uint64_t)"Major", 5LL);
  int v18 = sub_10000CF44(v17, (uint64_t)", ", 2LL);
  uint64_t v19 = sub_10000CF44(v18, (uint64_t)"Minor", 5LL);
  uint64_t v20 = sub_10000CF44(v19, (uint64_t)", ", 2LL);
  unint64_t v21 = sub_10000CF44(v20, (uint64_t)"DefinitionMask", 14LL);
  std::string::size_type v22 = sub_10000CF44(v21, (uint64_t)", ", 2LL);
  uint64_t v23 = sub_10000CF44(v22, (uint64_t)"Options", 7LL);
  uint64_t v24 = sub_10000CF44(v23, (uint64_t)" FROM ", 6LL);
  uint64_t v25 = sub_10000CF44(v24, (uint64_t)"BeaconFences", 12LL);
  std::string::size_type v26 = sub_10000CF44(v25, (uint64_t)" WHERE ", 7LL);
  std::string::size_type v27 = sub_10000CF44(v26, (uint64_t)"BundleIdentifier", 16LL);
  uint64_t v28 = sub_10000CF44(v27, (uint64_t)"=? AND ", 7LL);
  std::string::size_type v29 = sub_10000CF44(v28, (uint64_t)"OnBehalfBundleIdentifier", 24LL);
  sub_10000CF44(v29, (uint64_t)"=?", 2LL);
  sub_100527B44(a4);
  std::stringbuf::str(&buf, &v77);
  if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_std::stringbuf::string_type buf = &buf;
  }
  else {
    p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
  }
  sub_1003C0D54(a1, (char *)p_buf, v79);
  uint64_t v31 = *(void *)v79;
  *(void *)uint64_t v79 = 0LL;
  uint64_t v32 = (sqlite3_stmt *)sub_100019240(v31);
  if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t v33 = (char *)a2;
  }
  else {
    uint64_t v33 = (char *)a2->__r_.__value_.__r.__words[0];
  }
  if (!sub_1003BC1F0(v32, 1, v33)
    || ((uint64_t v34 = (sqlite3_stmt *)sub_100019240(v31), (a3->__r_.__value_.__s.__size_ & 0x80u) == 0)
      ? (int v35 = (char *)a3)
      : (int v35 = (char *)a3->__r_.__value_.__r.__words[0]),
        !sub_1003BC1F0(v34, 2, v35)))
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188BE30);
    }
    __int16 v40 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_FAULT))
    {
      if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
        std::string::size_type v41 = (std::string::size_type)a2;
      }
      else {
        std::string::size_type v41 = a2->__r_.__value_.__r.__words[0];
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 136380675;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v41;
      _os_log_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_FAULT,  "Unable to bind SQL for retrieving fences for bundle,%{private}s",  (uint8_t *)&buf,  0xCu);
    }

    if (!sub_1002921D0(115, 0)) {
      goto LABEL_40;
    }
    bzero(&buf, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188BE30);
    }
    std::string::size_type v68 = (a2->__r_.__value_.__s.__size_ & 0x80u) == 0 ? a2 : (const std::string *)a2->__r_.__value_.__r.__words[0];
    *(_DWORD *)uint64_t v79 = 136380675;
    *(void *)&v79[4] = v68;
    LODWORD(v73) = 12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934848,  17LL,  "Unable to bind SQL for retrieving fences for bundle,%{private}s",  v79,  v73);
    std::string::size_type v70 = (std::stringbuf::string_type *)v69;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLBeaconFenceDatabase::getFencesForBundleAndOnBehalf(const std::string &, const std::string &, CLBTLEBeaconRe gion_Type::MonitoredRegions &)",  "%s\n",  v69);
    if (v70 == &buf) {
      goto LABEL_40;
    }
LABEL_81:
    free(v70);
LABEL_40:
    uint64_t v42 = (sqlite3_stmt *)sub_100019240(v31);
    sqlite3_reset(v42);
    goto LABEL_41;
  }

  std::stringbuf v36 = (sqlite3_stmt *)sub_100019240(v31);
  int v37 = sqlite3_step(v36);
  if ((v37 - 102) < 0xFFFFFFFE)
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188BE30);
    }
    uint64_t v38 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_FAULT))
    {
      if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
        std::string::size_type v39 = (std::string::size_type)a2;
      }
      else {
        std::string::size_type v39 = a2->__r_.__value_.__r.__words[0];
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 136380675;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v39;
      _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_FAULT,  "Unable to get fences from database for bundle,%{private}s",  (uint8_t *)&buf,  0xCu);
    }

    if (!sub_1002921D0(115, 0)) {
      goto LABEL_40;
    }
    bzero(&buf, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188BE30);
    }
    std::string::size_type v71 = (a2->__r_.__value_.__s.__size_ & 0x80u) == 0 ? a2 : (const std::string *)a2->__r_.__value_.__r.__words[0];
    *(_DWORD *)uint64_t v79 = 136380675;
    *(void *)&v79[4] = v71;
    LODWORD(v73) = 12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934848,  17LL,  "Unable to get fences from database for bundle,%{private}s",  v79,  v73);
    std::string::size_type v70 = (std::stringbuf::string_type *)v72;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLBeaconFenceDatabase::getFencesForBundleAndOnBehalf(const std::string &, const std::string &, CLBTLEBeaconRe gion_Type::MonitoredRegions &)",  "%s\n",  v72);
    if (v70 == &buf) {
      goto LABEL_40;
    }
    goto LABEL_81;
  }

  if (v37 == 100)
  {
    do
    {
      *(_OWORD *)&buf.__r_.__value_.__r.__words[1] = 0u;
      __int128 v81 = 0u;
      buf.__r_.__value_.__r.__words[0] = (std::string::size_type)off_10182CDC8;
      memset(v82, 0, sizeof(v82));
      memset(&v83, 0, sizeof(v83));
      std::string::operator=(v82, a2);
      uint64_t v46 = (sqlite3_stmt *)sub_100019240(v31);
      uint64_t v47 = sqlite3_column_text(v46, 0);
      std::string::assign(&v83, (const std::string::value_type *)v47);
      uint64_t v48 = (sqlite3_stmt *)sub_100019240(v31);
      int v49 = sqlite3_column_text(v48, 1);
      std::string::assign((std::string *)&buf.__r_.__value_.__r.__words[1], (const std::string::value_type *)v49);
      int v50 = (sqlite3_stmt *)sub_100019240(v31);
      WORD4(v81) = sqlite3_column_int(v50, 2);
      uint64_t v51 = (sqlite3_stmt *)sub_100019240(v31);
      WORD5(v81) = sqlite3_column_int(v51, 3);
      float v52 = (sqlite3_stmt *)sub_100019240(v31);
      HIDWORD(v81) = sqlite3_column_int(v52, 4);
      float v53 = (sqlite3_stmt *)sub_100019240(v31);
      int v84 = sqlite3_column_int(v53, 5);
      std::string::operator=(&v82[1], a3);
      uint64_t v54 = sub_1007F14D0((uint64_t)a4, 0LL, 0LL, (uint64_t)&buf);
      v54[1] = a4;
      uint64_t v55 = *a4;
      *uint64_t v54 = *a4;
      *(void *)(v55 + _Block_object_dispose(va, 8) = v54;
      *a4 = (uint64_t)v54;
      ++a4[2];
      uint64_t v56 = (sqlite3_stmt *)sub_100019240(v31);
      int v57 = sqlite3_step(v56);
      sub_1002722AC((uint64_t)&buf);
    }

    while (v57 == 100);
    std::string::size_type v9 = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
    uint64_t p_vtable = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
  }

  else
  {
    int v57 = 101;
  }

  uint64_t v58 = (sqlite3_stmt *)sub_100019240(v31);
  sqlite3_reset(v58);
  if (v57 != 101)
  {
    int v59 = (os_log_s *)v9[265];
    if (os_log_type_enabled(v59, OS_LOG_TYPE_FAULT))
    {
      if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
        std::string::size_type v60 = (std::string::size_type)a2;
      }
      else {
        std::string::size_type v60 = a2->__r_.__value_.__r.__words[0];
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 136380675;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v60;
      _os_log_impl( (void *)&_mh_execute_header,  v59,  OS_LOG_TYPE_FAULT,  "An error was encountered when retrieving fences from the database for bundle,%{private}s",  (uint8_t *)&buf,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(&buf, 0x65CuLL);
      uint64_t v61 = v9[265];
      if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
        std::string::size_type v62 = a2;
      }
      else {
        std::string::size_type v62 = (const std::string *)a2->__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)uint64_t v79 = 136380675;
      *(void *)&v79[4] = v62;
      LODWORD(v73) = 12;
      _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v61,  17LL,  "An error was encountered when retrieving fences from the database for bundle,%{private}s",  v79,  v73);
      std::string::size_type v64 = (std::stringbuf::string_type *)v63;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLBeaconFenceDatabase::getFencesForBundleAndOnBehalf(const std::string &, const std::string &, CLBTLEBeacon Region_Type::MonitoredRegions &)",  "%s\n",  v63);
      if (v64 != &buf) {
        free(v64);
      }
    }

void sub_100EFB818( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,void *__p,uint64_t a52,int a53,__int16 a54,char a55,char a56)
{
  if (v56) {
    (*(void (**)(uint64_t))(*(void *)v56 + 8LL))(v56);
  }
  sub_1001BA1BC(&a12);
  sub_1011F8850((uint64_t)&a14);
  _Unwind_Resume(a1);
}

uint64_t sub_100EFB8A0( uint64_t a1, const std::string *a2, const std::string *a3, const std::string *a4, uint64_t a5)
{
  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10188BE30);
  }
  __int128 v10 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
  {
    if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
      std::string::size_type v11 = (std::string::size_type)a2;
    }
    else {
      std::string::size_type v11 = a2->__r_.__value_.__r.__words[0];
    }
    if ((a4->__r_.__value_.__s.__size_ & 0x80u) == 0) {
      std::string::size_type v12 = (std::string::size_type)a4;
    }
    else {
      std::string::size_type v12 = a4->__r_.__value_.__r.__words[0];
    }
    LODWORD(buf.__r_.__value_.__l.__data_) = 136380931;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v11;
    WORD2(buf.__r_.__value_.__r.__words[1]) = 2081;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v12;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "iB: Retrieving fence,%{private}s/%{private}s",  (uint8_t *)&buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188BE30);
    }
    if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
      std::string::size_type v60 = a2;
    }
    else {
      std::string::size_type v60 = (const std::string *)a2->__r_.__value_.__r.__words[0];
    }
    if ((a4->__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v61 = a4;
    }
    else {
      uint64_t v61 = (const std::string *)a4->__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)uint64_t v79 = 136380931;
    *(void *)&v79[4] = v60;
    __int16 v80 = 2081;
    __int128 v81 = v61;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "iB: Retrieving fence,%{private}s/%{private}s",  v79,  22);
    int v63 = (std::stringbuf::string_type *)v62;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLBeaconFenceDatabase::getFenceForBundleAndOnBehalf(const std::string &, const std::string &, const std::stri ng &, CLBTLEBeaconRegion_Type::MonitoredRegion &)",  "%s\n",  v62);
    if (v63 != &buf) {
      free(v63);
    }
  }

  uint64_t v13 = sub_10000CF44(&v76, (uint64_t)"SELECT ", 7LL);
  uint64_t v14 = sub_10000CF44(v13, (uint64_t)"ProximityUUID", 13LL);
  uint64_t v15 = sub_10000CF44(v14, (uint64_t)", ", 2LL);
  int v16 = sub_10000CF44(v15, (uint64_t)"Major", 5LL);
  char v17 = sub_10000CF44(v16, (uint64_t)", ", 2LL);
  int v18 = sub_10000CF44(v17, (uint64_t)"Minor", 5LL);
  uint64_t v19 = sub_10000CF44(v18, (uint64_t)", ", 2LL);
  uint64_t v20 = sub_10000CF44(v19, (uint64_t)"DefinitionMask", 14LL);
  unint64_t v21 = sub_10000CF44(v20, (uint64_t)", ", 2LL);
  std::string::size_type v22 = sub_10000CF44(v21, (uint64_t)"Options", 7LL);
  uint64_t v23 = sub_10000CF44(v22, (uint64_t)" FROM ", 6LL);
  uint64_t v24 = sub_10000CF44(v23, (uint64_t)"BeaconFences", 12LL);
  uint64_t v25 = sub_10000CF44(v24, (uint64_t)" WHERE ", 7LL);
  std::string::size_type v26 = sub_10000CF44(v25, (uint64_t)"BundleIdentifier", 16LL);
  std::string::size_type v27 = sub_10000CF44(v26, (uint64_t)"=? AND ", 7LL);
  uint64_t v28 = sub_10000CF44(v27, (uint64_t)"Identifier", 10LL);
  std::string::size_type v29 = sub_10000CF44(v28, (uint64_t)"=? AND ", 7LL);
  uint64_t v30 = sub_10000CF44(v29, (uint64_t)"OnBehalfBundleIdentifier", 24LL);
  sub_10000CF44(v30, (uint64_t)"=?", 2LL);
  std::stringbuf::str(&buf, &v77);
  if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_std::stringbuf::string_type buf = &buf;
  }
  else {
    p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
  }
  sub_1003C0D54(a1, (char *)p_buf, v79);
  uint64_t v32 = *(void *)v79;
  *(void *)uint64_t v79 = 0LL;
  uint64_t v33 = (sqlite3_stmt *)sub_100019240(v32);
  if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t v34 = (char *)a2;
  }
  else {
    uint64_t v34 = (char *)a2->__r_.__value_.__r.__words[0];
  }
  if (!sub_1003BC1F0(v33, 1, v34)
    || ((int v35 = (sqlite3_stmt *)sub_100019240(v32), (a4->__r_.__value_.__s.__size_ & 0x80u) == 0)
      ? (std::stringbuf v36 = (char *)a4)
      : (std::stringbuf v36 = (char *)a4->__r_.__value_.__r.__words[0]),
        !sub_1003BC1F0(v35, 2, v36)
     || ((int v37 = (sqlite3_stmt *)sub_100019240(v32), (a3->__r_.__value_.__s.__size_ & 0x80u) == 0)
       ? (uint64_t v38 = (char *)a3)
       : (uint64_t v38 = (char *)a3->__r_.__value_.__r.__words[0]),
         !sub_1003BC1F0(v37, 3, v38))))
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188BE30);
    }
    uint64_t v45 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_FAULT))
    {
      if ((a3->__r_.__value_.__s.__size_ & 0x80u) == 0) {
        std::string::size_type v46 = (std::string::size_type)a3;
      }
      else {
        std::string::size_type v46 = a3->__r_.__value_.__r.__words[0];
      }
      if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
        std::string::size_type v47 = (std::string::size_type)a2;
      }
      else {
        std::string::size_type v47 = a2->__r_.__value_.__r.__words[0];
      }
      if ((a4->__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v48 = a4;
      }
      else {
        uint64_t v48 = (const std::string *)a4->__r_.__value_.__r.__words[0];
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 136381187;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v46;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2081;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v47;
      HIWORD(buf.__r_.__value_.__r.__words[2]) = 2081;
      int v85 = v48;
      _os_log_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_FAULT,  "Unable to bind SQL for retrieving fence,[%{private}s]/%{private}s/%{private}s",  (uint8_t *)&buf,  0x20u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188BE30);
      }
      std::string::size_type v64 = (a3->__r_.__value_.__s.__size_ & 0x80u) == 0 ? a3 : (const std::string *)a3->__r_.__value_.__r.__words[0];
      __int128 v65 = (a2->__r_.__value_.__s.__size_ & 0x80u) == 0 ? a2 : (const std::string *)a2->__r_.__value_.__r.__words[0];
      std::string::size_type v66 = (a4->__r_.__value_.__s.__size_ & 0x80u) == 0 ? a4 : (const std::string *)a4->__r_.__value_.__r.__words[0];
      *(_DWORD *)uint64_t v79 = 136381187;
      *(void *)&v79[4] = v64;
      __int16 v80 = 2081;
      __int128 v81 = v65;
      __int16 v82 = 2081;
      std::string v83 = v66;
      LODWORD(v73) = 32;
      _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934848,  17LL,  "Unable to bind SQL for retrieving fence,[%{private}s]/%{private}s/%{private}s",  v79,  v73);
      std::string::size_type v68 = (std::stringbuf::string_type *)v67;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLBeaconFenceDatabase::getFenceForBundleAndOnBehalf(const std::string &, const std::string &, const std::st ring &, CLBTLEBeaconRegion_Type::MonitoredRegion &)",  "%s\n",  v67);
      if (v68 != &buf) {
        goto LABEL_89;
      }
    }

    goto LABEL_60;
  }

  std::string::size_type v39 = (sqlite3_stmt *)sub_100019240(v32);
  int v40 = sqlite3_step(v39);
  if (v40 != 100)
  {
    if (v40 != 101)
    {
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188BE30);
      }
      std::string::size_type v41 = (os_log_s *)qword_101934848;
      if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_FAULT))
      {
        if ((a3->__r_.__value_.__s.__size_ & 0x80u) == 0) {
          std::string::size_type v42 = (std::string::size_type)a3;
        }
        else {
          std::string::size_type v42 = a3->__r_.__value_.__r.__words[0];
        }
        if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
          std::string::size_type v43 = (std::string::size_type)a2;
        }
        else {
          std::string::size_type v43 = a2->__r_.__value_.__r.__words[0];
        }
        if ((a4->__r_.__value_.__s.__size_ & 0x80u) == 0) {
          uint64_t v44 = a4;
        }
        else {
          uint64_t v44 = (const std::string *)a4->__r_.__value_.__r.__words[0];
        }
        LODWORD(buf.__r_.__value_.__l.__data_) = 136381187;
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v42;
        WORD2(buf.__r_.__value_.__r.__words[1]) = 2081;
        *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v43;
        HIWORD(buf.__r_.__value_.__r.__words[2]) = 2081;
        int v85 = v44;
        _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_FAULT,  "Unable to get fence,[%{private}s]/%{private}s/%{private}s, from database",  (uint8_t *)&buf,  0x20u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_101934840 != -1) {
          dispatch_once(&qword_101934840, &stru_10188BE30);
        }
        double v69 = (a3->__r_.__value_.__s.__size_ & 0x80u) == 0 ? a3 : (const std::string *)a3->__r_.__value_.__r.__words[0];
        std::string::size_type v70 = (a2->__r_.__value_.__s.__size_ & 0x80u) == 0 ? a2 : (const std::string *)a2->__r_.__value_.__r.__words[0];
        std::string::size_type v71 = (a4->__r_.__value_.__s.__size_ & 0x80u) == 0 ? a4 : (const std::string *)a4->__r_.__value_.__r.__words[0];
        *(_DWORD *)uint64_t v79 = 136381187;
        *(void *)&v79[4] = v69;
        __int16 v80 = 2081;
        __int128 v81 = v70;
        __int16 v82 = 2081;
        std::string v83 = v71;
        LODWORD(v73) = 32;
        _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934848,  17LL,  "Unable to get fence,[%{private}s]/%{private}s/%{private}s, from database",  v79,  v73);
        std::string::size_type v68 = (std::stringbuf::string_type *)v72;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLBeaconFenceDatabase::getFenceForBundleAndOnBehalf(const std::string &, const std::string &, const std:: string &, CLBTLEBeaconRegion_Type::MonitoredRegion &)",  "%s\n",  v72);
        if (v68 != &buf) {
LABEL_89:
        }
          free(v68);
      }
    }

void sub_100EFC1C0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,void *__p,uint64_t a54,int a55,__int16 a56,char a57,char a58)
{
  if (v58) {
    (*(void (**)(uint64_t))(*(void *)v58 + 8LL))(v58);
  }
  sub_1001BA1BC(&a12);
  sub_1011F8850((uint64_t)&a14);
  _Unwind_Resume(a1);
}

uint64_t sub_100EFC234(uint64_t a1, char *a2)
{
  int v4 = sub_10000CF44(&v24, (uint64_t)"SELECT COUNT(*) FROM ", 21LL);
  std::string::size_type v5 = sub_10000CF44(v4, (uint64_t)"BeaconFences", 12LL);
  uint64_t v6 = sub_10000CF44(v5, (uint64_t)" WHERE ", 7LL);
  uint64_t v7 = sub_10000CF44(v6, (uint64_t)"BundleIdentifier", 16LL);
  sub_10000CF44(v7, (uint64_t)"=?", 2LL);
  std::stringbuf::str(&v28, &v25);
  if ((v28.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t v8 = &v28;
  }
  else {
    uint64_t v8 = (std::stringbuf::string_type *)v28.__r_.__value_.__r.__words[0];
  }
  sub_1003C0D54(a1, (char *)v8, v27);
  uint64_t v9 = *(void *)v27;
  *(void *)std::string::size_type v27 = 0LL;
  __int128 v10 = (sqlite3_stmt *)sub_100019240(v9);
  if (a2[23] >= 0) {
    std::string::size_type v11 = a2;
  }
  else {
    std::string::size_type v11 = *(char **)a2;
  }
  if (sub_1003BC1F0(v10, 1, v11) && (std::string::size_type v12 = (sqlite3_stmt *)sub_100019240(v9), sqlite3_step(v12) == 100))
  {
    uint64_t v13 = (sqlite3_stmt *)sub_100019240(v9);
    uint64_t v14 = sqlite3_column_int(v13, 0);
  }

  else
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188BE30);
    }
    uint64_t v15 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_FAULT))
    {
      if (a2[23] >= 0) {
        std::string::size_type v16 = (std::string::size_type)a2;
      }
      else {
        std::string::size_type v16 = *(void *)a2;
      }
      LODWORD(v28.__r_.__value_.__l.__data_) = 136380675;
      *(std::string::size_type *)((char *)v28.__r_.__value_.__r.__words + 4) = v16;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_FAULT,  "Unable to get the fence count for bundle,%{private}s",  (uint8_t *)&v28,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(&v28, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188BE30);
      }
      if (a2[23] >= 0) {
        uint64_t v20 = a2;
      }
      else {
        uint64_t v20 = *(char **)a2;
      }
      *(_DWORD *)std::string::size_type v27 = 136380675;
      *(void *)&v27[4] = v20;
      _os_log_send_and_compose_impl( 2LL,  0LL,  &v28,  1628LL,  &_mh_execute_header,  qword_101934848,  17LL,  "Unable to get the fence count for bundle,%{private}s",  v27,  12);
      std::string::size_type v22 = (std::stringbuf::string_type *)v21;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "int CLBeaconFenceDatabase::fenceCountForBundle(const std::string &)",  "%s\n",  v21);
      if (v22 != &v28) {
        free(v22);
      }
    }

    uint64_t v14 = 0xFFFFFFFFLL;
  }

  char v17 = (sqlite3_stmt *)sub_100019240(v9);
  sqlite3_reset(v17);
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8LL))(v9);
  }
  *(void *)((char *)v23
  uint64_t v24 = v18;
  std::streambuf::~streambuf(&v25);
  std::ios::~ios(&v26);
  return v14;
}

void sub_100EFC58C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, void *__p, uint64_t a50,int a51,__int16 a52,char a53,char a54)
{
  if (v54) {
    (*(void (**)(uint64_t))(*(void *)v54 + 8LL))(v54);
  }
  sub_1011F8850((uint64_t)&a12);
  _Unwind_Resume(a1);
}

uint64_t sub_100EFC5E4(uint64_t a1, char *a2)
{
  int v4 = sub_10000CF44(&v27, (uint64_t)"SELECT COUNT(*) FROM ", 21LL);
  std::string::size_type v5 = sub_10000CF44(v4, (uint64_t)"BeaconFences", 12LL);
  uint64_t v6 = sub_10000CF44(v5, (uint64_t)" WHERE ", 7LL);
  uint64_t v7 = sub_10000CF44(v6, (uint64_t)"BundleIdentifier", 16LL);
  uint64_t v8 = sub_10000CF44(v7, (uint64_t)"=?", 2LL);
  uint64_t v9 = sub_10000CF44(v8, (uint64_t)" OR ", 4LL);
  __int128 v10 = sub_10000CF44(v9, (uint64_t)"OnBehalfBundleIdentifier", 24LL);
  sub_10000CF44(v10, (uint64_t)"=?", 2LL);
  std::stringbuf::str((std::stringbuf::string_type *)v30, &v28);
  if (v30[23] >= 0) {
    std::string::size_type v11 = v30;
  }
  else {
    std::string::size_type v11 = *(char **)v30;
  }
  sub_1003C0D54(a1, v11, &v25);
  uint64_t v12 = v25;
  uint64_t v25 = 0LL;
  if ((v30[23] & 0x80000000) != 0) {
    operator delete(*(void **)v30);
  }
  uint64_t v13 = (sqlite3_stmt *)sub_100019240(v12);
  if (a2[23] >= 0) {
    uint64_t v14 = a2;
  }
  else {
    uint64_t v14 = *(char **)a2;
  }
  if (sub_1003BC1F0(v13, 1, v14)
    && ((uint64_t v15 = (sqlite3_stmt *)sub_100019240(v12), a2[23] >= 0) ? (v16 = a2) : (v16 = *(char **)a2),
        sub_1003BC1F0(v15, 2, v16) && (char v17 = (sqlite3_stmt *)sub_100019240(v12), sqlite3_step(v17) == 100)))
  {
    uint64_t v18 = (sqlite3_stmt *)sub_100019240(v12);
    uint64_t v19 = sqlite3_column_int(v18, 0);
  }

  else
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188BE30);
    }
    uint64_t v20 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEFAULT))
    {
      if (a2[23] >= 0) {
        unint64_t v21 = a2;
      }
      else {
        unint64_t v21 = *(char **)a2;
      }
      *(void *)uint64_t v30 = 68289282LL;
      *(_WORD *)&v30[8] = 2082;
      *(void *)&v30[10] = "";
      *(_WORD *)&v30[18] = 2082;
      *(void *)&v30[20] = v21;
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:iB: #Warning Couldn't get number of fences matching given value from bundle ID or on-beha lf-of, bundleID:%{public, location:escape_only}s}",  v30,  0x1Cu);
    }

    uint64_t v19 = 0xFFFFFFFFLL;
  }

  std::string::size_type v22 = (sqlite3_stmt *)sub_100019240(v12);
  sqlite3_reset(v22);
  if (v12) {
    (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
  }
  *(void *)((char *)v26
  uint64_t v27 = v23;
  std::streambuf::~streambuf(&v28);
  std::ios::~ios(&v29);
  return v19;
}

void sub_100EFC8C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_100EFC914(id a1)
{
  qword_101934848 = (uint64_t)os_log_create("com.apple.locationd.Position", "Proximity");
}

void sub_100EFC9E4(id a1)
{
  qword_10199F3E0 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLBeaconFenceAuthorizationManagerSilo");
}

uint64_t sub_100EFCA98(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100EFE858;
  block[3] = &unk_10181A288;
  block[4] = a1;
  if (qword_10199F410 != -1) {
    dispatch_once(&qword_10199F410, block);
  }
  return qword_10199F408;
}

uint64_t sub_100EFCC1C(_DWORD *a1, uint64_t a2)
{
  v51[0] = (uint64_t)v51;
  v51[1] = (uint64_t)v51;
  uint64_t v52 = 0LL;
  int v53 = 0;
  char v54 = 0;
  int v4 = sub_1007F14D0((uint64_t)v51, 0LL, 0LL, a2);
  uint64_t v5 = v51[0];
  void *v4 = v51[0];
  v4[1] = v51;
  *(void *)(v5 + _Block_object_dispose(va, 8) = v4;
  v51[0] = (uint64_t)v4;
  ++v52;
  memset(&__s1, 0, sizeof(__s1));
  uint64_t v6 = *(unsigned __int8 *)(a2 + 87);
  if ((v6 & 0x80u) != 0LL) {
    uint64_t v6 = *(void *)(a2 + 72);
  }
  if (v6) {
    uint64_t v7 = (const std::string *)(a2 + 64);
  }
  else {
    uint64_t v7 = (const std::string *)(a2 + 40);
  }
  std::string::operator=(&__s1, v7);
  unsigned int v8 = sub_100EFE904((uint64_t)a1, (char *)&__s1);
  unsigned int v9 = v8;
  if ((v8 & 0x80000000) != 0)
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188C1A8);
    }
    uint64_t v13 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_FAULT))
    {
      int size = (char)__s1.__r_.__value_.__s.__size_;
      std::string::size_type v15 = __s1.__r_.__value_.__r.__words[0];
      (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(__p, a2);
      p_s1 = &__s1;
      if (size < 0) {
        p_s1 = (std::string *)v15;
      }
      if (v68 >= 0) {
        char v17 = __p;
      }
      else {
        char v17 = *(_BYTE **)__p;
      }
      *(_DWORD *)std::stringbuf::string_type buf = 136380931;
      *(void *)&uint8_t buf[4] = p_s1;
      __int16 v60 = 2081;
      *(void *)uint64_t v61 = v17;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_FAULT,  "iB: Unable to get fences count for bundle,%{private}s. Fence,%{private}s, will not be added",  buf,  0x16u);
      if (SHIBYTE(v68) < 0) {
        operator delete(*(void **)__p);
      }
    }

    if (!sub_1002921D0(115, 0)) {
      goto LABEL_93;
    }
    bzero(__p, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188C1A8);
    }
    uint64_t v18 = qword_101934848;
    int v19 = (char)__s1.__r_.__value_.__s.__size_;
    std::string::size_type v20 = __s1.__r_.__value_.__r.__words[0];
    (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(buf, a2);
    unint64_t v21 = &__s1;
    if (v19 < 0) {
      unint64_t v21 = (std::string *)v20;
    }
    if (v61[9] >= 0) {
      std::string::size_type v22 = buf;
    }
    else {
      std::string::size_type v22 = *(_BYTE **)buf;
    }
    *(_DWORD *)uint64_t v55 = 136380931;
    *(void *)&v55[4] = v21;
    __int16 v56 = 2081;
    int v57 = v22;
    _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v18,  17LL,  "iB: Unable to get fences count for bundle,%{private}s. Fence,%{private}s, will not be added",  v55,  22);
    uint64_t v24 = v23;
    if ((v61[9] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
LABEL_113:
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLBeaconFenceAuthorizationManager::addFence(const CLBTLEBeaconRegion_Type::MonitoredRegion &)",  "%s\n",  v24);
    goto LABEL_114;
  }

  if (v8 >= 0x14)
  {
    if ((char)__s1.__r_.__value_.__s.__size_ < 0)
    {
      std::string::size_type v25 = __s1.__r_.__value_.__l.__size_;
      if (__s1.__r_.__value_.__l.__size_ == 84
        && !memcmp( __s1.__r_.__value_.__l.__data_,  "com.apple.locationd.bundle-/AppleInternal/Library/LocationBundles/FenceTester.bundle",  0x54uLL))
      {
        goto LABEL_73;
      }

      if (v25 == 91)
      {
        if (!memcmp( __s1.__r_.__value_.__l.__data_,  "com.apple.locationd.bundle-/AppleInternal/Library/Frameworks/CoreAutomationDevice.framework",  0x5BuLL)) {
          goto LABEL_73;
        }
        std::string::size_type v25 = __s1.__r_.__value_.__l.__size_;
      }

      if (v25 == 84)
      {
        if (!memcmp( __s1.__r_.__value_.__l.__data_,  "com.apple.locationd.bundle-/System/Library/PrivateFrameworks/BulletinBoard.framework",  0x54uLL)) {
          goto LABEL_73;
        }
        std::string::size_type v25 = __s1.__r_.__value_.__l.__size_;
      }

      if (v25 != 83) {
        goto LABEL_49;
      }
      std::string::size_type v11 = (std::string *)__s1.__r_.__value_.__r.__words[0];
    }

    else
    {
      if (__s1.__r_.__value_.__s.__size_ != 83)
      {
        if (__s1.__r_.__value_.__s.__size_ == 84)
        {
          if (!memcmp( &__s1,  "com.apple.locationd.bundle-/AppleInternal/Library/LocationBundles/FenceTester.bundle",  0x54uLL)) {
            goto LABEL_73;
          }
          __int128 v10 = "com.apple.locationd.bundle-/System/Library/PrivateFrameworks/BulletinBoard.framework";
          std::string::size_type v11 = &__s1;
          size_t v12 = 84LL;
        }

        else
        {
          if (__s1.__r_.__value_.__s.__size_ != 91)
          {
LABEL_49:
            if (sub_10065EEB4( &__s1,  "com.apple.locationd.bundle-/System/Library/LocationBundles/LocationdInternal.bundle"))
            {
              if (qword_101934840 != -1) {
                dispatch_once(&qword_101934840, &stru_10188C1A8);
              }
              uint64_t v26 = (os_log_s *)qword_101934848;
              if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEFAULT))
              {
                int v27 = *(char *)(a2 + 63);
                uint64_t v28 = *(void *)(a2 + 40);
                (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(buf, a2);
                uint64_t v29 = v27 >= 0 ? a2 + 40 : v28;
                uint64_t v30 = v61[9] >= 0 ? buf : *(_BYTE **)buf;
                *(_DWORD *)std::stringbuf::string_type __p = 136446979;
                *(void *)&__p[4] = v29;
                __int16 v65 = 1025;
                int v66 = 20;
                __int16 v67 = 1026;
                signed int v68 = v9;
                __int16 v69 = 2081;
                std::string::size_type v70 = v30;
                _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEFAULT,  "#Warning Bundle,%{public}s, exceeds its fence limit,%{private}d. It has %{public}d Fences. Fence,%{pri vate}s, will not be added",  __p,  0x22u);
                if ((v61[9] & 0x80000000) != 0) {
                  operator delete(*(void **)buf);
                }
              }

              if (!sub_1002921D0(115, 2)) {
                goto LABEL_93;
              }
              bzero(__p, 0x65CuLL);
              if (qword_101934840 != -1) {
                dispatch_once(&qword_101934840, &stru_10188C1A8);
              }
              uint64_t v31 = qword_101934848;
              int v32 = *(char *)(a2 + 63);
              uint64_t v33 = *(void *)(a2 + 40);
              (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(v55, a2);
              if (v32 >= 0) {
                uint64_t v34 = a2 + 40;
              }
              else {
                uint64_t v34 = v33;
              }
              if (v58 >= 0) {
                int v35 = v55;
              }
              else {
                int v35 = *(_BYTE **)v55;
              }
              *(_DWORD *)std::stringbuf::string_type buf = 136446979;
              *(void *)&uint8_t buf[4] = v34;
              __int16 v60 = 1025;
              *(_DWORD *)uint64_t v61 = 20;
              *(_WORD *)&v61[4] = 1026;
              *(_DWORD *)&v61[6] = v9;
              __int16 v62 = 2081;
              int v63 = v35;
              _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v31,  0LL,  "#Warning Bundle,%{public}s, exceeds its fence limit,%{private}d. It has %{public}d Fences. Fence,%{priva te}s, will not be added",  buf,  34);
              uint64_t v24 = v36;
              if (v58 < 0) {
                operator delete(*(void **)v55);
              }
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLBeaconFenceAuthorizationManager::addFence(const CLBTLEBeaconRegion_Type::MonitoredRegion &)",  "%s\n",  v24);
LABEL_114:
              if (v24 != __p) {
                free(v24);
              }
LABEL_93:
              uint64_t v39 = 0LL;
              goto LABEL_94;
            }

            goto LABEL_73;
          }

          __int128 v10 = "com.apple.locationd.bundle-/AppleInternal/Library/Frameworks/CoreAutomationDevice.framework";
          std::string::size_type v11 = &__s1;
          size_t v12 = 91LL;
        }

void sub_100EFD5E8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  sub_100527B44(&a18);
  _Unwind_Resume(a1);
}

uint64_t sub_100EFD66C(uint64_t a1, uint64_t a2)
{
  v30[0] = (uint64_t)v30;
  v30[1] = (uint64_t)v30;
  uint64_t v31 = 0LL;
  int v32 = 0;
  char v33 = 0;
  __int128 v24 = 0u;
  __int128 v23 = 0u;
  std::string::size_type v22 = off_10182CDC8;
  __int128 v25 = 0u;
  __int128 v26 = 0u;
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  uint64_t v4 = a1 + 128;
  uint64_t v5 = (std::string *)(a2 + 40);
  uint64_t v29 = 0LL;
  if (sub_100EFB8A0( a1 + 128,  (const std::string *)(a2 + 40),  (const std::string *)(a2 + 64),  (const std::string *)(a2 + 88),  (uint64_t)&v22)
    && sub_100EF8290(v4, a2))
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188C1A8);
    }
    uint64_t v6 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
    {
      sub_100271C40((uint64_t)&v22, __p);
      uint64_t v7 = (__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0
         ? __p
         : (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
      LODWORD(buf.__r_.__value_.__l.__data_) = 136380675;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v7;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "iB: Removed fence,%{private}s, from the database",  (uint8_t *)&buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188C1A8);
      }
      uint64_t v18 = qword_101934848;
      sub_100271C40((uint64_t)&v22, &buf);
      if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        p_std::stringbuf::string_type buf = &buf;
      }
      else {
        p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
      }
      int v35 = 136380675;
      std::stringbuf v36 = p_buf;
      _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v18,  2LL,  "iB: Removed fence,%{private}s, from the database",  &v35,  12);
      unint64_t v21 = v20;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLBeaconFenceAuthorizationManager::removeFence(const CLBTLEBeaconRegion_Type::MonitoredRegion &)",  "%s\n",  (const char *)v21);
      if (v21 != __p) {
        free(v21);
      }
    }

    sub_100EFF388(a1, v5);
    unsigned int v8 = sub_1007F14D0((uint64_t)v30, 0LL, 0LL, (uint64_t)&v22);
    uint64_t v9 = v30[0];
    *unsigned int v8 = v30[0];
    v8[1] = v30;
    *(void *)(v9 + _Block_object_dispose(va, 8) = v8;
    v30[0] = (uint64_t)v8;
    ++v31;
    char v33 = 1;
    LODWORD(__p[0].__r_.__value_.__l.__data_) = 1;
    (*(void (**)(uint64_t, std::stringbuf::string_type *, uint64_t *, void, uint64_t, void))(*(void *)a1 + 152LL))( a1,  __p,  v30,  0LL,  0xFFFFFFFFLL,  0LL);
    uint64_t v10 = 1LL;
  }

  else
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188C1A8);
    }
    std::string::size_type v11 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEFAULT))
    {
      (*(void (**)(std::stringbuf::string_type *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(__p, a2);
      size_t v12 = (__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0
          ? __p
          : (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
      LODWORD(buf.__r_.__value_.__l.__data_) = 136380675;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "#Warning Unable to remove fence,%{private}s, from the database",  (uint8_t *)&buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188C1A8);
      }
      uint64_t v14 = qword_101934848;
      (*(void (**)(std::stringbuf::string_type *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(&buf, a2);
      if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        std::string::size_type v15 = &buf;
      }
      else {
        std::string::size_type v15 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
      }
      int v35 = 136380675;
      std::stringbuf v36 = v15;
      _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v14,  0LL,  "#Warning Unable to remove fence,%{private}s, from the database",  &v35,  12);
      char v17 = v16;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLBeaconFenceAuthorizationManager::removeFence(const CLBTLEBeaconRegion_Type::MonitoredRegion &)",  "%s\n",  (const char *)v17);
      if (v17 != __p) {
        free(v17);
      }
    }

    uint64_t v10 = 0LL;
  }

  sub_1002722AC((uint64_t)&v22);
  sub_100527B44(v30);
  return v10;
}

void sub_100EFDB44( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27)
{
}

uint64_t sub_100EFDBAC(uint64_t a1)
{
  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10188C1A8);
  }
  uint64_t v2 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_INFO))
  {
    uint64_t v5 = 68289026LL;
    LOWORD(v6) = 2082;
    *(void *)((char *)&v6 + 2) = "";
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:iB: getCountOfAllFences}",  (uint8_t *)&v5,  0x12u);
  }

  uint64_t v5 = (uint64_t)&v5;
  *(void *)&__int128 v6 = &v5;
  *((void *)&v6 + 1) = 0LL;
  else {
    unsigned __int8 v3 = 0;
  }
  sub_100527B44(&v5);
  return v3;
}

void sub_100EFDCB4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100EFDD38( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100EFDDF0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

void sub_100EFDEBC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100EFDEF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(char *)(a2 + 23) < 0)
  {
    sub_1010DD48C(__dst, *(void **)a2, *(void *)(a2 + 8));
  }

  else
  {
    *(_OWORD *)std::string __dst = *(_OWORD *)a2;
    uint64_t v10 = *(void *)(a2 + 16);
  }

  if (*(char *)(a3 + 23) < 0)
  {
    sub_1010DD48C(__p, *(void **)a3, *(void *)(a3 + 8));
  }

  else
  {
    *(_OWORD *)std::stringbuf::string_type __p = *(_OWORD *)a3;
    uint64_t v8 = *(void *)(a3 + 16);
  }

  char v5 = sub_100EFF46C(a1, (uint64_t)__dst, (uint64_t)__p);
  if (SHIBYTE(v8) < 0) {
    operator delete(__p[0]);
  }
  if ((SHIBYTE(v10) & 0x80000000) == 0)
  {
    if ((v5 & 1) != 0) {
      goto LABEL_11;
    }
    return 1LL;
  }

  operator delete(__dst[0]);
  if ((v5 & 1) == 0) {
    return 1LL;
  }
LABEL_11:
  if ((*(_DWORD *)(a1 + 264) & 1) != 0) {
    return 2LL;
  }
  else {
    return *(_DWORD *)(a1 + 264) & 2;
  }
}

void sub_100EFDFC4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100EFDFF8(uint64_t a1, void *a2)
{
  unsigned __int8 v3 = (void *)sub_100EFE314(a1, "CLBeaconFenceAuthorizationManager-Notifier", a2);
  *unsigned __int8 v3 = off_10188C030;
  v3[14] = 0LL;
  uint64_t v4 = v3 + 14;
  v3[15] = 0LL;
  sub_100EF7A58((uint64_t)(v3 + 16));
  *(_DWORD *)(a1 + 264) = 0;
  *(void *)(a1 + 272) =  objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "vendor"),  "proxyForService:",  @"CLClientAuthorizationCache");
  sub_100EDF1F0((uint64_t)sub_100EFE3B0, a1, *(void **)(a1 + 32), &v14);
  std::string::size_type v5 = v14.__r_.__value_.__r.__words[0];
  v14.__r_.__value_.__r.__words[0] = 0LL;
  std::string::size_type v6 = *v4;
  std::string::size_type *v4 = v5;
  if (v6)
  {
    (*(void (**)(std::string::size_type))(*(void *)v6 + 8LL))(v6);
    std::string::size_type v7 = v14.__r_.__value_.__r.__words[0];
    v14.__r_.__value_.__r.__words[0] = 0LL;
    if (v7) {
      (*(void (**)(std::string::size_type))(*(void *)v7 + 8LL))(v7);
    }
  }

  [*(id *)(*v4 + 16) register:*(void *)(*v4 + 8) forNotification:2 registrationInfo:0];
  sub_100583844((uint64_t)sub_100EFE588, a1, *(void **)(a1 + 32), &v14);
  std::string::size_type v8 = v14.__r_.__value_.__r.__words[0];
  v14.__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v9 = *(void *)(a1 + 120);
  *(void *)(a1 + 12sub_100222B94(v74, (uint64_t)"CLBeaconFenceDatabase::getFenceForBundleAndOnBehalf", 0) = v8;
  if (v9)
  {
    (*(void (**)(uint64_t))(*(void *)v9 + 8LL))(v9);
    std::string::size_type v10 = v14.__r_.__value_.__r.__words[0];
    v14.__r_.__value_.__r.__words[0] = 0LL;
    if (v10) {
      (*(void (**)(std::string::size_type))(*(void *)v10 + 8LL))(v10);
    }
  }

  [*(id *)(*(void *)(a1 + 120) + 16) register:*(void *)(*(void *)(a1 + 120) + 8) forNotification:1 registrationInfo:0];
  [*(id *)(*(void *)(a1 + 120) + 16) register:*(void *)(*(void *)(a1 + 120) + 8) forNotification:4 registrationInfo:0];
  memset(&v14, 0, sizeof(v14));
  std::string::operator=(&v14, (const std::string *)&qword_10199F3F0);
  [*(id *)(*(void *)(a1 + 120) + 16) register:*(void *)(*(void *)(a1 + 120) + 8) forNotification:0 registrationInfo:sub_10120E548((uint64_t)&v14)];
  [*(id *)(*(void *)(a1 + 120) + 16) register:*(void *)(*(void *)(a1 + 120) + 8) forNotification:2 registrationInfo:0];
  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10188C1A8);
  }
  std::string::size_type v11 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_INFO))
  {
    int v12 = *(_DWORD *)(a1 + 264);
    *(_DWORD *)std::stringbuf::string_type buf = 68289282;
    int v16 = 0;
    __int16 v17 = 2082;
    uint64_t v18 = "";
    __int16 v19 = 1026;
    int v20 = v12;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:iB: Initializing authorization manager, exceptions:%{public}d}",  buf,  0x18u);
  }

  return a1;
}

void sub_100EFE28C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_1003D4448(v16);
  uint64_t v19 = *(void *)(v15 + 120);
  *(void *)(v15 + 12sub_100222B94(v74, (uint64_t)"CLBeaconFenceDatabase::getFenceForBundleAndOnBehalf", 0) = 0LL;
  if (v19) {
    (*(void (**)(uint64_t))(*(void *)v19 + 8LL))(v19);
  }
  uint64_t v20 = *v17;
  *__int16 v17 = 0LL;
  if (v20) {
    (*(void (**)(uint64_t))(*(void *)v20 + 8LL))(v20);
  }
  sub_100EFE760(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_100EFE314(uint64_t a1, char *a2, void *a3)
{
  *(void *)a1 = off_10188C1D8;
  sub_1010DDBC0((void *)(a1 + 8), a2);
  *(void *)(a1 + 32) = a3;
  *(void *)(a1 + sub_10004AD90(v3 - 40) = [a3 silo];
  *(void *)(a1 + 4_Block_object_dispose(va, 8) = 0LL;
  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + 56) = a1 + 64;
  *(void *)(a1 + 8_Block_object_dispose(va, 8) = 0LL;
  *(void *)(a1 + 96) = 0LL;
  *(void *)(a1 + 72) = 0LL;
  *(void *)(a1 + 8sub_100222B94(v74, (uint64_t)"CLBeaconFenceDatabase::getFenceForBundleAndOnBehalf", 0) = a1 + 88;
  *(_DWORD *)(a1 + 104) = 0;
  *(_BYTE *)(a1 + 10_Block_object_dispose(va, 8) = 0;
  return a1;
}

void sub_100EFE394(_Unwind_Exception *exception_object)
{
}

void sub_100EFE3B0(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10188C188);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    std::string::size_type v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLBeaconFenceAuthorizationManager::onBeaconNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10188C188);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      __int16 v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLBeaconFenceAuthorizationManager::onBeaconNotification, event:%{public, location:e scape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100EFF58C((_DWORD *)a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100EFE568( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100EFE588(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10188C188);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    std::string::size_type v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLBeaconFenceAuthorizationManager::onClientManagerNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10188C188);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      __int16 v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLBeaconFenceAuthorizationManager::onClientManagerNotification, event:%{public, loc ation:escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100EFFA94(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100EFE740( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100EFE760(uint64_t a1)
{
  *(void *)a1 = off_10188C1D8;
  [*(id *)(a1 + 48) invalidate];

  sub_100231CA4(a1 + 80, *(void **)(a1 + 88));
  sub_100589F4C(a1 + 56, *(void **)(a1 + 64));
  return a1;
}

uint64_t sub_100EFE7D4(void *a1)
{
  *a1 = off_10188C030;
  sub_100EFE8A4((uint64_t)a1);
  sub_1003D4448(a1 + 16);
  uint64_t v2 = a1[15];
  a1[15] = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  uint64_t v3 = a1[14];
  a1[14] = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  return sub_100EFE760((uint64_t)a1);
}

void sub_100EFE844(void *a1)
{
  uint64_t v1 = (void *)sub_100EFE7D4(a1);
  operator delete(v1);
}

uint64_t sub_100EFE858(uint64_t a1)
{
  uint64_t v2 = operator new(0x118uLL);
  uint64_t result = sub_100EFDFF8((uint64_t)v2, *(void **)(a1 + 32));
  qword_10199F408 = (uint64_t)v2;
  return result;
}

void sub_100EFE890(_Unwind_Exception *a1)
{
}

uint64_t sub_100EFE8A4(uint64_t a1)
{
  *(void *)(a1 + 272) = 0LL;
  uint64_t v2 = *(void *)(a1 + 112);
  *(void *)(a1 + 112) = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  uint64_t result = *(void *)(a1 + 120);
  *(void *)(a1 + 12sub_100222B94(v74, (uint64_t)"CLBeaconFenceDatabase::getFenceForBundleAndOnBehalf", 0) = 0LL;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_100EFE904(uint64_t a1, char *a2)
{
  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10188C1A8);
  }
  uint64_t v4 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_INFO))
  {
    v6[0] = 68289026;
    v6[1] = 0;
    __int16 v7 = 2082;
    std::string::size_type v8 = "";
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:iB: getCountOfAllFencesForBundle}",  (uint8_t *)v6,  0x12u);
  }

  return sub_100EFC5E4(a1 + 128, a2);
}

uint64_t sub_100EFE9F4(_DWORD *a1, std::string *a2, const std::string *a3, const std::string *a4)
{
  __int128 v53 = 0u;
  __int128 v54 = 0u;
  uint64_t v52 = off_10182CDC8;
  __int128 v55 = 0u;
  __int128 v56 = 0u;
  __int128 v57 = 0u;
  __int128 v58 = 0u;
  uint64_t v59 = 0LL;
  if ((sub_100EFB8A0((uint64_t)(a1 + 32), a2, a3, a4, (uint64_t)&v52) & 1) == 0)
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188C1A8);
    }
    std::string::size_type v8 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_FAULT))
    {
      if ((a3->__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v9 = a3;
      }
      else {
        uint64_t v9 = (const std::string *)a3->__r_.__value_.__r.__words[0];
      }
      if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
        std::string::size_type v10 = a2;
      }
      else {
        std::string::size_type v10 = (std::string *)a2->__r_.__value_.__r.__words[0];
      }
      if ((a4->__r_.__value_.__s.__size_ & 0x80u) == 0) {
        char v11 = a4;
      }
      else {
        char v11 = (const std::string *)a4->__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)std::stringbuf::string_type buf = 136446723;
      *(void *)&uint8_t buf[4] = v9;
      *(_WORD *)&_BYTE buf[12] = 2082;
      *(void *)&buf[14] = v10;
      *(_WORD *)&_BYTE buf[22] = 2081;
      __int16 v69 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_FAULT,  "Unable to get fence,[%{public}s]/%{public}s/%{private}s, from the database",  buf,  0x20u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188C1A8);
      }
      if ((a3->__r_.__value_.__s.__size_ & 0x80u) == 0) {
        int v12 = a3;
      }
      else {
        int v12 = (const std::string *)a3->__r_.__value_.__r.__words[0];
      }
      if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
        int v13 = a2;
      }
      else {
        int v13 = (std::string *)a2->__r_.__value_.__r.__words[0];
      }
      if ((a4->__r_.__value_.__s.__size_ & 0x80u) == 0) {
        __int16 v14 = a4;
      }
      else {
        __int16 v14 = (const std::string *)a4->__r_.__value_.__r.__words[0];
      }
      int v60 = 136446723;
      uint64_t v61 = v12;
      __int16 v62 = 2082;
      int v63 = v13;
      __int16 v64 = 2081;
      __int16 v65 = v14;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  17LL,  "Unable to get fence,[%{public}s]/%{public}s/%{private}s, from the database",  &v60,  32);
      __int16 v16 = (char *)v15;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLBeaconFenceAuthorizationManager::unlockedNotifyResumeFence(const std::string &, const std::string &, cons t std::string &)",  "%s\n",  v15);
      goto LABEL_92;
    }

    return sub_1002722AC((uint64_t)&v52);
  }

  if ((char)a2->__r_.__value_.__s.__size_ < 0)
  {
    sub_1010DD48C(__dst, a2->__r_.__value_.__l.__data_, a2->__r_.__value_.__l.__size_);
  }

  else
  {
    *(_OWORD *)std::string __dst = *(_OWORD *)&a2->__r_.__value_.__l.__data_;
    std::string::size_type cap = a2->__r_.__value_.__l.__cap_;
  }

  if ((char)a3->__r_.__value_.__s.__size_ < 0)
  {
    sub_1010DD48C(__p, a3->__r_.__value_.__l.__data_, a3->__r_.__value_.__l.__size_);
  }

  else
  {
    *(_OWORD *)std::stringbuf::string_type __p = *(_OWORD *)&a3->__r_.__value_.__l.__data_;
    std::string::size_type v49 = a3->__r_.__value_.__l.__cap_;
  }

  char v17 = sub_100EFF46C((uint64_t)a1, (uint64_t)__dst, (uint64_t)__p);
  if (SHIBYTE(v49) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(cap) < 0)
  {
    operator delete(__dst[0]);
    if ((v17 & 1) != 0)
    {
LABEL_38:
      if (a1[66])
      {
        if (qword_101934840 != -1) {
          dispatch_once(&qword_101934840, &stru_10188C1A8);
        }
        __int16 v18 = (os_log_s *)qword_101934848;
        if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEFAULT))
        {
          if ((a3->__r_.__value_.__s.__size_ & 0x80u) == 0) {
            uint64_t v19 = a3;
          }
          else {
            uint64_t v19 = (const std::string *)a3->__r_.__value_.__r.__words[0];
          }
          if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
            uint64_t v20 = a2;
          }
          else {
            uint64_t v20 = (std::string *)a2->__r_.__value_.__r.__words[0];
          }
          if ((a4->__r_.__value_.__s.__size_ & 0x80u) == 0) {
            unint64_t v21 = a4;
          }
          else {
            unint64_t v21 = (const std::string *)a4->__r_.__value_.__r.__words[0];
          }
          int v22 = a1[66];
          *(_DWORD *)std::stringbuf::string_type buf = 136446979;
          *(void *)&uint8_t buf[4] = v19;
          *(_WORD *)&_BYTE buf[12] = 2082;
          *(void *)&buf[14] = v20;
          *(_WORD *)&_BYTE buf[22] = 2081;
          __int16 v69 = v21;
          __int16 v70 = 1026;
          int v71 = v22;
          _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "#Warning Fence,[%{public}s]/%{public}s/%{private}s, will not be resumed due to exception,%{public}d",  buf,  0x26u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934840 != -1) {
            dispatch_once(&qword_101934840, &stru_10188C1A8);
          }
          if ((a3->__r_.__value_.__s.__size_ & 0x80u) == 0) {
            __int128 v23 = a3;
          }
          else {
            __int128 v23 = (const std::string *)a3->__r_.__value_.__r.__words[0];
          }
          if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
            __int128 v24 = a2;
          }
          else {
            __int128 v24 = (std::string *)a2->__r_.__value_.__r.__words[0];
          }
          if ((a4->__r_.__value_.__s.__size_ & 0x80u) == 0) {
            __int128 v25 = a4;
          }
          else {
            __int128 v25 = (const std::string *)a4->__r_.__value_.__r.__words[0];
          }
          int v26 = a1[66];
          int v60 = 136446979;
          uint64_t v61 = v23;
          __int16 v62 = 2082;
          int v63 = v24;
          __int16 v64 = 2081;
          __int16 v65 = v25;
          __int16 v66 = 1026;
          int v67 = v26;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  0LL,  "#Warning Fence,[%{public}s]/%{public}s/%{private}s, will not be resumed due to exception,%{public}d",  &v60,  38);
          __int16 v16 = (char *)v27;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLBeaconFenceAuthorizationManager::unlockedNotifyResumeFence(const std::string &, const std::string &, const std::string &)",  "%s\n",  v27);
LABEL_92:
          if (v16 != buf) {
            free(v16);
          }
          return sub_1002722AC((uint64_t)&v52);
        }
      }

      else
      {
        if (qword_101934840 != -1) {
          dispatch_once(&qword_101934840, &stru_10188C1A8);
        }
        std::stringbuf v36 = (os_log_s *)qword_101934848;
        if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
        {
          if ((a3->__r_.__value_.__s.__size_ & 0x80u) == 0) {
            int v37 = a3;
          }
          else {
            int v37 = (const std::string *)a3->__r_.__value_.__r.__words[0];
          }
          if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
            uint64_t v38 = a2;
          }
          else {
            uint64_t v38 = (std::string *)a2->__r_.__value_.__r.__words[0];
          }
          if ((a4->__r_.__value_.__s.__size_ & 0x80u) == 0) {
            uint64_t v39 = a4;
          }
          else {
            uint64_t v39 = (const std::string *)a4->__r_.__value_.__r.__words[0];
          }
          *(_DWORD *)std::stringbuf::string_type buf = 136446723;
          *(void *)&uint8_t buf[4] = v37;
          *(_WORD *)&_BYTE buf[12] = 2082;
          *(void *)&buf[14] = v38;
          *(_WORD *)&_BYTE buf[22] = 2081;
          __int16 v69 = v39;
          _os_log_impl( (void *)&_mh_execute_header,  v36,  OS_LOG_TYPE_DEBUG,  "iB: Resuming fence,[%{public}s]/%{public}s/%{private}s",  buf,  0x20u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934840 != -1) {
            dispatch_once(&qword_101934840, &stru_10188C1A8);
          }
          if ((a3->__r_.__value_.__s.__size_ & 0x80u) == 0) {
            uint64_t v43 = a3;
          }
          else {
            uint64_t v43 = (const std::string *)a3->__r_.__value_.__r.__words[0];
          }
          if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
            uint64_t v44 = a2;
          }
          else {
            uint64_t v44 = (std::string *)a2->__r_.__value_.__r.__words[0];
          }
          if ((a4->__r_.__value_.__s.__size_ & 0x80u) == 0) {
            uint64_t v45 = a4;
          }
          else {
            uint64_t v45 = (const std::string *)a4->__r_.__value_.__r.__words[0];
          }
          int v60 = 136446723;
          uint64_t v61 = v43;
          __int16 v62 = 2082;
          int v63 = v44;
          __int16 v64 = 2081;
          __int16 v65 = v45;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "iB: Resuming fence,[%{public}s]/%{public}s/%{private}s",  &v60,  32);
          uint64_t v47 = (char *)v46;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLBeaconFenceAuthorizationManager::unlockedNotifyResumeFence(const std::string &, const std::string &, const std::string &)",  "%s\n",  v46);
          if (v47 != buf) {
            free(v47);
          }
        }

        sub_100F01E28((uint64_t)a1, a2, 1LL);
        *(void *)std::stringbuf::string_type buf = buf;
        *(void *)&uint8_t buf[8] = buf;
        *(void *)&buf[16] = 0LL;
        LODWORD(v69) = 0;
        BYTE4(v69) = 0;
        int v40 = sub_1007F14D0((uint64_t)buf, 0LL, 0LL, (uint64_t)&v52);
        uint64_t v41 = *(void *)buf;
        *int v40 = *(void *)buf;
        v40[1] = buf;
        *(void *)(v41 + _Block_object_dispose(va, 8) = v40;
        *(void *)std::stringbuf::string_type buf = v40;
        ++*(void *)&buf[16];
        int v60 = 0;
        (*(void (**)(_DWORD *, int *, _BYTE *, void, uint64_t, void))(*(void *)a1 + 152LL))( a1,  &v60,  buf,  0LL,  0xFFFFFFFFLL,  0LL);
        sub_100527B44((uint64_t *)buf);
      }

      return sub_1002722AC((uint64_t)&v52);
    }
  }

  else if ((v17 & 1) != 0)
  {
    goto LABEL_38;
  }

  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10188C1A8);
  }
  __int128 v28 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEFAULT))
  {
    if ((a3->__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v29 = a3;
    }
    else {
      uint64_t v29 = (const std::string *)a3->__r_.__value_.__r.__words[0];
    }
    if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v30 = a2;
    }
    else {
      uint64_t v30 = (std::string *)a2->__r_.__value_.__r.__words[0];
    }
    if ((a4->__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v31 = a4;
    }
    else {
      uint64_t v31 = (const std::string *)a4->__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)std::stringbuf::string_type buf = 136446723;
    *(void *)&uint8_t buf[4] = v29;
    *(_WORD *)&_BYTE buf[12] = 2082;
    *(void *)&buf[14] = v30;
    *(_WORD *)&_BYTE buf[22] = 2081;
    __int16 v69 = v31;
    _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEFAULT,  "#Warning Bundle(s) not authorized, fence,[%{public}s]/%{public}s/%{private}s, will not be resumed",  buf,  0x20u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188C1A8);
    }
    if ((a3->__r_.__value_.__s.__size_ & 0x80u) == 0) {
      int v32 = a3;
    }
    else {
      int v32 = (const std::string *)a3->__r_.__value_.__r.__words[0];
    }
    if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
      char v33 = a2;
    }
    else {
      char v33 = (std::string *)a2->__r_.__value_.__r.__words[0];
    }
    if ((a4->__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v34 = a4;
    }
    else {
      uint64_t v34 = (const std::string *)a4->__r_.__value_.__r.__words[0];
    }
    int v60 = 136446723;
    uint64_t v61 = v32;
    __int16 v62 = 2082;
    int v63 = v33;
    __int16 v64 = 2081;
    __int16 v65 = v34;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  0LL,  "#Warning Bundle(s) not authorized, fence,[%{public}s]/%{public}s/%{private}s, will not be resumed",  &v60,  32);
    __int16 v16 = (char *)v35;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLBeaconFenceAuthorizationManager::unlockedNotifyResumeFence(const std::string &, const std::string &, const std::string &)",  "%s\n",  v35);
    goto LABEL_92;
  }

  return sub_1002722AC((uint64_t)&v52);
}

void sub_100EFF320( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *__p, uint64_t a19, int a20, __int16 a21, char a22, char a23, char a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, char a45)
{
}

void sub_100EFF388(uint64_t a1, std::string *a2)
{
  if (*(_DWORD *)(a1 + 264) || (int)sub_100EFC234(a1 + 128, (char *)a2) < 1)
  {
    int v4 = 0;
    id v5 = 0LL;
  }

  else
  {
    if ((char)a2->__r_.__value_.__s.__size_ < 0)
    {
      sub_1010DD48C(__p, a2->__r_.__value_.__l.__data_, a2->__r_.__value_.__l.__size_);
    }

    else
    {
      *(_OWORD *)std::stringbuf::string_type __p = *(_OWORD *)&a2->__r_.__value_.__l.__data_;
      int64_t cap = a2->__r_.__value_.__l.__cap_;
    }

    id v5 = sub_100F0214C(a1, (uint64_t *)__p);
    int v4 = 1;
  }

  sub_100F01E28(a1, a2, (uint64_t)v5);
  if (cap < 0) {
    int v6 = v4;
  }
  else {
    int v6 = 0;
  }
  if (v6 == 1) {
    operator delete(__p[0]);
  }
}

void sub_100EFF444( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100EFF46C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(char *)(a2 + 23) < 0)
  {
    sub_1010DD48C(__p, *(void **)a2, *(void *)(a2 + 8));
  }

  else
  {
    *(_OWORD *)std::stringbuf::string_type __p = *(_OWORD *)a2;
    uint64_t v13 = *(void *)(a2 + 16);
  }

  unsigned int v5 = sub_100F0214C(a1, (uint64_t *)__p);
  unsigned int v6 = v5;
  if ((SHIBYTE(v13) & 0x80000000) == 0)
  {
    if (v5) {
      goto LABEL_6;
    }
    return 0LL;
  }

  operator delete(__p[0]);
  if (!v6) {
    return 0LL;
  }
LABEL_6:
  if ((*(char *)(a3 + 23) & 0x80000000) == 0)
  {
    if (*(_BYTE *)(a3 + 23))
    {
      *(_OWORD *)std::string::size_type v10 = *(_OWORD *)a3;
      uint64_t v11 = *(void *)(a3 + 16);
      goto LABEL_13;
    }

    return 1LL;
  }

  unint64_t v8 = *(void *)(a3 + 8);
  if (!v8) {
    return 1LL;
  }
  sub_1010DD48C(v10, *(void **)a3, v8);
LABEL_13:
  uint64_t v7 = sub_100F02288(a1, (uint64_t *)v10);
  if (SHIBYTE(v11) < 0) {
    operator delete(v10[0]);
  }
  return v7;
}

void sub_100EFF558( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, char a16, uint64_t a17, int a18, __int16 a19, char a20, char a21)
{
  if (a14 < 0) {
    operator delete(a9);
  }
  _Unwind_Resume(exception_object);
}

void sub_100EFF58C(_DWORD *a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  if (*a3 == 2)
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188C1A8);
    }
    unsigned int v6 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEFAULT))
    {
      int v7 = *(unsigned __int8 *)(a4 + 112);
      v8[0] = 68289282;
      v8[1] = 0;
      __int16 v9 = 2082;
      std::string::size_type v10 = "";
      __int16 v11 = 1026;
      int v12 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:@iB: Received Bluetooth LE power, BT power:%{public}hhd}",  (uint8_t *)v8,  0x18u);
    }

    if (*(_BYTE *)(a4 + 112)) {
      sub_100EFF6B0(a1, 2);
    }
    else {
      sub_100EFF8A0(a1, 2);
    }
  }

void sub_100EFF6B0(_DWORD *a1, int a2)
{
  if ((a1[66] & a2) != 0)
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188C1A8);
    }
    int v4 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
    {
      int v5 = a1[66];
      *(_DWORD *)std::stringbuf::string_type buf = 67240448;
      int v14 = a2;
      __int16 v15 = 1026;
      int v16 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "iB: Removing exception,%{public}#x, from stored exceptions %{public}#x",  buf,  0xEu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188C1A8);
      }
      int v7 = a1[66];
      v10[0] = 67240448;
      v10[1] = a2;
      __int16 v11 = 1026;
      int v12 = v7;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "iB: Removing exception,%{public}#x, from stored exceptions %{public}#x",  v10,  14);
      __int16 v9 = (uint8_t *)v8;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLBeaconFenceAuthorizationManager::unlockedResumeForException(MonitoringExceptions)",  "%s\n",  v8);
      if (v9 != buf) {
        free(v9);
      }
    }

    BOOL v6 = (a1[66] & ~a2) == 0;
    a1[66] &= ~a2;
    if (v6) {
      sub_100F014A0(a1);
    }
  }

void sub_100EFF8A0(_DWORD *a1, int a2)
{
  if ((a1[66] & a2) == 0)
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188C1A8);
    }
    int v4 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
    {
      int v5 = a1[66];
      *(_DWORD *)std::stringbuf::string_type buf = 67240448;
      int v14 = a2;
      __int16 v15 = 1026;
      int v16 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "iB: Adding exception,%{public}#x, to stored exceptions %{public}#x",  buf,  0xEu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188C1A8);
      }
      int v7 = a1[66];
      v10[0] = 67240448;
      v10[1] = a2;
      __int16 v11 = 1026;
      int v12 = v7;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "iB: Adding exception,%{public}#x, to stored exceptions %{public}#x",  v10,  14);
      __int16 v9 = (uint8_t *)v8;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLBeaconFenceAuthorizationManager::unlockedSuspendForException(MonitoringExceptions)",  "%s\n",  v8);
      if (v9 != buf) {
        free(v9);
      }
    }

    int v6 = a1[66];
    a1[66] = v6 | a2;
    if (!v6) {
      sub_100F00F38(a1, 0);
    }
  }

void sub_100EFFA94(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  switch(*a3)
  {
    case 0:
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188C1A8);
      }
      int v6 = (os_log_s *)qword_101934848;
      if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 68289026;
        LODWORD(v29[0]) = 0;
        WORD2(v29[0]) = 2082;
        *(void *)((char *)v29 + 6) = "";
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:iB: Reset authorization by toggling beacon fences}",  buf,  0x12u);
      }

      sub_100F00F38((_DWORD *)a1, 1);
      sub_100F014A0((_DWORD *)a1);
      id v7 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "vendor"), "proxyForService:", @"CLClientManager");
      if (byte_10199F407 >= 0) {
        unint64_t v8 = &qword_10199F3F0;
      }
      else {
        unint64_t v8 = (uint64_t *)qword_10199F3F0;
      }
      objc_msgSend( v7,  "resetNotificationConsumedForIdentifier:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v8));
      break;
    case 1:
      sub_100FE370C(a4);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188C1A8);
      }
      __int16 v11 = (std::string *)(a4 + 104);
      int v12 = (os_log_s *)qword_101934848;
      if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
      {
        else {
          uint64_t v13 = *(void *)(a4 + 104);
        }
        *(_DWORD *)std::stringbuf::string_type buf = 136380675;
        v29[0] = v13;
        _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "iB: Received uninstall for bundle,%{private}s",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934840 != -1) {
          dispatch_once(&qword_101934840, &stru_10188C1A8);
        }
        else {
          std::string::size_type v16 = *(void *)(a4 + 104);
        }
        LODWORD(__p.__r_.__value_.__l.__data_) = 136380675;
        *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + 4) = v16;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "iB: Received uninstall for bundle,%{private}s",  &__p,  12);
        __int16 v18 = (uint8_t *)v17;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLBeaconFenceAuthorizationManager::onClientManagerNotification(int, const CLClientManager_Type::Notificat ion &, const CLClientManager_Type::NotificationData &)",  "%s\n",  v17);
        if (v18 != buf) {
          free(v18);
        }
      }

      sub_100F000E0(a1, v11);
      break;
    case 2:
      sub_100FE3FB4(a4, (uint64_t)&__p);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188C1A8);
      }
      __int16 v9 = (os_log_s *)qword_101934848;
      if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
      {
        p_p = &__p;
        if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        *(_DWORD *)std::stringbuf::string_type buf = 136380675;
        v29[0] = p_p;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "iB: Received authorization for bundle,%{private}s",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934840 != -1) {
          dispatch_once(&qword_101934840, &stru_10188C1A8);
        }
        int v22 = &__p;
        if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
          int v22 = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        int v25 = 136380675;
        int v26 = v22;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "iB: Received authorization for bundle,%{private}s",  &v25,  12);
        __int128 v24 = (uint8_t *)v23;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLBeaconFenceAuthorizationManager::onClientManagerNotification(int, const CLClientManager_Type::Notificat ion &, const CLClientManager_Type::NotificationData &)",  "%s\n",  v23);
        if (v24 != buf) {
          free(v24);
        }
      }

      sub_100F00580((_DWORD *)a1, &__p);
      break;
    case 4:
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188C1A8);
      }
      int v14 = (os_log_s *)qword_101934848;
      if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
      {
        int v15 = *(_DWORD *)(a4 + 188);
        *(_DWORD *)std::stringbuf::string_type buf = 67240192;
        LODWORD(v29[0]) = v15;
        _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "iB: Received location services status,%{public}d",  buf,  8u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934840 != -1) {
          dispatch_once(&qword_101934840, &stru_10188C1A8);
        }
        int v19 = *(_DWORD *)(a4 + 188);
        LODWORD(__p.__r_.__value_.__l.__data_) = 67240192;
        HIDWORD(__p.__r_.__value_.__r.__words[0]) = v19;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "iB: Received location services status,%{public}d",  &__p,  8);
        unint64_t v21 = (uint8_t *)v20;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLBeaconFenceAuthorizationManager::onClientManagerNotification(int, const CLClientManager_Type::Notificat ion &, const CLClientManager_Type::NotificationData &)",  "%s\n",  v20);
        if (v21 != buf) {
          free(v21);
        }
      }

      if (*(_DWORD *)(a4 + 188) == 1) {
        sub_100EFF6B0((_DWORD *)a1, 1);
      }
      else {
        sub_100EFF8A0((_DWORD *)a1, 1);
      }
      break;
    default:
      return;
  }

void sub_100F000A4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100F000E0(uint64_t a1, std::string *a2)
{
  uint64_t v22 = (uint64_t)&v22;
  __int128 v23 = &v22;
  uint64_t v24 = 0LL;
  uint64_t v4 = a1 + 128;
  if ((sub_100EFA2F0(a1 + 128, (std::string::size_type)a2, &v22) & 1) != 0)
  {
    if ((sub_100EF92A8(v4, (std::string::size_type)a2) & 1) != 0)
    {
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188C1A8);
      }
      int v5 = (os_log_s *)qword_101934848;
      if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEFAULT))
      {
        if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
          int v6 = a2;
        }
        else {
          int v6 = (std::string *)a2->__r_.__value_.__r.__words[0];
        }
        *(_DWORD *)std::stringbuf::string_type buf = 68289282;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        *(_WORD *)&buf[18] = 2082;
        *(void *)&buf[20] = v6;
        _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:iB: Removed all fences for bundle, bundle:%{public, location:escape_only}s}",  buf,  0x1Cu);
      }

      sub_100F01E28(a1, a2, 0LL);
      id v7 = v23;
      unint64_t v8 = &v22;
      if (v23 != &v22)
      {
        while (1)
        {
          uint64_t v9 = *((unsigned __int8 *)v7 + 103);
          if ((v9 & 0x80u) == 0LL) {
            uint64_t v10 = *((unsigned __int8 *)v7 + 103);
          }
          else {
            uint64_t v10 = v7[11];
          }
          std::string::size_type size = a2->__r_.__value_.__s.__size_;
          int v12 = (char)size;
          if ((size & 0x80u) != 0LL) {
            std::string::size_type size = a2->__r_.__value_.__l.__size_;
          }
          if (v10 != size) {
            goto LABEL_28;
          }
          uint64_t v13 = (const void **)(v7 + 10);
          int v14 = v12 >= 0 ? a2 : (std::string *)a2->__r_.__value_.__r.__words[0];
          if ((v9 & 0x80) == 0) {
            break;
          }
          if (!memcmp(*v13, v14, v7[11])) {
            goto LABEL_26;
          }
LABEL_28:
          id v7 = (uint64_t *)v7[1];
          if (v7 == &v22)
          {
            unint64_t v8 = v23;
            goto LABEL_30;
          }
        }

        if (*((_BYTE *)v7 + 103))
        {
          while (*(unsigned __int8 *)v13 == v14->__r_.__value_.__s.__data_[0])
          {
            uint64_t v13 = (const void **)((char *)v13 + 1);
            int v14 = (std::string *)((char *)v14 + 1);
            if (!--v9) {
              goto LABEL_26;
            }
          }

          goto LABEL_28;
        }

void sub_100F00550(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

void sub_100F00580(_DWORD *a1, std::string *a2)
{
  uint64_t v63 = (uint64_t)&v63;
  __int16 v64 = &v63;
  uint64_t v65 = 0LL;
  if ((sub_100EFA2F0((uint64_t)(a1 + 32), (std::string::size_type)a2, &v63) & 1) != 0)
  {
    if (!v65) {
      goto LABEL_90;
    }
    *(void *)&__int128 v70 = &v70;
    *((void *)&v70 + 1) = &v70;
    uint64_t v71 = 0LL;
    int v72 = 0;
    char v73 = 0;
    memset(&v62, 0, sizeof(v62));
    int v4 = a1[66];
    if ((v4 & 1) != 0)
    {
      uint64_t v10 = "LS";
    }

    else
    {
      if ((char)a2->__r_.__value_.__s.__size_ < 0)
      {
        sub_1010DD48C(__dst, a2->__r_.__value_.__l.__data_, a2->__r_.__value_.__l.__size_);
      }

      else
      {
        *(_OWORD *)std::string __dst = *(_OWORD *)&a2->__r_.__value_.__l.__data_;
        std::string::size_type cap = a2->__r_.__value_.__l.__cap_;
      }

      char v11 = sub_100F02288((uint64_t)a1, (uint64_t *)__dst);
      char v12 = v11;
      if (SHIBYTE(cap) < 0)
      {
        operator delete(__dst[0]);
        if ((v12 & 1) != 0)
        {
LABEL_25:
          v59[0] = 0LL;
          v59[1] = 0LL;
          v57[1] = 0LL;
          __int128 v58 = (uint64_t *)v59;
          __int128 v56 = (uint64_t *)v57;
          v57[0] = 0LL;
          v52[0] = (uint64_t)v52;
          v52[1] = (uint64_t)v52;
          uint64_t v53 = 0LL;
          int v54 = 0;
          char v55 = 0;
          uint64_t v13 = (uint64_t)v64;
          if (v64 != &v63)
          {
            HIDWORD(v47) = 0;
            while (1)
            {
              int v14 = (const void **)(v13 + 56);
              sub_100158FAC(buf, (__int128 *)(v13 + 56), (__int128 *)(v13 + 80));
              if (sub_1009EB514((uint64_t)&v58, (const void **)buf))
              {
                int v15 = sub_1007F14D0((uint64_t)&v70, 0LL, 0LL, v13 + 16);
                uint64_t v16 = v70;
                *int v15 = v70;
                v15[1] = &v70;
                *(void *)(v16 + _Block_object_dispose(va, 8) = v15;
                *(void *)&__int128 v70 = v15;
                ++v71;
              }

              else if (sub_1009EB514((uint64_t)&v56, (const void **)buf))
              {
                char v17 = sub_1007F14D0((uint64_t)v52, 0LL, 0LL, v13 + 16);
                uint64_t v18 = v52[0];
                *char v17 = v52[0];
                v17[1] = v52;
                *(void *)(v18 + _Block_object_dispose(va, 8) = v17;
                v52[0] = (uint64_t)v17;
                ++v53;
              }

              else
              {
                if (*(char *)(v13 + 79) < 0)
                {
                  sub_1010DD48C(v50, *(void **)(v13 + 56), *(void *)(v13 + 64));
                }

                else
                {
                  *(_OWORD *)uint64_t v50 = *(_OWORD *)v14;
                  uint64_t v51 = *(void *)(v13 + 72);
                }

                if (*(char *)(v13 + 103) < 0)
                {
                  sub_1010DD48C(__p, *(void **)(v13 + 80), *(void *)(v13 + 88));
                }

                else
                {
                  *(_OWORD *)std::string __p = *(_OWORD *)(v13 + 80);
                  uint64_t v49 = *(void *)(v13 + 96);
                }

                int v19 = sub_100EFF46C((uint64_t)a1, (uint64_t)v50, (uint64_t)__p);
                if (SHIBYTE(v49) < 0) {
                  operator delete(__p[0]);
                }
                if (SHIBYTE(v51) < 0)
                {
                  operator delete(v50[0]);
                  if (v19)
                  {
LABEL_41:
                    uint64_t v20 = sub_1007F14D0((uint64_t)v52, 0LL, 0LL, v13 + 16);
                    uint64_t v21 = v52[0];
                    *uint64_t v20 = v52[0];
                    v20[1] = v52;
                    *(void *)(v21 + _Block_object_dispose(va, 8) = v20;
                    v52[0] = (uint64_t)v20;
                    ++v53;
                    sub_1009EB6B8(&v56, (const void **)buf, (__int128 *)buf);
                    uint64_t v22 = *(unsigned __int8 *)(v13 + 79);
                    if ((v22 & 0x80u) == 0LL) {
                      uint64_t v23 = *(unsigned __int8 *)(v13 + 79);
                    }
                    else {
                      uint64_t v23 = *(void *)(v13 + 64);
                    }
                    std::string::size_type size = a2->__r_.__value_.__s.__size_;
                    int v25 = (char)size;
                    if ((size & 0x80u) != 0LL) {
                      std::string::size_type size = a2->__r_.__value_.__l.__size_;
                    }
                    if (v23 == size)
                    {
                      if (v25 >= 0) {
                        int v26 = a2;
                      }
                      else {
                        int v26 = (std::string *)a2->__r_.__value_.__r.__words[0];
                      }
                      if ((v22 & 0x80) != 0)
                      {
                        BOOL v35 = memcmp(*v14, v26, *(void *)(v13 + 64)) == 0;
                      }

                      else if (*(_BYTE *)(v13 + 79))
                      {
                        uint64_t v27 = v22 - 1;
                        do
                        {
                          int v29 = *(unsigned __int8 *)v14;
                          int v14 = (const void **)((char *)v14 + 1);
                          int v28 = v29;
                          int v31 = v26->__r_.__value_.__s.__data_[0];
                          int v26 = (std::string *)((char *)v26 + 1);
                          int v30 = v31;
                          BOOL v33 = v27-- != 0;
                          BOOL v34 = v28 == v30;
                          BOOL v35 = v28 == v30;
                        }

                        while (v34 && v33);
                      }

                      else
                      {
                        BOOL v35 = 1;
                      }
                    }

                    else
                    {
                      BOOL v35 = 0;
                    }

                    HIDWORD(v47) |= v35;
                    goto LABEL_66;
                  }
                }

                else if (v19)
                {
                  goto LABEL_41;
                }

                std::stringbuf v36 = sub_1007F14D0((uint64_t)&v70, 0LL, 0LL, v13 + 16);
                uint64_t v37 = v70;
                void *v36 = v70;
                v36[1] = &v70;
                *(void *)(v37 + _Block_object_dispose(va, 8) = v36;
                *(void *)&__int128 v70 = v36;
                ++v71;
                sub_1009EB6B8(&v58, (const void **)buf, (__int128 *)buf);
              }

void sub_100F00E70( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, char a29, void *a30, uint64_t a31, char a32, void *a33, uint64_t a34, void *a35, uint64_t a36, int a37, __int16 a38, char a39, char a40, uint64_t a41, void *__p, uint64_t a43, int a44, __int16 a45, char a46, char a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
  if (a47 < 0) {
    operator delete(__p);
  }
  sub_100527B44(&a55);
  sub_100527B44(&a48);
  _Unwind_Resume(a1);
}

void sub_100F00F38(_DWORD *a1, char a2)
{
  uint64_t v31 = (uint64_t)&v31;
  int v32 = &v31;
  uint64_t v33 = 0LL;
  if ((sub_100EF7A5C((uint64_t)(a1 + 32), &v31) & 1) != 0)
  {
    int v29 = 0LL;
    uint64_t v30 = 0LL;
    int v28 = (uint64_t *)&v29;
    v24[0] = (uint64_t)v24;
    v24[1] = (uint64_t)v24;
    uint64_t v25 = 0LL;
    int v26 = 0;
    char v27 = 0;
    for (__int16 i = v32; i != &v31; __int16 i = (uint64_t *)i[1])
    {
      sub_100158FAC((char *)buf, (__int128 *)(i + 7), (__int128 *)i + 5);
      if (*((char *)i + 79) < 0)
      {
        sub_1010DD48C(__dst, (void *)i[7], i[8]);
      }

      else
      {
        *(_OWORD *)std::string __dst = *(_OWORD *)(i + 7);
        uint64_t v23 = i[9];
      }

      if (*((char *)i + 103) < 0)
      {
        sub_1010DD48C(__p, (void *)i[10], i[11]);
      }

      else
      {
        *(_OWORD *)std::string __p = *((_OWORD *)i + 5);
        uint64_t v21 = i[12];
      }

      char v5 = sub_100EFF46C((uint64_t)a1, (uint64_t)__dst, (uint64_t)__p);
      if (SHIBYTE(v21) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v23) < 0)
      {
        operator delete(__dst[0]);
        if ((v5 & 1) != 0) {
          goto LABEL_19;
        }
LABEL_18:
        sub_1009EB6B8(&v28, (const void **)buf, (__int128 *)buf);
        int v6 = sub_1007F14D0((uint64_t)v24, 0LL, 0LL, (uint64_t)(i + 2));
        uint64_t v7 = v24[0];
        void *v6 = v24[0];
        v6[1] = v24;
        *(void *)(v7 + _Block_object_dispose(va, 8) = v6;
        v24[0] = (uint64_t)v6;
        ++v25;
        goto LABEL_19;
      }

      if ((v5 & 1) == 0) {
        goto LABEL_18;
      }
LABEL_19:
      if (v39 < 0) {
        operator delete(*(void **)&v38[4]);
      }
      if ((v38[3] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
    }

    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188C1A8);
    }
    char v11 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v35 = 2082;
      std::stringbuf v36 = "";
      __int16 v37 = 2050;
      *(void *)uint64_t v38 = v25;
      *(_WORD *)&v38[8] = 2050;
      *(void *)&v38[10] = v30;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:iB: Suspending fences, numRegions:%{public}lu, numBundles:%{public}lu}",  buf,  0x26u);
    }

    if (v25)
    {
      char v12 = v28;
      if (v28 != (uint64_t *)&v29)
      {
        while (1)
        {
          if (*((char *)v12 + 55) < 0)
          {
            sub_1010DD48C(v18, (void *)v12[4], v12[5]);
          }

          else
          {
            *(_OWORD *)uint64_t v18 = *((_OWORD *)v12 + 2);
            uint64_t v19 = v12[6];
          }

          unsigned __int8 v13 = sub_100F0214C((uint64_t)a1, (uint64_t *)v18);
          unsigned __int8 v14 = v13;
          if ((SHIBYTE(v19) & 0x80000000) == 0) {
            break;
          }
          operator delete(v18[0]);
          if ((v14 & 1) == 0) {
            goto LABEL_46;
          }
LABEL_47:
          int v15 = (uint64_t *)v12[1];
          if (v15)
          {
            do
            {
              uint64_t v16 = v15;
              int v15 = (uint64_t *)*v15;
            }

            while (v15);
          }

          else
          {
            do
            {
              uint64_t v16 = (uint64_t *)v12[2];
              BOOL v17 = *v16 == (void)v12;
              char v12 = v16;
            }

            while (!v17);
          }

          char v12 = v16;
        }

        if ((v13 & 1) != 0) {
          goto LABEL_47;
        }
LABEL_46:
        sub_100F01E28((uint64_t)a1, (std::string *)(v12 + 4), 0LL);
        goto LABEL_47;
      }

void sub_100F0140C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, uint64_t a24, void *__p, uint64_t a26, int a27, __int16 a28, char a29, char a30, uint64_t a31, char a32, uint64_t a33, uint64_t a34, uint64_t a35, char a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, char a42)
{
}

void sub_100F014A0(_DWORD *a1)
{
  uint64_t v21 = (uint64_t)&v21;
  uint64_t v22 = &v21;
  uint64_t v23 = 0LL;
  if ((sub_100EF7A5C((uint64_t)(a1 + 32), &v21) & 1) != 0)
  {
    if (a1[66])
    {
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188C1A8);
      }
      uint64_t v2 = (os_log_s *)qword_101934848;
      if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEFAULT))
      {
        int v3 = a1[66];
        *(_DWORD *)std::stringbuf::string_type buf = 67240192;
        *(_DWORD *)&uint8_t buf[4] = v3;
        _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "#Warning No fences will be resumed due to exception,%{public}d",  buf,  8u);
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_50;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188C1A8);
      }
      int v4 = a1[66];
      LODWORD(v24[0]) = 67240192;
      HIDWORD(v24[0]) = v4;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  0LL,  "#Warning No fences will be resumed due to exception,%{public}d",  v24,  8);
      int v6 = (uint8_t *)v5;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLBeaconFenceAuthorizationManager::unlockedNotifyAllWithResumeFences()",  "%s\n",  v5);
LABEL_19:
      if (v6 != buf) {
        free(v6);
      }
      goto LABEL_50;
    }

    uint64_t v19 = 0LL;
    uint64_t v20 = 0LL;
    uint64_t v18 = (uint64_t *)&v19;
    v24[0] = (uint64_t)v24;
    v24[1] = (uint64_t)v24;
    uint64_t v25 = 0LL;
    int v26 = 0;
    char v27 = 0;
    for (__int16 i = v22; ; __int16 i = (uint64_t *)i[1])
    {
      if (i == &v21)
      {
        if (qword_101934840 != -1) {
          dispatch_once(&qword_101934840, &stru_10188C1A8);
        }
        unsigned __int8 v13 = (os_log_s *)qword_101934848;
        if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)std::stringbuf::string_type buf = 68289538;
          *(_DWORD *)&uint8_t buf[4] = 0;
          __int16 v29 = 2082;
          uint64_t v30 = "";
          __int16 v31 = 2050;
          *(void *)int v32 = v25;
          *(_WORD *)&_BYTE v32[8] = 2050;
          *(void *)&v32[10] = v20;
          _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:iB: Resuming all fences, numRegions:%{public}lu, numBundlePairs:%{public}lu}",  buf,  0x26u);
        }

        if (v25)
        {
          *(_DWORD *)std::stringbuf::string_type buf = 0;
          (*(void (**)(_DWORD *, uint8_t *, uint64_t *, void, uint64_t, void))(*(void *)a1 + 152LL))( a1,  buf,  v24,  0LL,  0xFFFFFFFFLL,  0LL);
        }

        sub_100527B44(v24);
        sub_1009EB4CC((uint64_t)&v18, v19);
        goto LABEL_50;
      }

      sub_100158FAC((char *)buf, (__int128 *)(i + 7), (__int128 *)i + 5);
      if (*((char *)i + 79) < 0)
      {
        sub_1010DD48C(__dst, (void *)i[7], i[8]);
      }

      else
      {
        *(_OWORD *)std::string __dst = *(_OWORD *)(i + 7);
        uint64_t v17 = i[9];
      }

      if (*((char *)i + 103) < 0)
      {
        sub_1010DD48C(v14, (void *)i[10], i[11]);
      }

      else
      {
        *(_OWORD *)unsigned __int8 v14 = *((_OWORD *)i + 5);
        uint64_t v15 = i[12];
      }

      int v12 = sub_100EFF46C((uint64_t)a1, (uint64_t)__dst, (uint64_t)v14);
      if (SHIBYTE(v15) < 0) {
        operator delete(v14[0]);
      }
      if (SHIBYTE(v17) < 0)
      {
        operator delete(__dst[0]);
        if ((v12 & 1) != 0) {
          break;
        }
      }

      else if (v12)
      {
        break;
      }

void sub_100F019F8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *__p, uint64_t a19, int a20, __int16 a21, char a22, char a23, uint64_t a24, char a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, char a31, uint64_t a32, uint64_t a33, uint64_t a34, char a35)
{
}

uint64_t sub_100F01A74(_DWORD *a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100F01D80((uint64_t)a1, a2, (uint64_t)a3);
  if (!(_DWORD)v6) {
    return v6;
  }
  int v7 = *a3;
  uint64_t v31 = (uint64_t)&v31;
  int v32 = &v31;
  uint64_t v33 = 0LL;
  v30[0] = 0LL;
  v30[1] = 0LL;
  __int16 v29 = v30;
  v25[0] = (uint64_t)v25;
  v25[1] = (uint64_t)v25;
  uint64_t v26 = 0LL;
  int v27 = 0;
  char v28 = 0;
  unint64_t v8 = v32;
  if (v32 == &v31) {
    goto LABEL_34;
  }
  do
  {
    if (a1[66])
    {
      LOBYTE(v9) = 0;
    }

    else
    {
      uint64_t v10 = (const void **)(v8 + 7);
      if (*((char *)v8 + 79) < 0)
      {
        sub_1010DD48C(__dst, (void *)v8[7], v8[8]);
      }

      else
      {
        *(_OWORD *)std::string __dst = *(_OWORD *)v10;
        uint64_t v24 = v8[9];
      }

      if (*((char *)v8 + 103) < 0)
      {
        sub_1010DD48C(__p, (void *)v8[10], v8[11]);
      }

      else
      {
        *(_OWORD *)std::string __p = *((_OWORD *)v8 + 5);
        uint64_t v22 = v8[12];
      }

      int v9 = sub_100EFF46C((uint64_t)a1, (uint64_t)__dst, (uint64_t)__p);
      if (SHIBYTE(v22) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v24) < 0) {
        operator delete(__dst[0]);
      }
      if (v7) {
        int v11 = 0;
      }
      else {
        int v11 = v9;
      }
      if (v11 == 1)
      {
        int v12 = sub_1007F14D0((uint64_t)v25, 0LL, 0LL, (uint64_t)(v8 + 2));
        uint64_t v13 = v25[0];
        *int v12 = v25[0];
        v12[1] = v25;
        *(void *)(v13 + _Block_object_dispose(va, 8) = v12;
        v25[0] = (uint64_t)v12;
        ++v26;
LABEL_25:
        sub_10002276C((uint64_t **)&v29, v10, (uint64_t)v10);
        goto LABEL_26;
      }
    }

    if (v7 == 1 && (v9 & 1) == 0)
    {
      unsigned __int8 v14 = sub_1007F14D0((uint64_t)v25, 0LL, 0LL, (uint64_t)(v8 + 2));
      uint64_t v15 = v25[0];
      *unsigned __int8 v14 = v25[0];
      v14[1] = v25;
      *(void *)(v15 + _Block_object_dispose(va, 8) = v14;
      v25[0] = (uint64_t)v14;
      ++v26;
      uint64_t v10 = (const void **)(v8 + 7);
      goto LABEL_25;
    }

void sub_100F01D18( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27, char *a28)
{
}

uint64_t sub_100F01D80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 v3 = atomic_load((unsigned __int8 *)&qword_101991BD8);
  if ((v3 & 1) == 0)
  {
    uint64_t v9 = a1;
    uint64_t v8 = a3;
    unsigned int v7 = a2;
    int v5 = __cxa_guard_acquire(&qword_101991BD8);
    a2 = v7;
    a3 = v8;
    int v6 = v5;
    a1 = v9;
    if (v6)
    {
      qword_101991BC0 = 0LL;
      *(void *)algn_101991BC8 = 0LL;
      qword_101991BD0 = 0LL;
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_101991BC0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101991BD8);
      a1 = v9;
      a2 = v7;
      a3 = v8;
    }
  }

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t *))(*(void *)a1 + 96LL))( a1,  a2,  a3,  &qword_101991BC0);
}

void sub_100F01E28(uint64_t a1, std::string *a2, uint64_t a3)
{
  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10188C1A8);
  }
  int v6 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
  {
    if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
      unsigned int v7 = a2;
    }
    else {
      unsigned int v7 = (std::string *)a2->__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)std::stringbuf::string_type buf = 67240450;
    *(_DWORD *)&uint8_t buf[4] = a3;
    __int16 v15 = 2082;
    uint64_t v16 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "iB: Setting icon state,%{public}d, for bundle,%{public}s",  buf,  0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188C1A8);
    }
    if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v8 = a2;
    }
    else {
      uint64_t v8 = (std::string *)a2->__r_.__value_.__r.__words[0];
    }
    v11[0] = 67240450;
    v11[1] = a3;
    __int16 v12 = 2082;
    uint64_t v13 = v8;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "iB: Setting icon state,%{public}d, for bundle,%{public}s",  v11,  18);
    uint64_t v10 = (uint8_t *)v9;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLBeaconFenceAuthorizationManager::unlockedSetFenceIconStateForBundle(const std::string &, BOOL)",  "%s\n",  v9);
    if (v10 != buf) {
      free(v10);
    }
  }

  sub_100FE3188(a2, (uint64_t)buf);
  sub_100575184(*(void *)(a1 + 120), (__int128 *)buf, 0LL, a3);
  if (v29 < 0) {
    operator delete(__p);
  }
  if (v27 < 0) {
    operator delete(v26);
  }
  if (v25 < 0) {
    operator delete(v24);
  }
  if (v23 < 0) {
    operator delete(v22);
  }
  if (v21 < 0) {
    operator delete(v20);
  }
  if (v19 < 0) {
    operator delete(v18);
  }
  if (v17 < 0) {
    operator delete(*(void **)buf);
  }
}

void sub_100F020A8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_100F020C4()
{
  return 1LL;
}

uint64_t sub_100F020CC()
{
  return 1LL;
}

void *sub_100F020D4@<X0>(_DWORD *a1@<X1>, void *a2@<X8>)
{
  return sub_1010DDBC0(a2, __str);
}

id sub_100F0214C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = a2;
  unsigned __int8 v3 = a2;
  id v4 = objc_msgSend( objc_msgSend( *(id *)(a1 + 272),  "syncgetAuthorizationContextIfClientIsNonZonal:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v3)),  "isAuthorizedForServiceType:",  0);
  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10188C1A8);
  }
  int v5 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
  {
    v7[0] = 68289538;
    v7[1] = 0;
    __int16 v8 = 2082;
    uint64_t v9 = "";
    __int16 v10 = 2082;
    int v11 = v2;
    __int16 v12 = 1026;
    int v13 = (int)v4;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:iB: isBundleAuthorized, key:%{public, location:escape_only}s, authorized:%{public}hhd}",  (uint8_t *)v7,  0x22u);
  }

  return v4;
}

uint64_t sub_100F02288(uint64_t a1, uint64_t *a2)
{
  if ((*((char *)a2 + 23) & 0x80000000) == 0)
  {
    if (!*((_BYTE *)a2 + 23)) {
      goto LABEL_7;
    }
    return (uint64_t)objc_msgSend( objc_msgSend( *(id *)(a1 + 272),  "syncgetAuthorizationContextIfClientIsNonZonal:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", a2)),  "isAuthorizedForServiceType:",  14);
  }

  if (a2[1])
  {
    a2 = (uint64_t *)*a2;
    return (uint64_t)objc_msgSend( objc_msgSend( *(id *)(a1 + 272),  "syncgetAuthorizationContextIfClientIsNonZonal:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", a2)),  "isAuthorizedForServiceType:",  14);
  }

void sub_100F0247C(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  __int16 v8 = operator new(0x30uLL);
  sub_1010DDBC0(__p, "CLBeaconFenceAuthorizationManager");
  sub_100F02544((uint64_t)v8, 0LL, (uint64_t *)__p, a3, a1, a2);
  *__int16 v8 = off_10188C110;
  *a4 = v8;
  if (v10 < 0) {
    operator delete(__p[0]);
  }
}

void sub_100F02518( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_100F02544(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4, uint64_t a5, uint64_t a6)
{
  *(void *)a1 = off_10188C328;
  *(void *)(a1 + _Block_object_dispose(va, 8) = -[CLNotifierClientAdapter initWithClient:]( objc_alloc(&OBJC_CLASS___CLNotifierClientAdapter),  "initWithClient:",  a1);
  *(void *)(a1 + 24) = a5;
  *(void *)(a1 + 32) = a6;
  else {
    __int16 v12 = (uint64_t *)*a3;
  }
  id v13 = objc_msgSend( objc_msgSend(a4, "vendor"),  "proxyForService:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v12));
  *(void *)(a1 + 16) = v13;
  id v14 = v13;
  if (a2) {
    [*(id *)(a1 + 16) setDelegateEntityName:a2];
  }
  objc_msgSend(*(id *)(a1 + 16), "registerDelegate:inSilo:", *(void *)(a1 + 8), objc_msgSend(a4, "silo"));
  return a1;
}

void sub_100F02618(uint64_t a1, uint64_t a2)
{
  HIDWORD(v15) = a2;
  if (!*(_BYTE *)(a1 + 108))
  {
    uint64_t v4 = *(void *)(a1 + 88);
    if (!v4) {
      goto LABEL_12;
    }
    uint64_t v5 = a1 + 80;
    uint64_t v6 = a1 + 88;
    do
    {
      int v7 = *(_DWORD *)(v4 + 32);
      BOOL v8 = v7 < (int)a2;
      else {
        uint64_t v9 = (uint64_t *)(v4 + 8);
      }
      if (!v8) {
        uint64_t v6 = v4;
      }
      uint64_t v4 = *v9;
    }

    while (*v9);
    if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= (int)a2)
    {
      while (*(void *)(v6 + 56))
      {
        *(_DWORD *)std::stringbuf::string_type buf = *(_DWORD *)(*(void *)(v6 + 40) + 28LL);
        (*(void (**)(uint64_t, uint64_t, uint8_t *))(*(void *)a1 + 112LL))(a1, a2, buf);
      }

      sub_100233254(v5, (int *)&v15 + 1);
    }

    else
    {
LABEL_12:
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_10188C188);
      }
      char v10 = (os_log_s *)qword_1019349D8;
      if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
      {
        int v11 = (void *)(a1 + 8);
        *(_DWORD *)std::stringbuf::string_type buf = 136446466;
        char v21 = v11;
        __int16 v22 = 1026;
        int v23 = a2;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
          buf,
          0x12u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_10188C188);
        }
        __int16 v12 = (void *)(a1 + 8);
        int v16 = 136446466;
        char v17 = v12;
        __int16 v18 = 1026;
        int v19 = a2;
        LODWORD(v15) = 18;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
          &v16,
          v15);
        id v14 = (uint8_t *)v13;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLNotifier<CLBeaconFenceAuthorizationManager_Type::Notification, CLBeaconFenceAuthorizationManage r_Type::NotificationData, char, std::string>::removeClient(int) [Notification_T = CLBeaconFenceAuthorizationMa nager_Type::Notification, NotificationData_T = CLBeaconFenceAuthorizationManager_Type::NotificationData, Notif icationInfo_T = char, RegistrationInfo_T = std::string]",  "%s\n",  v13);
        if (v14 != buf) {
          free(v14);
        }
      }
    }
  }

BOOL sub_100F0288C(uint64_t a1, int a2, int *a3, const std::string *a4)
{
  int v41 = a2;
  if (*(_BYTE *)(a1 + 108)) {
    return 0LL;
  }
  uint64_t v7 = *(void *)(a1 + 88);
  if (v7)
  {
    uint64_t v10 = a1 + 88;
    do
    {
      int v11 = *(_DWORD *)(v7 + 32);
      BOOL v12 = v11 < a2;
      if (v11 >= a2) {
        id v13 = (uint64_t *)v7;
      }
      else {
        id v13 = (uint64_t *)(v7 + 8);
      }
      if (!v12) {
        uint64_t v10 = v7;
      }
      uint64_t v7 = *v13;
    }

    while (*v13);
    if (v10 != a1 + 88 && *(_DWORD *)(v10 + 32) <= a2)
    {
      uint64_t v40 = v10;
      int v16 = *a3;
      uint64_t v19 = *(void *)(v10 + 48);
      uint64_t v18 = v10 + 48;
      uint64_t v17 = v19;
      if (!v19) {
        goto LABEL_31;
      }
      uint64_t v20 = v18;
      do
      {
        int v21 = *(_DWORD *)(v17 + 28);
        BOOL v22 = v21 < v16;
        if (v21 >= v16) {
          int v23 = (uint64_t *)v17;
        }
        else {
          int v23 = (uint64_t *)(v17 + 8);
        }
        if (!v22) {
          uint64_t v20 = v17;
        }
        uint64_t v17 = *v23;
      }

      while (*v23);
      if (v20 == v18 || v16 < *(_DWORD *)(v20 + 28)) {
LABEL_31:
      }
        uint64_t v20 = v18;
      uint64_t v24 = *(void *)(a1 + 64);
      if (!v24) {
        goto LABEL_42;
      }
      uint64_t v25 = a1 + 64;
      do
      {
        int v26 = *(_DWORD *)(v24 + 32);
        BOOL v27 = v26 < v16;
        if (v26 >= v16) {
          uint64_t v28 = (uint64_t *)v24;
        }
        else {
          uint64_t v28 = (uint64_t *)(v24 + 8);
        }
        if (!v27) {
          uint64_t v25 = v24;
        }
        uint64_t v24 = *v28;
      }

      while (*v28);
      if (v25 != a1 + 64 && v16 >= *(_DWORD *)(v25 + 32))
      {
        *(void *)std::string::size_type v42 = v25;
        uint64_t v33 = *(void *)(v25 + 56);
        *(void *)std::stringbuf::string_type buf = &v41;
        BOOL v34 = sub_1004C2E20((uint64_t **)(v25 + 40), &v41, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        std::string::operator=((std::string *)(v34 + 5), a4);
        *(void *)std::stringbuf::string_type buf = buf;
        *(_OWORD *)&uint8_t buf[8] = (unint64_t)buf;
        int v46 = 0;
        char v47 = 0;
        if (v20 == v18
          && (*(unsigned int (**)(uint64_t, int *, _BYTE *))(*(void *)a1 + 128LL))(a1, a3, buf))
        {
          __int16 v35 = sub_100F04F14((uint64_t)buf);
          sub_100F04644((_BYTE *)a1, (uint64_t)&v40, (uint64_t)v42, v35);
        }

        sub_100527B44((uint64_t *)buf);
        if (v33) {
          goto LABEL_44;
        }
      }

      else
      {
LABEL_42:
        *(void *)std::string::size_type v42 = a1 + 64;
        char v29 = byte_101991BE0;
        HIDWORD(v39) = v16;
        *(void *)std::stringbuf::string_type buf = (char *)&v39 + 4;
        *((_BYTE *)sub_10023347C((uint64_t **)(a1 + 56), (int *)&v39 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 8sub_100222B94(v74, (uint64_t)"CLBeaconFenceDatabase::getFenceForBundleAndOnBehalf", 0) = v29;
        HIDWORD(v39) = *a3;
        *(void *)std::stringbuf::string_type buf = (char *)&v39 + 4;
        uint64_t v30 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v39 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        sub_1000F0D38(v30 + 8);
        HIDWORD(v39) = *a3;
        *(void *)std::stringbuf::string_type buf = (char *)&v39 + 4;
        uint64_t v31 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v39 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        *(void *)std::stringbuf::string_type buf = &v41;
        int v32 = sub_1004C2E20(v31 + 5, &v41, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        std::string::operator=((std::string *)(v32 + 5), a4);
      }

      (*(void (**)(uint64_t, int *))(*(void *)a1 + 168LL))(a1, a3);
LABEL_44:
      if (v20 == v18)
      {
        *(_DWORD *)std::stringbuf::string_type buf = *a3;
        sub_10004A8FC((uint64_t **)(v40 + 40), (int *)buf, buf);
      }

      return 1LL;
    }
  }

  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10188C188);
  }
  id v14 = (os_log_s *)qword_1019349D8;
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
  {
    uint64_t v15 = (void *)(a1 + 8);
    *(_DWORD *)std::stringbuf::string_type buf = 136446466;
    *(void *)&uint8_t buf[4] = v15;
    *(_WORD *)&_BYTE buf[12] = 1026;
    *(_DWORD *)&buf[14] = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
      buf,
      0x12u);
  }

  BOOL result = sub_1002921D0(115, 0);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10188C188);
    }
    std::stringbuf v36 = (void *)(a1 + 8);
    *(_DWORD *)std::string::size_type v42 = 136446466;
    *(void *)&v42[4] = v36;
    __int16 v43 = 1026;
    int v44 = a2;
    LODWORD(v39) = 18;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
      v42,
      v39);
    uint64_t v38 = (char *)v37;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLBeaconFenceAuthorizationManager_Type::Notification, CLBeaconFenceAuthorizationManager_Ty pe::NotificationData, char, std::string>::registerForNotification(int, const Notification_T &, const RegistrationI nfo_T &) [Notification_T = CLBeaconFenceAuthorizationManager_Type::Notification, NotificationData_T = CLBeaconFenc eAuthorizationManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = std::string]",  "%s\n",  v37);
    if (v38 != buf) {
      free(v38);
    }
    return 0LL;
  }

  return result;
}

void sub_100F02D10( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

BOOL sub_100F02D30(uint64_t a1, int a2, int *a3)
{
  uint64_t v5 = *(void *)(a1 + 88);
  if (!v5) {
    goto LABEL_11;
  }
  uint64_t v6 = a1 + 88;
  do
  {
    int v7 = *(_DWORD *)(v5 + 32);
    BOOL v8 = v7 < a2;
    if (v7 >= a2) {
      uint64_t v9 = (uint64_t *)v5;
    }
    else {
      uint64_t v9 = (uint64_t *)(v5 + 8);
    }
    if (!v8) {
      uint64_t v6 = v5;
    }
    uint64_t v5 = *v9;
  }

  while (*v9);
  if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= a2)
  {
    uint64_t v16 = *(void *)(v6 + 48);
    uint64_t v14 = v6 + 48;
    uint64_t v15 = v16;
    if (!v16) {
      goto LABEL_29;
    }
    int v17 = *a3;
    uint64_t v18 = v14;
    do
    {
      int v19 = *(_DWORD *)(v15 + 28);
      BOOL v20 = v19 < v17;
      if (v19 >= v17) {
        int v21 = (uint64_t *)v15;
      }
      else {
        int v21 = (uint64_t *)(v15 + 8);
      }
      if (!v20) {
        uint64_t v18 = v15;
      }
      uint64_t v15 = *v21;
    }

    while (*v21);
    if (v18 == v14 || v17 < *(_DWORD *)(v18 + 28)) {
LABEL_29:
    }
      uint64_t v18 = v14;
    return v18 != v14;
  }

  else
  {
LABEL_11:
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10188C188);
    }
    uint64_t v10 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
    {
      int v11 = (void *)(a1 + 8);
      *(_DWORD *)std::stringbuf::string_type buf = 136446466;
      uint64_t v30 = v11;
      __int16 v31 = 1026;
      int v32 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
        buf,
        0x12u);
    }

    BOOL v12 = sub_1002921D0(115, 0);
    BOOL result = 0LL;
    if (v12)
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_10188C188);
      }
      BOOL v22 = (void *)(a1 + 8);
      int v25 = 136446466;
      int v26 = v22;
      __int16 v27 = 1026;
      int v28 = a2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
        &v25,
        18);
      uint64_t v24 = (uint8_t *)v23;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLBeaconFenceAuthorizationManager_Type::Notification, CLBeaconFenceAuthorizationManager_ Type::NotificationData, char, std::string>::clientRegistered(int, const Notification_T &) [Notification_T = CLBe aconFenceAuthorizationManager_Type::Notification, NotificationData_T = CLBeaconFenceAuthorizationManager_Type::N otificationData, NotificationInfo_T = char, RegistrationInfo_T = std::string]",  "%s\n",  v23);
      if (v24 != buf) {
        free(v24);
      }
      return 0LL;
    }
  }

  return result;
}

BOOL sub_100F02FB0(char *a1, int a2, int *a3)
{
  HIDWORD(v34) = a2;
  int v3 = a1[108];
  if (!a1[108])
  {
    uint64_t v6 = *((void *)a1 + 11);
    if (v6)
    {
      BOOL v8 = a1 + 88;
      do
      {
        int v9 = *(_DWORD *)(v6 + 32);
        BOOL v10 = v9 < a2;
        if (v9 >= a2) {
          int v11 = (uint64_t *)v6;
        }
        else {
          int v11 = (uint64_t *)(v6 + 8);
        }
        if (!v10) {
          BOOL v8 = (char *)v6;
        }
        uint64_t v6 = *v11;
      }

      while (*v11);
      if (v8 != a1 + 88 && *((_DWORD *)v8 + 8) <= a2)
      {
        uint64_t v14 = (char *)*((void *)v8 + 6);
        BOOL v12 = v8 + 48;
        id v13 = v14;
        if (v14)
        {
          int v15 = *a3;
          uint64_t v16 = v12;
          do
          {
            int v17 = *((_DWORD *)v13 + 7);
            BOOL v18 = v17 < v15;
            if (v17 >= v15) {
              int v19 = (char **)v13;
            }
            else {
              int v19 = (char **)(v13 + 8);
            }
            if (!v18) {
              uint64_t v16 = v13;
            }
            id v13 = *v19;
          }

          while (*v19);
          if (v16 != v12 && v15 >= *((_DWORD *)v16 + 7))
          {
            LODWORD(__p[0]) = *a3;
            sub_1004EF494((uint64_t)(v12 - 8), (int *)__p);
            uint64_t v20 = *((void *)a1 + 8);
            if (!v20) {
              goto LABEL_33;
            }
            int v21 = *a3;
            BOOL v22 = a1 + 64;
            do
            {
              int v23 = *(_DWORD *)(v20 + 32);
              BOOL v24 = v23 < v21;
              if (v23 >= v21) {
                int v25 = (uint64_t *)v20;
              }
              else {
                int v25 = (uint64_t *)(v20 + 8);
              }
              if (!v24) {
                BOOL v22 = (char *)v20;
              }
              uint64_t v20 = *v25;
            }

            while (*v25);
            if (v22 != a1 + 64 && v21 >= *((_DWORD *)v22 + 8))
            {
              sub_10052A02C((uint64_t)(v22 + 40), (int *)&v34 + 1);
              if (!*((void *)v22 + 7)) {
                (*(void (**)(char *, int *))(*(void *)a1 + 176LL))(a1, a3);
              }
            }

            else
            {
LABEL_33:
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_10188C188);
              }
              int v26 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                __int16 v27 = a1 + 8;
                if (a1[31] < 0) {
                  __int16 v27 = (void *)*v27;
                }
                (*(void (**)(void **__return_ptr, char *, int *))(*(void *)a1 + 160LL))(__p, a1, a3);
                if (v44 >= 0) {
                  int v28 = __p;
                }
                else {
                  int v28 = (void **)__p[0];
                }
                *(_DWORD *)std::stringbuf::string_type buf = 136446466;
                *(void *)&uint8_t buf[4] = v27;
                __int16 v36 = 2082;
                __int16 v37 = v28;
                _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_FAULT,  "%{public}s; notification %{public}s not found",
                  buf,
                  0x16u);
                if (v44 < 0) {
                  operator delete(__p[0]);
                }
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(__p, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_10188C188);
                }
                char v29 = a1 + 8;
                if (a1[31] < 0) {
                  char v29 = (void *)*v29;
                }
                uint64_t v30 = qword_1019349D8;
                (*(void (**)(_BYTE *__return_ptr, char *, int *))(*(void *)a1 + 160LL))(buf, a1, a3);
                if (v38 >= 0) {
                  __int16 v31 = buf;
                }
                else {
                  __int16 v31 = *(_BYTE **)buf;
                }
                int v39 = 136446466;
                uint64_t v40 = v29;
                __int16 v41 = 2082;
                std::string::size_type v42 = v31;
                LODWORD(v34) = 22;
                _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v30,  17LL,  "%{public}s; notification %{public}s not found",
                  &v39,
                  v34);
                uint64_t v33 = v32;
                if (v38 < 0) {
                  operator delete(*(void **)buf);
                }
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLBeaconFenceAuthorizationManager_Type::Notification, CLBeaconFenceAuthorizati onManager_Type::NotificationData, char, std::string>::unregisterForNotification(int, const Notificatio n_T &) [Notification_T = CLBeaconFenceAuthorizationManager_Type::Notification, NotificationData_T = CL BeaconFenceAuthorizationManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = std::string]",  "%s\n",  v33);
              }
            }
          }
        }
      }
    }
  }

  return v3 == 0;
}

uint64_t sub_100F03338(uint64_t a1, int *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v3 = a1 + 64;
  uint64_t v4 = v5;
  if (!v5) {
    return 0LL;
  }
  int v7 = *a2;
  uint64_t v8 = v3;
  do
  {
    int v9 = *(_DWORD *)(v4 + 32);
    BOOL v10 = v9 < v7;
    if (v9 >= v7) {
      int v11 = (uint64_t *)v4;
    }
    else {
      int v11 = (uint64_t *)(v4 + 8);
    }
    if (!v10) {
      uint64_t v8 = v4;
    }
    uint64_t v4 = *v11;
  }

  while (*v11);
  if (v8 == v3) {
    return 0LL;
  }
  if (v7 < *(_DWORD *)(v8 + 32)) {
    return 0LL;
  }
  uint64_t v12 = *(void *)(v8 + 64);
  if (!v12) {
    return 0LL;
  }
  if (v12 != a3) {
    sub_100F04C78((uint64_t *)a3, *(void *)(v12 + 8), *(void *)(v8 + 64));
  }
  int v13 = *(_DWORD *)(v12 + 24);
  *(_BYTE *)(a3 + 2_Block_object_dispose(va, 8) = *(_BYTE *)(v12 + 28);
  *(_DWORD *)(a3 + 24) = v13;
  return 1LL;
}

uint64_t sub_100F033D0(uint64_t a1, int *a2, uint64_t a3)
{
  int v10 = *a2;
  uint64_t v12 = &v10;
  uint64_t v5 = sub_10023347C((uint64_t **)(a1 + 56), &v10, (uint64_t)&unk_1012CF090, &v12);
  sub_10005F550((uint64_t)(v5 + 8), &v11);
  uint64_t v6 = (std::__shared_weak_count *)*((void *)&v11 + 1);
  if (*((void *)&v11 + 1))
  {
    int v7 = (unint64_t *)(*((void *)&v11 + 1) + 8LL);
    do
      unint64_t v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }

  return 1LL;
}

void sub_100F0347C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100F03490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[0] = (uint64_t)v4;
  v4[1] = (uint64_t)v4;
  _DWORD v4[2] = 0LL;
  int v5 = 0;
  char v6 = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  a2,  v4,  a3,  a4,  0LL);
  sub_100527B44(v4);
}

void sub_100F034E8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100F034FC(uint64_t a1, unsigned int *a2, uint64_t a3, int a4, int a5)
{
  if (!*(_BYTE *)(a1 + 108))
  {
    int v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: notifyClientsWithData (Fallback)",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_IF_NONE_PRESENT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10188C188);
    }
    __int128 v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v12 = (void *)(a1 + 8);
      int v13 = (std::__shared_weak_count *)*a2;
      *(_DWORD *)std::stringbuf::string_type buf = 68289794;
      *(_DWORD *)int v66 = 0;
      *(_WORD *)&v66[4] = 2082;
      *(void *)&v66[6] = "";
      *(_WORD *)&v66[14] = 2082;
      *(void *)&v66[16] = "activity";
      __int16 v67 = 2082;
      __int16 v68 = v12;
      __int16 v69 = 2050;
      __int128 v70 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:notifyClientsWithData, event:%{public, location:escape_only}s, name:%{public, l ocation:escape_only}s, notification:%{public}lld}",  buf,  0x30u);
    }

    int v15 = (__n128 *)(a1 + 64);
    uint64_t v14 = *(__n128 **)(a1 + 64);
    if (!v14) {
      goto LABEL_18;
    }
    signed __int32 v16 = *a2;
    int v17 = (__n128 *)(a1 + 64);
    do
    {
      signed __int32 v18 = v14[2].n128_i32[0];
      BOOL v19 = v18 < v16;
      if (v18 >= v16) {
        uint64_t v20 = (__n128 **)v14;
      }
      else {
        uint64_t v20 = (__n128 **)&v14->n128_u64[1];
      }
      if (!v19) {
        int v17 = v14;
      }
      uint64_t v14 = *v20;
    }

    while (*v20);
    if (v17 == v15 || v16 < (signed __int32)v17[2].n128_u32[0])
    {
LABEL_18:
      *(void *)uint64_t v71 = &v71[8];
      memset(&v71[8], 0, 24);
      int v72 = 0LL;
      sub_1005285AC((uint64_t)buf, a2, (uint64_t)v71);
      int v17 = sub_100528470((uint64_t **)(a1 + 56), (__n128 *)buf);
      int v21 = v70;
      if (v70)
      {
        p_shared_owners = (unint64_t *)&v70->__shared_owners_;
        do
          unint64_t v23 = __ldaxr(p_shared_owners);
        while (__stlxr(v23 - 1, p_shared_owners));
        if (!v23)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }

      sub_100528854((uint64_t)&v66[4], *(char **)&v66[12]);
      BOOL v24 = v72;
      if (v72)
      {
        int v25 = (unint64_t *)&v72->__shared_owners_;
        do
          unint64_t v26 = __ldaxr(v25);
        while (__stlxr(v26 - 1, v25));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }

      sub_100528854((uint64_t)v71, *(char **)&v71[8]);
    }

    if (a4)
    {
      sub_100F04720(a3, buf);
      sub_10005F550((uint64_t)&v17[4], (__int128 *)buf);
      __int16 v27 = *(std::__shared_weak_count **)&v66[4];
      if (*(void *)&v66[4])
      {
        int v28 = (unint64_t *)(*(void *)&v66[4] + 8LL);
        do
          unint64_t v29 = __ldaxr(v28);
        while (__stlxr(v29 - 1, v28));
        if (!v29)
        {
          ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
          std::__shared_weak_count::__release_weak(v27);
        }
      }
    }

    else
    {
      sub_1000F0D38((__n128 *)v17[4].n128_u64);
    }

    if (!v17[3].n128_u64[1]) {
      goto LABEL_83;
    }
    uint64_t v30 = sub_100F041C8(a3);
    if (a5 == -1)
    {
      sub_100F04270((void *)a1, (int *)a2, v30);
    }

    else
    {
      uint64_t v31 = a1 + 88;
      uint64_t v32 = *(void *)(a1 + 88);
      if (!v32) {
        goto LABEL_48;
      }
      uint64_t v33 = a1 + 88;
      do
      {
        int v34 = *(_DWORD *)(v32 + 32);
        BOOL v35 = v34 < a5;
        if (v34 >= a5) {
          __int16 v36 = (uint64_t *)v32;
        }
        else {
          __int16 v36 = (uint64_t *)(v32 + 8);
        }
        if (!v35) {
          uint64_t v33 = v32;
        }
        uint64_t v32 = *v36;
      }

      while (*v36);
      if (v33 == v31 || *(_DWORD *)(v33 + 32) > a5) {
LABEL_48:
      }
        uint64_t v33 = a1 + 88;
      uint64_t v63 = v33;
      unint64_t v37 = v15->n128_u64[0];
      if (!v15->n128_u64[0]) {
        goto LABEL_59;
      }
      int v38 = *a2;
      int v39 = (__n128 *)(a1 + 64);
      do
      {
        int v40 = *(_DWORD *)(v37 + 32);
        BOOL v41 = v40 < v38;
        if (v40 >= v38) {
          std::string::size_type v42 = (unint64_t *)v37;
        }
        else {
          std::string::size_type v42 = (unint64_t *)(v37 + 8);
        }
        if (!v41) {
          int v39 = (__n128 *)v37;
        }
        unint64_t v37 = *v42;
      }

      while (*v42);
      if (v39 == v15 || v38 < (signed __int32)v39[2].n128_u32[0])
      {
LABEL_59:
        std::string v62 = (__n128 *)(a1 + 64);
LABEL_60:
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_10188C188);
        }
        __int16 v43 = (os_log_s *)qword_1019349D8;
        if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
        {
          char v44 = (void *)(a1 + 8);
          (*(void (**)(_BYTE *__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(v71, a1, a2);
          if (v71[23] >= 0) {
            uint64_t v45 = v71;
          }
          else {
            uint64_t v45 = *(_BYTE **)v71;
          }
          *(_DWORD *)std::stringbuf::string_type buf = 136315650;
          *(void *)int v66 = v44;
          *(_WORD *)&v66[8] = 1024;
          *(_DWORD *)&v66[10] = a5;
          *(_WORD *)&v66[14] = 2080;
          *(void *)&v66[16] = v45;
          _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_DEBUG,  "%s; client %d has deregistered, not notifying %s",
            buf,
            0x1Cu);
          if ((v71[23] & 0x80000000) != 0) {
            operator delete(*(void **)v71);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019349D0 != -1) {
            dispatch_once(&qword_1019349D0, &stru_10188C188);
          }
          int v46 = (void *)(a1 + 8);
          uint64_t v47 = qword_1019349D8;
          (*(void (**)(void **__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(__p, a1, a2);
          if (v61 >= 0) {
            uint64_t v48 = __p;
          }
          else {
            uint64_t v48 = (void **)__p[0];
          }
          *(_DWORD *)uint64_t v71 = 136315650;
          *(void *)&v71[4] = v46;
          *(_WORD *)&v71[12] = 1024;
          *(_DWORD *)&v71[14] = a5;
          *(_WORD *)&v71[18] = 2080;
          *(void *)&v71[20] = v48;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v47,  2LL,  "%s; client %d has deregistered, not notifying %s",
            v71,
            28,
            v59);
          uint64_t v50 = v49;
          if (v61 < 0) {
            operator delete(__p[0]);
          }
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLBeaconFenceAuthorizationManager_Type::Notification, CLBeaconFenceAuthorizationMana ger_Type::NotificationData, char, std::string>::notifyClientsWithData(const Notification_T &, const Notifica tionData_T &, BOOL, int, BOOL) [Notification_T = CLBeaconFenceAuthorizationManager_Type::Notification, Notif icationData_T = CLBeaconFenceAuthorizationManager_Type::NotificationData, NotificationInfo_T = char, Registr ationInfo_T = std::string]",  "%s\n",  v50);
        }

        goto LABEL_83;
      }

      std::string v62 = v39;
      if (v33 == v31) {
        goto LABEL_60;
      }
      uint64_t v53 = v39[3].n128_i64[0];
      uint64_t v51 = v39 + 3;
      uint64_t v52 = (__n128 *)v53;
      if (!v53) {
        goto LABEL_60;
      }
      int v54 = *(_DWORD *)(v33 + 32);
      char v55 = v51;
      do
      {
        int v56 = v52[2].n128_i32[0];
        BOOL v57 = v56 < v54;
        if (v56 >= v54) {
          __int128 v58 = v52;
        }
        else {
          __int128 v58 = (__n128 *)&v52->n128_i8[8];
        }
        if (!v57) {
          char v55 = v52;
        }
        uint64_t v52 = (__n128 *)v58->n128_u64[0];
      }

      while (v58->n128_u64[0]);
      sub_100F04644((_BYTE *)a1, (uint64_t)&v63, (uint64_t)&v62, v30);
    }

void sub_100F03B18( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_activity_scope_state_s state, char a18)
{
}

void sub_100F03B64(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 108))
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10188C188);
    }
    uint64_t v2 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v3 = (void *)(a1 + 8);
      *(_DWORD *)std::stringbuf::string_type buf = 136315138;
      unint64_t v37 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "%s; already shutdown; not listing clients",
        buf,
        0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_10188C188);
      }
      uint64_t v4 = (void *)(a1 + 8);
      int v32 = 136315138;
      uint64_t v33 = v4;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; already shutdown; not listing clients",
        (const char *)&v32);
      char v6 = (uint8_t *)v5;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLBeaconFenceAuthorizationManager_Type::Notification, CLBeaconFenceAuthorizationManager_ Type::NotificationData, char, std::string>::listClients() [Notification_T = CLBeaconFenceAuthorizationManager_Ty pe::Notification, NotificationData_T = CLBeaconFenceAuthorizationManager_Type::NotificationData, NotificationInf o_T = char, RegistrationInfo_T = std::string]",  "%s\n",  v5);
      if (v6 != buf) {
        free(v6);
      }
    }
  }

  else
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10188C188);
    }
    int v7 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      unint64_t v8 = (void *)(a1 + 8);
      uint64_t v9 = *(void *)(a1 + 96);
      *(_DWORD *)std::stringbuf::string_type buf = 136315394;
      unint64_t v37 = v8;
      __int16 v38 = 2048;
      v39[0] = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "%s; listing clients, num clients: %zu",
        buf,
        0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_10188C188);
      }
      __int16 v27 = (void *)(a1 + 8);
      uint64_t v28 = *(void *)(a1 + 96);
      int v32 = 136315394;
      uint64_t v33 = v27;
      __int16 v34 = 2048;
      v35[0] = v28;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; listing clients, num clients: %zu",
        (const char *)&v32,
        22);
      uint64_t v30 = (uint8_t *)v29;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLBeaconFenceAuthorizationManager_Type::Notification, CLBeaconFenceAuthorizationManager_ Type::NotificationData, char, std::string>::listClients() [Notification_T = CLBeaconFenceAuthorizationManager_Ty pe::Notification, NotificationData_T = CLBeaconFenceAuthorizationManager_Type::NotificationData, NotificationInf o_T = char, RegistrationInfo_T = std::string]",  "%s\n",  v29);
      if (v30 != buf) {
        free(v30);
      }
    }

    int v10 = *(void **)(a1 + 80);
    if (v10 != (void *)(a1 + 88))
    {
      __int128 v11 = (void *)(a1 + 8);
      do
      {
        uint64_t v12 = (void *)v10[5];
        if (v12 != v10 + 6)
        {
          do
          {
            if (qword_1019349D0 != -1) {
              dispatch_once(&qword_1019349D0, &stru_10188C188);
            }
            int v13 = (os_log_s *)qword_1019349D8;
            if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v14 = (void *)(a1 + 8);
              int v15 = *((_DWORD *)v10 + 8);
              int v16 = *((_DWORD *)v12 + 7);
              *(_DWORD *)std::stringbuf::string_type buf = 136315650;
              unint64_t v37 = v14;
              __int16 v38 = 1024;
              LODWORD(v39[0]) = v15;
              WORD2(v39[0]) = 1024;
              *(_DWORD *)((char *)v39 + 6) = v16;
              _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "%s; clients, id: %d, notification: %d",
                buf,
                0x18u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_10188C188);
              }
              uint64_t v20 = (void *)(a1 + 8);
              int v21 = *((_DWORD *)v10 + 8);
              int v22 = *((_DWORD *)v12 + 7);
              int v32 = 136315650;
              uint64_t v33 = v20;
              __int16 v34 = 1024;
              LODWORD(v35[0]) = v21;
              WORD2(v35[0]) = 1024;
              *(_DWORD *)((char *)v35 + 6) = v22;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; clients, id: %d, notification: %d",
                (const char *)&v32,
                24,
                v31);
              BOOL v24 = (uint8_t *)v23;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLBeaconFenceAuthorizationManager_Type::Notification, CLBeaconFenceAuthorization Manager_Type::NotificationData, char, std::string>::listClients() [Notification_T = CLBeaconFenceAuthori zationManager_Type::Notification, NotificationData_T = CLBeaconFenceAuthorizationManager_Type::Notificat ionData, NotificationInfo_T = char, RegistrationInfo_T = std::string]",  "%s\n",  v23);
              if (v24 != buf) {
                free(v24);
              }
            }

            int v17 = (void *)v12[1];
            if (v17)
            {
              do
              {
                signed __int32 v18 = v17;
                int v17 = (void *)*v17;
              }

              while (v17);
            }

            else
            {
              do
              {
                signed __int32 v18 = (void *)v12[2];
                BOOL v19 = *v18 == (void)v12;
                uint64_t v12 = v18;
              }

              while (!v19);
            }

            uint64_t v12 = v18;
          }

          while (v18 != v10 + 6);
        }

        int v25 = (void *)v10[1];
        if (v25)
        {
          do
          {
            unint64_t v26 = v25;
            int v25 = (void *)*v25;
          }

          while (v25);
        }

        else
        {
          do
          {
            unint64_t v26 = (void *)v10[2];
            BOOL v19 = *v26 == (void)v10;
            int v10 = v26;
          }

          while (!v19);
        }

        int v10 = v26;
      }

      while (v26 != (void *)(a1 + 88));
    }
  }

void sub_100F04110(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100F04EB4(a1);
  operator delete(v1);
}

id sub_100F04124(uint64_t a1, int a2, void *a3)
{
  id result = sub_100F04854(a3);
  if (result)
  {
    int v6 = a2;
    return (id)(*(uint64_t (**)(void, int *, id, void))(a1 + 24))(0LL, &v6, result, *(void *)(a1 + 32));
  }

  return result;
}

void sub_100F04170(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_100F0419C(id a1)
{
  qword_101934848 = (uint64_t)os_log_create("com.apple.locationd.Position", "Proximity");
}

CLCppContainer *sub_100F041C8(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)operator new(0x20uLL);
  sub_1007F21E0(v2, a1);
  *((_DWORD *)v2 + 6) = *(_DWORD *)(a1 + 24);
  *((_BYTE *)v2 + 2_Block_object_dispose(va, 8) = *(_BYTE *)(a1 + 28);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  _DWORD v4[2] = sub_100F0481C;
  uint64_t v4[3] = &unk_10181D3D0;
  void v4[4] = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:",  v2,  v4,  0LL,  32LL);
}

void sub_100F0425C(_Unwind_Exception *a1)
{
}

void sub_100F04270(void *a1, int *a2, void *a3)
{
  if (!*((_BYTE *)a1 + 108))
  {
    int v5 = a1 + 8;
    uint64_t v4 = a1[8];
    if (v4)
    {
      int v8 = *a2;
      uint64_t v9 = a1 + 8;
      do
      {
        int v10 = *(_DWORD *)(v4 + 32);
        BOOL v11 = v10 < v8;
        if (v10 >= v8) {
          uint64_t v12 = (uint64_t *)v4;
        }
        else {
          uint64_t v12 = (uint64_t *)(v4 + 8);
        }
        if (!v11) {
          uint64_t v9 = (void *)v4;
        }
        uint64_t v4 = *v12;
      }

      while (*v12);
      if (v9 != v5 && v8 >= *((_DWORD *)v9 + 8))
      {
        uint64_t v51 = v9;
        id v13 = sub_100F04854(a3);
        (*(void (**)(void *, int *, id, void *))(*a1 + 184LL))(a1, a2, v13, v9 + 10);
        uint64_t v14 = (void *)v9[5];
        if (v14 != v9 + 6)
        {
          int v15 = a1 + 11;
          int v16 = a1 + 1;
          do
          {
            uint64_t v17 = *v15;
            if (!*v15) {
              goto LABEL_25;
            }
            int v18 = *((_DWORD *)v14 + 8);
            BOOL v19 = a1 + 11;
            do
            {
              int v20 = *(_DWORD *)(v17 + 32);
              BOOL v21 = v20 < v18;
              if (v20 >= v18) {
                int v22 = (uint64_t *)v17;
              }
              else {
                int v22 = (uint64_t *)(v17 + 8);
              }
              if (!v21) {
                BOOL v19 = (uint64_t *)v17;
              }
              uint64_t v17 = *v22;
            }

            while (*v22);
            if (v19 != v15 && (int v23 = *((_DWORD *)v19 + 8), v18 >= v23))
            {
              uint64_t v50 = v19;
              sub_100F04644(a1, (uint64_t)&v50, (uint64_t)&v51, a3);
              uint64_t v27 = a1[8];
              if (!v27) {
                return;
              }
              int v28 = *a2;
              unint64_t v29 = v5;
              do
              {
                int v30 = *(_DWORD *)(v27 + 32);
                BOOL v31 = v30 < v28;
                if (v30 >= v28) {
                  int v32 = (uint64_t *)v27;
                }
                else {
                  int v32 = (uint64_t *)(v27 + 8);
                }
                if (!v31) {
                  unint64_t v29 = (void *)v27;
                }
                uint64_t v27 = *v32;
              }

              while (*v32);
              if (v29 == v5 || v28 < *((_DWORD *)v29 + 8)) {
                return;
              }
              uint64_t v51 = v29;
              uint64_t v34 = v29[6];
              uint64_t v14 = v29 + 6;
              uint64_t v33 = v34;
              if (v34)
              {
                BOOL v35 = v14;
                uint64_t v36 = v33;
                do
                {
                  int v37 = *(_DWORD *)(v36 + 32);
                  BOOL v38 = v37 < v23;
                  if (v37 >= v23) {
                    int v39 = (uint64_t *)v36;
                  }
                  else {
                    int v39 = (uint64_t *)(v36 + 8);
                  }
                  if (!v38) {
                    BOOL v35 = (void *)v36;
                  }
                  uint64_t v36 = *v39;
                }

                while (*v39);
                if (v35 == v14 || v23 < *((_DWORD *)v35 + 8))
                {
                  do
                  {
                    int v40 = *(_DWORD *)(v33 + 32);
                    BOOL v41 = v23 < v40;
                    if (v23 >= v40) {
                      std::string::size_type v42 = (uint64_t *)(v33 + 8);
                    }
                    else {
                      std::string::size_type v42 = (uint64_t *)v33;
                    }
                    if (v41) {
                      uint64_t v14 = (void *)v33;
                    }
                    uint64_t v33 = *v42;
                  }

                  while (*v42);
                }

                else
                {
                  __int16 v43 = (void *)v35[1];
                  if (v43)
                  {
                    do
                    {
                      uint64_t v14 = v43;
                      __int16 v43 = (void *)*v43;
                    }

                    while (v43);
                  }

                  else
                  {
                    do
                    {
                      uint64_t v14 = (void *)v35[2];
                      BOOL v44 = *v14 == (void)v35;
                      BOOL v35 = v14;
                    }

                    while (!v44);
                  }
                }
              }
            }

            else
            {
LABEL_25:
              uint64_t v50 = a1 + 11;
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_10188C188);
              }
              BOOL v24 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                int v25 = a1 + 1;
                int v26 = *((_DWORD *)v14 + 8);
                *(_DWORD *)std::stringbuf::string_type buf = 136446466;
                BOOL v57 = v25;
                __int16 v58 = 1026;
                int v59 = v26;
                _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_FAULT,  "%{public}s; unknown client %{public}d",
                  buf,
                  0x12u);
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(buf, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_10188C188);
                }
                uint64_t v45 = a1 + 1;
                int v46 = *((_DWORD *)v14 + 8);
                int v52 = 136446466;
                uint64_t v53 = v45;
                __int16 v54 = 1026;
                int v55 = v46;
                LODWORD(v49) = 18;
                _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; unknown client %{public}d",
                  &v52,
                  v49);
                uint64_t v48 = (uint8_t *)v47;
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLNotifier<CLBeaconFenceAuthorizationManager_Type::Notification, CLBeaconFenceAuthorizationManage r_Type::NotificationData, char, std::string>::invokeClientsWithData(const Notification_T &, CLCppConta iner *) [Notification_T = CLBeaconFenceAuthorizationManager_Type::Notification, NotificationData_T = C LBeaconFenceAuthorizationManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = std::string]",  "%s\n",  v47);
                if (v48 != buf) {
                  free(v48);
                }
              }
            }
          }

          while (v14 != v51 + 6);
        }
      }
    }
  }

_BYTE *sub_100F04644(_BYTE *result, uint64_t a2, uint64_t a3, void *a4)
{
  if (!result[108])
  {
    int v7 = result;
    uint64_t v8 = *(unsigned int *)(*(void *)a2 + 32LL);
    LODWORD(v13) = *(_DWORD *)(*(void *)a3 + 32LL);
    id v9 = sub_100F04854(a4);
    uint64_t v10 = *(void *)a3 + 80LL;
    BOOL v11 = (uint64_t **)(*(void *)a3 + 40LL);
    uint64_t v14 = (int *)(*(void *)a2 + 32LL);
    uint64_t v12 = sub_1004C2E20(v11, v14, (uint64_t)&unk_1012CF090, &v14);
    id result = (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t *, id, uint64_t, uint64_t **))(*(void *)v7 + 192LL))( v7,  v8,  &v13,  v9,  v10,  v12 + 5);
    if ((_DWORD)result) {
      return objc_msgSend( *(id *)(*(void *)a2 + 64),  "onNotification:withData:",  *(unsigned int *)(*(void *)a3 + 32),  a4,  v13);
    }
  }

  return result;
}

uint64_t sub_100F04720@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = (char *)operator new(0x38uLL);
  uint64_t result = sub_100F04778((uint64_t)v4, a1);
  *a2 = v4 + 24;
  a2[1] = v4;
  return result;
}

void sub_100F04764(_Unwind_Exception *a1)
{
}

uint64_t sub_100F04778(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 16) = 0LL;
  *(void *)a1 = off_10188C2B8;
  *(void *)(a1 + _Block_object_dispose(va, 8) = 0LL;
  sub_1007F21E0((uint64_t *)(a1 + 24), a2);
  int v4 = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 52) = *(_BYTE *)(a2 + 28);
  *(_DWORD *)(a1 + 4_Block_object_dispose(va, 8) = v4;
  return a1;
}

void sub_100F047C4(_Unwind_Exception *a1)
{
}

void sub_100F047D8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10188C2B8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100F047EC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10188C2B8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_100F04810(uint64_t a1)
{
}

void sub_100F0481C(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1)
  {
    sub_100527B44(*(uint64_t **)(a1 + 32));
    operator delete(v1);
  }

id sub_100F04854(void *a1)
{
  if ((objc_opt_isKindOfClass(a1, v2) & 1) != 0) {
    return sub_100F048A0(a1);
  }
  else {
    return 0LL;
  }
}

id sub_100F048A0(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return [a1 cppObjectPtr];
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10188C2F8);
    }
    uint64_t v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001013649C3LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10188C2F8);
    }
    LODWORD(v_Block_object_dispose(va, 8) = 134218498;
    HIDWORD(v_Block_object_dispose(va, 8) = (_DWORD)v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10188C2F8);
    }
    int v6 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001013649C3LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10188C2F8);
    }
    LODWORD(v_Block_object_dispose(va, 8) = 134218498;
    HIDWORD(v_Block_object_dispose(va, 8) = (_DWORD)v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  int v7 = (uint8_t *)v4;
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLBeaconFenceAuthorizationManager_Type::Notifica tionData, Callback = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:228:46)]",  "%s\n",  v4);
  if (v7 != buf) {
    free(v7);
  }
  return 0LL;
}

void sub_100F04C4C(id a1)
{
  qword_101934478 = (uint64_t)os_log_create("com.apple.locationd.Support", "Support");
}

uint64_t *sub_100F04C78(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2;
  int v6 = (uint64_t *)a1[1];
  if (a2 != a3 && v6 != a1)
  {
    do
    {
      std::string::operator=((std::string *)v6 + 1, (const std::string *)(v4 + 24));
      v6[6] = *(void *)(v4 + 48);
      std::string::operator=((std::string *)(v6 + 7), (const std::string *)(v4 + 56));
      std::string::operator=((std::string *)(v6 + 10), (const std::string *)(v4 + 80));
      std::string::operator=((std::string *)(v6 + 13), (const std::string *)(v4 + 104));
      *((_DWORD *)v6 + 32) = *(_DWORD *)(v4 + 128);
      uint64_t v4 = *(void *)(v4 + 8);
      int v6 = (uint64_t *)v6[1];
    }

    while (v4 != a3 && v6 != a1);
  }

  if (v6 == a1) {
    return sub_100F04D3C((uint64_t)a1, a1, v4, a3);
  }
  else {
    return sub_100F04E30((uint64_t)a1, v6, a1);
  }
}

uint64_t *sub_100F04D3C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  if (a3 != a4)
  {
    uint64_t v8 = sub_1007F14D0(a1, 0LL, 0LL, a3 + 16);
    id v9 = v8;
    uint64_t v10 = *(void *)(a3 + 8);
    uint64_t v11 = 1LL;
    if (v10 != a4)
    {
      uint64_t v12 = (uint64_t)v8;
      do
      {
        uint64_t v8 = sub_1007F14D0(a1, v12, 0LL, v10 + 16);
        *(void *)(v12 + _Block_object_dispose(va, 8) = v8;
        ++v11;
        uint64_t v10 = *(void *)(v10 + 8);
        uint64_t v12 = (uint64_t)v8;
      }

      while (v10 != a4);
    }

    uint64_t v13 = *a2;
    *(void *)(v13 + _Block_object_dispose(va, 8) = v9;
    void *v9 = v13;
    *a2 = (uint64_t)v8;
    v8[1] = a2;
    *(void *)(a1 + 16) += v11;
    return v9;
  }

  return a2;
}

void sub_100F04E08(void *a1)
{
}

void sub_100F04E1C(_Unwind_Exception *a1)
{
}

void *sub_100F04E30(uint64_t a1, void *a2, void *a3)
{
  if (a2 != a3)
  {
    uint64_t v4 = a2;
    uint64_t v6 = *a3;
    uint64_t v7 = *a2;
    *(void *)(v7 + _Block_object_dispose(va, 8) = *(void *)(*a3 + 8LL);
    **(void **)(v6 + _Block_object_dispose(va, 8) = v7;
    do
    {
      uint64_t v8 = (void *)v4[1];
      --*(void *)(a1 + 16);
      (*(void (**)(void *))v4[2])(v4 + 2);
      operator delete(v4);
      uint64_t v4 = v8;
    }

    while (v8 != a3);
  }

  return a3;
}

uint64_t sub_100F04EB4(uint64_t a1)
{
  *(void *)a1 = off_10188C328;
  id v2 = (id *)(a1 + 8);
  [*(id *)(a1 + 16) forget:*(void *)(a1 + 8)];

  [*v2 invalidate];
  id *v2 = 0LL;
  *(void *)(a1 + 16) = 0LL;
  return a1;
}

CLCppContainer *sub_100F04F14(uint64_t a1)
{
  id v2 = (uint64_t *)operator new(0x20uLL);
  sub_1007F21E0(v2, a1);
  *((_DWORD *)v2 + 6) = *(_DWORD *)(a1 + 24);
  *((_BYTE *)v2 + 2_Block_object_dispose(va, 8) = *(_BYTE *)(a1 + 28);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  _DWORD v4[2] = sub_100F04FBC;
  uint64_t v4[3] = &unk_10181D3D0;
  void v4[4] = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:",  v2,  v4,  0LL,  32LL);
}

void sub_100F04FA8(_Unwind_Exception *a1)
{
}

void sub_100F04FBC(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1)
  {
    sub_100527B44(*(uint64_t **)(a1 + 32));
    operator delete(v1);
  }

uint64_t sub_100F04FF4()
{
  return __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10199F3F0, (void *)&_mh_execute_header);
}

uint64_t sub_100F05038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = off_10188C380;
  *(void *)(a1 + _Block_object_dispose(va, 8) = a3;
  *(void *)(a1 + 16) = 0LL;
  uint64_t v4 = (char **)(a1 + 16);
  *(void *)(a1 + 24) = 0LL;
  *(void *)(a1 + 32) = 0LL;
  *(void *)(a1 + sub_10004AD90(v3 - 40) = a2;
  if ((uint64_t (***)())a1 != &off_10188C340)
  {
    int v5 = 0LL;
    uint64_t v6 = a1;
    do
    {
      unint64_t v7 = *(void *)(a1 + 32);
      if ((unint64_t)v5 >= v7)
      {
        uint64_t v8 = (v5 - *v4) >> 3;
        uint64_t v9 = v7 - (void)*v4;
        uint64_t v10 = v9 >> 2;
        else {
          unint64_t v11 = v10;
        }
        if (v11) {
          uint64_t v12 = (char *)sub_1000071BC(a1 + 32, v11);
        }
        else {
          uint64_t v12 = 0LL;
        }
        uint64_t v13 = &v12[8 * v8];
        *(void *)uint64_t v13 = v6;
        int v5 = v13 + 8;
        int v15 = *(char **)(a1 + 16);
        unint64_t v14 = *(char **)(a1 + 24);
        if (v14 != v15)
        {
          do
          {
            uint64_t v16 = *((void *)v14 - 1);
            v14 -= 8;
            *((void *)v13 - 1) = v16;
            v13 -= 8;
          }

          while (v14 != v15);
          unint64_t v14 = *v4;
        }

        *(void *)(a1 + 16) = v13;
        *(void *)(a1 + 24) = v5;
        *(void *)(a1 + 32) = &v12[8 * v11];
        if (v14) {
          operator delete(v14);
        }
      }

      else
      {
        *(void *)int v5 = v6;
        v5 += 8;
      }

      *(void *)(a1 + 24) = v5;
      uint64_t v6 = *(void *)(v6 + 8);
    }

    while ((uint64_t (***)())v6 != &off_10188C340);
  }

  return a1;
}

void sub_100F05168(_Unwind_Exception *exception_object)
{
  uint64_t v4 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 24) = v4;
    operator delete(v4);
  }

  _Unwind_Resume(exception_object);
}

uint64_t sub_100F05188()
{
  return 0LL;
}

uint64_t sub_100F05194()
{
  return 0LL;
}

uint64_t sub_100F051A4(void *a1, void *a2)
{
  uint64_t v4 = a2;
  do
  {
    *a1 = v4;
    int v5 = (os_log_s *)a1[1];
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = v4[5];
      *(_DWORD *)std::stringbuf::string_type buf = 136315138;
      uint64_t v9 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "initial, enter(%s)", buf, 0xCu);
      uint64_t v4 = (void *)*a1;
    }

    (*(void (**)(void *, void, void))(*v4 + 24LL))(v4, 0LL, 0LL);
    uint64_t result = (*(uint64_t (**)(void *))(*a2 + 8LL))(a2);
    uint64_t v4 = (void *)result;
  }

  while (result);
  return result;
}

void sub_100F052A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(uint64_t (****)())a1;
  if (*(uint64_t (****)())a1 != &off_10188C340)
  {
    while (1)
    {
      uint64_t v7 = ((uint64_t (*)(uint64_t (***)(), uint64_t, uint64_t))**v3)(v3, a2, a3);
      if (v7) {
        break;
      }
      uint64_t v3 = (uint64_t (***)())v3[1];
      if (v3 == &off_10188C340) {
        return;
      }
    }

    uint64_t v8 = v7;
    if ((uint64_t (***)())v7 == v3)
    {
      ((void (*)(uint64_t (***)(), uint64_t, uint64_t))(*v3)[2])(v3, a2, a3);
    }

    else
    {
      uint64_t v9 = *(uint64_t (****)())a1;
      int v26 = 0LL;
      uint64_t v27 = 0LL;
      int v25 = 0LL;
      sub_100007590(&v25, v9[2], (uint64_t)v9[3], v9[3] - v9[2]);
      std::string __p = 0LL;
      uint64_t v24 = 0LL;
      int v22 = 0LL;
      sub_100007590( &v22,  *(const void **)(v8 + 16),  *(void *)(v8 + 24),  (uint64_t)(*(void *)(v8 + 24) - *(void *)(v8 + 16)) >> 3);
      uint64_t v10 = v25;
      if (v25 != v26)
      {
        unint64_t v11 = (char *)__p - 8;
        uint64_t v12 = v26 - 8;
        while (v11 + 1 != (void *)v22 && *(void *)v12 == *v11)
        {
          int v26 = v12;
          std::string __p = v11--;
          BOOL v13 = v12 == v25;
          v12 -= 8;
          if (v13) {
            goto LABEL_18;
          }
        }

        unint64_t v14 = v12 + 8;
        if (v12 + 8 != v25)
        {
          do
          {
            uint64_t v15 = *v10;
            (*(void (**)(void, uint64_t, uint64_t))(*(void *)*v10 + 32LL))(*v10, a2, a3);
            uint64_t v16 = *(os_log_s **)(a1 + 8);
            if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v17 = *(void *)(v15 + 40);
              *(_DWORD *)std::stringbuf::string_type buf = 134218242;
              uint64_t v29 = a2;
              __int16 v30 = 2080;
              uint64_t v31 = v17;
              _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "event %llu, exit(%s)", buf, 0x16u);
            }

            ++v10;
          }

          while (v14 != v10);
        }
      }

void sub_100F055AC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, void *a14, uint64_t a15)
{
  if (__p) {
    operator delete(__p);
  }
  if (a14) {
    operator delete(a14);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100F055F0(void *a1)
{
  *a1 = off_10188C380;
  id v2 = (void *)a1[2];
  if (v2)
  {
    a1[3] = v2;
    operator delete(v2);
  }

  return a1;
}

void sub_100F0562C(void *__p)
{
  *std::string __p = off_10188C380;
  id v2 = (void *)__p[2];
  if (v2)
  {
    __p[3] = v2;
    operator delete(v2);
  }

  operator delete(__p);
}

uint64_t sub_100F05668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = xmmword_101364A10;
  *(_BYTE *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 24) = 196608;
  *(_BYTE *)(a1 + 2_Block_object_dispose(va, 8) = 0;
  *(void *)(a1 + 112) = 0LL;
  *(void *)(a1 + 12_Block_object_dispose(va, 8) = 0LL;
  *(_DWORD *)(a1 + 12sub_100222B94(v74, (uint64_t)"CLBeaconFenceDatabase::getFenceForBundleAndOnBehalf", 0) = 0;
  *(void *)(a1 + 136) = 0LL;
  *(void *)(a1 + 144) = 0LL;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 4_Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(a1 + 57) = 0u;
  *(void *)(a1 + 8_Block_object_dispose(va, 8) = 0LL;
  *(void *)(a1 + 96) = 0LL;
  *(void *)(a1 + 8sub_100222B94(v74, (uint64_t)"CLBeaconFenceDatabase::getFenceForBundleAndOnBehalf", 0) = 0LL;
  *(void *)(a1 + 102) = 0LL;
  sub_10001A504(a1 + 152, a2);
  sub_10001A504(a1 + 184, a3);
  return a1;
}

void sub_100F056F4(_Unwind_Exception *exception_object)
{
  int v5 = *(void **)(v1 + 176);
  if (v5 == v2)
  {
    uint64_t v6 = v2;
    uint64_t v7 = 4LL;
  }

  else
  {
    if (!v5) {
      goto LABEL_6;
    }
    uint64_t v7 = 5LL;
    uint64_t v6 = *(void **)(v1 + 176);
  }

  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_6:
  uint64_t v8 = *v3;
  if (*v3)
  {
    *(void *)(v1 + 136) = v8;
    operator delete(v8);
  }

  _Unwind_Resume(exception_object);
}

void *sub_100F0574C(void *a1)
{
  id v2 = a1 + 19;
  uint64_t v3 = (void *)a1[22];
  a1[22] = 0LL;
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    uint64_t v3 = v2;
  }

  else
  {
    if (!v3) {
      goto LABEL_6;
    }
    uint64_t v4 = 5LL;
  }

  (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_6:
  int v5 = a1 + 23;
  uint64_t v6 = (void *)a1[26];
  a1[26] = 0LL;
  if (v6 == a1 + 23)
  {
    uint64_t v7 = 4LL;
    uint64_t v6 = a1 + 23;
  }

  else
  {
    if (!v6) {
      goto LABEL_15;
    }
    uint64_t v7 = 5LL;
  }

  (*(void (**)(void))(*v6 + 8 * v7))();
  uint64_t v8 = (void *)a1[26];
  if (v8 == v5)
  {
    uint64_t v9 = 4LL;
  }

  else
  {
    if (!v8) {
      goto LABEL_15;
    }
    uint64_t v9 = 5LL;
    int v5 = (void *)a1[26];
  }

  (*(void (**)(void *))(*v5 + 8 * v9))(v5);
LABEL_15:
  uint64_t v10 = (void *)a1[22];
  if (v10 == v2)
  {
    uint64_t v11 = 4LL;
  }

  else
  {
    if (!v10) {
      goto LABEL_20;
    }
    uint64_t v11 = 5LL;
    id v2 = (void *)a1[22];
  }

  (*(void (**)(void *))(*v2 + 8 * v11))(v2);
LABEL_20:
  uint64_t v12 = (void *)a1[16];
  if (v12)
  {
    a1[17] = v12;
    operator delete(v12);
  }

  return a1;
}

void sub_100F05850(uint64_t a1)
{
  uint64_t v2 = sub_10080E94C();
  *(_DWORD *)std::stringbuf::string_type buf = 1;
  double v3 = sub_10080EB58(v2, buf);
  double v4 = v3 - *(double *)(a1 + 32);
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_10188C3C8);
  }
  int v5 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
  {
    int v6 = *(unsigned __int8 *)(a1 + 16);
    *(_DWORD *)std::stringbuf::string_type buf = 67240448;
    int v79 = v6;
    __int16 v80 = 2050;
    *(double *)__int128 v81 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "#CLProactiveLoc,rvo,updateOverrideVisit,visit,%{public}d,timeFromLastCheck,%{public}0.2f",  buf,  0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_10188C3C8);
    }
    int v39 = *(unsigned __int8 *)(a1 + 16);
    int v52 = 67240448;
    int v53 = v39;
    __int16 v54 = 2050;
    *(double *)int v55 = v4;
    int v40 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "#CLProactiveLoc,rvo,updateOverrideVisit,visit,%{public}d,timeFromLastCheck,%{public}0.2f",  &v52,  18);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLProactiveLocationRoutineVisitOverride::updateOverrideVisit()",  "%s\n",  v40);
  }

  *(double *)(a1 + 32) = v3;
  int v7 = *(unsigned __int8 *)(a1 + 24);
  if (*(_BYTE *)(a1 + 24)) {
    int v8 = 1;
  }
  else {
    int v8 = *(_BYTE *)(a1 + 25) != 0;
  }
  int v9 = *(_DWORD *)(a1 + 48);
  if (fabsf(*(float *)(a1 + 52)) <= 50.0)
  {
    BOOL v10 = fabsf(*(float *)(a1 + 56)) > 50.0;
    if (!v9) {
      goto LABEL_18;
    }
  }

  else
  {
    BOOL v10 = 1;
    if (!v9)
    {
LABEL_18:
      BOOL v11 = *(_BYTE *)(a1 + 72) != 0;
      if (!*(_BYTE *)(a1 + 24)) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 - *(double *)(a1 + 40) <= *(double *)(a1 + 8))
      {
        int v12 = 1;
      }

      else
      {
        int v12 = 0;
        *(_BYTE *)(a1 + 24) = 0;
        ++*(_DWORD *)(a1 + 116);
      }

      goto LABEL_21;
    }
  }

  if (!v10) {
    goto LABEL_18;
  }
  BOOL v11 = 1;
  if (*(_BYTE *)(a1 + 24)) {
    goto LABEL_16;
  }
LABEL_19:
  int v12 = 0;
LABEL_21:
  if (v11) {
    int v13 = 1;
  }
  else {
    int v13 = v12;
  }
  if ((v12 & 1) == 0 && v11)
  {
    __int16 v14 = *(_WORD *)(a1 + 26);
    if (v14)
    {
      int v13 = 1;
      *(_BYTE *)(a1 + 24) = 1;
      *(double *)(a1 + sub_10004AD90(v3 - 40) = v3;
      *(_WORD *)(a1 + 26) = v14 - 1;
    }

    else
    {
      int v13 = 0;
    }
  }

  double v15 = *(double *)(a1 + 88);
  double v16 = 0.0;
  if ((*(_BYTE *)(a1 + 104) || v15 > 0.0) && (double v17 = *(double *)(a1 + 96), v17 < v3))
  {
    if (*(_BYTE *)(a1 + 104))
    {
      double v15 = v15 + v3 - *(double *)(a1 + 80);
      *(double *)(a1 + 8sub_100222B94(v74, (uint64_t)"CLBeaconFenceDatabase::getFenceForBundleAndOnBehalf", 0) = v3;
    }

    double v18 = v3 - v17;
    float v19 = v15 / v18;
    *(void *)(a1 + 8_Block_object_dispose(va, 8) = 0LL;
    double v16 = v19;
    BOOL v20 = v19 > 0.8 && v18 > 30.0;
  }

  else
  {
    BOOL v20 = 0;
  }

  if (*(_BYTE *)(a1 + 108)) {
    BOOL v21 = 0;
  }
  else {
    BOOL v21 = (*(unsigned __int8 *)(a1 + 109) | v9) == 0;
  }
  if (*(_BYTE *)(a1 + 28))
  {
    if (v13) {
      BOOL v22 = 0;
    }
    else {
      BOOL v22 = v10;
    }
    BOOL v23 = v22 && v21;
  }

  else
  {
    BOOL v23 = 0;
  }

  *(_BYTE *)(a1 + 25) = v23;
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_10188C3C8);
  }
  uint64_t v24 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
  {
    int v25 = *(unsigned __int8 *)(a1 + 24);
    int v26 = *(unsigned __int8 *)(a1 + 25);
    int v27 = *(unsigned __int8 *)(a1 + 72);
    double v28 = *(float *)(a1 + 52);
    double v29 = *(float *)(a1 + 56);
    double v30 = *(float *)(a1 + 60);
    int v31 = *(unsigned __int16 *)(a1 + 26);
    int v32 = *(unsigned __int8 *)(a1 + 104);
    double v33 = v3 - *(double *)(a1 + 96);
    *(_DWORD *)std::stringbuf::string_type buf = 67243520;
    int v79 = v25;
    __int16 v80 = 1026;
    *(_DWORD *)__int128 v81 = v26;
    *(_WORD *)&v81[4] = 1026;
    *(_DWORD *)&v81[6] = v9 != 0;
    __int16 v82 = 1026;
    BOOL v83 = v10;
    __int16 v84 = 1026;
    int v85 = v27;
    __int16 v86 = 2050;
    double v87 = v28;
    __int16 v88 = 2050;
    double v89 = v29;
    __int16 v90 = 2050;
    double v91 = v30;
    __int16 v92 = 1026;
    int v93 = v31;
    __int16 v94 = 1026;
    BOOL v95 = v20;
    __int16 v96 = 1026;
    int v97 = v32;
    __int16 v98 = 2050;
    double v99 = v33;
    __int16 v100 = 2050;
    double v101 = v16;
    __int16 v102 = 1026;
    BOOL v103 = v21;
    _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "#CLProactiveLoc,rvo,visitExitLikely,%{public}d,inVisitLocUseful,%{public}d,wifi,%{public}d,io,%{public}d,motion,%{ public}d,cdX,%{public}0.1f,cdY,%{public}0.1f,cdZ,%{public}0.1f,attemptsLeft,%{public}d,walkRun,%{public}d,currWalk Run,%{public}d,sigDur,%{public}0.2f,walkRunFrac,%{public}0.2f,wifiContDisassociated,%{public}d",  buf,  0x6Au);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_10188C3C8);
    }
    int v41 = *(unsigned __int8 *)(a1 + 24);
    int v42 = *(unsigned __int8 *)(a1 + 25);
    int v43 = *(unsigned __int8 *)(a1 + 72);
    double v44 = *(float *)(a1 + 52);
    double v45 = *(float *)(a1 + 56);
    double v46 = *(float *)(a1 + 60);
    int v47 = *(unsigned __int16 *)(a1 + 26);
    int v48 = *(unsigned __int8 *)(a1 + 104);
    double v49 = v3 - *(double *)(a1 + 96);
    int v52 = 67243520;
    int v53 = v41;
    __int16 v54 = 1026;
    *(_DWORD *)int v55 = v42;
    *(_WORD *)&v55[4] = 1026;
    *(_DWORD *)&v55[6] = v9 != 0;
    __int16 v56 = 1026;
    BOOL v57 = v10;
    __int16 v58 = 1026;
    int v59 = v43;
    __int16 v60 = 2050;
    double v61 = v44;
    __int16 v62 = 2050;
    double v63 = v45;
    __int16 v64 = 2050;
    double v65 = v46;
    __int16 v66 = 1026;
    int v67 = v47;
    __int16 v68 = 1026;
    BOOL v69 = v20;
    __int16 v70 = 1026;
    int v71 = v48;
    __int16 v72 = 2050;
    double v73 = v49;
    __int16 v74 = 2050;
    double v75 = v16;
    __int16 v76 = 1026;
    BOOL v77 = v21;
    LODWORD(v51) = 106;
    uint64_t v50 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "#CLProactiveLoc,rvo,visitExitLikely,%{public}d,inVisitLocUseful,%{public}d,wifi,%{public}d,io,%{publ ic}d,motion,%{public}d,cdX,%{public}0.1f,cdY,%{public}0.1f,cdZ,%{public}0.1f,attemptsLeft,%{public}d ,walkRun,%{public}d,currWalkRun,%{public}d,sigDur,%{public}0.2f,walkRunFrac,%{public}0.2f,wifiContDi sassociated,%{public}d",  &v52,  v51);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLProactiveLocationRoutineVisitOverride::updateOverrideVisit()",  "%s\n",  v50);
  }

  if (*(_BYTE *)(a1 + 24))
  {
    int v34 = 1;
    goto LABEL_58;
  }

  int v34 = *(_BYTE *)(a1 + 25) != 0;
  if (*(_BYTE *)(a1 + 25)) {
    char v35 = 1;
  }
  else {
    char v35 = v10;
  }
  if ((v35 & 1) != 0)
  {
LABEL_58:
    double v36 = 0.0;
    if (*(_BYTE *)(a1 + 104)) {
      double v36 = v3;
    }
    *(void *)(a1 + 56) = 0LL;
    *(void *)(a1 + 64) = 0LL;
    *(void *)(a1 + 4_Block_object_dispose(va, 8) = 0LL;
    *(_BYTE *)(a1 + 72) = 0;
    *(double *)(a1 + 8sub_100222B94(v74, (uint64_t)"CLBeaconFenceDatabase::getFenceForBundleAndOnBehalf", 0) = v36;
    *(void *)(a1 + 8_Block_object_dispose(va, 8) = 0LL;
    *(double *)(a1 + 96) = v3;
    if (v8 == v34) {
      goto LABEL_65;
    }
    goto LABEL_61;
  }

  if ((v8 & 1) != 0)
  {
    LOBYTE(v34) = 0;
LABEL_61:
    uint64_t v37 = *(void *)(a1 + 176);
    if (v37)
    {
      buf[0] = v34;
      (*(void (**)(uint64_t, uint8_t *))(*(void *)v37 + 48LL))(v37, buf);
    }
  }

void sub_100F05F40(uint64_t a1, int a2, char a3)
{
  uint64_t v6 = sub_10080E94C();
  *(_DWORD *)std::stringbuf::string_type buf = 1;
  double v7 = sub_10080EB58(v6, buf);
  if (*(_BYTE *)(a1 + 16)) {
    BOOL v8 = 1;
  }
  else {
    BOOL v8 = a2 == 0;
  }
  if (v8)
  {
    if (*(_BYTE *)(a1 + 16) && (a2 & 1) == 0)
    {
      if (*(_BYTE *)(a1 + 24))
      {
        uint64_t v9 = sub_10080E94C();
        *(_DWORD *)std::stringbuf::string_type buf = 1;
        double v10 = sub_10080EB58(v9, buf) - *(double *)(a1 + 40);
        else {
          ++*(_DWORD *)(a1 + 116);
        }
        unint64_t v16 = *(void *)(a1 + 144);
        double v17 = *(float **)(a1 + 136);
        if ((unint64_t)v17 >= v16)
        {
          BOOL v20 = *(float **)(a1 + 128);
          uint64_t v21 = v17 - v20;
          unint64_t v22 = v16 - (void)v20;
          unint64_t v23 = (uint64_t)(v16 - (void)v20) >> 1;
          if (v23 <= v21 + 1) {
            unint64_t v23 = v21 + 1;
          }
          if (v22 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v24 = 0x3FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v24 = v23;
          }
          if (v24)
          {
            int v25 = (char *)sub_10000956C(a1 + 144, v24);
            BOOL v20 = *(float **)(a1 + 128);
            double v17 = *(float **)(a1 + 136);
          }

          else
          {
            int v25 = 0LL;
          }

          int v26 = (float *)&v25[4 * v21];
          int v27 = &v25[4 * v24];
          float v28 = v10;
          *int v26 = v28;
          float v19 = v26 + 1;
          while (v17 != v20)
          {
            int v29 = *((_DWORD *)v17-- - 1);
            *((_DWORD *)v26-- - 1) = v29;
          }

          *(void *)(a1 + 12_Block_object_dispose(va, 8) = v26;
          *(void *)(a1 + 136) = v19;
          *(void *)(a1 + 144) = v27;
          if (v20) {
            operator delete(v20);
          }
        }

        else
        {
          float v18 = v10;
          *double v17 = v18;
          float v19 = v17 + 1;
        }

        *(void *)(a1 + 136) = v19;
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_10188C3C8);
        }
        double v30 = (os_log_s *)qword_101934838;
        if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)std::stringbuf::string_type buf = 134349056;
          *(double *)double v45 = v10;
          _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEFAULT,  "#CLProactiveLoc,rvo,visitExit,predSuccess,pullInSec:%{public}0.2f",  buf,  0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934830 != -1) {
            dispatch_once(&qword_101934830, &stru_10188C3C8);
          }
          int v40 = 134349056;
          *(double *)int v41 = v10;
          uint64_t v38 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "#CLProactiveLoc,rvo,visitExit,predSuccess,pullInSec:%{public}0.2f",  &v40,  12);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLProactiveLocationRoutineVisitOverride::feedVisit(const BOOL, const BOOL)",  "%s\n",  v38);
        }
      }

      else
      {
        ++*(_DWORD *)(a1 + 120);
      }

      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_10188C3C8);
      }
      int v31 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
      {
        int v32 = *(_DWORD *)(a1 + 112);
        int v33 = *(_DWORD *)(a1 + 116);
        int v34 = *(_DWORD *)(a1 + 120);
        *(_DWORD *)std::stringbuf::string_type buf = 67240704;
        *(_DWORD *)double v45 = v32;
        *(_WORD *)&v45[4] = 1026;
        *(_DWORD *)&v45[6] = v33;
        __int16 v46 = 1026;
        int v47 = v34;
        _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEFAULT,  "#CLProactiveLoc,rvo,visitExit,predSuccess,%{public}d,predFailure,%{public}d,predMiss,%{public}d",  buf,  0x14u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_10188C3C8);
        }
        int v35 = *(_DWORD *)(a1 + 112);
        int v36 = *(_DWORD *)(a1 + 116);
        int v37 = *(_DWORD *)(a1 + 120);
        int v40 = 67240704;
        *(_DWORD *)int v41 = v35;
        *(_WORD *)&v41[4] = 1026;
        *(_DWORD *)&v41[6] = v36;
        __int16 v42 = 1026;
        int v43 = v37;
        LODWORD(v39) = 20;
        double v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "#CLProactiveLoc,rvo,visitExit,predSuccess,%{public}d,predFailure,%{public}d,predMiss,%{public}d",  &v40,  v39);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLProactiveLocationRoutineVisitOverride::feedVisit(const BOOL, const BOOL)",  "%s\n",  v15);
        goto LABEL_53;
      }
    }
  }

  else
  {
    *(_DWORD *)(a1 + 24) = 196608;
    *(_BYTE *)(a1 + 2_Block_object_dispose(va, 8) = a3;
    *(double *)(a1 + 32) = v7;
    *(void *)(a1 + sub_10004AD90(v3 - 40) = 0LL;
    *(void *)(a1 + 4_Block_object_dispose(va, 8) = 0LL;
    double v11 = 0.0;
    if (*(_BYTE *)(a1 + 104)) {
      double v11 = v7;
    }
    *(void *)(a1 + 56) = 0LL;
    *(void *)(a1 + 64) = 0LL;
    *(_BYTE *)(a1 + 72) = 0;
    *(double *)(a1 + 8sub_100222B94(v74, (uint64_t)"CLBeaconFenceDatabase::getFenceForBundleAndOnBehalf", 0) = v11;
    *(void *)(a1 + 8_Block_object_dispose(va, 8) = 0LL;
    *(double *)(a1 + 96) = v7;
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_10188C3C8);
    }
    int v12 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
    {
      int v13 = *(unsigned __int8 *)(a1 + 28);
      *(_DWORD *)std::stringbuf::string_type buf = 67174657;
      *(_DWORD *)double v45 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "#CLProactiveLoc,rvo,visitEnter,placeUnknown,%{private}d",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_10188C3C8);
      }
      int v14 = *(unsigned __int8 *)(a1 + 28);
      int v40 = 67174657;
      *(_DWORD *)int v41 = v14;
      double v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "#CLProactiveLoc,rvo,visitEnter,placeUnknown,%{private}d",  &v40,  8);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLProactiveLocationRoutineVisitOverride::feedVisit(const BOOL, const BOOL)",  "%s\n",  v15);
LABEL_53:
    }
  }

  *(_BYTE *)(a1 + 16) = a2;
}

void sub_100F06544(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  int v3 = *(unsigned __int8 *)(a1 + 104);
  int v4 = *(unsigned __int8 *)(a1 + 105);
  int v5 = *(unsigned __int8 *)(a1 + 106);
  int v6 = *(unsigned __int8 *)(a1 + 107);
  BOOL v7 = *a3 == 4 || *a3 == 8;
  char v8 = v7;
  *(_BYTE *)(a1 + 104) = v8;
  unsigned int v9 = (*a3 < 0x39uLL) & (0x110000000000C20uLL >> *a3);
  *(_BYTE *)(a1 + 105) = v9;
  *(_BYTE *)(a1 + 106) = (*a3 < 0x2AuLL) & (0x20000000208uLL >> *a3);
  *(_BYTE *)(a1 + 107) = (*a3 < 8u) & (0x86u >> *a3);
  if (*(_BYTE *)(a1 + 16))
  {
    char v11 = 1;
    if (!*(_BYTE *)(a1 + 72))
    {
      int v12 = v6 | v3;
      BOOL v7 = v4 == 0;
      int v13 = v9 ^ 1;
      if (!v7) {
        int v13 = 1;
      }
      if (v5) {
        int v14 = 1;
      }
      else {
        int v14 = v13;
      }
      char v15 = v13 ^ 1;
      BOOL v16 = v12 != 0;
      if (v14) {
        char v11 = v15;
      }
      else {
        char v11 = v16;
      }
    }

    *(_BYTE *)(a1 + 72) = v11;
    uint64_t v17 = sub_10080E94C();
    *(_DWORD *)std::stringbuf::string_type buf = 1;
    double v18 = sub_10080EB58(v17, buf);
    if (v3 || !*(_BYTE *)(a1 + 104))
    {
      if (v3 && !*(_BYTE *)(a1 + 104))
      {
        *(double *)(a1 + 8_Block_object_dispose(va, 8) = *(double *)(a1 + 88) + v18 - *(double *)(a1 + 80);
        *(void *)(a1 + 8sub_100222B94(v74, (uint64_t)"CLBeaconFenceDatabase::getFenceForBundleAndOnBehalf", 0) = 0LL;
      }
    }

    else
    {
      *(double *)(a1 + 8sub_100222B94(v74, (uint64_t)"CLBeaconFenceDatabase::getFenceForBundleAndOnBehalf", 0) = v18;
    }

    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_10188C3C8);
    }
    float v19 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
    {
      int v20 = *(unsigned __int8 *)(a1 + 104);
      int v21 = *(unsigned __int8 *)(a1 + 105);
      int v22 = *(unsigned __int8 *)(a1 + 106);
      int v23 = *(unsigned __int8 *)(a1 + 107);
      int v24 = *(unsigned __int8 *)(a1 + 72);
      uint64_t v25 = *(void *)(a1 + 88);
      *(_DWORD *)std::stringbuf::string_type buf = 67241472;
      int v45 = v20;
      __int16 v46 = 1026;
      int v47 = v21;
      __int16 v48 = 1026;
      int v49 = v22;
      __int16 v50 = 1026;
      int v51 = v23;
      __int16 v52 = 1026;
      int v53 = v24;
      __int16 v54 = 2050;
      uint64_t v55 = v25;
      _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "#CLProactiveLoc,rvo,Motion,ped,%{public}d,veh,%{public}d,mov,%{public}d,stationary,%{public}d,likelyBoardedVeh,% {public}d,walkRunDur,%{public}0.2f",  buf,  0x2Au);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_10188C3C8);
      }
      int v26 = *(unsigned __int8 *)(a1 + 104);
      int v27 = *(unsigned __int8 *)(a1 + 105);
      int v28 = *(unsigned __int8 *)(a1 + 106);
      int v29 = *(unsigned __int8 *)(a1 + 107);
      int v30 = *(unsigned __int8 *)(a1 + 72);
      uint64_t v31 = *(void *)(a1 + 88);
      v33[0] = 67241472;
      v33[1] = v26;
      __int16 v34 = 1026;
      int v35 = v27;
      __int16 v36 = 1026;
      int v37 = v28;
      __int16 v38 = 1026;
      int v39 = v29;
      __int16 v40 = 1026;
      int v41 = v30;
      __int16 v42 = 2050;
      uint64_t v43 = v31;
      int v32 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "#CLProactiveLoc,rvo,Motion,ped,%{public}d,veh,%{public}d,mov,%{public}d,stationary,%{public}d,like lyBoardedVeh,%{public}d,walkRunDur,%{public}0.2f",  v33,  42);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLProactiveLocationRoutineVisitOverride::feedMotionNotification(const CLMotionState_Type::Notification &, c onst CLMotionState_Type::NotificationData &)",  "%s\n",  v32);
    }

    sub_100F05850(a1);
  }

void sub_100F0688C(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  if ((*a2 & 0xFFFFFFFE) == 6)
  {
    if (*(_BYTE *)(a1 + 109)) {
      BOOL v4 = 1;
    }
    else {
      BOOL v4 = *(_BYTE *)(a1 + 108) != 0;
    }
    char v5 = *(_BYTE *)(a3 + 96);
    if (v5)
    {
      BOOL v6 = *(_DWORD *)(a3 + 48) > 0;
      BOOL v7 = *(_BYTE *)(a3 + 73) == 0;
      if (*(_BYTE *)(a3 + 73)) {
        char v5 = 0;
      }
      else {
        char v5 = *(_DWORD *)(a3 + 48) > 0;
      }
      *(_BYTE *)(a1 + 109) = v5;
      if (v7) {
        BOOL v6 = 0;
      }
    }

    else
    {
      BOOL v6 = 0;
      *(_BYTE *)(a1 + 109) = 0;
    }

    *(_BYTE *)(a1 + 10_Block_object_dispose(va, 8) = v6;
    if (v4 && (v5 & 1) == 0 && !v6) {
      ++*(_DWORD *)(a1 + 48);
    }
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_10188C3C8);
    }
    char v8 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
    {
      int v9 = *(unsigned __int8 *)(a1 + 109);
      int v10 = *(unsigned __int8 *)(a1 + 108);
      int v11 = *(_DWORD *)(a1 + 48);
      *(_DWORD *)std::stringbuf::string_type buf = 67240960;
      int v24 = v9;
      __int16 v25 = 1026;
      int v26 = v10;
      __int16 v27 = 1026;
      BOOL v28 = v4;
      __int16 v29 = 1026;
      int v30 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "#CLProactiveLoc,rvo,WiFi,associatedStatic,%{public}d,associatedMobile,%{public}d,prevAssociatedStatus,%{public}d ,numDisassociations,%{public}d",  buf,  0x1Au);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_10188C3C8);
      }
      int v12 = *(unsigned __int8 *)(a1 + 109);
      int v13 = *(unsigned __int8 *)(a1 + 108);
      int v14 = *(_DWORD *)(a1 + 48);
      v16[0] = 67240960;
      v16[1] = v12;
      __int16 v17 = 1026;
      int v18 = v13;
      __int16 v19 = 1026;
      BOOL v20 = v4;
      __int16 v21 = 1026;
      int v22 = v14;
      char v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "#CLProactiveLoc,rvo,WiFi,associatedStatic,%{public}d,associatedMobile,%{public}d,prevAssociatedSta tus,%{public}d,numDisassociations,%{public}d",  v16,  26);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLProactiveLocationRoutineVisitOverride::feedWiFiServiceNotification(const CLWifiService_Type::Notification &, const CLWifiService_Type::NotificationData &)",  "%s\n",  v15);
    }

    if (*(_BYTE *)(a1 + 16)) {
      sub_100F05850(a1);
    }
  }

void sub_100F06B10(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 16)) {
    sub_100F05850(a1);
  }
}

uint64_t sub_100F06B20(uint64_t result, uint64_t a2)
{
  *(void *)(a2 + 1sub_10004AD90(v3 - 40) = *(void *)(result + 112);
  *(_DWORD *)(a2 + 14_Block_object_dispose(va, 8) = *(_DWORD *)(result + 120);
  uint64_t v2 = *(float **)(result + 128);
  int v3 = *(float **)(result + 136);
  if (v2 != v3)
  {
    BOOL v4 = v2 + 1;
    char v5 = *(float **)(result + 128);
    if (v2 + 1 != v3)
    {
      float v6 = *v2;
      char v5 = *(float **)(result + 128);
      BOOL v7 = v2 + 1;
      do
      {
        float v8 = *v7++;
        float v9 = v8;
        if (v6 < v8)
        {
          float v6 = v9;
          char v5 = v4;
        }

        BOOL v4 = v7;
      }

      while (v7 != v3);
    }

    *(_DWORD *)(a2 + 152) = *v5;
    float v10 = 0.0;
    int v11 = v2;
    do
    {
      float v12 = *v11++;
      float v10 = v10 + v12;
    }

    while (v11 != v3);
    if (v10 > 0.0) {
      *(_DWORD *)(a2 + 156) = (float)(v10 / (float)(unint64_t)(v3 - v2));
    }
  }

  *(void *)(result + 112) = 0LL;
  *(_DWORD *)(result + 12sub_100222B94(v74, (uint64_t)"CLBeaconFenceDatabase::getFenceForBundleAndOnBehalf", 0) = 0;
  *(void *)(result + 136) = v2;
  return result;
}

void sub_100F06BC8(id a1)
{
  qword_101934838 = (uint64_t)os_log_create("com.apple.locationd.Position", "Position");
}

uint64_t sub_100F06BF4(uint64_t a1, void *a2)
{
  int v3 = (CLMotionActivity *)sub_100F1B254(a1, a2);
  *(void *)&v3->type = off_10188C3F8;
  *(void *)&v3[1].isStanding = 0LL;
  p_isStanding = &v3[1].isStanding;
  v3[1].estExitTime = 0.0;
  *(void *)&v3[1].isVehicleConnected = (char *)v3 + 136;
  *(void *)&v3[1].vehicleType = 0LL;
  v3[1].timestamp = 0.0;
  *(_DWORD *)&v3[1].fsmTransitionData.fConsecStatic = 0;
  CLMotionActivity::getInit(v3);
  *(void *)(a1 + 304) = 0LL;
  *(void *)(a1 + 312) = 0LL;
  *(void *)(a1 + 296) = a1 + 304;
  *(_BYTE *)(a1 + 32sub_100222B94(v74, (uint64_t)"CLBeaconFenceDatabase::getFenceForBundleAndOnBehalf", 0) = 0;
  sub_100EDF1F0((uint64_t)sub_100F06D98, a1, *(void **)(a1 + 32), &v12);
  uint64_t v5 = v12;
  uint64_t v12 = 0LL;
  uint64_t v6 = *(void *)p_isStanding;
  *(void *)p_isStanding = v5;
  if (v6)
  {
    (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
    uint64_t v7 = v12;
    uint64_t v12 = 0LL;
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
    }
  }

  [*(id *)(*(void *)p_isStanding + 16) register:*(void *)(*(void *)p_isStanding + 8) forNotification:2 registrationInfo:0];
  sub_10036B3B4((uint64_t)sub_100F06F70, a1, *(void **)(a1 + 32), &v12);
  uint64_t v8 = v12;
  uint64_t v12 = 0LL;
  uint64_t v9 = *(void *)(a1 + 120);
  *(void *)(a1 + 12sub_100222B94(v74, (uint64_t)"CLBeaconFenceDatabase::getFenceForBundleAndOnBehalf", 0) = v8;
  if (v9)
  {
    (*(void (**)(uint64_t))(*(void *)v9 + 8LL))(v9);
    uint64_t v10 = v12;
    uint64_t v12 = 0LL;
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8LL))(v10);
    }
  }

  return a1;
}

void sub_100F06D2C(_Unwind_Exception *a1)
{
  uint64_t v6 = *(void *)(v1 + 120);
  *(void *)(v1 + 12sub_100222B94(v74, (uint64_t)"CLBeaconFenceDatabase::getFenceForBundleAndOnBehalf", 0) = 0LL;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
  }
  uint64_t v7 = *v3;
  *int v3 = 0LL;
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
  }
  sub_100F1B31C(v1);
  _Unwind_Resume(a1);
}

void sub_100F06D98(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10188C4F0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLBTLERangeManagerConcrete::onBeaconNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10188C4F0);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      char v15 = "";
      __int16 v16 = 2082;
      __int16 v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLBTLERangeManagerConcrete::onBeaconNotification, event:%{public, location:escape_o nly}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100F08FCC(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100F06F50( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100F06F70(uint64_t a1, int *a2, int *a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10188C4F0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLBTLERangeManagerConcrete::onMotionStateNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10188C4F0);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      char v15 = "";
      __int16 v16 = 2082;
      __int16 v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLBTLERangeManagerConcrete::onMotionStateNotification, event:%{public, location:esc ape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100F0A090(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100F07128( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100F0714C(uint64_t a1)
{
  *(void *)a1 = off_10188C3F8;
  sub_100F071E0(a1);
  sub_10010D4F0(a1 + 296, *(void **)(a1 + 304));
  sub_1000229D4(a1 + 128, *(char **)(a1 + 136));
  uint64_t v2 = *(void *)(a1 + 120);
  *(void *)(a1 + 12sub_100222B94(v74, (uint64_t)"CLBeaconFenceDatabase::getFenceForBundleAndOnBehalf", 0) = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  uint64_t v3 = *(void *)(a1 + 112);
  *(void *)(a1 + 112) = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  return sub_100F1B31C(a1);
}

void sub_100F071CC(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100F0714C(a1);
  operator delete(v1);
}

void sub_100F071E0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 120);
  *(void *)(a1 + 12sub_100222B94(v74, (uint64_t)"CLBeaconFenceDatabase::getFenceForBundleAndOnBehalf", 0) = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  uint64_t v3 = *(void *)(a1 + 112);
  *(void *)(a1 + 112) = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  BOOL v4 = *(void **)(a1 + 128);
  uint64_t v5 = (void *)(a1 + 136);
  if (v4 != (void *)(a1 + 136))
  {
    do
    {
      uint64_t v6 = v4[7];
      if (v6)
      {
        uint64_t v7 = (void *)sub_100F0BA8C(v6);
        operator delete(v7);
      }

      uint64_t v8 = (void *)v4[1];
      if (v8)
      {
        do
        {
          uint64_t v9 = v8;
          uint64_t v8 = (void *)*v8;
        }

        while (v8);
      }

      else
      {
        do
        {
          uint64_t v9 = (void *)v4[2];
          BOOL v10 = *v9 == (void)v4;
          BOOL v4 = v9;
        }

        while (!v10);
      }

      BOOL v4 = v9;
    }

    while (v9 != v5);
  }

  sub_1000229D4(a1 + 128, *(char **)(a1 + 136));
  *(void *)(a1 + 136) = 0LL;
  *(void *)(a1 + 144) = 0LL;
  *(void *)(a1 + 12_Block_object_dispose(va, 8) = v5;
  sub_10010D4F0(a1 + 296, *(void **)(a1 + 304));
  *(void *)(a1 + 304) = 0LL;
  *(void *)(a1 + 312) = 0LL;
  *(void *)(a1 + 296) = a1 + 304;
}

_BYTE *sub_100F072C0(_BYTE *result)
{
  if (result[320])
  {
    uint64_t v1 = result;
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188C550);
    }
    uint64_t v2 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_INFO))
    {
      uint64_t v3 = *((void *)v1 + 39);
      v4[0] = 68289282;
      v4[1] = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2050;
      uint64_t v8 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:iB: Stopping range manager, totalRegions:%{public}lu}",  (uint8_t *)v4,  0x1Cu);
    }

    v1[320] = 0;
    objc_msgSend( objc_msgSend(objc_msgSend(*((id *)v1 + 4), "vendor"), "proxyForService:", @"CLBTLEBeaconProvider"),  "stopScan");
    [*(id *)(*((void *)v1 + 15) + 16) unregister:*(void *)(*((void *)v1 + 15) + 8) forNotification:1];
    return [*(id *)(*((void *)v1 + 14) + 16) unregister:*(void *)(*((void *)v1 + 14) + 8) forNotification:0];
  }

  return result;
}

BOOL sub_100F073EC(uint64_t a1, uint64_t a2, int *a3, uint64_t a4)
{
  BOOL v7 = sub_100F078E0(a1, a2, a3, a4);
  BOOL v8 = v7;
  if (v7)
  {
    BOOL v22 = v7;
    for (uint64_t i = *(void *)(a4 + 8); i != a4; uint64_t i = *(void *)(i + 8))
    {
      memset(__p, 0, 36);
      *(void *)std::stringbuf::string_type buf = &off_10188C520;
      std::string::operator=((std::string *)__p, (const std::string *)(i + 24));
      int v10 = *(_DWORD *)(i + 52);
      *(_DWORD *)&__p[24] = *(_DWORD *)(i + 48);
      *(_DWORD *)&__p[28] = v10;
      char v11 = sub_100F0C87C(a1 + 296, (uint64_t)buf);
      uint64_t v12 = (void (***)(void))v11;
      if ((void *)(a1 + 304) == v11)
      {
        *(_DWORD *)&__p[32] = 1;
      }

      else
      {
        *(_DWORD *)&__p[32] = *((_DWORD *)v11 + 18) + 1;
        sub_1000087E8((uint64_t **)(a1 + 296), v11);
        (*v12[4])(v12 + 4);
        operator delete(v12);
      }

      sub_100F0C9F0((uint64_t **)(a1 + 296), (uint64_t)buf, (uint64_t)buf);
      *(void *)std::stringbuf::string_type buf = &off_10182CE18;
      if ((__p[23] & 0x80000000) != 0) {
        operator delete(*(void **)__p);
      }
    }

    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188C550);
    }
    int v13 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_INFO))
    {
      uint64_t v14 = *(void *)(a4 + 16);
      uint64_t v15 = *(void *)(a1 + 312);
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)std::string __p = 2082;
      *(void *)&_OWORD __p[2] = "";
      *(_WORD *)&__p[10] = 2050;
      *(void *)&_BYTE __p[12] = v14;
      *(_WORD *)&__p[20] = 2050;
      *(void *)&__p[22] = v15;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:iB: Registered regions for ranging, numRegions:%{public}lu, totalRegions:%{public}lu}",  buf,  0x26u);
    }

    if (*(_DWORD *)(a1 + 152))
    {
      *(void *)std::string __p = &off_10182CE18;
      memset(&__p[8], 0, 32);
      __int128 v26 = 0u;
      uint64_t v27 = 0LL;
      *(_DWORD *)std::stringbuf::string_type buf = 1;
      for (uint64_t j = *(const std::string **)(a4 + 8);
            j != (const std::string *)a4;
            uint64_t j = (const std::string *)j->__r_.__value_.__l.__size_)
      {
        std::string::operator=((std::string *)&__p[8], j + 1);
        *(void *)&__p[32] = j[2].__r_.__value_.__l.__data_;
        LODWORD(v23[0]) = 0;
        (*(void (**)(uint64_t, void ***, uint8_t *, void, uint64_t, void))(*(void *)a1 + 152LL))( a1,  v23,  buf,  0LL,  a2,  0LL);
      }

      v23[0] = (void **)&v26;
      sub_100F0BB3C(v23);
      *(void *)std::string __p = &off_10182CE18;
      if ((__p[31] & 0x80000000) != 0) {
        operator delete(*(void **)&__p[8]);
      }
      BOOL v8 = v22;
    }

    else
    {
      sub_100F07E20(a1);
      BOOL v8 = v22;
    }

    if (sub_100E575B0())
    {
      sub_1002A5370(v23);
      for (uint64_t k = *(void *)(a4 + 8); k != a4; uint64_t k = *(void *)(k + 8))
      {
        (*(void (**)(uint8_t *__return_ptr, uint64_t))(*(void *)(k + 16) + 16LL))(buf, k + 16);
        sub_1002AEC14((uint64_t)v23, "ranging_register", (char *)buf);
        if ((__p[15] & 0x80000000) != 0) {
          operator delete(*(void **)buf);
        }
      }

      sub_100E57614((uint64_t)v23, (uint64_t)"locationd");
      sub_1002A5590(v23);
    }
  }

  else
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188C550);
    }
    __int16 v17 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_FAULT, "Unable to register with base-class", buf, 2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188C550);
      }
      LOWORD(v23[0]) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  17LL,  "Unable to register with base-class",  v23,  2);
      uint64_t v19 = (uint8_t *)v18;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLBTLERangeManagerConcrete::registerForNotification(int, const CLBTLERangeManager_Type::Notificatio n &, const CLBTLEBeaconRegion_Type::MonitoredRegions &)",  "%s\n",  v18);
      if (v19 != buf) {
        free(v19);
      }
    }
  }

  return v8;
}

void sub_100F07868( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, void *__p, void *a14, int a15, __int16 a16, char a17, char a18, int a19, __int16 a20, char a21, char a22)
{
}

BOOL sub_100F078E0(uint64_t a1, int a2, int *a3, uint64_t a4)
{
  int v41 = a2;
  if (*(_BYTE *)(a1 + 108)) {
    return 0LL;
  }
  uint64_t v7 = *(void *)(a1 + 88);
  if (v7)
  {
    uint64_t v10 = a1 + 88;
    do
    {
      int v11 = *(_DWORD *)(v7 + 32);
      BOOL v12 = v11 < a2;
      if (v11 >= a2) {
        int v13 = (uint64_t *)v7;
      }
      else {
        int v13 = (uint64_t *)(v7 + 8);
      }
      if (!v12) {
        uint64_t v10 = v7;
      }
      uint64_t v7 = *v13;
    }

    while (*v13);
    if (v10 != a1 + 88 && *(_DWORD *)(v10 + 32) <= a2)
    {
      uint64_t v40 = v10;
      int v16 = *a3;
      uint64_t v19 = *(void *)(v10 + 48);
      uint64_t v18 = v10 + 48;
      uint64_t v17 = v19;
      if (!v19) {
        goto LABEL_31;
      }
      uint64_t v20 = v18;
      do
      {
        int v21 = *(_DWORD *)(v17 + 28);
        BOOL v22 = v21 < v16;
        if (v21 >= v16) {
          int v23 = (uint64_t *)v17;
        }
        else {
          int v23 = (uint64_t *)(v17 + 8);
        }
        if (!v22) {
          uint64_t v20 = v17;
        }
        uint64_t v17 = *v23;
      }

      while (*v23);
      if (v20 == v18 || v16 < *(_DWORD *)(v20 + 28)) {
LABEL_31:
      }
        uint64_t v20 = v18;
      uint64_t v24 = *(void *)(a1 + 64);
      if (!v24) {
        goto LABEL_42;
      }
      uint64_t v25 = a1 + 64;
      do
      {
        int v26 = *(_DWORD *)(v24 + 32);
        BOOL v27 = v26 < v16;
        if (v26 >= v16) {
          BOOL v28 = (uint64_t *)v24;
        }
        else {
          BOOL v28 = (uint64_t *)(v24 + 8);
        }
        if (!v27) {
          uint64_t v25 = v24;
        }
        uint64_t v24 = *v28;
      }

      while (*v28);
      if (v25 != a1 + 64 && v16 >= *(_DWORD *)(v25 + 32))
      {
        uint64_t v39 = v25;
        uint64_t v33 = *(void *)(v25 + 56);
        *(void *)std::stringbuf::string_type buf = &v41;
        __int16 v34 = (uint64_t *)(sub_100F0C05C((uint64_t **)(v25 + 40), &v41, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 5);
        *(_DWORD *)std::stringbuf::string_type buf = 0;
        *(void *)&uint8_t buf[8] = &off_10182CE18;
        *(_OWORD *)&buf[16] = 0u;
        __int128 v46 = 0u;
        __int128 v47 = 0u;
        uint64_t v48 = 0LL;
        if (v20 == v18
          && (*(unsigned int (**)(uint64_t, int *, _BYTE *))(*(void *)a1 + 128LL))(a1, a3, buf))
        {
          int v35 = sub_100F0BD78((uint64_t)buf);
          sub_100F0BEB0((_BYTE *)a1, (uint64_t)&v40, (uint64_t)&v39, v35);
        }

        *(void *)__int16 v42 = &v47;
        sub_100F0BB3C((void ***)v42);
        *(void *)&uint8_t buf[8] = &off_10182CE18;
        if (SBYTE7(v46) < 0) {
          operator delete(*(void **)&buf[16]);
        }
        if (v33) {
          goto LABEL_45;
        }
      }

      else
      {
LABEL_42:
        uint64_t v39 = a1 + 64;
        char v29 = byte_101991BE8;
        *(_DWORD *)__int16 v42 = v16;
        *(void *)std::stringbuf::string_type buf = v42;
        *((_BYTE *)sub_10023347C((uint64_t **)(a1 + 56), (int *)v42, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 8sub_100222B94(v74, (uint64_t)"CLBeaconFenceDatabase::getFenceForBundleAndOnBehalf", 0) = v29;
        *(_DWORD *)__int16 v42 = *a3;
        *(void *)std::stringbuf::string_type buf = v42;
        int v30 = sub_10023347C((uint64_t **)(a1 + 56), (int *)v42, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        sub_1000F0D38(v30 + 8);
        *(_DWORD *)__int16 v42 = *a3;
        *(void *)std::stringbuf::string_type buf = v42;
        uint64_t v31 = sub_10023347C((uint64_t **)(a1 + 56), (int *)v42, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        *(void *)std::stringbuf::string_type buf = &v41;
        int v32 = (uint64_t *)(sub_100F0C05C(v31 + 5, &v41, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 5);
      }

      (*(void (**)(uint64_t, int *))(*(void *)a1 + 168LL))(a1, a3);
LABEL_45:
      if (v20 == v18)
      {
        *(_DWORD *)std::stringbuf::string_type buf = *a3;
        sub_10004A8FC((uint64_t **)(v40 + 40), (int *)buf, buf);
      }

      return 1LL;
    }
  }

  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10188C4F0);
  }
  uint64_t v14 = (os_log_s *)qword_1019349D8;
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
  {
    uint64_t v15 = (void *)(a1 + 8);
    *(_DWORD *)std::stringbuf::string_type buf = 136446466;
    *(void *)&uint8_t buf[4] = v15;
    *(_WORD *)&_BYTE buf[12] = 1026;
    *(_DWORD *)&buf[14] = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
      buf,
      0x12u);
  }

  BOOL result = sub_1002921D0(115, 0);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10188C4F0);
    }
    __int16 v36 = (void *)(a1 + 8);
    *(_DWORD *)__int16 v42 = 136446466;
    *(void *)&v42[4] = v36;
    __int16 v43 = 1026;
    int v44 = a2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
      v42,
      18);
    __int16 v38 = (char *)v37;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLBTLERangeManager_Type::Notification, CLBTLERangeManager_Type::NotificationData, char, st d::list<CLBTLEBeaconRegion_Type::MonitoredRegion>>::registerForNotification(int, const Notification_T &, const Reg istrationInfo_T &) [Notification_T = CLBTLERangeManager_Type::Notification, NotificationData_T = CLBTLERangeManage r_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = std::list<CLBTLEBeaconRegion_Type::MonitoredRegion>]",  "%s\n",  v37);
    if (v38 != buf) {
      free(v38);
    }
    return 0LL;
  }

  return result;
}

void sub_100F07DA8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
}

uint64_t sub_100F07DC8(uint64_t a1)
{
  uint64_t v3 = (void **)(a1 + 48);
  sub_100F0BB3C(&v3);
  *(void *)(a1 + _Block_object_dispose(va, 8) = &off_10182CE18;
  return a1;
}

void sub_100F07E20(uint64_t a1)
{
  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10188C550);
  }
  uint64_t v2 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "iB: Starting the manager if there's an interest in ranging",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188C550);
    }
    LOWORD(v10[0]) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "iB: Starting the manager if there's an interest in ranging",  v10,  2);
    BOOL v8 = (uint8_t *)v7;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLBTLERangeManagerConcrete::unlockedStartIfInterested()", "%s\n", v7);
    if (v8 != buf) {
      free(v8);
    }
  }

  if (*(_BYTE *)(a1 + 320))
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188C550);
    }
    uint64_t v3 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "iB: The manager is already started", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188C550);
      }
      LOWORD(v10[0]) = 0;
      LODWORD(v9) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "iB: The manager is already started",  v10,  v9,  v10[0]);
LABEL_24:
      uint64_t v6 = (uint8_t *)v4;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLBTLERangeManagerConcrete::unlockedStartIfInterested()", "%s\n", v4);
      if (v6 != buf) {
        free(v6);
      }
    }
  }

  else
  {
    if (!*(_DWORD *)(a1 + 152) && *(void *)(a1 + 312))
    {
      sub_100F0A4D8((_BYTE *)a1);
      return;
    }

    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188C550);
    }
    __int16 v5 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "iB: There's no interest in ranging, the manager wont be started",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188C550);
      }
      LOWORD(v10[0]) = 0;
      LODWORD(v9) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "iB: There's no interest in ranging, the manager wont be started",  v10,  v9,  v10[0]);
      goto LABEL_24;
    }
  }

BOOL sub_100F081C4(uint64_t a1, int a2, int *a3)
{
  uint64_t v3 = a3;
  uint64_t v19 = (uint64_t)&v19;
  uint64_t v20 = &v19;
  uint64_t v21 = 0LL;
  if (sub_100F08644(a1, a2, a3, &v19))
  {
    uint64_t v18 = v3;
    for (uint64_t i = v20; i != &v19; uint64_t i = (uint64_t *)i[1])
    {
      memset(__p, 0, sizeof(__p));
      *(void *)std::stringbuf::string_type buf = &off_10188C520;
      int v24 = 0;
      std::string::operator=((std::string *)__p, (const std::string *)i + 1);
      int v7 = *((_DWORD *)i + 13);
      *(_DWORD *)&__p[24] = *((_DWORD *)i + 12);
      *(_DWORD *)&__p[28] = v7;
      BOOL v8 = sub_100F0C87C(a1 + 296, (uint64_t)buf);
      uint64_t v9 = (void (***)(void))v8;
      if ((void *)(a1 + 304) != v8)
      {
        int v24 = *((_DWORD *)v8 + 18) - 1;
        sub_1000087E8((uint64_t **)(a1 + 296), v8);
        (*v9[4])(v9 + 4);
        operator delete(v9);
        if (v24) {
          sub_100F0C9F0((uint64_t **)(a1 + 296), (uint64_t)buf, (uint64_t)buf);
        }
      }

      *(void *)std::stringbuf::string_type buf = &off_10182CE18;
      if ((__p[23] & 0x80000000) != 0) {
        operator delete(*(void **)__p);
      }
    }

    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188C550);
    }
    uint64_t v3 = v18;
    uint64_t v10 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_INFO))
    {
      uint64_t v11 = *(void *)(a1 + 312);
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)std::string __p = 2082;
      *(void *)&_OWORD __p[2] = "";
      *(_WORD *)&__p[10] = 2050;
      *(void *)&_BYTE __p[12] = v21;
      *(_WORD *)&__p[20] = 2050;
      *(void *)&__p[22] = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:iB: Unregistered regions from ranging, numRegions:%{public}lu, totalRegions:%{public}lu}",  buf,  0x26u);
    }

    sub_100F086FC(a1);
    if (sub_100E575B0())
    {
      sub_1002A5370(v25);
      for (uint64_t j = v20; j != &v19; uint64_t j = (uint64_t *)j[1])
      {
        (*(void (**)(uint8_t *__return_ptr, uint64_t *))(j[2] + 16))(buf, j + 2);
        sub_1002AEC14((uint64_t)v25, "ranging_unregister", (char *)buf);
        if ((__p[15] & 0x80000000) != 0) {
          operator delete(*(void **)buf);
        }
      }

      sub_100E57614((uint64_t)v25, (uint64_t)"locationd");
      sub_1002A5590(v25);
    }
  }

  else
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188C550);
    }
    int v13 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 67240192;
      *(_DWORD *)&uint8_t buf[4] = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "#Warning Unable to retrieve registration info for client,%{public}d",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188C550);
      }
      LODWORD(v25[0]) = 67240192;
      HIDWORD(v25[0]) = a2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "#Warning Unable to retrieve registration info for client,%{public}d",  v25,  8);
      uint64_t v17 = (uint8_t *)v16;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLBTLERangeManagerConcrete::unregisterForNotification(int, const CLBTLERangeManager_Type::Notification &)",  "%s\n",  v16);
      if (v17 != buf) {
        free(v17);
      }
    }
  }

  BOOL v14 = sub_100F08AA4((char *)a1, a2, v3);
  sub_100527B44(&v19);
  return v14;
}

void sub_100F085D0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, void *a16, int a17, __int16 a18, char a19, char a20, int a21, __int16 a22, char a23, char a24)
{
}

uint64_t sub_100F08644(uint64_t a1, int a2, int *a3, uint64_t *a4)
{
  if (*(_BYTE *)(a1 + 108)) {
    return 0LL;
  }
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v5 = a1 + 64;
  uint64_t v6 = v7;
  if (!v7) {
    return 0LL;
  }
  int v8 = *a3;
  uint64_t v9 = v5;
  do
  {
    int v10 = *(_DWORD *)(v6 + 32);
    BOOL v11 = v10 < v8;
    if (v10 >= v8) {
      BOOL v12 = (uint64_t *)v6;
    }
    else {
      BOOL v12 = (uint64_t *)(v6 + 8);
    }
    if (!v11) {
      uint64_t v9 = v6;
    }
    uint64_t v6 = *v12;
  }

  while (*v12);
  if (v9 == v5) {
    return 0LL;
  }
  if (v8 < *(_DWORD *)(v9 + 32)) {
    return 0LL;
  }
  uint64_t v15 = *(void *)(v9 + 48);
  uint64_t v13 = v9 + 48;
  uint64_t v14 = v15;
  if (!v15) {
    return 0LL;
  }
  uint64_t v16 = v13;
  do
  {
    int v17 = *(_DWORD *)(v14 + 32);
    BOOL v18 = v17 < a2;
    if (v17 >= a2) {
      uint64_t v19 = (uint64_t *)v14;
    }
    else {
      uint64_t v19 = (uint64_t *)(v14 + 8);
    }
    if (!v18) {
      uint64_t v16 = v14;
    }
    uint64_t v14 = *v19;
  }

  while (*v19);
  if (v16 == v13 || *(_DWORD *)(v16 + 32) > a2) {
    return 0LL;
  }
  return 1LL;
}

void sub_100F086FC(uint64_t a1)
{
  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10188C550);
  }
  uint64_t v2 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "iB: Stopping the manager if there's no interest in ranging",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188C550);
    }
    LOWORD(v10[0]) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "iB: Stopping the manager if there's no interest in ranging",  v10,  2);
    uint64_t v7 = (uint8_t *)v6;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLBTLERangeManagerConcrete::unlockedStopIfNotInterested()", "%s\n", v6);
    if (v7 != buf) {
      free(v7);
    }
  }

  if (!*(_BYTE *)(a1 + 320))
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188C550);
    }
    uint64_t v3 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "iB:The manager is already stopped", buf, 2u);
    }

    if (!sub_1002921D0(115, 2)) {
      return;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188C550);
    }
    LOWORD(v10[0]) = 0;
    LODWORD(v9) = 2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "iB:The manager is already stopped",  v10,  v9,  v10[0]);
LABEL_31:
    int v8 = (uint8_t *)v4;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLBTLERangeManagerConcrete::unlockedStopIfNotInterested()", "%s\n", v4);
    if (v8 != buf) {
      free(v8);
    }
    return;
  }

  if (*(_DWORD *)(a1 + 152) || !*(void *)(a1 + 312))
  {
    sub_100F072C0((_BYTE *)a1);
    return;
  }

  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10188C550);
  }
  uint64_t v5 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "iB: There's an interest in ranging, the manager wont be stopped",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188C550);
    }
    LOWORD(v10[0]) = 0;
    LODWORD(v9) = 2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "iB: There's an interest in ranging, the manager wont be stopped",  v10,  v9,  v10[0]);
    goto LABEL_31;
  }

BOOL sub_100F08AA4(char *a1, int a2, int *a3)
{
  HIDWORD(v34) = a2;
  int v3 = a1[108];
  if (!a1[108])
  {
    uint64_t v6 = *((void *)a1 + 11);
    if (v6)
    {
      int v8 = a1 + 88;
      do
      {
        int v9 = *(_DWORD *)(v6 + 32);
        BOOL v10 = v9 < a2;
        if (v9 >= a2) {
          BOOL v11 = (uint64_t *)v6;
        }
        else {
          BOOL v11 = (uint64_t *)(v6 + 8);
        }
        if (!v10) {
          int v8 = (char *)v6;
        }
        uint64_t v6 = *v11;
      }

      while (*v11);
      if (v8 != a1 + 88 && *((_DWORD *)v8 + 8) <= a2)
      {
        uint64_t v14 = (char *)*((void *)v8 + 6);
        BOOL v12 = v8 + 48;
        uint64_t v13 = v14;
        if (v14)
        {
          int v15 = *a3;
          uint64_t v16 = v12;
          do
          {
            int v17 = *((_DWORD *)v13 + 7);
            BOOL v18 = v17 < v15;
            if (v17 >= v15) {
              uint64_t v19 = (char **)v13;
            }
            else {
              uint64_t v19 = (char **)(v13 + 8);
            }
            if (!v18) {
              uint64_t v16 = v13;
            }
            uint64_t v13 = *v19;
          }

          while (*v19);
          if (v16 != v12 && v15 >= *((_DWORD *)v16 + 7))
          {
            LODWORD(__p[0]) = *a3;
            sub_1004EF494((uint64_t)(v12 - 8), (int *)__p);
            uint64_t v20 = *((void *)a1 + 8);
            if (!v20) {
              goto LABEL_33;
            }
            int v21 = *a3;
            BOOL v22 = a1 + 64;
            do
            {
              int v23 = *(_DWORD *)(v20 + 32);
              BOOL v24 = v23 < v21;
              if (v23 >= v21) {
                uint64_t v25 = (uint64_t *)v20;
              }
              else {
                uint64_t v25 = (uint64_t *)(v20 + 8);
              }
              if (!v24) {
                BOOL v22 = (char *)v20;
              }
              uint64_t v20 = *v25;
            }

            while (*v25);
            if (v22 != a1 + 64 && v21 >= *((_DWORD *)v22 + 8))
            {
              sub_100F0D6E4((uint64_t)(v22 + 40), (int *)&v34 + 1);
              if (!*((void *)v22 + 7)) {
                (*(void (**)(char *, int *))(*(void *)a1 + 176LL))(a1, a3);
              }
            }

            else
            {
LABEL_33:
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_10188C4F0);
              }
              int v26 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                BOOL v27 = a1 + 8;
                if (a1[31] < 0) {
                  BOOL v27 = (void *)*v27;
                }
                (*(void (**)(void **__return_ptr, char *, int *))(*(void *)a1 + 160LL))(__p, a1, a3);
                if (v44 >= 0) {
                  BOOL v28 = __p;
                }
                else {
                  BOOL v28 = (void **)__p[0];
                }
                *(_DWORD *)std::stringbuf::string_type buf = 136446466;
                *(void *)&uint8_t buf[4] = v27;
                __int16 v36 = 2082;
                int v37 = v28;
                _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_FAULT,  "%{public}s; notification %{public}s not found",
                  buf,
                  0x16u);
                if (v44 < 0) {
                  operator delete(__p[0]);
                }
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(__p, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_10188C4F0);
                }
                char v29 = a1 + 8;
                if (a1[31] < 0) {
                  char v29 = (void *)*v29;
                }
                uint64_t v30 = qword_1019349D8;
                (*(void (**)(_BYTE *__return_ptr, char *, int *))(*(void *)a1 + 160LL))(buf, a1, a3);
                if (v38 >= 0) {
                  uint64_t v31 = buf;
                }
                else {
                  uint64_t v31 = *(_BYTE **)buf;
                }
                int v39 = 136446466;
                uint64_t v40 = v29;
                __int16 v41 = 2082;
                __int16 v42 = v31;
                LODWORD(v34) = 22;
                _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v30,  17LL,  "%{public}s; notification %{public}s not found",
                  &v39,
                  v34);
                uint64_t v33 = v32;
                if (v38 < 0) {
                  operator delete(*(void **)buf);
                }
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLBTLERangeManager_Type::Notification, CLBTLERangeManager_Type::NotificationDa ta, char, std::list<CLBTLEBeaconRegion_Type::MonitoredRegion>>::unregisterForNotification(int, const N otification_T &) [Notification_T = CLBTLERangeManager_Type::Notification, NotificationData_T = CLBTLER angeManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = std::list<CLBTLEBe aconRegion_Type::MonitoredRegion>]",  "%s\n",  v33);
              }
            }
          }
        }
      }
    }
  }

  return v3 == 0;
}

uint64_t *sub_100F08E2C(uint64_t *a1)
{
  return a1;
}

uint64_t sub_100F08E50()
{
  return 1LL;
}

uint64_t sub_100F08E58(uint64_t a1)
{
  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10188C550);
  }
  uint64_t v2 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_INFO))
  {
    v4[0] = 68289026;
    v4[1] = 0;
    __int16 v5 = 2082;
    uint64_t v6 = "";
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:iB: Range manager has lost its last connection}",  (uint8_t *)v4,  0x12u);
  }

  sub_100F072C0((_BYTE *)a1);
  sub_10010D4F0(a1 + 296, *(void **)(a1 + 304));
  *(void *)(a1 + 304) = 0LL;
  *(void *)(a1 + 312) = 0LL;
  *(void *)(a1 + 296) = a1 + 304;
  return 1LL;
}

uint64_t sub_100F08F54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = *(void *)(a6 + 8);
  if (v6 == a6) {
    return 0LL;
  }
  uint64_t v9 = a4 + 8;
  while (v9 != v6 + 16 && (*(_DWORD *)(a4 + 44) != *(_DWORD *)(v6 + 52) || (sub_10091D194(v9, v6 + 16) & 1) == 0))
  {
    uint64_t v6 = *(void *)(v6 + 8);
    if (v6 == a6) {
      return 0LL;
    }
  }

  return 1LL;
}

void sub_100F08FCC(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  if (*a3)
  {
    if (*a3 == 2)
    {
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188C550);
      }
      __int16 v5 = (os_log_s *)qword_101934848;
      if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
      {
        int v6 = *(unsigned __int8 *)(a4 + 112);
        *(_DWORD *)std::stringbuf::string_type buf = 67240192;
        *(_DWORD *)&uint8_t buf[4] = v6;
        _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "iB: Received Bluetooth LE power,%{public}d",  buf,  8u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934840 != -1) {
          dispatch_once(&qword_101934840, &stru_10188C550);
        }
        int v53 = *(unsigned __int8 *)(a4 + 112);
        LODWORD(__p) = 67240192;
        HIDWORD(__p) = v53;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "iB: Received Bluetooth LE power,%{public}d",  &__p,  8);
        uint64_t v55 = (char *)v54;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLBTLERangeManagerConcrete::onBeaconNotification(int, const CLBTLEBeaconProvider_Type::Notification &, co nst CLBTLEBeaconProvider_Type::NotificationData &)",  "%s\n",  v54);
        if (v55 != buf) {
          free(v55);
        }
      }

      if (*(_BYTE *)(a4 + 112)) {
        sub_100F09B60(a1, 1);
      }
      else {
        sub_100F09D4C((_BYTE *)a1, 1);
      }
    }
  }

  else
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188C550);
    }
    uint64_t v7 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_INFO))
    {
      uint64_t v8 = *(void *)(a4 + 16);
      uint64_t v9 = *(void *)(a1 + 144);
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&buf[18] = 2050;
      *(void *)&buf[20] = v8;
      *(_WORD *)&_BYTE buf[28] = 2050;
      *(void *)&buf[30] = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:iB: Received proximity scan, updating beacon cache with devices, samples:%{public}l u, totalCached:%{public}lu}",  buf,  0x26u);
    }

    uint64_t v10 = *(void *)(a4 + 8);
    if (v10 != a4)
    {
      BOOL v11 = (uint64_t **)(a1 + 128);
      do
      {
        uint64_t v12 = sub_10008E8D0((uint64_t)v11, (const void **)(v10 + 16));
        if (a1 + 136 == v12)
        {
          int v15 = (char *)operator new(0x38uLL);
          sub_100F0BC14((uint64_t)v15, (const std::string *)(v10 + 16), *(__int16 *)(v10 + 42));
          uint64_t v16 = v15 + 8;
          std::string::operator=((std::string *)(v15 + 8), (const std::string *)(v10 + 56));
          *((void *)v15 + 4) = *(void *)(v10 + 80);
          sub_100EF4D3C(*((void *)v15 + 5), *(__int16 *)(v10 + 40), *(_WORD *)(v10 + 96), *(double *)(v10 + 88));
          *(void *)std::stringbuf::string_type buf = v10 + 16;
          sub_10023BFA4(v11, (const void **)(v10 + 16), (uint64_t)&unk_1012CF090, (__int128 **)buf)[7] = (uint64_t)v15;
          if (qword_101934840 != -1) {
            dispatch_once(&qword_101934840, &stru_10188C550);
          }
          int v17 = (os_log_s *)qword_101934848;
          if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_INFO))
          {
            sub_100EF5E84(*((void *)v15 + 5), (uint64_t)&__p);
            p_p = &__p;
            if (SBYTE7(v68) < 0) {
              p_p = __p;
            }
            if (v15[31] < 0) {
              uint64_t v16 = (void *)*v16;
            }
            int v19 = *((unsigned __int16 *)v15 + 16);
            int v20 = *((unsigned __int16 *)v15 + 17);
            int v21 = *((_DWORD *)v15 + 9);
            *(_DWORD *)std::stringbuf::string_type buf = 68290307;
            *(_DWORD *)&uint8_t buf[4] = 0;
            *(_WORD *)&uint8_t buf[8] = 2082;
            *(void *)&buf[10] = "";
            *(_WORD *)&buf[18] = 2081;
            *(void *)&buf[20] = p_p;
            *(_WORD *)&_BYTE buf[28] = 2081;
            *(void *)&buf[30] = v16;
            *(_WORD *)&_BYTE buf[38] = 1025;
            int v73 = v19;
            __int16 v74 = 1025;
            *(_DWORD *)double v75 = v20;
            *(_WORD *)&v75[4] = 1026;
            *(_DWORD *)&v75[6] = v21;
            _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:iB: Caching new beacon identifier, identifier:%{private, location:escape_only }s, uuid:%{private, location:escape_only}s, major:%{private}d, minor:%{private}d, mask:%{public}d}",  buf,  0x38u);
            if (SBYTE7(v68) < 0) {
              operator delete(__p);
            }
          }
        }

        else
        {
          uint64_t v14 = v12 + 56;
          uint64_t v13 = *(void *)(v12 + 56);
          std::string::operator=((std::string *)(v13 + 8), (const std::string *)(v10 + 56));
          *(void *)(v13 + 32) = *(void *)(v10 + 80);
          sub_100EF4D3C( *(void *)(*(void *)v14 + 40LL),  *(__int16 *)(v10 + 40),  *(_WORD *)(v10 + 96),  *(double *)(v10 + 88));
        }

        uint64_t v10 = *(void *)(v10 + 8);
      }

      while (v10 != a4);
    }

    double Current = CFAbsoluteTimeGetCurrent();
    int v23 = *(uint64_t **)(a1 + 128);
    __int16 v58 = (uint64_t **)(a1 + 128);
    BOOL v24 = (uint64_t *)(a1 + 136);
    if (v23 != (uint64_t *)(a1 + 136))
    {
      int v25 = 0;
      double v26 = Current + -10.0;
      do
      {
        uint64_t v27 = v23[7];
        if (*(double *)(v27 + 48) >= v26)
        {
          uint64_t v33 = (uint64_t *)v23[1];
          if (v33)
          {
            do
            {
              uint64_t v31 = v33;
              uint64_t v33 = (uint64_t *)*v33;
            }

            while (v33);
          }

          else
          {
            do
            {
              uint64_t v34 = v23;
              int v23 = (uint64_t *)v23[2];
            }

            while ((uint64_t *)*v23 != v34);
            uint64_t v31 = v23;
          }
        }

        else
        {
          BOOL v28 = (void *)sub_100F0BA8C(v27);
          operator delete(v28);
          v23[7] = 0LL;
          char v29 = (uint64_t *)v23[1];
          uint64_t v30 = v23;
          if (v29)
          {
            do
            {
              uint64_t v31 = v29;
              char v29 = (uint64_t *)*v29;
            }

            while (v29);
          }

          else
          {
            do
            {
              uint64_t v31 = (uint64_t *)v30[2];
              BOOL v32 = *v31 == (void)v30;
              uint64_t v30 = v31;
            }

            while (!v32);
          }

          sub_1003F9708(v58, (uint64_t)v23);
          ++v25;
        }

        int v23 = v31;
      }

      while (v31 != v24);
      if (v25)
      {
        if (qword_101934840 != -1) {
          dispatch_once(&qword_101934840, &stru_10188C550);
        }
        int v35 = (os_log_s *)qword_101934848;
        if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_INFO))
        {
          uint64_t v36 = *(void *)(a1 + 144);
          *(_DWORD *)std::stringbuf::string_type buf = 68289538;
          *(_DWORD *)&uint8_t buf[4] = 0;
          *(_WORD *)&uint8_t buf[8] = 2082;
          *(void *)&buf[10] = "";
          *(_WORD *)&buf[18] = 1026;
          *(_DWORD *)&buf[20] = v25;
          *(_WORD *)&_BYTE buf[24] = 2050;
          *(void *)&buf[26] = v36;
          _os_log_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:iB: Removed expired beacons, numExpired:%{public}d, totalCached:%{public}lu}",  buf,  0x22u);
        }
      }
    }

    double v37 = CFAbsoluteTimeGetCurrent();
    char v38 = *(void **)(a1 + 296);
    if (v38 != (void *)(a1 + 304))
    {
      double v39 = v37;
      do
      {
        LODWORD(__p) = 0;
        int v67 = &off_10182CE18;
        __int128 v68 = 0u;
        __int128 v69 = 0u;
        __int128 v70 = 0u;
        unint64_t v71 = 0LL;
        std::string::operator=((std::string *)&v68, (const std::string *)(v38 + 5));
        *((void *)&v69 + 1) = v38[8];
        uint64_t v40 = *v58;
        if (*v58 != v24)
        {
          do
          {
            if (sub_10091D194((uint64_t)&v67, v40[7]))
            {
              memset(&buf[8], 0, 32);
              int v73 = 0;
              *(void *)std::stringbuf::string_type buf = &off_10182CE18;
              *(void *)&void v75[2] = 0xBFF0000000000000LL;
              __int16 v76 = 0;
              uint64_t v78 = 0LL;
              uint64_t v79 = 0LL;
              BOOL v77 = 0LL;
              uint64_t v41 = v40[7];
              std::string::operator=((std::string *)&buf[8], (const std::string *)(v41 + 8));
              *(void *)&_BYTE buf[32] = *(void *)(v41 + 32);
              int v59 = 0;
              *(void *)&v60[4] = 0xBFF0000000000000LL;
              *(_WORD *)&v60[12] = 0;
              __int16 v64 = 0LL;
              uint64_t v65 = 0LL;
              double v63 = 0LL;
              if (sub_100EF4ED0( *(void *)(v40[7] + 40),  (unsigned int *)(a1 + 160),  &v59,  (uint64_t *)&buf[8],  (unsigned __int16 *)&buf[32],  (unsigned __int16 *)&buf[34],  v39))
              {
                int v73 = v59;
                *(void *)&void v75[2] = *(void *)&v60[4];
                __int16 v76 = *(_WORD *)&v60[12];
                sub_100741488(&v77, (char *)v63, v64, v64 - (_BYTE *)v63);
              }

              else
              {
                int v73 = 0;
                *(void *)&void v75[2] = 0xBFF0000000000000LL;
                __int16 v76 = 0;
                uint64_t v78 = v77;
              }

              uint64_t v42 = *((void *)&v70 + 1);
              if (*((void *)&v70 + 1) >= v71)
              {
                uint64_t v43 = sub_100F0D764((uint64_t *)&v70, (uint64_t)buf);
              }

              else
              {
                sub_100F0C318((uint64_t)&v71, *((uint64_t *)&v70 + 1), (uint64_t)buf);
                uint64_t v43 = v42 + 88;
              }

              *((void *)&v70 + 1) = v43;
              if (v63)
              {
                __int16 v64 = (char *)v63;
                operator delete(v63);
              }

              if (v77)
              {
                uint64_t v78 = v77;
                operator delete(v77);
              }

              *(void *)std::stringbuf::string_type buf = &off_10182CE18;
              if ((buf[31] & 0x80000000) != 0) {
                operator delete(*(void **)&buf[8]);
              }
            }

            char v44 = (uint64_t *)v40[1];
            if (v44)
            {
              do
              {
                int v45 = v44;
                char v44 = (uint64_t *)*v44;
              }

              while (v44);
            }

            else
            {
              do
              {
                int v45 = (uint64_t *)v40[2];
                BOOL v32 = *v45 == (void)v40;
                uint64_t v40 = v45;
              }

              while (!v32);
            }

            uint64_t v40 = v45;
          }

          while (v45 != v24);
        }

        if (qword_101934840 != -1) {
          dispatch_once(&qword_101934840, &stru_10188C550);
        }
        __int128 v46 = (os_log_s *)qword_101934848;
        if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
        {
          __int128 v47 = &v68;
          if (SBYTE7(v69) < 0) {
            __int128 v47 = (__int128 *)v68;
          }
          *(_DWORD *)std::stringbuf::string_type buf = 136381699;
          *(void *)&uint8_t buf[4] = v47;
          *(_WORD *)&_BYTE buf[12] = 1025;
          *(_DWORD *)&buf[14] = WORD4(v69);
          *(_WORD *)&buf[18] = 1025;
          *(_DWORD *)&buf[20] = WORD5(v69);
          *(_WORD *)&_BYTE buf[24] = 1026;
          *(_DWORD *)&buf[26] = HIDWORD(v69);
          *(_WORD *)&buf[30] = 2050;
          *(void *)&_BYTE buf[32] = 0x2E8BA2E8BA2E8BA3LL * ((uint64_t)(*((void *)&v70 + 1) - v70) >> 3);
          _os_log_impl( (void *)&_mh_execute_header,  v46,  OS_LOG_TYPE_DEBUG,  "iB: Notifying region proximityUUID,'%{private}s', major,%{private}d, minor,%{private}d, mask,%{public}d with beacons,%{public}zu",  buf,  0x28u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934840 != -1) {
            dispatch_once(&qword_101934840, &stru_10188C550);
          }
          __int16 v50 = &v68;
          if (SBYTE7(v69) < 0) {
            __int16 v50 = (__int128 *)v68;
          }
          int v59 = 136381699;
          *(void *)__int16 v60 = v50;
          *(_WORD *)&v60[8] = 1025;
          *(_DWORD *)&v60[10] = WORD4(v69);
          __int16 v61 = 1025;
          int v62 = WORD5(v69);
          LOWORD(v63) = 1026;
          *(_DWORD *)((char *)&v63 + 2) = HIDWORD(v69);
          HIWORD(v63) = 2050;
          __int16 v64 = (char *)(0x2E8BA2E8BA2E8BA3LL * ((uint64_t)(*((void *)&v70 + 1) - v70) >> 3));
          LODWORD(v56) = 40;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "iB: Notifying region proximityUUID,'%{private}s', major,%{private}d, minor,%{private}d, mask,%{public}d with beacons,%{public}zu",  &v59,  v56);
          __int16 v52 = (char *)v51;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLBTLERangeManagerConcrete::onBeaconNotification(int, const CLBTLEBeaconProvider_Type::Notification &, const CLBTLEBeaconProvider_Type::NotificationData &)",  "%s\n",  v51);
          if (v52 != buf) {
            free(v52);
          }
        }

        *(_DWORD *)std::stringbuf::string_type buf = 0;
        (*(void (**)(uint64_t, _BYTE *, void **, void, uint64_t, void))(*(void *)a1 + 152LL))( a1,  buf,  &__p,  0LL,  0xFFFFFFFFLL,  0LL);
        *(void *)std::stringbuf::string_type buf = &v70;
        sub_100F0BB3C((void ***)buf);
        int v67 = &off_10182CE18;
        if (SBYTE7(v69) < 0) {
          operator delete((void *)v68);
        }
        uint64_t v48 = (void *)v38[1];
        if (v48)
        {
          do
          {
            int v49 = v48;
            uint64_t v48 = (void *)*v48;
          }

          while (v48);
        }

        else
        {
          do
          {
            int v49 = (void *)v38[2];
            BOOL v32 = *v49 == (void)v38;
            char v38 = v49;
          }

          while (!v32);
        }

        char v38 = v49;
      }

      while (v49 != (void *)(a1 + 304));
    }
  }

void sub_100F09AF4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, void *__p, uint64_t a29, uint64_t a30, char a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, char a41)
{
}

void sub_100F09B60(uint64_t a1, int a2)
{
  if ((*(_DWORD *)(a1 + 152) & a2) != 0)
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188C550);
    }
    BOOL v4 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
    {
      int v5 = *(_DWORD *)(a1 + 152);
      *(_DWORD *)std::stringbuf::string_type buf = 67240448;
      int v13 = a2;
      __int16 v14 = 1026;
      int v15 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "iB: Removing exception,%{public}#x, from stored exceptions %{public}#x.\n",  buf,  0xEu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188C550);
      }
      int v6 = *(_DWORD *)(a1 + 152);
      v9[0] = 67240448;
      v9[1] = a2;
      __int16 v10 = 1026;
      int v11 = v6;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "iB: Removing exception,%{public}#x, from stored exceptions %{public}#x.\n",  v9,  14);
      uint64_t v8 = (uint8_t *)v7;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLBTLERangeManagerConcrete::unlockedResumeForException(RangingExceptions)",  "%s\n",  v7);
      if (v8 != buf) {
        free(v8);
      }
    }

    *(_DWORD *)(a1 + 152) &= ~a2;
    sub_100F07E20(a1);
  }

_BYTE *sub_100F09D4C(_BYTE *result, int a2)
{
  int v2 = *((_DWORD *)result + 38);
  if ((v2 & a2) == 0)
  {
    BOOL v4 = result;
    if (a2 && !v2)
    {
      int v20 = &off_10182CE18;
      *(_OWORD *)std::string __p = 0u;
      __int128 v22 = 0u;
      __int128 v23 = 0u;
      uint64_t v24 = 0LL;
      *(_DWORD *)std::stringbuf::string_type buf = 1;
      int v5 = (void *)*((void *)result + 37);
      int v6 = result + 304;
      if (v5 != (void *)(result + 304))
      {
        do
        {
          std::string::operator=((std::string *)__p, (const std::string *)(v5 + 5));
          *((void *)&v22 + 1) = v5[8];
          LODWORD(v15) = 0;
          (*(void (**)(_DWORD *, void ***, uint8_t *, void, uint64_t, void))(*(void *)v4 + 152LL))( v4,  &v15,  buf,  0LL,  0xFFFFFFFFLL,  0LL);
          uint64_t v7 = (void *)v5[1];
          if (v7)
          {
            do
            {
              uint64_t v8 = v7;
              uint64_t v7 = (void *)*v7;
            }

            while (v7);
          }

          else
          {
            do
            {
              uint64_t v8 = (void *)v5[2];
              BOOL v9 = *v8 == (void)v5;
              int v5 = v8;
            }

            while (!v9);
          }

          int v5 = v8;
        }

        while (v8 != v6);
      }

      int v15 = (void **)&v23;
      sub_100F0BB3C(&v15);
      int v20 = &off_10182CE18;
      if (SBYTE7(v22) < 0) {
        operator delete(__p[0]);
      }
    }

    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188C550);
    }
    __int16 v10 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
    {
      int v11 = v4[38];
      *(_DWORD *)std::stringbuf::string_type buf = 67240448;
      int v19 = a2;
      LOWORD(v2sub_100222B94(v74, (uint64_t)"CLBeaconFenceDatabase::getFenceForBundleAndOnBehalf", 0) = 1026;
      *(_DWORD *)((char *)&v20 + 2) = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "iB: Adding exception,%{public}#x, to stored exceptions %{public}#x",  buf,  0xEu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188C550);
      }
      int v12 = v4[38];
      LODWORD(v15) = 67240448;
      HIDWORD(v15) = a2;
      __int16 v16 = 1026;
      int v17 = v12;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "iB: Adding exception,%{public}#x, to stored exceptions %{public}#x",  &v15,  14);
      __int16 v14 = (uint8_t *)v13;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLBTLERangeManagerConcrete::unlockedSuspendForException(RangingExceptions)",  "%s\n",  v13);
      if (v14 != buf) {
        free(v14);
      }
    }

    v4[38] |= a2;
    return sub_100F072C0(v4);
  }

  return result;
}

void sub_100F0A020( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
}

uint64_t sub_100F0A040(uint64_t a1)
{
  int v2 = *(void **)(a1 + 64);
  if (v2)
  {
    *(void *)(a1 + 72) = v2;
    operator delete(v2);
  }

  *(void *)a1 = &off_10182CE18;
  return a1;
}

void sub_100F0A090(uint64_t a1, uint64_t a2, int *a3, int *a4)
{
  int v5 = *a3;
  if (*a3) {
    BOOL v6 = v5 == 2;
  }
  else {
    BOOL v6 = 1;
  }
  if (v6)
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188C550);
    }
    uint64_t v7 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
    {
      int v8 = *a3;
      *(_DWORD *)std::stringbuf::string_type buf = 67240192;
      int v30 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "#Warning Unexpected notification %{public}d",  buf,  8u);
    }

    if (!sub_1002921D0(115, 2)) {
      return;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188C550);
    }
    int v9 = *a3;
    LODWORD(v28[0]) = 67240192;
    HIDWORD(v28[0]) = v9;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "#Warning Unexpected notification %{public}d",  v28,  8,  v28[0]);
LABEL_34:
    uint64_t v27 = (uint8_t *)v10;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLBTLERangeManagerConcrete::onMotionStateNotification(int, const CLMotionState_Type::Notification &, const CL MotionState_Type::NotificationData &)",  "%s\n",  v10);
    if (v27 != buf) {
      free(v27);
    }
    return;
  }

  if (v5 == 1)
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188C550);
    }
    int v13 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
    {
      int v14 = *a4;
      *(_DWORD *)std::stringbuf::string_type buf = 67174657;
      int v30 = v14;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "iB: Received activity update of activity,%{private}d",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10188C550);
      }
      int v23 = *a4;
      LODWORD(v28[0]) = 67174657;
      HIDWORD(v28[0]) = v23;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "iB: Received activity update of activity,%{private}d",  v28,  8);
      int v25 = (uint8_t *)v24;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLBTLERangeManagerConcrete::onMotionStateNotification(int, const CLMotionState_Type::Notification &, const CLMotionState_Type::NotificationData &)",  "%s\n",  v24);
      if (v25 != buf) {
        free(v25);
      }
    }

    *(_OWORD *)(a1 + sub_1002A5590(v1 - 160) = *(_OWORD *)a4;
    __int128 v15 = *((_OWORD *)a4 + 1);
    __int128 v16 = *((_OWORD *)a4 + 2);
    __int128 v17 = *((_OWORD *)a4 + 4);
    *(_OWORD *)(a1 + 20_Block_object_dispose(va, 8) = *((_OWORD *)a4 + 3);
    *(_OWORD *)(a1 + 224) = v17;
    *(_OWORD *)(a1 + 176) = v15;
    *(_OWORD *)(a1 + 192) = v16;
    __int128 v18 = *((_OWORD *)a4 + 5);
    __int128 v19 = *((_OWORD *)a4 + 6);
    __int128 v20 = *((_OWORD *)a4 + 7);
    *(void *)(a1 + 28_Block_object_dispose(va, 8) = *((void *)a4 + 16);
    *(_OWORD *)(a1 + 256) = v19;
    *(_OWORD *)(a1 + 272) = v20;
    *(_OWORD *)(a1 + 2sub_10004AD90(v3 - 40) = v18;
    return;
  }

  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10188C550);
  }
  int v21 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
  {
    int v22 = *a3;
    *(_DWORD *)std::stringbuf::string_type buf = 67240192;
    int v30 = v22;
    _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEBUG,  "#Warning Unhandled notification %{public}d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188C550);
    }
    int v26 = *a3;
    LODWORD(v28[0]) = 67240192;
    HIDWORD(v28[0]) = v26;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "#Warning Unhandled notification %{public}d",  v28,  8,  v28[0]);
    goto LABEL_34;
  }

_BYTE *sub_100F0A4D8(_BYTE *result)
{
  if (!result[320])
  {
    uint64_t v1 = result;
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10188C550);
    }
    int v2 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_INFO))
    {
      uint64_t v3 = *((void *)v1 + 39);
      v4[0] = 68289282;
      v4[1] = 0;
      __int16 v5 = 2082;
      BOOL v6 = "";
      __int16 v7 = 2050;
      uint64_t v8 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:iB: Starting range manager, totalRegions:%{public}lu}",  (uint8_t *)v4,  0x1Cu);
    }

    [*(id *)(*((void *)v1 + 14) + 16) register:*(void *)(*((void *)v1 + 14) + 8) forNotification:0 registrationInfo:0];
    [*(id *)(*((void *)v1 + 15) + 16) register:*(void *)(*((void *)v1 + 15) + 8) forNotification:1 registrationInfo:0];
    BOOL result = objc_msgSend( objc_msgSend(objc_msgSend(*((id *)v1 + 4), "vendor"), "proxyForService:", @"CLBTLEBeaconProvider"),  "startScan");
    v1[320] = 1;
  }

  return result;
}

void sub_100F0A618(uint64_t a1, uint64_t a2)
{
  HIDWORD(v15) = a2;
  if (!*(_BYTE *)(a1 + 108))
  {
    uint64_t v4 = *(void *)(a1 + 88);
    if (!v4) {
      goto LABEL_12;
    }
    uint64_t v5 = a1 + 80;
    uint64_t v6 = a1 + 88;
    do
    {
      int v7 = *(_DWORD *)(v4 + 32);
      BOOL v8 = v7 < (int)a2;
      else {
        int v9 = (uint64_t *)(v4 + 8);
      }
      if (!v8) {
        uint64_t v6 = v4;
      }
      uint64_t v4 = *v9;
    }

    while (*v9);
    if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= (int)a2)
    {
      while (*(void *)(v6 + 56))
      {
        *(_DWORD *)std::stringbuf::string_type buf = *(_DWORD *)(*(void *)(v6 + 40) + 28LL);
        (*(void (**)(uint64_t, uint64_t, uint8_t *))(*(void *)a1 + 112LL))(a1, a2, buf);
      }

      sub_100233254(v5, (int *)&v15 + 1);
    }

    else
    {
LABEL_12:
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_10188C4F0);
      }
      __int16 v10 = (os_log_s *)qword_1019349D8;
      if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
      {
        int v11 = (void *)(a1 + 8);
        *(_DWORD *)std::stringbuf::string_type buf = 136446466;
        int v21 = v11;
        __int16 v22 = 1026;
        int v23 = a2;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
          buf,
          0x12u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_10188C4F0);
        }
        int v12 = (void *)(a1 + 8);
        int v16 = 136446466;
        __int128 v17 = v12;
        __int16 v18 = 1026;
        int v19 = a2;
        LODWORD(v15) = 18;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
          &v16,
          v15);
        int v14 = (uint8_t *)v13;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLNotifier<CLBTLERangeManager_Type::Notification, CLBTLERangeManager_Type::NotificationData, char , std::list<CLBTLEBeaconRegion_Type::MonitoredRegion>>::removeClient(int) [Notification_T = CLBTLERangeManager _Type::Notification, NotificationData_T = CLBTLERangeManager_Type::NotificationData, NotificationInfo_T = char , RegistrationInfo_T = std::list<CLBTLEBeaconRegion_Type::MonitoredRegion>]",  "%s\n",  v13);
        if (v14 != buf) {
          free(v14);
        }
      }
    }
  }

uint64_t sub_100F0A88C(uint64_t a1, uint64_t a2, int a3, void *a4)
{
  id v7 = sub_100F0DABC(a4);
  if (v7)
  {
    int v10 = a3;
    return (*(uint64_t (**)(uint64_t, uint64_t, int *, id))(*(void *)a1 + 96LL))(a1, a2, &v10, v7);
  }

  else
  {
    int v9 = a3;
    return (*(uint64_t (**)(uint64_t, uint64_t, int *))(*(void *)a1 + 88LL))(a1, a2, &v9);
  }

uint64_t sub_100F0A90C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 v3 = atomic_load((unsigned __int8 *)&qword_101991C08);
  if ((v3 & 1) == 0)
  {
    uint64_t v9 = a1;
    uint64_t v8 = a3;
    unsigned int v7 = a2;
    int v5 = __cxa_guard_acquire(&qword_101991C08);
    a2 = v7;
    a3 = v8;
    int v6 = v5;
    a1 = v9;
    if (v6)
    {
      qword_101991BF0 = (uint64_t)&qword_101991BF0;
      *(void *)algn_101991BF8 = &qword_101991BF0;
      qword_101991C00 = 0LL;
      __cxa_atexit((void (*)(void *))sub_100F08E2C, &qword_101991BF0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101991C08);
      a1 = v9;
      a2 = v7;
      a3 = v8;
    }
  }

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t *))(*(void *)a1 + 96LL))( a1,  a2,  a3,  &qword_101991BF0);
}

BOOL sub_100F0A9B4(uint64_t a1, int a2, int *a3)
{
  uint64_t v5 = *(void *)(a1 + 88);
  if (!v5) {
    goto LABEL_11;
  }
  uint64_t v6 = a1 + 88;
  do
  {
    int v7 = *(_DWORD *)(v5 + 32);
    BOOL v8 = v7 < a2;
    if (v7 >= a2) {
      uint64_t v9 = (uint64_t *)v5;
    }
    else {
      uint64_t v9 = (uint64_t *)(v5 + 8);
    }
    if (!v8) {
      uint64_t v6 = v5;
    }
    uint64_t v5 = *v9;
  }

  while (*v9);
  if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= a2)
  {
    uint64_t v16 = *(void *)(v6 + 48);
    uint64_t v14 = v6 + 48;
    uint64_t v15 = v16;
    if (!v16) {
      goto LABEL_29;
    }
    int v17 = *a3;
    uint64_t v18 = v14;
    do
    {
      int v19 = *(_DWORD *)(v15 + 28);
      BOOL v20 = v19 < v17;
      if (v19 >= v17) {
        int v21 = (uint64_t *)v15;
      }
      else {
        int v21 = (uint64_t *)(v15 + 8);
      }
      if (!v20) {
        uint64_t v18 = v15;
      }
      uint64_t v15 = *v21;
    }

    while (*v21);
    if (v18 == v14 || v17 < *(_DWORD *)(v18 + 28)) {
LABEL_29:
    }
      uint64_t v18 = v14;
    return v18 != v14;
  }

  else
  {
LABEL_11:
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10188C4F0);
    }
    int v10 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
    {
      int v11 = (void *)(a1 + 8);
      *(_DWORD *)std::stringbuf::string_type buf = 136446466;
      int v30 = v11;
      __int16 v31 = 1026;
      int v32 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
        buf,
        0x12u);
    }

    BOOL v12 = sub_1002921D0(115, 0);
    BOOL result = 0LL;
    if (v12)
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_10188C4F0);
      }
      __int16 v22 = (void *)(a1 + 8);
      int v25 = 136446466;
      int v26 = v22;
      __int16 v27 = 1026;
      int v28 = a2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
        &v25,
        18);
      uint64_t v24 = (uint8_t *)v23;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLBTLERangeManager_Type::Notification, CLBTLERangeManager_Type::NotificationData, char, std::list<CLBTLEBeaconRegion_Type::MonitoredRegion>>::clientRegistered(int, const Notification_T &) [Notificatio n_T = CLBTLERangeManager_Type::Notification, NotificationData_T = CLBTLERangeManager_Type::NotificationData, Not ificationInfo_T = char, RegistrationInfo_T = std::list<CLBTLEBeaconRegion_Type::MonitoredRegion>]",  "%s\n",  v23);
      if (v24 != buf) {
        free(v24);
      }
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_100F0AC34(uint64_t a1, int *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v3 = a1 + 64;
  uint64_t v4 = v5;
  if (!v5) {
    return 0LL;
  }
  int v7 = *a2;
  uint64_t v8 = v3;
  do
  {
    int v9 = *(_DWORD *)(v4 + 32);
    BOOL v10 = v9 < v7;
    if (v9 >= v7) {
      int v11 = (uint64_t *)v4;
    }
    else {
      int v11 = (uint64_t *)(v4 + 8);
    }
    if (!v10) {
      uint64_t v8 = v4;
    }
    uint64_t v4 = *v11;
  }

  while (*v11);
  if (v8 == v3) {
    return 0LL;
  }
  if (v7 < *(_DWORD *)(v8 + 32)) {
    return 0LL;
  }
  uint64_t v12 = *(void *)(v8 + 64);
  if (!v12) {
    return 0LL;
  }
  *(_DWORD *)a3 = *(_DWORD *)v12;
  std::string::operator=((std::string *)(a3 + 16), (const std::string *)(v12 + 16));
  *(void *)(a3 + sub_10004AD90(v3 - 40) = *(void *)(v12 + 40);
  if (v12 != a3) {
    sub_100F0DEB4( a3 + 48,  *(void *)(v12 + 48),  *(void *)(v12 + 56),  0x2E8BA2E8BA2E8BA3LL * ((uint64_t)(*(void *)(v12 + 56) - *(void *)(v12 + 48)) >> 3));
  }
  return 1LL;
}

uint64_t sub_100F0ACF0(uint64_t a1, int *a2, uint64_t a3)
{
  int v10 = *a2;
  uint64_t v12 = &v10;
  uint64_t v5 = sub_10023347C((uint64_t **)(a1 + 56), &v10, (uint64_t)&unk_1012CF090, &v12);
  sub_10005F550((uint64_t)(v5 + 8), &v11);
  uint64_t v6 = (std::__shared_weak_count *)*((void *)&v11 + 1);
  if (*((void *)&v11 + 1))
  {
    int v7 = (unint64_t *)(*((void *)&v11 + 1) + 8LL);
    do
      unint64_t v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }

  return 1LL;
}

void sub_100F0AD9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100F0ADB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4 = 0;
  uint64_t v5 = &off_10182CE18;
  *(_OWORD *)std::string __p = 0u;
  __int128 v7 = 0u;
  __int128 v8 = 0u;
  uint64_t v9 = 0LL;
  (*(void (**)(uint64_t, uint64_t, int *, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  a2,  &v4,  a3,  a4,  0LL);
  int v10 = (void **)&v8;
  sub_100F0BB3C(&v10);
  uint64_t v5 = &off_10182CE18;
  if (SBYTE7(v7) < 0) {
    operator delete(__p[0]);
  }
}

void sub_100F0AE38( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100F0AE4C(uint64_t a1, unsigned int *a2, uint64_t a3, int a4, int a5)
{
  if (!*(_BYTE *)(a1 + 108))
  {
    int v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: notifyClientsWithData (Fallback)",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_IF_NONE_PRESENT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10188C4F0);
    }
    __int128 v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v12 = (void *)(a1 + 8);
      int v13 = (std::__shared_weak_count *)*a2;
      *(_DWORD *)std::stringbuf::string_type buf = 68289794;
      *(_DWORD *)__int16 v66 = 0;
      *(_WORD *)&v66[4] = 2082;
      *(void *)&v66[6] = "";
      *(_WORD *)&v66[14] = 2082;
      *(void *)&v66[16] = "activity";
      __int16 v67 = 2082;
      __int128 v68 = v12;
      __int16 v69 = 2050;
      __int128 v70 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:notifyClientsWithData, event:%{public, location:escape_only}s, name:%{public, l ocation:escape_only}s, notification:%{public}lld}",  buf,  0x30u);
    }

    uint64_t v15 = (__n128 *)(a1 + 64);
    uint64_t v14 = *(__n128 **)(a1 + 64);
    if (!v14) {
      goto LABEL_18;
    }
    signed __int32 v16 = *a2;
    int v17 = (__n128 *)(a1 + 64);
    do
    {
      signed __int32 v18 = v14[2].n128_i32[0];
      BOOL v19 = v18 < v16;
      if (v18 >= v16) {
        BOOL v20 = (__n128 **)v14;
      }
      else {
        BOOL v20 = (__n128 **)&v14->n128_u64[1];
      }
      if (!v19) {
        int v17 = v14;
      }
      uint64_t v14 = *v20;
    }

    while (*v20);
    if (v17 == v15 || v16 < (signed __int32)v17[2].n128_u32[0])
    {
LABEL_18:
      *(void *)unint64_t v71 = &v71[8];
      memset(&v71[8], 0, 24);
      __int16 v72 = 0LL;
      sub_100F0D214((uint64_t)buf, a2, (uint64_t)v71);
      int v17 = sub_100F0D12C((uint64_t **)(a1 + 56), (__n128 *)buf);
      int v21 = v70;
      if (v70)
      {
        p_shared_owners = (unint64_t *)&v70->__shared_owners_;
        do
          unint64_t v23 = __ldaxr(p_shared_owners);
        while (__stlxr(v23 - 1, p_shared_owners));
        if (!v23)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }

      sub_100F0C014((uint64_t)&v66[4], *(void **)&v66[12]);
      uint64_t v24 = v72;
      if (v72)
      {
        int v25 = (unint64_t *)&v72->__shared_owners_;
        do
          unint64_t v26 = __ldaxr(v25);
        while (__stlxr(v26 - 1, v25));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }

      sub_100F0C014((uint64_t)v71, *(void **)&v71[8]);
    }

    if (a4)
    {
      sub_100F0D44C(a3, buf);
      sub_10005F550((uint64_t)&v17[4], (__int128 *)buf);
      __int16 v27 = *(std::__shared_weak_count **)&v66[4];
      if (*(void *)&v66[4])
      {
        int v28 = (unint64_t *)(*(void *)&v66[4] + 8LL);
        do
          unint64_t v29 = __ldaxr(v28);
        while (__stlxr(v29 - 1, v28));
        if (!v29)
        {
          ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
          std::__shared_weak_count::__release_weak(v27);
        }
      }
    }

    else
    {
      sub_1000F0D38((__n128 *)v17[4].n128_u64);
    }

    if (!v17[3].n128_u64[1]) {
      goto LABEL_83;
    }
    int v30 = sub_100F0CC1C(a3);
    if (a5 == -1)
    {
      sub_100F0CD54((void *)a1, (int *)a2, v30);
    }

    else
    {
      uint64_t v31 = a1 + 88;
      uint64_t v32 = *(void *)(a1 + 88);
      if (!v32) {
        goto LABEL_48;
      }
      uint64_t v33 = a1 + 88;
      do
      {
        int v34 = *(_DWORD *)(v32 + 32);
        BOOL v35 = v34 < a5;
        if (v34 >= a5) {
          uint64_t v36 = (uint64_t *)v32;
        }
        else {
          uint64_t v36 = (uint64_t *)(v32 + 8);
        }
        if (!v35) {
          uint64_t v33 = v32;
        }
        uint64_t v32 = *v36;
      }

      while (*v36);
      if (v33 == v31 || *(_DWORD *)(v33 + 32) > a5) {
LABEL_48:
      }
        uint64_t v33 = a1 + 88;
      uint64_t v63 = v33;
      unint64_t v37 = v15->n128_u64[0];
      if (!v15->n128_u64[0]) {
        goto LABEL_59;
      }
      int v38 = *a2;
      double v39 = (__n128 *)(a1 + 64);
      do
      {
        int v40 = *(_DWORD *)(v37 + 32);
        BOOL v41 = v40 < v38;
        if (v40 >= v38) {
          uint64_t v42 = (unint64_t *)v37;
        }
        else {
          uint64_t v42 = (unint64_t *)(v37 + 8);
        }
        if (!v41) {
          double v39 = (__n128 *)v37;
        }
        unint64_t v37 = *v42;
      }

      while (*v42);
      if (v39 == v15 || v38 < (signed __int32)v39[2].n128_u32[0])
      {
LABEL_59:
        int v62 = (__n128 *)(a1 + 64);
LABEL_60:
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_10188C4F0);
        }
        uint64_t v43 = (os_log_s *)qword_1019349D8;
        if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
        {
          char v44 = (void *)(a1 + 8);
          (*(void (**)(_BYTE *__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(v71, a1, a2);
          if (v71[23] >= 0) {
            int v45 = v71;
          }
          else {
            int v45 = *(_BYTE **)v71;
          }
          *(_DWORD *)std::stringbuf::string_type buf = 136315650;
          *(void *)__int16 v66 = v44;
          *(_WORD *)&v66[8] = 1024;
          *(_DWORD *)&v66[10] = a5;
          *(_WORD *)&v66[14] = 2080;
          *(void *)&v66[16] = v45;
          _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_DEBUG,  "%s; client %d has deregistered, not notifying %s",
            buf,
            0x1Cu);
          if ((v71[23] & 0x80000000) != 0) {
            operator delete(*(void **)v71);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019349D0 != -1) {
            dispatch_once(&qword_1019349D0, &stru_10188C4F0);
          }
          __int128 v46 = (void *)(a1 + 8);
          uint64_t v47 = qword_1019349D8;
          (*(void (**)(void **__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(__p, a1, a2);
          if (v61 >= 0) {
            uint64_t v48 = __p;
          }
          else {
            uint64_t v48 = (void **)__p[0];
          }
          *(_DWORD *)unint64_t v71 = 136315650;
          *(void *)&v71[4] = v46;
          *(_WORD *)&v71[12] = 1024;
          *(_DWORD *)&v71[14] = a5;
          *(_WORD *)&v71[18] = 2080;
          *(void *)&v71[20] = v48;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v47,  2LL,  "%s; client %d has deregistered, not notifying %s",
            v71,
            28,
            v59);
          __int16 v50 = v49;
          if (v61 < 0) {
            operator delete(__p[0]);
          }
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLBTLERangeManager_Type::Notification, CLBTLERangeManager_Type::NotificationData, ch ar, std::list<CLBTLEBeaconRegion_Type::MonitoredRegion>>::notifyClientsWithData(const Notification_T &, cons t NotificationData_T &, BOOL, int, BOOL) [Notification_T = CLBTLERangeManager_Type::Notification, Notificati onData_T = CLBTLERangeManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = std::l ist<CLBTLEBeaconRegion_Type::MonitoredRegion>]",  "%s\n",  v50);
        }

        goto LABEL_83;
      }

      int v62 = v39;
      if (v33 == v31) {
        goto LABEL_60;
      }
      uint64_t v53 = v39[3].n128_i64[0];
      int v51 = v39 + 3;
      __int16 v52 = (__n128 *)v53;
      if (!v53) {
        goto LABEL_60;
      }
      int v54 = *(_DWORD *)(v33 + 32);
      uint64_t v55 = v51;
      do
      {
        int v56 = v52[2].n128_i32[0];
        BOOL v57 = v56 < v54;
        if (v56 >= v54) {
          __int16 v58 = v52;
        }
        else {
          __int16 v58 = (__n128 *)&v52->n128_i8[8];
        }
        if (!v57) {
          uint64_t v55 = v52;
        }
        __int16 v52 = (__n128 *)v58->n128_u64[0];
      }

      while (v58->n128_u64[0]);
      sub_100F0BEB0((_BYTE *)a1, (uint64_t)&v63, (uint64_t)&v62, v30);
    }

void sub_100F0B468( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_activity_scope_state_s state, char a18)
{
}

void sub_100F0B4B4(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 108))
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10188C4F0);
    }
    int v2 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v3 = (void *)(a1 + 8);
      *(_DWORD *)std::stringbuf::string_type buf = 136315138;
      unint64_t v37 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "%s; already shutdown; not listing clients",
        buf,
        0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_10188C4F0);
      }
      int v4 = (void *)(a1 + 8);
      int v32 = 136315138;
      uint64_t v33 = v4;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; already shutdown; not listing clients",
        (const char *)&v32);
      uint64_t v6 = (uint8_t *)v5;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLBTLERangeManager_Type::Notification, CLBTLERangeManager_Type::NotificationData, char, std::list<CLBTLEBeaconRegion_Type::MonitoredRegion>>::listClients() [Notification_T = CLBTLERangeManager_Type::N otification, NotificationData_T = CLBTLERangeManager_Type::NotificationData, NotificationInfo_T = char, Registra tionInfo_T = std::list<CLBTLEBeaconRegion_Type::MonitoredRegion>]",  "%s\n",  v5);
      if (v6 != buf) {
        free(v6);
      }
    }
  }

  else
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10188C4F0);
    }
    __int128 v7 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      __int128 v8 = (void *)(a1 + 8);
      uint64_t v9 = *(void *)(a1 + 96);
      *(_DWORD *)std::stringbuf::string_type buf = 136315394;
      unint64_t v37 = v8;
      __int16 v38 = 2048;
      v39[0] = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "%s; listing clients, num clients: %zu",
        buf,
        0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_10188C4F0);
      }
      __int16 v27 = (void *)(a1 + 8);
      uint64_t v28 = *(void *)(a1 + 96);
      int v32 = 136315394;
      uint64_t v33 = v27;
      __int16 v34 = 2048;
      v35[0] = v28;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; listing clients, num clients: %zu",
        (const char *)&v32,
        22);
      int v30 = (uint8_t *)v29;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLBTLERangeManager_Type::Notification, CLBTLERangeManager_Type::NotificationData, char, std::list<CLBTLEBeaconRegion_Type::MonitoredRegion>>::listClients() [Notification_T = CLBTLERangeManager_Type::N otification, NotificationData_T = CLBTLERangeManager_Type::NotificationData, NotificationInfo_T = char, Registra tionInfo_T = std::list<CLBTLEBeaconRegion_Type::MonitoredRegion>]",  "%s\n",  v29);
      if (v30 != buf) {
        free(v30);
      }
    }

    int v10 = *(void **)(a1 + 80);
    if (v10 != (void *)(a1 + 88))
    {
      __int128 v11 = (void *)(a1 + 8);
      do
      {
        uint64_t v12 = (void *)v10[5];
        if (v12 != v10 + 6)
        {
          do
          {
            if (qword_1019349D0 != -1) {
              dispatch_once(&qword_1019349D0, &stru_10188C4F0);
            }
            int v13 = (os_log_s *)qword_1019349D8;
            if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v14 = (void *)(a1 + 8);
              int v15 = *((_DWORD *)v10 + 8);
              int v16 = *((_DWORD *)v12 + 7);
              *(_DWORD *)std::stringbuf::string_type buf = 136315650;
              unint64_t v37 = v14;
              __int16 v38 = 1024;
              LODWORD(v39[0]) = v15;
              WORD2(v39[0]) = 1024;
              *(_DWORD *)((char *)v39 + 6) = v16;
              _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "%s; clients, id: %d, notification: %d",
                buf,
                0x18u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_10188C4F0);
              }
              BOOL v20 = (void *)(a1 + 8);
              int v21 = *((_DWORD *)v10 + 8);
              int v22 = *((_DWORD *)v12 + 7);
              int v32 = 136315650;
              uint64_t v33 = v20;
              __int16 v34 = 1024;
              LODWORD(v35[0]) = v21;
              WORD2(v35[0]) = 1024;
              *(_DWORD *)((char *)v35 + 6) = v22;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; clients, id: %d, notification: %d",
                (const char *)&v32,
                24,
                v31);
              uint64_t v24 = (uint8_t *)v23;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLBTLERangeManager_Type::Notification, CLBTLERangeManager_Type::NotificationData , char, std::list<CLBTLEBeaconRegion_Type::MonitoredRegion>>::listClients() [Notification_T = CLBTLERang eManager_Type::Notification, NotificationData_T = CLBTLERangeManager_Type::NotificationData, Notificatio nInfo_T = char, RegistrationInfo_T = std::list<CLBTLEBeaconRegion_Type::MonitoredRegion>]",  "%s\n",  v23);
              if (v24 != buf) {
                free(v24);
              }
            }

            int v17 = (void *)v12[1];
            if (v17)
            {
              do
              {
                signed __int32 v18 = v17;
                int v17 = (void *)*v17;
              }

              while (v17);
            }

            else
            {
              do
              {
                signed __int32 v18 = (void *)v12[2];
                BOOL v19 = *v18 == (void)v12;
                uint64_t v12 = v18;
              }

              while (!v19);
            }

            uint64_t v12 = v18;
          }

          while (v18 != v10 + 6);
        }

        int v25 = (void *)v10[1];
        if (v25)
        {
          do
          {
            unint64_t v26 = v25;
            int v25 = (void *)*v25;
          }

          while (v25);
        }

        else
        {
          do
          {
            unint64_t v26 = (void *)v10[2];
            BOOL v19 = *v26 == (void)v10;
            int v10 = v26;
          }

          while (!v19);
        }

        int v10 = v26;
      }

      while (v26 != (void *)(a1 + 88));
    }
  }

void sub_100F0BA60(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

uint64_t sub_100F0BA8C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2)
  {
    sub_1002E4CB0(v2 + 272);
    sub_100AF2E68(v2 + 176);
    uint64_t v3 = *(void **)(v2 + 112);
    if (v3)
    {
      *(void *)(v2 + 12sub_100222B94(v74, (uint64_t)"CLBeaconFenceDatabase::getFenceForBundleAndOnBehalf", 0) = v3;
      operator delete(v3);
    }

    operator delete((void *)v2);
    *(void *)(a1 + sub_10004AD90(v3 - 40) = 0LL;
  }

  *(void *)a1 = &off_10182CE18;
  return a1;
}

void sub_100F0BB10(id a1)
{
  qword_101934848 = (uint64_t)os_log_create("com.apple.locationd.Position", "Proximity");
}

void sub_100F0BB3C(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    uint64_t v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 88LL;
        sub_100F0BBC0((uint64_t)(v1 + 2), v4);
      }

      while ((void *)v4 != v2);
      uint64_t v5 = **a1;
    }

    v1[1] = v2;
    operator delete(v5);
  }

void sub_100F0BBC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a2 + 64);
  if (v3)
  {
    *(void *)(a2 + 72) = v3;
    operator delete(v3);
  }

  *(void *)a2 = &off_10182CE18;
}

uint64_t sub_100F0BC14(uint64_t a1, const std::string *a2, int a3)
{
  *(void *)a1 = &off_10182CE18;
  *(_OWORD *)(a1 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 4_Block_object_dispose(va, 8) = 0LL;
  float v9 = (float)a3;
  uint64_t v10 = 0x3FE666663F800000LL;
  int v11 = 65436;
  __int128 v12 = xmmword_101364A30;
  __int128 v13 = xmmword_101364A40;
  __int128 v14 = xmmword_101364A50;
  int v15 = 1092616192;
  uint64_t v16 = 3LL;
  uint64_t v5 = (std::string *)operator new(0x120uLL);
  sub_1004F2598();
  sub_1004F8AF0();
  sub_1010DDBC0(&__p, "");
  sub_100EF4D38(v5);
  *(void *)(a1 + sub_10004AD90(v3 - 40) = v5;
  if (v8 < 0)
  {
    operator delete(__p);
    uint64_t v5 = *(std::string **)(a1 + 40);
  }

  sub_100EF5F24(v5, a2);
  return a1;
}

void sub_100F0BD28( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete(v16);
  *(void *)uint64_t v15 = v18 + 16;
  _Unwind_Resume(a1);
}

CLCppContainer *sub_100F0BD78(uint64_t a1)
{
  uint64_t v2 = operator new(0x48uLL);
  uint64_t v3 = v2;
  *(_DWORD *)uint64_t v2 = *(_DWORD *)a1;
  v2[1] = &off_10182CE18;
  if (*(char *)(a1 + 39) < 0)
  {
    sub_1010DD48C((_BYTE *)v2 + 16, *(void **)(a1 + 16), *(void *)(a1 + 24));
  }

  else
  {
    *((_OWORD *)v2 + 1) = *(_OWORD *)(a1 + 16);
    v2[4] = *(void *)(a1 + 32);
  }

  v3[6] = 0LL;
  uint64_t v4 = *(void *)(a1 + 48);
  v3[5] = *(void *)(a1 + 40);
  v3[7] = 0LL;
  v3[8] = 0LL;
  sub_100F0C1EC(v3 + 6, v4, *(void *)(a1 + 56), 0x2E8BA2E8BA2E8BA3LL * ((*(void *)(a1 + 56) - v4) >> 3));
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  _DWORD v6[2] = sub_100F0C18C;
  v6[3] = &unk_10181D3D0;
  _DWORD v6[4] = v3;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:",  v3,  v6,  0LL,  72LL);
}

void sub_100F0BE7C(_Unwind_Exception *a1)
{
}

_BYTE *sub_100F0BEB0(_BYTE *result, uint64_t a2, uint64_t a3, void *a4)
{
  if (!result[108])
  {
    __int128 v7 = result;
    uint64_t v8 = *(unsigned int *)(*(void *)a2 + 32LL);
    LODWORD(v13) = *(_DWORD *)(*(void *)a3 + 32LL);
    id v9 = sub_100F0C458(a4);
    uint64_t v10 = *(void *)a3 + 80LL;
    int v11 = (uint64_t **)(*(void *)a3 + 40LL);
    __int128 v14 = (int *)(*(void *)a2 + 32LL);
    __int128 v12 = sub_100F0C05C(v11, v14, (uint64_t)&unk_1012CF090, &v14);
    BOOL result = (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t *, id, uint64_t, uint64_t **))(*(void *)v7 + 192LL))( v7,  v8,  &v13,  v9,  v10,  v12 + 5);
    if ((_DWORD)result) {
      return objc_msgSend( *(id *)(*(void *)a2 + 64),  "onNotification:withData:",  *(unsigned int *)(*(void *)a3 + 32),  a4,  v13);
    }
  }

  return result;
}

void sub_100F0BF8C(uint64_t a1, void **a2)
{
  if (*(_BYTE *)(a1 + 8))
  {
    sub_10000AE14((uint64_t)(a2 + 8));
    sub_100F0C014((uint64_t)(a2 + 5), a2[6]);
  }

  else if (!a2)
  {
    return;
  }

  operator delete(a2);
}

uint64_t sub_100F0BFE0(uint64_t a1)
{
  return a1;
}

void sub_100F0C014(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_100F0C014(a1, *a2);
    sub_100F0C014(a1, a2[1]);
    sub_100527B44(a2 + 5);
    operator delete(a2);
  }

uint64_t **sub_100F0C05C(uint64_t **a1, int *a2, uint64_t a3, _DWORD **a4)
{
  __int128 v7 = a1 + 1;
  uint64_t v6 = a1[1];
  uint64_t v8 = a1 + 1;
  id v9 = a1 + 1;
  if (v6)
  {
    int v10 = *a2;
    while (1)
    {
      while (1)
      {
        id v9 = (uint64_t **)v6;
        int v11 = *((_DWORD *)v6 + 8);
        if (v10 >= v11) {
          break;
        }
        uint64_t v6 = *v9;
        uint64_t v8 = v9;
        if (!*v9) {
          goto LABEL_9;
        }
      }

      if (v11 >= v10) {
        break;
      }
      uint64_t v6 = v9[1];
      if (!v6)
      {
        uint64_t v8 = v9 + 1;
        goto LABEL_9;
      }
    }
  }

  else
  {
LABEL_9:
    __int128 v12 = operator new(0x40uLL);
    v14[1] = v7;
    _WORD v12[8] = **a4;
    *((void *)v12 + 5) = v12 + 10;
    *((void *)v12 + 6) = v12 + 10;
    *((void *)v12 + 7) = 0LL;
    char v15 = 1;
    sub_1000085FC(a1, (uint64_t)v9, v8, (uint64_t *)v12);
    v14[0] = 0LL;
    sub_100F0C148((uint64_t)v14, 0LL);
    return (uint64_t **)v12;
  }

  return v9;
}

void sub_100F0C148(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16)) {
      sub_100527B44(v2 + 5);
    }
    operator delete(v2);
  }

void sub_100F0C18C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1)
  {
    uint64_t v2 = (void **)(v1 + 48);
    sub_100F0BB3C(&v2);
    *(void *)(v1 + _Block_object_dispose(va, 8) = &off_10182CE18;
    operator delete((void *)v1);
  }

void *sub_100F0C1EC(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    sub_10004C510(result, a4);
    BOOL result = (void *)sub_100F0C270((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }

  return result;
}

void sub_100F0C250( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + _Block_object_dispose(va, 8) = v10;
  sub_100F0BB3C(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_100F0C270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v11 = a4;
  uint64_t v12 = a4;
  v9[0] = a1;
  v9[1] = &v11;
  _DWORD v9[2] = &v12;
  char v10 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      sub_100F0C318(a1, v4, v6);
      v6 += 88LL;
      uint64_t v4 = v12 + 88;
      v12 += 88LL;
    }

    while (v6 != a3);
  }

  char v10 = 1;
  sub_100F0C3D4((uint64_t)v9);
  return v4;
}

void sub_100F0C304( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_100F0C318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &off_10182CE18;
  uint64_t v5 = (_BYTE *)(a2 + 8);
  if (*(char *)(a3 + 31) < 0)
  {
    sub_1010DD48C(v5, *(void **)(a3 + 8), *(void *)(a3 + 16));
  }

  else
  {
    __int128 v6 = *(_OWORD *)(a3 + 8);
    *(void *)(a2 + 24) = *(void *)(a3 + 24);
    *(_OWORD *)uint64_t v5 = v6;
  }

  *(void *)(a2 + 32) = *(void *)(a3 + 32);
  __int128 v7 = *(_OWORD *)(a3 + 40);
  __int16 v8 = *(_WORD *)(a3 + 56);
  *(void *)(a2 + 64) = 0LL;
  *(_WORD *)(a2 + 56) = v8;
  *(_OWORD *)(a2 + sub_10004AD90(v3 - 40) = v7;
  *(void *)(a2 + 72) = 0LL;
  *(void *)(a2 + 8sub_100222B94(v74, (uint64_t)"CLBeaconFenceDatabase::getFenceForBundleAndOnBehalf", 0) = 0LL;
  return sub_100740FAC( (void *)(a2 + 64),  *(const void **)(a3 + 64),  *(void *)(a3 + 72),  *(void *)(a3 + 72) - *(void *)(a3 + 64));
}

void sub_100F0C3B0(_Unwind_Exception *exception_object)
{
  *(void *)uint64_t v2 = v3 + 16;
  _Unwind_Resume(exception_object);
}

uint64_t sub_100F0C3D4(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24)) {
    sub_100F0C408((uint64_t *)a1);
  }
  return a1;
}

void sub_100F0C408(uint64_t *a1)
{
  uint64_t v2 = (uint64_t *)a1[1];
  uint64_t v1 = (uint64_t *)a1[2];
  uint64_t v3 = *v1;
  uint64_t v4 = *v2;
  if (*v1 != *v2)
  {
    uint64_t v5 = *a1;
    do
    {
      v3 -= 88LL;
      sub_100F0BBC0(v5, v3);
    }

    while (v3 != v4);
  }

id sub_100F0C458(void *a1)
{
  if ((objc_opt_isKindOfClass(a1, v2) & 1) != 0) {
    return sub_100F0C4A4(a1);
  }
  else {
    return 0LL;
  }
}

id sub_100F0C4A4(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return [a1 cppObjectPtr];
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10188C570);
    }
    uint64_t v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x8000000101364AAELL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10188C570);
    }
    LODWORD(v_Block_object_dispose(va, 8) = 134218498;
    HIDWORD(v_Block_object_dispose(va, 8) = (_DWORD)v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10188C570);
    }
    __int128 v6 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x8000000101364AAELL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10188C570);
    }
    LODWORD(v_Block_object_dispose(va, 8) = 134218498;
    HIDWORD(v_Block_object_dispose(va, 8) = (_DWORD)v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  __int128 v7 = (uint8_t *)v4;
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLBTLERangeManager_Type::NotificationData, Callb acuint64_t k = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:228:46)]",  "%s\n",  v4);
  if (v7 != buf) {
    free(v7);
  }
  return 0LL;
}

void sub_100F0C850(id a1)
{
  qword_101934478 = (uint64_t)os_log_create("com.apple.locationd.Support", "Support");
}

void *sub_100F0C87C(uint64_t a1, uint64_t a2)
{
  id v2 = (void *)(a1 + 8);
  uint64_t v3 = *(void **)(a1 + 8);
  if (!v3) {
    return v2;
  }
  uint64_t v5 = (void *)(a1 + 8);
  do
  {
    BOOL v6 = sub_100F0C8F4((uint64_t)(v3 + 4), a2);
    __int128 v7 = v3 + 1;
    if (!v6)
    {
      __int128 v7 = v3;
      uint64_t v5 = v3;
    }

    uint64_t v3 = (void *)*v7;
  }

  while (*v7);
  return v5;
}

BOOL sub_100F0C8F4(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void **__return_ptr))(*(void *)a1 + 16LL))(__p);
  (*(void (**)(void *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(v13, a2);
  int v3 = (char)v14;
  uint64_t v4 = (void *)v13[0];
  unsigned __int8 v5 = v16;
  if ((v16 & 0x80u) == 0) {
    size_t v6 = v16;
  }
  else {
    size_t v6 = (size_t)__p[1];
  }
  if ((v16 & 0x80u) == 0) {
    __int128 v7 = __p;
  }
  else {
    __int128 v7 = (void **)__p[0];
  }
  if ((v14 & 0x80u) == 0) {
    size_t v8 = v14;
  }
  else {
    size_t v8 = v13[1];
  }
  if ((v14 & 0x80u) == 0) {
    uint64_t v9 = v13;
  }
  else {
    uint64_t v9 = (void *)v13[0];
  }
  if (v8 >= v6) {
    size_t v10 = v6;
  }
  else {
    size_t v10 = v8;
  }
  int v11 = memcmp(v7, v9, v10);
  if (v3 < 0)
  {
    operator delete(v4);
    if ((v16 & 0x80) == 0) {
      goto LABEL_18;
    }
  }

  else if ((v5 & 0x80) == 0)
  {
    goto LABEL_18;
  }

  operator delete(__p[0]);
LABEL_18:
  if (v11) {
    return v11 < 0;
  }
  else {
    return v6 < v8;
  }
}

void sub_100F0C9D4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_100F0C9F0(uint64_t **a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 v5 = (uint64_t **)sub_100F0CA6C((uint64_t)a1, &v8, a2);
  BOOL result = *v5;
  if (!*v5)
  {
    sub_100F0CAFC((uint64_t)a1, a3, (uint64_t)&v7);
    sub_1000085FC(a1, v8, v5, v7);
    return v7;
  }

  return result;
}

void *sub_100F0CA6C(uint64_t a1, void *a2, uint64_t a3)
{
  unsigned __int8 v5 = (void *)(a1 + 8);
  uint64_t v4 = *(void **)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        __int128 v7 = v4;
        uint64_t v8 = (uint64_t)(v4 + 4);
        uint64_t v4 = (void *)*v7;
        unsigned __int8 v5 = v7;
        if (!*v7) {
          goto LABEL_9;
        }
      }

      if (!sub_100F0C8F4(v8, a3)) {
        break;
      }
      unsigned __int8 v5 = v7 + 1;
      uint64_t v4 = (void *)v7[1];
    }

    while (v4);
  }

  else
  {
    __int128 v7 = (void *)(a1 + 8);
  }

_BYTE *sub_100F0CAFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  size_t v6 = operator new(0x50uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + _Block_object_dispose(va, 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  BOOL result = sub_100F0CB68(v5, (uint64_t)v6 + 32, a2);
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_100F0CB50(_Unwind_Exception *a1)
{
}

_BYTE *sub_100F0CB68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = &off_10182CE18;
  BOOL result = (_BYTE *)(a2 + 8);
  if (*(char *)(a3 + 31) < 0)
  {
    BOOL result = sub_1010DD48C(result, *(void **)(a3 + 8), *(void *)(a3 + 16));
  }

  else
  {
    __int128 v6 = *(_OWORD *)(a3 + 8);
    *(void *)(a2 + 24) = *(void *)(a3 + 24);
    *(_OWORD *)BOOL result = v6;
  }

  *(void *)(a2 + 32) = *(void *)(a3 + 32);
  *(void *)a2 = &off_10188C520;
  *(_DWORD *)(a2 + sub_10004AD90(v3 - 40) = *(_DWORD *)(a3 + 40);
  return result;
}

uint64_t sub_100F0CBE4(uint64_t a1)
{
  uint64_t v2 = a1 + 8;
  sub_10000AE14(a1 + 32);
  sub_100F0C014(v2, *(void **)(a1 + 16));
  return a1;
}

CLCppContainer *sub_100F0CC1C(uint64_t a1)
{
  uint64_t v2 = operator new(0x48uLL);
  int v3 = v2;
  *(_DWORD *)uint64_t v2 = *(_DWORD *)a1;
  v2[1] = &off_10182CE18;
  if (*(char *)(a1 + 39) < 0)
  {
    sub_1010DD48C((_BYTE *)v2 + 16, *(void **)(a1 + 16), *(void *)(a1 + 24));
  }

  else
  {
    *((_OWORD *)v2 + 1) = *(_OWORD *)(a1 + 16);
    v2[4] = *(void *)(a1 + 32);
  }

  v3[6] = 0LL;
  uint64_t v4 = *(void *)(a1 + 48);
  v3[5] = *(void *)(a1 + 40);
  v3[7] = 0LL;
  v3[8] = 0LL;
  sub_100F0C1EC(v3 + 6, v4, *(void *)(a1 + 56), 0x2E8BA2E8BA2E8BA3LL * ((*(void *)(a1 + 56) - v4) >> 3));
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  _DWORD v6[2] = sub_100F0D684;
  v6[3] = &unk_10181D3D0;
  _DWORD v6[4] = v3;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:",  v3,  v6,  0LL,  72LL);
}

void sub_100F0CD20(_Unwind_Exception *a1)
{
}

void sub_100F0CD54(void *a1, int *a2, void *a3)
{
  if (!*((_BYTE *)a1 + 108))
  {
    uint64_t v5 = a1 + 8;
    uint64_t v4 = a1[8];
    if (v4)
    {
      int v8 = *a2;
      uint64_t v9 = a1 + 8;
      do
      {
        int v10 = *(_DWORD *)(v4 + 32);
        BOOL v11 = v10 < v8;
        if (v10 >= v8) {
          uint64_t v12 = (uint64_t *)v4;
        }
        else {
          uint64_t v12 = (uint64_t *)(v4 + 8);
        }
        if (!v11) {
          uint64_t v9 = (void *)v4;
        }
        uint64_t v4 = *v12;
      }

      while (*v12);
      if (v9 != v5 && v8 >= *((_DWORD *)v9 + 8))
      {
        int v51 = v9;
        id v13 = sub_100F0C458(a3);
        (*(void (**)(void *, int *, id, void *))(*a1 + 184LL))(a1, a2, v13, v9 + 10);
        unsigned __int8 v14 = (void *)v9[5];
        if (v14 != v9 + 6)
        {
          char v15 = a1 + 11;
          unsigned __int8 v16 = a1 + 1;
          do
          {
            uint64_t v17 = *v15;
            if (!*v15) {
              goto LABEL_25;
            }
            int v18 = *((_DWORD *)v14 + 8);
            BOOL v19 = a1 + 11;
            do
            {
              int v20 = *(_DWORD *)(v17 + 32);
              BOOL v21 = v20 < v18;
              if (v20 >= v18) {
                int v22 = (uint64_t *)v17;
              }
              else {
                int v22 = (uint64_t *)(v17 + 8);
              }
              if (!v21) {
                BOOL v19 = (uint64_t *)v17;
              }
              uint64_t v17 = *v22;
            }

            while (*v22);
            if (v19 != v15 && (int v23 = *((_DWORD *)v19 + 8), v18 >= v23))
            {
              __int16 v50 = v19;
              sub_100F0BEB0(a1, (uint64_t)&v50, (uint64_t)&v51, a3);
              uint64_t v27 = a1[8];
              if (!v27) {
                return;
              }
              int v28 = *a2;
              unint64_t v29 = v5;
              do
              {
                int v30 = *(_DWORD *)(v27 + 32);
                BOOL v31 = v30 < v28;
                if (v30 >= v28) {
                  int v32 = (uint64_t *)v27;
                }
                else {
                  int v32 = (uint64_t *)(v27 + 8);
                }
                if (!v31) {
                  unint64_t v29 = (void *)v27;
                }
                uint64_t v27 = *v32;
              }

              while (*v32);
              if (v29 == v5 || v28 < *((_DWORD *)v29 + 8)) {
                return;
              }
              int v51 = v29;
              uint64_t v34 = v29[6];
              unsigned __int8 v14 = v29 + 6;
              uint64_t v33 = v34;
              if (v34)
              {
                BOOL v35 = v14;
                uint64_t v36 = v33;
                do
                {
                  int v37 = *(_DWORD *)(v36 + 32);
                  BOOL v38 = v37 < v23;
                  if (v37 >= v23) {
                    double v39 = (uint64_t *)v36;
                  }
                  else {
                    double v39 = (uint64_t *)(v36 + 8);
                  }
                  if (!v38) {
                    BOOL v35 = (void *)v36;
                  }
                  uint64_t v36 = *v39;
                }

                while (*v39);
                if (v35 == v14 || v23 < *((_DWORD *)v35 + 8))
                {
                  do
                  {
                    int v40 = *(_DWORD *)(v33 + 32);
                    BOOL v41 = v23 < v40;
                    if (v23 >= v40) {
                      uint64_t v42 = (uint64_t *)(v33 + 8);
                    }
                    else {
                      uint64_t v42 = (uint64_t *)v33;
                    }
                    if (v41) {
                      unsigned __int8 v14 = (void *)v33;
                    }
                    uint64_t v33 = *v42;
                  }

                  while (*v42);
                }

                else
                {
                  uint64_t v43 = (void *)v35[1];
                  if (v43)
                  {
                    do
                    {
                      unsigned __int8 v14 = v43;
                      uint64_t v43 = (void *)*v43;
                    }

                    while (v43);
                  }

                  else
                  {
                    do
                    {
                      unsigned __int8 v14 = (void *)v35[2];
                      BOOL v44 = *v14 == (void)v35;
                      BOOL v35 = v14;
                    }

                    while (!v44);
                  }
                }
              }
            }

            else
            {
LABEL_25:
              __int16 v50 = a1 + 11;
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_10188C4F0);
              }
              uint64_t v24 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                int v25 = a1 + 1;
                int v26 = *((_DWORD *)v14 + 8);
                *(_DWORD *)std::stringbuf::string_type buf = 136446466;
                BOOL v57 = v25;
                __int16 v58 = 1026;
                int v59 = v26;
                _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_FAULT,  "%{public}s; unknown client %{public}d",
                  buf,
                  0x12u);
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(buf, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_10188C4F0);
                }
                int v45 = a1 + 1;
                int v46 = *((_DWORD *)v14 + 8);
                int v52 = 136446466;
                uint64_t v53 = v45;
                __int16 v54 = 1026;
                int v55 = v46;
                LODWORD(v49) = 18;
                _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; unknown client %{public}d",
                  &v52,
                  v49);
                uint64_t v48 = (uint8_t *)v47;
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLNotifier<CLBTLERangeManager_Type::Notification, CLBTLERangeManager_Type::NotificationData, char , std::list<CLBTLEBeaconRegion_Type::MonitoredRegion>>::invokeClientsWithData(const Notification_T &, CLCppContainer *) [Notification_T = CLBTLERangeManager_Type::Notification, NotificationData_T = CLBTLE RangeManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = std::list<CLBTLEB eaconRegion_Type::MonitoredRegion>]",  "%s\n",  v47);
                if (v48 != buf) {
                  free(v48);
                }
              }
            }
          }

          while (v14 != v51 + 6);
        }
      }
    }
  }

__n128 *sub_100F0D12C(uint64_t **a1, __n128 *a2)
{
  uint64_t v4 = a1 + 1;
  uint64_t v5 = (__n128 *)operator new(0x58uLL);
  BOOL v11 = v4;
  sub_10023438C(v5 + 2, a2);
  char v12 = 1;
  __int128 v6 = a1[1];
  if (v6)
  {
    signed __int32 v7 = v5[2].n128_i32[0];
    while (1)
    {
      while (1)
      {
        int v8 = (uint64_t **)v6;
        signed __int32 v9 = *((_DWORD *)v6 + 8);
        if (v7 >= v9) {
          break;
        }
        __int128 v6 = *v8;
        uint64_t v4 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }

      if (v9 >= v7) {
        break;
      }
      __int128 v6 = v8[1];
      if (!v6)
      {
        uint64_t v4 = v8 + 1;
        goto LABEL_10;
      }
    }

    sub_100F0BF8C((uint64_t)&v11, v5);
    return (__n128 *)v8;
  }

  else
  {
    int v8 = v4;
LABEL_10:
    sub_1000085FC(a1, (uint64_t)v8, v4, (uint64_t *)v5);
  }

  return v5;
}

uint64_t sub_100F0D214(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  *(_DWORD *)a1 = *a2;
  sub_100F0D270((uint64_t *)(a1 + 8), a3);
  uint64_t v5 = *(void *)(a3 + 32);
  *(void *)(a1 + 32) = *(void *)(a3 + 24);
  *(void *)(a1 + sub_10004AD90(v3 - 40) = v5;
  if (v5)
  {
    __int128 v6 = (unint64_t *)(v5 + 8);
    do
      unint64_t v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }

  *(_BYTE *)(a1 + 4_Block_object_dispose(va, 8) = *(_BYTE *)(a3 + 40);
  return a1;
}

uint64_t *sub_100F0D270(uint64_t *a1, uint64_t a2)
{
  a1[2] = 0LL;
  a1[1] = 0LL;
  *a1 = (uint64_t)(a1 + 1);
  sub_100F0D2C4(a1, *(int **)a2, (int *)(a2 + 8));
  return a1;
}

void sub_100F0D2AC(_Unwind_Exception *a1)
{
}

uint64_t *sub_100F0D2C4(uint64_t *result, int *a2, int *a3)
{
  if (a2 != a3)
  {
    uint64_t v4 = a2;
    uint64_t v5 = (uint64_t **)result;
    __int128 v6 = result + 1;
    do
    {
      BOOL result = sub_100F0D348(v5, v6, v4 + 8, v4 + 8);
      unint64_t v7 = (int *)*((void *)v4 + 1);
      if (v7)
      {
        do
        {
          int v8 = v7;
          unint64_t v7 = *(int **)v7;
        }

        while (v7);
      }

      else
      {
        do
        {
          int v8 = (int *)*((void *)v4 + 2);
          BOOL v9 = *(void *)v8 == (void)v4;
          uint64_t v4 = v8;
        }

        while (!v9);
      }

      uint64_t v4 = v8;
    }

    while (v8 != a3);
  }

  return result;
}

uint64_t *sub_100F0D348(uint64_t **a1, uint64_t *a2, int *a3, _DWORD *a4)
{
  __int128 v6 = sub_1000EBE2C(a1, a2, &v12, &v11, a3);
  unint64_t v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    int v8 = (uint64_t **)v6;
    sub_100F0D3DC((uint64_t)a1, a4, (uint64_t)v10);
    sub_1000085FC(a1, (uint64_t)v12, v8, v10[0]);
    unint64_t v7 = v10[0];
    v10[0] = 0LL;
    sub_100F0C148((uint64_t)v10, 0LL);
  }

  return v7;
}

uint64_t *sub_100F0D3DC@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  __int128 v6 = operator new(0x40uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + _Block_object_dispose(va, 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  *((_DWORD *)v6 + _Block_object_dispose(va, 8) = *a2;
  BOOL result = sub_1007F21E0((uint64_t *)v6 + 5, (uint64_t)(a2 + 2));
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_100F0D434(_Unwind_Exception *a1)
{
}

void *sub_100F0D44C@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = operator new(0x60uLL);
  BOOL result = sub_100F0D4A4(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_100F0D490(_Unwind_Exception *a1)
{
}

void *sub_100F0D4A4(void *a1, uint64_t a2)
{
  a1[2] = 0LL;
  *a1 = off_10188C5A0;
  a1[1] = 0LL;
  sub_100F0D564((uint64_t)&v4, (uint64_t)(a1 + 3), a2);
  return a1;
}

void sub_100F0D4F0(_Unwind_Exception *a1)
{
}

void sub_100F0D504(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10188C5A0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100F0D518(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10188C5A0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_100F0D53C(uint64_t a1)
{
}

void *sub_100F0D564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a2 = *(_DWORD *)a3;
  *(void *)(a2 + _Block_object_dispose(va, 8) = &off_10182CE18;
  uint64_t v5 = (_BYTE *)(a2 + 16);
  if (*(char *)(a3 + 39) < 0)
  {
    sub_1010DD48C(v5, *(void **)(a3 + 16), *(void *)(a3 + 24));
  }

  else
  {
    __int128 v6 = *(_OWORD *)(a3 + 16);
    *(void *)(a2 + 32) = *(void *)(a3 + 32);
    *(_OWORD *)uint64_t v5 = v6;
  }

  uint64_t v7 = *(void *)(a3 + 40);
  *(void *)(a2 + 4_Block_object_dispose(va, 8) = 0LL;
  *(void *)(a2 + sub_10004AD90(v3 - 40) = v7;
  *(void *)(a2 + 56) = 0LL;
  *(void *)(a2 + 64) = 0LL;
  return sub_100F0C1EC( (void *)(a2 + 48),  *(void *)(a3 + 48),  *(void *)(a3 + 56),  0x2E8BA2E8BA2E8BA3LL * ((uint64_t)(*(void *)(a3 + 56) - *(void *)(a3 + 48)) >> 3));
}

void sub_100F0D60C(_Unwind_Exception *exception_object)
{
  *(void *)(v1 + _Block_object_dispose(va, 8) = v3 + 16;
  _Unwind_Resume(exception_object);
}

void sub_100F0D630(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void **)(a2 + 48);
  sub_100F0BB3C(&v3);
  *(void *)(a2 + _Block_object_dispose(va, 8) = &off_10182CE18;
}

void sub_100F0D684(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1)
  {
    uint64_t v2 = (void **)(v1 + 48);
    sub_100F0BB3C(&v2);
    *(void *)(v1 + _Block_object_dispose(va, 8) = &off_10182CE18;
    operator delete((void *)v1);
  }

uint64_t sub_100F0D6E4(uint64_t a1, int *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (!v2) {
    return 0LL;
  }
  int v3 = *a2;
  uint64_t v4 = a1 + 8;
  do
  {
    int v5 = *(_DWORD *)(v2 + 32);
    BOOL v6 = v5 < v3;
    if (v5 >= v3) {
      uint64_t v7 = (uint64_t *)v2;
    }
    else {
      uint64_t v7 = (uint64_t *)(v2 + 8);
    }
    if (!v6) {
      uint64_t v4 = v2;
    }
    uint64_t v2 = *v7;
  }

  while (*v7);
  if (v4 == a1 + 8 || v3 < *(_DWORD *)(v4 + 32)) {
    return 0LL;
  }
  sub_1000087E8((uint64_t **)a1, (uint64_t *)v4);
  sub_100527B44((uint64_t *)(v4 + 40));
  operator delete((void *)v4);
  return 1LL;
}

uint64_t sub_100F0D764(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = 0x2E8BA2E8BA2E8BA3LL * ((a1[1] - *a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (0x5D1745D1745D1746LL * ((a1[2] - *a1) >> 3) > v4) {
    unint64_t v4 = 0x5D1745D1745D1746LL * ((a1[2] - *a1) >> 3);
  }
  else {
    unint64_t v6 = v4;
  }
  unsigned __int8 v14 = a1 + 2;
  if (v6) {
    uint64_t v7 = (char *)sub_100023598((uint64_t)(a1 + 2), v6);
  }
  else {
    uint64_t v7 = 0LL;
  }
  int v10 = v7;
  uint64_t v11 = &v7[88 * v3];
  id v13 = &v7[88 * v6];
  sub_100F0C318((uint64_t)(a1 + 2), (uint64_t)v11, a2);
  char v12 = v11 + 88;
  sub_100F0D888(a1, &v10);
  uint64_t v8 = a1[1];
  sub_100F0DA48(&v10);
  return v8;
}

void sub_100F0D874(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100F0D888(uint64_t *a1, void *a2)
{
  uint64_t result = sub_100F0D8FC((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_100F0D8FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&__int128 v16 = a6;
  *((void *)&v16 + 1) = a7;
  __int128 v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  void v13[2] = &v16;
  char v14 = 0;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }

  else
  {
    uint64_t v9 = a3;
    do
    {
      v9 -= 88LL;
      sub_100F0C318(a1, v7 - 88, v9);
      uint64_t v7 = *((void *)&v16 + 1) - 88LL;
      *((void *)&v16 + 1) -= 88LL;
    }

    while (v9 != a5);
    uint64_t v11 = v16;
  }

  char v14 = 1;
  sub_100F0D9C4((uint64_t)v13);
  return v11;
}

void sub_100F0D9B0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100F0D9C4(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24)) {
    sub_100F0D9F8((uint64_t *)a1);
  }
  return a1;
}

void sub_100F0D9F8(uint64_t *a1)
{
  uint64_t v1 = *(void *)(a1[2] + 8);
  uint64_t v2 = *(void *)(a1[1] + 8);
  if (v1 != v2)
  {
    uint64_t v3 = *a1;
    do
    {
      sub_100F0BBC0(v3, v1);
      v1 += 88LL;
    }

    while (v1 != v2);
  }

void **sub_100F0DA48(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void sub_100F0DA78(void *a1)
{
  uint64_t v2 = a1[1];
  for (uint64_t i = a1[2]; i != v2; uint64_t i = a1[2])
  {
    uint64_t v4 = a1[4];
    a1[2] = i - 88;
    sub_100F0BBC0(v4, i - 88);
  }

id sub_100F0DABC(void *a1)
{
  if ((objc_opt_isKindOfClass(a1, v2) & 1) != 0) {
    return sub_100F0DB08(a1);
  }
  else {
    return 0LL;
  }
}

id sub_100F0DB08(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return [a1 cppObjectPtr];
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10188C570);
    }
    uint64_t v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x8000000101364B3DLL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10188C570);
    }
    LODWORD(v_Block_object_dispose(va, 8) = 134218498;
    HIDWORD(v_Block_object_dispose(va, 8) = (_DWORD)v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10188C570);
    }
    uint64_t v6 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x8000000101364B3DLL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10188C570);
    }
    LODWORD(v_Block_object_dispose(va, 8) = 134218498;
    HIDWORD(v_Block_object_dispose(va, 8) = (_DWORD)v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  uint64_t v7 = (uint8_t *)v4;
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = std::list<CLBTLEBeaconRegion_Type::MonitoredRegi on>, Callbacuint64_t k = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:228:46)]",  "%s\n",  v4);
  if (v7 != buf) {
    free(v7);
  }
  return 0LL;
}

void sub_100F0DEB4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = a1 + 16;
  uint64_t v9 = *(void **)a1;
  if (0x2E8BA2E8BA2E8BA3LL * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3) < a4)
  {
    sub_100F0E054((void **)a1);
    if (a4 > 0x2E8BA2E8BA2E8BALL) {
      sub_100007008();
    }
    unint64_t v10 = 0x5D1745D1745D1746LL * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3);
    if (v10 <= a4) {
      unint64_t v10 = a4;
    }
    else {
      unint64_t v11 = v10;
    }
    sub_10004C510((void *)a1, v11);
    uint64_t v12 = sub_100F0C270(v8, a2, a3, *(void *)(a1 + 8));
    goto LABEL_11;
  }

  if (0x2E8BA2E8BA2E8BA3LL * ((uint64_t)(*(void *)(a1 + 8) - (void)v9) >> 3) < a4)
  {
    uint64_t v13 = a2 + 8 * ((uint64_t)(*(void *)(a1 + 8) - (void)v9) >> 3);
    sub_100F0E0C0((uint64_t)&v17, a2, v13, (uint64_t)v9);
    uint64_t v12 = sub_100F0C270(v8, v13, a3, *(void *)(a1 + 8));
LABEL_11:
    *(void *)(a1 + _Block_object_dispose(va, 8) = v12;
    return;
  }

  sub_100F0E0C0((uint64_t)&v18, a2, a3, (uint64_t)v9);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16 != v14)
  {
    do
    {
      v16 -= 88LL;
      sub_100F0BBC0(v8, v16);
    }

    while (v16 != v15);
  }

  *(void *)(a1 + _Block_object_dispose(va, 8) = v15;
}

void sub_100F0E044(_Unwind_Exception *a1)
{
  *(void *)(v1 + _Block_object_dispose(va, 8) = v2;
  _Unwind_Resume(a1);
}

void sub_100F0E04C(_Unwind_Exception *a1)
{
  *(void *)(v1 + _Block_object_dispose(va, 8) = v2;
  _Unwind_Resume(a1);
}

void sub_100F0E054(void **a1)
{
  uint64_t v1 = *a1;
  if (*a1)
  {
    uint64_t v3 = (uint64_t)a1[1];
    uint64_t v4 = *a1;
    if ((void *)v3 != v1)
    {
      do
      {
        v3 -= 88LL;
        sub_100F0BBC0((uint64_t)(a1 + 2), v3);
      }

      while ((void *)v3 != v1);
      uint64_t v4 = *a1;
    }

    a1[1] = v1;
    operator delete(v4);
    *a1 = 0LL;
    a1[1] = 0LL;
    a1[2] = 0LL;
  }

uint64_t sub_100F0E0C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 == a3) {
    return a2;
  }
  uint64_t v6 = a3;
  uint64_t v7 = 0LL;
  do
  {
    uint64_t v8 = a4 + v7;
    std::string::operator=((std::string *)(a4 + v7 + 8), (const std::string *)(a2 + v7 + 8));
    *(void *)(v8 + 32) = *(void *)(a2 + v7 + 32);
    __int128 v9 = *(_OWORD *)(a2 + v7 + 40);
    *(_WORD *)(v8 + 56) = *(_WORD *)(a2 + v7 + 56);
    *(_OWORD *)(v8 + sub_10004AD90(v3 - 40) = v9;
    if (a2 != a4) {
      sub_100741488( (void *)(v8 + 64),  *(char **)(a2 + v7 + 64),  *(char **)(a2 + v7 + 72),  *(void *)(a2 + v7 + 72) - *(void *)(a2 + v7 + 64));
    }
    v7 += 88LL;
  }

  while (a2 + v7 != v6);
  return v6;
}

uint64_t sub_100F0E54C()
{
  qword_10199F418 = 0LL;
  qword_10199F420 = 0LL;
  qword_10199F428 = 0LL;
  unsigned __int8 v0 = operator new(0x48uLL);
  qword_10199F420 = (uint64_t)v0 + 72;
  qword_10199F428 = (uint64_t)v0 + 72;
  v0[2] = xmmword_101364BC0;
  v0[3] = unk_101364BD0;
  *((void *)v0 + _Block_object_dispose(va, 8) = 0x4003333333333333LL;
  *unsigned __int8 v0 = xmmword_101364BA0;
  v0[1] = unk_101364BB0;
  qword_10199F418 = (uint64_t)v0;
  return __cxa_atexit((void (*)(void *))sub_1001AD9F0, &qword_10199F418, (void *)&_mh_execute_header);
}

void sub_100F0ECA4(id a1)
{
  qword_101934988 = (uint64_t)os_log_create("com.apple.locationd.Core", "Core");
}

void sub_100F0ED74(id a1)
{
  qword_10199F430 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLCardioChangeServiceSilo");
}

void sub_100F0EE28(id a1)
{
  if (sub_1004F7500())
  {
    unsigned __int8 v1 = 0;
    sub_1012049AC(v2, "CardioChangeServiceEnabled", &v1, 0);
    if (v2[1]) {
      byte_10199F440 = 1;
    }
  }

void sub_100F0F3E0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
}

void sub_100F0F41C(uint64_t *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X2>, void *a4@<X3>, void *a5@<X8>)
{
  unint64_t v10 = operator new(0x80uLL);
  unint64_t v11 = v10;
  uint64_t v12 = (std::__shared_weak_count *)a1[1];
  uint64_t v45 = *a1;
  int v46 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      unint64_t v14 = __ldxr(p_shared_owners);
    while (__stxr(v14 + 1, p_shared_owners));
  }

  uint64_t v15 = (std::__shared_weak_count *)a2[1];
  uint64_t v43 = *a2;
  BOOL v44 = v15;
  if (v15)
  {
    uint64_t v16 = (unint64_t *)&v15->__shared_owners_;
    do
      unint64_t v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
  }

  char v18 = (std::__shared_weak_count *)a3[1];
  if (*a3) {
    uint64_t v19 = *a3 + 448LL;
  }
  else {
    uint64_t v19 = 0LL;
  }
  uint64_t v41 = v19;
  uint64_t v42 = v18;
  if (v18)
  {
    int v20 = (unint64_t *)&v18->__shared_owners_;
    do
      unint64_t v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
  }

  int v22 = (std::__shared_weak_count *)a4[1];
  if (*a4) {
    uint64_t v23 = *a4 + 464LL;
  }
  else {
    uint64_t v23 = 0LL;
  }
  uint64_t v39 = v23;
  int v40 = v22;
  if (v22)
  {
    uint64_t v24 = (unint64_t *)&v22->__shared_owners_;
    do
      unint64_t v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
  }

  v26.n128_f64[0] = sub_100FBAD7C((uint64_t)v10, &v45, &v43, &v41, &v39);
  *a5 = v11;
  uint64_t v27 = v40;
  if (v40)
  {
    int v28 = (unint64_t *)&v40->__shared_owners_;
    do
      unint64_t v29 = __ldaxr(v28);
    while (__stlxr(v29 - 1, v28));
    if (!v29)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v27->__on_zero_shared)(v27, v26);
      std::__shared_weak_count::__release_weak(v27);
    }
  }

  int v30 = v42;
  if (v42)
  {
    BOOL v31 = (unint64_t *)&v42->__shared_owners_;
    do
      unint64_t v32 = __ldaxr(v31);
    while (__stlxr(v32 - 1, v31));
    if (!v32)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v30->__on_zero_shared)(v30, v26);
      std::__shared_weak_count::__release_weak(v30);
    }
  }

  uint64_t v33 = v44;
  if (v44)
  {
    uint64_t v34 = (unint64_t *)&v44->__shared_owners_;
    do
      unint64_t v35 = __ldaxr(v34);
    while (__stlxr(v35 - 1, v34));
    if (!v35)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v33->__on_zero_shared)(v33, v26);
      std::__shared_weak_count::__release_weak(v33);
    }
  }

  uint64_t v36 = v46;
  if (v46)
  {
    int v37 = (unint64_t *)&v46->__shared_owners_;
    do
      unint64_t v38 = __ldaxr(v37);
    while (__stlxr(v38 - 1, v37));
    if (!v38)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v36->__on_zero_shared)(v36, v26);
      std::__shared_weak_count::__release_weak(v36);
    }
  }

void sub_100F0F600( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, char a13, uint64_t a14, char a15)
{
}

id sub_100F0F634(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return _[a4 onNatalimetryNotification:a2 data:a3];
}

void sub_100F0F92C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
}

void sub_100F0F940(void **a1, double a2)
{
  if (a2 >= 0.0)
  {
    __int128 v9 = a1[2];
    uint64_t v7 = (uint64_t)(a1 + 2);
    uint64_t v8 = v9;
    unint64_t v10 = *(void *)(v7 - 8);
    if (v10 >= (unint64_t)v9)
    {
      unint64_t v12 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v10 - (void)*a1) >> 3);
      unint64_t v13 = v12 + 1;
      if (v12 + 1 > 0xAAAAAAAAAAAAAAALL) {
        sub_100007008();
      }
      unint64_t v14 = 0xAAAAAAAAAAAAAAABLL * ((v8 - (_BYTE *)*a1) >> 3);
      if (2 * v14 > v13) {
        unint64_t v13 = 2 * v14;
      }
      if (v14 >= 0x555555555555555LL) {
        unint64_t v15 = 0xAAAAAAAAAAAAAAALL;
      }
      else {
        unint64_t v15 = v13;
      }
      if (v15) {
        uint64_t v16 = (char *)sub_10000701C(v7, v15);
      }
      else {
        uint64_t v16 = 0LL;
      }
      unint64_t v17 = &v16[24 * v12];
      char v18 = &v16[24 * v15];
      *(double *)unint64_t v17 = a2;
      *((void *)v17 + 1) = 0x7FEFFFFFFFFFFFFFLL;
      v17[16] = 0;
      unint64_t v11 = v17 + 24;
      int v20 = (char *)*a1;
      uint64_t v19 = (char *)a1[1];
      if (v19 != *a1)
      {
        do
        {
          __int128 v21 = *(_OWORD *)(v19 - 24);
          *(v17 - _Block_object_dispose(va, 8) = *(v19 - 8);
          *(_OWORD *)(v17 - 24) = v21;
          v17 -= 24;
          v19 -= 24;
        }

        while (v19 != v20);
        uint64_t v19 = (char *)*a1;
      }

      *a1 = v17;
      a1[1] = v11;
      a1[2] = v18;
      if (v19) {
        operator delete(v19);
      }
    }

    else
    {
      *(double *)unint64_t v10 = a2;
      *(void *)(v10 + _Block_object_dispose(va, 8) = 0x7FEFFFFFFFFFFFFFLL;
      *(_BYTE *)(v10 + 16) = 0;
      unint64_t v11 = (char *)(v10 + 24);
    }

    a1[1] = v11;
  }

  else
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10188C7D0);
    }
    uint64_t v3 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134349056;
      double v25 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_FAULT,  "Programmer error, this expiration rule with time %{public}fis not valid.",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10188C7D0);
      }
      int v22 = 134349056;
      double v23 = a2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Programmer error, this expiration rule with time %{public}fis not valid.",  &v22,  12);
      uint64_t v5 = (uint8_t *)v4;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLActivityAggregator<CLCardioChange::EstimateResult, CLActivityDB::ClassBDataProtectionPolicy>::setExpirati onRule(CFTimeInterval) [T = CLCardioChange::EstimateResult, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v4);
      if (v5 != buf) {
        free(v5);
      }
    }
  }

void sub_100F0FBF4(void **a1, double a2)
{
  if (a2 >= 0.0)
  {
    __int128 v9 = a1[2];
    uint64_t v7 = (uint64_t)(a1 + 2);
    uint64_t v8 = v9;
    unint64_t v10 = *(void *)(v7 - 8);
    if (v10 >= (unint64_t)v9)
    {
      unint64_t v12 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v10 - (void)*a1) >> 3);
      unint64_t v13 = v12 + 1;
      if (v12 + 1 > 0xAAAAAAAAAAAAAAALL) {
        sub_100007008();
      }
      unint64_t v14 = 0xAAAAAAAAAAAAAAABLL * ((v8 - (_BYTE *)*a1) >> 3);
      if (2 * v14 > v13) {
        unint64_t v13 = 2 * v14;
      }
      if (v14 >= 0x555555555555555LL) {
        unint64_t v15 = 0xAAAAAAAAAAAAAAALL;
      }
      else {
        unint64_t v15 = v13;
      }
      if (v15) {
        uint64_t v16 = (char *)sub_10000701C(v7, v15);
      }
      else {
        uint64_t v16 = 0LL;
      }
      unint64_t v17 = &v16[24 * v12];
      char v18 = &v16[24 * v15];
      *(double *)unint64_t v17 = a2;
      *((void *)v17 + 1) = 0x7FEFFFFFFFFFFFFFLL;
      v17[16] = 0;
      unint64_t v11 = v17 + 24;
      int v20 = (char *)*a1;
      uint64_t v19 = (char *)a1[1];
      if (v19 != *a1)
      {
        do
        {
          __int128 v21 = *(_OWORD *)(v19 - 24);
          *(v17 - _Block_object_dispose(va, 8) = *(v19 - 8);
          *(_OWORD *)(v17 - 24) = v21;
          v17 -= 24;
          v19 -= 24;
        }

        while (v19 != v20);
        uint64_t v19 = (char *)*a1;
      }

      *a1 = v17;
      a1[1] = v11;
      a1[2] = v18;
      if (v19) {
        operator delete(v19);
      }
    }

    else
    {
      *(double *)unint64_t v10 = a2;
      *(void *)(v10 + _Block_object_dispose(va, 8) = 0x7FEFFFFFFFFFFFFFLL;
      *(_BYTE *)(v10 + 16) = 0;
      unint64_t v11 = (char *)(v10 + 24);
    }

    a1[1] = v11;
  }

  else
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10188C7D0);
    }
    uint64_t v3 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134349056;
      double v25 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_FAULT,  "Programmer error, this expiration rule with time %{public}fis not valid.",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10188C7D0);
      }
      int v22 = 134349056;
      double v23 = a2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Programmer error, this expiration rule with time %{public}fis not valid.",  &v22,  12);
      uint64_t v5 = (uint8_t *)v4;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLActivityAggregator<CLCardioChange::AggregateFeatureEntry, CLActivityDB::ClassBDataProtectionPolicy>::setE xpirationRule(CFTimeInterval) [T = CLCardioChange::AggregateFeatureEntry, DataProtectionPolicy = CLActivityDB::C lassBDataProtectionPolicy]",  "%s\n",  v4);
      if (v5 != buf) {
        free(v5);
      }
    }
  }

uint64_t sub_100F0FEA8(uint64_t a1)
{
  if (qword_101934760 != -1) {
    dispatch_once(&qword_101934760, &stru_10188C710);
  }
  uint64_t v2 = (os_log_s *)qword_101934768;
  if (os_log_type_enabled((os_log_t)qword_101934768, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Aggregating CardioChange db records", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934760 != -1) {
      dispatch_once(&qword_101934760, &stru_10188C710);
    }
    v6[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934768,  0LL,  "Aggregating CardioChange db records",  v6,  2);
    uint64_t v5 = (uint8_t *)v4;
    sub_10029211C("Generic", 1LL, 0, 2LL, "-[CLCardioChangeService setUpAggregationOnTimer]_block_invoke", "%s\n", v4);
    if (v5 != buf) {
      free(v5);
    }
  }

  sub_100F10060(*(void *)(*(void *)(a1 + 32) + 40LL));
  return sub_100F105D4(*(void *)(*(void *)(a1 + 32) + 48LL));
}

uint64_t sub_100F10060(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 40)) {
    return (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 24) + 32LL))(*(void *)(a1 + 24), a1);
  }
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10188C7D0);
  }
  uint64_t v2 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    double v3 = sub_101171D38();
    int v4 = *(_DWORD *)(*(void *)(a1 + 24) + 132LL);
    *(_DWORD *)std::stringbuf::string_type buf = 134218240;
    *(double *)uint64_t v36 = v3;
    *(_WORD *)&v36[8] = 1024;
    int v37 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "Aggregating records start %f, count ~%d",  buf,  0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10188C7D0);
    }
    uint64_t v16 = qword_101934A78;
    double v17 = sub_101171D38();
    int v18 = *(_DWORD *)(*(void *)(a1 + 24) + 132LL);
    int v32 = 134218240;
    *(double *)uint64_t v33 = v17;
    *(_WORD *)&_BYTE v33[8] = 1024;
    int v34 = v18;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v16,  2LL,  "Aggregating records start %f, count ~%d",  COERCE_DOUBLE(&v32),  18);
    int v20 = (uint8_t *)v19;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "long CLActivityAggregator<CLCardioChange::EstimateResult, CLActivityDB::ClassBDataProtectionPolicy>::aggregateReco rds() [T = CLCardioChange::EstimateResult, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v19);
    if (v20 != buf) {
      free(v20);
    }
  }

  uint64_t v5 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 24) + 32LL))(*(void *)(a1 + 24), a1);
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10188C7D0);
  }
  uint64_t v6 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    double v7 = sub_101171D38();
    int v8 = *(_DWORD *)(*(void *)(a1 + 24) + 132LL);
    *(_DWORD *)std::stringbuf::string_type buf = 134218240;
    *(double *)uint64_t v36 = v7;
    *(_WORD *)&v36[8] = 1024;
    int v37 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "Aggregating records stop %f, count ~%d",  buf,  0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10188C7D0);
    }
    uint64_t v21 = qword_101934A78;
    double v22 = sub_101171D38();
    int v23 = *(_DWORD *)(*(void *)(a1 + 24) + 132LL);
    int v32 = 134218240;
    *(double *)uint64_t v33 = v22;
    *(_WORD *)&_BYTE v33[8] = 1024;
    int v34 = v23;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v21,  2LL,  "Aggregating records stop %f, count ~%d",  COERCE_DOUBLE(&v32),  18);
    double v25 = (uint8_t *)v24;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "long CLActivityAggregator<CLCardioChange::EstimateResult, CLActivityDB::ClassBDataProtectionPolicy>::aggregateReco rds() [T = CLCardioChange::EstimateResult, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v24);
    if (v25 != buf) {
      free(v25);
    }
  }

  uint64_t v9 = *(void *)(a1 + 24);
  double v10 = (double)*(int *)(v9 + 132);
  if ((double)(int)sub_100F15814(v9, (double **)a1) * 1.2 < v10)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10188C7D0);
    }
    unint64_t v11 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v12 = *(void *)(a1 + 24);
      int v13 = *(_DWORD *)(v12 + 132);
      int v14 = sub_100F15814(v12, (double **)a1);
      *(_DWORD *)std::stringbuf::string_type buf = 67109376;
      *(_DWORD *)uint64_t v36 = v13;
      *(_WORD *)&v36[4] = 1024;
      *(_DWORD *)&v36[6] = v14;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "#Warning Number of records after aggregation is %d and it greatly exceeds the number of records estimated to be needed %d",  buf,  0xEu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10188C7D0);
      }
      uint64_t v26 = qword_101934A78;
      uint64_t v27 = *(void *)(a1 + 24);
      int v28 = *(_DWORD *)(v27 + 132);
      int v29 = sub_100F15814(v27, (double **)a1);
      int v32 = 67109376;
      *(_DWORD *)uint64_t v33 = v28;
      *(_WORD *)&v33[4] = 1024;
      *(_DWORD *)&double v33[6] = v29;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v26,  0LL,  "#Warning Number of records after aggregation is %d and it greatly exceeds the number of records estimated to be needed %d",  &v32,  14);
      BOOL v31 = (uint8_t *)v30;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "long CLActivityAggregator<CLCardioChange::EstimateResult, CLActivityDB::ClassBDataProtectionPolicy>::aggregateRe cords() [T = CLCardioChange::EstimateResult, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v30);
      if (v31 != buf) {
        free(v31);
      }
    }
  }

  return v5;
}

uint64_t sub_100F105D4(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 40)) {
    return (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 24) + 32LL))(*(void *)(a1 + 24), a1);
  }
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10188C7D0);
  }
  uint64_t v2 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    double v3 = sub_101171D38();
    int v4 = *(_DWORD *)(*(void *)(a1 + 24) + 132LL);
    *(_DWORD *)std::stringbuf::string_type buf = 134218240;
    *(double *)uint64_t v36 = v3;
    *(_WORD *)&v36[8] = 1024;
    int v37 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "Aggregating records start %f, count ~%d",  buf,  0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10188C7D0);
    }
    uint64_t v16 = qword_101934A78;
    double v17 = sub_101171D38();
    int v18 = *(_DWORD *)(*(void *)(a1 + 24) + 132LL);
    int v32 = 134218240;
    *(double *)uint64_t v33 = v17;
    *(_WORD *)&_BYTE v33[8] = 1024;
    int v34 = v18;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v16,  2LL,  "Aggregating records start %f, count ~%d",  COERCE_DOUBLE(&v32),  18);
    int v20 = (uint8_t *)v19;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "long CLActivityAggregator<CLCardioChange::AggregateFeatureEntry, CLActivityDB::ClassBDataProtectionPolicy>::aggreg ateRecords() [T = CLCardioChange::AggregateFeatureEntry, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v19);
    if (v20 != buf) {
      free(v20);
    }
  }

  uint64_t v5 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 24) + 32LL))(*(void *)(a1 + 24), a1);
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10188C7D0);
  }
  uint64_t v6 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    double v7 = sub_101171D38();
    int v8 = *(_DWORD *)(*(void *)(a1 + 24) + 132LL);
    *(_DWORD *)std::stringbuf::string_type buf = 134218240;
    *(double *)uint64_t v36 = v7;
    *(_WORD *)&v36[8] = 1024;
    int v37 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "Aggregating records stop %f, count ~%d",  buf,  0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10188C7D0);
    }
    uint64_t v21 = qword_101934A78;
    double v22 = sub_101171D38();
    int v23 = *(_DWORD *)(*(void *)(a1 + 24) + 132LL);
    int v32 = 134218240;
    *(double *)uint64_t v33 = v22;
    *(_WORD *)&_BYTE v33[8] = 1024;
    int v34 = v23;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v21,  2LL,  "Aggregating records stop %f, count ~%d",  COERCE_DOUBLE(&v32),  18);
    double v25 = (uint8_t *)v24;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "long CLActivityAggregator<CLCardioChange::AggregateFeatureEntry, CLActivityDB::ClassBDataProtectionPolicy>::aggreg ateRecords() [T = CLCardioChange::AggregateFeatureEntry, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v24);
    if (v25 != buf) {
      free(v25);
    }
  }

  uint64_t v9 = *(void *)(a1 + 24);
  double v10 = (double)*(int *)(v9 + 132);
  if ((double)(int)sub_100F15A10(v9, (double **)a1) * 1.2 < v10)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10188C7D0);
    }
    unint64_t v11 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v12 = *(void *)(a1 + 24);
      int v13 = *(_DWORD *)(v12 + 132);
      int v14 = sub_100F15A10(v12, (double **)a1);
      *(_DWORD *)std::stringbuf::string_type buf = 67109376;
      *(_DWORD *)uint64_t v36 = v13;
      *(_WORD *)&v36[4] = 1024;
      *(_DWORD *)&v36[6] = v14;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "#Warning Number of records after aggregation is %d and it greatly exceeds the number of records estimated to be needed %d",  buf,  0xEu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10188C7D0);
      }
      uint64_t v26 = qword_101934A78;
      uint64_t v27 = *(void *)(a1 + 24);
      int v28 = *(_DWORD *)(v27 + 132);
      int v29 = sub_100F15A10(v27, (double **)a1);
      int v32 = 67109376;
      *(_DWORD *)uint64_t v33 = v28;
      *(_WORD *)&v33[4] = 1024;
      *(_DWORD *)&double v33[6] = v29;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v26,  0LL,  "#Warning Number of records after aggregation is %d and it greatly exceeds the number of records estimated to be needed %d",  &v32,  14);
      BOOL v31 = (uint8_t *)v30;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "long CLActivityAggregator<CLCardioChange::AggregateFeatureEntry, CLActivityDB::ClassBDataProtectionPolicy>::aggr egateRecords() [T = CLCardioChange::AggregateFeatureEntry, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v30);
      if (v31 != buf) {
        free(v31);
      }
    }
  }

  return v5;
}

void sub_100F115B0(uint64_t a1, xpc_activity_t activity)
{
  if (xpc_activity_get_state(activity))
  {
    [*(id *)(a1 + 32) onChangeEstimationActivity:activity];
    if (xpc_activity_get_state(activity) == 2 && !xpc_activity_set_state(activity, 4LL))
    {
      if (qword_101934760 != -1) {
        dispatch_once(&qword_101934760, &stru_10188C710);
      }
      int v4 = (os_log_s *)qword_101934768;
      if (os_log_type_enabled((os_log_t)qword_101934768, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 134349056;
        os_activity_scope_state_s state = (const char *)xpc_activity_get_state(activity);
        _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_FAULT,  "Failed to mark CardioChangeEstimation activity as Continue. Current state is %{public}ld",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934760 != -1) {
          dispatch_once(&qword_101934760, &stru_10188C710);
        }
        uint64_t v5 = qword_101934768;
        int v21 = 134349056;
        double v22 = (const char *)xpc_activity_get_state(activity);
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v5,  17LL,  "Failed to mark CardioChangeEstimation activity as Continue. Current state is %{public}ld",  &v21,  12);
        double v7 = (uint8_t *)v6;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "-[CLCardioChangeService scheduleChangeEstimation]_block_invoke",  "%s\n",  v6);
        if (v7 != buf) {
          free(v7);
        }
      }
    }
  }

  else
  {
    xpc_object_t v8 = xpc_activity_copy_criteria(activity);
    if (!v8) {
      xpc_object_t v8 = xpc_dictionary_create(0LL, 0LL, 0LL);
    }
    int64_t int64 = xpc_dictionary_get_int64(v8, XPC_ACTIVITY_DELAY);
    if (int64 == *(void *)(a1 + 40))
    {
      if (qword_101934760 != -1) {
        dispatch_once(&qword_101934760, &stru_10188C710);
      }
      double v10 = (os_log_s *)qword_101934768;
      if (os_log_type_enabled((os_log_t)qword_101934768, OS_LOG_TYPE_DEFAULT))
      {
        unint64_t v11 = *(const char **)(a1 + 40);
        *(_DWORD *)std::stringbuf::string_type buf = 134349056;
        os_activity_scope_state_s state = v11;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "XPC_CHECK_IN: CardioChangeEstimation already scheduled with a delay of %{public}lld seconds",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934760 != -1) {
          dispatch_once(&qword_101934760, &stru_10188C710);
        }
        uint64_t v12 = *(const char **)(a1 + 40);
        int v21 = 134349056;
        double v22 = v12;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934768,  0LL,  "XPC_CHECK_IN: CardioChangeEstimation already scheduled with a delay of %{public}lld seconds",  &v21,  12);
        int v14 = (uint8_t *)v13;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[CLCardioChangeService scheduleChangeEstimation]_block_invoke",  "%s\n",  v13);
        if (v14 != buf) {
          free(v14);
        }
      }
    }

    else
    {
      int64_t v15 = int64;
      if (qword_101934760 != -1) {
        dispatch_once(&qword_101934760, &stru_10188C710);
      }
      uint64_t v16 = (os_log_s *)qword_101934768;
      if (os_log_type_enabled((os_log_t)qword_101934768, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v17 = *(void *)(a1 + 40);
        *(_DWORD *)std::stringbuf::string_type buf = 136446722;
        os_activity_scope_state_s state = "com.apple.locationd.CardioChange.Processing";
        __int16 v29 = 2050;
        int64_t v30 = v15;
        __int16 v31 = 2050;
        uint64_t v32 = v17;
        _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "XPC_CHECK_IN: %{public}s: Overwriting previous delay (%{public}lld) with a new delay of %{public}lld seconds",  buf,  0x20u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934760 != -1) {
          dispatch_once(&qword_101934760, &stru_10188C710);
        }
        uint64_t v18 = *(void *)(a1 + 40);
        int v21 = 136446722;
        double v22 = "com.apple.locationd.CardioChange.Processing";
        __int16 v23 = 2050;
        int64_t v24 = v15;
        __int16 v25 = 2050;
        uint64_t v26 = v18;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934768,  0LL,  "XPC_CHECK_IN: %{public}s: Overwriting previous delay (%{public}lld) with a new delay of %{public}lld seconds",  &v21,  32);
        int v20 = (uint8_t *)v19;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[CLCardioChangeService scheduleChangeEstimation]_block_invoke",  "%s\n",  v19);
        if (v20 != buf) {
          free(v20);
        }
      }

      xpc_dictionary_set_int64(v8, XPC_ACTIVITY_DELAY, *(void *)(a1 + 40));
      xpc_dictionary_set_int64(v8, XPC_ACTIVITY_GRACE_PERIOD, XPC_ACTIVITY_INTERVAL_1_HOUR);
      xpc_dictionary_set_string(v8, XPC_ACTIVITY_PRIORITY, XPC_ACTIVITY_PRIORITY_UTILITY);
      xpc_dictionary_set_BOOL(v8, XPC_ACTIVITY_REQUIRES_CLASS_B, 1);
      xpc_dictionary_set_BOOL(v8, XPC_ACTIVITY_ALLOW_BATTERY, 1);
      xpc_activity_set_criteria(activity, v8);
    }

    xpc_release(v8);
  }

id sub_100F11DC4(uint64_t a1, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
  {
    sub_100FBAD80(*(void *)(*(void *)(a1 + 40) + 120LL), a3, (uint64_t)v9);
    [*(id *)(a1 + 40) logAnalytics:v9];
    if (v10 == 1)
    {
      if (qword_101934760 != -1) {
        dispatch_once(&qword_101934760, &stru_10188C710);
      }
      int v4 = (os_log_s *)qword_101934768;
      if (os_log_type_enabled((os_log_t)qword_101934768, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "CLCardioChangeService: Change detected. Firing alarm and notifying watch.",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934760 != -1) {
          dispatch_once(&qword_101934760, &stru_10188C710);
        }
        v8[0] = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934768,  0LL,  "CLCardioChangeService: Change detected. Firing alarm and notifying watch.",  v8,  2);
        double v7 = (uint8_t *)v6;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[CLCardioChangeService executeCardioChangeEstimation:]_block_invoke",  "%s\n",  v6);
        if (v7 != buf) {
          free(v7);
        }
      }

      objc_msgSend( objc_msgSend( objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "universe"), "vendor"),  "proxyForService:",  @"CLCompanionNotifier"),  "doAsync:",  &stru_10188C640);
    }

    sub_10120AA44(buf, "CardioChangeActivityInterval", &XPC_ACTIVITY_INTERVAL_7_DAYS, 0);
    return [*(id *)(a1 + 40) resetCardioChangeEstimationActivity:*(void *)(a1 + 32) withDelay:v12];
  }

  else
  {
    id result = (id)xpc_activity_get_state(*(xpc_activity_t *)(a1 + 32));
    if (result != (id)3) {
      return [*(id *)(a1 + 40) resetCardioChangeEstimationActivity:*(void *)(a1 + 32) withDelay:XPC_ACTIVITY_INTERVAL_1_HOUR];
    }
  }

  return result;
}

void sub_100F1202C(id a1, void *a2)
{
}

uint64_t sub_100F12074(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result)
  {
    uint64_t result = xpc_activity_should_defer((xpc_activity_t)result);
    if ((_DWORD)result)
    {
      xpc_activity_state_t state = xpc_activity_get_state(*(xpc_activity_t *)(a1 + 32));
      if (state == 3 || (xpc_activity_state_t v4 = state, xpc_activity_set_state(*(xpc_activity_t *)(a1 + 32), 3LL)))
      {
        if (qword_101934760 != -1) {
          dispatch_once(&qword_101934760, &stru_10188C710);
        }
        uint64_t v5 = (os_log_s *)qword_101934768;
        if (os_log_type_enabled((os_log_t)qword_101934768, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)std::stringbuf::string_type buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "#warning: Activity deferred", buf, 2u);
        }

        if (!sub_1002921D0(115, 2)) {
          return 1LL;
        }
        bzero(buf, 0x65CuLL);
        if (qword_101934760 != -1) {
          dispatch_once(&qword_101934760, &stru_10188C710);
        }
        LOWORD(v12) = 0;
        double v6 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934768,  1LL,  "#warning: Activity deferred",  &v12,  2);
        xpc_object_t v8 = v7;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[CLCardioChangeService executeCardioChangeEstimation:]_block_invoke",  "%s\n",  v6);
      }

      else
      {
        if (qword_101934760 != -1) {
          dispatch_once(&qword_101934760, &stru_10188C710);
        }
        uint64_t v9 = (os_log_s *)qword_101934768;
        if (os_log_type_enabled((os_log_t)qword_101934768, OS_LOG_TYPE_FAULT))
        {
          *(_DWORD *)std::stringbuf::string_type buf = 134349056;
          xpc_activity_state_t v15 = v4;
          _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_FAULT,  "Failed to mark activity as Deferred. Current state is %{public}ld",  buf,  0xCu);
        }

        if (!sub_1002921D0(115, 0)) {
          return 1LL;
        }
        bzero(buf, 0x65CuLL);
        if (qword_101934760 != -1) {
          dispatch_once(&qword_101934760, &stru_10188C710);
        }
        int v12 = 134349056;
        xpc_activity_state_t v13 = v4;
        double v10 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934768,  17LL,  "Failed to mark activity as Deferred. Current state is %{public}ld",  &v12,  12);
        xpc_object_t v8 = v11;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "-[CLCardioChangeService executeCardioChangeEstimation:]_block_invoke",  "%s\n",  v10);
      }

      if (v8 != buf) {
        free(v8);
      }
      return 1LL;
    }
  }

  return result;
}

void sub_100F128B4(uint64_t a1, _xpc_activity_s *a2)
{
  if (qword_101934760 != -1) {
    dispatch_once(&qword_101934760, &stru_10188C710);
  }
  xpc_activity_state_t v4 = (os_log_s *)qword_101934768;
  if (os_log_type_enabled((os_log_t)qword_101934768, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 134349056;
    xpc_activity_state_t state = xpc_activity_get_state(a2);
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_INFO,  "AggregateFeatureComputeActivity timer fired (%{public}ld)",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934760 != -1) {
      dispatch_once(&qword_101934760, &stru_10188C710);
    }
    uint64_t v7 = qword_101934768;
    int v15 = 134349056;
    xpc_activity_state_t v16 = xpc_activity_get_state(a2);
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v7,  1LL,  "AggregateFeatureComputeActivity timer fired (%{public}ld)",  &v15,  12);
    uint64_t v9 = (uint8_t *)v8;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[CLCardioChangeService scheduleDailyAggregateFeatureCompute]_block_invoke",  "%s\n",  v8);
    if (v9 != buf) {
      free(v9);
    }
  }

  [*(id *)(a1 + 32) onDailyAggregateFeatureComputeActivity:a2];
  if (xpc_activity_get_state(a2) == 2 && !xpc_activity_set_state(a2, 4LL))
  {
    if (qword_101934760 != -1) {
      dispatch_once(&qword_101934760, &stru_10188C710);
    }
    uint64_t v5 = (os_log_s *)qword_101934768;
    if (os_log_type_enabled((os_log_t)qword_101934768, OS_LOG_TYPE_FAULT))
    {
      xpc_activity_state_t v6 = xpc_activity_get_state(a2);
      *(_DWORD *)std::stringbuf::string_type buf = 134349056;
      xpc_activity_state_t state = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_FAULT,  "Failed to mark activity as Continue. Current state is %{public}ld",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934760 != -1) {
        dispatch_once(&qword_101934760, &stru_10188C710);
      }
      uint64_t v10 = qword_101934768;
      xpc_activity_state_t v11 = xpc_activity_get_state(a2);
      int v15 = 134349056;
      xpc_activity_state_t v16 = v11;
      LODWORD(v14) = 12;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v10,  17LL,  "Failed to mark activity as Continue. Current state is %{public}ld",  &v15,  v14);
      xpc_activity_state_t v13 = (uint8_t *)v12;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "-[CLCardioChangeService scheduleDailyAggregateFeatureCompute]_block_invoke",  "%s\n",  v12);
      if (v13 != buf) {
        free(v13);
      }
    }
  }

void sub_100F1354C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, void *a18)
{
}

void sub_100F13C60(id a1, void *a2)
{
}

void sub_100F14960(_Unwind_Exception *a1)
{
}

NSDictionary *sub_100F14990(uint64_t a1)
{
  v21[0] = @"age_bin";
  float v2 = *(float *)(*(void *)(a1 + 32) + 68LL);
  uint64_t v19 = 0LL;
  uint64_t v20 = 0LL;
  uint64_t v18 = 0LL;
  sub_10001B72C(&v18, (const void *)qword_10199F450, unk_10199F458, (unk_10199F458 - qword_10199F450) >> 2);
  if (v19 == v18)
  {
    unint64_t v3 = 0LL;
  }

  else
  {
    unint64_t v3 = 0LL;
    unint64_t v4 = (v19 - (_BYTE *)v18) >> 2;
    if (v4 <= 1) {
      unint64_t v4 = 1LL;
    }
    while (*((float *)v18 + v3) < v2)
    {
      if (v4 == ++v3)
      {
        unint64_t v3 = v4;
        break;
      }
    }
  }

  v22[0] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v3);
  v21[1] = @"gender";
  v22[1] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(*(void *)(a1 + 32) + 64LL));
  _DWORD v21[2] = @"useBetaBlocker";
  _DWORD v22[2] = +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  *(unsigned __int8 *)(*(void *)(a1 + 32) + 76LL));
  __int128 v21[3] = @"userBMI_bin";
  float v5 = *(float *)(*(void *)(a1 + 32) + 72LL);
  xpc_activity_state_t v16 = 0LL;
  uint64_t v17 = 0LL;
  std::string __p = 0LL;
  sub_10001B72C(&__p, (const void *)qword_10199F470, unk_10199F478, (unk_10199F478 - qword_10199F470) >> 2);
  if (v16 == __p)
  {
    unint64_t v6 = 0LL;
  }

  else
  {
    unint64_t v6 = 0LL;
    unint64_t v7 = (v16 - (_BYTE *)__p) >> 2;
    if (v7 <= 1) {
      unint64_t v7 = 1LL;
    }
    while (*((float *)__p + v6) < v5)
    {
      if (v7 == ++v6)
      {
        unint64_t v6 = v7;
        break;
      }
    }
  }

  v22[3] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v6);
  void v21[4] = @"EstimateStatus";
  v22[4] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 32) + 80LL));
  v21[5] = @"avgFromClusterVo2Max";
  LODWORD(v_Block_object_dispose(va, 8) = *(_DWORD *)(*(void *)(a1 + 32) + 84LL);
  v22[5] = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:", v8);
  v21[6] = @"vo2max";
  v22[6] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 32) + 88LL));
  v21[7] = @"likelihoodRatio";
  LODWORD(v9) = *(_DWORD *)(*(void *)(a1 + 32) + 92LL);
  v22[7] = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:", v9);
  v21[8] = @"maxAcceptedChange";
  LODWORD(sub_10004B64C(v11, v10) = *(_DWORD *)(*(void *)(a1 + 32) + 96LL);
  _WORD v22[8] = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:", v10);
  v21[9] = @"minConfidenceRatio";
  LODWORD(v11) = *(_DWORD *)(*(void *)(a1 + 32) + 100LL);
  v22[9] = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:", v11);
  v21[10] = @"slope";
  LODWORD(v12) = *(_DWORD *)(*(void *)(a1 + 32) + 104LL);
  v22[10] = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:", v12);
  v21[11] = @"numClustersContributed";
  v22[11] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 32) + 108LL));
  xpc_activity_state_t v13 = +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v22,  v21,  12LL);
  if (__p)
  {
    xpc_activity_state_t v16 = __p;
    operator delete(__p);
  }

  if (v18)
  {
    uint64_t v19 = v18;
    operator delete(v18);
  }

  return v13;
}

void sub_100F14CC0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

void sub_100F1509C(_Unwind_Exception *a1)
{
}

NSDictionary *sub_100F150DC(uint64_t a1)
{
  uint64_t v21 = 0LL;
  v22[0] = @"age";
  float v2 = *(float *)(a1 + 124);
  uint64_t v19 = 0LL;
  uint64_t v20 = 0LL;
  sub_10001B72C(&v19, (const void *)qword_10199F490, unk_10199F498, (unk_10199F498 - qword_10199F490) >> 2);
  if (v20 == v19)
  {
    unint64_t v3 = 0LL;
  }

  else
  {
    unint64_t v3 = 0LL;
    unint64_t v4 = (v20 - (_BYTE *)v19) >> 2;
    if (v4 <= 1) {
      unint64_t v4 = 1LL;
    }
    while (*((float *)v19 + v3) < v2)
    {
      if (v4 == ++v3)
      {
        unint64_t v3 = v4;
        break;
      }
    }
  }

  v23[0] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v3);
  v22[1] = @"height_m";
  float v5 = *(float *)(a1 + 112);
  uint64_t v17 = 0LL;
  uint64_t v18 = 0LL;
  xpc_activity_state_t v16 = 0LL;
  sub_10001B72C(&v16, (const void *)qword_10199F4B0, unk_10199F4B8, (unk_10199F4B8 - qword_10199F4B0) >> 2);
  if (v17 == v16)
  {
    unint64_t v6 = 0LL;
  }

  else
  {
    unint64_t v6 = 0LL;
    unint64_t v7 = (v17 - (_BYTE *)v16) >> 2;
    if (v7 <= 1) {
      unint64_t v7 = 1LL;
    }
    while (*((float *)v16 + v6) < v5)
    {
      if (v7 == ++v6)
      {
        unint64_t v6 = v7;
        break;
      }
    }
  }

  v23[1] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v6);
  _DWORD v22[2] = @"sex_female";
  void v23[2] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 108));
  v22[3] = @"weight_kg";
  float v8 = *(float *)(a1 + 116);
  uint64_t v14 = 0LL;
  uint64_t v15 = 0LL;
  std::string __p = 0LL;
  sub_10001B72C(&__p, (const void *)qword_10199F4D0, unk_10199F4D8, (unk_10199F4D8 - qword_10199F4D0) >> 2);
  if (v14 == __p)
  {
    unint64_t v9 = 0LL;
  }

  else
  {
    unint64_t v9 = 0LL;
    unint64_t v10 = (v14 - (_BYTE *)__p) >> 2;
    if (v10 <= 1) {
      unint64_t v10 = 1LL;
    }
    while (*((float *)__p + v9) < v8)
    {
      if (v10 == ++v9)
      {
        unint64_t v9 = v10;
        break;
      }
    }
  }

  v23[3] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v9);
  v22[4] = @"sessionvo2max_dailymean_window0to90_mean";
  v23[4] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", *(double *)(a1 + 40));
  v22[5] = @"sessionhrrecovery_dailyMean_window0To90_mean";
  v23[5] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", *(double *)(a1 + 48));
  double v11 = +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v23,  v22,  6LL);
  if (__p)
  {
    uint64_t v14 = __p;
    operator delete(__p);
  }

  if (v16)
  {
    uint64_t v17 = v16;
    operator delete(v16);
  }

  if (v19)
  {
    uint64_t v20 = v19;
    operator delete(v19);
  }

  return v11;
}

void sub_100F1536C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
}

void sub_100F15540(id a1)
{
  qword_1019344B8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Motion");
}

void sub_100F1556C(id a1)
{
  qword_101934768 = (uint64_t)os_log_create("com.apple.locationd.Motion", "CardioChange");
}

void *sub_100F15598@<X0>(unsigned __int8 *a1@<X1>, void *a2@<X8>)
{
  unint64_t v4 = operator new(0x168uLL);
  uint64_t result = sub_100F155F0(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_100F155DC(_Unwind_Exception *a1)
{
}

void *sub_100F155F0(void *a1, unsigned __int8 *a2)
{
  a1[1] = 0LL;
  a1[2] = 0LL;
  *a1 = off_10188C740;
  sub_1009838E4(a1 + 3, *a2);
  return a1;
}

void sub_100F1562C(_Unwind_Exception *a1)
{
}

void sub_100F15640(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10188C740;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100F15654(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10188C740;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_100F15678(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(void *)(a1 + 24) + 16LL))(a1 + 24);
}

void *sub_100F15688@<X0>(unsigned __int8 *a1@<X1>, void *a2@<X8>)
{
  unint64_t v4 = operator new(0x168uLL);
  uint64_t result = sub_100F156E0(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_100F156CC(_Unwind_Exception *a1)
{
}

void *sub_100F156E0(void *a1, unsigned __int8 *a2)
{
  a1[1] = 0LL;
  a1[2] = 0LL;
  *a1 = off_10188C790;
  sub_10024D2A0(a1 + 3, *a2);
  return a1;
}

void sub_100F1571C(_Unwind_Exception *a1)
{
}

void sub_100F15730(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10188C790;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100F15744(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10188C790;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_100F15768(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(void *)(a1 + 24) + 16LL))(a1 + 24);
}

void sub_100F15778(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_10000AE14(a2 + 48);
    sub_10000AE14(a2 + 32);
    sub_10000AE14(a2 + 16);
    unint64_t v3 = (void *)sub_10000AE14(a2);
    operator delete(v3);
  }

void sub_100F157BC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  *a1 = a2;
  if (v3)
  {
    unint64_t v4 = (void *)sub_1001ABEF0(v3);
    operator delete(v4);
  }

void sub_100F157E8(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

uint64_t sub_100F15814(uint64_t a1, double **a2)
{
  uint64_t v3 = *a2;
  float v2 = a2[1];
  double v4 = (*a2)[1];
  double v5 = *(float *)(a1 + 136);
  if (v4 <= v5) {
    double v4 = *(float *)(a1 + 136);
  }
  unint64_t v6 = v3 + 3;
  if (v3 + 3 == v2)
  {
    uint64_t v7 = 0LL;
  }

  else
  {
    LODWORD(v7) = 0;
    double v8 = *v3;
    do
    {
      double v9 = *v6;
      double v10 = v6[1];
      v6 += 3;
      uint64_t v7 = (v7 + (int)((v9 - v8) / v4));
      if (v10 <= v5) {
        double v4 = *(float *)(a1 + 136);
      }
      else {
        double v4 = v10;
      }
      double v8 = v9;
    }

    while (v6 != v2);
  }

  if (v4 != 1.79769313e308)
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_10188C6F0);
    }
    double v11 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "#Warning No expiration rule was added so the number of records will be unbounded.",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_10188C6F0);
      }
      v15[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  0LL,  "#Warning No expiration rule was added so the number of records will be unbounded.",  v15,  2);
      uint64_t v14 = (uint8_t *)v13;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "int CLActivityRecorderDb<CLCardioChange::EstimateResult, CLActivityDB::ClassBDataProtectionPolicy>::estimateReco rdsNeeded(const CLAggregationRules &) [T = CLCardioChange::EstimateResult, DataProtectionPolicy = CLActivityDB:: ClassBDataProtectionPolicy]",  "%s\n",  v13);
      if (v14 != buf) {
        free(v14);
      }
    }
  }

  return v7;
}

uint64_t sub_100F15A10(uint64_t a1, double **a2)
{
  uint64_t v3 = *a2;
  float v2 = a2[1];
  double v4 = (*a2)[1];
  double v5 = *(float *)(a1 + 136);
  if (v4 <= v5) {
    double v4 = *(float *)(a1 + 136);
  }
  unint64_t v6 = v3 + 3;
  if (v3 + 3 == v2)
  {
    uint64_t v7 = 0LL;
  }

  else
  {
    LODWORD(v7) = 0;
    double v8 = *v3;
    do
    {
      double v9 = *v6;
      double v10 = v6[1];
      v6 += 3;
      uint64_t v7 = (v7 + (int)((v9 - v8) / v4));
      if (v10 <= v5) {
        double v4 = *(float *)(a1 + 136);
      }
      else {
        double v4 = v10;
      }
      double v8 = v9;
    }

    while (v6 != v2);
  }

  if (v4 != 1.79769313e308)
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_10188C6F0);
    }
    double v11 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "#Warning No expiration rule was added so the number of records will be unbounded.",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_10188C6F0);
      }
      v15[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  0LL,  "#Warning No expiration rule was added so the number of records will be unbounded.",  v15,  2);
      uint64_t v14 = (uint8_t *)v13;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "int CLActivityRecorderDb<CLCardioChange::AggregateFeatureEntry, CLActivityDB::ClassBDataProtectionPolicy>::estim ateRecordsNeeded(const CLAggregationRules &) [T = CLCardioChange::AggregateFeatureEntry, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v13);
      if (v14 != buf) {
        free(v14);
      }
    }
  }

  return v7;
}

uint64_t *sub_100F15C0C(uint64_t *a1, uint64_t a2)
{
  a1[2] = 0LL;
  a1[1] = 0LL;
  *a1 = (uint64_t)(a1 + 1);
  sub_1000EBD24(a1, *(int **)a2, (int *)(a2 + 8));
  return a1;
}

void sub_100F15C48(_Unwind_Exception *a1)
{
}

uint64_t sub_100F15F50(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  double v4 = &OBJC_IVAR___CMPedometerEntry_pedEntry;
  while (2)
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v5 = 0;
    unsigned int v6 = 0;
    unint64_t v7 = 0LL;
    while (1)
    {
      unint64_t v8 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v8 == -1LL || v8 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v8);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8 + 1;
      v7 |= (unint64_t)(v9 & 0x7F) << v5;
      if ((v9 & 0x80) == 0) {
        goto LABEL_12;
      }
      v5 += 7;
      BOOL v10 = v6++ >= 9;
      if (v10)
      {
        unint64_t v7 = 0LL;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_14;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_12:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v7 = 0LL;
    }
LABEL_14:
    if (v11 || (v7 & 7) == 4) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v7 >> 3))
    {
      case 1u:
        char v13 = 0;
        unsigned int v14 = 0;
        uint64_t v15 = 0LL;
        while (1)
        {
          unint64_t v16 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v16 == -1LL || v16 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v17 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v16);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v16 + 1;
          v15 |= (unint64_t)(v17 & 0x7F) << v13;
          if ((v17 & 0x80) == 0) {
            goto LABEL_67;
          }
          v13 += 7;
          BOOL v10 = v14++ >= 9;
          if (v10)
          {
            LODWORD(v15) = 0;
            goto LABEL_69;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_67:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v15) = 0;
        }
LABEL_69:
        uint64_t v41 = 32LL;
        goto LABEL_90;
      case 2u:
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v15 = 0LL;
        while (2)
        {
          unint64_t v20 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v20 == -1LL || v20 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v21 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v20);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v20 + 1;
            v15 |= (unint64_t)(v21 & 0x7F) << v18;
            if (v21 < 0)
            {
              v18 += 7;
              BOOL v10 = v19++ >= 9;
              if (v10)
              {
                LODWORD(v15) = 0;
                goto LABEL_73;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v15) = 0;
        }
LABEL_73:
        uint64_t v41 = 36LL;
        goto LABEL_90;
      case 3u:
        char v22 = 0;
        unsigned int v23 = 0;
        uint64_t v15 = 0LL;
        while (2)
        {
          unint64_t v24 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v24 == -1LL || v24 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v25 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v24);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v24 + 1;
            v15 |= (unint64_t)(v25 & 0x7F) << v22;
            if (v25 < 0)
            {
              v22 += 7;
              BOOL v10 = v23++ >= 9;
              if (v10)
              {
                LODWORD(v15) = 0;
                goto LABEL_77;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v15) = 0;
        }
LABEL_77:
        uint64_t v41 = 12LL;
        goto LABEL_90;
      case 4u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v15 = 0LL;
        while (2)
        {
          unint64_t v28 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v28 == -1LL || v28 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v29 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v28);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v28 + 1;
            v15 |= (unint64_t)(v29 & 0x7F) << v26;
            if (v29 < 0)
            {
              v26 += 7;
              BOOL v10 = v27++ >= 9;
              if (v10)
              {
                LODWORD(v15) = 0;
                goto LABEL_81;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v15) = 0;
        }
LABEL_81:
        uint64_t v41 = 16LL;
        goto LABEL_90;
      case 5u:
        int64_t v30 = v4;
        __int16 v31 = objc_alloc_init(&OBJC_CLASS___ALSLocation);

        *(void *)(a1 + 24) = v31;
        if (PBReaderPlaceMark(a2, v42) && (sub_100B87820((uint64_t)v31, a2) & 1) != 0)
        {
          PBReaderRecallMark(a2, v42);
          double v4 = v30;
LABEL_91:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

        return 0LL;
      case 0xBu:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v15 = 0LL;
        *(_BYTE *)(a1 + v4[292]) |= 1u;
        while (2)
        {
          unint64_t v35 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v35 == -1LL || v35 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v36 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v35);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v35 + 1;
            v15 |= (unint64_t)(v36 & 0x7F) << v33;
            if (v36 < 0)
            {
              v33 += 7;
              BOOL v10 = v34++ >= 9;
              if (v10)
              {
                LODWORD(v15) = 0;
                goto LABEL_85;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v15) = 0;
        }
LABEL_85:
        uint64_t v41 = 8LL;
        goto LABEL_90;
      case 0xCu:
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v15 = 0LL;
        *(_BYTE *)(a1 + v4[292]) |= 2u;
        while (2)
        {
          unint64_t v39 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v39 == -1LL || v39 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v40 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v39);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v39 + 1;
            v15 |= (unint64_t)(v40 & 0x7F) << v37;
            if (v40 < 0)
            {
              v37 += 7;
              BOOL v10 = v38++ >= 9;
              if (v10)
              {
                LODWORD(v15) = 0;
                goto LABEL_89;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v15) = 0;
        }
LABEL_89:
        uint64_t v41 = 40LL;
LABEL_90:
        *(_DWORD *)(a1 + v41) = v15;
        goto LABEL_91;
      default:
        uint64_t result = PBReaderSkipValueWithTag(a2);
        if (!(_DWORD)result) {
          return result;
        }
        goto LABEL_91;
    }
  }

void sub_100F17084(id a1)
{
  qword_10199F4F0 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLPedestrianFenceServiceSilo");
}

void sub_100F172F4(_Unwind_Exception *a1)
{
}

id sub_100F1730C(uint64_t a1, void *a2)
{
  return _[a2 onPedestrianFenceExitData:a1 + 8];
}

id sub_100F17318(uint64_t a1, void *a2)
{
  return _[a2 onInertialOdometryAnalyticsData:a1 + 8];
}

void sub_100F195D8(_Unwind_Exception *a1)
{
}

void sub_100F19604(uint64_t a1, uint64_t a2)
{
}

void sub_100F19614(uint64_t a1)
{
}

id sub_100F19620(uint64_t a1, void *a2)
{
  __int128 v8 = 0u;
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  id v3 = objc_msgSend(objc_msgSend(a2, "fenceIDToIndex", 0), "allValues");
  id result = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (result)
  {
    id v5 = result;
    uint64_t v6 = *(void *)v9;
    do
    {
      unint64_t v7 = 0LL;
      do
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v3);
        }
        [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) addObject:*(void *)(*((void *)&v8 + 1) + 8 * (void)v7)];
        unint64_t v7 = (char *)v7 + 1;
      }

      while (v5 != v7);
      id result = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
      id v5 = result;
    }

    while (result);
  }

  return result;
}

id sub_100F1A8E8(uint64_t a1)
{
  return [*(id *)(a1 + 32) onIntervalTimerCreateEventAndIncrementPacket:1];
}

void sub_100F1AF08(id a1)
{
  qword_101934788 = (uint64_t)os_log_create("com.apple.locationd.Motion", "PedestrianFence");
}

void sub_100F1AFD8(id a1)
{
  qword_10199F500 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLBTLERangeManagerSilo");
}

uint64_t sub_100F1B08C(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100F1B39C;
  block[3] = &unk_10181A288;
  block[4] = a1;
  if (qword_10199F528 != -1) {
    dispatch_once(&qword_10199F528, block);
  }
  return qword_10199F520;
}

void sub_100F1B22C(id a1)
{
  if ((sub_1004F64FC() & 0x400000) != 0) {
    byte_10199F510 = 1;
  }
}

void *sub_100F1B254(uint64_t a1, void *a2)
{
  id result = (void *)sub_100F1B280(a1, "CLBTLERangeManager-Notifier", a2);
  *id result = off_10188C8A8;
  return result;
}

uint64_t sub_100F1B280(uint64_t a1, char *a2, void *a3)
{
  *(void *)a1 = off_10188CA38;
  sub_1010DDBC0((void *)(a1 + 8), a2);
  *(void *)(a1 + 32) = a3;
  *(void *)(a1 + sub_10004AD90(v3 - 40) = [a3 silo];
  *(void *)(a1 + 4_Block_object_dispose((const void *)(v1 - 128), 8) = 0LL;
  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + 56) = a1 + 64;
  *(void *)(a1 + 8_Block_object_dispose((const void *)(v1 - 128), 8) = 0LL;
  *(void *)(a1 + 96) = 0LL;
  *(void *)(a1 + 72) = 0LL;
  *(void *)(a1 + 8sub_100222B94(v74, (uint64_t)"CLBeaconFenceDatabase::getFenceForBundleAndOnBehalf", 0) = a1 + 88;
  *(_DWORD *)(a1 + 104) = 0;
  *(_BYTE *)(a1 + 10_Block_object_dispose((const void *)(v1 - 128), 8) = 0;
  return a1;
}

void sub_100F1B300(_Unwind_Exception *exception_object)
{
}

uint64_t sub_100F1B320(uint64_t a1)
{
  *(void *)a1 = off_10188CA38;
  [*(id *)(a1 + 48) invalidate];

  sub_100231CA4(a1 + 80, *(void **)(a1 + 88));
  sub_100F1B68C(a1 + 56, *(void **)(a1 + 64));
  return a1;
}

uint64_t sub_100F1B39C(uint64_t a1)
{
  float v2 = operator new(0x148uLL);
  uint64_t result = sub_100F07148((uint64_t)v2, *(void **)(a1 + 32));
  qword_10199F520 = (uint64_t)v2;
  return result;
}

void sub_100F1B3D4(_Unwind_Exception *a1)
{
}

void *sub_100F1B3E8@<X0>(_DWORD *a1@<X1>, void *a2@<X8>)
{
  return sub_1010DDBC0(a2, __str);
}

void sub_100F1B460(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  __int128 v8 = operator new(0x30uLL);
  sub_1010DDBC0(__p, "CLBTLERangeManager");
  sub_100F1B528((uint64_t)v8, 0LL, (uint64_t *)__p, a3, a1, a2);
  *__int128 v8 = off_10188C990;
  *a4 = v8;
  if (v10 < 0) {
    operator delete(__p[0]);
  }
}

void sub_100F1B4FC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_100F1B528(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4, uint64_t a5, uint64_t a6)
{
  *(void *)a1 = &off_10188CB18;
  *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 128), 8) = -[CLNotifierClientAdapter initWithClient:]( objc_alloc(&OBJC_CLASS___CLNotifierClientAdapter),  "initWithClient:",  a1);
  *(void *)(a1 + 24) = a5;
  *(void *)(a1 + 32) = a6;
  else {
    double v12 = (uint64_t *)*a3;
  }
  id v13 = objc_msgSend( objc_msgSend(a4, "vendor"),  "proxyForService:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v12));
  *(void *)(a1 + 16) = v13;
  id v14 = v13;
  if (a2) {
    [*(id *)(a1 + 16) setDelegateEntityName:a2];
  }
  objc_msgSend(*(id *)(a1 + 16), "registerDelegate:inSilo:", *(void *)(a1 + 8), objc_msgSend(a4, "silo"));
  return a1;
}

void sub_100F1B600(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100F1B6E4(a1);
  operator delete(v1);
}

id sub_100F1B614(uint64_t a1, int a2, void *a3)
{
  id result = sub_100F0C458(a3);
  if (result)
  {
    int v6 = a2;
    return (id)(*(uint64_t (**)(void, int *, id, void))(a1 + 24))(0LL, &v6, result, *(void *)(a1 + 32));
  }

  return result;
}

void sub_100F1B660(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_100F1B68C(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_100F1B68C(a1, *a2);
    sub_100F1B68C(a1, a2[1]);
    sub_10000AE14((uint64_t)(a2 + 8));
    sub_100F0C014((uint64_t)(a2 + 5), (void *)a2[6]);
    operator delete(a2);
  }

uint64_t sub_100F1B6E4(uint64_t a1)
{
  *(void *)a1 = &off_10188CB18;
  float v2 = (id *)(a1 + 8);
  [*(id *)(a1 + 16) forget:*(void *)(a1 + 8)];

  [*v2 invalidate];
  id *v2 = 0LL;
  *(void *)(a1 + 16) = 0LL;
  return a1;
}

uint64_t sub_100F1B744(uint64_t a1, unsigned __int8 a2)
{
  unsigned __int8 v21 = a2;
  *(void *)a1 = off_1018856A0;
  *(_OWORD *)(a1 + _Block_object_dispose((const void *)(v1 - 128), 8) = 0u;
  id v3 = (uint64_t *)(a1 + 8);
  *(_OWORD *)(a1 + 24) = 0u;
  uint64_t v4 = a1 + 24;
  *(_OWORD *)(a1 + sub_10004AD90(v3 - 40) = 0u;
  id v5 = (uint64_t *)(a1 + 40);
  *(_OWORD *)(a1 + 56) = 0u;
  uint64_t v6 = a1 + 56;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 8_Block_object_dispose((const void *)(v1 - 128), 8) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 12sub_100222B94(v74, (uint64_t)"CLBeaconFenceDatabase::getFenceForBundleAndOnBehalf", 0) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(void *)(a1 + 16_Block_object_dispose((const void *)(v1 - 128), 8) = 0LL;
  sub_10023AE2C((unsigned __int8 *)&v20, "NumberOfWorkoutsFTPRequiredForHK", &dword_101364F70, 0);
  *(_DWORD *)(a1 + 236) = DWORD1(v20);
  sub_100F1EB9C(&v21, &v20);
  sub_10005F550((uint64_t)v3, &v20);
  unint64_t v7 = (std::__shared_weak_count *)*((void *)&v20 + 1);
  if (*((void *)&v20 + 1))
  {
    __int128 v8 = (unint64_t *)(*((void *)&v20 + 1) + 8LL);
    do
      unint64_t v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }

  sub_100F1ECE8(v3, &v20);
  sub_10005F550(v4, &v20);
  char v10 = (std::__shared_weak_count *)*((void *)&v20 + 1);
  if (*((void *)&v20 + 1))
  {
    __int128 v11 = (unint64_t *)(*((void *)&v20 + 1) + 8LL);
    do
      unint64_t v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }

  sub_100F1EE80(&v21, &v20);
  sub_10005F550((uint64_t)v5, &v20);
  id v13 = (std::__shared_weak_count *)*((void *)&v20 + 1);
  if (*((void *)&v20 + 1))
  {
    id v14 = (unint64_t *)(*((void *)&v20 + 1) + 8LL);
    do
      unint64_t v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }

  sub_100F1EED8(v5, &v20);
  sub_10005F550(v6, &v20);
  unint64_t v16 = (std::__shared_weak_count *)*((void *)&v20 + 1);
  if (*((void *)&v20 + 1))
  {
    char v17 = (unint64_t *)(*((void *)&v20 + 1) + 8LL);
    do
      unint64_t v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }

  *(_OWORD *)(a1 + 22sub_100222B94(v74, (uint64_t)"CLBeaconFenceDatabase::getFenceForBundleAndOnBehalf", 0) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 20_Block_object_dispose((const void *)(v1 - 128), 8) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  sub_100F1B9F4(a1);
  return a1;
}

void sub_100F1B96C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10)
{
  a10 = (void **)(v14 + 72);
  sub_10004CC28(&a10);
  sub_10000AE14(v13);
  sub_10000AE14(v12);
  sub_10000AE14(v11);
  sub_10000AE14(v10);
  _Unwind_Resume(a1);
}

void sub_100F1B9F4(uint64_t a1)
{
  float v2 = (uint64_t *)(a1 + 24);
  sub_100F1F0F0(&v18);
  sub_10005F550(a1 + 96, &v18);
  id v3 = (std::__shared_weak_count *)*((void *)&v18 + 1);
  if (*((void *)&v18 + 1))
  {
    uint64_t v4 = (unint64_t *)(*((void *)&v18 + 1) + 8LL);
    do
      unint64_t v5 = __ldaxr(v4);
    while (__stlxr(v5 - 1, v4));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }

  sub_100F1F1DC(&v18);
  sub_10005F550(a1 + 112, &v18);
  uint64_t v6 = (std::__shared_weak_count *)*((void *)&v18 + 1);
  if (*((void *)&v18 + 1))
  {
    unint64_t v7 = (unint64_t *)(*((void *)&v18 + 1) + 8LL);
    do
      unint64_t v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }

  sub_100F1F2D0(v2, &v18);
  sub_10005F550(a1 + 128, &v18);
  unint64_t v9 = (std::__shared_weak_count *)*((void *)&v18 + 1);
  if (*((void *)&v18 + 1))
  {
    uint64_t v10 = (unint64_t *)(*((void *)&v18 + 1) + 8LL);
    do
      unint64_t v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }

  sub_100F1F3BC(&v18);
  sub_10005F550(a1 + 144, &v18);
  uint64_t v12 = (std::__shared_weak_count *)*((void *)&v18 + 1);
  if (*((void *)&v18 + 1))
  {
    uint64_t v13 = (unint64_t *)(*((void *)&v18 + 1) + 8LL);
    do
      unint64_t v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }

  sub_100F1F4A8(v2, &v18);
  sub_10005F550(a1 + 160, &v18);
  unint64_t v15 = (std::__shared_weak_count *)*((void *)&v18 + 1);
  if (*((void *)&v18 + 1))
  {
    unint64_t v16 = (unint64_t *)(*((void *)&v18 + 1) + 8LL);
    do
      unint64_t v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }

char *sub_100F1BBD0(uint64_t a1)
{
  float v2 = (char **)(a1 + 72);
  sub_100396CFC((char **)(a1 + 72), (__int128 *)(a1 + 112));
  sub_100396CFC(v2, (__int128 *)(a1 + 128));
  sub_100396CFC(v2, (__int128 *)(a1 + 144));
  return sub_100396CFC(v2, (__int128 *)(a1 + 160));
}

uint64_t sub_100F1BC1C(uint64_t result, char a2)
{
  *(_BYTE *)(*(void *)(result + 8) + 44LL) = a2;
  return result;
}

uint64_t sub_100F1BC28(uint64_t a1)
{
  float v2 = *(uint64_t **)(a1 + 72);
  id v3 = *(uint64_t **)(a1 + 80);
  uint64_t v4 = 1LL;
  while (v2 != v3)
  {
    uint64_t v5 = *v2;
    v2 += 2;
    uint64_t v4 = v4 & (*(unsigned int (**)(uint64_t))(*(void *)v5 + 16LL))(v5);
  }

  return v4;
}

double sub_100F1BC8C(double a1, double a2)
{
  double v3 = a1 * 0.5;
  double v4 = sub_100F290D8(a1 * 0.850000024, a2);
  double v5 = v4 - sub_100F290D8(v3, a2);
  if (v5 > 200.0) {
    double v5 = 200.0;
  }
  if (v5 >= 50.0) {
    double v6 = (v5 + -50.0) / -199.1 + 1.0;
  }
  else {
    double v6 = 1.0;
  }
  return v6 * 0.4 + 0.5;
}

BOOL sub_100F1BD2C(uint64_t a1, double *a2, int *a3, int *a4)
{
  double v8 = sub_100E95B80(*(void *)(a1 + 112));
  double v9 = sub_100924330(*(void *)(a1 + 128));
  __int128 v10 = *(_OWORD *)(a1 + 192);
  v23[0] = *(_OWORD *)(a1 + 176);
  v23[1] = v10;
  v24[0] = *(_OWORD *)(a1 + 208);
  *(_OWORD *)((char *)v24 + 12) = *(_OWORD *)(a1 + 220);
  sub_1003DA2B8((uint64_t)v23);
  double v12 = v11;
  if (v8 > 0.0)
  {
    *a2 = v8;
    int v14 = sub_100E95B88(*(void *)(a1 + 112));
    int v13 = 2;
  }

  else if (v9 > 0.0)
  {
    *a2 = v9;
    int v14 = sub_100231608();
    int v13 = 1;
  }

  else
  {
    *a2 = v12;
    int v13 = 3;
    int v14 = 1;
  }

  *a3 = v14;
  *a4 = v13;
  if (qword_1019347A0 != -1) {
    dispatch_once(&qword_1019347A0, &stru_10188CB30);
  }
  unint64_t v15 = (os_log_s *)qword_1019347A8;
  if (os_log_type_enabled((os_log_t)qword_1019347A8, OS_LOG_TYPE_DEFAULT))
  {
    int v16 = *a4;
    *(_DWORD *)std::stringbuf::string_type buf = 134218752;
    double v34 = v9;
    __int16 v35 = 2048;
    double v36 = v8;
    __int16 v37 = 2048;
    double v38 = v12;
    __int16 v39 = 1024;
    int v40 = v16;
    _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "vo2maxPedestrian, %f, vo2maxCycling, %f, vo2maxDerived, %f, cyclingVO2MaxSource, %d",  buf,  0x26u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019347A0 != -1) {
      dispatch_once(&qword_1019347A0, &stru_10188CB30);
    }
    int v19 = *a4;
    int v25 = 134218752;
    double v26 = v9;
    __int16 v27 = 2048;
    double v28 = v8;
    __int16 v29 = 2048;
    double v30 = v12;
    __int16 v31 = 1024;
    int v32 = v19;
    LODWORD(v22) = 38;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019347A8,  0LL,  "vo2maxPedestrian, %f, vo2maxCycling, %f, vo2maxDerived, %f, cyclingVO2MaxSource, %d",  COERCE_DOUBLE(&v25),  v22,  *(double *)v23,  DWORD2(v23[0]));
    unsigned __int8 v21 = (uint8_t *)v20;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCyclingFTPAggregator::getBestVO2Max(double &, int &, VO2MaxSource &) const",  "%s\n",  v20);
    if (v21 != buf) {
      free(v21);
    }
  }

  BOOL v17 = *a2 > 0.0;
  if (*a2 > 100.0) {
    return 0;
  }
  return v17;
}

uint64_t sub_100F1BFE4(void **a1)
{
  float v2 = a1[9];
  double v3 = a1[10];
  int v4 = 1;
  while (v2 != v3)
  {
    uint64_t v5 = *v2;
    v2 += 2;
    v4 &= (*(uint64_t (**)(uint64_t))(*(void *)v5 + 56LL))(v5);
  }

  uint64_t v6 = v4 & (*(unsigned int (**)(void *))(*a1[3] + 24LL))(a1[3]);
  double v8 = a1[9];
  unint64_t v7 = a1[10];
  while (v8 != v7)
  {
    uint64_t v9 = *v8;
    v8 += 2;
    uint64_t v6 = v6 & (*(unsigned int (**)(uint64_t))(*(void *)v9 + 32LL))(v9);
  }

  return v6;
}

double sub_100F1C06C@<D0>( double *a1@<X1>, double *a2@<X2>, double *a3@<X3>, _DWORD *a4@<X4>, _DWORD *a5@<X5>, uint64_t a6@<X8>)
{
  unint64_t v6 = 0LL;
  double v7 = *a1;
  double v8 = *a2;
  double v9 = *a3;
  __int128 v10 = &byte_101364F90;
  while (*v10 != a1[2] > 0.0 || (*a4 - 1) < 2 == v6 > 3 || a2[2] > 0.0 == (((0x55uLL >> v6) & 1) == 0))
  {
    ++v6;
    v10 += 56;
    if (v6 == 8)
    {
      __int128 v10 = (char *)&unk_101365118;
      break;
    }
  }

  if (a2[2] <= 0.0) {
    double v8 = 0.0;
  }
  if (a1[2] <= 0.0) {
    double v7 = 0.0;
  }
  double v11 = *((double *)v10 + 1);
  double v12 = *((double *)v10 + 2);
  double v13 = *((double *)v10 + 3);
  double v14 = *((double *)v10 + 4);
  uint64_t v15 = *((void *)v10 + 5);
  int v16 = *((_DWORD *)v10 + 12);
  *(void *)(a6 + _Block_object_dispose((const void *)(v1 - 128), 8) = 0x7FF8000000000000LL;
  *(double *)a6 = v14 + v8 * v12 + v11 * v7 + v13 * v9;
  *(void *)&double result = 0x200000000LL;
  *(void *)(a6 + 16) = v15;
  *(void *)(a6 + 24) = 0x200000000LL;
  *a5 = v16;
  return result;
}

void sub_100F1C168( uint64_t a1@<X0>, _OWORD *a2@<X1>, double *a3@<X2>, double *a4@<X3>, uint64_t a5@<X4>, double *a6@<X8>, double a7@<D0>, double a8@<D1>)
{
  __int128 v16 = a2[1];
  *(_OWORD *)a6 = *a2;
  *((_OWORD *)a6 + 1) = v16;
  double v17 = sub_100E95B5C(*(void *)(a1 + 112));
  double v18 = *a3;
  double v19 = *(double *)a5;
  if (*(double *)a5 > *a6 && v19 >= a7 && v19 <= a8)
  {
    __int128 v22 = *(_OWORD *)(a5 + 16);
    *(_OWORD *)a6 = *(_OWORD *)a5;
    *((_OWORD *)a6 + 1) = v22;
  }

  if (a3[2] <= 0.0 || v17 <= 0.0)
  {
    double v24 = v18 * 0.9 + -24.7;
  }

  else
  {
    double v23 = sub_100F290B8(v18, *(float *)(a1 + 188));
    double v24 = sub_100F290D8(v23 * 0.46 + -1.7 + a3[2] * 0.36 + v17 * 0.46, *(float *)(a1 + 188));
  }

  BOOL v25 = v24 >= a7;
  if (v24 > a8) {
    BOOL v25 = 0;
  }
  if (v25 && v24 > *a6)
  {
    *a6 = v24;
    a6[2] = a3[2];
  }

  double v26 = *a4;
  double v27 = a4[2];
  if (v27 >= 0.7 || v27 <= 0.0 || v17 <= 0.0)
  {
    double v29 = v26 * 0.95;
  }

  else
  {
    double v28 = sub_100F290B8(v26, *(float *)(a1 + 188));
    double v29 = sub_100F290D8(v28 * 0.44 + -1.9 + a4[2] * 0.61 + v17 * 0.51, *(float *)(a1 + 188));
  }

  BOOL v30 = v29 >= a7;
  if (v29 > a8) {
    BOOL v30 = 0;
  }
  if (v30 && v29 > *a6)
  {
    *a6 = v29;
    a6[2] = a4[2];
  }

  if (qword_1019347A0 != -1) {
    dispatch_once(&qword_1019347A0, &stru_10188CB30);
  }
  __int16 v31 = (os_log_s *)qword_1019347A8;
  if (os_log_type_enabled((os_log_t)qword_1019347A8, OS_LOG_TYPE_DEFAULT))
  {
    double v32 = *(double *)a5;
    uint64_t v33 = *(void *)(a5 + 16);
    double v34 = *a3;
    uint64_t v35 = *((void *)a3 + 2);
    double v36 = *a4;
    uint64_t v37 = *((void *)a4 + 2);
    uint64_t v38 = *(void *)a2;
    uint64_t v39 = *(void *)a6;
    *(_DWORD *)std::stringbuf::string_type buf = 134220544;
    double v74 = v17;
    __int16 v75 = 2048;
    double v76 = v32;
    __int16 v77 = 2048;
    uint64_t v78 = v33;
    __int16 v79 = 2048;
    double v80 = v34;
    __int16 v81 = 2048;
    uint64_t v82 = v35;
    __int16 v83 = 2048;
    double v84 = v36;
    __int16 v85 = 2048;
    uint64_t v86 = v37;
    __int16 v87 = 2048;
    uint64_t v88 = v38;
    __int16 v89 = 2048;
    double v90 = v24;
    __int16 v91 = 2048;
    double v92 = v29;
    __int16 v93 = 2048;
    uint64_t v94 = v39;
    _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEFAULT,  "eff,%f,power60,%f,conf60,%f,power8,%f,conf8,%f,power20,%f,conf20,%f,vo2limit,%f,adjusted8,%f,adjusted20,%f,floor,%f",  buf,  0x70u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019347A0 != -1) {
      dispatch_once(&qword_1019347A0, &stru_10188CB30);
    }
    double v40 = *(double *)a5;
    uint64_t v41 = *(void *)(a5 + 16);
    double v42 = *a3;
    uint64_t v43 = *((void *)a3 + 2);
    double v44 = *a4;
    uint64_t v45 = *((void *)a4 + 2);
    uint64_t v46 = *(void *)a2;
    uint64_t v47 = *(void *)a6;
    int v51 = 134220544;
    double v52 = v17;
    __int16 v53 = 2048;
    double v54 = v40;
    __int16 v55 = 2048;
    uint64_t v56 = v41;
    __int16 v57 = 2048;
    double v58 = v42;
    __int16 v59 = 2048;
    uint64_t v60 = v43;
    __int16 v61 = 2048;
    double v62 = v44;
    __int16 v63 = 2048;
    uint64_t v64 = v45;
    __int16 v65 = 2048;
    uint64_t v66 = v46;
    __int16 v67 = 2048;
    double v68 = v24;
    __int16 v69 = 2048;
    double v70 = v29;
    __int16 v71 = 2048;
    uint64_t v72 = v47;
    LODWORD(v5sub_100222B94(v74, (uint64_t)"CLBeaconFenceDatabase::getFenceForBundleAndOnBehalf", 0) = 112;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019347A8,  0LL,  "eff,%f,power60,%f,conf60,%f,power8,%f,conf8,%f,power20,%f,conf20,%f,vo2limit,%f,adjusted8,%f,adjusted20,%f,floor,%f",  COERCE_DOUBLE(&v51),  v50);
    uint64_t v49 = (uint8_t *)v48;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLCyclingFTPValue CLCyclingFTPAggregator::calculateFTPFloor(const CLCyclingFTPValue &, const CLCyclingFTPValue &, const CLCyclingFTPValue &, const CLCyclingFTPValue &, double, double) const",  "%s\n",  v48);
    if (v49 != buf) {
      free(v49);
    }
  }

void sub_100F1C600(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  if (!sub_100F1BFE4((void **)a1))
  {
    if (qword_1019347A0 != -1) {
      dispatch_once(&qword_1019347A0, &stru_10188CB30);
    }
    double v13 = (os_log_s *)qword_1019347A8;
    if (os_log_type_enabled((os_log_t)qword_1019347A8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "Failed to compute all ftp models", buf, 2u);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_70;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019347A0 != -1) {
      dispatch_once(&qword_1019347A0, &stru_10188CB30);
    }
    LOWORD(vsub_10000AE14(v14 + 96) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019347A8,  0LL,  "Failed to compute all ftp models",  &v96,  2);
    goto LABEL_103;
  }

  uint64_t v94 = 0LL;
  double v95 = NAN;
  int64x2_t v91 = vdupq_n_s64(0x7FF8000000000000uLL);
  unint64_t v92 = 0xBFF0000000000000LL;
  uint64_t v93 = 0LL;
  int64x2_t v88 = v91;
  unint64_t v89 = 0xBFF0000000000000LL;
  uint64_t v90 = 0LL;
  if (!*(_BYTE *)(a1 + 234) || !*(_BYTE *)(a1 + 233) || !*(_BYTE *)(a1 + 232))
  {
    if (qword_1019347A0 != -1) {
      dispatch_once(&qword_1019347A0, &stru_10188CB30);
    }
    uint64_t v15 = (os_log_s *)qword_1019347A8;
    if (os_log_type_enabled((os_log_t)qword_1019347A8, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_INFO,  "Not computing VO2Max based FTP as user weight and age not set",  buf,  2u);
    }

    double v16 = -1.0;
    if (!sub_1002921D0(115, 2)) {
      goto LABEL_28;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019347A0 != -1) {
      dispatch_once(&qword_1019347A0, &stru_10188CB30);
    }
    LOWORD(vsub_10000AE14(v14 + 96) = 0;
    double v55 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019347A8,  1LL,  "Not computing VO2Max based FTP as user weight and age not set",  &v96,  2);
    uint64_t v46 = v56;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "const CLCyclingFTPValue CLCyclingFTPAggregator::getFTP(const CFAbsoluteTime)",  "%s\n",  v55);
    goto LABEL_98;
  }

  if (!sub_100F1BD2C(a1, &v95, (int *)&v94 + 1, (int *)&v94))
  {
    if (qword_1019347A0 != -1) {
      dispatch_once(&qword_1019347A0, &stru_10188CB30);
    }
    uint64_t v43 = (os_log_s *)qword_1019347A8;
    if (os_log_type_enabled((os_log_t)qword_1019347A8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_ERROR, "Failed to compute best VO2Max value", buf, 2u);
    }

    double v16 = -1.0;
    if (!sub_1002921D0(115, 0)) {
      goto LABEL_28;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019347A0 != -1) {
      dispatch_once(&qword_1019347A0, &stru_10188CB30);
    }
    LOWORD(vsub_10000AE14(v14 + 96) = 0;
    double v44 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019347A8,  16LL,  "Failed to compute best VO2Max value",  &v96,  2);
    uint64_t v46 = v45;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "const CLCyclingFTPValue CLCyclingFTPAggregator::getFTP(const CFAbsoluteTime)",  "%s\n",  v44);
LABEL_98:
    if (v46 != buf) {
      free(v46);
    }
LABEL_28:
    double v17 = NAN;
    double v18 = -1.0;
    *(double *)&uint64_t v19 = NAN;
    double v20 = NAN;
    double v21 = -1.0;
    goto LABEL_29;
  }

  double v6 = v95;
  unsigned int v7 = HIDWORD(v94);
  double v8 = *(float *)(a1 + 188);
  double v9 = sub_100F290D8(v95 * 0.699999988, v8);
  double v10 = sub_100F1BC8C(v6, v8);
  v91.i64[1] = 0x7FF8000000000000LL;
  if (v9 <= 0.0) {
    double v11 = NAN;
  }
  else {
    double v11 = v9;
  }
  if (v9 > 0.0)
  {
    unsigned int v12 = v7;
  }

  else
  {
    double v10 = 0.0;
    unsigned int v12 = 0;
  }

  *(double *)&uint64_t v63 = v11;
  *(double *)v91.i64 = v11;
  unint64_t v92 = *(void *)&v10;
  uint64_t v93 = v12 | 0x700000000LL;
  if ((_DWORD)v94 == 3)
  {
    double v10 = 0.4;
    goto LABEL_81;
  }

  if (!(_DWORD)v94)
  {
    double v10 = 0.0;
LABEL_81:
    unint64_t v92 = *(void *)&v10;
  }

  double v66 = v10;
  double v47 = *(float *)(a1 + 188);
  double v48 = sub_100F290D8(v6 * 0.5, v47);
  double v49 = sub_100F1BC8C(v6, v47);
  v88.i64[1] = 0x7FF8000000000000LL;
  double v20 = NAN;
  if (v48 <= 0.0) {
    double v17 = NAN;
  }
  else {
    double v17 = v48;
  }
  if (v48 <= 0.0) {
    double v16 = 0.0;
  }
  else {
    double v16 = v49;
  }
  if (v48 <= 0.0) {
    unsigned int v50 = 0;
  }
  else {
    unsigned int v50 = v7;
  }
  *(double *)v88.i64 = v17;
  unint64_t v89 = *(void *)&v16;
  uint64_t v90 = v50 | 0x500000000LL;
  double v51 = *(float *)(a1 + 188);
  double v52 = sub_100F290D8(v6 * 1.20000005, v51);
  double v53 = v51;
  double v18 = v66;
  double v54 = sub_100F1BC8C(v6, v53);
  if (v52 <= 0.0)
  {
    double v21 = 0.0;
  }

  else
  {
    double v20 = v52;
    double v21 = v54;
  }

  uint64_t v19 = v63;
LABEL_29:
  int v22 = sub_100A38B84(*(void *)(a1 + 96));
  if (v22 <= 0)
  {
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_10188CB50);
    }
    double v42 = (os_log_s *)qword_1019344D8;
    if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v42,  OS_LOG_TYPE_DEBUG,  "CLCyclingFTPAggregator, no valid cycling sessions found",  buf,  2u);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_70;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_10188CB50);
    }
    LOWORD(vsub_10000AE14(v14 + 96) = 0;
    LODWORD(v5_Block_object_dispose((const void *)(v1 - 128), 8) = 2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  2LL,  "CLCyclingFTPAggregator, no valid cycling sessions found",  &v96,  *(void *)&v58);
LABEL_103:
    __int16 v57 = (uint8_t *)v14;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "const CLCyclingFTPValue CLCyclingFTPAggregator::getFTP(const CFAbsoluteTime)",  "%s\n",  v14);
    if (v57 != buf) {
      free(v57);
    }
LABEL_70:
    *(int64x2_t *)a2 = vdupq_n_s64(0x7FF8000000000000uLL);
    *(void *)(a2 + 16) = 0xBFF0000000000000LL;
    *(void *)(a2 + 24) = 0LL;
    return;
  }

  unsigned int v23 = v22;
  double v65 = v18;
  double v62 = v21;
  sub_100CC5A7C(*(void *)(a1 + 160), (uint64_t)v86);
  sub_100F60A04(*(void *)(a1 + 144), (uint64_t)v77);
  __int128 v75 = v84;
  __int128 v76 = v85;
  if (v17 >= 15.0) {
    double v24 = v17;
  }
  else {
    double v24 = 15.0;
  }
  double v61 = *(float *)(a1 + 188) * 8.0;
  if (v61 >= v20) {
    double v25 = *(float *)(a1 + 188) * 8.0;
  }
  else {
    double v25 = v20;
  }
  if (v25 <= 999.0) {
    double v26 = v25;
  }
  else {
    double v26 = 999.0;
  }
  double v64 = *(double *)&v19;
  double v60 = v16;
  double v67 = a3;
  if (v86[0] > v26 || v86[0] < v24) {
    uint64_t v87 = 0LL;
  }
  HIDWORD(v74) = 0;
  sub_100F1C06C((double *)&v75, v86, (double *)v91.i64, &v94, (_DWORD *)&v74 + 1, (uint64_t)v71);
  sub_100F1C168(a1, &v88, v82, v80, (uint64_t)v77, v68, v24, v26);
  double v28 = v68[0];
  double v29 = v71[0];
  double v30 = v72;
  if (v71[0] <= v68[0]) {
    __int16 v31 = v68;
  }
  else {
    __int16 v31 = v71;
  }
  __int128 v32 = *((_OWORD *)v31 + 1);
  *(_OWORD *)a2 = *(_OWORD *)v31;
  *(_OWORD *)(a2 + 16) = v32;
  else {
    double v33 = v26;
  }
  *(double *)(a2 + _Block_object_dispose((const void *)(v1 - 128), 8) = v33;
  *(double *)(a2 + 16) = v30;
  *(_DWORD *)(a2 + 24) = v23;
  *(double *)a2 = v33;
  double v34 = v33;
  if (v23 >= 6)
  {
    double v34 = sub_100704BAC(*(void *)(a1 + 8), v33, v67);
    *(double *)a2 = v34;
  }

  if (qword_1019347A0 != -1) {
    dispatch_once(&qword_1019347A0, &stru_10188CB30);
  }
  uint64_t v35 = (os_log_s *)qword_1019347A8;
  if (os_log_type_enabled((os_log_t)qword_1019347A8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 134224896;
    double v153 = v64;
    __int16 v154 = 2048;
    double v155 = v65;
    __int16 v156 = 2048;
    double v157 = v86[0];
    __int16 v158 = 2048;
    uint64_t v159 = v87;
    __int16 v160 = 2048;
    double v161 = v17;
    __int16 v162 = 2048;
    double v163 = v60;
    __int16 v164 = 2048;
    double v165 = v20;
    __int16 v166 = 2048;
    double v167 = v62;
    __int16 v168 = 2048;
    double v169 = v61;
    __int16 v170 = 2048;
    double v171 = v26;
    __int16 v172 = 2048;
    double v173 = v82[0];
    __int16 v174 = 2048;
    uint64_t v175 = v83;
    __int16 v176 = 2048;
    double v177 = v80[0];
    __int16 v178 = 2048;
    uint64_t v179 = v81;
    __int16 v180 = 2048;
    double v181 = v77[0];
    __int16 v182 = 2048;
    uint64_t v183 = v78;
    __int16 v184 = 2048;
    uint64_t v185 = v84;
    __int16 v186 = 2048;
    uint64_t v187 = v85;
    __int16 v188 = 2048;
    double v189 = v29;
    __int16 v190 = 2048;
    double v191 = v30;
    __int16 v192 = 2048;
    double v193 = v28;
    __int16 v194 = 2048;
    double v195 = v69;
    __int16 v196 = 2048;
    double v197 = v34;
    __int16 v198 = 2048;
    double v199 = v30;
    __int16 v200 = 1024;
    unsigned int v201 = v23;
    __int16 v202 = 2048;
    double v203 = v33;
    __int16 v204 = 1024;
    int v205 = HIDWORD(v74);
    __int16 v206 = 2048;
    double v207 = v67;
    _os_log_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_DEFAULT,  "ftpVO2Max, %f, ftpVO2MaxConfidence, %f, ftpPowerAtPercentHRMax, %f, ftpPowerAtPercentHRMaxConfidence, %f, ftpLower Limit, %f, ftpLowerLimitConfidence, %f, ftpVO2MaxUpperLimit, %f, ftpVO2MaxUpperLimitConfidence, %f, maxWeightBased FTP, %f, ftpUpperLimit, %f, ftp8MinBoutEstimate, %f, ftp8MinBoutEstimateConfidence, %f, ftp20MinBoutEstimate, %f, ftp20MinBoutEstimateConfidence, %f, ftp60MinBoutEstimate, %f, ftp60MinBoutEstimateConfidence, %f, ftpCriticalPower Estimate, %f, ftpCriticalPowerEstimateConfidence, %f, ftpCombo, %f, ftpComboConfidence, %f, ftpFloor, %f, ftpFloor Confidence, %f, ftpBest, %f, ftpBestConfidence, %f, ftpBestNumberOfSessions, %d, ftpBestWithoutDecay, %f, ftpCombo Source, %d, eventTime, %f",  buf,  0x112u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019347A0 != -1) {
      dispatch_once(&qword_1019347A0, &stru_10188CB30);
    }
    uint64_t v36 = *(void *)(a2 + 8);
    uint64_t v37 = *(void *)(a2 + 16);
    int v38 = *(_DWORD *)(a2 + 24);
    double v39 = *(double *)a2;
    int v96 = 134224896;
    uint64_t v97 = v91.i64[0];
    __int16 v98 = 2048;
    unint64_t v99 = v92;
    __int16 v100 = 2048;
    double v101 = v86[0];
    __int16 v102 = 2048;
    uint64_t v103 = v87;
    __int16 v104 = 2048;
    uint64_t v105 = v88.i64[0];
    __int16 v106 = 2048;
    unint64_t v107 = v89;
    __int16 v108 = 2048;
    double v109 = v20;
    __int16 v110 = 2048;
    double v111 = v62;
    __int16 v112 = 2048;
    double v113 = v61;
    __int16 v114 = 2048;
    double v115 = v26;
    __int16 v116 = 2048;
    double v117 = v82[0];
    __int16 v118 = 2048;
    uint64_t v119 = v83;
    __int16 v120 = 2048;
    double v121 = v80[0];
    __int16 v122 = 2048;
    uint64_t v123 = v81;
    __int16 v124 = 2048;
    double v125 = v77[0];
    __int16 v126 = 2048;
    uint64_t v127 = v78;
    __int16 v128 = 2048;
    uint64_t v129 = v84;
    __int16 v130 = 2048;
    uint64_t v131 = v85;
    __int16 v132 = 2048;
    double v133 = v71[0];
    __int16 v134 = 2048;
    double v135 = v72;
    __int16 v136 = 2048;
    double v137 = v68[0];
    __int16 v138 = 2048;
    double v139 = v69;
    __int16 v140 = 2048;
    double v141 = v39;
    __int16 v142 = 2048;
    uint64_t v143 = v37;
    __int16 v144 = 1024;
    int v145 = v38;
    __int16 v146 = 2048;
    uint64_t v147 = v36;
    __int16 v148 = 1024;
    int v149 = HIDWORD(v74);
    __int16 v150 = 2048;
    double v151 = v67;
    LODWORD(v5_Block_object_dispose((const void *)(v1 - 128), 8) = 274;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019347A8,  0LL,  "ftpVO2Max, %f, ftpVO2MaxConfidence, %f, ftpPowerAtPercentHRMax, %f, ftpPowerAtPercentHRMaxConfidence, %f, ftpLower Limit, %f, ftpLowerLimitConfidence, %f, ftpVO2MaxUpperLimit, %f, ftpVO2MaxUpperLimitConfidence, %f, maxWeightBased FTP, %f, ftpUpperLimit, %f, ftp8MinBoutEstimate, %f, ftp8MinBoutEstimateConfidence, %f, ftp20MinBoutEstimate, %f, ftp20MinBoutEstimateConfidence, %f, ftp60MinBoutEstimate, %f, ftp60MinBoutEstimateConfidence, %f, ftpCriticalPower Estimate, %f, ftpCriticalPowerEstimateConfidence, %f, ftpCombo, %f, ftpComboConfidence, %f, ftpFloor, %f, ftpFloor Confidence, %f, ftpBest, %f, ftpBestConfidence, %f, ftpBestNumberOfSessions, %d, ftpBestWithoutDecay, %f, ftpCombo Source, %d, eventTime, %f",  COERCE_DOUBLE(&v96),  v58,  v59,  v60,  v61,  v62,  v64,  v65,  v67,  v68[0],  v68[1],  v69,  v70,  v71[0],  v71[1],  v72,  v73,  v74,  *(double *)&v75,  *((double *)&v75 + 1),  *(double *)&v76,  *((double *)&v76 + 1),  v77[0],  v77[1],  v78,  v79,  LODWORD(v80[0]),  v80[1]);
    uint64_t v41 = (uint8_t *)v40;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "const CLCyclingFTPValue CLCyclingFTPAggregator::getFTP(const CFAbsoluteTime)",  "%s\n",  v40);
    if (v41 != buf) {
      free(v41);
    }
  }

uint64_t sub_100F1D204(uint64_t a1)
{
  float v2 = *(uint64_t **)(a1 + 72);
  double v3 = *(uint64_t **)(a1 + 80);
  uint64_t v4 = 1LL;
  if (v2 != v3)
  {
    do
    {
      uint64_t v5 = *v2;
      v2 += 2;
      uint64_t v4 = v4 & (*(unsigned int (**)(uint64_t))(*(void *)v5 + 40LL))(v5);
    }

    while (v2 != v3);
    float v2 = *(uint64_t **)(a1 + 72);
  }

  *(void *)(a1 + 8sub_100222B94(v74, (uint64_t)"CLBeaconFenceDatabase::getFenceForBundleAndOnBehalf", 0) = v2;
  if (qword_1019344D0 != -1) {
    dispatch_once(&qword_1019344D0, &stru_10188CB50);
  }
  unsigned int v7 = (os_log_s *)qword_1019344D8;
  if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "CLCyclingFTPAggregator reset", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_10188CB50);
    }
    v11[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  2LL,  "CLCyclingFTPAggregator reset",  v11,  2);
    double v10 = (uint8_t *)v9;
    sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLCyclingFTPAggregator::reset()", "%s\n", v9);
    if (v10 != buf) {
      free(v10);
    }
  }

  return v4;
}

id *sub_100F1D3E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  if (qword_1019344D0 != -1) {
    dispatch_once(&qword_1019344D0, &stru_10188CB50);
  }
  double v6 = (os_log_s *)qword_1019344D8;
  if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 134218496;
    double v34 = a3;
    __int16 v35 = 2048;
    double v36 = a3 + -5184000.0;
    __int16 v37 = 2048;
    double v38 = a3;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "CLCyclingFTPAggregator computeFTP eval_time, %f, from, %f, to, %f",  buf,  0x20u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_10188CB50);
    }
    double v7 = a3 + -5184000.0;
    int v27 = 134218496;
    double v28 = a3;
    __int16 v29 = 2048;
    double v30 = a3 + -5184000.0;
    __int16 v31 = 2048;
    double v32 = a3;
    LODWORD(v25) = 32;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  0LL,  "CLCyclingFTPAggregator computeFTP eval_time, %f, from, %f, to, %f",  COERCE_DOUBLE(&v27),  v25,  *(double *)v26);
    double v17 = (uint8_t *)v16;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "const CLCyclingFTPValue CLCyclingFTPAggregator::computeFTP(const double)",  "%s\n",  v16);
    if (v17 != buf) {
      free(v17);
    }
  }

  else
  {
    double v7 = a3 + -5184000.0;
  }

  double v8 = *(void **)(a1 + 72);
  for (uint64_t i = *(void **)(a1 + 80); v8 != i; v8 += 2)
    (*(void (**)(void, uint64_t, double, double))(*(void *)*v8 + 24LL))(*v8, a1 + 176, v7, a3);
  sub_100F1C600(a1, a2, a3);
  if ((sub_100F1D204(a1) & 1) == 0)
  {
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_10188CB50);
    }
    double v10 = (os_log_s *)qword_1019344D8;
    if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_ERROR,  "CLCyclingFTPAggregator, failed to reset all models",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344D0 != -1) {
        dispatch_once(&qword_1019344D0, &stru_10188CB50);
      }
      LOWORD(v27) = 0;
      LODWORD(v25) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  16LL,  "CLCyclingFTPAggregator, failed to reset all models",  &v27,  *(void *)&v25);
      double v24 = (uint8_t *)v23;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "const CLCyclingFTPValue CLCyclingFTPAggregator::computeFTP(const double)",  "%s\n",  v23);
      if (v24 != buf) {
        free(v24);
      }
    }
  }

  if (qword_1019344D0 != -1) {
    dispatch_once(&qword_1019344D0, &stru_10188CB50);
  }
  double v11 = (os_log_s *)qword_1019344D8;
  if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_DEFAULT))
  {
    double v12 = *(double *)a2;
    double v13 = *(double *)(a2 + 16);
    int v14 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)std::stringbuf::string_type buf = 134218496;
    double v34 = v12;
    __int16 v35 = 2048;
    double v36 = v13;
    __int16 v37 = 1024;
    LODWORD(v3_Block_object_dispose((const void *)(v1 - 128), 8) = v14;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "CLCyclingFTPAggregator final ftp, %f, confidence, %f, numberOfSessions, %d",  buf,  0x1Cu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_10188CB50);
    }
    double v18 = *(double *)a2;
    double v19 = *(double *)(a2 + 16);
    int v20 = *(_DWORD *)(a2 + 24);
    int v27 = 134218496;
    double v28 = v18;
    __int16 v29 = 2048;
    double v30 = v19;
    __int16 v31 = 1024;
    LODWORD(v32) = v20;
    LODWORD(v25) = 28;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  0LL,  "CLCyclingFTPAggregator final ftp, %f, confidence, %f, numberOfSessions, %d",  COERCE_DOUBLE(&v27),  v25,  LODWORD(v26[0]));
    int v22 = (uint8_t *)v21;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "const CLCyclingFTPValue CLCyclingFTPAggregator::computeFTP(const double)",  "%s\n",  v21);
    if (v22 != buf) {
      free(v22);
    }
  }

  return sub_1001BA1BC(v26);
}

void sub_100F1D910(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

__n128 sub_100F1D93C(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  __int128 v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 22sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = *(_OWORD *)(a2 + 44);
  *(_OWORD *)(a1 + 192) = v3;
  *(_OWORD *)(a1 + 20_Block_object_dispose((const void *)(v1 - 128), 8) = v4;
  *(__n128 *)(a1 + 176) = result;
  return result;
}

void sub_100F1D958(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (qword_1019347A0 != -1) {
    dispatch_once(&qword_1019347A0, &stru_10188CB30);
  }
  uint64_t v5 = (os_log_s *)qword_1019347A8;
  if (os_log_type_enabled((os_log_t)qword_1019347A8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 67109376;
    *(_DWORD *)uint64_t v46 = v32;
    *(_WORD *)&v46[4] = 1024;
    *(_DWORD *)&v46[6] = HIBYTE(v32);
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "CLCyclingFTPAggregator feedworkoutevent: didFinish: %d, hadCycling: %d",  buf,  0xEu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019347A0 != -1) {
      dispatch_once(&qword_1019347A0, &stru_10188CB30);
    }
    LODWORD(v41) = 67109376;
    HIDWORD(v41) = v32;
    LOWORD(v42) = 1024;
    *(_DWORD *)((char *)&v42 + 2) = HIBYTE(v32);
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019347A8,  0LL,  "CLCyclingFTPAggregator feedworkoutevent: didFinish: %d, hadCycling: %d",  &v41,  14);
    double v16 = (uint8_t *)v15;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "const CLCyclingFTPResults CLCyclingFTPAggregator::feedWorkoutEvent(const CLMotionStateMediator_Type::WorkoutEvent &)",  "%s\n",  v15);
    if (v16 != buf) {
      free(v16);
    }
  }

  __int16 v28 = v32;
  double v30 = 0LL;
  uint64_t v31 = 0LL;
  std::string __p = 0LL;
  sub_1006099EC(&__p, v33, (uint64_t)v34, 0xCCCCCCCCCCCCCCCDLL * (((char *)v34 - (_BYTE *)v33) >> 3));
  BOOL v6 = sub_100F1DF94(a1, (uint64_t)&v28, (_BYTE *)(a1 + 176));
  if (__p)
  {
    double v30 = __p;
    operator delete(__p);
  }

  if (v6)
  {
    if (qword_1019347A0 != -1) {
      dispatch_once(&qword_1019347A0, &stru_10188CB30);
    }
    double v7 = (os_log_s *)qword_1019347A8;
    if (os_log_type_enabled((os_log_t)qword_1019347A8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "CLCyclingFTPAggregator end of workout and will calculate FTP",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019347A0 != -1) {
        dispatch_once(&qword_1019347A0, &stru_10188CB30);
      }
      LOWORD(v41) = 0;
      LODWORD(v23) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019347A8,  0LL,  "CLCyclingFTPAggregator end of workout and will calculate FTP",  &v41,  v23);
      double v18 = (uint8_t *)v17;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "const CLCyclingFTPResults CLCyclingFTPAggregator::feedWorkoutEvent(const CLMotionStateMediator_Type::WorkoutEvent &)",  "%s\n",  v17);
      if (v18 != buf) {
        free(v18);
      }
    }

    sub_100F1D3E4(a1, (uint64_t)&v41, *(v34 - 2));
    if (qword_1019347A0 != -1) {
      dispatch_once(&qword_1019347A0, &stru_10188CB30);
    }
    double v8 = (os_log_s *)qword_1019347A8;
    if (os_log_type_enabled((os_log_t)qword_1019347A8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = *((void *)v34 - 2);
      uint64_t v10 = *((void *)v34 - 1);
      *(_DWORD *)std::stringbuf::string_type buf = 134218496;
      *(double *)uint64_t v46 = v41;
      *(_WORD *)&v46[8] = 2048;
      uint64_t v47 = v10;
      __int16 v48 = 2048;
      uint64_t v49 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "CLCyclingFTPAggregator FTP calculated ftp, %f, workout_type, %ld, timeStamp, %f",  buf,  0x20u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019347A0 != -1) {
        dispatch_once(&qword_1019347A0, &stru_10188CB30);
      }
      uint64_t v19 = *((void *)v34 - 2);
      uint64_t v20 = *((void *)v34 - 1);
      int v35 = 134218496;
      double v36 = v41;
      __int16 v37 = 2048;
      uint64_t v38 = v20;
      __int16 v39 = 2048;
      uint64_t v40 = v19;
      LODWORD(v23) = 32;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019347A8,  0LL,  "CLCyclingFTPAggregator FTP calculated ftp, %f, workout_type, %ld, timeStamp, %f",  COERCE_DOUBLE(&v35),  v23,  v24);
      int v22 = (uint8_t *)v21;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "const CLCyclingFTPResults CLCyclingFTPAggregator::feedWorkoutEvent(const CLMotionStateMediator_Type::WorkoutEvent &)",  "%s\n",  v21);
      if (v22 != buf) {
        free(v22);
      }
    }

    uint64_t v11 = *(void *)(a1 + 8);
    LOWORD(v24) = v32;
    double v26 = 0LL;
    uint64_t v27 = 0LL;
    double v25 = 0LL;
    sub_1006099EC(&v25, v33, (uint64_t)v34, 0xCCCCCCCCCCCCCCCDLL * (((char *)v34 - (_BYTE *)v33) >> 3));
    double v12 = v41;
    sub_10070509C(v11, (uint64_t)&v24, v41, v42);
    if (v25)
    {
      double v26 = v25;
      operator delete(v25);
    }

    uint64_t v13 = v43;
    *(double *)a3 = v12;
    *(void *)(a3 + _Block_object_dispose((const void *)(v1 - 128), 8) = v13;
    *(_BYTE *)(a3 + 16) = 1;
    *(_BYTE *)(a3 + 17) = v44 >= *(_DWORD *)(a1 + 236);
    int v14 = v34;
    *(double *)(a3 + 24) = *(v34 - 1);
    *(double *)(a3 + 32) = *(v14 - 2);
    *(_BYTE *)(a3 + sub_10004AD90(v3 - 40) = v32;
  }

  else
  {
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = xmmword_101364F60;
    *(_BYTE *)(a3 + 17) = 0;
    *(void *)(a3 + 24) = 0LL;
    *(void *)(a3 + 32) = 0LL;
    *(_BYTE *)(a3 + sub_10004AD90(v3 - 40) = 0;
  }

  if (v33)
  {
    double v34 = (double *)v33;
    operator delete(v33);
  }

void sub_100F1DF34( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p, uint64_t a21)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_100F1DF94(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  if (a3[58]) {
    BOOL v3 = a3[57] == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3 || a3[56] == 0)
  {
    if (qword_1019347A0 != -1) {
      dispatch_once(&qword_1019347A0, &stru_10188CB30);
    }
    uint64_t v5 = (os_log_s *)qword_1019347A8;
    if (os_log_type_enabled((os_log_t)qword_1019347A8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "The weight, height and age must be set. Do not calculate FTP.",  buf,  2u);
    }

    BOOL result = sub_1002921D0(115, 2);
    if (!result) {
      return result;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019347A0 != -1) {
      dispatch_once(&qword_1019347A0, &stru_10188CB30);
    }
    *(_WORD *)uu = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019347A8,  0LL,  "The weight, height and age must be set. Do not calculate FTP.",  uu,  2);
LABEL_84:
    uint64_t v31 = (uint8_t *)v7;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCyclingFTPAggregator::isEligibleToComputeFTP(const CLCyclingFTPDataStore::WorkoutEventInfo, const CLBodyMet rics &, const double)",  "%s\n",  v7);
    if (v31 != buf) {
      free(v31);
    }
    return 0LL;
  }

  if (!*(_BYTE *)a2)
  {
    if (qword_1019347A0 != -1) {
      dispatch_once(&qword_1019347A0, &stru_10188CB30);
    }
    int v22 = (os_log_s *)qword_1019347A8;
    if (os_log_type_enabled((os_log_t)qword_1019347A8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "Workout is not finished. Do not calculate FTP.",  buf,  2u);
    }

    BOOL result = sub_1002921D0(115, 2);
    if (!result) {
      return result;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019347A0 != -1) {
      dispatch_once(&qword_1019347A0, &stru_10188CB30);
    }
    *(_WORD *)uu = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019347A8,  0LL,  "Workout is not finished. Do not calculate FTP.",  uu,  2);
    goto LABEL_84;
  }

  if (!*(_BYTE *)(a2 + 1))
  {
    if (qword_1019347A0 != -1) {
      dispatch_once(&qword_1019347A0, &stru_10188CB30);
    }
    uint64_t v23 = (os_log_s *)qword_1019347A8;
    if (os_log_type_enabled((os_log_t)qword_1019347A8, OS_LOG_TYPE_DEFAULT))
    {
      int v24 = *(unsigned __int8 *)(a2 + 1);
      *(_DWORD *)std::stringbuf::string_type buf = 67109120;
      *(_DWORD *)uint64_t v46 = v24;
      _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEFAULT,  "Workout is not cycling. Do not calculate FTP workouttype:%d .",  buf,  8u);
    }

    BOOL result = sub_1002921D0(115, 2);
    if (!result) {
      return result;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019347A0 != -1) {
      dispatch_once(&qword_1019347A0, &stru_10188CB30);
    }
    int v25 = *(unsigned __int8 *)(a2 + 1);
    *(_DWORD *)uu = 67109120;
    *(_DWORD *)&uu[4] = v25;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019347A8,  0LL,  "Workout is not cycling. Do not calculate FTP workouttype:%d .",  uu);
    goto LABEL_84;
  }

  if (*(void *)(a2 + 16) == *(void *)(a2 + 8))
  {
    if (qword_1019347A0 != -1) {
      dispatch_once(&qword_1019347A0, &stru_10188CB30);
    }
    double v26 = (os_log_s *)qword_1019347A8;
    if (os_log_type_enabled((os_log_t)qword_1019347A8, OS_LOG_TYPE_DEFAULT))
    {
      unint64_t v27 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3);
      *(_DWORD *)std::stringbuf::string_type buf = 134217984;
      *(void *)uint64_t v46 = v27;
      _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEFAULT,  "There was no session in this workout:%zu .",  buf,  0xCu);
    }

    BOOL result = sub_1002921D0(115, 2);
    if (!result) {
      return result;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019347A0 != -1) {
      dispatch_once(&qword_1019347A0, &stru_10188CB30);
    }
    unint64_t v28 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3);
    *(_DWORD *)uu = 134217984;
    *(void *)&uu[4] = v28;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019347A8,  0LL,  "There was no session in this workout:%zu .",  uu);
    goto LABEL_84;
  }

  if (qword_1019347A0 != -1) {
    dispatch_once(&qword_1019347A0, &stru_10188CB30);
  }
  uint64_t v10 = (os_log_s *)qword_1019347A8;
  if (os_log_type_enabled((os_log_t)qword_1019347A8, OS_LOG_TYPE_DEFAULT))
  {
    unint64_t v11 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3);
    *(_DWORD *)std::stringbuf::string_type buf = 134217984;
    *(void *)uint64_t v46 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "There were %zu sessions in this workout.",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019347A0 != -1) {
      dispatch_once(&qword_1019347A0, &stru_10188CB30);
    }
    unint64_t v33 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3);
    *(_DWORD *)uu = 134217984;
    *(void *)&uu[4] = v33;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019347A8,  0LL,  "There were %zu sessions in this workout.",  (size_t)uu);
    int v35 = (uint8_t *)v34;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCyclingFTPAggregator::isEligibleToComputeFTP(const CLCyclingFTPDataStore::WorkoutEventInfo, const CLBodyMet rics &, const double)",  "%s\n",  v34);
    if (v35 != buf) {
      free(v35);
    }
  }

  if (!*(void *)(a1 + 96))
  {
    if (qword_1019347A0 != -1) {
      dispatch_once(&qword_1019347A0, &stru_10188CB30);
    }
    double v30 = (os_log_s *)qword_1019347A8;
    if (os_log_type_enabled((os_log_t)qword_1019347A8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEFAULT,  "ValidSessions model missing when validating the workout. Not eligible to calculte the FTP.",  buf,  2u);
    }

    BOOL result = sub_1002921D0(115, 2);
    if (!result) {
      return result;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019347A0 != -1) {
      dispatch_once(&qword_1019347A0, &stru_10188CB30);
    }
    *(_WORD *)uu = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019347A8,  0LL,  "ValidSessions model missing when validating the workout. Not eligible to calculte the FTP.",  uu,  2);
    goto LABEL_84;
  }

  double v12 = *(__int128 **)(a2 + 8);
  uint64_t v13 = *(__int128 **)(a2 + 16);
  if (v12 == v13)
  {
LABEL_68:
    if (qword_1019347A0 != -1) {
      dispatch_once(&qword_1019347A0, &stru_10188CB30);
    }
    __int16 v29 = (os_log_s *)qword_1019347A8;
    if (os_log_type_enabled((os_log_t)qword_1019347A8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEFAULT,  "The workout was not eligible to trigger FTP calculation.",  buf,  2u);
    }

    BOOL result = sub_1002921D0(115, 2);
    if (!result) {
      return result;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019347A0 != -1) {
      dispatch_once(&qword_1019347A0, &stru_10188CB30);
    }
    *(_WORD *)uu = 0;
    LODWORD(v3_Block_object_dispose((const void *)(v1 - 128), 8) = 2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019347A8,  0LL,  "The workout was not eligible to trigger FTP calculation.",  uu,  v38);
    goto LABEL_84;
  }

  unsigned __int8 v14 = 0;
  int v15 = 1;
  while (1)
  {
    __int128 v16 = *v12;
    __int128 v17 = v12[1];
    uint64_t v44 = *((void *)v12 + 4);
    *(_OWORD *)uu = v16;
    __int128 v43 = v17;
    uuid_unparse(uu, out);
    sub_100396CFC((char **)(a1 + 72), (__int128 *)(a1 + 96));
    (*(void (**)(void, uint64_t, double, double))(**(void **)(a1 + 96) + 24LL))( *(void *)(a1 + 96),  a1 + 176,  *(double *)&v43,  *((double *)&v43 + 1));
    sub_100F1BFE4((void **)a1);
    if (sub_1007049C4(*(void *)(a1 + 8), uu))
    {
      if (qword_1019347A0 != -1) {
        dispatch_once(&qword_1019347A0, &stru_10188CB30);
      }
      double v18 = (os_log_s *)qword_1019347A8;
      if (os_log_type_enabled((os_log_t)qword_1019347A8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 67109378;
        *(_DWORD *)uint64_t v46 = v15;
        *(_WORD *)&v46[4] = 2080;
        *(void *)&v46[6] = out;
        _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "Session %d with uuid %s is not eligible to trigger FTP calculation since the ftp was calculated before.",  buf,  0x12u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019347A0 != -1) {
          dispatch_once(&qword_1019347A0, &stru_10188CB30);
        }
        int v39 = 67109378;
        *(_DWORD *)uint64_t v40 = v15;
        *(_WORD *)&v40[4] = 2080;
        *(void *)&v40[6] = out;
        LODWORD(v3_Block_object_dispose((const void *)(v1 - 128), 8) = 18;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019347A8,  0LL,  "Session %d with uuid %s is not eligible to trigger FTP calculation since the ftp was calculated before.",  &v39,  v38);
        double v21 = (uint8_t *)v20;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCyclingFTPAggregator::isEligibleToComputeFTP(const CLCyclingFTPDataStore::WorkoutEventInfo, const CLBod yMetrics &, const double)",  "%s\n",  v20);
        if (v21 != buf) {
          free(v21);
        }
      }

      unsigned __int8 v14 = 0;
      BOOL v19 = 1;
    }

    else
    {
      BOOL v19 = sub_100A38CBC(*(int **)(a1 + 96), v15, (uint64_t)out, *(double *)&v43, *((double *)&v43 + 1));
      if (v19) {
        unsigned __int8 v14 = 1;
      }
    }

    (*(void (**)(void))(**(void **)(a1 + 96) + 40LL))(*(void *)(a1 + 96));
    sub_100F1D204(a1);
    if (v19) {
      break;
    }
    double v12 = (__int128 *)((char *)v12 + 40);
    ++v15;
    if (v12 == v13) {
      goto LABEL_68;
    }
  }

  if (qword_1019347A0 != -1) {
    dispatch_once(&qword_1019347A0, &stru_10188CB30);
  }
  __int16 v32 = (os_log_s *)qword_1019347A8;
  if (os_log_type_enabled((os_log_t)qword_1019347A8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 136315394;
    *(void *)uint64_t v46 = out;
    *(_WORD *)&v46[8] = 1024;
    *(_DWORD *)&_BYTE v46[10] = v14;
    _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEFAULT,  "The session %s is processed and its eligibility is %d.",  buf,  0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019347A0 != -1) {
      dispatch_once(&qword_1019347A0, &stru_10188CB30);
    }
    int v39 = 136315394;
    *(void *)uint64_t v40 = out;
    *(_WORD *)&__int16 v40[8] = 1024;
    *(_DWORD *)&v40[10] = v14;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019347A8,  0LL,  "The session %s is processed and its eligibility is %d.",  (const char *)&v39,  18);
    __int16 v37 = (uint8_t *)v36;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCyclingFTPAggregator::isEligibleToComputeFTP(const CLCyclingFTPDataStore::WorkoutEventInfo, const CLBodyMet rics &, const double)",  "%s\n",  v36);
    if (v37 != buf) {
      free(v37);
    }
  }

  return v14 != 0;
}

uint64_t sub_100F1EB2C(uint64_t a1, uint64_t a2)
{
  return sub_100702550(*(void *)(a1 + 8), a2, (__int128 *)(a1 + 176));
}

uint64_t sub_100F1EB3C(uint64_t a1)
{
  return sub_1007048B0(*(void *)(a1 + 8));
}

void sub_100F1EB44(id a1)
{
  qword_1019347A8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "CyclingPower");
}

void sub_100F1EB70(id a1)
{
  qword_1019344D8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Calorimetry");
}

void *sub_100F1EB9C@<X0>(unsigned __int8 *a1@<X1>, void *a2@<X8>)
{
  __int128 v4 = operator new(0xF8uLL);
  BOOL result = sub_100F1EBF4(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_100F1EBE0(_Unwind_Exception *a1)
{
}

void *sub_100F1EBF4(void *a1, unsigned __int8 *a2)
{
  a1[1] = 0LL;
  a1[2] = 0LL;
  *a1 = off_10188CB80;
  sub_100700E30((uint64_t)(a1 + 3), *a2);
  return a1;
}

void sub_100F1EC30(_Unwind_Exception *a1)
{
}

void sub_100F1EC44(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10188CB80;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100F1EC58(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10188CB80;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_100F1EC7C(uint64_t a1)
{
  return sub_100F1ECA4((uint64_t)&v2, a1 + 24);
}

uint64_t sub_100F1ECA4(uint64_t a1, uint64_t a2)
{
  BOOL v3 = *(void **)(a2 + 120);
  if (v3)
  {
    *(void *)(a2 + 12_Block_object_dispose((const void *)(v1 - 128), 8) = v3;
    operator delete(v3);
  }

  sub_10000AE14(a2 + 24);
  return sub_10000AE14(a2 + 8);
}

void *sub_100F1ECE8@<X0>(uint64_t *a1@<X1>, void *a2@<X8>)
{
  __int128 v4 = operator new(0xD8uLL);
  BOOL result = sub_100F1ED40(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_100F1ED2C(_Unwind_Exception *a1)
{
}

void *sub_100F1ED40(void *a1, uint64_t *a2)
{
  a1[2] = 0LL;
  *a1 = off_10188CBD0;
  a1[1] = 0LL;
  sub_100F1EDE8((uint64_t)&v4, (uint64_t)(a1 + 3), a2);
  return a1;
}

void sub_100F1ED8C(_Unwind_Exception *a1)
{
}

void sub_100F1EDA0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10188CBD0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100F1EDB4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10188CBD0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_100F1EDD8(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_100F1EDE8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = a3[1];
  uint64_t v10 = *a3;
  unint64_t v11 = (std::__shared_weak_count *)v3;
  if (v3)
  {
    char v4 = (unint64_t *)(v3 + 8);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }

  v6.n128_f64[0] = sub_100395B20(a2, &v10);
  double v7 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      unint64_t v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v6);
      std::__shared_weak_count::__release_weak(v7);
    }
  }

void sub_100F1EE6C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_100F1EE80@<X0>(unsigned __int8 *a1@<X1>, void *a2@<X8>)
{
  char v4 = operator new(0x178uLL);
  BOOL result = sub_100E1DA08(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_100F1EEC4(_Unwind_Exception *a1)
{
}

void *sub_100F1EED8@<X0>(uint64_t *a1@<X1>, void *a2@<X8>)
{
  char v4 = operator new(0x30uLL);
  BOOL result = sub_100F1EF30(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_100F1EF1C(_Unwind_Exception *a1)
{
}

void *sub_100F1EF30(void *a1, uint64_t *a2)
{
  a1[2] = 0LL;
  *a1 = off_10188CC20;
  a1[1] = 0LL;
  sub_100F1EFD8((uint64_t)&v4, a1 + 3, a2);
  return a1;
}

void sub_100F1EF7C(_Unwind_Exception *a1)
{
}

void sub_100F1EF90(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10188CC20;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100F1EFA4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10188CC20;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_100F1EFC8(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(void *)(a1 + 24) + 16LL))(a1 + 24);
}

void sub_100F1EFD8(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  char v4 = (std::__shared_weak_count *)a3[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      unint64_t v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a2 = off_10188CC70;
    a2[1] = v3;
    a2[2] = v4;
    do
      unint64_t v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      unint64_t v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }

  else
  {
    *a2 = off_10188CC70;
    a2[1] = v3;
    a2[2] = 0LL;
  }

uint64_t sub_100F1F078(uint64_t a1, uint64_t a2)
{
  return sub_10024D4E8(*(void *)(a1 + 8), a2);
}

uint64_t sub_100F1F080(uint64_t a1, char **a2, double a3, double a4)
{
  return sub_100FB4E88(*(void *)(a1 + 8), a2, a3, a4);
}

void *sub_100F1F088(void *a1)
{
  *a1 = off_10188CC70;
  sub_10000AE14((uint64_t)(a1 + 1));
  return a1;
}

void sub_100F1F0BC(void *a1)
{
  *a1 = off_10188CC70;
  sub_10000AE14((uint64_t)(a1 + 1));
  operator delete(a1);
}

void *sub_100F1F0F0@<X0>(void *a1@<X8>)
{
  char v2 = operator new(0x98uLL);
  BOOL result = sub_100F1F148(v2);
  *a1 = v2 + 3;
  a1[1] = v2;
  return result;
}

void sub_100F1F134(_Unwind_Exception *a1)
{
}

void *sub_100F1F148(void *a1)
{
  a1[2] = 0LL;
  *a1 = off_10188CCB0;
  a1[1] = 0LL;
  sub_100A38A80(a1 + 3);
  return a1;
}

void sub_100F1F180(_Unwind_Exception *a1)
{
}

void sub_100F1F194(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10188CCB0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100F1F1A8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10188CCB0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_100F1F1CC(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void *sub_100F1F1DC@<X0>(void *a1@<X8>)
{
  char v2 = operator new(0xF0uLL);
  BOOL result = sub_100F1F23C(v2);
  *a1 = v2 + 3;
  a1[1] = v2;
  return result;
}

void sub_100F1F228(_Unwind_Exception *a1)
{
}

void *sub_100F1F23C(void *a1)
{
  a1[2] = 0LL;
  *a1 = off_10188CD00;
  a1[1] = 0LL;
  sub_100E9484C(a1 + 3);
  return a1;
}

void sub_100F1F274(_Unwind_Exception *a1)
{
}

void sub_100F1F288(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10188CD00;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100F1F29C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10188CD00;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_100F1F2C0(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void *sub_100F1F2D0@<X0>(uint64_t *a1@<X1>, void *a2@<X8>)
{
  char v4 = operator new(0x90uLL);
  BOOL result = sub_100F1F328(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_100F1F314(_Unwind_Exception *a1)
{
}

void *sub_100F1F328(void *a1, uint64_t *a2)
{
  a1[2] = 0LL;
  *a1 = off_10188CD50;
  a1[1] = 0LL;
  sub_100FAC430(a1 + 3, a2);
  return a1;
}

void sub_100F1F360(_Unwind_Exception *a1)
{
}

void sub_100F1F374(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10188CD50;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100F1F388(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10188CD50;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_100F1F3AC(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void *sub_100F1F3BC@<X0>(void *a1@<X8>)
{
  char v2 = operator new(0x118uLL);
  BOOL result = sub_100F1F414(v2);
  *a1 = v2 + 3;
  a1[1] = v2;
  return result;
}

void sub_100F1F400(_Unwind_Exception *a1)
{
}

void *sub_100F1F414(void *a1)
{
  a1[2] = 0LL;
  *a1 = off_10188CDA0;
  a1[1] = 0LL;
  sub_100F5E760(a1 + 3);
  return a1;
}

void sub_100F1F44C(_Unwind_Exception *a1)
{
}

void sub_100F1F460(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10188CDA0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100F1F474(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10188CDA0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_100F1F498(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void *sub_100F1F4A8@<X0>(uint64_t *a1@<X1>, void *a2@<X8>)
{
  char v4 = operator new(0xD0uLL);
  BOOL result = sub_100F1F500(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_100F1F4EC(_Unwind_Exception *a1)
{
}

void *sub_100F1F500(void *a1, uint64_t *a2)
{
  a1[2] = 0LL;
  *a1 = off_10188CDF0;
  a1[1] = 0LL;
  sub_100CC58D8(a1 + 3, a2);
  return a1;
}

void sub_100F1F538(_Unwind_Exception *a1)
{
}

void sub_100F1F54C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10188CDF0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100F1F560(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10188CDF0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_100F1F584(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

double sub_100F1F594(double *a1)
{
  double result = a1[10];
  double v2 = a1[25];
  if (v2 > 0.0)
  {
    double v3 = a1[26];
    if (v3 > 0.0) {
      return sqrt(v3 / 2.45 * (v3 / 2.45) + v2 / 2.45 * (v2 / 2.45));
    }
  }

  return result;
}

uint64_t sub_100F1F5D0(uint64_t result, BOOL *a2, _BYTE *a3)
{
  *a3 = 0;
  *a2 = 0;
  double v3 = *(double *)(result + 192);
  double v4 = *(double *)(result + 104);
  if (v3 <= 0.0 || v4 < 0.0)
  {
    if (v4 < 0.0) {
      return result;
    }
    BOOL v5 = 1;
  }

  else
  {
    *a3 = 1;
    BOOL v5 = v3 < 180.0;
  }

  *a2 = v5;
  return result;
}

double sub_100F1F620(uint64_t a1)
{
  double result = *(double *)(a1 + 56);
  uint64_t v2 = *(void *)(a1 + 64);
  *(double *)(a1 + 152) = result;
  *(void *)(a1 + sub_10000AE14(v14 + 160) = v2;
  uint64_t v3 = *(void *)(a1 + 104);
  *(void *)(a1 + 16_Block_object_dispose((const void *)(v1 - 128), 8) = v3;
  *(double *)(a1 + 28_Block_object_dispose((const void *)(v1 - 128), 8) = result;
  *(void *)(a1 + 2sub_10000AE14(v14 + 96) = v2;
  *(void *)(a1 + 304) = v3;
  *(double *)(a1 + 312) = result;
  *(void *)(a1 + 32sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v2;
  *(double *)(a1 + 32_Block_object_dispose((const void *)(v1 - 128), 8) = result;
  *(void *)(a1 + 336) = v2;
  *(_DWORD *)(a1 + 28sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = 0;
  return result;
}

void sub_100F1F648(uint64_t *a1, uint64_t *a2, double a3)
{
  uint64_t v141 = 0LL;
  sub_10029524C((int *)&v141, (_DWORD *)&v141 + 1, *((double *)a1 + 1));
  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_10188CE30);
  }
  unint64_t v6 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
  {
    unint64_t v7 = a2;
    __int16 v140 = a2;
    double v8 = *(double *)a1;
    uint64_t v9 = a1[1];
    uint64_t v10 = a1[2];
    uint64_t v11 = a1[3];
    uint64_t v12 = a1[7];
    uint64_t v13 = a1[8];
    uint64_t v15 = a1[9];
    uint64_t v14 = a1[10];
    uint64_t v16 = a1[11];
    double v17 = *((double *)a1 + 12) * 3.6;
    uint64_t v19 = a1[23];
    uint64_t v18 = a1[24];
    uint64_t v20 = a1[25];
    uint64_t v21 = a1[26];
    uint64_t v116 = a1[27];
    uint64_t v23 = a1[19];
    uint64_t v22 = a1[20];
    uint64_t v24 = a1[21];
    uint64_t v25 = a1[37];
    uint64_t v112 = a1[36];
    uint64_t v26 = a1[41];
    uint64_t v98 = a1[42];
    uint64_t v27 = a1[38];
    uint64_t v100 = a1[39];
    uint64_t v104 = a1[40];
    uint64_t v106 = a1[46];
    uint64_t v108 = a1[47];
    uint64_t v110 = a1[48];
    uint64_t v114 = a1[49];
    double v28 = *((float *)a1 + 44);
    double v29 = *((float *)a1 + 45);
    uint64_t v97 = a1[4];
    uint64_t v102 = a1[5];
    uint64_t v118 = a1[29];
    uint64_t v120 = a1[30];
    uint64_t v122 = a1[31];
    uint64_t v124 = a1[32];
    int v138 = *((unsigned __int8 *)a1 + 264);
    int v136 = *((unsigned __int8 *)a1 + 265);
    uint64_t v134 = a1[34];
    int v132 = *((_DWORD *)a1 + 70);
    uint64_t v30 = a1[13];
    uint64_t v130 = a1[14];
    int v128 = *((_DWORD *)a1 + 30);
    int v126 = *((_DWORD *)a1 + 31);
    uint64_t v31 = a1 + 16;
    v281 = v7;
    double v283 = v8;
    uint64_t v285 = v9;
    uint64_t v287 = v10;
    uint64_t v289 = v11;
    int v293 = HIDWORD(v141);
    int v291 = v141;
    uint64_t v295 = v12;
    uint64_t v297 = v13;
    uint64_t v299 = v14;
    uint64_t v301 = v15;
    uint64_t v303 = v16;
    uint64_t v305 = v30;
    uint64_t v307 = v18;
    uint64_t v311 = v19;
    uint64_t v313 = v20;
    uint64_t v315 = v21;
    uint64_t v319 = v23;
    int v32 = *((_DWORD *)a1 + 56);
    uint64_t v321 = v22;
    int v33 = *((_DWORD *)a1 + 86);
    uint64_t v323 = v24;
    int v34 = *((unsigned __int8 *)a1 + 228);
    uint64_t v327 = v25;
    uint64_t v35 = a1[44];
    uint64_t v329 = v27;
    int v36 = *((unsigned __int8 *)a1 + 229);
    uint64_t v331 = v26;
    int v37 = *((unsigned __int8 *)a1 + 350);
    int v38 = *((unsigned __int8 *)a1 + 351);
    uint64_t v317 = v116;
    int v39 = *((unsigned __int8 *)a1 + 360);
    uint64_t v325 = v112;
    int v40 = *((unsigned __int8 *)a1 + 349);
    uint64_t v333 = v98;
    int v41 = *((unsigned __int8 *)a1 + 361);
    uint64_t v335 = v100;
    int v42 = *((unsigned __int8 *)a1 + 362);
    uint64_t v337 = v104;
    int v43 = *((unsigned __int8 *)a1 + 348);
    uint64_t v339 = v106;
    int v44 = *((_DWORD *)a1 + 100);
    uint64_t v341 = v108;
    int v45 = *((_DWORD *)a1 + 101);
    uint64_t v343 = v110;
    uint64_t v46 = a1[51];
    uint64_t v345 = v114;
    uint64_t v47 = a1[6];
    uint64_t v347 = v97;
    int v48 = *((_DWORD *)a1 + 104);
    uint64_t v349 = v102;
    int v49 = *((_DWORD *)a1 + 105);
    uint64_t v355 = v118;
    uint64_t v50 = a1[53];
    *(_DWORD *)std::stringbuf::string_type buf = 136463619;
    uint64_t v357 = v120;
    __int16 v282 = 2050;
    __int16 v284 = 2050;
    __int16 v286 = 2050;
    __int16 v288 = 2050;
    uint64_t v359 = v122;
    __int16 v290 = 1026;
    __int16 v292 = 1026;
    uint64_t v361 = v124;
    __int16 v294 = 2049;
    __int16 v296 = 2049;
    __int16 v298 = 2050;
    __int16 v300 = 2050;
    __int16 v302 = 2050;
    __int16 v304 = 2050;
    __int16 v306 = 2050;
    __int16 v308 = 2050;
    double v309 = v17;
    __int16 v310 = 2050;
    __int16 v312 = 2050;
    __int16 v314 = 2050;
    __int16 v316 = 2050;
    __int16 v318 = 2049;
    __int16 v320 = 2049;
    __int16 v322 = 2050;
    __int16 v324 = 2049;
    __int16 v326 = 2049;
    __int16 v328 = 2050;
    __int16 v330 = 2049;
    __int16 v332 = 2049;
    __int16 v334 = 2049;
    __int16 v336 = 2049;
    __int16 v338 = 2049;
    __int16 v340 = 2049;
    __int16 v342 = 2049;
    __int16 v344 = 2049;
    __int16 v346 = 2049;
    __int16 v348 = 2049;
    __int16 v350 = 2050;
    double v351 = v28;
    __int16 v352 = 2050;
    double v353 = v29;
    __int16 v354 = 2050;
    __int16 v356 = 2050;
    __int16 v358 = 2050;
    __int16 v360 = 2050;
    __int16 v362 = 1026;
    int v363 = v138;
    __int16 v364 = 1026;
    int v365 = v136;
    __int16 v366 = 2050;
    uint64_t v367 = v134;
    __int16 v368 = 1026;
    int v369 = v132;
    __int16 v370 = 2049;
    uint64_t v371 = v130;
    __int16 v372 = 1026;
    int v373 = v128;
    __int16 v374 = 1026;
    int v375 = v126;
    __int16 v376 = 2081;
    v377 = v31;
    __int16 v378 = 1026;
    int v379 = v32;
    __int16 v380 = 1026;
    int v381 = v33;
    __int16 v382 = 1026;
    int v383 = v34;
    __int16 v384 = 2050;
    uint64_t v385 = v35;
    __int16 v386 = 1026;
    int v387 = v36;
    __int16 v388 = 1026;
    int v389 = v37;
    __int16 v390 = 1026;
    int v391 = v38;
    __int16 v392 = 1026;
    int v393 = v39;
    __int16 v394 = 1026;
    int v395 = v40;
    __int16 v396 = 1026;
    int v397 = v41;
    __int16 v398 = 1026;
    int v399 = v42;
    __int16 v400 = 1026;
    int v401 = v43;
    __int16 v402 = 1026;
    int v403 = v44;
    __int16 v404 = 1026;
    int v405 = v45;
    __int16 v406 = 2050;
    uint64_t v407 = v46;
    __int16 v408 = 2050;
    uint64_t v409 = v47;
    __int16 v410 = 1026;
    int v411 = v48;
    __int16 v412 = 1026;
    int v413 = v49;
    __int16 v414 = 2050;
    double v415 = a3;
    __int16 v416 = 2050;
    uint64_t v417 = v50;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}s,trip,%{public}lld,T,%{public}.1lf,machT,%{public}.2lf,contT,%{public}.2lf,gpsTMs,%{public}d,%{publ ic}d,LL,%{private}.7lf,%{private}.7lf,hunc,%{public}.1lf,alt,%{public}.1lf,vunc,%{public}.1lf,crse,%{public}.1lf,c rseUnc,%{public}.1lf,spdKph,%{public}.3lf,spdUncMps,%{public}.1lf,a95,%{public}.1lf,b95,%{public}.1lf,theta,%{publ ic}.1lf,snapLL,%{private}.7lf,%{private}.7lf,snapCrse,%{public}.1lf,fSnapLL,%{private}.7lf,%{private}.7lf,fSnapCrs e,%{public}.1lf,pSnapLL,%{private}.7lf,%{private}.7lf,rwSnapLL,%{private}.7lf,%{private}.7lf,rwSnapOfstLL,%{privat e}.7lf,%{private}.7lf,rwFSnapOfstLL,%{private}.7lf,%{private}.7lf,rwLL,%{private}.7lf,%{private}.7lf,score,%{publi c}.1lf,ratio,%{public}.1lf,varFac,%{public}.7g,deltaAz,%{public}.3lf,alngTrk,%{public}.3lf,acrsTrk,%{public}.3lf,u sable,%{public}d,ambiguous,%{public}d,proj,%{public}.3lf,type,%{public}d,rseg,%{private}lld,frc,%{public}d,fow,%{p ublic}d,road,%{private}s,activity,%{public}d,actConf,%{public}d,static,%{public}d,staticSetAt,%{public}.1lf,mo unt,%{public}d,fitness,%{public}d,shifted,%{public}d,propagated,%{public}d,rail,%{public}d,bridge,%{public}d,tunne l,%{public}d,favGPS,%{public}d,gnssCont,%{public}d,locationType,%{public}d,lifespan,%{public}.1lf,rawCourse,%{publ ic}.1lf,sigEnv,%{public}d,sigEnvFid,%{public}d,latency,%{public}.1lf,rw,%{public}.2lf",  buf,  0x25Cu);
    a2 = v140;
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188CE30);
    }
    double v51 = *(double *)a1;
    uint64_t v52 = a1[1];
    uint64_t v53 = a1[2];
    uint64_t v54 = a1[3];
    uint64_t v55 = a1[7];
    uint64_t v56 = a1[8];
    uint64_t v58 = a1[9];
    uint64_t v57 = a1[10];
    uint64_t v59 = a1[11];
    double v60 = *((double *)a1 + 12) * 3.6;
    uint64_t v62 = a1[23];
    uint64_t v61 = a1[24];
    uint64_t v63 = a1[25];
    uint64_t v64 = a1[26];
    uint64_t v65 = a1[27];
    uint64_t v67 = a1[19];
    uint64_t v66 = a1[20];
    uint64_t v68 = a1[21];
    uint64_t v69 = a1[37];
    uint64_t v113 = a1[36];
    uint64_t v70 = a1[41];
    uint64_t v99 = a1[42];
    uint64_t v71 = a1[38];
    uint64_t v103 = a1[39];
    uint64_t v105 = a1[40];
    uint64_t v107 = a1[46];
    uint64_t v111 = a1[47];
    uint64_t v115 = a1[48];
    uint64_t v117 = a1[49];
    double v72 = *((float *)a1 + 44);
    double v73 = *((float *)a1 + 45);
    uint64_t v101 = a1[4];
    uint64_t v109 = a1[5];
    uint64_t v119 = a1[29];
    uint64_t v121 = a1[30];
    uint64_t v123 = a1[31];
    uint64_t v125 = a1[32];
    int v139 = *((unsigned __int8 *)a1 + 264);
    int v137 = *((unsigned __int8 *)a1 + 265);
    uint64_t v135 = a1[34];
    int v133 = *((_DWORD *)a1 + 70);
    uint64_t v74 = a1[13];
    uint64_t v131 = a1[14];
    int v129 = *((_DWORD *)a1 + 30);
    int v127 = *((_DWORD *)a1 + 31);
    __int128 v75 = a1 + 16;
    uint64_t v143 = a2;
    double v145 = v51;
    uint64_t v147 = v52;
    uint64_t v149 = v53;
    uint64_t v151 = v54;
    int v155 = HIDWORD(v141);
    int v153 = v141;
    uint64_t v157 = v55;
    uint64_t v159 = v56;
    uint64_t v161 = v57;
    uint64_t v163 = v58;
    uint64_t v165 = v59;
    uint64_t v167 = v74;
    uint64_t v169 = v61;
    uint64_t v173 = v62;
    uint64_t v175 = v63;
    uint64_t v177 = v64;
    uint64_t v179 = v65;
    uint64_t v181 = v67;
    int v76 = *((_DWORD *)a1 + 56);
    uint64_t v183 = v66;
    int v77 = *((_DWORD *)a1 + 86);
    uint64_t v185 = v68;
    int v78 = *((unsigned __int8 *)a1 + 228);
    uint64_t v189 = v69;
    uint64_t v79 = a1[44];
    uint64_t v191 = v71;
    int v80 = *((unsigned __int8 *)a1 + 229);
    uint64_t v193 = v70;
    int v81 = *((unsigned __int8 *)a1 + 350);
    int v82 = *((unsigned __int8 *)a1 + 351);
    uint64_t v187 = v113;
    int v83 = *((unsigned __int8 *)a1 + 360);
    uint64_t v195 = v99;
    int v84 = *((unsigned __int8 *)a1 + 349);
    uint64_t v197 = v103;
    int v85 = *((unsigned __int8 *)a1 + 361);
    uint64_t v199 = v105;
    int v86 = *((unsigned __int8 *)a1 + 362);
    uint64_t v201 = v107;
    int v87 = *((unsigned __int8 *)a1 + 348);
    uint64_t v203 = v111;
    int v88 = *((_DWORD *)a1 + 100);
    uint64_t v205 = v115;
    int v89 = *((_DWORD *)a1 + 101);
    uint64_t v207 = v117;
    uint64_t v90 = a1[51];
    uint64_t v209 = v101;
    uint64_t v91 = a1[6];
    uint64_t v211 = v109;
    int v92 = *((_DWORD *)a1 + 104);
    uint64_t v217 = v119;
    int v93 = *((_DWORD *)a1 + 105);
    uint64_t v94 = a1[53];
    int v142 = 136463619;
    uint64_t v219 = v121;
    __int16 v144 = 2050;
    __int16 v146 = 2050;
    __int16 v148 = 2050;
    __int16 v150 = 2050;
    uint64_t v221 = v123;
    __int16 v152 = 1026;
    __int16 v154 = 1026;
    uint64_t v223 = v125;
    __int16 v156 = 2049;
    __int16 v158 = 2049;
    __int16 v160 = 2050;
    __int16 v162 = 2050;
    __int16 v164 = 2050;
    __int16 v166 = 2050;
    __int16 v168 = 2050;
    __int16 v170 = 2050;
    double v171 = v60;
    __int16 v172 = 2050;
    __int16 v174 = 2050;
    __int16 v176 = 2050;
    __int16 v178 = 2050;
    __int16 v180 = 2049;
    __int16 v182 = 2049;
    __int16 v184 = 2050;
    __int16 v186 = 2049;
    __int16 v188 = 2049;
    __int16 v190 = 2050;
    __int16 v192 = 2049;
    __int16 v194 = 2049;
    __int16 v196 = 2049;
    __int16 v198 = 2049;
    __int16 v200 = 2049;
    __int16 v202 = 2049;
    __int16 v204 = 2049;
    __int16 v206 = 2049;
    __int16 v208 = 2049;
    __int16 v210 = 2049;
    __int16 v212 = 2050;
    double v213 = v72;
    __int16 v214 = 2050;
    double v215 = v73;
    __int16 v216 = 2050;
    __int16 v218 = 2050;
    __int16 v220 = 2050;
    __int16 v222 = 2050;
    __int16 v224 = 1026;
    int v225 = v139;
    __int16 v226 = 1026;
    int v227 = v137;
    __int16 v228 = 2050;
    uint64_t v229 = v135;
    __int16 v230 = 1026;
    int v231 = v133;
    __int16 v232 = 2049;
    uint64_t v233 = v131;
    __int16 v234 = 1026;
    int v235 = v129;
    __int16 v236 = 1026;
    int v237 = v127;
    __int16 v238 = 2081;
    uint64_t v239 = v75;
    __int16 v240 = 1026;
    int v241 = v76;
    __int16 v242 = 1026;
    int v243 = v77;
    __int16 v244 = 1026;
    int v245 = v78;
    __int16 v246 = 2050;
    uint64_t v247 = v79;
    __int16 v248 = 1026;
    int v249 = v80;
    __int16 v250 = 1026;
    int v251 = v81;
    __int16 v252 = 1026;
    int v253 = v82;
    __int16 v254 = 1026;
    int v255 = v83;
    __int16 v256 = 1026;
    int v257 = v84;
    __int16 v258 = 1026;
    int v259 = v85;
    __int16 v260 = 1026;
    int v261 = v86;
    __int16 v262 = 1026;
    int v263 = v87;
    __int16 v264 = 1026;
    int v265 = v88;
    __int16 v266 = 1026;
    int v267 = v89;
    __int16 v268 = 2050;
    uint64_t v269 = v90;
    __int16 v270 = 2050;
    uint64_t v271 = v91;
    __int16 v272 = 1026;
    int v273 = v92;
    __int16 v274 = 1026;
    int v275 = v93;
    __int16 v276 = 2050;
    double v277 = a3;
    __int16 v278 = 2050;
    uint64_t v279 = v94;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}s,trip,%{public}lld,T,%{public}.1lf,machT,%{public}.2lf,contT,%{public}.2lf,gpsTMs,%{public}d,%{publ ic}d,LL,%{private}.7lf,%{private}.7lf,hunc,%{public}.1lf,alt,%{public}.1lf,vunc,%{public}.1lf,crse,%{public}.1lf,c rseUnc,%{public}.1lf,spdKph,%{public}.3lf,spdUncMps,%{public}.1lf,a95,%{public}.1lf,b95,%{public}.1lf,theta,%{publ ic}.1lf,snapLL,%{private}.7lf,%{private}.7lf,snapCrse,%{public}.1lf,fSnapLL,%{private}.7lf,%{private}.7lf,fSnapCrs e,%{public}.1lf,pSnapLL,%{private}.7lf,%{private}.7lf,rwSnapLL,%{private}.7lf,%{private}.7lf,rwSnapOfstLL,%{privat e}.7lf,%{private}.7lf,rwFSnapOfstLL,%{private}.7lf,%{private}.7lf,rwLL,%{private}.7lf,%{private}.7lf,score,%{publi c}.1lf,ratio,%{public}.1lf,varFac,%{public}.7g,deltaAz,%{public}.3lf,alngTrk,%{public}.3lf,acrsTrk,%{public}.3lf,u sable,%{public}d,ambiguous,%{public}d,proj,%{public}.3lf,type,%{public}d,rseg,%{private}lld,frc,%{public}d,fow,%{p ublic}d,road,%{private}s,activity,%{public}d,actConf,%{public}d,static,%{public}d,staticSetAt,%{public}.1lf,mo unt,%{public}d,fitness,%{public}d,shifted,%{public}d,propagated,%{public}d,rail,%{public}d,bridge,%{public}d,tunne l,%{public}d,favGPS,%{public}d,gnssCont,%{public}d,locationType,%{public}d,lifespan,%{public}.1lf,rawCourse,%{publ ic}.1lf,sigEnv,%{public}d,sigEnvFid,%{public}d,latency,%{public}.1lf,rw,%{public}.2lf",  &v142,  604);
    int v96 = (uint8_t *)v95;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLMapCrumb::debugOutput(const std::string, double)", "%s\n", v95);
    if (v96 != buf) {
      free(v96);
    }
  }

void sub_100F20024(uint64_t a1, uint64_t *a2)
{
  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_10188CE30);
  }
  double v4 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
  {
    BOOL v5 = a2;
    uint64_t v6 = *(void *)(a1 + 8);
    int v7 = *(unsigned __int8 *)(a1 + 265);
    uint64_t v104 = v5;
    uint64_t v8 = *(void *)(a1 + 56);
    uint64_t v9 = *(void *)(a1 + 64);
    uint64_t v106 = v6;
    int v110 = v7;
    uint64_t v10 = *(void *)(a1 + 152);
    uint64_t v11 = *(void *)(a1 + 160);
    uint64_t v112 = v8;
    uint64_t v12 = *(void *)(a1 + 168);
    uint64_t v114 = v9;
    uint64_t v118 = v10;
    uint64_t v14 = *(void *)(a1 + 296);
    uint64_t v13 = *(void *)(a1 + 304);
    uint64_t v120 = v11;
    uint64_t v122 = v12;
    uint64_t v16 = *(void *)(a1 + 72);
    uint64_t v15 = *(void *)(a1 + 80);
    uint64_t v126 = v14;
    uint64_t v128 = v13;
    uint64_t v17 = *(void *)(a1 + 88);
    uint64_t v18 = *(void *)(a1 + 96);
    uint64_t v130 = v15;
    uint64_t v134 = v17;
    uint64_t v19 = *(void *)(a1 + 184);
    uint64_t v136 = *(void *)(a1 + 192);
    uint64_t v138 = v18;
    uint64_t v20 = *(void *)(a1 + 208);
    uint64_t v142 = *(void *)(a1 + 200);
    uint64_t v144 = v20;
    uint64_t v146 = *(void *)(a1 + 216);
    int v150 = *(unsigned __int8 *)(a1 + 360);
    int v154 = *(unsigned __int8 *)(a1 + 361);
    int v158 = *(_DWORD *)(a1 + 404);
    int v162 = *(_DWORD *)(a1 + 420);
    int v108 = *(unsigned __int8 *)(a1 + 264);
    uint64_t v116 = *(void *)(a1 + 104);
    uint64_t v124 = *(void *)(a1 + 288);
    __int16 v111 = 2049;
    __int16 v113 = 2049;
    __int16 v117 = 2049;
    __int16 v119 = 2049;
    __int16 v123 = 2049;
    __int16 v125 = 2049;
    uint64_t v132 = v16;
    uint64_t v140 = v19;
    int v148 = *(unsigned __int8 *)(a1 + 351);
    int v152 = *(unsigned __int8 *)(a1 + 349);
    int v156 = *(unsigned __int8 *)(a1 + 362);
    int v160 = *(_DWORD *)(a1 + 416);
    __int16 v107 = 1026;
    __int16 v109 = 1026;
    __int16 v147 = 1026;
    __int16 v149 = 1026;
    __int16 v151 = 1026;
    __int16 v153 = 1026;
    __int16 v155 = 1026;
    __int16 v157 = 1026;
    __int16 v159 = 1026;
    __int16 v161 = 1026;
    __int16 v105 = 2050;
    __int16 v115 = 2050;
    __int16 v121 = 2050;
    __int16 v127 = 2050;
    __int16 v129 = 2050;
    __int16 v131 = 2050;
    __int16 v133 = 2050;
    __int16 v135 = 2050;
    __int16 v137 = 2050;
    __int16 v139 = 2050;
    __int16 v141 = 2050;
    __int16 v143 = 2050;
    __int16 v145 = 2050;
    __int16 v163 = 2050;
    uint64_t v164 = *(void *)(a1 + 424);
    *(_DWORD *)std::stringbuf::string_type buf = 136453891;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}s,T,%{public}.1lf,usable,%{public}d,ambiguous,%{public}d,LL,%{private}.7lf,%{private}.7lf,crse,%{pub lic}.1lf,snapLL,%{private}.7lf,%{private}.7lf,snapCrse,%{public}.1lf,fSnapLL,%{private}.7lf,%{private}.7lf,fSnapCr se,%{public}.1lf,hunc,%{public}.1lf,alt,%{public}.1lf,vunc,%{public}.1lf,crseUnc,%{public}.1lf,spdMps,%{public}.3l f,spdUncMps,%{public}.1lf,a95,%{public}.1lf,b95,%{public}.1lf,theta,%{public}.1lf,shifted,%{public}d,propagated,%{ public}d,rail,%{public}d,bridge,%{public}d,tunnel,%{public}d,locationType,%{public}d,sigEnv,%{public}d,sigEnvFid,% {public}d,rw,%{public}.2lf",  buf,  0x110u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188CE30);
    }
    uint64_t v21 = *(void *)(a1 + 8);
    int v22 = *(unsigned __int8 *)(a1 + 264);
    int v42 = a2;
    int v23 = *(unsigned __int8 *)(a1 + 265);
    uint64_t v44 = v21;
    int v46 = v22;
    uint64_t v24 = *(void *)(a1 + 56);
    uint64_t v25 = *(void *)(a1 + 64);
    int v48 = v23;
    uint64_t v26 = *(void *)(a1 + 104);
    uint64_t v50 = v24;
    uint64_t v52 = v25;
    uint64_t v27 = *(void *)(a1 + 152);
    uint64_t v28 = *(void *)(a1 + 160);
    uint64_t v54 = v26;
    uint64_t v29 = *(void *)(a1 + 168);
    uint64_t v56 = v27;
    uint64_t v58 = v28;
    uint64_t v30 = *(void *)(a1 + 288);
    uint64_t v31 = *(void *)(a1 + 296);
    uint64_t v60 = v29;
    uint64_t v32 = *(void *)(a1 + 304);
    uint64_t v62 = v30;
    __int16 v49 = 2049;
    __int16 v51 = 2049;
    __int16 v55 = 2049;
    __int16 v57 = 2049;
    __int16 v61 = 2049;
    __int16 v63 = 2049;
    uint64_t v64 = v31;
    uint64_t v33 = *(void *)(a1 + 88);
    uint64_t v34 = *(void *)(a1 + 96);
    uint64_t v66 = v32;
    uint64_t v72 = v33;
    uint64_t v35 = *(void *)(a1 + 184);
    uint64_t v74 = *(void *)(a1 + 192);
    uint64_t v76 = v34;
    uint64_t v36 = *(void *)(a1 + 208);
    uint64_t v80 = *(void *)(a1 + 200);
    uint64_t v37 = *(void *)(a1 + 216);
    uint64_t v82 = v36;
    LODWORD(v36) = *(unsigned __int8 *)(a1 + 360);
    uint64_t v84 = v37;
    LODWORD(v37) = *(unsigned __int8 *)(a1 + 361);
    int v88 = v36;
    LODWORD(v36) = *(_DWORD *)(a1 + 404);
    int v92 = v37;
    LODWORD(v37) = *(_DWORD *)(a1 + 420);
    int v96 = v36;
    int v100 = v37;
    uint64_t v38 = *(void *)(a1 + 72);
    uint64_t v68 = *(void *)(a1 + 80);
    uint64_t v70 = v38;
    uint64_t v78 = v35;
    int v86 = *(unsigned __int8 *)(a1 + 351);
    int v90 = *(unsigned __int8 *)(a1 + 349);
    int v94 = *(unsigned __int8 *)(a1 + 362);
    int v98 = *(_DWORD *)(a1 + 416);
    __int16 v45 = 1026;
    __int16 v47 = 1026;
    __int16 v85 = 1026;
    __int16 v87 = 1026;
    __int16 v89 = 1026;
    __int16 v91 = 1026;
    __int16 v93 = 1026;
    __int16 v95 = 1026;
    __int16 v97 = 1026;
    __int16 v99 = 1026;
    __int16 v43 = 2050;
    __int16 v53 = 2050;
    __int16 v59 = 2050;
    __int16 v65 = 2050;
    __int16 v67 = 2050;
    __int16 v69 = 2050;
    __int16 v71 = 2050;
    __int16 v73 = 2050;
    __int16 v75 = 2050;
    __int16 v77 = 2050;
    __int16 v79 = 2050;
    __int16 v81 = 2050;
    __int16 v83 = 2050;
    __int16 v101 = 2050;
    uint64_t v102 = *(void *)(a1 + 424);
    int v41 = 136453891;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}s,T,%{public}.1lf,usable,%{public}d,ambiguous,%{public}d,LL,%{private}.7lf,%{private}.7lf,crse,%{pub lic}.1lf,snapLL,%{private}.7lf,%{private}.7lf,snapCrse,%{public}.1lf,fSnapLL,%{private}.7lf,%{private}.7lf,fSnapCr se,%{public}.1lf,hunc,%{public}.1lf,alt,%{public}.1lf,vunc,%{public}.1lf,crseUnc,%{public}.1lf,spdMps,%{public}.3l f,spdUncMps,%{public}.1lf,a95,%{public}.1lf,b95,%{public}.1lf,theta,%{public}.1lf,shifted,%{public}d,propagated,%{ public}d,rail,%{public}d,bridge,%{public}d,tunnel,%{public}d,locationType,%{public}d,sigEnv,%{public}d,sigEnvFid,% {public}d,rw,%{public}.2lf",  &v41,  272);
    int v40 = (uint8_t *)v39;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLMapCrumb::condensedDebugOutput(const std::string) const", "%s\n", v39);
    if (v40 != buf) {
      free(v40);
    }
  }

std::string *sub_100F204B0@<X0>(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v12 = 0LL;
  sub_10029524C((int *)&v12 + 1, &v12, *(double *)(a1 + 8));
  a2->__r_.__value_.__r.__words[0] = 0LL;
  a2->__r_.__value_.__l.__size_ = 0LL;
  a2->__r_.__value_.__l.__cap_ = 0LL;
  snprintf(__str, 0x100uLL, "trip,%lld", *(void *)a1);
  std::string::assign(a2, __str);
  snprintf(__str, 0x100uLL, ",T,%.1lf", *(double *)(a1 + 8));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",machT,%.2lf", *(double *)(a1 + 16));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",contT,%.2lf", *(double *)(a1 + 24));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",gpsTMs,%d,%d", HIDWORD(v12), v12);
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",LL,%.7lf,%.7lf", *(double *)(a1 + 56), *(double *)(a1 + 64));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",hunc,%.1lf", *(double *)(a1 + 80));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",alt,%.1lf", *(double *)(a1 + 72));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",vunc,%.1lf", *(double *)(a1 + 88));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",crse,%.1lf", *(double *)(a1 + 104));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",crseUnc,%.1lf", *(double *)(a1 + 192));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",spdKph,%.3lf", *(double *)(a1 + 96) * 3.6);
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",spdUncMps,%.1lf", *(double *)(a1 + 184));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",a95,%.1lf", *(double *)(a1 + 200));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",b95,%.1lf", *(double *)(a1 + 208));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",theta,%.1lf", *(double *)(a1 + 216));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",snapLL,%.7lf,%.7lf", *(double *)(a1 + 152), *(double *)(a1 + 160));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",snapCrse,%.1lf", *(double *)(a1 + 168));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",fSnapLL,%.7lf,%.7lf", *(double *)(a1 + 288), *(double *)(a1 + 296));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",fSnapCrse,%.1lf", *(double *)(a1 + 304));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",pSnapLL,%.7lf,%.7lf", *(double *)(a1 + 328), *(double *)(a1 + 336));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",rwSnapLL,%.7lf,%.7lf", *(double *)(a1 + 312), *(double *)(a1 + 320));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",rwSnapOfstLL,%.7lf,%.7lf", *(double *)(a1 + 368), *(double *)(a1 + 376));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",rwFSnapOfstLL,%.7lf,%.7lf", *(double *)(a1 + 384), *(double *)(a1 + 392));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",rwLL,%.7lf,%.7lf", *(double *)(a1 + 32), *(double *)(a1 + 40));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",score,%.1lf", *(float *)(a1 + 176));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",ratio,%.1lf", *(float *)(a1 + 180));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",varFac,%.7g", *(double *)(a1 + 232));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",deltaAz,%.3lf", *(double *)(a1 + 240));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",alngTrk,%.3lf", *(double *)(a1 + 248));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",acrsTrk,%.3lf", *(double *)(a1 + 256));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",usable,%d", *(unsigned __int8 *)(a1 + 264));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",ambiguous,%d", *(unsigned __int8 *)(a1 + 265));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",proj,%.3lf", *(double *)(a1 + 272));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",type,%d", *(_DWORD *)(a1 + 280));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",rseg,%lld", *(void *)(a1 + 112));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",frc,%d", *(_DWORD *)(a1 + 120));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",fow,%d", *(_DWORD *)(a1 + 124));
  std::string::append(a2, __str);
  std::operator+<char>(&v9, ",road,", a1 + 128);
  double v4 = std::string::append(&v9, "");
  __int128 v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  int64_t cap = v4->__r_.__value_.__l.__cap_;
  *(_OWORD *)std::string __p = v5;
  v4->__r_.__value_.__l.__size_ = 0LL;
  v4->__r_.__value_.__l.__cap_ = 0LL;
  v4->__r_.__value_.__r.__words[0] = 0LL;
  if (cap >= 0) {
    uint64_t v6 = __p;
  }
  else {
    uint64_t v6 = (void **)__p[0];
  }
  if (cap >= 0) {
    std::string::size_type v7 = HIBYTE(cap);
  }
  else {
    std::string::size_type v7 = (std::string::size_type)__p[1];
  }
  std::string::append(a2, (const std::string::value_type *)v6, v7);
  if (SHIBYTE(cap) < 0) {
    operator delete(__p[0]);
  }
  snprintf(__str, 0x100uLL, ",activity,%d", *(_DWORD *)(a1 + 224));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",actConf,%d", *(_DWORD *)(a1 + 344));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",static,%d", *(unsigned __int8 *)(a1 + 228));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",staticSetAt,%.1lf", *(double *)(a1 + 352));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",mount,%d", *(unsigned __int8 *)(a1 + 229));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",fitness,%d", *(unsigned __int8 *)(a1 + 350));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",shifted,%d", *(unsigned __int8 *)(a1 + 351));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",propagated,%d", *(unsigned __int8 *)(a1 + 360));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",rail,%d", *(unsigned __int8 *)(a1 + 349));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",bridge,%d", *(unsigned __int8 *)(a1 + 361));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",tunnel,%d", *(unsigned __int8 *)(a1 + 362));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",favGPS,%d", *(unsigned __int8 *)(a1 + 348));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",gnssCont,%d", *(_DWORD *)(a1 + 400));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",locationType,%d", *(_DWORD *)(a1 + 404));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",lifespan,%.1lf", *(double *)(a1 + 408));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",rawCourse,%.1lf", *(double *)(a1 + 48));
  std::string::append(a2, __str);
  snprintf(__str, 0x100uLL, ",rw,%.2lf", *(double *)(a1 + 424));
  return std::string::append(a2, __str);
}

void sub_100F20E54( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20, __int16 a21, char a22, char a23)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  if (a17 < 0) {
    operator delete(a12);
  }
  _Unwind_Resume(exception_object);
}

double sub_100F20EAC(uint64_t a1, double *a2)
{
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  *(void *)(a1 + 36_Block_object_dispose((const void *)(v1 - 128), 8) = v4;
  *(void *)(a1 + 376) = v5;
  *(void *)(a1 + 384) = v4;
  *(void *)(a1 + 392) = v5;
  uint64_t v21 = 0LL;
  uint64_t v22 = 0LL;
  uint64_t v19 = 0LL;
  double v20 = 0.0;
  sub_1010DDBC0(v17, "SnapOutput");
  if (sub_100F21150( a1,  a2,  (uint64_t *)v17,  (double *)&v22,  (double *)&v21,  *(double *)(a1 + 152),  *(double *)(a1 + 160)))
  {
    sub_1010DDBC0(__p, "FullSnapOutput");
    BOOL v6 = !sub_100F21150(a1, a2, (uint64_t *)__p, &v20, (double *)&v19, *(double *)(a1 + 288), *(double *)(a1 + 296));
    if (v16 < 0) {
      operator delete(__p[0]);
    }
  }

  else
  {
    BOOL v6 = 1;
  }

  if (v18 < 0)
  {
    operator delete(v17[0]);
    if (v6) {
      goto LABEL_7;
    }
LABEL_17:
    uint64_t v13 = v21;
    *(void *)(a1 + 36_Block_object_dispose((const void *)(v1 - 128), 8) = v22;
    *(void *)(a1 + 376) = v13;
    uint64_t v14 = v19;
    double result = v20;
    *(double *)(a1 + 384) = v20;
    *(void *)(a1 + 392) = v14;
    return result;
  }

  if (!v6) {
    goto LABEL_17;
  }
LABEL_7:
  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_10188CE30);
  }
  std::string::size_type v7 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v8 = *(void *)(a1 + 8);
    *(_DWORD *)std::stringbuf::string_type buf = 134349056;
    uint64_t v26 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "CLMM, %{public}.1lf, not matching, unable to compute snap from raw positions",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188CE30);
    }
    uint64_t v10 = *(void *)(a1 + 8);
    int v23 = 134349056;
    uint64_t v24 = v10;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM, %{public}.1lf, not matching, unable to compute snap from raw positions",  &v23,  12);
    uint64_t v12 = (uint8_t *)v11;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLMapCrumb::fillSnapSolutionFromRawGPS(CLDistanceCalc &)", "%s\n", v11);
    if (v12 != buf) {
      free(v12);
    }
  }

  return result;
}

void sub_100F21114( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20, char a21, char a22)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_100F21150(uint64_t a1, double *a2, uint64_t *a3, double *a4, double *a5, double a6, double a7)
{
  if (sub_10029286C(*(double *)(a1 + 56), *(double *)(a1 + 64))
    || sub_10029286C(*(double *)(a1 + 32), *(double *)(a1 + 40)))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188CE30);
    }
    uint64_t v14 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v15 = *(void *)(a1 + 8);
      *(_DWORD *)std::stringbuf::string_type buf = 134349056;
      uint64_t v48 = v15;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "CLMM, %{public}.1lf, null island", buf, 0xCu);
    }

    BOOL v16 = 0LL;
    if (!sub_1002921D0(115, 0)) {
      return v16;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188CE30);
    }
    uint64_t v28 = *(void *)(a1 + 8);
    int v35 = 134349056;
    uint64_t v36 = v28;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM, %{public}.1lf, null island",  &v35,  12);
    uint64_t v30 = (uint8_t *)v29;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLMapCrumb::computeSnapCoordinatesFromRawGPSCoordinates(CLDistanceCalc &, const std::string, double, double, double &, double &) const",  "%s\n",  v29);
    if (v30 != buf) {
      free(v30);
    }
    return 0LL;
  }

  double v33 = 0.0;
  double v34 = 0.0;
  double v32 = 0.0;
  if (!sub_100D2DA44( a2,  &v33,  &v34,  &v32,  *(double *)(a1 + 56),  *(double *)(a1 + 64),  *(double *)(a1 + 72),  a6,  a7,  *(double *)(a1 + 72))) {
    return 0LL;
  }
  uint64_t v31 = 0LL;
  BOOL v16 = sub_100D2E16C( a2,  a4,  a5,  (double *)&v31,  *(double *)(a1 + 32),  *(double *)(a1 + 40),  *(double *)(a1 + 72),  v33,  v34,  v32);
  if (v16)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10188CE30);
    }
    char v18 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v19 = *(void *)(a1 + 8);
      double v20 = a3;
      double v21 = *a4;
      double v22 = *a5;
      *(_DWORD *)std::stringbuf::string_type buf = 134350339;
      uint64_t v48 = v19;
      __int16 v49 = 2080;
      uint64_t v50 = v20;
      __int16 v51 = 2049;
      double v52 = a6;
      __int16 v53 = 2049;
      double v54 = a7;
      __int16 v55 = 2049;
      double v56 = v21;
      __int16 v57 = 2049;
      double v58 = v22;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEBUG,  "CLMM, %{public}.1lf, New Snap Coordinates,%s,inSnapLat,%{private}.8lf,inSnapLon,%{private}.8lf,outSnapLat,%{priv ate}.8lf,outSnapLon,%{private}.8lf",  buf,  0x3Eu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10188CE30);
      }
      uint64_t v23 = *(void *)(a1 + 8);
      double v24 = *a4;
      double v25 = *a5;
      int v35 = 134350339;
      uint64_t v36 = v23;
      __int16 v37 = 2080;
      uint64_t v38 = a3;
      __int16 v39 = 2049;
      double v40 = a6;
      __int16 v41 = 2049;
      double v42 = a7;
      __int16 v43 = 2049;
      double v44 = v24;
      __int16 v45 = 2049;
      double v46 = v25;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM, %{public}.1lf, New Snap Coordinates,%s,inSnapLat,%{private}.8lf,inSnapLon,%{private}.8lf,outSnapLat,%{priv ate}.8lf,outSnapLon,%{private}.8lf",  &v35,  62);
      uint64_t v27 = (uint8_t *)v26;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLMapCrumb::computeSnapCoordinatesFromRawGPSCoordinates(CLDistanceCalc &, const std::string, double, double , double &, double &) const",  "%s\n",  v26);
      if (v27 != buf) {
        free(v27);
      }
    }
  }

  return v16;
}

void sub_100F21598(id a1)
{
  qword_1019348B8 = (uint64_t)os_log_create("com.apple.locationd.Position", "MapMatcher");
}

void sub_100F2163C(_Unwind_Exception *a1)
{
}

void sub_100F21694(id a1)
{
  qword_10199F570 = -[CMPedometerTableStepCadenceToStrideLength initWithTestMode:]( objc_alloc(&OBJC_CLASS___CMPedometerTableStepCadenceToStrideLength),  "initWithTestMode:",  0LL);
}

void sub_100F217C8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, void *a14, uint64_t a15)
{
  if (__p) {
    operator delete(__p);
  }
  if (a14) {
    operator delete(a14);
  }
  _Unwind_Resume(exception_object);
}

id sub_100F21898(uint64_t a1, void *a2, uint64_t a3)
{
  if (qword_101934510 != -1) {
    dispatch_once(&qword_101934510, &stru_10188CE90);
  }
  BOOL v6 = (os_log_s *)qword_101934518;
  if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_DEBUG))
  {
    id v7 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "objectAtIndexedSubscript:", a3), "UTF8String");
    *(_DWORD *)std::stringbuf::string_type buf = 136315138;
    id v28 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "%s", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934510 != -1) {
      dispatch_once(&qword_101934510, &stru_10188CE90);
    }
    uint64_t v23 = qword_101934518;
    id v24 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "objectAtIndexedSubscript:", a3), "UTF8String");
    LODWORD(v32) = 136315138;
    *(void *)((char *)&v32 + 4) = v24;
    _os_log_send_and_compose_impl(2LL, 0LL, buf, 1628LL, &_mh_execute_header, v23, 2LL, "%s", (const char *)&v32);
    uint64_t v26 = (uint8_t *)v25;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[CMPedometerTableStepCadenceToStrideLength logBins]_block_invoke",  "%s\n",  v25);
    if (v26 != buf) {
      free(v26);
    }
  }

  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  id result = [*(id *)(a1 + 40) isBinaryLogging];
  if ((_DWORD)result)
  {
    *(void *)&__int128 v32 = &off_101858448;
    int v33 = a3;
    [a2 begin];
    uint64_t v34 = v10;
    [a2 end];
    uint64_t v35 = v11;
    unsigned int v36 = [a2 state];
    [a2 valueOut];
    uint64_t v37 = v12;
    *((CFAbsoluteTime *)&v32 + 1) = Current;
    uint64_t v13 = sub_100E00E14();
    sub_100E022E0(v13, (uint64_t)&v32);
    sub_101125260(buf);
    sub_10113AFBC(buf);
    v31 |= 1u;
    CFAbsoluteTime v29 = Current;
    uint64_t v14 = v30;
    *(_BYTE *)(v30 + 40) |= 8u;
    *(_DWORD *)(v14 + 32) = a3;
    uint64_t v15 = v30;
    [a2 begin];
    *(_BYTE *)(v15 + 40) |= 1u;
    *(void *)(v15 + _Block_object_dispose((const void *)(v1 - 128), 8) = v16;
    uint64_t v17 = v30;
    [a2 end];
    *(_BYTE *)(v17 + 40) |= 2u;
    *(void *)(v17 + 16) = v18;
    uint64_t v19 = v30;
    unsigned int v20 = [a2 state];
    *(_BYTE *)(v19 + 40) |= 0x10u;
    *(_DWORD *)(v19 + 36) = v20;
    uint64_t v21 = v30;
    [a2 valueOut];
    *(_BYTE *)(v21 + 40) |= 4u;
    *(void *)(v21 + 24) = v22;
    if (qword_1019A1D00 != -1) {
      dispatch_once(&qword_1019A1D00, &stru_10188CEB0);
    }
    if (qword_1019A1D08) {
      sub_1011CF3D0(qword_1019A1D08, (uint64_t)buf);
    }
    return (id)sub_101127D00((PB::Base *)buf);
  }

  return result;
}

void sub_100F21BD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100F21C60(id a1, void *a2)
{
}

void sub_100F22834(id a1)
{
  qword_101934518 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Pedometer");
}

uint64_t sub_100F22864()
{
  qword_10199F530 = 0LL;
  *(void *)algn_10199F538 = 0LL;
  qword_10199F540 = 0LL;
  unsigned __int8 v0 = operator new(0xA0uLL);
  qword_10199F540 = (uint64_t)(v0 + 10);
  v0[6] = xmmword_1013654C0;
  v0[7] = unk_1013654D0;
  v0[8] = xmmword_1013654E0;
  v0[9] = unk_1013654F0;
  v0[2] = xmmword_101365480;
  v0[3] = unk_101365490;
  v0[4] = xmmword_1013654A0;
  v0[5] = unk_1013654B0;
  *unsigned __int8 v0 = xmmword_101365460;
  v0[1] = unk_101365470;
  qword_10199F530 = (uint64_t)v0;
  *(void *)algn_10199F538 = v0 + 10;
  __cxa_atexit((void (*)(void *))sub_1001AD9F0, &qword_10199F530, (void *)&_mh_execute_header);
  qword_10199F550 = 0LL;
  qword_10199F558 = 0LL;
  qword_10199F548 = 0LL;
  uint64_t v1 = operator new(0xC0uLL);
  qword_10199F558 = (uint64_t)(v1 + 12);
  v1[8] = xmmword_101365580;
  v1[9] = unk_101365590;
  v1[10] = xmmword_1013655A0;
  v1[11] = unk_1013655B0;
  v1[4] = xmmword_101365540;
  _OWORD v1[5] = unk_101365550;
  v1[6] = xmmword_101365560;
  v1[7] = unk_101365570;
  _OWORD *v1 = xmmword_101365500;
  v1[1] = unk_101365510;
  v1[2] = xmmword_101365520;
  v1[3] = unk_101365530;
  qword_10199F548 = (uint64_t)v1;
  qword_10199F550 = (uint64_t)(v1 + 12);
  return __cxa_atexit((void (*)(void *))sub_1001AD9F0, &qword_10199F548, (void *)&_mh_execute_header);
}

uint64_t sub_100F22960(uint64_t a1, void *a2, void *a3)
{
  *(void *)(a1 + 136) = 0LL;
  *(void *)(a1 + sub_10000AE14(v14 + 144) = 0LL;
  *(void *)(a1 + 152) = 0LL;
  *(_BYTE *)(a1 + 16_Block_object_dispose((const void *)(v1 - 128), 8) = 0;
  *(_BYTE *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0LL;
  *(void *)(a1 + 192) = 0LL;
  *(void *)(a1 + 20sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = 0LL;
  *(void *)(a1 + 20_Block_object_dispose((const void *)(v1 - 128), 8) = *a3;
  if (*a2 != a2[1]) {
    *(void *)(a1 + 72) = *(void *)*a2;
  }
  *(double *)(a1 + sub_10000AE14(v14 + 160) = sub_100F22A2C(a1, a2);
  sub_100F22E94(a1, a2);
  return a1;
}

void sub_100F22A00(_Unwind_Exception *exception_object)
{
  uint64_t v5 = *v2;
  if (*v2)
  {
    *(void *)(v1 + sub_10000AE14(v14 + 144) = v5;
    operator delete(v5);
  }

  _Unwind_Resume(exception_object);
}

double sub_100F22A2C(uint64_t a1, void *a2)
{
  if (*a2 == a2[1]) {
    return -1.0;
  }
  sub_100F23B64((uint64_t)a2, (uint64_t *)&v76);
  uint64_t v3 = (char *)v76;
  uint64_t v4 = v77;
  __int128 v5 = *(_OWORD *)v76;
  __int128 v6 = *((_OWORD *)v76 + 1);
  __int128 v7 = *((_OWORD *)v76 + 3);
  __int128 v66 = *((_OWORD *)v76 + 2);
  __int128 v67 = v7;
  __int128 v64 = v5;
  __int128 v65 = v6;
  __int128 v8 = *((_OWORD *)v76 + 4);
  __int128 v9 = *((_OWORD *)v76 + 5);
  __int128 v10 = *((_OWORD *)v76 + 7);
  __int128 v70 = *((_OWORD *)v76 + 6);
  __int128 v71 = v10;
  __int128 v68 = v8;
  __int128 v69 = v9;
  __int128 v11 = *((_OWORD *)v76 + 8);
  __int128 v12 = *((_OWORD *)v76 + 9);
  __int128 v13 = *((_OWORD *)v76 + 11);
  __int128 v74 = *((_OWORD *)v76 + 10);
  __int128 v75 = v13;
  __int128 v72 = v11;
  __int128 v73 = v12;
  if (v76 != v77)
  {
    uint64_t v14 = (double *)(a1 + 96);
    uint64_t v15 = (char *)v76 + 8;
    uint64_t v16 = (__int128 *)v76;
    do
    {
      __int128 v17 = *(_OWORD *)(v3 + 24);
      *(_OWORD *)__int16 v83 = *v15;
      __int128 v84 = v17;
      __int128 v18 = *(_OWORD *)(v3 + 40);
      __int128 v19 = *(_OWORD *)(v3 + 56);
      __int128 v20 = *(_OWORD *)(v3 + 88);
      __int128 v87 = *(_OWORD *)(v3 + 72);
      __int128 v88 = v20;
      __int128 v85 = v18;
      __int128 v86 = v19;
      __int128 v21 = *(_OWORD *)(v3 + 104);
      __int128 v22 = *(_OWORD *)(v3 + 120);
      __int128 v23 = *(_OWORD *)(v3 + 136);
      *(_OWORD *)((char *)v91 + 12) = *(_OWORD *)(v3 + 148);
      __int128 v90 = v22;
      v91[0] = v23;
      __int128 v89 = v21;
      __int128 v24 = *(__int128 *)((char *)v16 + 24);
      *(_OWORD *)std::string __p = *(__int128 *)((char *)v16 + 8);
      __int128 v56 = v24;
      __int128 v25 = *(__int128 *)((char *)v16 + 40);
      __int128 v26 = *(__int128 *)((char *)v16 + 56);
      __int128 v27 = *(__int128 *)((char *)v16 + 88);
      __int128 v59 = *(__int128 *)((char *)v16 + 72);
      __int128 v60 = v27;
      __int128 v57 = v25;
      __int128 v58 = v26;
      __int128 v28 = *(__int128 *)((char *)v16 + 104);
      __int128 v29 = *(__int128 *)((char *)v16 + 120);
      __int128 v30 = *(__int128 *)((char *)v16 + 136);
      *(_OWORD *)((char *)v63 + 12) = *(__int128 *)((char *)v16 + 148);
      __int128 v62 = v29;
      v63[0] = v30;
      __int128 v61 = v28;
      sub_100D2DCA4(v14, (uint64_t)v83, (uint64_t)__p);
      __int128 v32 = *v16;
      __int128 v33 = v16[1];
      __int128 v34 = v16[3];
      __int128 v66 = v16[2];
      __int128 v67 = v34;
      __int128 v64 = v32;
      __int128 v65 = v33;
      __int128 v35 = v16[4];
      __int128 v36 = v16[5];
      __int128 v37 = v16[7];
      __int128 v70 = v16[6];
      __int128 v71 = v37;
      __int128 v68 = v35;
      __int128 v69 = v36;
      __int128 v38 = v16[8];
      __int128 v39 = v16[9];
      __int128 v40 = v16[11];
      __int128 v74 = v16[10];
      __int128 v75 = v40;
      __int128 v72 = v38;
      __int128 v73 = v39;
      v16 += 12;
    }

    while (v16 != v4);
  }

  double v41 = *(double *)(v3 + 84) - *(double *)((char *)&v69 + 4);
  if (v41 < 0.0)
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10188CED0);
    }
    double v42 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_FAULT))
    {
      sub_100B60DDC((uint64_t)v3, (std::stringbuf::string_type *)v83);
      int v43 = SBYTE7(v84);
      double v44 = (void **)v83[0];
      sub_100B60DDC((uint64_t)&v64, (std::stringbuf::string_type *)__p);
      __int16 v45 = v83;
      if (v43 < 0) {
        __int16 v45 = v44;
      }
      if ((SBYTE7(v56) & 0x80u) == 0) {
        double v46 = __p;
      }
      else {
        double v46 = (void **)__p[0];
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 136380931;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v45;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2081;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v46;
      _os_log_impl( (void *)&_mh_execute_header,  v42,  OS_LOG_TYPE_FAULT,  "WifiCentroidCalculator, timestamps out of order in getStationaryTimeInSeconds(), latest: %{private}s, oldest: %{private}s",  (uint8_t *)&buf,  0x16u);
      if (SBYTE7(v56) < 0) {
        operator delete(__p[0]);
      }
      if (SBYTE7(v84) < 0) {
        operator delete(v83[0]);
      }
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(v83, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_10188CED0);
      }
      uint64_t v48 = qword_101934858;
      sub_100B60DDC((uint64_t)v3, (std::stringbuf::string_type *)__p);
      int v49 = SBYTE7(v56);
      uint64_t v50 = (void **)__p[0];
      sub_100B60DDC((uint64_t)&v64, &buf);
      __int16 v51 = __p;
      if (v49 < 0) {
        __int16 v51 = v50;
      }
      if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        p_std::stringbuf::string_type buf = &buf;
      }
      else {
        p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
      }
      int v79 = 136380931;
      uint64_t v80 = v51;
      __int16 v81 = 2081;
      uint64_t v82 = p_buf;
      _os_log_send_and_compose_impl( 2LL,  0LL,  v83,  1628LL,  &_mh_execute_header,  v48,  17LL,  "WifiCentroidCalculator, timestamps out of order in getStationaryTimeInSeconds(), latest: %{private}s, oldest: %{private}s",  &v79,  22);
      double v54 = v53;
      if (SBYTE7(v56) < 0) {
        operator delete(__p[0]);
      }
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "double CLWifiCentroidCalculator::computeStationaryTimeInSeconds(const std::vector<CLWifiHarvestDatabaseEntry> &)",  "%s\n",  v54);
    }
  }

  if (v76)
  {
    __int16 v77 = (__int128 *)v76;
    operator delete(v76);
  }

  return v41;
}

void sub_100F22E30( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,void *__p)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_100F22E94(uint64_t a1, void *a2)
{
  uint64_t v2 = (char **)(a1 + 136);
  *(void *)(a1 + sub_10000AE14(v14 + 144) = *(void *)(a1 + 136);
  if (*a2 != a2[1])
  {
    sub_100F23B64((uint64_t)a2, (uint64_t *)&v91);
    if (sub_100F23F90(a1, &v91))
    {
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_10188CED0);
      }
      __int128 v5 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
      {
        sub_1007EC360((std::string *)__p);
        __int128 v6 = __p[23] >= 0 ? __p : *(_BYTE **)__p;
        *(_DWORD *)std::stringbuf::string_type buf = 136380675;
        *(void *)&uint8_t buf[4] = v6;
        _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "WifiCentroidCalculator, detected %{private}s as moving AP",  buf,  0xCu);
        if ((__p[23] & 0x80000000) != 0) {
          operator delete(*(void **)__p);
        }
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_74;
      }
      bzero(__p, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_10188CED0);
      }
      uint64_t v7 = qword_101934858;
      sub_1007EC360((std::string *)buf);
      __int128 v8 = (SBYTE7(v98) & 0x80u) == 0 ? buf : *(uint8_t **)buf;
      LODWORD(v93.__r_.__value_.__l.__data_) = 136380675;
      *(std::string::size_type *)((char *)v93.__r_.__value_.__r.__words + 4) = (std::string::size_type)v8;
      _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v7,  2LL,  "WifiCentroidCalculator, detected %{private}s as moving AP",  &v93,  12);
      __int128 v10 = v9;
      if (SBYTE7(v98) < 0) {
        operator delete(*(void **)buf);
      }
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiCentroidCalculator::computeEntriesToUse(const std::vector<CLWifiHarvestDatabaseEntry> &)",  "%s\n",  v10);
      if (v10 == __p) {
        goto LABEL_74;
      }
    }

    else
    {
      uint64_t v14 = v91;
      __int128 v15 = *(_OWORD *)((char *)v91 + 24);
      *(_OWORD *)std::stringbuf::string_type buf = *(_OWORD *)((char *)v91 + 8);
      __int128 v98 = v15;
      __int128 v16 = *(_OWORD *)((char *)v91 + 40);
      __int128 v17 = *(_OWORD *)((char *)v91 + 56);
      __int128 v18 = *(_OWORD *)((char *)v91 + 88);
      __int128 v101 = *(_OWORD *)((char *)v91 + 72);
      __int128 v102 = v18;
      __int128 v99 = v16;
      __int128 v100 = v17;
      __int128 v19 = *(_OWORD *)((char *)v91 + 104);
      __int128 v20 = *(_OWORD *)((char *)v91 + 120);
      __int128 v21 = *(_OWORD *)((char *)v91 + 136);
      *(_OWORD *)((char *)v105 + 12) = *(_OWORD *)((char *)v91 + 148);
      __int128 v104 = v20;
      v105[0] = v21;
      __int128 v103 = v19;
      double v22 = sub_100B60D98((uint64_t)v91);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_10188CED0);
      }
      __int128 v23 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
      {
        sub_100B60DDC((uint64_t)v14, (std::stringbuf::string_type *)__p);
        __int128 v24 = __p[23] >= 0 ? __p : *(_BYTE **)__p;
        LODWORD(v93.__r_.__value_.__l.__data_) = 136380675;
        *(std::string::size_type *)((char *)v93.__r_.__value_.__r.__words + 4) = (std::string::size_type)v24;
        _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEBUG,  "WifiCentroidCalculator, latest entry %{private}s",  (uint8_t *)&v93,  0xCu);
        if ((__p[23] & 0x80000000) != 0) {
          operator delete(*(void **)__p);
        }
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(__p, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_10188CED0);
        }
        uint64_t v82 = qword_101934858;
        sub_100B60DDC((uint64_t)v14, &v93);
        if ((v93.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          __int16 v83 = &v93;
        }
        else {
          __int16 v83 = (std::stringbuf::string_type *)v93.__r_.__value_.__r.__words[0];
        }
        int v95 = 136380675;
        int v96 = v83;
        _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v82,  2LL,  "WifiCentroidCalculator, latest entry %{private}s",  &v95,  12);
        __int128 v85 = v84;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiCentroidCalculator::computeEntriesToUse(const std::vector<CLWifiHarvestDatabaseEntry> &)",  "%s\n",  v85);
        if (v85 != __p) {
          free(v85);
        }
      }

      if (v22 <= *(double *)(a1 + 208))
      {
        double v29 = *((double *)sub_100F4CD50() + 8);
        double v31 = (__int128 *)v91;
        __int128 v30 = v92;
        if (v91 != v92)
        {
          uint64_t v90 = a1 + 152;
          do
          {
            __int128 v32 = *(__int128 *)((char *)v31 + 24);
            *(_OWORD *)std::string __p = *(__int128 *)((char *)v31 + 8);
            *(_OWORD *)&__p[16] = v32;
            __int128 v33 = *(__int128 *)((char *)v31 + 40);
            __int128 v34 = *(__int128 *)((char *)v31 + 56);
            __int128 v35 = *(__int128 *)((char *)v31 + 88);
            __int128 v109 = *(__int128 *)((char *)v31 + 72);
            __int128 v110 = v35;
            __int128 v107 = v33;
            __int128 v108 = v34;
            __int128 v36 = *(__int128 *)((char *)v31 + 104);
            __int128 v37 = *(__int128 *)((char *)v31 + 120);
            __int128 v38 = *(__int128 *)((char *)v31 + 136);
            *(_OWORD *)((char *)v113 + 12) = *(__int128 *)((char *)v31 + 148);
            __int128 v112 = v37;
            v113[0] = v38;
            __int128 v111 = v36;
            sub_100D2DCA4((double *)(a1 + 96), (uint64_t)buf, (uint64_t)__p);
            if (v39 < v29)
            {
              __int128 v40 = *(_OWORD **)(a1 + 144);
              unint64_t v41 = *(void *)(a1 + 152);
              if ((unint64_t)v40 >= v41)
              {
                unint64_t v52 = 0xAAAAAAAAAAAAAAABLL * (((char *)v40 - *v2) >> 6);
                unint64_t v53 = v52 + 1;
                if (v52 + 1 > 0x155555555555555LL) {
                  sub_100007008();
                }
                unint64_t v54 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v41 - (void)*v2) >> 6);
                if (2 * v54 > v53) {
                  unint64_t v53 = 2 * v54;
                }
                if (v54 >= 0xAAAAAAAAAAAAAALL) {
                  unint64_t v55 = 0x155555555555555LL;
                }
                else {
                  unint64_t v55 = v53;
                }
                if (v55) {
                  __int128 v56 = (char *)sub_10001DF10(v90, v55);
                }
                else {
                  __int128 v56 = 0LL;
                }
                __int128 v57 = &v56[192 * v52];
                __int128 v58 = *v31;
                __int128 v59 = v31[1];
                __int128 v60 = v31[3];
                *((_OWORD *)v57 + 2) = v31[2];
                *((_OWORD *)v57 + 3) = v60;
                *(_OWORD *)__int128 v57 = v58;
                *((_OWORD *)v57 + 1) = v59;
                __int128 v61 = v31[4];
                __int128 v62 = v31[5];
                __int128 v63 = v31[7];
                *((_OWORD *)v57 + 6) = v31[6];
                *((_OWORD *)v57 + 7) = v63;
                *((_OWORD *)v57 + 4) = v61;
                *((_OWORD *)v57 + 5) = v62;
                __int128 v64 = v31[8];
                __int128 v65 = v31[9];
                __int128 v66 = v31[11];
                *((_OWORD *)v57 + 1sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v31[10];
                *((_OWORD *)v57 + 11) = v66;
                *((_OWORD *)v57 + _Block_object_dispose((const void *)(v1 - 128), 8) = v64;
                *((_OWORD *)v57 + 9) = v65;
                __int128 v68 = *(char **)(a1 + 136);
                __int128 v67 = *(char **)(a1 + 144);
                __int128 v69 = v57;
                if (v67 != v68)
                {
                  do
                  {
                    __int128 v70 = *((_OWORD *)v67 - 12);
                    __int128 v71 = *((_OWORD *)v67 - 11);
                    __int128 v72 = *((_OWORD *)v67 - 9);
                    *((_OWORD *)v69 - 1sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = *((_OWORD *)v67 - 10);
                    *((_OWORD *)v69 - 9) = v72;
                    *((_OWORD *)v69 - 12) = v70;
                    *((_OWORD *)v69 - 11) = v71;
                    __int128 v73 = *((_OWORD *)v67 - 8);
                    __int128 v74 = *((_OWORD *)v67 - 7);
                    __int128 v75 = *((_OWORD *)v67 - 5);
                    *((_OWORD *)v69 - 6) = *((_OWORD *)v67 - 6);
                    *((_OWORD *)v69 - 5) = v75;
                    *((_OWORD *)v69 - _Block_object_dispose((const void *)(v1 - 128), 8) = v73;
                    *((_OWORD *)v69 - 7) = v74;
                    __int128 v76 = *((_OWORD *)v67 - 4);
                    __int128 v77 = *((_OWORD *)v67 - 3);
                    __int128 v78 = *((_OWORD *)v67 - 1);
                    *((_OWORD *)v69 - 2) = *((_OWORD *)v67 - 2);
                    *((_OWORD *)v69 - 1) = v78;
                    *((_OWORD *)v69 - 4) = v76;
                    *((_OWORD *)v69 - 3) = v77;
                    v69 -= 192;
                    v67 -= 192;
                  }

                  while (v67 != v68);
                  __int128 v67 = *v2;
                }

                __int16 v51 = v57 + 192;
                *(void *)(a1 + 136) = v69;
                *(void *)(a1 + sub_10000AE14(v14 + 144) = v57 + 192;
                *(void *)(a1 + 152) = &v56[192 * v55];
                if (v67) {
                  operator delete(v67);
                }
              }

              else
              {
                __int128 v42 = *v31;
                __int128 v43 = v31[1];
                __int128 v44 = v31[3];
                void v40[2] = v31[2];
                v40[3] = v44;
                *__int128 v40 = v42;
                v40[1] = v43;
                __int128 v45 = v31[4];
                __int128 v46 = v31[5];
                __int128 v47 = v31[7];
                v40[6] = v31[6];
                v40[7] = v47;
                v40[4] = v45;
                v40[5] = v46;
                __int128 v48 = v31[8];
                __int128 v49 = v31[9];
                __int128 v50 = v31[11];
                v40[10] = v31[10];
                v40[11] = v50;
                __int16 v40[8] = v48;
                v40[9] = v49;
                __int16 v51 = v40 + 12;
              }

              *(void *)(a1 + sub_10000AE14(v14 + 144) = v51;
            }

            v31 += 12;
          }

          while (v31 != v30);
        }

        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_10188CED0);
        }
        int v79 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
        {
          unint64_t v80 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 144) - *(void *)(a1 + 136)) >> 6);
          unint64_t v81 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a2[1] - *a2) >> 6);
          *(_DWORD *)std::string __p = 134218496;
          *(void *)&__p[4] = v80;
          *(_WORD *)&_BYTE __p[12] = 2048;
          *(void *)&__p[14] = v81;
          *(_WORD *)&__p[22] = 2048;
          *(double *)&__p[24] = v29;
          _os_log_impl( (void *)&_mh_execute_header,  v79,  OS_LOG_TYPE_DEBUG,  "WifiCentroidCalculator, using %zu samples from %zu samples based on outlier threshold %.1f",  __p,  0x20u);
        }

        if (!sub_1002921D0(115, 2)) {
          goto LABEL_74;
        }
        bzero(__p, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_10188CED0);
        }
        unint64_t v86 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 144) - *(void *)(a1 + 136)) >> 6);
        unint64_t v87 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a2[1] - *a2) >> 6);
        LODWORD(v93.__r_.__value_.__l.__data_) = 134218496;
        *(std::string::size_type *)((char *)v93.__r_.__value_.__r.__words + 4) = v86;
        WORD2(v93.__r_.__value_.__r.__words[1]) = 2048;
        *(std::string::size_type *)((char *)&v93.__r_.__value_.__r.__words[1] + 6) = v87;
        HIWORD(v93.__r_.__value_.__r.__words[2]) = 2048;
        double v94 = v29;
        LODWORD(v89) = 32;
        _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "WifiCentroidCalculator, using %zu samples from %zu samples based on outlier threshold %.1f",  (size_t)&v93,  v89,  *(double *)&v90);
        __int128 v10 = (char *)v88;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiCentroidCalculator::computeEntriesToUse(const std::vector<CLWifiHarvestDatabaseEntry> &)",  "%s\n",  v88);
      }

      else
      {
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_10188CED0);
        }
        __int128 v25 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v26 = *(void *)(a1 + 208);
          *(_DWORD *)std::string __p = 134283777;
          *(double *)&__p[4] = v22;
          *(_WORD *)&_BYTE __p[12] = 2049;
          *(void *)&__p[14] = v26;
          _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEFAULT,  "WifiCentroidCalculator, discarding all entries as latest entry has age %{private}.1fs, greater than %{private}.1fs",  __p,  0x16u);
        }

        if (!sub_1002921D0(115, 2)) {
          goto LABEL_74;
        }
        bzero(__p, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_10188CED0);
        }
        std::string::size_type v27 = *(void *)(a1 + 208);
        LODWORD(v93.__r_.__value_.__l.__data_) = 134283777;
        *(double *)((char *)v93.__r_.__value_.__r.__words + 4) = v22;
        WORD2(v93.__r_.__value_.__r.__words[1]) = 2049;
        *(std::string::size_type *)((char *)&v93.__r_.__value_.__r.__words[1] + 6) = v27;
        LODWORD(v89) = 22;
        _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "WifiCentroidCalculator, discarding all entries as latest entry has age %{private}.1fs, greater than %{private}.1fs",  &v93,  v89);
        __int128 v10 = (char *)v28;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiCentroidCalculator::computeEntriesToUse(const std::vector<CLWifiHarvestDatabaseEntry> &)",  "%s\n",  v28);
      }

      if (v10 == __p)
      {
LABEL_74:
        if (v91)
        {
          int v92 = (__int128 *)v91;
          operator delete(v91);
        }

        return;
      }
    }

    free(v10);
    goto LABEL_74;
  }

  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_10188CED0);
  }
  __int128 v11 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::string __p = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "WifiCentroidCalculator, empty input entries",  __p,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10188CED0);
    }
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "WifiCentroidCalculator, empty input entries",  buf,  2);
    __int128 v13 = (char *)v12;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiCentroidCalculator::computeEntriesToUse(const std::vector<CLWifiHarvestDatabaseEntry> &)",  "%s\n",  v12);
    if (v13 != __p) {
      free(v13);
    }
  }

void sub_100F23938( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100F23998(uint64_t a1, void *a2)
{
  if (*a2 == a2[1]) {
    return 0LL;
  }
  sub_100F23B64((uint64_t)a2, &v31);
  uint64_t v3 = (char *)v31;
  __int128 v4 = *(_OWORD *)(v31 + 24);
  __dst[0] = *(_OWORD *)(v31 + 8);
  __dst[1] = v4;
  __int128 v5 = *(_OWORD *)(v31 + 40);
  __int128 v6 = *(_OWORD *)(v31 + 56);
  __int128 v7 = *(_OWORD *)(v31 + 88);
  __dst[4] = *(_OWORD *)(v31 + 72);
  __dst[5] = v7;
  __dst[2] = v5;
  __dst[3] = v6;
  __int128 v8 = *(_OWORD *)(v31 + 104);
  __int128 v9 = *(_OWORD *)(v31 + 120);
  __int128 v10 = *(_OWORD *)(v31 + 136);
  *(_OWORD *)((char *)v30 + 12) = *(_OWORD *)(v31 + 148);
  __dst[7] = v9;
  v30[0] = v10;
  __dst[6] = v8;
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v32[-v31] >> 6) <= 1)
  {
    uint64_t v11 = 0LL;
LABEL_13:
    __int128 v32 = v3;
    operator delete(v3);
    return v11;
  }

  uint64_t v11 = 0LL;
  __int128 v12 = (double *)(a1 + 96);
  unint64_t v13 = 1LL;
  uint64_t v14 = 200LL;
  do
  {
    __int128 v15 = *(_OWORD *)&v3[v14 + 16];
    v27[0] = *(_OWORD *)&v3[v14];
    v27[1] = v15;
    __int128 v16 = *(_OWORD *)&v3[v14 + 32];
    __int128 v17 = *(_OWORD *)&v3[v14 + 48];
    __int128 v18 = *(_OWORD *)&v3[v14 + 80];
    v27[4] = *(_OWORD *)&v3[v14 + 64];
    void v27[5] = v18;
    void v27[2] = v16;
    __int128 v27[3] = v17;
    __int128 v19 = *(_OWORD *)&v3[v14 + 96];
    __int128 v20 = *(_OWORD *)&v3[v14 + 112];
    __int128 v21 = *(_OWORD *)&v3[v14 + 128];
    *(_OWORD *)&_BYTE v28[12] = *(_OWORD *)&v3[v14 + 140];
    v27[7] = v20;
    *(_OWORD *)__int128 v28 = v21;
    v27[6] = v19;
    sub_100D2DCA4(v12, (uint64_t)__dst, (uint64_t)v27);
    double v23 = v22;
    __int128 v24 = (double *)sub_100F4CD50();
    uint64_t v3 = (char *)v31;
    unint64_t v25 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v32[-v31] >> 6);
    if (v23 > v24[10])
    {
      if (v25 <= v13) {
        sub_100092C20();
      }
      uint64_t v11 = (v11 + 1);
      memmove(__dst, (const void *)(v31 + v14), 0x9CuLL);
    }

    ++v13;
    v14 += 192LL;
  }

  while (v13 < v25);
  if (v3) {
    goto LABEL_13;
  }
  return v11;
}

void sub_100F23B3C(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)(v1 - 104);
  if (v3)
  {
    *(void *)(v1 - sub_10000AE14(v14 + 96) = v3;
    operator delete(v3);
  }

  _Unwind_Resume(exception_object);
}

void sub_100F23B64(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = 0LL;
  a2[1] = 0LL;
  a2[2] = 0LL;
  sub_10053B280( a2,  *(const void **)a1,  *(void *)(a1 + 8),  0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 6));
  uint64_t v3 = (char *)a2[1];
  unint64_t v4 = 126 - 2 * __clz(0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v3[-*a2] >> 6));
  else {
    uint64_t v5 = v4;
  }
  sub_100F24E2C(*a2, v3, v5, 1);
  uint64_t v6 = *a2;
  unint64_t v7 = 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 6);
  if (v7 < 2) {
    return;
  }
  uint64_t v8 = 0LL;
  double v9 = *(double *)(v6 + 84);
  uint64_t v10 = v6 + 276;
  unint64_t v11 = 1LL;
  while (1)
  {
    double v12 = v9;
    double v9 = *(double *)(v10 + v8);
    if (v12 < v9) {
      break;
    }
    ++v11;
    v8 += 192LL;
    if (v7 == v11) {
      return;
    }
  }

  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_10188CED0);
  }
  unint64_t v13 = v11 - 1;
  uint64_t v14 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_FAULT))
  {
    if (0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 6) <= v13) {
      goto LABEL_40;
    }
    __int128 v15 = v27;
    sub_100B60DDC(*a2 + v8, v27);
    if ((v27[0].__r_.__value_.__s.__size_ & 0x80u) != 0) {
      __int128 v15 = (std::stringbuf::string_type *)v27[0].__r_.__value_.__r.__words[0];
    }
    if (0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 6) <= v11) {
      sub_100092C20();
    }
    sub_100B60DDC(*a2 + v8 + 192, &__p);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    LODWORD(buf.__r_.__value_.__l.__data_) = 136380931;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v15;
    WORD2(buf.__r_.__value_.__r.__words[1]) = 2081;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)p_p;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "WifiCentroidCalculator, timestamps out of order! newer: %{private}s, older: %{private}s",  (uint8_t *)&buf,  0x16u);
  }

  if (!sub_1002921D0(115, 0)) {
    return;
  }
  bzero(v27, 0x65CuLL);
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_10188CED0);
  }
  if (0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 6) <= v13) {
LABEL_40:
  }
    sub_100092C20();
  uint64_t v17 = qword_101934858;
  __int128 v18 = &__p;
  sub_100B60DDC(*a2 + v8, &__p);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
    __int128 v18 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
  }
  if (0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 6) <= v11) {
    sub_100092C20();
  }
  sub_100B60DDC(*a2 + v8 + 192, &buf);
  if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_std::stringbuf::string_type buf = &buf;
  }
  else {
    p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
  }
  int v23 = 136380931;
  __int128 v24 = v18;
  __int16 v25 = 2081;
  uint64_t v26 = p_buf;
  __int128 v20 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  v27,  1628LL,  &_mh_execute_header,  v17,  17LL,  "WifiCentroidCalculator, timestamps out of order! newer: %{private}s, older: %{private}s",  &v23,  22);
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "void sanityCheckEntriesAreSortedFromLatestToOldest(const std::vector<CLWifiHarvestDatabaseEntry> &)",  "%s\n",  (const char *)v20);
  if (v20 != v27) {
    free(v20);
  }
}

void sub_100F23F48( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, int a27, __int16 a28, char a29, char a30)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  __int128 v32 = *(void **)v30;
  if (*(void *)v30)
  {
    *(void *)(v30 + _Block_object_dispose((const void *)(v1 - 128), 8) = v32;
    operator delete(v32);
  }

  _Unwind_Resume(exception_object);
}

BOOL sub_100F23F90(uint64_t a1, void *a2)
{
  int v2 = sub_100F23998(a1, a2);
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_10188CED0);
  }
  uint64_t v3 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    sub_1007EC360(__p);
    unint64_t v4 = (__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0 ? __p : (std::string *)__p[0].__r_.__value_.__r.__words[0];
    LODWORD(buf.__r_.__value_.__l.__data_) = 136380931;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v4;
    WORD2(buf.__r_.__value_.__r.__words[1]) = 1026;
    *(_DWORD *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v2;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "WifiCentroidCalculator, AP %{private}s has %{public}d moves",  (uint8_t *)&buf,  0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10188CED0);
    }
    uint64_t v6 = qword_101934858;
    sub_1007EC360(&buf);
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_std::string buf = &buf;
    }
    else {
      p_std::string buf = (std::string *)buf.__r_.__value_.__r.__words[0];
    }
    int v11 = 136380931;
    double v12 = p_buf;
    __int16 v13 = 1026;
    int v14 = v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v6,  2LL,  "WifiCentroidCalculator, AP %{private}s has %{public}d moves",  &v11,  18);
    double v9 = v8;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWifiCentroidCalculator::isMovingAp(const std::vector<CLWifiHarvestDatabaseEntry> &)",  "%s\n",  (const char *)v9);
    if (v9 != __p) {
      free(v9);
    }
  }

  return v2 > *((_DWORD *)sub_100F4CD50() + 22);
}

__n128 sub_100F241D8@<Q0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  __int128 v4 = *(_OWORD *)(a1 + 48);
  a2[2] = *(_OWORD *)(a1 + 32);
  a2[3] = v4;
  __int128 v5 = *(_OWORD *)(a1 + 80);
  a2[4] = *(_OWORD *)(a1 + 64);
  a2[5] = v5;
  __n128 result = *(__n128 *)a1;
  __int128 v7 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v7;
  return result;
}

void sub_100F24240(uint64_t a1)
{
  unint64_t v2 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 144) - *(void *)(a1 + 136)) >> 6);
  double v3 = -180.0;
  uint64_t v4 = *(void *)(a1 + 136);
  uint64_t v5 = *(void *)(a1 + 144);
  if (v4 == v5) {
    goto LABEL_16;
  }
  double v6 = 1.79769313e308;
  double v7 = -1.79769313e308;
  uint64_t v8 = *(void *)(a1 + 136);
  do
  {
    double v9 = *(double *)(v8 + 20);
    double v7 = fmax(v7, v9);
    double v6 = fmin(v6, v9);
    v8 += 192LL;
  }

  while (v8 != v5);
  BOOL v10 = v6 < -179.9 && v7 > 179.9;
  if (v4 == v5)
  {
LABEL_16:
    double v17 = -180.0;
  }

  else
  {
    double v11 = 0.0;
    double v12 = 0.0;
    double v13 = 0.0;
    do
    {
      double v14 = *(double *)(v4 + 12);
      double v15 = *(double *)(v4 + 20);
      double v16 = sub_100F24CFC(v4);
      if (v10) {
        double v15 = fmod(v15 + 360.0, 360.0);
      }
      double v13 = v13 + v16;
      double v11 = v11 + v14 * v16;
      double v12 = v12 + v15 * v16;
      v4 += 192LL;
    }

    while (v4 != v5);
    double v17 = -180.0;
    if (v13 > 0.0)
    {
      double v3 = v11 / v13;
      double v17 = v12 / v13;
      if (v12 / v13 > 180.0) {
        double v17 = v17 + -360.0;
      }
    }
  }

  *(double *)a1 = v3;
  *(double *)(a1 + _Block_object_dispose((const void *)(v1 - 128), 8) = v17;
}

void sub_100F243A4(uint64_t a1)
{
  unint64_t v2 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 144) - *(void *)(a1 + 136)) >> 6);
  double v3 = -1.0;
  if (v2 >= *((int *)sub_100F4CD50() + 18) && *(double *)a1 >= -90.0 && *(double *)a1 <= 90.0)
  {
    double v4 = *(double *)(a1 + 8);
    if (v4 <= 180.0 && v4 >= -180.0)
    {
      uint64_t v5 = *(void *)(a1 + 136);
      uint64_t v6 = *(void *)(a1 + 144);
      if (v5 != v6)
      {
        double v7 = 0.0;
        double v8 = 0.0;
        do
        {
          double v9 = sub_100D2DBDC( (double *)(a1 + 96),  *(double *)(v5 + 12),  *(double *)(v5 + 20),  *(double *)a1,  *(double *)(a1 + 8),  0.0);
          double v10 = sub_100F24CFC(v5);
          double v7 = v7 + v9 * v10 * v9;
          double v8 = v8 + v10;
          v5 += 192LL;
        }

        while (v5 != v6);
        if (v8 > 0.0) {
          double v3 = fmax(sqrt(v7 / v8), *((double *)sub_100F4CD50() + 7));
        }
      }
    }
  }

  *(double *)(a1 + 32) = v3;
}

double *sub_100F244C4(uint64_t a1)
{
  unint64_t v2 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 144) - *(void *)(a1 + 136)) >> 6);
  double v3 = (int *)sub_100F4CD50();
  if (v2 < v3[18])
  {
    __n128 result = (double *)sub_100F4CD50();
    double v5 = result[6];
LABEL_3:
    *(double *)(a1 + 16) = v5;
    return result;
  }

  uint64_t v6 = *(void *)(a1 + 136);
  uint64_t v7 = *(void *)(a1 + 144);
  if (v6 != v7)
  {
    double v8 = 0.0;
    double v9 = 1.79769313e308;
    double v10 = -1.79769313e308;
    double v11 = 0.0;
    do
    {
      LODWORD(v3) = sub_100F24DA0((uint64_t)v3, v6);
      if ((_DWORD)v3)
      {
        double v12 = *(double *)(v6 + 36);
        double v10 = fmax(v10, v12);
        double v9 = fmin(v9, v12);
        double v13 = sub_100F24CFC(v6);
        double v11 = v11 + v13;
        double v8 = v8 + v12 * v13;
      }

      v6 += 192LL;
    }

    while (v6 != v7);
    if (v11 != 0.0)
    {
      __n128 result = (double *)sub_100F4CD50();
      if (v10 - v9 <= result[5])
      {
        double v5 = v8 / v11;
        goto LABEL_3;
      }
    }
  }

  __n128 result = (double *)sub_100F4CD50();
  *(double *)(a1 + 16) = result[6];
  *(void *)(a1 + sub_10004AD90(v3 - 40) = 0xBFF0000000000000LL;
  return result;
}

void sub_100F245C8(uint64_t a1)
{
  unint64_t v2 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 144) - *(void *)(a1 + 136)) >> 6);
  double v3 = -1.0;
  if (v2 >= *((int *)sub_100F4CD50() + 18))
  {
    double v4 = *(double *)(a1 + 16);
    double v5 = (double *)sub_100F4CD50();
    if (v4 != v5[6])
    {
      uint64_t v6 = *(void *)(a1 + 136);
      uint64_t v7 = *(void *)(a1 + 144);
      if (v6 != v7)
      {
        double v8 = 0.0;
        double v9 = 0.0;
        do
        {
          LODWORD(v5) = sub_100F24DA0((uint64_t)v5, v6);
          if ((_DWORD)v5)
          {
            double v10 = vabdd_f64(*(double *)(a1 + 16), *(double *)(v6 + 36));
            double v11 = sub_100F24CFC(v6);
            double v8 = v8 + v11 * v10 * v10;
            double v9 = v9 + v11;
          }

          v6 += 192LL;
        }

        while (v6 != v7);
        if (v9 > 0.0) {
          double v3 = sqrt(v8 / v9);
        }
      }
    }
  }

  *(double *)(a1 + sub_10004AD90(v3 - 40) = v3;
}

void sub_100F246A0(uint64_t a1)
{
  unint64_t v2 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 144) - *(void *)(a1 + 136)) >> 6);
  if (v2 >= *((int *)sub_100F4CD50() + 18))
  {
    int v3 = -1;
    if (*(double *)a1 >= -90.0 && *(double *)a1 <= 90.0)
    {
      double v4 = *(double *)(a1 + 8);
      if (v4 <= 180.0 && v4 >= -180.0)
      {
        uint64_t v5 = *(void *)(a1 + 136);
        for (uint64_t i = *(void *)(a1 + 144); v5 != i; v5 += 192LL)
          int v3 = (int)fmax( (double)v3,  sub_100D2DBDC( (double *)(a1 + 96),  *(double *)(v5 + 12),  *(double *)(v5 + 20),  *(double *)a1,  *(double *)(a1 + 8),  0.0));
      }
    }
  }

  else
  {
    int v3 = -1;
  }

  *(_DWORD *)(a1 + 52) = v3;
}

void sub_100F2478C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = a2[1];
  if (*a2 == v3) {
    return;
  }
  sub_100F23B64((uint64_t)a2, (uint64_t *)&__p);
  uint64_t v5 = __p;
  *(void *)(a1 + 16_Block_object_dispose((const void *)(v1 - 128), 8) = *((void *)__p + 23);
  *(_BYTE *)(a1 + 176) = 1;
  sub_100B60DC0((uint64_t)v5, buf);
  uint64_t v6 = (v3 - v2) >> 6;
  uint64_t v7 = (void **)(a1 + 184);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * v6;
  *(_OWORD *)uint64_t v7 = *(_OWORD *)buf;
  *(void *)(a1 + 20sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = *(void *)&buf[16];
  if (v5[23] != -1LL)
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10188CED0);
    }
    double v9 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      double v10 = (void *)(a1 + 184);
      *(_DWORD *)std::string buf = 136380931;
      *(void *)&uint8_t buf[4] = v10;
      *(_WORD *)&_BYTE buf[12] = 2048;
      *(void *)&buf[14] = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "WifiCentroidCalculator, inferred associated AP LOI type %{private}s using latest sample out of %zu samples",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_10188CED0);
      }
      int v38 = 136380931;
      double v39 = v7;
      __int16 v40 = 2048;
      unint64_t v41 = v8;
      std::string::size_type v27 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "WifiCentroidCalculator, inferred associated AP LOI type %{private}s using latest sample out of %zu samples",  &v38,  22);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiCentroidCalculator::inferLocationOfInterestType(const std::vector<CLWifiHarvestDatabaseEntry> &)",  "%s\n",  v27);
      goto LABEL_41;
    }

    goto LABEL_12;
  }

  sub_100B7B730(a1, (uint64_t)buf);
  sub_100C3A384((uint64_t)buf, (uint64_t)&v38);
  double v12 = (char *)__p;
  double v11 = v29;
  if (v29 == __p) {
    goto LABEL_12;
  }
  uint64_t v13 = 0LL;
  unint64_t v14 = 0LL;
  while (1)
  {
    double v15 = &v12[v13];
    if (*(void *)&v12[v13 + 184] != -1LL) {
      break;
    }
LABEL_20:
    ++v14;
    v13 += 192LL;
    if (0xAAAAAAAAAAAAAAABLL * ((v11 - v12) >> 6) <= v14) {
      goto LABEL_12;
    }
  }

  __int128 v16 = *(_OWORD *)(v15 + 24);
  *(_OWORD *)std::string buf = *(_OWORD *)(v15 + 8);
  *(_OWORD *)&uint8_t buf[16] = v16;
  __int128 v17 = *(_OWORD *)(v15 + 40);
  __int128 v18 = *(_OWORD *)(v15 + 56);
  __int128 v19 = *(_OWORD *)(v15 + 88);
  __int128 v44 = *(_OWORD *)(v15 + 72);
  __int128 v45 = v19;
  *(_OWORD *)&_BYTE buf[32] = v17;
  __int128 v43 = v18;
  __int128 v20 = *(_OWORD *)(v15 + 104);
  __int128 v21 = *(_OWORD *)(v15 + 120);
  __int128 v22 = *(_OWORD *)(v15 + 136);
  *(_OWORD *)((char *)v48 + 12) = *(_OWORD *)(v15 + 148);
  __int128 v47 = v21;
  v48[0] = v22;
  __int128 v46 = v20;
  sub_100D2DCA4((double *)(a1 + 96), (uint64_t)&v38, (uint64_t)buf);
  double v24 = v23;
  if (v23 > *((double *)sub_100F4CD50() + 8))
  {
    double v12 = (char *)__p;
    double v11 = v29;
    goto LABEL_20;
  }

  *(void *)(a1 + 16_Block_object_dispose((const void *)(v1 - 128), 8) = *(void *)&v12[v13 + 184];
  *(_BYTE *)(a1 + 176) = 1;
  sub_100B60DC0((uint64_t)&v12[v13], buf);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)buf;
  *(void *)(a1 + 20sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = *(void *)&buf[16];
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_10188CED0);
  }
  __int16 v25 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v26 = (void *)(a1 + 184);
    *(_DWORD *)std::string buf = 136381443;
    *(void *)&uint8_t buf[4] = v26;
    *(_WORD *)&_BYTE buf[12] = 1024;
    *(_DWORD *)&buf[14] = v14 + 1;
    *(_WORD *)&buf[18] = 2048;
    *(void *)&buf[20] = v8;
    *(_WORD *)&_BYTE buf[28] = 2048;
    *(double *)&buf[30] = v24;
    _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEFAULT,  "WifiCentroidCalculator, inferred associated AP LOI type %{private}s using sample %d / %zu, distance %.1fm",  buf,  0x26u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10188CED0);
    }
    int v30 = 136381443;
    uint64_t v31 = v7;
    __int16 v32 = 1024;
    int v33 = v14 + 1;
    __int16 v34 = 2048;
    unint64_t v35 = v8;
    __int16 v36 = 2048;
    double v37 = v24;
    std::string::size_type v27 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "WifiCentroidCalculator, inferred associated AP LOI type %{private}s using sample %d / %zu, distance %.1fm",  &v30,  38);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiCentroidCalculator::inferLocationOfInterestType(const std::vector<CLWifiHarvestDatabaseEntry> &)",  "%s\n",  v27);
LABEL_41:
    if (v27 != buf) {
      free(v27);
    }
  }

void sub_100F24CB8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_100F24CFC(uint64_t a1)
{
  if (!*(_BYTE *)sub_100F4CD50()) {
    return 1.0;
  }
  double v2 = (double)*(int *)(a1 + 168);
  double v3 = *((double *)sub_100F4CD50() + 2) - v2;
  double v4 = v3 / *((double *)sub_100F4CD50() + 3);
  return exp(v4);
}

BOOL sub_100F24DA0(uint64_t a1, uint64_t a2)
{
  double v3 = *(double *)(a2 + 36);
  double v5 = *(double *)(a2 + 44);
  return v5 <= *((double *)sub_100F4CD50() + 4);
}

uint64_t sub_100F24DF4(uint64_t a1)
{
  return *(void *)(a1 + 168);
}

char *sub_100F24E00@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  if (result[207] < 0) {
    return (char *)sub_1010DD48C((_BYTE *)a2, *((void **)result + 23), *((void *)result + 24));
  }
  *(_OWORD *)a2 = *(_OWORD *)(result + 184);
  *(void *)(a2 + 16) = *((void *)result + 25);
  return result;
}

void sub_100F24E2C(uint64_t a1, char *a2, uint64_t a3, char a4)
{
LABEL_1:
  unint64_t v8 = a1;
  while (2)
  {
    a1 = v8;
    double v9 = (double *)(v8 + 276);
    uint64_t v10 = (uint64_t)&a2[-v8];
    uint64_t v11 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)&a2[-v8] >> 6);
    switch(v11)
    {
      case 0LL:
      case 1LL:
        return;
      case 2LL:
        if (*(double *)(a2 - 108) > *(double *)(v8 + 84))
        {
          __int128 v291 = *(_OWORD *)(v8 + 32);
          __int128 v303 = *(_OWORD *)(v8 + 48);
          __int128 v267 = *(_OWORD *)v8;
          __int128 v279 = *(_OWORD *)(v8 + 16);
          __int128 v339 = *(_OWORD *)(v8 + 96);
          __int128 v351 = *(_OWORD *)(v8 + 112);
          __int128 v315 = *(_OWORD *)(v8 + 64);
          __int128 v327 = *(_OWORD *)(v8 + 80);
          __int128 v378 = *(_OWORD *)(v8 + 160);
          __int128 v387 = *(_OWORD *)(v8 + 176);
          __int128 v360 = *(_OWORD *)(v8 + 128);
          __int128 v369 = *(_OWORD *)(v8 + 144);
          __int128 v85 = *((_OWORD *)a2 - 12);
          __int128 v86 = *((_OWORD *)a2 - 11);
          __int128 v87 = *((_OWORD *)a2 - 9);
          *(_OWORD *)(v8 + 32) = *((_OWORD *)a2 - 10);
          *(_OWORD *)(v8 + 4_Block_object_dispose((const void *)(v1 - 128), 8) = v87;
          *(_OWORD *)unint64_t v8 = v85;
          *(_OWORD *)(v8 + 16) = v86;
          __int128 v88 = *((_OWORD *)a2 - 8);
          __int128 v89 = *((_OWORD *)a2 - 7);
          __int128 v90 = *((_OWORD *)a2 - 5);
          *(_OWORD *)(v8 + sub_10000AE14(v14 + 96) = *((_OWORD *)a2 - 6);
          *(_OWORD *)(v8 + sub_10000AE14(v14 + 112) = v90;
          *(_OWORD *)(v8 + 64) = v88;
          *(_OWORD *)(v8 + 8sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v89;
          __int128 v91 = *((_OWORD *)a2 - 4);
          __int128 v92 = *((_OWORD *)a2 - 3);
          __int128 v93 = *((_OWORD *)a2 - 1);
          *(_OWORD *)(v8 + sub_10000AE14(v14 + 160) = *((_OWORD *)a2 - 2);
          *(_OWORD *)(v8 + 176) = v93;
          *(_OWORD *)(v8 + 12_Block_object_dispose((const void *)(v1 - 128), 8) = v91;
          *(_OWORD *)(v8 + sub_10000AE14(v14 + 144) = v92;
          *((_OWORD *)a2 - 1sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v291;
          *((_OWORD *)a2 - 9) = v303;
          *((_OWORD *)a2 - 12) = v267;
          *((_OWORD *)a2 - 11) = v279;
          *((_OWORD *)a2 - 6) = v339;
          *((_OWORD *)a2 - 5) = v351;
          *((_OWORD *)a2 - _Block_object_dispose((const void *)(v1 - 128), 8) = v315;
          *((_OWORD *)a2 - 7) = v327;
          *((_OWORD *)a2 - 2) = v378;
          *((_OWORD *)a2 - 1) = v387;
          *((_OWORD *)a2 - 4) = v360;
          *((_OWORD *)a2 - 3) = v369;
        }

        return;
      case 3LL:
        sub_100F25F40((__int128 *)v8, (__int128 *)(v8 + 192), (__int128 *)a2 - 12);
        return;
      case 4LL:
        sub_100F267CC(v8, v8 + 192, v8 + 384, (__int128 *)a2 - 12);
        return;
      case 5LL:
        double v94 = (__int128 *)(v8 + 192);
        int v95 = (__int128 *)(v8 + 384);
        int v96 = (__int128 *)(v8 + 576);
        sub_100F267CC(v8, v8 + 192, v8 + 384, (__int128 *)(v8 + 576));
        if (*(double *)(a2 - 108) > *(double *)(v8 + 660))
        {
          __int128 v340 = *(_OWORD *)(v8 + 672);
          __int128 v352 = *(_OWORD *)(v8 + 688);
          __int128 v316 = *(_OWORD *)(v8 + 640);
          __int128 v328 = *(_OWORD *)(v8 + 656);
          __int128 v379 = *(_OWORD *)(v8 + 736);
          __int128 v388 = *(_OWORD *)(v8 + 752);
          __int128 v361 = *(_OWORD *)(v8 + 704);
          __int128 v370 = *(_OWORD *)(v8 + 720);
          __int128 v268 = *v96;
          __int128 v280 = *(_OWORD *)(v8 + 592);
          __int128 v292 = *(_OWORD *)(v8 + 608);
          __int128 v304 = *(_OWORD *)(v8 + 624);
          __int128 v97 = *((_OWORD *)a2 - 12);
          __int128 v98 = *((_OWORD *)a2 - 11);
          __int128 v99 = *((_OWORD *)a2 - 9);
          *(_OWORD *)(v8 + 60_Block_object_dispose((const void *)(v1 - 128), 8) = *((_OWORD *)a2 - 10);
          *(_OWORD *)(v8 + 624) = v99;
          *int v96 = v97;
          *(_OWORD *)(v8 + 592) = v98;
          __int128 v100 = *((_OWORD *)a2 - 8);
          __int128 v101 = *((_OWORD *)a2 - 7);
          __int128 v102 = *((_OWORD *)a2 - 5);
          *(_OWORD *)(v8 + 672) = *((_OWORD *)a2 - 6);
          *(_OWORD *)(v8 + 68_Block_object_dispose((const void *)(v1 - 128), 8) = v102;
          *(_OWORD *)(v8 + 6sub_10004AD90(v3 - 40) = v100;
          *(_OWORD *)(v8 + 656) = v101;
          __int128 v103 = *((_OWORD *)a2 - 4);
          __int128 v104 = *((_OWORD *)a2 - 3);
          __int128 v105 = *((_OWORD *)a2 - 1);
          *(_OWORD *)(v8 + 736) = *((_OWORD *)a2 - 2);
          *(_OWORD *)(v8 + 752) = v105;
          *(_OWORD *)(v8 + 704) = v103;
          *(_OWORD *)(v8 + 72sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v104;
          *((_OWORD *)a2 - 1sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v292;
          *((_OWORD *)a2 - 9) = v304;
          *((_OWORD *)a2 - 12) = v268;
          *((_OWORD *)a2 - 11) = v280;
          *((_OWORD *)a2 - 6) = v340;
          *((_OWORD *)a2 - 5) = v352;
          *((_OWORD *)a2 - _Block_object_dispose((const void *)(v1 - 128), 8) = v316;
          *((_OWORD *)a2 - 7) = v328;
          *((_OWORD *)a2 - 2) = v379;
          *((_OWORD *)a2 - 1) = v388;
          *((_OWORD *)a2 - 4) = v361;
          *((_OWORD *)a2 - 3) = v370;
          if (*(double *)(v8 + 660) > *(double *)(v8 + 468))
          {
            __int128 v362 = *(_OWORD *)(v8 + 512);
            __int128 v371 = *(_OWORD *)(v8 + 528);
            __int128 v380 = *(_OWORD *)(v8 + 544);
            __int128 v389 = *(_OWORD *)(v8 + 560);
            __int128 v317 = *(_OWORD *)(v8 + 448);
            __int128 v329 = *(_OWORD *)(v8 + 464);
            __int128 v341 = *(_OWORD *)(v8 + 480);
            __int128 v353 = *(_OWORD *)(v8 + 496);
            __int128 v269 = *v95;
            __int128 v281 = *(_OWORD *)(v8 + 400);
            __int128 v293 = *(_OWORD *)(v8 + 416);
            __int128 v305 = *(_OWORD *)(v8 + 432);
            __int128 v106 = *(_OWORD *)(v8 + 720);
            *(_OWORD *)(v8 + 512) = *(_OWORD *)(v8 + 704);
            *(_OWORD *)(v8 + 52_Block_object_dispose((const void *)(v1 - 128), 8) = v106;
            __int128 v107 = *(_OWORD *)(v8 + 752);
            *(_OWORD *)(v8 + 544) = *(_OWORD *)(v8 + 736);
            *(_OWORD *)(v8 + 56sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v107;
            __int128 v108 = *(_OWORD *)(v8 + 656);
            *(_OWORD *)(v8 + 44_Block_object_dispose((const void *)(v1 - 128), 8) = *(_OWORD *)(v8 + 640);
            *(_OWORD *)(v8 + 464) = v108;
            __int128 v109 = *(_OWORD *)(v8 + 688);
            *(_OWORD *)(v8 + 48sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = *(_OWORD *)(v8 + 672);
            *(_OWORD *)(v8 + 4sub_10000AE14(v14 + 96) = v109;
            __int128 v110 = *(_OWORD *)(v8 + 592);
            *int v95 = *v96;
            *(_OWORD *)(v8 + 40sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v110;
            __int128 v111 = *(_OWORD *)(v8 + 624);
            *(_OWORD *)(v8 + 416) = *(_OWORD *)(v8 + 608);
            *(_OWORD *)(v8 + 432) = v111;
            *(_OWORD *)(v8 + 704) = v362;
            *(_OWORD *)(v8 + 72sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v371;
            *(_OWORD *)(v8 + 736) = v380;
            *(_OWORD *)(v8 + 752) = v389;
            *(_OWORD *)(v8 + 6sub_10004AD90(v3 - 40) = v317;
            *(_OWORD *)(v8 + 656) = v329;
            *(_OWORD *)(v8 + 672) = v341;
            *(_OWORD *)(v8 + 68_Block_object_dispose((const void *)(v1 - 128), 8) = v353;
            *int v96 = v269;
            *(_OWORD *)(v8 + 592) = v281;
            BOOL v112 = *(double *)(v8 + 468) <= *v9;
            *(_OWORD *)(v8 + 60_Block_object_dispose((const void *)(v1 - 128), 8) = v293;
            *(_OWORD *)(v8 + 624) = v305;
            if (!v112)
            {
              __int128 v363 = *(_OWORD *)(v8 + 320);
              __int128 v372 = *(_OWORD *)(v8 + 336);
              __int128 v381 = *(_OWORD *)(v8 + 352);
              __int128 v390 = *(_OWORD *)(v8 + 368);
              __int128 v318 = *(_OWORD *)(v8 + 256);
              __int128 v330 = *(_OWORD *)(v8 + 272);
              __int128 v342 = *(_OWORD *)(v8 + 288);
              __int128 v354 = *(_OWORD *)(v8 + 304);
              __int128 v270 = *v94;
              __int128 v282 = *(_OWORD *)(v8 + 208);
              __int128 v294 = *(_OWORD *)(v8 + 224);
              __int128 v306 = *(_OWORD *)(v8 + 240);
              __int128 v113 = *(_OWORD *)(v8 + 528);
              *(_OWORD *)(v8 + 32sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = *(_OWORD *)(v8 + 512);
              *(_OWORD *)(v8 + 336) = v113;
              __int128 v114 = *(_OWORD *)(v8 + 560);
              *(_OWORD *)(v8 + 352) = *(_OWORD *)(v8 + 544);
              *(_OWORD *)(v8 + 36_Block_object_dispose((const void *)(v1 - 128), 8) = v114;
              __int128 v115 = *(_OWORD *)(v8 + 464);
              *(_OWORD *)(v8 + 256) = *(_OWORD *)(v8 + 448);
              *(_OWORD *)(v8 + 272) = v115;
              __int128 v116 = *(_OWORD *)(v8 + 496);
              *(_OWORD *)(v8 + 28_Block_object_dispose((const void *)(v1 - 128), 8) = *(_OWORD *)(v8 + 480);
              *(_OWORD *)(v8 + 304) = v116;
              __int128 v117 = *(_OWORD *)(v8 + 400);
              __int128 *v94 = *v95;
              *(_OWORD *)(v8 + 20_Block_object_dispose((const void *)(v1 - 128), 8) = v117;
              __int128 v118 = *(_OWORD *)(v8 + 432);
              *(_OWORD *)(v8 + 224) = *(_OWORD *)(v8 + 416);
              *(_OWORD *)(v8 + 2sub_10004AD90(v3 - 40) = v118;
              *(_OWORD *)(v8 + 512) = v363;
              *(_OWORD *)(v8 + 52_Block_object_dispose((const void *)(v1 - 128), 8) = v372;
              *(_OWORD *)(v8 + 544) = v381;
              *(_OWORD *)(v8 + 56sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v390;
              *(_OWORD *)(v8 + 44_Block_object_dispose((const void *)(v1 - 128), 8) = v318;
              *(_OWORD *)(v8 + 464) = v330;
              *(_OWORD *)(v8 + 48sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v342;
              *(_OWORD *)(v8 + 4sub_10000AE14(v14 + 96) = v354;
              *int v95 = v270;
              *(_OWORD *)(v8 + 40sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v282;
              BOOL v112 = *v9 <= *(double *)(v8 + 84);
              *(_OWORD *)(v8 + 416) = v294;
              *(_OWORD *)(v8 + 432) = v306;
              if (!v112)
              {
                __int128 v295 = *(_OWORD *)(v8 + 32);
                __int128 v307 = *(_OWORD *)(v8 + 48);
                __int128 v271 = *(_OWORD *)v8;
                __int128 v283 = *(_OWORD *)(v8 + 16);
                __int128 v343 = *(_OWORD *)(v8 + 96);
                __int128 v355 = *(_OWORD *)(v8 + 112);
                __int128 v319 = *(_OWORD *)(v8 + 64);
                __int128 v331 = *(_OWORD *)(v8 + 80);
                __int128 v382 = *(_OWORD *)(v8 + 160);
                __int128 v391 = *(_OWORD *)(v8 + 176);
                __int128 v364 = *(_OWORD *)(v8 + 128);
                __int128 v373 = *(_OWORD *)(v8 + 144);
                __int128 v119 = *(_OWORD *)(v8 + 304);
                *(_OWORD *)(v8 + sub_10000AE14(v14 + 96) = *(_OWORD *)(v8 + 288);
                *(_OWORD *)(v8 + sub_10000AE14(v14 + 112) = v119;
                __int128 v120 = *(_OWORD *)(v8 + 272);
                *(_OWORD *)(v8 + 64) = *(_OWORD *)(v8 + 256);
                *(_OWORD *)(v8 + 8sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v120;
                __int128 v121 = *(_OWORD *)(v8 + 368);
                *(_OWORD *)(v8 + sub_10000AE14(v14 + 160) = *(_OWORD *)(v8 + 352);
                *(_OWORD *)(v8 + 176) = v121;
                __int128 v122 = *(_OWORD *)(v8 + 336);
                *(_OWORD *)(v8 + 12_Block_object_dispose((const void *)(v1 - 128), 8) = *(_OWORD *)(v8 + 320);
                *(_OWORD *)(v8 + sub_10000AE14(v14 + 144) = v122;
                __int128 v123 = *(_OWORD *)(v8 + 208);
                *(_OWORD *)unint64_t v8 = *v94;
                *(_OWORD *)(v8 + 16) = v123;
                __int128 v124 = *(_OWORD *)(v8 + 240);
                *(_OWORD *)(v8 + 32) = *(_OWORD *)(v8 + 224);
                *(_OWORD *)(v8 + 4_Block_object_dispose((const void *)(v1 - 128), 8) = v124;
                *(_OWORD *)(v8 + 32sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v364;
                *(_OWORD *)(v8 + 336) = v373;
                *(_OWORD *)(v8 + 352) = v382;
                *(_OWORD *)(v8 + 36_Block_object_dispose((const void *)(v1 - 128), 8) = v391;
                *(_OWORD *)(v8 + 256) = v319;
                *(_OWORD *)(v8 + 272) = v331;
                *(_OWORD *)(v8 + 28_Block_object_dispose((const void *)(v1 - 128), 8) = v343;
                *(_OWORD *)(v8 + 304) = v355;
                __int128 *v94 = v271;
                *(_OWORD *)(v8 + 20_Block_object_dispose((const void *)(v1 - 128), 8) = v283;
                *(_OWORD *)(v8 + 224) = v295;
                *(_OWORD *)(v8 + 2sub_10004AD90(v3 - 40) = v307;
              }
            }
          }
        }

        return;
      default:
        if (v10 <= 4607)
        {
          __int16 v125 = (char *)(v8 + 192);
          BOOL v127 = (char *)v8 == a2 || v125 == a2;
          if ((a4 & 1) != 0)
          {
            if (!v127)
            {
              uint64_t v128 = 0LL;
              unint64_t v129 = v8;
              do
              {
                uint64_t v130 = v125;
                double v131 = *(double *)(v129 + 276);
                if (v131 > *(double *)(v129 + 84))
                {
                  __int128 v209 = *(_OWORD *)v125;
                  __int128 v215 = *((_OWORD *)v125 + 1);
                  int v239 = *((_DWORD *)v125 + 20);
                  __int128 v227 = *((_OWORD *)v125 + 3);
                  __int128 v233 = *((_OWORD *)v125 + 4);
                  __int128 v221 = *((_OWORD *)v125 + 2);
                  __int128 v320 = *(_OWORD *)(v129 + 348);
                  __int128 v332 = *(_OWORD *)(v129 + 364);
                  int v344 = *(_DWORD *)(v129 + 380);
                  __int128 v272 = *(_OWORD *)(v129 + 284);
                  __int128 v284 = *(_OWORD *)(v129 + 300);
                  uint64_t v132 = v128;
                  __int128 v296 = *(_OWORD *)(v129 + 316);
                  __int128 v308 = *(_OWORD *)(v129 + 332);
                  while (1)
                  {
                    __int16 v133 = (_OWORD *)(v8 + v132);
                    __int128 v134 = *(_OWORD *)(v8 + v132 + 144);
                    v133[20] = *(_OWORD *)(v8 + v132 + 128);
                    v133[21] = v134;
                    __int128 v135 = *(_OWORD *)(v8 + v132 + 176);
                    v133[22] = *(_OWORD *)(v8 + v132 + 160);
                    v133[23] = v135;
                    __int128 v136 = *(_OWORD *)(v8 + v132 + 80);
                    v133[16] = *(_OWORD *)(v8 + v132 + 64);
                    v133[17] = v136;
                    __int128 v137 = *(_OWORD *)(v8 + v132 + 112);
                    v133[18] = *(_OWORD *)(v8 + v132 + 96);
                    v133[19] = v137;
                    __int128 v138 = *(_OWORD *)(v8 + v132 + 16);
                    v133[12] = *(_OWORD *)(v8 + v132);
                    v133[13] = v138;
                    __int128 v139 = *(_OWORD *)(v8 + v132 + 48);
                    v133[14] = *(_OWORD *)(v8 + v132 + 32);
                    v133[15] = v139;
                    if (!v132) {
                      break;
                    }
                    v132 -= 192LL;
                    if (v131 <= *(double *)((char *)v133 - 108))
                    {
                      uint64_t v140 = v8 + v132 + 192;
                      goto LABEL_77;
                    }
                  }

                  uint64_t v140 = v8;
LABEL_77:
                  *(_OWORD *)uint64_t v140 = v209;
                  *(_OWORD *)(v140 + 16) = v215;
                  *(_DWORD *)(v140 + 8sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v239;
                  *(_OWORD *)(v140 + 4_Block_object_dispose((const void *)(v1 - 128), 8) = v227;
                  *(_OWORD *)(v140 + 64) = v233;
                  *(_OWORD *)(v140 + 32) = v221;
                  *(double *)(v140 + 84) = v131;
                  *(_OWORD *)(v140 + 124) = v296;
                  *(_OWORD *)(v140 + 10_Block_object_dispose((const void *)(v1 - 128), 8) = v284;
                  *(_OWORD *)(v140 + 92) = v272;
                  *(_DWORD *)(v140 + 18_Block_object_dispose((const void *)(v1 - 128), 8) = v344;
                  *(_OWORD *)(v140 + 172) = v332;
                  *(_OWORD *)(v140 + 156) = v320;
                  *(_OWORD *)(v140 + 1sub_10004AD90(v3 - 40) = v308;
                }

                __int16 v125 = v130 + 192;
                v128 += 192LL;
                unint64_t v129 = (unint64_t)v130;
              }

              while (v130 + 192 != a2);
            }
          }

          else if (!v127)
          {
            do
            {
              uint64_t v198 = (uint64_t)v125;
              double v199 = *(double *)(a1 + 276);
              if (v199 > *(double *)(a1 + 84))
              {
                __int128 v212 = *(_OWORD *)v125;
                __int128 v218 = *((_OWORD *)v125 + 1);
                int v242 = *((_DWORD *)v125 + 20);
                __int128 v230 = *((_OWORD *)v125 + 3);
                __int128 v236 = *((_OWORD *)v125 + 4);
                __int128 v224 = *((_OWORD *)v125 + 2);
                __int128 v323 = *(_OWORD *)(a1 + 348);
                __int128 v335 = *(_OWORD *)(a1 + 364);
                int v347 = *(_DWORD *)(a1 + 380);
                __int128 v275 = *(_OWORD *)(a1 + 284);
                __int128 v287 = *(_OWORD *)(a1 + 300);
                __int128 v299 = *(_OWORD *)(a1 + 316);
                __int128 v311 = *(_OWORD *)(a1 + 332);
                do
                {
                  __int128 v200 = *(_OWORD *)(a1 + 144);
                  *(_OWORD *)(a1 + 32sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = *(_OWORD *)(a1 + 128);
                  *(_OWORD *)(a1 + 336) = v200;
                  __int128 v201 = *(_OWORD *)(a1 + 176);
                  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a1 + 160);
                  *(_OWORD *)(a1 + 36_Block_object_dispose((const void *)(v1 - 128), 8) = v201;
                  __int128 v202 = *(_OWORD *)(a1 + 80);
                  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a1 + 64);
                  *(_OWORD *)(a1 + 272) = v202;
                  __int128 v203 = *(_OWORD *)(a1 + 112);
                  *(_OWORD *)(a1 + 28_Block_object_dispose((const void *)(v1 - 128), 8) = *(_OWORD *)(a1 + 96);
                  *(_OWORD *)(a1 + 304) = v203;
                  __int128 v204 = *(_OWORD *)(a1 + 16);
                  *(_OWORD *)(a1 + 192) = *(_OWORD *)a1;
                  *(_OWORD *)(a1 + 20_Block_object_dispose((const void *)(v1 - 128), 8) = v204;
                  __int128 v205 = *(_OWORD *)(a1 + 48);
                  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a1 + 32);
                  *(_OWORD *)(a1 + 2sub_10004AD90(v3 - 40) = v205;
                  double v206 = *(double *)(a1 - 108);
                  a1 -= 192LL;
                }

                while (v199 > v206);
                *(_OWORD *)(a1 + 192) = v212;
                *(_OWORD *)(a1 + 20_Block_object_dispose((const void *)(v1 - 128), 8) = v218;
                *(_DWORD *)(a1 + 272) = v242;
                *(_OWORD *)(a1 + 2sub_10004AD90(v3 - 40) = v230;
                *(_OWORD *)(a1 + 256) = v236;
                *(_OWORD *)(a1 + 224) = v224;
                *(double *)(a1 + 276) = v199;
                *(_OWORD *)(a1 + 30sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v287;
                *(_OWORD *)(a1 + 316) = v299;
                *(_OWORD *)(a1 + 284) = v275;
                *(_DWORD *)(a1 + 38sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v347;
                *(_OWORD *)(a1 + 34_Block_object_dispose((const void *)(v1 - 128), 8) = v323;
                *(_OWORD *)(a1 + 364) = v335;
                *(_OWORD *)(a1 + 332) = v311;
              }

              v125 += 192;
              a1 = v198;
            }

            while ((char *)(v198 + 192) != a2);
          }

          return;
        }

        if (!a3)
        {
          if ((char *)v8 != a2)
          {
            int64_t v141 = (unint64_t)(v11 - 2) >> 1;
            int64_t v142 = v141;
            do
            {
              int64_t v143 = v142;
              if (v141 >= v142)
              {
                uint64_t v144 = (2 * v142) | 1;
                unint64_t v145 = v8 + 192 * v144;
                if (2 * v142 + 2 < v11 && *(double *)(v8 + 192 * v144 + 84) > *(double *)(v145 + 276))
                {
                  v145 += 192LL;
                  uint64_t v144 = 2 * v142 + 2;
                }

                double v146 = *(double *)(v8 + 192 * v142 + 84);
                if (*(double *)(v145 + 84) <= v146)
                {
                  unint64_t v147 = v8 + 192 * v142;
                  __int128 v210 = *(_OWORD *)v147;
                  __int128 v216 = *(_OWORD *)(v147 + 16);
                  int v240 = *(_DWORD *)(v147 + 80);
                  __int128 v228 = *(_OWORD *)(v147 + 48);
                  __int128 v234 = *(_OWORD *)(v147 + 64);
                  __int128 v222 = *(_OWORD *)(v147 + 32);
                  int v345 = *(_DWORD *)(v147 + 188);
                  __int128 v321 = *(_OWORD *)(v147 + 156);
                  __int128 v333 = *(_OWORD *)(v147 + 172);
                  __int128 v309 = *(_OWORD *)(v147 + 140);
                  __int128 v285 = *(_OWORD *)(v147 + 108);
                  __int128 v297 = *(_OWORD *)(v147 + 124);
                  __int128 v273 = *(_OWORD *)(v147 + 92);
                  do
                  {
                    int v148 = (_OWORD *)v147;
                    unint64_t v147 = v145;
                    __int128 v149 = *(_OWORD *)v145;
                    __int128 v150 = *(_OWORD *)(v145 + 16);
                    __int128 v151 = *(_OWORD *)(v145 + 48);
                    v148[2] = *(_OWORD *)(v145 + 32);
                    v148[3] = v151;
                    *int v148 = v149;
                    v148[1] = v150;
                    __int128 v152 = *(_OWORD *)(v145 + 64);
                    __int128 v153 = *(_OWORD *)(v145 + 80);
                    __int128 v154 = *(_OWORD *)(v145 + 112);
                    v148[6] = *(_OWORD *)(v145 + 96);
                    v148[7] = v154;
                    v148[4] = v152;
                    v148[5] = v153;
                    __int128 v155 = *(_OWORD *)(v145 + 128);
                    __int128 v156 = *(_OWORD *)(v145 + 144);
                    __int128 v157 = *(_OWORD *)(v145 + 176);
                    v148[10] = *(_OWORD *)(v145 + 160);
                    v148[11] = v157;
                    v148[8] = v155;
                    v148[9] = v156;
                    if (v141 < v144) {
                      break;
                    }
                    uint64_t v158 = (2 * v144) | 1;
                    unint64_t v145 = v8 + 192 * v158;
                    uint64_t v159 = 2 * v144 + 2;
                    if (v159 < v11 && *(double *)(v8 + 192 * v158 + 84) > *(double *)(v145 + 276))
                    {
                      v145 += 192LL;
                      uint64_t v158 = v159;
                    }

                    uint64_t v144 = v158;
                  }

                  while (*(double *)(v145 + 84) <= v146);
                  *(_OWORD *)unint64_t v147 = v210;
                  *(_OWORD *)(v147 + 16) = v216;
                  *(_DWORD *)(v147 + 8sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v240;
                  *(_OWORD *)(v147 + 4_Block_object_dispose((const void *)(v1 - 128), 8) = v228;
                  *(_OWORD *)(v147 + 64) = v234;
                  *(_OWORD *)(v147 + 32) = v222;
                  *(double *)(v147 + 84) = v146;
                  *(_OWORD *)(v147 + 124) = v297;
                  *(_OWORD *)(v147 + 10_Block_object_dispose((const void *)(v1 - 128), 8) = v285;
                  *(_OWORD *)(v147 + 92) = v273;
                  *(_DWORD *)(v147 + 18_Block_object_dispose((const void *)(v1 - 128), 8) = v345;
                  *(_OWORD *)(v147 + 172) = v333;
                  *(_OWORD *)(v147 + 156) = v321;
                  *(_OWORD *)(v147 + 1sub_10004AD90(v3 - 40) = v309;
                }
              }

              int64_t v142 = v143 - 1;
            }

            while (v143);
            int64_t v160 = v10 / 0xC0uLL;
            do
            {
              uint64_t v161 = 0LL;
              __int128 v298 = *(_OWORD *)(v8 + 32);
              __int128 v310 = *(_OWORD *)(v8 + 48);
              __int128 v274 = *(_OWORD *)v8;
              __int128 v286 = *(_OWORD *)(v8 + 16);
              __int128 v346 = *(_OWORD *)(v8 + 96);
              __int128 v356 = *(_OWORD *)(v8 + 112);
              __int128 v322 = *(_OWORD *)(v8 + 64);
              __int128 v334 = *(_OWORD *)(v8 + 80);
              __int128 v383 = *(_OWORD *)(v8 + 160);
              __int128 v392 = *(_OWORD *)(v8 + 176);
              __int128 v365 = *(_OWORD *)(v8 + 128);
              __int128 v374 = *(_OWORD *)(v8 + 144);
              unint64_t v162 = v8;
              do
              {
                __int16 v163 = (_OWORD *)v162;
                uint64_t v164 = v161 + 1;
                v162 += 192 * (v161 + 1);
                uint64_t v165 = 2 * v161;
                uint64_t v161 = (2 * v161) | 1;
                int64_t v166 = v165 + 2;
                if (v166 < v160 && *(double *)((char *)&v163[12 * v164 + 5] + 4) > *(double *)(v162 + 276))
                {
                  v162 += 192LL;
                  uint64_t v161 = v166;
                }

                __int128 v167 = *(_OWORD *)v162;
                __int128 v168 = *(_OWORD *)(v162 + 16);
                __int128 v169 = *(_OWORD *)(v162 + 48);
                v163[2] = *(_OWORD *)(v162 + 32);
                v163[3] = v169;
                *__int16 v163 = v167;
                v163[1] = v168;
                __int128 v170 = *(_OWORD *)(v162 + 64);
                __int128 v171 = *(_OWORD *)(v162 + 80);
                __int128 v172 = *(_OWORD *)(v162 + 112);
                v163[6] = *(_OWORD *)(v162 + 96);
                v163[7] = v172;
                v163[4] = v170;
                v163[5] = v171;
                __int128 v173 = *(_OWORD *)(v162 + 128);
                __int128 v174 = *(_OWORD *)(v162 + 144);
                __int128 v175 = *(_OWORD *)(v162 + 176);
                v163[10] = *(_OWORD *)(v162 + 160);
                v163[11] = v175;
                v163[8] = v173;
                v163[9] = v174;
              }

              while (v161 <= (uint64_t)((unint64_t)(v160 - 2) >> 1));
              a2 -= 192;
              if ((char *)v162 == a2)
              {
                *(_OWORD *)(v162 + 32) = v298;
                *(_OWORD *)(v162 + 4_Block_object_dispose((const void *)(v1 - 128), 8) = v310;
                *(_OWORD *)unint64_t v162 = v274;
                *(_OWORD *)(v162 + 16) = v286;
                *(_OWORD *)(v162 + sub_10000AE14(v14 + 96) = v346;
                *(_OWORD *)(v162 + sub_10000AE14(v14 + 112) = v356;
                *(_OWORD *)(v162 + 64) = v322;
                *(_OWORD *)(v162 + 8sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v334;
                *(_OWORD *)(v162 + sub_10000AE14(v14 + 160) = v383;
                *(_OWORD *)(v162 + 176) = v392;
                *(_OWORD *)(v162 + 12_Block_object_dispose((const void *)(v1 - 128), 8) = v365;
                *(_OWORD *)(v162 + sub_10000AE14(v14 + 144) = v374;
              }

              else
              {
                __int128 v176 = *(_OWORD *)a2;
                __int128 v177 = *((_OWORD *)a2 + 1);
                __int128 v178 = *((_OWORD *)a2 + 3);
                *(_OWORD *)(v162 + 32) = *((_OWORD *)a2 + 2);
                *(_OWORD *)(v162 + 4_Block_object_dispose((const void *)(v1 - 128), 8) = v178;
                *(_OWORD *)unint64_t v162 = v176;
                *(_OWORD *)(v162 + 16) = v177;
                __int128 v179 = *((_OWORD *)a2 + 4);
                __int128 v180 = *((_OWORD *)a2 + 5);
                __int128 v181 = *((_OWORD *)a2 + 7);
                *(_OWORD *)(v162 + sub_10000AE14(v14 + 96) = *((_OWORD *)a2 + 6);
                *(_OWORD *)(v162 + sub_10000AE14(v14 + 112) = v181;
                *(_OWORD *)(v162 + 64) = v179;
                *(_OWORD *)(v162 + 8sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v180;
                __int128 v182 = *((_OWORD *)a2 + 8);
                __int128 v183 = *((_OWORD *)a2 + 9);
                __int128 v184 = *((_OWORD *)a2 + 11);
                *(_OWORD *)(v162 + sub_10000AE14(v14 + 160) = *((_OWORD *)a2 + 10);
                *(_OWORD *)(v162 + 176) = v184;
                *(_OWORD *)(v162 + 12_Block_object_dispose((const void *)(v1 - 128), 8) = v182;
                *(_OWORD *)(v162 + sub_10000AE14(v14 + 144) = v183;
                *((_OWORD *)a2 + 2) = v298;
                *((_OWORD *)a2 + 3) = v310;
                *(_OWORD *)a2 = v274;
                *((_OWORD *)a2 + 1) = v286;
                *((_OWORD *)a2 + 6) = v346;
                *((_OWORD *)a2 + 7) = v356;
                *((_OWORD *)a2 + 4) = v322;
                *((_OWORD *)a2 + 5) = v334;
                *((_OWORD *)a2 + 1sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v383;
                *((_OWORD *)a2 + 11) = v392;
                *((_OWORD *)a2 + _Block_object_dispose((const void *)(v1 - 128), 8) = v365;
                *((_OWORD *)a2 + 9) = v374;
                uint64_t v185 = v162 - v8 + 192;
                if (v185 >= 193)
                {
                  unint64_t v186 = (v185 / 0xC0uLL - 2) >> 1;
                  double v187 = *(double *)(v162 + 84);
                  if (*(double *)(v8 + 192 * v186 + 84) > v187)
                  {
                    __int128 v248 = *(_OWORD *)v162;
                    __int128 v251 = *(_OWORD *)(v162 + 16);
                    int v263 = *(_DWORD *)(v162 + 80);
                    __int128 v257 = *(_OWORD *)(v162 + 48);
                    __int128 v260 = *(_OWORD *)(v162 + 64);
                    __int128 v254 = *(_OWORD *)(v162 + 32);
                    int v245 = *(_DWORD *)(v162 + 188);
                    __int128 v235 = *(_OWORD *)(v162 + 156);
                    __int128 v241 = *(_OWORD *)(v162 + 172);
                    __int128 v229 = *(_OWORD *)(v162 + 140);
                    __int128 v217 = *(_OWORD *)(v162 + 108);
                    __int128 v223 = *(_OWORD *)(v162 + 124);
                    __int128 v211 = *(_OWORD *)(v162 + 92);
                    do
                    {
                      __int16 v188 = (_OWORD *)v162;
                      unint64_t v162 = v8 + 192 * v186;
                      __int128 v189 = *(_OWORD *)v162;
                      __int128 v190 = *(_OWORD *)(v162 + 16);
                      __int128 v191 = *(_OWORD *)(v162 + 48);
                      v188[2] = *(_OWORD *)(v162 + 32);
                      v188[3] = v191;
                      _OWORD *v188 = v189;
                      v188[1] = v190;
                      __int128 v192 = *(_OWORD *)(v162 + 64);
                      __int128 v193 = *(_OWORD *)(v162 + 80);
                      __int128 v194 = *(_OWORD *)(v162 + 112);
                      v188[6] = *(_OWORD *)(v162 + 96);
                      v188[7] = v194;
                      v188[4] = v192;
                      v188[5] = v193;
                      __int128 v195 = *(_OWORD *)(v162 + 128);
                      __int128 v196 = *(_OWORD *)(v162 + 144);
                      __int128 v197 = *(_OWORD *)(v162 + 176);
                      v188[10] = *(_OWORD *)(v162 + 160);
                      v188[11] = v197;
                      v188[8] = v195;
                      v188[9] = v196;
                      if (!v186) {
                        break;
                      }
                      unint64_t v186 = (v186 - 1) >> 1;
                    }

                    while (*(double *)(v8 + 192 * v186 + 84) > v187);
                    *(_OWORD *)unint64_t v162 = v248;
                    *(_OWORD *)(v162 + 16) = v251;
                    *(_DWORD *)(v162 + 8sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v263;
                    *(_OWORD *)(v162 + 4_Block_object_dispose((const void *)(v1 - 128), 8) = v257;
                    *(_OWORD *)(v162 + 64) = v260;
                    *(_OWORD *)(v162 + 32) = v254;
                    *(double *)(v162 + 84) = v187;
                    *(_OWORD *)(v162 + 124) = v223;
                    *(_OWORD *)(v162 + 10_Block_object_dispose((const void *)(v1 - 128), 8) = v217;
                    *(_OWORD *)(v162 + 92) = v211;
                    *(_DWORD *)(v162 + 18_Block_object_dispose((const void *)(v1 - 128), 8) = v245;
                    *(_OWORD *)(v162 + 172) = v241;
                    *(_OWORD *)(v162 + 156) = v235;
                    *(_OWORD *)(v162 + 1sub_10004AD90(v3 - 40) = v229;
                  }
                }
              }

              BOOL v112 = v160-- <= 2;
            }

            while (!v112);
          }

          return;
        }

        unint64_t v12 = (unint64_t)v11 >> 1;
        uint64_t v13 = (__int128 *)(v8 + 192 * ((unint64_t)v11 >> 1));
        if ((unint64_t)v10 <= 0x6000)
        {
          sub_100F25F40((__int128 *)(a1 + 192 * v12), (__int128 *)a1, (__int128 *)a2 - 12);
        }

        else
        {
          sub_100F25F40((__int128 *)a1, (__int128 *)(a1 + 192 * v12), (__int128 *)a2 - 12);
          uint64_t v14 = 3 * v12;
          double v15 = (__int128 *)(a1 + 192 * v12 - 192);
          sub_100F25F40((__int128 *)(a1 + 192), v15, (__int128 *)a2 - 24);
          __int128 v16 = (__int128 *)(a1 + 192 + (v14 << 6));
          sub_100F25F40((__int128 *)(a1 + 384), v16, (__int128 *)a2 - 36);
          sub_100F25F40(v15, v13, v16);
          __int128 v288 = *(_OWORD *)(a1 + 32);
          __int128 v300 = *(_OWORD *)(a1 + 48);
          __int128 v264 = *(_OWORD *)a1;
          __int128 v276 = *(_OWORD *)(a1 + 16);
          __int128 v336 = *(_OWORD *)(a1 + 96);
          __int128 v348 = *(_OWORD *)(a1 + 112);
          __int128 v312 = *(_OWORD *)(a1 + 64);
          __int128 v324 = *(_OWORD *)(a1 + 80);
          __int128 v375 = *(_OWORD *)(a1 + 160);
          __int128 v384 = *(_OWORD *)(a1 + 176);
          __int128 v357 = *(_OWORD *)(a1 + 128);
          __int128 v366 = *(_OWORD *)(a1 + 144);
          __int128 v17 = *v13;
          __int128 v18 = v13[1];
          __int128 v19 = v13[3];
          *(_OWORD *)(a1 + 32) = v13[2];
          *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v1 - 128), 8) = v19;
          *(_OWORD *)a1 = v17;
          *(_OWORD *)(a1 + 16) = v18;
          __int128 v20 = v13[4];
          __int128 v21 = v13[5];
          __int128 v22 = v13[7];
          *(_OWORD *)(a1 + sub_10000AE14(v14 + 96) = v13[6];
          *(_OWORD *)(a1 + sub_10000AE14(v14 + 112) = v22;
          *(_OWORD *)(a1 + 64) = v20;
          *(_OWORD *)(a1 + 8sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v21;
          __int128 v23 = v13[8];
          __int128 v24 = v13[9];
          __int128 v25 = v13[11];
          *(_OWORD *)(a1 + sub_10000AE14(v14 + 160) = v13[10];
          *(_OWORD *)(a1 + 176) = v25;
          *(_OWORD *)(a1 + 12_Block_object_dispose((const void *)(v1 - 128), 8) = v23;
          *(_OWORD *)(a1 + sub_10000AE14(v14 + 144) = v24;
          void v13[2] = v288;
          void v13[3] = v300;
          *uint64_t v13 = v264;
          v13[1] = v276;
          void v13[6] = v336;
          v13[7] = v348;
          _DWORD v13[4] = v312;
          v13[5] = v324;
          v13[10] = v375;
          v13[11] = v384;
          v13[8] = v357;
          v13[9] = v366;
        }

        --a3;
        if ((a4 & 1) == 0)
        {
          double v26 = *(double *)(a1 + 84);
          __int128 v247 = *(_OWORD *)a1;
          __int128 v250 = *(_OWORD *)(a1 + 16);
          int v262 = *(_DWORD *)(a1 + 80);
          __int128 v256 = *(_OWORD *)(a1 + 48);
          __int128 v259 = *(_OWORD *)(a1 + 64);
          __int128 v253 = *(_OWORD *)(a1 + 32);
          __int128 v208 = *(_OWORD *)(a1 + 92);
          __int128 v214 = *(_OWORD *)(a1 + 108);
          int v244 = *(_DWORD *)(a1 + 188);
          __int128 v232 = *(_OWORD *)(a1 + 156);
          __int128 v238 = *(_OWORD *)(a1 + 172);
          __int128 v220 = *(_OWORD *)(a1 + 124);
          __int128 v226 = *(_OWORD *)(a1 + 140);
          if (v26 <= *(double *)(a2 - 108))
          {
            do
            {
              unint64_t v8 = (unint64_t)v9 - 84;
              double v60 = *v9;
              v9 += 24;
            }

            while (v26 <= v60);
          }

          else
          {
            uint64_t v58 = a1;
            do
            {
              unint64_t v8 = v58 + 192;
              double v59 = *(double *)(v58 + 276);
              v58 += 192LL;
            }

            while (v26 <= v59);
          }

          __int128 v61 = (__int128 *)a2;
          if (v8 < (unint64_t)a2)
          {
            __int128 v62 = a2;
            do
            {
              __int128 v61 = (__int128 *)(v62 - 192);
              double v63 = *(double *)(v62 - 108);
              v62 -= 192;
            }

            while (v26 > v63);
          }

          while (v8 < (unint64_t)v61)
          {
            __int128 v290 = *(_OWORD *)(v8 + 32);
            __int128 v302 = *(_OWORD *)(v8 + 48);
            __int128 v266 = *(_OWORD *)v8;
            __int128 v278 = *(_OWORD *)(v8 + 16);
            __int128 v338 = *(_OWORD *)(v8 + 96);
            __int128 v350 = *(_OWORD *)(v8 + 112);
            __int128 v314 = *(_OWORD *)(v8 + 64);
            __int128 v326 = *(_OWORD *)(v8 + 80);
            __int128 v377 = *(_OWORD *)(v8 + 160);
            __int128 v386 = *(_OWORD *)(v8 + 176);
            __int128 v359 = *(_OWORD *)(v8 + 128);
            __int128 v368 = *(_OWORD *)(v8 + 144);
            __int128 v64 = *v61;
            __int128 v65 = v61[1];
            __int128 v66 = v61[3];
            *(_OWORD *)(v8 + 32) = v61[2];
            *(_OWORD *)(v8 + 4_Block_object_dispose((const void *)(v1 - 128), 8) = v66;
            *(_OWORD *)unint64_t v8 = v64;
            *(_OWORD *)(v8 + 16) = v65;
            __int128 v67 = v61[4];
            __int128 v68 = v61[5];
            __int128 v69 = v61[7];
            *(_OWORD *)(v8 + sub_10000AE14(v14 + 96) = v61[6];
            *(_OWORD *)(v8 + sub_10000AE14(v14 + 112) = v69;
            *(_OWORD *)(v8 + 64) = v67;
            *(_OWORD *)(v8 + 8sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v68;
            __int128 v70 = v61[8];
            __int128 v71 = v61[9];
            __int128 v72 = v61[11];
            *(_OWORD *)(v8 + sub_10000AE14(v14 + 160) = v61[10];
            *(_OWORD *)(v8 + 176) = v72;
            *(_OWORD *)(v8 + 12_Block_object_dispose((const void *)(v1 - 128), 8) = v70;
            *(_OWORD *)(v8 + sub_10000AE14(v14 + 144) = v71;
            void v61[2] = v290;
            uint64_t v61[3] = v302;
            *__int128 v61 = v266;
            v61[1] = v278;
            v61[6] = v338;
            v61[7] = v350;
            v61[4] = v314;
            v61[5] = v326;
            _BYTE v61[10] = v377;
            v61[11] = v386;
            _WORD v61[8] = v359;
            v61[9] = v368;
            do
            {
              __int128 v73 = (double *)(v8 + 276);
              v8 += 192LL;
            }

            while (v26 <= *v73);
            do
            {
              double v74 = *(double *)((char *)v61 - 108);
              v61 -= 12;
            }

            while (v26 > v74);
          }

          __int128 v75 = (__int128 *)(v8 - 192);
          if (v8 - 192 != a1)
          {
            __int128 v76 = *v75;
            __int128 v77 = *(_OWORD *)(v8 - 176);
            __int128 v78 = *(_OWORD *)(v8 - 144);
            *(_OWORD *)(a1 + 32) = *(_OWORD *)(v8 - 160);
            *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v1 - 128), 8) = v78;
            *(_OWORD *)a1 = v76;
            *(_OWORD *)(a1 + 16) = v77;
            __int128 v79 = *(_OWORD *)(v8 - 128);
            __int128 v80 = *(_OWORD *)(v8 - 112);
            __int128 v81 = *(_OWORD *)(v8 - 80);
            *(_OWORD *)(a1 + sub_10000AE14(v14 + 96) = *(_OWORD *)(v8 - 96);
            *(_OWORD *)(a1 + sub_10000AE14(v14 + 112) = v81;
            *(_OWORD *)(a1 + 64) = v79;
            *(_OWORD *)(a1 + 8sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v80;
            __int128 v82 = *(_OWORD *)(v8 - 64);
            __int128 v83 = *(_OWORD *)(v8 - 48);
            __int128 v84 = *(_OWORD *)(v8 - 16);
            *(_OWORD *)(a1 + sub_10000AE14(v14 + 160) = *(_OWORD *)(v8 - 32);
            *(_OWORD *)(a1 + 176) = v84;
            *(_OWORD *)(a1 + 12_Block_object_dispose((const void *)(v1 - 128), 8) = v82;
            *(_OWORD *)(a1 + sub_10000AE14(v14 + 144) = v83;
          }

          a4 = 0;
          *__int128 v75 = v247;
          *(_OWORD *)(v8 - 176) = v250;
          *(_DWORD *)(v8 - sub_10000AE14(v14 + 112) = v262;
          *(_OWORD *)(v8 - sub_10000AE14(v14 + 144) = v256;
          *(_OWORD *)(v8 - 12_Block_object_dispose((const void *)(v1 - 128), 8) = v259;
          *(_OWORD *)(v8 - sub_10000AE14(v14 + 160) = v253;
          *(double *)(v8 - 10_Block_object_dispose((const void *)(v1 - 128), 8) = v26;
          *(_OWORD *)(v8 - 6_Block_object_dispose((const void *)(v1 - 128), 8) = v220;
          *(_OWORD *)(v8 - 84) = v214;
          *(_OWORD *)(v8 - 10sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v208;
          *(_DWORD *)(v8 - 4) = v244;
          *(_OWORD *)(v8 - 2sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v238;
          *(_OWORD *)(v8 - 36) = v232;
          *(_OWORD *)(v8 - 52) = v226;
          continue;
        }

        double v26 = *(double *)(a1 + 84);
LABEL_11:
        uint64_t v27 = 0LL;
        __int128 v246 = *(_OWORD *)a1;
        __int128 v249 = *(_OWORD *)(a1 + 16);
        int v261 = *(_DWORD *)(a1 + 80);
        int v243 = *(_DWORD *)(a1 + 188);
        __int128 v255 = *(_OWORD *)(a1 + 48);
        __int128 v258 = *(_OWORD *)(a1 + 64);
        __int128 v252 = *(_OWORD *)(a1 + 32);
        __int128 v231 = *(_OWORD *)(a1 + 156);
        __int128 v237 = *(_OWORD *)(a1 + 172);
        __int128 v207 = *(_OWORD *)(a1 + 92);
        __int128 v213 = *(_OWORD *)(a1 + 108);
        __int128 v219 = *(_OWORD *)(a1 + 124);
        __int128 v225 = *(_OWORD *)(a1 + 140);
        do
        {
          double v28 = *(double *)(a1 + v27 + 276);
          v27 += 192LL;
        }

        while (v28 > v26);
        unint64_t v29 = a1 + v27;
        int v30 = a2;
        if (v27 == 192)
        {
          int v33 = a2;
          while (v29 < (unint64_t)v33)
          {
            uint64_t v31 = v33 - 192;
            double v34 = *(double *)(v33 - 108);
            v33 -= 192;
            if (v34 > v26) {
              goto LABEL_21;
            }
          }

          uint64_t v31 = v33;
        }

        else
        {
          do
          {
            uint64_t v31 = v30 - 192;
            double v32 = *(double *)(v30 - 108);
            v30 -= 192;
          }

          while (v32 <= v26);
        }

__n128 sub_100F25F40(__int128 *a1, __int128 *a2, __int128 *a3)
{
  result.n128_u64[0] = *(void *)((char *)a2 + 84);
  double v4 = *(double *)((char *)a3 + 84);
  if (result.n128_f64[0] <= *(double *)((char *)a1 + 84))
  {
    if (v4 > result.n128_f64[0])
    {
      __int128 v83 = a2[8];
      __int128 v87 = a2[9];
      __int128 v91 = a2[10];
      __int128 v95 = a2[11];
      __int128 v67 = a2[4];
      __int128 v71 = a2[5];
      __int128 v75 = a2[6];
      __int128 v79 = a2[7];
      __int128 v51 = *a2;
      __int128 v55 = a2[1];
      __int128 v59 = a2[2];
      __int128 v63 = a2[3];
      __int128 v14 = *a3;
      __int128 v15 = a3[1];
      __int128 v16 = a3[3];
      a2[2] = a3[2];
      a2[3] = v16;
      *a2 = v14;
      a2[1] = v15;
      __int128 v17 = a3[4];
      __int128 v18 = a3[5];
      __int128 v19 = a3[7];
      a2[6] = a3[6];
      a2[7] = v19;
      a2[4] = v17;
      a2[5] = v18;
      __int128 v20 = a3[8];
      __int128 v21 = a3[9];
      __int128 v22 = a3[11];
      a2[10] = a3[10];
      a2[11] = v22;
      a2[8] = v20;
      a2[9] = v21;
      a3[8] = v83;
      a3[9] = v87;
      a3[10] = v91;
      a3[11] = v95;
      a3[4] = v67;
      a3[5] = v71;
      a3[6] = v75;
      a3[7] = v79;
      *a3 = v51;
      a3[1] = v55;
      result.n128_u64[1] = *((void *)&v59 + 1);
      a3[2] = v59;
      a3[3] = v63;
      result.n128_u64[0] = *(void *)((char *)a2 + 84);
      if (result.n128_f64[0] > *(double *)((char *)a1 + 84))
      {
        __int128 v84 = a1[8];
        __int128 v88 = a1[9];
        __int128 v92 = a1[10];
        __int128 v96 = a1[11];
        __int128 v68 = a1[4];
        __int128 v72 = a1[5];
        __int128 v76 = a1[6];
        __int128 v80 = a1[7];
        __int128 v52 = *a1;
        __int128 v56 = a1[1];
        __n128 v60 = (__n128)a1[2];
        __int128 v64 = a1[3];
        __int128 v23 = *a2;
        __int128 v24 = a2[1];
        __int128 v25 = a2[3];
        a1[2] = a2[2];
        a1[3] = v25;
        *a1 = v23;
        a1[1] = v24;
        __int128 v26 = a2[4];
        __int128 v27 = a2[5];
        __int128 v28 = a2[7];
        a1[6] = a2[6];
        a1[7] = v28;
        a1[4] = v26;
        a1[5] = v27;
        __int128 v29 = a2[8];
        __int128 v30 = a2[9];
        __int128 v31 = a2[11];
        a1[10] = a2[10];
        a1[11] = v31;
        a1[8] = v29;
        a1[9] = v30;
        a2[8] = v84;
        a2[9] = v88;
        a2[10] = v92;
        a2[11] = v96;
        a2[4] = v68;
        a2[5] = v72;
        a2[6] = v76;
        a2[7] = v80;
        *a2 = v52;
        a2[1] = v56;
        __n128 result = v60;
        a2[2] = (__int128)v60;
        a2[3] = v64;
      }
    }
  }

  else
  {
    if (v4 <= result.n128_f64[0])
    {
      __int128 v85 = a1[8];
      __int128 v89 = a1[9];
      __int128 v93 = a1[10];
      __int128 v97 = a1[11];
      __int128 v69 = a1[4];
      __int128 v73 = a1[5];
      __int128 v77 = a1[6];
      __int128 v81 = a1[7];
      __int128 v53 = *a1;
      __int128 v57 = a1[1];
      __int128 v61 = a1[2];
      __int128 v65 = a1[3];
      __int128 v32 = *a2;
      __int128 v33 = a2[1];
      __int128 v34 = a2[3];
      a1[2] = a2[2];
      a1[3] = v34;
      *a1 = v32;
      a1[1] = v33;
      __int128 v35 = a2[4];
      __int128 v36 = a2[5];
      __int128 v37 = a2[7];
      a1[6] = a2[6];
      a1[7] = v37;
      a1[4] = v35;
      a1[5] = v36;
      __int128 v38 = a2[8];
      __int128 v39 = a2[9];
      __int128 v40 = a2[11];
      a1[10] = a2[10];
      a1[11] = v40;
      a1[8] = v38;
      a1[9] = v39;
      a2[8] = v85;
      a2[9] = v89;
      a2[10] = v93;
      a2[11] = v97;
      a2[4] = v69;
      a2[5] = v73;
      a2[6] = v77;
      a2[7] = v81;
      *a2 = v53;
      a2[1] = v57;
      result.n128_u64[1] = *((void *)&v61 + 1);
      a2[2] = v61;
      a2[3] = v65;
      result.n128_u64[0] = *(void *)((char *)a3 + 84);
      __int128 v82 = a2[8];
      __int128 v86 = a2[9];
      __int128 v90 = a2[10];
      __int128 v94 = a2[11];
      __int128 v66 = a2[4];
      __int128 v70 = a2[5];
      __int128 v74 = a2[6];
      __int128 v78 = a2[7];
      __int128 v50 = *a2;
      __int128 v54 = a2[1];
      __n128 v58 = (__n128)a2[2];
      __int128 v62 = a2[3];
      __int128 v41 = *a3;
      __int128 v42 = a3[1];
      __int128 v43 = a3[3];
      a2[2] = a3[2];
      a2[3] = v43;
      *a2 = v41;
      a2[1] = v42;
      __int128 v44 = a3[4];
      __int128 v45 = a3[5];
      __int128 v46 = a3[7];
      a2[6] = a3[6];
      a2[7] = v46;
      a2[4] = v44;
      a2[5] = v45;
      __int128 v47 = a3[8];
      __int128 v48 = a3[9];
      __int128 v49 = a3[11];
      a2[10] = a3[10];
      a2[11] = v49;
      a2[8] = v47;
      a2[9] = v48;
    }

    else
    {
      __int128 v82 = a1[8];
      __int128 v86 = a1[9];
      __int128 v90 = a1[10];
      __int128 v94 = a1[11];
      __int128 v66 = a1[4];
      __int128 v70 = a1[5];
      __int128 v74 = a1[6];
      __int128 v78 = a1[7];
      __int128 v50 = *a1;
      __int128 v54 = a1[1];
      __n128 v58 = (__n128)a1[2];
      __int128 v62 = a1[3];
      __int128 v5 = *a3;
      __int128 v6 = a3[1];
      __int128 v7 = a3[3];
      a1[2] = a3[2];
      a1[3] = v7;
      *a1 = v5;
      a1[1] = v6;
      __int128 v8 = a3[4];
      __int128 v9 = a3[5];
      __int128 v10 = a3[7];
      a1[6] = a3[6];
      a1[7] = v10;
      a1[4] = v8;
      a1[5] = v9;
      __int128 v11 = a3[8];
      __int128 v12 = a3[9];
      __int128 v13 = a3[11];
      a1[10] = a3[10];
      a1[11] = v13;
      a1[8] = v11;
      a1[9] = v12;
    }

    a3[8] = v82;
    a3[9] = v86;
    a3[10] = v90;
    a3[11] = v94;
    a3[4] = v66;
    a3[5] = v70;
    a3[6] = v74;
    a3[7] = v78;
    *a3 = v50;
    a3[1] = v54;
    __n128 result = v58;
    a3[2] = (__int128)v58;
    a3[3] = v62;
  }

  return result;
}

BOOL sub_100F26238(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a2 - a1) >> 6);
  BOOL result = 1LL;
  switch(v4)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      if (*(double *)(a2 - 108) > *(double *)(a1 + 84))
      {
        __int128 v114 = *(_OWORD *)(a1 + 128);
        __int128 v119 = *(_OWORD *)(a1 + 144);
        __int128 v124 = *(_OWORD *)(a1 + 160);
        __int128 v129 = *(_OWORD *)(a1 + 176);
        __int128 v91 = *(_OWORD *)(a1 + 64);
        __int128 v97 = *(_OWORD *)(a1 + 80);
        __int128 v103 = *(_OWORD *)(a1 + 96);
        __int128 v109 = *(_OWORD *)(a1 + 112);
        __int128 v67 = *(_OWORD *)a1;
        __int128 v73 = *(_OWORD *)(a1 + 16);
        __int128 v79 = *(_OWORD *)(a1 + 32);
        __int128 v85 = *(_OWORD *)(a1 + 48);
        __int128 v6 = *(_OWORD *)(a2 - 192);
        __int128 v7 = *(_OWORD *)(a2 - 176);
        __int128 v8 = *(_OWORD *)(a2 - 144);
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 - 160);
        *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v1 - 128), 8) = v8;
        *(_OWORD *)a1 = v6;
        *(_OWORD *)(a1 + 16) = v7;
        __int128 v9 = *(_OWORD *)(a2 - 128);
        __int128 v10 = *(_OWORD *)(a2 - 112);
        __int128 v11 = *(_OWORD *)(a2 - 80);
        *(_OWORD *)(a1 + sub_10000AE14(v14 + 96) = *(_OWORD *)(a2 - 96);
        *(_OWORD *)(a1 + sub_10000AE14(v14 + 112) = v11;
        *(_OWORD *)(a1 + 64) = v9;
        *(_OWORD *)(a1 + 8sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v10;
        __int128 v12 = *(_OWORD *)(a2 - 64);
        __int128 v13 = *(_OWORD *)(a2 - 48);
        __int128 v14 = *(_OWORD *)(a2 - 16);
        *(_OWORD *)(a1 + sub_10000AE14(v14 + 160) = *(_OWORD *)(a2 - 32);
        *(_OWORD *)(a1 + 176) = v14;
        *(_OWORD *)(a1 + 12_Block_object_dispose((const void *)(v1 - 128), 8) = v12;
        *(_OWORD *)(a1 + sub_10000AE14(v14 + 144) = v13;
        *(_OWORD *)(a2 - 64) = v114;
        *(_OWORD *)(a2 - 4_Block_object_dispose((const void *)(v1 - 128), 8) = v119;
        *(_OWORD *)(a2 - 32) = v124;
        *(_OWORD *)(a2 - 16) = v129;
        *(_OWORD *)(a2 - 12_Block_object_dispose((const void *)(v1 - 128), 8) = v91;
        *(_OWORD *)(a2 - sub_10000AE14(v14 + 112) = v97;
        *(_OWORD *)(a2 - sub_10000AE14(v14 + 96) = v103;
        *(_OWORD *)(a2 - 8sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v109;
        *(_OWORD *)(a2 - 192) = v67;
        *(_OWORD *)(a2 - 176) = v73;
        *(_OWORD *)(a2 - sub_10000AE14(v14 + 160) = v79;
        *(_OWORD *)(a2 - sub_10000AE14(v14 + 144) = v85;
      }

      return result;
    case 3uLL:
      sub_100F25F40((__int128 *)a1, (__int128 *)(a1 + 192), (__int128 *)(a2 - 192));
      return 1LL;
    case 4uLL:
      sub_100F267CC(a1, a1 + 192, a1 + 384, (__int128 *)(a2 - 192));
      return 1LL;
    case 5uLL:
      __int128 v29 = (double *)(a1 + 276);
      __int128 v30 = (__int128 *)(a1 + 192);
      __int128 v31 = (__int128 *)(a1 + 384);
      __int128 v32 = (__int128 *)(a1 + 576);
      sub_100F267CC(a1, a1 + 192, a1 + 384, (__int128 *)(a1 + 576));
      __int128 v115 = *(_OWORD *)(a1 + 704);
      __int128 v120 = *(_OWORD *)(a1 + 720);
      __int128 v125 = *(_OWORD *)(a1 + 736);
      __int128 v130 = *(_OWORD *)(a1 + 752);
      __int128 v93 = *(_OWORD *)(a1 + 640);
      __int128 v99 = *(_OWORD *)(a1 + 656);
      __int128 v105 = *(_OWORD *)(a1 + 672);
      __int128 v110 = *(_OWORD *)(a1 + 688);
      __int128 v69 = *v32;
      __int128 v75 = *(_OWORD *)(a1 + 592);
      __int128 v81 = *(_OWORD *)(a1 + 608);
      __int128 v87 = *(_OWORD *)(a1 + 624);
      __int128 v33 = *(_OWORD *)(a2 - 192);
      __int128 v34 = *(_OWORD *)(a2 - 176);
      __int128 v35 = *(_OWORD *)(a2 - 144);
      *(_OWORD *)(a1 + 60_Block_object_dispose((const void *)(v1 - 128), 8) = *(_OWORD *)(a2 - 160);
      *(_OWORD *)(a1 + 624) = v35;
      *__int128 v32 = v33;
      *(_OWORD *)(a1 + 592) = v34;
      __int128 v36 = *(_OWORD *)(a2 - 128);
      __int128 v37 = *(_OWORD *)(a2 - 112);
      __int128 v38 = *(_OWORD *)(a2 - 80);
      *(_OWORD *)(a1 + 672) = *(_OWORD *)(a2 - 96);
      *(_OWORD *)(a1 + 68_Block_object_dispose((const void *)(v1 - 128), 8) = v38;
      *(_OWORD *)(a1 + 6sub_10004AD90(v3 - 40) = v36;
      *(_OWORD *)(a1 + 656) = v37;
      __int128 v39 = *(_OWORD *)(a2 - 64);
      __int128 v40 = *(_OWORD *)(a2 - 48);
      __int128 v41 = *(_OWORD *)(a2 - 16);
      *(_OWORD *)(a1 + 736) = *(_OWORD *)(a2 - 32);
      *(_OWORD *)(a1 + 752) = v41;
      *(_OWORD *)(a1 + 704) = v39;
      *(_OWORD *)(a1 + 72sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v40;
      *(_OWORD *)(a2 - 64) = v115;
      *(_OWORD *)(a2 - 4_Block_object_dispose((const void *)(v1 - 128), 8) = v120;
      *(_OWORD *)(a2 - 32) = v125;
      *(_OWORD *)(a2 - 16) = v130;
      *(_OWORD *)(a2 - 12_Block_object_dispose((const void *)(v1 - 128), 8) = v93;
      *(_OWORD *)(a2 - sub_10000AE14(v14 + 112) = v99;
      *(_OWORD *)(a2 - sub_10000AE14(v14 + 96) = v105;
      *(_OWORD *)(a2 - 8sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v110;
      *(_OWORD *)(a2 - 192) = v69;
      *(_OWORD *)(a2 - 176) = v75;
      *(_OWORD *)(a2 - sub_10000AE14(v14 + 160) = v81;
      *(_OWORD *)(a2 - sub_10000AE14(v14 + 144) = v87;
      __int128 v116 = *(_OWORD *)(a1 + 512);
      __int128 v121 = *(_OWORD *)(a1 + 528);
      __int128 v126 = *(_OWORD *)(a1 + 544);
      __int128 v131 = *(_OWORD *)(a1 + 560);
      __int128 v94 = *(_OWORD *)(a1 + 448);
      __int128 v100 = *(_OWORD *)(a1 + 464);
      __int128 v106 = *(_OWORD *)(a1 + 480);
      __int128 v111 = *(_OWORD *)(a1 + 496);
      __int128 v70 = *v31;
      __int128 v76 = *(_OWORD *)(a1 + 400);
      __int128 v82 = *(_OWORD *)(a1 + 416);
      __int128 v88 = *(_OWORD *)(a1 + 432);
      __int128 v42 = *(_OWORD *)(a1 + 720);
      *(_OWORD *)(a1 + 512) = *(_OWORD *)(a1 + 704);
      *(_OWORD *)(a1 + 52_Block_object_dispose((const void *)(v1 - 128), 8) = v42;
      __int128 v43 = *(_OWORD *)(a1 + 752);
      *(_OWORD *)(a1 + 544) = *(_OWORD *)(a1 + 736);
      *(_OWORD *)(a1 + 56sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v43;
      __int128 v44 = *(_OWORD *)(a1 + 656);
      *(_OWORD *)(a1 + 44_Block_object_dispose((const void *)(v1 - 128), 8) = *(_OWORD *)(a1 + 640);
      *(_OWORD *)(a1 + 464) = v44;
      __int128 v45 = *(_OWORD *)(a1 + 688);
      *(_OWORD *)(a1 + 48sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = *(_OWORD *)(a1 + 672);
      *(_OWORD *)(a1 + 4sub_10000AE14(v14 + 96) = v45;
      __int128 v46 = *(_OWORD *)(a1 + 592);
      *__int128 v31 = *v32;
      *(_OWORD *)(a1 + 40sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v46;
      __int128 v47 = *(_OWORD *)(a1 + 624);
      *(_OWORD *)(a1 + 416) = *(_OWORD *)(a1 + 608);
      *(_OWORD *)(a1 + 432) = v47;
      *(_OWORD *)(a1 + 704) = v116;
      *(_OWORD *)(a1 + 72sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v121;
      *(_OWORD *)(a1 + 736) = v126;
      *(_OWORD *)(a1 + 752) = v131;
      *(_OWORD *)(a1 + 6sub_10004AD90(v3 - 40) = v94;
      *(_OWORD *)(a1 + 656) = v100;
      *(_OWORD *)(a1 + 672) = v106;
      *(_OWORD *)(a1 + 68_Block_object_dispose((const void *)(v1 - 128), 8) = v111;
      *__int128 v32 = v70;
      *(_OWORD *)(a1 + 592) = v76;
      BOOL v48 = *(double *)(a1 + 468) <= *v29;
      *(_OWORD *)(a1 + 60_Block_object_dispose((const void *)(v1 - 128), 8) = v82;
      *(_OWORD *)(a1 + 624) = v88;
      if (v48) {
        return 1LL;
      }
      __int128 v117 = *(_OWORD *)(a1 + 320);
      __int128 v122 = *(_OWORD *)(a1 + 336);
      __int128 v127 = *(_OWORD *)(a1 + 352);
      __int128 v132 = *(_OWORD *)(a1 + 368);
      __int128 v95 = *(_OWORD *)(a1 + 256);
      __int128 v101 = *(_OWORD *)(a1 + 272);
      __int128 v107 = *(_OWORD *)(a1 + 288);
      __int128 v112 = *(_OWORD *)(a1 + 304);
      __int128 v71 = *v30;
      __int128 v77 = *(_OWORD *)(a1 + 208);
      __int128 v83 = *(_OWORD *)(a1 + 224);
      __int128 v89 = *(_OWORD *)(a1 + 240);
      __int128 v49 = *(_OWORD *)(a1 + 528);
      *(_OWORD *)(a1 + 32sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = *(_OWORD *)(a1 + 512);
      *(_OWORD *)(a1 + 336) = v49;
      __int128 v50 = *(_OWORD *)(a1 + 560);
      *(_OWORD *)(a1 + 352) = *(_OWORD *)(a1 + 544);
      *(_OWORD *)(a1 + 36_Block_object_dispose((const void *)(v1 - 128), 8) = v50;
      __int128 v51 = *(_OWORD *)(a1 + 464);
      *(_OWORD *)(a1 + 256) = *(_OWORD *)(a1 + 448);
      *(_OWORD *)(a1 + 272) = v51;
      __int128 v52 = *(_OWORD *)(a1 + 496);
      *(_OWORD *)(a1 + 28_Block_object_dispose((const void *)(v1 - 128), 8) = *(_OWORD *)(a1 + 480);
      *(_OWORD *)(a1 + 304) = v52;
      __int128 v53 = *(_OWORD *)(a1 + 400);
      __int128 *v30 = *v31;
      *(_OWORD *)(a1 + 20_Block_object_dispose((const void *)(v1 - 128), 8) = v53;
      __int128 v54 = *(_OWORD *)(a1 + 432);
      *(_OWORD *)(a1 + 224) = *(_OWORD *)(a1 + 416);
      *(_OWORD *)(a1 + 2sub_10004AD90(v3 - 40) = v54;
      *(_OWORD *)(a1 + 512) = v117;
      *(_OWORD *)(a1 + 52_Block_object_dispose((const void *)(v1 - 128), 8) = v122;
      *(_OWORD *)(a1 + 544) = v127;
      *(_OWORD *)(a1 + 56sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v132;
      *(_OWORD *)(a1 + 44_Block_object_dispose((const void *)(v1 - 128), 8) = v95;
      *(_OWORD *)(a1 + 464) = v101;
      *(_OWORD *)(a1 + 48sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v107;
      *(_OWORD *)(a1 + 4sub_10000AE14(v14 + 96) = v112;
      *__int128 v31 = v71;
      *(_OWORD *)(a1 + 40sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v77;
      BOOL v48 = *v29 <= *(double *)(a1 + 84);
      *(_OWORD *)(a1 + 416) = v83;
      *(_OWORD *)(a1 + 432) = v89;
      if (v48) {
        return 1LL;
      }
      __int128 v118 = *(_OWORD *)(a1 + 128);
      __int128 v123 = *(_OWORD *)(a1 + 144);
      __int128 v128 = *(_OWORD *)(a1 + 160);
      __int128 v133 = *(_OWORD *)(a1 + 176);
      __int128 v96 = *(_OWORD *)(a1 + 64);
      __int128 v102 = *(_OWORD *)(a1 + 80);
      __int128 v108 = *(_OWORD *)(a1 + 96);
      __int128 v113 = *(_OWORD *)(a1 + 112);
      __int128 v72 = *(_OWORD *)a1;
      __int128 v78 = *(_OWORD *)(a1 + 16);
      __int128 v84 = *(_OWORD *)(a1 + 32);
      __int128 v90 = *(_OWORD *)(a1 + 48);
      __int128 v55 = *(_OWORD *)(a1 + 336);
      *(_OWORD *)(a1 + 12_Block_object_dispose((const void *)(v1 - 128), 8) = *(_OWORD *)(a1 + 320);
      *(_OWORD *)(a1 + sub_10000AE14(v14 + 144) = v55;
      __int128 v56 = *(_OWORD *)(a1 + 368);
      *(_OWORD *)(a1 + sub_10000AE14(v14 + 160) = *(_OWORD *)(a1 + 352);
      *(_OWORD *)(a1 + 176) = v56;
      __int128 v57 = *(_OWORD *)(a1 + 272);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a1 + 256);
      *(_OWORD *)(a1 + 8sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v57;
      __int128 v58 = *(_OWORD *)(a1 + 304);
      *(_OWORD *)(a1 + sub_10000AE14(v14 + 96) = *(_OWORD *)(a1 + 288);
      *(_OWORD *)(a1 + sub_10000AE14(v14 + 112) = v58;
      __int128 v59 = *(_OWORD *)(a1 + 208);
      *(_OWORD *)a1 = *v30;
      *(_OWORD *)(a1 + 16) = v59;
      __int128 v60 = *(_OWORD *)(a1 + 240);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a1 + 224);
      *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v1 - 128), 8) = v60;
      *(_OWORD *)(a1 + 32sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v118;
      *(_OWORD *)(a1 + 336) = v123;
      *(_OWORD *)(a1 + 352) = v128;
      *(_OWORD *)(a1 + 36_Block_object_dispose((const void *)(v1 - 128), 8) = v133;
      *(_OWORD *)(a1 + 256) = v96;
      *(_OWORD *)(a1 + 272) = v102;
      *(_OWORD *)(a1 + 28_Block_object_dispose((const void *)(v1 - 128), 8) = v108;
      *(_OWORD *)(a1 + 304) = v113;
      __int128 *v30 = v72;
      *(_OWORD *)(a1 + 20_Block_object_dispose((const void *)(v1 - 128), 8) = v78;
      BOOL result = 1LL;
      *(_OWORD *)(a1 + 224) = v84;
      *(_OWORD *)(a1 + 2sub_10004AD90(v3 - 40) = v90;
      return result;
    default:
      uint64_t v15 = a1 + 384;
      sub_100F25F40((__int128 *)a1, (__int128 *)(a1 + 192), (__int128 *)(a1 + 384));
      uint64_t v16 = a1 + 576;
      if (a1 + 576 == a2) {
        return 1LL;
      }
      uint64_t v17 = 0LL;
      int v18 = 0;
      break;
  }

  while (1)
  {
    double v19 = *(double *)(v16 + 84);
    if (v19 > *(double *)(v15 + 84))
    {
      __int128 v63 = *(_OWORD *)(v16 + 32);
      __int128 v64 = *(_OWORD *)(v16 + 48);
      __int128 v65 = *(_OWORD *)(v16 + 64);
      int v66 = *(_DWORD *)(v16 + 80);
      __int128 v61 = *(_OWORD *)v16;
      __int128 v62 = *(_OWORD *)(v16 + 16);
      __int128 v92 = *(_OWORD *)(v16 + 156);
      __int128 v98 = *(_OWORD *)(v16 + 172);
      int v104 = *(_DWORD *)(v16 + 188);
      __int128 v68 = *(_OWORD *)(v16 + 92);
      __int128 v74 = *(_OWORD *)(v16 + 108);
      uint64_t v20 = v17;
      __int128 v80 = *(_OWORD *)(v16 + 124);
      __int128 v86 = *(_OWORD *)(v16 + 140);
      while (1)
      {
        uint64_t v21 = a1 + v20;
        __int128 v22 = *(_OWORD *)(a1 + v20 + 528);
        *(_OWORD *)(v21 + 704) = *(_OWORD *)(a1 + v20 + 512);
        *(_OWORD *)(v21 + 72sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v22;
        __int128 v23 = *(_OWORD *)(a1 + v20 + 560);
        *(_OWORD *)(v21 + 736) = *(_OWORD *)(a1 + v20 + 544);
        *(_OWORD *)(v21 + 752) = v23;
        __int128 v24 = *(_OWORD *)(a1 + v20 + 464);
        *(_OWORD *)(v21 + 6sub_10004AD90(v3 - 40) = *(_OWORD *)(a1 + v20 + 448);
        *(_OWORD *)(v21 + 656) = v24;
        __int128 v25 = *(_OWORD *)(a1 + v20 + 496);
        *(_OWORD *)(v21 + 672) = *(_OWORD *)(a1 + v20 + 480);
        *(_OWORD *)(v21 + 68_Block_object_dispose((const void *)(v1 - 128), 8) = v25;
        __int128 v26 = *(_OWORD *)(a1 + v20 + 400);
        *(_OWORD *)(v21 + 576) = *(_OWORD *)(a1 + v20 + 384);
        *(_OWORD *)(v21 + 592) = v26;
        __int128 v27 = *(_OWORD *)(a1 + v20 + 432);
        *(_OWORD *)(v21 + 60_Block_object_dispose((const void *)(v1 - 128), 8) = *(_OWORD *)(a1 + v20 + 416);
        *(_OWORD *)(v21 + 624) = v27;
        if (v20 == -384) {
          break;
        }
        v20 -= 192LL;
        if (v19 <= *(double *)(v21 + 276))
        {
          uint64_t v28 = a1 + v20 + 576;
          goto LABEL_12;
        }
      }

      uint64_t v28 = a1;
LABEL_12:
      *(_OWORD *)(v28 + 32) = v63;
      *(_OWORD *)(v28 + 4_Block_object_dispose((const void *)(v1 - 128), 8) = v64;
      *(_OWORD *)(v28 + 64) = v65;
      *(_DWORD *)(v28 + 8sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v66;
      *(_OWORD *)uint64_t v28 = v61;
      *(_OWORD *)(v28 + 16) = v62;
      *(double *)(v28 + 84) = v19;
      *(_OWORD *)(v28 + 92) = v68;
      *(_OWORD *)(v28 + 10_Block_object_dispose((const void *)(v1 - 128), 8) = v74;
      *(_OWORD *)(v28 + 124) = v80;
      *(_DWORD *)(v28 + 18_Block_object_dispose((const void *)(v1 - 128), 8) = v104;
      *(_OWORD *)(v28 + 172) = v98;
      *(_OWORD *)(v28 + 156) = v92;
      ++v18;
      *(_OWORD *)(v28 + 1sub_10004AD90(v3 - 40) = v86;
      if (v18 == 8) {
        return v16 + 192 == a2;
      }
    }

    uint64_t v15 = v16;
    v17 += 192LL;
    v16 += 192LL;
    if (v16 == a2) {
      return 1LL;
    }
  }

__n128 sub_100F267CC(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4)
{
  result.n128_u64[0] = *(void *)((char *)a4 + 84);
  if (result.n128_f64[0] > *(double *)(a3 + 84))
  {
    __int128 v60 = *(_OWORD *)(a3 + 128);
    __int128 v63 = *(_OWORD *)(a3 + 144);
    __int128 v66 = *(_OWORD *)(a3 + 160);
    __int128 v69 = *(_OWORD *)(a3 + 176);
    __int128 v48 = *(_OWORD *)(a3 + 64);
    __int128 v51 = *(_OWORD *)(a3 + 80);
    __int128 v54 = *(_OWORD *)(a3 + 96);
    __int128 v57 = *(_OWORD *)(a3 + 112);
    __int128 v36 = *(_OWORD *)a3;
    __int128 v39 = *(_OWORD *)(a3 + 16);
    __int128 v42 = *(_OWORD *)(a3 + 32);
    __int128 v45 = *(_OWORD *)(a3 + 48);
    __int128 v9 = *a4;
    __int128 v10 = a4[1];
    __int128 v11 = a4[3];
    *(_OWORD *)(a3 + 32) = a4[2];
    *(_OWORD *)(a3 + 4_Block_object_dispose((const void *)(v1 - 128), 8) = v11;
    *(_OWORD *)a3 = v9;
    *(_OWORD *)(a3 + 16) = v10;
    __int128 v12 = a4[4];
    __int128 v13 = a4[5];
    __int128 v14 = a4[7];
    *(_OWORD *)(a3 + sub_10000AE14(v14 + 96) = a4[6];
    *(_OWORD *)(a3 + sub_10000AE14(v14 + 112) = v14;
    *(_OWORD *)(a3 + 64) = v12;
    *(_OWORD *)(a3 + 8sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v13;
    __int128 v15 = a4[8];
    __int128 v16 = a4[9];
    __int128 v17 = a4[11];
    *(_OWORD *)(a3 + sub_10000AE14(v14 + 160) = a4[10];
    *(_OWORD *)(a3 + 176) = v17;
    *(_OWORD *)(a3 + 12_Block_object_dispose((const void *)(v1 - 128), 8) = v15;
    *(_OWORD *)(a3 + sub_10000AE14(v14 + 144) = v16;
    a4[8] = v60;
    a4[9] = v63;
    a4[10] = v66;
    a4[11] = v69;
    a4[4] = v48;
    a4[5] = v51;
    a4[6] = v54;
    a4[7] = v57;
    *a4 = v36;
    a4[1] = v39;
    result.n128_u64[1] = *((void *)&v42 + 1);
    a4[2] = v42;
    a4[3] = v45;
    result.n128_u64[0] = *(void *)(a3 + 84);
    if (result.n128_f64[0] > *(double *)(a2 + 84))
    {
      __int128 v61 = *(_OWORD *)(a2 + 128);
      __int128 v64 = *(_OWORD *)(a2 + 144);
      __int128 v67 = *(_OWORD *)(a2 + 160);
      __int128 v70 = *(_OWORD *)(a2 + 176);
      __int128 v49 = *(_OWORD *)(a2 + 64);
      __int128 v52 = *(_OWORD *)(a2 + 80);
      __int128 v55 = *(_OWORD *)(a2 + 96);
      __int128 v58 = *(_OWORD *)(a2 + 112);
      __int128 v37 = *(_OWORD *)a2;
      __int128 v40 = *(_OWORD *)(a2 + 16);
      __int128 v43 = *(_OWORD *)(a2 + 32);
      __int128 v46 = *(_OWORD *)(a2 + 48);
      __int128 v18 = *(_OWORD *)a3;
      __int128 v19 = *(_OWORD *)(a3 + 16);
      __int128 v20 = *(_OWORD *)(a3 + 48);
      *(_OWORD *)(a2 + 32) = *(_OWORD *)(a3 + 32);
      *(_OWORD *)(a2 + 4_Block_object_dispose((const void *)(v1 - 128), 8) = v20;
      *(_OWORD *)a2 = v18;
      *(_OWORD *)(a2 + 16) = v19;
      __int128 v21 = *(_OWORD *)(a3 + 64);
      __int128 v22 = *(_OWORD *)(a3 + 80);
      __int128 v23 = *(_OWORD *)(a3 + 112);
      *(_OWORD *)(a2 + sub_10000AE14(v14 + 96) = *(_OWORD *)(a3 + 96);
      *(_OWORD *)(a2 + sub_10000AE14(v14 + 112) = v23;
      *(_OWORD *)(a2 + 64) = v21;
      *(_OWORD *)(a2 + 8sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v22;
      __int128 v24 = *(_OWORD *)(a3 + 128);
      __int128 v25 = *(_OWORD *)(a3 + 144);
      __int128 v26 = *(_OWORD *)(a3 + 176);
      *(_OWORD *)(a2 + sub_10000AE14(v14 + 160) = *(_OWORD *)(a3 + 160);
      *(_OWORD *)(a2 + 176) = v26;
      *(_OWORD *)(a2 + 12_Block_object_dispose((const void *)(v1 - 128), 8) = v24;
      *(_OWORD *)(a2 + sub_10000AE14(v14 + 144) = v25;
      *(_OWORD *)(a3 + 12_Block_object_dispose((const void *)(v1 - 128), 8) = v61;
      *(_OWORD *)(a3 + sub_10000AE14(v14 + 144) = v64;
      *(_OWORD *)(a3 + sub_10000AE14(v14 + 160) = v67;
      *(_OWORD *)(a3 + 176) = v70;
      *(_OWORD *)(a3 + 64) = v49;
      *(_OWORD *)(a3 + 8sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v52;
      *(_OWORD *)(a3 + sub_10000AE14(v14 + 96) = v55;
      *(_OWORD *)(a3 + sub_10000AE14(v14 + 112) = v58;
      *(_OWORD *)a3 = v37;
      *(_OWORD *)(a3 + 16) = v40;
      result.n128_u64[1] = *((void *)&v43 + 1);
      *(_OWORD *)(a3 + 32) = v43;
      *(_OWORD *)(a3 + 4_Block_object_dispose((const void *)(v1 - 128), 8) = v46;
      result.n128_u64[0] = *(void *)(a2 + 84);
      if (result.n128_f64[0] > *(double *)(a1 + 84))
      {
        __int128 v62 = *(_OWORD *)(a1 + 128);
        __int128 v65 = *(_OWORD *)(a1 + 144);
        __int128 v68 = *(_OWORD *)(a1 + 160);
        __int128 v71 = *(_OWORD *)(a1 + 176);
        __int128 v50 = *(_OWORD *)(a1 + 64);
        __int128 v53 = *(_OWORD *)(a1 + 80);
        __int128 v56 = *(_OWORD *)(a1 + 96);
        __int128 v59 = *(_OWORD *)(a1 + 112);
        __int128 v38 = *(_OWORD *)a1;
        __int128 v41 = *(_OWORD *)(a1 + 16);
        __n128 v44 = *(__n128 *)(a1 + 32);
        __int128 v47 = *(_OWORD *)(a1 + 48);
        __int128 v27 = *(_OWORD *)a2;
        __int128 v28 = *(_OWORD *)(a2 + 16);
        __int128 v29 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v1 - 128), 8) = v29;
        *(_OWORD *)a1 = v27;
        *(_OWORD *)(a1 + 16) = v28;
        __int128 v30 = *(_OWORD *)(a2 + 64);
        __int128 v31 = *(_OWORD *)(a2 + 80);
        __int128 v32 = *(_OWORD *)(a2 + 112);
        *(_OWORD *)(a1 + sub_10000AE14(v14 + 96) = *(_OWORD *)(a2 + 96);
        *(_OWORD *)(a1 + sub_10000AE14(v14 + 112) = v32;
        *(_OWORD *)(a1 + 64) = v30;
        *(_OWORD *)(a1 + 8sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v31;
        __int128 v33 = *(_OWORD *)(a2 + 128);
        __int128 v34 = *(_OWORD *)(a2 + 144);
        __int128 v35 = *(_OWORD *)(a2 + 176);
        *(_OWORD *)(a1 + sub_10000AE14(v14 + 160) = *(_OWORD *)(a2 + 160);
        *(_OWORD *)(a1 + 176) = v35;
        *(_OWORD *)(a1 + 12_Block_object_dispose((const void *)(v1 - 128), 8) = v33;
        *(_OWORD *)(a1 + sub_10000AE14(v14 + 144) = v34;
        *(_OWORD *)(a2 + 12_Block_object_dispose((const void *)(v1 - 128), 8) = v62;
        *(_OWORD *)(a2 + sub_10000AE14(v14 + 144) = v65;
        *(_OWORD *)(a2 + sub_10000AE14(v14 + 160) = v68;
        *(_OWORD *)(a2 + 176) = v71;
        *(_OWORD *)(a2 + 64) = v50;
        *(_OWORD *)(a2 + 8sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v53;
        *(_OWORD *)(a2 + sub_10000AE14(v14 + 96) = v56;
        *(_OWORD *)(a2 + sub_10000AE14(v14 + 112) = v59;
        *(_OWORD *)a2 = v38;
        *(_OWORD *)(a2 + 16) = v41;
        __n128 result = v44;
        *(__n128 *)(a2 + 32) = v44;
        *(_OWORD *)(a2 + 4_Block_object_dispose((const void *)(v1 - 128), 8) = v47;
      }
    }
  }

  return result;
}

void sub_100F269E8(id a1)
{
  qword_101934858 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

void sub_100F26A14()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1019361B8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1019361B8))
    {
      qword_1019361A0 = 0LL;
      qword_1019361A8 = 0LL;
      qword_1019361B0 = 0LL;
      uint64_t v1 = operator new(6uLL);
      qword_1019361A8 = (uint64_t)(v1 + 3);
      qword_1019361B0 = (uint64_t)(v1 + 3);
      *(_DWORD *)uint64_t v1 = 151521030;
      v1[2] = 3082;
      qword_1019361A0 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1001CDCD0, &qword_1019361A0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1019361B8);
    }
  }

void sub_100F26AB0(_Unwind_Exception *a1)
{
}

void sub_100F26AC8()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1019361D8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1019361D8))
    {
      qword_1019361C0 = 0LL;
      qword_1019361C8 = 0LL;
      qword_1019361D0 = 0LL;
      uint64_t v1 = operator new(2uLL);
      qword_1019361C0 = (uint64_t)v1;
      _WORD *v1 = 256;
      qword_1019361C8 = (uint64_t)(v1 + 1);
      qword_1019361D0 = (uint64_t)(v1 + 1);
      __cxa_atexit((void (*)(void *))sub_1001CDD00, &qword_1019361C0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1019361D8);
    }
  }

void sub_100F26B54(_Unwind_Exception *a1)
{
}

void sub_100F26C88(id a1)
{
  qword_10199F580 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLTransitMacMonitorSilo");
}

void sub_100F26FF0(uint64_t a1, unsigned int *a2, __int16 *a3, void *a4)
{
  uint64_t v6 = *a2;
  __int16 v7 = *a3;
  sub_1000C6980(v8, (uint64_t)(a3 + 4));
  uint64_t v12 = *((void *)a3 + 13);
  memset(v13, 0, 24);
  sub_1002DE3C8( v13,  *((void *)a3 + 14),  *((void *)a3 + 15),  0x2E8BA2E8BA2E8BA3LL * ((uint64_t)(*((void *)a3 + 15) - *((void *)a3 + 14)) >> 3));
  void v13[3] = *((void *)a3 + 17);
  [a4 onWifiServiceNotification:v6 data:&v7];
  __int128 v14 = (void **)v13;
  sub_100023498(&v14);
  if (v11)
  {
    if (v10 < 0) {
      operator delete(__p);
    }
  }

void sub_100F270B4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, char a25)
{
}

void sub_100F270E8(uint64_t a1, unsigned int *a2, uint64_t a3, void *a4)
{
  uint64_t v5 = *a2;
  sub_100246C40((uint64_t)v15, a3);
  [a4 onLocationNotification:v5 data:v15];

  uint64_t v6 = v20;
  if (v20)
  {
    p_shared_owners = (unint64_t *)&v20->__shared_owners_;
    do
      unint64_t v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }

  if (v19 < 0) {
    operator delete(__p);
  }
  __int128 v9 = v17;
  if (v17)
  {
    char v10 = (unint64_t *)&v17->__shared_owners_;
    do
      unint64_t v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }

  uint64_t v12 = v16;
  if (v16)
  {
    __int128 v13 = (unint64_t *)&v16->__shared_owners_;
    do
      unint64_t v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }

void sub_100F271F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

BOOL sub_100F28290(uint64_t a1, void *a2)
{
  return v3 >= *(double *)(a1 + 32) + -600.0;
}

void sub_100F28A7C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20, uint64_t a21, char a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, char *a27, uint64_t a28)
{
  a27 = &a22;
  sub_100023498((void ***)&a27);
  _Unwind_Resume(a1);
}

void sub_100F28B1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    if (qword_1019348F0 != -1) {
      dispatch_once(&qword_1019348F0, &stru_10188CF68);
    }
    unint64_t v4 = (os_log_s *)qword_1019348F8;
    if (os_log_type_enabled((os_log_t)qword_1019348F8, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::string buf = 138412290;
      uint64_t v10 = a3;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_INFO,  "#TransitMacMonitor: error fetching from CLTransitMacTileDataProvider, %@",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348F0 != -1) {
        dispatch_once(&qword_1019348F0, &stru_10188CF68);
      }
      int v7 = 138412290;
      uint64_t v8 = a3;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348F8,  1LL,  "#TransitMacMonitor: error fetching from CLTransitMacTileDataProvider, %@",  &v7,  12);
      uint64_t v6 = (uint8_t *)v5;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[CLTransitMacMonitor onWifiServiceNotification:data:]_block_invoke",  "%s\n",  v5);
      if (v6 != buf) {
        free(v6);
      }
    }
  }

  else
  {
    _[*(id *)(a1 + 32) processNewAccessPoints:a1 + 40 transitTileResults:a2];
  }

void *sub_100F28D08(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + sub_10004AD90(v3 - 40) = 0LL;
  *(void *)(a1 + 4_Block_object_dispose((const void *)(v1 - 128), 8) = 0LL;
  double v2 = (void *)(a1 + 40);
  v2[2] = 0LL;
  return sub_1002DE3C8( v2,  *(void *)(a2 + 40),  *(void *)(a2 + 48),  0x2E8BA2E8BA2E8BA3LL * ((uint64_t)(*(void *)(a2 + 48) - *(void *)(a2 + 40)) >> 3));
}

void sub_100F28D38(uint64_t a1)
{
  uint64_t v1 = (void **)(a1 + 40);
  sub_100023498(&v1);
}

void sub_100F29060(id a1)
{
  qword_1019348F8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Transit");
}

void sub_100F2908C(id a1)
{
  qword_1019349A8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Routine");
}

double sub_100F290B8(double a1, double a2)
{
  return (a1 / a2 * 10.8 + 7.0) / 3.5;
}

double sub_100F290D8(double a1, double a2)
{
  return fmax((a1 * 3.5 + -7.0) / 10.8 * a2, 0.0);
}

float sub_100F29100(uint64_t a1, double a2)
{
  double v2 = *(double *)(a1 + 40);
  if (v2 == -1.0) {
    return -1.0;
  }
  float v3 = v2;
  float v4 = a2;
  sub_100C399F8(v3, *(float *)(a1 + 24), v4);
  return result;
}

float sub_100F2912C(uint64_t a1, double a2)
{
  float result = -1.0;
  if (*(double *)(a1 + 40) != -1.0)
  {
    double v4 = *(float *)(a1 + 24);
    if (v4 >= -0.277 && v4 <= 0.523)
    {
      double v5 = *(double *)(a1 + 56);
      if (v5 != -1.0) {
        return fmax((v5 * 3.5 + -7.0) / 10.8 * a2, 0.0);
      }
    }
  }

  return result;
}

BOOL sub_100F291A8(uint64_t a1)
{
  return (a1 & 0xFFFFFFFFFFFFFFFELL) == 4;
}

BOOL sub_100F291B8(uint64_t a1, uint64_t a2)
{
  return fmax(((float)(*(float *)(a2 + 16) * 0.5) * 3.5 + -7.0) / 10.8 * *(float *)(a2 + 12), 0.0) <= *(float *)(a1 + 32);
}

void sub_100F295A0(id a1)
{
  qword_101934518 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Pedometer");
}

void sub_100F295D0(double *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  double v6 = *(double *)(a3 + 104);
  *(void *)(a3 + sub_10000AE14(v14 + 112) = 0x3FD0000000000000LL;
  if (v6 >= 0.0 && v6 < 8.0 && (a2 & 1) == 0)
  {
    double v7 = a1[5];
    double v8 = 0.2905;
LABEL_16:
    double v14 = v7 * v8 * a1[8];
LABEL_17:
    *(double *)a3 = v14;
    goto LABEL_18;
  }

  if (v6 >= 8.0 && v6 < 10.0 || (v6 >= -4.0 ? (BOOL v9 = v6 < 0.0) : (BOOL v9 = 0), v9 || a2))
  {
    double v7 = a1[4] * 0.2905;
    double v8 = a1[6];
    goto LABEL_16;
  }

  if (v6 >= 10.0)
  {
    double v13 = (a1[4] + a1[3] * 10.5) * 0.2905;
    goto LABEL_20;
  }

  if (v6 < -4.0)
  {
    double v10 = v6 / 100.0 / sqrt(v6 / 100.0 * (v6 / 100.0) + 1.0);
    double v11 = exp(v10 * -18.6);
    double v12 = fabs((v6 + 4.0 + v6 + 4.0) / (v6 + -4.0)) * 0.15;
    double v13 = a1[4] * 0.2905 * fmin((1.0 - v12) * a1[6] + v12 * (v11 * 0.19976 + 0.80024 + v10 * 0.98795), 1.0);
LABEL_20:
    double v14 = a1[8] * v13;
    goto LABEL_17;
  }

  if (qword_1019346F0 != -1) {
    dispatch_once(&qword_1019346F0, &stru_10188CFC8);
  }
  __int128 v15 = (os_log_s *)qword_1019346F8;
  if (os_log_type_enabled((os_log_t)qword_1019346F8, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)std::string buf = 134349312;
    double v23 = v6;
    __int16 v24 = 1026;
    int v25 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_ERROR,  "Unexpected grade range grade=%{public}.2f, isGradeOnset=%{public}d",  buf,  0x12u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019346F0 != -1) {
      dispatch_once(&qword_1019346F0, &stru_10188CFC8);
    }
    int v18 = 134349312;
    double v19 = v6;
    __int16 v20 = 1026;
    int v21 = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019346F8,  16LL,  "Unexpected grade range grade=%{public}.2f, isGradeOnset=%{public}d",  &v18,  18);
    __int128 v17 = (uint8_t *)v16;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "static CLPower::ModelOutput CLPowerOutdoorRunModel::computePowerFixedEta(const CLPower::ModelInput &, BOOL)",  "%s\n",  v16);
    if (v17 != buf) {
      free(v17);
    }
  }

void sub_100F29920(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double v4 = *(double *)(a1 + 16);
  double v5 = *(double *)(a1 + 24);
  double v6 = sub_100A178C4(v4, v5);
  *(_DWORD *)(a2 + 124) = 0;
  *(_WORD *)(a2 + 12_Block_object_dispose((const void *)(v1 - 128), 8) = 0;
  *(void *)a2 = 0LL;
  *(_BYTE *)(a2 + 16) = 0;
  *(_BYTE *)(a2 + sub_10004AD90(v3 - 40) = 0;
  *(void *)(a2 + 56) = 0LL;
  *(_BYTE *)(a2 + 64) = 0;
  *(void *)(a2 + sub_10000AE14(v14 + 112) = 0LL;
  *(_BYTE *)(a2 + 12sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = 0;
  *(_DWORD *)(a2 + 132) = 1000;
  *(void *)(a2 + _Block_object_dispose((const void *)(v1 - 128), 8) = *(void *)(a1 + 80);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 64);
  *(void *)(a2 + 4_Block_object_dispose((const void *)(v1 - 128), 8) = *(void *)(a1 + 40);
  *(_OWORD *)(a2 + 72) = *(_OWORD *)a1;
  *(double *)(a2 + 8_Block_object_dispose((const void *)(v1 - 128), 8) = v4;
  *(double *)(a2 + sub_10000AE14(v14 + 96) = v5;
  *(double *)(a2 + 104) = v6;
}

void sub_100F299AC(id a1)
{
  qword_1019346F8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Power");
}

void sub_100F299D8(uint64_t a1)
{
  double v2 = *(void ***)(a1 + 224);
  uint64_t v3 = *(void *)(a1 + 232);
  *(void *)(a1 + 256) = 0LL;
  unint64_t v4 = v3 - (void)v2;
  if (v4 >= 0x11)
  {
    do
    {
      operator delete(*v2);
      uint64_t v5 = *(void *)(a1 + 232);
      double v2 = (void **)(*(void *)(a1 + 224) + 8LL);
      *(void *)(a1 + 224) = v2;
      unint64_t v4 = v5 - (void)v2;
    }

    while (v4 > 0x10);
  }

  if (v4 >> 3 == 1)
  {
    uint64_t v6 = 13LL;
  }

  else
  {
    if (v4 >> 3 != 2) {
      goto LABEL_8;
    }
    uint64_t v6 = 26LL;
  }

  *(void *)(a1 + 24_Block_object_dispose((const void *)(v1 - 128), 8) = v6;
LABEL_8:
  double v7 = *(void ***)(a1 + 128);
  uint64_t v8 = *(void *)(a1 + 136);
  *(void *)(a1 + sub_10000AE14(v14 + 160) = 0LL;
  unint64_t v9 = v8 - (void)v7;
  if (v9 >= 0x11)
  {
    do
    {
      operator delete(*v7);
      uint64_t v10 = *(void *)(a1 + 136);
      double v7 = (void **)(*(void *)(a1 + 128) + 8LL);
      *(void *)(a1 + 12_Block_object_dispose((const void *)(v1 - 128), 8) = v7;
      unint64_t v9 = v10 - (void)v7;
    }

    while (v9 > 0x10);
  }

  if (v9 >> 3 == 1)
  {
    uint64_t v11 = 13LL;
  }

  else
  {
    if (v9 >> 3 != 2) {
      goto LABEL_15;
    }
    uint64_t v11 = 26LL;
  }

  *(void *)(a1 + 152) = v11;
LABEL_15:
  double v12 = *(void ***)(a1 + 176);
  uint64_t v13 = *(void *)(a1 + 184);
  *(void *)(a1 + 20_Block_object_dispose((const void *)(v1 - 128), 8) = 0LL;
  unint64_t v14 = v13 - (void)v12;
  if (v14 >= 0x11)
  {
    do
    {
      operator delete(*v12);
      uint64_t v15 = *(void *)(a1 + 184);
      double v12 = (void **)(*(void *)(a1 + 176) + 8LL);
      *(void *)(a1 + 176) = v12;
      unint64_t v14 = v15 - (void)v12;
    }

    while (v14 > 0x10);
  }

  if (v14 >> 3 == 1)
  {
    uint64_t v16 = 13LL;
    goto LABEL_21;
  }

  if (v14 >> 3 == 2)
  {
    uint64_t v16 = 26LL;
LABEL_21:
    *(void *)(a1 + 20sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v16;
  }

  *(_WORD *)(a1 + 264) = 0;
  *(_BYTE *)(a1 + 266) = 0;
  *(void *)(a1 + 272) = 0LL;
  *(void *)(a1 + 28sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = 0LL;
  *(_DWORD *)(a1 + 287) = 0;
  *(void *)(a1 + 2sub_10000AE14(v14 + 96) = 0LL;
  *(void *)(a1 + 304) = 0LL;
  *(_DWORD *)(a1 + 311) = 0;
  *(void *)(a1 + 32sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = 0LL;
  *(void *)(a1 + 32_Block_object_dispose((const void *)(v1 - 128), 8) = 0LL;
  *(_DWORD *)(a1 + 336) = 0;
}

uint64_t sub_100F29B20(uint64_t a1)
{
  *(void *)(v2 + 272) = 0LL;
  *(void *)(v2 + 28sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = 0LL;
  *(_DWORD *)(v2 + 287) = 0;
  *(void *)(v2 + 2sub_10000AE14(v14 + 96) = 0LL;
  *(void *)(v2 + 304) = 0LL;
  *(_DWORD *)(v2 + 311) = 0;
  *(void *)(v2 + 32sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = 0LL;
  *(void *)(v2 + 32_Block_object_dispose((const void *)(v1 - 128), 8) = 0LL;
  *(_DWORD *)(v2 + 336) = 0;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 8_Block_object_dispose((const void *)(v1 - 128), 8) = 0u;
  *(_OWORD *)(v2 + 104) = 0u;
  *(_OWORD *)(v2 + 12sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = 0u;
  *(_OWORD *)(v2 + 136) = 0u;
  *(_OWORD *)(v2 + 152) = 0u;
  *(_OWORD *)(v2 + 16_Block_object_dispose((const void *)(v1 - 128), 8) = 0u;
  *(_OWORD *)(v2 + 184) = 0u;
  *(_OWORD *)(v2 + 20sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = 0u;
  *(_OWORD *)(v2 + 216) = 0u;
  *(_OWORD *)(v2 + 232) = 0u;
  *(_OWORD *)(v2 + 24_Block_object_dispose((const void *)(v1 - 128), 8) = 0u;
  *(_OWORD *)(v2 + sub_10004AD90(v3 - 40) = 0u;
  *(_DWORD *)(v2 + 263) = 0;
  *(void *)(v2 + 344) = 850045863LL;
  *(void *)(v2 + 40sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = 0LL;
  *(_OWORD *)(v2 + 36_Block_object_dispose((const void *)(v1 - 128), 8) = 0u;
  *(_OWORD *)(v2 + 384) = 0u;
  *(_OWORD *)(v2 + 352) = 0u;
  sub_100F299D8(v2);
  return a1;
}

uint64_t sub_100F29BC0(uint64_t a1)
{
  return a1;
}

void sub_100F29C0C(uint64_t a1)
{
  uint64_t v2 = (std::mutex *)(a1 + 344);
  std::mutex::lock((std::mutex *)(a1 + 344));
  sub_100F299D8(a1);
  std::mutex::unlock(v2);
}

void sub_100F29C40(double *a1, uint64_t a2, uint64_t a3, double *a4, BOOL *a5, double *a6)
{
  double v13 = v12;
  double v14 = *(double *)(a2 + 76);
  double v15 = v14 - *(double *)(a3 + 76);
  if (v15 >= -2.0)
  {
    BOOL v17 = v15 >= 0.0 || v15 <= -2.0;
    double v18 = fabs(v15);
    if (v17) {
      double v18 = v14 - *(double *)(a3 + 76);
    }
    double v19 = sub_100F29EA0(a1, v18, v14) + (*(double *)(a3 + 20) + *(double *)(a2 + 20)) * 3.0;
    *a4 = v19;
    *a6 = v13 - v19;
    *a5 = v13 < *a4;
  }

  else
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10188CFE8);
    }
    uint64_t v16 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::string buf = 134218240;
      double v27 = v15;
      __int16 v28 = 2048;
      unint64_t v29 = 0xC000000000000000LL;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "#Warning deltaTime = %0.3f, but most negative allowed is %0.3lf, resetting Integrity Monitor",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10188CFE8);
      }
      int v22 = 134218240;
      double v23 = v15;
      __int16 v24 = 2048;
      unint64_t v25 = 0xC000000000000000LL;
      LODWORD(v21) = 22;
      __int16 v20 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning deltaTime = %0.3f, but most negative allowed is %0.3lf, resetting Integrity Monitor",  COERCE_DOUBLE(&v22),  v21);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLIntegrityMonitor::crossCheck(const CLDaemonLocation &, const CLDaemonLocation &, double &, BOOL &, double &)",  "%s\n",  v20);
    }

    sub_100F299D8((uint64_t)a1);
  }

double sub_100F29EA0(void *a1, double a2, double a3)
{
  v15[0] = 0.0;
  __int128 v13 = 0u;
  __int128 v14 = 0u;
  uint64_t v4 = a1[14];
  if (!v4) {
    goto LABEL_5;
  }
  uint64_t v5 = a1 + 9;
  uint64_t v6 = a1[13];
  uint64_t v7 = a1[10];
  double v8 = a3
  if (v8 < a2)
  {
    sub_100F2B49C( a3,  -1.0,  (uint64_t)a1,  (double *)&v13,  (double *)&v14,  (double *)&v13 + 1,  (double *)&v14 + 1,  v15,  v4,  v5);
    double v9 = v8 + a2 - v8;
    if (v9 != 0.0)
    {
      double v10 = ((a2 - v8) * 40.0
           + (*(double *)&v14 * 3.0
            + *(double *)&v13 * 0.0
            + *((double *)&v13 + 1) * 5.0
            + *((double *)&v14 + 1) * 40.0
            + v15[0] * 40.0)
           / 100.0
           * v8)
          / v9;
      return v10 * a2;
    }

uint64_t sub_100F2A04C(uint64_t a1, _BYTE *a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 2);
  if (*(_BYTE *)a1) {
    BOOL v3 = v2 == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3)
  {
    if (*a2) {
      BOOL v4 = a2[2] == 0;
    }
    else {
      BOOL v4 = 1;
    }
    int v5 = v4;
    if (*(_BYTE *)a1) {
      BOOL v6 = v2 == 0;
    }
    else {
      BOOL v6 = 0;
    }
    if (v6)
    {
      if (v5) {
        return 5LL;
      }
      else {
        return 4LL;
      }
    }

    else
    {
      if (a2[2]) {
        BOOL v7 = 1;
      }
      else {
        BOOL v7 = *a2 == 0;
      }
      if (v7) {
        unsigned int v8 = 0;
      }
      else {
        unsigned int v8 = 4;
      }
      if (v5) {
        return v8;
      }
      else {
        return 3LL;
      }
    }
  }

  else
  {
    double v10 = *(double *)(a1 + 8);
    if (v10 <= 1000.0)
    {
      return 1LL;
    }

    else if (v10 > 5000.0 || v10 <= 1000.0)
    {
      return 3LL;
    }

    else
    {
      return 2LL;
    }
  }

void sub_100F2A0E8(double *a1, uint64_t a2, void *a3, uint64_t a4)
{
  if (a3[5])
  {
    uint64_t v4 = *(void *)(a3[1] + 8 * (a3[4] / 0x1AuLL)) + 156 * (a3[4] % 0x1AuLL);
    if (*(double *)(a2 + 76) - *(double *)(v4 + 76) < 900.0)
    {
      *(_BYTE *)a4 = 1;
      sub_100F29C40(a1, a2, v4, (double *)(a4 + 8), (BOOL *)(a4 + 2), (double *)(a4 + 16));
    }
  }

void sub_100F2A160(__int128 *a1, void *a2)
{
  unint64_t v3 = a2[5];
  if (v3 >= 5)
  {
    a2[5] = v3 - 1;
    sub_100210D14(a2, 1);
  }

int64x2_t sub_100F2A1B0(uint64_t a1, __int128 *a2)
{
  unint64_t v4 = *(void *)(a1 + 32);
  if (!v4)
  {
    sub_100F2BC7C((void **)a1);
    unint64_t v4 = *(void *)(a1 + 32);
  }

  uint64_t v5 = *(void *)(a1 + 8);
  BOOL v6 = (void *)(v5 + 8 * (v4 / 0x1A));
  uint64_t v7 = *v6 + 156 * (v4 % 0x1A);
  if (*(void *)(a1 + 16) == v5) {
    uint64_t v7 = 0LL;
  }
  if (v7 == *v6) {
    uint64_t v7 = *(v6 - 1) + 4056LL;
  }
  __int128 v8 = *a2;
  *(_OWORD *)(v7 - 1sub_10004AD90(v3 - 40) = a2[1];
  *(_OWORD *)(v7 - 156) = v8;
  __int128 v9 = a2[2];
  __int128 v10 = a2[3];
  __int128 v11 = a2[4];
  *(_OWORD *)(v7 - 76) = a2[5];
  *(_OWORD *)(v7 - 92) = v11;
  *(_OWORD *)(v7 - 10_Block_object_dispose((const void *)(v1 - 128), 8) = v10;
  *(_OWORD *)(v7 - 124) = v9;
  __int128 v12 = a2[6];
  __int128 v13 = a2[7];
  __int128 v14 = a2[8];
  *(_OWORD *)(v7 - 16) = *(__int128 *)((char *)a2 + 140);
  *(_OWORD *)(v7 - 2_Block_object_dispose((const void *)(v1 - 128), 8) = v14;
  *(_OWORD *)(v7 - 44) = v13;
  *(_OWORD *)(v7 - 6sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v12;
  int64x2_t result = vaddq_s64(*(int64x2_t *)(a1 + 32), (int64x2_t)xmmword_1012E2F20);
  *(int64x2_t *)(a1 + 32) = result;
  return result;
}

BOOL sub_100F2A284(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = (std::mutex *)(a1 + 344);
  std::mutex::lock((std::mutex *)(a1 + 344));
  BOOL v5 = sub_100F2A2E8(a1, a2);
  std::mutex::unlock(v4);
  return v5;
}

void sub_100F2A2D4(_Unwind_Exception *a1)
{
}

BOOL sub_100F2A2E8(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = (_BYTE *)(a1 + 264);
  *(_WORD *)(a1 + 264) = 0;
  *(_BYTE *)(a1 + 266) = 0;
  *(void *)(a1 + 272) = 0LL;
  *(void *)(a1 + 28sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = 0LL;
  *(_DWORD *)(a1 + 287) = 0;
  *(void *)(a1 + 2sub_10000AE14(v14 + 96) = 0LL;
  *(void *)(a1 + 304) = 0LL;
  *(_DWORD *)(a1 + 311) = 0;
  *(void *)(a1 + 32sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = 0LL;
  *(void *)(a1 + 32_Block_object_dispose((const void *)(v1 - 128), 8) = 0LL;
  *(_DWORD *)(a1 + 336) = 0;
  switch(*(_DWORD *)(a2 + 96))
  {
    case 1:
    case 3:
    case 9:
      if (*(void *)(a1 + 208))
      {
        unint64_t v5 = *(void *)(*(void *)(a1 + 176) + 8 * (*(void *)(a1 + 200) / 0x1AuLL))
           + 156 * (*(void *)(a1 + 200) % 0x1AuLL);
      }

      sub_100F2BF94((uint64_t)v51, (void *)(a1 + 168));
      sub_100F2A0E8((double *)a1, a2, v51, a1 + 288);
      sub_100210A94(v51);
      sub_100F2BF94((uint64_t)v50, (void *)(a1 + 216));
      sub_100F2A0E8((double *)a1, a2, v50, (uint64_t)v3);
      sub_100210A94(v50);
      *(_DWORD *)(a1 + 336) = 1;
      sub_100F2A160((__int128 *)a2, (void *)(a1 + 120));
      goto LABEL_6;
    case 4:
      *(_BYTE *)(a1 + 289) = *(_DWORD *)(a2 + 84) > 0x49u;
      sub_100F2BF94((uint64_t)v53, (void *)(a1 + 216));
      sub_100F2A0E8((double *)a1, a2, v53, (uint64_t)v3);
      sub_100210A94(v53);
      sub_100F2BF94((uint64_t)v52, (void *)(a1 + 120));
      sub_100F2A0E8((double *)a1, a2, v52, a1 + 312);
      sub_100210A94(v52);
      int v18 = sub_100F2A04C(a1 + 312, v3);
      *(_DWORD *)(a1 + 336) = v18;
      if (v18 == 5) {
        goto LABEL_6;
      }
      sub_100F2A160((__int128 *)a2, (void *)(a1 + 168));
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10188CFE8);
      }
      double v19 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        int v20 = *(_DWORD *)(a2 + 128);
        *(_DWORD *)std::string buf = 67109376;
        *(_DWORD *)__int128 v57 = v20;
        *(_WORD *)&v57[4] = 1024;
        *(_DWORD *)&v57[6] = 50;
        _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEBUG,  "locationType,integrityPrior,%d,integrityNew,%d",  buf,  0xEu);
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_50;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10188CFE8);
      }
      int v21 = *(_DWORD *)(a2 + 128);
      int v54 = 67109376;
      *(_DWORD *)__int128 v55 = v21;
      *(_WORD *)&v55[4] = 1024;
      *(_DWORD *)&v55[6] = 50;
      int v22 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "locationType,integrityPrior,%d,integrityNew,%d",  &v54,  14);
      sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLIntegrityMonitor::updateIMImpl(CLDaemonLocation &)", "%s\n", v22);
      break;
    case 6:
      if (*(void *)(a1 + 208))
      {
        unint64_t v23 = *(void *)(*(void *)(a1 + 176) + 8 * (*(void *)(a1 + 200) / 0x1AuLL))
            + 156 * (*(void *)(a1 + 200) % 0x1AuLL);
      }

      sub_100F2BF94((uint64_t)v49, (void *)(a1 + 168));
      sub_100F2A0E8((double *)a1, a2, v49, a1 + 288);
      sub_100210A94(v49);
      sub_100F2BF94((uint64_t)v48, (void *)(a1 + 120));
      sub_100F2A0E8((double *)a1, a2, v48, a1 + 312);
      sub_100210A94(v48);
      int v24 = sub_100F2A04C(a1 + 312, (_BYTE *)(a1 + 288));
      *(_DWORD *)(a1 + 336) = v24;
      if (v24 == 5) {
        goto LABEL_6;
      }
      sub_100F2A160((__int128 *)a2, (void *)(a1 + 216));
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10188CFE8);
      }
      unint64_t v25 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        int v26 = *(_DWORD *)(a2 + 128);
        *(_DWORD *)std::string buf = 67109376;
        *(_DWORD *)__int128 v57 = v26;
        *(_WORD *)&v57[4] = 1024;
        *(_DWORD *)&v57[6] = 50;
        _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEBUG,  "locationType,integrityPrior,%d,integrityNew,%d",  buf,  0xEu);
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_50;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10188CFE8);
      }
      int v46 = *(_DWORD *)(a2 + 128);
      int v54 = 67109376;
      *(_DWORD *)__int128 v55 = v46;
      *(_WORD *)&v55[4] = 1024;
      *(_DWORD *)&v55[6] = 50;
      int v22 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "locationType,integrityPrior,%d,integrityNew,%d",  &v54,  14);
      sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLIntegrityMonitor::updateIMImpl(CLDaemonLocation &)", "%s\n", v22);
      break;
    default:
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10188CFE8);
      }
      __int128 v14 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        int v15 = *(_DWORD *)(a2 + 96);
        *(_DWORD *)std::string buf = 67109120;
        *(_DWORD *)__int128 v57 = v15;
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "location type,%d,not supported", buf, 8u);
      }

      BOOL result = sub_1002921D0(115, 2);
      if (!result) {
        return result;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10188CFE8);
      }
      int v16 = *(_DWORD *)(a2 + 96);
      int v54 = 67109120;
      *(_DWORD *)__int128 v55 = v16;
      BOOL v17 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "location type,%d,not supported",  &v54);
      sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLIntegrityMonitor::updateIMImpl(CLDaemonLocation &)", "%s\n", v17);
      goto LABEL_69;
  }

void sub_100F2B2F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100F2B370(uint64_t a1, void *a2, _DWORD *a3, int *a4)
{
  uint64_t v8 = (std::mutex *)(a1 + 344);
  std::mutex::lock((std::mutex *)(a1 + 344));
  sub_100F2B3E0(a1, a2, a3, a4);
  std::mutex::unlock(v8);
}

void sub_100F2B3CC(_Unwind_Exception *a1)
{
}

void sub_100F2B3E0(uint64_t a1, void *a2, _DWORD *a3, int *a4)
{
  *(void *)(a1 + sub_10004AD90(v3 - 40) = *a2;
  int v4 = *a4;
  *(_DWORD *)(a1 + 4_Block_object_dispose((const void *)(v1 - 128), 8) = *a3;
  *(_DWORD *)(a1 + 52) = v4;
  if (*a3 > 0xBu || ((1 << *a3) & 0xC06) == 0)
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a1 + 40);
  }

  else if (*(_DWORD *)(a1 + 64) != 2)
  {
    *(void *)(a1 + 56) = *a2;
    int v6 = *a4;
    *(_DWORD *)(a1 + 64) = 2;
    *(_DWORD *)(a1 + 6_Block_object_dispose((const void *)(v1 - 128), 8) = v6;
  }

  sub_100F2B448(a1);
}

void sub_100F2B448(uint64_t a1)
{
  int v2 = (void *)(a1 + 72);
  sub_100F2B804(a1 + 72, (_OWORD *)(a1 + 40));
  unint64_t v3 = *(void *)(a1 + 112);
  if (v3 >= 0x12C)
  {
    *(void *)(a1 + sub_10000AE14(v14 + 112) = v3 - 1;
    sub_100232D9C(v2, 1);
  }

double sub_100F2B49C( double result, double a2, uint64_t a3, double *a4, double *a5, double *a6, double *a7, double *a8, int a9, void *a10)
{
  if (a9)
  {
    double v10 = 0.0;
    double v11 = 0.0;
    double v12 = 0.0;
    double v13 = 0.0;
    double v14 = 0.0;
    if (result > 0.0)
    {
      uint64_t v15 = *(void *)(a10[1] + ((a10[4] >> 5) & 0x7FFFFFFFFFFFFF8LL));
      uint64_t v16 = a10[4];
      double v17 = result - *(double *)(v15 + 16 * v16);
      if (v17 <= 0.0) {
        goto LABEL_2;
      }
      int v18 = *(_DWORD *)(v15 + 16 * v16 + 8);
      if (v18 > 40)
      {
        if (v18 == 41)
        {
LABEL_22:
          double v10 = 0.0;
          double v13 = v17 + 0.0;
        }

        else if (v18 == 52 || v18 == 56)
        {
LABEL_20:
          double v10 = 0.0;
          double v11 = v17 + 0.0;
        }

        else
        {
LABEL_24:
          double v10 = v17 + 0.0;
        }

int64x2_t sub_100F2B804(uint64_t a1, _OWORD *a2)
{
  unint64_t v4 = *(void *)(a1 + 32);
  if (!v4)
  {
    sub_100F2C8CC((void **)a1);
    unint64_t v4 = *(void *)(a1 + 32);
  }

  uint64_t v5 = *(void *)(a1 + 8);
  int v6 = (void *)(v5 + 8 * (v4 >> 8));
  uint64_t v7 = *v6 + 16LL * v4;
  if (*(void *)(a1 + 16) == v5) {
    uint64_t v7 = 0LL;
  }
  if (v7 == *v6) {
    uint64_t v7 = *(v6 - 1) + 4096LL;
  }
  *(_OWORD *)(v7 - 16) = *a2;
  int64x2_t result = vaddq_s64(*(int64x2_t *)(a1 + 32), (int64x2_t)xmmword_1012E2F20);
  *(int64x2_t *)(a1 + 32) = result;
  return result;
}

BOOL sub_100F2B880(uint64_t a1)
{
  int v2 = (std::mutex *)(a1 + 344);
  std::mutex::lock((std::mutex *)(a1 + 344));
  BOOL v3 = sub_100F2B8D4((void *)a1);
  std::mutex::unlock(v2);
  return v3;
}

void sub_100F2B8C0(_Unwind_Exception *a1)
{
}

BOOL sub_100F2B8D4(void *a1)
{
  return a1[20]
      && CFAbsoluteTimeGetCurrent()
       - *(double *)(*(void *)(a1[16] + 8 * (a1[19] / 0x1AuLL)) + 156 * (a1[19] % 0x1AuLL) + 76) < 900.0;
}

BOOL sub_100F2B950(uint64_t a1)
{
  int v2 = (std::mutex *)(a1 + 344);
  std::mutex::lock((std::mutex *)(a1 + 344));
  BOOL v3 = sub_100F2B9A4((void *)a1);
  std::mutex::unlock(v2);
  return v3;
}

void sub_100F2B990(_Unwind_Exception *a1)
{
}

BOOL sub_100F2B9A4(void *a1)
{
  return a1[32]
      && CFAbsoluteTimeGetCurrent()
       - *(double *)(*(void *)(a1[28] + 8 * (a1[31] / 0x1AuLL)) + 156 * (a1[31] % 0x1AuLL) + 76) < 900.0;
}

BOOL sub_100F2BA20(uint64_t a1)
{
  int v2 = (std::mutex *)(a1 + 344);
  std::mutex::lock((std::mutex *)(a1 + 344));
  BOOL v3 = sub_100F2B8D4((void *)a1) || sub_100F2B9A4((void *)a1);
  std::mutex::unlock(v2);
  return v3;
}

void sub_100F2BA74(_Unwind_Exception *a1)
{
}

double sub_100F2BA88(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = (std::mutex *)(a1 + 344);
  std::mutex::lock((std::mutex *)(a1 + 344));
  double v5 = sub_100F2BAF4((double *)a1, a2);
  std::mutex::unlock(v4);
  return v5;
}

void sub_100F2BAE0(_Unwind_Exception *a1)
{
}

double sub_100F2BAF4(double *a1, uint64_t a2)
{
  if (!sub_100F2B8D4(a1)) {
    return NAN;
  }
  sub_100D2DCA4( a1,  *(void *)(*((void *)a1 + 16) + 8 * (*((void *)a1 + 19) / 0x1AuLL)) + 156 * (*((void *)a1 + 19) % 0x1AuLL),  a2);
  return result;
}

double sub_100F2BB6C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = (std::mutex *)(a1 + 344);
  std::mutex::lock((std::mutex *)(a1 + 344));
  double v5 = sub_100F2BBD8((double *)a1, a2);
  std::mutex::unlock(v4);
  return v5;
}

void sub_100F2BBC4(_Unwind_Exception *a1)
{
}

double sub_100F2BBD8(double *a1, uint64_t a2)
{
  if (!sub_100F2B9A4(a1)) {
    return NAN;
  }
  sub_100D2DCA4( a1,  *(void *)(*((void *)a1 + 28) + 8 * (*((void *)a1 + 31) / 0x1AuLL)) + 156 * (*((void *)a1 + 31) % 0x1AuLL),  a2);
  return result;
}

void sub_100F2BC50(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

void sub_100F2BC7C(void **a1)
{
  int v2 = a1[1];
  BOOL v3 = a1[2];
  unint64_t v4 = (v3 - v2) >> 3;
  if (v3 == v2) {
    uint64_t v5 = 0LL;
  }
  else {
    uint64_t v5 = 26 * v4 - 1;
  }
  int v6 = (char *)a1[4];
  if (v5 - (unint64_t)&v6[(void)a1[5]] < 0x1A)
  {
    uint64_t v7 = (uint64_t)(a1 + 3);
    uint64_t v8 = a1[3];
    uint64_t v9 = *a1;
    uint64_t v10 = v8 - (_BYTE *)*a1;
    if (v4 >= v10 >> 3)
    {
      if (v8 == v9) {
        unint64_t v11 = 1LL;
      }
      else {
        unint64_t v11 = v10 >> 2;
      }
      int v46 = a1 + 3;
      std::stringbuf::string_type __p = sub_1000071BC(v7, v11);
      uint64_t v43 = (char *)__p;
      __n128 v44 = (char *)__p;
      int v45 = (char *)__p + 8 * v12;
      int v41 = operator new(0xFD8uLL);
      sub_1000ECB90(&__p, &v41);
      double v13 = (char *)a1[1];
      double v14 = v44;
      if (v13 == a1[2])
      {
        __int128 v33 = (char *)a1[1];
      }

      else
      {
        do
        {
          if (v14 == v45)
          {
            int64_t v15 = v43 - (_BYTE *)__p;
            if (v43 <= __p)
            {
              if (v14 == __p) {
                unint64_t v23 = 1LL;
              }
              else {
                unint64_t v23 = (v14 - (_BYTE *)__p) >> 2;
              }
              uint64_t v24 = (char *)sub_1000071BC((uint64_t)v46, v23);
              int v26 = v43;
              double v14 = &v24[8 * (v23 >> 2)];
              uint64_t v27 = v44 - v43;
              if (v44 != v43)
              {
                double v14 = &v24[8 * (v23 >> 2) + (v27 & 0xFFFFFFFFFFFFFFF8LL)];
                uint64_t v28 = 8 * (v27 >> 3);
                int v29 = &v24[8 * (v23 >> 2)];
                do
                {
                  uint64_t v30 = *(void *)v26;
                  v26 += 8;
                  *(void *)int v29 = v30;
                  v29 += 8;
                  v28 -= 8LL;
                }

                while (v28);
              }

              __int128 v31 = __p;
              std::stringbuf::string_type __p = v24;
              uint64_t v43 = &v24[8 * (v23 >> 2)];
              __n128 v44 = v14;
              int v45 = &v24[8 * v25];
              if (v31)
              {
                operator delete(v31);
                double v14 = v44;
              }
            }

            else
            {
              uint64_t v16 = v15 >> 3;
              BOOL v17 = v15 >> 3 < -1;
              uint64_t v18 = (v15 >> 3) + 2;
              if (v17) {
                uint64_t v19 = v18;
              }
              else {
                uint64_t v19 = v16 + 1;
              }
              unint64_t v20 = &v43[-8 * (v19 >> 1)];
              int64_t v21 = v14 - v43;
              if (v14 != v43)
              {
                memmove(&v43[-8 * (v19 >> 1)], v43, v14 - v43);
                double v14 = v43;
              }

              uint64_t v22 = &v14[-8 * (v19 >> 1)];
              double v14 = &v20[v21];
              uint64_t v43 = v22;
              __n128 v44 = &v20[v21];
            }
          }

          uint64_t v32 = *(void *)v13;
          v13 += 8;
          *(void *)double v14 = v32;
          double v14 = v44 + 8;
          v44 += 8;
        }

        while (v13 != a1[2]);
        __int128 v33 = (char *)a1[1];
      }

      __int128 v36 = *a1;
      int v37 = v43;
      *a1 = __p;
      a1[1] = v37;
      std::stringbuf::string_type __p = v36;
      uint64_t v43 = v33;
      int v38 = (char *)a1[3];
      __int128 v39 = v45;
      a1[2] = v14;
      a1[3] = v39;
      __n128 v44 = v13;
      int v45 = v38;
      if (v14 - v37 == 8) {
        uint64_t v40 = 13LL;
      }
      else {
        uint64_t v40 = (uint64_t)a1[4] + 26;
      }
      a1[4] = (void *)v40;
      if (v13 != v33) {
        __n128 v44 = &v13[(v33 - v13 + 7) & 0xFFFFFFFFFFFFFFF8LL];
      }
      if (v36) {
        operator delete(v36);
      }
    }

    else
    {
      if (v2 == v9)
      {
        std::stringbuf::string_type __p = operator new(0xFD8uLL);
        sub_1000EC960(a1, &__p);
        double v34 = a1[2];
        std::stringbuf::string_type __p = (void *)*(v34 - 1);
        a1[2] = v34 - 1;
      }

      else
      {
        std::stringbuf::string_type __p = operator new(0xFD8uLL);
      }

      sub_1000ECA74((uint64_t)a1, &__p);
      if ((_BYTE *)a1[2] - (_BYTE *)a1[1] == 8) {
        uint64_t v35 = 13LL;
      }
      else {
        uint64_t v35 = (uint64_t)a1[4] + 26;
      }
      a1[4] = (void *)v35;
    }
  }

  else
  {
    a1[4] = v6 + 26;
    std::stringbuf::string_type __p = (void *)*((void *)v3 - 1);
    a1[2] = v3 - 8;
    sub_1000ECA74((uint64_t)a1, &__p);
  }

void sub_100F2BF48( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100F2BF94(uint64_t a1, void *a2)
{
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  unint64_t v3 = a2[4];
  uint64_t v4 = a2[1];
  if (a2[2] == v4)
  {
    uint64_t v5 = 0LL;
    uint64_t v8 = 0LL;
    uint64_t v7 = (void *)(v4 + ((((a2[5] + v3) * (unsigned __int128)0x4EC4EC4EC4EC4EC5uLL) >> 64) & 0x7FFFFFFFFFFFFFF8LL));
  }

  else
  {
    uint64_t v5 = (_OWORD *)(*(void *)(v4 + 8 * (v3 / 0x1A)) + 156 * (v3 % 0x1A));
    unint64_t v6 = a2[5] + v3;
    uint64_t v7 = (void *)(v4 + 8 * (v6 / 0x1A));
    uint64_t v8 = (_OWORD *)(*v7 + 156 * (v6 % 0x1A));
  }

  sub_100F2C060((void *)a1, (void *)(v4 + 8 * (v3 / 0x1A)), v5, v7, v8);
  return a1;
}

void sub_100F2C04C(_Unwind_Exception *a1)
{
}

void *sub_100F2C060(void *a1, void *a2, _OWORD *a3, void *a4, _OWORD *a5)
{
  if (a5 == a3) {
    unint64_t v5 = 0LL;
  }
  else {
    unint64_t v5 = 26 * (a4 - a2)
  }
  return sub_100F2C0C4(a1, a2, a3, v5);
}

void *sub_100F2C0C4(void *a1, void *a2, _OWORD *a3, unint64_t a4)
{
  uint64_t v8 = a1[1];
  uint64_t v9 = a1[2];
  if (v9 == v8) {
    uint64_t v10 = 0LL;
  }
  else {
    uint64_t v10 = 26 * ((v9 - v8) >> 3) - 1;
  }
  unint64_t v11 = a1[5] + a1[4];
  unint64_t v12 = v10 - v11;
  if (a4 > v12)
  {
    sub_100F2C264(a1, a4 - v12);
    uint64_t v8 = a1[1];
    uint64_t v9 = a1[2];
    unint64_t v11 = a1[4] + a1[5];
  }

  double v13 = (void *)(v8 + 8 * (v11 / 0x1A));
  if (v9 == v8) {
    unint64_t v14 = 0LL;
  }
  else {
    unint64_t v14 = *v13 + 156 * (v11 % 0x1A);
  }
  int v29 = (void *)(v8 + 8 * (v11 / 0x1A));
  unint64_t v30 = v14;
  double result = sub_100F2C818(&v29, a4);
  uint64_t v16 = v30;
  if (v14 != v30)
  {
    BOOL v17 = v29;
    do
    {
      if (v13 == v17) {
        uint64_t v18 = v16;
      }
      else {
        uint64_t v18 = *v13 + 4056LL;
      }
      if (v14 == v18)
      {
        uint64_t v18 = v14;
      }

      else
      {
        uint64_t v19 = (_OWORD *)v14;
        do
        {
          __int128 v20 = a3[1];
          *uint64_t v19 = *a3;
          v19[1] = v20;
          __int128 v21 = a3[2];
          __int128 v22 = a3[3];
          __int128 v23 = a3[5];
          v19[4] = a3[4];
          v19[5] = v23;
          v19[2] = v21;
          v19[3] = v22;
          __int128 v24 = a3[6];
          __int128 v25 = a3[7];
          __int128 v26 = a3[8];
          *(_OWORD *)((char *)v19 + 1sub_10004AD90(v3 - 40) = *(_OWORD *)((char *)a3 + 140);
          v19[7] = v25;
          v19[8] = v26;
          v19[6] = v24;
          a3 = (_OWORD *)((char *)a3 + 156);
          if ((_OWORD *)((char *)a3 - *a2) == (_OWORD *)4056)
          {
            uint64_t v27 = (_OWORD *)a2[1];
            ++a2;
            a3 = v27;
          }

          uint64_t v19 = (_OWORD *)((char *)v19 + 156);
        }

        while (v19 != (_OWORD *)v18);
      }

      a1[5] += 0x6F96F96F96F96F97LL * ((uint64_t)(v18 - v14) >> 2);
      if (v13 == v17) {
        break;
      }
      unint64_t v28 = v13[1];
      ++v13;
      unint64_t v14 = v28;
    }

    while (v28 != v16);
  }

  return result;
}

void sub_100F2C264(void *a1, unint64_t a2)
{
  unint64_t v3 = (char *)a1[2];
  uint64_t v4 = (uint64_t)&v3[-a1[1]];
  if (v4) {
    unint64_t v5 = a2;
  }
  else {
    unint64_t v5 = a2 + 1;
  }
  if (v5 % 0x1A) {
    unint64_t v6 = v5 / 0x1A + 1;
  }
  else {
    unint64_t v6 = v5 / 0x1A;
  }
  unint64_t v7 = a1[4];
  if (v6 >= v7 / 0x1A) {
    unint64_t v8 = v7 / 0x1A;
  }
  else {
    unint64_t v8 = v6;
  }
  if (v6 <= v7 / 0x1A)
  {
    for (a1[4] = v7 - 26 * v8; v8; --v8)
    {
      uint64_t v16 = (void *)a1[1];
      uint64_t v19 = *v16;
      BOOL v17 = (char *)(v16 + 1);
      uint64_t v18 = v19;
      a1[1] = v17;
      if (v3 == (char *)a1[3])
      {
        uint64_t v20 = (uint64_t)&v17[-*a1];
        if ((unint64_t)v17 <= *a1)
        {
          else {
            unint64_t v28 = (uint64_t)&v3[-*a1] >> 2;
          }
          int v29 = (char *)sub_1000071BC((uint64_t)(a1 + 3), v28);
          __int128 v31 = &v29[8 * (v28 >> 2)];
          uint64_t v32 = (uint64_t *)a1[1];
          unint64_t v3 = v31;
          uint64_t v33 = a1[2] - (void)v32;
          if (v33)
          {
            unint64_t v3 = &v31[v33 & 0xFFFFFFFFFFFFFFF8LL];
            uint64_t v34 = 8 * (v33 >> 3);
            uint64_t v35 = &v29[8 * (v28 >> 2)];
            do
            {
              uint64_t v36 = *v32++;
              *(void *)uint64_t v35 = v36;
              v35 += 8;
              v34 -= 8LL;
            }

            while (v34);
          }

          int v37 = (char *)*a1;
          *a1 = v29;
          a1[1] = v31;
          a1[2] = v3;
          a1[3] = &v29[8 * v30];
          if (v37)
          {
            operator delete(v37);
            unint64_t v3 = (char *)a1[2];
          }
        }

        else
        {
          uint64_t v21 = v20 >> 3;
          BOOL v22 = v20 >> 3 < -1;
          uint64_t v23 = (v20 >> 3) + 2;
          if (v22) {
            uint64_t v24 = v23;
          }
          else {
            uint64_t v24 = v21 + 1;
          }
          __int128 v25 = &v17[-8 * (v24 >> 1)];
          int64_t v26 = v3 - v17;
          if (v3 != v17)
          {
            memmove(&v17[-8 * (v24 >> 1)], v17, v3 - v17);
            unint64_t v3 = (char *)a1[1];
          }

          uint64_t v27 = &v3[-8 * (v24 >> 1)];
          unint64_t v3 = &v25[v26];
          a1[1] = v27;
          a1[2] = &v25[v26];
        }
      }

      *(void *)unint64_t v3 = v18;
      unint64_t v3 = (char *)(a1[2] + 8LL);
      a1[2] = v3;
    }
  }

  else
  {
    unint64_t v9 = v6 - v8;
    uint64_t v10 = a1[3] - *a1;
    if (v6 - v8 <= (v10 >> 3) - (v4 >> 3))
    {
      if (v9)
      {
        while (a1[3] != a1[2])
        {
          __p[0] = operator new(0xFD8uLL);
          sub_1000EC960(a1, __p);
          --v6;
          if (!--v9) {
            goto LABEL_75;
          }
        }

        for (uint64_t i = 0LL; i != v9; ++i)
        {
          __p[0] = operator new(0xFD8uLL);
          sub_1000ECA74((uint64_t)a1, __p);
          if (a1[2] - a1[1] == 8LL) {
            uint64_t v64 = 25LL;
          }
          else {
            uint64_t v64 = 26LL;
          }
          uint64_t v65 = v64 + a1[4];
          a1[4] = v65;
        }

        unint64_t v8 = v6;
      }

      else
      {
LABEL_75:
        uint64_t v65 = a1[4];
      }

      a1[4] = v65 - 26 * v8;
      if (v8)
      {
        __int128 v66 = (char *)a1[2];
        do
        {
          __int128 v67 = (void *)a1[1];
          uint64_t v70 = *v67;
          __int128 v68 = (char *)(v67 + 1);
          uint64_t v69 = v70;
          a1[1] = v68;
          if (v66 == (char *)a1[3])
          {
            uint64_t v71 = (uint64_t)&v68[-*a1];
            if ((unint64_t)v68 <= *a1)
            {
              else {
                unint64_t v78 = (uint64_t)&v66[-*a1] >> 2;
              }
              __int128 v79 = (char *)sub_1000071BC((uint64_t)(a1 + 3), v78);
              __int128 v81 = &v79[8 * (v78 >> 2)];
              __int128 v82 = (uint64_t *)a1[1];
              __int128 v66 = v81;
              uint64_t v83 = a1[2] - (void)v82;
              if (v83)
              {
                __int128 v66 = &v81[v83 & 0xFFFFFFFFFFFFFFF8LL];
                uint64_t v84 = 8 * (v83 >> 3);
                __int128 v85 = &v79[8 * (v78 >> 2)];
                do
                {
                  uint64_t v86 = *v82++;
                  *(void *)__int128 v85 = v86;
                  v85 += 8;
                  v84 -= 8LL;
                }

                while (v84);
              }

              __int128 v87 = (char *)*a1;
              *a1 = v79;
              a1[1] = v81;
              a1[2] = v66;
              a1[3] = &v79[8 * v80];
              if (v87)
              {
                operator delete(v87);
                __int128 v66 = (char *)a1[2];
              }
            }

            else
            {
              uint64_t v72 = v71 >> 3;
              BOOL v22 = v71 >> 3 < -1;
              uint64_t v73 = (v71 >> 3) + 2;
              if (v22) {
                uint64_t v74 = v73;
              }
              else {
                uint64_t v74 = v72 + 1;
              }
              __int128 v75 = &v68[-8 * (v74 >> 1)];
              int64_t v76 = v66 - v68;
              if (v66 != v68)
              {
                memmove(&v68[-8 * (v74 >> 1)], v68, v66 - v68);
                __int128 v66 = (char *)a1[1];
              }

              __int128 v77 = &v66[-8 * (v74 >> 1)];
              __int128 v66 = &v75[v76];
              a1[1] = v77;
              a1[2] = &v75[v76];
            }
          }

          *(void *)__int128 v66 = v69;
          __int128 v66 = (char *)(a1[2] + 8LL);
          a1[2] = v66;
          --v8;
        }

        while (v8);
      }
    }

    else
    {
      uint64_t v11 = v4 >> 3;
      unint64_t v12 = v10 >> 2;
      if (v12 <= v9 + v11) {
        unint64_t v13 = v9 + v11;
      }
      else {
        unint64_t v13 = v12;
      }
      unint64_t v14 = v11 - v8;
      __int128 v91 = a1 + 3;
      if (v13) {
        int64_t v15 = (char *)sub_1000071BC((uint64_t)(a1 + 3), v13);
      }
      else {
        int64_t v15 = 0LL;
      }
      uint64_t v38 = -26LL * v8;
      __p[0] = v15;
      __p[1] = &v15[8 * v14];
      *(void **)&__int128 v90 = __p[1];
      *((void *)&v90 + 1) = &v15[8 * v13];
      do
      {
        __int128 v88 = operator new(0xFD8uLL);
        sub_1000ECB90(__p, &v88);
        --v9;
      }

      while (v9);
      if (v8)
      {
        __int128 v39 = (void *)a1[1];
        uint64_t v40 = (char *)v90;
        do
        {
          if (v40 == *((char **)&v90 + 1))
          {
            int64_t v41 = (char *)__p[1] - (char *)__p[0];
            if (__p[1] <= __p[0])
            {
              if (v40 == __p[0]) {
                unint64_t v48 = 1LL;
              }
              else {
                unint64_t v48 = (v40 - (char *)__p[0]) >> 2;
              }
              __int128 v49 = (char *)sub_1000071BC((uint64_t)v91, v48);
              __int128 v51 = (uint64_t *)__p[1];
              uint64_t v40 = &v49[8 * (v48 >> 2)];
              uint64_t v52 = v90 - (unint64_t)__p[1];
              if ((void *)v90 != __p[1])
              {
                uint64_t v40 = &v49[8 * (v48 >> 2) + (v52 & 0xFFFFFFFFFFFFFFF8LL)];
                uint64_t v53 = 8 * (v52 >> 3);
                int v54 = &v49[8 * (v48 >> 2)];
                do
                {
                  uint64_t v55 = *v51++;
                  *(void *)int v54 = v55;
                  v54 += 8;
                  v53 -= 8LL;
                }

                while (v53);
              }

              __int128 v56 = __p[0];
              __p[0] = v49;
              __p[1] = &v49[8 * (v48 >> 2)];
              *(void *)&__int128 v90 = v40;
              *((void *)&v90 + 1) = &v49[8 * v50];
              if (v56)
              {
                operator delete(v56);
                uint64_t v40 = (char *)v90;
              }
            }

            else
            {
              uint64_t v42 = v41 >> 3;
              BOOL v22 = v41 >> 3 < -1;
              uint64_t v43 = (v41 >> 3) + 2;
              if (v22) {
                uint64_t v44 = v43;
              }
              else {
                uint64_t v44 = v42 + 1;
              }
              int v45 = (char *)__p[1] - 8 * (v44 >> 1);
              int64_t v46 = v40 - (char *)__p[1];
              if (v40 != __p[1])
              {
                memmove((char *)__p[1] - 8 * (v44 >> 1), __p[1], v40 - (char *)__p[1]);
                uint64_t v40 = (char *)__p[1];
              }

              double v47 = &v40[-8 * (v44 >> 1)];
              uint64_t v40 = &v45[v46];
              __p[1] = v47;
              *(void *)&__int128 v90 = &v45[v46];
            }
          }

          *(void *)uint64_t v40 = *v39;
          uint64_t v40 = (char *)(v90 + 8);
          *(void *)&__int128 v90 = v90 + 8;
          __int128 v39 = (void *)(a1[1] + 8LL);
          a1[1] = v39;
          --v8;
        }

        while (v8);
      }

      __int128 v57 = (void *)a1[2];
      uint64_t v58 = -7LL - (void)v57;
      while (v57 != (void *)a1[1])
      {
        --v57;
        v58 += 8LL;
        sub_1000ECCA4((uint64_t)__p, v57);
      }

      __int128 v59 = (char *)*a1;
      __int128 v60 = *(_OWORD *)__p;
      __int128 v61 = v90;
      __p[0] = *(void **)a1;
      __p[1] = v57;
      __int128 v62 = *((_OWORD *)a1 + 1);
      *(_OWORD *)a1 = v60;
      *((_OWORD *)a1 + 1) = v61;
      __int128 v90 = v62;
      a1[4] += v38;
      if (v57 != (void *)v62) {
        *(void *)&__int128 v90 = v62 + (-(v62 + v58) & 0xFFFFFFFFFFFFFFF8LL);
      }
      if (v59) {
        operator delete(v59);
      }
    }
  }

void sub_100F2C7A4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100F2C818(void *result, uint64_t a2)
{
  if (a2)
  {
    int v2 = (void *)*result;
    unint64_t v3 = a2 + 0x6F96F96F96F96F97LL * ((uint64_t)(result[1] - *(void *)*result) >> 2);
    if ((uint64_t)v3 < 1)
    {
      unint64_t v5 = 25 - v3;
      unint64_t v6 = &v2[-(v5 / 0x1A)];
      *double result = v6;
      unint64_t v4 = *v6 + 156 * (26 * (v5 / 0x1A) - v5) + 3900;
    }

    else
    {
      *double result = &v2[v3 / 0x1A];
      unint64_t v4 = v2[v3 / 0x1A] + 156 * (v3 % 0x1A);
    }

    result[1] = v4;
  }

  return result;
}

void sub_100F2C8CC(void **a1)
{
  int v2 = a1[1];
  unint64_t v3 = a1[2];
  unint64_t v4 = v3 - v2;
  if (v3 == v2) {
    uint64_t v5 = 0LL;
  }
  else {
    uint64_t v5 = 32 * (v3 - v2) - 1;
  }
  unint64_t v6 = (char *)a1[4];
  if (v5 - (unint64_t)&v6[(void)a1[5]] < 0x100)
  {
    uint64_t v7 = (uint64_t)(a1 + 3);
    unint64_t v8 = a1[3];
    unint64_t v9 = *a1;
    uint64_t v10 = v8 - (_BYTE *)*a1;
    if (v4 >= v10)
    {
      if (v8 == v9) {
        unint64_t v11 = 1LL;
      }
      else {
        unint64_t v11 = v10 >> 2;
      }
      int64_t v46 = a1 + 3;
      std::stringbuf::string_type __p = sub_1000071BC(v7, v11);
      uint64_t v43 = (char *)__p;
      uint64_t v44 = (char *)__p;
      int v45 = (char *)__p + 8 * v12;
      int64_t v41 = operator new(0x1000uLL);
      sub_1000ECB90(&__p, &v41);
      unint64_t v13 = (char *)a1[1];
      unint64_t v14 = v44;
      if (v13 == a1[2])
      {
        uint64_t v33 = (char *)a1[1];
      }

      else
      {
        do
        {
          if (v14 == v45)
          {
            int64_t v15 = v43 - (_BYTE *)__p;
            if (v43 <= __p)
            {
              if (v14 == __p) {
                unint64_t v23 = 1LL;
              }
              else {
                unint64_t v23 = (v14 - (_BYTE *)__p) >> 2;
              }
              uint64_t v24 = (char *)sub_1000071BC((uint64_t)v46, v23);
              int64_t v26 = v43;
              unint64_t v14 = &v24[8 * (v23 >> 2)];
              uint64_t v27 = v44 - v43;
              if (v44 != v43)
              {
                unint64_t v14 = &v24[8 * (v23 >> 2) + (v27 & 0xFFFFFFFFFFFFFFF8LL)];
                uint64_t v28 = 8 * (v27 >> 3);
                int v29 = &v24[8 * (v23 >> 2)];
                do
                {
                  uint64_t v30 = *(void *)v26;
                  v26 += 8;
                  *(void *)int v29 = v30;
                  v29 += 8;
                  v28 -= 8LL;
                }

                while (v28);
              }

              __int128 v31 = __p;
              std::stringbuf::string_type __p = v24;
              uint64_t v43 = &v24[8 * (v23 >> 2)];
              uint64_t v44 = v14;
              int v45 = &v24[8 * v25];
              if (v31)
              {
                operator delete(v31);
                unint64_t v14 = v44;
              }
            }

            else
            {
              uint64_t v16 = v15 >> 3;
              BOOL v17 = v15 >> 3 < -1;
              uint64_t v18 = (v15 >> 3) + 2;
              if (v17) {
                uint64_t v19 = v18;
              }
              else {
                uint64_t v19 = v16 + 1;
              }
              uint64_t v20 = &v43[-8 * (v19 >> 1)];
              int64_t v21 = v14 - v43;
              if (v14 != v43)
              {
                memmove(&v43[-8 * (v19 >> 1)], v43, v14 - v43);
                unint64_t v14 = v43;
              }

              BOOL v22 = &v14[-8 * (v19 >> 1)];
              unint64_t v14 = &v20[v21];
              uint64_t v43 = v22;
              uint64_t v44 = &v20[v21];
            }
          }

          uint64_t v32 = *(void *)v13;
          v13 += 8;
          *(void *)unint64_t v14 = v32;
          unint64_t v14 = v44 + 8;
          v44 += 8;
        }

        while (v13 != a1[2]);
        uint64_t v33 = (char *)a1[1];
      }

      uint64_t v36 = *a1;
      int v37 = v43;
      *a1 = __p;
      a1[1] = v37;
      std::stringbuf::string_type __p = v36;
      uint64_t v43 = v33;
      uint64_t v38 = (char *)a1[3];
      __int128 v39 = v45;
      a1[2] = v14;
      a1[3] = v39;
      uint64_t v44 = v13;
      int v45 = v38;
      if (v14 - v37 == 8) {
        uint64_t v40 = 128LL;
      }
      else {
        uint64_t v40 = (uint64_t)a1[4] + 256;
      }
      a1[4] = (void *)v40;
      if (v13 != v33) {
        uint64_t v44 = &v13[(v33 - v13 + 7) & 0xFFFFFFFFFFFFFFF8LL];
      }
      if (v36) {
        operator delete(v36);
      }
    }

    else
    {
      if (v2 == v9)
      {
        std::stringbuf::string_type __p = operator new(0x1000uLL);
        sub_1000EC960(a1, &__p);
        uint64_t v34 = a1[2];
        std::stringbuf::string_type __p = (void *)*(v34 - 1);
        a1[2] = v34 - 1;
      }

      else
      {
        std::stringbuf::string_type __p = operator new(0x1000uLL);
      }

      sub_1000ECA74((uint64_t)a1, &__p);
      if ((_BYTE *)a1[2] - (_BYTE *)a1[1] == 8) {
        uint64_t v35 = 128LL;
      }
      else {
        uint64_t v35 = (uint64_t)a1[4] + 256;
      }
      a1[4] = (void *)v35;
    }
  }

  else
  {
    a1[4] = v6 + 256;
    std::stringbuf::string_type __p = (void *)*((void *)v3 - 1);
    a1[2] = v3 - 8;
    sub_1000ECA74((uint64_t)a1, &__p);
  }

void sub_100F2CB90( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

double sub_100F2CBDC(uint64_t a1)
{
  *(_OWORD *)(a1 + 24) = *(_OWORD *)algn_101365654;
  *(_OWORD *)(a1 + sub_10004AD90(v3 - 40) = xmmword_101365664;
  *(_OWORD *)(a1 + 56) = unk_101365674;
  *(void *)&double result = 1084800281LL;
  *(_OWORD *)(a1 + 72) = xmmword_101365684;
  *(void *)a1 = &off_10188D018;
  *(_OWORD *)(a1 + _Block_object_dispose((const void *)(v1 - 128), 8) = xmmword_101365644;
  return result;
}

uint64_t sub_100F2CC14(uint64_t a1, uint64_t *a2)
{
  uint64_t v6 = *a2;
  int v7 = *((_DWORD *)a2 + 2);
  sub_10050D3D4((uint64_t)&v6, v8, (int *)(a1 + 8), 6LL, 3LL);
  uint64_t v2 = 0LL;
  LODWORD(result) = 0;
  float v4 = 0.0;
  do
  {
    float v5 = v8[v2];
    if (v5 <= v4) {
      uint64_t result = result;
    }
    else {
      uint64_t result = v2;
    }
    if (v5 > v4) {
      float v4 = v8[v2];
    }
    ++v2;
  }

  while (v2 != 6);
  return result;
}

double sub_100F2CCB4(uint64_t a1)
{
  *(_BYTE *)a1 = 0;
  *(void *)(a1 + 4) = 0xFFFFFFFFLL;
  *(_DWORD *)(a1 + 12) = 0;
  *(void *)(a1 + 16) = off_10183B0F0;
  *(_DWORD *)(a1 + 24) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v1 - 128), 8) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(void *)(a1 + 8_Block_object_dispose((const void *)(v1 - 128), 8) = 0LL;
  *(void *)(a1 + 8sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = a1 + 88;
  *(void *)(a1 + sub_10000AE14(v14 + 96) = 0LL;
  *(void *)(a1 + 104) = off_10183B0F0;
  *(_DWORD *)(a1 + sub_10000AE14(v14 + 112) = 0;
  *(_OWORD *)(a1 + 12sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(void *)(a1 + 176) = 0LL;
  *(void *)(a1 + 16_Block_object_dispose((const void *)(v1 - 128), 8) = a1 + 176;
  *(void *)(a1 + 184) = 0LL;
  *(void *)(a1 + 192) = off_10183B0F0;
  *(_DWORD *)(a1 + 20sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = 0;
  *(_OWORD *)(a1 + 20_Block_object_dispose((const void *)(v1 - 128), 8) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 2sub_10004AD90(v3 - 40) = 0u;
  *(void *)(a1 + 256) = a1 + 264;
  *(void *)(a1 + 264) = 0LL;
  *(void *)(a1 + 272) = 0LL;
  *(void *)(a1 + 28sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = off_101850568;
  *(_OWORD *)(a1 + 28_Block_object_dispose((const void *)(v1 - 128), 8) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 32sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(void *)(a1 + 352) = 0LL;
  *(void *)(a1 + 36sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = off_101850568;
  *(_OWORD *)(a1 + 36_Block_object_dispose((const void *)(v1 - 128), 8) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 40sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = 0u;
  *(_OWORD *)(a1 + 416) = 0u;
  *(void *)(a1 + 432) = 0LL;
  *(void *)(a1 + 4sub_10004AD90(v3 - 40) = off_101850568;
  *(void *)(a1 + 512) = 0LL;
  *(_OWORD *)(a1 + 48sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = 0u;
  *(_OWORD *)(a1 + 4sub_10000AE14(v14 + 96) = 0u;
  *(_OWORD *)(a1 + 44_Block_object_dispose((const void *)(v1 - 128), 8) = 0u;
  *(_OWORD *)(a1 + 464) = 0u;
  return result;
}

void sub_100F2CD64(uint64_t a1, int a2)
{
  double v3 = (double)a2 * 0.3;
  *(_BYTE *)a1 = 0;
  *(_DWORD *)(a1 + 4) = a2;
  *(_DWORD *)(a1 + _Block_object_dispose((const void *)(v1 - 128), 8) = (int)v3;
  *(_DWORD *)(a1 + 12) = 0;
  unsigned int v4 = vcvtd_n_s64_f64((double)a2, 2uLL);
  *(_DWORD *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + sub_10000AE14(v14 + 112) = v4;
  *(_DWORD *)(a1 + 20sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v4;
  *(void *)(a1 + 28_Block_object_dispose((const void *)(v1 - 128), 8) = (int)v3;
  sub_1007C39F0((void *)(a1 + 280));
  *(void *)(a1 + 36_Block_object_dispose((const void *)(v1 - 128), 8) = (int)((double)*(int *)(a1 + 4) * 0.3);
  sub_1007C39F0((void *)(a1 + 360));
  *(void *)(a1 + 44_Block_object_dispose((const void *)(v1 - 128), 8) = (int)((double)*(int *)(a1 + 4) * 0.3);
  sub_1007C39F0((void *)(a1 + 440));
}

void sub_100F2CE04(uint64_t a1, double a2, float a3, float a4, float a5)
{
  if ((*(_DWORD *)(a1 + 4) & 0x80000000) == 0)
  {
    ++*(_DWORD *)(a1 + 12);
    *(float *)&int v6 = (float)(*(float *)&dword_10199F590 * 0.7) + a3 * 0.300000012;
    *(float *)&int v7 = (float)(*(float *)&dword_10199F594 * 0.7) + a4 * 0.300000012;
    float v16 = *(float *)&v7;
    float v17 = *(float *)&v6;
    *(float *)&int v8 = (float)(*(float *)&dword_10199F598 * 0.7) + a5 * 0.300000012;
    float v15 = *(float *)&v8;
    dword_10199F590 = v6;
    dword_10199F594 = v7;
    dword_10199F598 = v8;
    unint64_t v9 = (void *)(a1 + 16);
    sub_100476A68(a1 + 16, &v17);
    sub_100476A68(a1 + 104, &v16);
    sub_100476A68(a1 + 192, &v15);
    float v14 = 0.0;
    uint64_t v13 = 0LL;
    sub_10074DE7C(v9, 2, &v14);
    sub_10074DE7C((void *)(a1 + 104), 2, (_DWORD *)&v13 + 1);
    sub_10074DE7C((void *)(a1 + 192), 2, &v13);
    float v10 = (float)(v16 - *((float *)&v13 + 1)) * (float)(v16 - *((float *)&v13 + 1));
    float v11 = (float)(v15 - *(float *)&v13) * (float)(v15 - *(float *)&v13);
    double v12 = (float)((float)(v17 - v14) * (float)(v17 - v14));
    sub_1007C3A68(a1 + 280, &v12);
    double v12 = v10;
    sub_1007C3A68(a1 + 360, &v12);
    double v12 = v11;
    sub_1007C3A68(a1 + 440, &v12);
    if (!(*(_DWORD *)(a1 + 12) % *(_DWORD *)(a1 + 8))) {
      sub_100F2CFAC(a1);
    }
  }

uint64_t sub_100F2CFAC(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 352);
  float v2 = 0.0;
  float v3 = 0.0;
  if (v1) {
    float v3 = *(double *)(result + 296) / (double)v1;
  }
  unint64_t v4 = *(void *)(result + 432);
  if (v4) {
    float v2 = *(double *)(result + 376) / (double)v4;
  }
  unint64_t v5 = *(void *)(result + 512);
  if (v5) {
    float v6 = *(double *)(result + 456) / (double)v5;
  }
  else {
    float v6 = 0.0;
  }
  else {
    char v7 = 2;
  }
  *(_BYTE *)double result = v7;
  return result;
}

void sub_100F2D0E0(id a1)
{
  qword_10199F5A0 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLTurnStateSilo");
}

uint64_t sub_100F2D194(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100F2D2F4;
  block[3] = &unk_10181A288;
  block[4] = a1;
  if (qword_10199F5B0 != -1) {
    dispatch_once(&qword_10199F5B0, block);
  }
  return qword_1019A3DD0;
}

uint64_t sub_100F2D2F4(uint64_t a1)
{
  float v2 = operator new(0x288uLL);
  uint64_t result = sub_100F2D340((uint64_t)v2, *(void **)(a1 + 32));
  qword_1019A3DD0 = (uint64_t)v2;
  return result;
}

void sub_100F2D32C(_Unwind_Exception *a1)
{
}

uint64_t sub_100F2D340(uint64_t a1, void *a2)
{
  float v3 = (void *)sub_100F2D3D4(a1, "CLTurnState", a2);
  *float v3 = off_10188D078;
  v3[14] = 0LL;
  uint64_t v4 = (uint64_t)(v3 + 15);
  sub_100F2CD60((uint64_t)(v3 + 15));
  *(_WORD *)(a1 + 6sub_10004AD90(v3 - 40) = 0;
  if (sub_1007492FC()) {
    sub_100F2CD64(v4, 100);
  }
  return a1;
}

void sub_100F2D3AC(_Unwind_Exception *a1)
{
}

uint64_t sub_100F2D3D4(uint64_t a1, char *a2, void *a3)
{
  *(void *)a1 = off_10188D1E8;
  sub_1010DDBC0((void *)(a1 + 8), a2);
  *(void *)(a1 + 32) = a3;
  *(void *)(a1 + sub_10004AD90(v3 - 40) = [a3 silo];
  *(void *)(a1 + 4_Block_object_dispose((const void *)(v1 - 128), 8) = 0LL;
  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + 56) = a1 + 64;
  *(void *)(a1 + 8_Block_object_dispose((const void *)(v1 - 128), 8) = 0LL;
  *(void *)(a1 + sub_10000AE14(v14 + 96) = 0LL;
  *(void *)(a1 + 72) = 0LL;
  *(void *)(a1 + 8sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = a1 + 88;
  *(_DWORD *)(a1 + 104) = 0;
  *(_BYTE *)(a1 + 10_Block_object_dispose((const void *)(v1 - 128), 8) = 0;
  return a1;
}

void sub_100F2D454(_Unwind_Exception *exception_object)
{
}

uint64_t sub_100F2D470(uint64_t a1)
{
  *(void *)(a1 + 4sub_10004AD90(v3 - 40) = off_101850568;
  sub_100210578((void *)(a1 + 472));
  *(void *)(a1 + 36sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = off_101850568;
  sub_100210578((void *)(a1 + 392));
  *(void *)(a1 + 28sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = off_101850568;
  sub_100210578((void *)(a1 + 312));
  *(void *)(a1 + 192) = off_10183B0F0;
  sub_100008390(a1 + 256, *(void **)(a1 + 264));
  sub_100210578((void *)(a1 + 208));
  *(void *)(a1 + 104) = off_10183B0F0;
  sub_100008390(a1 + 168, *(void **)(a1 + 176));
  sub_100210578((void *)(a1 + 120));
  *(void *)(a1 + 16) = off_10183B0F0;
  sub_100008390(a1 + 80, *(void **)(a1 + 88));
  sub_100210578((void *)(a1 + 32));
  return a1;
}

uint64_t sub_100F2D514(uint64_t a1)
{
  *(void *)a1 = off_10188D1E8;
  [*(id *)(a1 + 48) invalidate];

  sub_100231CA4(a1 + 80, *(void **)(a1 + 88));
  sub_100231CF0(a1 + 56, *(void **)(a1 + 64));
  return a1;
}

uint64_t sub_100F2D588(uint64_t a1)
{
  *(void *)a1 = off_10188D078;
  sub_100F2D658(a1);
  *(void *)(a1 + 56sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = off_101850568;
  sub_100210578((void *)(a1 + 592));
  *(void *)(a1 + 48sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = off_101850568;
  sub_100210578((void *)(a1 + 512));
  *(void *)(a1 + 40sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = off_101850568;
  sub_100210578((void *)(a1 + 432));
  *(void *)(a1 + 312) = off_10183B0F0;
  sub_100008390(a1 + 376, *(void **)(a1 + 384));
  sub_100210578((void *)(a1 + 328));
  *(void *)(a1 + 224) = off_10183B0F0;
  sub_100008390(a1 + 288, *(void **)(a1 + 296));
  sub_100210578((void *)(a1 + 240));
  *(void *)(a1 + 136) = off_10183B0F0;
  sub_100008390(a1 + 200, *(void **)(a1 + 208));
  sub_100210578((void *)(a1 + 152));
  return sub_100F2D514(a1);
}

void sub_100F2D644(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100F2D588(a1);
  operator delete(v1);
}

uint64_t sub_100F2D658(uint64_t result)
{
  *(_BYTE *)(result + 10_Block_object_dispose((const void *)(v1 - 128), 8) = 1;
  if (*(void *)(result + 112))
  {
    uint64_t v1 = result;
    uint64_t v2 = sub_1007492FC();
    sub_1006DD2A0(v2, 0, *(void *)(v1 + 112));
    uint64_t result = *(void *)(v1 + 112);
    if (result) {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
    }
    *(void *)(v1 + sub_10000AE14(v14 + 112) = 0LL;
  }

  return result;
}

void sub_100F2D6AC(unsigned __int8 *a1, uint64_t a2, int a3)
{
  if (a3 >= 1)
  {
    uint64_t v4 = a3;
    unint64_t v5 = a1 + 120;
    uint64_t v6 = a2 + 16;
    HIDWORD(v7) = 0;
    do
    {
      int v8 = *v5;
      LODWORD(v7) = *(_DWORD *)(v6 + 16);
      sub_100F2CE04((uint64_t)v5, v7, *(float *)(v6 - 8), *(float *)(v6 - 4), *(float *)v6);
      int v9 = *v5;
      if (v8 != v9)
      {
        *((_WORD *)a1 + 32sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v9;
        __int16 v15 = *((_WORD *)a1 + 320);
        *(_DWORD *)std::string buf = 0;
        (*(void (**)(unsigned __int8 *, uint8_t *, __int16 *, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  buf,  &v15,  1LL,  0xFFFFFFFFLL,  0LL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10188D1B8);
        }
        float v10 = (os_log_s *)qword_101934A78;
        if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
        {
          int v11 = a1[640];
          *(_DWORD *)std::string buf = 67109376;
          int v20 = v8;
          __int16 v21 = 1024;
          int v22 = v11;
          _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "MotionState,Turn,From,%d,To,%d,",  buf,  0xEu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934A70 != -1) {
            dispatch_once(&qword_101934A70, &stru_10188D1B8);
          }
          int v12 = a1[640];
          v16[0] = 67109376;
          v16[1] = v8;
          __int16 v17 = 1024;
          int v18 = v12;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "MotionState,Turn,From,%d,To,%d,",  v16,  14);
          float v14 = (uint8_t *)v13;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLTurnState::onCompass(const CLCompass_Type::Sample *, int)",  "%s\n",  v13);
          if (v14 != buf) {
            free(v14);
          }
        }
      }

      v6 += 112LL;
      --v4;
    }

    while (v4);
  }

void *sub_100F2D90C@<X0>(_DWORD *a1@<X1>, void *a2@<X8>)
{
  return sub_1010DDBC0(a2, __str);
}

uint64_t sub_100F2D984(uint64_t a1, int *a2)
{
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10188D1B8);
  }
  uint64_t v4 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    int v5 = *a2;
    *(_DWORD *)std::string buf = 67109120;
    int v13 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Client registered for notification %d", buf, 8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10188D1B8);
    }
    int v8 = *a2;
    v11[0] = 67109120;
    v11[1] = v8;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "Client registered for notification %d",  v11);
    float v10 = (uint8_t *)v9;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLTurnState::registerForNotificationInternal(const CLTurnState_Type::Notification &)",  "%s\n",  v9);
    if (v10 != buf) {
      free(v10);
    }
  }

  if (!*a2 && !*(void *)(a1 + 112) && sub_1007492FC())
  {
    *(void *)(a1 + sub_10000AE14(v14 + 112) = sub_100F2DB78(a1);
    uint64_t v6 = sub_1007492FC();
    sub_1006DCB40(v6, 0, *(void *)(a1 + 112), 0.01);
  }

  return 1LL;
}

void *sub_100F2DB78(uint64_t a1)
{
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 3221225472LL;
  aBlock[2] = sub_100F2DE08;
  aBlock[3] = &unk_10188D148;
  aBlock[4] = a1;
  uint64_t v1 = operator new(0x30uLL);
  sub_100F306CC((uint64_t)v1, (uint64_t)&_dispatch_main_q, aBlock, 0xAu);
  return v1;
}

void sub_100F2DBEC(_Unwind_Exception *a1)
{
}

uint64_t sub_100F2DC00(uint64_t a1, int *a2)
{
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10188D1B8);
  }
  uint64_t v4 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    int v5 = *a2;
    *(_DWORD *)std::string buf = 67109120;
    int v14 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Client unregistered for notification %d", buf, 8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10188D1B8);
    }
    int v9 = *a2;
    v12[0] = 67109120;
    v12[1] = v9;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "Client unregistered for notification %d",  v12);
    int v11 = (uint8_t *)v10;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLTurnState::unregisterForNotificationInternal(const CLTurnState_Type::Notification &)",  "%s\n",  v10);
    if (v11 != buf) {
      free(v11);
    }
  }

  if (!*a2)
  {
    *(_DWORD *)std::string buf = 0;
    if (!sub_100247620(a1, (int *)buf, 1LL))
    {
      if (*(void *)(a1 + 112))
      {
        uint64_t v6 = sub_1007492FC();
        sub_1006DD2A0(v6, 0, *(void *)(a1 + 112));
        uint64_t v7 = *(void *)(a1 + 112);
        if (v7) {
          (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
        }
        *(void *)(a1 + sub_10000AE14(v14 + 112) = 0LL;
      }
    }
  }

  return 1LL;
}

void sub_100F2DE08(uint64_t a1, uint64_t a2, int a3)
{
}

void sub_100F2DE10(uint64_t a1, uint64_t a2)
{
  HIDWORD(v15) = a2;
  if (!*(_BYTE *)(a1 + 108))
  {
    uint64_t v4 = *(void *)(a1 + 88);
    if (!v4) {
      goto LABEL_12;
    }
    uint64_t v5 = a1 + 80;
    uint64_t v6 = a1 + 88;
    do
    {
      int v7 = *(_DWORD *)(v4 + 32);
      BOOL v8 = v7 < (int)a2;
      else {
        int v9 = (uint64_t *)(v4 + 8);
      }
      if (!v8) {
        uint64_t v6 = v4;
      }
      uint64_t v4 = *v9;
    }

    while (*v9);
    if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= (int)a2)
    {
      while (*(void *)(v6 + 56))
      {
        *(_DWORD *)std::string buf = *(_DWORD *)(*(void *)(v6 + 40) + 28LL);
        (*(void (**)(uint64_t, uint64_t, uint8_t *))(*(void *)a1 + 112LL))(a1, a2, buf);
      }

      sub_100233254(v5, (int *)&v15 + 1);
    }

    else
    {
LABEL_12:
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_10188D198);
      }
      float v10 = (os_log_s *)qword_1019349D8;
      if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
      {
        int v11 = (void *)(a1 + 8);
        *(_DWORD *)std::string buf = 136446466;
        __int16 v21 = v11;
        __int16 v22 = 1026;
        int v23 = a2;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
          buf,
          0x12u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_10188D198);
        }
        int v12 = (void *)(a1 + 8);
        int v16 = 136446466;
        __int16 v17 = v12;
        __int16 v18 = 1026;
        int v19 = a2;
        LODWORD(v15) = 18;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
          &v16,
          v15);
        int v14 = (uint8_t *)v13;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLNotifier<CLTurnState_Type::Notification, CLTurnState_Type::NotificationData>::removeClient(int) [Notification_T = CLTurnState_Type::Notification, NotificationData_T = CLTurnState_Type::NotificationData, No tificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v13);
        if (v14 != buf) {
          free(v14);
        }
      }
    }
  }

uint64_t sub_100F2E084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void *))(*(void *)a1 + 96LL))( a1,  a2,  a3,  &unk_1019928C8);
}

uint64_t sub_100F2E098(uint64_t a1, int a2, int *a3, char *a4)
{
  int v42 = a2;
  if (*(_BYTE *)(a1 + 108)) {
    return 0LL;
  }
  uint64_t v7 = *(void *)(a1 + 88);
  if (v7)
  {
    uint64_t v10 = a1 + 88;
    do
    {
      int v11 = *(_DWORD *)(v7 + 32);
      BOOL v12 = v11 < a2;
      if (v11 >= a2) {
        int v13 = (uint64_t *)v7;
      }
      else {
        int v13 = (uint64_t *)(v7 + 8);
      }
      if (!v12) {
        uint64_t v10 = v7;
      }
      uint64_t v7 = *v13;
    }

    while (*v13);
    if (v10 != a1 + 88 && *(_DWORD *)(v10 + 32) <= a2)
    {
      *(void *)uint64_t v43 = v10;
      int v17 = *a3;
      uint64_t v20 = *(void *)(v10 + 48);
      uint64_t v19 = v10 + 48;
      uint64_t v18 = v20;
      if (!v20) {
        goto LABEL_31;
      }
      uint64_t v21 = v19;
      do
      {
        int v22 = *(_DWORD *)(v18 + 28);
        BOOL v23 = v22 < v17;
        if (v22 >= v17) {
          uint64_t v24 = (uint64_t *)v18;
        }
        else {
          uint64_t v24 = (uint64_t *)(v18 + 8);
        }
        if (!v23) {
          uint64_t v21 = v18;
        }
        uint64_t v18 = *v24;
      }

      while (*v24);
      if (v21 == v19 || v17 < *(_DWORD *)(v21 + 28)) {
LABEL_31:
      }
        uint64_t v21 = v19;
      uint64_t v25 = *(void *)(a1 + 64);
      if (!v25) {
        goto LABEL_42;
      }
      uint64_t v26 = a1 + 64;
      do
      {
        int v27 = *(_DWORD *)(v25 + 32);
        BOOL v28 = v27 < v17;
        if (v27 >= v17) {
          int v29 = (uint64_t *)v25;
        }
        else {
          int v29 = (uint64_t *)(v25 + 8);
        }
        if (!v28) {
          uint64_t v26 = v25;
        }
        uint64_t v25 = *v29;
      }

      while (*v29);
      if (v26 != a1 + 64 && v17 >= *(_DWORD *)(v26 + 32))
      {
        uint64_t v41 = v26;
        uint64_t v34 = *(void *)(v26 + 56);
        char v35 = *a4;
        *(void *)std::string buf = &v42;
        *((_BYTE *)sub_1004EF3D4((uint64_t **)(v26 + 40), &v42, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = v35;
        *(_WORD *)std::string buf = 0;
        if (v21 == v19
          && (*(unsigned int (**)(uint64_t, int *, _BYTE *))(*(void *)a1 + 128LL))(a1, a3, buf))
        {
          uint64_t v36 = sub_100F30844(buf);
          sub_100F2FD54((_BYTE *)a1, (uint64_t)v43, (uint64_t)&v41, v36);
        }

        if (v34) {
          goto LABEL_44;
        }
      }

      else
      {
LABEL_42:
        uint64_t v41 = a1 + 64;
        char v30 = byte_1019928C9;
        HIDWORD(vsub_10004AD90(v3 - 40) = v17;
        *(void *)std::string buf = (char *)&v40 + 4;
        *((_BYTE *)sub_10023347C((uint64_t **)(a1 + 56), (int *)&v40 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 8sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v30;
        HIDWORD(vsub_10004AD90(v3 - 40) = *a3;
        *(void *)std::string buf = (char *)&v40 + 4;
        __int128 v31 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v40 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        sub_1000F0D38(v31 + 8);
        char v32 = *a4;
        HIDWORD(vsub_10004AD90(v3 - 40) = *a3;
        *(void *)std::string buf = (char *)&v40 + 4;
        uint64_t v33 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v40 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        *(void *)std::string buf = &v42;
        *((_BYTE *)sub_1004EF3D4(v33 + 5, &v42, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = v32;
      }

      (*(void (**)(uint64_t, int *))(*(void *)a1 + 168LL))(a1, a3);
LABEL_44:
      if (v21 == v19)
      {
        *(_DWORD *)std::string buf = *a3;
        sub_10004A8FC((uint64_t **)(*(void *)v43 + 40LL), (int *)buf, buf);
      }

      return 1LL;
    }
  }

  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10188D198);
  }
  int v14 = (os_log_s *)qword_1019349D8;
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
  {
    uint64_t v15 = (void *)(a1 + 8);
    *(_DWORD *)std::string buf = 136446466;
    *(void *)&uint8_t buf[4] = v15;
    __int16 v47 = 1026;
    int v48 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
      buf,
      0x12u);
  }

  BOOL v16 = sub_1002921D0(115, 0);
  uint64_t result = 0LL;
  if (v16)
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10188D198);
    }
    int v37 = (void *)(a1 + 8);
    *(_DWORD *)uint64_t v43 = 136446466;
    *(void *)&v43[4] = v37;
    __int16 v44 = 1026;
    int v45 = a2;
    LODWORD(vsub_10004AD90(v3 - 40) = 18;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
      v43,
      v40);
    __int128 v39 = (char *)v38;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLTurnState_Type::Notification, CLTurnState_Type::NotificationData>::registerForNotificati on(int, const Notification_T &, const RegistrationInfo_T &) [Notification_T = CLTurnState_Type::Notification, Noti ficationData_T = CLTurnState_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v38);
    if (v39 != buf) {
      free(v39);
    }
    return 0LL;
  }

  return result;
}

BOOL sub_100F2E4F4(uint64_t a1, int a2, int *a3)
{
  uint64_t v5 = *(void *)(a1 + 88);
  if (!v5) {
    goto LABEL_11;
  }
  uint64_t v6 = a1 + 88;
  do
  {
    int v7 = *(_DWORD *)(v5 + 32);
    BOOL v8 = v7 < a2;
    if (v7 >= a2) {
      int v9 = (uint64_t *)v5;
    }
    else {
      int v9 = (uint64_t *)(v5 + 8);
    }
    if (!v8) {
      uint64_t v6 = v5;
    }
    uint64_t v5 = *v9;
  }

  while (*v9);
  if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= a2)
  {
    uint64_t v16 = *(void *)(v6 + 48);
    uint64_t v14 = v6 + 48;
    uint64_t v15 = v16;
    if (!v16) {
      goto LABEL_29;
    }
    int v17 = *a3;
    uint64_t v18 = v14;
    do
    {
      int v19 = *(_DWORD *)(v15 + 28);
      BOOL v20 = v19 < v17;
      if (v19 >= v17) {
        uint64_t v21 = (uint64_t *)v15;
      }
      else {
        uint64_t v21 = (uint64_t *)(v15 + 8);
      }
      if (!v20) {
        uint64_t v18 = v15;
      }
      uint64_t v15 = *v21;
    }

    while (*v21);
    if (v18 == v14 || v17 < *(_DWORD *)(v18 + 28)) {
LABEL_29:
    }
      uint64_t v18 = v14;
    return v18 != v14;
  }

  else
  {
LABEL_11:
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10188D198);
    }
    uint64_t v10 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
    {
      int v11 = (void *)(a1 + 8);
      *(_DWORD *)std::string buf = 136446466;
      char v30 = v11;
      __int16 v31 = 1026;
      int v32 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
        buf,
        0x12u);
    }

    BOOL v12 = sub_1002921D0(115, 0);
    BOOL result = 0LL;
    if (v12)
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_10188D198);
      }
      int v22 = (void *)(a1 + 8);
      int v25 = 136446466;
      uint64_t v26 = v22;
      __int16 v27 = 1026;
      int v28 = a2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
        &v25,
        18);
      uint64_t v24 = (uint8_t *)v23;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLTurnState_Type::Notification, CLTurnState_Type::NotificationData>::clientRegistered(in t, const Notification_T &) [Notification_T = CLTurnState_Type::Notification, NotificationData_T = CLTurnState_Ty pe::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v23);
      if (v24 != buf) {
        free(v24);
      }
      return 0LL;
    }
  }

  return result;
}

BOOL sub_100F2E774(char *a1, int a2, int *a3)
{
  HIDWORD(v34) = a2;
  int v3 = a1[108];
  if (!a1[108])
  {
    uint64_t v6 = *((void *)a1 + 11);
    if (v6)
    {
      BOOL v8 = a1 + 88;
      do
      {
        int v9 = *(_DWORD *)(v6 + 32);
        BOOL v10 = v9 < a2;
        if (v9 >= a2) {
          int v11 = (uint64_t *)v6;
        }
        else {
          int v11 = (uint64_t *)(v6 + 8);
        }
        if (!v10) {
          BOOL v8 = (char *)v6;
        }
        uint64_t v6 = *v11;
      }

      while (*v11);
      if (v8 != a1 + 88 && *((_DWORD *)v8 + 8) <= a2)
      {
        uint64_t v14 = (char *)*((void *)v8 + 6);
        BOOL v12 = v8 + 48;
        int v13 = v14;
        if (v14)
        {
          int v15 = *a3;
          uint64_t v16 = v12;
          do
          {
            int v17 = *((_DWORD *)v13 + 7);
            BOOL v18 = v17 < v15;
            if (v17 >= v15) {
              int v19 = (char **)v13;
            }
            else {
              int v19 = (char **)(v13 + 8);
            }
            if (!v18) {
              uint64_t v16 = v13;
            }
            int v13 = *v19;
          }

          while (*v19);
          if (v16 != v12 && v15 >= *((_DWORD *)v16 + 7))
          {
            LODWORD(__p[0]) = *a3;
            sub_1004EF494((uint64_t)(v12 - 8), (int *)__p);
            uint64_t v20 = *((void *)a1 + 8);
            if (!v20) {
              goto LABEL_33;
            }
            int v21 = *a3;
            int v22 = a1 + 64;
            do
            {
              int v23 = *(_DWORD *)(v20 + 32);
              BOOL v24 = v23 < v21;
              if (v23 >= v21) {
                int v25 = (uint64_t *)v20;
              }
              else {
                int v25 = (uint64_t *)(v20 + 8);
              }
              if (!v24) {
                int v22 = (char *)v20;
              }
              uint64_t v20 = *v25;
            }

            while (*v25);
            if (v22 != a1 + 64 && v21 >= *((_DWORD *)v22 + 8))
            {
              sub_1004EF494((uint64_t)(v22 + 40), (int *)&v34 + 1);
              if (!*((void *)v22 + 7)) {
                (*(void (**)(char *, int *))(*(void *)a1 + 176LL))(a1, a3);
              }
            }

            else
            {
LABEL_33:
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_10188D198);
              }
              uint64_t v26 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                __int16 v27 = a1 + 8;
                if (a1[31] < 0) {
                  __int16 v27 = (void *)*v27;
                }
                (*(void (**)(void **__return_ptr, char *, int *))(*(void *)a1 + 160LL))(__p, a1, a3);
                if (v44 >= 0) {
                  int v28 = __p;
                }
                else {
                  int v28 = (void **)__p[0];
                }
                *(_DWORD *)std::string buf = 136446466;
                *(void *)&uint8_t buf[4] = v27;
                __int16 v36 = 2082;
                int v37 = v28;
                _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_FAULT,  "%{public}s; notification %{public}s not found",
                  buf,
                  0x16u);
                if (v44 < 0) {
                  operator delete(__p[0]);
                }
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(__p, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_10188D198);
                }
                int v29 = a1 + 8;
                if (a1[31] < 0) {
                  int v29 = (void *)*v29;
                }
                uint64_t v30 = qword_1019349D8;
                (*(void (**)(_BYTE *__return_ptr, char *, int *))(*(void *)a1 + 160LL))(buf, a1, a3);
                if (v38 >= 0) {
                  __int16 v31 = buf;
                }
                else {
                  __int16 v31 = *(_BYTE **)buf;
                }
                int v39 = 136446466;
                uint64_t v40 = v29;
                __int16 v41 = 2082;
                int v42 = v31;
                LODWORD(v34) = 22;
                _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v30,  17LL,  "%{public}s; notification %{public}s not found",
                  &v39,
                  v34);
                uint64_t v33 = v32;
                if (v38 < 0) {
                  operator delete(*(void **)buf);
                }
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLTurnState_Type::Notification, CLTurnState_Type::NotificationData>::unregiste rForNotification(int, const Notification_T &) [Notification_T = CLTurnState_Type::Notification, Notifi cationData_T = CLTurnState_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v33);
              }
            }
          }
        }
      }
    }
  }

  return v3 == 0;
}

uint64_t sub_100F2EAFC(uint64_t a1, int *a2, _WORD *a3)
{
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v3 = a1 + 64;
  uint64_t v4 = v5;
  if (!v5) {
    return 0LL;
  }
  int v6 = *a2;
  uint64_t v7 = v3;
  do
  {
    int v8 = *(_DWORD *)(v4 + 32);
    BOOL v9 = v8 < v6;
    if (v8 >= v6) {
      BOOL v10 = (uint64_t *)v4;
    }
    else {
      BOOL v10 = (uint64_t *)(v4 + 8);
    }
    if (!v9) {
      uint64_t v7 = v4;
    }
    uint64_t v4 = *v10;
  }

  while (*v10);
  if (v7 == v3) {
    return 0LL;
  }
  if (v6 < *(_DWORD *)(v7 + 32)) {
    return 0LL;
  }
  int v11 = *(_WORD **)(v7 + 64);
  if (!v11) {
    return 0LL;
  }
  *a3 = *v11;
  return 1LL;
}

uint64_t sub_100F2EB5C(uint64_t a1, int *a2, __int16 *a3)
{
  int v6 = operator new(0x20uLL);
  _DWORD v6[2] = 0LL;
  void *v6 = off_10188D2C8;
  v6[1] = 0LL;
  __int16 v7 = *a3;
  *((void *)&v14 + 1) = v6;
  *((_WORD *)v6 + 12) = v7;
  *(void *)&__int128 v14 = v6 + 3;
  int v13 = *a2;
  int v15 = &v13;
  int v8 = sub_10023347C((uint64_t **)(a1 + 56), &v13, (uint64_t)&unk_1012CF090, &v15);
  sub_10005F550((uint64_t)(v8 + 8), &v14);
  BOOL v9 = (std::__shared_weak_count *)*((void *)&v14 + 1);
  if (*((void *)&v14 + 1))
  {
    BOOL v10 = (unint64_t *)(*((void *)&v14 + 1) + 8LL);
    do
      unint64_t v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }

  return 1LL;
}

void sub_100F2EC30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_100F2EC44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __int16 v5 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, __int16 *, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  a2,  &v5,  a3,  a4,  0LL);
}

void sub_100F2EC7C(uint64_t a1, unsigned int *a2, _WORD *a3, int a4, int a5)
{
  if (!*(_BYTE *)(a1 + 108))
  {
    BOOL v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: notifyClientsWithData (Fallback)",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_IF_NONE_PRESENT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10188D198);
    }
    unint64_t v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      BOOL v12 = (void *)(a1 + 8);
      int v13 = (std::__shared_weak_count *)*a2;
      *(_DWORD *)std::string buf = 68289794;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&buf[18] = 2082;
      *(void *)&buf[20] = "activity";
      __int16 v67 = 2082;
      __int128 v68 = v12;
      __int16 v69 = 2050;
      uint64_t v70 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:notifyClientsWithData, event:%{public, location:escape_only}s, name:%{public, l ocation:escape_only}s, notification:%{public}lld}",  buf,  0x30u);
    }

    int v15 = (__n128 *)(a1 + 64);
    __int128 v14 = *(__n128 **)(a1 + 64);
    if (!v14) {
      goto LABEL_18;
    }
    signed __int32 v16 = *a2;
    int v17 = (__n128 *)(a1 + 64);
    do
    {
      signed __int32 v18 = v14[2].n128_i32[0];
      BOOL v19 = v18 < v16;
      if (v18 >= v16) {
        uint64_t v20 = (__n128 **)v14;
      }
      else {
        uint64_t v20 = (__n128 **)&v14->n128_u64[1];
      }
      if (!v19) {
        int v17 = v14;
      }
      __int128 v14 = *v20;
    }

    while (*v20);
    if (v17 == v15 || v16 < (signed __int32)v17[2].n128_u32[0])
    {
LABEL_18:
      *(void *)uint64_t v71 = &v71[8];
      memset(&v71[8], 0, 24);
      uint64_t v72 = 0LL;
      sub_1002343E4((uint64_t)buf, a2, (uint64_t)v71);
      int v17 = sub_1002342A4((uint64_t **)(a1 + 56), (__n128 *)buf);
      int v21 = v70;
      if (v70)
      {
        p_shared_owners = (unint64_t *)&v70->__shared_owners_;
        do
          unint64_t v23 = __ldaxr(p_shared_owners);
        while (__stlxr(v23 - 1, p_shared_owners));
        if (!v23)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }

      sub_100008390((uint64_t)&buf[8], *(void **)&buf[16]);
      BOOL v24 = v72;
      if (v72)
      {
        int v25 = (unint64_t *)&v72->__shared_owners_;
        do
          unint64_t v26 = __ldaxr(v25);
        while (__stlxr(v26 - 1, v25));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }

      sub_100008390((uint64_t)v71, *(void **)&v71[8]);
    }

    if (a4)
    {
      __int16 v27 = operator new(0x20uLL);
      void v27[2] = 0LL;
      *__int16 v27 = off_10188D2C8;
      v27[1] = 0LL;
      *((_WORD *)v27 + 12) = *a3;
      *(void *)std::string buf = v27 + 3;
      *(void *)&uint8_t buf[8] = v27;
      sub_10005F550((uint64_t)&v17[4], (__int128 *)buf);
      int v28 = *(std::__shared_weak_count **)&buf[8];
      if (*(void *)&buf[8])
      {
        int v29 = (unint64_t *)(*(void *)&buf[8] + 8LL);
        do
          unint64_t v30 = __ldaxr(v29);
        while (__stlxr(v30 - 1, v29));
        if (!v30)
        {
          ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
          std::__shared_weak_count::__release_weak(v28);
        }
      }
    }

    else
    {
      sub_1000F0D38((__n128 *)v17[4].n128_u64);
    }

    if (!v17[3].n128_u64[1]) {
      goto LABEL_83;
    }
    __int16 v31 = sub_100F2F900(a3);
    if (a5 == -1)
    {
      sub_100F2F980((void *)a1, (int *)a2, v31);
    }

    else
    {
      uint64_t v32 = a1 + 88;
      uint64_t v33 = *(void *)(a1 + 88);
      if (!v33) {
        goto LABEL_48;
      }
      uint64_t v34 = a1 + 88;
      do
      {
        int v35 = *(_DWORD *)(v33 + 32);
        BOOL v36 = v35 < a5;
        if (v35 >= a5) {
          int v37 = (uint64_t *)v33;
        }
        else {
          int v37 = (uint64_t *)(v33 + 8);
        }
        if (!v36) {
          uint64_t v34 = v33;
        }
        uint64_t v33 = *v37;
      }

      while (*v37);
      if (v34 == v32 || *(_DWORD *)(v34 + 32) > a5) {
LABEL_48:
      }
        uint64_t v34 = a1 + 88;
      uint64_t v64 = v34;
      unint64_t v38 = v15->n128_u64[0];
      if (!v15->n128_u64[0]) {
        goto LABEL_59;
      }
      int v39 = *a2;
      uint64_t v40 = (__n128 *)(a1 + 64);
      do
      {
        int v41 = *(_DWORD *)(v38 + 32);
        BOOL v42 = v41 < v39;
        if (v41 >= v39) {
          uint64_t v43 = (unint64_t *)v38;
        }
        else {
          uint64_t v43 = (unint64_t *)(v38 + 8);
        }
        if (!v42) {
          uint64_t v40 = (__n128 *)v38;
        }
        unint64_t v38 = *v43;
      }

      while (*v43);
      if (v40 == v15 || v39 < (signed __int32)v40[2].n128_u32[0])
      {
LABEL_59:
        __int128 v63 = (__n128 *)(a1 + 64);
LABEL_60:
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_10188D198);
        }
        char v44 = (os_log_s *)qword_1019349D8;
        if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
        {
          int v45 = (void *)(a1 + 8);
          (*(void (**)(_BYTE *__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(v71, a1, a2);
          if (v71[23] >= 0) {
            int64_t v46 = v71;
          }
          else {
            int64_t v46 = *(_BYTE **)v71;
          }
          *(_DWORD *)std::string buf = 136315650;
          *(void *)&uint8_t buf[4] = v45;
          *(_WORD *)&_BYTE buf[12] = 1024;
          *(_DWORD *)&buf[14] = a5;
          *(_WORD *)&buf[18] = 2080;
          *(void *)&buf[20] = v46;
          _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_DEBUG,  "%s; client %d has deregistered, not notifying %s",
            buf,
            0x1Cu);
          if ((v71[23] & 0x80000000) != 0) {
            operator delete(*(void **)v71);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019349D0 != -1) {
            dispatch_once(&qword_1019349D0, &stru_10188D198);
          }
          __int16 v47 = (void *)(a1 + 8);
          uint64_t v48 = qword_1019349D8;
          (*(void (**)(void **__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(__p, a1, a2);
          if (v62 >= 0) {
            __int128 v49 = __p;
          }
          else {
            __int128 v49 = (void **)__p[0];
          }
          *(_DWORD *)uint64_t v71 = 136315650;
          *(void *)&v71[4] = v47;
          *(_WORD *)&v71[12] = 1024;
          *(_DWORD *)&v71[14] = a5;
          *(_WORD *)&v71[18] = 2080;
          *(void *)&v71[20] = v49;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v48,  2LL,  "%s; client %d has deregistered, not notifying %s",
            v71,
            28,
            v60);
          __int128 v51 = v50;
          if (v62 < 0) {
            operator delete(__p[0]);
          }
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLTurnState_Type::Notification, CLTurnState_Type::NotificationData>::notifyClientsWi thData(const Notification_T &, const NotificationData_T &, BOOL, int, BOOL) [Notification_T = CLTurnState_Ty pe::Notification, NotificationData_T = CLTurnState_Type::NotificationData, NotificationInfo_T = char, Regist rationInfo_T = char]",  "%s\n",  v51);
          if (v51 != buf) {
            free(v51);
          }
        }

        goto LABEL_83;
      }

      __int128 v63 = v40;
      if (v34 == v32) {
        goto LABEL_60;
      }
      uint64_t v54 = v40[3].n128_i64[0];
      uint64_t v52 = v40 + 3;
      uint64_t v53 = (__n128 *)v54;
      if (!v54) {
        goto LABEL_60;
      }
      int v55 = *(_DWORD *)(v34 + 32);
      __int128 v56 = v52;
      do
      {
        int v57 = v53[1].n128_i32[3];
        BOOL v58 = v57 < v55;
        if (v57 >= v55) {
          __int128 v59 = v53;
        }
        else {
          __int128 v59 = (__n128 *)&v53->n128_i8[8];
        }
        if (!v58) {
          __int128 v56 = v53;
        }
        uint64_t v53 = (__n128 *)v59->n128_u64[0];
      }

      while (v59->n128_u64[0]);
      sub_100F2FD54((_BYTE *)a1, (uint64_t)&v64, (uint64_t)&v63, v31);
    }

void sub_100F2F2B4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_activity_scope_state_s state, char a18)
{
}

void sub_100F2F300(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 108))
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10188D198);
    }
    uint64_t v2 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v3 = (void *)(a1 + 8);
      *(_DWORD *)std::string buf = 136315138;
      int v37 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "%s; already shutdown; not listing clients",
        buf,
        0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_10188D198);
      }
      uint64_t v4 = (void *)(a1 + 8);
      int v32 = 136315138;
      uint64_t v33 = v4;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; already shutdown; not listing clients",
        (const char *)&v32);
      int v6 = (uint8_t *)v5;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLTurnState_Type::Notification, CLTurnState_Type::NotificationData>::listClients() [Noti fication_T = CLTurnState_Type::Notification, NotificationData_T = CLTurnState_Type::NotificationData, Notificati onInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v5);
      if (v6 != buf) {
        free(v6);
      }
    }
  }

  else
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10188D198);
    }
    __int16 v7 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      int v8 = (void *)(a1 + 8);
      uint64_t v9 = *(void *)(a1 + 96);
      *(_DWORD *)std::string buf = 136315394;
      int v37 = v8;
      __int16 v38 = 2048;
      v39[0] = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "%s; listing clients, num clients: %zu",
        buf,
        0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_10188D198);
      }
      __int16 v27 = (void *)(a1 + 8);
      uint64_t v28 = *(void *)(a1 + 96);
      int v32 = 136315394;
      uint64_t v33 = v27;
      __int16 v34 = 2048;
      v35[0] = v28;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; listing clients, num clients: %zu",
        (const char *)&v32,
        22);
      unint64_t v30 = (uint8_t *)v29;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLTurnState_Type::Notification, CLTurnState_Type::NotificationData>::listClients() [Noti fication_T = CLTurnState_Type::Notification, NotificationData_T = CLTurnState_Type::NotificationData, Notificati onInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v29);
      if (v30 != buf) {
        free(v30);
      }
    }

    BOOL v10 = *(void **)(a1 + 80);
    if (v10 != (void *)(a1 + 88))
    {
      unint64_t v11 = (void *)(a1 + 8);
      do
      {
        BOOL v12 = (void *)v10[5];
        if (v12 != v10 + 6)
        {
          do
          {
            if (qword_1019349D0 != -1) {
              dispatch_once(&qword_1019349D0, &stru_10188D198);
            }
            int v13 = (os_log_s *)qword_1019349D8;
            if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
            {
              __int128 v14 = (void *)(a1 + 8);
              int v15 = *((_DWORD *)v10 + 8);
              int v16 = *((_DWORD *)v12 + 7);
              *(_DWORD *)std::string buf = 136315650;
              int v37 = v14;
              __int16 v38 = 1024;
              LODWORD(v39[0]) = v15;
              WORD2(v39[0]) = 1024;
              *(_DWORD *)((char *)v39 + 6) = v16;
              _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "%s; clients, id: %d, notification: %d",
                buf,
                0x18u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_10188D198);
              }
              uint64_t v20 = (void *)(a1 + 8);
              int v21 = *((_DWORD *)v10 + 8);
              int v22 = *((_DWORD *)v12 + 7);
              int v32 = 136315650;
              uint64_t v33 = v20;
              __int16 v34 = 1024;
              LODWORD(v35[0]) = v21;
              WORD2(v35[0]) = 1024;
              *(_DWORD *)((char *)v35 + 6) = v22;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; clients, id: %d, notification: %d",
                (const char *)&v32,
                24,
                v31);
              BOOL v24 = (uint8_t *)v23;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLTurnState_Type::Notification, CLTurnState_Type::NotificationData>::listClients () [Notification_T = CLTurnState_Type::Notification, NotificationData_T = CLTurnState_Type::Notification Data, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v23);
              if (v24 != buf) {
                free(v24);
              }
            }

            int v17 = (void *)v12[1];
            if (v17)
            {
              do
              {
                signed __int32 v18 = v17;
                int v17 = (void *)*v17;
              }

              while (v17);
            }

            else
            {
              do
              {
                signed __int32 v18 = (void *)v12[2];
                BOOL v19 = *v18 == (void)v12;
                BOOL v12 = v18;
              }

              while (!v19);
            }

            BOOL v12 = v18;
          }

          while (v18 != v10 + 6);
        }

        int v25 = (void *)v10[1];
        if (v25)
        {
          do
          {
            unint64_t v26 = v25;
            int v25 = (void *)*v25;
          }

          while (v25);
        }

        else
        {
          do
          {
            unint64_t v26 = (void *)v10[2];
            BOOL v19 = *v26 == (void)v10;
            BOOL v10 = v26;
          }

          while (!v19);
        }

        BOOL v10 = v26;
      }

      while (v26 != (void *)(a1 + 88));
    }
  }

void sub_100F2F8A8(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_100F2F8D4(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

CLCppContainer *sub_100F2F900(_WORD *a1)
{
  uint64_t v2 = operator new(2uLL);
  _WORD *v2 = *a1;
  uint64_t v4 = _NSConcreteStackBlock;
  uint64_t v5 = 3221225472LL;
  int v6 = sub_100F2FE70;
  __int16 v7 = &unk_10181D3D0;
  int v8 = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:");
}

void sub_100F2F980(void *a1, int *a2, void *a3)
{
  if (!*((_BYTE *)a1 + 108))
  {
    uint64_t v5 = a1 + 8;
    uint64_t v4 = a1[8];
    if (v4)
    {
      int v8 = *a2;
      uint64_t v9 = a1 + 8;
      do
      {
        int v10 = *(_DWORD *)(v4 + 32);
        BOOL v11 = v10 < v8;
        if (v10 >= v8) {
          BOOL v12 = (uint64_t *)v4;
        }
        else {
          BOOL v12 = (uint64_t *)(v4 + 8);
        }
        if (!v11) {
          uint64_t v9 = (void *)v4;
        }
        uint64_t v4 = *v12;
      }

      while (*v12);
      if (v9 != v5 && v8 >= *((_DWORD *)v9 + 8))
      {
        __int128 v51 = v9;
        id v13 = sub_100F2FE80(a3);
        (*(void (**)(void *, int *, id, void *))(*a1 + 184LL))(a1, a2, v13, v9 + 10);
        __int128 v14 = (void *)v9[5];
        if (v14 != v9 + 6)
        {
          int v15 = a1 + 11;
          int v16 = a1 + 1;
          do
          {
            uint64_t v17 = *v15;
            if (!*v15) {
              goto LABEL_25;
            }
            int v18 = *((_DWORD *)v14 + 7);
            BOOL v19 = a1 + 11;
            do
            {
              int v20 = *(_DWORD *)(v17 + 32);
              BOOL v21 = v20 < v18;
              if (v20 >= v18) {
                int v22 = (uint64_t *)v17;
              }
              else {
                int v22 = (uint64_t *)(v17 + 8);
              }
              if (!v21) {
                BOOL v19 = (uint64_t *)v17;
              }
              uint64_t v17 = *v22;
            }

            while (*v22);
            if (v19 != v15 && (int v23 = *((_DWORD *)v19 + 8), v18 >= v23))
            {
              uint64_t v50 = v19;
              sub_100F2FD54(a1, (uint64_t)&v50, (uint64_t)&v51, a3);
              uint64_t v27 = a1[8];
              if (!v27) {
                return;
              }
              int v28 = *a2;
              int v29 = v5;
              do
              {
                int v30 = *(_DWORD *)(v27 + 32);
                BOOL v31 = v30 < v28;
                if (v30 >= v28) {
                  int v32 = (uint64_t *)v27;
                }
                else {
                  int v32 = (uint64_t *)(v27 + 8);
                }
                if (!v31) {
                  int v29 = (void *)v27;
                }
                uint64_t v27 = *v32;
              }

              while (*v32);
              if (v29 == v5 || v28 < *((_DWORD *)v29 + 8)) {
                return;
              }
              __int128 v51 = v29;
              uint64_t v34 = v29[6];
              __int128 v14 = v29 + 6;
              uint64_t v33 = v34;
              if (v34)
              {
                int v35 = v14;
                uint64_t v36 = v33;
                do
                {
                  int v37 = *(_DWORD *)(v36 + 28);
                  BOOL v38 = v37 < v23;
                  if (v37 >= v23) {
                    int v39 = (uint64_t *)v36;
                  }
                  else {
                    int v39 = (uint64_t *)(v36 + 8);
                  }
                  if (!v38) {
                    int v35 = (void *)v36;
                  }
                  uint64_t v36 = *v39;
                }

                while (*v39);
                if (v35 == v14 || v23 < *((_DWORD *)v35 + 7))
                {
                  do
                  {
                    int v40 = *(_DWORD *)(v33 + 28);
                    BOOL v41 = v23 < v40;
                    if (v23 >= v40) {
                      BOOL v42 = (uint64_t *)(v33 + 8);
                    }
                    else {
                      BOOL v42 = (uint64_t *)v33;
                    }
                    if (v41) {
                      __int128 v14 = (void *)v33;
                    }
                    uint64_t v33 = *v42;
                  }

                  while (*v42);
                }

                else
                {
                  uint64_t v43 = (void *)v35[1];
                  if (v43)
                  {
                    do
                    {
                      __int128 v14 = v43;
                      uint64_t v43 = (void *)*v43;
                    }

                    while (v43);
                  }

                  else
                  {
                    do
                    {
                      __int128 v14 = (void *)v35[2];
                      BOOL v44 = *v14 == (void)v35;
                      int v35 = v14;
                    }

                    while (!v44);
                  }
                }
              }
            }

            else
            {
LABEL_25:
              uint64_t v50 = a1 + 11;
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_10188D198);
              }
              BOOL v24 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                int v25 = a1 + 1;
                int v26 = *((_DWORD *)v14 + 7);
                *(_DWORD *)std::string buf = 136446466;
                int v57 = v25;
                __int16 v58 = 1026;
                int v59 = v26;
                _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_FAULT,  "%{public}s; unknown client %{public}d",
                  buf,
                  0x12u);
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(buf, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_10188D198);
                }
                int v45 = a1 + 1;
                int v46 = *((_DWORD *)v14 + 7);
                int v52 = 136446466;
                uint64_t v53 = v45;
                __int16 v54 = 1026;
                int v55 = v46;
                LODWORD(v49) = 18;
                _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; unknown client %{public}d",
                  &v52,
                  v49);
                uint64_t v48 = (uint8_t *)v47;
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLNotifier<CLTurnState_Type::Notification, CLTurnState_Type::NotificationData>::invokeClientsWith Data(const Notification_T &, CLCppContainer *) [Notification_T = CLTurnState_Type::Notification, Notif icationData_T = CLTurnState_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v47);
                if (v48 != buf) {
                  free(v48);
                }
              }
            }
          }

          while (v14 != v51 + 6);
        }
      }
    }
  }

_BYTE *sub_100F2FD54(_BYTE *result, uint64_t a2, uint64_t a3, void *a4)
{
  if (!result[108])
  {
    __int16 v7 = result;
    uint64_t v8 = *(unsigned int *)(*(void *)a2 + 32LL);
    LODWORD(v13) = *(_DWORD *)(*(void *)a3 + 32LL);
    id v9 = sub_100F2FE80(a4);
    uint64_t v10 = *(void *)a3 + 80LL;
    BOOL v11 = (uint64_t **)(*(void *)a3 + 40LL);
    __int128 v14 = (int *)(*(void *)a2 + 32LL);
    BOOL v12 = sub_1004EF3D4(v11, v14, (uint64_t)&unk_1012CF090, &v14);
    BOOL result = (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t *, id, uint64_t, uint64_t **))(*(void *)v7 + 192LL))( v7,  v8,  &v13,  v9,  v10,  v12 + 4);
    if ((_DWORD)result) {
      return objc_msgSend( *(id *)(*(void *)a2 + 64),  "onNotification:withData:",  *(unsigned int *)(*(void *)a3 + 32),  a4,  v13);
    }
  }

  return result;
}

void sub_100F2FE30(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10188D2C8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100F2FE44(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10188D2C8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_100F2FE70(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1) {
    operator delete(v1);
  }
}

id sub_100F2FE80(void *a1)
{
  if ((objc_opt_isKindOfClass(a1, v2) & 1) != 0) {
    return sub_100F2FEF8(a1);
  }
  objc_opt_class(&OBJC_CLASS___CLCppContainer);
  if ((objc_opt_isKindOfClass(a1, v4) & 1) != 0) {
    return sub_100F30280(a1);
  }
  else {
    return 0LL;
  }
}

id sub_100F2FEF8(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return sub_100F3062C((uint64_t)&v8 + 7, a1);
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10188D308);
    }
    uint64_t v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::string buf = 134218498;
      id v11 = v2;
      __int16 v12 = 2048;
      uint64_t v13 = 0LL;
      __int16 v14 = 2080;
      unint64_t v15 = 0x8000000101365782LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10188D308);
    }
    LODWORD(v9) = 134218498;
    HIDWORD(v9) = (_DWORD)v2;
    LODWORD(v_Block_object_dispose((const void *)(v1 - 128), 8) = 32;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v9,  v8,  v9);
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10188D308);
    }
    int v6 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::string buf = 134218498;
      id v11 = v2;
      __int16 v12 = 2048;
      uint64_t v13 = 0LL;
      __int16 v14 = 2080;
      unint64_t v15 = 0x8000000101365782LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10188D308);
    }
    LODWORD(v9) = 134218498;
    HIDWORD(v9) = (_DWORD)v2;
    LODWORD(v_Block_object_dispose((const void *)(v1 - 128), 8) = 32;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v9,  v8,  v9);
  }

  __int16 v7 = (uint8_t *)v4;
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLTurnState_Type::NotificationData, Callback =(lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:241:46)]",  "%s\n",  v4);
  if (v7 != buf) {
    free(v7);
  }
  return 0LL;
}

id sub_100F30280(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return [a1 cppObjectPtr];
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10188D308);
    }
    uint64_t v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::string buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x8000000101365782LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10188D308);
    }
    LODWORD(v_Block_object_dispose((const void *)(v1 - 128), 8) = 134218498;
    HIDWORD(v_Block_object_dispose((const void *)(v1 - 128), 8) = (_DWORD)v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10188D308);
    }
    int v6 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::string buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x8000000101365782LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10188D308);
    }
    LODWORD(v_Block_object_dispose((const void *)(v1 - 128), 8) = 134218498;
    HIDWORD(v_Block_object_dispose((const void *)(v1 - 128), 8) = (_DWORD)v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  __int16 v7 = (uint8_t *)v4;
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLTurnState_Type::NotificationData, Callback =(lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:250:46)]",  "%s\n",  v4);
  if (v7 != buf) {
    free(v7);
  }
  return 0LL;
}

id sub_100F3062C(uint64_t a1, void *a2)
{
  if (![a2 cppObjectPtr]
    && objc_msgSend(objc_msgSend(a2, "compatibilityInfo"), "isEqual:", &off_1018D4880))
  {
    if (objc_msgSend(objc_msgSend(a2, "serialized"), "length") != (id)2) {
      sub_1012786AC();
    }
    objc_msgSend(a2, "setCppObjectPtr:", objc_msgSend(objc_msgSend(a2, "serialized"), "bytes"));
  }

  return [a2 cppObjectPtr];
}

void sub_100F306A0(id a1)
{
  qword_101934478 = (uint64_t)os_log_create("com.apple.locationd.Support", "Support");
}

uint64_t sub_100F306CC(uint64_t a1, uint64_t a2, void *aBlock, unsigned int a4)
{
  *(void *)a1 = off_1018A2210;
  *(void *)a1 = off_10188D338;
  *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 128), 8) = 0LL;
  *(void *)(a1 + 16) = a2;
  *(void *)(a1 + 24) = _Block_copy(aBlock);
  *(void *)(a1 + 32) = operator new[](112LL * a4);
  *(_DWORD *)(a1 + sub_10004AD90(v3 - 40) = 0;
  *(_DWORD *)(a1 + 44) = a4;
  dispatch_retain(*(dispatch_object_t *)(a1 + 16));
  return a1;
}

void sub_100F30750(_Unwind_Exception *a1)
{
}

void sub_100F30768(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100F307F0(a1);
  operator delete(v1);
}

void sub_100F3077C(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v3 = (_OWORD *)(*(void *)(a1 + 32) + 112LL * *(unsigned int *)(a1 + 40));
  __int128 v4 = a3[6];
  __int128 v6 = a3[3];
  __int128 v5 = a3[4];
  v3[5] = a3[5];
  v3[6] = v4;
  void v3[3] = v6;
  void v3[4] = v5;
  __int128 v7 = *a3;
  __int128 v8 = a3[2];
  v3[1] = a3[1];
  v3[2] = v8;
  *uint64_t v3 = v7;
  unsigned int v9 = *(_DWORD *)(a1 + 44);
  unsigned int v10 = *(_DWORD *)(a1 + 40) + 1;
  *(_DWORD *)(a1 + sub_10004AD90(v3 - 40) = v10;
  if (v10 >= v9)
  {
    sub_1006DC90C(*(dispatch_queue_s **)(a1 + 16), *(void *)(a1 + 24), *(const void **)(a1 + 32), v10, 112);
    *(_DWORD *)(a1 + sub_10004AD90(v3 - 40) = 0;
  }

uint64_t sub_100F307F0(uint64_t a1)
{
  *(void *)a1 = off_10188D338;
  dispatch_release(*(dispatch_object_t *)(a1 + 16));
  _Block_release(*(const void **)(a1 + 24));
  id v2 = *(void **)(a1 + 32);
  if (v2) {
    operator delete[](v2);
  }
  *(_DWORD *)(a1 + 44) = 0;
  return sub_1011C07F8(a1);
}

CLCppContainer *sub_100F30844(_WORD *a1)
{
  id v2 = operator new(2uLL);
  _WORD *v2 = *a1;
  __int128 v4 = _NSConcreteStackBlock;
  uint64_t v5 = 3221225472LL;
  __int128 v6 = sub_100F308C4;
  __int128 v7 = &unk_10181D3D0;
  __int128 v8 = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:");
}

void sub_100F308C4(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1) {
    operator delete(v1);
  }
}

float *sub_100F308D4(float **a1, int a2, float a3)
{
  __int128 v4 = *a1;
  uint64_t v3 = a1[1];
  if (*a1 == v3) {
    goto LABEL_14;
  }
  for (uint64_t i = v4 + 6; i != v3; i += 6)
  {
    float v6 = *i;
    float v7 = *(i - 6);
    if (v6 < v7) {
      sub_10127881C();
    }
  }

  if (v4 == v3)
  {
LABEL_14:
    float v14 = INFINITY;
    unsigned int v9 = *a1;
  }

  else
  {
    unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * (((char *)v3 - (char *)v4) >> 3);
    unsigned int v9 = *a1;
    do
    {
      unint64_t v10 = v8 >> 1;
      __int16 v11 = &v9[6 * (v8 >> 1)];
      float v13 = *v11;
      uint64_t v12 = v11 + 6;
      v8 += ~(v8 >> 1);
      if (v13 < a3) {
        unsigned int v9 = v12;
      }
      else {
        unint64_t v8 = v10;
      }
    }

    while (v8);
    if (v9 == v4) {
      float v14 = INFINITY;
    }
    else {
      float v14 = vabds_f32(*(v9 - 6), a3);
    }
  }

  if (v9 == v3) {
    float v15 = INFINITY;
  }
  else {
    float v15 = vabds_f32(*v9, a3);
  }
  if (a2 < 1)
  {
    uint64_t v17 = a1[1];
LABEL_32:
    if (v17 == v3) {
      return 0LL;
    }
    else {
      return v17;
    }
  }

  else
  {
    int v16 = v9;
    while (v16 != v3 || v9 != v4)
    {
      if (v14 >= v15)
      {
        if (v16 + 6 == v3)
        {
          float v15 = INFINITY;
          uint64_t v17 = v16;
          int v16 = a1[1];
        }

        else
        {
          float v15 = vabds_f32(v16[6], a3);
          uint64_t v17 = v16;
          v16 += 6;
        }
      }

      else
      {
        uint64_t v17 = v9 - 6;
        if (v9 - 6 == v4)
        {
          float v14 = INFINITY;
          uint64_t v17 = *a1;
          unsigned int v9 = *a1;
        }

        else
        {
          float v14 = vabds_f32(*(v9 - 12), a3);
          v9 -= 6;
        }
      }
    }

    return 0LL;
  }

float *sub_100F30A64(float **a1, unint64_t a2)
{
  return sub_100F308D4(a1, 3, (float)((float)a2 * 4.0) + 2.0);
}

float *sub_100F30B04(float **a1, uint64_t a2)
{
  for (unint64_t i = 0LL; i != 18; ++i)
  {
    BOOL result = sub_100F30A64(a1, i);
    float v7 = (_BYTE *)(a2 + i);
    v7[264] = (int)v6;
    v7[246] = (int)v6;
    v7[228] = (int)v6;
  }

  return result;
}

float *sub_100F30B5C(float **a1, uint64_t a2, double a3, double a4, double a5)
{
  unint64_t v7 = 0LL;
  unint64_t v8 = (_BYTE *)(a2 + 228);
  uint64_t v9 = a2 + 196;
  float32x2_t v10 = (float32x2_t)vdup_n_s32(0x3C8EFA35u);
  float32x2_t v11 = (float32x2_t)vdup_n_s32(0x42652EE1u);
  uint64_t v59 = a2 + 228;
  do
  {
    uint64_t v12 = *a1;
    float v13 = a1[1];
    if (v13 == *a1)
    {
      int v22 = a1[1];
    }

    else
    {
      float v14 = (float)((float)(int)v7 * 4.0) + 2.0;
      unint64_t v15 = 0xAAAAAAAAAAAAAAABLL * (((char *)v13 - (char *)*a1) >> 3);
      do
      {
        unint64_t v16 = v15 >> 1;
        uint64_t v17 = &v12[6 * (v15 >> 1)];
        float v19 = *v17;
        int v18 = v17 + 6;
        v15 += ~(v15 >> 1);
        else {
          unint64_t v15 = v16;
        }
      }

      while (v15);
      if (v13 == v12)
      {
        int v22 = a1[1];
        uint64_t v27 = v12;
        uint64_t v12 = v22;
        float v13 = v27;
      }

      else
      {
        float v20 = v14 + 2.0;
        unint64_t v21 = 0xAAAAAAAAAAAAAAABLL * (((char *)v13 - (char *)v12) >> 3);
        int v22 = v12;
        do
        {
          unint64_t v23 = v21 >> 1;
          BOOL v24 = &v22[6 * (v21 >> 1)];
          float v26 = *v24;
          int v25 = v24 + 6;
          v21 += ~(v21 >> 1);
          if (v26 > v20) {
            unint64_t v21 = v23;
          }
          else {
            int v22 = v25;
          }
        }

        while (v21);
        float v13 = v12;
      }
    }

    unint64_t v28 = 0xAAAAAAAAAAAAAAABLL * (((char *)v22 - (char *)v13) >> 3);
    if (v28 <= 4)
    {
      BOOL result = sub_100F30A64(a1, v7);
      uint64_t v31 = a2 + v7;
      *(_BYTE *)(v31 + 264) = (int)v30;
      *(_BYTE *)(v31 + 246) = (int)v30;
      *(_BYTE *)(v59 + v7) = (int)v30;
      goto LABEL_38;
    }

    float32x2_t v32 = 0LL;
    float32x2_t v60 = 0LL;
    float v61 = 0.0;
    if (v12 != v22)
    {
      float v34 = *(float *)(a2 + 220);
      float v33 = *(float *)(a2 + 224);
      float v35 = 0.0;
      while (1)
      {
        uint64_t v36 = 0LL;
        float v37 = *v12;
        while (1)
        {
          float v38 = *(float *)(v9 + 4 * v36);
          if (++v36 == 6)
          {
            float v38 = v34;
            break;
          }
        }

        float v39 = (float)((float)(v37 - v38) / (float)(v33 + v33)) + 0.5;
        if (v39 <= 0.0) {
          break;
        }
        if (v39 >= 1.0)
        {
          uint64_t v53 = a2 + 24 * v36;
          float v49 = *(float *)(v53 + 48);
          float v50 = v37 * *(float *)(v53 + 36);
          float32x2_t v51 = *(float32x2_t *)(v53 + 28);
          float32x2_t v52 = *(float32x2_t *)(v53 + 40);
          goto LABEL_30;
        }

        float v40 = v39 * (float)(v39 * (float)((float)(v39 * -2.0) + 3.0));
        uint64_t v41 = a2 + 24 * v36;
        float v42 = (float)((float)(v37 * *(float *)(v41 + 12)) + *(float *)(v41 + 24)) * 0.017453;
        float32x2_t v43 = vmul_n_f32(*(float32x2_t *)(v41 + 28), v37);
        float v44 = (float)((float)((float)(v37 * *(float *)(v41 + 36)) + *(float *)(v41 + 48)) * 0.017453) - v42;
        float32x2_t v45 = vmul_f32(vadd_f32(vmul_n_f32(*(float32x2_t *)(v41 + 4), v37), *(float32x2_t *)(v41 + 16)), v10);
        float32x2_t v46 = vadd_f32(v45, vmul_n_f32(vsub_f32(vmul_f32(vadd_f32(v43, *(float32x2_t *)(v41 + 40)), v10), v45), v40));
        float v47 = v42 + (float)(v40 * v44);
LABEL_31:
        float v54 = (float)(v47 * 57.296) - v12[3];
        float32x2_t v55 = vsub_f32(vmul_f32(v46, v11), *(float32x2_t *)(v12 + 1));
        float32x2_t v32 = vmla_f32(v32, v55, v55);
        float32x2_t v60 = v32;
        float v35 = v35 + (float)(v54 * v54);
        float v61 = v35;
        v12 += 6;
        if (v12 == v22) {
          goto LABEL_34;
        }
      }

      uint64_t v48 = a2 + 24 * v36;
      float v49 = *(float *)(v48 + 24);
      float v50 = v37 * *(float *)(v48 + 12);
      float32x2_t v51 = *(float32x2_t *)(v48 + 4);
      float32x2_t v52 = *(float32x2_t *)(v48 + 16);
LABEL_30:
      float32x2_t v46 = vmul_f32(vadd_f32(vmul_n_f32(v51, v37), v52), v10);
      float v47 = (float)(v50 + v49) * 0.017453;
      goto LABEL_31;
    }

    float v35 = 0.0;
LABEL_34:
    unint64_t v56 = 0LL;
    *(float *)&a5 = (float)v28;
    float32x2_t v60 = vdiv_f32(v32, (float32x2_t)vdup_lane_s32(*(int32x2_t *)&a5, 0));
    float v61 = v35 / (float)v28;
    int v57 = v8;
    do
    {
      BOOL result = (float *)sub_1002BA24C((uint64_t)&v60, v56);
      float v58 = sqrtf(*result) * 100.0;
      if (v58 < 1.0) {
        float v58 = 1.0;
      }
      *int v57 = (int)v58;
      v57 += 18;
      ++v56;
    }

    while (v56 != 3);
LABEL_38:
    ++v7;
    ++v8;
  }

  while (v7 != 18);
  return result;
}

float *sub_100F30EDC@<X0>(float **a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  *(_OWORD *)(a3 + 241) = 0u;
  *(_OWORD *)(a3 + 225) = 0u;
  *(_OWORD *)(a3 + 209) = 0u;
  *(_OWORD *)(a3 + 193) = 0u;
  *(_OWORD *)(a3 + 177) = 0u;
  *(_OWORD *)(a3 + 161) = 0u;
  *(_OWORD *)(a3 + 145) = 0u;
  *(_OWORD *)(a3 + 129) = 0u;
  *(_OWORD *)(a3 + 113) = 0u;
  *(_OWORD *)(a3 + 97) = 0u;
  *(_OWORD *)(a3 + 81) = 0u;
  *(_OWORD *)(a3 + 65) = 0u;
  *(_OWORD *)(a3 + 49) = 0u;
  *(_OWORD *)(a3 + 33) = 0u;
  *(_OWORD *)(a3 + 17) = 0u;
  *(_OWORD *)(a3 + 266) = 0u;
  *(_OWORD *)(a3 + 1) = 0u;
  *(_OWORD *)(a3 + 257) = 0u;
  *(_BYTE *)a3 = 22;
  BOOL result = *a1;
  unint64_t v7 = (__n128 *)a1[1];
  if (result == (float *)v7)
  {
    *(void *)(a3 + 22_Block_object_dispose((const void *)(v1 - 128), 8) = -1LL;
    *(void *)(a3 + 264) = -1LL;
    *(void *)(a3 + 246) = -1LL;
    return result;
  }

  sub_100F31574( (uint64_t)result,  v7,  (uint64_t)&v44,  126 - 2 * __clz(0xAAAAAAAAAAAAAAABLL * (((char *)v7 - (char *)result) >> 3)),  1,  (__n128)0LL);
  float v8 = **a1;
  float v9 = *(a1[1] - 6);
  float v10 = v9 - v8;
  int v43 = a2;
  if ((float)(v9 - v8) < 6.6667)
  {
    *(_DWORD *)(a3 + 224) = 1084227584;
    float v11 = 2.5;
    float v12 = 1.0;
    float v13 = 10.0;
LABEL_11:
    float v18 = (float)((float)(v8 + v9) + (float)(v12 * -10.0)) * 0.5;
    *(float *)(a3 + 1sub_10000AE14(v14 + 96) = v18;
    unint64_t v15 = 1LL;
    goto LABEL_12;
  }

  float v14 = 3.4028e38;
  unint64_t v15 = 1LL;
  for (uint64_t i = 2LL; i != 7; ++i)
  {
    float v17 = fabsf((float)(v10 / (float)(i - 1)) + -10.0);
    if (v17 < v14)
    {
      float v14 = v17;
      unint64_t v15 = i;
    }
  }

  float v13 = v10 / (float)(v15 - 1);
  float v12 = v13 / 10.0;
  *(float *)(a3 + 224) = (float)(v13 / 10.0) * 5.0;
  if (v15 >= 7) {
    sub_101278988();
  }
  float v11 = (float)(v12 * 0.5) * 5.0;
  if (v15 == 1) {
    goto LABEL_11;
  }
  float v18 = v8 + (float)((float)(v12 * 0.5) * -10.0);
  *(float *)(a3 + 1sub_10000AE14(v14 + 96) = v18;
  if (!v15)
  {
    int v20 = 1;
    char v21 = 1;
    goto LABEL_16;
  }

void sub_100F3127C(uint64_t a1, uint64_t *a2, int a3, double a4)
{
  uint64_t v7 = 0LL;
  std::stringbuf::string_type __p = 0LL;
  float v40 = 0LL;
  do
  {
    for (uint64_t i = 0LL; i != 18; ++i)
    {
      float v9 = __p;
      float v39 = __p;
      uint64_t v10 = *a2;
      uint64_t v11 = a2[1];
      float v12 = 7.0;
      if (*a2 != v11)
      {
        float v13 = (float)((float)(int)i * 4.0) + 2.0;
        float v14 = v13 + -2.0;
        float v15 = v13 + 2.0;
        do
        {
          float v16 = *(float *)v10;
          if (v14 <= *(float *)v10 && v16 < v15)
          {
            float v16 = a4 - *(double *)(v10 + 16);
            float v18 = fabsf(v16);
            if (v9 >= (float *)v40)
            {
              int v20 = __p;
              uint64_t v21 = v9 - __p;
              unint64_t v22 = v21 + 1;
              uint64_t v23 = v40 - (char *)__p;
              else {
                unint64_t v24 = v22;
              }
              if (v24)
              {
                uint64_t v25 = (char *)sub_10000956C((uint64_t)&v40, v24);
                int v20 = __p;
                float v9 = v39;
              }

              else
              {
                uint64_t v25 = 0LL;
              }

              float v26 = (float *)&v25[4 * v21];
              *float v26 = v18;
              float v19 = v26 + 1;
              while (v9 != v20)
              {
                float v27 = *--v9;
                float v16 = v27;
                *--float v26 = v27;
              }

              std::stringbuf::string_type __p = v26;
              float v40 = &v25[4 * v24];
              if (v20) {
                operator delete(v20);
              }
            }

            else
            {
              float *v9 = v18;
              float v19 = v9 + 1;
            }

            float v39 = v19;
            float v9 = v19;
          }

          v10 += 24LL;
        }

        while (v10 != v11);
        if (v9 != __p)
        {
          if ((unint64_t)((char *)v9 - (char *)__p) > 0xB)
          {
            float v28 = __p + 2;
            if (__p + 2 != v9) {
              sub_1002C3C90(__p, __p + 2, v9, v16);
            }
          }

          else
          {
            float v28 = v9 - 1;
          }

          float v12 = *v28 / 86400.0;
        }
      }

      uint64_t v29 = a1 + 18 * v7 + i;
      unsigned int v31 = *(unsigned __int8 *)(v29 + 228);
      float v30 = (_BYTE *)(v29 + 228);
      float v32 = (float)v31 * 0.01;
      if (a3)
      {
        if (v12 > 2.0 && v32 < 0.1) {
          float v32 = 0.1;
        }
      }

      else
      {
        int v33 = (int)v12;
        float v32 = v32 + flt_101365800[v33 & ~(v33 >> 31)];
      }

      float v34 = v32 * 100.0;
      BOOL v35 = v32 <= 2.5;
      float v36 = 250.0;
      if (v35) {
        float v36 = v34;
      }
      _BYTE *v30 = (int)v36;
    }

    ++v7;
  }

  while (v7 != 3);
  if (__p) {
    operator delete(__p);
  }
}

void sub_100F31524( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100F31548(id a1)
{
  off_101934598 = os_log_create("com.apple.locationd.Motion", "Gyro");
}

void sub_100F31574(uint64_t a1, __n128 *a2, uint64_t a3, uint64_t a4, char a5, __n128 a6)
{
LABEL_1:
  uint64_t v10 = (float *)a1;
LABEL_2:
  uint64_t v11 = 1 - a4;
  while (2)
  {
    a1 = (uint64_t)v10;
    uint64_t v12 = v11;
    uint64_t v13 = (char *)a2 - (char *)v10;
    unint64_t v14 = 0xAAAAAAAAAAAAAAABLL * (((char *)a2 - (char *)v10) >> 3);
    switch(v14)
    {
      case 0uLL:
      case 1uLL:
        return;
      case 2uLL:
        float v26 = a2[-2].n128_f32[2];
        uint64_t v25 = &a2[-2].n128_i8[8];
        if (v26 < *v10)
        {
          uint64_t v36 = *((void *)v10 + 2);
          __int128 v33 = *(_OWORD *)v10;
          __int128 v27 = *(_OWORD *)v25;
          *((void *)v10 + 2) = *((void *)v25 + 2);
          *(_OWORD *)uint64_t v10 = v27;
          *(_OWORD *)uint64_t v25 = v33;
          *((void *)v25 + 2) = v36;
        }

        return;
      case 3uLL:
        sub_100F31AF8((__int128 *)v10, (__int128 *)(v10 + 6), (__int128 *)&a2[-2].n128_i8[8]);
        return;
      case 4uLL:
        sub_100F32060((uint64_t)v10, (uint64_t)(v10 + 6), (uint64_t)(v10 + 12), (uint64_t)&a2[-2].n128_i64[1]);
        return;
      case 5uLL:
        sub_100F32130( (__n128 *)v10,  (__n128 *)(v10 + 6),  (__n128 *)v10 + 3,  (__n128 *)(v10 + 18),  (__n128 *)((char *)a2 - 24));
        return;
      default:
        if (v13 > 575)
        {
          if (v12 == 1)
          {
            return;
          }

          unint64_t v15 = v14 >> 1;
          float v16 = &v10[6 * (v14 >> 1)];
          if ((unint64_t)v13 < 0xC01)
          {
            sub_100F31AF8((__int128 *)&v10[6 * v15], (__int128 *)v10, (__int128 *)&a2[-2].n128_i8[8]);
            if ((a5 & 1) != 0) {
              goto LABEL_11;
            }
          }

          else
          {
            sub_100F31AF8((__int128 *)v10, (__int128 *)&v10[6 * v15], (__int128 *)&a2[-2].n128_i8[8]);
            uint64_t v17 = 3 * v15;
            float v18 = (__int128 *)&v10[6 * v15 - 6];
            sub_100F31AF8((__int128 *)(v10 + 6), v18, (__int128 *)&a2[-3]);
            float v19 = (__int128 *)(v10 + 12);
            int v20 = (__int128 *)&v10[2 * v17 + 6];
            sub_100F31AF8(v19, v20, (__int128 *)&a2[-5].n128_i8[8]);
            sub_100F31AF8(v18, (__int128 *)v16, v20);
            uint64_t v35 = *(void *)(a1 + 16);
            __int128 v32 = *(_OWORD *)a1;
            __int128 v21 = *(_OWORD *)v16;
            *(void *)(a1 + 16) = *((void *)v16 + 2);
            *(_OWORD *)a1 = v21;
            *((void *)v16 + 2) = v35;
            *(_OWORD *)float v16 = v32;
            if ((a5 & 1) != 0) {
              goto LABEL_11;
            }
          }

          if (*(float *)(a1 - 24) >= *(float *)a1)
          {
            uint64_t v10 = sub_100F31C04((float *)a1, (float *)a2);
            goto LABEL_16;
          }

uint64_t sub_100F31A10(uint64_t result, uint64_t a2)
{
  if (result != a2)
  {
    uint64_t v2 = result + 24;
    if (result + 24 != a2)
    {
      uint64_t v3 = 0LL;
      uint64_t v4 = result;
      do
      {
        uint64_t v5 = v2;
        float v6 = *(float *)(v4 + 24);
        if (v6 < *(float *)v4)
        {
          __int128 v10 = *(_OWORD *)(v4 + 28);
          int v11 = *(_DWORD *)(v4 + 44);
          uint64_t v7 = v3;
          while (1)
          {
            uint64_t v8 = result + v7;
            *(_OWORD *)(v8 + 24) = *(_OWORD *)(result + v7);
            *(void *)(v8 + sub_10004AD90(v3 - 40) = *(void *)(result + v7 + 16);
            if (!v7) {
              break;
            }
            v7 -= 24LL;
            if (v6 >= *(float *)(v8 - 24))
            {
              uint64_t v9 = result + v7 + 24;
              goto LABEL_10;
            }
          }

          uint64_t v9 = result;
LABEL_10:
          *(float *)uint64_t v9 = v6;
          *(_OWORD *)(v9 + 4) = v10;
          *(_DWORD *)(v9 + 2sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v11;
        }

        uint64_t v2 = v5 + 24;
        v3 += 24LL;
        uint64_t v4 = v5;
      }

      while (v5 + 24 != a2);
    }
  }

  return result;
}

uint64_t sub_100F31AF8(__int128 *a1, __int128 *a2, __int128 *a3)
{
  float v3 = *(float *)a2;
  float v4 = *(float *)a3;
  if (*(float *)a2 < *(float *)a1)
  {
    if (v4 < v3)
    {
      uint64_t v5 = *((void *)a1 + 2);
      __int128 v6 = *a1;
      uint64_t v7 = *((void *)a3 + 2);
      *a1 = *a3;
      *((void *)a1 + 2) = v7;
      *a3 = v6;
      *((void *)a3 + 2) = v5;
      return 1LL;
    }

    uint64_t v14 = *((void *)a1 + 2);
    __int128 v15 = *a1;
    uint64_t v16 = *((void *)a2 + 2);
    *a1 = *a2;
    *((void *)a1 + 2) = v16;
    *a2 = v15;
    *((void *)a2 + 2) = v14;
    uint64_t v17 = *((void *)a2 + 2);
    __int128 v18 = *a2;
    uint64_t v19 = *((void *)a3 + 2);
    *a2 = *a3;
    *((void *)a2 + 2) = v19;
    *a3 = v18;
    *((void *)a3 + 2) = v17;
    return 2LL;
  }

  if (v4 < v3)
  {
    uint64_t v8 = *((void *)a2 + 2);
    __int128 v9 = *a2;
    uint64_t v10 = *((void *)a3 + 2);
    *a2 = *a3;
    *((void *)a2 + 2) = v10;
    *a3 = v9;
    *((void *)a3 + 2) = v8;
    uint64_t v11 = *((void *)a1 + 2);
    __int128 v12 = *a1;
    uint64_t v13 = *((void *)a2 + 2);
    *a1 = *a2;
    *((void *)a1 + 2) = v13;
    *a2 = v12;
    *((void *)a2 + 2) = v11;
    return 2LL;
  }

  return 0LL;
}

float *sub_100F31C04(float *a1, float *a2)
{
  float v2 = *a1;
  __int128 v14 = *(_OWORD *)(a1 + 1);
  int v15 = *((_DWORD *)a1 + 5);
  if (*a1 >= *(a2 - 6))
  {
    uint64_t v5 = (__int128 *)(a1 + 6);
    do
    {
      float v3 = (float *)v5;
      uint64_t v5 = (__int128 *)((char *)v5 + 24);
    }

    while (v2 >= *v3);
  }

  else
  {
    float v3 = a1;
    do
    {
      float v4 = v3[6];
      v3 += 6;
    }

    while (v2 >= v4);
  }

  if (v3 < a2)
  {
    do
    {
      float v6 = *(a2 - 6);
      a2 -= 6;
    }

    while (v2 < v6);
  }

  while (v3 < a2)
  {
    uint64_t v13 = *((void *)v3 + 2);
    __int128 v12 = *(_OWORD *)v3;
    __int128 v7 = *(_OWORD *)a2;
    *((void *)v3 + 2) = *((void *)a2 + 2);
    *(_OWORD *)float v3 = v7;
    *((void *)a2 + 2) = v13;
    *(_OWORD *)a2 = v12;
    do
    {
      float v8 = v3[6];
      v3 += 6;
    }

    while (v2 >= v8);
    do
    {
      float v9 = *(a2 - 6);
      a2 -= 6;
    }

    while (v2 < v9);
  }

  if (v3 - 6 != a1)
  {
    __int128 v10 = *(_OWORD *)(v3 - 6);
    *((void *)a1 + 2) = *((void *)v3 - 1);
    *(_OWORD *)a1 = v10;
  }

  *(v3 - 6) = v2;
  *((_DWORD *)v3 - 1) = v15;
  *(_OWORD *)(v3 - 5) = v14;
  return v3;
}

uint64_t sub_100F31D38(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = 0LL;
  float v3 = *(float *)a1;
  __int128 v17 = *(_OWORD *)(a1 + 4);
  int v18 = *(_DWORD *)(a1 + 20);
  do
  {
    float v4 = *(float *)(a1 + v2 + 24);
    v2 += 24LL;
  }

  while (v4 < v3);
  unint64_t v5 = a1 + v2;
  if (v2 == 24)
  {
    do
    {
      if (v5 >= a2) {
        break;
      }
      float v7 = *(float *)(a2 - 24);
      a2 -= 24LL;
    }

    while (v7 >= v3);
  }

  else
  {
    do
    {
      float v6 = *(float *)(a2 - 24);
      a2 -= 24LL;
    }

    while (v6 >= v3);
  }

  float v8 = (__int128 *)(a1 + v2);
  if (v5 < a2)
  {
    unint64_t v9 = a2;
    do
    {
      __int128 v10 = *v8;
      uint64_t v11 = *((void *)v8 + 2);
      uint64_t v12 = *(void *)(v9 + 16);
      *float v8 = *(_OWORD *)v9;
      *((void *)v8 + 2) = v12;
      *(void *)(v9 + 16) = v11;
      *(_OWORD *)unint64_t v9 = v10;
      do
      {
        float v13 = *((float *)v8 + 6);
        float v8 = (__int128 *)((char *)v8 + 24);
      }

      while (v13 < v3);
      do
      {
        float v14 = *(float *)(v9 - 24);
        v9 -= 24LL;
      }

      while (v14 >= v3);
    }

    while ((unint64_t)v8 < v9);
  }

  if ((__int128 *)((char *)v8 - 24) != (__int128 *)a1)
  {
    __int128 v15 = *(__int128 *)((char *)v8 - 24);
    *(void *)(a1 + 16) = *((void *)v8 - 1);
    *(_OWORD *)a1 = v15;
  }

  *((float *)v8 - 6) = v3;
  *((_DWORD *)v8 - 1) = v18;
  *(__int128 *)((char *)v8 - 2sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v17;
  return (uint64_t)v8 - 24;
}

BOOL sub_100F31E6C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a2 - a1) >> 3);
  BOOL result = 1LL;
  switch(v4)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      float v6 = (__int128 *)(a2 - 24);
      if (*(float *)(a2 - 24) < *(float *)a1)
      {
        uint64_t v7 = *(void *)(a1 + 16);
        __int128 v8 = *(_OWORD *)a1;
        uint64_t v9 = *(void *)(a2 - 8);
        *(_OWORD *)a1 = *v6;
        *(void *)(a1 + 16) = v9;
        __int128 *v6 = v8;
        *(void *)(a2 - _Block_object_dispose((const void *)(v1 - 128), 8) = v7;
      }

      return result;
    case 3uLL:
      sub_100F31AF8((__int128 *)a1, (__int128 *)(a1 + 24), (__int128 *)(a2 - 24));
      return 1LL;
    case 4uLL:
      sub_100F32060(a1, a1 + 24, a1 + 48, a2 - 24);
      return 1LL;
    case 5uLL:
      sub_100F32130((__n128 *)a1, (__n128 *)(a1 + 24), (__n128 *)(a1 + 48), (__n128 *)(a1 + 72), (__n128 *)(a2 - 24));
      return 1LL;
    default:
      __int128 v10 = (float *)(a1 + 48);
      sub_100F31AF8((__int128 *)a1, (__int128 *)(a1 + 24), (__int128 *)(a1 + 48));
      uint64_t v11 = a1 + 72;
      if (a1 + 72 == a2) {
        return 1LL;
      }
      uint64_t v12 = 0LL;
      int v13 = 0;
      break;
  }

  while (1)
  {
    float v14 = *(float *)v11;
    if (*(float *)v11 < *v10)
    {
      __int128 v18 = *(_OWORD *)(v11 + 4);
      int v19 = *(_DWORD *)(v11 + 20);
      uint64_t v15 = v12;
      while (1)
      {
        uint64_t v16 = a1 + v15;
        *(_OWORD *)(v16 + 72) = *(_OWORD *)(a1 + v15 + 48);
        *(void *)(v16 + 8_Block_object_dispose((const void *)(v1 - 128), 8) = *(void *)(a1 + v15 + 64);
        if (v15 == -48) {
          break;
        }
        v15 -= 24LL;
        if (v14 >= *(float *)(v16 + 24))
        {
          uint64_t v17 = a1 + v15 + 72;
          goto LABEL_12;
        }
      }

      uint64_t v17 = a1;
LABEL_12:
      *(float *)uint64_t v17 = v14;
      *(_OWORD *)(v17 + 4) = v18;
      *(_DWORD *)(v17 + 2sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v19;
      if (++v13 == 8) {
        return v11 + 24 == a2;
      }
    }

    __int128 v10 = (float *)v11;
    v12 += 24LL;
    v11 += 24LL;
    if (v11 == a2) {
      return 1LL;
    }
  }

__n128 sub_100F32060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  result.n128_u32[0] = *(_DWORD *)a4;
  if (*(float *)a4 < *(float *)a3)
  {
    uint64_t v9 = *(void *)(a3 + 16);
    __n128 result = *(__n128 *)a3;
    uint64_t v10 = *(void *)(a4 + 16);
    *(_OWORD *)a3 = *(_OWORD *)a4;
    *(void *)(a3 + 16) = v10;
    *(__n128 *)a4 = result;
    *(void *)(a4 + 16) = v9;
    result.n128_u32[0] = *(_DWORD *)a3;
    if (*(float *)a3 < *(float *)a2)
    {
      uint64_t v11 = *(void *)(a2 + 16);
      __n128 result = *(__n128 *)a2;
      uint64_t v12 = *(void *)(a3 + 16);
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *(void *)(a2 + 16) = v12;
      *(__n128 *)a3 = result;
      *(void *)(a3 + 16) = v11;
      result.n128_u32[0] = *(_DWORD *)a2;
      if (*(float *)a2 < *(float *)a1)
      {
        uint64_t v13 = *(void *)(a1 + 16);
        __n128 result = *(__n128 *)a1;
        uint64_t v14 = *(void *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(void *)(a1 + 16) = v14;
        *(__n128 *)a2 = result;
        *(void *)(a2 + 16) = v13;
      }
    }
  }

  return result;
}

__n128 sub_100F32130(__n128 *a1, __n128 *a2, __n128 *a3, __n128 *a4, __n128 *a5)
{
  __n128 result = sub_100F32060((uint64_t)a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)a4);
  result.n128_u32[0] = a5->n128_u32[0];
  if (a5->n128_f32[0] < a4->n128_f32[0])
  {
    unint64_t v11 = a4[1].n128_u64[0];
    __n128 result = *a4;
    unint64_t v12 = a5[1].n128_u64[0];
    *a4 = *a5;
    a4[1].n128_u64[0] = v12;
    *a5 = result;
    a5[1].n128_u64[0] = v11;
    result.n128_u32[0] = a4->n128_u32[0];
    if (a4->n128_f32[0] < a3->n128_f32[0])
    {
      unint64_t v13 = a3[1].n128_u64[0];
      __n128 result = *a3;
      unint64_t v14 = a4[1].n128_u64[0];
      *a3 = *a4;
      a3[1].n128_u64[0] = v14;
      *a4 = result;
      a4[1].n128_u64[0] = v13;
      result.n128_u32[0] = a3->n128_u32[0];
      if (a3->n128_f32[0] < a2->n128_f32[0])
      {
        unint64_t v15 = a2[1].n128_u64[0];
        __n128 result = *a2;
        unint64_t v16 = a3[1].n128_u64[0];
        *a2 = *a3;
        a2[1].n128_u64[0] = v16;
        *a3 = result;
        a3[1].n128_u64[0] = v15;
        result.n128_u32[0] = a2->n128_u32[0];
        if (a2->n128_f32[0] < a1->n128_f32[0])
        {
          unint64_t v17 = a1[1].n128_u64[0];
          __n128 result = *a1;
          unint64_t v18 = a2[1].n128_u64[0];
          *a1 = *a2;
          a1[1].n128_u64[0] = v18;
          *a2 = result;
          a2[1].n128_u64[0] = v17;
        }
      }
    }
  }

  return result;
}

__n128 *sub_100F3223C(uint64_t a1, __n128 *a2, __n128 *a3, uint64_t a4, __n128 a5)
{
  if ((__n128 *)a1 != a2)
  {
    uint64_t v7 = a2;
    uint64_t v9 = (uint64_t)a2 - a1;
    uint64_t v10 = ((uint64_t)a2 - a1) / 24;
    if ((uint64_t)a2 - a1 >= 25)
    {
      unint64_t v11 = (unint64_t)(v10 - 2) >> 1;
      unint64_t v12 = v11 + 1;
      unint64_t v13 = (__int128 *)(a1 + 24 * v11);
      do
      {
        a5 = sub_100F32454(a1, a5, a4, v10, v13);
        unint64_t v13 = (__int128 *)((char *)v13 - 24);
        --v12;
      }

      while (v12);
    }

    unint64_t v14 = v7;
    if (v7 != a3)
    {
      unint64_t v15 = v7;
      do
      {
        if (v15->n128_f32[0] < *(float *)a1)
        {
          unint64_t v16 = v15[1].n128_u64[0];
          __n128 v17 = *v15;
          unint64_t v18 = *(void *)(a1 + 16);
          *unint64_t v15 = *(__n128 *)a1;
          v15[1].n128_u64[0] = v18;
          *(__n128 *)a1 = v17;
          *(void *)(a1 + 16) = v16;
          sub_100F32454(a1, v17, a4, v10, (__int128 *)a1);
        }

        unint64_t v15 = (__n128 *)((char *)v15 + 24);
      }

      while (v15 != a3);
      unint64_t v14 = a3;
    }

    if (v9 >= 25)
    {
      int64_t v19 = v9 / 0x18uLL;
      do
      {
        uint64_t v20 = 0LL;
        __n128 v29 = *(__n128 *)a1;
        unint64_t v30 = *(void *)(a1 + 16);
        uint64_t v21 = a1;
        do
        {
          uint64_t v22 = v21;
          v21 += 24 * v20 + 24;
          uint64_t v23 = 2 * v20;
          uint64_t v20 = (2 * v20) | 1;
          int64_t v24 = v23 + 2;
          if (v24 < v19 && *(float *)v21 < *(float *)(v21 + 24))
          {
            v21 += 24LL;
            uint64_t v20 = v24;
          }

          __int128 v25 = *(_OWORD *)v21;
          *(void *)(v22 + 16) = *(void *)(v21 + 16);
          *(_OWORD *)uint64_t v22 = v25;
        }

        while (v20 <= (uint64_t)((unint64_t)(v19 - 2) >> 1));
        uint64_t v7 = (__n128 *)((char *)v7 - 24);
        if ((__n128 *)v21 == v7)
        {
          *(void *)(v21 + 16) = v30;
          *(__n128 *)uint64_t v21 = v29;
        }

        else
        {
          __n128 v26 = *v7;
          *(void *)(v21 + 16) = v7[1].n128_u64[0];
          *(__n128 *)uint64_t v21 = v26;
          __n128 *v7 = v29;
          v7[1].n128_u64[0] = v30;
          sub_100F3259C(a1, v21 + 24, v29, a4, 0xAAAAAAAAAAAAAAABLL * ((v21 + 24 - a1) >> 3));
        }
      }

      while (v19-- > 2);
    }

    return v14;
  }

  return a3;
}

__n128 sub_100F32454(uint64_t a1, __n128 result, uint64_t a3, uint64_t a4, __int128 *a5)
{
  if (a4 >= 2)
  {
    int64_t v5 = (unint64_t)(a4 - 2) >> 1;
    if (v5 >= (uint64_t)(0xAAAAAAAAAAAAAAABLL * (((uint64_t)a5 - a1) >> 3)))
    {
      uint64_t v6 = (0x5555555555555556LL * (((uint64_t)a5 - a1) >> 3)) | 1;
      uint64_t v7 = (__int128 *)(a1 + 24 * v6);
      if (0x5555555555555556LL * (((uint64_t)a5 - a1) >> 3) + 2 < a4 && *(float *)v7 < *((float *)v7 + 6))
      {
        uint64_t v7 = (__int128 *)((char *)v7 + 24);
        uint64_t v6 = 0x5555555555555556LL * (((uint64_t)a5 - a1) >> 3) + 2;
      }

      result.n128_u32[0] = *(_DWORD *)a5;
      if (*(float *)v7 >= *(float *)a5)
      {
        __n128 v12 = *(__n128 *)((char *)a5 + 4);
        int v13 = *((_DWORD *)a5 + 5);
        do
        {
          __int128 v8 = a5;
          a5 = v7;
          __int128 v9 = *v7;
          *((void *)v8 + 2) = *((void *)v7 + 2);
          *__int128 v8 = v9;
          if (v5 < v6) {
            break;
          }
          uint64_t v10 = 2 * v6;
          uint64_t v6 = (2 * v6) | 1;
          uint64_t v7 = (__int128 *)(a1 + 24 * v6);
          uint64_t v11 = v10 + 2;
          if (v11 < a4 && *(float *)v7 < *((float *)v7 + 6))
          {
            uint64_t v7 = (__int128 *)((char *)v7 + 24);
            uint64_t v6 = v11;
          }
        }

        while (*(float *)v7 >= result.n128_f32[0]);
        *(_DWORD *)a5 = result.n128_u32[0];
        __n128 result = v12;
        *((_DWORD *)a5 + 5) = v13;
        *(__int128 *)((char *)a5 + 4) = (__int128)v12;
      }
    }
  }

  return result;
}

__n128 sub_100F3259C(uint64_t a1, uint64_t a2, __n128 result, uint64_t a4, uint64_t a5)
{
  unint64_t v5 = a5 - 2;
  if (a5 >= 2)
  {
    unint64_t v6 = v5 >> 1;
    uint64_t v7 = (__int128 *)(a1 + 24 * (v5 >> 1));
    __int128 v8 = (__int128 *)(a2 - 24);
    result.n128_u32[0] = *(_DWORD *)(a2 - 24);
    if (*(float *)v7 < result.n128_f32[0])
    {
      __n128 v11 = *(__n128 *)(a2 - 20);
      int v12 = *(_DWORD *)(a2 - 4);
      do
      {
        __int128 v9 = v8;
        __int128 v8 = v7;
        __int128 v10 = *v7;
        *((void *)v9 + 2) = *((void *)v7 + 2);
        __int128 *v9 = v10;
        if (!v6) {
          break;
        }
        unint64_t v6 = (v6 - 1) >> 1;
        uint64_t v7 = (__int128 *)(a1 + 24 * v6);
      }

      while (*(float *)v7 < result.n128_f32[0]);
      *(_DWORD *)__int128 v8 = result.n128_u32[0];
      __n128 result = v11;
      *(__int128 *)((char *)v8 + 4) = (__int128)v11;
      *((_DWORD *)v8 + 5) = v12;
    }
  }

  return result;
}

uint64_t sub_100F32664(uint64_t a1, const char *a2, _BYTE *a3, double a4, double a5)
{
  uint64_t v11 = a1 + 8;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v56 = a1 + 8;
  (*(void (**)(uint64_t))(v10 + 16))(a1 + 8);
  __int16 v57 = 256;
  sub_100292890(a5);
  double v12 = (a4 + 90.0) * 20.0;
  double v14 = v13 * 20.0;
  int v15 = *(_DWORD *)a1;
  if ((*(_DWORD *)a1 & 0x80000000) == 0)
  {
    int v16 = *(_DWORD *)(a1 + 4);
    if ((v16 & 0x80000000) == 0
      && v14 - (double)(v16 + 1) < 0.005
      && (double)v16 - v14 < 0.005
      && v12 - (double)(v15 + 1) < 0.005
      && (double)v15 - v12 < 0.005)
    {
      *a3 = 0;
      uint64_t v17 = *(unsigned int *)(a1 + 24);
      goto LABEL_79;
    }
  }

  int v65 = 0;
  __int128 v63 = 0u;
  __int128 v64 = 0u;
  memset(v62, 0, sizeof(v62));
  __int128 v66 = 0LL;
  char v67 = 0;
  *a3 = 1;
  if (qword_101934880 != -1) {
    dispatch_once(&qword_101934880, &stru_10188D3D8);
  }
  unint64_t v18 = (os_log_s *)qword_101934888;
  if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
  {
    double v19 = *(double *)&a2;
    if (a2[23] < 0) {
      double v19 = *(double *)a2;
    }
    *(_DWORD *)std::string buf = 136446210;
    double v61 = v19;
    _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEBUG,  "CLSE,getSignalEnvironment,opening,%{public}s",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D3D8);
    }
    double v48 = *(double *)&a2;
    if (a2[23] < 0) {
      double v48 = *(double *)a2;
    }
    int v58 = 136446210;
    double v59 = v48;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "CLSE,getSignalEnvironment,opening,%{public}s",  &v58,  12);
    float v50 = (uint8_t *)v49;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLSignalEnvironmentProvider_Type::SignalEnvironmentType CLCoarseSignalEnvironmentDataManager::getSignalEnvironment (double, double, std::string, BOOL &)",  "%s\n",  v49);
    if (v50 != buf) {
      free(v50);
    }
  }

  uint64_t v20 = a2;
  if (a2[23] < 0) {
    uint64_t v20 = *(const char **)a2;
  }
  __int128 v66 = fopen(v20, "rb");
  if (!v66)
  {
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D3D8);
    }
    __int128 v27 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_INFO))
    {
      double v28 = *(double *)&a2;
      if (a2[23] < 0) {
        double v28 = *(double *)a2;
      }
      *(_DWORD *)std::string buf = 136446210;
      double v61 = v28;
      _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_INFO,  "#Warning,CLSE,getSignalEnvironment,could not open,%{public}s",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_76;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D3D8);
    }
    if (a2[23] < 0) {
      a2 = *(const char **)a2;
    }
    int v58 = 136446210;
    double v59 = *(double *)&a2;
    LODWORD(v54) = 12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  1LL,  "#Warning,CLSE,getSignalEnvironment,could not open,%{public}s",  &v58,  v54);
    unint64_t v30 = (uint8_t *)v29;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLSignalEnvironmentProvider_Type::SignalEnvironmentType CLCoarseSignalEnvironmentDataManager::getSignalEnvironment (double, double, std::string, BOOL &)",  "%s\n",  v29);
    goto LABEL_112;
  }

  if (!sub_100F334B8((uint64_t)v62))
  {
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D3D8);
    }
    float v31 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_INFO))
    {
      double v32 = *(double *)&a2;
      if (a2[23] < 0) {
        double v32 = *(double *)a2;
      }
      *(_DWORD *)std::string buf = 136446210;
      double v61 = v32;
      _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_INFO,  "#Warning,CLSE,getSignalEnvironment,could not read,%{public}s",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_76;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D3D8);
    }
    if (a2[23] < 0) {
      a2 = *(const char **)a2;
    }
    int v58 = 136446210;
    double v59 = *(double *)&a2;
    LODWORD(v54) = 12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  1LL,  "#Warning,CLSE,getSignalEnvironment,could not read,%{public}s",  &v58,  v54);
    unint64_t v30 = (uint8_t *)v33;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLSignalEnvironmentProvider_Type::SignalEnvironmentType CLCoarseSignalEnvironmentDataManager::getSignalEnvironment (double, double, std::string, BOOL &)",  "%s\n",  v33);
    goto LABEL_112;
  }

  double Current = CFAbsoluteTimeGetCurrent();
  double v22 = *(double *)&v64;
  unsigned int v23 = DWORD2(v64);
  if (Current <= v22 + (double)v23 + (double)(random() % 86400))
  {
    *a3 = 0;
  }

  else
  {
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D3D8);
    }
    int64_t v24 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEBUG,  "CLSE,getSignalEnvironment,file has expired - redownload",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_10188D3D8);
      }
      LOWORD(v5_Block_object_dispose((const void *)(v1 - 128), 8) = 0;
      LODWORD(v54) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "CLSE,getSignalEnvironment,file has expired - redownload",  &v58,  v54);
      __n128 v26 = (uint8_t *)v25;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLSignalEnvironmentProvider_Type::SignalEnvironmentType CLCoarseSignalEnvironmentDataManager::getSignalEnvironme nt(double, double, std::string, BOOL &)",  "%s\n",  v25);
      if (v26 != buf) {
        free(v26);
      }
    }
  }

  if (BYTE8(v63) != 1)
  {
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D3D8);
    }
    float v41 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_DEBUG,  "CLSE,getSignalEnvironment,file version does not match expected",  buf,  2u);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_76;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D3D8);
    }
    LOWORD(v5_Block_object_dispose((const void *)(v1 - 128), 8) = 0;
    LODWORD(v54) = 2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "CLSE,getSignalEnvironment,file version does not match expected",  &v58,  v54);
    unint64_t v30 = (uint8_t *)v51;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLSignalEnvironmentProvider_Type::SignalEnvironmentType CLCoarseSignalEnvironmentDataManager::getSignalEnvironment (double, double, std::string, BOOL &)",  "%s\n",  v51);
    goto LABEL_112;
  }

  int v34 = (int)v14;
  int v35 = (int)v12;
  if ((double)SBYTE10(v63) > a4 || (double)SBYTE11(v63) <= a4)
  {
    *(_DWORD *)a1 = v35;
    *(_DWORD *)(a1 + 4) = v34;
    *(_DWORD *)(a1 + 24) = 0;
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D3D8);
    }
    int v43 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::string buf = 134283521;
      double v61 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_INFO,  "#Warning,CLSE,getSignalEnvironment,latitude,%{private}.9lf,out of range",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_10188D3D8);
      }
      int v58 = 134283521;
      double v59 = a4;
      LODWORD(v54) = 12;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  1LL,  "#Warning,CLSE,getSignalEnvironment,latitude,%{private}.9lf,out of range",  &v58,  v54);
      uint64_t v53 = (uint8_t *)v52;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLSignalEnvironmentProvider_Type::SignalEnvironmentType CLCoarseSignalEnvironmentDataManager::getSignalEnvironme nt(double, double, std::string, BOOL &)",  "%s\n",  v52);
      if (v53 != buf) {
        free(v53);
      }
    }

    uint64_t v17 = *(unsigned int *)(a1 + 24);
    goto LABEL_77;
  }

  int v36 = v34 + 7200 * (v35 - 20 * SBYTE10(v63) - 1800);
  unsigned __int8 __ptr = 0;
  if ((v36 / 2) >= HIDWORD(v64))
  {
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D3D8);
    }
    __int128 v44 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::string buf = 67240192;
      LODWORD(v61) = v36 / 2;
      _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_INFO,  "#Warning,CLSE,getSignalEnvironment,byte index,%{public}d,is larger than the data available in the coarse signal environment binary file",  buf,  8u);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_76;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D3D8);
    }
    int v58 = 67240192;
    LODWORD(v59) = v36 / 2;
    LODWORD(v54) = 8;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  1LL,  "#Warning,CLSE,getSignalEnvironment,byte index,%{public}d,is larger than the data available in the coarse signal en vironment binary file",  &v58,  v54);
    unint64_t v30 = (uint8_t *)v45;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLSignalEnvironmentProvider_Type::SignalEnvironmentType CLCoarseSignalEnvironmentDataManager::getSignalEnvironment (double, double, std::string, BOOL &)",  "%s\n",  v45);
    goto LABEL_112;
  }

  int v37 = v66;
  fseek(v66, v36 / 2, 1);
  if (fread(&__ptr, 1uLL, 1uLL, v37) != 1)
  {
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D3D8);
    }
    float32x2_t v46 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v46,  OS_LOG_TYPE_INFO,  "#Warning,CLSE,getSignalEnvironment,invalid coarse signal environment file - unable to get data byte",  buf,  2u);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_76;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D3D8);
    }
    LOWORD(v5_Block_object_dispose((const void *)(v1 - 128), 8) = 0;
    LODWORD(v54) = 2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  1LL,  "#Warning,CLSE,getSignalEnvironment,invalid coarse signal environment file - unable to get data byte",  &v58,  v54);
    unint64_t v30 = (uint8_t *)v47;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLSignalEnvironmentProvider_Type::SignalEnvironmentType CLCoarseSignalEnvironmentDataManager::getSignalEnvironment (double, double, std::string, BOOL &)",  "%s\n",  v47);
    goto LABEL_112;
  }

  unsigned int v38 = __ptr >> 4;
  if ((v34 & 1) == 0) {
    unsigned int v38 = __ptr & 0xF;
  }
  if (v38 >= 7 || ((0x4Fu >> v38) & 1) == 0)
  {
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D3D8);
    }
    float v39 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_ERROR,  "#Error,CLSE,getSignalEnvironment,unexpected case,potential file corruption",  buf,  2u);
    }

    if (!sub_1002921D0(115, 0)) {
      goto LABEL_76;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D3D8);
    }
    LOWORD(v5_Block_object_dispose((const void *)(v1 - 128), 8) = 0;
    LODWORD(v54) = 2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  16LL,  "#Error,CLSE,getSignalEnvironment,unexpected case,potential file corruption",  &v58,  v54);
    unint64_t v30 = (uint8_t *)v40;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "CLSignalEnvironmentProvider_Type::SignalEnvironmentType CLCoarseSignalEnvironmentDataManager::getSignalEnvironment (double, double, std::string, BOOL &)",  "%s\n",  v40);
LABEL_112:
    if (v30 != buf) {
      free(v30);
    }
LABEL_76:
    uint64_t v17 = 0LL;
    goto LABEL_77;
  }

  uint64_t v17 = dword_101365838[v38];
  *(_DWORD *)(a1 + 24) = v17;
  *(_DWORD *)a1 = v35;
  *(_DWORD *)(a1 + 4) = v34;
LABEL_77:
  if (v66) {
    fclose(v66);
  }
LABEL_79:
  (*(void (**)(uint64_t))(*(void *)v11 + 24LL))(v11);
  return v17;
}

void sub_100F33454(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  unint64_t v6 = *(FILE **)(v4 + 136);
  if (v6) {
    fclose(v6);
  }
  sub_1011C52D0((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_100F334B8(uint64_t a1)
{
  if (!*(void *)(a1 + 136)) {
    return 0LL;
  }
  if (feof(*(FILE **)(a1 + 136))) {
    return 0LL;
  }
  unsigned int v3 = 0;
  while (1)
  {
    char v25 = 0;
    if (fread(&v25, 1uLL, 1uLL, *(FILE **)(a1 + 136)) != 1) {
      return 0LL;
    }
    if (v25 != 67) {
      goto LABEL_13;
    }
    *(_BYTE *)a1 = 67;
    v4.i32[0] = *(_DWORD *)a1;
    if (fseek(*(FILE **)(a1 + 136), -4LL, 1))
    {
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_10188D3D8);
      }
      double v12 = (os_log_s *)qword_101934888;
      if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_INFO))
      {
        LOWORD(v32) = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_INFO,  "#Warning,CLSE,readSignalEnvHelper,fseek returned non-zero",  (uint8_t *)&v32,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&v32, 0x65CuLL);
        if (qword_101934880 != -1) {
          dispatch_once(&qword_101934880, &stru_10188D3D8);
        }
        LOWORD(v26) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  &v32,  1628LL,  &_mh_execute_header,  qword_101934888,  1LL,  "#Warning,CLSE,readSignalEnvHelper,fseek returned non-zero",  &v26,  2);
LABEL_125:
        unsigned int v23 = (int *)v11;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLCoarseSignalEnvironmentDataManager::readSignalEnvHelper(SignalEnvironment &)",  "%s\n",  v11);
        if (v23 != &v32) {
          free(v23);
        }
        return 0LL;
      }

      return 0LL;
    }

void sub_100F342BC(id a1)
{
  qword_101934888 = (uint64_t)os_log_create("com.apple.locationd.Position", "Gnss");
}

uint64_t sub_100F342E8(uint64_t result, uint64_t a2)
{
  for (uint64_t i = 0LL; i != 448; i += 64LL)
  {
    uint64_t v3 = result + i;
    *(void *)uint64_t v3 = 0LL;
    *(_DWORD *)(v3 + _Block_object_dispose((const void *)(v1 - 128), 8) = 0;
    *(_OWORD *)(v3 + 16) = 0uLL;
    *(_OWORD *)(v3 + 32) = 0uLL;
    *(_OWORD *)(v3 + 41) = 0uLL;
  }

  uint64_t v4 = 0LL;
  *(void *)(result + 44_Block_object_dispose((const void *)(v1 - 128), 8) = a2;
  int v5 = &qword_101365870;
  do
  {
    uint64_t v6 = result + v4;
    *(_DWORD *)(v6 + _Block_object_dispose((const void *)(v1 - 128), 8) = 0;
    *(_OWORD *)(v6 + 16) = 0uLL;
    *(_OWORD *)(v6 + 32) = 0uLL;
    *(_OWORD *)(v6 + 41) = 0uLL;
    uint64_t v7 = *v5++;
    *(void *)uint64_t v6 = v7;
    *(_OWORD *)(v6 + sub_10004AD90(v3 - 40) = xmmword_101365860;
    v4 += 64LL;
  }

  while (v4 != 448);
  return result;
}

double sub_100F3435C(uint64_t a1, void *a2, uint64_t a3)
{
  if (!a3) {
    return 0.0;
  }
  uint64_t v3 = (int *)(*a2 + 8LL);
  double result = 0.0;
  double v5 = 0.0;
  do
  {
    uint64_t v6 = *v3;
    v3 += 6;
    uint64_t v7 = a1 + (v6 << 6);
    if (*(_BYTE *)(v7 + 56)) {
      __int128 v8 = (double *)(v7 + 32);
    }
    else {
      __int128 v8 = (double *)v7;
    }
    double result = result + *v8;
    double v5 = v5 + *(double *)(v7 + 48);
    --a3;
  }

  while (a3);
  return result;
}

double sub_100F343B0(uint64_t a1, double a2)
{
  double v7 = a2;
  (*(void (**)(void **__return_ptr, void, double *))(**(void **)(a1 + 448) + 64LL))( &__p,  *(void *)(a1 + 448),  &v7);
  double v3 = sub_100F3435C(a1, &__p, 0xAAAAAAAAAAAAAAABLL * ((v6 - (_BYTE *)__p) >> 3));
  if (__p)
  {
    uint64_t v6 = __p;
    operator delete(__p);
  }

  return v3;
}

double sub_100F3443C(uint64_t a1, int a2)
{
  uint64_t v2 = a1 + ((uint64_t)a2 << 6);
  if (*(_BYTE *)(v2 + 56)) {
    uint64_t v3 = v2 + 32;
  }
  else {
    uint64_t v3 = a1 + ((uint64_t)a2 << 6);
  }
  return *(double *)v3;
}

void sub_100F34460(uint64_t a1, uint64_t a2)
{
  if ((_DWORD)a2 == 6)
  {
    *(void *)(a1 + 384) = 0LL;
    *(_DWORD *)(a1 + 392) = 0;
    *(_OWORD *)(a1 + 40sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = 0u;
    *(_OWORD *)(a1 + 416) = 0u;
    *(_OWORD *)(a1 + 425) = 0u;
  }

  else
  {
    int v3 = a2;
    (*(void (**)(double **__return_ptr, void, uint64_t, uint64_t))(**(void **)(a1 + 448) + 16LL))( &v11,  *(void *)(a1 + 448),  a2,  8LL);
    uint64_t v4 = v11;
    double v5 = v12;
    if (v11 == v12)
    {
      int v6 = 0;
      double v7 = 0.0;
    }

    else
    {
      int v6 = 0;
      double v7 = 0.0;
      __int128 v8 = v11;
      do
      {
        double v7 = v7 + *v8;
        v6 += *((_DWORD *)v8 + 2);
        v8 += 2;
      }

      while (v8 != v12);
    }

    uint64_t v9 = a1 + ((uint64_t)v3 << 6);
    *(_DWORD *)(v9 + 24) = v6;
    *(double *)(v9 + 16) = v7;
    if (v6 <= 0) {
      double v10 = *(double *)&qword_101365870[v3];
    }
    else {
      double v10 = v7 / (double)v6;
    }
    *(double *)uint64_t v9 = v10;
    *(_DWORD *)(a1 + ((uint64_t)v3 << 6) + _Block_object_dispose((const void *)(v1 - 128), 8) = (unint64_t)((char *)v5 - (char *)v4) >> 4;
    if (v4)
    {
      double v12 = v4;
      operator delete(v4);
    }
  }

uint64_t sub_100F34554(uint64_t result, int a2)
{
  uint64_t v2 = 0LL;
  double v3 = 0.0;
  double v4 = 0.0;
  do
  {
    double v5 = (double *)((char *)&unk_1013658A8 + v2);
    if (*(_DWORD *)((char *)&unk_1013658A8 + v2 + 4) == a2)
    {
      uint64_t v6 = result + ((uint64_t)*(int *)v5 << 6);
      double v7 = *(double *)v6;
      LODWORD(v6) = *(_DWORD *)(v6 + 8);
      double v8 = (double)(int)v6;
      double v9 = v5[2] + v5[1] * v7;
      double v3 = v3 + v9 * v8;
      double v4 = v4 + v8;
    }

    v2 += 24LL;
  }

  while (v2 != 288);
  if (v4 >= 2.0)
  {
    uint64_t v10 = result + ((uint64_t)a2 << 6);
    *(double *)(v10 + 32) = v3 / v4;
    *(_DWORD *)(v10 + 2_Block_object_dispose((const void *)(v1 - 128), 8) = (int)v4;
  }

  return result;
}

void sub_100F345DC(_OWORD *a1)
{
  uint64_t v2 = 0LL;
  double v3 = qword_101365870;
  do
  {
    double v4 = &a1[v2];
    *((_DWORD *)v4 + 2) = 0;
    v4[1] = 0uLL;
    _DWORD v4[2] = 0uLL;
    *(_OWORD *)((char *)v4 + 41) = 0uLL;
    uint64_t v5 = *(void *)v3++;
    *(void *)double v4 = v5;
    *(_OWORD *)((char *)v4 + sub_10004AD90(v3 - 40) = xmmword_101365860;
    v2 += 4LL;
  }

  while (v2 != 28);
  for (uint64_t i = 0LL; i != 7; ++i)
    sub_100F34460((uint64_t)a1, i);
  for (uint64_t j = 0LL; j != 4; ++j)
  {
    int v8 = dword_1013659C8[j];
    sub_100F34554((uint64_t)a1, v8);
    double v9 = (int *)&a1[4 * (uint64_t)v8];
    BOOL v10 = v9[7] >= 2 && v9[2] < 2;
    *((_BYTE *)v9 + 56) = v10;
  }

  uint64_t v11 = 0LL;
  __int128 v12 = a1[21];
  *a1 = a1[20];
  a1[1] = v12;
  a1[2] = a1[22];
  *(_OWORD *)((char *)a1 + 41) = *(_OWORD *)((char *)a1 + 361);
  do
    sub_100F346E8((uint64_t)a1, v11++);
  while (v11 != 7);
}

double sub_100F346E8(uint64_t a1, int a2)
{
  double result = 0.0;
  uint64_t v3 = a1 + ((uint64_t)a2 << 6);
  *(_OWORD *)(v3 + sub_10004AD90(v3 - 40) = xmmword_101365860;
  uint64_t v4 = v3 + 40;
  if (*(_BYTE *)(v4 + 16))
  {
    uint64_t v5 = 0LL;
    while (dword_101365E88[v5] != a2)
    {
      v5 += 6LL;
      if (v5 == 24) {
        return result;
      }
    }

    int v8 = &dword_101365E88[v5];
    *(void *)uint64_t v4 = *((void *)v8 + 1);
    double v9 = (double *)(v8 + 4);
  }

  else
  {
    uint64_t v6 = 0LL;
    while (1)
    {
      if (dword_1013659D8[v6] == a2)
      {
        unint64_t v7 = *(int *)(a1 + ((uint64_t)a2 << 6) + 8);
        if (*(void *)&dword_1013659D8[v6 + 2] <= v7 && *(void *)&dword_1013659D8[v6 + 4] > v7) {
          break;
        }
      }

      v6 += 10LL;
      if (v6 == 300) {
        return result;
      }
    }

    BOOL v10 = &dword_1013659D8[v6];
    *(void *)uint64_t v4 = *((void *)v10 + 3);
    double v9 = (double *)(v10 + 8);
  }

  double result = *v9;
  *(double *)(v4 + _Block_object_dispose((const void *)(v1 - 128), 8) = *v9;
  return result;
}

void sub_100F34A30(void *a1, unint64_t *a2, double a3)
{
  double v42 = a3;
  uint64_t v5 = a1[5];
  if (!v5)
  {
    sub_100F352B0(a1, a2, (unint64_t *)&v42);
    return;
  }

  unint64_t v7 = v5 + a1[4] - 1;
  uint64_t v8 = *(void *)(a1[1] + 8 * (v7 / 0xAA));
  unint64_t v9 = v7 % 0xAA;
  if (!sub_1007EC0B0((void *)(v8 + 24 * (v7 % 0xAA)), a2))
  {
    uint64_t v10 = v8 + 24 * v9;
    double v12 = *(double *)(v10 + 8);
    uint64_t v11 = (std::string::size_type *)(v10 + 8);
    double v13 = v12;
    if (v12 <= a3)
    {
      *(double *)(v8 + 24 * v9 + 16) = a3;
      if (qword_101934850 != -1)
      {
        double v41 = v13;
        dispatch_once(&qword_101934850, &stru_10188D3F8);
        double v13 = v41;
      }

      double v22 = a3 - v13;
      unsigned int v23 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
      {
        sub_1007EC360(&buf);
        int64_t v24 = (buf.__r_.__value_.__s.__size_ & 0x80u) == 0 ? &buf : (std::string *)buf.__r_.__value_.__r.__words[0];
        LODWORD(__p.__r_.__value_.__l.__data_) = 136380931;
        *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + 4) = (std::string::size_type)v24;
        WORD2(__p.__r_.__value_.__r.__words[1]) = 2049;
        *(double *)((char *)&__p.__r_.__value_.__r.__words[1] + 6) = v22;
        _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEFAULT,  "AssociatedApHistory, previous associated AP %{private}s lasted for %{private}.1fs",  (uint8_t *)&__p,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_10188D3F8);
        }
        uint64_t v34 = qword_101934858;
        sub_1007EC360(&__p);
        if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          p_p = &__p;
        }
        else {
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        LODWORD(v43.__r_.__value_.__l.__data_) = 136380931;
        *(std::string::size_type *)((char *)v43.__r_.__value_.__r.__words + 4) = (std::string::size_type)p_p;
        WORD2(v43.__r_.__value_.__r.__words[1]) = 2049;
        *(double *)((char *)&v43.__r_.__value_.__r.__words[1] + 6) = v22;
        __int16 v36 = (std::string *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v34,  0LL,  "AssociatedApHistory, previous associated AP %{private}s lasted for %{private}.1fs",  &v43,  22);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLAssociatedApHistory::receiveAssociatedApNotification(const CLMacAddress &, const CFAbsoluteTime)",  "%s\n",  (const char *)v36);
        if (v36 != &buf) {
          free(v36);
        }
      }

      goto LABEL_55;
    }

    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10188D3F8);
    }
    double v14 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_ERROR))
    {
      double v15 = *(double *)v11;
      LODWORD(buf.__r_.__value_.__l.__data_) = 134283777;
      *(double *)((char *)buf.__r_.__value_.__r.__words + 4) = a3;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2049;
      *(double *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v15;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_ERROR,  "AssociatedApHistory, warning, timestamp out of order, given timestamp %{private}.4f is less than last interval s tart timestamp, %{private}.4f",  (uint8_t *)&buf,  0x16u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_10188D3F8);
      }
      std::string::size_type v32 = *v11;
      LODWORD(__p.__r_.__value_.__l.__data_) = 134283777;
      *(double *)((char *)__p.__r_.__value_.__r.__words + 4) = a3;
      WORD2(__p.__r_.__value_.__r.__words[1]) = 2049;
      *(std::string::size_type *)((char *)&__p.__r_.__value_.__r.__words[1] + 6) = v32;
      uint64_t v33 = (std::string *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934858,  16LL,  "AssociatedApHistory, warning, timestamp out of order, given timestamp %{private}.4f is less than last interval start timestamp, %{private}.4f",  &__p,  22);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLAssociatedApHistory::receiveAssociatedApNotification(const CLMacAddress &, const CFAbsoluteTime)",  "%s\n",  (const char *)v33);
      if (v33 != &buf) {
        free(v33);
      }
    }

    double v16 = *(double *)v11 - a3;
    if (v16 < 300.0)
    {
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_10188D3F8);
      }
      uint64_t v17 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_ERROR))
      {
        sub_1007EC360(&__p);
        unint64_t v18 = (__p.__r_.__value_.__s.__size_ & 0x80u) == 0 ? &__p : (std::string *)__p.__r_.__value_.__r.__words[0];
        LODWORD(buf.__r_.__value_.__l.__data_) = 136381187;
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v18;
        WORD2(buf.__r_.__value_.__r.__words[1]) = 2049;
        *(double *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v16;
        HIWORD(buf.__r_.__value_.__r.__words[2]) = 2049;
        uint64_t v47 = 0x4072C00000000000LL;
        _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_ERROR,  "AssociatedApHistory, ignoring associated AP %{private}s as delta %{private}.1f is less than %{private}.1f",  (uint8_t *)&buf,  0x20u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_10188D3F8);
        }
        uint64_t v19 = qword_101934858;
        sub_1007EC360(&v43);
        if ((v43.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          uint64_t v20 = &v43;
        }
        else {
          uint64_t v20 = (std::string *)v43.__r_.__value_.__r.__words[0];
        }
        LODWORD(__p.__r_.__value_.__l.__data_) = 136381187;
        *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + 4) = (std::string::size_type)v20;
        WORD2(__p.__r_.__value_.__r.__words[1]) = 2049;
        *(double *)((char *)&__p.__r_.__value_.__r.__words[1] + 6) = v16;
        HIWORD(__p.__r_.__value_.__r.__words[2]) = 2049;
        uint64_t v45 = 0x4072C00000000000LL;
        LODWORD(vsub_10004AD90(v3 - 40) = 32;
        uint64_t v21 = (std::string *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v19,  16LL,  "AssociatedApHistory, ignoring associated AP %{private}s as delta %{private}.1f is less th an %{private}.1f",  &__p,  v40);
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLAssociatedApHistory::receiveAssociatedApNotification(const CLMacAddress &, const CFAbsoluteTime)",  "%s\n",  (const char *)v21);
        if (v21 != &buf) {
          free(v21);
        }
      }

      return;
    }

    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10188D3F8);
    }
    char v25 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_ERROR))
    {
      sub_1007EC360(&__p);
      int v26 = (__p.__r_.__value_.__s.__size_ & 0x80u) == 0 ? &__p : (std::string *)__p.__r_.__value_.__r.__words[0];
      LODWORD(buf.__r_.__value_.__l.__data_) = 136381187;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v26;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2049;
      *(double *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v16;
      HIWORD(buf.__r_.__value_.__r.__words[2]) = 2049;
      uint64_t v47 = 0x4072C00000000000LL;
      _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_ERROR,  "AssociatedApHistory, resetting history and adding associated AP %{private}s as delta %{private}.1f is no less th an %{private}.1f",  (uint8_t *)&buf,  0x20u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_10188D3F8);
      }
      uint64_t v37 = qword_101934858;
      sub_1007EC360(&v43);
      if ((v43.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        unsigned int v38 = &v43;
      }
      else {
        unsigned int v38 = (std::string *)v43.__r_.__value_.__r.__words[0];
      }
      LODWORD(__p.__r_.__value_.__l.__data_) = 136381187;
      *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + 4) = (std::string::size_type)v38;
      WORD2(__p.__r_.__value_.__r.__words[1]) = 2049;
      *(double *)((char *)&__p.__r_.__value_.__r.__words[1] + 6) = v16;
      HIWORD(__p.__r_.__value_.__r.__words[2]) = 2049;
      uint64_t v45 = 0x4072C00000000000LL;
      LODWORD(vsub_10004AD90(v3 - 40) = 32;
      float v39 = (std::string *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v37,  16LL,  "AssociatedApHistory, resetting history and adding associated AP %{private}s as delta %{priv ate}.1f is no less than %{private}.1f",  &__p,  v40);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLAssociatedApHistory::receiveAssociatedApNotification(const CLMacAddress &, const CFAbsoluteTime)",  "%s\n",  (const char *)v39);
      if (v39 != &buf) {
        free(v39);
      }
    }

    uint64_t v27 = (void **)a1[1];
    uint64_t v28 = a1[2];
    a1[5] = 0LL;
    unint64_t v29 = v28 - (void)v27;
    if (v29 >= 0x11)
    {
      do
      {
        operator delete(*v27);
        uint64_t v30 = a1[2];
        uint64_t v27 = (void **)(a1[1] + 8LL);
        a1[1] = v27;
        unint64_t v29 = v30 - (void)v27;
      }

      while (v29 > 0x10);
    }

    if (v29 >> 3 == 1)
    {
      uint64_t v31 = 85LL;
    }

    else
    {
      if (v29 >> 3 != 2)
      {
LABEL_55:
        sub_100F352B0(a1, a2, (unint64_t *)&v42);
        return;
      }

      uint64_t v31 = 170LL;
    }

    a1[4] = v31;
    goto LABEL_55;
  }

void sub_100F352B0(void *a1, unint64_t *a2, unint64_t *a3)
{
  v7.n128_u64[0] = *a2;
  v7.n128_u64[1] = *a3;
  uint64_t v8 = 0x7FEFFFFFFFFFFFFFLL;
  sub_100F35400(a1, &v7);
  unint64_t v6 = a1[5];
  if (v6 >= 0x15)
  {
    do
    {
      ++a1[4];
      a1[5] = v6 - 1;
      sub_100211164((uint64_t)a1, 1);
      unint64_t v6 = a1[5];
    }

    while (v6 > 0x14);
  }

void sub_100F35340(void *a1, double a2)
{
}

uint64_t sub_100F3534C(void *a1, double *a2)
{
  uint64_t v2 = a1[1];
  if (a1[2] == v2
    || (unint64_t v3 = a1[4],
        uint64_t v4 = (double *)(*(void *)(v2 + 8 * (v3 / 0xAA)) + 24 * (v3 % 0xAA)),
        unint64_t v5 = *(void *)(v2 + 8 * ((a1[5] + v3) / 0xAA)) + 24 * ((a1[5] + v3) % 0xAA),
        v4 == (double *)v5))
  {
    uint64_t v4 = (double *)&qword_10199F5B8;
  }

  else
  {
    unint64_t v6 = (void *)(v2 + 8 * (v3 / 0xAA));
    double v7 = *a2;
    do
    {
      if (v7 < v4[1]) {
        break;
      }
      if (v7 < v4[2]) {
        return *(void *)v4;
      }
      v4 += 3;
      if ((double *)((char *)v4 - *v6) == (double *)4080)
      {
        uint64_t v8 = (double *)v6[1];
        ++v6;
        uint64_t v4 = v8;
      }
    }

    while (v4 != (double *)v5);
    uint64_t v4 = (double *)&qword_10199F5B8;
  }

  return *(void *)v4;
}

__n128 sub_100F35400(void *a1, __n128 *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 170 * ((v4 - v5) >> 3) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0LL;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    sub_100F354D8(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }

  uint64_t v8 = (__n128 *)(*(void *)(v5 + 8 * (v7 / 0xAA)) + 24 * (v7 % 0xAA));
  __n128 result = *a2;
  v8[1].n128_u64[0] = a2[1].n128_u64[0];
  *uint64_t v8 = result;
  ++a1[5];
  return result;
}

void sub_100F354AC(id a1)
{
  qword_101934858 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

void sub_100F354D8(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0xAA;
  unint64_t v4 = v2 - 170;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    unint64_t v7 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    unint64_t v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)uint64_t v8 = v10;
      a1[2] += 8LL;
      return;
    }

    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000071BC(v5, v33);
      uint64_t v35 = &v34[8 * (v33 >> 2)];
      uint64_t v37 = &v34[8 * v36];
      unsigned int v38 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        uint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v40 = 8 * (v39 >> 3);
        double v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)double v41 = v42;
          v41 += 8;
          v40 -= 8LL;
        }

        while (v40);
      }

      goto LABEL_30;
    }

void sub_100F357A0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100F357EC()
{
  uint64_t result = sub_1007EC044();
  qword_10199F5B8 = result;
  return result;
}

void sub_100F35848(id a1)
{
  qword_10199F5C0 = (uint64_t)objc_alloc_init(&OBJC_CLASS___CLPMeta);
  uint64_t v1 = sub_1004F2598();
  sub_1004F58C8(v1, (uint64_t)__p);
  if (v7 >= 0) {
    unint64_t v2 = (char *)__p;
  }
  else {
    unint64_t v2 = (char *)__p[0];
  }
  CFStringRef v3 = sub_1002A6F04(v2);
  if (v7 < 0) {
    operator delete(__p[0]);
  }
  [(id)qword_10199F5C0 setProductId:v3];
  CFRelease(v3);
  sub_1004F2598();
  sub_1004F54FC((uint64_t)__p);
  if (v7 >= 0) {
    unint64_t v4 = (char *)__p;
  }
  else {
    unint64_t v4 = (char *)__p[0];
  }
  CFStringRef v5 = sub_1002A6F04(v4);
  if (v7 < 0) {
    operator delete(__p[0]);
  }
  [(id)qword_10199F5C0 setSoftwareVersion:v5];
  CFRelease(v5);
}

void sub_100F35914( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_100F360C0(unsigned int a1)
{
  if (a1 >= 0xF) {
    unsigned int v1 = 15;
  }
  else {
    unsigned int v1 = a1;
  }
  return dbl_101365EE8[v1];
}

double sub_100F360DC(unsigned int a1)
{
  if (a1 >= 0xF) {
    unsigned int v1 = 15;
  }
  else {
    unsigned int v1 = a1;
  }
  return dbl_101365F68[v1];
}

uint64_t sub_100F360F8(uint64_t a1, void *a2)
{
  uint64_t v4 = a1 + 8;
  *(void *)a1 = off_10188D448;
  *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 128), 8) = a1 + 8;
  *(void *)(a1 + sub_10004AD90(v3 - 40) = 0LL;
  *(void *)(a1 + 4_Block_object_dispose((const void *)(v1 - 128), 8) = 0LL;
  *(void *)(a1 + 56) = 0LL;
  *(void *)(a1 + 16) = a1 + 8;
  *(void *)(a1 + 24) = 0LL;
  *(void *)(a1 + 3sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = 0LL;
  sub_1010DDBC0((void *)(a1 + 64), "clhrseavl.avl");
  *(_BYTE *)(a1 + 8_Block_object_dispose((const void *)(v1 - 128), 8) = 0;
  sub_1002E4C3C(a1 + 96, "clhrse", 1LL, 1LL);
  sub_100382F80(a1 + 112, a2, (uint64_t)sub_100F363D4, a1);
  *(void *)(a1 + 36sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = a2;
  *(void *)(a1 + 36_Block_object_dispose((const void *)(v1 - 128), 8) = 0LL;
  *(_BYTE *)(a1 + 376) = 0;
  *(void *)(a1 + 384) = objc_msgSend(objc_msgSend(a2, "vendor"), "proxyForService:", @"CLWifiService");
  sub_1010DDBC0((void *)(a1 + 392), off_1019928D0);
  sub_1010DDBC0((void *)(a1 + 416), "clhrseavl.avl.gz");
  *(_WORD *)(a1 + 4sub_10004AD90(v3 - 40) = 0;
  *(void *)(a1 + 44_Block_object_dispose((const void *)(v1 - 128), 8) = 0LL;
  *(void *)(a1 + 456) = 0LL;
  sub_100D2D9A4(a1 + 464);
  *(_DWORD *)(a1 + 516) = 0;
  *(_WORD *)(a1 + 52sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = 0;
  *(void *)(a1 + 504) = 0LL;
  *(_WORD *)(a1 + 512) = 0;
  *(_OWORD *)(a1 + 524) = 0u;
  *(_OWORD *)(a1 + 5sub_10004AD90(v3 - 40) = 0u;
  *(_OWORD *)(a1 + 556) = 0u;
  *(_OWORD *)(a1 + 572) = 0u;
  *(_OWORD *)(a1 + 58_Block_object_dispose((const void *)(v1 - 128), 8) = 0u;
  *(_OWORD *)(a1 + 604) = 0u;
  *(_OWORD *)(a1 + 62sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = 0u;
  *(_OWORD *)(a1 + 636) = 0u;
  *(_OWORD *)(a1 + 652) = 0u;
  *(_OWORD *)(a1 + 66_Block_object_dispose((const void *)(v1 - 128), 8) = 0u;
  *(void *)(a1 + 684) = 0LL;
  *(_OWORD *)(a1 + 6sub_10000AE14(v14 + 96) = 0u;
  *(_OWORD *)(a1 + 712) = 0u;
  *(_OWORD *)(a1 + 72_Block_object_dispose((const void *)(v1 - 128), 8) = 0u;
  *(_OWORD *)(a1 + 744) = 0u;
  *(_OWORD *)(a1 + 753) = 0u;
  *(_OWORD *)(a1 + 804) = 0u;
  *(_OWORD *)(a1 + 776) = 0u;
  *(_OWORD *)(a1 + 792) = 0u;
  *(_DWORD *)(a1 + 82sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = 1;
  *(_WORD *)(a1 + 824) = 0;
  sub_100583844((uint64_t)sub_100F365AC, a1, *(void **)(a1 + 360), &Current);
  CFAbsoluteTime v5 = Current;
  CFAbsoluteTime Current = 0.0;
  uint64_t v6 = *(void *)(a1 + 368);
  *(CFAbsoluteTime *)(a1 + 36_Block_object_dispose((const void *)(v1 - 128), 8) = v5;
  if (v6)
  {
    (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
    CFAbsoluteTime v7 = Current;
    CFAbsoluteTime Current = 0.0;
    if (v7 != 0.0) {
      (*(void (**)(CFAbsoluteTime))(**(void **)&v7 + 8LL))(COERCE_CFABSOLUTETIME(*(void *)&v7));
    }
    CFAbsoluteTime v5 = *(double *)(a1 + 368);
  }

  if (v5 != 0.0) {
    [*(id *)(*(void *)&v5 + 16) register:*(void *)(*(void *)&v5 + 8) forNotification:4 registrationInfo:0];
  }
  sub_100386918(a1 + 112, 1);
  if (!sub_100254C74(v4))
  {
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    sub_100F36784(a1, &Current);
  }

  return a1;
}

void sub_100F3630C(_Unwind_Exception *a1)
{
  uint64_t v10 = *(void *)(v2 + 368);
  *(void *)(v2 + 36_Block_object_dispose((const void *)(v1 - 128), 8) = 0LL;
  if (v10) {
    (*(void (**)(uint64_t))(*(void *)v10 + 8LL))(v10);
  }
  sub_100383050(v4);
  sub_1002E4CB0(v3);
  sub_100C2243C(v1);
  _Unwind_Resume(a1);
}

void sub_100F363D4(uint64_t a1, int a2, uint64_t a3)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10188D468);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v9 = 1;
    uint64_t v6 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLHighResolutionSignalEnvironmentDataManager::onAvlFileUpdated",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v6, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10188D468);
    }
    uint64_t v7 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v11 = 0;
      __int16 v12 = 2082;
      uint64_t v13 = "";
      __int16 v14 = 2082;
      uint64_t v15 = "activity";
      __int16 v16 = 2050;
      uint64_t v17 = a3;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLHighResolutionSignalEnvironmentDataManager::onAvlFileUpdated, event:%{public, loc ation:escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v9 = 0;
  }

  sub_100F3C33C(a3, a1, a2);
  if (v9) {
    os_activity_scope_leave(&state);
  }
}

void sub_100F3658C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100F365AC(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10188D468);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLHighResolutionSignalEnvironmentDataManager::onManagerNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10188D468);
    }
    char v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLHighResolutionSignalEnvironmentDataManager::onManagerNotification, event:%{public , location:escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100F3E988(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100F36764( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100F36784(uint64_t a1, void *a2)
{
  if (*(char *)(a1 + 439) < 0)
  {
    sub_1010DD48C(__p, *(void **)(a1 + 416), *(void *)(a1 + 424));
  }

  else
  {
    *(_OWORD *)std::string __p = *(_OWORD *)(a1 + 416);
    uint64_t v43 = *(void *)(a1 + 432);
  }

  sub_100C33570(&v41);
  sub_1002F0B04(buf);
  BOOL v4 = sub_1002A8560(*(uint64_t *)buf, "HrseTilesServerUrl", &v41);
  CFAbsoluteTime v5 = *(std::__shared_weak_count **)&buf[8];
  if (*(void *)&buf[8])
  {
    uint64_t v6 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      unint64_t v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }

  if (v4)
  {
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    uint64_t v8 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
    {
      char v9 = &v41;
      if ((v41.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        char v9 = (std::string *)v41.__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)std::string buf = 136446210;
      *(void *)&uint8_t buf[4] = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "HRSE, server, %{public}s, overridden, 1",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_10188D488);
      }
      uint64_t v10 = &v41;
      if ((v41.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        uint64_t v10 = (std::string *)v41.__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)__int128 v44 = 136446210;
      *(void *)&v44[4] = v10;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "HRSE, server, %{public}s, overridden, 1",  v44,  12);
      __int16 v12 = (char *)v11;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLHighResolutionSignalEnvironmentDataManager::downloadAvailabilityFile(const CFAbsoluteTime &)",  "%s\n",  v11);
LABEL_93:
      if (v12 != buf) {
        free(v12);
      }
    }
  }

  else
  {
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    int v13 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
    {
      __int16 v14 = &v41;
      if ((v41.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        __int16 v14 = (std::string *)v41.__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)std::string buf = 136446210;
      *(void *)&uint8_t buf[4] = v14;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "HRSE, server, %{public}s, overridden, 0",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_10188D488);
      }
      uint64_t v34 = &v41;
      if ((v41.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        uint64_t v34 = (std::string *)v41.__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)__int128 v44 = 136446210;
      *(void *)&v44[4] = v34;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "HRSE, server, %{public}s, overridden, 0",  v44,  12);
      __int16 v12 = (char *)v35;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLHighResolutionSignalEnvironmentDataManager::downloadAvailabilityFile(const CFAbsoluteTime &)",  "%s\n",  v35);
      goto LABEL_93;
    }
  }

  std::string::append(&v41, "/");
  if (v43 >= 0) {
    uint64_t v15 = __p;
  }
  else {
    uint64_t v15 = (void **)__p[0];
  }
  if (v43 >= 0) {
    std::string::size_type v16 = HIBYTE(v43);
  }
  else {
    std::string::size_type v16 = (std::string::size_type)__p[1];
  }
  std::string::append(&v41, (const std::string::value_type *)v15, v16);
  uint64_t v17 = (char *)sub_1002F8DDC();
  sub_10030AC8C(v17, (uint64_t)&v40);
  if (v43 >= 0) {
    __int16 v18 = __p;
  }
  else {
    __int16 v18 = (void **)__p[0];
  }
  if (v43 >= 0) {
    std::string::size_type v19 = HIBYTE(v43);
  }
  else {
    std::string::size_type v19 = (std::string::size_type)__p[1];
  }
  std::string::append(&v40, (const std::string::value_type *)v18, v19);
  if (qword_101934880 != -1) {
    dispatch_once(&qword_101934880, &stru_10188D488);
  }
  int64_t v20 = (os_log_s *)qword_101934888;
  if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v21 = &v41;
    if ((v41.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      uint64_t v21 = (std::string *)v41.__r_.__value_.__r.__words[0];
    }
    unint64_t v22 = &v40;
    if ((v40.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      unint64_t v22 = (std::string *)v40.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)std::string buf = 136446722;
    *(void *)&uint8_t buf[4] = v21;
    *(_WORD *)&_BYTE buf[12] = 2082;
    *(void *)&buf[14] = v22;
    __int16 v50 = 2050;
    uint64_t v51 = 0x40AC200000000000LL;
    _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEBUG,  "HRSE,downloadAvailabilityFile,download request,url,%{public}s,storeTo,%{public}s,retryInterval,%{public}.1lf",  buf,  0x20u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    uint64_t v28 = &v41;
    if ((v41.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      uint64_t v28 = (std::string *)v41.__r_.__value_.__r.__words[0];
    }
    unint64_t v29 = &v40;
    if ((v40.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      unint64_t v29 = (std::string *)v40.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)__int128 v44 = 136446722;
    *(void *)&v44[4] = v28;
    __int16 v45 = 2082;
    unint64_t v46 = v29;
    __int16 v47 = 2050;
    uint64_t v48 = 0x40AC200000000000LL;
    LODWORD(v3_Block_object_dispose((const void *)(v1 - 128), 8) = 32;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "HRSE,downloadAvailabilityFile,download request,url,%{public}s,storeTo,%{public}s,retryInterval,%{public}.1lf",  v44,  v38);
    __int128 v31 = (char *)v30;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLHighResolutionSignalEnvironmentDataManager::downloadAvailabilityFile(const CFAbsoluteTime &)",  "%s\n",  v30);
    if (v31 != buf) {
      free(v31);
    }
  }

  *(void *)(a1 + 80_Block_object_dispose((const void *)(v1 - 128), 8) = *a2;
  *(void *)__int128 v44 = 0x404E000000000000LL;
  uint64_t v23 = (double *)(a1 + 112);
  if ((v41.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t v24 = &v41;
  }
  else {
    uint64_t v24 = (std::string *)v41.__r_.__value_.__r.__words[0];
  }
  if ((v40.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    unint64_t v25 = &v40;
  }
  else {
    unint64_t v25 = (std::string *)v40.__r_.__value_.__r.__words[0];
  }
  if (sub_100385874( (uint64_t)v23,  (const std::string::value_type *)v24,  (const std::string::value_type *)v25,  (double *)v44))
  {
    *(void *)std::string buf = sub_100F3E4A0();
    v39[0] = sub_100F3DFB8();
    if ((sub_100385EC0((uint64_t)v23, (double *)buf, v39) & 1) != 0)
    {
      *(double *)std::string buf = *(double *)a2 + 3600.0 + -0.5;
      sub_1003862CC(v23, (double *)buf);
      goto LABEL_69;
    }
  }

  else
  {
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    uint64_t v26 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEBUG,  "#Warning,HRSE,downloadAvailabilityFile,could not setUpdateSource AVL file updater",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_10188D488);
      }
      LOWORD(v39[0]) = 0;
      LODWORD(v3_Block_object_dispose((const void *)(v1 - 128), 8) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "#Warning,HRSE,downloadAvailabilityFile,could not setUpdateSource AVL file updater",  v39,  v38);
      uint64_t v37 = (char *)v36;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLHighResolutionSignalEnvironmentDataManager::downloadAvailabilityFile(const CFAbsoluteTime &)",  "%s\n",  v36);
      if (v37 != buf) {
        free(v37);
      }
    }
  }

  if (qword_101934880 != -1) {
    dispatch_once(&qword_101934880, &stru_10188D488);
  }
  uint64_t v27 = (os_log_s *)qword_101934888;
  if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEBUG,  "#Warning,HRSE,downloadAvailabilityFile,could not setUpdateRate AVl file updater",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    LOWORD(v39[0]) = 0;
    LODWORD(v3_Block_object_dispose((const void *)(v1 - 128), 8) = 2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "#Warning,HRSE,downloadAvailabilityFile,could not setUpdateRate AVl file updater",  v39,  v38);
    unint64_t v33 = (char *)v32;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLHighResolutionSignalEnvironmentDataManager::downloadAvailabilityFile(const CFAbsoluteTime &)",  "%s\n",  v32);
    if (v33 != buf) {
      free(v33);
    }
  }

void sub_100F37098( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20, int a21, __int16 a22, char a23, char a24, void *a25, uint64_t a26, int a27, __int16 a28, char a29, char a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, char a36)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  if (a30 < 0) {
    operator delete(a25);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100F37128(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 192);
  if (v2)
  {
    *(void *)(a1 + 20sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v2;
    operator delete(v2);
  }

  return a1;
}

uint64_t sub_100F3716C(uint64_t a1)
{
  *(void *)a1 = off_10188D448;

  *(void *)(a1 + 384) = 0LL;
  sub_100F37250(a1);
  uint64_t v2 = *(void **)(a1 + 696);
  if (v2)
  {
    *(void *)(a1 + 704) = v2;
    operator delete(v2);
  }

  uint64_t v3 = *(void *)(a1 + 368);
  *(void *)(a1 + 36_Block_object_dispose((const void *)(v1 - 128), 8) = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  sub_100383050(a1 + 112);
  sub_1002E4CB0(a1 + 96);
  sub_1001B4C40((void *)(a1 + 8));
  return a1;
}

uint64_t sub_100F37250(uint64_t a1)
{
  uint64_t v2 = a1 + 96;
  (*(void (**)(uint64_t))(*(void *)(a1 + 96) + 16LL))(a1 + 96);
  *(_OWORD *)(v2 + 40_Block_object_dispose((const void *)(v1 - 128), 8) = 0u;
  *(_OWORD *)(v2 + 424) = 0u;
  *(_OWORD *)(v2 + 4sub_10004AD90(v3 - 40) = 0u;
  *(_OWORD *)(v2 + 456) = 0u;
  *(_OWORD *)(v2 + 472) = 0u;
  *(_OWORD *)(v2 + 48_Block_object_dispose((const void *)(v1 - 128), 8) = 0u;
  *(_OWORD *)(v2 + 504) = 0u;
  *(_OWORD *)(v2 + 52sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = 0u;
  *(_OWORD *)(v2 + 536) = 0u;
  *(_OWORD *)(v2 + 552) = 0u;
  *(_OWORD *)(v2 + 56_Block_object_dispose((const void *)(v1 - 128), 8) = 0u;
  *(_OWORD *)(v2 + 584) = 0u;
  *(void *)(v2 + 60_Block_object_dispose((const void *)(v1 - 128), 8) = *(void *)(v2 + 600);
  *(void *)(v2 + 624) = 0LL;
  *(void *)(v2 + 6sub_10004AD90(v3 - 40) = 0LL;
  *(void *)(v2 + 632) = 0LL;
  if (*(char *)(v2 + 671) < 0)
  {
    **(_BYTE **)(a1 + 744) = 0;
    *(void *)(a1 + 752) = 0LL;
  }

  else
  {
    *(_BYTE *)(a1 + 744) = 0;
    *(_BYTE *)(a1 + 767) = 0;
  }

  *(_BYTE *)(a1 + 76_Block_object_dispose((const void *)(v1 - 128), 8) = 0;
  *(_WORD *)(a1 + 4sub_10004AD90(v3 - 40) = 0;
  *(void *)(a1 + 44_Block_object_dispose((const void *)(v1 - 128), 8) = 0LL;
  *(void *)(a1 + 456) = 0LL;
  if (*(char *)(a1 + 799) < 0)
  {
    **(_BYTE **)(a1 + 776) = 0;
    *(void *)(a1 + 784) = 0LL;
  }

  else
  {
    *(_BYTE *)(a1 + 776) = 0;
    *(_BYTE *)(a1 + 799) = 0;
  }

  sub_10038637C(a1 + 112);
  return (*(uint64_t (**)(uint64_t))(*(void *)v2 + 24LL))(v2);
}

void sub_100F37330(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_100F37348(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100F3716C(a1);
  operator delete(v1);
}

uint64_t sub_100F3735C(double *a1, double *a2)
{
  double v4 = *a1;
  if ((*(void *)a1 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL
    || (*(void *)a2 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000LL)
  {
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    unint64_t v7 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_ERROR))
    {
      BOOL v8 = (*(void *)a1 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000LL;
      BOOL v9 = (*(void *)a2 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000LL;
      *(_DWORD *)std::string buf = 67109376;
      LODWORD(v19[0]) = v8;
      WORD2(v19[0]) = 1024;
      *(_DWORD *)((char *)v19 + 6) = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "#Error,HRSE,is latitude finite,%d,is longitude finite,%d",  buf,  0xEu);
    }

    BOOL v10 = sub_1002921D0(115, 0);
    uint64_t result = 0LL;
    if (v10)
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_10188D488);
      }
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  16LL,  "#Error,HRSE,is latitude finite,%d,is longitude finite,%d",  &v17);
      goto LABEL_23;
    }
  }

  else
  {
    if (v4 >= -90.0 && v4 <= 90.0)
    {
      sub_100292950(*a2);
      *(void *)a2 = v5;
      return 1LL;
    }

    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    char v11 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_ERROR))
    {
      double v12 = *a1;
      *(_DWORD *)std::string buf = 134283521;
      *(double *)std::string::size_type v19 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_ERROR,  "#Error,HRSE,latitude is beyond the valid range,lat,%{private}.7lf",  buf,  0xCu);
    }

    BOOL v13 = sub_1002921D0(115, 0);
    uint64_t result = 0LL;
    if (v13)
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_10188D488);
      }
      double v14 = *a1;
      LODWORD(v17) = 134283521;
      *(double *)((char *)&v17 + 4) = v14;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  16LL,  "#Error,HRSE,latitude is beyond the valid range,lat,%{private}.7lf",  &v17,  12,  v17);
LABEL_23:
      std::string::size_type v16 = (uint8_t *)v15;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "static BOOL CLHighResolutionSignalEnvironmentDataManager::isLatLonValid(const double &, double &)",  "%s\n",  v15);
      if (v16 != buf) {
        free(v16);
      }
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_100F376D0(uint64_t a1, double a2, double a3)
{
  double v54 = a3;
  double v55 = a2;
  if (!*(_BYTE *)(a1 + 264))
  {
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    BOOL v9 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_INFO,  "#Warning,HRSE,getSignalEnvironmentForTile,invalid tile",  buf,  2u);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    LOWORD(v56) = 0;
    double v8 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  1LL,  "#Warning,HRSE,getSignalEnvironmentForTile,invalid tile",  &v56,  2);
    goto LABEL_103;
  }

  if ((sub_100F3735C(&v55, &v54) & 1) != 0)
  {
    float v5 = *(float *)(a1 + 56);
    if (v5 == 0.0)
    {
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_10188D488);
      }
      uint64_t v6 = (os_log_s *)qword_101934888;
      if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "#Warning,HRSE,getSignalEnvironmentForTile,cellsize is zero",  buf,  2u);
      }

      if (!sub_1002921D0(115, 2)) {
        return 0LL;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_10188D488);
      }
      LOWORD(v56) = 0;
      double v8 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  1LL,  "#Warning,HRSE,getSignalEnvironmentForTile,cellsize is zero",  &v56,  2);
      goto LABEL_103;
    }

    double v13 = *(double *)(a1 + 48);
    if (v13 > a2)
    {
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_10188D488);
      }
      double v14 = (os_log_s *)qword_101934888;
      if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_INFO))
      {
        double v15 = *(double *)(a1 + 48);
        *(_DWORD *)std::string buf = 134283777;
        double v73 = a2;
        __int16 v74 = 2049;
        double v75 = v15;
        _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_INFO,  "#Warning,HRSE,getSignalEnvironmentForTile,latitude,%{private}.9lf,lessThanMin,%{private}.9lf",  buf,  0x16u);
      }

      if (!sub_1002921D0(115, 2)) {
        return 0LL;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_10188D488);
      }
      double v16 = *(double *)(a1 + 48);
      int v56 = 134283777;
      double v57 = a2;
      __int16 v58 = 2049;
      double v59 = v16;
      double v8 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  1LL,  "#Warning,HRSE,getSignalEnvironmentForTile,latitude,%{private}.9lf,lessThanMin,%{private}.9lf",  &v56,  22);
      goto LABEL_103;
    }

    double v17 = v13 + (float)(v5 * (float)*(unsigned int *)(a1 + 32));
    if (v17 < a2)
    {
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_10188D488);
      }
      __int16 v18 = (os_log_s *)qword_101934888;
      if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)std::string buf = 134283777;
        double v73 = a2;
        __int16 v74 = 2049;
        double v75 = v17;
        _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_INFO,  "#Warning,HRSE,getSignalEnvironmentForTile,latitude,%{private}.9lf,exceedsMax,%{private}.9lf",  buf,  0x16u);
      }

      if (!sub_1002921D0(115, 2)) {
        return 0LL;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_10188D488);
      }
      int v56 = 134283777;
      double v57 = a2;
      __int16 v58 = 2049;
      double v59 = v17;
      double v8 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  1LL,  "#Warning,HRSE,getSignalEnvironmentForTile,latitude,%{private}.9lf,exceedsMax,%{private}.9lf",  &v56,  22);
      goto LABEL_103;
    }

    double v19 = v54;
    double v20 = *(double *)(a1 + 40);
    if (v54 < v20)
    {
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_10188D488);
      }
      uint64_t v21 = (os_log_s *)qword_101934888;
      if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_INFO))
      {
        double v22 = *(double *)(a1 + 40);
        *(_DWORD *)std::string buf = 134283777;
        double v73 = v19;
        __int16 v74 = 2049;
        double v75 = v22;
        _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_INFO,  "#Warning,HRSE,getSignalEnvironmentForTile,longitude,%{private}.9lf,lessThanMin,%{private}.9lf",  buf,  0x16u);
      }

      if (!sub_1002921D0(115, 2)) {
        return 0LL;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_10188D488);
      }
      double v23 = *(double *)(a1 + 40);
      int v56 = 134283777;
      double v57 = v19;
      __int16 v58 = 2049;
      double v59 = v23;
      double v8 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  1LL,  "#Warning,HRSE,getSignalEnvironmentForTile,longitude,%{private}.9lf,lessThanMin,%{private}.9lf",  &v56,  22);
      goto LABEL_103;
    }

    unsigned int v24 = *(_DWORD *)(a1 + 36);
    double v25 = v20 + (float)(v5 * (float)v24);
    if (v54 > v25)
    {
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_10188D488);
      }
      uint64_t v26 = (os_log_s *)qword_101934888;
      if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)std::string buf = 134283777;
        double v73 = v19;
        __int16 v74 = 2049;
        double v75 = v25;
        _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_INFO,  "#Warning,HRSE,getSignalEnvironmentForTile,longitude,%{private}.9lf,exceedsMax,%{private}.9lf",  buf,  0x16u);
      }

      if (!sub_1002921D0(115, 2)) {
        return 0LL;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_10188D488);
      }
      int v56 = 134283777;
      double v57 = v19;
      __int16 v58 = 2049;
      double v59 = v25;
      double v8 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  1LL,  "#Warning,HRSE,getSignalEnvironmentForTile,longitude,%{private}.9lf,exceedsMax,%{private}.9lf",  &v56,  22);
      goto LABEL_103;
    }

    double v27 = v5;
    double v28 = (v54 - v20) / v27;
    int v29 = (int)(floor(v28) + 0.5);
    double v30 = (a2 - v13) / v27;
    int v31 = (int)(floor(v30) + 0.5);
    int v32 = v29 + v24 * v31;
    if (v32 >= 0) {
      int v33 = v29 + v24 * v31;
    }
    else {
      int v33 = v32 + 1;
    }
    uint64_t v34 = *(void *)(a1 + 192);
    uint64_t v35 = *(void *)(a1 + 200);
    unint64_t v36 = v35 - v34;
    if (v35 != v34)
    {
      unint64_t v37 = (uint64_t)v33 >> 1;
      if (v36 > v37)
      {
        unsigned int v38 = *(unsigned __int8 *)(v34 + v37);
        int v39 = v38 & 0xF;
        unsigned int v40 = v38 >> 4;
        if (v32 - (v33 & 0xFFFFFFFE) == 1) {
          unsigned int v41 = v39;
        }
        else {
          unsigned int v41 = v40;
        }
        if (qword_101934880 != -1) {
          dispatch_once(&qword_101934880, &stru_10188D488);
        }
        uint64_t v42 = (os_log_s *)qword_101934888;
        if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)std::string buf = 134285313;
          double v73 = v28;
          __int16 v74 = 2049;
          double v75 = v30;
          __int16 v76 = 1025;
          int v77 = v29;
          __int16 v78 = 1025;
          int v79 = v31;
          __int16 v80 = 1025;
          int v81 = v32;
          __int16 v82 = 1025;
          int v83 = v33 >> 1;
          __int16 v84 = 1025;
          unsigned int v85 = v32 - (v33 & 0xFFFFFFFE);
          __int16 v86 = 1025;
          unsigned int v87 = v41;
          _os_log_impl( (void *)&_mh_execute_header,  v42,  OS_LOG_TYPE_DEBUG,  "HRSE,getSignalEnvironmentForTile,X,%{private}.7lf,Y,%{private}.7lf,x1,%{private}d,y1,%{private}d,iNibble,%{p rivate}d,iByte,%{private}d,iNibbleInByte,%{private}d,typeNibble,%{private}d",  buf,  0x3Au);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934880 != -1) {
            dispatch_once(&qword_101934880, &stru_10188D488);
          }
          int v56 = 134285313;
          double v57 = v28;
          __int16 v58 = 2049;
          double v59 = v30;
          __int16 v60 = 1025;
          int v61 = v29;
          __int16 v62 = 1025;
          int v63 = v31;
          __int16 v64 = 1025;
          int v65 = v32;
          __int16 v66 = 1025;
          int v67 = v33 >> 1;
          __int16 v68 = 1025;
          unsigned int v69 = v32 - (v33 & 0xFFFFFFFE);
          __int16 v70 = 1025;
          unsigned int v71 = v41;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "HRSE,getSignalEnvironmentForTile,X,%{private}.7lf,Y,%{private}.7lf,x1,%{private}d,y1,%{private}d,iNibble,%{p rivate}d,iByte,%{private}d,iNibbleInByte,%{private}d,typeNibble,%{private}d",  &v56,  58);
          uint64_t v52 = (uint8_t *)v51;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "static CLSignalEnvironmentProvider_Type::SignalEnvironmentType CLHighResolutionSignalEnvironmentDataManager: :getSignalEnvironmentForTile(CLHRSETile &, double, double)",  "%s\n",  v51);
          if (v52 != buf) {
            free(v52);
          }
        }

        if (v41 < 7 && ((0x5Fu >> v41) & 1) != 0)
        {
          uint64_t v10 = dword_101366020[v41];
          if (qword_101934880 != -1) {
            dispatch_once(&qword_101934880, &stru_10188D488);
          }
          __int16 v47 = (os_log_s *)qword_101934888;
          if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)std::string buf = 67174657;
            LODWORD(v73) = v10;
            _os_log_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_DEBUG,  "HRSE,getSignalEnvironmentForTile,hrseType,%{private}d",  buf,  8u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934880 != -1) {
              dispatch_once(&qword_101934880, &stru_10188D488);
            }
            int v56 = 67174657;
            LODWORD(v57) = v10;
            LODWORD(v53) = 8;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "HRSE,getSignalEnvironmentForTile,hrseType,%{private}d",  &v56,  v53);
            uint64_t v49 = (uint8_t *)v48;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "static CLSignalEnvironmentProvider_Type::SignalEnvironmentType CLHighResolutionSignalEnvironmentDataManage r::getSignalEnvironmentForTile(CLHRSETile &, double, double)",  "%s\n",  v48);
            if (v49 != buf) {
              free(v49);
            }
          }
        }

        else
        {
          if (qword_101934880 != -1) {
            dispatch_once(&qword_101934880, &stru_10188D488);
          }
          uint64_t v43 = (os_log_s *)qword_101934888;
          if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)std::string buf = 67174657;
            LODWORD(v73) = v41;
            _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_ERROR,  "#Error,HRSE,getSignalEnvironmentForTile,unexpected signal environment type detected: %{private}d",  buf,  8u);
          }

          uint64_t v10 = 0LL;
          if (sub_1002921D0(115, 0))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934880 != -1) {
              dispatch_once(&qword_101934880, &stru_10188D488);
            }
            int v56 = 67174657;
            LODWORD(v57) = v41;
            LODWORD(v53) = 8;
            double v45 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  16LL,  "#Error,HRSE,getSignalEnvironmentForTile,unexpected signal environment type detected: %{private}d",  &v56,  v53);
LABEL_107:
            __int16 v50 = v44;
            sub_10029211C( "Generic",  1LL,  0,  0LL,  "static CLSignalEnvironmentProvider_Type::SignalEnvironmentType CLHighResolutionSignalEnvironmentDataManage r::getSignalEnvironmentForTile(CLHRSETile &, double, double)",  "%s\n",  v45);
LABEL_108:
            if (v50 != buf) {
              free(v50);
            }
            return 0LL;
          }
        }

        return v10;
      }
    }

    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    unint64_t v46 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v46,  OS_LOG_TYPE_INFO,  "#Warning,HRSE,getSignalEnvironmentForTile,invalid tile - unable to get data byte",  buf,  2u);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    LOWORD(v56) = 0;
    double v8 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  1LL,  "#Warning,HRSE,getSignalEnvironmentForTile,invalid tile - unable to get data byte",  &v56,  2);
LABEL_103:
    __int16 v50 = v7;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static CLSignalEnvironmentProvider_Type::SignalEnvironmentType CLHighResolutionSignalEnvironmentDataManager::getSi gnalEnvironmentForTile(CLHRSETile &, double, double)",  "%s\n",  v8);
    goto LABEL_108;
  }

  if (qword_101934880 != -1) {
    dispatch_once(&qword_101934880, &stru_10188D488);
  }
  char v11 = (os_log_s *)qword_101934888;
  if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)std::string buf = 134283777;
    double v73 = a2;
    __int16 v74 = 2049;
    double v75 = v54;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_ERROR,  "#Error,HRSE,getSignalEnvironmentForTile,invalid coordinates,lat,%{private}.7lf,lon,%{private}.7lf",  buf,  0x16u);
  }

  uint64_t v10 = 0LL;
  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    int v56 = 134283777;
    double v57 = a2;
    __int16 v58 = 2049;
    double v59 = v54;
    double v45 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  16LL,  "#Error,HRSE,getSignalEnvironmentForTile,invalid coordinates,lat,%{private}.7lf,lon,%{private}.7lf",  &v56,  22);
    goto LABEL_107;
  }

  return v10;
}

uint64_t sub_100F384B0(uint64_t a1, double a2, double a3)
{
  double v67 = a3;
  double v68 = a2;
  uint64_t v4 = *(void *)(a1 + 96);
  uint64_t v64 = a1 + 96;
  (*(void (**)(void))(v4 + 16))();
  __int16 v66 = 256;
  sub_1002F0B04(buf);
  float v5 = (_BYTE *)(a1 + 825);
  int v6 = sub_1002A6F64(*(uint64_t *)buf, "ForceDownloadHrseTiles", (BOOL *)(a1 + 825));
  int v7 = v6;
  double v8 = *(std::__shared_weak_count **)&buf[8];
  if (!*(void *)&buf[8]) {
    goto LABEL_5;
  }
  BOOL v9 = (unint64_t *)(*(void *)&buf[8] + 8LL);
  do
    unint64_t v10 = __ldaxr(v9);
  while (__stlxr(v10 - 1, v9));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    if (!v7) {
      goto LABEL_11;
    }
  }

  else
  {
LABEL_5:
    if (!v6) {
      goto LABEL_11;
    }
  }

  if (qword_101934880 != -1) {
    dispatch_once(&qword_101934880, &stru_10188D488);
  }
  char v11 = (os_log_s *)qword_101934888;
  if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
  {
    int v12 = *v5;
    *(_DWORD *)std::string buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = v12;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "HRSE,getSignalEnvironment,fForceDownloadHrseTiles, %d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    int v47 = *v5;
    int v69 = 67109120;
    LODWORD(v7sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v47;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "HRSE,getSignalEnvironment,fForceDownloadHrseTiles, %d",  &v69);
    uint64_t v49 = (char *)v48;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLSignalEnvironmentProvider_Type::SignalEnvironmentType CLHighResolutionSignalEnvironmentDataManager::getSignalEnv ironment(double, double)",  "%s\n",  v48);
    if (v49 != buf) {
      free(v49);
    }
  }

void sub_100F39470(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

id sub_100F394E8(uint64_t a1, _BYTE *a2, _BYTE *a3, double a4, double a5)
{
  *a2 = 0;
  *a3 = 0;
  HIWORD(v37) = 0;
  if (qword_101934880 != -1) {
    dispatch_once(&qword_101934880, &stru_10188D488);
  }
  unint64_t v10 = (os_log_s *)qword_101934888;
  if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
  {
    LODWORD(buf[0].__r_.__value_.__l.__data_) = 134283777;
    *(double *)((char *)buf[0].__r_.__value_.__r.__words + 4) = a4;
    WORD2(buf[0].__r_.__value_.__r.__words[1]) = 2049;
    *(double *)((char *)&buf[0].__r_.__value_.__r.__words[1] + 6) = a5;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "HRSE,loadTile,lat,%{private}.7lf,lon,%{private}.7lf",  (uint8_t *)buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    int v39 = 134283777;
    double v40 = a4;
    __int16 v41 = 2049;
    double v42 = a5;
    LODWORD(v37) = 22;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "HRSE,loadTile,lat,%{private}.7lf,lon,%{private}.7lf",  &v39,  v37,  *(_OWORD *)&__p.__r_.__value_.__l.__data_,  __p.__r_.__value_.__l.__cap_);
    int v29 = (std::string *)v28;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLHighResolutionSignalEnvironmentDataManager::loadTile(double, double, BOOL &, BOOL &)",  "%s\n",  v28);
    if (v29 != buf) {
      free(v29);
    }
  }

  double v11 = sub_101171D4C();
  id v12 = objc_msgSend( objc_msgSend(objc_msgSend(*(id *)(a1 + 360), "vendor"), "proxyForService:", @"CLTilesManager"),  "syncgetTileFilePath:latitude:longitude:isFileAccessible:isTileNotExistingOnServer:",  2,  (char *)&v37 + 7,  (char *)&v37 + 6,  a4,  a5);
  if (qword_101934880 != -1) {
    dispatch_once(&qword_101934880, &stru_10188D488);
  }
  double v13 = (os_log_s *)qword_101934888;
  if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
  {
    double v14 = sub_101171D4C();
    LODWORD(buf[0].__r_.__value_.__l.__data_) = 134349056;
    *(double *)((char *)buf[0].__r_.__value_.__r.__words + 4) = v14 - v11;
    _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "HRSE,loadTile,CLTilesManager,getTileFile,took,%{public}.1lf",  (uint8_t *)buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    uint64_t v30 = qword_101934888;
    double v31 = sub_101171D4C();
    int v39 = 134349056;
    double v40 = v31 - v11;
    LODWORD(v37) = 12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v30,  2LL,  "HRSE,loadTile,CLTilesManager,getTileFile,took,%{public}.1lf",  &v39,  v37);
    int v33 = (std::string *)v32;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLHighResolutionSignalEnvironmentDataManager::loadTile(double, double, BOOL &, BOOL &)",  "%s\n",  v32);
    if (v33 != buf) {
      free(v33);
    }
  }

  if (!v12) {
    goto LABEL_47;
  }
  sub_1010DDBC0(buf, (char *)[v12 UTF8String]);
  std::string __p = buf[0];
  if (!HIBYTE(v37))
  {
LABEL_46:
    id v12 = 0LL;
LABEL_47:
    *a2 = 1;
    goto LABEL_48;
  }

  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if (!sub_100292D28((const char *)p_p))
  {
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    double v25 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_INFO))
    {
      uint64_t v26 = &__p;
      if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        uint64_t v26 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      LODWORD(buf[0].__r_.__value_.__l.__data_) = 136446210;
      *(std::string::size_type *)((char *)buf[0].__r_.__value_.__r.__words + 4) = (std::string::size_type)v26;
      _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_INFO,  "#Warning,HRSE,loadTile,unexpected case,this tile should be on disk,%{public}s",  (uint8_t *)buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_10188D488);
      }
      *(double *)&data = COERCE_DOUBLE(&__p);
      if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        data = (std::string *)__p.__r_.__value_.__l.__data_;
      }
      int v39 = 136446210;
      double v40 = *(double *)&data;
      LODWORD(v37) = 12;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  1LL,  "#Warning,HRSE,loadTile,unexpected case,this tile should be on disk,%{public}s",  &v39,  v37);
      unsigned __int8 v36 = (std::string *)v35;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLHighResolutionSignalEnvironmentDataManager::loadTile(double, double, BOOL &, BOOL &)",  "%s\n",  v35);
      if (v36 != buf) {
        free(v36);
      }
    }

    goto LABEL_46;
  }

  BYTE5(v37) = 0;
  BOOL v16 = sub_100F39C84(a1 + 504, &__p, (char *)&v37 + 5);
  id v12 = (id)v16;
  if (BYTE5(v37)) {
    char v17 = v16;
  }
  else {
    char v17 = 1;
  }
  if ((v17 & 1) == 0)
  {
    id v18 = objc_msgSend(objc_msgSend(*(id *)(a1 + 360), "vendor"), "proxyForService:", @"CLTilesManager");
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      double v19 = &__p;
    }
    else {
      double v19 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    objc_msgSend( v18,  "syncgetDeleteTileFile:atPath:",  2,  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v19));
    *a2 = 1;
    *a3 = 1;
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    double v20 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_ERROR))
    {
      double v21 = &__p;
      if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        double v21 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      LODWORD(buf[0].__r_.__value_.__l.__data_) = 136446210;
      *(std::string::size_type *)((char *)buf[0].__r_.__value_.__r.__words + 4) = (std::string::size_type)v21;
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_ERROR,  "#Error,HRSE,loadTile,remove the corrupted tile from disk,%{public}s",  (uint8_t *)buf,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_10188D488);
      }
      *(double *)&double v22 = COERCE_DOUBLE(&__p);
      if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        double v22 = (std::string *)__p.__r_.__value_.__l.__data_;
      }
      int v39 = 136446210;
      double v40 = *(double *)&v22;
      LODWORD(v37) = 12;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  16LL,  "#Error,HRSE,loadTile,remove the corrupted tile from disk,%{public}s",  &v39,  v37);
      uint64_t v24 = (std::string *)v23;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLHighResolutionSignalEnvironmentDataManager::loadTile(double, double, BOOL &, BOOL &)",  "%s\n",  v23);
      if (v24 != buf) {
        free(v24);
      }
    }
  }

void sub_100F39C40( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_100F39C84(uint64_t a1, const std::string *a2, char *a3)
{
  uint64_t v4 = a2;
  unint64_t v74 = 0LL;
  uint64_t v75 = 0LL;
  HIDWORD(v73) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v1 - 128), 8) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 8sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = 0u;
  *(_OWORD *)(a1 + sub_10000AE14(v14 + 96) = 0u;
  *(_OWORD *)(a1 + sub_10000AE14(v14 + 112) = 0u;
  *(_OWORD *)(a1 + 12_Block_object_dispose((const void *)(v1 - 128), 8) = 0u;
  *(_OWORD *)(a1 + sub_10000AE14(v14 + 144) = 0u;
  *(_OWORD *)(a1 + sub_10000AE14(v14 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  int v6 = (unint64_t *)(a1 + 192);
  *(void *)(a1 + 20sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = *(void *)(a1 + 192);
  *(void *)(a1 + 216) = 0LL;
  int v7 = (void *)(a1 + 216);
  *(void *)(a1 + 224) = 0LL;
  *(void *)(a1 + 232) = 0LL;
  if (*(char *)(a1 + 263) < 0)
  {
    **(_BYTE **)(a1 + 2sub_10004AD90(v3 - 40) = 0;
    *(void *)(a1 + 24_Block_object_dispose((const void *)(v1 - 128), 8) = 0LL;
  }

  else
  {
    *(_BYTE *)(a1 + 2sub_10004AD90(v3 - 40) = 0;
    *(_BYTE *)(a1 + 263) = 0;
  }

  *(_BYTE *)(a1 + 264) = 0;
  if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
    double v8 = (const char *)a2;
  }
  else {
    double v8 = (const char *)a2->__r_.__value_.__r.__words[0];
  }
  BOOL v9 = fopen(v8, "rb");
  if (!v9)
  {
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    id v12 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_ERROR))
    {
      if ((v4->__r_.__value_.__s.__size_ & 0x80u) == 0) {
        double v13 = v4;
      }
      else {
        double v13 = (const std::string *)v4->__r_.__value_.__r.__words[0];
      }
      int v14 = *__error();
      *(_DWORD *)std::string buf = 136446466;
      *(void *)__int16 v80 = v13;
      *(_WORD *)&v80[8] = 1026;
      int v81 = v14;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_ERROR,  "#Error,HRSE,readCLHRSETile,unable to load file,file path, %{public}s,errno, %{public}d",  buf,  0x12u);
    }

    BOOL result = sub_1002921D0(115, 0);
    if (result)
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_10188D488);
      }
      uint64_t v16 = qword_101934888;
      if ((v4->__r_.__value_.__s.__size_ & 0x80u) != 0) {
        uint64_t v4 = (const std::string *)v4->__r_.__value_.__r.__words[0];
      }
      int v17 = *__error();
      int v76 = 136446466;
      *(void *)double v77 = v4;
      *(_WORD *)&v77[8] = 1026;
      int v78 = v17;
      LODWORD(v73) = 18;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v16,  16LL,  "#Error,HRSE,readCLHRSETile,unable to load file,file path, %{public}s,errno, %{public}d",  &v76,  v73);
      double v19 = (uint8_t *)v18;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "static BOOL CLHighResolutionSignalEnvironmentDataManager::readCLHRSETile(CLHRSETile &, const std::string &, BOOL &)",  "%s\n",  v18);
      if (v19 == buf) {
        return 0LL;
      }
      goto LABEL_189;
    }

    return result;
  }

  unint64_t v10 = v9;
  uint64_t v11 = ftell(v9);
  if (!sub_100F3B4AC((BOOL)v10, a1, &v74, &v75))
  {
    fclose(v10);
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v1 - 128), 8) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 8sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = 0u;
    *(_OWORD *)(a1 + sub_10000AE14(v14 + 96) = 0u;
    *(_OWORD *)(a1 + sub_10000AE14(v14 + 112) = 0u;
    *(_OWORD *)(a1 + 12_Block_object_dispose((const void *)(v1 - 128), 8) = 0u;
    *(_OWORD *)(a1 + sub_10000AE14(v14 + 144) = 0u;
    *(_OWORD *)(a1 + sub_10000AE14(v14 + 160) = 0u;
    *(_OWORD *)(a1 + 176) = 0u;
    *(void *)(a1 + 20sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = *(void *)(a1 + 192);
    v7[1] = 0LL;
    _DWORD v7[2] = 0LL;
    void *v7 = 0LL;
    if (*(char *)(a1 + 263) < 0)
    {
      **(_BYTE **)(a1 + 2sub_10004AD90(v3 - 40) = 0;
      *(void *)(a1 + 24_Block_object_dispose((const void *)(v1 - 128), 8) = 0LL;
    }

    else
    {
      *(_BYTE *)(a1 + 2sub_10004AD90(v3 - 40) = 0;
      *(_BYTE *)(a1 + 263) = 0;
    }

    *(_BYTE *)(a1 + 264) = 0;
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    double v21 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_ERROR))
    {
      if ((v4->__r_.__value_.__s.__size_ & 0x80u) == 0) {
        double v22 = v4;
      }
      else {
        double v22 = (const std::string *)v4->__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)std::string buf = 136446210;
      *(void *)__int16 v80 = v22;
      _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_ERROR,  "#Error,HRSE,readCLHRSETile,unable to read file header,file path, %{public}s",  buf,  0xCu);
    }

    BOOL result = sub_1002921D0(115, 0);
    if (!result) {
      return result;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    if ((v4->__r_.__value_.__s.__size_ & 0x80u) == 0) {
      double v23 = v4;
    }
    else {
      double v23 = (const std::string *)v4->__r_.__value_.__r.__words[0];
    }
    int v76 = 136446210;
    *(void *)double v77 = v23;
    LODWORD(v73) = 12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  16LL,  "#Error,HRSE,readCLHRSETile,unable to read file header,file path, %{public}s",  &v76,  v73);
    double v19 = (uint8_t *)v24;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "static BOOL CLHighResolutionSignalEnvironmentDataManager::readCLHRSETile(CLHRSETile &, const std::string &, BOOL &)",  "%s\n",  v24);
LABEL_188:
    if (v19 == buf) {
      return 0LL;
    }
LABEL_189:
    free(v19);
    return 0LL;
  }

  if (fseek(v10, 0LL, 2))
  {
    fclose(v10);
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v1 - 128), 8) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 8sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = 0u;
    *(_OWORD *)(a1 + sub_10000AE14(v14 + 96) = 0u;
    *(_OWORD *)(a1 + sub_10000AE14(v14 + 112) = 0u;
    *(_OWORD *)(a1 + 12_Block_object_dispose((const void *)(v1 - 128), 8) = 0u;
    *(_OWORD *)(a1 + sub_10000AE14(v14 + 144) = 0u;
    *(_OWORD *)(a1 + sub_10000AE14(v14 + 160) = 0u;
    *(_OWORD *)(a1 + 176) = 0u;
    *(void *)(a1 + 20sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = *(void *)(a1 + 192);
    v7[1] = 0LL;
    _DWORD v7[2] = 0LL;
    void *v7 = 0LL;
    if (*(char *)(a1 + 263) < 0)
    {
      **(_BYTE **)(a1 + 2sub_10004AD90(v3 - 40) = 0;
      *(void *)(a1 + 24_Block_object_dispose((const void *)(v1 - 128), 8) = 0LL;
    }

    else
    {
      *(_BYTE *)(a1 + 2sub_10004AD90(v3 - 40) = 0;
      *(_BYTE *)(a1 + 263) = 0;
    }

    *(_BYTE *)(a1 + 264) = 0;
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    double v25 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_ERROR))
    {
      if ((v4->__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v26 = v4;
      }
      else {
        uint64_t v26 = (const std::string *)v4->__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)std::string buf = 136446210;
      *(void *)__int16 v80 = v26;
      _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_ERROR,  "#Error,HRSE,readCLHRSETile,fseek returned non-zero,file path, %{public}s",  buf,  0xCu);
    }

    BOOL result = sub_1002921D0(115, 0);
    if (result)
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_10188D488);
      }
      uint64_t v27 = qword_101934888;
      if ((v4->__r_.__value_.__s.__size_ & 0x80u) == 0) {
        double v28 = v4;
      }
      else {
        double v28 = (const std::string *)v4->__r_.__value_.__r.__words[0];
      }
LABEL_60:
      int v76 = 136446210;
      *(void *)double v77 = v28;
      LODWORD(v73) = 12;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v27,  16LL,  "#Error,HRSE,readCLHRSETile,fseek returned non-zero,file path, %{public}s",  &v76,  v73);
      double v19 = (uint8_t *)v29;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "static BOOL CLHighResolutionSignalEnvironmentDataManager::readCLHRSETile(CLHRSETile &, const std::string &, BOOL &)",  "%s\n",  v29);
      goto LABEL_188;
    }

    return result;
  }

  size_t v20 = ftell(v10) - v11;
  if (!v20)
  {
    fclose(v10);
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v1 - 128), 8) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 8sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = 0u;
    *(_OWORD *)(a1 + sub_10000AE14(v14 + 96) = 0u;
    *(_OWORD *)(a1 + sub_10000AE14(v14 + 112) = 0u;
    *(_OWORD *)(a1 + 12_Block_object_dispose((const void *)(v1 - 128), 8) = 0u;
    *(_OWORD *)(a1 + sub_10000AE14(v14 + 144) = 0u;
    *(_OWORD *)(a1 + sub_10000AE14(v14 + 160) = 0u;
    *(_OWORD *)(a1 + 176) = 0u;
    *(void *)(a1 + 20sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = *(void *)(a1 + 192);
    v7[1] = 0LL;
    _DWORD v7[2] = 0LL;
    void *v7 = 0LL;
    if (*(char *)(a1 + 263) < 0)
    {
      **(_BYTE **)(a1 + 2sub_10004AD90(v3 - 40) = 0;
      *(void *)(a1 + 24_Block_object_dispose((const void *)(v1 - 128), 8) = 0LL;
    }

    else
    {
      *(_BYTE *)(a1 + 2sub_10004AD90(v3 - 40) = 0;
      *(_BYTE *)(a1 + 263) = 0;
    }

    *(_BYTE *)(a1 + 264) = 0;
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    unsigned __int8 v36 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_ERROR))
    {
      if ((v4->__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v37 = v4;
      }
      else {
        uint64_t v37 = (const std::string *)v4->__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)std::string buf = 136446210;
      *(void *)__int16 v80 = v37;
      _os_log_impl( (void *)&_mh_execute_header,  v36,  OS_LOG_TYPE_ERROR,  "#Error,HRSE,readCLHRSETile,zero file size,file path, %{public}s",  buf,  0xCu);
    }

    BOOL result = sub_1002921D0(115, 0);
    if (!result) {
      return result;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    if ((v4->__r_.__value_.__s.__size_ & 0x80u) == 0) {
      unsigned int v38 = v4;
    }
    else {
      unsigned int v38 = (const std::string *)v4->__r_.__value_.__r.__words[0];
    }
    int v76 = 136446210;
    *(void *)double v77 = v38;
    LODWORD(v73) = 12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  16LL,  "#Error,HRSE,readCLHRSETile,zero file size,file path, %{public}s",  &v76,  v73);
    double v19 = (uint8_t *)v39;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "static BOOL CLHighResolutionSignalEnvironmentDataManager::readCLHRSETile(CLHRSETile &, const std::string &, BOOL &)",  "%s\n",  v39);
    goto LABEL_188;
  }

  uint64_t v30 = (*(_DWORD *)(a1 + 72) + *(_DWORD *)(a1 + 12));
  uint64_t v31 = v75;
  if (v20 != v75 + v30)
  {
    fclose(v10);
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v1 - 128), 8) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 8sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = 0u;
    *(_OWORD *)(a1 + sub_10000AE14(v14 + 96) = 0u;
    *(_OWORD *)(a1 + sub_10000AE14(v14 + 112) = 0u;
    *(_OWORD *)(a1 + 12_Block_object_dispose((const void *)(v1 - 128), 8) = 0u;
    *(_OWORD *)(a1 + sub_10000AE14(v14 + 144) = 0u;
    *(_OWORD *)(a1 + sub_10000AE14(v14 + 160) = 0u;
    *(_OWORD *)(a1 + 176) = 0u;
    *(void *)(a1 + 20sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = *(void *)(a1 + 192);
    v7[1] = 0LL;
    _DWORD v7[2] = 0LL;
    void *v7 = 0LL;
    if (*(char *)(a1 + 263) < 0)
    {
      **(_BYTE **)(a1 + 2sub_10004AD90(v3 - 40) = 0;
      *(void *)(a1 + 24_Block_object_dispose((const void *)(v1 - 128), 8) = 0LL;
    }

    else
    {
      *(_BYTE *)(a1 + 2sub_10004AD90(v3 - 40) = 0;
      *(_BYTE *)(a1 + 263) = 0;
    }

    *(_BYTE *)(a1 + 264) = 0;
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    double v40 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_ERROR))
    {
      if ((v4->__r_.__value_.__s.__size_ & 0x80u) == 0) {
        __int16 v41 = v4;
      }
      else {
        __int16 v41 = (const std::string *)v4->__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)std::string buf = 136446210;
      *(void *)__int16 v80 = v41;
      _os_log_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_ERROR,  "#Error,HRSE,readCLHRSETile,invalid file size,file path, %{public}s",  buf,  0xCu);
    }

    BOOL result = sub_1002921D0(115, 0);
    if (!result) {
      return result;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    if ((v4->__r_.__value_.__s.__size_ & 0x80u) == 0) {
      double v42 = v4;
    }
    else {
      double v42 = (const std::string *)v4->__r_.__value_.__r.__words[0];
    }
    int v76 = 136446210;
    *(void *)double v77 = v42;
    LODWORD(v73) = 12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  16LL,  "#Error,HRSE,readCLHRSETile,invalid file size,file path, %{public}s",  &v76,  v73);
    double v19 = (uint8_t *)v43;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "static BOOL CLHighResolutionSignalEnvironmentDataManager::readCLHRSETile(CLHRSETile &, const std::string &, BOOL &)",  "%s\n",  v43);
    goto LABEL_188;
  }

  if (*(_WORD *)(a1 + 16)) {
    BOOL v32 = 0;
  }
  else {
    BOOL v32 = *(unsigned __int16 *)(a1 + 8) == 1;
  }
  char v33 = v32;
  *a3 = v33;
  if (!v32)
  {
    fclose(v10);
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v1 - 128), 8) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 8sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = 0u;
    *(_OWORD *)(a1 + sub_10000AE14(v14 + 96) = 0u;
    *(_OWORD *)(a1 + sub_10000AE14(v14 + 112) = 0u;
    *(_OWORD *)(a1 + 12_Block_object_dispose((const void *)(v1 - 128), 8) = 0u;
    *(_OWORD *)(a1 + sub_10000AE14(v14 + 144) = 0u;
    *(_OWORD *)(a1 + sub_10000AE14(v14 + 160) = 0u;
    *(_OWORD *)(a1 + 176) = 0u;
    *(void *)(a1 + 20sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = *(void *)(a1 + 192);
    v7[1] = 0LL;
    _DWORD v7[2] = 0LL;
    void *v7 = 0LL;
    if (*(char *)(a1 + 263) < 0)
    {
      **(_BYTE **)(a1 + 2sub_10004AD90(v3 - 40) = 0;
      *(void *)(a1 + 24_Block_object_dispose((const void *)(v1 - 128), 8) = 0LL;
    }

    else
    {
      *(_BYTE *)(a1 + 2sub_10004AD90(v3 - 40) = 0;
      *(_BYTE *)(a1 + 263) = 0;
    }

    *(_BYTE *)(a1 + 264) = 0;
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    __int128 v44 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_ERROR))
    {
      if ((v4->__r_.__value_.__s.__size_ & 0x80u) == 0) {
        double v45 = v4;
      }
      else {
        double v45 = (const std::string *)v4->__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)std::string buf = 136446210;
      *(void *)__int16 v80 = v45;
      _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_ERROR,  "#Error,HRSE,readCLHRSETile,file format not supported,file path, %{public}s",  buf,  0xCu);
    }

    BOOL result = sub_1002921D0(115, 0);
    if (!result) {
      return result;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    if ((v4->__r_.__value_.__s.__size_ & 0x80u) == 0) {
      unint64_t v46 = v4;
    }
    else {
      unint64_t v46 = (const std::string *)v4->__r_.__value_.__r.__words[0];
    }
    int v76 = 136446210;
    *(void *)double v77 = v46;
    LODWORD(v73) = 12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  16LL,  "#Error,HRSE,readCLHRSETile,file format not supported,file path, %{public}s",  &v76,  v73);
    double v19 = (uint8_t *)v47;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "static BOOL CLHighResolutionSignalEnvironmentDataManager::readCLHRSETile(CLHRSETile &, const std::string &, BOOL &)",  "%s\n",  v47);
    goto LABEL_188;
  }

  if (v30 >= 0x1401)
  {
    fclose(v10);
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    uint64_t v34 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_ERROR))
    {
      if ((v4->__r_.__value_.__s.__size_ & 0x80u) == 0) {
        int v35 = v4;
      }
      else {
        int v35 = (const std::string *)v4->__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)std::string buf = 136446210;
      *(void *)__int16 v80 = v35;
      _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_ERROR,  "#Error,HRSE,readCLHRSETile,tile is larger than the allowed maximum,file path, %{public}s",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_10188D488);
      }
      if ((v4->__r_.__value_.__s.__size_ & 0x80u) == 0) {
        __int16 v66 = v4;
      }
      else {
        __int16 v66 = (const std::string *)v4->__r_.__value_.__r.__words[0];
      }
      int v76 = 136446210;
      *(void *)double v77 = v66;
      LODWORD(v73) = 12;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  16LL,  "#Error,HRSE,readCLHRSETile,tile is larger than the allowed maximum,file path, %{public}s",  &v76,  v73);
      double v68 = (uint8_t *)v67;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "static BOOL CLHighResolutionSignalEnvironmentDataManager::readCLHRSETile(CLHRSETile &, const std::string &, BOOL &)",  "%s\n",  v67);
      if (v68 != buf) {
        free(v68);
      }
    }

    *(_OWORD *)(a1 + sub_10000AE14(v14 + 160) = 0u;
    *(_OWORD *)(a1 + 176) = 0u;
    *(_OWORD *)(a1 + 12_Block_object_dispose((const void *)(v1 - 128), 8) = 0u;
    *(_OWORD *)(a1 + sub_10000AE14(v14 + 144) = 0u;
    *(_OWORD *)(a1 + sub_10000AE14(v14 + 96) = 0u;
    *(_OWORD *)(a1 + sub_10000AE14(v14 + 112) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 8sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v1 - 128), 8) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(void *)(a1 + 20sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = *(void *)(a1 + 192);
    v7[1] = 0LL;
    _DWORD v7[2] = 0LL;
    void *v7 = 0LL;
    if (*(char *)(a1 + 263) < 0)
    {
      **(_BYTE **)(a1 + 2sub_10004AD90(v3 - 40) = 0;
      *(void *)(a1 + 24_Block_object_dispose((const void *)(v1 - 128), 8) = 0LL;
    }

    else
    {
      *(_BYTE *)(a1 + 2sub_10004AD90(v3 - 40) = 0;
      *(_BYTE *)(a1 + 263) = 0;
    }

    BOOL result = 0LL;
    *(_BYTE *)(a1 + 264) = 0;
    return result;
  }

  if (fseek(v10, 0LL, 0))
  {
    fclose(v10);
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v1 - 128), 8) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 8sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = 0u;
    *(_OWORD *)(a1 + sub_10000AE14(v14 + 96) = 0u;
    *(_OWORD *)(a1 + sub_10000AE14(v14 + 112) = 0u;
    *(_OWORD *)(a1 + 12_Block_object_dispose((const void *)(v1 - 128), 8) = 0u;
    *(_OWORD *)(a1 + sub_10000AE14(v14 + 144) = 0u;
    *(_OWORD *)(a1 + sub_10000AE14(v14 + 160) = 0u;
    *(_OWORD *)(a1 + 176) = 0u;
    *(void *)(a1 + 20sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = *(void *)(a1 + 192);
    v7[1] = 0LL;
    _DWORD v7[2] = 0LL;
    void *v7 = 0LL;
    if (*(char *)(a1 + 263) < 0)
    {
      **(_BYTE **)(a1 + 2sub_10004AD90(v3 - 40) = 0;
      *(void *)(a1 + 24_Block_object_dispose((const void *)(v1 - 128), 8) = 0LL;
    }

    else
    {
      *(_BYTE *)(a1 + 2sub_10004AD90(v3 - 40) = 0;
      *(_BYTE *)(a1 + 263) = 0;
    }

    *(_BYTE *)(a1 + 264) = 0;
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    __int16 v50 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_ERROR))
    {
      if ((v4->__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v51 = v4;
      }
      else {
        uint64_t v51 = (const std::string *)v4->__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)std::string buf = 136446210;
      *(void *)__int16 v80 = v51;
      _os_log_impl( (void *)&_mh_execute_header,  v50,  OS_LOG_TYPE_ERROR,  "#Error,HRSE,readCLHRSETile,fseek returned non-zero,file path, %{public}s",  buf,  0xCu);
    }

    BOOL result = sub_1002921D0(115, 0);
    if (result)
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_10188D488);
      }
      uint64_t v27 = qword_101934888;
      if ((v4->__r_.__value_.__s.__size_ & 0x80u) == 0) {
        double v28 = v4;
      }
      else {
        double v28 = (const std::string *)v4->__r_.__value_.__r.__words[0];
      }
      goto LABEL_60;
    }

    return result;
  }

  if ((v4->__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t v48 = (const char *)v4;
  }
  else {
    uint64_t v48 = (const char *)v4->__r_.__value_.__r.__words[0];
  }
  if (sub_100296E50(v48, 3LL))
  {
    uint64_t v49 = operator new[](v20);
    *(void *)(a1 + 224) = v49;
    *(void *)(a1 + 216) = fread(v49, 1uLL, v20, v10);
  }

  else
  {
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    uint64_t v52 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v52,  OS_LOG_TYPE_ERROR,  "#Error,HRSE,readCLHRSETile,CLCommonSetFileProtectionClass failed",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_10188D488);
      }
      LOWORD(v76) = 0;
      LODWORD(v73) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  16LL,  "#Error,HRSE,readCLHRSETile,CLCommonSetFileProtectionClass failed",  &v76,  v73);
      double v70 = (uint8_t *)v69;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "static BOOL CLHighResolutionSignalEnvironmentDataManager::readCLHRSETile(CLHRSETile &, const std::string &, BOOL &)",  "%s\n",  v69);
      if (v70 != buf) {
        free(v70);
      }
    }
  }

  if (!*(void *)(a1 + 224) || !*v7 || *v7 != v20)
  {
    fclose(v10);
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v1 - 128), 8) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 8sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = 0u;
    *(_OWORD *)(a1 + sub_10000AE14(v14 + 96) = 0u;
    *(_OWORD *)(a1 + sub_10000AE14(v14 + 112) = 0u;
    *(_OWORD *)(a1 + 12_Block_object_dispose((const void *)(v1 - 128), 8) = 0u;
    *(_OWORD *)(a1 + sub_10000AE14(v14 + 144) = 0u;
    *(_OWORD *)(a1 + sub_10000AE14(v14 + 160) = 0u;
    *(_OWORD *)(a1 + 176) = 0u;
    *(void *)(a1 + 20sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = *(void *)(a1 + 192);
    v7[1] = 0LL;
    _DWORD v7[2] = 0LL;
    void *v7 = 0LL;
    if (*(char *)(a1 + 263) < 0)
    {
      **(_BYTE **)(a1 + 2sub_10004AD90(v3 - 40) = 0;
      *(void *)(a1 + 24_Block_object_dispose((const void *)(v1 - 128), 8) = 0LL;
    }

    else
    {
      *(_BYTE *)(a1 + 2sub_10004AD90(v3 - 40) = 0;
      *(_BYTE *)(a1 + 263) = 0;
    }

    *(_BYTE *)(a1 + 264) = 0;
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    __int16 v58 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_ERROR))
    {
      if ((v4->__r_.__value_.__s.__size_ & 0x80u) == 0) {
        int v59 = v4;
      }
      else {
        int v59 = (const std::string *)v4->__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)std::string buf = 136446210;
      *(void *)__int16 v80 = v59;
      _os_log_impl( (void *)&_mh_execute_header,  v58,  OS_LOG_TYPE_ERROR,  "#Error,HRSE,readCLHRSETile,failed to read tile,file path, %{public}s",  buf,  0xCu);
    }

    BOOL result = sub_1002921D0(115, 0);
    if (!result) {
      return result;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    if ((v4->__r_.__value_.__s.__size_ & 0x80u) == 0) {
      __int16 v60 = v4;
    }
    else {
      __int16 v60 = (const std::string *)v4->__r_.__value_.__r.__words[0];
    }
    int v76 = 136446210;
    *(void *)double v77 = v60;
    LODWORD(v73) = 12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  16LL,  "#Error,HRSE,readCLHRSETile,failed to read tile,file path, %{public}s",  &v76,  v73);
    double v19 = (uint8_t *)v61;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "static BOOL CLHighResolutionSignalEnvironmentDataManager::readCLHRSETile(CLHRSETile &, const std::string &, BOOL &)",  "%s\n",  v61);
    goto LABEL_188;
  }

  fclose(v10);
  if ((sub_100F3B2B8( *(void *)(a1 + 224) + v31,  (*(_DWORD *)(a1 + 72) + *(_DWORD *)(a1 + 12)),  v74,  (_DWORD *)&v73 + 1) & 1) == 0)
  {
    *(_OWORD *)(a1 + sub_10000AE14(v14 + 160) = 0u;
    *(_OWORD *)(a1 + 176) = 0u;
    *(_OWORD *)(a1 + 12_Block_object_dispose((const void *)(v1 - 128), 8) = 0u;
    *(_OWORD *)(a1 + sub_10000AE14(v14 + 144) = 0u;
    *(_OWORD *)(a1 + sub_10000AE14(v14 + 96) = 0u;
    *(_OWORD *)(a1 + sub_10000AE14(v14 + 112) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 8sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v1 - 128), 8) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(void *)(a1 + 20sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = *(void *)(a1 + 192);
    v7[1] = 0LL;
    _DWORD v7[2] = 0LL;
    void *v7 = 0LL;
    if (*(char *)(a1 + 263) < 0)
    {
      **(_BYTE **)(a1 + 2sub_10004AD90(v3 - 40) = 0;
      *(void *)(a1 + 24_Block_object_dispose((const void *)(v1 - 128), 8) = 0LL;
    }

    else
    {
      *(_BYTE *)(a1 + 2sub_10004AD90(v3 - 40) = 0;
      *(_BYTE *)(a1 + 263) = 0;
    }

    *(_BYTE *)(a1 + 264) = 0;
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    uint64_t v62 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v62,  OS_LOG_TYPE_INFO,  "#Warning,HRSE,readCLHRSETile,calculateCLHRSE_CRC returned false unexpectedly",  buf,  2u);
    }

    BOOL result = sub_1002921D0(115, 2);
    if (!result) {
      return result;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    LOWORD(v76) = 0;
    LODWORD(v73) = 2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  1LL,  "#Warning,HRSE,readCLHRSETile,calculateCLHRSE_CRC returned false unexpectedly",  &v76,  v73);
    double v19 = (uint8_t *)v63;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLHighResolutionSignalEnvironmentDataManager::readCLHRSETile(CLHRSETile &, const std::string &, BOOL &)",  "%s\n",  v63);
    goto LABEL_188;
  }

  int v53 = HIDWORD(v73);
  if (HIDWORD(v73) == *(_DWORD *)(a1 + 68))
  {
    unint64_t v54 = *(unsigned int *)(a1 + 72);
    if ((_DWORD)v54)
    {
      *(void *)(a1 + 232) = *(void *)(a1 + 224) + v31 + *(unsigned int *)(a1 + 12);
      sub_100F3C314(v6, v54);
      uint64_t v55 = *(void *)(a1 + 192);
      if (*(void *)(a1 + 200) != v55)
      {
        unint64_t v56 = 0LL;
        do
        {
          *(_BYTE *)(v55 + v56) = *(_BYTE *)(*(void *)(a1 + 232) + v56);
          ++v56;
          uint64_t v55 = *(void *)(a1 + 192);
        }

        while (v56 < *(void *)(a1 + 200) - v55);
      }
    }

    *(_BYTE *)(a1 + 264) = 1;
    std::string::operator=((std::string *)(a1 + 240), v4);
    double v57 = *(void **)(a1 + 224);
    if (v57) {
      operator delete[](v57);
    }
    *(void *)(a1 + 224) = 0LL;
    *(void *)(a1 + 232) = 0LL;
    return 1LL;
  }

  *(_OWORD *)(a1 + sub_10000AE14(v14 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 12_Block_object_dispose((const void *)(v1 - 128), 8) = 0u;
  *(_OWORD *)(a1 + sub_10000AE14(v14 + 144) = 0u;
  *(_OWORD *)(a1 + sub_10000AE14(v14 + 96) = 0u;
  *(_OWORD *)(a1 + sub_10000AE14(v14 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 8sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v1 - 128), 8) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 20sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = *(void *)(a1 + 192);
  v7[1] = 0LL;
  _DWORD v7[2] = 0LL;
  void *v7 = 0LL;
  if (*(char *)(a1 + 263) < 0)
  {
    **(_BYTE **)(a1 + 2sub_10004AD90(v3 - 40) = 0;
    *(void *)(a1 + 24_Block_object_dispose((const void *)(v1 - 128), 8) = 0LL;
  }

  else
  {
    *(_BYTE *)(a1 + 2sub_10004AD90(v3 - 40) = 0;
    *(_BYTE *)(a1 + 263) = 0;
  }

  *(_BYTE *)(a1 + 264) = 0;
  if (qword_101934880 != -1) {
    dispatch_once(&qword_101934880, &stru_10188D488);
  }
  uint64_t v64 = (os_log_s *)qword_101934888;
  if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_ERROR))
  {
    int v65 = *(_DWORD *)(a1 + 68);
    *(_DWORD *)std::string buf = 67109376;
    *(_DWORD *)__int16 v80 = v53;
    *(_WORD *)&uint64_t v80[4] = 1024;
    *(_DWORD *)&v80[6] = v65;
    _os_log_impl( (void *)&_mh_execute_header,  v64,  OS_LOG_TYPE_ERROR,  "#Error,HRSE,readCLHRSETile,invalid CLHRSE,crc fail,calculated,%X,received,%X",  buf,  0xEu);
  }

  BOOL result = sub_1002921D0(115, 0);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    int v71 = *(_DWORD *)(a1 + 68);
    int v76 = 67109376;
    *(_DWORD *)double v77 = v53;
    *(_WORD *)&v77[4] = 1024;
    *(_DWORD *)&v77[6] = v71;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  16LL,  "#Error,HRSE,readCLHRSETile,invalid CLHRSE,crc fail,calculated,%X,received,%X",  &v76,  14);
    double v19 = (uint8_t *)v72;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "static BOOL CLHighResolutionSignalEnvironmentDataManager::readCLHRSETile(CLHRSETile &, const std::string &, BOOL &)",  "%s\n",  v72);
    goto LABEL_188;
  }

  return result;
}

uint64_t sub_100F3B2B8(uint64_t result, uint64_t a2, unint64_t a3, _DWORD *a4)
{
  if (result)
  {
    uint64_t v5 = a2 - 4;
    if (a2 - 4 <= a3)
    {
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_10188D488);
      }
      int v6 = (os_log_s *)qword_101934888;
      if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)std::string buf = 134349312;
        unint64_t v15 = a3;
        __int16 v16 = 2050;
        uint64_t v17 = v5;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_ERROR,  "#Error,HRSE,calculateCLHRSE_CRC,indexCrcInBuffer,%{public}zu,exceeds (bufferSize-4) bytes,%{public}zu",  buf,  0x16u);
      }

      BOOL v7 = sub_1002921D0(115, 0);
      BOOL result = 0LL;
      if (v7)
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934880 != -1) {
          dispatch_once(&qword_101934880, &stru_10188D488);
        }
        int v10 = 134349312;
        unint64_t v11 = a3;
        __int16 v12 = 2050;
        uint64_t v13 = v5;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  16LL,  "#Error,HRSE,calculateCLHRSE_CRC,indexCrcInBuffer,%{public}zu,exceeds (bufferSize-4) bytes,%{public}zu",  &v10,  22);
        BOOL v9 = (uint8_t *)v8;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "static BOOL CLHighResolutionSignalEnvironmentDataManager::calculateCLHRSE_CRC(unsigned char *, const size_t, c onst size_t, unsigned int &)",  "%s\n",  v8);
        if (v9 != buf) {
          free(v9);
        }
        return 0LL;
      }
    }

    else
    {
      *a4 = sub_1009A5E64(result, a2, a3);
      return 1LL;
    }
  }

  return result;
}

BOOL sub_100F3B4AC(BOOL result, uint64_t a2, void *a3, void *a4)
{
  if (result)
  {
    BOOL v7 = (FILE *)result;
    if (!feof((FILE *)result))
    {
      uint64_t v13 = 0LL;
      while (1)
      {
        char __ptr = 0;
        if (fread(&__ptr, 1uLL, 1uLL, v7) != 1) {
          return 0LL;
        }
        uint64_t v14 = ftell(v7);
        if (__ptr == 67)
        {
          uint64_t v15 = v14;
          LOBYTE(v133) = 67;
          *(_DWORD *)a2 = v133;
          *(_WORD *)(a2 + 4) = WORD2(v133);
          v16.i32[0] = *(_DWORD *)a2;
          if (vmovn_s16((int16x8_t)vmovl_u8(v16)).u32[0] == 1380469827
            && *(_BYTE *)(a2 + 4) == 83
            && *(_BYTE *)(a2 + 5) == 69)
          {
            *a4 = v13;
            if (fread((char *)&v133 + 6, 1uLL, 2uLL, v7) == 2)
            {
              *(void *)a2 = v133;
              if (fread(&v134, 1uLL, 6uLL, v7) == 6)
              {
                int v18 = v134;
                *(_WORD *)(a2 + _Block_object_dispose((const void *)(v1 - 128), 8) = __rev16(v134);
                if (v18 == 256)
                {
                  unsigned int v19 = v135;
                  *(_DWORD *)(a2 + 12) = bswap32(v135);
                  if (v19 == -1207959552)
                  {
                    size_t v20 = fread(&v136, 1uLL, 0xAAuLL, v7);
                    uint64_t v21 = *(unsigned int *)(a2 + 12);
                    if (v20 == v21 - 14)
                    {
                      *(_WORD *)(a2 + 16) = bswap32(v136) >> 16;
                      *(_DWORD *)(a2 + 2sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = bswap32(v137);
                      *(void *)(a2 + 24) = bswap64(v138);
                      unsigned int v22 = bswap32(v139);
                      *(_DWORD *)(a2 + 32) = v22;
                      unsigned int v23 = bswap32(v140);
                      *(_DWORD *)(a2 + 36) = v23;
                      *(void *)(a2 + sub_10004AD90(v3 - 40) = bswap64(v141);
                      *(void *)(a2 + 4_Block_object_dispose((const void *)(v1 - 128), 8) = bswap64(v142);
                      *(_DWORD *)(a2 + 56) = bswap32(v143);
                      *(_DWORD *)(a2 + 6sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = bswap32(v144);
                      *(_DWORD *)(a2 + 64) = bswap32(v145);
                      *a3 = 64LL;
                      *(_DWORD *)(a2 + 6_Block_object_dispose((const void *)(v1 - 128), 8) = bswap32(v146);
                      unsigned int v24 = bswap32(v147);
                      *(_DWORD *)(a2 + 72) = v24;
                      *(_OWORD *)(a2 + 10_Block_object_dispose((const void *)(v1 - 128), 8) = v150;
                      *(_OWORD *)(a2 + 92) = v149;
                      *(_OWORD *)(a2 + 76) = v148;
                      *(_OWORD *)(a2 + 172) = v154;
                      *(_OWORD *)(a2 + 156) = v153;
                      *(_OWORD *)(a2 + 1sub_10004AD90(v3 - 40) = v152;
                      *(_OWORD *)(a2 + 124) = v151;
                      if (v24 == (v23 * v22) >> 1)
                      {
                        if ((_DWORD)v21 == 184)
                        {
                          if (qword_101934880 != -1) {
                            dispatch_once(&qword_101934880, &stru_10188D488);
                          }
                          double v25 = (os_log_s *)qword_101934888;
                          if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
                          {
                            int v26 = *(unsigned __int16 *)(a2 + 8);
                            int v27 = *(_DWORD *)(a2 + 12);
                            int v28 = *(unsigned __int16 *)(a2 + 16);
                            int v29 = *(_DWORD *)(a2 + 20);
                            uint64_t v30 = *(void *)(a2 + 24);
                            int v31 = *(_DWORD *)(a2 + 32);
                            int v32 = *(_DWORD *)(a2 + 36);
                            int v34 = *(_DWORD *)(a2 + 68);
                            int v33 = *(_DWORD *)(a2 + 72);
                            uint64_t v36 = *(void *)(a2 + 40);
                            uint64_t v35 = *(void *)(a2 + 48);
                            double v37 = *(float *)(a2 + 56);
                            double v38 = *(float *)(a2 + 60);
                            double v39 = *(float *)(a2 + 64);
                            *(_DWORD *)std::string buf = 67177985;
                            int v106 = v26;
                            __int16 v107 = 1025;
                            int v108 = v27;
                            __int16 v109 = 1025;
                            int v110 = v28;
                            __int16 v111 = 1025;
                            int v112 = v29;
                            __int16 v113 = 2049;
                            uint64_t v114 = v30;
                            __int16 v115 = 1025;
                            int v116 = v31;
                            __int16 v117 = 1025;
                            int v118 = v32;
                            __int16 v119 = 1025;
                            int v120 = v33;
                            __int16 v121 = 1025;
                            int v122 = v34;
                            __int16 v123 = 2049;
                            uint64_t v124 = v36;
                            __int16 v125 = 2049;
                            uint64_t v126 = v35;
                            __int16 v127 = 2049;
                            double v128 = v37;
                            __int16 v129 = 2049;
                            double v130 = v38;
                            __int16 v131 = 2049;
                            double v132 = v39;
                            _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEBUG,  "HRSE,readCLHRSETileHeader,vers,%{private}d,headerLen,%{private}d,compressionType,%{private }d,expirationAge,%{private}d,timestamp,%{private}.1f,nrows,%{private}d,ncols,%{private}d,d ataSizeBytes,%{private}d,crc,%{private}d,xllcorner,%{private}.7lf,yllcorner,%{private}.7lf ,cellsize,%{private}.7f,buildingMedianHeight,%{private}.7f,buildingMaximumHeight,%{private}.7f",  buf,  0x6Eu);
                          }

                          if (sub_1002921D0(115, 2))
                          {
                            bzero(buf, 0x65CuLL);
                            if (qword_101934880 != -1) {
                              dispatch_once(&qword_101934880, &stru_10188D488);
                            }
                            int v60 = *(unsigned __int16 *)(a2 + 8);
                            int v61 = *(_DWORD *)(a2 + 12);
                            int v62 = *(unsigned __int16 *)(a2 + 16);
                            int v63 = *(_DWORD *)(a2 + 20);
                            uint64_t v64 = *(void *)(a2 + 24);
                            int v65 = *(_DWORD *)(a2 + 32);
                            int v66 = *(_DWORD *)(a2 + 36);
                            int v68 = *(_DWORD *)(a2 + 68);
                            int v67 = *(_DWORD *)(a2 + 72);
                            uint64_t v70 = *(void *)(a2 + 40);
                            uint64_t v69 = *(void *)(a2 + 48);
                            double v71 = *(float *)(a2 + 56);
                            double v72 = *(float *)(a2 + 60);
                            double v73 = *(float *)(a2 + 64);
                            int v77 = 67177985;
                            int v78 = v60;
                            __int16 v79 = 1025;
                            int v80 = v61;
                            __int16 v81 = 1025;
                            int v82 = v62;
                            __int16 v83 = 1025;
                            int v84 = v63;
                            __int16 v85 = 2049;
                            uint64_t v86 = v64;
                            __int16 v87 = 1025;
                            int v88 = v65;
                            __int16 v89 = 1025;
                            int v90 = v66;
                            __int16 v91 = 1025;
                            int v92 = v67;
                            __int16 v93 = 1025;
                            int v94 = v68;
                            __int16 v95 = 2049;
                            uint64_t v96 = v70;
                            __int16 v97 = 2049;
                            uint64_t v98 = v69;
                            __int16 v99 = 2049;
                            double v100 = v71;
                            __int16 v101 = 2049;
                            double v102 = v72;
                            __int16 v103 = 2049;
                            double v104 = v73;
                            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "HRSE,readCLHRSETileHeader,vers,%{private}d,headerLen,%{private}d,compressionType,%{private }d,expirationAge,%{private}d,timestamp,%{private}.1f,nrows,%{private}d,ncols,%{private}d,d ataSizeBytes,%{private}d,crc,%{private}d,xllcorner,%{private}.7lf,yllcorner,%{private}.7lf ,cellsize,%{private}.7f,buildingMedianHeight,%{private}.7f,buildingMaximumHeight,%{private}.7f",  &v77,  110);
                            uint64_t v75 = (uint8_t *)v74;
                            sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLHighResolutionSignalEnvironmentDataManager::readCLHRSETileHeader(FILE *, CLH RSETileHeader &, size_t &, size_t &)",  "%s\n",  v74);
                            if (v75 != buf) {
                              free(v75);
                            }
                          }

                          return 1LL;
                        }

                        if (qword_101934880 != -1) {
                          dispatch_once(&qword_101934880, &stru_10188D488);
                        }
                        __int16 v58 = (os_log_s *)qword_101934888;
                        if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_ERROR))
                        {
                          *(_WORD *)std::string buf = 0;
                          _os_log_impl( (void *)&_mh_execute_header,  v58,  OS_LOG_TYPE_ERROR,  "#Error,HRSE,readCLHRSETileHeader,invalid CLHRSE tile file - incorrect headerLength",  buf,  2u);
                        }

                        BOOL v59 = sub_1002921D0(115, 0);
                        BOOL result = 0LL;
                        if (v59)
                        {
                          bzero(buf, 0x65CuLL);
                          if (qword_101934880 != -1) {
                            dispatch_once(&qword_101934880, &stru_10188D488);
                          }
                          LOWORD(v77) = 0;
                          double v11 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  16LL,  "#Error,HRSE,readCLHRSETileHeader,invalid CLHRSE tile file - incorrect headerLength",  &v77,  2);
                          goto LABEL_11;
                        }
                      }

                      else
                      {
                        if (qword_101934880 != -1) {
                          dispatch_once(&qword_101934880, &stru_10188D488);
                        }
                        uint64_t v55 = (os_log_s *)qword_101934888;
                        if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_INFO))
                        {
                          *(_WORD *)std::string buf = 0;
                          _os_log_impl( (void *)&_mh_execute_header,  v55,  OS_LOG_TYPE_INFO,  "#Warning,HRSE,readCLHRSETileHeader,header.dataSizeBytes != header.nrows * header.ncols",  buf,  2u);
                        }

                        BOOL result = sub_1002921D0(115, 2);
                        if (result)
                        {
                          bzero(buf, 0x65CuLL);
                          if (qword_101934880 != -1) {
                            dispatch_once(&qword_101934880, &stru_10188D488);
                          }
                          LOWORD(v77) = 0;
                          double v56 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  1LL,  "#Warning,HRSE,readCLHRSETileHeader,header.dataSizeBytes != header.nrows * header.ncols",  &v77,  2);
                          __int16 v12 = v57;
                          sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLHighResolutionSignalEnvironmentDataManager::readCLHRSETileHeader(FILE *, CLHRS ETileHeader &, size_t &, size_t &)",  "%s\n",  v56);
                          goto LABEL_12;
                        }
                      }
                    }

                    else
                    {
                      if (qword_101934880 != -1) {
                        dispatch_once(&qword_101934880, &stru_10188D488);
                      }
                      int v53 = (os_log_s *)qword_101934888;
                      if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_ERROR))
                      {
                        *(_WORD *)std::string buf = 0;
                        _os_log_impl( (void *)&_mh_execute_header,  v53,  OS_LOG_TYPE_ERROR,  "#Error,HRSE,readCLHRSETileHeader,invalid CLHRSE tile file - rest of header",  buf,  2u);
                      }

                      BOOL v54 = sub_1002921D0(115, 0);
                      BOOL result = 0LL;
                      if (v54)
                      {
                        bzero(buf, 0x65CuLL);
                        if (qword_101934880 != -1) {
                          dispatch_once(&qword_101934880, &stru_10188D488);
                        }
                        LOWORD(v77) = 0;
                        double v11 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  16LL,  "#Error,HRSE,readCLHRSETileHeader,invalid CLHRSE tile file - rest of header",  &v77,  2);
                        goto LABEL_11;
                      }
                    }
                  }

                  else
                  {
                    if (qword_101934880 != -1) {
                      dispatch_once(&qword_101934880, &stru_10188D488);
                    }
                    uint64_t v49 = (os_log_s *)qword_101934888;
                    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_ERROR))
                    {
                      int v50 = *(_DWORD *)(a2 + 12);
                      *(_DWORD *)std::string buf = 67109376;
                      int v106 = 184;
                      __int16 v107 = 1024;
                      int v108 = v50;
                      _os_log_impl( (void *)&_mh_execute_header,  v49,  OS_LOG_TYPE_ERROR,  "#Error,HRSE,readCLHRSETileHeader,invalid header length - expected,%d,got,%d",  buf,  0xEu);
                    }

                    BOOL v51 = sub_1002921D0(115, 0);
                    BOOL result = 0LL;
                    if (v51)
                    {
                      bzero(buf, 0x65CuLL);
                      if (qword_101934880 != -1) {
                        dispatch_once(&qword_101934880, &stru_10188D488);
                      }
                      int v52 = *(_DWORD *)(a2 + 12);
                      int v77 = 67109376;
                      int v78 = 184;
                      __int16 v79 = 1024;
                      int v80 = v52;
                      double v11 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  16LL,  "#Error,HRSE,readCLHRSETileHeader,invalid header length - expected,%d,got,%d",  &v77);
                      goto LABEL_11;
                    }
                  }
                }

                else
                {
                  if (qword_101934880 != -1) {
                    dispatch_once(&qword_101934880, &stru_10188D488);
                  }
                  double v45 = (os_log_s *)qword_101934888;
                  if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_ERROR))
                  {
                    int v46 = *(unsigned __int16 *)(a2 + 8);
                    *(_DWORD *)std::string buf = 67109376;
                    int v106 = 1;
                    __int16 v107 = 1024;
                    int v108 = v46;
                    _os_log_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_ERROR,  "#Error,HRSE,readCLHRSETileHeader,invalid tile version - expected,%d,got,%d",  buf,  0xEu);
                  }

                  BOOL v47 = sub_1002921D0(115, 0);
                  BOOL result = 0LL;
                  if (v47)
                  {
                    bzero(buf, 0x65CuLL);
                    if (qword_101934880 != -1) {
                      dispatch_once(&qword_101934880, &stru_10188D488);
                    }
                    int v48 = *(unsigned __int16 *)(a2 + 8);
                    int v77 = 67109376;
                    int v78 = 1;
                    __int16 v79 = 1024;
                    int v80 = v48;
                    double v11 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  16LL,  "#Error,HRSE,readCLHRSETileHeader,invalid tile version - expected,%d,got,%d",  &v77);
                    goto LABEL_11;
                  }
                }
              }

              else
              {
                if (qword_101934880 != -1) {
                  dispatch_once(&qword_101934880, &stru_10188D488);
                }
                uint64_t v43 = (os_log_s *)qword_101934888;
                if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_ERROR))
                {
                  *(_WORD *)std::string buf = 0;
                  _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_ERROR,  "#Error,HRSE,readCLHRSETileHeader,invalid CLHRSE tile file - version and headerLength",  buf,  2u);
                }

                BOOL v44 = sub_1002921D0(115, 0);
                BOOL result = 0LL;
                if (v44)
                {
                  bzero(buf, 0x65CuLL);
                  if (qword_101934880 != -1) {
                    dispatch_once(&qword_101934880, &stru_10188D488);
                  }
                  LOWORD(v77) = 0;
                  double v11 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  16LL,  "#Error,HRSE,readCLHRSETileHeader,invalid CLHRSE tile file - version and headerLength",  &v77,  2);
                  goto LABEL_11;
                }
              }
            }

            else
            {
              if (qword_101934880 != -1) {
                dispatch_once(&qword_101934880, &stru_10188D488);
              }
              __int16 v41 = (os_log_s *)qword_101934888;
              if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_ERROR))
              {
                *(_WORD *)std::string buf = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_ERROR,  "#Error,HRSE,readCLHRSETileHeader,invalid CLHRSE tile file - header string",  buf,  2u);
              }

              BOOL v42 = sub_1002921D0(115, 0);
              BOOL result = 0LL;
              if (v42)
              {
                bzero(buf, 0x65CuLL);
                if (qword_101934880 != -1) {
                  dispatch_once(&qword_101934880, &stru_10188D488);
                }
                LOWORD(v77) = 0;
                double v11 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  16LL,  "#Error,HRSE,readCLHRSETileHeader,invalid CLHRSE tile file - header string",  &v77,  2);
                goto LABEL_11;
              }
            }

            return result;
          }

          if (fseek(v7, v15, 0))
          {
            if (qword_101934880 != -1) {
              dispatch_once(&qword_101934880, &stru_10188D488);
            }
            double v40 = (os_log_s *)qword_101934888;
            if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_ERROR))
            {
              *(_WORD *)std::string buf = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_ERROR,  "#Error,HRSE,readCLHRSETileHeader,fseek returned non-zero",  buf,  2u);
            }

            if (sub_1002921D0(115, 0))
            {
              bzero(buf, 0x65CuLL);
              if (qword_101934880 != -1) {
                dispatch_once(&qword_101934880, &stru_10188D488);
              }
              LOWORD(v77) = 0;
              double v11 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  16LL,  "#Error,HRSE,readCLHRSETileHeader,fseek returned non-zero",  &v77,  2);
              goto LABEL_11;
            }

            return 0LL;
          }
        }

        break;
      }
    }

    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    double v8 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "#Error,HRSE,readCLHRSETileHeader,did not synchronize to tile header_string",  buf,  2u);
    }

    BOOL v9 = sub_1002921D0(115, 0);
    BOOL result = 0LL;
    if (v9)
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_10188D488);
      }
      LOWORD(v77) = 0;
      double v11 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  16LL,  "#Error,HRSE,readCLHRSETileHeader,did not synchronize to tile header_string",  &v77,  2);
LABEL_11:
      __int16 v12 = v10;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "static BOOL CLHighResolutionSignalEnvironmentDataManager::readCLHRSETileHeader(FILE *, CLHRSETileHeader &, size_t &, size_t &)",  "%s\n",  v11);
LABEL_12:
      if (v12 != buf) {
        free(v12);
      }
      return 0LL;
    }
  }

  return result;
}

void sub_100F3C314(unint64_t *a1, unint64_t a2)
{
  unint64_t v2 = a1[1] - *a1;
  BOOL v3 = a2 >= v2;
  size_t v4 = a2 - v2;
  if (v4 != 0 && v3)
  {
    sub_100297954(a1, v4);
  }

  else if (!v3)
  {
    a1[1] = *a1 + a2;
  }

uint64_t sub_100F3C33C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6 = a1 + 96;
  (*(void (**)(uint64_t))(*(void *)(a1 + 96) + 16LL))(a1 + 96);
  if (a2)
  {
    switch(a3)
    {
      case 0:
        if (qword_101934880 != -1) {
          dispatch_once(&qword_101934880, &stru_10188D488);
        }
        BOOL v7 = (os_log_s *)qword_101934888;
        if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)std::string buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "HRSE,onAvlFileUpdated,avl download status,NONE",  buf,  2u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934880 != -1) {
            dispatch_once(&qword_101934880, &stru_10188D488);
          }
          LOWORD(__p[0]) = 0;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  0LL,  "HRSE,onAvlFileUpdated,avl download status,NONE",  __p,  2);
          BOOL v9 = (char *)v8;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLHighResolutionSignalEnvironmentDataManager::onAvlFileUpdated(CLFileUpdate *, CLFileUpdate::UpdateStatus)",  "%s\n",  v8);
          break;
        }

        return (*(uint64_t (**)(uint64_t))(*(void *)v6 + 24LL))(v6);
      case 1:
        if (qword_101934880 != -1) {
          dispatch_once(&qword_101934880, &stru_10188D488);
        }
        int v29 = (os_log_s *)qword_101934888;
        if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)std::string buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEFAULT,  "HRSE,onAvlFileUpdated,avl download status,STARTED",  buf,  2u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934880 != -1) {
            dispatch_once(&qword_101934880, &stru_10188D488);
          }
          LOWORD(__p[0]) = 0;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  0LL,  "HRSE,onAvlFileUpdated,avl download status,STARTED",  __p,  2);
          BOOL v51 = (char *)v50;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLHighResolutionSignalEnvironmentDataManager::onAvlFileUpdated(CLFileUpdate *, CLFileUpdate::UpdateStatus)",  "%s\n",  v50);
          if (v51 != buf) {
            free(v51);
          }
        }

        *(CFAbsoluteTime *)(a1 + 80_Block_object_dispose((const void *)(v1 - 128), 8) = CFAbsoluteTimeGetCurrent();
        return (*(uint64_t (**)(uint64_t))(*(void *)v6 + 24LL))(v6);
      case 2:
        if (qword_101934880 != -1) {
          dispatch_once(&qword_101934880, &stru_10188D488);
        }
        __int16 v12 = (os_log_s *)qword_101934888;
        if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)std::string buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "HRSE,onAvlFileUpdated,avl download status,COMPLETED",  buf,  2u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934880 != -1) {
            dispatch_once(&qword_101934880, &stru_10188D488);
          }
          LOWORD(__p[0]) = 0;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  0LL,  "HRSE,onAvlFileUpdated,avl download status,COMPLETED",  __p,  2);
          BOOL v47 = (char *)v46;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLHighResolutionSignalEnvironmentDataManager::onAvlFileUpdated(CLFileUpdate *, CLFileUpdate::UpdateStatus)",  "%s\n",  v46);
          if (v47 != buf) {
            free(v47);
          }
        }

        sub_100386874(a2, (uint64_t)__p);
        *(_DWORD *)(a1 + 82sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = 1;
        if (qword_101934880 != -1) {
          dispatch_once(&qword_101934880, &stru_10188D488);
        }
        uint64_t v13 = (os_log_s *)qword_101934888;
        if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v14 = __p;
          if (v74 < 0) {
            uint64_t v14 = (void **)__p[0];
          }
          *(_DWORD *)std::string buf = 136446210;
          *(void *)&uint8_t buf[4] = v14;
          _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "HRSE,onAvlFileUpdated,avl downloaded,%{public}s",  buf,  0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934880 != -1) {
            dispatch_once(&qword_101934880, &stru_10188D488);
          }
          int v52 = __p;
          if (v74 < 0) {
            int v52 = (void **)__p[0];
          }
          LODWORD(v72.__r_.__value_.__l.__data_) = 136446210;
          *(std::string::size_type *)((char *)v72.__r_.__value_.__r.__words + 4) = (std::string::size_type)v52;
          LODWORD(v67) = 12;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "HRSE,onAvlFileUpdated,avl downloaded,%{public}s",  &v72,  v67);
          BOOL v54 = (char *)v53;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLHighResolutionSignalEnvironmentDataManager::onAvlFileUpdated(CLFileUpdate *, CLFileUpdate::UpdateStatus)",  "%s\n",  v53);
          if (v54 != buf) {
            free(v54);
          }
        }

        if (v74 >= 0) {
          uint64_t v15 = __p;
        }
        else {
          uint64_t v15 = (void **)__p[0];
        }
        if (!sub_100296E50((const char *)v15, 4LL))
        {
          if (qword_101934880 != -1) {
            dispatch_once(&qword_101934880, &stru_10188D488);
          }
          uint8x8_t v16 = (os_log_s *)qword_101934888;
          if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_INFO))
          {
            uint64_t v17 = __p;
            if (v74 < 0) {
              uint64_t v17 = (void **)__p[0];
            }
            *(_DWORD *)std::string buf = 136446210;
            *(void *)&uint8_t buf[4] = v17;
            _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_INFO,  "#Warning,HRSE,onAvlFileUpdated,Cannot set protection class for HRSE avl file,%{public}s",  buf,  0xCu);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934880 != -1) {
              dispatch_once(&qword_101934880, &stru_10188D488);
            }
            int v61 = __p;
            if (v74 < 0) {
              int v61 = (void **)__p[0];
            }
            LODWORD(v72.__r_.__value_.__l.__data_) = 136446210;
            *(std::string::size_type *)((char *)v72.__r_.__value_.__r.__words + 4) = (std::string::size_type)v61;
            LODWORD(v67) = 12;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  1LL,  "#Warning,HRSE,onAvlFileUpdated,Cannot set protection class for HRSE avl file,%{public}s",  &v72,  v67);
            int v63 = (char *)v62;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLHighResolutionSignalEnvironmentDataManager::onAvlFileUpdated(CLFileUpdate *, CLFileUpdate::UpdateStatus)",  "%s\n",  v62);
            if (v63 != buf) {
              free(v63);
            }
          }
        }

        int v18 = (char *)sub_1002F8DDC();
        sub_10030AC8C(v18, (uint64_t)&v72);
        if (*(char *)(a1 + 415) < 0)
        {
          sub_1010DD48C(buf, *(void **)(a1 + 392), *(void *)(a1 + 400));
        }

        else
        {
          *(_OWORD *)std::string buf = *(_OWORD *)(a1 + 392);
          *(void *)&uint8_t buf[16] = *(void *)(a1 + 408);
        }

        if (buf[23] >= 0) {
          int v32 = buf;
        }
        else {
          int v32 = *(const std::string::value_type **)buf;
        }
        if (buf[23] >= 0) {
          std::string::size_type v33 = buf[23];
        }
        else {
          std::string::size_type v33 = *(void *)&buf[8];
        }
        std::string::append(&v72, v32, v33);
        if ((buf[23] & 0x80000000) != 0) {
          operator delete(*(void **)buf);
        }
        *(CFAbsoluteTime *)(a1 + 80_Block_object_dispose((const void *)(v1 - 128), 8) = CFAbsoluteTimeGetCurrent();
        if (v74 >= 0) {
          int v34 = (char *)__p;
        }
        else {
          int v34 = (char *)__p[0];
        }
        if ((v72.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          uint64_t v35 = &v72;
        }
        else {
          uint64_t v35 = (std::string *)v72.__r_.__value_.__r.__words[0];
        }
        sub_100293D74(v34, (const char *)v35);
        if (qword_101934880 != -1) {
          dispatch_once(&qword_101934880, &stru_10188D488);
        }
        uint64_t v36 = (os_log_s *)qword_101934888;
        if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
        {
          double v37 = __p;
          if (v74 < 0) {
            double v37 = (void **)__p[0];
          }
          double v38 = &v72;
          if ((v72.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            double v38 = (std::string *)v72.__r_.__value_.__r.__words[0];
          }
          *(_DWORD *)std::string buf = 136446466;
          *(void *)&uint8_t buf[4] = v37;
          *(_WORD *)&_BYTE buf[12] = 2082;
          *(void *)&buf[14] = v38;
          _os_log_impl( (void *)&_mh_execute_header,  v36,  OS_LOG_TYPE_DEBUG,  "HRSE,onAvlFileUpdated,avl file decompressed,%{public}s,to,%{public}s",  buf,  0x16u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934880 != -1) {
            dispatch_once(&qword_101934880, &stru_10188D488);
          }
          uint64_t v55 = __p;
          if (v74 < 0) {
            uint64_t v55 = (void **)__p[0];
          }
          double v56 = &v72;
          if ((v72.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            double v56 = (std::string *)v72.__r_.__value_.__r.__words[0];
          }
          int v68 = 136446466;
          uint64_t v69 = (std::string *)v55;
          __int16 v70 = 2082;
          double v71 = v56;
          LODWORD(v67) = 22;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "HRSE,onAvlFileUpdated,avl file decompressed,%{public}s,to,%{public}s",  &v68,  v67);
          __int16 v58 = (char *)v57;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLHighResolutionSignalEnvironmentDataManager::onAvlFileUpdated(CLFileUpdate *, CLFileUpdate::UpdateStatus)",  "%s\n",  v57);
          if (v58 != buf) {
            free(v58);
          }
        }

        if ((v72.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          double v39 = &v72;
        }
        else {
          double v39 = (std::string *)v72.__r_.__value_.__r.__words[0];
        }
        if (!sub_100296E50((const char *)v39, 4LL))
        {
          if (qword_101934880 != -1) {
            dispatch_once(&qword_101934880, &stru_10188D488);
          }
          double v40 = (os_log_s *)qword_101934888;
          if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_INFO))
          {
            __int16 v41 = &v72;
            if ((v72.__r_.__value_.__s.__size_ & 0x80u) != 0) {
              __int16 v41 = (std::string *)v72.__r_.__value_.__r.__words[0];
            }
            *(_DWORD *)std::string buf = 136446210;
            *(void *)&uint8_t buf[4] = v41;
            _os_log_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_INFO,  "#Warning,HRSE,onAvlFileUpdated,Cannot set protection class for HRSE decompressed avl file,%{public}s",  buf,  0xCu);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934880 != -1) {
              dispatch_once(&qword_101934880, &stru_10188D488);
            }
            uint64_t v64 = &v72;
            if ((v72.__r_.__value_.__s.__size_ & 0x80u) != 0) {
              uint64_t v64 = (std::string *)v72.__r_.__value_.__r.__words[0];
            }
            int v68 = 136446210;
            uint64_t v69 = v64;
            LODWORD(v67) = 12;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  1LL,  "#Warning,HRSE,onAvlFileUpdated,Cannot set protection class for HRSE decompressed avl file,%{public}s",  &v68,  v67);
            int v66 = (char *)v65;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLHighResolutionSignalEnvironmentDataManager::onAvlFileUpdated(CLFileUpdate *, CLFileUpdate::UpdateStatus)",  "%s\n",  v65);
            if (v66 != buf) {
              free(v66);
            }
          }
        }

        uint64_t v42 = a1 + 8;
        int v43 = sub_10025609C(v42);
        if (qword_101934880 != -1) {
          dispatch_once(&qword_101934880, &stru_10188D488);
        }
        BOOL v44 = (os_log_s *)qword_101934888;
        if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)std::string buf = 67240192;
          *(_DWORD *)&uint8_t buf[4] = v43;
          _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_DEBUG,  "HRSE,onAvlFileUpdated,is availability file valid,%{public}d",  buf,  8u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934880 != -1) {
            dispatch_once(&qword_101934880, &stru_10188D488);
          }
          int v68 = 67240192;
          LODWORD(v69) = v43;
          LODWORD(v67) = 8;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "HRSE,onAvlFileUpdated,is availability file valid,%{public}d",  &v68,  v67);
          int v60 = (char *)v59;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLHighResolutionSignalEnvironmentDataManager::onAvlFileUpdated(CLFileUpdate *, CLFileUpdate::UpdateStatus)",  "%s\n",  v59);
          if (v60 != buf) {
            free(v60);
          }
        }

        sub_100254D88(v42);
        goto LABEL_123;
      case 3:
        if (qword_101934880 != -1) {
          dispatch_once(&qword_101934880, &stru_10188D488);
        }
        unsigned int v19 = (os_log_s *)qword_101934888;
        if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)std::string buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "#Warning,HRSE,onAvlFileUpdated,avl download status,FAILED",  buf,  2u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934880 != -1) {
            dispatch_once(&qword_101934880, &stru_10188D488);
          }
          LOWORD(__p[0]) = 0;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  0LL,  "#Warning,HRSE,onAvlFileUpdated,avl download status,FAILED",  __p,  2);
          uint64_t v49 = (char *)v48;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLHighResolutionSignalEnvironmentDataManager::onAvlFileUpdated(CLFileUpdate *, CLFileUpdate::UpdateStatus)",  "%s\n",  v48);
          if (v49 != buf) {
            free(v49);
          }
        }

        int v20 = *(_DWORD *)(a1 + 820);
        if (v20 < 5) {
          int v21 = v20 + 1;
        }
        else {
          int v21 = v20 + 10;
        }
        *(_DWORD *)(a1 + 82sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v21;
        sub_100386874(a2, (uint64_t)__p);
        if (qword_101934880 != -1) {
          dispatch_once(&qword_101934880, &stru_10188D488);
        }
        unsigned int v22 = (os_log_s *)qword_101934888;
        if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEFAULT))
        {
          unsigned int v23 = __p;
          if (v74 < 0) {
            unsigned int v23 = (void **)__p[0];
          }
          int v24 = *(_DWORD *)(a1 + 820);
          *(_DWORD *)std::string buf = 136446466;
          *(void *)&uint8_t buf[4] = v23;
          *(_WORD *)&_BYTE buf[12] = 1026;
          *(_DWORD *)&buf[14] = v24;
          _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "#Warning,HRSE,onAvlFileUpdated,avl download request failed,%{public}s,retryMultiplier,%{public}d",  buf,  0x12u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934880 != -1) {
            dispatch_once(&qword_101934880, &stru_10188D488);
          }
          double v25 = __p;
          if (v74 < 0) {
            double v25 = (void **)__p[0];
          }
          int v26 = *(_DWORD *)(a1 + 820);
          LODWORD(v72.__r_.__value_.__l.__data_) = 136446466;
          *(std::string::size_type *)((char *)v72.__r_.__value_.__r.__words + 4) = (std::string::size_type)v25;
          WORD2(v72.__r_.__value_.__r.__words[1]) = 1026;
          *(_DWORD *)((char *)&v72.__r_.__value_.__r.__words[1] + 6) = v26;
          LODWORD(v67) = 18;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  0LL,  "#Warning,HRSE,onAvlFileUpdated,avl download request failed,%{public}s,retryMultiplier,%{public}d",  &v72,  v67);
          int v28 = (char *)v27;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLHighResolutionSignalEnvironmentDataManager::onAvlFileUpdated(CLFileUpdate *, CLFileUpdate::UpdateStatus)",  "%s\n",  v27);
          if (v28 != buf) {
            free(v28);
          }
        }

void sub_100F3D528( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20, int a21, __int16 a22, char a23, char a24, uint64_t a25, void *a26, uint64_t a27, int a28, __int16 a29, char a30, char a31, uint64_t a32, void *a33, uint64_t a34, int a35, __int16 a36, char a37, char a38)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  if (a31 < 0) {
    operator delete(a26);
  }
  sub_1011C52D0((uint64_t)&a12);
  _Unwind_Resume(a1);
}

uint64_t sub_100F3D5EC(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v7 = a1 + 96;
  uint64_t v6 = *(void *)(a1 + 96);
  uint64_t v49 = a1 + 96;
  (*(void (**)(uint64_t))(v6 + 16))(a1 + 96);
  __int16 v50 = 256;
  int v8 = sub_1002581D4(v7 - 88);
  int v9 = *(unsigned __int8 *)(a1 + 440);
  if (qword_101934880 != -1) {
    dispatch_once(&qword_101934880, &stru_10188D488);
  }
  int v10 = (os_log_s *)qword_101934888;
  if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::string buf = 67240448;
    *(_DWORD *)uint64_t v55 = v8;
    *(_WORD *)&v55[4] = 1026;
    *(_DWORD *)&v55[6] = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "HRSE,downloadFileIfNeeded,needAvailability,%{public}d,needTile,%{public}d",  buf,  0xEu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    int v51 = 67240448;
    *(_DWORD *)int v52 = v8;
    *(_WORD *)&v52[4] = 1026;
    *(_DWORD *)&void v52[6] = v9;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "HRSE,downloadFileIfNeeded,needAvailability,%{public}d,needTile,%{public}d",  &v51,  14);
    int v31 = (uint8_t *)v30;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLHighResolutionSignalEnvironmentDataManager::downloadFileIfNeeded(const CLDaemonLocation &, const BOOL)",  "%s\n",  v30);
    if (v31 != buf) {
      free(v31);
    }
  }

  if (((v9 == 0) & ~v8) == 0)
  {
    if (v8 && (double v11 = (void *)(a2 + 76), vabdd_f64(*(double *)(a2 + 76), *(double *)(a1 + 808)) > 3600.0))
    {
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_10188D488);
      }
      __int16 v12 = (os_log_s *)qword_101934888;
      if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "HRSE,downloadFileIfNeeded,download availability file",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934880 != -1) {
          dispatch_once(&qword_101934880, &stru_10188D488);
        }
        LOWORD(v51) = 0;
        LODWORD(v43) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "HRSE,downloadFileIfNeeded,download availability file",  &v51,  v43);
        uint64_t v35 = (uint8_t *)v34;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLHighResolutionSignalEnvironmentDataManager::downloadFileIfNeeded(const CLDaemonLocation &, const BOOL)",  "%s\n",  v34);
        if (v35 != buf) {
          free(v35);
        }
      }

      sub_100F36784(a1, v11);
    }

    else
    {
      if (*(_BYTE *)(a1 + 441))
      {
        if (qword_101934880 != -1) {
          dispatch_once(&qword_101934880, &stru_10188D488);
        }
        uint64_t v13 = (os_log_s *)qword_101934888;
        if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)std::string buf = 134349056;
          *(void *)uint64_t v55 = 0x4122750000000000LL;
          _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "HRSE,downloadFileIfNeeded,corrupted tile, increase download retry interval to %{public}.5lf seconds",  buf,  0xCu);
        }

        double v14 = 604800.0;
        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934880 != -1) {
            dispatch_once(&qword_101934880, &stru_10188D488);
          }
          int v51 = 134349056;
          *(void *)int v52 = 0x4122750000000000LL;
          LODWORD(v43) = 12;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "HRSE,downloadFileIfNeeded,corrupted tile, increase download retry interval to %{public}.5lf seconds",  &v51,  v43);
          uint8x8_t v16 = (uint8_t *)v15;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLHighResolutionSignalEnvironmentDataManager::downloadFileIfNeeded(const CLDaemonLocation &, const BOOL)",  "%s\n",  v15);
          if (v16 != buf) {
            free(v16);
          }
        }
      }

      else
      {
        double v14 = 31.0;
      }

      if (v9)
      {
        double v17 = *(double *)(a2 + 76);
        if (vabdd_f64(v17, *(double *)(a1 + 800)) > v14)
        {
          *(double *)(a1 + 80sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = v17;
          if (qword_101934880 != -1) {
            dispatch_once(&qword_101934880, &stru_10188D488);
          }
          int v18 = (os_log_s *)qword_101934888;
          if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_INFO))
          {
            uint64_t v19 = *(void *)(a1 + 448);
            uint64_t v20 = *(void *)(a1 + 456);
            *(_DWORD *)std::string buf = 134283777;
            *(void *)uint64_t v55 = v19;
            *(_WORD *)&v55[8] = 2049;
            uint64_t v56 = v20;
            _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_INFO,  "HRSE,requestDownload,requesting HRSE tile download,lat,%{private}.7lf,lon,%{private}.7lf",  buf,  0x16u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934880 != -1) {
              dispatch_once(&qword_101934880, &stru_10188D488);
            }
            uint64_t v36 = *(void *)(a1 + 448);
            uint64_t v37 = *(void *)(a1 + 456);
            int v51 = 134283777;
            *(void *)int v52 = v36;
            *(_WORD *)&v52[8] = 2049;
            uint64_t v53 = v37;
            LODWORD(v43) = 22;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  1LL,  "HRSE,requestDownload,requesting HRSE tile download,lat,%{private}.7lf,lon,%{private}.7lf",  &v51,  v43);
            double v39 = (uint8_t *)v38;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLHighResolutionSignalEnvironmentDataManager::downloadFileIfNeeded(const CLDaemonLocation &, const BOOL)",  "%s\n",  v38);
            if (v39 != buf) {
              free(v39);
            }
          }

          if (a3)
          {
            if (*(double *)(a2 + 20) <= 10.0)
            {
              LOBYTE(a3) = 0;
            }

            else
            {
              if (qword_101934880 != -1) {
                dispatch_once(&qword_101934880, &stru_10188D488);
              }
              int v21 = (os_log_s *)qword_101934888;
              if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_INFO))
              {
                uint64_t v22 = *(void *)(a2 + 20);
                *(_DWORD *)std::string buf = 134349312;
                *(void *)uint64_t v55 = v22;
                *(_WORD *)&v55[8] = 2050;
                uint64_t v56 = 0x4024000000000000LL;
                _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_INFO,  "HRSE,allowing download request over cell due to large horizontal uncertainty, uncertainty,%{public}.5l f, uncertainty threshold,%{public}.5lf",  buf,  0x16u);
              }

              if (sub_1002921D0(115, 2))
              {
                bzero(buf, 0x65CuLL);
                if (qword_101934880 != -1) {
                  dispatch_once(&qword_101934880, &stru_10188D488);
                }
                uint64_t v40 = *(void *)(a2 + 20);
                int v51 = 134349312;
                *(void *)int v52 = v40;
                *(_WORD *)&v52[8] = 2050;
                uint64_t v53 = 0x4024000000000000LL;
                LODWORD(v43) = 22;
                _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  1LL,  "HRSE,allowing download request over cell due to large horizontal uncertainty, uncertainty,%{public}.5l f, uncertainty threshold,%{public}.5lf",  &v51,  v43);
                uint64_t v42 = (uint8_t *)v41;
                sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLHighResolutionSignalEnvironmentDataManager::downloadFileIfNeeded(const CLDaemonLocation &, const BOOL)",  "%s\n",  v41);
                if (v42 != buf) {
                  free(v42);
                }
              }

              LOBYTE(a3) = 1;
            }
          }

          CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
          char v24 = *(_BYTE *)(a1 + 825);
          if (v24) {
            LOBYTE(a3) = 1;
          }
          id v25 = objc_msgSend(objc_msgSend(*(id *)(a1 + 360), "vendor"), "proxyForService:", @"CLTilesManager");
          double v26 = *(double *)(a1 + 448);
          double v27 = *(double *)(a1 + 456);
          v44[0] = a3;
          v44[1] = v24;
          v44[2] = 0;
          unint64_t v45 = 0xBFF0000000000000LL;
          int v46 = 0;
          CFAbsoluteTime v47 = Current;
          __int16 v48 = 1;
          [v25 requestTileDownloadByType:2 lat:-1 lon:v44 seckey:v26 details:v27];
        }
      }

      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_10188D488);
      }
      int v28 = (os_log_s *)qword_101934888;
      if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEBUG,  "HRSE,downloadFileIfNeeded,tile download finished!",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934880 != -1) {
          dispatch_once(&qword_101934880, &stru_10188D488);
        }
        LOWORD(v51) = 0;
        LODWORD(v43) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "HRSE,downloadFileIfNeeded,tile download finished!",  &v51,  v43);
        std::string::size_type v33 = (uint8_t *)v32;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLHighResolutionSignalEnvironmentDataManager::downloadFileIfNeeded(const CLDaemonLocation &, const BOOL)",  "%s\n",  v32);
        if (v33 != buf) {
          free(v33);
        }
      }
    }
  }

  return (*(uint64_t (**)(uint64_t))(*(void *)v7 + 24LL))(v7);
}

void sub_100F3DF68( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
}

double sub_100F3DFB8()
{
  double v16 = 0.0;
  sub_1002F0B04(buf);
  int v0 = sub_1002A82BC(*(uint64_t *)&buf[0], "HrseAvlFileUpdatePeriodOverWifi", &v16);
  uint64_t v1 = (std::__shared_weak_count *)*((void *)&buf[0] + 1);
  if (*((void *)&buf[0] + 1))
  {
    unint64_t v2 = (unint64_t *)(*((void *)&buf[0] + 1) + 8LL);
    do
      unint64_t v3 = __ldaxr(v2);
    while (__stlxr(v3 - 1, v2));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }

  if (v0)
  {
    if (v16 > 0.0)
    {
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_10188D488);
      }
      size_t v4 = (os_log_s *)qword_101934888;
      if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
      {
        LODWORD(buf[0]) = 134349056;
        *(double *)((char *)buf + 4) = v16;
        _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "HRSE,HrseAvlFileUpdatePeriodOverWifi,%{public}.1lf",  (uint8_t *)buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934880 != -1) {
          dispatch_once(&qword_101934880, &stru_10188D488);
        }
        int v17 = 134349056;
        uint64_t v18 = *(void *)&v16;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "HRSE,HrseAvlFileUpdatePeriodOverWifi,%{public}.1lf",  &v17,  12);
        __int16 v12 = (char *)v11;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "CFTimeInterval CLHighResolutionSignalEnvironmentDataManager::getAvlFileDownloadRateOverWifi() const",  "%s\n",  v11);
      }

      return v16;
    }

    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    uint64_t v6 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_INFO))
    {
      LODWORD(buf[0]) = 134349056;
      *(double *)((char *)buf + 4) = v16;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "#Warning,HRSE,given avl update rate over WiFi is invalid,%{public}.1lf,using default value instead",  (uint8_t *)buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_10188D488);
      }
      int v17 = 134349056;
      uint64_t v18 = *(void *)&v16;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  1LL,  "#Warning,HRSE,given avl update rate over WiFi is invalid,%{public}.1lf,using default value instead",  &v17,  12);
      double v14 = (char *)v13;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CFTimeInterval CLHighResolutionSignalEnvironmentDataManager::getAvlFileDownloadRateOverWifi() const",  "%s\n",  v13);
    }
  }

  if (qword_101934880 != -1) {
    dispatch_once(&qword_101934880, &stru_10188D488);
  }
  uint64_t v7 = (os_log_s *)qword_101934888;
  if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
  {
    LODWORD(buf[0]) = 134349056;
    *(void *)((char *)buf + 4) = 0x40F5180000000000LL;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "HRSE,HrseAvlFileUpdatePeriodOverWifi,%{public}.1lf",  (uint8_t *)buf,  0xCu);
  }

  double v5 = 86400.0;
  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    int v17 = 134349056;
    uint64_t v18 = 0x40F5180000000000LL;
    LODWORD(v15) = 12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "HRSE,HrseAvlFileUpdatePeriodOverWifi,%{public}.1lf",  &v17,  v15);
    int v10 = (char *)v9;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CFTimeInterval CLHighResolutionSignalEnvironmentDataManager::getAvlFileDownloadRateOverWifi() const",  "%s\n",  v9);
  }

  return v5;
}

void sub_100F3E484( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

double sub_100F3E4A0()
{
  double v16 = 0.0;
  sub_1002F0B04(buf);
  int v0 = sub_1002A82BC(*(uint64_t *)&buf[0], "HrseAvlFileUpdatePeriodOverCell", &v16);
  uint64_t v1 = (std::__shared_weak_count *)*((void *)&buf[0] + 1);
  if (*((void *)&buf[0] + 1))
  {
    unint64_t v2 = (unint64_t *)(*((void *)&buf[0] + 1) + 8LL);
    do
      unint64_t v3 = __ldaxr(v2);
    while (__stlxr(v3 - 1, v2));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }

  if (v0)
  {
    if (v16 > 0.0)
    {
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_10188D488);
      }
      size_t v4 = (os_log_s *)qword_101934888;
      if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
      {
        LODWORD(buf[0]) = 134349056;
        *(double *)((char *)buf + 4) = v16;
        _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "HRSE,HrseAvlFileUpdatePeriodOverCell,%{public}.1lf",  (uint8_t *)buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934880 != -1) {
          dispatch_once(&qword_101934880, &stru_10188D488);
        }
        int v17 = 134349056;
        uint64_t v18 = *(void *)&v16;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "HRSE,HrseAvlFileUpdatePeriodOverCell,%{public}.1lf",  &v17,  12);
        __int16 v12 = (char *)v11;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "CFTimeInterval CLHighResolutionSignalEnvironmentDataManager::getAvlFileDownloadRateOverCell() const",  "%s\n",  v11);
      }

      return v16;
    }

    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    uint64_t v6 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_INFO))
    {
      LODWORD(buf[0]) = 134349056;
      *(double *)((char *)buf + 4) = v16;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "#Warning,HRSE,given avl update rate over Cell is invalid,%{public}.1lf,using default value instead",  (uint8_t *)buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_10188D488);
      }
      int v17 = 134349056;
      uint64_t v18 = *(void *)&v16;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  1LL,  "#Warning,HRSE,given avl update rate over Cell is invalid,%{public}.1lf,using default value instead",  &v17,  12);
      double v14 = (char *)v13;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CFTimeInterval CLHighResolutionSignalEnvironmentDataManager::getAvlFileDownloadRateOverCell() const",  "%s\n",  v13);
    }
  }

  if (qword_101934880 != -1) {
    dispatch_once(&qword_101934880, &stru_10188D488);
  }
  uint64_t v7 = (os_log_s *)qword_101934888;
  if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
  {
    LODWORD(buf[0]) = 134349056;
    *(void *)((char *)buf + 4) = 0x4122750000000000LL;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "HRSE,HrseAvlFileUpdatePeriodOverCell,%{public}.1lf",  (uint8_t *)buf,  0xCu);
  }

  double v5 = 604800.0;
  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    int v17 = 134349056;
    uint64_t v18 = 0x4122750000000000LL;
    LODWORD(v15) = 12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "HRSE,HrseAvlFileUpdatePeriodOverCell,%{public}.1lf",  &v17,  v15);
    int v10 = (char *)v9;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CFTimeInterval CLHighResolutionSignalEnvironmentDataManager::getAvlFileDownloadRateOverCell() const",  "%s\n",  v9);
  }

  return v5;
}

void sub_100F3E96C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_100F3E988(uint64_t a1, uint64_t a2, int *a3, uint64_t a4)
{
  uint64_t v8 = a1 + 96;
  uint64_t v7 = *(void *)(a1 + 96);
  uint64_t v26 = a1 + 96;
  (*(void (**)(uint64_t))(v7 + 16))(a1 + 96);
  __int16 v27 = 256;
  if (qword_101934880 != -1) {
    dispatch_once(&qword_101934880, &stru_10188D488);
  }
  int v9 = (os_log_s *)qword_101934888;
  if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
  {
    int v10 = *a3;
    LODWORD(buf[0].__r_.__value_.__l.__data_) = 67240192;
    HIDWORD(buf[0].__r_.__value_.__r.__words[0]) = v10;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "Notification,%{public}d", (uint8_t *)buf, 8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10188D488);
    }
    int v20 = *a3;
    LODWORD(__dst.__r_.__value_.__l.__data_) = 67240192;
    HIDWORD(__dst.__r_.__value_.__r.__words[0]) = v20;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "Notification,%{public}d",  &__dst,  8);
    uint64_t v22 = (std::string *)v21;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLHighResolutionSignalEnvironmentDataManager::onManagerNotification(int, const CLClientManager_Type::Notifica tion &, const CLClientManager_Type::NotificationData &)",  "%s\n",  v21);
    if (v22 != buf) {
      free(v22);
    }
  }

  if (*a3 == 4)
  {
    int v11 = *(_DWORD *)(a4 + 188);
    if (v11 == 1)
    {
      if (!*(_BYTE *)(a1 + 376))
      {
        buf[0].__r_.__value_.__r.__words[0] = CFAbsoluteTimeGetCurrent();
        sub_100F36784(a1, buf);
        *(_BYTE *)(a1 + 376) = 1;
      }
    }

    else if (!v11)
    {
      __int16 v12 = (char *)sub_1002F8DDC();
      sub_10030AC8C(v12, (uint64_t)buf);
      else {
        std::string __dst = buf[0];
      }
      else {
        std::string __p = *(std::string *)(a1 + 392);
      }
      if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        p_p = &__p;
      }
      else {
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        std::string::size_type size = __p.__r_.__value_.__s.__size_;
      }
      else {
        std::string::size_type size = __p.__r_.__value_.__l.__size_;
      }
      std::string::append(&__dst, (const std::string::value_type *)p_p, size);
      if ((__dst.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        p_dst = &__dst;
      }
      else {
        p_dst = (std::string *)__dst.__r_.__value_.__r.__words[0];
      }
      sub_100296964((const char *)p_dst);
      else {
        std::string __p = buf[0];
      }
      if (*(char *)(a1 + 439) < 0)
      {
        sub_1010DD48C(v23, *(void **)(a1 + 416), *(void *)(a1 + 424));
      }

      else
      {
        *(_OWORD *)unsigned int v23 = *(_OWORD *)(a1 + 416);
        uint64_t v24 = *(void *)(a1 + 432);
      }

      if (v24 >= 0) {
        double v16 = v23;
      }
      else {
        double v16 = (void **)v23[0];
      }
      if (v24 >= 0) {
        std::string::size_type v17 = HIBYTE(v24);
      }
      else {
        std::string::size_type v17 = (std::string::size_type)v23[1];
      }
      std::string::append(&__p, (const std::string::value_type *)v16, v17);
      if (SHIBYTE(v24) < 0) {
        operator delete(v23[0]);
      }
      if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v18 = &__p;
      }
      else {
        uint64_t v18 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      sub_100296964((const char *)v18);
      *(_BYTE *)(a1 + 376) = 0;
      sub_10038637C(a1 + 112);
      sub_1002581DC(a1 + 8);
    }
  }

  return (*(uint64_t (**)(uint64_t))(*(void *)v8 + 24LL))(v8);
}

void sub_100F3ED4C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *__p, uint64_t a19, int a20, __int16 a21, char a22, char a23, char a24, uint64_t a25, uint64_t a26, void *a27, uint64_t a28, int a29, __int16 a30, char a31, char a32, uint64_t a33, void *a34, uint64_t a35, int a36, __int16 a37, char a38, char a39)
{
}

void sub_100F3EDEC(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_100F3EE18(id a1)
{
  qword_101934888 = (uint64_t)os_log_create("com.apple.locationd.Position", "Gnss");
}

void sub_100F3EE44()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936068);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936068))
    {
      qword_101936050 = 0LL;
      *(void *)algn_101936058 = 0LL;
      qword_101936060 = 0LL;
      __cxa_atexit((void (*)(void *))sub_1001BA3E4, &qword_101936050, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936068);
    }
  }

void sub_100F3EEA8()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936118);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936118))
    {
      std::__shared_mutex_base::__shared_mutex_base(&stru_101936070);
      __cxa_atexit((void (*)(void *))sub_1001BA414, &stru_101936070, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936118);
    }
  }

void sub_100F3EF1C(_Unwind_Exception *a1)
{
}

char *sub_100F3EFC0(char *a1, void *a2)
{
  *((void *)a1 + 2) = off_10188D6B8;
  uint64_t v3 = (uint64_t)(a1 + 16);
  *(void *)a1 = off_10188D4B8;
  *((void *)a1 + 1) = off_10188D690;
  *((void *)a1 + 3) = a2;
  *((void *)a1 + _Block_object_dispose((const void *)(v1 - 128), 8) = 0LL;
  *((void *)a1 + 7) = a1 + 64;
  *((void *)a1 + 9) = 0LL;
  *((void *)a1 + 1sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = 0LL;
  *((void *)a1 + 12) = 0LL;
  *((void *)a1 + 5) = 0LL;
  *((void *)a1 + 6) = 0LL;
  *((void *)a1 + 11) = a1 + 96;
  *((void *)a1 + 13) = 0LL;
  *((void *)a1 + 14) = 0LL;
  *((void *)a1 + 16) = 0LL;
  *((void *)a1 + 15) = a1 + 128;
  *((void *)a1 + 17) = 0LL;
  *((void *)a1 + 22) = 0LL;
  *((void *)a1 + 21) = 0LL;
  *((void *)a1 + 27) = 0LL;
  size_t v4 = a1 + 216;
  *((void *)a1 + 1_Block_object_dispose((const void *)(v1 - 128), 8) = 0LL;
  *((void *)a1 + 2sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = a1 + 168;
  *((void *)a1 + 19) = 0LL;
  *((void *)a1 + 25) = 0LL;
  *((void *)a1 + 23) = 0LL;
  *((void *)a1 + 24) = a1 + 200;
  *((void *)a1 + 26) = 0LL;
  *((void *)a1 + 2_Block_object_dispose((const void *)(v1 - 128), 8) = 0LL;
  [a2 silo];
  sub_100517934((void *)v4 + 2);
  *((void *)a1 + 35) = 0LL;
  *((_WORD *)a1 + sub_10000AE14(v14 + 144) = 0;
  *((void *)a1 + 3_Block_object_dispose((const void *)(v1 - 128), 8) = 0LL;
  *((void *)a1 + 39) = 0LL;
  *((void *)a1 + 37) = 0LL;
  [*((id *)a1 + 3) silo];
  *((void *)a1 + 4) =  -[CLHarvestExternalAdapter initWithHarvesterExternal:andSilo:]( [CLHarvestExternalAdapter alloc],  "initWithHarvesterExternal:andSilo:",  a1,  [*((id *)a1 + 3) silo]);
  id v5 = objc_msgSend(objc_msgSend(*((id *)a1 + 3), "vendor"), "proxyForService:", @"CLRoutineMonitor");
  *((void *)a1 + 3_Block_object_dispose((const void *)(v1 - 128), 8) = v5;
  objc_msgSend(v5, "registerDelegate:inSilo:", *((void *)a1 + 4), objc_msgSend(*((id *)a1 + 3), "silo"));
  [*((id *)a1 + 38) setDelegateEntityName:"CLHarvestControllerExternal"];
  id v6 = objc_msgSend(objc_msgSend(*((id *)a1 + 3), "vendor"), "proxyForService:", @"CLClientAuthorizationCache");
  *((void *)a1 + 37) = v6;
  objc_msgSend(v6, "registerDelegate:inSilo:", *((void *)a1 + 4), objc_msgSend(*((id *)a1 + 3), "silo"));
  [*((id *)a1 + 37) setDelegateEntityName:"CLHarvestControllerExternal"];
  uint64_t v7 = operator new(0x98uLL);
  sub_101023D14((uint64_t)v7, *((void *)a1 + 3), v3);
  sub_1008D493C((uint64_t *)a1 + 35, (uint64_t)v7);
  if (objc_msgSend( objc_msgSend(*((id *)a1 + 3), "vendor"),  "isServiceEnabled:",  @"CLVehicleConnectionNotifier"))
  {
    id v8 =  objc_msgSend( objc_msgSend(*((id *)a1 + 3), "vendor"),  "proxyForService:",  @"CLVehicleConnectionNotifier");
    *((void *)a1 + 39) = v8;
    objc_msgSend(v8, "registerDelegate:inSilo:", *((void *)a1 + 4), objc_msgSend(*((id *)a1 + 3), "silo"));
    [*((id *)a1 + 39) setDelegateEntityName:"CLHarvestControllerExternal"];
  }

  objc_opt_class(&OBJC_CLASS___RDEstimate);
  if (v9)
  {
    if (qword_1019349B0 != -1) {
      dispatch_once(&qword_1019349B0, &stru_10188D770);
    }
    int v10 = (os_log_s *)qword_1019349B8;
    if (os_log_type_enabled((os_log_t)qword_1019349B8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Add CLHarvestControllerExternal as one RDEstimate Observer",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349B0 != -1) {
        dispatch_once(&qword_1019349B0, &stru_10188D770);
      }
      v15[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349B8,  0LL,  "Add CLHarvestControllerExternal as one RDEstimate Observer",  v15,  2);
      double v14 = (uint8_t *)v13;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLHarvestControllerExternal::CLHarvestControllerExternal(id<CLIntersiloUniverse>)",  "%s\n",  v13);
      if (v14 != buf) {
        free(v14);
      }
    }

    DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
    CFNotificationCenterAddObserver( DarwinNotifyCenter,  a1,  (CFNotificationCallback)sub_100F3F500,  kRegulatoryDomainUpdateNotification,  0LL,  CFNotificationSuspensionBehaviorDeliverImmediately);
  }

  return a1;
}

void sub_100F3F3C4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t *a14)
{
  uint64_t v22 = *(void *)(v14 + 224);
  *(void *)(v14 + 224) = 0LL;
  if (v22) {
    (*(void (**)(uint64_t))(*(void *)v22 + 8LL))(v22);
  }
  uint64_t v23 = *v20;
  *int v20 = 0LL;
  if (v23) {
    (*(void (**)(uint64_t))(*(void *)v23 + 8LL))(v23);
  }
  sub_100008390(v19, *(void **)(v14 + 200));
  uint64_t v24 = *(void *)(v14 + 184);
  *(void *)(v14 + 184) = 0LL;
  if (v24) {
    (*(void (**)(uint64_t))(*(void *)v24 + 8LL))(v24);
  }
  sub_100008390(v18, *(void **)(v14 + 168));
  uint64_t v25 = *(void *)(v14 + 152);
  *(void *)(v14 + 152) = 0LL;
  if (v25) {
    (*(void (**)(uint64_t))(*(void *)v25 + 8LL))(v25);
  }
  uint64_t v26 = *v15;
  *uint64_t v15 = 0LL;
  if (v26) {
    (*(void (**)(uint64_t))(*(void *)v26 + 8LL))(v26);
  }
  sub_100008390(v17, *(void **)(v14 + 128));
  uint64_t v27 = *(void *)(v14 + 112);
  *(void *)(v14 + sub_10000AE14(v14 + 112) = 0LL;
  if (v27) {
    (*(void (**)(uint64_t))(*(void *)v27 + 8LL))(v27);
  }
  sub_100008390(v16, *(void **)(v14 + 96));
  uint64_t v28 = *(void *)(v14 + 80);
  *(void *)(v14 + 8sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = 0LL;
  if (v28) {
    (*(void (**)(uint64_t))(*(void *)v28 + 8LL))(v28);
  }
  sub_100008390(a13, *(void **)(v14 + 64));
  uint64_t v29 = *(void *)(v14 + 48);
  *(void *)(v14 + 4_Block_object_dispose((const void *)(v1 - 128), 8) = 0LL;
  if (v29) {
    (*(void (**)(uint64_t))(*(void *)v29 + 8LL))(v29);
  }
  _Unwind_Resume(a1);
}

void sub_100F3F500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10188D790);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v15 = 1;
    int v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLHarvestControllerExternal::onRegulatoryDomainUpdateNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10188D790);
    }
    int v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v17 = 0;
      __int16 v18 = 2082;
      uint64_t v19 = "";
      __int16 v20 = 2082;
      int v21 = "activity";
      __int16 v22 = 2050;
      uint64_t v23 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLHarvestControllerExternal::onRegulatoryDomainUpdateNotification, event:%{public, location:escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v15 = 0;
  }

  id v12 = [*(id *)(a2 + 24) silo];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  void v13[2] = sub_100F4239C;
  void v13[3] = &unk_10182D1B8;
  void v13[4] = a2;
  v13[5] = a1;
  void v13[6] = a3;
  v13[7] = a4;
  v13[8] = a5;
  [v12 sync:v13];
  if (v15) {
    os_activity_scope_leave(&state);
  }
}

void sub_100F3F700( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, os_activity_scope_state_s state, char a19)
{
  if (a19) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100F3F720(uint64_t a1)
{
  return a1;
}

uint64_t sub_100F3F75C(uint64_t a1)
{
  *(void *)a1 = off_10188D4B8;
  *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 128), 8) = off_10188D690;
  *(void *)(a1 + 16) = off_10188D6B8;

  *(void *)(a1 + 312) = 0LL;
  *(void *)(a1 + 304) = 0LL;

  *(void *)(a1 + 2sub_10000AE14(v14 + 96) = 0LL;
  [*(id *)(a1 + 32) invalidate];

  *(void *)(a1 + 32) = 0LL;
  sub_1008D493C((uint64_t *)(a1 + 280), 0LL);
  sub_100008390(a1 + 256, *(void **)(a1 + 264));
  sub_100008390(a1 + 232, *(void **)(a1 + 240));
  uint64_t v2 = *(void *)(a1 + 224);
  *(void *)(a1 + 224) = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  uint64_t v3 = *(void *)(a1 + 216);
  *(void *)(a1 + 216) = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  sub_100008390(a1 + 192, *(void **)(a1 + 200));
  uint64_t v4 = *(void *)(a1 + 184);
  *(void *)(a1 + 184) = 0LL;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  sub_100008390(a1 + 160, *(void **)(a1 + 168));
  uint64_t v5 = *(void *)(a1 + 152);
  *(void *)(a1 + 152) = 0LL;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
  }
  uint64_t v6 = *(void *)(a1 + 144);
  *(void *)(a1 + sub_10000AE14(v14 + 144) = 0LL;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
  }
  sub_100008390(a1 + 120, *(void **)(a1 + 128));
  uint64_t v7 = *(void *)(a1 + 112);
  *(void *)(a1 + sub_10000AE14(v14 + 112) = 0LL;
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
  }
  sub_100008390(a1 + 88, *(void **)(a1 + 96));
  uint64_t v8 = *(void *)(a1 + 80);
  *(void *)(a1 + 8sub_100222B94(v26, (uint64_t)"CLCyclingFTPAggregator.computeFTP", 0) = 0LL;
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
  }
  sub_100008390(a1 + 56, *(void **)(a1 + 64));
  uint64_t v9 = *(void *)(a1 + 48);
  *(void *)(a1 + 4_Block_object_dispose((const void *)(v1 - 128), 8) = 0LL;
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8LL))(v9);
  }
  return a1;
}

uint64_t sub_100F3F8F8(uint64_t a1)
{
  return sub_100F3F75C(a1 - 8);
}

uint64_t sub_100F3F900(uint64_t a1)
{
  return sub_100F3F75C(a1 - 16);
}

void sub_100F3F908(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100F3F75C(a1);
  operator delete(v1);
}

void sub_100F3F91C(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100F3F75C(a1 - 8);
  operator delete(v1);
}

void sub_100F3F934(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100F3F75C(a1 - 16);
  operator delete(v1);
}

id sub_100F3F94C(uint64_t a1)
{
  return [*(id *)(a1 + 32) invalidate];
}

id sub_100F3F954(uint64_t a1, uint64_t *a2)
{
  else {
    uint64_t v2 = (uint64_t *)*a2;
  }
  return objc_msgSend( *(id *)(a1 + 296),  "getAuthorizationContextOfNonZonalClient:withReply:",  _NSConcreteStackBlock,  3221225472,  sub_100F3F9D4,  &unk_10188D6D8,  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v2),  a1);
}

void sub_100F3F9D4(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 40);
  int v4 = [a2 isAuthorizedForServiceType:4];
  uint64_t v5 = *(uint64_t ***)(v3 + 40);
  sub_1010DDBC0(__p, (char *)[*(id *)(a1 + 32) UTF8String]);
  sub_100318BD4(v5, (uint64_t)__p, v4);
  if (v7 < 0) {
    operator delete(__p[0]);
  }
}

void sub_100F3FA4C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100F3FA68(uint64_t a1, std::string *a2)
{
  id v3 = objc_msgSend(objc_msgSend(*(id *)(a1 + 24), "vendor"), "proxyForService:", @"CLClientManager");
  sub_1011F69B0((char *)v4, (__int128 *)v18);
  [v3 markReceivingLocationInformation:sub_1011DBFBC((__int128 *)v4)];
  if (v17 < 0) {
    operator delete(__p);
  }
  if (v15 < 0) {
    operator delete(v14);
  }
  if (v13 < 0) {
    operator delete(v12);
  }
  if (v11 < 0) {
    operator delete(v10);
  }
  if (v9 < 0) {
    operator delete(v8);
  }
  if (v7 < 0) {
    operator delete(v6);
  }
  if (v5 < 0) {
    operator delete(v4[0]);
  }
  if (v31 < 0) {
    operator delete(v30);
  }
  if (v29 < 0) {
    operator delete(v28);
  }
  if (v27 < 0) {
    operator delete(v26);
  }
  if (v25 < 0) {
    operator delete(v24);
  }
  if (v23 < 0) {
    operator delete(v22);
  }
  if (v21 < 0) {
    operator delete(v20);
  }
  if (v19 < 0) {
    operator delete(v18[0]);
  }
}

void sub_100F3FBB0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, char a32)
{
}

id sub_100F3FBD4(uint64_t a1)
{
  return _objc_msgSend( objc_msgSend(objc_msgSend(*(id *)(a1 + 24), "vendor"), "proxyForService:", @"CLClientManager"),  "syncgetHasAuthorizedClients");
}

void sub_100F3FBF8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    *(void *)(a1 + sub_10004AD90(v3 - 40) = a2;
    sub_100328B0C((uint64_t)sub_100F3FCC8, a1, *(void **)(a1 + 24), &v13);
    id v3 = v13;
    char v13 = 0LL;
    uint64_t v4 = *(void *)(a1 + 216);
    *(void *)(a1 + 216) = v3;
    if (v4)
    {
      (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
      char v5 = v13;
      char v13 = 0LL;
      if (v5) {
        (*((void (**)(id *))*v5 + 1))(v5);
      }
    }

    sub_100328B0C((uint64_t)sub_100F3FEB0, a1, *(void **)(a1 + 24), &v13);
    uint64_t v6 = v13;
    char v13 = 0LL;
    uint64_t v7 = *(void *)(a1 + 224);
    *(void *)(a1 + 224) = v6;
    if (v7)
    {
      (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
      uint64_t v8 = v13;
      char v13 = 0LL;
      if (v8) {
        (*((void (**)(id *))*v8 + 1))(v8);
      }
    }
  }

  else
  {
    uint64_t v9 = sub_101278AF4();
    sub_100F3FCC8(v9, v10, v11, v12);
  }

void sub_100F3FCC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10188D790);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v8 = 1;
    char v5 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLHarvestControllerExternal::onTelephonyNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v5, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10188D790);
    }
    uint64_t v6 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v10 = 0;
      __int16 v11 = 2082;
      uint64_t v12 = "";
      __int16 v13 = 2082;
      uint64_t v14 = "activity";
      __int16 v15 = 2050;
      uint64_t v16 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLHarvestControllerExternal::onTelephonyNotification, event:%{public, location:esca pe_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v8 = 0;
  }

  sub_100F401E0(a4);
  if (v8) {
    os_activity_scope_leave(&state);
  }
}

void sub_100F3FE90( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100F3FEB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10188D790);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v8 = 1;
    char v5 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLHarvestControllerExternal::onTelephonyNotificationLegacy",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v5, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10188D790);
    }
    uint64_t v6 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v10 = 0;
      __int16 v11 = 2082;
      uint64_t v12 = "";
      __int16 v13 = 2082;
      uint64_t v14 = "activity";
      __int16 v15 = 2050;
      uint64_t v16 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLHarvestControllerExternal::onTelephonyNotificationLegacy, event:%{public, locatio n:escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v8 = 0;
  }

  sub_100F40200(a4);
  if (v8) {
    os_activity_scope_leave(&state);
  }
}

void sub_100F40078( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100F40098(void *a1)
{
  uint64_t v2 = a1[28];
  a1[28] = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  uint64_t result = a1[27];
  a1[27] = 0LL;
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  a1[5] = 0LL;
  return result;
}

id sub_100F400E8(uint64_t a1, unsigned int *a2)
{
  uint64_t v2 = *(void *)(a1 + 216);
  if (v2) {
    return [*(id *)(v2 + 16) register:*(void *)(v2 + 8) forNotification:sub_100320924(a2) registrationInfo:0];
  }
  uint64_t v4 = sub_101278C54();
  return (id)sub_100F40128(v4);
}

id sub_100F40128(uint64_t a1, unsigned int *a2)
{
  uint64_t v2 = *(void *)(a1 + 224);
  if (v2) {
    return [*(id *)(v2 + 16) register:*(void *)(v2 + 8) forNotification:sub_100320924(a2) registrationInfo:0];
  }
  uint64_t v4 = sub_101278DB4();
  return (id)sub_100F40168(v4);
}

id sub_100F40168(uint64_t a1, unsigned int *a2)
{
  uint64_t v2 = *(void *)(a1 + 216);
  if (v2) {
    return [*(id *)(v2 + 16) unregister:*(void *)(v2 + 8) forNotification:sub_100320924(a2)];
  }
  uint64_t v4 = sub_101278F14();
  return (id)sub_100F401A4(v4);
}

void sub_100F401A4(uint64_t a1, unsigned int *a2)
{
  uint64_t v2 = *(void *)(a1 + 224);
  if (v2)
  {
    [*(id *)(v2 + 16) unregister:*(void *)(v2 + 8) forNotification:sub_100320924(a2)];
  }

  else
  {
    uint64_t v3 = sub_101279074();
    sub_100F401E0(v3);
  }

void sub_100F401E0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  if (v1)
  {
    nullsub_10(v1);
  }

  else
  {
    uint64_t v2 = sub_1012791D4();
    sub_100F40200(v2);
  }

void sub_100F40200(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  if (v1)
  {
    nullsub_10(v1);
  }

  else
  {
    uint64_t v2 = sub_101279334();
    sub_100F40220(v2);
  }

id sub_100F40220(uint64_t a1, _BYTE *a2)
{
  char v4 = 0;
  id result = objc_msgSend( objc_msgSend(objc_msgSend(*(id *)(a1 + 24), "vendor"), "proxyForService:", @"CLTelephonyService"),  "syncgetActiveCall:",  &v4);
  *a2 = v4;
  return result;
}

void sub_100F4026C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a1 + 312);
  if (v2)
  {
    [v2 fetchMostRecentConnectionWithReply:a2];
  }

  else
  {
    if (qword_1019349B0 != -1) {
      dispatch_once(&qword_1019349B0, &stru_10188D770);
    }
    uint64_t v3 = (os_log_s *)qword_1019349B8;
    if (os_log_type_enabled((os_log_t)qword_1019349B8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "fVehicleConnectionNotifier is not initialized, skip fetching mostRecentConnection",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349B0 != -1) {
        dispatch_once(&qword_1019349B0, &stru_10188D770);
      }
      v6[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349B8,  2LL,  "fVehicleConnectionNotifier is not initialized, skip fetching mostRecentConnection",  v6,  2);
      char v5 = (uint8_t *)v4;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLHarvestControllerExternal::fetchMostRecentConnectionWithReply(void (^)(CLVehicleConnection)) const",  "%s\n",  v4);
      if (v5 != buf) {
        free(v5);
      }
    }
  }

uint64_t sub_100F40428(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 288);
}

uint64_t sub_100F40430(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 289);
}

id sub_100F40438(uint64_t a1)
{
  return objc_msgSend( objc_msgSend(objc_msgSend(*(id *)(a1 + 24), "vendor"), "proxyForService:", @"CLDaemonStatus"),  "syncgetReachability");
}

BOOL sub_100F4045C()
{
  return sub_1002958AC() == 1;
}

void *sub_100F40478@<X0>(uint64_t a1@<X8>)
{
  if (byte_10199F5E7 < 0) {
    return sub_1010DD48C((_BYTE *)a1, (void *)xmmword_10199F5D0, *((unint64_t *)&xmmword_10199F5D0 + 1));
  }
  *(_OWORD *)a1 = xmmword_10199F5D0;
  *(void *)(a1 + 16) = unk_10199F5E0;
  return result;
}

uint64_t sub_100F404B4(uint64_t a1, _DWORD *a2)
{
  uint64_t v3 = sub_1002A7CB0(v8, "HarvestingThermalLevelHighThreshold", a2);
  char v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      unint64_t v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }

  return v3;
}

void sub_100F40538( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100F4054C(uint64_t a1, _DWORD *a2)
{
  uint64_t v3 = sub_1002A7CB0(v8, "HarvestingThermalLevelLowThreshold", a2);
  char v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      unint64_t v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }

  return v3;
}

void sub_100F405D0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100F405E4(uint64_t a1, BOOL *a2)
{
  uint64_t v3 = sub_1002A6F64(v8, "IsHarvestAllLocations", a2);
  char v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      unint64_t v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }

  return v3;
}

void sub_100F40668( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100F4067C(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_1002A82BC(v8, "MaxHarvestAge", a2);
  char v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      unint64_t v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }

  return v3;
}

void sub_100F40700( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100F40714(uint64_t a1, _DWORD *a2)
{
  uint64_t v3 = sub_1002A7CB0(v8, "MaxHarvestPointsPer", a2);
  char v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      unint64_t v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }

  return v3;
}

void sub_100F40798( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100F407AC(uint64_t a1, _DWORD *a2)
{
  uint64_t v3 = sub_1002A7CB0(v8, "MaxHarvestPointsPerUpload", a2);
  char v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      unint64_t v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }

  return v3;
}

void sub_100F40830( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100F40844(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_1002A82BC(v8, "DefaultHarvestUploadInterval", a2);
  char v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      unint64_t v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }

  return v3;
}

void sub_100F408C8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t **sub_100F408DC(uint64_t a1, uint64_t a2)
{
  int v9 = a2;
  if (!*(void *)(a1 + 208))
  {
    sub_1003CC884((uint64_t)sub_100F40990, a1, *(void **)(a1 + 24), &v8);
    uint64_t v4 = v8;
    uint64_t v8 = 0LL;
    uint64_t v5 = *(void *)(a1 + 184);
    *(void *)(a1 + 184) = v4;
    if (v5)
    {
      (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
      uint64_t v6 = v8;
      uint64_t v8 = 0LL;
      if (v6) {
        (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
      }
    }
  }

  objc_msgSend( *(id *)(*(void *)(a1 + 184) + 16),  "register:forNotification:registrationInfo:",  *(void *)(*(void *)(a1 + 184) + 8),  a2,  0,  v8);
  return sub_10004A8FC((uint64_t **)(a1 + 192), &v9, &v9);
}

void sub_100F40990(int a1, int *a2, int *a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10188D790);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLHarvestControllerExternal::onStatusNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10188D790);
    }
    int v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      __int16 v15 = "";
      __int16 v16 = 2082;
      char v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLHarvestControllerExternal::onStatusNotification, event:%{public, location:escape_ only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_10031BA68(*(unsigned __int8 **)(a4 + 40), a1, *a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100F40B58( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100F40B78(uint64_t a1, uint64_t a2)
{
  int v4 = a2;
  [*(id *)(*(void *)(a1 + 184) + 16) unregister:*(void *)(*(void *)(a1 + 184) + 8) forNotification:a2];
  uint64_t result = sub_1004EF494(a1 + 192, &v4);
  if (!*(void *)(a1 + 208))
  {
    uint64_t result = *(void *)(a1 + 184);
    *(void *)(a1 + 184) = 0LL;
    if (result) {
      return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
    }
  }

  return result;
}

id sub_100F40BDC(uint64_t a1)
{
  return _objc_msgSend( objc_msgSend(objc_msgSend(*(id *)(a1 + 24), "vendor"), "proxyForService:", @"CLTelephonyService"),  "syncgetRegistrationStatus");
}

uint64_t **sub_100F40C00(uint64_t a1, uint64_t a2)
{
  int v9 = a2;
  if (!*(void *)(a1 + 136))
  {
    sub_100583844((uint64_t)sub_100F40D14, a1, *(void **)(a1 + 24), &__p);
    std::string::size_type v4 = __p.__r_.__value_.__r.__words[0];
    __p.__r_.__value_.__r.__words[0] = 0LL;
    uint64_t v5 = *(void *)(a1 + 112);
    *(void *)(a1 + sub_10000AE14(v14 + 112) = v4;
    if (v5)
    {
      (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
      std::string::size_type v6 = __p.__r_.__value_.__r.__words[0];
      __p.__r_.__value_.__r.__words[0] = 0LL;
      if (v6) {
        (*(void (**)(std::string::size_type))(*(void *)v6 + 8LL))(v6);
      }
    }
  }

  if ((_DWORD)a2)
  {
    [*(id *)(*(void *)(a1 + 112) + 16) register:*(void *)(*(void *)(a1 + 112) + 8) forNotification:a2 registrationInfo:0];
  }

  else
  {
    memset(&__p, 0, sizeof(__p));
    std::string::operator=(&__p, (const std::string *)&xmmword_10199F5D0);
    [*(id *)(*(void *)(a1 + 112) + 16) register:*(void *)(*(void *)(a1 + 112) + 8) forNotification:0 registrationInfo:sub_10120E548((uint64_t)&__p)];
  }

  return sub_10004A8FC((uint64_t **)(a1 + 120), &v9, &v9);
}

void sub_100F40CF8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100F40D14(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10188D790);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLHarvestControllerExternal::onManagerNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10188D790);
    }
    int v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      __int16 v15 = "";
      __int16 v16 = 2082;
      char v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLHarvestControllerExternal::onManagerNotification, event:%{public, location:escape _only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_10031B644(*(void *)(a4 + 40), a1, *a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100F40EDC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

id sub_100F40EFC(uint64_t a1, unsigned int a2)
{
  unsigned int v4 = a2;
  sub_1004EF494(a1 + 120, (int *)&v4);
  id result = [*(id *)(*(void *)(a1 + 112) + 16) unregister:*(void *)(*(void *)(a1 + 112) + 8) forNotification:v4];
  if (!*(void *)(a1 + 136))
  {
    id result = *(id *)(a1 + 112);
    *(void *)(a1 + sub_10000AE14(v14 + 112) = 0LL;
    if (result) {
      return (id)(*(uint64_t (**)(id))(*(void *)result + 8LL))(result);
    }
  }

  return result;
}

id sub_100F40F60(uint64_t a1)
{
  return _objc_msgSend( objc_msgSend(objc_msgSend(*(id *)(a1 + 24), "vendor"), "proxyForService:", @"CLClientManager"),  "syncgetIsMapsANonSystemLocationClient");
}

BOOL sub_100F40F84(uint64_t a1, void *a2)
{
  id v3 = +[GEOCountryConfiguration sharedConfiguration](&OBJC_CLASS___GEOCountryConfiguration, "sharedConfiguration");
  unsigned int v4 = (const __CFDictionary *)objc_msgSend( v3,  "defaultForKey:defaultValue:",  +[NSString stringWithUTF8String:]( NSString,  "stringWithUTF8String:",  off_1019928E0),  0);
  if (qword_1019349B0 != -1) {
    dispatch_once(&qword_1019349B0, &stru_10188D770);
  }
  uint64_t v5 = (os_log_s *)qword_1019349B8;
  if (os_log_type_enabled((os_log_t)qword_1019349B8, OS_LOG_TYPE_DEFAULT))
  {
    v7[0] = 68289283;
    v7[1] = 0;
    __int16 v8 = 2082;
    int v9 = "";
    __int16 v10 = 2113;
    char v11 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:networkSettings, networkHarvestRules:%{private, location:escape_only}@}",  (uint8_t *)v7,  0x1Cu);
  }

  if (v4) {
    sub_1002AFBC8(a2, v4);
  }
  return v4 != 0LL;
}